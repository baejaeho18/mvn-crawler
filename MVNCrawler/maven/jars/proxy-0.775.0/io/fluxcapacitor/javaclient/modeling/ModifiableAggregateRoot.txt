Compiled from "ModifiableAggregateRoot.java"
public class io.fluxcapacitor.javaclient.modeling.ModifiableAggregateRoot<T> extends io.fluxcapacitor.javaclient.modeling.DelegatingEntity<T> {
  private static final java.lang.ThreadLocal<java.util.Map<java.lang.Object, io.fluxcapacitor.javaclient.modeling.ModifiableAggregateRoot<?>>> activeAggregates;

  private io.fluxcapacitor.javaclient.modeling.Entity<T> lastCommitted;

  private io.fluxcapacitor.javaclient.modeling.Entity<T> lastStable;

  private final boolean commitInBatch;

  private final io.fluxcapacitor.javaclient.modeling.EventPublication eventPublication;

  private final io.fluxcapacitor.javaclient.modeling.EntityHelper entityHelper;

  private final io.fluxcapacitor.javaclient.common.serialization.Serializer serializer;

  private final io.fluxcapacitor.javaclient.publishing.DispatchInterceptor dispatchInterceptor;

  private final io.fluxcapacitor.javaclient.modeling.ModifiableAggregateRoot$CommitHandler commitHandler;

  private final java.util.concurrent.atomic.AtomicBoolean waitingForHandlerEnd;

  private final java.util.concurrent.atomic.AtomicBoolean waitingForBatchEnd;

  private final java.util.List<io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage> applied;

  private final java.util.List<io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage> uncommitted;

  private final java.util.List<io.fluxcapacitor.common.Pair<io.fluxcapacitor.javaclient.common.Message, java.lang.Boolean>> queued;

  private volatile boolean applying;

  public static <T> java.util.Optional<io.fluxcapacitor.javaclient.modeling.ModifiableAggregateRoot<T>> getIfActive(java.lang.Object);
    Code:
       0: getstatic     #1                  // Field activeAggregates:Ljava/lang/ThreadLocal;
       3: invokevirtual #7                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #13                 // class java/util/Map
       9: aload_0
      10: invokeinterface #15,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #2                  // class io/fluxcapacitor/javaclient/modeling/ModifiableAggregateRoot
      18: invokestatic  #18                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      21: areturn

  public static <T> io.fluxcapacitor.javaclient.modeling.ModifiableAggregateRoot<T> load(java.lang.Object, java.util.function.Supplier<io.fluxcapacitor.javaclient.modeling.ImmutableEntity<T>>, boolean, io.fluxcapacitor.javaclient.modeling.EventPublication, io.fluxcapacitor.javaclient.common.serialization.Serializer, io.fluxcapacitor.javaclient.publishing.DispatchInterceptor, io.fluxcapacitor.javaclient.modeling.ModifiableAggregateRoot$CommitHandler);
    Code:
       0: aload_0
       1: invokestatic  #24                 // Method getIfActive:(Ljava/lang/Object;)Ljava/util/Optional;
       4: aload_1
       5: iload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: invokedynamic #27,  0             // InvokeDynamic #0:get:(Ljava/util/function/Supplier;ZLio/fluxcapacitor/javaclient/modeling/EventPublication;Lio/fluxcapacitor/javaclient/common/serialization/Serializer;Lio/fluxcapacitor/javaclient/publishing/DispatchInterceptor;Lio/fluxcapacitor/javaclient/modeling/ModifiableAggregateRoot$CommitHandler;)Ljava/util/function/Supplier;
      18: invokevirtual #30                 // Method java/util/Optional.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      21: checkcast     #2                  // class io/fluxcapacitor/javaclient/modeling/ModifiableAggregateRoot
      24: areturn

  protected io.fluxcapacitor.javaclient.modeling.ModifiableAggregateRoot(io.fluxcapacitor.javaclient.modeling.ImmutableEntity<T>, boolean, io.fluxcapacitor.javaclient.modeling.EventPublication, io.fluxcapacitor.javaclient.common.serialization.Serializer, io.fluxcapacitor.javaclient.publishing.DispatchInterceptor, io.fluxcapacitor.javaclient.modeling.ModifiableAggregateRoot$CommitHandler);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #34                 // Method io/fluxcapacitor/javaclient/modeling/DelegatingEntity."<init>":(Lio/fluxcapacitor/javaclient/modeling/Entity;)V
       5: aload_0
       6: new           #40                 // class java/util/concurrent/atomic/AtomicBoolean
       9: dup
      10: invokespecial #42                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      13: putfield      #45                 // Field waitingForHandlerEnd:Ljava/util/concurrent/atomic/AtomicBoolean;
      16: aload_0
      17: new           #40                 // class java/util/concurrent/atomic/AtomicBoolean
      20: dup
      21: invokespecial #42                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      24: putfield      #49                 // Field waitingForBatchEnd:Ljava/util/concurrent/atomic/AtomicBoolean;
      27: aload_0
      28: new           #52                 // class java/util/ArrayList
      31: dup
      32: invokespecial #54                 // Method java/util/ArrayList."<init>":()V
      35: putfield      #55                 // Field applied:Ljava/util/List;
      38: aload_0
      39: new           #52                 // class java/util/ArrayList
      42: dup
      43: invokespecial #54                 // Method java/util/ArrayList."<init>":()V
      46: putfield      #59                 // Field uncommitted:Ljava/util/List;
      49: aload_0
      50: new           #52                 // class java/util/ArrayList
      53: dup
      54: invokespecial #54                 // Method java/util/ArrayList."<init>":()V
      57: putfield      #62                 // Field queued:Ljava/util/List;
      60: aload_0
      61: aload_1
      62: invokevirtual #65                 // Method io/fluxcapacitor/javaclient/modeling/ImmutableEntity.entityHelper:()Lio/fluxcapacitor/javaclient/modeling/EntityHelper;
      65: putfield      #71                 // Field entityHelper:Lio/fluxcapacitor/javaclient/modeling/EntityHelper;
      68: aload_0
      69: aload_1
      70: putfield      #74                 // Field lastCommitted:Lio/fluxcapacitor/javaclient/modeling/Entity;
      73: aload_0
      74: aload_1
      75: putfield      #78                 // Field lastStable:Lio/fluxcapacitor/javaclient/modeling/Entity;
      78: aload_0
      79: iload_2
      80: putfield      #81                 // Field commitInBatch:Z
      83: aload_0
      84: aload_3
      85: putfield      #85                 // Field eventPublication:Lio/fluxcapacitor/javaclient/modeling/EventPublication;
      88: aload_0
      89: aload         4
      91: putfield      #89                 // Field serializer:Lio/fluxcapacitor/javaclient/common/serialization/Serializer;
      94: aload_0
      95: aload         5
      97: putfield      #93                 // Field dispatchInterceptor:Lio/fluxcapacitor/javaclient/publishing/DispatchInterceptor;
     100: aload_0
     101: aload         6
     103: putfield      #97                 // Field commitHandler:Lio/fluxcapacitor/javaclient/modeling/ModifiableAggregateRoot$CommitHandler;
     106: return

  public <E extends java.lang.Exception> io.fluxcapacitor.javaclient.modeling.ModifiableAggregateRoot<T> assertLegal(java.lang.Object) throws E;
    Code:
       0: aload_0
       1: getfield      #71                 // Field entityHelper:Lio/fluxcapacitor/javaclient/modeling/EntityHelper;
       4: aload_1
       5: aload_0
       6: invokeinterface #101,  3          // InterfaceMethod io/fluxcapacitor/javaclient/modeling/EntityHelper.intercept:(Ljava/lang/Object;Lio/fluxcapacitor/javaclient/modeling/Entity;)Ljava/util/stream/Stream;
      11: aload_0
      12: aload_1
      13: invokedynamic #107,  0            // InvokeDynamic #1:accept:(Lio/fluxcapacitor/javaclient/modeling/ModifiableAggregateRoot;Ljava/lang/Object;)Ljava/util/function/Consumer;
      18: invokeinterface #111,  2          // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      23: aload_0
      24: areturn

  public io.fluxcapacitor.javaclient.modeling.ModifiableAggregateRoot<T> assertAndApply(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #71                 // Field entityHelper:Lio/fluxcapacitor/javaclient/modeling/EntityHelper;
       4: aload_1
       5: aload_0
       6: invokeinterface #101,  3          // InterfaceMethod io/fluxcapacitor/javaclient/modeling/EntityHelper.intercept:(Ljava/lang/Object;Lio/fluxcapacitor/javaclient/modeling/Entity;)Ljava/util/stream/Stream;
      11: aload_0
      12: invokedynamic #117,  0            // InvokeDynamic #2:accept:(Lio/fluxcapacitor/javaclient/modeling/ModifiableAggregateRoot;)Ljava/util/function/Consumer;
      17: invokeinterface #111,  2          // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      22: aload_0
      23: areturn

  public io.fluxcapacitor.javaclient.modeling.ModifiableAggregateRoot<T> apply(io.fluxcapacitor.javaclient.common.Message);
    Code:
       0: aload_0
       1: getfield      #71                 // Field entityHelper:Lio/fluxcapacitor/javaclient/modeling/EntityHelper;
       4: aload_1
       5: aload_0
       6: invokeinterface #101,  3          // InterfaceMethod io/fluxcapacitor/javaclient/modeling/EntityHelper.intercept:(Ljava/lang/Object;Lio/fluxcapacitor/javaclient/modeling/Entity;)Ljava/util/stream/Stream;
      11: aload_0
      12: invokedynamic #120,  0            // InvokeDynamic #3:accept:(Lio/fluxcapacitor/javaclient/modeling/ModifiableAggregateRoot;)Ljava/util/function/Consumer;
      17: invokeinterface #111,  2          // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      22: aload_0
      23: areturn

  protected io.fluxcapacitor.javaclient.modeling.ModifiableAggregateRoot<T> apply(io.fluxcapacitor.javaclient.common.Message, boolean);
    Code:
       0: aload_0
       1: getfield      #121                // Field applying:Z
       4: ifeq          31
       7: aload_0
       8: getfield      #62                 // Field queued:Ljava/util/List;
      11: new           #124                // class io/fluxcapacitor/common/Pair
      14: dup
      15: aload_1
      16: iload_2
      17: invokestatic  #126                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      20: invokespecial #132                // Method io/fluxcapacitor/common/Pair."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      23: invokeinterface #135,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      28: pop
      29: aload_0
      30: areturn
      31: iload_2
      32: ifeq          46
      35: aload_0
      36: getfield      #71                 // Field entityHelper:Lio/fluxcapacitor/javaclient/modeling/EntityHelper;
      39: aload_1
      40: aload_0
      41: invokeinterface #141,  3          // InterfaceMethod io/fluxcapacitor/javaclient/modeling/EntityHelper.assertLegal:(Ljava/lang/Object;Lio/fluxcapacitor/javaclient/modeling/Entity;)V
      46: aload_0
      47: iconst_1
      48: putfield      #121                // Field applying:Z
      51: aload_0
      52: aload_0
      53: aload_1
      54: invokedynamic #145,  0            // InvokeDynamic #4:apply:(Lio/fluxcapacitor/javaclient/modeling/ModifiableAggregateRoot;Lio/fluxcapacitor/javaclient/common/Message;)Ljava/util/function/UnaryOperator;
      59: invokevirtual #149                // Method handleUpdate:(Ljava/util/function/UnaryOperator;)V
      62: aload_0
      63: iconst_0
      64: putfield      #121                // Field applying:Z
      67: goto          78
      70: astore_3
      71: aload_0
      72: iconst_0
      73: putfield      #121                // Field applying:Z
      76: aload_3
      77: athrow
      78: aload_0
      79: getfield      #62                 // Field queued:Ljava/util/List;
      82: invokeinterface #153,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      87: ifne          129
      90: aload_0
      91: getfield      #62                 // Field queued:Ljava/util/List;
      94: iconst_0
      95: invokeinterface #157,  2          // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
     100: checkcast     #124                // class io/fluxcapacitor/common/Pair
     103: astore_3
     104: aload_0
     105: aload_3
     106: invokevirtual #161                // Method io/fluxcapacitor/common/Pair.getFirst:()Ljava/lang/Object;
     109: checkcast     #164                // class io/fluxcapacitor/javaclient/common/Message
     112: aload_3
     113: invokevirtual #166                // Method io/fluxcapacitor/common/Pair.getSecond:()Ljava/lang/Object;
     116: checkcast     #127                // class java/lang/Boolean
     119: invokevirtual #169                // Method java/lang/Boolean.booleanValue:()Z
     122: invokevirtual #172                // Method apply:(Lio/fluxcapacitor/javaclient/common/Message;Z)Lio/fluxcapacitor/javaclient/modeling/ModifiableAggregateRoot;
     125: pop
     126: goto          78
     129: aload_0
     130: areturn
    Exception table:
       from    to  target type
          46    62    70   any

  public io.fluxcapacitor.javaclient.modeling.ModifiableAggregateRoot<T> update(java.util.function.UnaryOperator<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #175,  0            // InvokeDynamic #5:apply:(Ljava/util/function/UnaryOperator;)Ljava/util/function/UnaryOperator;
       7: invokevirtual #149                // Method handleUpdate:(Ljava/util/function/UnaryOperator;)V
      10: aload_0
      11: areturn

  public java.util.Collection<? extends io.fluxcapacitor.javaclient.modeling.Entity<?>> entities();
    Code:
       0: aload_0
       1: invokespecial #178                // Method io/fluxcapacitor/javaclient/modeling/DelegatingEntity.entities:()Ljava/util/Collection;
       4: invokeinterface #182,  1          // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
       9: aload_0
      10: invokedynamic #188,  0            // InvokeDynamic #6:apply:(Lio/fluxcapacitor/javaclient/modeling/ModifiableAggregateRoot;)Ljava/util/function/Function;
      15: invokeinterface #191,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      20: invokestatic  #195                // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      23: invokeinterface #201,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      28: checkcast     #183                // class java/util/Collection
      31: areturn

  public io.fluxcapacitor.javaclient.modeling.Entity<T> previous();
    Code:
       0: aload_0
       1: getfield      #205                // Field delegate:Lio/fluxcapacitor/javaclient/modeling/Entity;
       4: invokeinterface #208,  1          // InterfaceMethod io/fluxcapacitor/javaclient/modeling/Entity.previous:()Lio/fluxcapacitor/javaclient/modeling/Entity;
       9: astore_1
      10: aload_1
      11: ifnonnull     18
      14: aconst_null
      15: goto          27
      18: new           #214                // class io/fluxcapacitor/javaclient/modeling/ModifiableEntity
      21: dup
      22: aload_1
      23: aload_0
      24: invokespecial #216                // Method io/fluxcapacitor/javaclient/modeling/ModifiableEntity."<init>":(Lio/fluxcapacitor/javaclient/modeling/Entity;Lio/fluxcapacitor/javaclient/modeling/ModifiableAggregateRoot;)V
      27: areturn

  protected void handleUpdate(java.util.function.UnaryOperator<io.fluxcapacitor.javaclient.modeling.Entity<T>>);
    Code:
       0: aload_0
       1: getfield      #45                 // Field waitingForHandlerEnd:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #219                // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: istore_2
      10: iload_2
      11: ifeq          34
      14: getstatic     #1                  // Field activeAggregates:Ljava/lang/ThreadLocal;
      17: invokevirtual #7                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      20: checkcast     #13                 // class java/util/Map
      23: aload_0
      24: invokevirtual #223                // Method id:()Ljava/lang/Object;
      27: aload_0
      28: invokeinterface #226,  3          // InterfaceMethod java/util/Map.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      33: pop
      34: aload_0
      35: aload_1
      36: aload_0
      37: invokevirtual #230                // Method getDelegate:()Lio/fluxcapacitor/javaclient/modeling/Entity;
      40: invokeinterface #233,  2          // InterfaceMethod java/util/function/UnaryOperator.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      45: checkcast     #209                // class io/fluxcapacitor/javaclient/modeling/Entity
      48: putfield      #205                // Field delegate:Lio/fluxcapacitor/javaclient/modeling/Entity;
      51: iload_2
      52: ifeq          85
      55: aload_0
      56: invokedynamic #237,  0            // InvokeDynamic #7:accept:(Lio/fluxcapacitor/javaclient/modeling/ModifiableAggregateRoot;)Ljava/util/function/BiConsumer;
      61: invokestatic  #240                // Method io/fluxcapacitor/common/handling/Invocation.whenHandlerCompletes:(Ljava/util/function/BiConsumer;)Lio/fluxcapacitor/common/Registration;
      64: pop
      65: goto          85
      68: astore_3
      69: iload_2
      70: ifeq          83
      73: aload_0
      74: invokedynamic #237,  0            // InvokeDynamic #7:accept:(Lio/fluxcapacitor/javaclient/modeling/ModifiableAggregateRoot;)Ljava/util/function/BiConsumer;
      79: invokestatic  #240                // Method io/fluxcapacitor/common/handling/Invocation.whenHandlerCompletes:(Ljava/util/function/BiConsumer;)Lio/fluxcapacitor/common/Registration;
      82: pop
      83: aload_3
      84: athrow
      85: return
    Exception table:
       from    to  target type
          34    51    68   any

  protected void whenHandlerCompletes(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #45                 // Field waitingForHandlerEnd:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: invokevirtual #246                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       8: aload_1
       9: ifnonnull     81
      12: aload_0
      13: getfield      #59                 // Field uncommitted:Ljava/util/List;
      16: aload_0
      17: getfield      #55                 // Field applied:Ljava/util/List;
      20: invokeinterface #250,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      25: pop
      26: aload_0
      27: getfield      #55                 // Field applied:Ljava/util/List;
      30: invokeinterface #254,  1          // InterfaceMethod java/util/List.clear:()V
      35: aload_0
      36: aload_0
      37: invokevirtual #230                // Method getDelegate:()Lio/fluxcapacitor/javaclient/modeling/Entity;
      40: putfield      #78                 // Field lastStable:Lio/fluxcapacitor/javaclient/modeling/Entity;
      43: aload_0
      44: getfield      #81                 // Field commitInBatch:Z
      47: ifne          57
      50: aload_0
      51: invokevirtual #257                // Method commit:()V
      54: goto          149
      57: aload_0
      58: getfield      #49                 // Field waitingForBatchEnd:Ljava/util/concurrent/atomic/AtomicBoolean;
      61: iconst_0
      62: iconst_1
      63: invokevirtual #219                // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      66: ifeq          149
      69: aload_0
      70: invokedynamic #260,  0            // InvokeDynamic #8:accept:(Lio/fluxcapacitor/javaclient/modeling/ModifiableAggregateRoot;)Ljava/util/function/Consumer;
      75: invokestatic  #261                // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.whenBatchCompletes:(Ljava/util/function/Consumer;)V
      78: goto          149
      81: aload_0
      82: getfield      #55                 // Field applied:Ljava/util/List;
      85: invokeinterface #254,  1          // InterfaceMethod java/util/List.clear:()V
      90: aload_0
      91: aload_0
      92: getfield      #78                 // Field lastStable:Lio/fluxcapacitor/javaclient/modeling/Entity;
      95: putfield      #205                // Field delegate:Lio/fluxcapacitor/javaclient/modeling/Entity;
      98: aload_0
      99: getfield      #81                 // Field commitInBatch:Z
     102: ifne          128
     105: getstatic     #1                  // Field activeAggregates:Ljava/lang/ThreadLocal;
     108: invokevirtual #7                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
     111: checkcast     #13                 // class java/util/Map
     114: aload_0
     115: invokevirtual #223                // Method id:()Ljava/lang/Object;
     118: aload_0
     119: invokeinterface #266,  3          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
     124: pop
     125: goto          149
     128: aload_0
     129: getfield      #49                 // Field waitingForBatchEnd:Ljava/util/concurrent/atomic/AtomicBoolean;
     132: iconst_0
     133: iconst_1
     134: invokevirtual #219                // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
     137: ifeq          149
     140: aload_0
     141: invokedynamic #269,  0            // InvokeDynamic #9:accept:(Lio/fluxcapacitor/javaclient/modeling/ModifiableAggregateRoot;)Ljava/util/function/Consumer;
     146: invokestatic  #261                // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.whenBatchCompletes:(Ljava/util/function/Consumer;)V
     149: return

  protected void commit();
    Code:
       0: getstatic     #1                  // Field activeAggregates:Ljava/lang/ThreadLocal;
       3: invokevirtual #7                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #13                 // class java/util/Map
       9: aload_0
      10: invokevirtual #223                // Method id:()Ljava/lang/Object;
      13: aload_0
      14: invokeinterface #266,  3          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      19: pop
      20: new           #52                 // class java/util/ArrayList
      23: dup
      24: aload_0
      25: getfield      #59                 // Field uncommitted:Ljava/util/List;
      28: invokespecial #270                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      31: astore_1
      32: aload_0
      33: getfield      #59                 // Field uncommitted:Ljava/util/List;
      36: invokeinterface #254,  1          // InterfaceMethod java/util/List.clear:()V
      41: aload_0
      42: getfield      #49                 // Field waitingForBatchEnd:Ljava/util/concurrent/atomic/AtomicBoolean;
      45: iconst_0
      46: invokevirtual #246                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      49: aload_0
      50: getfield      #97                 // Field commitHandler:Lio/fluxcapacitor/javaclient/modeling/ModifiableAggregateRoot$CommitHandler;
      53: aload_0
      54: getfield      #78                 // Field lastStable:Lio/fluxcapacitor/javaclient/modeling/Entity;
      57: aload_1
      58: aload_0
      59: getfield      #74                 // Field lastCommitted:Lio/fluxcapacitor/javaclient/modeling/Entity;
      62: invokeinterface #273,  4          // InterfaceMethod io/fluxcapacitor/javaclient/modeling/ModifiableAggregateRoot$CommitHandler.handle:(Lio/fluxcapacitor/javaclient/modeling/Entity;Ljava/util/List;Lio/fluxcapacitor/javaclient/modeling/Entity;)V
      67: aload_0
      68: aload_0
      69: getfield      #78                 // Field lastStable:Lio/fluxcapacitor/javaclient/modeling/Entity;
      72: putfield      #74                 // Field lastCommitted:Lio/fluxcapacitor/javaclient/modeling/Entity;
      75: return

  public java.lang.String toString();
    Code:
       0: ldc_w         #279                // String ModifiableAggregateRoot()
       3: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #2                  // class io/fluxcapacitor/javaclient/modeling/ModifiableAggregateRoot
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #2                  // class io/fluxcapacitor/javaclient/modeling/ModifiableAggregateRoot
      20: astore_2
      21: aload_2
      22: aload_0
      23: invokevirtual #281                // Method canEqual:(Ljava/lang/Object;)Z
      26: ifne          31
      29: iconst_0
      30: ireturn
      31: iconst_1
      32: ireturn

  protected boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class io/fluxcapacitor/javaclient/modeling/ModifiableAggregateRoot
       4: ireturn

  public int hashCode();
    Code:
       0: iconst_1
       1: istore_1
       2: iconst_1
       3: ireturn

  public io.fluxcapacitor.javaclient.modeling.Entity assertAndApply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #284                // Method assertAndApply:(Ljava/lang/Object;)Lio/fluxcapacitor/javaclient/modeling/ModifiableAggregateRoot;
       5: areturn

  public io.fluxcapacitor.javaclient.modeling.Entity assertLegal(java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #288                // Method assertLegal:(Ljava/lang/Object;)Lio/fluxcapacitor/javaclient/modeling/ModifiableAggregateRoot;
       5: areturn

  public io.fluxcapacitor.javaclient.modeling.Entity apply(io.fluxcapacitor.javaclient.common.Message);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #290                // Method apply:(Lio/fluxcapacitor/javaclient/common/Message;)Lio/fluxcapacitor/javaclient/modeling/ModifiableAggregateRoot;
       5: areturn

  public io.fluxcapacitor.javaclient.modeling.Entity update(java.util.function.UnaryOperator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #293                // Method update:(Ljava/util/function/UnaryOperator;)Lio/fluxcapacitor/javaclient/modeling/ModifiableAggregateRoot;
       5: areturn

  private void lambda$whenHandlerCompletes$10(java.lang.Throwable);
    Code:
       0: aload_0
       1: invokevirtual #257                // Method commit:()V
       4: return

  private void lambda$whenHandlerCompletes$9(java.lang.Throwable);
    Code:
       0: aload_0
       1: invokevirtual #257                // Method commit:()V
       4: return

  private void lambda$handleUpdate$8(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #297                // Method whenHandlerCompletes:(Ljava/lang/Throwable;)V
       5: return

  private io.fluxcapacitor.javaclient.modeling.ModifiableEntity lambda$entities$7(io.fluxcapacitor.javaclient.modeling.Entity);
    Code:
       0: new           #214                // class io/fluxcapacitor/javaclient/modeling/ModifiableEntity
       3: dup
       4: aload_1
       5: aload_0
       6: invokespecial #216                // Method io/fluxcapacitor/javaclient/modeling/ModifiableEntity."<init>":(Lio/fluxcapacitor/javaclient/modeling/Entity;Lio/fluxcapacitor/javaclient/modeling/ModifiableAggregateRoot;)V
       9: areturn

  private static io.fluxcapacitor.javaclient.modeling.Entity lambda$update$6(java.util.function.UnaryOperator, io.fluxcapacitor.javaclient.modeling.Entity);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #300,  2          // InterfaceMethod io/fluxcapacitor/javaclient/modeling/Entity.update:(Ljava/util/function/UnaryOperator;)Lio/fluxcapacitor/javaclient/modeling/Entity;
       7: areturn

  private io.fluxcapacitor.javaclient.modeling.Entity lambda$apply$5(io.fluxcapacitor.javaclient.common.Message, io.fluxcapacitor.javaclient.modeling.Entity);
    Code:
       0: aload_0
       1: getfield      #85                 // Field eventPublication:Lio/fluxcapacitor/javaclient/modeling/EventPublication;
       4: getstatic     #303                // Field io/fluxcapacitor/javaclient/modeling/EventPublication.IF_MODIFIED:Lio/fluxcapacitor/javaclient/modeling/EventPublication;
       7: if_acmpne     35
      10: aload_2
      11: invokeinterface #308,  1          // InterfaceMethod io/fluxcapacitor/javaclient/modeling/Entity.get:()Ljava/lang/Object;
      16: ifnonnull     23
      19: iconst_m1
      20: goto          36
      23: aload_2
      24: invokeinterface #308,  1          // InterfaceMethod io/fluxcapacitor/javaclient/modeling/Entity.get:()Ljava/lang/Object;
      29: invokevirtual #309                // Method java/lang/Object.hashCode:()I
      32: goto          36
      35: iconst_m1
      36: istore_3
      37: aload_2
      38: new           #262                // class io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage
      41: dup
      42: aload_1
      43: getstatic     #315                // Field io/fluxcapacitor/common/MessageType.EVENT:Lio/fluxcapacitor/common/MessageType;
      46: aload_0
      47: getfield      #89                 // Field serializer:Lio/fluxcapacitor/javaclient/common/serialization/Serializer;
      50: invokespecial #321                // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage."<init>":(Lio/fluxcapacitor/javaclient/common/Message;Lio/fluxcapacitor/common/MessageType;Lio/fluxcapacitor/javaclient/common/serialization/Serializer;)V
      53: invokeinterface #324,  2          // InterfaceMethod io/fluxcapacitor/javaclient/modeling/Entity.apply:(Ljava/lang/Object;)Lio/fluxcapacitor/javaclient/modeling/Entity;
      58: astore        4
      60: getstatic     #327                // Field io/fluxcapacitor/javaclient/modeling/ModifiableAggregateRoot$1.$SwitchMap$io$fluxcapacitor$javaclient$modeling$EventPublication:[I
      63: aload_0
      64: getfield      #85                 // Field eventPublication:Lio/fluxcapacitor/javaclient/modeling/EventPublication;
      67: invokevirtual #333                // Method io/fluxcapacitor/javaclient/modeling/EventPublication.ordinal:()I
      70: iaload
      71: tableswitch   { // 1 to 3
                     1: 104
                     2: 107
                     3: 153
               default: 96
          }
      96: new           #336                // class java/lang/IncompatibleClassChangeError
      99: dup
     100: invokespecial #338                // Method java/lang/IncompatibleClassChangeError."<init>":()V
     103: athrow
     104: goto          156
     107: aload_2
     108: invokeinterface #308,  1          // InterfaceMethod io/fluxcapacitor/javaclient/modeling/Entity.get:()Ljava/lang/Object;
     113: aload         4
     115: invokeinterface #308,  1          // InterfaceMethod io/fluxcapacitor/javaclient/modeling/Entity.get:()Ljava/lang/Object;
     120: invokestatic  #339                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     123: ifeq          156
     126: aload         4
     128: invokeinterface #308,  1          // InterfaceMethod io/fluxcapacitor/javaclient/modeling/Entity.get:()Ljava/lang/Object;
     133: ifnull        307
     136: aload         4
     138: invokeinterface #308,  1          // InterfaceMethod io/fluxcapacitor/javaclient/modeling/Entity.get:()Ljava/lang/Object;
     143: invokevirtual #309                // Method java/lang/Object.hashCode:()I
     146: iload_3
     147: if_icmpeq     307
     150: goto          156
     153: goto          307
     156: aload_0
     157: getfield      #93                 // Field dispatchInterceptor:Lio/fluxcapacitor/javaclient/publishing/DispatchInterceptor;
     160: aload_1
     161: getstatic     #315                // Field io/fluxcapacitor/common/MessageType.EVENT:Lio/fluxcapacitor/common/MessageType;
     164: invokeinterface #344,  3          // InterfaceMethod io/fluxcapacitor/javaclient/publishing/DispatchInterceptor.interceptDispatch:(Lio/fluxcapacitor/javaclient/common/Message;Lio/fluxcapacitor/common/MessageType;)Lio/fluxcapacitor/javaclient/common/Message;
     169: astore        5
     171: aload         5
     173: ifnonnull     178
     176: aload_2
     177: areturn
     178: aload         5
     180: bipush        6
     182: anewarray     #310                // class java/lang/Object
     185: dup
     186: iconst_0
     187: ldc_w         #350                // String $aggregateId
     190: aastore
     191: dup
     192: iconst_1
     193: aload_0
     194: invokevirtual #223                // Method id:()Ljava/lang/Object;
     197: invokevirtual #352                // Method java/lang/Object.toString:()Ljava/lang/String;
     200: aastore
     201: dup
     202: iconst_2
     203: ldc_w         #356                // String $aggregateType
     206: aastore
     207: dup
     208: iconst_3
     209: aload_0
     210: invokevirtual #358                // Method type:()Ljava/lang/Class;
     213: invokevirtual #362                // Method java/lang/Class.getName:()Ljava/lang/String;
     216: aastore
     217: dup
     218: iconst_4
     219: ldc_w         #367                // String $sequenceNumber
     222: aastore
     223: dup
     224: iconst_5
     225: aload_0
     226: invokevirtual #230                // Method getDelegate:()Lio/fluxcapacitor/javaclient/modeling/Entity;
     229: invokeinterface #369,  1          // InterfaceMethod io/fluxcapacitor/javaclient/modeling/Entity.sequenceNumber:()J
     234: lconst_1
     235: ladd
     236: invokestatic  #373                // Method java/lang/String.valueOf:(J)Ljava/lang/String;
     239: aastore
     240: invokevirtual #378                // Method io/fluxcapacitor/javaclient/common/Message.addMetadata:([Ljava/lang/Object;)Lio/fluxcapacitor/javaclient/common/Message;
     243: astore        6
     245: aload_0
     246: getfield      #93                 // Field dispatchInterceptor:Lio/fluxcapacitor/javaclient/publishing/DispatchInterceptor;
     249: aload         6
     251: aload_0
     252: getfield      #89                 // Field serializer:Lio/fluxcapacitor/javaclient/common/serialization/Serializer;
     255: invokevirtual #382                // Method io/fluxcapacitor/javaclient/common/Message.serialize:(Lio/fluxcapacitor/javaclient/common/serialization/Serializer;)Lio/fluxcapacitor/common/api/SerializedMessage;
     258: aload         6
     260: getstatic     #315                // Field io/fluxcapacitor/common/MessageType.EVENT:Lio/fluxcapacitor/common/MessageType;
     263: invokeinterface #386,  4          // InterfaceMethod io/fluxcapacitor/javaclient/publishing/DispatchInterceptor.modifySerializedMessage:(Lio/fluxcapacitor/common/api/SerializedMessage;Lio/fluxcapacitor/javaclient/common/Message;Lio/fluxcapacitor/common/MessageType;)Lio/fluxcapacitor/common/api/SerializedMessage;
     268: astore        7
     270: aload         7
     272: ifnonnull     277
     275: aload_2
     276: areturn
     277: aload_0
     278: getfield      #55                 // Field applied:Ljava/util/List;
     281: new           #262                // class io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage
     284: dup
     285: aload         7
     287: aload_0
     288: aload         6
     290: invokedynamic #390,  0            // InvokeDynamic #10:apply:(Lio/fluxcapacitor/javaclient/modeling/ModifiableAggregateRoot;Lio/fluxcapacitor/javaclient/common/Message;)Ljava/util/function/Function;
     295: getstatic     #315                // Field io/fluxcapacitor/common/MessageType.EVENT:Lio/fluxcapacitor/common/MessageType;
     298: invokespecial #393                // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage."<init>":(Lio/fluxcapacitor/common/api/SerializedMessage;Ljava/util/function/Function;Lio/fluxcapacitor/common/MessageType;)V
     301: invokeinterface #135,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     306: pop
     307: aload         4
     309: areturn

  private java.lang.Object lambda$apply$4(io.fluxcapacitor.javaclient.common.Message, java.lang.Class);
    Code:
       0: aload_0
       1: getfield      #89                 // Field serializer:Lio/fluxcapacitor/javaclient/common/serialization/Serializer;
       4: aload_1
       5: invokevirtual #396                // Method io/fluxcapacitor/javaclient/common/Message.getPayload:()Ljava/lang/Object;
       8: aload_2
       9: invokeinterface #399,  3          // InterfaceMethod io/fluxcapacitor/javaclient/common/serialization/Serializer.convert:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      14: areturn

  private void lambda$apply$3(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #405                // Method io/fluxcapacitor/javaclient/common/Message.asMessage:(Ljava/lang/Object;)Lio/fluxcapacitor/javaclient/common/Message;
       5: iconst_0
       6: invokevirtual #172                // Method apply:(Lio/fluxcapacitor/javaclient/common/Message;Z)Lio/fluxcapacitor/javaclient/modeling/ModifiableAggregateRoot;
       9: pop
      10: return

  private void lambda$assertAndApply$2(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #405                // Method io/fluxcapacitor/javaclient/common/Message.asMessage:(Ljava/lang/Object;)Lio/fluxcapacitor/javaclient/common/Message;
       5: iconst_1
       6: invokevirtual #172                // Method apply:(Lio/fluxcapacitor/javaclient/common/Message;Z)Lio/fluxcapacitor/javaclient/modeling/ModifiableAggregateRoot;
       9: pop
      10: return

  private void lambda$assertLegal$1(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #71                 // Field entityHelper:Lio/fluxcapacitor/javaclient/modeling/EntityHelper;
       4: aload_1
       5: aload_0
       6: invokeinterface #141,  3          // InterfaceMethod io/fluxcapacitor/javaclient/modeling/EntityHelper.assertLegal:(Ljava/lang/Object;Lio/fluxcapacitor/javaclient/modeling/Entity;)V
      11: return

  private static io.fluxcapacitor.javaclient.modeling.ModifiableAggregateRoot lambda$load$0(java.util.function.Supplier, boolean, io.fluxcapacitor.javaclient.modeling.EventPublication, io.fluxcapacitor.javaclient.common.serialization.Serializer, io.fluxcapacitor.javaclient.publishing.DispatchInterceptor, io.fluxcapacitor.javaclient.modeling.ModifiableAggregateRoot$CommitHandler);
    Code:
       0: new           #2                  // class io/fluxcapacitor/javaclient/modeling/ModifiableAggregateRoot
       3: dup
       4: aload_0
       5: invokeinterface #409,  1          // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      10: checkcast     #66                 // class io/fluxcapacitor/javaclient/modeling/ImmutableEntity
      13: iload_1
      14: aload_2
      15: aload_3
      16: aload         4
      18: aload         5
      20: invokespecial #412                // Method "<init>":(Lio/fluxcapacitor/javaclient/modeling/ImmutableEntity;ZLio/fluxcapacitor/javaclient/modeling/EventPublication;Lio/fluxcapacitor/javaclient/common/serialization/Serializer;Lio/fluxcapacitor/javaclient/publishing/DispatchInterceptor;Lio/fluxcapacitor/javaclient/modeling/ModifiableAggregateRoot$CommitHandler;)V
      23: areturn

  static {};
    Code:
       0: invokedynamic #415,  0            // InvokeDynamic #11:get:()Ljava/util/function/Supplier;
       5: invokestatic  #418                // Method java/lang/ThreadLocal.withInitial:(Ljava/util/function/Supplier;)Ljava/lang/ThreadLocal;
       8: putstatic     #1                  // Field activeAggregates:Ljava/lang/ThreadLocal;
      11: return
}
