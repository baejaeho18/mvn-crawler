Compiled from "NoOpEntity.java"
public class io.fluxcapacitor.javaclient.modeling.NoOpEntity<T> implements io.fluxcapacitor.javaclient.modeling.Entity<T> {
  private final java.util.function.Supplier<io.fluxcapacitor.javaclient.modeling.Entity<T>> loader;

  private final java.util.concurrent.atomic.AtomicReference<java.lang.Object> delegate;

  private io.fluxcapacitor.javaclient.modeling.NoOpEntity(io.fluxcapacitor.javaclient.modeling.Entity<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      12: putfield      #10                 // Field delegate:Ljava/util/concurrent/atomic/AtomicReference;
      15: aload_0
      16: aload_1
      17: invokedynamic #16,  0             // InvokeDynamic #0:get:(Lio/fluxcapacitor/javaclient/modeling/Entity;)Ljava/util/function/Supplier;
      22: putfield      #20                 // Field loader:Ljava/util/function/Supplier;
      25: return

  public io.fluxcapacitor.javaclient.modeling.NoOpEntity<T> apply(io.fluxcapacitor.javaclient.common.Message);
    Code:
       0: aload_0
       1: areturn

  public io.fluxcapacitor.javaclient.modeling.Entity<T> update(java.util.function.UnaryOperator<T>);
    Code:
       0: aload_0
       1: areturn

  public <E extends java.lang.Exception> io.fluxcapacitor.javaclient.modeling.NoOpEntity<T> assertLegal(java.lang.Object) throws E;
    Code:
       0: aload_0
       1: areturn

  public <E extends java.lang.Exception> io.fluxcapacitor.javaclient.modeling.NoOpEntity<T> assertThat(io.fluxcapacitor.javaclient.modeling.Entity$Validator<T, E>) throws E;
    Code:
       0: aload_0
       1: areturn

  public <E extends java.lang.Exception> io.fluxcapacitor.javaclient.modeling.NoOpEntity<T> ensure(java.util.function.Predicate<T>, java.util.function.Function<T, E>) throws E;
    Code:
       0: aload_0
       1: areturn

  public io.fluxcapacitor.javaclient.modeling.Entity<?> parent();
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method delegate:()Lio/fluxcapacitor/javaclient/modeling/Entity;
       4: invokeinterface #27,  1           // InterfaceMethod io/fluxcapacitor/javaclient/modeling/Entity.parent:()Lio/fluxcapacitor/javaclient/modeling/Entity;
       9: invokestatic  #32                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      12: invokedynamic #38,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      17: invokevirtual #42                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      20: aconst_null
      21: invokevirtual #46                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #28                 // class io/fluxcapacitor/javaclient/modeling/Entity
      27: areturn

  public java.util.Collection<?> aliases();
    Code:
       0: invokestatic  #50                 // Method java/util/Collections.emptyList:()Ljava/util/List;
       3: areturn

  public java.util.Collection<? extends io.fluxcapacitor.javaclient.modeling.Entity<?>> entities();
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method delegate:()Lio/fluxcapacitor/javaclient/modeling/Entity;
       4: invokeinterface #56,  1           // InterfaceMethod io/fluxcapacitor/javaclient/modeling/Entity.entities:()Ljava/util/Collection;
       9: invokeinterface #60,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      14: invokedynamic #66,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      19: invokeinterface #67,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      24: invokestatic  #72                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      27: invokeinterface #78,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      32: checkcast     #61                 // class java/util/Collection
      35: areturn

  public io.fluxcapacitor.javaclient.modeling.Entity<T> previous();
    Code:
       0: new           #11                 // class io/fluxcapacitor/javaclient/modeling/NoOpEntity
       3: dup
       4: aload_0
       5: invokevirtual #24                 // Method delegate:()Lio/fluxcapacitor/javaclient/modeling/Entity;
       8: invokeinterface #82,  1           // InterfaceMethod io/fluxcapacitor/javaclient/modeling/Entity.previous:()Lio/fluxcapacitor/javaclient/modeling/Entity;
      13: invokespecial #85                 // Method "<init>":(Lio/fluxcapacitor/javaclient/modeling/Entity;)V
      16: areturn

  public java.lang.Object id();
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method delegate:()Lio/fluxcapacitor/javaclient/modeling/Entity;
       4: invokeinterface #88,  1           // InterfaceMethod io/fluxcapacitor/javaclient/modeling/Entity.id:()Ljava/lang/Object;
       9: areturn

  public java.lang.Class<T> type();
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method delegate:()Lio/fluxcapacitor/javaclient/modeling/Entity;
       4: invokeinterface #92,  1           // InterfaceMethod io/fluxcapacitor/javaclient/modeling/Entity.type:()Ljava/lang/Class;
       9: areturn

  public T get();
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method delegate:()Lio/fluxcapacitor/javaclient/modeling/Entity;
       4: invokeinterface #96,  1           // InterfaceMethod io/fluxcapacitor/javaclient/modeling/Entity.get:()Ljava/lang/Object;
       9: areturn

  public java.lang.String idProperty();
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method delegate:()Lio/fluxcapacitor/javaclient/modeling/Entity;
       4: invokeinterface #98,  1           // InterfaceMethod io/fluxcapacitor/javaclient/modeling/Entity.idProperty:()Ljava/lang/String;
       9: areturn

  public io.fluxcapacitor.javaclient.modeling.NoOpEntity(java.util.function.Supplier<io.fluxcapacitor.javaclient.modeling.Entity<T>>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      12: putfield      #10                 // Field delegate:Ljava/util/concurrent/atomic/AtomicReference;
      15: aload_0
      16: aload_1
      17: putfield      #20                 // Field loader:Ljava/util/function/Supplier;
      20: return

  private io.fluxcapacitor.javaclient.modeling.Entity<T> delegate();
    Code:
       0: aload_0
       1: getfield      #10                 // Field delegate:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #102                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: astore_1
       8: aload_1
       9: ifnonnull     77
      12: aload_0
      13: getfield      #10                 // Field delegate:Ljava/util/concurrent/atomic/AtomicReference;
      16: dup
      17: astore_2
      18: monitorenter
      19: aload_0
      20: getfield      #10                 // Field delegate:Ljava/util/concurrent/atomic/AtomicReference;
      23: invokevirtual #102                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      26: astore_1
      27: aload_1
      28: ifnonnull     65
      31: aload_0
      32: getfield      #20                 // Field loader:Ljava/util/function/Supplier;
      35: invokeinterface #103,  1          // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      40: checkcast     #28                 // class io/fluxcapacitor/javaclient/modeling/Entity
      43: astore_3
      44: aload_3
      45: ifnonnull     55
      48: aload_0
      49: getfield      #10                 // Field delegate:Ljava/util/concurrent/atomic/AtomicReference;
      52: goto          56
      55: aload_3
      56: astore_1
      57: aload_0
      58: getfield      #10                 // Field delegate:Ljava/util/concurrent/atomic/AtomicReference;
      61: aload_1
      62: invokevirtual #106                // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      65: aload_2
      66: monitorexit
      67: goto          77
      70: astore        4
      72: aload_2
      73: monitorexit
      74: aload         4
      76: athrow
      77: aload_1
      78: aload_0
      79: getfield      #10                 // Field delegate:Ljava/util/concurrent/atomic/AtomicReference;
      82: if_acmpne     89
      85: aconst_null
      86: goto          90
      89: aload_1
      90: checkcast     #28                 // class io/fluxcapacitor/javaclient/modeling/Entity
      93: areturn
    Exception table:
       from    to  target type
          19    67    70   any
          70    74    70   any

  public io.fluxcapacitor.javaclient.modeling.Entity ensure(java.util.function.Predicate, java.util.function.Function) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #110                // Method ensure:(Ljava/util/function/Predicate;Ljava/util/function/Function;)Lio/fluxcapacitor/javaclient/modeling/NoOpEntity;
       6: areturn

  public io.fluxcapacitor.javaclient.modeling.Entity assertThat(io.fluxcapacitor.javaclient.modeling.Entity$Validator) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #114                // Method assertThat:(Lio/fluxcapacitor/javaclient/modeling/Entity$Validator;)Lio/fluxcapacitor/javaclient/modeling/NoOpEntity;
       5: areturn

  public io.fluxcapacitor.javaclient.modeling.Entity assertLegal(java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #118                // Method assertLegal:(Ljava/lang/Object;)Lio/fluxcapacitor/javaclient/modeling/NoOpEntity;
       5: areturn

  public io.fluxcapacitor.javaclient.modeling.Entity apply(io.fluxcapacitor.javaclient.common.Message);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #122                // Method apply:(Lio/fluxcapacitor/javaclient/common/Message;)Lio/fluxcapacitor/javaclient/modeling/NoOpEntity;
       5: areturn

  private static io.fluxcapacitor.javaclient.modeling.NoOpEntity lambda$entities$1(io.fluxcapacitor.javaclient.modeling.Entity);
    Code:
       0: new           #11                 // class io/fluxcapacitor/javaclient/modeling/NoOpEntity
       3: dup
       4: aload_0
       5: invokespecial #85                 // Method "<init>":(Lio/fluxcapacitor/javaclient/modeling/Entity;)V
       8: areturn

  private static io.fluxcapacitor.javaclient.modeling.Entity lambda$new$0(io.fluxcapacitor.javaclient.modeling.Entity);
    Code:
       0: aload_0
       1: areturn
}
