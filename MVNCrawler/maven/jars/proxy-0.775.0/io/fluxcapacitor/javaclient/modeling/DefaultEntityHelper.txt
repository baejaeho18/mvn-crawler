Compiled from "DefaultEntityHelper.java"
public class io.fluxcapacitor.javaclient.modeling.DefaultEntityHelper implements io.fluxcapacitor.javaclient.modeling.EntityHelper {
  private static final io.fluxcapacitor.javaclient.modeling.Aggregate defaultAggregateAnnotation;

  private static final java.util.function.Function<java.lang.Class<?>, io.fluxcapacitor.javaclient.modeling.Aggregate> annotationCache;

  private final java.util.function.Function<java.lang.Class<?>, io.fluxcapacitor.common.handling.HandlerMatcher<java.lang.Object, io.fluxcapacitor.javaclient.common.HasMessage>> interceptMatchers;

  private final java.util.function.Function<java.lang.Class<?>, io.fluxcapacitor.common.handling.HandlerMatcher<java.lang.Object, io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage>> applyMatchers;

  private final java.util.function.Function<java.lang.Class<?>, io.fluxcapacitor.common.handling.HandlerMatcher<java.lang.Object, io.fluxcapacitor.javaclient.common.HasMessage>> assertLegalMatchers;

  private final boolean disablePayloadValidation;

  public static io.fluxcapacitor.javaclient.modeling.Aggregate getRootAnnotation(java.lang.Class<?>);
    Code:
       0: getstatic     #1                  // Field annotationCache:Ljava/util/function/Function;
       3: aload_0
       4: invokeinterface #7,  2            // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #13                 // class io/fluxcapacitor/javaclient/modeling/Aggregate
      12: areturn

  public io.fluxcapacitor.javaclient.modeling.DefaultEntityHelper(java.util.List<io.fluxcapacitor.common.handling.ParameterResolver<? super io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage>>, boolean);
    Code:
       0: aload_0
       1: invokespecial #15                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokedynamic #21,  0             // InvokeDynamic #0:apply:(Ljava/util/List;)Ljava/util/function/Function;
      11: invokestatic  #24                 // Method io/fluxcapacitor/common/ObjectUtils.memoize:(Ljava/util/function/Function;)Lio/fluxcapacitor/common/MemoizingFunction;
      14: putfield      #30                 // Field interceptMatchers:Ljava/util/function/Function;
      17: aload_0
      18: aload_1
      19: invokedynamic #33,  0             // InvokeDynamic #1:apply:(Ljava/util/List;)Ljava/util/function/Function;
      24: invokestatic  #24                 // Method io/fluxcapacitor/common/ObjectUtils.memoize:(Ljava/util/function/Function;)Lio/fluxcapacitor/common/MemoizingFunction;
      27: putfield      #34                 // Field applyMatchers:Ljava/util/function/Function;
      30: aload_0
      31: aload_1
      32: invokedynamic #37,  0             // InvokeDynamic #2:apply:(Ljava/util/List;)Ljava/util/function/Function;
      37: invokestatic  #24                 // Method io/fluxcapacitor/common/ObjectUtils.memoize:(Ljava/util/function/Function;)Lio/fluxcapacitor/common/MemoizingFunction;
      40: putfield      #38                 // Field assertLegalMatchers:Ljava/util/function/Function;
      43: aload_0
      44: iload_2
      45: putfield      #41                 // Field disablePayloadValidation:Z
      48: return

  public java.util.stream.Stream<?> intercept(java.lang.Object, io.fluxcapacitor.javaclient.modeling.Entity<?>);
    Code:
       0: new           #45                 // class io/fluxcapacitor/javaclient/modeling/DefaultEntityHelper$MessageWithEntity
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #47                 // Method io/fluxcapacitor/javaclient/modeling/DefaultEntityHelper$MessageWithEntity."<init>":(Ljava/lang/Object;Lio/fluxcapacitor/javaclient/modeling/Entity;)V
       9: astore_3
      10: aload_0
      11: aload_3
      12: invokevirtual #50                 // Method getInterceptInvoker:(Lio/fluxcapacitor/javaclient/modeling/DefaultEntityHelper$MessageWithEntity;)Ljava/util/Optional;
      15: aload_0
      16: aload_3
      17: aload_2
      18: invokedynamic #54,  0             // InvokeDynamic #3:apply:(Lio/fluxcapacitor/javaclient/modeling/DefaultEntityHelper;Lio/fluxcapacitor/javaclient/modeling/DefaultEntityHelper$MessageWithEntity;Lio/fluxcapacitor/javaclient/modeling/Entity;)Ljava/util/function/Function;
      23: invokevirtual #57                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      26: aload_1
      27: invokedynamic #63,  0             // InvokeDynamic #4:get:(Ljava/lang/Object;)Ljava/util/function/Supplier;
      32: invokevirtual #67                 // Method java/util/Optional.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      35: checkcast     #71                 // class java/util/stream/Stream
      38: areturn

  protected java.util.Optional<io.fluxcapacitor.common.handling.HandlerInvoker> getInterceptInvoker(io.fluxcapacitor.javaclient.modeling.DefaultEntityHelper$MessageWithEntity);
    Code:
       0: aload_0
       1: getfield      #30                 // Field interceptMatchers:Ljava/util/function/Function;
       4: aload_1
       5: invokevirtual #73                 // Method io/fluxcapacitor/javaclient/modeling/DefaultEntityHelper$MessageWithEntity.getPayloadClass:()Ljava/lang/Class;
       8: invokeinterface #7,  2            // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #77                 // class io/fluxcapacitor/common/handling/HandlerMatcher
      16: aload_1
      17: invokevirtual #79                 // Method io/fluxcapacitor/javaclient/modeling/DefaultEntityHelper$MessageWithEntity.getPayload:()Ljava/lang/Object;
      20: aload_1
      21: invokeinterface #83,  3           // InterfaceMethod io/fluxcapacitor/common/handling/HandlerMatcher.findInvoker:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Optional;
      26: aload_0
      27: aload_1
      28: invokedynamic #87,  0             // InvokeDynamic #5:get:(Lio/fluxcapacitor/javaclient/modeling/DefaultEntityHelper;Lio/fluxcapacitor/javaclient/modeling/DefaultEntityHelper$MessageWithEntity;)Ljava/util/function/Supplier;
      33: invokevirtual #90                 // Method java/util/Optional.or:(Ljava/util/function/Supplier;)Ljava/util/Optional;
      36: areturn

  public java.util.Optional<io.fluxcapacitor.common.handling.HandlerInvoker> applyInvoker(io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage, io.fluxcapacitor.javaclient.modeling.Entity<?>);
    Code:
       0: new           #94                 // class io/fluxcapacitor/javaclient/modeling/DefaultEntityHelper$DeserializingMessageWithEntity
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #96                 // Method io/fluxcapacitor/javaclient/modeling/DefaultEntityHelper$DeserializingMessageWithEntity."<init>":(Lio/fluxcapacitor/javaclient/common/serialization/DeserializingMessage;Lio/fluxcapacitor/javaclient/modeling/Entity;)V
       9: astore_3
      10: aload_2
      11: invokeinterface #99,  1           // InterfaceMethod io/fluxcapacitor/javaclient/modeling/Entity.type:()Ljava/lang/Class;
      16: astore        4
      18: aload_0
      19: getfield      #34                 // Field applyMatchers:Ljava/util/function/Function;
      22: aload         4
      24: invokeinterface #7,  2            // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #77                 // class io/fluxcapacitor/common/handling/HandlerMatcher
      32: aload_2
      33: invokeinterface #104,  1          // InterfaceMethod io/fluxcapacitor/javaclient/modeling/Entity.get:()Ljava/lang/Object;
      38: aload_3
      39: invokeinterface #83,  3           // InterfaceMethod io/fluxcapacitor/common/handling/HandlerMatcher.findInvoker:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Optional;
      44: aload_0
      45: aload_3
      46: aload         4
      48: invokedynamic #106,  0            // InvokeDynamic #6:get:(Lio/fluxcapacitor/javaclient/modeling/DefaultEntityHelper;Lio/fluxcapacitor/javaclient/modeling/DefaultEntityHelper$DeserializingMessageWithEntity;Ljava/lang/Class;)Ljava/util/function/Supplier;
      53: invokevirtual #90                 // Method java/util/Optional.or:(Ljava/util/function/Supplier;)Ljava/util/Optional;
      56: aload_0
      57: aload_3
      58: aload_2
      59: invokedynamic #109,  0            // InvokeDynamic #7:apply:(Lio/fluxcapacitor/javaclient/modeling/DefaultEntityHelper;Lio/fluxcapacitor/javaclient/modeling/DefaultEntityHelper$DeserializingMessageWithEntity;Lio/fluxcapacitor/javaclient/modeling/Entity;)Ljava/util/function/Function;
      64: invokevirtual #57                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      67: areturn

  public <E extends java.lang.Exception> void assertLegal(java.lang.Object, io.fluxcapacitor.javaclient.modeling.Entity<?>) throws E;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokevirtual #112                // Method assertLegal:(Ljava/lang/Object;Lio/fluxcapacitor/javaclient/modeling/Entity;Z)V
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokedynamic #116,  0            // InvokeDynamic #8:accept:(Lio/fluxcapacitor/javaclient/modeling/DefaultEntityHelper;Ljava/lang/Object;Lio/fluxcapacitor/javaclient/modeling/Entity;)Ljava/util/function/BiConsumer;
      15: invokestatic  #120                // Method io/fluxcapacitor/common/handling/Invocation.whenHandlerCompletes:(Ljava/util/function/BiConsumer;)Lio/fluxcapacitor/common/Registration;
      18: pop
      19: return

  private void assertLegal(java.lang.Object, io.fluxcapacitor.javaclient.modeling.Entity<?>, boolean);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: getfield      #41                 // Field disablePayloadValidation:Z
       9: ifne          47
      12: iload_3
      13: ifne          47
      16: aload_1
      17: instanceof    #126                // class io/fluxcapacitor/javaclient/common/HasMessage
      20: ifeq          39
      23: aload_1
      24: checkcast     #126                // class io/fluxcapacitor/javaclient/common/HasMessage
      27: astore        4
      29: aload         4
      31: invokeinterface #128,  1          // InterfaceMethod io/fluxcapacitor/javaclient/common/HasMessage.getPayload:()Ljava/lang/Object;
      36: goto          40
      39: aload_1
      40: iconst_0
      41: anewarray     #129                // class java/lang/Class
      44: invokestatic  #131                // Method io/fluxcapacitor/javaclient/tracking/handling/validation/ValidationUtils.assertValid:(Ljava/lang/Object;[Ljava/lang/Class;)V
      47: aload_1
      48: instanceof    #126                // class io/fluxcapacitor/javaclient/common/HasMessage
      51: ifeq          70
      54: aload_1
      55: checkcast     #126                // class io/fluxcapacitor/javaclient/common/HasMessage
      58: astore        5
      60: aload         5
      62: invokeinterface #128,  1          // InterfaceMethod io/fluxcapacitor/javaclient/common/HasMessage.getPayload:()Ljava/lang/Object;
      67: goto          71
      70: aload_1
      71: astore        4
      73: aload_0
      74: aload         4
      76: invokevirtual #137                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      79: aload         4
      81: aload_1
      82: aload_2
      83: iload_3
      84: invokevirtual #140                // Method assertLegalValue:(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/Object;Lio/fluxcapacitor/javaclient/modeling/Entity;Z)V
      87: aload_2
      88: aload         4
      90: invokeinterface #144,  2          // InterfaceMethod io/fluxcapacitor/javaclient/modeling/Entity.possibleTargets:(Ljava/lang/Object;)Ljava/lang/Iterable;
      95: aload_0
      96: aload         4
      98: aload_1
      99: iload_3
     100: invokedynamic #148,  0            // InvokeDynamic #9:accept:(Lio/fluxcapacitor/javaclient/modeling/DefaultEntityHelper;Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/util/function/Consumer;
     105: invokeinterface #151,  2          // InterfaceMethod java/lang/Iterable.forEach:(Ljava/util/function/Consumer;)V
     110: aload_0
     111: aload_2
     112: invokeinterface #99,  1           // InterfaceMethod io/fluxcapacitor/javaclient/modeling/Entity.type:()Ljava/lang/Class;
     117: aload_2
     118: invokeinterface #104,  1          // InterfaceMethod io/fluxcapacitor/javaclient/modeling/Entity.get:()Ljava/lang/Object;
     123: aload_1
     124: aload_2
     125: iload_3
     126: invokevirtual #140                // Method assertLegalValue:(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/Object;Lio/fluxcapacitor/javaclient/modeling/Entity;Z)V
     129: aload_2
     130: aload         4
     132: invokeinterface #144,  2          // InterfaceMethod io/fluxcapacitor/javaclient/modeling/Entity.possibleTargets:(Ljava/lang/Object;)Ljava/lang/Iterable;
     137: aload_0
     138: aload_1
     139: iload_3
     140: invokedynamic #157,  0            // InvokeDynamic #10:accept:(Lio/fluxcapacitor/javaclient/modeling/DefaultEntityHelper;Ljava/lang/Object;Z)Ljava/util/function/Consumer;
     145: invokeinterface #151,  2          // InterfaceMethod java/lang/Iterable.forEach:(Ljava/util/function/Consumer;)V
     150: return

  private void assertLegalValue(java.lang.Class<?>, java.lang.Object, java.lang.Object, io.fluxcapacitor.javaclient.modeling.Entity<?>, boolean);
    Code:
       0: aload_3
       1: ifnonnull     5
       4: return
       5: new           #45                 // class io/fluxcapacitor/javaclient/modeling/DefaultEntityHelper$MessageWithEntity
       8: dup
       9: aload_3
      10: aload         4
      12: invokespecial #47                 // Method io/fluxcapacitor/javaclient/modeling/DefaultEntityHelper$MessageWithEntity."<init>":(Ljava/lang/Object;Lio/fluxcapacitor/javaclient/modeling/Entity;)V
      15: astore        6
      17: new           #160                // class java/util/HashSet
      20: dup
      21: aload_2
      22: ldc           #162                // class io/fluxcapacitor/javaclient/modeling/AssertLegal
      24: invokestatic  #164                // Method io/fluxcapacitor/common/reflection/ReflectionUtils.getAnnotatedPropertyValues:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/util/Collection;
      27: invokespecial #170                // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      30: astore        7
      32: aload_0
      33: getfield      #38                 // Field assertLegalMatchers:Ljava/util/function/Function;
      36: aload_1
      37: invokeinterface #7,  2            // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      42: checkcast     #77                 // class io/fluxcapacitor/common/handling/HandlerMatcher
      45: aload_2
      46: aload         6
      48: invokeinterface #83,  3           // InterfaceMethod io/fluxcapacitor/common/handling/HandlerMatcher.findInvoker:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Optional;
      53: iload         5
      55: invokedynamic #173,  0            // InvokeDynamic #11:test:(Z)Ljava/util/function/Predicate;
      60: invokevirtual #177                // Method java/util/Optional.filter:(Ljava/util/function/Predicate;)Ljava/util/Optional;
      63: aload         7
      65: invokedynamic #181,  0            // InvokeDynamic #12:accept:(Ljava/util/Collection;)Ljava/util/function/Consumer;
      70: invokevirtual #184                // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      73: aload         7
      75: invokeinterface #187,  1          // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      80: invokedynamic #193,  0            // InvokeDynamic #13:test:()Ljava/util/function/Predicate;
      85: invokeinterface #196,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      90: aload_0
      91: aload_3
      92: aload         4
      94: iload         5
      96: invokedynamic #199,  0            // InvokeDynamic #14:accept:(Lio/fluxcapacitor/javaclient/modeling/DefaultEntityHelper;Ljava/lang/Object;Lio/fluxcapacitor/javaclient/modeling/Entity;Z)Ljava/util/function/Consumer;
     101: invokeinterface #202,  2          // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
     106: return

  public <E extends java.lang.Exception> java.util.Optional<E> checkLegality(java.lang.Object, io.fluxcapacitor.javaclient.modeling.Entity<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #203                // Method assertLegal:(Ljava/lang/Object;Lio/fluxcapacitor/javaclient/modeling/Entity;)V
       6: invokestatic  #205                // Method java/util/Optional.empty:()Ljava/util/Optional;
       9: areturn
      10: astore_3
      11: aload_3
      12: invokestatic  #211                // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      15: areturn
    Exception table:
       from    to  target type
           0     9    10   Class java/lang/Exception

  public boolean isLegal(java.lang.Object, io.fluxcapacitor.javaclient.modeling.Entity<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #215                // Method checkLegality:(Ljava/lang/Object;Lio/fluxcapacitor/javaclient/modeling/Entity;)Ljava/util/Optional;
       6: invokevirtual #219                // Method java/util/Optional.isEmpty:()Z
       9: ireturn

  private void lambda$assertLegalValue$17(java.lang.Object, io.fluxcapacitor.javaclient.modeling.Entity, boolean, java.lang.Object);
    Code:
       0: aload_0
       1: aload         4
       3: invokevirtual #137                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       6: aload         4
       8: aload_1
       9: aload_2
      10: iload_3
      11: invokevirtual #140                // Method assertLegalValue:(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/Object;Lio/fluxcapacitor/javaclient/modeling/Entity;Z)V
      14: return

  private static void lambda$assertLegalValue$16(java.util.Collection, io.fluxcapacitor.common.handling.HandlerInvoker);
    Code:
       0: aload_1
       1: invokeinterface #223,  1          // InterfaceMethod io/fluxcapacitor/common/handling/HandlerInvoker.invoke:()Ljava/lang/Object;
       6: astore_2
       7: aload_2
       8: instanceof    #188                // class java/util/Collection
      11: ifeq          28
      14: aload_0
      15: aload_2
      16: checkcast     #188                // class java/util/Collection
      19: invokeinterface #228,  2          // InterfaceMethod java/util/Collection.addAll:(Ljava/util/Collection;)Z
      24: pop
      25: goto          36
      28: aload_0
      29: aload_2
      30: invokeinterface #232,  2          // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      35: pop
      36: return

  private static boolean lambda$assertLegalValue$15(boolean, io.fluxcapacitor.common.handling.HandlerInvoker);
    Code:
       0: aload_1
       1: invokeinterface #236,  1          // InterfaceMethod io/fluxcapacitor/common/handling/HandlerInvoker.getMethod:()Ljava/lang/reflect/Executable;
       6: ldc           #162                // class io/fluxcapacitor/javaclient/modeling/AssertLegal
       8: invokestatic  #240                // Method io/fluxcapacitor/common/reflection/ReflectionUtils.getAnnotation:(Ljava/lang/reflect/Executable;Ljava/lang/Class;)Ljava/util/Optional;
      11: iload_0
      12: invokedynamic #244,  0            // InvokeDynamic #15:apply:(Z)Ljava/util/function/Function;
      17: invokevirtual #57                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      20: iconst_0
      21: invokestatic  #247                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      24: invokevirtual #253                // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      27: checkcast     #248                // class java/lang/Boolean
      30: invokevirtual #256                // Method java/lang/Boolean.booleanValue:()Z
      33: ireturn

  private static java.lang.Boolean lambda$assertLegalValue$14(boolean, io.fluxcapacitor.javaclient.modeling.AssertLegal);
    Code:
       0: aload_1
       1: invokeinterface #259,  1          // InterfaceMethod io/fluxcapacitor/javaclient/modeling/AssertLegal.afterHandler:()Z
       6: iload_0
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: invokestatic  #247                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      18: areturn

  private void lambda$assertLegal$13(java.lang.Object, boolean, io.fluxcapacitor.javaclient.modeling.Entity);
    Code:
       0: aload_0
       1: aload_3
       2: invokeinterface #99,  1           // InterfaceMethod io/fluxcapacitor/javaclient/modeling/Entity.type:()Ljava/lang/Class;
       7: aload_3
       8: invokeinterface #104,  1          // InterfaceMethod io/fluxcapacitor/javaclient/modeling/Entity.get:()Ljava/lang/Object;
      13: aload_1
      14: aload_3
      15: iload_2
      16: invokevirtual #140                // Method assertLegalValue:(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/Object;Lio/fluxcapacitor/javaclient/modeling/Entity;Z)V
      19: return

  private void lambda$assertLegal$12(java.lang.Object, java.lang.Object, boolean, io.fluxcapacitor.javaclient.modeling.Entity);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #137                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: aload_1
       6: aload_2
       7: aload         4
       9: iload_3
      10: invokevirtual #140                // Method assertLegalValue:(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/Object;Lio/fluxcapacitor/javaclient/modeling/Entity;Z)V
      13: return

  private void lambda$assertLegal$11(java.lang.Object, io.fluxcapacitor.javaclient.modeling.Entity, java.lang.Object, java.lang.Throwable);
    Code:
       0: aload         4
       2: ifnonnull     12
       5: aload_0
       6: aload_1
       7: aload_2
       8: iconst_1
       9: invokevirtual #112                // Method assertLegal:(Ljava/lang/Object;Lio/fluxcapacitor/javaclient/modeling/Entity;Z)V
      12: return

  private io.fluxcapacitor.common.handling.HandlerInvoker lambda$applyInvoker$10(io.fluxcapacitor.javaclient.modeling.DefaultEntityHelper$DeserializingMessageWithEntity, io.fluxcapacitor.javaclient.modeling.Entity, io.fluxcapacitor.common.handling.HandlerInvoker);
    Code:
       0: new           #262                // class io/fluxcapacitor/javaclient/modeling/DefaultEntityHelper$1
       3: dup
       4: aload_0
       5: aload_3
       6: aload_1
       7: aload_2
       8: invokespecial #264                // Method io/fluxcapacitor/javaclient/modeling/DefaultEntityHelper$1."<init>":(Lio/fluxcapacitor/javaclient/modeling/DefaultEntityHelper;Lio/fluxcapacitor/common/handling/HandlerInvoker;Lio/fluxcapacitor/javaclient/modeling/DefaultEntityHelper$DeserializingMessageWithEntity;Lio/fluxcapacitor/javaclient/modeling/Entity;)V
      11: areturn

  private java.util.Optional lambda$applyInvoker$9(io.fluxcapacitor.javaclient.modeling.DefaultEntityHelper$DeserializingMessageWithEntity, java.lang.Class);
    Code:
       0: aload_0
       1: getfield      #34                 // Field applyMatchers:Ljava/util/function/Function;
       4: aload_1
       5: invokevirtual #267                // Method io/fluxcapacitor/javaclient/modeling/DefaultEntityHelper$DeserializingMessageWithEntity.getPayloadClass:()Ljava/lang/Class;
       8: invokeinterface #7,  2            // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #77                 // class io/fluxcapacitor/common/handling/HandlerMatcher
      16: aload_1
      17: invokevirtual #268                // Method io/fluxcapacitor/javaclient/modeling/DefaultEntityHelper$DeserializingMessageWithEntity.getPayload:()Ljava/lang/Object;
      20: aload_1
      21: invokeinterface #83,  3           // InterfaceMethod io/fluxcapacitor/common/handling/HandlerMatcher.findInvoker:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Optional;
      26: aload_2
      27: invokedynamic #269,  0            // InvokeDynamic #16:test:(Ljava/lang/Class;)Ljava/util/function/Predicate;
      32: invokevirtual #177                // Method java/util/Optional.filter:(Ljava/util/function/Predicate;)Ljava/util/Optional;
      35: areturn

  private static boolean lambda$applyInvoker$8(java.lang.Class, io.fluxcapacitor.common.handling.HandlerInvoker);
    Code:
       0: aload_1
       1: invokeinterface #236,  1          // InterfaceMethod io/fluxcapacitor/common/handling/HandlerInvoker.getMethod:()Ljava/lang/reflect/Executable;
       6: instanceof    #272                // class java/lang/reflect/Method
       9: ifeq          57
      12: aload_1
      13: invokeinterface #236,  1          // InterfaceMethod io/fluxcapacitor/common/handling/HandlerInvoker.getMethod:()Ljava/lang/reflect/Executable;
      18: checkcast     #272                // class java/lang/reflect/Method
      21: invokevirtual #274                // Method java/lang/reflect/Method.getReturnType:()Ljava/lang/Class;
      24: astore_2
      25: aload_0
      26: aload_2
      27: invokevirtual #277                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      30: ifne          51
      33: aload_2
      34: aload_0
      35: invokevirtual #277                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      38: ifne          51
      41: aload_2
      42: getstatic     #281                // Field java/lang/Void.TYPE:Ljava/lang/Class;
      45: invokevirtual #287                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      48: ifeq          55
      51: iconst_1
      52: goto          56
      55: iconst_0
      56: ireturn
      57: iconst_0
      58: ireturn

  private java.util.Optional lambda$getInterceptInvoker$7(io.fluxcapacitor.javaclient.modeling.DefaultEntityHelper$MessageWithEntity);
    Code:
       0: aload_1
       1: invokevirtual #290                // Method io/fluxcapacitor/javaclient/modeling/DefaultEntityHelper$MessageWithEntity.getEntity:()Lio/fluxcapacitor/javaclient/modeling/Entity;
       4: aload_1
       5: invokevirtual #79                 // Method io/fluxcapacitor/javaclient/modeling/DefaultEntityHelper$MessageWithEntity.getPayload:()Ljava/lang/Object;
       8: invokeinterface #144,  2          // InterfaceMethod io/fluxcapacitor/javaclient/modeling/Entity.possibleTargets:(Ljava/lang/Object;)Ljava/lang/Iterable;
      13: invokeinterface #294,  1          // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      18: astore_2
      19: aload_2
      20: invokeinterface #298,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          63
      28: aload_2
      29: invokeinterface #303,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #100                // class io/fluxcapacitor/javaclient/modeling/Entity
      37: astore_3
      38: aload_0
      39: aload_1
      40: aload_3
      41: invokevirtual #306                // Method io/fluxcapacitor/javaclient/modeling/DefaultEntityHelper$MessageWithEntity.withEntity:(Lio/fluxcapacitor/javaclient/modeling/Entity;)Lio/fluxcapacitor/javaclient/modeling/DefaultEntityHelper$MessageWithEntity;
      44: invokevirtual #50                 // Method getInterceptInvoker:(Lio/fluxcapacitor/javaclient/modeling/DefaultEntityHelper$MessageWithEntity;)Ljava/util/Optional;
      47: astore        4
      49: aload         4
      51: invokevirtual #310                // Method java/util/Optional.isPresent:()Z
      54: ifeq          60
      57: aload         4
      59: areturn
      60: goto          19
      63: invokestatic  #205                // Method java/util/Optional.empty:()Ljava/util/Optional;
      66: areturn

  private static java.util.stream.Stream lambda$intercept$6(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #313                // InterfaceMethod java/util/stream/Stream.of:(Ljava/lang/Object;)Ljava/util/stream/Stream;
       4: areturn

  private java.util.stream.Stream lambda$intercept$5(io.fluxcapacitor.javaclient.modeling.DefaultEntityHelper$MessageWithEntity, io.fluxcapacitor.javaclient.modeling.Entity, io.fluxcapacitor.common.handling.HandlerInvoker);
    Code:
       0: aload_3
       1: invokeinterface #223,  1          // InterfaceMethod io/fluxcapacitor/common/handling/HandlerInvoker.invoke:()Ljava/lang/Object;
       6: invokestatic  #316                // Method io/fluxcapacitor/common/ObjectUtils.asStream:(Ljava/lang/Object;)Ljava/util/stream/Stream;
       9: aload_0
      10: aload_1
      11: aload_2
      12: invokedynamic #319,  0            // InvokeDynamic #17:apply:(Lio/fluxcapacitor/javaclient/modeling/DefaultEntityHelper;Lio/fluxcapacitor/javaclient/modeling/DefaultEntityHelper$MessageWithEntity;Lio/fluxcapacitor/javaclient/modeling/Entity;)Ljava/util/function/Function;
      17: invokeinterface #320,  2          // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      22: areturn

  private java.util.stream.Stream lambda$intercept$4(io.fluxcapacitor.javaclient.modeling.DefaultEntityHelper$MessageWithEntity, io.fluxcapacitor.javaclient.modeling.Entity, java.lang.Object);
    Code:
       0: aload_3
       1: invokestatic  #324                // Method io/fluxcapacitor/javaclient/common/Message.asMessage:(Ljava/lang/Object;)Lio/fluxcapacitor/javaclient/common/Message;
       4: astore        4
       6: aload         4
       8: aload_1
       9: invokevirtual #330                // Method io/fluxcapacitor/javaclient/modeling/DefaultEntityHelper$MessageWithEntity.getMetadata:()Lio/fluxcapacitor/common/api/Metadata;
      12: aload         4
      14: invokevirtual #334                // Method io/fluxcapacitor/javaclient/common/Message.getMetadata:()Lio/fluxcapacitor/common/api/Metadata;
      17: invokevirtual #335                // Method io/fluxcapacitor/common/api/Metadata.with:(Lio/fluxcapacitor/common/api/Metadata;)Lio/fluxcapacitor/common/api/Metadata;
      20: invokevirtual #341                // Method io/fluxcapacitor/javaclient/common/Message.withMetadata:(Lio/fluxcapacitor/common/api/Metadata;)Lio/fluxcapacitor/javaclient/common/Message;
      23: astore        4
      25: aload         4
      27: invokevirtual #345                // Method io/fluxcapacitor/javaclient/common/Message.getPayloadClass:()Ljava/lang/Class;
      30: aload_1
      31: invokevirtual #73                 // Method io/fluxcapacitor/javaclient/modeling/DefaultEntityHelper$MessageWithEntity.getPayloadClass:()Ljava/lang/Class;
      34: invokevirtual #287                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      37: ifeq          46
      40: aload         4
      42: invokestatic  #313                // InterfaceMethod java/util/stream/Stream.of:(Ljava/lang/Object;)Ljava/util/stream/Stream;
      45: areturn
      46: aload_0
      47: aload         4
      49: aload_2
      50: invokevirtual #346                // Method intercept:(Ljava/lang/Object;Lio/fluxcapacitor/javaclient/modeling/Entity;)Ljava/util/stream/Stream;
      53: areturn

  private static io.fluxcapacitor.common.handling.HandlerMatcher lambda$new$3(java.util.List, java.lang.Class);
    Code:
       0: aload_1
       1: aload_0
       2: invokestatic  #350                // Method io/fluxcapacitor/common/handling/HandlerConfiguration.builder:()Lio/fluxcapacitor/common/handling/HandlerConfiguration$HandlerConfigurationBuilder;
       5: ldc           #162                // class io/fluxcapacitor/javaclient/modeling/AssertLegal
       7: invokevirtual #356                // Method io/fluxcapacitor/common/handling/HandlerConfiguration$HandlerConfigurationBuilder.methodAnnotation:(Ljava/lang/Class;)Lio/fluxcapacitor/common/handling/HandlerConfiguration$HandlerConfigurationBuilder;
      10: iconst_1
      11: invokevirtual #362                // Method io/fluxcapacitor/common/handling/HandlerConfiguration$HandlerConfigurationBuilder.invokeMultipleMethods:(Z)Lio/fluxcapacitor/common/handling/HandlerConfiguration$HandlerConfigurationBuilder;
      14: invokevirtual #366                // Method io/fluxcapacitor/common/handling/HandlerConfiguration$HandlerConfigurationBuilder.build:()Lio/fluxcapacitor/common/handling/HandlerConfiguration;
      17: invokestatic  #370                // Method io/fluxcapacitor/common/handling/HandlerInspector.inspect:(Ljava/lang/Class;Ljava/util/List;Lio/fluxcapacitor/common/handling/HandlerConfiguration;)Lio/fluxcapacitor/common/handling/HandlerMatcher;
      20: areturn

  private static io.fluxcapacitor.common.handling.HandlerMatcher lambda$new$2(java.util.List, java.lang.Class);
    Code:
       0: aload_1
       1: aload_0
       2: ldc_w         #376                // class io/fluxcapacitor/javaclient/persisting/eventsourcing/Apply
       5: invokestatic  #378                // Method io/fluxcapacitor/common/handling/HandlerInspector.inspect:(Ljava/lang/Class;Ljava/util/List;Ljava/lang/Class;)Lio/fluxcapacitor/common/handling/HandlerMatcher;
       8: areturn

  private static io.fluxcapacitor.common.handling.HandlerMatcher lambda$new$1(java.util.List, java.lang.Class);
    Code:
       0: aload_1
       1: aload_0
       2: ldc_w         #381                // class io/fluxcapacitor/javaclient/persisting/eventsourcing/InterceptApply
       5: invokestatic  #378                // Method io/fluxcapacitor/common/handling/HandlerInspector.inspect:(Ljava/lang/Class;Ljava/util/List;Ljava/lang/Class;)Lio/fluxcapacitor/common/handling/HandlerMatcher;
       8: areturn

  private static io.fluxcapacitor.javaclient.modeling.Aggregate lambda$static$0(java.lang.Class);
    Code:
       0: aload_0
       1: ldc           #13                 // class io/fluxcapacitor/javaclient/modeling/Aggregate
       3: invokestatic  #383                // Method io/fluxcapacitor/common/reflection/ReflectionUtils.getTypeAnnotation:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
       6: checkcast     #13                 // class io/fluxcapacitor/javaclient/modeling/Aggregate
       9: invokestatic  #387                // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      12: getstatic     #390                // Field defaultAggregateAnnotation:Lio/fluxcapacitor/javaclient/modeling/Aggregate;
      15: invokevirtual #253                // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #13                 // class io/fluxcapacitor/javaclient/modeling/Aggregate
      21: areturn

  static {};
    Code:
       0: ldc_w         #394                // class io/fluxcapacitor/javaclient/modeling/DefaultEntityHelper$DefaultAggregate
       3: ldc           #13                 // class io/fluxcapacitor/javaclient/modeling/Aggregate
       5: invokevirtual #396                // Method java/lang/Class.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
       8: checkcast     #13                 // class io/fluxcapacitor/javaclient/modeling/Aggregate
      11: putstatic     #390                // Field defaultAggregateAnnotation:Lio/fluxcapacitor/javaclient/modeling/Aggregate;
      14: invokedynamic #399,  0            // InvokeDynamic #18:apply:()Ljava/util/function/Function;
      19: invokestatic  #24                 // Method io/fluxcapacitor/common/ObjectUtils.memoize:(Ljava/util/function/Function;)Lio/fluxcapacitor/common/MemoizingFunction;
      22: putstatic     #1                  // Field annotationCache:Ljava/util/function/Function;
      25: return
}
