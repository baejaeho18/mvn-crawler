Compiled from "Entity.java"
public interface io.fluxcapacitor.javaclient.modeling.Entity<T> {
  public static final java.lang.ThreadLocal<java.lang.Boolean> loading;

  public static final java.lang.ThreadLocal<java.lang.Boolean> applying;

  public static final java.lang.String AGGREGATE_ID_METADATA_KEY;

  public static final java.lang.String AGGREGATE_TYPE_METADATA_KEY;

  public static final java.lang.String AGGREGATE_SN_METADATA_KEY;

  public static boolean isLoading();
    Code:
       0: getstatic     #1                  // Field loading:Ljava/lang/ThreadLocal;
       3: invokevirtual #7                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #13                 // class java/lang/Boolean
       9: invokevirtual #15                 // Method java/lang/Boolean.booleanValue:()Z
      12: ireturn

  public static boolean isApplying();
    Code:
       0: getstatic     #19                 // Field applying:Ljava/lang/ThreadLocal;
       3: invokevirtual #7                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #13                 // class java/lang/Boolean
       9: invokevirtual #15                 // Method java/lang/Boolean.booleanValue:()Z
      12: ireturn

  public static java.lang.String getAggregateId(io.fluxcapacitor.common.api.HasMetadata);
    Code:
       0: aload_0
       1: invokeinterface #22,  1           // InterfaceMethod io/fluxcapacitor/common/api/HasMetadata.getMetadata:()Lio/fluxcapacitor/common/api/Metadata;
       6: ldc           #28                 // String $aggregateId
       8: invokevirtual #30                 // Method io/fluxcapacitor/common/api/Metadata.get:(Ljava/lang/Object;)Ljava/lang/String;
      11: areturn

  public static java.lang.Class<?> getAggregateType(io.fluxcapacitor.common.api.HasMetadata);
    Code:
       0: aload_0
       1: invokeinterface #22,  1           // InterfaceMethod io/fluxcapacitor/common/api/HasMetadata.getMetadata:()Lio/fluxcapacitor/common/api/Metadata;
       6: ldc           #35                 // String $aggregateType
       8: invokevirtual #30                 // Method io/fluxcapacitor/common/api/Metadata.get:(Ljava/lang/Object;)Ljava/lang/String;
      11: invokestatic  #37                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      14: invokedynamic #43,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      19: invokevirtual #47                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      22: aconst_null
      23: invokevirtual #51                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #55                 // class java/lang/Class
      29: areturn

  public static java.lang.Long getSequenceNumber(io.fluxcapacitor.common.api.HasMetadata);
    Code:
       0: aload_0
       1: invokeinterface #22,  1           // InterfaceMethod io/fluxcapacitor/common/api/HasMetadata.getMetadata:()Lio/fluxcapacitor/common/api/Metadata;
       6: ldc           #57                 // String $sequenceNumber
       8: invokevirtual #30                 // Method io/fluxcapacitor/common/api/Metadata.get:(Ljava/lang/Object;)Ljava/lang/String;
      11: invokestatic  #37                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      14: invokedynamic #59,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      19: invokevirtual #47                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      22: aconst_null
      23: invokevirtual #51                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #60                 // class java/lang/Long
      29: areturn

  public abstract java.lang.Object id();

  public abstract java.lang.Class<T> type();

  public abstract T get();

  public default boolean isEmpty();
    Code:
       0: aload_0
       1: invokeinterface #62,  1           // InterfaceMethod get:()Ljava/lang/Object;
       6: ifnonnull     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public default boolean isPresent();
    Code:
       0: aload_0
       1: invokeinterface #62,  1           // InterfaceMethod get:()Ljava/lang/Object;
       6: ifnull        13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public default io.fluxcapacitor.javaclient.modeling.Entity<T> ifPresent(java.util.function.UnaryOperator<io.fluxcapacitor.javaclient.modeling.Entity<T>>);
    Code:
       0: aload_0
       1: invokeinterface #62,  1           // InterfaceMethod get:()Ljava/lang/Object;
       6: ifnonnull     11
       9: aload_0
      10: areturn
      11: aload_1
      12: aload_0
      13: invokeinterface #63,  2           // InterfaceMethod java/util/function/UnaryOperator.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #2                  // class io/fluxcapacitor/javaclient/modeling/Entity
      21: areturn

  public default <U> java.util.Optional<U> mapIfPresent(java.util.function.Function<io.fluxcapacitor.javaclient.modeling.Entity<T>, U>);
    Code:
       0: aload_0
       1: invokeinterface #62,  1           // InterfaceMethod get:()Ljava/lang/Object;
       6: ifnonnull     13
       9: invokestatic  #67                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      12: areturn
      13: aload_1
      14: aload_0
      15: invokeinterface #71,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      20: invokestatic  #37                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      23: areturn

  public abstract java.lang.String idProperty();

  public abstract io.fluxcapacitor.javaclient.modeling.Entity<?> parent();

  public abstract java.util.Collection<?> aliases();

  public default boolean isRoot();
    Code:
       0: aload_0
       1: invokeinterface #74,  1           // InterfaceMethod parent:()Lio/fluxcapacitor/javaclient/modeling/Entity;
       6: ifnonnull     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public default io.fluxcapacitor.javaclient.modeling.Entity<?> root();
    Code:
       0: aload_0
       1: invokeinterface #74,  1           // InterfaceMethod parent:()Lio/fluxcapacitor/javaclient/modeling/Entity;
       6: invokestatic  #37                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
       9: invokedynamic #78,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      14: invokevirtual #47                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      17: aload_0
      18: invokevirtual #51                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #2                  // class io/fluxcapacitor/javaclient/modeling/Entity
      24: areturn

  public default java.lang.String lastEventId();
    Code:
       0: aload_0
       1: invokeinterface #79,  1           // InterfaceMethod root:()Lio/fluxcapacitor/javaclient/modeling/Entity;
       6: invokeinterface #82,  1           // InterfaceMethod lastEventId:()Ljava/lang/String;
      11: areturn

  public default java.lang.Long lastEventIndex();
    Code:
       0: aload_0
       1: invokeinterface #79,  1           // InterfaceMethod root:()Lio/fluxcapacitor/javaclient/modeling/Entity;
       6: invokeinterface #86,  1           // InterfaceMethod lastEventIndex:()Ljava/lang/Long;
      11: areturn

  public default java.time.Instant timestamp();
    Code:
       0: aload_0
       1: invokeinterface #79,  1           // InterfaceMethod root:()Lio/fluxcapacitor/javaclient/modeling/Entity;
       6: invokeinterface #90,  1           // InterfaceMethod timestamp:()Ljava/time/Instant;
      11: areturn

  public default long sequenceNumber();
    Code:
       0: aload_0
       1: invokeinterface #79,  1           // InterfaceMethod root:()Lio/fluxcapacitor/javaclient/modeling/Entity;
       6: invokeinterface #94,  1           // InterfaceMethod sequenceNumber:()J
      11: lreturn

  public default io.fluxcapacitor.javaclient.modeling.Aggregate rootAnnotation();
    Code:
       0: aload_0
       1: invokeinterface #79,  1           // InterfaceMethod root:()Lio/fluxcapacitor/javaclient/modeling/Entity;
       6: invokeinterface #98,  1           // InterfaceMethod type:()Ljava/lang/Class;
      11: invokestatic  #102                // Method io/fluxcapacitor/javaclient/modeling/DefaultEntityHelper.getRootAnnotation:(Ljava/lang/Class;)Lio/fluxcapacitor/javaclient/modeling/Aggregate;
      14: areturn

  public default io.fluxcapacitor.javaclient.modeling.Entity<T> previous();
    Code:
       0: aload_0
       1: invokeinterface #79,  1           // InterfaceMethod root:()Lio/fluxcapacitor/javaclient/modeling/Entity;
       6: invokeinterface #108,  1          // InterfaceMethod previous:()Lio/fluxcapacitor/javaclient/modeling/Entity;
      11: invokeinterface #111,  1          // InterfaceMethod allEntities:()Ljava/util/stream/Stream;
      16: aload_0
      17: invokedynamic #115,  0            // InvokeDynamic #3:test:(Lio/fluxcapacitor/javaclient/modeling/Entity;)Ljava/util/function/Predicate;
      22: invokeinterface #119,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      27: invokeinterface #125,  1          // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
      32: aconst_null
      33: invokevirtual #51                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      36: checkcast     #2                  // class io/fluxcapacitor/javaclient/modeling/Entity
      39: areturn

  public default io.fluxcapacitor.javaclient.modeling.Entity<T> playBackToEvent(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #128,  0            // InvokeDynamic #4:test:(Ljava/lang/String;)Ljava/util/function/Predicate;
       7: invokeinterface #131,  2          // InterfaceMethod playBackToCondition:(Ljava/util/function/Predicate;)Ljava/util/Optional;
      12: aload_0
      13: aload_1
      14: invokedynamic #135,  0            // InvokeDynamic #5:get:(Lio/fluxcapacitor/javaclient/modeling/Entity;Ljava/lang/String;)Ljava/util/function/Supplier;
      19: invokevirtual #138                // Method java/util/Optional.orElseThrow:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      22: checkcast     #2                  // class io/fluxcapacitor/javaclient/modeling/Entity
      25: areturn

  public default java.util.Optional<io.fluxcapacitor.javaclient.modeling.Entity<T>> playBackToCondition(java.util.function.Predicate<io.fluxcapacitor.javaclient.modeling.Entity<T>>);
    Code:
       0: aload_0
       1: astore_2
       2: aload_2
       3: ifnull        26
       6: aload_1
       7: aload_2
       8: invokeinterface #142,  2          // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      13: ifne          26
      16: aload_2
      17: invokeinterface #108,  1          // InterfaceMethod previous:()Lio/fluxcapacitor/javaclient/modeling/Entity;
      22: astore_2
      23: goto          2
      26: aload_2
      27: invokestatic  #37                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      30: areturn

  public abstract java.util.Collection<? extends io.fluxcapacitor.javaclient.modeling.Entity<?>> entities();

  public default java.util.stream.Stream<io.fluxcapacitor.javaclient.modeling.Entity<?>> allEntities();
    Code:
       0: aload_0
       1: invokestatic  #147                // InterfaceMethod java/util/stream/Stream.of:(Ljava/lang/Object;)Ljava/util/stream/Stream;
       4: aload_0
       5: invokeinterface #151,  1          // InterfaceMethod entities:()Ljava/util/Collection;
      10: invokeinterface #155,  1          // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      15: invokedynamic #160,  0            // InvokeDynamic #6:apply:()Ljava/util/function/Function;
      20: invokeinterface #161,  2          // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      25: invokestatic  #165                // InterfaceMethod java/util/stream/Stream.concat:(Ljava/util/stream/Stream;Ljava/util/stream/Stream;)Ljava/util/stream/Stream;
      28: areturn

  public default java.util.Optional<io.fluxcapacitor.javaclient.modeling.Entity<?>> getEntity(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: invokestatic  #67                 // Method java/util/Optional.empty:()Ljava/util/Optional;
       7: goto          32
      10: aload_0
      11: invokeinterface #111,  1          // InterfaceMethod allEntities:()Ljava/util/stream/Stream;
      16: aload_1
      17: invokedynamic #169,  0            // InvokeDynamic #7:test:(Ljava/lang/Object;)Ljava/util/function/Predicate;
      22: invokeinterface #119,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      27: invokeinterface #125,  1          // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
      32: areturn

  public default io.fluxcapacitor.javaclient.modeling.Entity<T> makeReadOnly();
    Code:
       0: aload_0
       1: instanceof    #172                // class io/fluxcapacitor/javaclient/modeling/ReadOnlyEntity
       4: ifeq          9
       7: aload_0
       8: areturn
       9: new           #172                // class io/fluxcapacitor/javaclient/modeling/ReadOnlyEntity
      12: dup
      13: aload_0
      14: invokespecial #174                // Method io/fluxcapacitor/javaclient/modeling/ReadOnlyEntity."<init>":(Lio/fluxcapacitor/javaclient/modeling/Entity;)V
      17: areturn

  public default java.util.Set<io.fluxcapacitor.common.api.modeling.Relationship> relationships();
    Code:
       0: aload_0
       1: invokeinterface #62,  1           // InterfaceMethod get:()Ljava/lang/Object;
       6: ifnonnull     13
       9: invokestatic  #178                // Method java/util/Collections.emptySet:()Ljava/util/Set;
      12: areturn
      13: aload_0
      14: invokeinterface #184,  1          // InterfaceMethod id:()Ljava/lang/Object;
      19: invokevirtual #187                // Method java/lang/Object.toString:()Ljava/lang/String;
      22: astore_1
      23: aload_0
      24: invokeinterface #98,  1           // InterfaceMethod type:()Ljava/lang/Class;
      29: invokevirtual #192                // Method java/lang/Class.getName:()Ljava/lang/String;
      32: astore_2
      33: aload_0
      34: invokeinterface #111,  1          // InterfaceMethod allEntities:()Ljava/util/stream/Stream;
      39: invokedynamic #195,  0            // InvokeDynamic #8:test:()Ljava/util/function/Predicate;
      44: invokeinterface #119,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      49: invokedynamic #198,  0            // InvokeDynamic #9:apply:()Ljava/util/function/Function;
      54: invokeinterface #161,  2          // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      59: aload_2
      60: aload_1
      61: invokedynamic #199,  0            // InvokeDynamic #10:apply:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/Function;
      66: invokeinterface #202,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      71: invokestatic  #204                // Method java/util/stream/Collectors.toSet:()Ljava/util/stream/Collector;
      74: invokeinterface #210,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      79: checkcast     #214                // class java/util/Set
      82: areturn

  public default java.util.Set<io.fluxcapacitor.common.api.modeling.Relationship> associations(io.fluxcapacitor.javaclient.modeling.Entity<?>);
    Code:
       0: new           #216                // class java/util/HashSet
       3: dup
       4: aload_0
       5: invokeinterface #218,  1          // InterfaceMethod relationships:()Ljava/util/Set;
      10: invokespecial #221                // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      13: astore_2
      14: aload_2
      15: aload_1
      16: invokeinterface #218,  1          // InterfaceMethod relationships:()Ljava/util/Set;
      21: invokeinterface #224,  2          // InterfaceMethod java/util/Set.removeAll:(Ljava/util/Collection;)Z
      26: pop
      27: aload_2
      28: areturn

  public default java.util.Set<io.fluxcapacitor.common.api.modeling.Relationship> dissociations(io.fluxcapacitor.javaclient.modeling.Entity<?>);
    Code:
       0: new           #216                // class java/util/HashSet
       3: dup
       4: aload_1
       5: invokeinterface #218,  1          // InterfaceMethod relationships:()Ljava/util/Set;
      10: invokespecial #221                // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      13: astore_2
      14: aload_2
      15: aload_0
      16: invokeinterface #218,  1          // InterfaceMethod relationships:()Ljava/util/Set;
      21: invokeinterface #224,  2          // InterfaceMethod java/util/Set.removeAll:(Ljava/util/Collection;)Z
      26: pop
      27: aload_2
      28: areturn

  public abstract io.fluxcapacitor.javaclient.modeling.Entity<T> update(java.util.function.UnaryOperator<T>);

  public default io.fluxcapacitor.javaclient.modeling.Entity<T> apply(java.lang.Object...);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #228                // InterfaceMethod java/util/List.of:([Ljava/lang/Object;)Ljava/util/List;
       5: invokeinterface #233,  2          // InterfaceMethod apply:(Ljava/util/Collection;)Lio/fluxcapacitor/javaclient/modeling/Entity;
      10: areturn

  public default io.fluxcapacitor.javaclient.modeling.Entity<T> apply(java.util.Collection<?>);
    Code:
       0: aload_0
       1: astore_2
       2: aload_1
       3: invokeinterface #236,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       8: astore_3
       9: aload_3
      10: invokeinterface #240,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          38
      18: aload_3
      19: invokeinterface #245,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: astore        4
      26: aload_2
      27: aload         4
      29: invokeinterface #248,  2          // InterfaceMethod apply:(Ljava/lang/Object;)Lio/fluxcapacitor/javaclient/modeling/Entity;
      34: astore_2
      35: goto          9
      38: aload_2
      39: areturn

  public default io.fluxcapacitor.javaclient.modeling.Entity<T> apply(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #251                // class io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage
       4: ifeq          21
       7: aload_0
       8: aload_1
       9: checkcast     #251                // class io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage
      12: invokevirtual #253                // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.toMessage:()Lio/fluxcapacitor/javaclient/common/Message;
      15: invokeinterface #257,  2          // InterfaceMethod apply:(Lio/fluxcapacitor/javaclient/common/Message;)Lio/fluxcapacitor/javaclient/modeling/Entity;
      20: areturn
      21: aload_0
      22: aload_1
      23: invokestatic  #260                // Method io/fluxcapacitor/javaclient/common/Message.asMessage:(Ljava/lang/Object;)Lio/fluxcapacitor/javaclient/common/Message;
      26: invokeinterface #257,  2          // InterfaceMethod apply:(Lio/fluxcapacitor/javaclient/common/Message;)Lio/fluxcapacitor/javaclient/modeling/Entity;
      31: areturn

  public default io.fluxcapacitor.javaclient.modeling.Entity<T> apply(java.lang.Object, io.fluxcapacitor.common.api.Metadata);
    Code:
       0: aload_0
       1: new           #261                // class io/fluxcapacitor/javaclient/common/Message
       4: dup
       5: aload_1
       6: aload_2
       7: invokespecial #266                // Method io/fluxcapacitor/javaclient/common/Message."<init>":(Ljava/lang/Object;Lio/fluxcapacitor/common/api/Metadata;)V
      10: invokeinterface #257,  2          // InterfaceMethod apply:(Lio/fluxcapacitor/javaclient/common/Message;)Lio/fluxcapacitor/javaclient/modeling/Entity;
      15: areturn

  public abstract io.fluxcapacitor.javaclient.modeling.Entity<T> apply(io.fluxcapacitor.javaclient.common.Message);

  public abstract <E extends java.lang.Exception> io.fluxcapacitor.javaclient.modeling.Entity<T> assertLegal(java.lang.Object) throws E;

  public default io.fluxcapacitor.javaclient.modeling.Entity<T> assertAndApply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #269,  2          // InterfaceMethod assertLegal:(Ljava/lang/Object;)Lio/fluxcapacitor/javaclient/modeling/Entity;
       7: aload_1
       8: invokeinterface #248,  2          // InterfaceMethod apply:(Ljava/lang/Object;)Lio/fluxcapacitor/javaclient/modeling/Entity;
      13: areturn

  public default io.fluxcapacitor.javaclient.modeling.Entity<T> assertAndApply(java.lang.Object, io.fluxcapacitor.common.api.Metadata);
    Code:
       0: aload_0
       1: new           #261                // class io/fluxcapacitor/javaclient/common/Message
       4: dup
       5: aload_1
       6: aload_2
       7: invokespecial #266                // Method io/fluxcapacitor/javaclient/common/Message."<init>":(Ljava/lang/Object;Lio/fluxcapacitor/common/api/Metadata;)V
      10: invokeinterface #272,  2          // InterfaceMethod assertAndApply:(Ljava/lang/Object;)Lio/fluxcapacitor/javaclient/modeling/Entity;
      15: areturn

  public default io.fluxcapacitor.javaclient.modeling.Entity<T> assertAndApply(java.lang.Object...);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #228                // InterfaceMethod java/util/List.of:([Ljava/lang/Object;)Ljava/util/List;
       5: invokeinterface #275,  2          // InterfaceMethod assertAndApply:(Ljava/util/Collection;)Lio/fluxcapacitor/javaclient/modeling/Entity;
      10: areturn

  public default io.fluxcapacitor.javaclient.modeling.Entity<T> assertAndApply(java.util.Collection<?>);
    Code:
       0: aload_0
       1: astore_2
       2: aload_1
       3: invokeinterface #236,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       8: astore_3
       9: aload_3
      10: invokeinterface #240,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          38
      18: aload_3
      19: invokeinterface #245,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: astore        4
      26: aload_2
      27: aload         4
      29: invokeinterface #272,  2          // InterfaceMethod assertAndApply:(Ljava/lang/Object;)Lio/fluxcapacitor/javaclient/modeling/Entity;
      34: astore_2
      35: goto          9
      38: aload_2
      39: areturn

  public default <E extends java.lang.Exception> io.fluxcapacitor.javaclient.modeling.Entity<T> assertThat(io.fluxcapacitor.javaclient.modeling.Entity$Validator<T, E>) throws E;
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #62,  1           // InterfaceMethod get:()Ljava/lang/Object;
       7: invokeinterface #277,  2          // InterfaceMethod io/fluxcapacitor/javaclient/modeling/Entity$Validator.validate:(Ljava/lang/Object;)V
      12: aload_0
      13: areturn

  public default <E extends java.lang.Exception> io.fluxcapacitor.javaclient.modeling.Entity<T> ensure(java.util.function.Predicate<T>, java.util.function.Function<T, E>) throws E;
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #62,  1           // InterfaceMethod get:()Ljava/lang/Object;
       7: invokeinterface #142,  2          // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      12: ifne          31
      15: aload_2
      16: aload_0
      17: invokeinterface #62,  1           // InterfaceMethod get:()Ljava/lang/Object;
      22: invokeinterface #71,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      27: checkcast     #283                // class java/lang/Exception
      30: athrow
      31: aload_0
      32: areturn

  public default java.lang.Iterable<io.fluxcapacitor.javaclient.modeling.Entity<?>> possibleTargets(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        53
       4: aload_0
       5: invokeinterface #151,  1          // InterfaceMethod entities:()Ljava/util/Collection;
      10: invokeinterface #236,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      15: astore_2
      16: aload_2
      17: invokeinterface #240,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          53
      25: aload_2
      26: invokeinterface #245,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #2                  // class io/fluxcapacitor/javaclient/modeling/Entity
      34: astore_3
      35: aload_3
      36: aload_1
      37: invokeinterface #285,  2          // InterfaceMethod isPossibleTarget:(Ljava/lang/Object;)Z
      42: ifeq          50
      45: aload_3
      46: invokestatic  #288                // InterfaceMethod java/util/List.of:(Ljava/lang/Object;)Ljava/util/List;
      49: areturn
      50: goto          16
      53: invokestatic  #291                // Method java/util/Collections.emptyList:()Ljava/util/List;
      56: areturn

  private boolean isPossibleTarget(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: invokeinterface #295,  1          // InterfaceMethod idProperty:()Ljava/lang/String;
      12: astore_2
      13: aload_0
      14: invokeinterface #184,  1          // InterfaceMethod id:()Ljava/lang/Object;
      19: astore_3
      20: aload_2
      21: ifnonnull     26
      24: iconst_1
      25: ireturn
      26: aload_3
      27: ifnonnull     41
      30: aload_0
      31: invokeinterface #62,  1           // InterfaceMethod get:()Ljava/lang/Object;
      36: ifnull        41
      39: iconst_0
      40: ireturn
      41: aload_1
      42: instanceof    #261                // class io/fluxcapacitor/javaclient/common/Message
      45: ifeq          58
      48: aload_1
      49: checkcast     #261                // class io/fluxcapacitor/javaclient/common/Message
      52: invokevirtual #298                // Method io/fluxcapacitor/javaclient/common/Message.getPayload:()Ljava/lang/Object;
      55: goto          59
      58: aload_1
      59: astore        4
      61: aload_3
      62: ifnonnull     72
      65: aload_2
      66: aload         4
      68: invokestatic  #301                // Method io/fluxcapacitor/common/reflection/ReflectionUtils.hasProperty:(Ljava/lang/String;Ljava/lang/Object;)Z
      71: ireturn
      72: aload_2
      73: aload         4
      75: invokestatic  #307                // Method io/fluxcapacitor/common/reflection/ReflectionUtils.readProperty:(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/Optional;
      78: aload         4
      80: invokedynamic #311,  0            // InvokeDynamic #11:get:(Ljava/lang/Object;)Ljava/util/function/Supplier;
      85: invokevirtual #314                // Method java/util/Optional.or:(Ljava/util/function/Supplier;)Ljava/util/Optional;
      88: aload_3
      89: dup
      90: invokestatic  #318                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      93: pop
      94: invokedynamic #323,  0            // InvokeDynamic #12:apply:(Ljava/lang/Object;)Ljava/util/function/Function;
      99: invokevirtual #47                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
     102: iconst_0
     103: invokestatic  #326                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     106: invokevirtual #51                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
     109: checkcast     #13                 // class java/lang/Boolean
     112: invokevirtual #15                 // Method java/lang/Boolean.booleanValue:()Z
     115: ifeq          120
     118: iconst_1
     119: ireturn
     120: aload_2
     121: aload         4
     123: invokestatic  #301                // Method io/fluxcapacitor/common/reflection/ReflectionUtils.hasProperty:(Ljava/lang/String;Ljava/lang/Object;)Z
     126: ifne          180
     129: aload_0
     130: invokeinterface #151,  1          // InterfaceMethod entities:()Ljava/util/Collection;
     135: invokeinterface #236,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     140: astore        5
     142: aload         5
     144: invokeinterface #240,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     149: ifeq          180
     152: aload         5
     154: invokeinterface #245,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     159: checkcast     #2                  // class io/fluxcapacitor/javaclient/modeling/Entity
     162: astore        6
     164: aload         6
     166: aload_1
     167: invokeinterface #285,  2          // InterfaceMethod isPossibleTarget:(Ljava/lang/Object;)Z
     172: ifeq          177
     175: iconst_1
     176: ireturn
     177: goto          142
     180: iconst_0
     181: ireturn

  private static java.util.Optional lambda$isPossibleTarget$10(java.lang.Object);
    Code:
       0: aload_0
       1: ldc_w         #330                // class io/fluxcapacitor/javaclient/publishing/routing/RoutingKey
       4: invokestatic  #332                // Method io/fluxcapacitor/common/reflection/ReflectionUtils.getAnnotatedPropertyValue:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/util/Optional;
       7: areturn

  private static io.fluxcapacitor.common.api.modeling.Relationship lambda$relationships$9(java.lang.String, java.lang.String, java.lang.Object);
    Code:
       0: invokestatic  #336                // Method io/fluxcapacitor/common/api/modeling/Relationship.builder:()Lio/fluxcapacitor/common/api/modeling/Relationship$RelationshipBuilder;
       3: aload_2
       4: invokevirtual #187                // Method java/lang/Object.toString:()Ljava/lang/String;
       7: invokevirtual #342                // Method io/fluxcapacitor/common/api/modeling/Relationship$RelationshipBuilder.entityId:(Ljava/lang/String;)Lio/fluxcapacitor/common/api/modeling/Relationship$RelationshipBuilder;
      10: aload_0
      11: invokevirtual #348                // Method io/fluxcapacitor/common/api/modeling/Relationship$RelationshipBuilder.aggregateType:(Ljava/lang/String;)Lio/fluxcapacitor/common/api/modeling/Relationship$RelationshipBuilder;
      14: aload_1
      15: invokevirtual #351                // Method io/fluxcapacitor/common/api/modeling/Relationship$RelationshipBuilder.aggregateId:(Ljava/lang/String;)Lio/fluxcapacitor/common/api/modeling/Relationship$RelationshipBuilder;
      18: invokevirtual #354                // Method io/fluxcapacitor/common/api/modeling/Relationship$RelationshipBuilder.build:()Lio/fluxcapacitor/common/api/modeling/Relationship;
      21: areturn

  private static java.util.stream.Stream lambda$relationships$8(io.fluxcapacitor.javaclient.modeling.Entity);
    Code:
       0: aload_0
       1: invokeinterface #184,  1          // InterfaceMethod id:()Ljava/lang/Object;
       6: invokestatic  #147                // InterfaceMethod java/util/stream/Stream.of:(Ljava/lang/Object;)Ljava/util/stream/Stream;
       9: aload_0
      10: invokeinterface #358,  1          // InterfaceMethod aliases:()Ljava/util/Collection;
      15: invokeinterface #155,  1          // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      20: invokestatic  #165                // InterfaceMethod java/util/stream/Stream.concat:(Ljava/util/stream/Stream;Ljava/util/stream/Stream;)Ljava/util/stream/Stream;
      23: areturn

  private static boolean lambda$relationships$7(io.fluxcapacitor.javaclient.modeling.Entity);
    Code:
       0: aload_0
       1: invokeinterface #184,  1          // InterfaceMethod id:()Ljava/lang/Object;
       6: ifnull        13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  private static boolean lambda$getEntity$6(java.lang.Object, io.fluxcapacitor.javaclient.modeling.Entity);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #184,  1          // InterfaceMethod id:()Ljava/lang/Object;
       7: invokevirtual #361                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      10: ifne          28
      13: aload_1
      14: invokeinterface #358,  1          // InterfaceMethod aliases:()Ljava/util/Collection;
      19: aload_0
      20: invokeinterface #364,  2          // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
      25: ifeq          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  private java.lang.IllegalStateException lambda$playBackToEvent$5(java.lang.String);
    Code:
       0: new           #367                // class java/lang/IllegalStateException
       3: dup
       4: ldc_w         #369                // String Could not load aggregate %s of type %s for event %s. Aggregate (%s) started at event %s
       7: iconst_5
       8: anewarray     #188                // class java/lang/Object
      11: dup
      12: iconst_0
      13: aload_0
      14: invokeinterface #184,  1          // InterfaceMethod id:()Ljava/lang/Object;
      19: aastore
      20: dup
      21: iconst_1
      22: aload_0
      23: invokeinterface #98,  1           // InterfaceMethod type:()Ljava/lang/Class;
      28: invokevirtual #371                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      31: aastore
      32: dup
      33: iconst_2
      34: aload_1
      35: aastore
      36: dup
      37: iconst_3
      38: aload_0
      39: aastore
      40: dup
      41: iconst_4
      42: aload_0
      43: invokeinterface #82,  1           // InterfaceMethod lastEventId:()Ljava/lang/String;
      48: aastore
      49: invokestatic  #374                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      52: invokespecial #380                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      55: areturn

  private static boolean lambda$playBackToEvent$4(java.lang.String, io.fluxcapacitor.javaclient.modeling.Entity);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #82,  1           // InterfaceMethod lastEventId:()Ljava/lang/String;
       7: invokestatic  #383                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      10: ireturn

  private boolean lambda$previous$3(io.fluxcapacitor.javaclient.modeling.Entity);
    Code:
       0: aload_1
       1: invokeinterface #184,  1          // InterfaceMethod id:()Ljava/lang/Object;
       6: aload_0
       7: invokeinterface #184,  1          // InterfaceMethod id:()Ljava/lang/Object;
      12: invokestatic  #383                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      15: ifeq          40
      18: aload_1
      19: invokeinterface #98,  1           // InterfaceMethod type:()Ljava/lang/Class;
      24: aload_0
      25: invokeinterface #98,  1           // InterfaceMethod type:()Ljava/lang/Class;
      30: invokevirtual #386                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      33: ifeq          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn

  private static java.lang.Class lambda$getAggregateType$2(java.lang.String);
    Code:
       0: aload_0
       1: aconst_null
       2: invokestatic  #390                // Method io/fluxcapacitor/common/reflection/ReflectionUtils.classForName:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;
       5: areturn

  private static java.lang.Boolean lambda$static$1();
    Code:
       0: iconst_0
       1: invokestatic  #326                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       4: areturn

  private static java.lang.Boolean lambda$static$0();
    Code:
       0: iconst_0
       1: invokestatic  #326                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       4: areturn

  static {};
    Code:
       0: invokedynamic #394,  0            // InvokeDynamic #13:get:()Ljava/util/function/Supplier;
       5: invokestatic  #397                // Method java/lang/ThreadLocal.withInitial:(Ljava/util/function/Supplier;)Ljava/lang/ThreadLocal;
       8: putstatic     #1                  // Field loading:Ljava/lang/ThreadLocal;
      11: invokedynamic #401,  0            // InvokeDynamic #14:get:()Ljava/util/function/Supplier;
      16: invokestatic  #397                // Method java/lang/ThreadLocal.withInitial:(Ljava/util/function/Supplier;)Ljava/lang/ThreadLocal;
      19: putstatic     #19                 // Field applying:Ljava/lang/ThreadLocal;
      22: return
}
