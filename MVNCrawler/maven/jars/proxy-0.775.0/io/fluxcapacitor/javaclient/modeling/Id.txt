Compiled from "Id.java"
public abstract class io.fluxcapacitor.javaclient.modeling.Id<T> {
  java.lang.String functionalId;

  java.lang.Class<T> type;

  java.lang.String repositoryId;

  protected io.fluxcapacitor.javaclient.modeling.Id(java.lang.Object, java.lang.Class<T>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: ldc           #1                  // String
       5: invokespecial #3                  // Method "<init>":(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)V
       8: return

  protected io.fluxcapacitor.javaclient.modeling.Id(java.lang.Object, java.lang.Class<T>, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iconst_1
       5: invokespecial #9                  // Method "<init>":(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Z)V
       8: return

  protected io.fluxcapacitor.javaclient.modeling.Id(java.lang.Object, java.lang.Class<T>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: ldc           #1                  // String
       5: iload_3
       6: invokespecial #9                  // Method "<init>":(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Z)V
       9: return

  protected io.fluxcapacitor.javaclient.modeling.Id(java.lang.Object, java.lang.Class<T>, java.lang.String, boolean);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #17                 // class java/lang/NullPointerException
      11: dup
      12: ldc           #19                 // String functionalId is marked non-null but is null
      14: invokespecial #21                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_2
      19: ifnonnull     32
      22: new           #17                 // class java/lang/NullPointerException
      25: dup
      26: ldc           #24                 // String type is marked non-null but is null
      28: invokespecial #21                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: aload_3
      33: ifnonnull     46
      36: new           #17                 // class java/lang/NullPointerException
      39: dup
      40: ldc           #26                 // String prefix is marked non-null but is null
      42: invokespecial #21                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: aload_0
      47: aload_1
      48: invokevirtual #28                 // Method java/lang/Object.toString:()Ljava/lang/String;
      51: putfield      #32                 // Field functionalId:Ljava/lang/String;
      54: aload_0
      55: aload_2
      56: putfield      #36                 // Field type:Ljava/lang/Class;
      59: aload_0
      60: iload         4
      62: ifeq          78
      65: aload_3
      66: aload_0
      67: getfield      #32                 // Field functionalId:Ljava/lang/String;
      70: invokedynamic #40,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      75: goto          91
      78: aload_3
      79: aload_0
      80: getfield      #32                 // Field functionalId:Ljava/lang/String;
      83: invokevirtual #44                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      86: invokedynamic #40,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      91: putfield      #49                 // Field repositoryId:Ljava/lang/String;
      94: return

  public final java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #49                 // Field repositoryId:Ljava/lang/String;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #52                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #52                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #4                  // class io/fluxcapacitor/javaclient/modeling/Id
      28: astore_2
      29: aload_0
      30: getfield      #32                 // Field functionalId:Ljava/lang/String;
      33: aload_2
      34: getfield      #32                 // Field functionalId:Ljava/lang/String;
      37: invokevirtual #56                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      40: ifeq          75
      43: aload_0
      44: getfield      #36                 // Field type:Ljava/lang/Class;
      47: aload_2
      48: getfield      #36                 // Field type:Ljava/lang/Class;
      51: invokevirtual #60                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      54: ifeq          75
      57: aload_0
      58: getfield      #49                 // Field repositoryId:Ljava/lang/String;
      61: aload_2
      62: getfield      #49                 // Field repositoryId:Ljava/lang/String;
      65: invokevirtual #56                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      68: ifeq          75
      71: iconst_1
      72: goto          76
      75: iconst_0
      76: ireturn

  public int hashCode();
    Code:
       0: iconst_3
       1: anewarray     #13                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #32                 // Field functionalId:Ljava/lang/String;
      10: aastore
      11: dup
      12: iconst_1
      13: aload_0
      14: getfield      #36                 // Field type:Ljava/lang/Class;
      17: aastore
      18: dup
      19: iconst_2
      20: aload_0
      21: getfield      #49                 // Field repositoryId:Ljava/lang/String;
      24: aastore
      25: invokestatic  #61                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
      28: ireturn

  public java.lang.String getFunctionalId();
    Code:
       0: aload_0
       1: getfield      #32                 // Field functionalId:Ljava/lang/String;
       4: areturn

  public java.lang.Class<T> getType();
    Code:
       0: aload_0
       1: getfield      #36                 // Field type:Ljava/lang/Class;
       4: areturn
}
