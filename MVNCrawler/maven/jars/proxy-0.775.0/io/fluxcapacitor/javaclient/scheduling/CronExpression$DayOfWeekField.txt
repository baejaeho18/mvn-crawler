Compiled from "CronExpression.java"
class io.fluxcapacitor.javaclient.scheduling.CronExpression$DayOfWeekField extends io.fluxcapacitor.javaclient.scheduling.CronExpression$BasicField {
  io.fluxcapacitor.javaclient.scheduling.CronExpression$DayOfWeekField(java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #1                  // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType.DAY_OF_WEEK:Lio/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType;
       4: aload_1
       5: invokespecial #7                  // Method io/fluxcapacitor/javaclient/scheduling/CronExpression$BasicField."<init>":(Lio/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType;Ljava/lang/String;)V
       8: return

  boolean matches(java.time.LocalDate);
    Code:
       0: aload_0
       1: getfield      #13                 // Field parts:Ljava/util/List;
       4: invokeinterface #19,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          181
      19: aload_2
      20: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #35                 // class io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart
      28: astore_3
      29: ldc           #37                 // String L
      31: aload_3
      32: getfield      #39                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.modifier:Ljava/lang/String;
      35: invokevirtual #43                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      38: ifeq          92
      41: aload_1
      42: invokevirtual #49                 // Method java/time/LocalDate.getYear:()I
      45: aload_1
      46: invokevirtual #55                 // Method java/time/LocalDate.getMonth:()Ljava/time/Month;
      49: invokevirtual #59                 // Method java/time/Month.getValue:()I
      52: invokestatic  #64                 // Method java/time/YearMonth.of:(II)Ljava/time/YearMonth;
      55: astore        4
      57: aload_1
      58: invokevirtual #70                 // Method java/time/LocalDate.getDayOfWeek:()Ljava/time/DayOfWeek;
      61: aload_3
      62: getfield      #74                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.from:I
      65: invokestatic  #78                 // Method java/time/DayOfWeek.of:(I)Ljava/time/DayOfWeek;
      68: if_acmpne     90
      71: aload_1
      72: invokevirtual #83                 // Method java/time/LocalDate.getDayOfMonth:()I
      75: aload         4
      77: invokevirtual #86                 // Method java/time/YearMonth.lengthOfMonth:()I
      80: bipush        7
      82: isub
      83: if_icmple     90
      86: iconst_1
      87: goto          91
      90: iconst_0
      91: ireturn
      92: ldc           #89                 // String #
      94: aload_3
      95: getfield      #91                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.incrementModifier:Ljava/lang/String;
      98: invokevirtual #43                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     101: ifeq          161
     104: aload_1
     105: invokevirtual #70                 // Method java/time/LocalDate.getDayOfWeek:()Ljava/time/DayOfWeek;
     108: aload_3
     109: getfield      #74                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.from:I
     112: invokestatic  #78                 // Method java/time/DayOfWeek.of:(I)Ljava/time/DayOfWeek;
     115: if_acmpne     159
     118: aload_1
     119: invokevirtual #83                 // Method java/time/LocalDate.getDayOfMonth:()I
     122: bipush        7
     124: idiv
     125: istore        4
     127: aload_3
     128: getfield      #94                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.increment:I
     131: aload_1
     132: invokevirtual #83                 // Method java/time/LocalDate.getDayOfMonth:()I
     135: bipush        7
     137: irem
     138: ifne          146
     141: iload         4
     143: goto          150
     146: iload         4
     148: iconst_1
     149: iadd
     150: if_icmpne     157
     153: iconst_1
     154: goto          158
     157: iconst_0
     158: ireturn
     159: iconst_0
     160: ireturn
     161: aload_0
     162: aload_1
     163: invokevirtual #70                 // Method java/time/LocalDate.getDayOfWeek:()Ljava/time/DayOfWeek;
     166: invokevirtual #97                 // Method java/time/DayOfWeek.getValue:()I
     169: aload_3
     170: invokevirtual #98                 // Method matches:(ILio/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart;)Z
     173: ifeq          178
     176: iconst_1
     177: ireturn
     178: goto          10
     181: iconst_0
     182: ireturn

  protected int mapValue(java.lang.String);
    Code:
       0: ldc           #102                // String 0
       2: aload_1
       3: invokevirtual #43                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifeq          14
       9: bipush        7
      11: goto          19
      14: aload_0
      15: aload_1
      16: invokespecial #104                // Method io/fluxcapacitor/javaclient/scheduling/CronExpression$BasicField.mapValue:(Ljava/lang/String;)I
      19: ireturn

  protected boolean matches(int, io.fluxcapacitor.javaclient.scheduling.CronExpression$FieldPart);
    Code:
       0: ldc           #108                // String ?
       2: aload_2
       3: getfield      #39                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.modifier:Ljava/lang/String;
       6: invokevirtual #43                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       9: ifne          21
      12: aload_0
      13: iload_1
      14: aload_2
      15: invokespecial #110                // Method io/fluxcapacitor/javaclient/scheduling/CronExpression$BasicField.matches:(ILio/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart;)Z
      18: ifeq          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  protected void validatePart(io.fluxcapacitor.javaclient.scheduling.CronExpression$FieldPart);
    Code:
       0: aload_1
       1: getfield      #39                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.modifier:Ljava/lang/String;
       4: ifnull        61
       7: iconst_2
       8: anewarray     #44                 // class java/lang/String
      11: dup
      12: iconst_0
      13: ldc           #37                 // String L
      15: aastore
      16: dup
      17: iconst_1
      18: ldc           #108                // String ?
      20: aastore
      21: invokestatic  #111                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      24: aload_1
      25: getfield      #39                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.modifier:Ljava/lang/String;
      28: invokeinterface #117,  2          // InterfaceMethod java/util/List.indexOf:(Ljava/lang/Object;)I
      33: iconst_m1
      34: if_icmpne     61
      37: new           #121                // class java/lang/IllegalArgumentException
      40: dup
      41: ldc           #123                // String Invalid modifier [%s]
      43: iconst_1
      44: anewarray     #125                // class java/lang/Object
      47: dup
      48: iconst_0
      49: aload_1
      50: getfield      #39                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.modifier:Ljava/lang/String;
      53: aastore
      54: invokestatic  #127                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      57: invokespecial #131                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      60: athrow
      61: aload_1
      62: getfield      #91                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.incrementModifier:Ljava/lang/String;
      65: ifnull        122
      68: iconst_2
      69: anewarray     #44                 // class java/lang/String
      72: dup
      73: iconst_0
      74: ldc           #134                // String /
      76: aastore
      77: dup
      78: iconst_1
      79: ldc           #89                 // String #
      81: aastore
      82: invokestatic  #111                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      85: aload_1
      86: getfield      #91                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.incrementModifier:Ljava/lang/String;
      89: invokeinterface #117,  2          // InterfaceMethod java/util/List.indexOf:(Ljava/lang/Object;)I
      94: iconst_m1
      95: if_icmpne     122
      98: new           #121                // class java/lang/IllegalArgumentException
     101: dup
     102: ldc           #136                // String Invalid increment modifier [%s]
     104: iconst_1
     105: anewarray     #125                // class java/lang/Object
     108: dup
     109: iconst_0
     110: aload_1
     111: getfield      #91                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.incrementModifier:Ljava/lang/String;
     114: aastore
     115: invokestatic  #127                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     118: invokespecial #131                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     121: athrow
     122: return
}
