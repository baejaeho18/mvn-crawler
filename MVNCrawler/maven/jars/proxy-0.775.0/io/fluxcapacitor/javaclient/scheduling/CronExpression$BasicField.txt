Compiled from "CronExpression.java"
abstract class io.fluxcapacitor.javaclient.scheduling.CronExpression$BasicField {
  private static final java.util.regex.Pattern CRON_FIELD_REGEXP;

  final io.fluxcapacitor.javaclient.scheduling.CronExpression$CronFieldType fieldType;

  final java.util.List<io.fluxcapacitor.javaclient.scheduling.CronExpression$FieldPart> parts;

  private io.fluxcapacitor.javaclient.scheduling.CronExpression$BasicField(io.fluxcapacitor.javaclient.scheduling.CronExpression$CronFieldType, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class java/util/ArrayList
       8: dup
       9: invokespecial #9                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #10                 // Field parts:Ljava/util/List;
      15: aload_0
      16: aload_1
      17: putfield      #16                 // Field fieldType:Lio/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType;
      20: aload_0
      21: aload_2
      22: invokevirtual #20                 // Method parse:(Ljava/lang/String;)V
      25: return

  private void parse(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #24                 // String ,
       3: invokevirtual #26                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
       6: astore_2
       7: aload_2
       8: astore_3
       9: aload_3
      10: arraylength
      11: istore        4
      13: iconst_0
      14: istore        5
      16: iload         5
      18: iload         4
      20: if_icmpge     369
      23: aload_3
      24: iload         5
      26: aaload
      27: astore        6
      29: getstatic     #32                 // Field CRON_FIELD_REGEXP:Ljava/util/regex/Pattern;
      32: aload         6
      34: invokevirtual #36                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      37: astore        7
      39: aload         7
      41: invokevirtual #42                 // Method java/util/regex/Matcher.matches:()Z
      44: ifne          66
      47: new           #48                 // class java/lang/IllegalArgumentException
      50: dup
      51: aload         6
      53: aload_0
      54: getfield      #16                 // Field fieldType:Lio/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType;
      57: invokedynamic #50,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;Lio/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType;)Ljava/lang/String;
      62: invokespecial #54                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      65: athrow
      66: aload         7
      68: ldc           #56                 // String start
      70: invokevirtual #58                 // Method java/util/regex/Matcher.group:(Ljava/lang/String;)Ljava/lang/String;
      73: astore        8
      75: aload         7
      77: ldc           #62                 // String mod
      79: invokevirtual #58                 // Method java/util/regex/Matcher.group:(Ljava/lang/String;)Ljava/lang/String;
      82: astore        9
      84: aload         7
      86: ldc           #64                 // String end
      88: invokevirtual #58                 // Method java/util/regex/Matcher.group:(Ljava/lang/String;)Ljava/lang/String;
      91: astore        10
      93: aload         7
      95: ldc           #66                 // String incmod
      97: invokevirtual #58                 // Method java/util/regex/Matcher.group:(Ljava/lang/String;)Ljava/lang/String;
     100: astore        11
     102: aload         7
     104: ldc           #68                 // String inc
     106: invokevirtual #58                 // Method java/util/regex/Matcher.group:(Ljava/lang/String;)Ljava/lang/String;
     109: astore        12
     111: new           #70                 // class io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart
     114: dup
     115: invokespecial #72                 // Method io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart."<init>":()V
     118: astore        13
     120: aload         13
     122: sipush        999
     125: putfield      #73                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.increment:I
     128: aload         8
     130: ifnull        209
     133: aload         13
     135: aload_0
     136: aload         8
     138: invokevirtual #77                 // Method mapValue:(Ljava/lang/String;)I
     141: putfield      #81                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.from:I
     144: aload         13
     146: aload         9
     148: putfield      #84                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.modifier:Ljava/lang/String;
     151: aload         10
     153: ifnull        176
     156: aload         13
     158: aload_0
     159: aload         10
     161: invokevirtual #77                 // Method mapValue:(Ljava/lang/String;)I
     164: putfield      #88                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.to:I
     167: aload         13
     169: iconst_1
     170: putfield      #73                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.increment:I
     173: goto          317
     176: aload         12
     178: ifnull        196
     181: aload         13
     183: aload_0
     184: getfield      #16                 // Field fieldType:Lio/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType;
     187: getfield      #91                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType.to:I
     190: putfield      #88                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.to:I
     193: goto          317
     196: aload         13
     198: aload         13
     200: getfield      #81                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.from:I
     203: putfield      #88                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.to:I
     206: goto          317
     209: aload         7
     211: ldc           #94                 // String all
     213: invokevirtual #58                 // Method java/util/regex/Matcher.group:(Ljava/lang/String;)Ljava/lang/String;
     216: ifnull        252
     219: aload         13
     221: aload_0
     222: getfield      #16                 // Field fieldType:Lio/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType;
     225: getfield      #96                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType.from:I
     228: putfield      #81                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.from:I
     231: aload         13
     233: aload_0
     234: getfield      #16                 // Field fieldType:Lio/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType;
     237: getfield      #91                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType.to:I
     240: putfield      #88                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.to:I
     243: aload         13
     245: iconst_1
     246: putfield      #73                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.increment:I
     249: goto          317
     252: aload         7
     254: ldc           #97                 // String ignore
     256: invokevirtual #58                 // Method java/util/regex/Matcher.group:(Ljava/lang/String;)Ljava/lang/String;
     259: ifnull        277
     262: aload         13
     264: aload         7
     266: ldc           #97                 // String ignore
     268: invokevirtual #58                 // Method java/util/regex/Matcher.group:(Ljava/lang/String;)Ljava/lang/String;
     271: putfield      #84                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.modifier:Ljava/lang/String;
     274: goto          317
     277: aload         7
     279: ldc           #99                 // String last
     281: invokevirtual #58                 // Method java/util/regex/Matcher.group:(Ljava/lang/String;)Ljava/lang/String;
     284: ifnull        302
     287: aload         13
     289: aload         7
     291: ldc           #99                 // String last
     293: invokevirtual #58                 // Method java/util/regex/Matcher.group:(Ljava/lang/String;)Ljava/lang/String;
     296: putfield      #84                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.modifier:Ljava/lang/String;
     299: goto          317
     302: new           #48                 // class java/lang/IllegalArgumentException
     305: dup
     306: aload         6
     308: invokedynamic #101,  0            // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
     313: invokespecial #54                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     316: athrow
     317: aload         12
     319: ifnull        339
     322: aload         13
     324: aload         11
     326: putfield      #103                // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.incrementModifier:Ljava/lang/String;
     329: aload         13
     331: aload         12
     333: invokestatic  #106                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     336: putfield      #73                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.increment:I
     339: aload_0
     340: aload         13
     342: invokevirtual #111                // Method validateRange:(Lio/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart;)V
     345: aload_0
     346: aload         13
     348: invokevirtual #115                // Method validatePart:(Lio/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart;)V
     351: aload_0
     352: getfield      #10                 // Field parts:Ljava/util/List;
     355: aload         13
     357: invokeinterface #118,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     362: pop
     363: iinc          5, 1
     366: goto          16
     369: aload_0
     370: getfield      #10                 // Field parts:Ljava/util/List;
     373: invokestatic  #124                // Method java/util/Collections.sort:(Ljava/util/List;)V
     376: return

  protected void validatePart(io.fluxcapacitor.javaclient.scheduling.CronExpression$FieldPart);
    Code:
       0: aload_1
       1: getfield      #84                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.modifier:Ljava/lang/String;
       4: ifnull        31
       7: new           #48                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #130                // String Invalid modifier [%s]
      13: iconst_1
      14: anewarray     #2                  // class java/lang/Object
      17: dup
      18: iconst_0
      19: aload_1
      20: getfield      #84                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.modifier:Ljava/lang/String;
      23: aastore
      24: invokestatic  #132                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      27: invokespecial #54                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_1
      32: getfield      #103                // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.incrementModifier:Ljava/lang/String;
      35: ifnull        74
      38: ldc           #136                // String /
      40: aload_1
      41: getfield      #103                // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.incrementModifier:Ljava/lang/String;
      44: invokevirtual #138                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      47: ifne          74
      50: new           #48                 // class java/lang/IllegalArgumentException
      53: dup
      54: ldc           #141                // String Invalid increment modifier [%s]
      56: iconst_1
      57: anewarray     #2                  // class java/lang/Object
      60: dup
      61: iconst_0
      62: aload_1
      63: getfield      #103                // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.incrementModifier:Ljava/lang/String;
      66: aastore
      67: invokestatic  #132                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      70: invokespecial #54                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      73: athrow
      74: return

  private void validateRange(io.fluxcapacitor.javaclient.scheduling.CronExpression$FieldPart);
    Code:
       0: aload_1
       1: getfield      #81                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.from:I
       4: iconst_m1
       5: if_icmpeq     22
       8: aload_1
       9: getfield      #81                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.from:I
      12: aload_0
      13: getfield      #16                 // Field fieldType:Lio/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType;
      16: getfield      #96                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType.from:I
      19: if_icmplt     44
      22: aload_1
      23: getfield      #88                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.to:I
      26: iconst_m1
      27: if_icmpeq     107
      30: aload_1
      31: getfield      #88                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.to:I
      34: aload_0
      35: getfield      #16                 // Field fieldType:Lio/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType;
      38: getfield      #91                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType.to:I
      41: if_icmple     107
      44: new           #48                 // class java/lang/IllegalArgumentException
      47: dup
      48: ldc           #143                // String Invalid interval [%s-%s], must be %s<=_<=%s
      50: iconst_4
      51: anewarray     #2                  // class java/lang/Object
      54: dup
      55: iconst_0
      56: aload_1
      57: getfield      #81                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.from:I
      60: invokestatic  #145                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      63: aastore
      64: dup
      65: iconst_1
      66: aload_1
      67: getfield      #88                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.to:I
      70: invokestatic  #145                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      73: aastore
      74: dup
      75: iconst_2
      76: aload_0
      77: getfield      #16                 // Field fieldType:Lio/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType;
      80: getfield      #96                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType.from:I
      83: invokestatic  #145                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      86: aastore
      87: dup
      88: iconst_3
      89: aload_0
      90: getfield      #16                 // Field fieldType:Lio/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType;
      93: getfield      #91                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType.to:I
      96: invokestatic  #145                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      99: aastore
     100: invokestatic  #132                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     103: invokespecial #54                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     106: athrow
     107: aload_1
     108: getfield      #81                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.from:I
     111: iconst_m1
     112: if_icmpeq     197
     115: aload_1
     116: getfield      #88                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.to:I
     119: iconst_m1
     120: if_icmpeq     197
     123: aload_1
     124: getfield      #81                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.from:I
     127: aload_1
     128: getfield      #88                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.to:I
     131: if_icmple     197
     134: new           #48                 // class java/lang/IllegalArgumentException
     137: dup
     138: ldc           #149                // String Invalid interval [%s-%s].  Rolling periods are not supported (ex. 5-1, only 1-5) since this won\'t give a deterministic result. Must be %s<=_<=%s
     140: iconst_4
     141: anewarray     #2                  // class java/lang/Object
     144: dup
     145: iconst_0
     146: aload_1
     147: getfield      #81                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.from:I
     150: invokestatic  #145                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     153: aastore
     154: dup
     155: iconst_1
     156: aload_1
     157: getfield      #88                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.to:I
     160: invokestatic  #145                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     163: aastore
     164: dup
     165: iconst_2
     166: aload_0
     167: getfield      #16                 // Field fieldType:Lio/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType;
     170: getfield      #96                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType.from:I
     173: invokestatic  #145                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     176: aastore
     177: dup
     178: iconst_3
     179: aload_0
     180: getfield      #16                 // Field fieldType:Lio/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType;
     183: getfield      #91                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType.to:I
     186: invokestatic  #145                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     189: aastore
     190: invokestatic  #132                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     193: invokespecial #54                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     196: athrow
     197: return

  protected int mapValue(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #16                 // Field fieldType:Lio/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType;
       4: getfield      #151                // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType.names:Ljava/util/List;
       7: ifnull        44
      10: aload_0
      11: getfield      #16                 // Field fieldType:Lio/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType;
      14: getfield      #151                // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType.names:Ljava/util/List;
      17: aload_1
      18: invokestatic  #154                // Method java/util/Locale.getDefault:()Ljava/util/Locale;
      21: invokevirtual #160                // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;
      24: invokeinterface #164,  2          // InterfaceMethod java/util/List.indexOf:(Ljava/lang/Object;)I
      29: dup
      30: istore_2
      31: iflt          44
      34: iload_2
      35: aload_0
      36: getfield      #16                 // Field fieldType:Lio/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType;
      39: getfield      #96                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType.from:I
      42: iadd
      43: ireturn
      44: aload_1
      45: invokestatic  #106                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      48: ireturn

  protected boolean matches(int, io.fluxcapacitor.javaclient.scheduling.CronExpression$FieldPart);
    Code:
       0: iload_1
       1: aload_2
       2: getfield      #81                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.from:I
       5: if_icmplt     32
       8: iload_1
       9: aload_2
      10: getfield      #88                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.to:I
      13: if_icmpgt     32
      16: iload_1
      17: aload_2
      18: getfield      #81                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.from:I
      21: isub
      22: aload_2
      23: getfield      #73                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.increment:I
      26: irem
      27: ifne          32
      30: iconst_1
      31: ireturn
      32: iconst_0
      33: ireturn

  protected int nextMatch(int, io.fluxcapacitor.javaclient.scheduling.CronExpression$FieldPart);
    Code:
       0: iload_1
       1: aload_2
       2: getfield      #88                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.to:I
       5: if_icmple     10
       8: iconst_m1
       9: ireturn
      10: iload_1
      11: aload_2
      12: getfield      #81                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.from:I
      15: invokestatic  #168                // Method java/lang/Math.max:(II)I
      18: istore_3
      19: aload_2
      20: getfield      #73                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.increment:I
      23: iconst_1
      24: if_icmpeq     35
      27: iload_3
      28: aload_2
      29: getfield      #81                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.from:I
      32: if_icmpne     37
      35: iload_3
      36: ireturn
      37: iload_3
      38: aload_2
      39: getfield      #81                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.from:I
      42: isub
      43: aload_2
      44: getfield      #73                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.increment:I
      47: irem
      48: istore        4
      50: iload         4
      52: ifeq          65
      55: iload_3
      56: aload_2
      57: getfield      #73                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.increment:I
      60: iload         4
      62: isub
      63: iadd
      64: istore_3
      65: iload_3
      66: aload_2
      67: getfield      #88                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart.to:I
      70: if_icmpgt     77
      73: iload_3
      74: goto          78
      77: iconst_m1
      78: ireturn

  static {};
    Code:
       0: ldc           #174                // String (?:                                             # start of group 1\n   (?:(?<all>\\*)|(?<ignore>\\?)|(?<last>L))  # global flag (L, ?, *)\n | (?<start>[0-9]{1,2}|[a-z]{3,3})              # or start number or symbol\n      (?:                                        # start of group 2\n         (?<mod>L|W)                             # modifier (L,W)\n       | -(?<end>[0-9]{1,2}|[a-z]{3,3})        # or end nummer or symbol (in range)\n      )?                                         # end of group 2\n)                                              # end of group 1\n(?:(?<incmod>/|\\#)(?<inc>[0-9]{1,7}))?        # increment and increment modifier (/ or \\#)\n
       2: bipush        6
       4: invokestatic  #176                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;
       7: putstatic     #32                 // Field CRON_FIELD_REGEXP:Ljava/util/regex/Pattern;
      10: return
}
