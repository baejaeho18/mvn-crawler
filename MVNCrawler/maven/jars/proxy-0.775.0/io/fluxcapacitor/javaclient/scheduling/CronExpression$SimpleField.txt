Compiled from "CronExpression.java"
class io.fluxcapacitor.javaclient.scheduling.CronExpression$SimpleField extends io.fluxcapacitor.javaclient.scheduling.CronExpression$BasicField {
  io.fluxcapacitor.javaclient.scheduling.CronExpression$SimpleField(io.fluxcapacitor.javaclient.scheduling.CronExpression$CronFieldType, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method io/fluxcapacitor/javaclient/scheduling/CronExpression$BasicField."<init>":(Lio/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType;Ljava/lang/String;)V
       6: return

  public boolean matches(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #7                  // Field fieldType:Lio/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType;
       5: getfield      #13                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType.from:I
       8: if_icmplt     65
      11: iload_1
      12: aload_0
      13: getfield      #7                  // Field fieldType:Lio/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType;
      16: getfield      #19                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType.to:I
      19: if_icmpgt     65
      22: aload_0
      23: getfield      #22                 // Field parts:Ljava/util/List;
      26: invokeinterface #26,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      31: astore_2
      32: aload_2
      33: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      38: ifeq          65
      41: aload_2
      42: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #42                 // class io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart
      50: astore_3
      51: aload_0
      52: iload_1
      53: aload_3
      54: invokevirtual #44                 // Method matches:(ILio/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart;)Z
      57: ifeq          62
      60: iconst_1
      61: ireturn
      62: goto          32
      65: iconst_0
      66: ireturn

  protected boolean nextMatch(java.time.ZonedDateTime[]);
    Code:
       0: aload_0
       1: getfield      #7                  // Field fieldType:Lio/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType;
       4: aload_1
       5: iconst_0
       6: aaload
       7: invokevirtual #48                 // Method io/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType.getValue:(Ljava/time/ZonedDateTime;)I
      10: istore_2
      11: aload_0
      12: getfield      #22                 // Field parts:Ljava/util/List;
      15: invokeinterface #26,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      20: astore_3
      21: aload_3
      22: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          82
      30: aload_3
      31: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #42                 // class io/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart
      39: astore        4
      41: aload_0
      42: iload_2
      43: aload         4
      45: invokevirtual #52                 // Method nextMatch:(ILio/fluxcapacitor/javaclient/scheduling/CronExpression$FieldPart;)I
      48: istore        5
      50: iload         5
      52: iconst_m1
      53: if_icmple     79
      56: iload         5
      58: iload_2
      59: if_icmpeq     77
      62: aload_1
      63: iconst_0
      64: aload_0
      65: getfield      #7                  // Field fieldType:Lio/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType;
      68: aload_1
      69: iconst_0
      70: aaload
      71: iload         5
      73: invokevirtual #56                 // Method io/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType.setValue:(Ljava/time/ZonedDateTime;I)Ljava/time/ZonedDateTime;
      76: aastore
      77: iconst_1
      78: ireturn
      79: goto          21
      82: aload_1
      83: iconst_0
      84: aload_0
      85: getfield      #7                  // Field fieldType:Lio/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType;
      88: aload_1
      89: iconst_0
      90: aaload
      91: invokevirtual #60                 // Method io/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType.overflow:(Ljava/time/ZonedDateTime;)Ljava/time/ZonedDateTime;
      94: aastore
      95: iconst_0
      96: ireturn
}
