Compiled from "CronExpression.java"
public class io.fluxcapacitor.javaclient.scheduling.CronExpression {
  private final java.lang.String expr;

  private final io.fluxcapacitor.javaclient.scheduling.CronExpression$SimpleField secondField;

  private final io.fluxcapacitor.javaclient.scheduling.CronExpression$SimpleField minuteField;

  private final io.fluxcapacitor.javaclient.scheduling.CronExpression$SimpleField hourField;

  private final io.fluxcapacitor.javaclient.scheduling.CronExpression$DayOfWeekField dayOfWeekField;

  private final io.fluxcapacitor.javaclient.scheduling.CronExpression$SimpleField monthField;

  private final io.fluxcapacitor.javaclient.scheduling.CronExpression$DayOfMonthField dayOfMonthField;

  public io.fluxcapacitor.javaclient.scheduling.CronExpression(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #1                  // Method "<init>":(Ljava/lang/String;Z)V
       6: return

  public io.fluxcapacitor.javaclient.scheduling.CronExpression(java.lang.String, boolean);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #12                 // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #14                 // String expr is null
      14: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: putfield      #19                 // Field expr:Ljava/lang/String;
      23: iload_2
      24: ifeq          32
      27: bipush        6
      29: goto          33
      32: iconst_5
      33: istore_3
      34: aload_1
      35: ldc           #23                 // String \\s+
      37: invokevirtual #25                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      40: astore        4
      42: aload         4
      44: arraylength
      45: iload_3
      46: if_icmpeq     86
      49: new           #12                 // class java/lang/IllegalArgumentException
      52: dup
      53: ldc           #31                 // String Invalid cron expression [%s], expected %s field, got %s
      55: iconst_3
      56: anewarray     #8                  // class java/lang/Object
      59: dup
      60: iconst_0
      61: aload_1
      62: aastore
      63: dup
      64: iconst_1
      65: iload_3
      66: invokestatic  #33                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      69: aastore
      70: dup
      71: iconst_2
      72: aload         4
      74: arraylength
      75: invokestatic  #33                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      78: aastore
      79: invokestatic  #39                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      82: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      85: athrow
      86: iload_2
      87: ifeq          94
      90: iconst_1
      91: goto          95
      94: iconst_0
      95: istore        5
      97: aload_0
      98: new           #43                 // class io/fluxcapacitor/javaclient/scheduling/CronExpression$SimpleField
     101: dup
     102: getstatic     #45                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType.SECOND:Lio/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType;
     105: iload_2
     106: ifeq          116
     109: aload         4
     111: iconst_0
     112: aaload
     113: goto          118
     116: ldc           #51                 // String 0
     118: invokespecial #53                 // Method io/fluxcapacitor/javaclient/scheduling/CronExpression$SimpleField."<init>":(Lio/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType;Ljava/lang/String;)V
     121: putfield      #56                 // Field secondField:Lio/fluxcapacitor/javaclient/scheduling/CronExpression$SimpleField;
     124: aload_0
     125: new           #43                 // class io/fluxcapacitor/javaclient/scheduling/CronExpression$SimpleField
     128: dup
     129: getstatic     #60                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType.MINUTE:Lio/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType;
     132: aload         4
     134: iload         5
     136: iinc          5, 1
     139: aaload
     140: invokespecial #53                 // Method io/fluxcapacitor/javaclient/scheduling/CronExpression$SimpleField."<init>":(Lio/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType;Ljava/lang/String;)V
     143: putfield      #63                 // Field minuteField:Lio/fluxcapacitor/javaclient/scheduling/CronExpression$SimpleField;
     146: aload_0
     147: new           #43                 // class io/fluxcapacitor/javaclient/scheduling/CronExpression$SimpleField
     150: dup
     151: getstatic     #66                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType.HOUR:Lio/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType;
     154: aload         4
     156: iload         5
     158: iinc          5, 1
     161: aaload
     162: invokespecial #53                 // Method io/fluxcapacitor/javaclient/scheduling/CronExpression$SimpleField."<init>":(Lio/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType;Ljava/lang/String;)V
     165: putfield      #69                 // Field hourField:Lio/fluxcapacitor/javaclient/scheduling/CronExpression$SimpleField;
     168: aload_0
     169: new           #72                 // class io/fluxcapacitor/javaclient/scheduling/CronExpression$DayOfMonthField
     172: dup
     173: aload         4
     175: iload         5
     177: iinc          5, 1
     180: aaload
     181: invokespecial #74                 // Method io/fluxcapacitor/javaclient/scheduling/CronExpression$DayOfMonthField."<init>":(Ljava/lang/String;)V
     184: putfield      #75                 // Field dayOfMonthField:Lio/fluxcapacitor/javaclient/scheduling/CronExpression$DayOfMonthField;
     187: aload_0
     188: new           #43                 // class io/fluxcapacitor/javaclient/scheduling/CronExpression$SimpleField
     191: dup
     192: getstatic     #79                 // Field io/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType.MONTH:Lio/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType;
     195: aload         4
     197: iload         5
     199: iinc          5, 1
     202: aaload
     203: invokespecial #53                 // Method io/fluxcapacitor/javaclient/scheduling/CronExpression$SimpleField."<init>":(Lio/fluxcapacitor/javaclient/scheduling/CronExpression$CronFieldType;Ljava/lang/String;)V
     206: putfield      #82                 // Field monthField:Lio/fluxcapacitor/javaclient/scheduling/CronExpression$SimpleField;
     209: aload_0
     210: new           #85                 // class io/fluxcapacitor/javaclient/scheduling/CronExpression$DayOfWeekField
     213: dup
     214: aload         4
     216: iload         5
     218: iinc          5, 1
     221: aaload
     222: invokespecial #87                 // Method io/fluxcapacitor/javaclient/scheduling/CronExpression$DayOfWeekField."<init>":(Ljava/lang/String;)V
     225: putfield      #88                 // Field dayOfWeekField:Lio/fluxcapacitor/javaclient/scheduling/CronExpression$DayOfWeekField;
     228: return

  public java.time.ZonedDateTime nextTimeAfter(java.time.ZonedDateTime);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: ldc2_w        #92                 // long 4l
       6: invokevirtual #94                 // Method java/time/ZonedDateTime.plusYears:(J)Ljava/time/ZonedDateTime;
       9: invokevirtual #100                // Method nextTimeAfter:(Ljava/time/ZonedDateTime;Ljava/time/ZonedDateTime;)Ljava/time/ZonedDateTime;
      12: areturn

  public java.time.LocalDateTime nextLocalDateTimeAfter(java.time.LocalDateTime);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #104                // Method java/time/ZoneId.systemDefault:()Ljava/time/ZoneId;
       5: invokestatic  #110                // Method java/time/ZonedDateTime.of:(Ljava/time/LocalDateTime;Ljava/time/ZoneId;)Ljava/time/ZonedDateTime;
       8: invokevirtual #114                // Method nextTimeAfter:(Ljava/time/ZonedDateTime;)Ljava/time/ZonedDateTime;
      11: invokevirtual #117                // Method java/time/ZonedDateTime.toLocalDateTime:()Ljava/time/LocalDateTime;
      14: areturn

  public java.time.ZonedDateTime nextTimeAfter(java.time.ZonedDateTime, long);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: lload_2
       4: invokestatic  #121                // Method java/time/Duration.ofMillis:(J)Ljava/time/Duration;
       7: invokevirtual #127                // Method java/time/ZonedDateTime.plus:(Ljava/time/temporal/TemporalAmount;)Ljava/time/ZonedDateTime;
      10: invokevirtual #100                // Method nextTimeAfter:(Ljava/time/ZonedDateTime;Ljava/time/ZonedDateTime;)Ljava/time/ZonedDateTime;
      13: areturn

  public java.time.ZonedDateTime nextTimeAfter(java.time.ZonedDateTime, java.time.ZonedDateTime);
    Code:
       0: iconst_1
       1: anewarray     #95                 // class java/time/ZonedDateTime
       4: dup
       5: iconst_0
       6: aload_1
       7: lconst_1
       8: invokevirtual #131                // Method java/time/ZonedDateTime.plusSeconds:(J)Ljava/time/ZonedDateTime;
      11: iconst_0
      12: invokevirtual #134                // Method java/time/ZonedDateTime.withNano:(I)Ljava/time/ZonedDateTime;
      15: aastore
      16: astore_3
      17: aload_3
      18: iconst_0
      19: aaload
      20: aload_2
      21: invokestatic  #138                // Method checkIfDateTimeBarrierIsReached:(Ljava/time/ZonedDateTime;Ljava/time/ZonedDateTime;)V
      24: aload_0
      25: getfield      #82                 // Field monthField:Lio/fluxcapacitor/javaclient/scheduling/CronExpression$SimpleField;
      28: aload_3
      29: invokevirtual #142                // Method io/fluxcapacitor/javaclient/scheduling/CronExpression$SimpleField.nextMatch:([Ljava/time/ZonedDateTime;)Z
      32: ifne          38
      35: goto          17
      38: aload_0
      39: aload_3
      40: aload_2
      41: invokevirtual #146                // Method findDay:([Ljava/time/ZonedDateTime;Ljava/time/ZonedDateTime;)Z
      44: ifne          50
      47: goto          17
      50: aload_0
      51: getfield      #69                 // Field hourField:Lio/fluxcapacitor/javaclient/scheduling/CronExpression$SimpleField;
      54: aload_3
      55: invokevirtual #142                // Method io/fluxcapacitor/javaclient/scheduling/CronExpression$SimpleField.nextMatch:([Ljava/time/ZonedDateTime;)Z
      58: ifne          64
      61: goto          17
      64: aload_0
      65: getfield      #63                 // Field minuteField:Lio/fluxcapacitor/javaclient/scheduling/CronExpression$SimpleField;
      68: aload_3
      69: invokevirtual #142                // Method io/fluxcapacitor/javaclient/scheduling/CronExpression$SimpleField.nextMatch:([Ljava/time/ZonedDateTime;)Z
      72: ifne          78
      75: goto          17
      78: aload_0
      79: getfield      #56                 // Field secondField:Lio/fluxcapacitor/javaclient/scheduling/CronExpression$SimpleField;
      82: aload_3
      83: invokevirtual #142                // Method io/fluxcapacitor/javaclient/scheduling/CronExpression$SimpleField.nextMatch:([Ljava/time/ZonedDateTime;)Z
      86: ifne          92
      89: goto          17
      92: aload_3
      93: iconst_0
      94: aaload
      95: aload_2
      96: invokestatic  #138                // Method checkIfDateTimeBarrierIsReached:(Ljava/time/ZonedDateTime;Ljava/time/ZonedDateTime;)V
      99: aload_3
     100: iconst_0
     101: aaload
     102: areturn

  private boolean findDay(java.time.ZonedDateTime[], java.time.ZonedDateTime);
    Code:
       0: aload_1
       1: iconst_0
       2: aaload
       3: invokevirtual #150                // Method java/time/ZonedDateTime.getMonthValue:()I
       6: istore_3
       7: aload_0
       8: getfield      #75                 // Field dayOfMonthField:Lio/fluxcapacitor/javaclient/scheduling/CronExpression$DayOfMonthField;
      11: aload_1
      12: iconst_0
      13: aaload
      14: invokevirtual #154                // Method java/time/ZonedDateTime.toLocalDate:()Ljava/time/LocalDate;
      17: invokevirtual #158                // Method io/fluxcapacitor/javaclient/scheduling/CronExpression$DayOfMonthField.matches:(Ljava/time/LocalDate;)Z
      20: ifeq          39
      23: aload_0
      24: getfield      #88                 // Field dayOfWeekField:Lio/fluxcapacitor/javaclient/scheduling/CronExpression$DayOfWeekField;
      27: aload_1
      28: iconst_0
      29: aaload
      30: invokevirtual #154                // Method java/time/ZonedDateTime.toLocalDate:()Ljava/time/LocalDate;
      33: invokevirtual #162                // Method io/fluxcapacitor/javaclient/scheduling/CronExpression$DayOfWeekField.matches:(Ljava/time/LocalDate;)Z
      36: ifne          77
      39: aload_1
      40: iconst_0
      41: aload_1
      42: iconst_0
      43: aaload
      44: lconst_1
      45: invokevirtual #163                // Method java/time/ZonedDateTime.plusDays:(J)Ljava/time/ZonedDateTime;
      48: iconst_0
      49: invokevirtual #166                // Method java/time/ZonedDateTime.withHour:(I)Ljava/time/ZonedDateTime;
      52: iconst_0
      53: invokevirtual #169                // Method java/time/ZonedDateTime.withMinute:(I)Ljava/time/ZonedDateTime;
      56: iconst_0
      57: invokevirtual #172                // Method java/time/ZonedDateTime.withSecond:(I)Ljava/time/ZonedDateTime;
      60: iconst_0
      61: invokevirtual #134                // Method java/time/ZonedDateTime.withNano:(I)Ljava/time/ZonedDateTime;
      64: aastore
      65: aload_1
      66: iconst_0
      67: aaload
      68: invokevirtual #150                // Method java/time/ZonedDateTime.getMonthValue:()I
      71: iload_3
      72: if_icmpeq     7
      75: iconst_0
      76: ireturn
      77: iconst_1
      78: ireturn

  private static void checkIfDateTimeBarrierIsReached(java.time.ZonedDateTime, java.time.ZonedDateTime);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #175                // Method java/time/ZonedDateTime.isAfter:(Ljava/time/chrono/ChronoZonedDateTime;)Z
       5: ifeq          22
       8: new           #12                 // class java/lang/IllegalArgumentException
      11: dup
      12: aload_1
      13: invokedynamic #179,  0            // InvokeDynamic #0:makeConcatWithConstants:(Ljava/time/ZonedDateTime;)Ljava/lang/String;
      18: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #183                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokevirtual #187                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
       7: aload_0
       8: getfield      #19                 // Field expr:Ljava/lang/String;
      11: invokedynamic #193,  0            // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      16: areturn
}
