Compiled from "DefaultEventStore.java"
public class io.fluxcapacitor.javaclient.persisting.eventsourcing.DefaultEventStore implements io.fluxcapacitor.javaclient.persisting.eventsourcing.EventStore {
  private static final org.slf4j.Logger log;

  private final io.fluxcapacitor.javaclient.persisting.eventsourcing.client.EventStoreClient client;

  private final io.fluxcapacitor.javaclient.common.serialization.Serializer serializer;

  private final io.fluxcapacitor.javaclient.publishing.DispatchInterceptor dispatchInterceptor;

  private final io.fluxcapacitor.javaclient.tracking.handling.HandlerRegistry localHandlerRegistry;

  public java.util.concurrent.CompletableFuture<java.lang.Void> storeEvents(java.lang.Object, java.util.List<?>, boolean, boolean);
    Code:
       0: new           #1                  // class java/util/ArrayList
       3: dup
       4: aload_2
       5: invokeinterface #3,  1            // InterfaceMethod java/util/List.size:()I
      10: invokespecial #9                  // Method java/util/ArrayList."<init>":(I)V
      13: astore        6
      15: aload_1
      16: invokevirtual #13                 // Method java/lang/Object.toString:()Ljava/lang/String;
      19: invokestatic  #19                 // Method io/fluxcapacitor/common/ConsistentHashing.computeSegment:(Ljava/lang/String;)I
      22: istore        7
      24: aload_2
      25: aload_0
      26: iload         4
      28: aload         6
      30: invokedynamic #25,  0             // InvokeDynamic #0:accept:(Lio/fluxcapacitor/javaclient/persisting/eventsourcing/DefaultEventStore;ZLjava/util/List;)Ljava/util/function/Consumer;
      35: invokeinterface #29,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      40: aload_0
      41: getfield      #33                 // Field client:Lio/fluxcapacitor/javaclient/persisting/eventsourcing/client/EventStoreClient;
      44: aload_1
      45: invokevirtual #13                 // Method java/lang/Object.toString:()Ljava/lang/String;
      48: aload         6
      50: invokeinterface #39,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      55: iload         7
      57: invokedynamic #43,  0             // InvokeDynamic #1:apply:(I)Ljava/util/function/Function;
      62: invokeinterface #47,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      67: invokestatic  #53                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      70: invokeinterface #59,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      75: checkcast     #4                  // class java/util/List
      78: iload_3
      79: invokeinterface #63,  4           // InterfaceMethod io/fluxcapacitor/javaclient/persisting/eventsourcing/client/EventStoreClient.storeEvents:(Ljava/lang/String;Ljava/util/List;Z)Ljava/util/concurrent/CompletableFuture;
      84: astore        5
      86: goto          141
      89: astore        7
      91: new           #71                 // class io/fluxcapacitor/javaclient/persisting/eventsourcing/EventSourcingException
      94: dup
      95: ldc           #73                 // String Failed to store events %s for aggregate %s
      97: iconst_2
      98: anewarray     #14                 // class java/lang/Object
     101: dup
     102: iconst_0
     103: aload_2
     104: invokeinterface #39,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
     109: invokedynamic #75,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
     114: invokeinterface #47,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
     119: invokestatic  #53                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
     122: invokeinterface #59,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
     127: aastore
     128: dup
     129: iconst_1
     130: aload_1
     131: aastore
     132: invokestatic  #78                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     135: aload         7
     137: invokespecial #84                 // Method io/fluxcapacitor/javaclient/persisting/eventsourcing/EventSourcingException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     140: athrow
     141: aload         6
     143: aload_0
     144: getfield      #87                 // Field localHandlerRegistry:Lio/fluxcapacitor/javaclient/tracking/handling/HandlerRegistry;
     147: dup
     148: invokestatic  #91                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
     151: pop
     152: invokedynamic #97,  0             // InvokeDynamic #3:accept:(Lio/fluxcapacitor/javaclient/tracking/handling/HandlerRegistry;)Ljava/util/function/Consumer;
     157: invokeinterface #29,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
     162: aload         5
     164: areturn
    Exception table:
       from    to  target type
          15    86    89   Class java/lang/Exception

  private static java.lang.String payloadName(java.lang.Object);
    Code:
       0: aload_0
       1: instanceof    #100                // class io/fluxcapacitor/javaclient/common/Message
       4: ifeq          20
       7: aload_0
       8: checkcast     #100                // class io/fluxcapacitor/javaclient/common/Message
      11: invokevirtual #102                // Method io/fluxcapacitor/javaclient/common/Message.getPayloadClass:()Ljava/lang/Class;
      14: invokevirtual #106                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      17: goto          36
      20: aload_0
      21: ifnonnull     29
      24: ldc           #111                // String null
      26: goto          36
      29: aload_0
      30: invokevirtual #113                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      33: invokevirtual #106                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      36: areturn

  public io.fluxcapacitor.javaclient.persisting.eventsourcing.AggregateEventStream<io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage> getEvents(java.lang.Object, long, boolean);
    Code:
       0: aload_0
       1: getfield      #33                 // Field client:Lio/fluxcapacitor/javaclient/persisting/eventsourcing/client/EventStoreClient;
       4: aload_1
       5: invokevirtual #13                 // Method java/lang/Object.toString:()Ljava/lang/String;
       8: lload_2
       9: invokeinterface #116,  4          // InterfaceMethod io/fluxcapacitor/javaclient/persisting/eventsourcing/client/EventStoreClient.getEvents:(Ljava/lang/String;J)Lio/fluxcapacitor/javaclient/persisting/eventsourcing/AggregateEventStream;
      14: astore        5
      16: aload         5
      18: aload_0
      19: iload         4
      21: invokedynamic #120,  0            // InvokeDynamic #4:apply:(Lio/fluxcapacitor/javaclient/persisting/eventsourcing/DefaultEventStore;Z)Ljava/util/function/Function;
      26: invokevirtual #123                // Method io/fluxcapacitor/javaclient/persisting/eventsourcing/AggregateEventStream.convert:(Ljava/util/function/Function;)Lio/fluxcapacitor/javaclient/persisting/eventsourcing/AggregateEventStream;
      29: areturn
      30: astore        5
      32: new           #71                 // class io/fluxcapacitor/javaclient/persisting/eventsourcing/EventSourcingException
      35: dup
      36: ldc           #129                // String Failed to obtain events for aggregate %s
      38: iconst_1
      39: anewarray     #14                 // class java/lang/Object
      42: dup
      43: iconst_0
      44: aload_1
      45: aastore
      46: invokestatic  #78                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      49: aload         5
      51: invokespecial #84                 // Method io/fluxcapacitor/javaclient/persisting/eventsourcing/EventSourcingException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      54: athrow
    Exception table:
       from    to  target type
           0    29    30   Class java/lang/Exception

  public io.fluxcapacitor.javaclient.persisting.eventsourcing.DefaultEventStore(io.fluxcapacitor.javaclient.persisting.eventsourcing.client.EventStoreClient, io.fluxcapacitor.javaclient.common.serialization.Serializer, io.fluxcapacitor.javaclient.publishing.DispatchInterceptor, io.fluxcapacitor.javaclient.tracking.handling.HandlerRegistry);
    Code:
       0: aload_0
       1: invokespecial #131                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #33                 // Field client:Lio/fluxcapacitor/javaclient/persisting/eventsourcing/client/EventStoreClient;
       9: aload_0
      10: aload_2
      11: putfield      #134                // Field serializer:Lio/fluxcapacitor/javaclient/common/serialization/Serializer;
      14: aload_0
      15: aload_3
      16: putfield      #138                // Field dispatchInterceptor:Lio/fluxcapacitor/javaclient/publishing/DispatchInterceptor;
      19: aload_0
      20: aload         4
      22: putfield      #87                 // Field localHandlerRegistry:Lio/fluxcapacitor/javaclient/tracking/handling/HandlerRegistry;
      25: return

  public java.util.Optional<java.util.concurrent.CompletableFuture<io.fluxcapacitor.javaclient.common.Message>> handle(io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage);
    Code:
       0: aload_0
       1: getfield      #87                 // Field localHandlerRegistry:Lio/fluxcapacitor/javaclient/tracking/handling/HandlerRegistry;
       4: aload_1
       5: invokeinterface #142,  2          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/handling/HandlerRegistry.handle:(Lio/fluxcapacitor/javaclient/common/serialization/DeserializingMessage;)Ljava/util/Optional;
      10: areturn

  public io.fluxcapacitor.javaclient.tracking.handling.HandlerRegistry merge(io.fluxcapacitor.javaclient.tracking.handling.HandlerRegistry);
    Code:
       0: aload_0
       1: getfield      #87                 // Field localHandlerRegistry:Lio/fluxcapacitor/javaclient/tracking/handling/HandlerRegistry;
       4: aload_1
       5: invokeinterface #148,  2          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/handling/HandlerRegistry.merge:(Lio/fluxcapacitor/javaclient/tracking/handling/HandlerRegistry;)Lio/fluxcapacitor/javaclient/tracking/handling/HandlerRegistry;
      10: areturn

  public io.fluxcapacitor.common.Registration registerHandler(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #87                 // Field localHandlerRegistry:Lio/fluxcapacitor/javaclient/tracking/handling/HandlerRegistry;
       4: aload_1
       5: invokeinterface #152,  2          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/handling/HandlerRegistry.registerHandler:(Ljava/lang/Object;)Lio/fluxcapacitor/common/Registration;
      10: areturn

  public io.fluxcapacitor.common.Registration registerHandler(java.lang.Object, io.fluxcapacitor.common.handling.HandlerFilter);
    Code:
       0: aload_0
       1: getfield      #87                 // Field localHandlerRegistry:Lio/fluxcapacitor/javaclient/tracking/handling/HandlerRegistry;
       4: aload_1
       5: aload_2
       6: invokeinterface #156,  3          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/handling/HandlerRegistry.registerHandler:(Ljava/lang/Object;Lio/fluxcapacitor/common/handling/HandlerFilter;)Lio/fluxcapacitor/common/Registration;
      11: areturn

  private java.util.stream.Stream lambda$getEvents$3(boolean, java.util.stream.Stream);
    Code:
       0: aload_0
       1: getfield      #134                // Field serializer:Lio/fluxcapacitor/javaclient/common/serialization/Serializer;
       4: aload_2
       5: getstatic     #159                // Field io/fluxcapacitor/common/MessageType.EVENT:Lio/fluxcapacitor/common/MessageType;
       8: iload_1
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: invokeinterface #165,  4          // InterfaceMethod io/fluxcapacitor/javaclient/common/serialization/Serializer.deserializeMessages:(Ljava/util/stream/Stream;Lio/fluxcapacitor/common/MessageType;Z)Ljava/util/stream/Stream;
      22: areturn

  private static io.fluxcapacitor.common.api.SerializedMessage lambda$storeEvents$2(int, io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage);
    Code:
       0: aload_1
       1: invokevirtual #171                // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.getSerializedObject:()Lio/fluxcapacitor/common/api/SerializedMessage;
       4: invokevirtual #177                // Method io/fluxcapacitor/common/api/SerializedMessage.getSegment:()Ljava/lang/Integer;
       7: ifnonnull     24
      10: aload_1
      11: invokevirtual #171                // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.getSerializedObject:()Lio/fluxcapacitor/common/api/SerializedMessage;
      14: iload_0
      15: invokestatic  #183                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      18: invokevirtual #189                // Method io/fluxcapacitor/common/api/SerializedMessage.withSegment:(Ljava/lang/Integer;)Lio/fluxcapacitor/common/api/SerializedMessage;
      21: goto          28
      24: aload_1
      25: invokevirtual #171                // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.getSerializedObject:()Lio/fluxcapacitor/common/api/SerializedMessage;
      28: areturn

  private void lambda$storeEvents$1(boolean, java.util.List, java.lang.Object);
    Code:
       0: aload_3
       1: instanceof    #172                // class io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage
       4: ifeq          16
       7: aload_3
       8: checkcast     #172                // class io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage
      11: astore        4
      13: goto          122
      16: iload_1
      17: ifeq          102
      20: aload_0
      21: getfield      #138                // Field dispatchInterceptor:Lio/fluxcapacitor/javaclient/publishing/DispatchInterceptor;
      24: aload_3
      25: invokestatic  #193                // Method io/fluxcapacitor/javaclient/common/Message.asMessage:(Ljava/lang/Object;)Lio/fluxcapacitor/javaclient/common/Message;
      28: getstatic     #159                // Field io/fluxcapacitor/common/MessageType.EVENT:Lio/fluxcapacitor/common/MessageType;
      31: invokeinterface #197,  3          // InterfaceMethod io/fluxcapacitor/javaclient/publishing/DispatchInterceptor.interceptDispatch:(Lio/fluxcapacitor/javaclient/common/Message;Lio/fluxcapacitor/common/MessageType;)Lio/fluxcapacitor/javaclient/common/Message;
      36: astore        5
      38: aload         5
      40: ifnonnull     47
      43: aconst_null
      44: goto          70
      47: aload_0
      48: getfield      #138                // Field dispatchInterceptor:Lio/fluxcapacitor/javaclient/publishing/DispatchInterceptor;
      51: aload         5
      53: aload_0
      54: getfield      #134                // Field serializer:Lio/fluxcapacitor/javaclient/common/serialization/Serializer;
      57: invokevirtual #203                // Method io/fluxcapacitor/javaclient/common/Message.serialize:(Lio/fluxcapacitor/javaclient/common/serialization/Serializer;)Lio/fluxcapacitor/common/api/SerializedMessage;
      60: aload         5
      62: getstatic     #159                // Field io/fluxcapacitor/common/MessageType.EVENT:Lio/fluxcapacitor/common/MessageType;
      65: invokeinterface #207,  4          // InterfaceMethod io/fluxcapacitor/javaclient/publishing/DispatchInterceptor.modifySerializedMessage:(Lio/fluxcapacitor/common/api/SerializedMessage;Lio/fluxcapacitor/javaclient/common/Message;Lio/fluxcapacitor/common/MessageType;)Lio/fluxcapacitor/common/api/SerializedMessage;
      70: astore        6
      72: aload         6
      74: ifnonnull     78
      77: return
      78: new           #172                // class io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage
      81: dup
      82: aload         6
      84: aload         5
      86: invokedynamic #211,  0            // InvokeDynamic #5:apply:(Lio/fluxcapacitor/javaclient/common/Message;)Ljava/util/function/Function;
      91: getstatic     #159                // Field io/fluxcapacitor/common/MessageType.EVENT:Lio/fluxcapacitor/common/MessageType;
      94: invokespecial #214                // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage."<init>":(Lio/fluxcapacitor/common/api/SerializedMessage;Ljava/util/function/Function;Lio/fluxcapacitor/common/MessageType;)V
      97: astore        4
      99: goto          122
     102: new           #172                // class io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage
     105: dup
     106: aload_3
     107: invokestatic  #193                // Method io/fluxcapacitor/javaclient/common/Message.asMessage:(Ljava/lang/Object;)Lio/fluxcapacitor/javaclient/common/Message;
     110: getstatic     #159                // Field io/fluxcapacitor/common/MessageType.EVENT:Lio/fluxcapacitor/common/MessageType;
     113: aload_0
     114: getfield      #134                // Field serializer:Lio/fluxcapacitor/javaclient/common/serialization/Serializer;
     117: invokespecial #217                // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage."<init>":(Lio/fluxcapacitor/javaclient/common/Message;Lio/fluxcapacitor/common/MessageType;Lio/fluxcapacitor/javaclient/common/serialization/Serializer;)V
     120: astore        4
     122: aload_2
     123: aload         4
     125: invokeinterface #220,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     130: pop
     131: return

  private static java.lang.Object lambda$storeEvents$0(io.fluxcapacitor.javaclient.common.Message, java.lang.Class);
    Code:
       0: aload_0
       1: invokevirtual #224                // Method io/fluxcapacitor/javaclient/common/Message.getPayload:()Ljava/lang/Object;
       4: areturn

  static {};
    Code:
       0: ldc           #34                 // class io/fluxcapacitor/javaclient/persisting/eventsourcing/DefaultEventStore
       2: invokestatic  #228                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #234                // Field log:Lorg/slf4j/Logger;
       8: return
}
