Compiled from "CachingAggregateRepository.java"
public class io.fluxcapacitor.javaclient.persisting.repository.CachingAggregateRepository implements io.fluxcapacitor.javaclient.persisting.repository.AggregateRepository {
  private static final org.slf4j.Logger log;

  public static java.time.Duration slowTrackingThreshold;

  private final io.fluxcapacitor.javaclient.persisting.repository.AggregateRepository delegate;

  private final io.fluxcapacitor.javaclient.configuration.client.Client client;

  private final io.fluxcapacitor.javaclient.persisting.caching.Cache cache;

  private final io.fluxcapacitor.javaclient.persisting.caching.Cache relationshipsCache;

  private final io.fluxcapacitor.javaclient.common.serialization.Serializer serializer;

  private final java.util.concurrent.atomic.AtomicBoolean started;

  private volatile long lastEventIndex;

  public <T> io.fluxcapacitor.javaclient.modeling.Entity<T> load(java.lang.Object, java.lang.Class<T>);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #1                  // class java/lang/NullPointerException
       7: dup
       8: ldc           #3                  // String aggregateId is marked non-null but is null
      10: invokespecial #5                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokevirtual #9                  // Method catchUpIfNeeded:()V
      18: aload_0
      19: getfield      #15                 // Field delegate:Lio/fluxcapacitor/javaclient/persisting/repository/AggregateRepository;
      22: aload_1
      23: aload_2
      24: invokeinterface #19,  3           // InterfaceMethod io/fluxcapacitor/javaclient/persisting/repository/AggregateRepository.load:(Ljava/lang/Object;Ljava/lang/Class;)Lio/fluxcapacitor/javaclient/modeling/Entity;
      29: areturn

  public <T> io.fluxcapacitor.javaclient.modeling.Entity<T> loadFor(java.lang.Object, java.lang.Class<?>);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #1                  // class java/lang/NullPointerException
       7: dup
       8: ldc           #25                 // String entityId is marked non-null but is null
      10: invokespecial #5                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokevirtual #9                  // Method catchUpIfNeeded:()V
      18: aload_0
      19: getfield      #15                 // Field delegate:Lio/fluxcapacitor/javaclient/persisting/repository/AggregateRepository;
      22: aload_1
      23: aload_2
      24: invokeinterface #27,  3           // InterfaceMethod io/fluxcapacitor/javaclient/persisting/repository/AggregateRepository.loadFor:(Ljava/lang/Object;Ljava/lang/Class;)Lio/fluxcapacitor/javaclient/modeling/Entity;
      29: areturn

  public java.util.concurrent.CompletableFuture<java.lang.Void> repairRelationships(io.fluxcapacitor.javaclient.modeling.Entity<?>);
    Code:
       0: aload_0
       1: getfield      #15                 // Field delegate:Lio/fluxcapacitor/javaclient/persisting/repository/AggregateRepository;
       4: aload_1
       5: invokeinterface #30,  2           // InterfaceMethod io/fluxcapacitor/javaclient/persisting/repository/AggregateRepository.repairRelationships:(Lio/fluxcapacitor/javaclient/modeling/Entity;)Ljava/util/concurrent/CompletableFuture;
      10: areturn

  public java.util.Map<java.lang.String, java.lang.Class<?>> getAggregatesFor(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #15                 // Field delegate:Lio/fluxcapacitor/javaclient/persisting/repository/AggregateRepository;
       4: aload_1
       5: invokeinterface #34,  2           // InterfaceMethod io/fluxcapacitor/javaclient/persisting/repository/AggregateRepository.getAggregatesFor:(Ljava/lang/Object;)Ljava/util/Map;
      10: areturn

  protected void handleEvents(java.util.List<io.fluxcapacitor.common.api.SerializedMessage>);
    Code:
       0: aload_0
       1: getfield      #38                 // Field serializer:Lio/fluxcapacitor/javaclient/common/serialization/Serializer;
       4: aload_1
       5: invokeinterface #42,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      10: getstatic     #48                 // Field io/fluxcapacitor/common/MessageType.EVENT:Lio/fluxcapacitor/common/MessageType;
      13: invokeinterface #54,  3           // InterfaceMethod io/fluxcapacitor/javaclient/common/serialization/Serializer.deserializeMessages:(Ljava/util/stream/Stream;Lio/fluxcapacitor/common/MessageType;)Ljava/util/stream/Stream;
      18: invokestatic  #60                 // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.handleBatch:(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;
      21: aload_0
      22: invokedynamic #66,  0             // InvokeDynamic #0:accept:(Lio/fluxcapacitor/javaclient/persisting/repository/CachingAggregateRepository;)Ljava/util/function/Consumer;
      27: invokeinterface #70,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      32: aload_1
      33: invokeinterface #42,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      38: invokedynamic #76,  0             // InvokeDynamic #1:apply:()Ljava/util/function/BinaryOperator;
      43: invokeinterface #80,  2           // InterfaceMethod java/util/stream/Stream.reduce:(Ljava/util/function/BinaryOperator;)Ljava/util/Optional;
      48: invokedynamic #84,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      53: invokevirtual #87                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      56: aload_0
      57: invokedynamic #93,  0             // InvokeDynamic #3:accept:(Lio/fluxcapacitor/javaclient/persisting/repository/CachingAggregateRepository;)Ljava/util/function/Consumer;
      62: invokevirtual #94                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      65: goto          104
      68: astore_2
      69: aload_1
      70: invokeinterface #42,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      75: invokedynamic #76,  0             // InvokeDynamic #1:apply:()Ljava/util/function/BinaryOperator;
      80: invokeinterface #80,  2           // InterfaceMethod java/util/stream/Stream.reduce:(Ljava/util/function/BinaryOperator;)Ljava/util/Optional;
      85: invokedynamic #84,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      90: invokevirtual #87                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      93: aload_0
      94: invokedynamic #93,  0             // InvokeDynamic #3:accept:(Lio/fluxcapacitor/javaclient/persisting/repository/CachingAggregateRepository;)Ljava/util/function/Consumer;
      99: invokevirtual #94                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
     102: aload_2
     103: athrow
     104: return
    Exception table:
       from    to  target type
           0    32    68   any

  private void handleEvent(io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage);
    Code:
       0: aload_1
       1: invokestatic  #97                 // InterfaceMethod io/fluxcapacitor/javaclient/modeling/Entity.getAggregateId:(Lio/fluxcapacitor/common/api/HasMetadata;)Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: ifnull        118
       9: aload_0
      10: getfield      #103                // Field client:Lio/fluxcapacitor/javaclient/configuration/client/Client;
      13: invokeinterface #107,  1          // InterfaceMethod io/fluxcapacitor/javaclient/configuration/client/Client.id:()Ljava/lang/String;
      18: aload_1
      19: invokevirtual #113                // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.getSerializedObject:()Lio/fluxcapacitor/common/api/SerializedMessage;
      22: invokevirtual #117                // Method io/fluxcapacitor/common/api/SerializedMessage.getSource:()Ljava/lang/String;
      25: invokestatic  #122                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      28: ifeq          51
      31: aload_0
      32: getfield      #128                // Field cache:Lio/fluxcapacitor/javaclient/persisting/caching/Cache;
      35: aload_2
      36: aload_1
      37: invokedynamic #132,  0            // InvokeDynamic #4:apply:(Lio/fluxcapacitor/javaclient/common/serialization/DeserializingMessage;)Ljava/util/function/BiFunction;
      42: invokeinterface #135,  3          // InterfaceMethod io/fluxcapacitor/javaclient/persisting/caching/Cache.computeIfPresent:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      47: pop
      48: goto          78
      51: aload_1
      52: invokevirtual #141                // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.getIndex:()Ljava/lang/Long;
      55: invokevirtual #145                // Method java/lang/Long.longValue:()J
      58: lstore_3
      59: aload_0
      60: getfield      #128                // Field cache:Lio/fluxcapacitor/javaclient/persisting/caching/Cache;
      63: aload_2
      64: aload_0
      65: lload_3
      66: aload_1
      67: invokedynamic #151,  0            // InvokeDynamic #5:apply:(Lio/fluxcapacitor/javaclient/persisting/repository/CachingAggregateRepository;JLio/fluxcapacitor/javaclient/common/serialization/DeserializingMessage;)Ljava/util/function/BiFunction;
      72: invokeinterface #135,  3          // InterfaceMethod io/fluxcapacitor/javaclient/persisting/caching/Cache.computeIfPresent:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      77: pop
      78: goto          118
      81: astore_3
      82: getstatic     #156                // Field log:Lorg/slf4j/Logger;
      85: ldc           #160                // String Failed to handle event {} for aggregate {} (id {})
      87: iconst_4
      88: anewarray     #162                // class java/lang/Object
      91: dup
      92: iconst_0
      93: aload_1
      94: invokevirtual #164                // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.getMessageId:()Ljava/lang/String;
      97: aastore
      98: dup
      99: iconst_1
     100: aload_1
     101: invokestatic  #167                // InterfaceMethod io/fluxcapacitor/javaclient/modeling/Entity.getAggregateType:(Lio/fluxcapacitor/common/api/HasMetadata;)Ljava/lang/Class;
     104: aastore
     105: dup
     106: iconst_2
     107: aload_2
     108: aastore
     109: dup
     110: iconst_3
     111: aload_3
     112: aastore
     113: invokeinterface #171,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;[Ljava/lang/Object;)V
     118: return
    Exception table:
       from    to  target type
           9    78    81   Class java/lang/Throwable

  protected void updateRelationships(io.fluxcapacitor.javaclient.modeling.ImmutableAggregateRoot<?>, io.fluxcapacitor.javaclient.modeling.ImmutableAggregateRoot<?>);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #177                // Method io/fluxcapacitor/javaclient/modeling/ImmutableAggregateRoot.associations:(Lio/fluxcapacitor/javaclient/modeling/Entity;)Ljava/util/Set;
       5: astore_3
       6: aload_2
       7: aload_1
       8: invokevirtual #183                // Method io/fluxcapacitor/javaclient/modeling/ImmutableAggregateRoot.dissociations:(Lio/fluxcapacitor/javaclient/modeling/Entity;)Ljava/util/Set;
      11: astore        4
      13: aload         4
      15: aload_0
      16: invokedynamic #186,  0            // InvokeDynamic #6:accept:(Lio/fluxcapacitor/javaclient/persisting/repository/CachingAggregateRepository;)Ljava/util/function/Consumer;
      21: invokeinterface #187,  2          // InterfaceMethod java/util/Set.forEach:(Ljava/util/function/Consumer;)V
      26: aload_3
      27: aload_0
      28: aload_2
      29: invokedynamic #190,  0            // InvokeDynamic #7:accept:(Lio/fluxcapacitor/javaclient/persisting/repository/CachingAggregateRepository;Lio/fluxcapacitor/javaclient/modeling/ImmutableAggregateRoot;)Ljava/util/function/Consumer;
      34: invokeinterface #187,  2          // InterfaceMethod java/util/Set.forEach:(Ljava/util/function/Consumer;)V
      39: return

  protected void catchUpIfNeeded();
    Code:
       0: aload_0
       1: invokevirtual #193                // Method startTrackerIfNeeded:()V
       4: invokestatic  #196                // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.getCurrent:()Lio/fluxcapacitor/javaclient/common/serialization/DeserializingMessage;
       7: astore_1
       8: aload_1
       9: ifnull        184
      12: invokestatic  #200                // InterfaceMethod io/fluxcapacitor/javaclient/modeling/Entity.isLoading:()Z
      15: ifne          184
      18: getstatic     #204                // Field io/fluxcapacitor/javaclient/persisting/repository/CachingAggregateRepository$1.$SwitchMap$io$fluxcapacitor$common$MessageType:[I
      21: aload_1
      22: invokevirtual #210                // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.getMessageType:()Lio/fluxcapacitor/common/MessageType;
      25: invokevirtual #214                // Method io/fluxcapacitor/common/MessageType.ordinal:()I
      28: iaload
      29: lookupswitch  { // 2
                     1: 56
                     2: 56
               default: 184
          }
      56: aload_1
      57: invokevirtual #141                // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.getIndex:()Ljava/lang/Long;
      60: astore_2
      61: aload_2
      62: ifnull        184
      65: aload_0
      66: getfield      #218                // Field lastEventIndex:J
      69: aload_2
      70: invokevirtual #145                // Method java/lang/Long.longValue:()J
      73: lcmp
      74: ifge          184
      77: aload_0
      78: getfield      #128                // Field cache:Lio/fluxcapacitor/javaclient/persisting/caching/Cache;
      81: dup
      82: astore_3
      83: monitorenter
      84: invokestatic  #222                // Method java/time/Instant.now:()Ljava/time/Instant;
      87: astore        4
      89: aload_0
      90: getfield      #218                // Field lastEventIndex:J
      93: aload_2
      94: invokevirtual #145                // Method java/lang/Long.longValue:()J
      97: lcmp
      98: ifge          138
     101: aload_0
     102: getfield      #128                // Field cache:Lio/fluxcapacitor/javaclient/persisting/caching/Cache;
     105: ldc2_w        #228                // long 5000l
     108: invokevirtual #230                // Method java/lang/Object.wait:(J)V
     111: goto          89
     114: astore        5
     116: invokestatic  #236                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     119: invokevirtual #242                // Method java/lang/Thread.interrupt:()V
     122: new           #245                // class java/lang/IllegalStateException
     125: dup
     126: aload_1
     127: invokedynamic #247,  0            // InvokeDynamic #8:makeConcatWithConstants:(Lio/fluxcapacitor/javaclient/common/serialization/DeserializingMessage;)Ljava/lang/String;
     132: aload         5
     134: invokespecial #251                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     137: athrow
     138: aload         4
     140: invokestatic  #222                // Method java/time/Instant.now:()Ljava/time/Instant;
     143: invokestatic  #254                // Method java/time/Duration.between:(Ljava/time/temporal/Temporal;Ljava/time/temporal/Temporal;)Ljava/time/Duration;
     146: astore        5
     148: aload         5
     150: getstatic     #260                // Field slowTrackingThreshold:Ljava/time/Duration;
     153: invokevirtual #264                // Method java/time/Duration.compareTo:(Ljava/time/Duration;)I
     156: ifle          172
     159: getstatic     #156                // Field log:Lorg/slf4j/Logger;
     162: ldc_w         #268                // String It took over {} for the aggregate repo tracking to get in sync. This may indicate that the repo has trouble keeping up.
     165: aload         5
     167: invokeinterface #270,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
     172: aload_3
     173: monitorexit
     174: goto          184
     177: astore        6
     179: aload_3
     180: monitorexit
     181: aload         6
     183: athrow
     184: return
    Exception table:
       from    to  target type
         101   111   114   Class java/lang/InterruptedException
          84   174   177   any
         177   181   177   any

  protected void startTrackerIfNeeded();
    Code:
       0: aload_0
       1: getfield      #274                // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #278                // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          117
      12: aload_0
      13: invokedynamic #284,  0            // InvokeDynamic #9:accept:(Lio/fluxcapacitor/javaclient/persisting/repository/CachingAggregateRepository;)Ljava/util/function/Consumer;
      18: getstatic     #285                // Field io/fluxcapacitor/common/MessageType.NOTIFICATION:Lio/fluxcapacitor/common/MessageType;
      21: invokestatic  #288                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration.builder:()Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
      24: iconst_1
      25: invokevirtual #294                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.ignoreSegment:(Z)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
      28: iconst_1
      29: invokevirtual #300                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.clientControlledIndex:(Z)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
      32: aload_0
      33: invokestatic  #303                // InterfaceMethod io/fluxcapacitor/javaclient/FluxCapacitor.currentTime:()Ljava/time/Instant;
      36: invokestatic  #308                // Method io/fluxcapacitor/javaclient/tracking/IndexUtils.indexFromTimestamp:(Ljava/time/Instant;)J
      39: dup2_x1
      40: putfield      #218                // Field lastEventIndex:J
      43: invokestatic  #314                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      46: invokevirtual #318                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.minIndex:(Ljava/lang/Long;)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
      49: ldc_w         #322                // String %s_%s
      52: iconst_2
      53: anewarray     #162                // class java/lang/Object
      56: dup
      57: iconst_0
      58: aload_0
      59: getfield      #103                // Field client:Lio/fluxcapacitor/javaclient/configuration/client/Client;
      62: invokeinterface #324,  1          // InterfaceMethod io/fluxcapacitor/javaclient/configuration/client/Client.name:()Ljava/lang/String;
      67: aastore
      68: dup
      69: iconst_1
      70: ldc           #10                 // class io/fluxcapacitor/javaclient/persisting/repository/CachingAggregateRepository
      72: invokevirtual #327                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      75: aastore
      76: invokestatic  #332                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      79: invokevirtual #338                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.name:(Ljava/lang/String;)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
      82: invokevirtual #341                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.build:()Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration;
      85: aload_0
      86: getfield      #103                // Field client:Lio/fluxcapacitor/javaclient/configuration/client/Client;
      89: invokestatic  #345                // Method io/fluxcapacitor/javaclient/tracking/client/DefaultTracker.start:(Ljava/util/function/Consumer;Lio/fluxcapacitor/common/MessageType;Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration;Lio/fluxcapacitor/javaclient/configuration/client/Client;)Lio/fluxcapacitor/common/Registration;
      92: pop
      93: aload_0
      94: getfield      #128                // Field cache:Lio/fluxcapacitor/javaclient/persisting/caching/Cache;
      97: dup
      98: astore_1
      99: monitorenter
     100: aload_0
     101: getfield      #128                // Field cache:Lio/fluxcapacitor/javaclient/persisting/caching/Cache;
     104: invokevirtual #351                // Method java/lang/Object.notifyAll:()V
     107: aload_1
     108: monitorexit
     109: goto          117
     112: astore_2
     113: aload_1
     114: monitorexit
     115: aload_2
     116: athrow
     117: return
    Exception table:
       from    to  target type
         100   109   112   any
         112   115   112   any

  public io.fluxcapacitor.javaclient.persisting.repository.CachingAggregateRepository(io.fluxcapacitor.javaclient.persisting.repository.AggregateRepository, io.fluxcapacitor.javaclient.configuration.client.Client, io.fluxcapacitor.javaclient.persisting.caching.Cache, io.fluxcapacitor.javaclient.persisting.caching.Cache, io.fluxcapacitor.javaclient.common.serialization.Serializer);
    Code:
       0: aload_0
       1: invokespecial #354                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #279                // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: invokespecial #356                // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      12: putfield      #274                // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
      15: aload_0
      16: ldc2_w        #357                // long -1l
      19: putfield      #218                // Field lastEventIndex:J
      22: aload_0
      23: aload_1
      24: putfield      #15                 // Field delegate:Lio/fluxcapacitor/javaclient/persisting/repository/AggregateRepository;
      27: aload_0
      28: aload_2
      29: putfield      #103                // Field client:Lio/fluxcapacitor/javaclient/configuration/client/Client;
      32: aload_0
      33: aload_3
      34: putfield      #128                // Field cache:Lio/fluxcapacitor/javaclient/persisting/caching/Cache;
      37: aload_0
      38: aload         4
      40: putfield      #359                // Field relationshipsCache:Lio/fluxcapacitor/javaclient/persisting/caching/Cache;
      43: aload_0
      44: aload         5
      46: putfield      #38                 // Field serializer:Lio/fluxcapacitor/javaclient/common/serialization/Serializer;
      49: return

  private void lambda$updateRelationships$7(io.fluxcapacitor.javaclient.modeling.ImmutableAggregateRoot, io.fluxcapacitor.common.api.modeling.Relationship);
    Code:
       0: aload_0
       1: getfield      #359                // Field relationshipsCache:Lio/fluxcapacitor/javaclient/persisting/caching/Cache;
       4: aload_2
       5: invokevirtual #362                // Method io/fluxcapacitor/common/api/modeling/Relationship.getEntityId:()Ljava/lang/String;
       8: aload_2
       9: aload_1
      10: invokedynamic #367,  0            // InvokeDynamic #10:apply:(Lio/fluxcapacitor/common/api/modeling/Relationship;Lio/fluxcapacitor/javaclient/modeling/ImmutableAggregateRoot;)Ljava/util/function/BiFunction;
      15: invokeinterface #135,  3          // InterfaceMethod io/fluxcapacitor/javaclient/persisting/caching/Cache.computeIfPresent:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      20: pop
      21: return

  private static java.util.Map lambda$updateRelationships$6(io.fluxcapacitor.common.api.modeling.Relationship, io.fluxcapacitor.javaclient.modeling.ImmutableAggregateRoot, java.lang.Object, java.util.Map);
    Code:
       0: aload_3
       1: aload_0
       2: invokevirtual #370                // Method io/fluxcapacitor/common/api/modeling/Relationship.getAggregateId:()Ljava/lang/String;
       5: aload_1
       6: invokevirtual #372                // Method io/fluxcapacitor/javaclient/modeling/ImmutableAggregateRoot.type:()Ljava/lang/Class;
       9: invokeinterface #376,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: aload_3
      16: areturn

  private void lambda$updateRelationships$5(io.fluxcapacitor.common.api.modeling.Relationship);
    Code:
       0: aload_0
       1: getfield      #359                // Field relationshipsCache:Lio/fluxcapacitor/javaclient/persisting/caching/Cache;
       4: aload_1
       5: invokevirtual #362                // Method io/fluxcapacitor/common/api/modeling/Relationship.getEntityId:()Ljava/lang/String;
       8: aload_1
       9: invokedynamic #382,  0            // InvokeDynamic #11:apply:(Lio/fluxcapacitor/common/api/modeling/Relationship;)Ljava/util/function/BiFunction;
      14: invokeinterface #135,  3          // InterfaceMethod io/fluxcapacitor/javaclient/persisting/caching/Cache.computeIfPresent:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      19: pop
      20: return

  private static java.util.Map lambda$updateRelationships$4(io.fluxcapacitor.common.api.modeling.Relationship, java.lang.Object, java.util.Map);
    Code:
       0: aload_2
       1: aload_0
       2: invokevirtual #370                // Method io/fluxcapacitor/common/api/modeling/Relationship.getAggregateId:()Ljava/lang/String;
       5: invokeinterface #385,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: aload_2
      12: areturn

  private io.fluxcapacitor.javaclient.modeling.ImmutableAggregateRoot lambda$handleEvent$3(long, io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage, java.lang.Object, io.fluxcapacitor.javaclient.modeling.ImmutableAggregateRoot);
    Code:
       0: aload         5
       2: invokevirtual #389                // Method io/fluxcapacitor/javaclient/modeling/ImmutableAggregateRoot.highestEventIndex:()Ljava/lang/Long;
       5: astore        6
       7: aload         6
       9: ifnull        22
      12: aload         6
      14: invokevirtual #145                // Method java/lang/Long.longValue:()J
      17: lload_1
      18: lcmp
      19: ifge          87
      22: invokestatic  #200                // InterfaceMethod io/fluxcapacitor/javaclient/modeling/Entity.isLoading:()Z
      25: istore        7
      27: getstatic     #392                // Field io/fluxcapacitor/javaclient/modeling/Entity.loading:Ljava/lang/ThreadLocal;
      30: iconst_1
      31: invokestatic  #396                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      34: invokevirtual #401                // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      37: aload         5
      39: aload_3
      40: invokevirtual #407                // Method io/fluxcapacitor/javaclient/modeling/ImmutableAggregateRoot.apply:(Lio/fluxcapacitor/javaclient/common/serialization/DeserializingMessage;)Lio/fluxcapacitor/javaclient/modeling/ImmutableAggregateRoot;
      43: astore        8
      45: aload_0
      46: aload         5
      48: aload         8
      50: invokevirtual #410                // Method updateRelationships:(Lio/fluxcapacitor/javaclient/modeling/ImmutableAggregateRoot;Lio/fluxcapacitor/javaclient/modeling/ImmutableAggregateRoot;)V
      53: aload         8
      55: astore        9
      57: getstatic     #392                // Field io/fluxcapacitor/javaclient/modeling/Entity.loading:Ljava/lang/ThreadLocal;
      60: iload         7
      62: invokestatic  #396                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      65: invokevirtual #401                // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      68: aload         9
      70: areturn
      71: astore        10
      73: getstatic     #392                // Field io/fluxcapacitor/javaclient/modeling/Entity.loading:Ljava/lang/ThreadLocal;
      76: iload         7
      78: invokestatic  #396                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      81: invokevirtual #401                // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      84: aload         10
      86: athrow
      87: aload         5
      89: areturn
    Exception table:
       from    to  target type
          27    57    71   any
          71    73    71   any

  private static io.fluxcapacitor.javaclient.modeling.ImmutableAggregateRoot lambda$handleEvent$2(io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage, java.lang.Object, io.fluxcapacitor.javaclient.modeling.ImmutableAggregateRoot);
    Code:
       0: aload_2
       1: aload_0
       2: invokevirtual #141                // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.getIndex:()Ljava/lang/Long;
       5: aload_0
       6: invokevirtual #164                // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.getMessageId:()Ljava/lang/String;
       9: invokevirtual #414                // Method io/fluxcapacitor/javaclient/modeling/ImmutableAggregateRoot.withEventIndex:(Ljava/lang/Long;Ljava/lang/String;)Lio/fluxcapacitor/javaclient/modeling/ImmutableAggregateRoot;
      12: areturn

  private void lambda$handleEvents$1(java.lang.Long);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #145                // Method java/lang/Long.longValue:()J
       5: putfield      #218                // Field lastEventIndex:J
       8: aload_0
       9: getfield      #128                // Field cache:Lio/fluxcapacitor/javaclient/persisting/caching/Cache;
      12: dup
      13: astore_2
      14: monitorenter
      15: aload_0
      16: getfield      #128                // Field cache:Lio/fluxcapacitor/javaclient/persisting/caching/Cache;
      19: invokevirtual #351                // Method java/lang/Object.notifyAll:()V
      22: aload_2
      23: monitorexit
      24: goto          32
      27: astore_3
      28: aload_2
      29: monitorexit
      30: aload_3
      31: athrow
      32: return
    Exception table:
       from    to  target type
          15    24    27   any
          27    30    27   any

  private static io.fluxcapacitor.common.api.SerializedMessage lambda$handleEvents$0(io.fluxcapacitor.common.api.SerializedMessage, io.fluxcapacitor.common.api.SerializedMessage);
    Code:
       0: aload_1
       1: areturn

  static {};
    Code:
       0: ldc           #10                 // class io/fluxcapacitor/javaclient/persisting/repository/CachingAggregateRepository
       2: invokestatic  #418                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #156                // Field log:Lorg/slf4j/Logger;
       8: ldc2_w        #424                // long 10l
      11: invokestatic  #426                // Method java/time/Duration.ofSeconds:(J)Ljava/time/Duration;
      14: putstatic     #260                // Field slowTrackingThreshold:Ljava/time/Duration;
      17: return
}
