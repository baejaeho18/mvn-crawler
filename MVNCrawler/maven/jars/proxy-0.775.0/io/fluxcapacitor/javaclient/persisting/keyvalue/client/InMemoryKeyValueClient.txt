Compiled from "InMemoryKeyValueClient.java"
public class io.fluxcapacitor.javaclient.persisting.keyvalue.client.InMemoryKeyValueClient implements io.fluxcapacitor.javaclient.persisting.keyvalue.client.KeyValueClient {
  private final java.util.Map<java.lang.String, io.fluxcapacitor.common.api.Data<byte[]>> values;

  public io.fluxcapacitor.javaclient.persisting.keyvalue.client.InMemoryKeyValueClient();
    Code:
       0: aload_0
       1: new           #1                  // class java/util/concurrent/ConcurrentHashMap
       4: dup
       5: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
       8: invokespecial #7                  // Method "<init>":(Ljava/util/Map;)V
      11: return

  protected io.fluxcapacitor.javaclient.persisting.keyvalue.client.InMemoryKeyValueClient(java.util.Map<java.lang.String, io.fluxcapacitor.common.api.Data<byte[]>>);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #15                 // Field values:Ljava/util/Map;
       9: return

  public java.util.concurrent.CompletableFuture<java.lang.Void> putValue(java.lang.String, io.fluxcapacitor.common.api.Data<byte[]>, io.fluxcapacitor.common.Guarantee);
    Code:
       0: aload_0
       1: getfield      #15                 // Field values:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #19,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: aconst_null
      13: invokestatic  #25                 // Method java/util/concurrent/CompletableFuture.completedFuture:(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
      16: areturn

  public java.util.concurrent.CompletableFuture<java.lang.Boolean> putValueIfAbsent(java.lang.String, io.fluxcapacitor.common.api.Data<byte[]>);
    Code:
       0: aload_0
       1: getfield      #15                 // Field values:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #31,  3           // InterfaceMethod java/util/Map.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: ifnonnull     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: invokestatic  #34                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      22: invokestatic  #25                 // Method java/util/concurrent/CompletableFuture.completedFuture:(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
      25: areturn

  public io.fluxcapacitor.common.api.Data<byte[]> getValue(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #15                 // Field values:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #40,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #44                 // class io/fluxcapacitor/common/api/Data
      13: areturn

  public java.util.concurrent.CompletableFuture<java.lang.Void> deleteValue(java.lang.String, io.fluxcapacitor.common.Guarantee);
    Code:
       0: aload_0
       1: getfield      #15                 // Field values:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #46,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: aconst_null
      12: invokestatic  #25                 // Method java/util/concurrent/CompletableFuture.completedFuture:(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
      15: areturn

  public void close();
    Code:
       0: return
}
