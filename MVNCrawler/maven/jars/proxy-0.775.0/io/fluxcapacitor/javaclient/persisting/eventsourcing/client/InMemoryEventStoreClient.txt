Compiled from "InMemoryEventStoreClient.java"
public class io.fluxcapacitor.javaclient.persisting.eventsourcing.client.InMemoryEventStoreClient extends io.fluxcapacitor.javaclient.tracking.client.InMemoryMessageStore implements io.fluxcapacitor.javaclient.persisting.eventsourcing.client.EventStoreClient {
  private final java.util.Map<java.lang.String, java.util.List<io.fluxcapacitor.common.api.SerializedMessage>> appliedEvents;

  private final java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.String>> relationships;

  public io.fluxcapacitor.javaclient.persisting.eventsourcing.client.InMemoryEventStoreClient();
    Code:
       0: aload_0
       1: getstatic     #1                  // Field io/fluxcapacitor/common/MessageType.EVENT:Lio/fluxcapacitor/common/MessageType;
       4: invokespecial #7                  // Method io/fluxcapacitor/javaclient/tracking/client/InMemoryMessageStore."<init>":(Lio/fluxcapacitor/common/MessageType;)V
       7: aload_0
       8: new           #13                 // class java/util/concurrent/ConcurrentHashMap
      11: dup
      12: invokespecial #15                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      15: putfield      #18                 // Field appliedEvents:Ljava/util/Map;
      18: aload_0
      19: new           #13                 // class java/util/concurrent/ConcurrentHashMap
      22: dup
      23: invokespecial #15                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      26: putfield      #24                 // Field relationships:Ljava/util/Map;
      29: return

  public io.fluxcapacitor.javaclient.persisting.eventsourcing.client.InMemoryEventStoreClient(java.time.Duration);
    Code:
       0: aload_0
       1: getstatic     #1                  // Field io/fluxcapacitor/common/MessageType.EVENT:Lio/fluxcapacitor/common/MessageType;
       4: aload_1
       5: invokespecial #27                 // Method io/fluxcapacitor/javaclient/tracking/client/InMemoryMessageStore."<init>":(Lio/fluxcapacitor/common/MessageType;Ljava/time/Duration;)V
       8: aload_0
       9: new           #13                 // class java/util/concurrent/ConcurrentHashMap
      12: dup
      13: invokespecial #15                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      16: putfield      #18                 // Field appliedEvents:Ljava/util/Map;
      19: aload_0
      20: new           #13                 // class java/util/concurrent/ConcurrentHashMap
      23: dup
      24: invokespecial #15                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      27: putfield      #24                 // Field relationships:Ljava/util/Map;
      30: return

  public java.util.concurrent.CompletableFuture<java.lang.Void> storeEvents(java.lang.String, java.util.List<io.fluxcapacitor.common.api.SerializedMessage>, boolean, io.fluxcapacitor.common.Guarantee);
    Code:
       0: aload_0
       1: getfield      #18                 // Field appliedEvents:Ljava/util/Map;
       4: aload_1
       5: invokedynamic #30,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      10: invokeinterface #34,  3           // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      15: checkcast     #40                 // class java/util/List
      18: aload_2
      19: invokeinterface #42,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      24: pop
      25: iload_3
      26: ifeq          34
      29: aconst_null
      30: invokestatic  #46                 // Method java/util/concurrent/CompletableFuture.completedFuture:(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
      33: areturn
      34: aload_0
      35: aload         4
      37: aload_2
      38: iconst_0
      39: anewarray     #52                 // class io/fluxcapacitor/common/api/SerializedMessage
      42: invokeinterface #54,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      47: checkcast     #58                 // class "[Lio/fluxcapacitor/common/api/SerializedMessage;"
      50: invokespecial #60                 // Method io/fluxcapacitor/javaclient/tracking/client/InMemoryMessageStore.send:(Lio/fluxcapacitor/common/Guarantee;[Lio/fluxcapacitor/common/api/SerializedMessage;)Ljava/util/concurrent/CompletableFuture;
      53: areturn

  public java.util.concurrent.CompletableFuture<java.lang.Void> updateRelationships(io.fluxcapacitor.common.api.modeling.UpdateRelationships);
    Code:
       0: aload_0
       1: invokedynamic #64,  0             // InvokeDynamic #1:apply:(Lio/fluxcapacitor/javaclient/persisting/eventsourcing/client/InMemoryEventStoreClient;)Ljava/util/function/Function;
       6: astore_2
       7: aload_1
       8: invokevirtual #67                 // Method io/fluxcapacitor/common/api/modeling/UpdateRelationships.getDissociations:()Ljava/util/Set;
      11: aload_2
      12: invokedynamic #73,  0             // InvokeDynamic #2:accept:(Ljava/util/function/Function;)Ljava/util/function/Consumer;
      17: invokeinterface #77,  2           // InterfaceMethod java/util/Set.forEach:(Ljava/util/function/Consumer;)V
      22: aload_1
      23: invokevirtual #83                 // Method io/fluxcapacitor/common/api/modeling/UpdateRelationships.getAssociations:()Ljava/util/Set;
      26: aload_2
      27: invokedynamic #86,  0             // InvokeDynamic #3:accept:(Ljava/util/function/Function;)Ljava/util/function/Consumer;
      32: invokeinterface #77,  2           // InterfaceMethod java/util/Set.forEach:(Ljava/util/function/Consumer;)V
      37: aconst_null
      38: invokestatic  #46                 // Method java/util/concurrent/CompletableFuture.completedFuture:(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
      41: areturn

  public java.util.concurrent.CompletableFuture<java.lang.Void> repairRelationships(io.fluxcapacitor.common.api.modeling.RepairRelationships);
    Code:
       0: aload_0
       1: getfield      #24                 // Field relationships:Ljava/util/Map;
       4: invokeinterface #87,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: aload_1
      10: invokedynamic #91,  0             // InvokeDynamic #4:accept:(Lio/fluxcapacitor/common/api/modeling/RepairRelationships;)Ljava/util/function/Consumer;
      15: invokeinterface #94,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      20: aload_0
      21: getfield      #24                 // Field relationships:Ljava/util/Map;
      24: invokeinterface #87,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      29: invokedynamic #97,  0             // InvokeDynamic #5:test:()Ljava/util/function/Predicate;
      34: invokeinterface #101,  2          // InterfaceMethod java/util/Collection.removeIf:(Ljava/util/function/Predicate;)Z
      39: pop
      40: aload_1
      41: invokevirtual #105                // Method io/fluxcapacitor/common/api/modeling/RepairRelationships.getEntityIds:()Ljava/util/Set;
      44: aload_0
      45: aload_1
      46: invokedynamic #110,  0            // InvokeDynamic #6:accept:(Lio/fluxcapacitor/javaclient/persisting/eventsourcing/client/InMemoryEventStoreClient;Lio/fluxcapacitor/common/api/modeling/RepairRelationships;)Ljava/util/function/Consumer;
      51: invokeinterface #77,  2           // InterfaceMethod java/util/Set.forEach:(Ljava/util/function/Consumer;)V
      56: aconst_null
      57: invokestatic  #46                 // Method java/util/concurrent/CompletableFuture.completedFuture:(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
      60: areturn

  public io.fluxcapacitor.javaclient.persisting.eventsourcing.AggregateEventStream<io.fluxcapacitor.common.api.SerializedMessage> getEvents(java.lang.String, long);
    Code:
       0: aload_0
       1: getfield      #18                 // Field appliedEvents:Ljava/util/Map;
       4: aload_1
       5: invokestatic  #113                // Method java/util/Collections.emptyList:()Ljava/util/List;
       8: invokeinterface #119,  3          // InterfaceMethod java/util/Map.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #40                 // class java/util/List
      16: astore        4
      18: new           #123                // class io/fluxcapacitor/javaclient/persisting/eventsourcing/AggregateEventStream
      21: dup
      22: aload         4
      24: iconst_1
      25: lload_2
      26: l2i
      27: iadd
      28: aload         4
      30: invokeinterface #125,  1          // InterfaceMethod java/util/List.size:()I
      35: invokestatic  #129                // Method java/lang/Math.min:(II)I
      38: aload         4
      40: invokeinterface #125,  1          // InterfaceMethod java/util/List.size:()I
      45: invokeinterface #135,  3          // InterfaceMethod java/util/List.subList:(II)Ljava/util/List;
      50: invokeinterface #139,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      55: aload_1
      56: aload         4
      58: invokedynamic #143,  0            // InvokeDynamic #7:get:(Ljava/util/List;)Ljava/util/function/Supplier;
      63: invokespecial #147                // Method io/fluxcapacitor/javaclient/persisting/eventsourcing/AggregateEventStream."<init>":(Ljava/util/stream/Stream;Ljava/lang/String;Ljava/util/function/Supplier;)V
      66: areturn

  public java.util.concurrent.CompletableFuture<java.lang.Void> deleteEvents(java.lang.String, io.fluxcapacitor.common.Guarantee);
    Code:
       0: aload_0
       1: getfield      #18                 // Field appliedEvents:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #150,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: aconst_null
      12: invokestatic  #46                 // Method java/util/concurrent/CompletableFuture.completedFuture:(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
      15: areturn

  public java.util.Map<java.lang.String, java.lang.String> getAggregateIds(io.fluxcapacitor.common.api.modeling.GetAggregateIds);
    Code:
       0: aload_0
       1: getfield      #24                 // Field relationships:Ljava/util/Map;
       4: aload_1
       5: invokevirtual #154                // Method io/fluxcapacitor/common/api/modeling/GetAggregateIds.getEntityId:()Ljava/lang/String;
       8: invokestatic  #160                // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      11: invokeinterface #119,  3          // InterfaceMethod java/util/Map.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #35                 // class java/util/Map
      19: invokestatic  #164                // InterfaceMethod java/util/Map.copyOf:(Ljava/util/Map;)Ljava/util/Map;
      22: areturn

  public java.util.List<io.fluxcapacitor.common.api.modeling.Relationship> getRelationships(io.fluxcapacitor.common.api.modeling.GetRelationships);
    Code:
       0: aload_0
       1: getfield      #24                 // Field relationships:Ljava/util/Map;
       4: aload_1
       5: invokevirtual #168                // Method io/fluxcapacitor/common/api/modeling/GetRelationships.getEntityId:()Ljava/lang/String;
       8: invokestatic  #160                // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      11: invokeinterface #119,  3          // InterfaceMethod java/util/Map.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #35                 // class java/util/Map
      19: invokeinterface #171,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      24: invokeinterface #174,  1          // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      29: aload_1
      30: invokedynamic #175,  0            // InvokeDynamic #8:apply:(Lio/fluxcapacitor/common/api/modeling/GetRelationships;)Ljava/util/function/Function;
      35: invokeinterface #178,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      40: invokeinterface #184,  1          // InterfaceMethod java/util/stream/Stream.toList:()Ljava/util/List;
      45: areturn

  private static io.fluxcapacitor.common.api.modeling.Relationship lambda$getRelationships$9(io.fluxcapacitor.common.api.modeling.GetRelationships, java.util.Map$Entry);
    Code:
       0: invokestatic  #187                // Method io/fluxcapacitor/common/api/modeling/Relationship.builder:()Lio/fluxcapacitor/common/api/modeling/Relationship$RelationshipBuilder;
       3: aload_0
       4: invokevirtual #168                // Method io/fluxcapacitor/common/api/modeling/GetRelationships.getEntityId:()Ljava/lang/String;
       7: invokevirtual #193                // Method io/fluxcapacitor/common/api/modeling/Relationship$RelationshipBuilder.entityId:(Ljava/lang/String;)Lio/fluxcapacitor/common/api/modeling/Relationship$RelationshipBuilder;
      10: aload_1
      11: invokeinterface #199,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      16: checkcast     #205                // class java/lang/String
      19: invokevirtual #207                // Method io/fluxcapacitor/common/api/modeling/Relationship$RelationshipBuilder.aggregateId:(Ljava/lang/String;)Lio/fluxcapacitor/common/api/modeling/Relationship$RelationshipBuilder;
      22: aload_1
      23: invokeinterface #210,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      28: checkcast     #205                // class java/lang/String
      31: invokevirtual #213                // Method io/fluxcapacitor/common/api/modeling/Relationship$RelationshipBuilder.aggregateType:(Ljava/lang/String;)Lio/fluxcapacitor/common/api/modeling/Relationship$RelationshipBuilder;
      34: invokevirtual #216                // Method io/fluxcapacitor/common/api/modeling/Relationship$RelationshipBuilder.build:()Lio/fluxcapacitor/common/api/modeling/Relationship;
      37: areturn

  private static java.lang.Long lambda$getEvents$8(java.util.List);
    Code:
       0: aload_0
       1: invokeinterface #125,  1          // InterfaceMethod java/util/List.size:()I
       6: i2l
       7: lconst_1
       8: lsub
       9: invokestatic  #220                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      12: areturn

  private void lambda$repairRelationships$7(io.fluxcapacitor.common.api.modeling.RepairRelationships, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #24                 // Field relationships:Ljava/util/Map;
       4: aload_2
       5: invokedynamic #226,  0            // InvokeDynamic #9:apply:()Ljava/util/function/Function;
      10: invokeinterface #34,  3           // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      15: checkcast     #35                 // class java/util/Map
      18: aload_1
      19: invokevirtual #227                // Method io/fluxcapacitor/common/api/modeling/RepairRelationships.getAggregateId:()Ljava/lang/String;
      22: aload_1
      23: invokevirtual #230                // Method io/fluxcapacitor/common/api/modeling/RepairRelationships.getAggregateType:()Ljava/lang/String;
      26: invokeinterface #233,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      31: pop
      32: return

  private static java.util.Map lambda$repairRelationships$6(java.lang.String);
    Code:
       0: new           #236                // class java/util/LinkedHashMap
       3: dup
       4: invokespecial #238                // Method java/util/LinkedHashMap."<init>":()V
       7: invokestatic  #239                // Method java/util/Collections.synchronizedMap:(Ljava/util/Map;)Ljava/util/Map;
      10: areturn

  private static void lambda$repairRelationships$5(io.fluxcapacitor.common.api.modeling.RepairRelationships, java.util.Map);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #227                // Method io/fluxcapacitor/common/api/modeling/RepairRelationships.getAggregateId:()Ljava/lang/String;
       5: invokeinterface #150,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: return

  private static void lambda$updateRelationships$4(java.util.function.Function, io.fluxcapacitor.common.api.modeling.Relationship);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #242,  2          // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #35                 // class java/util/Map
      10: aload_1
      11: invokevirtual #246                // Method io/fluxcapacitor/common/api/modeling/Relationship.getAggregateId:()Ljava/lang/String;
      14: aload_1
      15: invokevirtual #247                // Method io/fluxcapacitor/common/api/modeling/Relationship.getAggregateType:()Ljava/lang/String;
      18: invokeinterface #233,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      23: pop
      24: return

  private static void lambda$updateRelationships$3(java.util.function.Function, io.fluxcapacitor.common.api.modeling.Relationship);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #242,  2          // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #35                 // class java/util/Map
      10: aload_1
      11: invokevirtual #246                // Method io/fluxcapacitor/common/api/modeling/Relationship.getAggregateId:()Ljava/lang/String;
      14: invokeinterface #150,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: return

  private java.util.Map lambda$updateRelationships$2(io.fluxcapacitor.common.api.modeling.Relationship);
    Code:
       0: aload_0
       1: getfield      #24                 // Field relationships:Ljava/util/Map;
       4: aload_1
       5: invokevirtual #248                // Method io/fluxcapacitor/common/api/modeling/Relationship.getEntityId:()Ljava/lang/String;
       8: invokedynamic #249,  0            // InvokeDynamic #10:apply:()Ljava/util/function/Function;
      13: invokeinterface #34,  3           // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      18: checkcast     #35                 // class java/util/Map
      21: areturn

  private static java.util.Map lambda$updateRelationships$1(java.lang.String);
    Code:
       0: new           #236                // class java/util/LinkedHashMap
       3: dup
       4: invokespecial #238                // Method java/util/LinkedHashMap."<init>":()V
       7: invokestatic  #239                // Method java/util/Collections.synchronizedMap:(Ljava/util/Map;)Ljava/util/Map;
      10: areturn

  private static java.util.List lambda$storeEvents$0(java.lang.String);
    Code:
       0: new           #250                // class java/util/concurrent/CopyOnWriteArrayList
       3: dup
       4: invokespecial #252                // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
       7: areturn
}
