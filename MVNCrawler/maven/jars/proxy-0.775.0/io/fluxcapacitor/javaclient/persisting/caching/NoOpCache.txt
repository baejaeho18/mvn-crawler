Compiled from "NoOpCache.java"
public final class io.fluxcapacitor.javaclient.persisting.caching.NoOpCache extends java.lang.Enum<io.fluxcapacitor.javaclient.persisting.caching.NoOpCache> implements io.fluxcapacitor.javaclient.persisting.caching.Cache {
  public static final io.fluxcapacitor.javaclient.persisting.caching.NoOpCache INSTANCE;

  private static final io.fluxcapacitor.javaclient.persisting.caching.NoOpCache[] $VALUES;

  public static io.fluxcapacitor.javaclient.persisting.caching.NoOpCache[] values();
    Code:
       0: getstatic     #7                  // Field $VALUES:[Lio/fluxcapacitor/javaclient/persisting/caching/NoOpCache;
       3: invokevirtual #11                 // Method "[Lio/fluxcapacitor/javaclient/persisting/caching/NoOpCache;".clone:()Ljava/lang/Object;
       6: checkcast     #12                 // class "[Lio/fluxcapacitor/javaclient/persisting/caching/NoOpCache;"
       9: areturn

  public static io.fluxcapacitor.javaclient.persisting.caching.NoOpCache valueOf(java.lang.String);
    Code:
       0: ldc           #1                  // class io/fluxcapacitor/javaclient/persisting/caching/NoOpCache
       2: aload_0
       3: invokestatic  #16                 // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #1                  // class io/fluxcapacitor/javaclient/persisting/caching/NoOpCache
       9: areturn

  private io.fluxcapacitor.javaclient.persisting.caching.NoOpCache();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #22                 // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: return

  public java.lang.Object put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_2
       1: ifnonnull     14
       4: new           #26                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #28                 // String value is marked non-null but is null
      10: invokespecial #30                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aconst_null
      15: areturn

  public java.lang.Object putIfAbsent(java.lang.Object, java.lang.Object);
    Code:
       0: aload_2
       1: ifnonnull     14
       4: new           #26                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #28                 // String value is marked non-null but is null
      10: invokespecial #30                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aconst_null
      15: areturn

  public <T> T computeIfAbsent(java.lang.Object, java.util.function.Function<? super java.lang.Object, T>);
    Code:
       0: aload_2
       1: aload_1
       2: invokeinterface #33,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public <T> T computeIfPresent(java.lang.Object, java.util.function.BiFunction<? super java.lang.Object, ? super T, ? extends T>);
    Code:
       0: aconst_null
       1: areturn

  public <T> T compute(java.lang.Object, java.util.function.BiFunction<? super java.lang.Object, ? super T, ? extends T>);
    Code:
       0: aload_2
       1: aload_1
       2: aconst_null
       3: invokeinterface #39,  3           // InterfaceMethod java/util/function/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public <T> T get(java.lang.Object);
    Code:
       0: aconst_null
       1: areturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: iconst_0
       1: ireturn

  public <T> T remove(java.lang.Object);
    Code:
       0: aconst_null
       1: areturn

  public void clear();
    Code:
       0: return

  public int size();
    Code:
       0: iconst_0
       1: ireturn

  public io.fluxcapacitor.common.Registration registerEvictionListener(java.util.function.Consumer<io.fluxcapacitor.javaclient.persisting.caching.CacheEvictionEvent>);
    Code:
       0: invokestatic  #44                 // InterfaceMethod io/fluxcapacitor/common/Registration.noOp:()Lio/fluxcapacitor/common/Registration;
       3: areturn

  public void close();
    Code:
       0: return

  private static io.fluxcapacitor.javaclient.persisting.caching.NoOpCache[] $values();
    Code:
       0: iconst_1
       1: anewarray     #1                  // class io/fluxcapacitor/javaclient/persisting/caching/NoOpCache
       4: dup
       5: iconst_0
       6: getstatic     #3                  // Field INSTANCE:Lio/fluxcapacitor/javaclient/persisting/caching/NoOpCache;
       9: aastore
      10: areturn

  static {};
    Code:
       0: new           #1                  // class io/fluxcapacitor/javaclient/persisting/caching/NoOpCache
       3: dup
       4: ldc           #50                 // String INSTANCE
       6: iconst_0
       7: invokespecial #51                 // Method "<init>":(Ljava/lang/String;I)V
      10: putstatic     #3                  // Field INSTANCE:Lio/fluxcapacitor/javaclient/persisting/caching/NoOpCache;
      13: invokestatic  #52                 // Method $values:()[Lio/fluxcapacitor/javaclient/persisting/caching/NoOpCache;
      16: putstatic     #7                  // Field $VALUES:[Lio/fluxcapacitor/javaclient/persisting/caching/NoOpCache;
      19: return
}
