Compiled from "DefaultAggregateRepository.java"
public class io.fluxcapacitor.javaclient.persisting.repository.DefaultAggregateRepository implements io.fluxcapacitor.javaclient.persisting.repository.AggregateRepository {
  private static final org.slf4j.Logger log;

  private final io.fluxcapacitor.javaclient.persisting.eventsourcing.EventStore eventStore;

  private final io.fluxcapacitor.javaclient.persisting.eventsourcing.client.EventStoreClient eventStoreClient;

  private final io.fluxcapacitor.javaclient.persisting.eventsourcing.SnapshotStore snapshotStore;

  private final io.fluxcapacitor.javaclient.persisting.caching.Cache aggregateCache;

  private final io.fluxcapacitor.javaclient.persisting.caching.Cache relationshipsCache;

  private final io.fluxcapacitor.javaclient.persisting.search.DocumentStore documentStore;

  private final io.fluxcapacitor.javaclient.common.serialization.Serializer serializer;

  private final io.fluxcapacitor.javaclient.publishing.DispatchInterceptor dispatchInterceptor;

  private final io.fluxcapacitor.javaclient.modeling.EntityHelper entityHelper;

  private final java.util.function.Function<java.lang.Class<?>, io.fluxcapacitor.javaclient.persisting.repository.DefaultAggregateRepository$AnnotatedAggregateRepository<?>> delegates;

  public <T> io.fluxcapacitor.javaclient.modeling.Entity<T> load(java.lang.Object, java.lang.Class<T>);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #1                  // class java/lang/NullPointerException
       7: dup
       8: ldc           #3                  // String aggregateId is marked non-null but is null
      10: invokespecial #5                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: invokestatic  #9                  // InterfaceMethod io/fluxcapacitor/javaclient/modeling/Entity.isLoading:()Z
      17: ifeq          36
      20: new           #15                 // class io/fluxcapacitor/javaclient/modeling/NoOpEntity
      23: dup
      24: aload_0
      25: aload_2
      26: aload_1
      27: invokedynamic #17,  0             // InvokeDynamic #0:get:(Lio/fluxcapacitor/javaclient/persisting/repository/DefaultAggregateRepository;Ljava/lang/Class;Ljava/lang/Object;)Ljava/util/function/Supplier;
      32: invokespecial #21                 // Method io/fluxcapacitor/javaclient/modeling/NoOpEntity."<init>":(Ljava/util/function/Supplier;)V
      35: areturn
      36: aload_0
      37: getfield      #24                 // Field delegates:Ljava/util/function/Function;
      40: aload_2
      41: invokeinterface #30,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      46: checkcast     #36                 // class io/fluxcapacitor/javaclient/persisting/repository/DefaultAggregateRepository$AnnotatedAggregateRepository
      49: aload_1
      50: invokevirtual #38                 // Method io/fluxcapacitor/javaclient/persisting/repository/DefaultAggregateRepository$AnnotatedAggregateRepository.load:(Ljava/lang/Object;)Lio/fluxcapacitor/javaclient/modeling/ModifiableAggregateRoot;
      53: areturn

  public <T> io.fluxcapacitor.javaclient.modeling.Entity<T> loadFor(java.lang.Object, java.lang.Class<?>);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #1                  // class java/lang/NullPointerException
       7: dup
       8: ldc           #42                 // String entityId is marked non-null but is null
      10: invokespecial #5                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: invokevirtual #44                 // Method getAggregatesFor:(Ljava/lang/Object;)Ljava/util/Map;
      19: astore_3
      20: aload_3
      21: invokeinterface #48,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      26: ifeq          36
      29: aload_0
      30: aload_1
      31: aload_2
      32: invokevirtual #53                 // Method load:(Ljava/lang/Object;Ljava/lang/Class;)Lio/fluxcapacitor/javaclient/modeling/Entity;
      35: areturn
      36: aload_3
      37: aload_1
      38: invokevirtual #56                 // Method java/lang/Object.toString:()Ljava/lang/String;
      41: invokeinterface #62,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      46: ifeq          68
      49: aload_0
      50: aload_1
      51: aload_3
      52: aload_1
      53: invokevirtual #56                 // Method java/lang/Object.toString:()Ljava/lang/String;
      56: invokeinterface #66,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      61: checkcast     #68                 // class java/lang/Class
      64: invokevirtual #53                 // Method load:(Ljava/lang/Object;Ljava/lang/Class;)Lio/fluxcapacitor/javaclient/modeling/Entity;
      67: areturn
      68: aload_3
      69: invokeinterface #70,  1           // InterfaceMethod java/util/Map.size:()I
      74: iconst_1
      75: if_icmple     89
      78: getstatic     #74                 // Field log:Lorg/slf4j/Logger;
      81: ldc           #78                 // String Found multiple aggregates containing entity {}. Loading the most recent one.
      83: aload_1
      84: invokeinterface #80,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      89: aload_3
      90: invokeinterface #86,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      95: invokeinterface #90,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
     100: invokedynamic #96,  0             // InvokeDynamic #1:test:()Ljava/util/function/Predicate;
     105: invokeinterface #100,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
     110: invokedynamic #106,  0            // InvokeDynamic #2:apply:()Ljava/util/function/BinaryOperator;
     115: invokeinterface #109,  2          // InterfaceMethod java/util/stream/Stream.reduce:(Ljava/util/function/BinaryOperator;)Ljava/util/Optional;
     120: aload_0
     121: invokedynamic #113,  0            // InvokeDynamic #3:apply:(Lio/fluxcapacitor/javaclient/persisting/repository/DefaultAggregateRepository;)Ljava/util/function/Function;
     126: invokevirtual #116                // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
     129: aload_0
     130: aload_1
     131: aload_2
     132: invokedynamic #122,  0            // InvokeDynamic #4:get:(Lio/fluxcapacitor/javaclient/persisting/repository/DefaultAggregateRepository;Ljava/lang/Object;Ljava/lang/Class;)Ljava/util/function/Supplier;
     137: invokevirtual #125                // Method java/util/Optional.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;
     140: checkcast     #10                 // class io/fluxcapacitor/javaclient/modeling/Entity
     143: areturn

  public java.util.Map<java.lang.String, java.lang.Class<?>> getAggregatesFor(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #1                  // class java/lang/NullPointerException
       7: dup
       8: ldc           #42                 // String entityId is marked non-null but is null
      10: invokespecial #5                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #129                // Field relationshipsCache:Lio/fluxcapacitor/javaclient/persisting/caching/Cache;
      18: aload_1
      19: invokevirtual #56                 // Method java/lang/Object.toString:()Ljava/lang/String;
      22: aload_0
      23: invokedynamic #133,  0            // InvokeDynamic #5:apply:(Lio/fluxcapacitor/javaclient/persisting/repository/DefaultAggregateRepository;)Ljava/util/function/Function;
      28: invokeinterface #134,  3          // InterfaceMethod io/fluxcapacitor/javaclient/persisting/caching/Cache.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      33: checkcast     #49                 // class java/util/Map
      36: areturn

  public java.util.concurrent.CompletableFuture<java.lang.Void> repairRelationships(io.fluxcapacitor.javaclient.modeling.Entity<?>);
    Code:
       0: aload_1
       1: invokeinterface #140,  1          // InterfaceMethod io/fluxcapacitor/javaclient/modeling/Entity.root:()Lio/fluxcapacitor/javaclient/modeling/Entity;
       6: astore_1
       7: aload_0
       8: getfield      #144                // Field eventStoreClient:Lio/fluxcapacitor/javaclient/persisting/eventsourcing/client/EventStoreClient;
      11: new           #148                // class io/fluxcapacitor/common/api/modeling/RepairRelationships
      14: dup
      15: aload_1
      16: invokeinterface #150,  1          // InterfaceMethod io/fluxcapacitor/javaclient/modeling/Entity.id:()Ljava/lang/Object;
      21: invokevirtual #56                 // Method java/lang/Object.toString:()Ljava/lang/String;
      24: aload_1
      25: invokeinterface #154,  1          // InterfaceMethod io/fluxcapacitor/javaclient/modeling/Entity.type:()Ljava/lang/Class;
      30: invokevirtual #158                // Method java/lang/Class.getName:()Ljava/lang/String;
      33: aload_1
      34: invokeinterface #161,  1          // InterfaceMethod io/fluxcapacitor/javaclient/modeling/Entity.relationships:()Ljava/util/Set;
      39: invokeinterface #90,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      44: invokedynamic #164,  0            // InvokeDynamic #6:apply:()Ljava/util/function/Function;
      49: invokeinterface #167,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      54: invokestatic  #170                // Method java/util/stream/Collectors.toSet:()Ljava/util/stream/Collector;
      57: invokeinterface #176,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      62: checkcast     #91                 // class java/util/Set
      65: getstatic     #180                // Field io/fluxcapacitor/common/Guarantee.STORED:Lio/fluxcapacitor/common/Guarantee;
      68: invokespecial #186                // Method io/fluxcapacitor/common/api/modeling/RepairRelationships."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;Lio/fluxcapacitor/common/Guarantee;)V
      71: invokeinterface #189,  2          // InterfaceMethod io/fluxcapacitor/javaclient/persisting/eventsourcing/client/EventStoreClient.repairRelationships:(Lio/fluxcapacitor/common/api/modeling/RepairRelationships;)Ljava/util/concurrent/CompletableFuture;
      76: areturn

  public io.fluxcapacitor.javaclient.persisting.repository.DefaultAggregateRepository(io.fluxcapacitor.javaclient.persisting.eventsourcing.EventStore, io.fluxcapacitor.javaclient.persisting.eventsourcing.client.EventStoreClient, io.fluxcapacitor.javaclient.persisting.eventsourcing.SnapshotStore, io.fluxcapacitor.javaclient.persisting.caching.Cache, io.fluxcapacitor.javaclient.persisting.caching.Cache, io.fluxcapacitor.javaclient.persisting.search.DocumentStore, io.fluxcapacitor.javaclient.common.serialization.Serializer, io.fluxcapacitor.javaclient.publishing.DispatchInterceptor, io.fluxcapacitor.javaclient.modeling.EntityHelper);
    Code:
       0: aload_0
       1: invokespecial #195                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokedynamic #198,  0            // InvokeDynamic #7:apply:(Lio/fluxcapacitor/javaclient/persisting/repository/DefaultAggregateRepository;)Ljava/util/function/Function;
      11: invokestatic  #199                // Method io/fluxcapacitor/common/ObjectUtils.memoize:(Ljava/util/function/Function;)Lio/fluxcapacitor/common/MemoizingFunction;
      14: putfield      #24                 // Field delegates:Ljava/util/function/Function;
      17: aload_0
      18: aload_1
      19: putfield      #205                // Field eventStore:Lio/fluxcapacitor/javaclient/persisting/eventsourcing/EventStore;
      22: aload_0
      23: aload_2
      24: putfield      #144                // Field eventStoreClient:Lio/fluxcapacitor/javaclient/persisting/eventsourcing/client/EventStoreClient;
      27: aload_0
      28: aload_3
      29: putfield      #209                // Field snapshotStore:Lio/fluxcapacitor/javaclient/persisting/eventsourcing/SnapshotStore;
      32: aload_0
      33: aload         4
      35: putfield      #213                // Field aggregateCache:Lio/fluxcapacitor/javaclient/persisting/caching/Cache;
      38: aload_0
      39: aload         5
      41: putfield      #129                // Field relationshipsCache:Lio/fluxcapacitor/javaclient/persisting/caching/Cache;
      44: aload_0
      45: aload         6
      47: putfield      #216                // Field documentStore:Lio/fluxcapacitor/javaclient/persisting/search/DocumentStore;
      50: aload_0
      51: aload         7
      53: putfield      #220                // Field serializer:Lio/fluxcapacitor/javaclient/common/serialization/Serializer;
      56: aload_0
      57: aload         8
      59: putfield      #224                // Field dispatchInterceptor:Lio/fluxcapacitor/javaclient/publishing/DispatchInterceptor;
      62: aload_0
      63: aload         9
      65: putfield      #228                // Field entityHelper:Lio/fluxcapacitor/javaclient/modeling/EntityHelper;
      68: return

  private io.fluxcapacitor.javaclient.persisting.eventsourcing.EventStore eventStore();
    Code:
       0: aload_0
       1: getfield      #205                // Field eventStore:Lio/fluxcapacitor/javaclient/persisting/eventsourcing/EventStore;
       4: areturn

  private io.fluxcapacitor.javaclient.persisting.eventsourcing.client.EventStoreClient eventStoreClient();
    Code:
       0: aload_0
       1: getfield      #144                // Field eventStoreClient:Lio/fluxcapacitor/javaclient/persisting/eventsourcing/client/EventStoreClient;
       4: areturn

  private io.fluxcapacitor.javaclient.persisting.eventsourcing.SnapshotStore snapshotStore();
    Code:
       0: aload_0
       1: getfield      #209                // Field snapshotStore:Lio/fluxcapacitor/javaclient/persisting/eventsourcing/SnapshotStore;
       4: areturn

  private io.fluxcapacitor.javaclient.persisting.caching.Cache aggregateCache();
    Code:
       0: aload_0
       1: getfield      #213                // Field aggregateCache:Lio/fluxcapacitor/javaclient/persisting/caching/Cache;
       4: areturn

  private io.fluxcapacitor.javaclient.persisting.caching.Cache relationshipsCache();
    Code:
       0: aload_0
       1: getfield      #129                // Field relationshipsCache:Lio/fluxcapacitor/javaclient/persisting/caching/Cache;
       4: areturn

  private io.fluxcapacitor.javaclient.persisting.search.DocumentStore documentStore();
    Code:
       0: aload_0
       1: getfield      #216                // Field documentStore:Lio/fluxcapacitor/javaclient/persisting/search/DocumentStore;
       4: areturn

  private io.fluxcapacitor.javaclient.common.serialization.Serializer serializer();
    Code:
       0: aload_0
       1: getfield      #220                // Field serializer:Lio/fluxcapacitor/javaclient/common/serialization/Serializer;
       4: areturn

  private io.fluxcapacitor.javaclient.publishing.DispatchInterceptor dispatchInterceptor();
    Code:
       0: aload_0
       1: getfield      #224                // Field dispatchInterceptor:Lio/fluxcapacitor/javaclient/publishing/DispatchInterceptor;
       4: areturn

  private io.fluxcapacitor.javaclient.modeling.EntityHelper entityHelper();
    Code:
       0: aload_0
       1: getfield      #228                // Field entityHelper:Lio/fluxcapacitor/javaclient/modeling/EntityHelper;
       4: areturn

  private java.util.function.Function<java.lang.Class<?>, io.fluxcapacitor.javaclient.persisting.repository.DefaultAggregateRepository$AnnotatedAggregateRepository<?>> delegates();
    Code:
       0: aload_0
       1: getfield      #24                 // Field delegates:Ljava/util/function/Function;
       4: areturn

  private java.util.LinkedHashMap lambda$getAggregatesFor$8(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #144                // Field eventStoreClient:Lio/fluxcapacitor/javaclient/persisting/eventsourcing/client/EventStoreClient;
       4: aload_1
       5: invokevirtual #56                 // Method java/lang/Object.toString:()Ljava/lang/String;
       8: invokeinterface #232,  2          // InterfaceMethod io/fluxcapacitor/javaclient/persisting/eventsourcing/client/EventStoreClient.getAggregatesFor:(Ljava/lang/String;)Ljava/util/Map;
      13: invokeinterface #86,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      18: invokeinterface #90,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      23: invokedynamic #235,  0            // InvokeDynamic #8:apply:()Ljava/util/function/Function;
      28: aload_0
      29: invokedynamic #236,  0            // InvokeDynamic #9:apply:(Lio/fluxcapacitor/javaclient/persisting/repository/DefaultAggregateRepository;)Ljava/util/function/Function;
      34: invokedynamic #237,  0            // InvokeDynamic #10:apply:()Ljava/util/function/BinaryOperator;
      39: invokedynamic #238,  0            // InvokeDynamic #11:get:()Ljava/util/function/Supplier;
      44: invokestatic  #241                // Method java/util/stream/Collectors.toMap:(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/util/stream/Collector;
      47: invokeinterface #176,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      52: checkcast     #245                // class java/util/LinkedHashMap
      55: areturn

  private static java.lang.Class lambda$getAggregatesFor$7(java.lang.Class, java.lang.Class);
    Code:
       0: aload_1
       1: areturn

  private java.lang.Class lambda$getAggregatesFor$6(java.util.Map$Entry);
    Code:
       0: aload_0
       1: getfield      #220                // Field serializer:Lio/fluxcapacitor/javaclient/common/serialization/Serializer;
       4: aload_1
       5: invokeinterface #247,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      10: checkcast     #252                // class java/lang/String
      13: invokeinterface #254,  2          // InterfaceMethod io/fluxcapacitor/javaclient/common/serialization/Serializer.upcastType:(Ljava/lang/String;)Ljava/lang/String;
      18: ldc_w         #260                // class java/lang/Void
      21: invokestatic  #262                // Method io/fluxcapacitor/common/reflection/ReflectionUtils.classForName:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;
      24: areturn

  private io.fluxcapacitor.javaclient.modeling.Entity lambda$loadFor$5(java.lang.Object, java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #53                 // Method load:(Ljava/lang/Object;Ljava/lang/Class;)Lio/fluxcapacitor/javaclient/modeling/Entity;
       6: areturn

  private io.fluxcapacitor.javaclient.modeling.Entity lambda$loadFor$4(java.util.Map$Entry);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #268,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
       7: aload_1
       8: invokeinterface #247,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      13: checkcast     #68                 // class java/lang/Class
      16: invokevirtual #53                 // Method load:(Ljava/lang/Object;Ljava/lang/Class;)Lio/fluxcapacitor/javaclient/modeling/Entity;
      19: areturn

  private static java.util.Map$Entry lambda$loadFor$3(java.util.Map$Entry, java.util.Map$Entry);
    Code:
       0: aload_1
       1: areturn

  private static boolean lambda$loadFor$2(java.util.Map$Entry);
    Code:
       0: ldc_w         #260                // class java/lang/Void
       3: aload_0
       4: invokeinterface #247,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
       9: invokevirtual #271                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      12: ifne          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  private io.fluxcapacitor.javaclient.modeling.Entity lambda$load$1(java.lang.Class, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #24                 // Field delegates:Ljava/util/function/Function;
       4: aload_1
       5: invokeinterface #30,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #36                 // class io/fluxcapacitor/javaclient/persisting/repository/DefaultAggregateRepository$AnnotatedAggregateRepository
      13: aload_2
      14: invokevirtual #38                 // Method io/fluxcapacitor/javaclient/persisting/repository/DefaultAggregateRepository$AnnotatedAggregateRepository.load:(Ljava/lang/Object;)Lio/fluxcapacitor/javaclient/modeling/ModifiableAggregateRoot;
      17: areturn

  private io.fluxcapacitor.javaclient.persisting.repository.DefaultAggregateRepository$AnnotatedAggregateRepository lambda$new$0(java.lang.Class);
    Code:
       0: new           #36                 // class io/fluxcapacitor/javaclient/persisting/repository/DefaultAggregateRepository$AnnotatedAggregateRepository
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #274                // Method io/fluxcapacitor/javaclient/persisting/repository/DefaultAggregateRepository$AnnotatedAggregateRepository."<init>":(Lio/fluxcapacitor/javaclient/persisting/repository/DefaultAggregateRepository;Ljava/lang/Class;)V
       9: areturn

  static {};
    Code:
       0: ldc           #25                 // class io/fluxcapacitor/javaclient/persisting/repository/DefaultAggregateRepository
       2: invokestatic  #277                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #74                 // Field log:Lorg/slf4j/Logger;
       8: return
}
