Compiled from "SelectiveCache.java"
public class io.fluxcapacitor.javaclient.persisting.caching.SelectiveCache implements io.fluxcapacitor.javaclient.persisting.caching.Cache {
  private final io.fluxcapacitor.javaclient.persisting.caching.Cache delegate;

  private final java.util.function.Predicate<java.lang.Object> selector;

  private final io.fluxcapacitor.javaclient.persisting.caching.Cache nextCache;

  public static java.util.function.Predicate<java.lang.Object> aggregateSelector(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokedynamic #1,  0              // InvokeDynamic #0:test:(Ljava/lang/Class;)Ljava/util/function/Predicate;
       6: areturn

  public io.fluxcapacitor.javaclient.persisting.caching.SelectiveCache(io.fluxcapacitor.javaclient.persisting.caching.Cache, java.util.function.Predicate<java.lang.Object>);
    Code:
       0: aload_0
       1: new           #5                  // class io/fluxcapacitor/javaclient/persisting/caching/DefaultCache
       4: dup
       5: invokespecial #7                  // Method io/fluxcapacitor/javaclient/persisting/caching/DefaultCache."<init>":()V
       8: aload_2
       9: aload_1
      10: invokespecial #11                 // Method "<init>":(Lio/fluxcapacitor/javaclient/persisting/caching/Cache;Ljava/util/function/Predicate;Lio/fluxcapacitor/javaclient/persisting/caching/Cache;)V
      13: return

  public java.lang.Object put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #16                 // Field selector:Ljava/util/function/Predicate;
       4: aload_2
       5: invokeinterface #20,  2           // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      10: ifeq          48
      13: aload_0
      14: getfield      #25                 // Field delegate:Lio/fluxcapacitor/javaclient/persisting/caching/Cache;
      17: aload_1
      18: aload_2
      19: invokeinterface #29,  3           // InterfaceMethod io/fluxcapacitor/javaclient/persisting/caching/Cache.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      24: astore_3
      25: aload_0
      26: getfield      #35                 // Field nextCache:Lio/fluxcapacitor/javaclient/persisting/caching/Cache;
      29: aload_1
      30: invokeinterface #38,  2           // InterfaceMethod io/fluxcapacitor/javaclient/persisting/caching/Cache.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      35: astore        4
      37: aload_3
      38: ifnonnull     46
      41: aload         4
      43: goto          47
      46: aload_3
      47: areturn
      48: aload_0
      49: getfield      #35                 // Field nextCache:Lio/fluxcapacitor/javaclient/persisting/caching/Cache;
      52: aload_1
      53: aload_2
      54: invokeinterface #29,  3           // InterfaceMethod io/fluxcapacitor/javaclient/persisting/caching/Cache.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      59: astore_3
      60: aload_0
      61: getfield      #25                 // Field delegate:Lio/fluxcapacitor/javaclient/persisting/caching/Cache;
      64: aload_1
      65: invokeinterface #38,  2           // InterfaceMethod io/fluxcapacitor/javaclient/persisting/caching/Cache.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      70: astore        4
      72: aload_3
      73: ifnonnull     81
      76: aload         4
      78: goto          82
      81: aload_3
      82: areturn

  public java.lang.Object putIfAbsent(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #16                 // Field selector:Ljava/util/function/Predicate;
       4: aload_2
       5: invokeinterface #20,  2           // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      10: ifeq          48
      13: aload_0
      14: getfield      #25                 // Field delegate:Lio/fluxcapacitor/javaclient/persisting/caching/Cache;
      17: aload_1
      18: aload_2
      19: invokeinterface #42,  3           // InterfaceMethod io/fluxcapacitor/javaclient/persisting/caching/Cache.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      24: astore_3
      25: aload_0
      26: getfield      #35                 // Field nextCache:Lio/fluxcapacitor/javaclient/persisting/caching/Cache;
      29: aload_1
      30: invokeinterface #38,  2           // InterfaceMethod io/fluxcapacitor/javaclient/persisting/caching/Cache.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      35: astore        4
      37: aload_3
      38: ifnonnull     46
      41: aload         4
      43: goto          47
      46: aload_3
      47: areturn
      48: aload_0
      49: getfield      #35                 // Field nextCache:Lio/fluxcapacitor/javaclient/persisting/caching/Cache;
      52: aload_1
      53: aload_2
      54: invokeinterface #42,  3           // InterfaceMethod io/fluxcapacitor/javaclient/persisting/caching/Cache.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      59: astore_3
      60: aload_0
      61: getfield      #25                 // Field delegate:Lio/fluxcapacitor/javaclient/persisting/caching/Cache;
      64: aload_1
      65: invokeinterface #38,  2           // InterfaceMethod io/fluxcapacitor/javaclient/persisting/caching/Cache.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      70: astore        4
      72: aload_3
      73: ifnonnull     81
      76: aload         4
      78: goto          82
      81: aload_3
      82: areturn

  public <T> T computeIfAbsent(java.lang.Object, java.util.function.Function<? super java.lang.Object, T>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_1
       4: invokedynamic #45,  0             // InvokeDynamic #1:apply:(Ljava/util/function/Function;Ljava/lang/Object;)Ljava/util/function/BiFunction;
       9: invokevirtual #49                 // Method compute:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      12: areturn

  public <T> T computeIfPresent(java.lang.Object, java.util.function.BiFunction<? super java.lang.Object, ? super T, ? extends T>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #53,  0             // InvokeDynamic #2:apply:(Ljava/util/function/BiFunction;)Ljava/util/function/BiFunction;
       8: invokevirtual #49                 // Method compute:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      11: areturn

  public <T> T compute(java.lang.Object, java.util.function.BiFunction<? super java.lang.Object, ? super T, ? extends T>);
    Code:
       0: new           #56                 // class java/util/concurrent/atomic/AtomicReference
       3: dup
       4: invokespecial #58                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
       7: astore_3
       8: aload_0
       9: getfield      #35                 // Field nextCache:Lio/fluxcapacitor/javaclient/persisting/caching/Cache;
      12: aload_1
      13: aload_0
      14: aload_1
      15: aload_2
      16: aload_3
      17: invokedynamic #59,  0             // InvokeDynamic #3:apply:(Lio/fluxcapacitor/javaclient/persisting/caching/SelectiveCache;Ljava/lang/Object;Ljava/util/function/BiFunction;Ljava/util/concurrent/atomic/AtomicReference;)Ljava/util/function/BiFunction;
      22: invokeinterface #62,  3           // InterfaceMethod io/fluxcapacitor/javaclient/persisting/caching/Cache.compute:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      27: astore        4
      29: aload         4
      31: ifnonnull     41
      34: aload_3
      35: invokevirtual #63                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      38: goto          43
      41: aload         4
      43: areturn

  public <T> T get(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #25                 // Field delegate:Lio/fluxcapacitor/javaclient/persisting/caching/Cache;
       4: aload_1
       5: invokeinterface #67,  2           // InterfaceMethod io/fluxcapacitor/javaclient/persisting/caching/Cache.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: invokestatic  #69                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      13: aload_0
      14: aload_1
      15: invokedynamic #75,  0             // InvokeDynamic #4:get:(Lio/fluxcapacitor/javaclient/persisting/caching/SelectiveCache;Ljava/lang/Object;)Ljava/util/function/Supplier;
      20: invokevirtual #78                 // Method java/util/Optional.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      23: areturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #25                 // Field delegate:Lio/fluxcapacitor/javaclient/persisting/caching/Cache;
       4: aload_1
       5: invokeinterface #82,  2           // InterfaceMethod io/fluxcapacitor/javaclient/persisting/caching/Cache.containsKey:(Ljava/lang/Object;)Z
      10: ifne          26
      13: aload_0
      14: getfield      #35                 // Field nextCache:Lio/fluxcapacitor/javaclient/persisting/caching/Cache;
      17: aload_1
      18: invokeinterface #82,  2           // InterfaceMethod io/fluxcapacitor/javaclient/persisting/caching/Cache.containsKey:(Ljava/lang/Object;)Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  public <T> T remove(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #25                 // Field delegate:Lio/fluxcapacitor/javaclient/persisting/caching/Cache;
       4: aload_1
       5: invokeinterface #38,  2           // InterfaceMethod io/fluxcapacitor/javaclient/persisting/caching/Cache.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: astore_2
      11: aload_0
      12: getfield      #35                 // Field nextCache:Lio/fluxcapacitor/javaclient/persisting/caching/Cache;
      15: aload_1
      16: invokeinterface #38,  2           // InterfaceMethod io/fluxcapacitor/javaclient/persisting/caching/Cache.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      21: astore_3
      22: aload_2
      23: ifnonnull     30
      26: aload_3
      27: goto          31
      30: aload_2
      31: areturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #25                 // Field delegate:Lio/fluxcapacitor/javaclient/persisting/caching/Cache;
       4: invokeinterface #85,  1           // InterfaceMethod io/fluxcapacitor/javaclient/persisting/caching/Cache.clear:()V
       9: aload_0
      10: getfield      #35                 // Field nextCache:Lio/fluxcapacitor/javaclient/persisting/caching/Cache;
      13: invokeinterface #85,  1           // InterfaceMethod io/fluxcapacitor/javaclient/persisting/caching/Cache.clear:()V
      18: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #25                 // Field delegate:Lio/fluxcapacitor/javaclient/persisting/caching/Cache;
       4: invokeinterface #88,  1           // InterfaceMethod io/fluxcapacitor/javaclient/persisting/caching/Cache.size:()I
       9: aload_0
      10: getfield      #35                 // Field nextCache:Lio/fluxcapacitor/javaclient/persisting/caching/Cache;
      13: invokeinterface #88,  1           // InterfaceMethod io/fluxcapacitor/javaclient/persisting/caching/Cache.size:()I
      18: iadd
      19: ireturn

  public io.fluxcapacitor.common.Registration registerEvictionListener(java.util.function.Consumer<io.fluxcapacitor.javaclient.persisting.caching.CacheEvictionEvent>);
    Code:
       0: aload_0
       1: getfield      #25                 // Field delegate:Lio/fluxcapacitor/javaclient/persisting/caching/Cache;
       4: aload_1
       5: invokeinterface #92,  2           // InterfaceMethod io/fluxcapacitor/javaclient/persisting/caching/Cache.registerEvictionListener:(Ljava/util/function/Consumer;)Lio/fluxcapacitor/common/Registration;
      10: aload_0
      11: getfield      #35                 // Field nextCache:Lio/fluxcapacitor/javaclient/persisting/caching/Cache;
      14: aload_1
      15: invokeinterface #92,  2           // InterfaceMethod io/fluxcapacitor/javaclient/persisting/caching/Cache.registerEvictionListener:(Ljava/util/function/Consumer;)Lio/fluxcapacitor/common/Registration;
      20: invokeinterface #96,  2           // InterfaceMethod io/fluxcapacitor/common/Registration.merge:(Lio/fluxcapacitor/common/Registration;)Lio/fluxcapacitor/common/Registration;
      25: areturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #25                 // Field delegate:Lio/fluxcapacitor/javaclient/persisting/caching/Cache;
       4: invokeinterface #102,  1          // InterfaceMethod io/fluxcapacitor/javaclient/persisting/caching/Cache.close:()V
       9: aload_0
      10: getfield      #35                 // Field nextCache:Lio/fluxcapacitor/javaclient/persisting/caching/Cache;
      13: invokeinterface #102,  1          // InterfaceMethod io/fluxcapacitor/javaclient/persisting/caching/Cache.close:()V
      18: return

  public io.fluxcapacitor.javaclient.persisting.caching.SelectiveCache(io.fluxcapacitor.javaclient.persisting.caching.Cache, java.util.function.Predicate<java.lang.Object>, io.fluxcapacitor.javaclient.persisting.caching.Cache);
    Code:
       0: aload_0
       1: invokespecial #105                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #25                 // Field delegate:Lio/fluxcapacitor/javaclient/persisting/caching/Cache;
       9: aload_0
      10: aload_2
      11: putfield      #16                 // Field selector:Ljava/util/function/Predicate;
      14: aload_0
      15: aload_3
      16: putfield      #35                 // Field nextCache:Lio/fluxcapacitor/javaclient/persisting/caching/Cache;
      19: return

  private java.lang.Object lambda$get$7(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #35                 // Field nextCache:Lio/fluxcapacitor/javaclient/persisting/caching/Cache;
       4: aload_1
       5: invokeinterface #67,  2           // InterfaceMethod io/fluxcapacitor/javaclient/persisting/caching/Cache.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  private java.lang.Object lambda$compute$6(java.lang.Object, java.util.function.BiFunction, java.util.concurrent.atomic.AtomicReference, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #25                 // Field delegate:Lio/fluxcapacitor/javaclient/persisting/caching/Cache;
       4: aload_1
       5: aload_0
       6: aload_2
       7: aload_1
       8: aload         5
      10: aload_3
      11: invokedynamic #108,  0            // InvokeDynamic #5:apply:(Lio/fluxcapacitor/javaclient/persisting/caching/SelectiveCache;Ljava/util/function/BiFunction;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/atomic/AtomicReference;)Ljava/util/function/BiFunction;
      16: invokeinterface #62,  3           // InterfaceMethod io/fluxcapacitor/javaclient/persisting/caching/Cache.compute:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      21: astore        6
      23: aload_0
      24: getfield      #16                 // Field selector:Ljava/util/function/Predicate;
      27: aload         6
      29: invokeinterface #20,  2           // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      34: ifeq          45
      37: aload_3
      38: aload         6
      40: invokevirtual #111                // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      43: aconst_null
      44: areturn
      45: aload_3
      46: invokevirtual #63                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      49: areturn

  private java.lang.Object lambda$compute$5(java.util.function.BiFunction, java.lang.Object, java.lang.Object, java.util.concurrent.atomic.AtomicReference, java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: aload_2
       2: aload         6
       4: ifnonnull     11
       7: aload_3
       8: goto          13
      11: aload         6
      13: invokeinterface #115,  3          // InterfaceMethod java/util/function/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: astore        7
      20: aload         4
      22: aload         7
      24: invokevirtual #111                // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      27: aload_0
      28: getfield      #16                 // Field selector:Ljava/util/function/Predicate;
      31: aload         7
      33: invokeinterface #20,  2           // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      38: ifeq          44
      41: aload         7
      43: areturn
      44: aconst_null
      45: areturn

  private static java.lang.Object lambda$computeIfPresent$4(java.util.function.BiFunction, java.lang.Object, java.lang.Object);
    Code:
       0: aload_2
       1: ifnonnull     8
       4: aconst_null
       5: goto          16
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokeinterface #115,  3          // InterfaceMethod java/util/function/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      16: areturn

  private static java.lang.Object lambda$computeIfAbsent$3(java.util.function.Function, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_3
       1: ifnonnull     14
       4: aload_0
       5: aload_1
       6: invokeinterface #119,  2          // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      11: goto          15
      14: aload_3
      15: areturn

  private static boolean lambda$aggregateSelector$2(java.lang.Class, java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #123                // class io/fluxcapacitor/javaclient/modeling/Entity
       4: ifeq          47
       7: aload_1
       8: checkcast     #123                // class io/fluxcapacitor/javaclient/modeling/Entity
      11: astore_2
      12: aload_2
      13: invokeinterface #125,  1          // InterfaceMethod io/fluxcapacitor/javaclient/modeling/Entity.get:()Ljava/lang/Object;
      18: invokestatic  #69                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      21: aload_0
      22: invokedynamic #126,  0            // InvokeDynamic #6:apply:(Ljava/lang/Class;)Ljava/util/function/Function;
      27: invokevirtual #129                // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      30: aload_0
      31: aload_2
      32: invokedynamic #133,  0            // InvokeDynamic #7:get:(Ljava/lang/Class;Lio/fluxcapacitor/javaclient/modeling/Entity;)Ljava/util/function/Supplier;
      37: invokevirtual #78                 // Method java/util/Optional.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      40: checkcast     #136                // class java/lang/Boolean
      43: invokevirtual #138                // Method java/lang/Boolean.booleanValue:()Z
      46: ireturn
      47: iconst_0
      48: ireturn

  private static java.lang.Boolean lambda$aggregateSelector$1(java.lang.Class, io.fluxcapacitor.javaclient.modeling.Entity);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #142,  1          // InterfaceMethod io/fluxcapacitor/javaclient/modeling/Entity.type:()Ljava/lang/Class;
       7: invokevirtual #146                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      10: invokestatic  #152                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      13: areturn

  private static java.lang.Boolean lambda$aggregateSelector$0(java.lang.Class, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #156                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: invokevirtual #146                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       8: invokestatic  #152                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      11: areturn
}
