Compiled from "AggregateRepository.java"
public interface io.fluxcapacitor.javaclient.persisting.repository.AggregateRepository {
  public default <T> io.fluxcapacitor.javaclient.modeling.Entity<T> load(io.fluxcapacitor.javaclient.modeling.Id<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1                  // Method io/fluxcapacitor/javaclient/modeling/Id.toString:()Ljava/lang/String;
       5: aload_1
       6: invokevirtual #7                  // Method io/fluxcapacitor/javaclient/modeling/Id.getType:()Ljava/lang/Class;
       9: invokeinterface #11,  3           // InterfaceMethod load:(Ljava/lang/Object;Ljava/lang/Class;)Lio/fluxcapacitor/javaclient/modeling/Entity;
      14: areturn

  public abstract <T> io.fluxcapacitor.javaclient.modeling.Entity<T> load(java.lang.Object, java.lang.Class<T>);

  public abstract <T> io.fluxcapacitor.javaclient.modeling.Entity<T> loadFor(java.lang.Object, java.lang.Class<?>);

  public default java.util.concurrent.CompletableFuture<java.lang.Void> repairRelationships(io.fluxcapacitor.javaclient.modeling.Id<?>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokeinterface #17,  2           // InterfaceMethod load:(Lio/fluxcapacitor/javaclient/modeling/Id;)Lio/fluxcapacitor/javaclient/modeling/Entity;
       8: invokeinterface #20,  2           // InterfaceMethod repairRelationships:(Lio/fluxcapacitor/javaclient/modeling/Entity;)Ljava/util/concurrent/CompletableFuture;
      13: areturn

  public default java.util.concurrent.CompletableFuture<java.lang.Void> repairRelationships(java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: ldc           #24                 // class java/lang/Object
       5: invokeinterface #11,  3           // InterfaceMethod load:(Ljava/lang/Object;Ljava/lang/Class;)Lio/fluxcapacitor/javaclient/modeling/Entity;
      10: invokeinterface #20,  2           // InterfaceMethod repairRelationships:(Lio/fluxcapacitor/javaclient/modeling/Entity;)Ljava/util/concurrent/CompletableFuture;
      15: areturn

  public abstract java.util.concurrent.CompletableFuture<java.lang.Void> repairRelationships(io.fluxcapacitor.javaclient.modeling.Entity<?>);

  public abstract java.util.Map<java.lang.String, java.lang.Class<?>> getAggregatesFor(java.lang.Object);

  public default java.util.Optional<java.lang.String> getLatestAggregateId(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #26,  2           // InterfaceMethod getAggregatesFor:(Ljava/lang/Object;)Ljava/util/Map;
       7: invokeinterface #30,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      12: invokeinterface #36,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      17: invokedynamic #42,  0             // InvokeDynamic #0:apply:()Ljava/util/function/BinaryOperator;
      22: invokeinterface #46,  2           // InterfaceMethod java/util/stream/Stream.reduce:(Ljava/util/function/BinaryOperator;)Ljava/util/Optional;
      27: areturn

  private static java.lang.String lambda$getLatestAggregateId$0(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: areturn
}
