Compiled from "EventStore.java"
public interface io.fluxcapacitor.javaclient.persisting.eventsourcing.EventStore extends io.fluxcapacitor.javaclient.tracking.handling.HasLocalHandlers {
  public default java.util.concurrent.CompletableFuture<java.lang.Void> storeEvents(java.lang.Object, java.lang.Object...);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       6: invokeinterface #7,  3            // InterfaceMethod storeEvents:(Ljava/lang/Object;Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;
      11: areturn

  public default java.util.concurrent.CompletableFuture<java.lang.Void> storeEvents(java.lang.Object, java.util.List<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokeinterface #13,  4           // InterfaceMethod storeEvents:(Ljava/lang/Object;Ljava/util/List;Z)Ljava/util/concurrent/CompletableFuture;
       9: areturn

  public default java.util.concurrent.CompletableFuture<java.lang.Void> storeEvents(java.lang.Object, java.util.List<?>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iconst_1
       5: invokeinterface #16,  5           // InterfaceMethod storeEvents:(Ljava/lang/Object;Ljava/util/List;ZZ)Ljava/util/concurrent/CompletableFuture;
      10: areturn

  public abstract java.util.concurrent.CompletableFuture<java.lang.Void> storeEvents(java.lang.Object, java.util.List<?>, boolean, boolean);

  public default io.fluxcapacitor.javaclient.persisting.eventsourcing.AggregateEventStream<io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage> getEvents(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: ldc2_w        #19                 // long -1l
       5: iconst_0
       6: invokeinterface #21,  5           // InterfaceMethod getEvents:(Ljava/lang/Object;JZ)Lio/fluxcapacitor/javaclient/persisting/eventsourcing/AggregateEventStream;
      11: areturn

  public default io.fluxcapacitor.javaclient.persisting.eventsourcing.AggregateEventStream<io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage> getEvents(java.lang.Object, long);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: iconst_0
       4: invokeinterface #21,  5           // InterfaceMethod getEvents:(Ljava/lang/Object;JZ)Lio/fluxcapacitor/javaclient/persisting/eventsourcing/AggregateEventStream;
       9: areturn

  public abstract io.fluxcapacitor.javaclient.persisting.eventsourcing.AggregateEventStream<io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage> getEvents(java.lang.Object, long, boolean);
}
