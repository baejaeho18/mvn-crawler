Compiled from "ForwardingWebConsumer.java"
public class io.fluxcapacitor.javaclient.web.ForwardingWebConsumer implements java.lang.AutoCloseable {
  private static final org.slf4j.Logger log;

  private final java.lang.Object $lock;

  private final java.lang.String host;

  private final io.fluxcapacitor.javaclient.web.LocalServerConfig localServerConfig;

  private final io.fluxcapacitor.javaclient.tracking.ConsumerConfiguration configuration;

  private final java.net.http.HttpClient httpClient;

  private final java.util.concurrent.atomic.AtomicReference<io.fluxcapacitor.common.Registration> registration;

  public io.fluxcapacitor.javaclient.web.ForwardingWebConsumer(io.fluxcapacitor.javaclient.web.LocalServerConfig, io.fluxcapacitor.javaclient.tracking.ConsumerConfiguration);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: anewarray     #2                  // class java/lang/Object
       9: putfield      #7                  // Field $lock:Ljava/lang/Object;
      12: aload_0
      13: new           #13                 // class java/util/concurrent/atomic/AtomicReference
      16: dup
      17: invokespecial #15                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      20: putfield      #16                 // Field registration:Ljava/util/concurrent/atomic/AtomicReference;
      23: aload_0
      24: aload_1
      25: invokevirtual #20                 // Method io/fluxcapacitor/javaclient/web/LocalServerConfig.getPort:()Ljava/lang/Integer;
      28: invokedynamic #26,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/Integer;)Ljava/lang/String;
      33: putfield      #30                 // Field host:Ljava/lang/String;
      36: aload_0
      37: aload_1
      38: putfield      #34                 // Field localServerConfig:Lio/fluxcapacitor/javaclient/web/LocalServerConfig;
      41: aload_0
      42: aload_2
      43: putfield      #38                 // Field configuration:Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration;
      46: aload_0
      47: invokestatic  #42                 // Method java/net/http/HttpClient.newHttpClient:()Ljava/net/http/HttpClient;
      50: putfield      #48                 // Field httpClient:Ljava/net/http/HttpClient;
      53: return

  public void start(io.fluxcapacitor.javaclient.FluxCapacitor);
    Code:
       0: aload_0
       1: getfield      #7                  // Field $lock:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_1
       8: invokeinterface #52,  1           // InterfaceMethod io/fluxcapacitor/javaclient/FluxCapacitor.client:()Lio/fluxcapacitor/javaclient/configuration/client/Client;
      13: getstatic     #58                 // Field io/fluxcapacitor/common/MessageType.WEBRESPONSE:Lio/fluxcapacitor/common/MessageType;
      16: invokeinterface #64,  2           // InterfaceMethod io/fluxcapacitor/javaclient/configuration/client/Client.getGatewayClient:(Lio/fluxcapacitor/common/MessageType;)Lio/fluxcapacitor/javaclient/publishing/client/GatewayClient;
      21: astore_3
      22: aload_3
      23: invokedynamic #70,  0             // InvokeDynamic #1:accept:(Lio/fluxcapacitor/javaclient/publishing/client/GatewayClient;)Ljava/util/function/BiConsumer;
      28: astore        4
      30: aload_0
      31: aload         4
      33: invokedynamic #74,  0             // InvokeDynamic #2:accept:(Lio/fluxcapacitor/javaclient/web/ForwardingWebConsumer;Ljava/util/function/BiConsumer;)Ljava/util/function/Consumer;
      38: astore        5
      40: aload_0
      41: getfield      #16                 // Field registration:Ljava/util/concurrent/atomic/AtomicReference;
      44: aload_0
      45: aload         5
      47: aload_1
      48: invokedynamic #77,  0             // InvokeDynamic #3:apply:(Lio/fluxcapacitor/javaclient/web/ForwardingWebConsumer;Ljava/util/function/Consumer;Lio/fluxcapacitor/javaclient/FluxCapacitor;)Ljava/util/function/UnaryOperator;
      53: invokevirtual #81                 // Method java/util/concurrent/atomic/AtomicReference.getAndUpdate:(Ljava/util/function/UnaryOperator;)Ljava/lang/Object;
      56: pop
      57: aload_2
      58: monitorexit
      59: goto          69
      62: astore        6
      64: aload_2
      65: monitorexit
      66: aload         6
      68: athrow
      69: return
    Exception table:
       from    to  target type
           7    59    62   any
          62    66    62   any

  protected java.util.Map<java.lang.String, java.lang.String> getCorrelationData(io.fluxcapacitor.common.api.SerializedMessage);
    Code:
       0: invokestatic  #85                 // InterfaceMethod io/fluxcapacitor/javaclient/FluxCapacitor.getOptionally:()Ljava/util/Optional;
       3: invokedynamic #89,  0             // InvokeDynamic #4:apply:()Ljava/util/function/Function;
       8: invokevirtual #92                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      11: getstatic     #98                 // Field io/fluxcapacitor/javaclient/publishing/correlation/DefaultCorrelationDataProvider.INSTANCE:Lio/fluxcapacitor/javaclient/publishing/correlation/DefaultCorrelationDataProvider;
      14: invokevirtual #104                // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #108                // class io/fluxcapacitor/javaclient/publishing/correlation/CorrelationDataProvider
      20: new           #110                // class io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage
      23: dup
      24: aload_1
      25: invokedynamic #112,  0            // InvokeDynamic #5:apply:()Ljava/util/function/Function;
      30: getstatic     #58                 // Field io/fluxcapacitor/common/MessageType.WEBRESPONSE:Lio/fluxcapacitor/common/MessageType;
      33: invokespecial #113                // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage."<init>":(Lio/fluxcapacitor/common/api/SerializedMessage;Ljava/util/function/Function;Lio/fluxcapacitor/common/MessageType;)V
      36: invokeinterface #116,  2          // InterfaceMethod io/fluxcapacitor/javaclient/publishing/correlation/CorrelationDataProvider.getCorrelationData:(Lio/fluxcapacitor/javaclient/common/serialization/DeserializingMessage;)Ljava/util/Map;
      41: areturn
      42: astore_2
      43: getstatic     #122                // Field log:Lorg/slf4j/Logger;
      46: ldc           #126                // String Failed to get correlation data for request message
      48: aload_2
      49: invokeinterface #128,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      54: invokestatic  #134                // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      57: areturn
    Exception table:
       from    to  target type
           0    41    42   Class java/lang/Exception

  protected java.net.http.HttpRequest createRequest(io.fluxcapacitor.common.api.SerializedMessage);
    Code:
       0: invokestatic  #140                // Method java/net/http/HttpRequest.newBuilder:()Ljava/net/http/HttpRequest$Builder;
       3: new           #146                // class java/net/URI
       6: dup
       7: aload_0
       8: getfield      #30                 // Field host:Ljava/lang/String;
      11: aload_1
      12: invokevirtual #148                // Method io/fluxcapacitor/common/api/SerializedMessage.getMetadata:()Lio/fluxcapacitor/common/api/Metadata;
      15: invokestatic  #154                // Method io/fluxcapacitor/javaclient/web/WebRequest.getUrl:(Lio/fluxcapacitor/common/api/Metadata;)Ljava/lang/String;
      18: invokedynamic #160,  0            // InvokeDynamic #6:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      23: invokespecial #163                // Method java/net/URI."<init>":(Ljava/lang/String;)V
      26: invokeinterface #166,  2          // InterfaceMethod java/net/http/HttpRequest$Builder.uri:(Ljava/net/URI;)Ljava/net/http/HttpRequest$Builder;
      31: aload_1
      32: invokevirtual #148                // Method io/fluxcapacitor/common/api/SerializedMessage.getMetadata:()Lio/fluxcapacitor/common/api/Metadata;
      35: invokestatic  #172                // Method io/fluxcapacitor/javaclient/web/WebRequest.getMethod:(Lio/fluxcapacitor/common/api/Metadata;)Lio/fluxcapacitor/javaclient/web/HttpRequestMethod;
      38: invokevirtual #176                // Method io/fluxcapacitor/javaclient/web/HttpRequestMethod.name:()Ljava/lang/String;
      41: aload_1
      42: invokevirtual #182                // Method io/fluxcapacitor/common/api/SerializedMessage.getData:()Lio/fluxcapacitor/common/api/Data;
      45: invokevirtual #186                // Method io/fluxcapacitor/common/api/Data.getValue:()Ljava/lang/Object;
      48: checkcast     #192                // class "[B"
      51: arraylength
      52: ifne          61
      55: invokestatic  #194                // Method java/net/http/HttpRequest$BodyPublishers.noBody:()Ljava/net/http/HttpRequest$BodyPublisher;
      58: goto          74
      61: aload_1
      62: invokevirtual #182                // Method io/fluxcapacitor/common/api/SerializedMessage.getData:()Lio/fluxcapacitor/common/api/Data;
      65: invokevirtual #186                // Method io/fluxcapacitor/common/api/Data.getValue:()Ljava/lang/Object;
      68: checkcast     #192                // class "[B"
      71: invokestatic  #200                // Method java/net/http/HttpRequest$BodyPublishers.ofByteArray:([B)Ljava/net/http/HttpRequest$BodyPublisher;
      74: invokeinterface #204,  3          // InterfaceMethod java/net/http/HttpRequest$Builder.method:(Ljava/lang/String;Ljava/net/http/HttpRequest$BodyPublisher;)Ljava/net/http/HttpRequest$Builder;
      79: astore_2
      80: aload_1
      81: invokevirtual #148                // Method io/fluxcapacitor/common/api/SerializedMessage.getMetadata:()Lio/fluxcapacitor/common/api/Metadata;
      84: invokestatic  #208                // Method io/fluxcapacitor/javaclient/web/WebRequest.getHeaders:(Lio/fluxcapacitor/common/api/Metadata;)Ljava/util/Map;
      87: invokeinterface #212,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      92: invokeinterface #218,  1          // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      97: aload_0
      98: invokedynamic #224,  0            // InvokeDynamic #7:test:(Lio/fluxcapacitor/javaclient/web/ForwardingWebConsumer;)Ljava/util/function/Predicate;
     103: invokeinterface #228,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
     108: invokedynamic #234,  0            // InvokeDynamic #8:apply:()Ljava/util/function/Function;
     113: invokeinterface #235,  2          // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
     118: invokedynamic #239,  0            // InvokeDynamic #9:apply:()Ljava/util/function/IntFunction;
     123: invokeinterface #242,  2          // InterfaceMethod java/util/stream/Stream.toArray:(Ljava/util/function/IntFunction;)[Ljava/lang/Object;
     128: checkcast     #246                // class "[Ljava/lang/String;"
     131: astore_3
     132: aload_3
     133: arraylength
     134: ifle          145
     137: aload_2
     138: aload_3
     139: invokeinterface #248,  2          // InterfaceMethod java/net/http/HttpRequest$Builder.headers:([Ljava/lang/String;)Ljava/net/http/HttpRequest$Builder;
     144: pop
     145: aload_1
     146: invokevirtual #182                // Method io/fluxcapacitor/common/api/SerializedMessage.getData:()Lio/fluxcapacitor/common/api/Data;
     149: invokevirtual #252                // Method io/fluxcapacitor/common/api/Data.getFormat:()Ljava/lang/String;
     152: ifnull        171
     155: aload_2
     156: ldc           #255                // String Content-Type
     158: aload_1
     159: invokevirtual #182                // Method io/fluxcapacitor/common/api/SerializedMessage.getData:()Lio/fluxcapacitor/common/api/Data;
     162: invokevirtual #252                // Method io/fluxcapacitor/common/api/Data.getFormat:()Ljava/lang/String;
     165: invokeinterface #257,  3          // InterfaceMethod java/net/http/HttpRequest$Builder.header:(Ljava/lang/String;Ljava/lang/String;)Ljava/net/http/HttpRequest$Builder;
     170: pop
     171: aload_2
     172: invokeinterface #261,  1          // InterfaceMethod java/net/http/HttpRequest$Builder.build:()Ljava/net/http/HttpRequest;
     177: areturn
     178: astore_2
     179: new           #265                // class java/lang/IllegalStateException
     182: dup
     183: ldc_w         #267                // String Failed to create HttpRequest
     186: aload_2
     187: invokespecial #269                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     190: athrow
    Exception table:
       from    to  target type
           0   177   178   Class java/lang/Exception

  protected boolean isRestricted(java.lang.String);
    Code:
       0: ldc_w         #271                // String connection
       3: ldc_w         #273                // String content-length
       6: ldc_w         #275                // String expect
       9: ldc_w         #277                // String host
      12: ldc_w         #278                // String upgrade
      15: invokestatic  #280                // InterfaceMethod java/util/Set.of:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Set;
      18: aload_1
      19: invokevirtual #284                // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      22: invokeinterface #289,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      27: ireturn

  protected io.fluxcapacitor.common.api.SerializedMessage toMessage(java.net.http.HttpResponse<byte[]>, java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_1
       1: invokeinterface #293,  1          // InterfaceMethod java/net/http/HttpResponse.headers:()Ljava/net/http/HttpHeaders;
       6: astore_3
       7: aload_2
       8: invokestatic  #298                // Method io/fluxcapacitor/common/api/Metadata.of:(Ljava/util/Map;)Lio/fluxcapacitor/common/api/Metadata;
      11: aload_1
      12: invokeinterface #303,  1          // InterfaceMethod java/net/http/HttpResponse.statusCode:()I
      17: aload_3
      18: invokevirtual #307                // Method java/net/http/HttpHeaders.map:()Ljava/util/Map;
      21: invokestatic  #311                // Method io/fluxcapacitor/javaclient/web/WebResponse.asMetadata:(ILjava/util/Map;)Lio/fluxcapacitor/common/api/Metadata;
      24: invokevirtual #317                // Method io/fluxcapacitor/common/api/Metadata.with:(Lio/fluxcapacitor/common/api/Metadata;)Lio/fluxcapacitor/common/api/Metadata;
      27: astore        4
      29: new           #149                // class io/fluxcapacitor/common/api/SerializedMessage
      32: dup
      33: new           #187                // class io/fluxcapacitor/common/api/Data
      36: dup
      37: aload_1
      38: invokeinterface #321,  1          // InterfaceMethod java/net/http/HttpResponse.body:()Ljava/lang/Object;
      43: checkcast     #192                // class "[B"
      46: aconst_null
      47: iconst_0
      48: aload_3
      49: ldc_w         #324                // String content-type
      52: invokevirtual #326                // Method java/net/http/HttpHeaders.firstValue:(Ljava/lang/String;)Ljava/util/Optional;
      55: aconst_null
      56: invokevirtual #104                // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      59: checkcast     #285                // class java/lang/String
      62: invokespecial #330                // Method io/fluxcapacitor/common/api/Data."<init>":(Ljava/lang/Object;Ljava/lang/String;ILjava/lang/String;)V
      65: aload         4
      67: invokestatic  #333                // InterfaceMethod io/fluxcapacitor/javaclient/FluxCapacitor.generateId:()Ljava/lang/String;
      70: invokestatic  #336                // Method java/lang/System.currentTimeMillis:()J
      73: invokestatic  #342                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      76: invokespecial #348                // Method io/fluxcapacitor/common/api/SerializedMessage."<init>":(Lio/fluxcapacitor/common/api/Data;Lio/fluxcapacitor/common/api/Metadata;Ljava/lang/String;Ljava/lang/Long;)V
      79: areturn

  protected io.fluxcapacitor.common.api.SerializedMessage toMessage(java.lang.Throwable, java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: getstatic     #122                // Field log:Lorg/slf4j/Logger;
       3: aload_1
       4: invokevirtual #351                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
       7: invokedynamic #356,  0            // InvokeDynamic #10:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      12: aload_1
      13: invokeinterface #128,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      18: new           #149                // class io/fluxcapacitor/common/api/SerializedMessage
      21: dup
      22: new           #187                // class io/fluxcapacitor/common/api/Data
      25: dup
      26: ldc_w         #359                // String The request failed due to a server error
      29: invokevirtual #361                // Method java/lang/String.getBytes:()[B
      32: aconst_null
      33: iconst_0
      34: ldc_w         #365                // String text/plain
      37: invokespecial #330                // Method io/fluxcapacitor/common/api/Data."<init>":(Ljava/lang/Object;Ljava/lang/String;ILjava/lang/String;)V
      40: aload_2
      41: invokestatic  #298                // Method io/fluxcapacitor/common/api/Metadata.of:(Ljava/util/Map;)Lio/fluxcapacitor/common/api/Metadata;
      44: sipush        500
      47: invokestatic  #134                // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      50: invokestatic  #311                // Method io/fluxcapacitor/javaclient/web/WebResponse.asMetadata:(ILjava/util/Map;)Lio/fluxcapacitor/common/api/Metadata;
      53: invokevirtual #317                // Method io/fluxcapacitor/common/api/Metadata.with:(Lio/fluxcapacitor/common/api/Metadata;)Lio/fluxcapacitor/common/api/Metadata;
      56: invokestatic  #333                // InterfaceMethod io/fluxcapacitor/javaclient/FluxCapacitor.generateId:()Ljava/lang/String;
      59: invokestatic  #336                // Method java/lang/System.currentTimeMillis:()J
      62: invokestatic  #342                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      65: invokespecial #348                // Method io/fluxcapacitor/common/api/SerializedMessage."<init>":(Lio/fluxcapacitor/common/api/Data;Lio/fluxcapacitor/common/api/Metadata;Ljava/lang/String;Ljava/lang/Long;)V
      68: areturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #16                 // Field registration:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokedynamic #367,  0            // InvokeDynamic #11:apply:()Ljava/util/function/UnaryOperator;
       9: invokevirtual #81                 // Method java/util/concurrent/atomic/AtomicReference.getAndUpdate:(Ljava/util/function/UnaryOperator;)Ljava/lang/Object;
      12: pop
      13: return

  private static io.fluxcapacitor.common.Registration lambda$close$10(io.fluxcapacitor.common.Registration);
    Code:
       0: aload_0
       1: ifnull        10
       4: aload_0
       5: invokeinterface #370,  1          // InterfaceMethod io/fluxcapacitor/common/Registration.cancel:()V
      10: aconst_null
      11: areturn

  private static java.lang.String[] lambda$createRequest$9(int);
    Code:
       0: iload_0
       1: anewarray     #285                // class java/lang/String
       4: areturn

  private static java.util.stream.Stream lambda$createRequest$8(java.util.Map$Entry);
    Code:
       0: aload_0
       1: invokeinterface #375,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
       6: checkcast     #378                // class java/util/List
       9: invokeinterface #380,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      14: aload_0
      15: invokedynamic #381,  0            // InvokeDynamic #12:apply:(Ljava/util/Map$Entry;)Ljava/util/function/Function;
      20: invokeinterface #235,  2          // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      25: areturn

  private static java.util.stream.Stream lambda$createRequest$7(java.util.Map$Entry, java.lang.String);
    Code:
       0: iconst_2
       1: anewarray     #285                // class java/lang/String
       4: dup
       5: iconst_0
       6: aload_0
       7: invokeinterface #384,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      12: checkcast     #285                // class java/lang/String
      15: aastore
      16: dup
      17: iconst_1
      18: aload_1
      19: aastore
      20: invokestatic  #387                // InterfaceMethod java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      23: areturn

  private boolean lambda$createRequest$6(java.util.Map$Entry);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #384,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
       7: checkcast     #285                // class java/lang/String
      10: invokevirtual #390                // Method isRestricted:(Ljava/lang/String;)Z
      13: ifne          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  private static java.lang.Object lambda$getCorrelationData$5(java.lang.Class);
    Code:
       0: aconst_null
       1: areturn

  private io.fluxcapacitor.common.Registration lambda$start$4(java.util.function.Consumer, io.fluxcapacitor.javaclient.FluxCapacitor, io.fluxcapacitor.common.Registration);
    Code:
       0: aload_3
       1: ifnonnull     19
       4: aload_1
       5: getstatic     #394                // Field io/fluxcapacitor/common/MessageType.WEBREQUEST:Lio/fluxcapacitor/common/MessageType;
       8: aload_0
       9: getfield      #38                 // Field configuration:Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration;
      12: aload_2
      13: invokestatic  #397                // Method io/fluxcapacitor/javaclient/tracking/client/DefaultTracker.start:(Ljava/util/function/Consumer;Lio/fluxcapacitor/common/MessageType;Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration;Lio/fluxcapacitor/javaclient/FluxCapacitor;)Lio/fluxcapacitor/common/Registration;
      16: goto          20
      19: aload_3
      20: areturn

  private void lambda$start$3(java.util.function.BiConsumer, java.util.List);
    Code:
       0: aload_2
       1: aload_0
       2: aload_1
       3: invokedynamic #403,  0            // InvokeDynamic #13:accept:(Lio/fluxcapacitor/javaclient/web/ForwardingWebConsumer;Ljava/util/function/BiConsumer;)Ljava/util/function/Consumer;
       8: invokeinterface #404,  2          // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      13: return

  private void lambda$start$2(java.util.function.BiConsumer, io.fluxcapacitor.common.api.SerializedMessage);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #408                // Method getCorrelationData:(Lio/fluxcapacitor/common/api/SerializedMessage;)Ljava/util/Map;
       5: astore_3
       6: aload_0
       7: aload_2
       8: invokevirtual #411                // Method createRequest:(Lio/fluxcapacitor/common/api/SerializedMessage;)Ljava/net/http/HttpRequest;
      11: astore        4
      13: aload_0
      14: getfield      #48                 // Field httpClient:Ljava/net/http/HttpClient;
      17: aload         4
      19: invokestatic  #415                // Method java/net/http/HttpResponse$BodyHandlers.ofByteArray:()Ljava/net/http/HttpResponse$BodyHandler;
      22: invokevirtual #420                // Method java/net/http/HttpClient.sendAsync:(Ljava/net/http/HttpRequest;Ljava/net/http/HttpResponse$BodyHandler;)Ljava/util/concurrent/CompletableFuture;
      25: aload_0
      26: aload_1
      27: aload_2
      28: aload_3
      29: invokedynamic #424,  0            // InvokeDynamic #14:accept:(Lio/fluxcapacitor/javaclient/web/ForwardingWebConsumer;Ljava/util/function/BiConsumer;Lio/fluxcapacitor/common/api/SerializedMessage;Ljava/util/Map;)Ljava/util/function/BiConsumer;
      34: invokevirtual #427                // Method java/util/concurrent/CompletableFuture.whenComplete:(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;
      37: pop
      38: goto          75
      41: astore        4
      43: aload_1
      44: aload_2
      45: aload_0
      46: aload         4
      48: aload_3
      49: invokevirtual #433                // Method toMessage:(Ljava/lang/Throwable;Ljava/util/Map;)Lio/fluxcapacitor/common/api/SerializedMessage;
      52: invokeinterface #437,  3          // InterfaceMethod java/util/function/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
      57: goto          75
      60: astore        5
      62: getstatic     #122                // Field log:Lorg/slf4j/Logger;
      65: ldc_w         #442                // String Failed to create response message from exception
      68: aload         5
      70: invokeinterface #128,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      75: return
    Exception table:
       from    to  target type
           6    38    41   Class java/lang/Exception
          43    57    60   Class java/lang/Exception

  private void lambda$start$1(java.util.function.BiConsumer, io.fluxcapacitor.common.api.SerializedMessage, java.util.Map, java.net.http.HttpResponse, java.lang.Throwable);
    Code:
       0: aload         5
       2: ifnonnull     29
       5: aload         4
       7: invokeinterface #303,  1          // InterfaceMethod java/net/http/HttpResponse.statusCode:()I
      12: sipush        404
      15: if_icmpne     29
      18: aload_0
      19: getfield      #34                 // Field localServerConfig:Lio/fluxcapacitor/javaclient/web/LocalServerConfig;
      22: invokevirtual #444                // Method io/fluxcapacitor/javaclient/web/LocalServerConfig.isIgnore404:()Z
      25: ifeq          29
      28: return
      29: aload_1
      30: aload_2
      31: aload         5
      33: ifnonnull     46
      36: aload_0
      37: aload         4
      39: aload_3
      40: invokevirtual #448                // Method toMessage:(Ljava/net/http/HttpResponse;Ljava/util/Map;)Lio/fluxcapacitor/common/api/SerializedMessage;
      43: goto          53
      46: aload_0
      47: aload         5
      49: aload_3
      50: invokevirtual #433                // Method toMessage:(Ljava/lang/Throwable;Ljava/util/Map;)Lio/fluxcapacitor/common/api/SerializedMessage;
      53: invokeinterface #437,  3          // InterfaceMethod java/util/function/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
      58: return

  private static void lambda$start$0(io.fluxcapacitor.javaclient.publishing.client.GatewayClient, io.fluxcapacitor.common.api.SerializedMessage, io.fluxcapacitor.common.api.SerializedMessage);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #451                // Method io/fluxcapacitor/common/api/SerializedMessage.getSource:()Ljava/lang/String;
       5: invokevirtual #454                // Method io/fluxcapacitor/common/api/SerializedMessage.setTarget:(Ljava/lang/String;)V
       8: aload_2
       9: aload_1
      10: invokevirtual #457                // Method io/fluxcapacitor/common/api/SerializedMessage.getRequestId:()Ljava/lang/Integer;
      13: invokevirtual #460                // Method io/fluxcapacitor/common/api/SerializedMessage.setRequestId:(Ljava/lang/Integer;)V
      16: aload_2
      17: aload_2
      18: invokevirtual #148                // Method io/fluxcapacitor/common/api/SerializedMessage.getMetadata:()Lio/fluxcapacitor/common/api/Metadata;
      21: invokestatic  #464                // InterfaceMethod io/fluxcapacitor/javaclient/FluxCapacitor.currentCorrelationData:()Ljava/util/Map;
      24: invokevirtual #467                // Method io/fluxcapacitor/common/api/Metadata.with:(Ljava/util/Map;)Lio/fluxcapacitor/common/api/Metadata;
      27: invokevirtual #469                // Method io/fluxcapacitor/common/api/SerializedMessage.setMetadata:(Lio/fluxcapacitor/common/api/Metadata;)V
      30: aload_0
      31: getstatic     #473                // Field io/fluxcapacitor/common/Guarantee.NONE:Lio/fluxcapacitor/common/Guarantee;
      34: iconst_1
      35: anewarray     #149                // class io/fluxcapacitor/common/api/SerializedMessage
      38: dup
      39: iconst_0
      40: aload_2
      41: aastore
      42: invokeinterface #479,  3          // InterfaceMethod io/fluxcapacitor/javaclient/publishing/client/GatewayClient.send:(Lio/fluxcapacitor/common/Guarantee;[Lio/fluxcapacitor/common/api/SerializedMessage;)Ljava/util/concurrent/CompletableFuture;
      47: pop
      48: return

  static {};
    Code:
       0: ldc           #8                  // class io/fluxcapacitor/javaclient/web/ForwardingWebConsumer
       2: invokestatic  #485                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #122                // Field log:Lorg/slf4j/Logger;
       8: return
}
