Compiled from "WebRequest.java"
public final class io.fluxcapacitor.javaclient.web.WebRequest extends io.fluxcapacitor.javaclient.common.Message {
  private static final java.util.Map<java.lang.reflect.Executable, java.util.function.Predicate<io.fluxcapacitor.javaclient.common.HasMessage>> filterCache;

  private final java.lang.String path;

  private final io.fluxcapacitor.javaclient.web.HttpRequestMethod method;

  private final java.util.Map<java.lang.String, java.util.List<java.lang.String>> headers;

  private final java.util.concurrent.atomic.AtomicReference<java.lang.Object> cookies;

  public static io.fluxcapacitor.javaclient.web.WebRequest$Builder builder();
    Code:
       0: new           #1                  // class io/fluxcapacitor/javaclient/web/WebRequest$Builder
       3: dup
       4: invokespecial #3                  // Method io/fluxcapacitor/javaclient/web/WebRequest$Builder."<init>":()V
       7: areturn

  public static io.fluxcapacitor.common.handling.MessageFilter<io.fluxcapacitor.javaclient.common.HasMessage> getWebRequestFilter();
    Code:
       0: invokedynamic #7,  0              // InvokeDynamic #0:test:()Lio/fluxcapacitor/common/handling/MessageFilter;
       5: areturn

  private io.fluxcapacitor.javaclient.web.WebRequest(io.fluxcapacitor.javaclient.web.WebRequest$Builder);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method io/fluxcapacitor/javaclient/web/WebRequest$Builder.payload:()Ljava/lang/Object;
       5: bipush        6
       7: anewarray     #15                 // class java/lang/Object
      10: dup
      11: iconst_0
      12: ldc           #17                 // String url
      14: aastore
      15: dup
      16: iconst_1
      17: aload_1
      18: invokevirtual #19                 // Method io/fluxcapacitor/javaclient/web/WebRequest$Builder.url:()Ljava/lang/String;
      21: aastore
      22: dup
      23: iconst_2
      24: ldc           #22                 // String method
      26: aastore
      27: dup
      28: iconst_3
      29: aload_1
      30: invokevirtual #24                 // Method io/fluxcapacitor/javaclient/web/WebRequest$Builder.method:()Lio/fluxcapacitor/javaclient/web/HttpRequestMethod;
      33: invokevirtual #27                 // Method io/fluxcapacitor/javaclient/web/HttpRequestMethod.name:()Ljava/lang/String;
      36: aastore
      37: dup
      38: iconst_4
      39: ldc           #32                 // String headers
      41: aastore
      42: dup
      43: iconst_5
      44: aload_1
      45: invokevirtual #34                 // Method io/fluxcapacitor/javaclient/web/WebRequest$Builder.headers:()Ljava/util/Map;
      48: aastore
      49: invokestatic  #37                 // Method io/fluxcapacitor/common/api/Metadata.of:([Ljava/lang/Object;)Lio/fluxcapacitor/common/api/Metadata;
      52: invokespecial #43                 // Method io/fluxcapacitor/javaclient/common/Message."<init>":(Ljava/lang/Object;Lio/fluxcapacitor/common/api/Metadata;)V
      55: aload_0
      56: new           #48                 // class java/util/concurrent/atomic/AtomicReference
      59: dup
      60: invokespecial #50                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      63: putfield      #51                 // Field cookies:Ljava/util/concurrent/atomic/AtomicReference;
      66: aload_0
      67: aload_1
      68: invokevirtual #19                 // Method io/fluxcapacitor/javaclient/web/WebRequest$Builder.url:()Ljava/lang/String;
      71: putfield      #57                 // Field path:Ljava/lang/String;
      74: aload_0
      75: aload_1
      76: invokevirtual #24                 // Method io/fluxcapacitor/javaclient/web/WebRequest$Builder.method:()Lio/fluxcapacitor/javaclient/web/HttpRequestMethod;
      79: putfield      #61                 // Field method:Lio/fluxcapacitor/javaclient/web/HttpRequestMethod;
      82: aload_0
      83: aload_1
      84: invokevirtual #34                 // Method io/fluxcapacitor/javaclient/web/WebRequest$Builder.headers:()Ljava/util/Map;
      87: putfield      #64                 // Field headers:Ljava/util/Map;
      90: return

  io.fluxcapacitor.javaclient.web.WebRequest(java.lang.Object, io.fluxcapacitor.common.api.Metadata, java.lang.String, java.time.Instant);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #67                 // Method io/fluxcapacitor/javaclient/common/Message."<init>":(Ljava/lang/Object;Lio/fluxcapacitor/common/api/Metadata;Ljava/lang/String;Ljava/time/Instant;)V
       9: aload_0
      10: new           #48                 // class java/util/concurrent/atomic/AtomicReference
      13: dup
      14: invokespecial #50                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      17: putfield      #51                 // Field cookies:Ljava/util/concurrent/atomic/AtomicReference;
      20: aload_0
      21: aload_2
      22: invokestatic  #70                 // Method getUrl:(Lio/fluxcapacitor/common/api/Metadata;)Ljava/lang/String;
      25: putfield      #57                 // Field path:Ljava/lang/String;
      28: aload_0
      29: aload_2
      30: invokestatic  #74                 // Method getMethod:(Lio/fluxcapacitor/common/api/Metadata;)Lio/fluxcapacitor/javaclient/web/HttpRequestMethod;
      33: putfield      #61                 // Field method:Lio/fluxcapacitor/javaclient/web/HttpRequestMethod;
      36: aload_0
      37: aload_2
      38: invokestatic  #78                 // Method getHeaders:(Lio/fluxcapacitor/common/api/Metadata;)Ljava/util/Map;
      41: putfield      #64                 // Field headers:Ljava/util/Map;
      44: return

  public io.fluxcapacitor.javaclient.web.WebRequest(io.fluxcapacitor.javaclient.common.Message);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #82                 // Method io/fluxcapacitor/javaclient/common/Message.getPayload:()Ljava/lang/Object;
       5: aload_1
       6: invokevirtual #85                 // Method io/fluxcapacitor/javaclient/common/Message.getMetadata:()Lio/fluxcapacitor/common/api/Metadata;
       9: aload_1
      10: invokevirtual #89                 // Method io/fluxcapacitor/javaclient/common/Message.getMessageId:()Ljava/lang/String;
      13: aload_1
      14: invokevirtual #92                 // Method io/fluxcapacitor/javaclient/common/Message.getTimestamp:()Ljava/time/Instant;
      17: invokespecial #96                 // Method "<init>":(Ljava/lang/Object;Lio/fluxcapacitor/common/api/Metadata;Ljava/lang/String;Ljava/time/Instant;)V
      20: return

  public io.fluxcapacitor.common.api.SerializedMessage serialize(io.fluxcapacitor.javaclient.common.serialization.Serializer);
    Code:
       0: aload_0
       1: getfield      #64                 // Field headers:Ljava/util/Map;
       4: ldc           #97                 // String Content-Type
       6: invokestatic  #99                 // InterfaceMethod java/util/List.of:()Ljava/util/List;
       9: invokeinterface #104,  3          // InterfaceMethod java/util/Map.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #100                // class java/util/List
      17: invokeinterface #110,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      22: invokeinterface #114,  1          // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
      27: aload_0
      28: aload_1
      29: invokedynamic #120,  0            // InvokeDynamic #1:apply:(Lio/fluxcapacitor/javaclient/web/WebRequest;Lio/fluxcapacitor/javaclient/common/serialization/Serializer;)Ljava/util/function/Function;
      34: invokevirtual #124                // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      37: aload_0
      38: aload_1
      39: invokedynamic #130,  0            // InvokeDynamic #2:get:(Lio/fluxcapacitor/javaclient/web/WebRequest;Lio/fluxcapacitor/javaclient/common/serialization/Serializer;)Ljava/util/function/Supplier;
      44: invokevirtual #134                // Method java/util/Optional.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      47: checkcast     #138                // class io/fluxcapacitor/common/api/SerializedMessage
      50: areturn

  public io.fluxcapacitor.javaclient.web.WebRequest withMetadata(io.fluxcapacitor.common.api.Metadata);
    Code:
       0: new           #52                 // class io/fluxcapacitor/javaclient/web/WebRequest
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #140                // Method io/fluxcapacitor/javaclient/common/Message.withMetadata:(Lio/fluxcapacitor/common/api/Metadata;)Lio/fluxcapacitor/javaclient/common/Message;
       9: invokespecial #144                // Method "<init>":(Lio/fluxcapacitor/javaclient/common/Message;)V
      12: areturn

  public io.fluxcapacitor.javaclient.web.WebRequest addMetadata(io.fluxcapacitor.common.api.Metadata);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #147                // Method io/fluxcapacitor/javaclient/common/Message.addMetadata:(Lio/fluxcapacitor/common/api/Metadata;)Lio/fluxcapacitor/javaclient/common/Message;
       5: checkcast     #52                 // class io/fluxcapacitor/javaclient/web/WebRequest
       8: areturn

  public io.fluxcapacitor.javaclient.web.WebRequest addMetadata(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #150                // Method io/fluxcapacitor/javaclient/common/Message.addMetadata:(Ljava/lang/String;Ljava/lang/Object;)Lio/fluxcapacitor/javaclient/common/Message;
       6: checkcast     #52                 // class io/fluxcapacitor/javaclient/web/WebRequest
       9: areturn

  public io.fluxcapacitor.javaclient.web.WebRequest addMetadata(java.lang.Object...);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #153                // Method io/fluxcapacitor/javaclient/common/Message.addMetadata:([Ljava/lang/Object;)Lio/fluxcapacitor/javaclient/common/Message;
       5: checkcast     #52                 // class io/fluxcapacitor/javaclient/web/WebRequest
       8: areturn

  public io.fluxcapacitor.javaclient.web.WebRequest addMetadata(java.util.Map<java.lang.String, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #156                // Method io/fluxcapacitor/javaclient/common/Message.addMetadata:(Ljava/util/Map;)Lio/fluxcapacitor/javaclient/common/Message;
       5: checkcast     #52                 // class io/fluxcapacitor/javaclient/web/WebRequest
       8: areturn

  public io.fluxcapacitor.javaclient.web.WebRequest addUser(io.fluxcapacitor.javaclient.tracking.handling.authentication.User);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #159                // Method io/fluxcapacitor/javaclient/common/Message.addUser:(Lio/fluxcapacitor/javaclient/tracking/handling/authentication/User;)Lio/fluxcapacitor/javaclient/common/Message;
       5: checkcast     #52                 // class io/fluxcapacitor/javaclient/web/WebRequest
       8: areturn

  public io.fluxcapacitor.javaclient.web.WebRequest withPayload(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #163                // Method toBuilder:()Lio/fluxcapacitor/javaclient/web/WebRequest$Builder;
       4: aload_1
       5: invokevirtual #167                // Method io/fluxcapacitor/javaclient/web/WebRequest$Builder.payload:(Ljava/lang/Object;)Lio/fluxcapacitor/javaclient/web/WebRequest$Builder;
       8: invokevirtual #170                // Method io/fluxcapacitor/javaclient/web/WebRequest$Builder.build:()Lio/fluxcapacitor/javaclient/web/WebRequest;
      11: areturn

  public java.lang.String getHeader(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #174                // Method getHeaders:(Ljava/lang/String;)Ljava/util/List;
       5: invokeinterface #110,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      10: invokeinterface #114,  1          // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
      15: aconst_null
      16: invokevirtual #177                // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #181                // class java/lang/String
      22: areturn

  public java.util.List<java.lang.String> getHeaders(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #64                 // Field headers:Ljava/util/Map;
       4: aload_1
       5: invokestatic  #183                // Method java/util/Collections.emptyList:()Ljava/util/List;
       8: invokeinterface #104,  3          // InterfaceMethod java/util/Map.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #100                // class java/util/List
      16: areturn

  public java.util.Optional<java.net.HttpCookie> getCookie(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #188                // Method getCookies:()Ljava/util/List;
       4: invokeinterface #110,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       9: aload_1
      10: invokedynamic #191,  0            // InvokeDynamic #3:test:(Ljava/lang/String;)Ljava/util/function/Predicate;
      15: invokeinterface #194,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      20: invokeinterface #114,  1          // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
      25: areturn

  public io.fluxcapacitor.javaclient.web.WebRequest$Builder toBuilder();
    Code:
       0: new           #1                  // class io/fluxcapacitor/javaclient/web/WebRequest$Builder
       3: dup
       4: aload_0
       5: invokespecial #198                // Method io/fluxcapacitor/javaclient/web/WebRequest$Builder."<init>":(Lio/fluxcapacitor/javaclient/web/WebRequest;)V
       8: areturn

  public static java.lang.String getUrl(io.fluxcapacitor.common.api.Metadata);
    Code:
       0: aload_0
       1: ldc           #17                 // String url
       3: invokevirtual #201                // Method io/fluxcapacitor/common/api/Metadata.get:(Ljava/lang/Object;)Ljava/lang/String;
       6: invokestatic  #204                // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
       9: invokedynamic #208,  0            // InvokeDynamic #4:apply:()Ljava/util/function/Function;
      14: invokevirtual #124                // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      17: invokedynamic #211,  0            // InvokeDynamic #5:get:()Ljava/util/function/Supplier;
      22: invokevirtual #214                // Method java/util/Optional.orElseThrow:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      25: checkcast     #181                // class java/lang/String
      28: areturn

  public static io.fluxcapacitor.javaclient.web.HttpRequestMethod getMethod(io.fluxcapacitor.common.api.Metadata);
    Code:
       0: aload_0
       1: ldc           #22                 // String method
       3: invokevirtual #201                // Method io/fluxcapacitor/common/api/Metadata.get:(Ljava/lang/Object;)Ljava/lang/String;
       6: invokestatic  #204                // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
       9: invokedynamic #217,  0            // InvokeDynamic #6:apply:()Ljava/util/function/Function;
      14: invokevirtual #124                // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      17: invokedynamic #218,  0            // InvokeDynamic #7:get:()Ljava/util/function/Supplier;
      22: invokevirtual #214                // Method java/util/Optional.orElseThrow:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      25: checkcast     #28                 // class io/fluxcapacitor/javaclient/web/HttpRequestMethod
      28: areturn

  public static java.util.Map<java.lang.String, java.util.List<java.lang.String>> getHeaders(io.fluxcapacitor.common.api.Metadata);
    Code:
       0: aload_0
       1: ldc           #32                 // String headers
       3: ldc           #105                // class java/util/Map
       5: invokevirtual #219                // Method io/fluxcapacitor/common/api/Metadata.get:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
       8: checkcast     #105                // class java/util/Map
      11: invokestatic  #204                // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      14: invokestatic  #222                // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      17: invokevirtual #177                // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #105                // class java/util/Map
      23: areturn

  public static java.util.Optional<java.net.HttpCookie> getCookie(io.fluxcapacitor.common.api.Metadata, java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #78                 // Method getHeaders:(Lio/fluxcapacitor/common/api/Metadata;)Ljava/util/Map;
       4: ldc           #225                // String Cookie
       6: invokestatic  #183                // Method java/util/Collections.emptyList:()Ljava/util/List;
       9: invokeinterface #104,  3          // InterfaceMethod java/util/Map.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #100                // class java/util/List
      17: invokeinterface #110,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      22: invokeinterface #114,  1          // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
      27: invokedynamic #227,  0            // InvokeDynamic #8:apply:()Ljava/util/function/Function;
      32: invokevirtual #124                // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      35: invokedynamic #228,  0            // InvokeDynamic #9:get:()Ljava/util/function/Supplier;
      40: invokevirtual #134                // Method java/util/Optional.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      43: checkcast     #100                // class java/util/List
      46: invokeinterface #110,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      51: aload_1
      52: invokedynamic #229,  0            // InvokeDynamic #10:test:(Ljava/lang/String;)Ljava/util/function/Predicate;
      57: invokeinterface #194,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      62: invokeinterface #114,  1          // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
      67: areturn

  public java.lang.String getPath();
    Code:
       0: aload_0
       1: getfield      #57                 // Field path:Ljava/lang/String;
       4: areturn

  public io.fluxcapacitor.javaclient.web.HttpRequestMethod getMethod();
    Code:
       0: aload_0
       1: getfield      #61                 // Field method:Lio/fluxcapacitor/javaclient/web/HttpRequestMethod;
       4: areturn

  public java.util.Map<java.lang.String, java.util.List<java.lang.String>> getHeaders();
    Code:
       0: aload_0
       1: getfield      #64                 // Field headers:Ljava/util/Map;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #52                 // class io/fluxcapacitor/javaclient/web/WebRequest
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #52                 // class io/fluxcapacitor/javaclient/web/WebRequest
      20: astore_2
      21: aload_2
      22: aload_0
      23: invokevirtual #230                // Method canEqual:(Ljava/lang/Object;)Z
      26: ifne          31
      29: iconst_0
      30: ireturn
      31: aload_0
      32: aload_1
      33: invokespecial #234                // Method io/fluxcapacitor/javaclient/common/Message.equals:(Ljava/lang/Object;)Z
      36: ifne          41
      39: iconst_0
      40: ireturn
      41: aload_0
      42: invokevirtual #237                // Method getPath:()Ljava/lang/String;
      45: astore_3
      46: aload_2
      47: invokevirtual #237                // Method getPath:()Ljava/lang/String;
      50: astore        4
      52: aload_3
      53: ifnonnull     64
      56: aload         4
      58: ifnull        75
      61: goto          73
      64: aload_3
      65: aload         4
      67: invokevirtual #240                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      70: ifne          75
      73: iconst_0
      74: ireturn
      75: aload_0
      76: invokevirtual #241                // Method getMethod:()Lio/fluxcapacitor/javaclient/web/HttpRequestMethod;
      79: astore        5
      81: aload_2
      82: invokevirtual #241                // Method getMethod:()Lio/fluxcapacitor/javaclient/web/HttpRequestMethod;
      85: astore        6
      87: aload         5
      89: ifnonnull     100
      92: aload         6
      94: ifnull        112
      97: goto          110
     100: aload         5
     102: aload         6
     104: invokevirtual #240                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     107: ifne          112
     110: iconst_0
     111: ireturn
     112: aload_0
     113: invokevirtual #243                // Method getHeaders:()Ljava/util/Map;
     116: astore        7
     118: aload_2
     119: invokevirtual #243                // Method getHeaders:()Ljava/util/Map;
     122: astore        8
     124: aload         7
     126: ifnonnull     137
     129: aload         8
     131: ifnull        149
     134: goto          147
     137: aload         7
     139: aload         8
     141: invokevirtual #240                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     144: ifne          149
     147: iconst_0
     148: ireturn
     149: aload_0
     150: invokevirtual #188                // Method getCookies:()Ljava/util/List;
     153: astore        9
     155: aload_2
     156: invokevirtual #188                // Method getCookies:()Ljava/util/List;
     159: astore        10
     161: aload         9
     163: ifnonnull     174
     166: aload         10
     168: ifnull        186
     171: goto          184
     174: aload         9
     176: aload         10
     178: invokevirtual #240                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     181: ifne          186
     184: iconst_0
     185: ireturn
     186: iconst_1
     187: ireturn

  protected boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #52                 // class io/fluxcapacitor/javaclient/web/WebRequest
       4: ireturn

  public int hashCode();
    Code:
       0: bipush        59
       2: istore_1
       3: aload_0
       4: invokespecial #245                // Method io/fluxcapacitor/javaclient/common/Message.hashCode:()I
       7: istore_2
       8: aload_0
       9: invokevirtual #237                // Method getPath:()Ljava/lang/String;
      12: astore_3
      13: iload_2
      14: bipush        59
      16: imul
      17: aload_3
      18: ifnonnull     26
      21: bipush        43
      23: goto          30
      26: aload_3
      27: invokevirtual #249                // Method java/lang/Object.hashCode:()I
      30: iadd
      31: istore_2
      32: aload_0
      33: invokevirtual #241                // Method getMethod:()Lio/fluxcapacitor/javaclient/web/HttpRequestMethod;
      36: astore        4
      38: iload_2
      39: bipush        59
      41: imul
      42: aload         4
      44: ifnonnull     52
      47: bipush        43
      49: goto          57
      52: aload         4
      54: invokevirtual #249                // Method java/lang/Object.hashCode:()I
      57: iadd
      58: istore_2
      59: aload_0
      60: invokevirtual #243                // Method getHeaders:()Ljava/util/Map;
      63: astore        5
      65: iload_2
      66: bipush        59
      68: imul
      69: aload         5
      71: ifnonnull     79
      74: bipush        43
      76: goto          84
      79: aload         5
      81: invokevirtual #249                // Method java/lang/Object.hashCode:()I
      84: iadd
      85: istore_2
      86: aload_0
      87: invokevirtual #188                // Method getCookies:()Ljava/util/List;
      90: astore        6
      92: iload_2
      93: bipush        59
      95: imul
      96: aload         6
      98: ifnonnull     106
     101: bipush        43
     103: goto          111
     106: aload         6
     108: invokevirtual #249                // Method java/lang/Object.hashCode:()I
     111: iadd
     112: istore_2
     113: iload_2
     114: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #237                // Method getPath:()Ljava/lang/String;
       4: aload_0
       5: invokevirtual #241                // Method getMethod:()Lio/fluxcapacitor/javaclient/web/HttpRequestMethod;
       8: invokedynamic #250,  0            // InvokeDynamic #11:makeConcatWithConstants:(Ljava/lang/String;Lio/fluxcapacitor/javaclient/web/HttpRequestMethod;)Ljava/lang/String;
      13: areturn

  public java.util.List<java.net.HttpCookie> getCookies();
    Code:
       0: aload_0
       1: getfield      #51                 // Field cookies:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #254                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: astore_1
       8: aload_1
       9: ifnonnull     91
      12: aload_0
      13: getfield      #51                 // Field cookies:Ljava/util/concurrent/atomic/AtomicReference;
      16: dup
      17: astore_2
      18: monitorenter
      19: aload_0
      20: getfield      #51                 // Field cookies:Ljava/util/concurrent/atomic/AtomicReference;
      23: invokevirtual #254                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      26: astore_1
      27: aload_1
      28: ifnonnull     79
      31: aload_0
      32: ldc           #225                // String Cookie
      34: invokevirtual #256                // Method getHeader:(Ljava/lang/String;)Ljava/lang/String;
      37: invokestatic  #204                // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      40: invokedynamic #227,  0            // InvokeDynamic #8:apply:()Ljava/util/function/Function;
      45: invokevirtual #124                // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      48: invokestatic  #183                // Method java/util/Collections.emptyList:()Ljava/util/List;
      51: invokevirtual #177                // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      54: checkcast     #100                // class java/util/List
      57: astore_3
      58: aload_3
      59: ifnonnull     69
      62: aload_0
      63: getfield      #51                 // Field cookies:Ljava/util/concurrent/atomic/AtomicReference;
      66: goto          70
      69: aload_3
      70: astore_1
      71: aload_0
      72: getfield      #51                 // Field cookies:Ljava/util/concurrent/atomic/AtomicReference;
      75: aload_1
      76: invokevirtual #260                // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      79: aload_2
      80: monitorexit
      81: goto          91
      84: astore        4
      86: aload_2
      87: monitorexit
      88: aload         4
      90: athrow
      91: aload_1
      92: aload_0
      93: getfield      #51                 // Field cookies:Ljava/util/concurrent/atomic/AtomicReference;
      96: if_acmpne     103
      99: aconst_null
     100: goto          104
     103: aload_1
     104: checkcast     #100                // class java/util/List
     107: areturn
    Exception table:
       from    to  target type
          19    81    84   any
          84    88    84   any

  public io.fluxcapacitor.javaclient.common.Message withMetadata(io.fluxcapacitor.common.api.Metadata);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #264                // Method withMetadata:(Lio/fluxcapacitor/common/api/Metadata;)Lio/fluxcapacitor/javaclient/web/WebRequest;
       5: areturn

  public io.fluxcapacitor.javaclient.common.Message withPayload(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #267                // Method withPayload:(Ljava/lang/Object;)Lio/fluxcapacitor/javaclient/web/WebRequest;
       5: areturn

  public io.fluxcapacitor.javaclient.common.Message addUser(io.fluxcapacitor.javaclient.tracking.handling.authentication.User);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #271                // Method addUser:(Lio/fluxcapacitor/javaclient/tracking/handling/authentication/User;)Lio/fluxcapacitor/javaclient/web/WebRequest;
       5: areturn

  public io.fluxcapacitor.javaclient.common.Message addMetadata(java.util.Map);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #274                // Method addMetadata:(Ljava/util/Map;)Lio/fluxcapacitor/javaclient/web/WebRequest;
       5: areturn

  public io.fluxcapacitor.javaclient.common.Message addMetadata(java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #277                // Method addMetadata:([Ljava/lang/Object;)Lio/fluxcapacitor/javaclient/web/WebRequest;
       5: areturn

  public io.fluxcapacitor.javaclient.common.Message addMetadata(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #280                // Method addMetadata:(Ljava/lang/String;Ljava/lang/Object;)Lio/fluxcapacitor/javaclient/web/WebRequest;
       6: areturn

  public io.fluxcapacitor.javaclient.common.Message addMetadata(io.fluxcapacitor.common.api.Metadata);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #283                // Method addMetadata:(Lio/fluxcapacitor/common/api/Metadata;)Lio/fluxcapacitor/javaclient/web/WebRequest;
       5: areturn

  private static boolean lambda$getCookie$16(java.lang.String, java.net.HttpCookie);
    Code:
       0: aload_1
       1: invokevirtual #285                // Method java/net/HttpCookie.getName:()Ljava/lang/String;
       4: aload_0
       5: invokestatic  #290                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
       8: ireturn

  private static java.lang.IllegalStateException lambda$getMethod$15();
    Code:
       0: new           #295                // class java/lang/IllegalStateException
       3: dup
       4: ldc_w         #297                // String WebRequest is malformed: http method is missing
       7: invokespecial #299                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      10: areturn

  private static io.fluxcapacitor.javaclient.web.HttpRequestMethod lambda$getMethod$14(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #302                // Method io/fluxcapacitor/javaclient/web/HttpRequestMethod.valueOf:(Ljava/lang/String;)Lio/fluxcapacitor/javaclient/web/HttpRequestMethod;
       4: areturn
       5: astore_1
       6: new           #295                // class java/lang/IllegalStateException
       9: dup
      10: ldc_w         #308                // String WebRequest is malformed: unrecognized http method
      13: invokespecial #299                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
    Exception table:
       from    to  target type
           0     4     5   Class java/lang/Exception

  private static java.lang.IllegalStateException lambda$getUrl$13();
    Code:
       0: new           #295                // class java/lang/IllegalStateException
       3: dup
       4: ldc_w         #310                // String WebRequest is malformed: url is missing
       7: invokespecial #299                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      10: areturn

  private static java.lang.String lambda$getUrl$12(java.lang.String);
    Code:
       0: aload_0
       1: ldc_w         #312                // String /
       4: invokevirtual #314                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       7: ifne          20
      10: aload_0
      11: ldc_w         #318                // String ://
      14: invokevirtual #320                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      17: ifeq          24
      20: aload_0
      21: goto          30
      24: aload_0
      25: invokedynamic #324,  0            // InvokeDynamic #12:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      30: areturn

  private static boolean lambda$getCookie$11(java.lang.String, java.net.HttpCookie);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #285                // Method java/net/HttpCookie.getName:()Ljava/lang/String;
       5: invokestatic  #290                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
       8: ireturn

  private io.fluxcapacitor.common.api.SerializedMessage lambda$serialize$10(io.fluxcapacitor.javaclient.common.serialization.Serializer);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #326                // Method io/fluxcapacitor/javaclient/common/Message.serialize:(Lio/fluxcapacitor/javaclient/common/serialization/Serializer;)Lio/fluxcapacitor/common/api/SerializedMessage;
       5: areturn

  private io.fluxcapacitor.common.api.SerializedMessage lambda$serialize$9(io.fluxcapacitor.javaclient.common.serialization.Serializer, java.lang.String);
    Code:
       0: new           #138                // class io/fluxcapacitor/common/api/SerializedMessage
       3: dup
       4: aload_1
       5: aload_0
       6: invokevirtual #330                // Method getPayload:()Ljava/lang/Object;
       9: aload_2
      10: invokeinterface #331,  3          // InterfaceMethod io/fluxcapacitor/javaclient/common/serialization/Serializer.serialize:(Ljava/lang/Object;Ljava/lang/String;)Lio/fluxcapacitor/common/api/Data;
      15: aload_0
      16: invokevirtual #336                // Method getMetadata:()Lio/fluxcapacitor/common/api/Metadata;
      19: aload_0
      20: invokevirtual #337                // Method getMessageId:()Ljava/lang/String;
      23: aload_0
      24: invokevirtual #338                // Method getTimestamp:()Ljava/time/Instant;
      27: invokevirtual #339                // Method java/time/Instant.toEpochMilli:()J
      30: invokestatic  #345                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      33: invokespecial #350                // Method io/fluxcapacitor/common/api/SerializedMessage."<init>":(Lio/fluxcapacitor/common/api/Data;Lio/fluxcapacitor/common/api/Metadata;Ljava/lang/String;Ljava/lang/Long;)V
      36: areturn

  private static boolean lambda$getWebRequestFilter$8(io.fluxcapacitor.javaclient.common.HasMessage, java.lang.reflect.Executable);
    Code:
       0: getstatic     #353                // Field filterCache:Ljava/util/Map;
       3: aload_1
       4: invokedynamic #356,  0            // InvokeDynamic #13:apply:()Ljava/util/function/Function;
       9: invokeinterface #357,  3          // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      14: checkcast     #361                // class java/util/function/Predicate
      17: aload_0
      18: invokeinterface #363,  2          // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      23: ireturn

  private static java.util.function.Predicate lambda$getWebRequestFilter$7(java.lang.reflect.Executable);
    Code:
       0: aload_0
       1: invokestatic  #365                // Method io/fluxcapacitor/javaclient/web/WebUtils.getWebParameters:(Ljava/lang/reflect/Executable;)Ljava/util/Optional;
       4: invokevirtual #371                // Method java/util/Optional.orElseThrow:()Ljava/lang/Object;
       7: checkcast     #373                // class io/fluxcapacitor/javaclient/web/WebParameters
      10: astore_1
      11: aload_1
      12: invokevirtual #375                // Method io/fluxcapacitor/javaclient/web/WebParameters.getPath:()Ljava/lang/String;
      15: invokestatic  #376                // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      18: invokedynamic #378,  0            // InvokeDynamic #14:apply:()Ljava/util/function/Function;
      23: invokevirtual #124                // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      26: invokedynamic #379,  0            // InvokeDynamic #15:apply:()Ljava/util/function/Function;
      31: invokevirtual #124                // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      34: invokedynamic #380,  0            // InvokeDynamic #16:test:()Ljava/util/function/Predicate;
      39: invokevirtual #177                // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      42: checkcast     #361                // class java/util/function/Predicate
      45: astore_2
      46: aload_1
      47: invokevirtual #383                // Method io/fluxcapacitor/javaclient/web/WebParameters.getMethod:()Lio/fluxcapacitor/javaclient/web/HttpRequestMethod;
      50: invokestatic  #376                // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      53: invokedynamic #384,  0            // InvokeDynamic #17:apply:()Ljava/util/function/Function;
      58: invokevirtual #124                // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      61: invokedynamic #385,  0            // InvokeDynamic #18:test:()Ljava/util/function/Predicate;
      66: invokevirtual #177                // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      69: checkcast     #361                // class java/util/function/Predicate
      72: astore_3
      73: aload_2
      74: aload_3
      75: invokedynamic #386,  0            // InvokeDynamic #19:test:(Ljava/util/function/Predicate;Ljava/util/function/Predicate;)Ljava/util/function/Predicate;
      80: areturn

  private static boolean lambda$getWebRequestFilter$6(java.util.function.Predicate, java.util.function.Predicate, io.fluxcapacitor.javaclient.common.HasMessage);
    Code:
       0: aload_2
       1: invokeinterface #389,  1          // InterfaceMethod io/fluxcapacitor/javaclient/common/HasMessage.getMetadata:()Lio/fluxcapacitor/common/api/Metadata;
       6: ldc           #17                 // String url
       8: invokevirtual #201                // Method io/fluxcapacitor/common/api/Metadata.get:(Ljava/lang/Object;)Ljava/lang/String;
      11: ldc_w         #392                // String Web request url is missing in the metadata of a WebRequest message
      14: invokestatic  #394                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      17: checkcast     #181                // class java/lang/String
      20: astore_3
      21: aload_2
      22: invokeinterface #389,  1          // InterfaceMethod io/fluxcapacitor/javaclient/common/HasMessage.getMetadata:()Lio/fluxcapacitor/common/api/Metadata;
      27: ldc           #22                 // String method
      29: invokevirtual #201                // Method io/fluxcapacitor/common/api/Metadata.get:(Ljava/lang/Object;)Ljava/lang/String;
      32: ldc_w         #398                // String Web request method is missing in the metadata of a WebRequest message
      35: invokestatic  #394                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      38: checkcast     #181                // class java/lang/String
      41: astore        4
      43: aload_0
      44: aload_3
      45: invokeinterface #363,  2          // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      50: ifeq          68
      53: aload_1
      54: aload         4
      56: invokeinterface #363,  2          // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      61: ifeq          68
      64: iconst_1
      65: goto          69
      68: iconst_0
      69: ireturn

  private static boolean lambda$getWebRequestFilter$5(java.lang.String);
    Code:
       0: iconst_1
       1: ireturn

  private static java.util.function.Predicate lambda$getWebRequestFilter$4(io.fluxcapacitor.javaclient.web.HttpRequestMethod);
    Code:
       0: aload_0
       1: invokedynamic #400,  0            // InvokeDynamic #20:test:(Lio/fluxcapacitor/javaclient/web/HttpRequestMethod;)Ljava/util/function/Predicate;
       6: areturn

  private static boolean lambda$getWebRequestFilter$3(io.fluxcapacitor.javaclient.web.HttpRequestMethod, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method io/fluxcapacitor/javaclient/web/HttpRequestMethod.name:()Ljava/lang/String;
       4: aload_1
       5: invokevirtual #403                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       8: ireturn

  private static boolean lambda$getWebRequestFilter$2(java.lang.String);
    Code:
       0: iconst_1
       1: ireturn

  private static java.util.function.Predicate lambda$getWebRequestFilter$1(java.util.function.Predicate);
    Code:
       0: aload_0
       1: invokedynamic #404,  0            // InvokeDynamic #21:test:(Ljava/util/function/Predicate;)Ljava/util/function/Predicate;
       6: areturn

  private static boolean lambda$getWebRequestFilter$0(java.util.function.Predicate, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #312                // String /
       5: invokevirtual #314                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       8: ifne          21
      11: aload_1
      12: ldc_w         #318                // String ://
      15: invokevirtual #320                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      18: ifeq          25
      21: aload_1
      22: goto          31
      25: aload_1
      26: invokedynamic #324,  0            // InvokeDynamic #12:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      31: invokeinterface #363,  2          // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      36: ireturn

  static {};
    Code:
       0: new           #407                // class java/util/concurrent/ConcurrentHashMap
       3: dup
       4: invokespecial #409                // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
       7: putstatic     #353                // Field filterCache:Ljava/util/Map;
      10: return
}
