Compiled from "WebResponse.java"
public class io.fluxcapacitor.javaclient.web.WebResponse$Builder {
  private java.util.Map<java.lang.String, java.util.List<java.lang.String>> headers;

  private java.util.List<java.net.HttpCookie> cookies;

  private java.lang.Object payload;

  private java.lang.Integer status;

  protected io.fluxcapacitor.javaclient.web.WebResponse$Builder(io.fluxcapacitor.javaclient.web.WebResponse);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class java/util/HashMap
       8: dup
       9: invokespecial #9                  // Method java/util/HashMap."<init>":()V
      12: putfield      #10                 // Field headers:Ljava/util/Map;
      15: aload_0
      16: new           #16                 // class java/util/ArrayList
      19: dup
      20: invokespecial #18                 // Method java/util/ArrayList."<init>":()V
      23: putfield      #19                 // Field cookies:Ljava/util/List;
      26: aload_0
      27: aload_1
      28: invokevirtual #23                 // Method io/fluxcapacitor/javaclient/web/WebResponse.getEncodedPayload:()Ljava/lang/Object;
      31: invokevirtual #29                 // Method payload:(Ljava/lang/Object;)Lio/fluxcapacitor/javaclient/web/WebResponse$Builder;
      34: pop
      35: aload_0
      36: aload_1
      37: invokevirtual #33                 // Method io/fluxcapacitor/javaclient/web/WebResponse.getStatus:()Ljava/lang/Integer;
      40: invokevirtual #37                 // Method status:(Ljava/lang/Integer;)Lio/fluxcapacitor/javaclient/web/WebResponse$Builder;
      43: pop
      44: aload_1
      45: invokevirtual #41                 // Method io/fluxcapacitor/javaclient/web/WebResponse.getHeaders:()Ljava/util/Map;
      48: aload_0
      49: invokedynamic #45,  0             // InvokeDynamic #0:accept:(Lio/fluxcapacitor/javaclient/web/WebResponse$Builder;)Ljava/util/function/BiConsumer;
      54: invokeinterface #49,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      59: aload_0
      60: getfield      #19                 // Field cookies:Ljava/util/List;
      63: aload_0
      64: getfield      #10                 // Field headers:Ljava/util/Map;
      67: ldc           #55                 // String Set-Cookie
      69: invokeinterface #57,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      74: checkcast     #61                 // class java/util/List
      77: invokestatic  #63                 // Method io/fluxcapacitor/javaclient/web/WebUtils.parseResponseCookieHeader:(Ljava/util/List;)Ljava/util/List;
      80: invokeinterface #69,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      85: pop
      86: return

  public io.fluxcapacitor.javaclient.web.WebResponse$Builder payload(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #73                 // Field payload:Ljava/lang/Object;
       5: aload_0
       6: invokevirtual #76                 // Method headers:()Ljava/util/Map;
       9: ldc           #78                 // String Content-Type
      11: invokeinterface #80,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      16: ifne          47
      19: aload_1
      20: instanceof    #84                 // class java/lang/String
      23: ifeq          33
      26: aload_0
      27: ldc           #86                 // String text/plain
      29: invokevirtual #88                 // Method contentType:(Ljava/lang/String;)Lio/fluxcapacitor/javaclient/web/WebResponse$Builder;
      32: areturn
      33: aload_1
      34: instanceof    #92                 // class "[B"
      37: ifeq          47
      40: aload_0
      41: ldc           #94                 // String application/octet-stream
      43: invokevirtual #88                 // Method contentType:(Ljava/lang/String;)Lio/fluxcapacitor/javaclient/web/WebResponse$Builder;
      46: areturn
      47: aload_0
      48: areturn

  public io.fluxcapacitor.javaclient.web.WebResponse$Builder header(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #10                 // Field headers:Ljava/util/Map;
       4: aload_1
       5: invokedynamic #96,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      10: invokeinterface #100,  3          // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      15: checkcast     #61                 // class java/util/List
      18: aload_2
      19: invokeinterface #104,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      24: pop
      25: aload_0
      26: areturn

  public io.fluxcapacitor.javaclient.web.WebResponse$Builder cookie(java.net.HttpCookie);
    Code:
       0: aload_0
       1: getfield      #19                 // Field cookies:Ljava/util/List;
       4: aload_1
       5: invokeinterface #104,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  public io.fluxcapacitor.javaclient.web.WebResponse$Builder contentType(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #78                 // String Content-Type
       3: aload_1
       4: invokevirtual #107                // Method header:(Ljava/lang/String;Ljava/lang/String;)Lio/fluxcapacitor/javaclient/web/WebResponse$Builder;
       7: areturn

  public java.util.Map<java.lang.String, java.util.List<java.lang.String>> headers();
    Code:
       0: aload_0
       1: getfield      #10                 // Field headers:Ljava/util/Map;
       4: astore_1
       5: aload_0
       6: getfield      #19                 // Field cookies:Ljava/util/List;
       9: invokeinterface #111,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      14: ifne          68
      17: new           #7                  // class java/util/HashMap
      20: dup
      21: aload_0
      22: getfield      #10                 // Field headers:Ljava/util/Map;
      25: invokespecial #115                // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      28: astore_1
      29: aload_1
      30: ldc           #55                 // String Set-Cookie
      32: aload_0
      33: getfield      #19                 // Field cookies:Ljava/util/List;
      36: invokeinterface #118,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      41: invokedynamic #122,  0            // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      46: invokeinterface #123,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      51: invokestatic  #129                // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      54: invokeinterface #135,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      59: checkcast     #61                 // class java/util/List
      62: invokeinterface #139,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      67: pop
      68: aload_1
      69: areturn

  public java.lang.Integer status();
    Code:
       0: aload_0
       1: getfield      #143                // Field status:Ljava/lang/Integer;
       4: ifnonnull     26
       7: aload_0
       8: getfield      #73                 // Field payload:Ljava/lang/Object;
      11: ifnonnull     20
      14: sipush        204
      17: goto          33
      20: sipush        200
      23: goto          33
      26: aload_0
      27: getfield      #143                // Field status:Ljava/lang/Integer;
      30: invokevirtual #146                // Method java/lang/Integer.intValue:()I
      33: invokestatic  #152                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      36: areturn

  public io.fluxcapacitor.javaclient.web.WebResponse build();
    Code:
       0: new           #24                 // class io/fluxcapacitor/javaclient/web/WebResponse
       3: dup
       4: aload_0
       5: invokespecial #156                // Method io/fluxcapacitor/javaclient/web/WebResponse."<init>":(Lio/fluxcapacitor/javaclient/web/WebResponse$Builder;)V
       8: areturn

  public java.util.List<java.net.HttpCookie> cookies();
    Code:
       0: aload_0
       1: getfield      #19                 // Field cookies:Ljava/util/List;
       4: areturn

  public java.lang.Object payload();
    Code:
       0: aload_0
       1: getfield      #73                 // Field payload:Ljava/lang/Object;
       4: areturn

  public io.fluxcapacitor.javaclient.web.WebResponse$Builder headers(java.util.Map<java.lang.String, java.util.List<java.lang.String>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field headers:Ljava/util/Map;
       5: aload_0
       6: areturn

  public io.fluxcapacitor.javaclient.web.WebResponse$Builder status(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #143                // Field status:Ljava/lang/Integer;
       5: aload_0
       6: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #11                 // class io/fluxcapacitor/javaclient/web/WebResponse$Builder
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #11                 // class io/fluxcapacitor/javaclient/web/WebResponse$Builder
      20: astore_2
      21: aload_2
      22: aload_0
      23: invokevirtual #159                // Method canEqual:(Ljava/lang/Object;)Z
      26: ifne          31
      29: iconst_0
      30: ireturn
      31: aload_0
      32: invokevirtual #162                // Method status:()Ljava/lang/Integer;
      35: astore_3
      36: aload_2
      37: invokevirtual #162                // Method status:()Ljava/lang/Integer;
      40: astore        4
      42: aload_3
      43: ifnonnull     54
      46: aload         4
      48: ifnull        65
      51: goto          63
      54: aload_3
      55: aload         4
      57: invokevirtual #164                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifne          65
      63: iconst_0
      64: ireturn
      65: aload_0
      66: invokevirtual #76                 // Method headers:()Ljava/util/Map;
      69: astore        5
      71: aload_2
      72: invokevirtual #76                 // Method headers:()Ljava/util/Map;
      75: astore        6
      77: aload         5
      79: ifnonnull     90
      82: aload         6
      84: ifnull        102
      87: goto          100
      90: aload         5
      92: aload         6
      94: invokevirtual #164                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      97: ifne          102
     100: iconst_0
     101: ireturn
     102: aload_0
     103: invokevirtual #167                // Method cookies:()Ljava/util/List;
     106: astore        7
     108: aload_2
     109: invokevirtual #167                // Method cookies:()Ljava/util/List;
     112: astore        8
     114: aload         7
     116: ifnonnull     127
     119: aload         8
     121: ifnull        139
     124: goto          137
     127: aload         7
     129: aload         8
     131: invokevirtual #164                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     134: ifne          139
     137: iconst_0
     138: ireturn
     139: aload_0
     140: invokevirtual #170                // Method payload:()Ljava/lang/Object;
     143: astore        9
     145: aload_2
     146: invokevirtual #170                // Method payload:()Ljava/lang/Object;
     149: astore        10
     151: aload         9
     153: ifnonnull     164
     156: aload         10
     158: ifnull        176
     161: goto          174
     164: aload         9
     166: aload         10
     168: invokevirtual #164                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     171: ifne          176
     174: iconst_0
     175: ireturn
     176: iconst_1
     177: ireturn

  protected boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #11                 // class io/fluxcapacitor/javaclient/web/WebResponse$Builder
       4: ireturn

  public int hashCode();
    Code:
       0: bipush        59
       2: istore_1
       3: iconst_1
       4: istore_2
       5: aload_0
       6: invokevirtual #162                // Method status:()Ljava/lang/Integer;
       9: astore_3
      10: iload_2
      11: bipush        59
      13: imul
      14: aload_3
      15: ifnonnull     23
      18: bipush        43
      20: goto          27
      23: aload_3
      24: invokevirtual #172                // Method java/lang/Object.hashCode:()I
      27: iadd
      28: istore_2
      29: aload_0
      30: invokevirtual #76                 // Method headers:()Ljava/util/Map;
      33: astore        4
      35: iload_2
      36: bipush        59
      38: imul
      39: aload         4
      41: ifnonnull     49
      44: bipush        43
      46: goto          54
      49: aload         4
      51: invokevirtual #172                // Method java/lang/Object.hashCode:()I
      54: iadd
      55: istore_2
      56: aload_0
      57: invokevirtual #167                // Method cookies:()Ljava/util/List;
      60: astore        5
      62: iload_2
      63: bipush        59
      65: imul
      66: aload         5
      68: ifnonnull     76
      71: bipush        43
      73: goto          81
      76: aload         5
      78: invokevirtual #172                // Method java/lang/Object.hashCode:()I
      81: iadd
      82: istore_2
      83: aload_0
      84: invokevirtual #170                // Method payload:()Ljava/lang/Object;
      87: astore        6
      89: iload_2
      90: bipush        59
      92: imul
      93: aload         6
      95: ifnonnull     103
      98: bipush        43
     100: goto          108
     103: aload         6
     105: invokevirtual #172                // Method java/lang/Object.hashCode:()I
     108: iadd
     109: istore_2
     110: iload_2
     111: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #76                 // Method headers:()Ljava/util/Map;
       4: aload_0
       5: invokevirtual #167                // Method cookies:()Ljava/util/List;
       8: aload_0
       9: invokevirtual #170                // Method payload:()Ljava/lang/Object;
      12: aload_0
      13: invokevirtual #162                // Method status:()Ljava/lang/Integer;
      16: invokedynamic #175,  0            // InvokeDynamic #3:makeConcatWithConstants:(Ljava/util/Map;Ljava/util/List;Ljava/lang/Object;Ljava/lang/Integer;)Ljava/lang/String;
      21: areturn

  public io.fluxcapacitor.javaclient.web.WebResponse$Builder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class java/util/HashMap
       8: dup
       9: invokespecial #9                  // Method java/util/HashMap."<init>":()V
      12: putfield      #10                 // Field headers:Ljava/util/Map;
      15: aload_0
      16: new           #16                 // class java/util/ArrayList
      19: dup
      20: invokespecial #18                 // Method java/util/ArrayList."<init>":()V
      23: putfield      #19                 // Field cookies:Ljava/util/List;
      26: return

  private static java.util.List lambda$header$1(java.lang.String);
    Code:
       0: new           #16                 // class java/util/ArrayList
       3: dup
       4: invokespecial #18                 // Method java/util/ArrayList."<init>":()V
       7: areturn

  private void lambda$new$0(java.lang.String, java.util.List);
    Code:
       0: aload_0
       1: getfield      #10                 // Field headers:Ljava/util/Map;
       4: aload_1
       5: new           #16                 // class java/util/ArrayList
       8: dup
       9: aload_2
      10: invokespecial #179                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      13: invokeinterface #139,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: return
}
