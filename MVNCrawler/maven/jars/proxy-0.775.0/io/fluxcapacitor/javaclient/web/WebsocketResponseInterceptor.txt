Compiled from "WebsocketResponseInterceptor.java"
public class io.fluxcapacitor.javaclient.web.WebsocketResponseInterceptor implements io.fluxcapacitor.javaclient.publishing.DispatchInterceptor {
  public io.fluxcapacitor.javaclient.common.Message interceptDispatch(io.fluxcapacitor.javaclient.common.Message, io.fluxcapacitor.common.MessageType);
    Code:
       0: invokestatic  #1                  // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.getCurrent:()Lio/fluxcapacitor/javaclient/common/serialization/DeserializingMessage;
       3: astore_3
       4: aload_3
       5: ifnull        136
       8: aload_3
       9: invokevirtual #7                  // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.getMessageType:()Lio/fluxcapacitor/common/MessageType;
      12: getstatic     #11                 // Field io/fluxcapacitor/common/MessageType.WEBREQUEST:Lio/fluxcapacitor/common/MessageType;
      15: if_acmpne     136
      18: aload_3
      19: invokevirtual #17                 // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.getMetadata:()Lio/fluxcapacitor/common/api/Metadata;
      22: invokestatic  #21                 // Method io/fluxcapacitor/javaclient/web/WebRequest.getMethod:(Lio/fluxcapacitor/common/api/Metadata;)Lio/fluxcapacitor/javaclient/web/HttpRequestMethod;
      25: astore        4
      27: aload         4
      29: ifnull        136
      32: aload         4
      34: invokevirtual #27                 // Method io/fluxcapacitor/javaclient/web/HttpRequestMethod.isWebsocket:()Z
      37: ifeq          136
      40: aload         4
      42: getstatic     #33                 // Field io/fluxcapacitor/javaclient/web/HttpRequestMethod.WS_HANDSHAKE:Lio/fluxcapacitor/javaclient/web/HttpRequestMethod;
      45: if_acmpne     106
      48: aload_1
      49: iconst_4
      50: anewarray     #37                 // class java/lang/Object
      53: dup
      54: iconst_0
      55: ldc           #39                 // String clientId
      57: aastore
      58: dup
      59: iconst_1
      60: invokestatic  #41                 // InterfaceMethod io/fluxcapacitor/javaclient/FluxCapacitor.getOptionally:()Ljava/util/Optional;
      63: invokedynamic #47,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      68: invokevirtual #51                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      71: aconst_null
      72: invokevirtual #57                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      75: aastore
      76: dup
      77: iconst_2
      78: ldc           #61                 // String trackerId
      80: aastore
      81: dup
      82: iconst_3
      83: invokestatic  #63                 // Method io/fluxcapacitor/javaclient/tracking/Tracker.current:()Ljava/util/Optional;
      86: invokedynamic #68,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      91: invokevirtual #51                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      94: aconst_null
      95: invokevirtual #57                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      98: aastore
      99: invokevirtual #69                 // Method io/fluxcapacitor/javaclient/common/Message.addMetadata:([Ljava/lang/Object;)Lio/fluxcapacitor/javaclient/common/Message;
     102: astore_1
     103: goto          136
     106: aload_1
     107: aload_1
     108: invokevirtual #75                 // Method io/fluxcapacitor/javaclient/common/Message.getMetadata:()Lio/fluxcapacitor/common/api/Metadata;
     111: ldc           #76                 // String sessionId
     113: aload_3
     114: invokevirtual #17                 // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.getMetadata:()Lio/fluxcapacitor/common/api/Metadata;
     117: ldc           #76                 // String sessionId
     119: invokevirtual #78                 // Method io/fluxcapacitor/common/api/Metadata.get:(Ljava/lang/Object;)Ljava/lang/String;
     122: invokevirtual #84                 // Method io/fluxcapacitor/common/api/Metadata.with:(Ljava/lang/Object;Ljava/lang/Object;)Lio/fluxcapacitor/common/api/Metadata;
     125: ldc           #88                 // String function
     127: ldc           #90                 // String message
     129: invokevirtual #92                 // Method io/fluxcapacitor/common/api/Metadata.addIfAbsent:(Ljava/lang/Object;Ljava/lang/String;)Lio/fluxcapacitor/common/api/Metadata;
     132: invokevirtual #96                 // Method io/fluxcapacitor/javaclient/common/Message.withMetadata:(Lio/fluxcapacitor/common/api/Metadata;)Lio/fluxcapacitor/javaclient/common/Message;
     135: areturn
     136: aload_1
     137: areturn

  public io.fluxcapacitor.javaclient.web.WebsocketResponseInterceptor();
    Code:
       0: aload_0
       1: invokespecial #100                // Method java/lang/Object."<init>":()V
       4: return

  private static java.lang.String lambda$interceptDispatch$0(io.fluxcapacitor.javaclient.FluxCapacitor);
    Code:
       0: aload_0
       1: invokeinterface #104,  1          // InterfaceMethod io/fluxcapacitor/javaclient/FluxCapacitor.client:()Lio/fluxcapacitor/javaclient/configuration/client/Client;
       6: invokeinterface #108,  1          // InterfaceMethod io/fluxcapacitor/javaclient/configuration/client/Client.id:()Ljava/lang/String;
      11: areturn
}
