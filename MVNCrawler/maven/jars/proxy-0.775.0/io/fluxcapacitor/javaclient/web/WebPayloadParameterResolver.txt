Compiled from "WebPayloadParameterResolver.java"
public class io.fluxcapacitor.javaclient.web.WebPayloadParameterResolver implements io.fluxcapacitor.common.handling.ParameterResolver<io.fluxcapacitor.javaclient.common.HasMessage> {
  private final boolean validatePayload;

  private final boolean authoriseUser;

  public java.util.function.Function<io.fluxcapacitor.javaclient.common.HasMessage, java.lang.Object> resolve(java.lang.reflect.Parameter, java.lang.annotation.Annotation);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #1,  0              // InvokeDynamic #0:apply:(Lio/fluxcapacitor/javaclient/web/WebPayloadParameterResolver;Ljava/lang/reflect/Parameter;)Ljava/util/function/Function;
       7: areturn

  public boolean matches(java.lang.reflect.Parameter, java.lang.annotation.Annotation, io.fluxcapacitor.javaclient.common.HasMessage, java.lang.Object);
    Code:
       0: aload_2
       1: ldc           #5                  // class io/fluxcapacitor/javaclient/web/HandleWeb
       3: invokestatic  #7                  // Method io/fluxcapacitor/common/reflection/ReflectionUtils.isOrHas:(Ljava/lang/annotation/Annotation;Ljava/lang/Class;)Z
       6: ireturn

  public io.fluxcapacitor.javaclient.web.WebPayloadParameterResolver(boolean, boolean);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #19                 // Field validatePayload:Z
       9: aload_0
      10: iload_2
      11: putfield      #25                 // Field authoriseUser:Z
      14: return

  public boolean matches(java.lang.reflect.Parameter, java.lang.annotation.Annotation, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: checkcast     #28                 // class io/fluxcapacitor/javaclient/common/HasMessage
       7: aload         4
       9: invokevirtual #30                 // Method matches:(Ljava/lang/reflect/Parameter;Ljava/lang/annotation/Annotation;Lio/fluxcapacitor/javaclient/common/HasMessage;Ljava/lang/Object;)Z
      12: ireturn

  private java.lang.Object lambda$resolve$0(java.lang.reflect.Parameter, io.fluxcapacitor.javaclient.common.HasMessage);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #34                 // Method java/lang/reflect/Parameter.getType:()Ljava/lang/Class;
       5: invokeinterface #40,  2           // InterfaceMethod io/fluxcapacitor/javaclient/common/HasMessage.getPayloadAs:(Ljava/lang/Class;)Ljava/lang/Object;
      10: astore_3
      11: aload_0
      12: getfield      #19                 // Field validatePayload:Z
      15: ifeq          26
      18: aload_3
      19: iconst_0
      20: anewarray     #44                 // class java/lang/Class
      23: invokestatic  #46                 // Method io/fluxcapacitor/javaclient/tracking/handling/validation/ValidationUtils.assertValid:(Ljava/lang/Object;[Ljava/lang/Class;)V
      26: aload_0
      27: getfield      #25                 // Field authoriseUser:Z
      30: ifeq          47
      33: aload_3
      34: ifnull        47
      37: aload_3
      38: invokevirtual #52                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      41: invokestatic  #55                 // InterfaceMethod io/fluxcapacitor/javaclient/tracking/handling/authentication/User.getCurrent:()Lio/fluxcapacitor/javaclient/tracking/handling/authentication/User;
      44: invokestatic  #61                 // Method io/fluxcapacitor/javaclient/tracking/handling/validation/ValidationUtils.assertAuthorized:(Ljava/lang/Class;Lio/fluxcapacitor/javaclient/tracking/handling/authentication/User;)V
      47: aload_3
      48: areturn
}
