Compiled from "LockBasedStorageManager.java"
class kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$LockBasedLazyValue<T> implements kotlin.reflect.jvm.internal.impl.storage.NullableLazyValue<T> {
  private final kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager storageManager;

  private final kotlin.jvm.functions.Function0<? extends T> computable;

  private volatile java.lang.Object value;

  public kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$LockBasedLazyValue(kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager, kotlin.jvm.functions.Function0<? extends T>);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: iconst_0
       5: invokestatic  #40                 // Method $$$reportNull$$$0:(I)V
       8: aload_2
       9: ifnonnull     16
      12: iconst_1
      13: invokestatic  #40                 // Method $$$reportNull$$$0:(I)V
      16: aload_0
      17: invokespecial #36                 // Method java/lang/Object."<init>":()V
      20: aload_0
      21: getstatic     #32                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue.NOT_COMPUTED:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue;
      24: putfield      #30                 // Field value:Ljava/lang/Object;
      27: aload_0
      28: aload_1
      29: putfield      #29                 // Field storageManager:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;
      32: aload_0
      33: aload_2
      34: putfield      #28                 // Field computable:Lkotlin/jvm/functions/Function0;
      37: return

  public boolean isComputed();
    Code:
       0: aload_0
       1: getfield      #30                 // Field value:Ljava/lang/Object;
       4: getstatic     #32                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue.NOT_COMPUTED:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue;
       7: if_acmpeq     24
      10: aload_0
      11: getfield      #30                 // Field value:Ljava/lang/Object;
      14: getstatic     #31                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue.COMPUTING:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue;
      17: if_acmpeq     24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public T invoke();
    Code:
       0: aload_0
       1: getfield      #30                 // Field value:Ljava/lang/Object;
       4: astore_1
       5: aload_1
       6: instanceof    #21                 // class kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue
       9: ifne          17
      12: aload_1
      13: invokestatic  #47                 // Method kotlin/reflect/jvm/internal/impl/utils/WrappedValues.unescapeThrowable:(Ljava/lang/Object;)Ljava/lang/Object;
      16: areturn
      17: aload_0
      18: getfield      #29                 // Field storageManager:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;
      21: getfield      #27                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager.lock:Lkotlin/reflect/jvm/internal/impl/storage/SimpleLock;
      24: invokeinterface #50,  1           // InterfaceMethod kotlin/reflect/jvm/internal/impl/storage/SimpleLock.lock:()V
      29: aload_0
      30: getfield      #30                 // Field value:Ljava/lang/Object;
      33: astore_1
      34: aload_1
      35: instanceof    #21                 // class kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue
      38: ifne          60
      41: aload_1
      42: invokestatic  #47                 // Method kotlin/reflect/jvm/internal/impl/utils/WrappedValues.unescapeThrowable:(Ljava/lang/Object;)Ljava/lang/Object;
      45: astore_2
      46: aload_0
      47: getfield      #29                 // Field storageManager:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;
      50: getfield      #27                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager.lock:Lkotlin/reflect/jvm/internal/impl/storage/SimpleLock;
      53: invokeinterface #51,  1           // InterfaceMethod kotlin/reflect/jvm/internal/impl/storage/SimpleLock.unlock:()V
      58: aload_2
      59: areturn
      60: aload_1
      61: getstatic     #31                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue.COMPUTING:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue;
      64: if_acmpne     106
      67: aload_0
      68: getstatic     #33                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue.RECURSION_WAS_DETECTED:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue;
      71: putfield      #30                 // Field value:Ljava/lang/Object;
      74: aload_0
      75: iconst_1
      76: invokevirtual #42                 // Method recursionDetected:(Z)Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$RecursionDetectedResult;
      79: astore_2
      80: aload_2
      81: invokevirtual #44                 // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$RecursionDetectedResult.isFallThrough:()Z
      84: ifne          106
      87: aload_2
      88: invokevirtual #43                 // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$RecursionDetectedResult.getValue:()Ljava/lang/Object;
      91: astore_3
      92: aload_0
      93: getfield      #29                 // Field storageManager:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;
      96: getfield      #27                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager.lock:Lkotlin/reflect/jvm/internal/impl/storage/SimpleLock;
      99: invokeinterface #51,  1           // InterfaceMethod kotlin/reflect/jvm/internal/impl/storage/SimpleLock.unlock:()V
     104: aload_3
     105: areturn
     106: aload_1
     107: getstatic     #33                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue.RECURSION_WAS_DETECTED:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue;
     110: if_acmpne     145
     113: aload_0
     114: iconst_0
     115: invokevirtual #42                 // Method recursionDetected:(Z)Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$RecursionDetectedResult;
     118: astore_2
     119: aload_2
     120: invokevirtual #44                 // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$RecursionDetectedResult.isFallThrough:()Z
     123: ifne          145
     126: aload_2
     127: invokevirtual #43                 // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$RecursionDetectedResult.getValue:()Ljava/lang/Object;
     130: astore_3
     131: aload_0
     132: getfield      #29                 // Field storageManager:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;
     135: getfield      #27                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager.lock:Lkotlin/reflect/jvm/internal/impl/storage/SimpleLock;
     138: invokeinterface #51,  1           // InterfaceMethod kotlin/reflect/jvm/internal/impl/storage/SimpleLock.unlock:()V
     143: aload_3
     144: areturn
     145: aload_0
     146: getstatic     #31                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue.COMPUTING:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue;
     149: putfield      #30                 // Field value:Ljava/lang/Object;
     152: aload_0
     153: getfield      #28                 // Field computable:Lkotlin/jvm/functions/Function0;
     156: invokeinterface #48,  1           // InterfaceMethod kotlin/jvm/functions/Function0.invoke:()Ljava/lang/Object;
     161: astore_2
     162: aload_0
     163: aload_2
     164: invokevirtual #41                 // Method postCompute:(Ljava/lang/Object;)V
     167: aload_0
     168: aload_2
     169: putfield      #30                 // Field value:Ljava/lang/Object;
     172: aload_2
     173: astore_3
     174: aload_0
     175: getfield      #29                 // Field storageManager:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;
     178: getfield      #27                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager.lock:Lkotlin/reflect/jvm/internal/impl/storage/SimpleLock;
     181: invokeinterface #51,  1           // InterfaceMethod kotlin/reflect/jvm/internal/impl/storage/SimpleLock.unlock:()V
     186: aload_3
     187: areturn
     188: astore_2
     189: aload_2
     190: invokestatic  #45                 // Method kotlin/reflect/jvm/internal/impl/utils/ExceptionUtilsKt.isProcessCanceledException:(Ljava/lang/Throwable;)Z
     193: ifeq          208
     196: aload_0
     197: getstatic     #32                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue.NOT_COMPUTED:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue;
     200: putfield      #30                 // Field value:Ljava/lang/Object;
     203: aload_2
     204: checkcast     #14                 // class java/lang/RuntimeException
     207: athrow
     208: aload_0
     209: getfield      #30                 // Field value:Ljava/lang/Object;
     212: getstatic     #31                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue.COMPUTING:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue;
     215: if_acmpne     226
     218: aload_0
     219: aload_2
     220: invokestatic  #46                 // Method kotlin/reflect/jvm/internal/impl/utils/WrappedValues.escapeThrowable:(Ljava/lang/Throwable;)Ljava/lang/Object;
     223: putfield      #30                 // Field value:Ljava/lang/Object;
     226: aload_0
     227: getfield      #29                 // Field storageManager:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;
     230: invokestatic  #38                 // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager.access$100:(Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;)Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$ExceptionHandlingStrategy;
     233: aload_2
     234: invokeinterface #49,  2           // InterfaceMethod kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$ExceptionHandlingStrategy.handleException:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
     239: athrow
     240: astore        4
     242: aload_0
     243: getfield      #29                 // Field storageManager:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;
     246: getfield      #27                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager.lock:Lkotlin/reflect/jvm/internal/impl/storage/SimpleLock;
     249: invokeinterface #51,  1           // InterfaceMethod kotlin/reflect/jvm/internal/impl/storage/SimpleLock.unlock:()V
     254: aload         4
     256: athrow
    Exception table:
       from    to  target type
         152   174   188   Class java/lang/Throwable
          29    46   240   any
          60    92   240   any
         106   131   240   any
         145   174   240   any
         188   242   240   any

  protected kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$RecursionDetectedResult<T> recursionDetected(boolean);
    Code:
       0: aload_0
       1: getfield      #29                 // Field storageManager:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;
       4: ldc           #5                  // String in a lazy value
       6: aconst_null
       7: invokevirtual #39                 // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager.recursionDetectedDefault:(Ljava/lang/String;Ljava/lang/Object;)Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$RecursionDetectedResult;
      10: dup
      11: ifnonnull     18
      14: iconst_2
      15: invokestatic  #40                 // Method $$$reportNull$$$0:(I)V
      18: areturn

  protected void postCompute(T);
    Code:
       0: return

  private static void $$$reportNull$$$0(int);
    Code:
       0: iload_0
       1: tableswitch   { // 0 to 3
                     0: 32
                     1: 32
                     2: 37
                     3: 37
               default: 32
          }
      32: ldc           #3                  // String Argument for @NotNull parameter \'%s\' of %s.%s must not be null
      34: goto          42
      37: ldc           #2                  // String @NotNull method %s.%s must not return null
      39: goto          42
      42: iload_0
      43: tableswitch   { // 0 to 3
                     0: 72
                     1: 72
                     2: 76
                     3: 76
               default: 72
          }
      72: iconst_3
      73: goto          80
      76: iconst_2
      77: goto          80
      80: anewarray     #13                 // class java/lang/Object
      83: iload_0
      84: tableswitch   { // 0 to 3
                     0: 116
                     1: 124
                     2: 132
                     3: 132
               default: 116
          }
     116: dup
     117: iconst_0
     118: ldc           #9                  // String storageManager
     120: aastore
     121: goto          140
     124: dup
     125: iconst_0
     126: ldc           #4                  // String computable
     128: aastore
     129: goto          140
     132: dup
     133: iconst_0
     134: ldc           #6                  // String kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$LockBasedLazyValue
     136: aastore
     137: goto          140
     140: iload_0
     141: tableswitch   { // 0 to 3
                     0: 172
                     1: 172
                     2: 180
                     3: 188
               default: 172
          }
     172: dup
     173: iconst_1
     174: ldc           #6                  // String kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$LockBasedLazyValue
     176: aastore
     177: goto          196
     180: dup
     181: iconst_1
     182: ldc           #7                  // String recursionDetected
     184: aastore
     185: goto          196
     188: dup
     189: iconst_1
     190: ldc           #8                  // String renderDebugInformation
     192: aastore
     193: goto          196
     196: iload_0
     197: tableswitch   { // 0 to 3
                     0: 228
                     1: 228
                     2: 236
                     3: 236
               default: 228
          }
     228: dup
     229: iconst_2
     230: ldc           #1                  // String <init>
     232: aastore
     233: goto          239
     236: goto          239
     239: invokestatic  #37                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     242: iload_0
     243: tableswitch   { // 0 to 3
                     0: 272
                     1: 272
                     2: 283
                     3: 283
               default: 272
          }
     272: new           #11                 // class java/lang/IllegalArgumentException
     275: dup_x1
     276: swap
     277: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     280: goto          294
     283: new           #12                 // class java/lang/IllegalStateException
     286: dup_x1
     287: swap
     288: invokespecial #35                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     291: goto          294
     294: athrow
}
