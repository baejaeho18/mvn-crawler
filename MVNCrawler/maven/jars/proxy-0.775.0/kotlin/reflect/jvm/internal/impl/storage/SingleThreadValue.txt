Compiled from "SingleThreadValue.java"
class kotlin.reflect.jvm.internal.impl.storage.SingleThreadValue<T> {
  private final T value;

  private final java.lang.Thread thread;

  kotlin.reflect.jvm.internal.impl.storage.SingleThreadValue(T);
    Code:
       0: aload_0
       1: invokespecial #9                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #7                  // Field value:Ljava/lang/Object;
       9: aload_0
      10: invokestatic  #10                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      13: putfield      #6                  // Field thread:Ljava/lang/Thread;
      16: return

  public boolean hasValue();
    Code:
       0: aload_0
       1: getfield      #6                  // Field thread:Ljava/lang/Thread;
       4: invokestatic  #10                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public T getValue();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method hasValue:()Z
       4: ifne          17
       7: new           #2                  // class java/lang/IllegalStateException
      10: dup
      11: ldc           #1                  // String No value in this thread (hasValue should be checked before)
      13: invokespecial #8                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #7                  // Field value:Ljava/lang/Object;
      21: areturn
}
