Compiled from "CacheByClass.kt"
final class kotlin.reflect.jvm.internal.ConcurrentHashMapCache<V> extends kotlin.reflect.jvm.internal.CacheByClass<V> {
  private final kotlin.jvm.functions.Function1<java.lang.Class<?>, V> compute;

  private final java.util.concurrent.ConcurrentHashMap<java.lang.Class<?>, V> cache;

  public kotlin.reflect.jvm.internal.ConcurrentHashMapCache(kotlin.jvm.functions.Function1<? super java.lang.Class<?>, ? extends V>);
    Code:
       0: aload_1
       1: ldc           #5                  // String compute
       3: invokestatic  #19                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokespecial #20                 // Method kotlin/reflect/jvm/internal/CacheByClass."<init>":()V
      10: aload_0
      11: aload_1
      12: putfield      #16                 // Field compute:Lkotlin/jvm/functions/Function1;
      15: aload_0
      16: new           #9                  // class java/util/concurrent/ConcurrentHashMap
      19: dup
      20: invokespecial #17                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      23: putfield      #15                 // Field cache:Ljava/util/concurrent/ConcurrentHashMap;
      26: return

  public V get(java.lang.Class<?>);
    Code:
       0: aload_1
       1: ldc           #6                  // String key
       3: invokestatic  #19                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #15                 // Field cache:Ljava/util/concurrent/ConcurrentHashMap;
      10: checkcast     #10                 // class java/util/concurrent/ConcurrentMap
      13: astore_2
      14: iconst_0
      15: istore_3
      16: aload_2
      17: aload_1
      18: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: dup
      24: ifnonnull     63
      27: pop
      28: iconst_0
      29: istore        4
      31: aload_0
      32: getfield      #16                 // Field compute:Lkotlin/jvm/functions/Function1;
      35: aload_1
      36: invokeinterface #23,  2           // InterfaceMethod kotlin/jvm/functions/Function1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;
      41: astore        5
      43: iconst_0
      44: istore        6
      46: aload_2
      47: aload_1
      48: aload         5
      50: invokeinterface #22,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      55: dup
      56: ifnonnull     62
      59: pop
      60: aload         5
      62: nop
      63: nop
      64: areturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #15                 // Field cache:Ljava/util/concurrent/ConcurrentHashMap;
       4: invokevirtual #18                 // Method java/util/concurrent/ConcurrentHashMap.clear:()V
       7: return
}
