Compiled from "LockBasedStorageManager.java"
final class kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$ExceptionHandlingStrategy$1 implements kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$ExceptionHandlingStrategy {
  kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$ExceptionHandlingStrategy$1();
    Code:
       0: aload_0
       1: invokespecial #14                 // Method java/lang/Object."<init>":()V
       4: return

  public java.lang.RuntimeException handleException(java.lang.Throwable);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: iconst_0
       5: invokestatic  #16                 // Method $$$reportNull$$$0:(I)V
       8: aload_1
       9: invokestatic  #17                 // Method kotlin/reflect/jvm/internal/impl/utils/ExceptionUtilsKt.rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      12: athrow

  private static void $$$reportNull$$$0(int);
    Code:
       0: ldc           #1                  // String Argument for @NotNull parameter \'%s\' of %s.%s must not be null
       2: iconst_3
       3: anewarray     #6                  // class java/lang/Object
       6: dup
       7: iconst_0
       8: ldc           #4                  // String throwable
      10: aastore
      11: dup
      12: iconst_1
      13: ldc           #3                  // String kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$ExceptionHandlingStrategy$1
      15: aastore
      16: dup
      17: iconst_2
      18: ldc           #2                  // String handleException
      20: aastore
      21: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      24: new           #5                  // class java/lang/IllegalArgumentException
      27: dup_x1
      28: swap
      29: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      32: athrow
}
