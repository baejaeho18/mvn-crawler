Compiled from "AbstractTypeChecker.kt"
public final class kotlin.reflect.jvm.internal.impl.types.TypeCheckerState$SupertypesPolicy$None extends kotlin.reflect.jvm.internal.impl.types.TypeCheckerState$SupertypesPolicy {
  public static final kotlin.reflect.jvm.internal.impl.types.TypeCheckerState$SupertypesPolicy$None INSTANCE;

  private kotlin.reflect.jvm.internal.impl.types.TypeCheckerState$SupertypesPolicy$None();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #13                 // Method kotlin/reflect/jvm/internal/impl/types/TypeCheckerState$SupertypesPolicy."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
       5: return

  public java.lang.Void transformType(kotlin.reflect.jvm.internal.impl.types.TypeCheckerState, kotlin.reflect.jvm.internal.impl.types.model.KotlinTypeMarker);
    Code:
       0: aload_1
       1: ldc           #2                  // String state
       3: invokestatic  #12                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #3                  // String type
       9: invokestatic  #12                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: new           #4                  // class java/lang/UnsupportedOperationException
      15: dup
      16: ldc           #1                  // String Should not be called
      18: invokespecial #11                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      21: athrow

  public kotlin.reflect.jvm.internal.impl.types.model.SimpleTypeMarker transformType(kotlin.reflect.jvm.internal.impl.types.TypeCheckerState, kotlin.reflect.jvm.internal.impl.types.model.KotlinTypeMarker);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #15                 // Method transformType:(Lkotlin/reflect/jvm/internal/impl/types/TypeCheckerState;Lkotlin/reflect/jvm/internal/impl/types/model/KotlinTypeMarker;)Ljava/lang/Void;
       6: checkcast     #9                  // class kotlin/reflect/jvm/internal/impl/types/model/SimpleTypeMarker
       9: areturn

  static {};
    Code:
       0: new           #8                  // class kotlin/reflect/jvm/internal/impl/types/TypeCheckerState$SupertypesPolicy$None
       3: dup
       4: invokespecial #14                 // Method "<init>":()V
       7: putstatic     #10                 // Field INSTANCE:Lkotlin/reflect/jvm/internal/impl/types/TypeCheckerState$SupertypesPolicy$None;
      10: return
}
