Compiled from "CallableDescriptor.java"
public interface kotlin.reflect.jvm.internal.impl.descriptors.CallableDescriptor extends kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptorNonRoot, kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptorWithVisibility, kotlin.reflect.jvm.internal.impl.descriptors.Substitutable<kotlin.reflect.jvm.internal.impl.descriptors.CallableDescriptor> {
  public abstract java.util.List<kotlin.reflect.jvm.internal.impl.descriptors.ReceiverParameterDescriptor> getContextReceiverParameters();

  public abstract kotlin.reflect.jvm.internal.impl.descriptors.ReceiverParameterDescriptor getExtensionReceiverParameter();

  public abstract kotlin.reflect.jvm.internal.impl.descriptors.ReceiverParameterDescriptor getDispatchReceiverParameter();

  public abstract java.util.List<kotlin.reflect.jvm.internal.impl.descriptors.TypeParameterDescriptor> getTypeParameters();

  public abstract kotlin.reflect.jvm.internal.impl.types.KotlinType getReturnType();

  public abstract kotlin.reflect.jvm.internal.impl.descriptors.CallableDescriptor getOriginal();

  public abstract java.util.List<kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor> getValueParameters();

  public abstract boolean hasSynthesizedParameterNames();

  public abstract java.util.Collection<? extends kotlin.reflect.jvm.internal.impl.descriptors.CallableDescriptor> getOverriddenDescriptors();

  public abstract <V> V getUserData(kotlin.reflect.jvm.internal.impl.descriptors.CallableDescriptor$UserDataKey<V>);
}
