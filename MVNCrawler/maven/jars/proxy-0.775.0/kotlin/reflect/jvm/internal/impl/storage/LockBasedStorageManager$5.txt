Compiled from "LockBasedStorageManager.java"
class kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$5 extends kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$LockBasedNotNullLazyValueWithPostCompute<T> {
  final kotlin.jvm.functions.Function1 val$onRecursiveCall;

  final kotlin.jvm.functions.Function1 val$postCompute;

  final kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager this$0;

  kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$5(kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager, kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager, kotlin.jvm.functions.Function0, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field this$0:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;
       5: aload_0
       6: aload         4
       8: putfield      #20                 // Field val$onRecursiveCall:Lkotlin/jvm/functions/Function1;
      11: aload_0
      12: aload         5
      14: putfield      #21                 // Field val$postCompute:Lkotlin/jvm/functions/Function1;
      17: aload_0
      18: aload_2
      19: aload_3
      20: invokespecial #27                 // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$LockBasedNotNullLazyValueWithPostCompute."<init>":(Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;Lkotlin/jvm/functions/Function0;)V
      23: return

  protected kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$RecursionDetectedResult<T> recursionDetected(boolean);
    Code:
       0: aload_0
       1: getfield      #20                 // Field val$onRecursiveCall:Lkotlin/jvm/functions/Function1;
       4: ifnonnull     21
       7: aload_0
       8: iload_1
       9: invokespecial #28                 // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$LockBasedNotNullLazyValueWithPostCompute.recursionDetected:(Z)Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$RecursionDetectedResult;
      12: dup
      13: ifnonnull     20
      16: iconst_0
      17: invokestatic  #26                 // Method $$$reportNull$$$0:(I)V
      20: areturn
      21: aload_0
      22: getfield      #20                 // Field val$onRecursiveCall:Lkotlin/jvm/functions/Function1;
      25: iload_1
      26: invokestatic  #22                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      29: invokeinterface #30,  2           // InterfaceMethod kotlin/jvm/functions/Function1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;
      34: invokestatic  #29                 // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$RecursionDetectedResult.value:(Ljava/lang/Object;)Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$RecursionDetectedResult;
      37: dup
      38: ifnonnull     45
      41: iconst_1
      42: invokestatic  #26                 // Method $$$reportNull$$$0:(I)V
      45: areturn

  protected void doPostCompute(T);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: iconst_2
       5: invokestatic  #26                 // Method $$$reportNull$$$0:(I)V
       8: aload_0
       9: getfield      #21                 // Field val$postCompute:Lkotlin/jvm/functions/Function1;
      12: aload_1
      13: invokeinterface #30,  2           // InterfaceMethod kotlin/jvm/functions/Function1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: return

  private static void $$$reportNull$$$0(int);
    Code:
       0: iload_0
       1: tableswitch   { // 0 to 2
                     0: 28
                     1: 28
                     2: 33
               default: 28
          }
      28: ldc           #1                  // String @NotNull method %s.%s must not return null
      30: goto          38
      33: ldc           #2                  // String Argument for @NotNull parameter \'%s\' of %s.%s must not be null
      35: goto          38
      38: iload_0
      39: tableswitch   { // 0 to 2
                     0: 64
                     1: 64
                     2: 68
               default: 64
          }
      64: iconst_2
      65: goto          72
      68: iconst_3
      69: goto          72
      72: anewarray     #11                 // class java/lang/Object
      75: iload_0
      76: tableswitch   { // 0 to 2
                     0: 104
                     1: 104
                     2: 112
               default: 104
          }
     104: dup
     105: iconst_0
     106: ldc           #4                  // String kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$5
     108: aastore
     109: goto          120
     112: dup
     113: iconst_0
     114: ldc           #6                  // String value
     116: aastore
     117: goto          120
     120: iload_0
     121: tableswitch   { // 0 to 2
                     0: 148
                     1: 148
                     2: 156
               default: 148
          }
     148: dup
     149: iconst_1
     150: ldc           #5                  // String recursionDetected
     152: aastore
     153: goto          164
     156: dup
     157: iconst_1
     158: ldc           #4                  // String kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$5
     160: aastore
     161: goto          164
     164: iload_0
     165: tableswitch   { // 0 to 2
                     0: 192
                     1: 192
                     2: 195
               default: 192
          }
     192: goto          203
     195: dup
     196: iconst_2
     197: ldc           #3                  // String doPostCompute
     199: aastore
     200: goto          203
     203: invokestatic  #25                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     206: iload_0
     207: tableswitch   { // 0 to 2
                     0: 232
                     1: 232
                     2: 243
               default: 232
          }
     232: new           #10                 // class java/lang/IllegalStateException
     235: dup_x1
     236: swap
     237: invokespecial #24                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     240: goto          254
     243: new           #9                  // class java/lang/IllegalArgumentException
     246: dup_x1
     247: swap
     248: invokespecial #23                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     251: goto          254
     254: athrow
}
