Compiled from "ArrayMapOwner.kt"
final class kotlin.reflect.jvm.internal.impl.util.TypeRegistry$getId$1 extends kotlin.jvm.internal.Lambda implements kotlin.jvm.functions.Function1<java.lang.String, java.lang.Integer> {
  final kotlin.reflect.jvm.internal.impl.util.TypeRegistry<K, V> this$0;

  kotlin.reflect.jvm.internal.impl.util.TypeRegistry$getId$1(kotlin.reflect.jvm.internal.impl.util.TypeRegistry<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field this$0:Lkotlin/reflect/jvm/internal/impl/util/TypeRegistry;
       5: aload_0
       6: iconst_1
       7: invokespecial #14                 // Method kotlin/jvm/internal/Lambda."<init>":(I)V
      10: return

  public final java.lang.Integer invoke(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #1                  // String it
       3: invokestatic  #13                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #10                 // Field this$0:Lkotlin/reflect/jvm/internal/impl/util/TypeRegistry;
      10: invokestatic  #15                 // Method kotlin/reflect/jvm/internal/impl/util/TypeRegistry.access$getIdCounter$p:(Lkotlin/reflect/jvm/internal/impl/util/TypeRegistry;)Ljava/util/concurrent/atomic/AtomicInteger;
      13: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      16: invokestatic  #11                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      19: areturn

  public java.lang.Object invoke(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #3                  // class java/lang/String
       5: invokevirtual #16                 // Method invoke:(Ljava/lang/String;)Ljava/lang/Integer;
       8: areturn
}
