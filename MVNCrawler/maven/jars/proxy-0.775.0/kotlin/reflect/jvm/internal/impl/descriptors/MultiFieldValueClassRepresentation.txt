Compiled from "MultiFieldValueClassRepresentation.kt"
public final class kotlin.reflect.jvm.internal.impl.descriptors.MultiFieldValueClassRepresentation<Type extends kotlin.reflect.jvm.internal.impl.types.model.SimpleTypeMarker> extends kotlin.reflect.jvm.internal.impl.descriptors.ValueClassRepresentation<Type> {
  private final java.util.List<kotlin.Pair<kotlin.reflect.jvm.internal.impl.name.Name, Type>> underlyingPropertyNamesToTypes;

  private final java.util.Map<kotlin.reflect.jvm.internal.impl.name.Name, Type> map;

  public kotlin.reflect.jvm.internal.impl.descriptors.MultiFieldValueClassRepresentation(java.util.List<? extends kotlin.Pair<kotlin.reflect.jvm.internal.impl.name.Name, ? extends Type>>);
    Code:
       0: aload_1
       1: ldc           #4                  // String underlyingPropertyNamesToTypes
       3: invokestatic  #25                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aconst_null
       8: invokespecial #27                 // Method kotlin/reflect/jvm/internal/impl/descriptors/ValueClassRepresentation."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
      11: aload_0
      12: aload_1
      13: putfield      #16                 // Field underlyingPropertyNamesToTypes:Ljava/util/List;
      16: aload_0
      17: aload_0
      18: invokevirtual #26                 // Method getUnderlyingPropertyNamesToTypes:()Ljava/util/List;
      21: checkcast     #6                  // class java/lang/Iterable
      24: invokestatic  #24                 // Method kotlin/collections/MapsKt.toMap:(Ljava/lang/Iterable;)Ljava/util/Map;
      27: astore_2
      28: aload_2
      29: astore_3
      30: astore        6
      32: iconst_0
      33: istore        4
      35: aload_3
      36: invokeinterface #30,  1           // InterfaceMethod java/util/Map.size:()I
      41: aload_0
      42: invokevirtual #26                 // Method getUnderlyingPropertyNamesToTypes:()Ljava/util/List;
      45: invokeinterface #28,  1           // InterfaceMethod java/util/List.size:()I
      50: if_icmpne     57
      53: iconst_1
      54: goto          58
      57: iconst_0
      58: ifne          81
      61: iconst_0
      62: istore        5
      64: ldc           #2                  // String Some properties have the same names
      66: astore        5
      68: new           #5                  // class java/lang/IllegalArgumentException
      71: dup
      72: aload         5
      74: invokevirtual #18                 // Method java/lang/Object.toString:()Ljava/lang/String;
      77: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      80: athrow
      81: nop
      82: aload         6
      84: aload_2
      85: putfield      #15                 // Field map:Ljava/util/Map;
      88: return

  public java.util.List<kotlin.Pair<kotlin.reflect.jvm.internal.impl.name.Name, Type>> getUnderlyingPropertyNamesToTypes();
    Code:
       0: aload_0
       1: getfield      #16                 // Field underlyingPropertyNamesToTypes:Ljava/util/List;
       4: areturn

  public boolean containsPropertyWithName(kotlin.reflect.jvm.internal.impl.name.Name);
    Code:
       0: aload_1
       1: ldc           #3                  // String name
       3: invokestatic  #25                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #15                 // Field map:Ljava/util/Map;
      10: aload_1
      11: invokeinterface #29,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      16: ireturn

  public java.lang.String toString();
    Code:
       0: new           #8                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #1                  // String MultiFieldValueClassRepresentation(underlyingPropertyNamesToTypes=
       9: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #26                 // Method getUnderlyingPropertyNamesToTypes:()Ljava/util/List;
      16: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: bipush        41
      21: invokevirtual #20                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      24: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn
}
