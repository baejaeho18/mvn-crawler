Compiled from "JavaResolverCache.java"
public interface kotlin.reflect.jvm.internal.impl.load.java.components.JavaResolverCache {
  public static final kotlin.reflect.jvm.internal.impl.load.java.components.JavaResolverCache EMPTY;

  public abstract kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor getClassResolvedFromSource(kotlin.reflect.jvm.internal.impl.name.FqName);

  public abstract void recordMethod(kotlin.reflect.jvm.internal.impl.load.java.structure.JavaMember, kotlin.reflect.jvm.internal.impl.descriptors.SimpleFunctionDescriptor);

  public abstract void recordConstructor(kotlin.reflect.jvm.internal.impl.load.java.structure.JavaElement, kotlin.reflect.jvm.internal.impl.descriptors.ConstructorDescriptor);

  public abstract void recordField(kotlin.reflect.jvm.internal.impl.load.java.structure.JavaField, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor);

  public abstract void recordClass(kotlin.reflect.jvm.internal.impl.load.java.structure.JavaClass, kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor);

  static {};
    Code:
       0: new           #3                  // class kotlin/reflect/jvm/internal/impl/load/java/components/JavaResolverCache$1
       3: dup
       4: invokespecial #5                  // Method kotlin/reflect/jvm/internal/impl/load/java/components/JavaResolverCache$1."<init>":()V
       7: putstatic     #4                  // Field EMPTY:Lkotlin/reflect/jvm/internal/impl/load/java/components/JavaResolverCache;
      10: return
}
