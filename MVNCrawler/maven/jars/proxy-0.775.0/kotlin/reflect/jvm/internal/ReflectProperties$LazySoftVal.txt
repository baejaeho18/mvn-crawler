Compiled from "ReflectProperties.java"
public class kotlin.reflect.jvm.internal.ReflectProperties$LazySoftVal<T> extends kotlin.reflect.jvm.internal.ReflectProperties$Val<T> implements kotlin.jvm.functions.Function0<T> {
  private final kotlin.jvm.functions.Function0<T> initializer;

  private volatile java.lang.ref.SoftReference<java.lang.Object> value;

  public kotlin.reflect.jvm.internal.ReflectProperties$LazySoftVal(T, kotlin.jvm.functions.Function0<T>);
    Code:
       0: aload_2
       1: ifnonnull     8
       4: iconst_0
       5: invokestatic  #19                 // Method $$$reportNull$$$0:(I)V
       8: aload_0
       9: invokespecial #22                 // Method kotlin/reflect/jvm/internal/ReflectProperties$Val."<init>":()V
      12: aload_0
      13: aconst_null
      14: putfield      #14                 // Field value:Ljava/lang/ref/SoftReference;
      17: aload_0
      18: aload_2
      19: putfield      #13                 // Field initializer:Lkotlin/jvm/functions/Function0;
      22: aload_1
      23: ifnull        42
      26: aload_0
      27: new           #8                  // class java/lang/ref/SoftReference
      30: dup
      31: aload_0
      32: aload_1
      33: invokevirtual #20                 // Method escape:(Ljava/lang/Object;)Ljava/lang/Object;
      36: invokespecial #17                 // Method java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;)V
      39: putfield      #14                 // Field value:Ljava/lang/ref/SoftReference;
      42: return

  public T invoke();
    Code:
       0: aload_0
       1: getfield      #14                 // Field value:Ljava/lang/ref/SoftReference;
       4: astore_1
       5: aload_1
       6: ifnull        24
       9: aload_1
      10: invokevirtual #18                 // Method java/lang/ref/SoftReference.get:()Ljava/lang/Object;
      13: astore_2
      14: aload_2
      15: ifnull        24
      18: aload_0
      19: aload_2
      20: invokevirtual #21                 // Method unescape:(Ljava/lang/Object;)Ljava/lang/Object;
      23: areturn
      24: aload_0
      25: getfield      #13                 // Field initializer:Lkotlin/jvm/functions/Function0;
      28: invokeinterface #23,  1           // InterfaceMethod kotlin/jvm/functions/Function0.invoke:()Ljava/lang/Object;
      33: astore_2
      34: aload_0
      35: new           #8                  // class java/lang/ref/SoftReference
      38: dup
      39: aload_0
      40: aload_2
      41: invokevirtual #20                 // Method escape:(Ljava/lang/Object;)Ljava/lang/Object;
      44: invokespecial #17                 // Method java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;)V
      47: putfield      #14                 // Field value:Ljava/lang/ref/SoftReference;
      50: aload_2
      51: areturn

  private static void $$$reportNull$$$0(int);
    Code:
       0: ldc           #2                  // String Argument for @NotNull parameter \'%s\' of %s.%s must not be null
       2: iconst_3
       3: anewarray     #6                  // class java/lang/Object
       6: dup
       7: iconst_0
       8: ldc           #3                  // String initializer
      10: aastore
      11: dup
      12: iconst_1
      13: ldc           #4                  // String kotlin/reflect/jvm/internal/ReflectProperties$LazySoftVal
      15: aastore
      16: dup
      17: iconst_2
      18: ldc           #1                  // String <init>
      20: aastore
      21: invokestatic  #16                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      24: new           #5                  // class java/lang/IllegalArgumentException
      27: dup_x1
      28: swap
      29: invokespecial #15                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      32: athrow
}
