Compiled from "LockBasedStorageManager.java"
class kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$MapBasedMemoizedFunction<K, V> implements kotlin.reflect.jvm.internal.impl.storage.MemoizedFunctionToNullable<K, V> {
  private final kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager storageManager;

  private final java.util.concurrent.ConcurrentMap<K, java.lang.Object> cache;

  private final kotlin.jvm.functions.Function1<? super K, ? extends V> compute;

  public kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$MapBasedMemoizedFunction(kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager, java.util.concurrent.ConcurrentMap<K, java.lang.Object>, kotlin.jvm.functions.Function1<? super K, ? extends V>);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: iconst_0
       5: invokestatic  #52                 // Method $$$reportNull$$$0:(I)V
       8: aload_2
       9: ifnonnull     16
      12: iconst_1
      13: invokestatic  #52                 // Method $$$reportNull$$$0:(I)V
      16: aload_3
      17: ifnonnull     24
      20: iconst_2
      21: invokestatic  #52                 // Method $$$reportNull$$$0:(I)V
      24: aload_0
      25: invokespecial #43                 // Method java/lang/Object."<init>":()V
      28: aload_0
      29: aload_1
      30: putfield      #37                 // Field storageManager:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;
      33: aload_0
      34: aload_2
      35: putfield      #35                 // Field cache:Ljava/util/concurrent/ConcurrentMap;
      38: aload_0
      39: aload_3
      40: putfield      #36                 // Field compute:Lkotlin/jvm/functions/Function1;
      43: return

  public V invoke(K);
    Code:
       0: aload_0
       1: getfield      #35                 // Field cache:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #61,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: astore_2
      11: aload_2
      12: ifnull        27
      15: aload_2
      16: getstatic     #38                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue.COMPUTING:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue;
      19: if_acmpeq     27
      22: aload_2
      23: invokestatic  #60                 // Method kotlin/reflect/jvm/internal/impl/utils/WrappedValues.unescapeExceptionOrNull:(Ljava/lang/Object;)Ljava/lang/Object;
      26: areturn
      27: aload_0
      28: getfield      #37                 // Field storageManager:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;
      31: getfield      #34                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager.lock:Lkotlin/reflect/jvm/internal/impl/storage/SimpleLock;
      34: invokeinterface #66,  1           // InterfaceMethod kotlin/reflect/jvm/internal/impl/storage/SimpleLock.lock:()V
      39: aload_0
      40: getfield      #35                 // Field cache:Ljava/util/concurrent/ConcurrentMap;
      43: aload_1
      44: invokeinterface #61,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      49: astore_2
      50: aload_2
      51: getstatic     #38                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue.COMPUTING:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue;
      54: if_acmpne     96
      57: getstatic     #39                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue.RECURSION_WAS_DETECTED:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue;
      60: astore_2
      61: aload_0
      62: aload_1
      63: iconst_1
      64: invokevirtual #54                 // Method recursionDetected:(Ljava/lang/Object;Z)Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$RecursionDetectedResult;
      67: astore_3
      68: aload_3
      69: invokevirtual #56                 // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$RecursionDetectedResult.isFallThrough:()Z
      72: ifne          96
      75: aload_3
      76: invokevirtual #55                 // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$RecursionDetectedResult.getValue:()Ljava/lang/Object;
      79: astore        4
      81: aload_0
      82: getfield      #37                 // Field storageManager:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;
      85: getfield      #34                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager.lock:Lkotlin/reflect/jvm/internal/impl/storage/SimpleLock;
      88: invokeinterface #67,  1           // InterfaceMethod kotlin/reflect/jvm/internal/impl/storage/SimpleLock.unlock:()V
      93: aload         4
      95: areturn
      96: aload_2
      97: getstatic     #39                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue.RECURSION_WAS_DETECTED:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue;
     100: if_acmpne     138
     103: aload_0
     104: aload_1
     105: iconst_0
     106: invokevirtual #54                 // Method recursionDetected:(Ljava/lang/Object;Z)Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$RecursionDetectedResult;
     109: astore_3
     110: aload_3
     111: invokevirtual #56                 // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$RecursionDetectedResult.isFallThrough:()Z
     114: ifne          138
     117: aload_3
     118: invokevirtual #55                 // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$RecursionDetectedResult.getValue:()Ljava/lang/Object;
     121: astore        4
     123: aload_0
     124: getfield      #37                 // Field storageManager:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;
     127: getfield      #34                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager.lock:Lkotlin/reflect/jvm/internal/impl/storage/SimpleLock;
     130: invokeinterface #67,  1           // InterfaceMethod kotlin/reflect/jvm/internal/impl/storage/SimpleLock.unlock:()V
     135: aload         4
     137: areturn
     138: aload_2
     139: ifnull        161
     142: aload_2
     143: invokestatic  #60                 // Method kotlin/reflect/jvm/internal/impl/utils/WrappedValues.unescapeExceptionOrNull:(Ljava/lang/Object;)Ljava/lang/Object;
     146: astore_3
     147: aload_0
     148: getfield      #37                 // Field storageManager:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;
     151: getfield      #34                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager.lock:Lkotlin/reflect/jvm/internal/impl/storage/SimpleLock;
     154: invokeinterface #67,  1           // InterfaceMethod kotlin/reflect/jvm/internal/impl/storage/SimpleLock.unlock:()V
     159: aload_3
     160: areturn
     161: aconst_null
     162: astore_3
     163: aload_0
     164: getfield      #35                 // Field cache:Ljava/util/concurrent/ConcurrentMap;
     167: aload_1
     168: getstatic     #38                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue.COMPUTING:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue;
     171: invokeinterface #62,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     176: pop
     177: aload_0
     178: getfield      #36                 // Field compute:Lkotlin/jvm/functions/Function1;
     181: aload_1
     182: invokeinterface #64,  2           // InterfaceMethod kotlin/jvm/functions/Function1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;
     187: astore        4
     189: aload_0
     190: getfield      #35                 // Field cache:Ljava/util/concurrent/ConcurrentMap;
     193: aload_1
     194: aload         4
     196: invokestatic  #58                 // Method kotlin/reflect/jvm/internal/impl/utils/WrappedValues.escapeNull:(Ljava/lang/Object;)Ljava/lang/Object;
     199: invokeinterface #62,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     204: astore        5
     206: aload         5
     208: getstatic     #38                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue.COMPUTING:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue;
     211: if_acmpeq     224
     214: aload_0
     215: aload_1
     216: aload         5
     218: invokespecial #53                 // Method raceCondition:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/AssertionError;
     221: astore_3
     222: aload_3
     223: athrow
     224: aload         4
     226: astore        6
     228: aload_0
     229: getfield      #37                 // Field storageManager:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;
     232: getfield      #34                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager.lock:Lkotlin/reflect/jvm/internal/impl/storage/SimpleLock;
     235: invokeinterface #67,  1           // InterfaceMethod kotlin/reflect/jvm/internal/impl/storage/SimpleLock.unlock:()V
     240: aload         6
     242: areturn
     243: astore        4
     245: aload         4
     247: invokestatic  #57                 // Method kotlin/reflect/jvm/internal/impl/utils/ExceptionUtilsKt.isProcessCanceledException:(Ljava/lang/Throwable;)Z
     250: ifeq          270
     253: aload_0
     254: getfield      #35                 // Field cache:Ljava/util/concurrent/ConcurrentMap;
     257: aload_1
     258: invokeinterface #63,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     263: pop
     264: aload         4
     266: checkcast     #19                 // class java/lang/RuntimeException
     269: athrow
     270: aload         4
     272: aload_3
     273: if_acmpne     291
     276: aload_0
     277: getfield      #37                 // Field storageManager:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;
     280: invokestatic  #49                 // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager.access$100:(Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;)Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$ExceptionHandlingStrategy;
     283: aload         4
     285: invokeinterface #65,  2           // InterfaceMethod kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$ExceptionHandlingStrategy.handleException:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
     290: athrow
     291: aload_0
     292: getfield      #35                 // Field cache:Ljava/util/concurrent/ConcurrentMap;
     295: aload_1
     296: aload         4
     298: invokestatic  #59                 // Method kotlin/reflect/jvm/internal/impl/utils/WrappedValues.escapeThrowable:(Ljava/lang/Throwable;)Ljava/lang/Object;
     301: invokeinterface #62,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     306: astore        5
     308: aload         5
     310: getstatic     #38                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue.COMPUTING:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue;
     313: if_acmpeq     324
     316: aload_0
     317: aload_1
     318: aload         5
     320: invokespecial #53                 // Method raceCondition:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/AssertionError;
     323: athrow
     324: aload_0
     325: getfield      #37                 // Field storageManager:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;
     328: invokestatic  #49                 // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager.access$100:(Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;)Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$ExceptionHandlingStrategy;
     331: aload         4
     333: invokeinterface #65,  2           // InterfaceMethod kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$ExceptionHandlingStrategy.handleException:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
     338: athrow
     339: astore        7
     341: aload_0
     342: getfield      #37                 // Field storageManager:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;
     345: getfield      #34                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager.lock:Lkotlin/reflect/jvm/internal/impl/storage/SimpleLock;
     348: invokeinterface #67,  1           // InterfaceMethod kotlin/reflect/jvm/internal/impl/storage/SimpleLock.unlock:()V
     353: aload         7
     355: athrow
    Exception table:
       from    to  target type
         163   228   243   Class java/lang/Throwable
          39    81   339   any
          96   123   339   any
         138   147   339   any
         161   228   339   any
         243   341   339   any

  protected kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$RecursionDetectedResult<V> recursionDetected(K, boolean);
    Code:
       0: aload_0
       1: getfield      #37                 // Field storageManager:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;
       4: ldc           #1                  // String
       6: aload_1
       7: invokevirtual #51                 // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager.recursionDetectedDefault:(Ljava/lang/String;Ljava/lang/Object;)Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$RecursionDetectedResult;
      10: dup
      11: ifnonnull     18
      14: iconst_3
      15: invokestatic  #52                 // Method $$$reportNull$$$0:(I)V
      18: areturn

  private java.lang.AssertionError raceCondition(K, java.lang.Object);
    Code:
       0: new           #15                 // class java/lang/AssertionError
       3: dup
       4: new           #21                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #7                  // String Race condition detected on input
      13: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_1
      17: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      20: ldc           #3                  // String . Old value is
      22: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_2
      26: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      29: ldc           #2                  // String  under
      31: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_0
      35: getfield      #37                 // Field storageManager:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;
      38: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      41: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokespecial #40                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      47: invokestatic  #50                 // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager.access$200:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      50: checkcast     #15                 // class java/lang/AssertionError
      53: dup
      54: ifnonnull     61
      57: iconst_4
      58: invokestatic  #52                 // Method $$$reportNull$$$0:(I)V
      61: areturn

  public boolean isComputed(K);
    Code:
       0: aload_0
       1: getfield      #35                 // Field cache:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #61,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: astore_2
      11: aload_2
      12: ifnull        26
      15: aload_2
      16: getstatic     #38                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue.COMPUTING:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue;
      19: if_acmpeq     26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  protected kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager getStorageManager();
    Code:
       0: aload_0
       1: getfield      #37                 // Field storageManager:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;
       4: areturn

  private static void $$$reportNull$$$0(int);
    Code:
       0: iload_0
       1: tableswitch   { // 0 to 4
                     0: 36
                     1: 36
                     2: 36
                     3: 41
                     4: 41
               default: 36
          }
      36: ldc           #6                  // String Argument for @NotNull parameter \'%s\' of %s.%s must not be null
      38: goto          46
      41: ldc           #5                  // String @NotNull method %s.%s must not return null
      43: goto          46
      46: iload_0
      47: tableswitch   { // 0 to 4
                     0: 80
                     1: 80
                     2: 80
                     3: 84
                     4: 84
               default: 80
          }
      80: iconst_3
      81: goto          88
      84: iconst_2
      85: goto          88
      88: anewarray     #18                 // class java/lang/Object
      91: iload_0
      92: tableswitch   { // 0 to 4
                     0: 128
                     1: 136
                     2: 144
                     3: 152
                     4: 152
               default: 128
          }
     128: dup
     129: iconst_0
     130: ldc           #13                 // String storageManager
     132: aastore
     133: goto          160
     136: dup
     137: iconst_0
     138: ldc           #10                 // String map
     140: aastore
     141: goto          160
     144: dup
     145: iconst_0
     146: ldc           #8                  // String compute
     148: aastore
     149: goto          160
     152: dup
     153: iconst_0
     154: ldc           #9                  // String kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$MapBasedMemoizedFunction
     156: aastore
     157: goto          160
     160: iload_0
     161: tableswitch   { // 0 to 4
                     0: 196
                     1: 196
                     2: 196
                     3: 204
                     4: 212
               default: 196
          }
     196: dup
     197: iconst_1
     198: ldc           #9                  // String kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$MapBasedMemoizedFunction
     200: aastore
     201: goto          220
     204: dup
     205: iconst_1
     206: ldc           #12                 // String recursionDetected
     208: aastore
     209: goto          220
     212: dup
     213: iconst_1
     214: ldc           #11                 // String raceCondition
     216: aastore
     217: goto          220
     220: iload_0
     221: tableswitch   { // 0 to 4
                     0: 256
                     1: 256
                     2: 256
                     3: 264
                     4: 264
               default: 256
          }
     256: dup
     257: iconst_2
     258: ldc           #4                  // String <init>
     260: aastore
     261: goto          267
     264: goto          267
     267: invokestatic  #44                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     270: iload_0
     271: tableswitch   { // 0 to 4
                     0: 304
                     1: 304
                     2: 304
                     3: 315
                     4: 315
               default: 304
          }
     304: new           #16                 // class java/lang/IllegalArgumentException
     307: dup_x1
     308: swap
     309: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     312: goto          326
     315: new           #17                 // class java/lang/IllegalStateException
     318: dup_x1
     319: swap
     320: invokespecial #42                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     323: goto          326
     326: athrow
}
