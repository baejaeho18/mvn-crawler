Compiled from "AbstractTypeChecker.kt"
public final class kotlin.reflect.jvm.internal.impl.types.TypeCheckerState$SupertypesPolicy$UpperIfFlexible extends kotlin.reflect.jvm.internal.impl.types.TypeCheckerState$SupertypesPolicy {
  public static final kotlin.reflect.jvm.internal.impl.types.TypeCheckerState$SupertypesPolicy$UpperIfFlexible INSTANCE;

  private kotlin.reflect.jvm.internal.impl.types.TypeCheckerState$SupertypesPolicy$UpperIfFlexible();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #11                 // Method kotlin/reflect/jvm/internal/impl/types/TypeCheckerState$SupertypesPolicy."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
       5: return

  public kotlin.reflect.jvm.internal.impl.types.model.SimpleTypeMarker transformType(kotlin.reflect.jvm.internal.impl.types.TypeCheckerState, kotlin.reflect.jvm.internal.impl.types.model.KotlinTypeMarker);
    Code:
       0: aload_1
       1: ldc           #1                  // String state
       3: invokestatic  #9                  // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #2                  // String type
       9: invokestatic  #9                  // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_1
      13: invokevirtual #10                 // Method kotlin/reflect/jvm/internal/impl/types/TypeCheckerState.getTypeSystemContext:()Lkotlin/reflect/jvm/internal/impl/types/model/TypeSystemContext;
      16: astore_3
      17: iconst_0
      18: istore        4
      20: aload_3
      21: aload_2
      22: invokeinterface #13,  2           // InterfaceMethod kotlin/reflect/jvm/internal/impl/types/model/TypeSystemContext.upperBoundIfFlexible:(Lkotlin/reflect/jvm/internal/impl/types/model/KotlinTypeMarker;)Lkotlin/reflect/jvm/internal/impl/types/model/SimpleTypeMarker;
      27: nop
      28: areturn

  static {};
    Code:
       0: new           #6                  // class kotlin/reflect/jvm/internal/impl/types/TypeCheckerState$SupertypesPolicy$UpperIfFlexible
       3: dup
       4: invokespecial #12                 // Method "<init>":()V
       7: putstatic     #8                  // Field INSTANCE:Lkotlin/reflect/jvm/internal/impl/types/TypeCheckerState$SupertypesPolicy$UpperIfFlexible;
      10: return
}
