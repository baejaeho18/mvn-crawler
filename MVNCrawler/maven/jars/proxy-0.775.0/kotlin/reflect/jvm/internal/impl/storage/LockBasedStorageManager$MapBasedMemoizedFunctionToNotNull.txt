Compiled from "LockBasedStorageManager.java"
class kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$MapBasedMemoizedFunctionToNotNull<K, V> extends kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$MapBasedMemoizedFunction<K, V> implements kotlin.reflect.jvm.internal.impl.storage.MemoizedFunctionToNotNull<K, V> {
  static final boolean $assertionsDisabled;

  public kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$MapBasedMemoizedFunctionToNotNull(kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager, java.util.concurrent.ConcurrentMap<K, java.lang.Object>, kotlin.jvm.functions.Function1<? super K, ? extends V>);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: iconst_0
       5: invokestatic  #37                 // Method $$$reportNull$$$0:(I)V
       8: aload_2
       9: ifnonnull     16
      12: iconst_1
      13: invokestatic  #37                 // Method $$$reportNull$$$0:(I)V
      16: aload_3
      17: ifnonnull     24
      20: iconst_2
      21: invokestatic  #37                 // Method $$$reportNull$$$0:(I)V
      24: aload_0
      25: aload_1
      26: aload_2
      27: aload_3
      28: invokespecial #35                 // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$MapBasedMemoizedFunction."<init>":(Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;Ljava/util/concurrent/ConcurrentMap;Lkotlin/jvm/functions/Function1;)V
      31: return

  public V invoke(K);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #36                 // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$MapBasedMemoizedFunction.invoke:(Ljava/lang/Object;)Ljava/lang/Object;
       5: astore_2
       6: getstatic     #25                 // Field $assertionsDisabled:Z
       9: ifne          46
      12: aload_2
      13: ifnonnull     46
      16: new           #11                 // class java/lang/AssertionError
      19: dup
      20: new           #18                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      27: ldc           #5                  // String compute() returned null under
      29: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_0
      33: invokevirtual #38                 // Method getStorageManager:()Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;
      36: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      39: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokespecial #26                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      45: athrow
      46: aload_2
      47: dup
      48: ifnonnull     55
      51: iconst_3
      52: invokestatic  #37                 // Method $$$reportNull$$$0:(I)V
      55: areturn

  static {};
    Code:
       0: ldc           #21                 // class kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager
       2: invokevirtual #27                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #25                 // Field $assertionsDisabled:Z
      16: return

  private static void $$$reportNull$$$0(int);
    Code:
       0: iload_0
       1: tableswitch   { // 0 to 3
                     0: 32
                     1: 32
                     2: 32
                     3: 37
               default: 32
          }
      32: ldc           #3                  // String Argument for @NotNull parameter \'%s\' of %s.%s must not be null
      34: goto          42
      37: ldc           #2                  // String @NotNull method %s.%s must not return null
      39: goto          42
      42: iload_0
      43: tableswitch   { // 0 to 3
                     0: 72
                     1: 72
                     2: 72
                     3: 76
               default: 72
          }
      72: iconst_3
      73: goto          80
      76: iconst_2
      77: goto          80
      80: anewarray     #15                 // class java/lang/Object
      83: iload_0
      84: tableswitch   { // 0 to 3
                     0: 116
                     1: 124
                     2: 132
                     3: 140
               default: 116
          }
     116: dup
     117: iconst_0
     118: ldc           #9                  // String storageManager
     120: aastore
     121: goto          148
     124: dup
     125: iconst_0
     126: ldc           #8                  // String map
     128: aastore
     129: goto          148
     132: dup
     133: iconst_0
     134: ldc           #4                  // String compute
     136: aastore
     137: goto          148
     140: dup
     141: iconst_0
     142: ldc           #7                  // String kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$MapBasedMemoizedFunctionToNotNull
     144: aastore
     145: goto          148
     148: iload_0
     149: tableswitch   { // 0 to 3
                     0: 180
                     1: 180
                     2: 180
                     3: 188
               default: 180
          }
     180: dup
     181: iconst_1
     182: ldc           #7                  // String kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$MapBasedMemoizedFunctionToNotNull
     184: aastore
     185: goto          196
     188: dup
     189: iconst_1
     190: ldc           #6                  // String invoke
     192: aastore
     193: goto          196
     196: iload_0
     197: tableswitch   { // 0 to 3
                     0: 228
                     1: 228
                     2: 228
                     3: 236
               default: 228
          }
     228: dup
     229: iconst_2
     230: ldc           #1                  // String <init>
     232: aastore
     233: goto          239
     236: goto          239
     239: invokestatic  #30                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     242: iload_0
     243: tableswitch   { // 0 to 3
                     0: 272
                     1: 272
                     2: 272
                     3: 283
               default: 272
          }
     272: new           #13                 // class java/lang/IllegalArgumentException
     275: dup_x1
     276: swap
     277: invokespecial #28                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     280: goto          294
     283: new           #14                 // class java/lang/IllegalStateException
     286: dup_x1
     287: swap
     288: invokespecial #29                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     291: goto          294
     294: athrow
}
