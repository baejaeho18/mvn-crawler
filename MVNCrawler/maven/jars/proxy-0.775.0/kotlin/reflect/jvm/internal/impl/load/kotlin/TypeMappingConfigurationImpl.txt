Compiled from "methodSignatureMapping.kt"
public final class kotlin.reflect.jvm.internal.impl.load.kotlin.TypeMappingConfigurationImpl implements kotlin.reflect.jvm.internal.impl.load.kotlin.TypeMappingConfiguration<kotlin.reflect.jvm.internal.impl.load.kotlin.JvmType> {
  public static final kotlin.reflect.jvm.internal.impl.load.kotlin.TypeMappingConfigurationImpl INSTANCE;

  private kotlin.reflect.jvm.internal.impl.load.kotlin.TypeMappingConfigurationImpl();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method java/lang/Object."<init>":()V
       4: return

  public kotlin.reflect.jvm.internal.impl.types.KotlinType commonSupertype(java.util.Collection<? extends kotlin.reflect.jvm.internal.impl.types.KotlinType>);
    Code:
       0: aload_1
       1: ldc           #5                  // String types
       3: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: new           #6                  // class java/lang/AssertionError
       9: dup
      10: new           #9                  // class java/lang/StringBuilder
      13: dup
      14: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #1                  // String There should be no intersection type in existing descriptors, but found:
      19: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_1
      23: checkcast     #7                  // class java/lang/Iterable
      26: aconst_null
      27: aconst_null
      28: aconst_null
      29: iconst_0
      30: aconst_null
      31: aconst_null
      32: bipush        63
      34: aconst_null
      35: invokestatic  #20                 // Method kotlin/collections/CollectionsKt.joinToString$default:(Ljava/lang/Iterable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/String;
      38: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokespecial #15                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      47: athrow

  public kotlin.reflect.jvm.internal.impl.load.kotlin.JvmType getPredefinedTypeForClass(kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor);
    Code:
       0: aload_1
       1: ldc           #2                  // String classDescriptor
       3: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aconst_null
       7: areturn

  public java.lang.String getPredefinedInternalNameForClass(kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor);
    Code:
       0: aload_1
       1: ldc           #2                  // String classDescriptor
       3: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aconst_null
       7: areturn

  public void processErrorType(kotlin.reflect.jvm.internal.impl.types.KotlinType, kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor);
    Code:
       0: aload_1
       1: ldc           #4                  // String kotlinType
       3: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #3                  // String descriptor
       9: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: return

  public java.lang.Object getPredefinedTypeForClass(kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #23                 // Method getPredefinedTypeForClass:(Lkotlin/reflect/jvm/internal/impl/descriptors/ClassDescriptor;)Lkotlin/reflect/jvm/internal/impl/load/kotlin/JvmType;
       5: areturn

  static {};
    Code:
       0: new           #13                 // class kotlin/reflect/jvm/internal/impl/load/kotlin/TypeMappingConfigurationImpl
       3: dup
       4: invokespecial #22                 // Method "<init>":()V
       7: putstatic     #14                 // Field INSTANCE:Lkotlin/reflect/jvm/internal/impl/load/kotlin/TypeMappingConfigurationImpl;
      10: return

  public java.lang.String getPredefinedFullInternalNameForClass(kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor);
    Code:
       0: aload_1
       1: ldc           #2                  // String classDescriptor
       3: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aconst_null
       7: areturn

  public kotlin.reflect.jvm.internal.impl.types.KotlinType preprocessType(kotlin.reflect.jvm.internal.impl.types.KotlinType);
    Code:
       0: aload_1
       1: ldc           #4                  // String kotlinType
       3: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aconst_null
       7: areturn
}
