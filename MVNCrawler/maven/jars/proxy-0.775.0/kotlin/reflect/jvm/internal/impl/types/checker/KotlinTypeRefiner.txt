Compiled from "KotlinTypeRefiner.kt"
public abstract class kotlin.reflect.jvm.internal.impl.types.checker.KotlinTypeRefiner extends kotlin.reflect.jvm.internal.impl.types.AbstractTypeRefiner {
  public kotlin.reflect.jvm.internal.impl.types.checker.KotlinTypeRefiner();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method kotlin/reflect/jvm/internal/impl/types/AbstractTypeRefiner."<init>":()V
       4: return

  public abstract kotlin.reflect.jvm.internal.impl.types.KotlinType refineType(kotlin.reflect.jvm.internal.impl.types.model.KotlinTypeMarker);

  public abstract java.util.Collection<kotlin.reflect.jvm.internal.impl.types.KotlinType> refineSupertypes(kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor);

  public abstract kotlin.reflect.jvm.internal.impl.descriptors.ClassifierDescriptor refineDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor);

  public abstract kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor findClassAcrossModuleDependencies(kotlin.reflect.jvm.internal.impl.name.ClassId);

  public abstract boolean isRefinementNeededForModule(kotlin.reflect.jvm.internal.impl.descriptors.ModuleDescriptor);

  public abstract boolean isRefinementNeededForTypeConstructor(kotlin.reflect.jvm.internal.impl.types.TypeConstructor);

  public abstract <S extends kotlin.reflect.jvm.internal.impl.resolve.scopes.MemberScope> S getOrPutScopeForClass(kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor, kotlin.jvm.functions.Function0<? extends S>);
}
