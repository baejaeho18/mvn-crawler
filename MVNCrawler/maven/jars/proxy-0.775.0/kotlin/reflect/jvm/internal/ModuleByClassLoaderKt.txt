Compiled from "moduleByClassLoader.kt"
public final class kotlin.reflect.jvm.internal.ModuleByClassLoaderKt {
  private static final java.util.concurrent.ConcurrentMap<kotlin.reflect.jvm.internal.WeakClassLoaderBox, java.lang.ref.WeakReference<kotlin.reflect.jvm.internal.impl.descriptors.runtime.components.RuntimeModuleData>> moduleByClassLoader;

  public static final kotlin.reflect.jvm.internal.impl.descriptors.runtime.components.RuntimeModuleData getOrCreateModule(java.lang.Class<?>);
    Code:
       0: aload_0
       1: ldc           #6                  // String <this>
       3: invokestatic  #25                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokestatic  #29                 // Method kotlin/reflect/jvm/internal/impl/descriptors/runtime/structure/ReflectClassUtilKt.getSafeClassLoader:(Ljava/lang/Class;)Ljava/lang/ClassLoader;
      10: astore_1
      11: new           #16                 // class kotlin/reflect/jvm/internal/WeakClassLoaderBox
      14: dup
      15: aload_1
      16: invokespecial #26                 // Method kotlin/reflect/jvm/internal/WeakClassLoaderBox."<init>":(Ljava/lang/ClassLoader;)V
      19: astore_2
      20: getstatic     #20                 // Field moduleByClassLoader:Ljava/util/concurrent/ConcurrentMap;
      23: aload_2
      24: invokeinterface #31,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #11                 // class java/lang/ref/WeakReference
      32: astore_3
      33: aload_3
      34: ifnull        68
      37: aload_3
      38: invokevirtual #23                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      41: checkcast     #17                 // class kotlin/reflect/jvm/internal/impl/descriptors/runtime/components/RuntimeModuleData
      44: dup
      45: ifnull        56
      48: astore        6
      50: iconst_0
      51: istore        7
      53: aload         6
      55: areturn
      56: pop
      57: getstatic     #20                 // Field moduleByClassLoader:Ljava/util/concurrent/ConcurrentMap;
      60: aload_2
      61: aload_3
      62: invokeinterface #33,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      67: pop
      68: getstatic     #21                 // Field kotlin/reflect/jvm/internal/impl/descriptors/runtime/components/RuntimeModuleData.Companion:Lkotlin/reflect/jvm/internal/impl/descriptors/runtime/components/RuntimeModuleData$Companion;
      71: aload_1
      72: invokevirtual #28                 // Method kotlin/reflect/jvm/internal/impl/descriptors/runtime/components/RuntimeModuleData$Companion.create:(Ljava/lang/ClassLoader;)Lkotlin/reflect/jvm/internal/impl/descriptors/runtime/components/RuntimeModuleData;
      75: astore        4
      77: nop
      78: nop
      79: getstatic     #20                 // Field moduleByClassLoader:Ljava/util/concurrent/ConcurrentMap;
      82: aload_2
      83: new           #11                 // class java/lang/ref/WeakReference
      86: dup
      87: aload         4
      89: invokespecial #22                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
      92: invokeinterface #32,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      97: checkcast     #11                 // class java/lang/ref/WeakReference
     100: dup
     101: ifnonnull     117
     104: pop
     105: aload         4
     107: astore        8
     109: aload_2
     110: aconst_null
     111: invokevirtual #27                 // Method kotlin/reflect/jvm/internal/WeakClassLoaderBox.setTemporaryStrongRef:(Ljava/lang/ClassLoader;)V
     114: aload         8
     116: areturn
     117: astore        5
     119: aload         5
     121: invokevirtual #23                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
     124: checkcast     #17                 // class kotlin/reflect/jvm/internal/impl/descriptors/runtime/components/RuntimeModuleData
     127: astore        6
     129: aload         6
     131: ifnull        146
     134: aload         6
     136: astore        7
     138: aload_2
     139: aconst_null
     140: invokevirtual #27                 // Method kotlin/reflect/jvm/internal/WeakClassLoaderBox.setTemporaryStrongRef:(Ljava/lang/ClassLoader;)V
     143: aload         7
     145: areturn
     146: getstatic     #20                 // Field moduleByClassLoader:Ljava/util/concurrent/ConcurrentMap;
     149: aload_2
     150: aload         5
     152: invokeinterface #33,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
     157: pop
     158: goto          78
     161: astore        5
     163: aload_2
     164: aconst_null
     165: invokevirtual #27                 // Method kotlin/reflect/jvm/internal/WeakClassLoaderBox.setTemporaryStrongRef:(Ljava/lang/ClassLoader;)V
     168: aload         5
     170: athrow
    Exception table:
       from    to  target type
          77   109   161   any
         117   138   161   any
         146   161   161   any
         161   163   161   any

  public static final void clearModuleByClassLoaderCache();
    Code:
       0: getstatic     #20                 // Field moduleByClassLoader:Ljava/util/concurrent/ConcurrentMap;
       3: invokeinterface #30,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
       8: return

  static {};
    Code:
       0: new           #12                 // class java/util/concurrent/ConcurrentHashMap
       3: dup
       4: invokespecial #24                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
       7: checkcast     #13                 // class java/util/concurrent/ConcurrentMap
      10: putstatic     #20                 // Field moduleByClassLoader:Ljava/util/concurrent/ConcurrentMap;
      13: return
}
