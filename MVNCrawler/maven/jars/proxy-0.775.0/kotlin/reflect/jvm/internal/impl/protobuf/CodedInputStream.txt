Compiled from "CodedInputStream.java"
public final class kotlin.reflect.jvm.internal.impl.protobuf.CodedInputStream {
  private final byte[] buffer;

  private final boolean bufferIsImmutable;

  private int bufferSize;

  private int bufferSizeAfterLimit;

  private int bufferPos;

  private final java.io.InputStream input;

  private int lastTag;

  private boolean enableAliasing;

  private int totalBytesRetired;

  private int currentLimit;

  private int recursionDepth;

  private int recursionLimit;

  private int sizeLimit;

  private kotlin.reflect.jvm.internal.impl.protobuf.CodedInputStream$RefillCallback refillCallback;

  public static kotlin.reflect.jvm.internal.impl.protobuf.CodedInputStream newInstance(java.io.InputStream);
    Code:
       0: new           #26                 // class kotlin/reflect/jvm/internal/impl/protobuf/CodedInputStream
       3: dup
       4: aload_0
       5: invokespecial #91                 // Method "<init>":(Ljava/io/InputStream;)V
       8: areturn

  static kotlin.reflect.jvm.internal.impl.protobuf.CodedInputStream newInstance(kotlin.reflect.jvm.internal.impl.protobuf.LiteralByteString);
    Code:
       0: new           #26                 // class kotlin/reflect/jvm/internal/impl/protobuf/CodedInputStream
       3: dup
       4: aload_0
       5: invokespecial #92                 // Method "<init>":(Lkotlin/reflect/jvm/internal/impl/protobuf/LiteralByteString;)V
       8: astore_1
       9: aload_1
      10: aload_0
      11: invokevirtual #133                // Method kotlin/reflect/jvm/internal/impl/protobuf/LiteralByteString.size:()I
      14: invokevirtual #99                 // Method pushLimit:(I)I
      17: pop
      18: goto          31
      21: astore_2
      22: new           #14                 // class java/lang/IllegalArgumentException
      25: dup
      26: aload_2
      27: invokespecial #77                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/Throwable;)V
      30: athrow
      31: aload_1
      32: areturn
    Exception table:
       from    to  target type
           9    18    21   Class kotlin/reflect/jvm/internal/impl/protobuf/InvalidProtocolBufferException

  public int readTag() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #97                 // Method isAtEnd:()Z
       4: ifeq          14
       7: aload_0
       8: iconst_0
       9: putfield      #65                 // Field lastTag:I
      12: iconst_0
      13: ireturn
      14: aload_0
      15: aload_0
      16: invokevirtual #106                // Method readRawVarint32:()I
      19: putfield      #65                 // Field lastTag:I
      22: aload_0
      23: getfield      #65                 // Field lastTag:I
      26: invokestatic  #135                // Method kotlin/reflect/jvm/internal/impl/protobuf/WireFormat.getTagFieldNumber:(I)I
      29: ifne          36
      32: invokestatic  #123                // Method kotlin/reflect/jvm/internal/impl/protobuf/InvalidProtocolBufferException.invalidTag:()Lkotlin/reflect/jvm/internal/impl/protobuf/InvalidProtocolBufferException;
      35: athrow
      36: aload_0
      37: getfield      #65                 // Field lastTag:I
      40: ireturn

  public void checkLastTagWas(int) throws kotlin.reflect.jvm.internal.impl.protobuf.InvalidProtocolBufferException;
    Code:
       0: aload_0
       1: getfield      #65                 // Field lastTag:I
       4: iload_1
       5: if_icmpeq     12
       8: invokestatic  #122                // Method kotlin/reflect/jvm/internal/impl/protobuf/InvalidProtocolBufferException.invalidEndTag:()Lkotlin/reflect/jvm/internal/impl/protobuf/InvalidProtocolBufferException;
      11: athrow
      12: return

  public boolean skipField(int, kotlin.reflect.jvm.internal.impl.protobuf.CodedOutputStream) throws java.io.IOException;
    Code:
       0: iload_1
       1: invokestatic  #136                // Method kotlin/reflect/jvm/internal/impl/protobuf/WireFormat.getTagWireType:(I)I
       4: tableswitch   { // 0 to 5
                     0: 44
                     1: 61
                     2: 78
                     3: 95
                     4: 126
                     5: 128
               default: 145
          }
      44: aload_0
      45: invokevirtual #101                // Method readInt64:()J
      48: lstore_3
      49: aload_2
      50: iload_1
      51: invokevirtual #120                // Method kotlin/reflect/jvm/internal/impl/protobuf/CodedOutputStream.writeRawVarint32:(I)V
      54: aload_2
      55: lload_3
      56: invokevirtual #121                // Method kotlin/reflect/jvm/internal/impl/protobuf/CodedOutputStream.writeUInt64NoTag:(J)V
      59: iconst_1
      60: ireturn
      61: aload_0
      62: invokevirtual #105                // Method readRawLittleEndian64:()J
      65: lstore_3
      66: aload_2
      67: iload_1
      68: invokevirtual #120                // Method kotlin/reflect/jvm/internal/impl/protobuf/CodedOutputStream.writeRawVarint32:(I)V
      71: aload_2
      72: lload_3
      73: invokevirtual #119                // Method kotlin/reflect/jvm/internal/impl/protobuf/CodedOutputStream.writeFixed64NoTag:(J)V
      76: iconst_1
      77: ireturn
      78: aload_0
      79: invokevirtual #100                // Method readBytes:()Lkotlin/reflect/jvm/internal/impl/protobuf/ByteString;
      82: astore_3
      83: aload_2
      84: iload_1
      85: invokevirtual #120                // Method kotlin/reflect/jvm/internal/impl/protobuf/CodedOutputStream.writeRawVarint32:(I)V
      88: aload_2
      89: aload_3
      90: invokevirtual #117                // Method kotlin/reflect/jvm/internal/impl/protobuf/CodedOutputStream.writeBytesNoTag:(Lkotlin/reflect/jvm/internal/impl/protobuf/ByteString;)V
      93: iconst_1
      94: ireturn
      95: aload_2
      96: iload_1
      97: invokevirtual #120                // Method kotlin/reflect/jvm/internal/impl/protobuf/CodedOutputStream.writeRawVarint32:(I)V
     100: aload_0
     101: aload_2
     102: invokevirtual #113                // Method skipMessage:(Lkotlin/reflect/jvm/internal/impl/protobuf/CodedOutputStream;)V
     105: iload_1
     106: invokestatic  #135                // Method kotlin/reflect/jvm/internal/impl/protobuf/WireFormat.getTagFieldNumber:(I)I
     109: iconst_4
     110: invokestatic  #137                // Method kotlin/reflect/jvm/internal/impl/protobuf/WireFormat.makeTag:(II)I
     113: istore_3
     114: aload_0
     115: iload_3
     116: invokevirtual #93                 // Method checkLastTagWas:(I)V
     119: aload_2
     120: iload_3
     121: invokevirtual #120                // Method kotlin/reflect/jvm/internal/impl/protobuf/CodedOutputStream.writeRawVarint32:(I)V
     124: iconst_1
     125: ireturn
     126: iconst_0
     127: ireturn
     128: aload_0
     129: invokevirtual #104                // Method readRawLittleEndian32:()I
     132: istore_3
     133: aload_2
     134: iload_1
     135: invokevirtual #120                // Method kotlin/reflect/jvm/internal/impl/protobuf/CodedOutputStream.writeRawVarint32:(I)V
     138: aload_2
     139: iload_3
     140: invokevirtual #118                // Method kotlin/reflect/jvm/internal/impl/protobuf/CodedOutputStream.writeFixed32NoTag:(I)V
     143: iconst_1
     144: ireturn
     145: invokestatic  #125                // Method kotlin/reflect/jvm/internal/impl/protobuf/InvalidProtocolBufferException.invalidWireType:()Lkotlin/reflect/jvm/internal/impl/protobuf/InvalidProtocolBufferException;
     148: athrow

  public void skipMessage(kotlin.reflect.jvm.internal.impl.protobuf.CodedOutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #109                // Method readTag:()I
       4: istore_2
       5: iload_2
       6: ifeq          18
       9: aload_0
      10: iload_2
      11: aload_1
      12: invokevirtual #112                // Method skipField:(ILkotlin/reflect/jvm/internal/impl/protobuf/CodedOutputStream;)Z
      15: ifne          19
      18: return
      19: goto          0

  public double readDouble() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #105                // Method readRawLittleEndian64:()J
       4: invokestatic  #75                 // Method java/lang/Double.longBitsToDouble:(J)D
       7: dreturn

  public float readFloat() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #104                // Method readRawLittleEndian32:()I
       4: invokestatic  #76                 // Method java/lang/Float.intBitsToFloat:(I)F
       7: freturn

  public long readUInt64() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #107                // Method readRawVarint64:()J
       4: lreturn

  public long readInt64() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #107                // Method readRawVarint64:()J
       4: lreturn

  public int readInt32() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #106                // Method readRawVarint32:()I
       4: ireturn

  public long readFixed64() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #105                // Method readRawLittleEndian64:()J
       4: lreturn

  public int readFixed32() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #104                // Method readRawLittleEndian32:()I
       4: ireturn

  public boolean readBool() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #107                // Method readRawVarint64:()J
       4: lconst_0
       5: lcmp
       6: ifeq          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public java.lang.String readString() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #106                // Method readRawVarint32:()I
       4: istore_1
       5: iload_1
       6: aload_0
       7: getfield      #60                 // Field bufferSize:I
      10: aload_0
      11: getfield      #59                 // Field bufferPos:I
      14: isub
      15: if_icmpgt     53
      18: iload_1
      19: ifle          53
      22: new           #18                 // class java/lang/String
      25: dup
      26: aload_0
      27: getfield      #57                 // Field buffer:[B
      30: aload_0
      31: getfield      #59                 // Field bufferPos:I
      34: iload_1
      35: ldc           #7                  // String UTF-8
      37: invokespecial #81                 // Method java/lang/String."<init>":([BIILjava/lang/String;)V
      40: astore_2
      41: aload_0
      42: dup
      43: getfield      #59                 // Field bufferPos:I
      46: iload_1
      47: iadd
      48: putfield      #59                 // Field bufferPos:I
      51: aload_2
      52: areturn
      53: iload_1
      54: ifne          60
      57: ldc           #3                  // String
      59: areturn
      60: new           #18                 // class java/lang/String
      63: dup
      64: aload_0
      65: iload_1
      66: invokespecial #103                // Method readRawBytesSlowPath:(I)[B
      69: ldc           #7                  // String UTF-8
      71: invokespecial #82                 // Method java/lang/String."<init>":([BLjava/lang/String;)V
      74: areturn

  public java.lang.String readStringRequireUtf8() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #106                // Method readRawVarint32:()I
       4: istore_1
       5: aload_0
       6: getfield      #59                 // Field bufferPos:I
       9: istore_3
      10: iload_1
      11: aload_0
      12: getfield      #60                 // Field bufferSize:I
      15: iload_3
      16: isub
      17: if_icmpgt     39
      20: iload_1
      21: ifle          39
      24: aload_0
      25: getfield      #57                 // Field buffer:[B
      28: astore_2
      29: aload_0
      30: iload_3
      31: iload_1
      32: iadd
      33: putfield      #59                 // Field bufferPos:I
      36: goto          54
      39: iload_1
      40: ifne          46
      43: ldc           #3                  // String
      45: areturn
      46: aload_0
      47: iload_1
      48: invokespecial #103                // Method readRawBytesSlowPath:(I)[B
      51: astore_2
      52: iconst_0
      53: istore_3
      54: aload_2
      55: iload_3
      56: iload_3
      57: iload_1
      58: iadd
      59: invokestatic  #134                // Method kotlin/reflect/jvm/internal/impl/protobuf/Utf8.isValidUtf8:([BII)Z
      62: ifne          69
      65: invokestatic  #124                // Method kotlin/reflect/jvm/internal/impl/protobuf/InvalidProtocolBufferException.invalidUtf8:()Lkotlin/reflect/jvm/internal/impl/protobuf/InvalidProtocolBufferException;
      68: athrow
      69: new           #18                 // class java/lang/String
      72: dup
      73: aload_2
      74: iload_3
      75: iload_1
      76: ldc           #7                  // String UTF-8
      78: invokespecial #81                 // Method java/lang/String."<init>":([BIILjava/lang/String;)V
      81: areturn

  public void readGroup(int, kotlin.reflect.jvm.internal.impl.protobuf.MessageLite$Builder, kotlin.reflect.jvm.internal.impl.protobuf.ExtensionRegistryLite) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #66                 // Field recursionDepth:I
       4: aload_0
       5: getfield      #67                 // Field recursionLimit:I
       8: if_icmplt     15
      11: invokestatic  #128                // Method kotlin/reflect/jvm/internal/impl/protobuf/InvalidProtocolBufferException.recursionLimitExceeded:()Lkotlin/reflect/jvm/internal/impl/protobuf/InvalidProtocolBufferException;
      14: athrow
      15: aload_0
      16: dup
      17: getfield      #66                 // Field recursionDepth:I
      20: iconst_1
      21: iadd
      22: putfield      #66                 // Field recursionDepth:I
      25: aload_2
      26: aload_0
      27: aload_3
      28: invokeinterface #143,  3          // InterfaceMethod kotlin/reflect/jvm/internal/impl/protobuf/MessageLite$Builder.mergeFrom:(Lkotlin/reflect/jvm/internal/impl/protobuf/CodedInputStream;Lkotlin/reflect/jvm/internal/impl/protobuf/ExtensionRegistryLite;)Lkotlin/reflect/jvm/internal/impl/protobuf/MessageLite$Builder;
      33: pop
      34: aload_0
      35: iload_1
      36: iconst_4
      37: invokestatic  #137                // Method kotlin/reflect/jvm/internal/impl/protobuf/WireFormat.makeTag:(II)I
      40: invokevirtual #93                 // Method checkLastTagWas:(I)V
      43: aload_0
      44: dup
      45: getfield      #66                 // Field recursionDepth:I
      48: iconst_1
      49: isub
      50: putfield      #66                 // Field recursionDepth:I
      53: return

  public void readMessage(kotlin.reflect.jvm.internal.impl.protobuf.MessageLite$Builder, kotlin.reflect.jvm.internal.impl.protobuf.ExtensionRegistryLite) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #106                // Method readRawVarint32:()I
       4: istore_3
       5: aload_0
       6: getfield      #66                 // Field recursionDepth:I
       9: aload_0
      10: getfield      #67                 // Field recursionLimit:I
      13: if_icmplt     20
      16: invokestatic  #128                // Method kotlin/reflect/jvm/internal/impl/protobuf/InvalidProtocolBufferException.recursionLimitExceeded:()Lkotlin/reflect/jvm/internal/impl/protobuf/InvalidProtocolBufferException;
      19: athrow
      20: aload_0
      21: iload_3
      22: invokevirtual #99                 // Method pushLimit:(I)I
      25: istore        4
      27: aload_0
      28: dup
      29: getfield      #66                 // Field recursionDepth:I
      32: iconst_1
      33: iadd
      34: putfield      #66                 // Field recursionDepth:I
      37: aload_1
      38: aload_0
      39: aload_2
      40: invokeinterface #143,  3          // InterfaceMethod kotlin/reflect/jvm/internal/impl/protobuf/MessageLite$Builder.mergeFrom:(Lkotlin/reflect/jvm/internal/impl/protobuf/CodedInputStream;Lkotlin/reflect/jvm/internal/impl/protobuf/ExtensionRegistryLite;)Lkotlin/reflect/jvm/internal/impl/protobuf/MessageLite$Builder;
      45: pop
      46: aload_0
      47: iconst_0
      48: invokevirtual #93                 // Method checkLastTagWas:(I)V
      51: aload_0
      52: dup
      53: getfield      #66                 // Field recursionDepth:I
      56: iconst_1
      57: isub
      58: putfield      #66                 // Field recursionDepth:I
      61: aload_0
      62: iload         4
      64: invokevirtual #98                 // Method popLimit:(I)V
      67: return

  public <T extends kotlin.reflect.jvm.internal.impl.protobuf.MessageLite> T readMessage(kotlin.reflect.jvm.internal.impl.protobuf.Parser<T>, kotlin.reflect.jvm.internal.impl.protobuf.ExtensionRegistryLite) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #106                // Method readRawVarint32:()I
       4: istore_3
       5: aload_0
       6: getfield      #66                 // Field recursionDepth:I
       9: aload_0
      10: getfield      #67                 // Field recursionLimit:I
      13: if_icmplt     20
      16: invokestatic  #128                // Method kotlin/reflect/jvm/internal/impl/protobuf/InvalidProtocolBufferException.recursionLimitExceeded:()Lkotlin/reflect/jvm/internal/impl/protobuf/InvalidProtocolBufferException;
      19: athrow
      20: aload_0
      21: iload_3
      22: invokevirtual #99                 // Method pushLimit:(I)I
      25: istore        4
      27: aload_0
      28: dup
      29: getfield      #66                 // Field recursionDepth:I
      32: iconst_1
      33: iadd
      34: putfield      #66                 // Field recursionDepth:I
      37: aload_1
      38: aload_0
      39: aload_2
      40: invokeinterface #144,  3          // InterfaceMethod kotlin/reflect/jvm/internal/impl/protobuf/Parser.parsePartialFrom:(Lkotlin/reflect/jvm/internal/impl/protobuf/CodedInputStream;Lkotlin/reflect/jvm/internal/impl/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;
      45: checkcast     #33                 // class kotlin/reflect/jvm/internal/impl/protobuf/MessageLite
      48: astore        5
      50: aload_0
      51: iconst_0
      52: invokevirtual #93                 // Method checkLastTagWas:(I)V
      55: aload_0
      56: dup
      57: getfield      #66                 // Field recursionDepth:I
      60: iconst_1
      61: isub
      62: putfield      #66                 // Field recursionDepth:I
      65: aload_0
      66: iload         4
      68: invokevirtual #98                 // Method popLimit:(I)V
      71: aload         5
      73: areturn

  public kotlin.reflect.jvm.internal.impl.protobuf.ByteString readBytes() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #106                // Method readRawVarint32:()I
       4: istore_1
       5: iload_1
       6: aload_0
       7: getfield      #60                 // Field bufferSize:I
      10: aload_0
      11: getfield      #59                 // Field bufferPos:I
      14: isub
      15: if_icmpgt     80
      18: iload_1
      19: ifle          80
      22: aload_0
      23: getfield      #58                 // Field bufferIsImmutable:Z
      26: ifeq          55
      29: aload_0
      30: getfield      #63                 // Field enableAliasing:Z
      33: ifeq          55
      36: new           #24                 // class kotlin/reflect/jvm/internal/impl/protobuf/BoundedByteString
      39: dup
      40: aload_0
      41: getfield      #57                 // Field buffer:[B
      44: aload_0
      45: getfield      #59                 // Field bufferPos:I
      48: iload_1
      49: invokespecial #89                 // Method kotlin/reflect/jvm/internal/impl/protobuf/BoundedByteString."<init>":([BII)V
      52: goto          67
      55: aload_0
      56: getfield      #57                 // Field buffer:[B
      59: aload_0
      60: getfield      #59                 // Field bufferPos:I
      63: iload_1
      64: invokestatic  #90                 // Method kotlin/reflect/jvm/internal/impl/protobuf/ByteString.copyFrom:([BII)Lkotlin/reflect/jvm/internal/impl/protobuf/ByteString;
      67: astore_2
      68: aload_0
      69: dup
      70: getfield      #59                 // Field bufferPos:I
      73: iload_1
      74: iadd
      75: putfield      #59                 // Field bufferPos:I
      78: aload_2
      79: areturn
      80: iload_1
      81: ifne          88
      84: getstatic     #56                 // Field kotlin/reflect/jvm/internal/impl/protobuf/ByteString.EMPTY:Lkotlin/reflect/jvm/internal/impl/protobuf/ByteString;
      87: areturn
      88: new           #32                 // class kotlin/reflect/jvm/internal/impl/protobuf/LiteralByteString
      91: dup
      92: aload_0
      93: iload_1
      94: invokespecial #103                // Method readRawBytesSlowPath:(I)[B
      97: invokespecial #131                // Method kotlin/reflect/jvm/internal/impl/protobuf/LiteralByteString."<init>":([B)V
     100: areturn

  public int readUInt32() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #106                // Method readRawVarint32:()I
       4: ireturn

  public int readEnum() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #106                // Method readRawVarint32:()I
       4: ireturn

  public int readSFixed32() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #104                // Method readRawLittleEndian32:()I
       4: ireturn

  public long readSFixed64() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #105                // Method readRawLittleEndian64:()J
       4: lreturn

  public int readSInt32() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #106                // Method readRawVarint32:()I
       4: invokestatic  #94                 // Method decodeZigZag32:(I)I
       7: ireturn

  public long readSInt64() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #107                // Method readRawVarint64:()J
       4: invokestatic  #95                 // Method decodeZigZag64:(J)J
       7: lreturn

  public int readRawVarint32() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #59                 // Field bufferPos:I
       4: istore_1
       5: aload_0
       6: getfield      #60                 // Field bufferSize:I
       9: iload_1
      10: if_icmpne     16
      13: goto          227
      16: aload_0
      17: getfield      #57                 // Field buffer:[B
      20: astore_2
      21: aload_2
      22: iload_1
      23: iinc          1, 1
      26: baload
      27: dup
      28: istore_3
      29: iflt          39
      32: aload_0
      33: iload_1
      34: putfield      #59                 // Field bufferPos:I
      37: iload_3
      38: ireturn
      39: aload_0
      40: getfield      #60                 // Field bufferSize:I
      43: iload_1
      44: isub
      45: bipush        9
      47: if_icmpge     53
      50: goto          227
      53: iload_3
      54: aload_2
      55: iload_1
      56: iinc          1, 1
      59: baload
      60: bipush        7
      62: ishl
      63: ixor
      64: dup
      65: istore_3
      66: i2l
      67: lconst_0
      68: lcmp
      69: ifge          83
      72: iload_3
      73: i2l
      74: ldc2_w        #44                 // long -128l
      77: lxor
      78: l2i
      79: istore_3
      80: goto          220
      83: iload_3
      84: aload_2
      85: iload_1
      86: iinc          1, 1
      89: baload
      90: bipush        14
      92: ishl
      93: ixor
      94: dup
      95: istore_3
      96: i2l
      97: lconst_0
      98: lcmp
      99: iflt          113
     102: iload_3
     103: i2l
     104: ldc2_w        #48                 // long 16256l
     107: lxor
     108: l2i
     109: istore_3
     110: goto          220
     113: iload_3
     114: aload_2
     115: iload_1
     116: iinc          1, 1
     119: baload
     120: bipush        21
     122: ishl
     123: ixor
     124: dup
     125: istore_3
     126: i2l
     127: lconst_0
     128: lcmp
     129: ifge          143
     132: iload_3
     133: i2l
     134: ldc2_w        #42                 // long -2080896l
     137: lxor
     138: l2i
     139: istore_3
     140: goto          220
     143: aload_2
     144: iload_1
     145: iinc          1, 1
     148: baload
     149: istore        4
     151: iload_3
     152: iload         4
     154: bipush        28
     156: ishl
     157: ixor
     158: istore_3
     159: iload_3
     160: i2l
     161: ldc2_w        #50                 // long 266354560l
     164: lxor
     165: l2i
     166: istore_3
     167: iload         4
     169: ifge          220
     172: aload_2
     173: iload_1
     174: iinc          1, 1
     177: baload
     178: ifge          220
     181: aload_2
     182: iload_1
     183: iinc          1, 1
     186: baload
     187: ifge          220
     190: aload_2
     191: iload_1
     192: iinc          1, 1
     195: baload
     196: ifge          220
     199: aload_2
     200: iload_1
     201: iinc          1, 1
     204: baload
     205: ifge          220
     208: aload_2
     209: iload_1
     210: iinc          1, 1
     213: baload
     214: ifge          220
     217: goto          227
     220: aload_0
     221: iload_1
     222: putfield      #59                 // Field bufferPos:I
     225: iload_3
     226: ireturn
     227: aload_0
     228: invokevirtual #108                // Method readRawVarint64SlowPath:()J
     231: l2i
     232: ireturn

  public static int readRawVarint32(int, java.io.InputStream) throws java.io.IOException;
    Code:
       0: iload_0
       1: sipush        128
       4: iand
       5: ifne          10
       8: iload_0
       9: ireturn
      10: iload_0
      11: bipush        127
      13: iand
      14: istore_2
      15: bipush        7
      17: istore_3
      18: iload_3
      19: bipush        32
      21: if_icmpge     67
      24: aload_1
      25: invokevirtual #73                 // Method java/io/InputStream.read:()I
      28: istore        4
      30: iload         4
      32: iconst_m1
      33: if_icmpne     40
      36: invokestatic  #130                // Method kotlin/reflect/jvm/internal/impl/protobuf/InvalidProtocolBufferException.truncatedMessage:()Lkotlin/reflect/jvm/internal/impl/protobuf/InvalidProtocolBufferException;
      39: athrow
      40: iload_2
      41: iload         4
      43: bipush        127
      45: iand
      46: iload_3
      47: ishl
      48: ior
      49: istore_2
      50: iload         4
      52: sipush        128
      55: iand
      56: ifne          61
      59: iload_2
      60: ireturn
      61: iinc          3, 7
      64: goto          18
      67: iload_3
      68: bipush        64
      70: if_icmpge     106
      73: aload_1
      74: invokevirtual #73                 // Method java/io/InputStream.read:()I
      77: istore        4
      79: iload         4
      81: iconst_m1
      82: if_icmpne     89
      85: invokestatic  #130                // Method kotlin/reflect/jvm/internal/impl/protobuf/InvalidProtocolBufferException.truncatedMessage:()Lkotlin/reflect/jvm/internal/impl/protobuf/InvalidProtocolBufferException;
      88: athrow
      89: iload         4
      91: sipush        128
      94: iand
      95: ifne          100
      98: iload_2
      99: ireturn
     100: iinc          3, 7
     103: goto          67
     106: invokestatic  #126                // Method kotlin/reflect/jvm/internal/impl/protobuf/InvalidProtocolBufferException.malformedVarint:()Lkotlin/reflect/jvm/internal/impl/protobuf/InvalidProtocolBufferException;
     109: athrow

  public long readRawVarint64() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #59                 // Field bufferPos:I
       4: istore_1
       5: aload_0
       6: getfield      #60                 // Field bufferSize:I
       9: iload_1
      10: if_icmpne     16
      13: goto          300
      16: aload_0
      17: getfield      #57                 // Field buffer:[B
      20: astore_2
      21: aload_2
      22: iload_1
      23: iinc          1, 1
      26: baload
      27: dup
      28: istore        5
      30: iflt          42
      33: aload_0
      34: iload_1
      35: putfield      #59                 // Field bufferPos:I
      38: iload         5
      40: i2l
      41: lreturn
      42: aload_0
      43: getfield      #60                 // Field bufferSize:I
      46: iload_1
      47: isub
      48: bipush        9
      50: if_icmpge     56
      53: goto          300
      56: iload         5
      58: aload_2
      59: iload_1
      60: iinc          1, 1
      63: baload
      64: bipush        7
      66: ishl
      67: ixor
      68: i2l
      69: dup2
      70: lstore_3
      71: lconst_0
      72: lcmp
      73: ifge          85
      76: lload_3
      77: ldc2_w        #44                 // long -128l
      80: lxor
      81: lstore_3
      82: goto          293
      85: lload_3
      86: aload_2
      87: iload_1
      88: iinc          1, 1
      91: baload
      92: bipush        14
      94: ishl
      95: i2l
      96: lxor
      97: dup2
      98: lstore_3
      99: lconst_0
     100: lcmp
     101: iflt          113
     104: lload_3
     105: ldc2_w        #48                 // long 16256l
     108: lxor
     109: lstore_3
     110: goto          293
     113: lload_3
     114: aload_2
     115: iload_1
     116: iinc          1, 1
     119: baload
     120: bipush        21
     122: ishl
     123: i2l
     124: lxor
     125: dup2
     126: lstore_3
     127: lconst_0
     128: lcmp
     129: ifge          141
     132: lload_3
     133: ldc2_w        #42                 // long -2080896l
     136: lxor
     137: lstore_3
     138: goto          293
     141: lload_3
     142: aload_2
     143: iload_1
     144: iinc          1, 1
     147: baload
     148: i2l
     149: bipush        28
     151: lshl
     152: lxor
     153: dup2
     154: lstore_3
     155: lconst_0
     156: lcmp
     157: iflt          169
     160: lload_3
     161: ldc2_w        #50                 // long 266354560l
     164: lxor
     165: lstore_3
     166: goto          293
     169: lload_3
     170: aload_2
     171: iload_1
     172: iinc          1, 1
     175: baload
     176: i2l
     177: bipush        35
     179: lshl
     180: lxor
     181: dup2
     182: lstore_3
     183: lconst_0
     184: lcmp
     185: ifge          197
     188: lload_3
     189: ldc2_w        #40                 // long -34093383808l
     192: lxor
     193: lstore_3
     194: goto          293
     197: lload_3
     198: aload_2
     199: iload_1
     200: iinc          1, 1
     203: baload
     204: i2l
     205: bipush        42
     207: lshl
     208: lxor
     209: dup2
     210: lstore_3
     211: lconst_0
     212: lcmp
     213: iflt          225
     216: lload_3
     217: ldc2_w        #52                 // long 4363953127296l
     220: lxor
     221: lstore_3
     222: goto          293
     225: lload_3
     226: aload_2
     227: iload_1
     228: iinc          1, 1
     231: baload
     232: i2l
     233: bipush        49
     235: lshl
     236: lxor
     237: dup2
     238: lstore_3
     239: lconst_0
     240: lcmp
     241: ifge          253
     244: lload_3
     245: ldc2_w        #38                 // long -558586000294016l
     248: lxor
     249: lstore_3
     250: goto          293
     253: lload_3
     254: aload_2
     255: iload_1
     256: iinc          1, 1
     259: baload
     260: i2l
     261: bipush        56
     263: lshl
     264: lxor
     265: lstore_3
     266: lload_3
     267: ldc2_w        #54                 // long 71499008037633920l
     270: lxor
     271: lstore_3
     272: lload_3
     273: lconst_0
     274: lcmp
     275: ifge          293
     278: aload_2
     279: iload_1
     280: iinc          1, 1
     283: baload
     284: i2l
     285: lconst_0
     286: lcmp
     287: ifge          293
     290: goto          300
     293: aload_0
     294: iload_1
     295: putfield      #59                 // Field bufferPos:I
     298: lload_3
     299: lreturn
     300: aload_0
     301: invokevirtual #108                // Method readRawVarint64SlowPath:()J
     304: lreturn

  long readRawVarint64SlowPath() throws java.io.IOException;
    Code:
       0: lconst_0
       1: lstore_1
       2: iconst_0
       3: istore_3
       4: iload_3
       5: bipush        64
       7: if_icmpge     44
      10: aload_0
      11: invokevirtual #102                // Method readRawByte:()B
      14: istore        4
      16: lload_1
      17: iload         4
      19: bipush        127
      21: iand
      22: i2l
      23: iload_3
      24: lshl
      25: lor
      26: lstore_1
      27: iload         4
      29: sipush        128
      32: iand
      33: ifne          38
      36: lload_1
      37: lreturn
      38: iinc          3, 7
      41: goto          4
      44: invokestatic  #126                // Method kotlin/reflect/jvm/internal/impl/protobuf/InvalidProtocolBufferException.malformedVarint:()Lkotlin/reflect/jvm/internal/impl/protobuf/InvalidProtocolBufferException;
      47: athrow

  public int readRawLittleEndian32() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #59                 // Field bufferPos:I
       4: istore_1
       5: aload_0
       6: getfield      #60                 // Field bufferSize:I
       9: iload_1
      10: isub
      11: iconst_4
      12: if_icmpge     25
      15: aload_0
      16: iconst_4
      17: invokespecial #111                // Method refillBuffer:(I)V
      20: aload_0
      21: getfield      #59                 // Field bufferPos:I
      24: istore_1
      25: aload_0
      26: getfield      #57                 // Field buffer:[B
      29: astore_2
      30: aload_0
      31: iload_1
      32: iconst_4
      33: iadd
      34: putfield      #59                 // Field bufferPos:I
      37: aload_2
      38: iload_1
      39: baload
      40: sipush        255
      43: iand
      44: aload_2
      45: iload_1
      46: iconst_1
      47: iadd
      48: baload
      49: sipush        255
      52: iand
      53: bipush        8
      55: ishl
      56: ior
      57: aload_2
      58: iload_1
      59: iconst_2
      60: iadd
      61: baload
      62: sipush        255
      65: iand
      66: bipush        16
      68: ishl
      69: ior
      70: aload_2
      71: iload_1
      72: iconst_3
      73: iadd
      74: baload
      75: sipush        255
      78: iand
      79: bipush        24
      81: ishl
      82: ior
      83: ireturn

  public long readRawLittleEndian64() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #59                 // Field bufferPos:I
       4: istore_1
       5: aload_0
       6: getfield      #60                 // Field bufferSize:I
       9: iload_1
      10: isub
      11: bipush        8
      13: if_icmpge     27
      16: aload_0
      17: bipush        8
      19: invokespecial #111                // Method refillBuffer:(I)V
      22: aload_0
      23: getfield      #59                 // Field bufferPos:I
      26: istore_1
      27: aload_0
      28: getfield      #57                 // Field buffer:[B
      31: astore_2
      32: aload_0
      33: iload_1
      34: bipush        8
      36: iadd
      37: putfield      #59                 // Field bufferPos:I
      40: aload_2
      41: iload_1
      42: baload
      43: i2l
      44: ldc2_w        #46                 // long 255l
      47: land
      48: aload_2
      49: iload_1
      50: iconst_1
      51: iadd
      52: baload
      53: i2l
      54: ldc2_w        #46                 // long 255l
      57: land
      58: bipush        8
      60: lshl
      61: lor
      62: aload_2
      63: iload_1
      64: iconst_2
      65: iadd
      66: baload
      67: i2l
      68: ldc2_w        #46                 // long 255l
      71: land
      72: bipush        16
      74: lshl
      75: lor
      76: aload_2
      77: iload_1
      78: iconst_3
      79: iadd
      80: baload
      81: i2l
      82: ldc2_w        #46                 // long 255l
      85: land
      86: bipush        24
      88: lshl
      89: lor
      90: aload_2
      91: iload_1
      92: iconst_4
      93: iadd
      94: baload
      95: i2l
      96: ldc2_w        #46                 // long 255l
      99: land
     100: bipush        32
     102: lshl
     103: lor
     104: aload_2
     105: iload_1
     106: iconst_5
     107: iadd
     108: baload
     109: i2l
     110: ldc2_w        #46                 // long 255l
     113: land
     114: bipush        40
     116: lshl
     117: lor
     118: aload_2
     119: iload_1
     120: bipush        6
     122: iadd
     123: baload
     124: i2l
     125: ldc2_w        #46                 // long 255l
     128: land
     129: bipush        48
     131: lshl
     132: lor
     133: aload_2
     134: iload_1
     135: bipush        7
     137: iadd
     138: baload
     139: i2l
     140: ldc2_w        #46                 // long 255l
     143: land
     144: bipush        56
     146: lshl
     147: lor
     148: lreturn

  public static int decodeZigZag32(int);
    Code:
       0: iload_0
       1: iconst_1
       2: iushr
       3: iload_0
       4: iconst_1
       5: iand
       6: ineg
       7: ixor
       8: ireturn

  public static long decodeZigZag64(long);
    Code:
       0: lload_0
       1: iconst_1
       2: lushr
       3: lload_0
       4: lconst_1
       5: land
       6: lneg
       7: lxor
       8: lreturn

  private kotlin.reflect.jvm.internal.impl.protobuf.CodedInputStream(java.io.InputStream);
    Code:
       0: aload_0
       1: invokespecial #80                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #63                 // Field enableAliasing:Z
       9: aload_0
      10: ldc           #2                  // int 2147483647
      12: putfield      #62                 // Field currentLimit:I
      15: aload_0
      16: bipush        64
      18: putfield      #67                 // Field recursionLimit:I
      21: aload_0
      22: ldc           #1                  // int 67108864
      24: putfield      #69                 // Field sizeLimit:I
      27: aload_0
      28: aconst_null
      29: putfield      #68                 // Field refillCallback:Lkotlin/reflect/jvm/internal/impl/protobuf/CodedInputStream$RefillCallback;
      32: aload_0
      33: sipush        4096
      36: newarray       byte
      38: putfield      #57                 // Field buffer:[B
      41: aload_0
      42: iconst_0
      43: putfield      #60                 // Field bufferSize:I
      46: aload_0
      47: iconst_0
      48: putfield      #59                 // Field bufferPos:I
      51: aload_0
      52: iconst_0
      53: putfield      #70                 // Field totalBytesRetired:I
      56: aload_0
      57: aload_1
      58: putfield      #64                 // Field input:Ljava/io/InputStream;
      61: aload_0
      62: iconst_0
      63: putfield      #58                 // Field bufferIsImmutable:Z
      66: return

  private kotlin.reflect.jvm.internal.impl.protobuf.CodedInputStream(kotlin.reflect.jvm.internal.impl.protobuf.LiteralByteString);
    Code:
       0: aload_0
       1: invokespecial #80                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #63                 // Field enableAliasing:Z
       9: aload_0
      10: ldc           #2                  // int 2147483647
      12: putfield      #62                 // Field currentLimit:I
      15: aload_0
      16: bipush        64
      18: putfield      #67                 // Field recursionLimit:I
      21: aload_0
      22: ldc           #1                  // int 67108864
      24: putfield      #69                 // Field sizeLimit:I
      27: aload_0
      28: aconst_null
      29: putfield      #68                 // Field refillCallback:Lkotlin/reflect/jvm/internal/impl/protobuf/CodedInputStream$RefillCallback;
      32: aload_0
      33: aload_1
      34: getfield      #72                 // Field kotlin/reflect/jvm/internal/impl/protobuf/LiteralByteString.bytes:[B
      37: putfield      #57                 // Field buffer:[B
      40: aload_0
      41: aload_1
      42: invokevirtual #132                // Method kotlin/reflect/jvm/internal/impl/protobuf/LiteralByteString.getOffsetIntoBytes:()I
      45: putfield      #59                 // Field bufferPos:I
      48: aload_0
      49: aload_0
      50: getfield      #59                 // Field bufferPos:I
      53: aload_1
      54: invokevirtual #133                // Method kotlin/reflect/jvm/internal/impl/protobuf/LiteralByteString.size:()I
      57: iadd
      58: putfield      #60                 // Field bufferSize:I
      61: aload_0
      62: aload_0
      63: getfield      #59                 // Field bufferPos:I
      66: ineg
      67: putfield      #70                 // Field totalBytesRetired:I
      70: aload_0
      71: aconst_null
      72: putfield      #64                 // Field input:Ljava/io/InputStream;
      75: aload_0
      76: iconst_1
      77: putfield      #58                 // Field bufferIsImmutable:Z
      80: return

  public int pushLimit(int) throws kotlin.reflect.jvm.internal.impl.protobuf.InvalidProtocolBufferException;
    Code:
       0: iload_1
       1: ifge          8
       4: invokestatic  #127                // Method kotlin/reflect/jvm/internal/impl/protobuf/InvalidProtocolBufferException.negativeSize:()Lkotlin/reflect/jvm/internal/impl/protobuf/InvalidProtocolBufferException;
       7: athrow
       8: iload_1
       9: aload_0
      10: getfield      #70                 // Field totalBytesRetired:I
      13: aload_0
      14: getfield      #59                 // Field bufferPos:I
      17: iadd
      18: iadd
      19: istore_1
      20: aload_0
      21: getfield      #62                 // Field currentLimit:I
      24: istore_2
      25: iload_1
      26: iload_2
      27: if_icmple     34
      30: invokestatic  #130                // Method kotlin/reflect/jvm/internal/impl/protobuf/InvalidProtocolBufferException.truncatedMessage:()Lkotlin/reflect/jvm/internal/impl/protobuf/InvalidProtocolBufferException;
      33: athrow
      34: aload_0
      35: iload_1
      36: putfield      #62                 // Field currentLimit:I
      39: aload_0
      40: invokespecial #110                // Method recomputeBufferSizeAfterLimit:()V
      43: iload_2
      44: ireturn

  private void recomputeBufferSizeAfterLimit();
    Code:
       0: aload_0
       1: dup
       2: getfield      #60                 // Field bufferSize:I
       5: aload_0
       6: getfield      #61                 // Field bufferSizeAfterLimit:I
       9: iadd
      10: putfield      #60                 // Field bufferSize:I
      13: aload_0
      14: getfield      #70                 // Field totalBytesRetired:I
      17: aload_0
      18: getfield      #60                 // Field bufferSize:I
      21: iadd
      22: istore_1
      23: iload_1
      24: aload_0
      25: getfield      #62                 // Field currentLimit:I
      28: if_icmple     57
      31: aload_0
      32: iload_1
      33: aload_0
      34: getfield      #62                 // Field currentLimit:I
      37: isub
      38: putfield      #61                 // Field bufferSizeAfterLimit:I
      41: aload_0
      42: dup
      43: getfield      #60                 // Field bufferSize:I
      46: aload_0
      47: getfield      #61                 // Field bufferSizeAfterLimit:I
      50: isub
      51: putfield      #60                 // Field bufferSize:I
      54: goto          62
      57: aload_0
      58: iconst_0
      59: putfield      #61                 // Field bufferSizeAfterLimit:I
      62: return

  public void popLimit(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #62                 // Field currentLimit:I
       5: aload_0
       6: invokespecial #110                // Method recomputeBufferSizeAfterLimit:()V
       9: return

  public int getBytesUntilLimit();
    Code:
       0: aload_0
       1: getfield      #62                 // Field currentLimit:I
       4: ldc           #2                  // int 2147483647
       6: if_icmpne     11
       9: iconst_m1
      10: ireturn
      11: aload_0
      12: getfield      #70                 // Field totalBytesRetired:I
      15: aload_0
      16: getfield      #59                 // Field bufferPos:I
      19: iadd
      20: istore_1
      21: aload_0
      22: getfield      #62                 // Field currentLimit:I
      25: iload_1
      26: isub
      27: ireturn

  public boolean isAtEnd() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #59                 // Field bufferPos:I
       4: aload_0
       5: getfield      #60                 // Field bufferSize:I
       8: if_icmpne     23
      11: aload_0
      12: iconst_1
      13: invokespecial #116                // Method tryRefillBuffer:(I)Z
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  private void ensureAvailable(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #60                 // Field bufferSize:I
       4: aload_0
       5: getfield      #59                 // Field bufferPos:I
       8: isub
       9: iload_1
      10: if_icmpge     18
      13: aload_0
      14: iload_1
      15: invokespecial #111                // Method refillBuffer:(I)V
      18: return

  private void refillBuffer(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #116                // Method tryRefillBuffer:(I)Z
       5: ifne          12
       8: invokestatic  #130                // Method kotlin/reflect/jvm/internal/impl/protobuf/InvalidProtocolBufferException.truncatedMessage:()Lkotlin/reflect/jvm/internal/impl/protobuf/InvalidProtocolBufferException;
      11: athrow
      12: return

  private boolean tryRefillBuffer(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #59                 // Field bufferPos:I
       4: iload_1
       5: iadd
       6: aload_0
       7: getfield      #60                 // Field bufferSize:I
      10: if_icmpgt     49
      13: new           #15                 // class java/lang/IllegalStateException
      16: dup
      17: iload_1
      18: istore_2
      19: new           #19                 // class java/lang/StringBuilder
      22: dup
      23: bipush        77
      25: invokespecial #83                 // Method java/lang/StringBuilder."<init>":(I)V
      28: ldc           #8                  // String refillBuffer() called when
      30: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: iload_2
      34: invokevirtual #84                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      37: ldc           #5                  // String  bytes were already available in buffer
      39: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: invokevirtual #86                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: invokespecial #78                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: aload_0
      50: getfield      #70                 // Field totalBytesRetired:I
      53: aload_0
      54: getfield      #59                 // Field bufferPos:I
      57: iadd
      58: iload_1
      59: iadd
      60: aload_0
      61: getfield      #62                 // Field currentLimit:I
      64: if_icmple     69
      67: iconst_0
      68: ireturn
      69: aload_0
      70: getfield      #68                 // Field refillCallback:Lkotlin/reflect/jvm/internal/impl/protobuf/CodedInputStream$RefillCallback;
      73: ifnull        85
      76: aload_0
      77: getfield      #68                 // Field refillCallback:Lkotlin/reflect/jvm/internal/impl/protobuf/CodedInputStream$RefillCallback;
      80: invokeinterface #142,  1          // InterfaceMethod kotlin/reflect/jvm/internal/impl/protobuf/CodedInputStream$RefillCallback.onRefill:()V
      85: aload_0
      86: getfield      #64                 // Field input:Ljava/io/InputStream;
      89: ifnull        289
      92: aload_0
      93: getfield      #59                 // Field bufferPos:I
      96: istore_2
      97: iload_2
      98: ifle          153
     101: aload_0
     102: getfield      #60                 // Field bufferSize:I
     105: iload_2
     106: if_icmple     128
     109: aload_0
     110: getfield      #57                 // Field buffer:[B
     113: iload_2
     114: aload_0
     115: getfield      #57                 // Field buffer:[B
     118: iconst_0
     119: aload_0
     120: getfield      #60                 // Field bufferSize:I
     123: iload_2
     124: isub
     125: invokestatic  #87                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     128: aload_0
     129: dup
     130: getfield      #70                 // Field totalBytesRetired:I
     133: iload_2
     134: iadd
     135: putfield      #70                 // Field totalBytesRetired:I
     138: aload_0
     139: dup
     140: getfield      #60                 // Field bufferSize:I
     143: iload_2
     144: isub
     145: putfield      #60                 // Field bufferSize:I
     148: aload_0
     149: iconst_0
     150: putfield      #59                 // Field bufferPos:I
     153: aload_0
     154: getfield      #64                 // Field input:Ljava/io/InputStream;
     157: aload_0
     158: getfield      #57                 // Field buffer:[B
     161: aload_0
     162: getfield      #60                 // Field bufferSize:I
     165: aload_0
     166: getfield      #57                 // Field buffer:[B
     169: arraylength
     170: aload_0
     171: getfield      #60                 // Field bufferSize:I
     174: isub
     175: invokevirtual #74                 // Method java/io/InputStream.read:([BII)I
     178: istore_3
     179: iload_3
     180: ifeq          197
     183: iload_3
     184: iconst_m1
     185: if_icmplt     197
     188: iload_3
     189: aload_0
     190: getfield      #57                 // Field buffer:[B
     193: arraylength
     194: if_icmple     235
     197: new           #15                 // class java/lang/IllegalStateException
     200: dup
     201: iload_3
     202: istore        4
     204: new           #19                 // class java/lang/StringBuilder
     207: dup
     208: bipush        102
     210: invokespecial #83                 // Method java/lang/StringBuilder."<init>":(I)V
     213: ldc           #6                  // String InputStream#read(byte[]) returned invalid result:
     215: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     218: iload         4
     220: invokevirtual #84                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     223: ldc           #4                  // String \nThe InputStream implementation is buggy.
     225: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     228: invokevirtual #86                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     231: invokespecial #78                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     234: athrow
     235: iload_3
     236: ifle          289
     239: aload_0
     240: dup
     241: getfield      #60                 // Field bufferSize:I
     244: iload_3
     245: iadd
     246: putfield      #60                 // Field bufferSize:I
     249: aload_0
     250: getfield      #70                 // Field totalBytesRetired:I
     253: iload_1
     254: iadd
     255: aload_0
     256: getfield      #69                 // Field sizeLimit:I
     259: isub
     260: ifle          267
     263: invokestatic  #129                // Method kotlin/reflect/jvm/internal/impl/protobuf/InvalidProtocolBufferException.sizeLimitExceeded:()Lkotlin/reflect/jvm/internal/impl/protobuf/InvalidProtocolBufferException;
     266: athrow
     267: aload_0
     268: invokespecial #110                // Method recomputeBufferSizeAfterLimit:()V
     271: aload_0
     272: getfield      #60                 // Field bufferSize:I
     275: iload_1
     276: if_icmplt     283
     279: iconst_1
     280: goto          288
     283: aload_0
     284: iload_1
     285: invokespecial #116                // Method tryRefillBuffer:(I)Z
     288: ireturn
     289: iconst_0
     290: ireturn

  public byte readRawByte() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #59                 // Field bufferPos:I
       4: aload_0
       5: getfield      #60                 // Field bufferSize:I
       8: if_icmpne     16
      11: aload_0
      12: iconst_1
      13: invokespecial #111                // Method refillBuffer:(I)V
      16: aload_0
      17: getfield      #57                 // Field buffer:[B
      20: aload_0
      21: dup
      22: getfield      #59                 // Field bufferPos:I
      25: dup_x1
      26: iconst_1
      27: iadd
      28: putfield      #59                 // Field bufferPos:I
      31: baload
      32: ireturn

  private byte[] readRawBytesSlowPath(int) throws java.io.IOException;
    Code:
       0: iload_1
       1: ifgt          16
       4: iload_1
       5: ifne          12
       8: getstatic     #71                 // Field kotlin/reflect/jvm/internal/impl/protobuf/Internal.EMPTY_BYTE_ARRAY:[B
      11: areturn
      12: invokestatic  #127                // Method kotlin/reflect/jvm/internal/impl/protobuf/InvalidProtocolBufferException.negativeSize:()Lkotlin/reflect/jvm/internal/impl/protobuf/InvalidProtocolBufferException;
      15: athrow
      16: aload_0
      17: getfield      #70                 // Field totalBytesRetired:I
      20: aload_0
      21: getfield      #59                 // Field bufferPos:I
      24: iadd
      25: iload_1
      26: iadd
      27: aload_0
      28: getfield      #62                 // Field currentLimit:I
      31: if_icmple     56
      34: aload_0
      35: aload_0
      36: getfield      #62                 // Field currentLimit:I
      39: aload_0
      40: getfield      #70                 // Field totalBytesRetired:I
      43: isub
      44: aload_0
      45: getfield      #59                 // Field bufferPos:I
      48: isub
      49: invokevirtual #114                // Method skipRawBytes:(I)V
      52: invokestatic  #130                // Method kotlin/reflect/jvm/internal/impl/protobuf/InvalidProtocolBufferException.truncatedMessage:()Lkotlin/reflect/jvm/internal/impl/protobuf/InvalidProtocolBufferException;
      55: athrow
      56: iload_1
      57: sipush        4096
      60: if_icmpge     128
      63: iload_1
      64: newarray       byte
      66: astore_2
      67: aload_0
      68: getfield      #60                 // Field bufferSize:I
      71: aload_0
      72: getfield      #59                 // Field bufferPos:I
      75: isub
      76: istore_3
      77: aload_0
      78: getfield      #57                 // Field buffer:[B
      81: aload_0
      82: getfield      #59                 // Field bufferPos:I
      85: aload_2
      86: iconst_0
      87: iload_3
      88: invokestatic  #87                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      91: aload_0
      92: aload_0
      93: getfield      #60                 // Field bufferSize:I
      96: putfield      #59                 // Field bufferPos:I
      99: aload_0
     100: iload_1
     101: iload_3
     102: isub
     103: invokespecial #96                 // Method ensureAvailable:(I)V
     106: aload_0
     107: getfield      #57                 // Field buffer:[B
     110: iconst_0
     111: aload_2
     112: iload_3
     113: iload_1
     114: iload_3
     115: isub
     116: invokestatic  #87                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     119: aload_0
     120: iload_1
     121: iload_3
     122: isub
     123: putfield      #59                 // Field bufferPos:I
     126: aload_2
     127: areturn
     128: aload_0
     129: getfield      #59                 // Field bufferPos:I
     132: istore_2
     133: aload_0
     134: getfield      #60                 // Field bufferSize:I
     137: istore_3
     138: aload_0
     139: dup
     140: getfield      #70                 // Field totalBytesRetired:I
     143: aload_0
     144: getfield      #60                 // Field bufferSize:I
     147: iadd
     148: putfield      #70                 // Field totalBytesRetired:I
     151: aload_0
     152: iconst_0
     153: putfield      #59                 // Field bufferPos:I
     156: aload_0
     157: iconst_0
     158: putfield      #60                 // Field bufferSize:I
     161: iload_1
     162: iload_3
     163: iload_2
     164: isub
     165: isub
     166: istore        4
     168: new           #21                 // class java/util/ArrayList
     171: dup
     172: invokespecial #88                 // Method java/util/ArrayList."<init>":()V
     175: astore        5
     177: iload         4
     179: ifle          287
     182: iload         4
     184: sipush        4096
     187: invokestatic  #79                 // Method java/lang/Math.min:(II)I
     190: newarray       byte
     192: astore        6
     194: iconst_0
     195: istore        7
     197: iload         7
     199: aload         6
     201: arraylength
     202: if_icmpge     266
     205: aload_0
     206: getfield      #64                 // Field input:Ljava/io/InputStream;
     209: ifnonnull     216
     212: iconst_m1
     213: goto          233
     216: aload_0
     217: getfield      #64                 // Field input:Ljava/io/InputStream;
     220: aload         6
     222: iload         7
     224: aload         6
     226: arraylength
     227: iload         7
     229: isub
     230: invokevirtual #74                 // Method java/io/InputStream.read:([BII)I
     233: istore        8
     235: iload         8
     237: iconst_m1
     238: if_icmpne     245
     241: invokestatic  #130                // Method kotlin/reflect/jvm/internal/impl/protobuf/InvalidProtocolBufferException.truncatedMessage:()Lkotlin/reflect/jvm/internal/impl/protobuf/InvalidProtocolBufferException;
     244: athrow
     245: aload_0
     246: dup
     247: getfield      #70                 // Field totalBytesRetired:I
     250: iload         8
     252: iadd
     253: putfield      #70                 // Field totalBytesRetired:I
     256: iload         7
     258: iload         8
     260: iadd
     261: istore        7
     263: goto          197
     266: iload         4
     268: aload         6
     270: arraylength
     271: isub
     272: istore        4
     274: aload         5
     276: aload         6
     278: invokeinterface #140,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     283: pop
     284: goto          177
     287: iload_1
     288: newarray       byte
     290: astore        6
     292: iload_3
     293: iload_2
     294: isub
     295: istore        7
     297: aload_0
     298: getfield      #57                 // Field buffer:[B
     301: iload_2
     302: aload         6
     304: iconst_0
     305: iload         7
     307: invokestatic  #87                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     310: aload         5
     312: invokeinterface #141,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     317: astore        8
     319: aload         8
     321: invokeinterface #138,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     326: ifeq          365
     329: aload         8
     331: invokeinterface #139,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     336: checkcast     #9                  // class "[B"
     339: astore        9
     341: aload         9
     343: iconst_0
     344: aload         6
     346: iload         7
     348: aload         9
     350: arraylength
     351: invokestatic  #87                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     354: iload         7
     356: aload         9
     358: arraylength
     359: iadd
     360: istore        7
     362: goto          319
     365: aload         6
     367: areturn

  public void skipRawBytes(int) throws java.io.IOException;
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #60                 // Field bufferSize:I
       5: aload_0
       6: getfield      #59                 // Field bufferPos:I
       9: isub
      10: if_icmpgt     30
      13: iload_1
      14: iflt          30
      17: aload_0
      18: dup
      19: getfield      #59                 // Field bufferPos:I
      22: iload_1
      23: iadd
      24: putfield      #59                 // Field bufferPos:I
      27: goto          35
      30: aload_0
      31: iload_1
      32: invokespecial #115                // Method skipRawBytesSlowPath:(I)V
      35: return

  private void skipRawBytesSlowPath(int) throws java.io.IOException;
    Code:
       0: iload_1
       1: ifge          8
       4: invokestatic  #127                // Method kotlin/reflect/jvm/internal/impl/protobuf/InvalidProtocolBufferException.negativeSize:()Lkotlin/reflect/jvm/internal/impl/protobuf/InvalidProtocolBufferException;
       7: athrow
       8: aload_0
       9: getfield      #70                 // Field totalBytesRetired:I
      12: aload_0
      13: getfield      #59                 // Field bufferPos:I
      16: iadd
      17: iload_1
      18: iadd
      19: aload_0
      20: getfield      #62                 // Field currentLimit:I
      23: if_icmple     48
      26: aload_0
      27: aload_0
      28: getfield      #62                 // Field currentLimit:I
      31: aload_0
      32: getfield      #70                 // Field totalBytesRetired:I
      35: isub
      36: aload_0
      37: getfield      #59                 // Field bufferPos:I
      40: isub
      41: invokevirtual #114                // Method skipRawBytes:(I)V
      44: invokestatic  #130                // Method kotlin/reflect/jvm/internal/impl/protobuf/InvalidProtocolBufferException.truncatedMessage:()Lkotlin/reflect/jvm/internal/impl/protobuf/InvalidProtocolBufferException;
      47: athrow
      48: aload_0
      49: getfield      #60                 // Field bufferSize:I
      52: aload_0
      53: getfield      #59                 // Field bufferPos:I
      56: isub
      57: istore_2
      58: aload_0
      59: aload_0
      60: getfield      #60                 // Field bufferSize:I
      63: putfield      #59                 // Field bufferPos:I
      66: aload_0
      67: iconst_1
      68: invokespecial #111                // Method refillBuffer:(I)V
      71: iload_1
      72: iload_2
      73: isub
      74: aload_0
      75: getfield      #60                 // Field bufferSize:I
      78: if_icmple     104
      81: iload_2
      82: aload_0
      83: getfield      #60                 // Field bufferSize:I
      86: iadd
      87: istore_2
      88: aload_0
      89: aload_0
      90: getfield      #60                 // Field bufferSize:I
      93: putfield      #59                 // Field bufferPos:I
      96: aload_0
      97: iconst_1
      98: invokespecial #111                // Method refillBuffer:(I)V
     101: goto          71
     104: aload_0
     105: iload_1
     106: iload_2
     107: isub
     108: putfield      #59                 // Field bufferPos:I
     111: return
}
