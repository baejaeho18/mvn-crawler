Compiled from "ClassDescriptor.java"
public interface kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor extends kotlin.reflect.jvm.internal.impl.descriptors.ClassOrPackageFragmentDescriptor,kotlin.reflect.jvm.internal.impl.descriptors.ClassifierDescriptorWithTypeParameters {
  public abstract kotlin.reflect.jvm.internal.impl.resolve.scopes.MemberScope getMemberScope(kotlin.reflect.jvm.internal.impl.types.TypeSubstitution);

  public abstract kotlin.reflect.jvm.internal.impl.resolve.scopes.MemberScope getUnsubstitutedMemberScope();

  public abstract kotlin.reflect.jvm.internal.impl.resolve.scopes.MemberScope getUnsubstitutedInnerClassesScope();

  public abstract kotlin.reflect.jvm.internal.impl.resolve.scopes.MemberScope getStaticScope();

  public abstract java.util.Collection<kotlin.reflect.jvm.internal.impl.descriptors.ClassConstructorDescriptor> getConstructors();

  public abstract kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor getContainingDeclaration();

  public abstract kotlin.reflect.jvm.internal.impl.types.SimpleType getDefaultType();

  public abstract kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor getCompanionObjectDescriptor();

  public abstract kotlin.reflect.jvm.internal.impl.descriptors.ClassKind getKind();

  public abstract kotlin.reflect.jvm.internal.impl.descriptors.Modality getModality();

  public abstract kotlin.reflect.jvm.internal.impl.descriptors.DescriptorVisibility getVisibility();

  public abstract boolean isCompanionObject();

  public abstract boolean isData();

  public abstract boolean isInline();

  public abstract boolean isFun();

  public abstract boolean isValue();

  public abstract kotlin.reflect.jvm.internal.impl.descriptors.ReceiverParameterDescriptor getThisAsReceiverParameter();

  public abstract java.util.List<kotlin.reflect.jvm.internal.impl.descriptors.ReceiverParameterDescriptor> getContextReceivers();

  public abstract kotlin.reflect.jvm.internal.impl.descriptors.ClassConstructorDescriptor getUnsubstitutedPrimaryConstructor();

  public abstract java.util.List<kotlin.reflect.jvm.internal.impl.descriptors.TypeParameterDescriptor> getDeclaredTypeParameters();

  public abstract java.util.Collection<kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor> getSealedSubclasses();

  public abstract kotlin.reflect.jvm.internal.impl.descriptors.ValueClassRepresentation<kotlin.reflect.jvm.internal.impl.types.SimpleType> getValueClassRepresentation();

  public abstract kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor getOriginal();
}
