Compiled from "LockBasedStorageManager.java"
class kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$CacheWithNullableValuesBasedOnMemoizedFunction<K, V> extends kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$MapBasedMemoizedFunction<kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$KeyWithComputation<K, V>, V> implements kotlin.reflect.jvm.internal.impl.storage.CacheWithNullableValues<K, V> {
  private kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$CacheWithNullableValuesBasedOnMemoizedFunction(kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager, java.util.concurrent.ConcurrentMap<kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$KeyWithComputation<K, V>, java.lang.Object>);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: iconst_0
       5: invokestatic  #23                 // Method $$$reportNull$$$0:(I)V
       8: aload_2
       9: ifnonnull     16
      12: iconst_1
      13: invokestatic  #23                 // Method $$$reportNull$$$0:(I)V
      16: aload_0
      17: aload_1
      18: aload_2
      19: new           #18                 // class kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$CacheWithNullableValuesBasedOnMemoizedFunction$1
      22: dup
      23: invokespecial #26                 // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$CacheWithNullableValuesBasedOnMemoizedFunction$1."<init>":()V
      26: invokespecial #28                 // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$MapBasedMemoizedFunction."<init>":(Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;Ljava/util/concurrent/ConcurrentMap;Lkotlin/jvm/functions/Function1;)V
      29: return

  public V computeIfAbsent(K, kotlin.jvm.functions.Function0<? extends V>);
    Code:
       0: aload_2
       1: ifnonnull     8
       4: iconst_2
       5: invokestatic  #23                 // Method $$$reportNull$$$0:(I)V
       8: aload_0
       9: new           #19                 // class kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$KeyWithComputation
      12: dup
      13: aload_1
      14: aload_2
      15: invokespecial #27                 // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$KeyWithComputation."<init>":(Ljava/lang/Object;Lkotlin/jvm/functions/Function0;)V
      18: invokevirtual #25                 // Method invoke:(Ljava/lang/Object;)Ljava/lang/Object;
      21: areturn

  kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$CacheWithNullableValuesBasedOnMemoizedFunction(kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager, java.util.concurrent.ConcurrentMap, kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #24                 // Method "<init>":(Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;Ljava/util/concurrent/ConcurrentMap;)V
       6: return

  private static void $$$reportNull$$$0(int);
    Code:
       0: ldc           #2                  // String Argument for @NotNull parameter \'%s\' of %s.%s must not be null
       2: iconst_3
       3: anewarray     #10                 // class java/lang/Object
       6: iload_0
       7: tableswitch   { // 0 to 2
                     0: 32
                     1: 40
                     2: 48
               default: 32
          }
      32: dup
      33: iconst_0
      34: ldc           #7                  // String storageManager
      36: aastore
      37: goto          56
      40: dup
      41: iconst_0
      42: ldc           #6                  // String map
      44: aastore
      45: goto          56
      48: dup
      49: iconst_0
      50: ldc           #3                  // String computation
      52: aastore
      53: goto          56
      56: dup
      57: iconst_1
      58: ldc           #5                  // String kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$CacheWithNullableValuesBasedOnMemoizedFunction
      60: aastore
      61: iload_0
      62: tableswitch   { // 0 to 2
                     0: 88
                     1: 88
                     2: 96
               default: 88
          }
      88: dup
      89: iconst_2
      90: ldc           #1                  // String <init>
      92: aastore
      93: goto          104
      96: dup
      97: iconst_2
      98: ldc           #4                  // String computeIfAbsent
     100: aastore
     101: goto          104
     104: invokestatic  #22                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     107: new           #9                  // class java/lang/IllegalArgumentException
     110: dup_x1
     111: swap
     112: invokespecial #21                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     115: athrow
}
