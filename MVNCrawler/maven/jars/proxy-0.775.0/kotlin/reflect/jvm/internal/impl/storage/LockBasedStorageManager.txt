Compiled from "LockBasedStorageManager.java"
public class kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager implements kotlin.reflect.jvm.internal.impl.storage.StorageManager {
  private static final java.lang.String PACKAGE_NAME;

  public static final kotlin.reflect.jvm.internal.impl.storage.StorageManager NO_LOCKS;

  protected final kotlin.reflect.jvm.internal.impl.storage.SimpleLock lock;

  private final kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$ExceptionHandlingStrategy exceptionHandlingStrategy;

  private final java.lang.String debugText;

  static final boolean $assertionsDisabled;

  private kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager(java.lang.String, kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$ExceptionHandlingStrategy, kotlin.reflect.jvm.internal.impl.storage.SimpleLock);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: iconst_4
       5: invokestatic  #110                // Method $$$reportNull$$$0:(I)V
       8: aload_2
       9: ifnonnull     16
      12: iconst_5
      13: invokestatic  #110                // Method $$$reportNull$$$0:(I)V
      16: aload_3
      17: ifnonnull     25
      20: bipush        6
      22: invokestatic  #110                // Method $$$reportNull$$$0:(I)V
      25: aload_0
      26: invokespecial #96                 // Method java/lang/Object."<init>":()V
      29: aload_0
      30: aload_3
      31: putfield      #86                 // Field lock:Lkotlin/reflect/jvm/internal/impl/storage/SimpleLock;
      34: aload_0
      35: aload_2
      36: putfield      #85                 // Field exceptionHandlingStrategy:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$ExceptionHandlingStrategy;
      39: aload_0
      40: aload_1
      41: putfield      #84                 // Field debugText:Ljava/lang/String;
      44: return

  public kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: checkcast     #45                 // class java/lang/Runnable
       6: aconst_null
       7: invokespecial #111                // Method "<init>":(Ljava/lang/String;Ljava/lang/Runnable;Lkotlin/jvm/functions/Function1;)V
      10: return

  public kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager(java.lang.String, java.lang.Runnable, kotlin.jvm.functions.Function1<java.lang.InterruptedException, kotlin.Unit>);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #87                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$ExceptionHandlingStrategy.THROW:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$ExceptionHandlingStrategy;
       5: getstatic     #88                 // Field kotlin/reflect/jvm/internal/impl/storage/SimpleLock.Companion:Lkotlin/reflect/jvm/internal/impl/storage/SimpleLock$Companion;
       8: aload_2
       9: aload_3
      10: invokevirtual #126                // Method kotlin/reflect/jvm/internal/impl/storage/SimpleLock$Companion.simpleLock:(Ljava/lang/Runnable;Lkotlin/jvm/functions/Function1;)Lkotlin/reflect/jvm/internal/impl/storage/DefaultSimpleLock;
      13: invokespecial #112                // Method "<init>":(Ljava/lang/String;Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$ExceptionHandlingStrategy;Lkotlin/reflect/jvm/internal/impl/storage/SimpleLock;)V
      16: return

  public java.lang.String toString();
    Code:
       0: new           #49                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #102                // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #97                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: invokevirtual #92                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      14: invokevirtual #104                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #7                  // String @
      19: invokevirtual #104                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: invokevirtual #98                 // Method java/lang/Object.hashCode:()I
      26: invokestatic  #95                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      29: invokevirtual #104                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: ldc           #2                  // String  (
      34: invokevirtual #104                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_0
      38: getfield      #84                 // Field debugText:Ljava/lang/String;
      41: invokevirtual #104                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: ldc           #4                  // String )
      46: invokevirtual #104                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #105                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: areturn

  public <K, V> kotlin.reflect.jvm.internal.impl.storage.MemoizedFunctionToNotNull<K, V> createMemoizedFunction(kotlin.jvm.functions.Function1<? super K, ? extends V>);
    Code:
       0: aload_1
       1: ifnonnull     9
       4: bipush        9
       6: invokestatic  #110                // Method $$$reportNull$$$0:(I)V
       9: aload_0
      10: aload_1
      11: invokestatic  #113                // Method createConcurrentHashMap:()Ljava/util/concurrent/ConcurrentMap;
      14: invokevirtual #114                // Method createMemoizedFunction:(Lkotlin/jvm/functions/Function1;Ljava/util/concurrent/ConcurrentMap;)Lkotlin/reflect/jvm/internal/impl/storage/MemoizedFunctionToNotNull;
      17: dup
      18: ifnonnull     26
      21: bipush        10
      23: invokestatic  #110                // Method $$$reportNull$$$0:(I)V
      26: areturn

  public <K, V> kotlin.reflect.jvm.internal.impl.storage.MemoizedFunctionToNotNull<K, V> createMemoizedFunction(kotlin.jvm.functions.Function1<? super K, ? extends V>, java.util.concurrent.ConcurrentMap<K, java.lang.Object>);
    Code:
       0: aload_1
       1: ifnonnull     9
       4: bipush        14
       6: invokestatic  #110                // Method $$$reportNull$$$0:(I)V
       9: aload_2
      10: ifnonnull     18
      13: bipush        15
      15: invokestatic  #110                // Method $$$reportNull$$$0:(I)V
      18: new           #71                 // class kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$MapBasedMemoizedFunctionToNotNull
      21: dup
      22: aload_0
      23: aload_2
      24: aload_1
      25: invokespecial #125                // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$MapBasedMemoizedFunctionToNotNull."<init>":(Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;Ljava/util/concurrent/ConcurrentMap;Lkotlin/jvm/functions/Function1;)V
      28: areturn

  public <K, V> kotlin.reflect.jvm.internal.impl.storage.MemoizedFunctionToNullable<K, V> createMemoizedFunctionWithNullableValues(kotlin.jvm.functions.Function1<? super K, ? extends V>);
    Code:
       0: aload_1
       1: ifnonnull     9
       4: bipush        19
       6: invokestatic  #110                // Method $$$reportNull$$$0:(I)V
       9: aload_0
      10: aload_1
      11: invokestatic  #113                // Method createConcurrentHashMap:()Ljava/util/concurrent/ConcurrentMap;
      14: invokevirtual #115                // Method createMemoizedFunctionWithNullableValues:(Lkotlin/jvm/functions/Function1;Ljava/util/concurrent/ConcurrentMap;)Lkotlin/reflect/jvm/internal/impl/storage/MemoizedFunctionToNullable;
      17: dup
      18: ifnonnull     26
      21: bipush        20
      23: invokestatic  #110                // Method $$$reportNull$$$0:(I)V
      26: areturn

  public <K, V> kotlin.reflect.jvm.internal.impl.storage.MemoizedFunctionToNullable<K, V> createMemoizedFunctionWithNullableValues(kotlin.jvm.functions.Function1<? super K, ? extends V>, java.util.concurrent.ConcurrentMap<K, java.lang.Object>);
    Code:
       0: aload_1
       1: ifnonnull     9
       4: bipush        21
       6: invokestatic  #110                // Method $$$reportNull$$$0:(I)V
       9: aload_2
      10: ifnonnull     18
      13: bipush        22
      15: invokestatic  #110                // Method $$$reportNull$$$0:(I)V
      18: new           #70                 // class kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$MapBasedMemoizedFunction
      21: dup
      22: aload_0
      23: aload_2
      24: aload_1
      25: invokespecial #124                // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$MapBasedMemoizedFunction."<init>":(Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;Ljava/util/concurrent/ConcurrentMap;Lkotlin/jvm/functions/Function1;)V
      28: areturn

  public <T> kotlin.reflect.jvm.internal.impl.storage.NotNullLazyValue<T> createLazyValue(kotlin.jvm.functions.Function0<? extends T>);
    Code:
       0: aload_1
       1: ifnonnull     9
       4: bipush        23
       6: invokestatic  #110                // Method $$$reportNull$$$0:(I)V
       9: new           #68                 // class kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$LockBasedNotNullLazyValue
      12: dup
      13: aload_0
      14: aload_1
      15: invokespecial #123                // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$LockBasedNotNullLazyValue."<init>":(Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;Lkotlin/jvm/functions/Function0;)V
      18: areturn

  public <T> kotlin.reflect.jvm.internal.impl.storage.NotNullLazyValue<T> createRecursionTolerantLazyValue(kotlin.jvm.functions.Function0<? extends T>, T);
    Code:
       0: aload_1
       1: ifnonnull     9
       4: bipush        26
       6: invokestatic  #110                // Method $$$reportNull$$$0:(I)V
       9: aload_2
      10: ifnonnull     18
      13: bipush        27
      15: invokestatic  #110                // Method $$$reportNull$$$0:(I)V
      18: new           #60                 // class kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$4
      21: dup
      22: aload_0
      23: aload_0
      24: aload_1
      25: aload_2
      26: invokespecial #118                // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$4."<init>":(Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;Lkotlin/jvm/functions/Function0;Ljava/lang/Object;)V
      29: areturn

  public <T> kotlin.reflect.jvm.internal.impl.storage.NotNullLazyValue<T> createLazyValueWithPostCompute(kotlin.jvm.functions.Function0<? extends T>, kotlin.jvm.functions.Function1<? super java.lang.Boolean, ? extends T>, kotlin.jvm.functions.Function1<? super T, kotlin.Unit>);
    Code:
       0: aload_1
       1: ifnonnull     9
       4: bipush        28
       6: invokestatic  #110                // Method $$$reportNull$$$0:(I)V
       9: aload_3
      10: ifnonnull     18
      13: bipush        29
      15: invokestatic  #110                // Method $$$reportNull$$$0:(I)V
      18: new           #61                 // class kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$5
      21: dup
      22: aload_0
      23: aload_0
      24: aload_1
      25: aload_2
      26: aload_3
      27: invokespecial #119                // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$5."<init>":(Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)V
      30: areturn

  public <T> kotlin.reflect.jvm.internal.impl.storage.NullableLazyValue<T> createNullableLazyValue(kotlin.jvm.functions.Function0<? extends T>);
    Code:
       0: aload_1
       1: ifnonnull     9
       4: bipush        30
       6: invokestatic  #110                // Method $$$reportNull$$$0:(I)V
       9: new           #66                 // class kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$LockBasedLazyValue
      12: dup
      13: aload_0
      14: aload_1
      15: invokespecial #122                // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$LockBasedLazyValue."<init>":(Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;Lkotlin/jvm/functions/Function0;)V
      18: areturn

  public <T> T compute(kotlin.jvm.functions.Function0<? extends T>);
    Code:
       0: aload_1
       1: ifnonnull     9
       4: bipush        34
       6: invokestatic  #110                // Method $$$reportNull$$$0:(I)V
       9: aload_0
      10: getfield      #86                 // Field lock:Lkotlin/reflect/jvm/internal/impl/storage/SimpleLock;
      13: invokeinterface #133,  1          // InterfaceMethod kotlin/reflect/jvm/internal/impl/storage/SimpleLock.lock:()V
      18: aload_1
      19: invokeinterface #131,  1          // InterfaceMethod kotlin/jvm/functions/Function0.invoke:()Ljava/lang/Object;
      24: astore_2
      25: aload_0
      26: getfield      #86                 // Field lock:Lkotlin/reflect/jvm/internal/impl/storage/SimpleLock;
      29: invokeinterface #134,  1          // InterfaceMethod kotlin/reflect/jvm/internal/impl/storage/SimpleLock.unlock:()V
      34: aload_2
      35: areturn
      36: astore_2
      37: aload_0
      38: getfield      #85                 // Field exceptionHandlingStrategy:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$ExceptionHandlingStrategy;
      41: aload_2
      42: invokeinterface #132,  2          // InterfaceMethod kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$ExceptionHandlingStrategy.handleException:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      47: athrow
      48: astore_3
      49: aload_0
      50: getfield      #86                 // Field lock:Lkotlin/reflect/jvm/internal/impl/storage/SimpleLock;
      53: invokeinterface #134,  1          // InterfaceMethod kotlin/reflect/jvm/internal/impl/storage/SimpleLock.unlock:()V
      58: aload_3
      59: athrow
    Exception table:
       from    to  target type
          18    25    36   Class java/lang/Throwable
          18    25    48   any
          36    49    48   any

  private static <K> java.util.concurrent.ConcurrentMap<K, java.lang.Object> createConcurrentHashMap();
    Code:
       0: new           #53                 // class java/util/concurrent/ConcurrentHashMap
       3: dup
       4: iconst_3
       5: fconst_1
       6: iconst_2
       7: invokespecial #109                // Method java/util/concurrent/ConcurrentHashMap."<init>":(IFI)V
      10: areturn

  protected <K, V> kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$RecursionDetectedResult<V> recursionDetectedDefault(java.lang.String, K);
    Code:
       0: aload_1
       1: ifnonnull     9
       4: bipush        35
       6: invokestatic  #110                // Method $$$reportNull$$$0:(I)V
       9: new           #39                 // class java/lang/AssertionError
      12: dup
      13: new           #49                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #102                // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #11                 // String Recursion detected
      22: invokevirtual #104                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_1
      26: invokevirtual #104                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_2
      30: ifnonnull     38
      33: ldc           #1                  // String
      35: goto          57
      38: new           #49                 // class java/lang/StringBuilder
      41: dup
      42: invokespecial #102                // Method java/lang/StringBuilder."<init>":()V
      45: ldc           #29                 // String on input:
      47: invokevirtual #104                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_2
      51: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      54: invokevirtual #105                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: invokevirtual #104                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: ldc           #3                  // String  under
      62: invokevirtual #104                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload_0
      66: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      69: invokevirtual #105                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: invokespecial #89                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      75: invokestatic  #116                // Method sanitizeStackTrace:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      78: checkcast     #39                 // class java/lang/AssertionError
      81: athrow

  private static <T extends java.lang.Throwable> T sanitizeStackTrace(T);
    Code:
       0: aload_0
       1: ifnonnull     9
       4: bipush        36
       6: invokestatic  #110                // Method $$$reportNull$$$0:(I)V
       9: aload_0
      10: invokevirtual #106                // Method java/lang/Throwable.getStackTrace:()[Ljava/lang/StackTraceElement;
      13: astore_1
      14: aload_1
      15: arraylength
      16: istore_2
      17: iconst_m1
      18: istore_3
      19: iconst_0
      20: istore        4
      22: iload         4
      24: iload_2
      25: if_icmpge     56
      28: aload_1
      29: iload         4
      31: aaload
      32: invokevirtual #99                 // Method java/lang/StackTraceElement.getClassName:()Ljava/lang/String;
      35: getstatic     #83                 // Field PACKAGE_NAME:Ljava/lang/String;
      38: invokevirtual #101                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      41: ifne          50
      44: iload         4
      46: istore_3
      47: goto          56
      50: iinc          4, 1
      53: goto          22
      56: getstatic     #81                 // Field $assertionsDisabled:Z
      59: ifne          76
      62: iload_3
      63: ifge          76
      66: new           #39                 // class java/lang/AssertionError
      69: dup
      70: ldc           #12                 // String This method should only be called on exceptions created in LockBasedStorageManager
      72: invokespecial #89                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      75: athrow
      76: aload_1
      77: invokestatic  #108                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      80: iload_3
      81: iload_2
      82: invokeinterface #129,  3          // InterfaceMethod java/util/List.subList:(II)Ljava/util/List;
      87: astore        4
      89: aload_0
      90: aload         4
      92: aload         4
      94: invokeinterface #128,  1          // InterfaceMethod java/util/List.size:()I
      99: anewarray     #47                 // class java/lang/StackTraceElement
     102: invokeinterface #130,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     107: checkcast     #38                 // class "[Ljava/lang/StackTraceElement;"
     110: invokevirtual #107                // Method java/lang/Throwable.setStackTrace:([Ljava/lang/StackTraceElement;)V
     113: aload_0
     114: dup
     115: ifnonnull     123
     118: bipush        37
     120: invokestatic  #110                // Method $$$reportNull$$$0:(I)V
     123: areturn

  public <K, V> kotlin.reflect.jvm.internal.impl.storage.CacheWithNullableValues<K, V> createCacheWithNullableValues();
    Code:
       0: new           #63                 // class kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$CacheWithNullableValuesBasedOnMemoizedFunction
       3: dup
       4: aload_0
       5: invokestatic  #113                // Method createConcurrentHashMap:()Ljava/util/concurrent/ConcurrentMap;
       8: aconst_null
       9: invokespecial #121                // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$CacheWithNullableValuesBasedOnMemoizedFunction."<init>":(Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;Ljava/util/concurrent/ConcurrentMap;Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$1;)V
      12: areturn

  public <K, V> kotlin.reflect.jvm.internal.impl.storage.CacheWithNotNullValues<K, V> createCacheWithNotNullValues();
    Code:
       0: new           #62                 // class kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$CacheWithNotNullValuesBasedOnMemoizedFunction
       3: dup
       4: aload_0
       5: invokestatic  #113                // Method createConcurrentHashMap:()Ljava/util/concurrent/ConcurrentMap;
       8: aconst_null
       9: invokespecial #120                // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$CacheWithNotNullValuesBasedOnMemoizedFunction."<init>":(Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;Ljava/util/concurrent/ConcurrentMap;Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$1;)V
      12: areturn

  kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager(java.lang.String, kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$ExceptionHandlingStrategy, kotlin.reflect.jvm.internal.impl.storage.SimpleLock, kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #112                // Method "<init>":(Ljava/lang/String;Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$ExceptionHandlingStrategy;Lkotlin/reflect/jvm/internal/impl/storage/SimpleLock;)V
       7: return

  static kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$ExceptionHandlingStrategy access$100(kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager);
    Code:
       0: aload_0
       1: getfield      #85                 // Field exceptionHandlingStrategy:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$ExceptionHandlingStrategy;
       4: areturn

  static java.lang.Throwable access$200(java.lang.Throwable);
    Code:
       0: aload_0
       1: invokestatic  #116                // Method sanitizeStackTrace:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
       4: areturn

  static {};
    Code:
       0: ldc           #58                 // class kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager
       2: invokevirtual #90                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #81                 // Field $assertionsDisabled:Z
      16: ldc           #58                 // class kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager
      18: invokevirtual #91                 // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
      21: ldc           #5                  // String .
      23: ldc           #1                  // String
      25: invokestatic  #127                // Method kotlin/text/StringsKt.substringBeforeLast:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      28: putstatic     #83                 // Field PACKAGE_NAME:Ljava/lang/String;
      31: new           #59                 // class kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$1
      34: dup
      35: ldc           #10                 // String NO_LOCKS
      37: getstatic     #87                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$ExceptionHandlingStrategy.THROW:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$ExceptionHandlingStrategy;
      40: getstatic     #80                 // Field kotlin/reflect/jvm/internal/impl/storage/EmptySimpleLock.INSTANCE:Lkotlin/reflect/jvm/internal/impl/storage/EmptySimpleLock;
      43: invokespecial #117                // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$1."<init>":(Ljava/lang/String;Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$ExceptionHandlingStrategy;Lkotlin/reflect/jvm/internal/impl/storage/SimpleLock;)V
      46: putstatic     #82                 // Field NO_LOCKS:Lkotlin/reflect/jvm/internal/impl/storage/StorageManager;
      49: return

  private static void $$$reportNull$$$0(int);
    Code:
       0: iload_0
       1: tableswitch   { // 0 to 37
                     0: 168
                     1: 168
                     2: 168
                     3: 168
                     4: 168
                     5: 168
                     6: 168
                     7: 168
                     8: 168
                     9: 168
                    10: 173
                    11: 168
                    12: 168
                    13: 173
                    14: 168
                    15: 168
                    16: 168
                    17: 168
                    18: 168
                    19: 168
                    20: 173
                    21: 168
                    22: 168
                    23: 168
                    24: 168
                    25: 168
                    26: 168
                    27: 168
                    28: 168
                    29: 168
                    30: 168
                    31: 168
                    32: 168
                    33: 168
                    34: 168
                    35: 168
                    36: 168
                    37: 173
               default: 168
          }
     168: ldc           #9                  // String Argument for @NotNull parameter \'%s\' of %s.%s must not be null
     170: goto          178
     173: ldc           #8                  // String @NotNull method %s.%s must not return null
     175: goto          178
     178: iload_0
     179: tableswitch   { // 0 to 37
                     0: 344
                     1: 344
                     2: 344
                     3: 344
                     4: 344
                     5: 344
                     6: 344
                     7: 344
                     8: 344
                     9: 344
                    10: 348
                    11: 344
                    12: 344
                    13: 348
                    14: 344
                    15: 344
                    16: 344
                    17: 344
                    18: 344
                    19: 344
                    20: 348
                    21: 344
                    22: 344
                    23: 344
                    24: 344
                    25: 344
                    26: 344
                    27: 344
                    28: 344
                    29: 344
                    30: 344
                    31: 344
                    32: 344
                    33: 344
                    34: 344
                    35: 344
                    36: 344
                    37: 348
               default: 344
          }
     344: iconst_3
     345: goto          352
     348: iconst_2
     349: goto          352
     352: anewarray     #44                 // class java/lang/Object
     355: iload_0
     356: tableswitch   { // 0 to 37
                     0: 524
                     1: 532
                     2: 524
                     3: 532
                     4: 524
                     5: 532
                     6: 540
                     7: 524
                     8: 532
                     9: 548
                    10: 556
                    11: 548
                    12: 564
                    13: 556
                    14: 548
                    15: 572
                    16: 548
                    17: 564
                    18: 572
                    19: 548
                    20: 556
                    21: 548
                    22: 572
                    23: 580
                    24: 580
                    25: 564
                    26: 580
                    27: 564
                    28: 580
                    29: 588
                    30: 580
                    31: 580
                    32: 580
                    33: 588
                    34: 580
                    35: 596
                    36: 604
                    37: 556
               default: 524
          }
     524: dup
     525: iconst_0
     526: ldc           #24                 // String debugText
     528: aastore
     529: goto          612
     532: dup
     533: iconst_0
     534: ldc           #25                 // String exceptionHandlingStrategy
     536: aastore
     537: goto          612
     540: dup
     541: iconst_0
     542: ldc           #27                 // String lock
     544: aastore
     545: goto          612
     548: dup
     549: iconst_0
     550: ldc           #14                 // String compute
     552: aastore
     553: goto          612
     556: dup
     557: iconst_0
     558: ldc           #26                 // String kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager
     560: aastore
     561: goto          612
     564: dup
     565: iconst_0
     566: ldc           #30                 // String onRecursiveCall
     568: aastore
     569: goto          612
     572: dup
     573: iconst_0
     574: ldc           #28                 // String map
     576: aastore
     577: goto          612
     580: dup
     581: iconst_0
     582: ldc           #13                 // String computable
     584: aastore
     585: goto          612
     588: dup
     589: iconst_0
     590: ldc           #31                 // String postCompute
     592: aastore
     593: goto          612
     596: dup
     597: iconst_0
     598: ldc           #35                 // String source
     600: aastore
     601: goto          612
     604: dup
     605: iconst_0
     606: ldc           #36                 // String throwable
     608: aastore
     609: goto          612
     612: iload_0
     613: tableswitch   { // 0 to 37
                     0: 780
                     1: 780
                     2: 780
                     3: 780
                     4: 780
                     5: 780
                     6: 780
                     7: 780
                     8: 780
                     9: 780
                    10: 788
                    11: 780
                    12: 780
                    13: 788
                    14: 780
                    15: 780
                    16: 780
                    17: 780
                    18: 780
                    19: 780
                    20: 796
                    21: 780
                    22: 780
                    23: 780
                    24: 780
                    25: 780
                    26: 780
                    27: 780
                    28: 780
                    29: 780
                    30: 780
                    31: 780
                    32: 780
                    33: 780
                    34: 780
                    35: 780
                    36: 780
                    37: 804
               default: 780
          }
     780: dup
     781: iconst_1
     782: ldc           #26                 // String kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager
     784: aastore
     785: goto          812
     788: dup
     789: iconst_1
     790: ldc           #17                 // String createMemoizedFunction
     792: aastore
     793: goto          812
     796: dup
     797: iconst_1
     798: ldc           #18                 // String createMemoizedFunctionWithNullableValues
     800: aastore
     801: goto          812
     804: dup
     805: iconst_1
     806: ldc           #34                 // String sanitizeStackTrace
     808: aastore
     809: goto          812
     812: iload_0
     813: tableswitch   { // 0 to 37
                     0: 980
                     1: 980
                     2: 980
                     3: 980
                     4: 988
                     5: 988
                     6: 988
                     7: 996
                     8: 996
                     9: 1004
                    10: 1012
                    11: 1004
                    12: 1004
                    13: 1012
                    14: 1004
                    15: 1004
                    16: 1004
                    17: 1004
                    18: 1004
                    19: 1015
                    20: 1012
                    21: 1015
                    22: 1015
                    23: 1023
                    24: 1023
                    25: 1023
                    26: 1031
                    27: 1031
                    28: 1039
                    29: 1039
                    30: 1047
                    31: 1055
                    32: 1063
                    33: 1063
                    34: 1071
                    35: 1079
                    36: 1087
                    37: 1012
               default: 980
          }
     980: dup
     981: iconst_2
     982: ldc           #23                 // String createWithExceptionHandling
     984: aastore
     985: goto          1095
     988: dup
     989: iconst_2
     990: ldc           #6                  // String <init>
     992: aastore
     993: goto          1095
     996: dup
     997: iconst_2
     998: ldc           #33                 // String replaceExceptionHandling
    1000: aastore
    1001: goto          1095
    1004: dup
    1005: iconst_2
    1006: ldc           #17                 // String createMemoizedFunction
    1008: aastore
    1009: goto          1095
    1012: goto          1095
    1015: dup
    1016: iconst_2
    1017: ldc           #18                 // String createMemoizedFunctionWithNullableValues
    1019: aastore
    1020: goto          1095
    1023: dup
    1024: iconst_2
    1025: ldc           #15                 // String createLazyValue
    1027: aastore
    1028: goto          1095
    1031: dup
    1032: iconst_2
    1033: ldc           #21                 // String createRecursionTolerantLazyValue
    1035: aastore
    1036: goto          1095
    1039: dup
    1040: iconst_2
    1041: ldc           #16                 // String createLazyValueWithPostCompute
    1043: aastore
    1044: goto          1095
    1047: dup
    1048: iconst_2
    1049: ldc           #19                 // String createNullableLazyValue
    1051: aastore
    1052: goto          1095
    1055: dup
    1056: iconst_2
    1057: ldc           #22                 // String createRecursionTolerantNullableLazyValue
    1059: aastore
    1060: goto          1095
    1063: dup
    1064: iconst_2
    1065: ldc           #20                 // String createNullableLazyValueWithPostCompute
    1067: aastore
    1068: goto          1095
    1071: dup
    1072: iconst_2
    1073: ldc           #14                 // String compute
    1075: aastore
    1076: goto          1095
    1079: dup
    1080: iconst_2
    1081: ldc           #32                 // String recursionDetectedDefault
    1083: aastore
    1084: goto          1095
    1087: dup
    1088: iconst_2
    1089: ldc           #34                 // String sanitizeStackTrace
    1091: aastore
    1092: goto          1095
    1095: invokestatic  #100                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
    1098: iload_0
    1099: tableswitch   { // 0 to 37
                     0: 1264
                     1: 1264
                     2: 1264
                     3: 1264
                     4: 1264
                     5: 1264
                     6: 1264
                     7: 1264
                     8: 1264
                     9: 1264
                    10: 1275
                    11: 1264
                    12: 1264
                    13: 1275
                    14: 1264
                    15: 1264
                    16: 1264
                    17: 1264
                    18: 1264
                    19: 1264
                    20: 1275
                    21: 1264
                    22: 1264
                    23: 1264
                    24: 1264
                    25: 1264
                    26: 1264
                    27: 1264
                    28: 1264
                    29: 1264
                    30: 1264
                    31: 1264
                    32: 1264
                    33: 1264
                    34: 1264
                    35: 1264
                    36: 1264
                    37: 1275
               default: 1264
          }
    1264: new           #41                 // class java/lang/IllegalArgumentException
    1267: dup_x1
    1268: swap
    1269: invokespecial #93                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
    1272: goto          1286
    1275: new           #42                 // class java/lang/IllegalStateException
    1278: dup_x1
    1279: swap
    1280: invokespecial #94                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
    1283: goto          1286
    1286: athrow
}
