Compiled from "MathJVM.kt"
class kotlin.math.MathKt__MathJVMKt extends kotlin.math.MathKt__MathHKt {
  private static final double sin(double);
    Code:
       0: dload_0
       1: invokestatic  #14                 // Method java/lang/Math.sin:(D)D
       4: dreturn

  private static final double cos(double);
    Code:
       0: dload_0
       1: invokestatic  #19                 // Method java/lang/Math.cos:(D)D
       4: dreturn

  private static final double tan(double);
    Code:
       0: dload_0
       1: invokestatic  #22                 // Method java/lang/Math.tan:(D)D
       4: dreturn

  private static final double asin(double);
    Code:
       0: dload_0
       1: invokestatic  #25                 // Method java/lang/Math.asin:(D)D
       4: dreturn

  private static final double acos(double);
    Code:
       0: dload_0
       1: invokestatic  #28                 // Method java/lang/Math.acos:(D)D
       4: dreturn

  private static final double atan(double);
    Code:
       0: dload_0
       1: invokestatic  #31                 // Method java/lang/Math.atan:(D)D
       4: dreturn

  private static final double atan2(double, double);
    Code:
       0: dload_0
       1: dload_2
       2: invokestatic  #35                 // Method java/lang/Math.atan2:(DD)D
       5: dreturn

  private static final double sinh(double);
    Code:
       0: dload_0
       1: invokestatic  #39                 // Method java/lang/Math.sinh:(D)D
       4: dreturn

  private static final double cosh(double);
    Code:
       0: dload_0
       1: invokestatic  #42                 // Method java/lang/Math.cosh:(D)D
       4: dreturn

  private static final double tanh(double);
    Code:
       0: dload_0
       1: invokestatic  #45                 // Method java/lang/Math.tanh:(D)D
       4: dreturn

  public static final double asinh(double);
    Code:
       0: nop
       1: dload_0
       2: getstatic     #51                 // Field kotlin/math/Constants.taylor_n_bound:D
       5: dcmpl
       6: iflt          71
       9: dload_0
      10: getstatic     #54                 // Field kotlin/math/Constants.upper_taylor_n_bound:D
      13: dcmpl
      14: ifle          54
      17: dload_0
      18: getstatic     #57                 // Field kotlin/math/Constants.upper_taylor_2_bound:D
      21: dcmpl
      22: ifle          36
      25: dload_0
      26: invokestatic  #60                 // Method java/lang/Math.log:(D)D
      29: getstatic     #63                 // Field kotlin/math/Constants.LN2:D
      32: dadd
      33: goto          115
      36: dload_0
      37: iconst_2
      38: i2d
      39: dmul
      40: iconst_1
      41: i2d
      42: dload_0
      43: iconst_2
      44: i2d
      45: dmul
      46: ddiv
      47: dadd
      48: invokestatic  #60                 // Method java/lang/Math.log:(D)D
      51: goto          115
      54: dload_0
      55: dload_0
      56: dload_0
      57: dmul
      58: iconst_1
      59: i2d
      60: dadd
      61: invokestatic  #66                 // Method java/lang/Math.sqrt:(D)D
      64: dadd
      65: invokestatic  #60                 // Method java/lang/Math.log:(D)D
      68: goto          115
      71: dload_0
      72: getstatic     #51                 // Field kotlin/math/Constants.taylor_n_bound:D
      75: dneg
      76: dcmpg
      77: ifgt          89
      80: dload_0
      81: dneg
      82: invokestatic  #70                 // Method kotlin/math/MathKt.asinh:(D)D
      85: dneg
      86: goto          115
      89: dload_0
      90: dstore_2
      91: dload_0
      92: invokestatic  #73                 // Method java/lang/Math.abs:(D)D
      95: getstatic     #76                 // Field kotlin/math/Constants.taylor_2_bound:D
      98: dcmpl
      99: iflt          114
     102: dload_2
     103: dload_0
     104: dload_0
     105: dmul
     106: dload_0
     107: dmul
     108: bipush        6
     110: i2d
     111: ddiv
     112: dsub
     113: dstore_2
     114: dload_2
     115: dreturn

  public static final double acosh(double);
    Code:
       0: nop
       1: dload_0
       2: dconst_1
       3: dcmpg
       4: ifge          13
       7: ldc2_w        #79                 // double NaNd
      10: goto          102
      13: dload_0
      14: getstatic     #57                 // Field kotlin/math/Constants.upper_taylor_2_bound:D
      17: dcmpl
      18: ifle          32
      21: dload_0
      22: invokestatic  #60                 // Method java/lang/Math.log:(D)D
      25: getstatic     #63                 // Field kotlin/math/Constants.LN2:D
      28: dadd
      29: goto          102
      32: dload_0
      33: iconst_1
      34: i2d
      35: dsub
      36: getstatic     #51                 // Field kotlin/math/Constants.taylor_n_bound:D
      39: dcmpl
      40: iflt          60
      43: dload_0
      44: dload_0
      45: dload_0
      46: dmul
      47: iconst_1
      48: i2d
      49: dsub
      50: invokestatic  #66                 // Method java/lang/Math.sqrt:(D)D
      53: dadd
      54: invokestatic  #60                 // Method java/lang/Math.log:(D)D
      57: goto          102
      60: dload_0
      61: iconst_1
      62: i2d
      63: dsub
      64: invokestatic  #66                 // Method java/lang/Math.sqrt:(D)D
      67: dstore_2
      68: dload_2
      69: dstore        4
      71: dload_2
      72: getstatic     #76                 // Field kotlin/math/Constants.taylor_2_bound:D
      75: dcmpl
      76: iflt          93
      79: dload         4
      81: dload_2
      82: dload_2
      83: dmul
      84: dload_2
      85: dmul
      86: bipush        12
      88: i2d
      89: ddiv
      90: dsub
      91: dstore        4
      93: ldc2_w        #81                 // double 2.0d
      96: invokestatic  #66                 // Method java/lang/Math.sqrt:(D)D
      99: dload         4
     101: dmul
     102: dreturn

  public static final double atanh(double);
    Code:
       0: dload_0
       1: invokestatic  #73                 // Method java/lang/Math.abs:(D)D
       4: getstatic     #51                 // Field kotlin/math/Constants.taylor_n_bound:D
       7: dcmpg
       8: ifge          37
      11: dload_0
      12: dstore_2
      13: dload_0
      14: invokestatic  #73                 // Method java/lang/Math.abs:(D)D
      17: getstatic     #76                 // Field kotlin/math/Constants.taylor_2_bound:D
      20: dcmpl
      21: ifle          35
      24: dload_2
      25: dload_0
      26: dload_0
      27: dmul
      28: dload_0
      29: dmul
      30: iconst_3
      31: i2d
      32: ddiv
      33: dadd
      34: dstore_2
      35: dload_2
      36: dreturn
      37: iconst_1
      38: i2d
      39: dload_0
      40: dadd
      41: iconst_1
      42: i2d
      43: dload_0
      44: dsub
      45: ddiv
      46: invokestatic  #60                 // Method java/lang/Math.log:(D)D
      49: iconst_2
      50: i2d
      51: ddiv
      52: dreturn

  private static final double hypot(double, double);
    Code:
       0: dload_0
       1: dload_2
       2: invokestatic  #86                 // Method java/lang/Math.hypot:(DD)D
       5: dreturn

  private static final double sqrt(double);
    Code:
       0: dload_0
       1: invokestatic  #66                 // Method java/lang/Math.sqrt:(D)D
       4: dreturn

  private static final double exp(double);
    Code:
       0: dload_0
       1: invokestatic  #89                 // Method java/lang/Math.exp:(D)D
       4: dreturn

  private static final double expm1(double);
    Code:
       0: dload_0
       1: invokestatic  #92                 // Method java/lang/Math.expm1:(D)D
       4: dreturn

  public static final double log(double, double);
    Code:
       0: dload_2
       1: dconst_0
       2: dcmpg
       3: ifle          20
       6: dload_2
       7: dconst_1
       8: dcmpg
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ifeq          24
      20: ldc2_w        #79                 // double NaNd
      23: dreturn
      24: dload_0
      25: invokestatic  #60                 // Method java/lang/Math.log:(D)D
      28: dload_2
      29: invokestatic  #60                 // Method java/lang/Math.log:(D)D
      32: ddiv
      33: dreturn

  private static final double ln(double);
    Code:
       0: dload_0
       1: invokestatic  #60                 // Method java/lang/Math.log:(D)D
       4: dreturn

  private static final double log10(double);
    Code:
       0: dload_0
       1: invokestatic  #97                 // Method java/lang/Math.log10:(D)D
       4: dreturn

  public static final double log2(double);
    Code:
       0: dload_0
       1: invokestatic  #60                 // Method java/lang/Math.log:(D)D
       4: getstatic     #63                 // Field kotlin/math/Constants.LN2:D
       7: ddiv
       8: dreturn

  private static final double ln1p(double);
    Code:
       0: dload_0
       1: invokestatic  #102                // Method java/lang/Math.log1p:(D)D
       4: dreturn

  private static final double ceil(double);
    Code:
       0: dload_0
       1: invokestatic  #105                // Method java/lang/Math.ceil:(D)D
       4: dreturn

  private static final double floor(double);
    Code:
       0: dload_0
       1: invokestatic  #108                // Method java/lang/Math.floor:(D)D
       4: dreturn

  public static final double truncate(double);
    Code:
       0: nop
       1: dload_0
       2: invokestatic  #115                // Method java/lang/Double.isNaN:(D)Z
       5: ifne          15
       8: dload_0
       9: invokestatic  #118                // Method java/lang/Double.isInfinite:(D)Z
      12: ifeq          19
      15: dload_0
      16: goto          36
      19: dload_0
      20: dconst_0
      21: dcmpl
      22: ifle          32
      25: dload_0
      26: invokestatic  #108                // Method java/lang/Math.floor:(D)D
      29: goto          36
      32: dload_0
      33: invokestatic  #105                // Method java/lang/Math.ceil:(D)D
      36: dreturn

  private static final double round(double);
    Code:
       0: dload_0
       1: invokestatic  #122                // Method java/lang/Math.rint:(D)D
       4: dreturn

  private static final double abs(double);
    Code:
       0: dload_0
       1: invokestatic  #73                 // Method java/lang/Math.abs:(D)D
       4: dreturn

  private static final double sign(double);
    Code:
       0: dload_0
       1: invokestatic  #126                // Method java/lang/Math.signum:(D)D
       4: dreturn

  private static final double min(double, double);
    Code:
       0: dload_0
       1: dload_2
       2: invokestatic  #129                // Method java/lang/Math.min:(DD)D
       5: dreturn

  private static final double max(double, double);
    Code:
       0: dload_0
       1: dload_2
       2: invokestatic  #134                // Method java/lang/Math.max:(DD)D
       5: dreturn

  private static final double cbrt(double);
    Code:
       0: dload_0
       1: invokestatic  #141                // Method java/lang/Math.cbrt:(D)D
       4: dreturn

  private static final double pow(double, double);
    Code:
       0: dload_0
       1: dload_2
       2: invokestatic  #144                // Method java/lang/Math.pow:(DD)D
       5: dreturn

  private static final double pow(double, int);
    Code:
       0: dload_0
       1: iload_2
       2: i2d
       3: invokestatic  #144                // Method java/lang/Math.pow:(DD)D
       6: dreturn

  private static final double IEEErem(double, double);
    Code:
       0: dload_0
       1: dload_2
       2: invokestatic  #152                // Method java/lang/Math.IEEEremainder:(DD)D
       5: dreturn

  private static final double getAbsoluteValue(double);
    Code:
       0: dload_0
       1: invokestatic  #73                 // Method java/lang/Math.abs:(D)D
       4: dreturn

  public static void getAbsoluteValue$annotations(double);
    Code:
       0: return

  private static final double getSign(double);
    Code:
       0: dload_0
       1: invokestatic  #126                // Method java/lang/Math.signum:(D)D
       4: dreturn

  public static void getSign$annotations(double);
    Code:
       0: return

  private static final double withSign(double, double);
    Code:
       0: dload_0
       1: dload_2
       2: invokestatic  #166                // Method java/lang/Math.copySign:(DD)D
       5: dreturn

  private static final double withSign(double, int);
    Code:
       0: dload_0
       1: iload_2
       2: i2d
       3: invokestatic  #166                // Method java/lang/Math.copySign:(DD)D
       6: dreturn

  private static final double getUlp(double);
    Code:
       0: dload_0
       1: invokestatic  #171                // Method java/lang/Math.ulp:(D)D
       4: dreturn

  public static void getUlp$annotations(double);
    Code:
       0: return

  private static final double nextUp(double);
    Code:
       0: dload_0
       1: invokestatic  #176                // Method java/lang/Math.nextUp:(D)D
       4: dreturn

  private static final double nextDown(double);
    Code:
       0: dload_0
       1: ldc2_w        #179                // double -Infinityd
       4: invokestatic  #183                // Method java/lang/Math.nextAfter:(DD)D
       7: dreturn

  private static final double nextTowards(double, double);
    Code:
       0: dload_0
       1: dload_2
       2: invokestatic  #183                // Method java/lang/Math.nextAfter:(DD)D
       5: dreturn

  public static final int roundToInt(double);
    Code:
       0: nop
       1: dload_0
       2: invokestatic  #115                // Method java/lang/Double.isNaN:(D)Z
       5: ifeq          18
       8: new           #191                // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #193                // String Cannot round NaN value.
      14: invokespecial #197                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: dload_0
      19: ldc2_w        #198                // double 2.147483647E9d
      22: dcmpl
      23: ifle          31
      26: ldc           #200                // int 2147483647
      28: goto          49
      31: dload_0
      32: ldc2_w        #201                // double -2.147483648E9d
      35: dcmpg
      36: ifge          44
      39: ldc           #203                // int -2147483648
      41: goto          49
      44: dload_0
      45: invokestatic  #206                // Method java/lang/Math.round:(D)J
      48: l2i
      49: ireturn

  public static final long roundToLong(double);
    Code:
       0: dload_0
       1: invokestatic  #115                // Method java/lang/Double.isNaN:(D)Z
       4: ifeq          17
       7: new           #191                // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #193                // String Cannot round NaN value.
      13: invokespecial #197                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: dload_0
      18: invokestatic  #206                // Method java/lang/Math.round:(D)J
      21: lreturn

  private static final float sin(float);
    Code:
       0: fload_0
       1: f2d
       2: invokestatic  #14                 // Method java/lang/Math.sin:(D)D
       5: d2f
       6: freturn

  private static final float cos(float);
    Code:
       0: fload_0
       1: f2d
       2: invokestatic  #19                 // Method java/lang/Math.cos:(D)D
       5: d2f
       6: freturn

  private static final float tan(float);
    Code:
       0: fload_0
       1: f2d
       2: invokestatic  #22                 // Method java/lang/Math.tan:(D)D
       5: d2f
       6: freturn

  private static final float asin(float);
    Code:
       0: fload_0
       1: f2d
       2: invokestatic  #25                 // Method java/lang/Math.asin:(D)D
       5: d2f
       6: freturn

  private static final float acos(float);
    Code:
       0: fload_0
       1: f2d
       2: invokestatic  #28                 // Method java/lang/Math.acos:(D)D
       5: d2f
       6: freturn

  private static final float atan(float);
    Code:
       0: fload_0
       1: f2d
       2: invokestatic  #31                 // Method java/lang/Math.atan:(D)D
       5: d2f
       6: freturn

  private static final float atan2(float, float);
    Code:
       0: fload_0
       1: f2d
       2: fload_1
       3: f2d
       4: invokestatic  #35                 // Method java/lang/Math.atan2:(DD)D
       7: d2f
       8: freturn

  private static final float sinh(float);
    Code:
       0: fload_0
       1: f2d
       2: invokestatic  #39                 // Method java/lang/Math.sinh:(D)D
       5: d2f
       6: freturn

  private static final float cosh(float);
    Code:
       0: fload_0
       1: f2d
       2: invokestatic  #42                 // Method java/lang/Math.cosh:(D)D
       5: d2f
       6: freturn

  private static final float tanh(float);
    Code:
       0: fload_0
       1: f2d
       2: invokestatic  #45                 // Method java/lang/Math.tanh:(D)D
       5: d2f
       6: freturn

  private static final float asinh(float);
    Code:
       0: fload_0
       1: f2d
       2: invokestatic  #70                 // Method kotlin/math/MathKt.asinh:(D)D
       5: d2f
       6: freturn

  private static final float acosh(float);
    Code:
       0: fload_0
       1: f2d
       2: invokestatic  #214                // Method kotlin/math/MathKt.acosh:(D)D
       5: d2f
       6: freturn

  private static final float atanh(float);
    Code:
       0: fload_0
       1: f2d
       2: invokestatic  #216                // Method kotlin/math/MathKt.atanh:(D)D
       5: d2f
       6: freturn

  private static final float hypot(float, float);
    Code:
       0: fload_0
       1: f2d
       2: fload_1
       3: f2d
       4: invokestatic  #86                 // Method java/lang/Math.hypot:(DD)D
       7: d2f
       8: freturn

  private static final float sqrt(float);
    Code:
       0: fload_0
       1: f2d
       2: invokestatic  #66                 // Method java/lang/Math.sqrt:(D)D
       5: d2f
       6: freturn

  private static final float exp(float);
    Code:
       0: fload_0
       1: f2d
       2: invokestatic  #89                 // Method java/lang/Math.exp:(D)D
       5: d2f
       6: freturn

  private static final float expm1(float);
    Code:
       0: fload_0
       1: f2d
       2: invokestatic  #92                 // Method java/lang/Math.expm1:(D)D
       5: d2f
       6: freturn

  public static final float log(float, float);
    Code:
       0: fload_1
       1: fconst_0
       2: fcmpg
       3: ifle          20
       6: fload_1
       7: fconst_1
       8: fcmpg
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ifeq          23
      20: ldc           #217                // float NaNf
      22: freturn
      23: fload_0
      24: f2d
      25: invokestatic  #60                 // Method java/lang/Math.log:(D)D
      28: fload_1
      29: f2d
      30: invokestatic  #60                 // Method java/lang/Math.log:(D)D
      33: ddiv
      34: d2f
      35: freturn

  private static final float ln(float);
    Code:
       0: fload_0
       1: f2d
       2: invokestatic  #60                 // Method java/lang/Math.log:(D)D
       5: d2f
       6: freturn

  private static final float log10(float);
    Code:
       0: fload_0
       1: f2d
       2: invokestatic  #97                 // Method java/lang/Math.log10:(D)D
       5: d2f
       6: freturn

  public static final float log2(float);
    Code:
       0: fload_0
       1: f2d
       2: invokestatic  #60                 // Method java/lang/Math.log:(D)D
       5: getstatic     #63                 // Field kotlin/math/Constants.LN2:D
       8: ddiv
       9: d2f
      10: freturn

  private static final float ln1p(float);
    Code:
       0: fload_0
       1: f2d
       2: invokestatic  #102                // Method java/lang/Math.log1p:(D)D
       5: d2f
       6: freturn

  private static final float ceil(float);
    Code:
       0: fload_0
       1: f2d
       2: invokestatic  #105                // Method java/lang/Math.ceil:(D)D
       5: d2f
       6: freturn

  private static final float floor(float);
    Code:
       0: fload_0
       1: f2d
       2: invokestatic  #108                // Method java/lang/Math.floor:(D)D
       5: d2f
       6: freturn

  public static final float truncate(float);
    Code:
       0: nop
       1: fload_0
       2: invokestatic  #222                // Method java/lang/Float.isNaN:(F)Z
       5: ifne          15
       8: fload_0
       9: invokestatic  #224                // Method java/lang/Float.isInfinite:(F)Z
      12: ifeq          19
      15: fload_0
      16: goto          40
      19: fload_0
      20: fconst_0
      21: fcmpl
      22: ifle          34
      25: fload_0
      26: f2d
      27: invokestatic  #108                // Method java/lang/Math.floor:(D)D
      30: d2f
      31: goto          40
      34: fload_0
      35: f2d
      36: invokestatic  #105                // Method java/lang/Math.ceil:(D)D
      39: d2f
      40: freturn

  private static final float round(float);
    Code:
       0: fload_0
       1: f2d
       2: invokestatic  #122                // Method java/lang/Math.rint:(D)D
       5: d2f
       6: freturn

  private static final float abs(float);
    Code:
       0: fload_0
       1: invokestatic  #226                // Method java/lang/Math.abs:(F)F
       4: freturn

  private static final float sign(float);
    Code:
       0: fload_0
       1: invokestatic  #228                // Method java/lang/Math.signum:(F)F
       4: freturn

  private static final float min(float, float);
    Code:
       0: fload_0
       1: fload_1
       2: invokestatic  #230                // Method java/lang/Math.min:(FF)F
       5: freturn

  private static final float max(float, float);
    Code:
       0: fload_0
       1: fload_1
       2: invokestatic  #232                // Method java/lang/Math.max:(FF)F
       5: freturn

  private static final float cbrt(float);
    Code:
       0: fload_0
       1: f2d
       2: invokestatic  #141                // Method java/lang/Math.cbrt:(D)D
       5: d2f
       6: freturn

  private static final float pow(float, float);
    Code:
       0: fload_0
       1: f2d
       2: fload_1
       3: f2d
       4: invokestatic  #144                // Method java/lang/Math.pow:(DD)D
       7: d2f
       8: freturn

  private static final float pow(float, int);
    Code:
       0: fload_0
       1: f2d
       2: iload_1
       3: i2d
       4: invokestatic  #144                // Method java/lang/Math.pow:(DD)D
       7: d2f
       8: freturn

  private static final float IEEErem(float, float);
    Code:
       0: fload_0
       1: f2d
       2: fload_1
       3: f2d
       4: invokestatic  #152                // Method java/lang/Math.IEEEremainder:(DD)D
       7: d2f
       8: freturn

  private static final float getAbsoluteValue(float);
    Code:
       0: fload_0
       1: invokestatic  #226                // Method java/lang/Math.abs:(F)F
       4: freturn

  public static void getAbsoluteValue$annotations(float);
    Code:
       0: return

  private static final float getSign(float);
    Code:
       0: fload_0
       1: invokestatic  #228                // Method java/lang/Math.signum:(F)F
       4: freturn

  public static void getSign$annotations(float);
    Code:
       0: return

  private static final float withSign(float, float);
    Code:
       0: fload_0
       1: fload_1
       2: invokestatic  #236                // Method java/lang/Math.copySign:(FF)F
       5: freturn

  private static final float withSign(float, int);
    Code:
       0: fload_0
       1: iload_1
       2: i2f
       3: invokestatic  #236                // Method java/lang/Math.copySign:(FF)F
       6: freturn

  private static final float getUlp(float);
    Code:
       0: fload_0
       1: invokestatic  #238                // Method java/lang/Math.ulp:(F)F
       4: freturn

  public static void getUlp$annotations(float);
    Code:
       0: return

  private static final float nextUp(float);
    Code:
       0: fload_0
       1: invokestatic  #240                // Method java/lang/Math.nextUp:(F)F
       4: freturn

  private static final float nextDown(float);
    Code:
       0: fload_0
       1: ldc2_w        #179                // double -Infinityd
       4: invokestatic  #243                // Method java/lang/Math.nextAfter:(FD)F
       7: freturn

  private static final float nextTowards(float, float);
    Code:
       0: fload_0
       1: fload_1
       2: f2d
       3: invokestatic  #243                // Method java/lang/Math.nextAfter:(FD)F
       6: freturn

  public static final int roundToInt(float);
    Code:
       0: fload_0
       1: invokestatic  #222                // Method java/lang/Float.isNaN:(F)Z
       4: ifeq          17
       7: new           #191                // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #193                // String Cannot round NaN value.
      13: invokespecial #197                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: fload_0
      18: invokestatic  #246                // Method java/lang/Math.round:(F)I
      21: ireturn

  public static final long roundToLong(float);
    Code:
       0: fload_0
       1: f2d
       2: invokestatic  #249                // Method kotlin/math/MathKt.roundToLong:(D)J
       5: lreturn

  private static final int abs(int);
    Code:
       0: iload_0
       1: invokestatic  #252                // Method java/lang/Math.abs:(I)I
       4: ireturn

  private static final int min(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: invokestatic  #255                // Method java/lang/Math.min:(II)I
       5: ireturn

  private static final int max(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: invokestatic  #257                // Method java/lang/Math.max:(II)I
       5: ireturn

  private static final int getAbsoluteValue(int);
    Code:
       0: iload_0
       1: invokestatic  #252                // Method java/lang/Math.abs:(I)I
       4: ireturn

  public static void getAbsoluteValue$annotations(int);
    Code:
       0: return

  public static final int getSign(int);
    Code:
       0: nop
       1: iload_0
       2: ifge          9
       5: iconst_m1
       6: goto          18
       9: iload_0
      10: ifle          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  public static void getSign$annotations(int);
    Code:
       0: return

  private static final long abs(long);
    Code:
       0: lload_0
       1: invokestatic  #261                // Method java/lang/Math.abs:(J)J
       4: lreturn

  private static final long min(long, long);
    Code:
       0: lload_0
       1: lload_2
       2: invokestatic  #265                // Method java/lang/Math.min:(JJ)J
       5: lreturn

  private static final long max(long, long);
    Code:
       0: lload_0
       1: lload_2
       2: invokestatic  #267                // Method java/lang/Math.max:(JJ)J
       5: lreturn

  private static final long getAbsoluteValue(long);
    Code:
       0: lload_0
       1: invokestatic  #261                // Method java/lang/Math.abs:(J)J
       4: lreturn

  public static void getAbsoluteValue$annotations(long);
    Code:
       0: return

  public static final int getSign(long);
    Code:
       0: nop
       1: lload_0
       2: lconst_0
       3: lcmp
       4: ifge          11
       7: iconst_m1
       8: goto          22
      11: lload_0
      12: lconst_0
      13: lcmp
      14: ifle          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public static void getSign$annotations(long);
    Code:
       0: return

  public kotlin.math.MathKt__MathJVMKt();
    Code:
       0: aload_0
       1: invokespecial #272                // Method kotlin/math/MathKt__MathHKt."<init>":()V
       4: return
}
