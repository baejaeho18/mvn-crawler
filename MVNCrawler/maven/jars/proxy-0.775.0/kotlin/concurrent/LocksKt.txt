Compiled from "Locks.kt"
public final class kotlin.concurrent.LocksKt {
  private static final <T> T withLock(java.util.concurrent.locks.Lock, kotlin.jvm.functions.Function0<? extends T>);
    Code:
       0: aload_0
       1: ldc           #10                 // String <this>
       3: invokestatic  #16                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #18                 // String action
       9: invokestatic  #16                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: nop
      13: aload_0
      14: invokeinterface #24,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      19: nop
      20: aload_1
      21: invokeinterface #30,  1           // InterfaceMethod kotlin/jvm/functions/Function0.invoke:()Ljava/lang/Object;
      26: astore_2
      27: iconst_1
      28: invokestatic  #36                 // Method kotlin/jvm/internal/InlineMarker.finallyStart:(I)V
      31: aload_0
      32: invokeinterface #39,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      37: iconst_1
      38: invokestatic  #42                 // Method kotlin/jvm/internal/InlineMarker.finallyEnd:(I)V
      41: aload_2
      42: areturn
      43: astore_2
      44: iconst_1
      45: invokestatic  #36                 // Method kotlin/jvm/internal/InlineMarker.finallyStart:(I)V
      48: aload_0
      49: invokeinterface #39,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      54: iconst_1
      55: invokestatic  #42                 // Method kotlin/jvm/internal/InlineMarker.finallyEnd:(I)V
      58: aload_2
      59: athrow
    Exception table:
       from    to  target type
          19    27    43   any
          43    44    43   any

  private static final <T> T read(java.util.concurrent.locks.ReentrantReadWriteLock, kotlin.jvm.functions.Function0<? extends T>);
    Code:
       0: aload_0
       1: ldc           #10                 // String <this>
       3: invokestatic  #16                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #18                 // String action
       9: invokestatic  #16                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: nop
      13: aload_0
      14: invokevirtual #56                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      17: astore_2
      18: aload_2
      19: invokevirtual #59                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
      22: nop
      23: aload_1
      24: invokeinterface #30,  1           // InterfaceMethod kotlin/jvm/functions/Function0.invoke:()Ljava/lang/Object;
      29: astore_3
      30: iconst_1
      31: invokestatic  #36                 // Method kotlin/jvm/internal/InlineMarker.finallyStart:(I)V
      34: aload_2
      35: invokevirtual #60                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      38: iconst_1
      39: invokestatic  #42                 // Method kotlin/jvm/internal/InlineMarker.finallyEnd:(I)V
      42: aload_3
      43: areturn
      44: astore_3
      45: iconst_1
      46: invokestatic  #36                 // Method kotlin/jvm/internal/InlineMarker.finallyStart:(I)V
      49: aload_2
      50: invokevirtual #60                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      53: iconst_1
      54: invokestatic  #42                 // Method kotlin/jvm/internal/InlineMarker.finallyEnd:(I)V
      57: aload_3
      58: athrow
    Exception table:
       from    to  target type
          22    30    44   any
          44    45    44   any

  private static final <T> T write(java.util.concurrent.locks.ReentrantReadWriteLock, kotlin.jvm.functions.Function0<? extends T>);
    Code:
       0: aload_0
       1: ldc           #10                 // String <this>
       3: invokestatic  #16                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #18                 // String action
       9: invokestatic  #16                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: nop
      13: aload_0
      14: invokevirtual #56                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      17: astore_2
      18: aload_0
      19: invokevirtual #69                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.getWriteHoldCount:()I
      22: ifne          32
      25: aload_0
      26: invokevirtual #72                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.getReadHoldCount:()I
      29: goto          33
      32: iconst_0
      33: istore_3
      34: iconst_0
      35: istore        4
      37: iload         4
      39: iload_3
      40: if_icmpge     60
      43: iload         4
      45: istore        5
      47: iconst_0
      48: istore        6
      50: aload_2
      51: invokevirtual #60                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      54: iinc          4, 1
      57: goto          37
      60: aload_0
      61: invokevirtual #76                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      64: astore        4
      66: aload         4
      68: invokevirtual #79                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock:()V
      71: nop
      72: aload_1
      73: invokeinterface #30,  1           // InterfaceMethod kotlin/jvm/functions/Function0.invoke:()Ljava/lang/Object;
      78: astore        5
      80: iconst_1
      81: invokestatic  #36                 // Method kotlin/jvm/internal/InlineMarker.finallyStart:(I)V
      84: iconst_0
      85: istore        6
      87: iload         6
      89: iload_3
      90: if_icmpge     110
      93: iload         6
      95: istore        7
      97: iconst_0
      98: istore        8
     100: aload_2
     101: invokevirtual #59                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
     104: iinc          6, 1
     107: goto          87
     110: aload         4
     112: invokevirtual #80                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
     115: iconst_1
     116: invokestatic  #42                 // Method kotlin/jvm/internal/InlineMarker.finallyEnd:(I)V
     119: aload         5
     121: areturn
     122: astore        5
     124: iconst_1
     125: invokestatic  #36                 // Method kotlin/jvm/internal/InlineMarker.finallyStart:(I)V
     128: iconst_0
     129: istore        6
     131: iload         6
     133: iload_3
     134: if_icmpge     154
     137: iload         6
     139: istore        7
     141: iconst_0
     142: istore        8
     144: aload_2
     145: invokevirtual #59                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
     148: iinc          6, 1
     151: goto          131
     154: aload         4
     156: invokevirtual #80                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
     159: iconst_1
     160: invokestatic  #42                 // Method kotlin/jvm/internal/InlineMarker.finallyEnd:(I)V
     163: aload         5
     165: athrow
    Exception table:
       from    to  target type
          71    80   122   any
         122   124   122   any
}
