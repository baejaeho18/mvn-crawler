Compiled from "MapWithDefault.kt"
final class kotlin.collections.MapWithDefaultImpl<K, V> implements kotlin.collections.MapWithDefault<K, V> {
  private final java.util.Map<K, V> map;

  private final kotlin.jvm.functions.Function1<K, V> default;

  public kotlin.collections.MapWithDefaultImpl(java.util.Map<K, ? extends V>, kotlin.jvm.functions.Function1<? super K, ? extends V>);
    Code:
       0: aload_1
       1: ldc           #13                 // String map
       3: invokestatic  #19                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #21                 // String default
       9: invokestatic  #19                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: invokespecial #24                 // Method java/lang/Object."<init>":()V
      16: aload_0
      17: aload_1
      18: putfield      #27                 // Field map:Ljava/util/Map;
      21: aload_0
      22: aload_2
      23: putfield      #30                 // Field default:Lkotlin/jvm/functions/Function1;
      26: return

  public java.util.Map<K, V> getMap();
    Code:
       0: aload_0
       1: getfield      #27                 // Field map:Ljava/util/Map;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method getMap:()Ljava/util/Map;
       4: aload_1
       5: invokevirtual #42                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       8: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method getMap:()Ljava/util/Map;
       4: invokevirtual #48                 // Method java/lang/Object.hashCode:()I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method getMap:()Ljava/util/Map;
       4: invokevirtual #52                 // Method java/lang/Object.toString:()Ljava/lang/String;
       7: areturn

  public int getSize();
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method getMap:()Ljava/util/Map;
       4: invokeinterface #58,  1           // InterfaceMethod java/util/Map.size:()I
       9: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method getMap:()Ljava/util/Map;
       4: invokeinterface #62,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ireturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method getMap:()Ljava/util/Map;
       4: aload_1
       5: invokeinterface #65,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method getMap:()Ljava/util/Map;
       4: aload_1
       5: invokeinterface #69,  2           // InterfaceMethod java/util/Map.containsValue:(Ljava/lang/Object;)Z
      10: ireturn

  public V get(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method getMap:()Ljava/util/Map;
       4: aload_1
       5: invokeinterface #75,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public java.util.Set<K> getKeys();
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method getMap:()Ljava/util/Map;
       4: invokeinterface #81,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: areturn

  public java.util.Collection<V> getValues();
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method getMap:()Ljava/util/Map;
       4: invokeinterface #87,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: areturn

  public java.util.Set<java.util.Map$Entry<K, V>> getEntries();
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method getMap:()Ljava/util/Map;
       4: invokeinterface #92,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: areturn

  public V getOrImplicitDefault(K);
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method getMap:()Ljava/util/Map;
       4: astore_2
       5: iconst_0
       6: istore_3
       7: aload_2
       8: aload_1
       9: invokeinterface #75,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: astore        4
      16: aload         4
      18: ifnonnull     47
      21: aload_2
      22: aload_1
      23: invokeinterface #65,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      28: ifne          47
      31: iconst_0
      32: istore        5
      34: aload_0
      35: getfield      #30                 // Field default:Lkotlin/jvm/functions/Function1;
      38: aload_1
      39: invokeinterface #99,  2           // InterfaceMethod kotlin/jvm/functions/Function1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;
      44: goto          49
      47: aload         4
      49: areturn

  public void clear();
    Code:
       0: new           #107                // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #109                // String Operation is not supported for read-only collection
       6: invokespecial #112                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public V put(K, V);
    Code:
       0: new           #107                // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #109                // String Operation is not supported for read-only collection
       6: invokespecial #112                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void putAll(java.util.Map<? extends K, ? extends V>);
    Code:
       0: new           #107                // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #109                // String Operation is not supported for read-only collection
       6: invokespecial #112                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public V remove(java.lang.Object);
    Code:
       0: new           #107                // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #109                // String Operation is not supported for read-only collection
       6: invokespecial #112                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public final int size();
    Code:
       0: aload_0
       1: invokevirtual #122                // Method getSize:()I
       4: ireturn

  public final java.util.Set<K> keySet();
    Code:
       0: aload_0
       1: invokevirtual #124                // Method getKeys:()Ljava/util/Set;
       4: areturn

  public final java.util.Collection<V> values();
    Code:
       0: aload_0
       1: invokevirtual #126                // Method getValues:()Ljava/util/Collection;
       4: areturn

  public final java.util.Set<java.util.Map$Entry<K, V>> entrySet();
    Code:
       0: aload_0
       1: invokevirtual #128                // Method getEntries:()Ljava/util/Set;
       4: areturn
}
