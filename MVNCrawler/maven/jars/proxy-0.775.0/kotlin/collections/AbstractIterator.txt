Compiled from "AbstractIterator.kt"
public abstract class kotlin.collections.AbstractIterator<T> implements java.util.Iterator<T>, kotlin.jvm.internal.markers.KMappedMarker {
  private kotlin.collections.State state;

  private T nextValue;

  public kotlin.collections.AbstractIterator();
    Code:
       0: aload_0
       1: invokespecial #13                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #19                 // Field kotlin/collections/State.NotReady:Lkotlin/collections/State;
       8: putfield      #22                 // Field state:Lkotlin/collections/State;
      11: return

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #22                 // Field state:Lkotlin/collections/State;
       4: getstatic     #29                 // Field kotlin/collections/State.Failed:Lkotlin/collections/State;
       7: if_acmpeq     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: istore_1
      16: iload_1
      17: ifne          35
      20: ldc           #31                 // String Failed requirement.
      22: astore_2
      23: new           #33                 // class java/lang/IllegalArgumentException
      26: dup
      27: aload_2
      28: invokevirtual #37                 // Method java/lang/Object.toString:()Ljava/lang/String;
      31: invokespecial #40                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_0
      36: getfield      #22                 // Field state:Lkotlin/collections/State;
      39: getstatic     #46                 // Field kotlin/collections/AbstractIterator$WhenMappings.$EnumSwitchMapping$0:[I
      42: swap
      43: invokevirtual #50                 // Method kotlin/collections/State.ordinal:()I
      46: iaload
      47: tableswitch   { // 1 to 2
                     1: 68
                     2: 72
               default: 76
          }
      68: iconst_0
      69: goto          80
      72: iconst_1
      73: goto          80
      76: aload_0
      77: invokespecial #53                 // Method tryToComputeNext:()Z
      80: ireturn

  public T next();
    Code:
       0: aload_0
       1: invokevirtual #58                 // Method hasNext:()Z
       4: ifne          15
       7: new           #60                 // class java/util/NoSuchElementException
      10: dup
      11: invokespecial #61                 // Method java/util/NoSuchElementException."<init>":()V
      14: athrow
      15: aload_0
      16: getstatic     #19                 // Field kotlin/collections/State.NotReady:Lkotlin/collections/State;
      19: putfield      #22                 // Field state:Lkotlin/collections/State;
      22: aload_0
      23: getfield      #65                 // Field nextValue:Ljava/lang/Object;
      26: areturn

  private final boolean tryToComputeNext();
    Code:
       0: aload_0
       1: getstatic     #29                 // Field kotlin/collections/State.Failed:Lkotlin/collections/State;
       4: putfield      #22                 // Field state:Lkotlin/collections/State;
       7: aload_0
       8: invokevirtual #68                 // Method computeNext:()V
      11: aload_0
      12: getfield      #22                 // Field state:Lkotlin/collections/State;
      15: getstatic     #71                 // Field kotlin/collections/State.Ready:Lkotlin/collections/State;
      18: if_acmpne     25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  protected abstract void computeNext();

  protected final void setNext(T);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #65                 // Field nextValue:Ljava/lang/Object;
       5: aload_0
       6: getstatic     #71                 // Field kotlin/collections/State.Ready:Lkotlin/collections/State;
       9: putfield      #22                 // Field state:Lkotlin/collections/State;
      12: return

  protected final void done();
    Code:
       0: aload_0
       1: getstatic     #79                 // Field kotlin/collections/State.Done:Lkotlin/collections/State;
       4: putfield      #22                 // Field state:Lkotlin/collections/State;
       7: return

  public void remove();
    Code:
       0: new           #82                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #84                 // String Operation is not supported for read-only collection
       6: invokespecial #85                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow
}
