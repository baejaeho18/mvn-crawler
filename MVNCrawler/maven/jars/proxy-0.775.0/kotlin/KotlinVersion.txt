Compiled from "KotlinVersion.kt"
public final class kotlin.KotlinVersion implements java.lang.Comparable<kotlin.KotlinVersion> {
  public static final kotlin.KotlinVersion$Companion Companion;

  private final int major;

  private final int minor;

  private final int patch;

  private final int version;

  public static final int MAX_COMPONENT_VALUE;

  public static final kotlin.KotlinVersion CURRENT;

  public kotlin.KotlinVersion(int, int, int);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #16                 // Field major:I
       9: aload_0
      10: iload_2
      11: putfield      #19                 // Field minor:I
      14: aload_0
      15: iload_3
      16: putfield      #22                 // Field patch:I
      19: aload_0
      20: aload_0
      21: aload_0
      22: getfield      #16                 // Field major:I
      25: aload_0
      26: getfield      #19                 // Field minor:I
      29: aload_0
      30: getfield      #22                 // Field patch:I
      33: invokespecial #26                 // Method versionOf:(III)I
      36: putfield      #29                 // Field version:I
      39: return

  public final int getMajor();
    Code:
       0: aload_0
       1: getfield      #16                 // Field major:I
       4: ireturn

  public final int getMinor();
    Code:
       0: aload_0
       1: getfield      #19                 // Field minor:I
       4: ireturn

  public final int getPatch();
    Code:
       0: aload_0
       1: getfield      #22                 // Field patch:I
       4: ireturn

  public kotlin.KotlinVersion(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iconst_0
       4: invokespecial #38                 // Method "<init>":(III)V
       7: return

  private final int versionOf(int, int, int);
    Code:
       0: new           #40                 // class kotlin/ranges/IntRange
       3: dup
       4: iconst_0
       5: sipush        255
       8: invokespecial #42                 // Method kotlin/ranges/IntRange."<init>":(II)V
      11: iload_1
      12: invokevirtual #46                 // Method kotlin/ranges/IntRange.contains:(I)Z
      15: ifeq          58
      18: new           #40                 // class kotlin/ranges/IntRange
      21: dup
      22: iconst_0
      23: sipush        255
      26: invokespecial #42                 // Method kotlin/ranges/IntRange."<init>":(II)V
      29: iload_2
      30: invokevirtual #46                 // Method kotlin/ranges/IntRange.contains:(I)Z
      33: ifeq          58
      36: new           #40                 // class kotlin/ranges/IntRange
      39: dup
      40: iconst_0
      41: sipush        255
      44: invokespecial #42                 // Method kotlin/ranges/IntRange."<init>":(II)V
      47: iload_3
      48: invokevirtual #46                 // Method kotlin/ranges/IntRange.contains:(I)Z
      51: ifeq          58
      54: iconst_1
      55: goto          59
      58: iconst_0
      59: istore        4
      61: iload         4
      63: ifne          121
      66: iconst_0
      67: istore        5
      69: new           #48                 // class java/lang/StringBuilder
      72: dup
      73: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
      76: ldc           #51                 // String Version components are out of range:
      78: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: iload_1
      82: invokevirtual #58                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      85: bipush        46
      87: invokevirtual #61                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      90: iload_2
      91: invokevirtual #58                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      94: bipush        46
      96: invokevirtual #61                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      99: iload_3
     100: invokevirtual #58                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     103: invokevirtual #65                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     106: astore        5
     108: new           #67                 // class java/lang/IllegalArgumentException
     111: dup
     112: aload         5
     114: invokevirtual #68                 // Method java/lang/Object.toString:()Ljava/lang/String;
     117: invokespecial #71                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     120: athrow
     121: iload_1
     122: bipush        16
     124: ishl
     125: iload_2
     126: bipush        8
     128: ishl
     129: iadd
     130: iload_3
     131: iadd
     132: ireturn

  public java.lang.String toString();
    Code:
       0: new           #48                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #16                 // Field major:I
      11: invokevirtual #58                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      14: bipush        46
      16: invokevirtual #61                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #19                 // Field minor:I
      23: invokevirtual #58                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      26: bipush        46
      28: invokevirtual #61                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      31: aload_0
      32: getfield      #22                 // Field patch:I
      35: invokevirtual #58                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      38: invokevirtual #65                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #2                  // class kotlin/KotlinVersion
      11: ifeq          21
      14: aload_1
      15: checkcast     #2                  // class kotlin/KotlinVersion
      18: goto          22
      21: aconst_null
      22: dup
      23: ifnonnull     29
      26: pop
      27: iconst_0
      28: ireturn
      29: astore_2
      30: aload_0
      31: getfield      #29                 // Field version:I
      34: aload_2
      35: getfield      #29                 // Field version:I
      38: if_icmpne     45
      41: iconst_1
      42: goto          46
      45: iconst_0
      46: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #29                 // Field version:I
       4: ireturn

  public int compareTo(kotlin.KotlinVersion);
    Code:
       0: aload_1
       1: ldc           #83                 // String other
       3: invokestatic  #89                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #29                 // Field version:I
      10: aload_1
      11: getfield      #29                 // Field version:I
      14: isub
      15: ireturn

  public final boolean isAtLeast(int, int);
    Code:
       0: aload_0
       1: getfield      #16                 // Field major:I
       4: iload_1
       5: if_icmpgt     24
       8: aload_0
       9: getfield      #16                 // Field major:I
      12: iload_1
      13: if_icmpne     28
      16: aload_0
      17: getfield      #19                 // Field minor:I
      20: iload_2
      21: if_icmplt     28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public final boolean isAtLeast(int, int, int);
    Code:
       0: aload_0
       1: getfield      #16                 // Field major:I
       4: iload_1
       5: if_icmpgt     40
       8: aload_0
       9: getfield      #16                 // Field major:I
      12: iload_1
      13: if_icmpne     44
      16: aload_0
      17: getfield      #19                 // Field minor:I
      20: iload_2
      21: if_icmpgt     40
      24: aload_0
      25: getfield      #19                 // Field minor:I
      28: iload_2
      29: if_icmpne     44
      32: aload_0
      33: getfield      #22                 // Field patch:I
      36: iload_3
      37: if_icmplt     44
      40: iconst_1
      41: goto          45
      44: iconst_0
      45: ireturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2                  // class kotlin/KotlinVersion
       5: invokevirtual #95                 // Method compareTo:(Lkotlin/KotlinVersion;)I
       8: ireturn

  static {};
    Code:
       0: new           #98                 // class kotlin/KotlinVersion$Companion
       3: dup
       4: aconst_null
       5: invokespecial #101                // Method kotlin/KotlinVersion$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
       8: putstatic     #105                // Field Companion:Lkotlin/KotlinVersion$Companion;
      11: invokestatic  #111                // Method kotlin/KotlinVersionCurrentValue.get:()Lkotlin/KotlinVersion;
      14: putstatic     #114                // Field CURRENT:Lkotlin/KotlinVersion;
      17: return
}
