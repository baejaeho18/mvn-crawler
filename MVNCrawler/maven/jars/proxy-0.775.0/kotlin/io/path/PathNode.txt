Compiled from "PathTreeWalk.kt"
final class kotlin.io.path.PathNode {
  private final java.nio.file.Path path;

  private final java.lang.Object key;

  private final kotlin.io.path.PathNode parent;

  private java.util.Iterator<kotlin.io.path.PathNode> contentIterator;

  public kotlin.io.path.PathNode(java.nio.file.Path, java.lang.Object, kotlin.io.path.PathNode);
    Code:
       0: aload_1
       1: ldc           #10                 // String path
       3: invokestatic  #16                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokespecial #19                 // Method java/lang/Object."<init>":()V
      10: aload_0
      11: aload_1
      12: putfield      #22                 // Field path:Ljava/nio/file/Path;
      15: aload_0
      16: aload_2
      17: putfield      #26                 // Field key:Ljava/lang/Object;
      20: aload_0
      21: aload_3
      22: putfield      #30                 // Field parent:Lkotlin/io/path/PathNode;
      25: return

  public final java.nio.file.Path getPath();
    Code:
       0: aload_0
       1: getfield      #22                 // Field path:Ljava/nio/file/Path;
       4: areturn

  public final java.lang.Object getKey();
    Code:
       0: aload_0
       1: getfield      #26                 // Field key:Ljava/lang/Object;
       4: areturn

  public final kotlin.io.path.PathNode getParent();
    Code:
       0: aload_0
       1: getfield      #30                 // Field parent:Lkotlin/io/path/PathNode;
       4: areturn

  public final java.util.Iterator<kotlin.io.path.PathNode> getContentIterator();
    Code:
       0: aload_0
       1: getfield      #44                 // Field contentIterator:Ljava/util/Iterator;
       4: areturn

  public final void setContentIterator(java.util.Iterator<kotlin.io.path.PathNode>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #44                 // Field contentIterator:Ljava/util/Iterator;
       5: return
}
