Compiled from "PathRecursiveFunctions.kt"
class kotlin.io.path.PathsKt__PathRecursiveFunctionsKt extends kotlin.io.path.PathsKt__PathReadWriteKt {
  public static final java.nio.file.Path copyToRecursively(java.nio.file.Path, java.nio.file.Path, kotlin.jvm.functions.Function3<? super java.nio.file.Path, ? super java.nio.file.Path, ? super java.lang.Exception, ? extends kotlin.io.path.OnErrorResult>, boolean, boolean);
    Code:
       0: aload_0
       1: ldc           #14                 // String <this>
       3: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #22                 // String target
       9: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_2
      13: ldc           #24                 // String onError
      15: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      18: iload         4
      20: ifeq          44
      23: aload_0
      24: aload_1
      25: aload_2
      26: iload_3
      27: new           #26                 // class kotlin/io/path/PathsKt__PathRecursiveFunctionsKt$copyToRecursively$2
      30: dup
      31: iload_3
      32: invokespecial #30                 // Method kotlin/io/path/PathsKt__PathRecursiveFunctionsKt$copyToRecursively$2."<init>":(Z)V
      35: checkcast     #32                 // class kotlin/jvm/functions/Function3
      38: invokestatic  #37                 // Method kotlin/io/path/PathsKt.copyToRecursively:(Ljava/nio/file/Path;Ljava/nio/file/Path;Lkotlin/jvm/functions/Function3;ZLkotlin/jvm/functions/Function3;)Ljava/nio/file/Path;
      41: goto          55
      44: aload_0
      45: aload_1
      46: aload_2
      47: iload_3
      48: aconst_null
      49: bipush        8
      51: aconst_null
      52: invokestatic  #41                 // Method kotlin/io/path/PathsKt.copyToRecursively$default:(Ljava/nio/file/Path;Ljava/nio/file/Path;Lkotlin/jvm/functions/Function3;ZLkotlin/jvm/functions/Function3;ILjava/lang/Object;)Ljava/nio/file/Path;
      55: areturn

  public static java.nio.file.Path copyToRecursively$default(java.nio.file.Path, java.nio.file.Path, kotlin.jvm.functions.Function3, boolean, boolean, int, java.lang.Object);
    Code:
       0: iload         5
       2: iconst_2
       3: iand
       4: ifeq          14
       7: getstatic     #56                 // Field kotlin/io/path/PathsKt__PathRecursiveFunctionsKt$copyToRecursively$1.INSTANCE:Lkotlin/io/path/PathsKt__PathRecursiveFunctionsKt$copyToRecursively$1;
      10: checkcast     #32                 // class kotlin/jvm/functions/Function3
      13: astore_2
      14: aload_0
      15: aload_1
      16: aload_2
      17: iload_3
      18: iload         4
      20: invokestatic  #58                 // Method kotlin/io/path/PathsKt.copyToRecursively:(Ljava/nio/file/Path;Ljava/nio/file/Path;Lkotlin/jvm/functions/Function3;ZZ)Ljava/nio/file/Path;
      23: areturn

  public static final java.nio.file.Path copyToRecursively(java.nio.file.Path, java.nio.file.Path, kotlin.jvm.functions.Function3<? super java.nio.file.Path, ? super java.nio.file.Path, ? super java.lang.Exception, ? extends kotlin.io.path.OnErrorResult>, boolean, kotlin.jvm.functions.Function3<? super kotlin.io.path.CopyActionContext, ? super java.nio.file.Path, ? super java.nio.file.Path, ? extends kotlin.io.path.CopyActionResult>);
    Code:
       0: aload_0
       1: ldc           #14                 // String <this>
       3: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #22                 // String target
       9: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_2
      13: ldc           #24                 // String onError
      15: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload         4
      20: ldc           #61                 // String copyAction
      22: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      25: aload_0
      26: astore        5
      28: getstatic     #66                 // Field kotlin/io/path/LinkFollowing.INSTANCE:Lkotlin/io/path/LinkFollowing;
      31: iload_3
      32: invokevirtual #70                 // Method kotlin/io/path/LinkFollowing.toLinkOptions:(Z)[Ljava/nio/file/LinkOption;
      35: astore        6
      37: aload         6
      39: aload         6
      41: arraylength
      42: invokestatic  #76                 // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
      45: checkcast     #78                 // class "[Ljava/nio/file/LinkOption;"
      48: astore        6
      50: aload         5
      52: aload         6
      54: aload         6
      56: arraylength
      57: invokestatic  #76                 // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
      60: checkcast     #78                 // class "[Ljava/nio/file/LinkOption;"
      63: invokestatic  #84                 // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      66: ifne          87
      69: new           #86                 // class java/nio/file/NoSuchFileException
      72: dup
      73: aload_0
      74: invokevirtual #92                 // Method java/lang/Object.toString:()Ljava/lang/String;
      77: aload_1
      78: invokevirtual #92                 // Method java/lang/Object.toString:()Ljava/lang/String;
      81: ldc           #94                 // String The source file doesn\'t exist.
      83: invokespecial #97                 // Method java/nio/file/NoSuchFileException."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      86: athrow
      87: aload_0
      88: iconst_0
      89: anewarray     #99                 // class java/nio/file/LinkOption
      92: dup
      93: arraylength
      94: invokestatic  #76                 // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
      97: checkcast     #78                 // class "[Ljava/nio/file/LinkOption;"
     100: invokestatic  #84                 // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
     103: ifeq          319
     106: iload_3
     107: ifne          117
     110: aload_0
     111: invokestatic  #103                // Method java/nio/file/Files.isSymbolicLink:(Ljava/nio/file/Path;)Z
     114: ifne          319
     117: aload_1
     118: iconst_0
     119: anewarray     #99                 // class java/nio/file/LinkOption
     122: dup
     123: arraylength
     124: invokestatic  #76                 // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
     127: checkcast     #78                 // class "[Ljava/nio/file/LinkOption;"
     130: invokestatic  #84                 // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
     133: ifeq          147
     136: aload_1
     137: invokestatic  #103                // Method java/nio/file/Files.isSymbolicLink:(Ljava/nio/file/Path;)Z
     140: ifne          147
     143: iconst_1
     144: goto          148
     147: iconst_0
     148: istore        5
     150: iload         5
     152: ifeq          163
     155: aload_0
     156: aload_1
     157: invokestatic  #107                // Method java/nio/file/Files.isSameFile:(Ljava/nio/file/Path;Ljava/nio/file/Path;)Z
     160: ifne          319
     163: nop
     164: aload_0
     165: invokeinterface #111,  1          // InterfaceMethod java/nio/file/Path.getFileSystem:()Ljava/nio/file/FileSystem;
     170: aload_1
     171: invokeinterface #111,  1          // InterfaceMethod java/nio/file/Path.getFileSystem:()Ljava/nio/file/FileSystem;
     176: invokestatic  #115                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     179: ifne          186
     182: iconst_0
     183: goto          294
     186: iload         5
     188: ifeq          219
     191: aload_1
     192: iconst_0
     193: anewarray     #99                 // class java/nio/file/LinkOption
     196: invokeinterface #119,  2          // InterfaceMethod java/nio/file/Path.toRealPath:([Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;
     201: aload_0
     202: iconst_0
     203: anewarray     #99                 // class java/nio/file/LinkOption
     206: invokeinterface #119,  2          // InterfaceMethod java/nio/file/Path.toRealPath:([Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;
     211: invokeinterface #122,  2          // InterfaceMethod java/nio/file/Path.startsWith:(Ljava/nio/file/Path;)Z
     216: goto          294
     219: aload_1
     220: invokeinterface #126,  1          // InterfaceMethod java/nio/file/Path.getParent:()Ljava/nio/file/Path;
     225: dup
     226: ifnull        292
     229: astore        7
     231: iconst_0
     232: istore        8
     234: aload         7
     236: iconst_0
     237: anewarray     #99                 // class java/nio/file/LinkOption
     240: dup
     241: arraylength
     242: invokestatic  #76                 // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
     245: checkcast     #78                 // class "[Ljava/nio/file/LinkOption;"
     248: invokestatic  #84                 // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
     251: ifeq          287
     254: aload         7
     256: iconst_0
     257: anewarray     #99                 // class java/nio/file/LinkOption
     260: invokeinterface #119,  2          // InterfaceMethod java/nio/file/Path.toRealPath:([Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;
     265: aload_0
     266: iconst_0
     267: anewarray     #99                 // class java/nio/file/LinkOption
     270: invokeinterface #119,  2          // InterfaceMethod java/nio/file/Path.toRealPath:([Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;
     275: invokeinterface #122,  2          // InterfaceMethod java/nio/file/Path.startsWith:(Ljava/nio/file/Path;)Z
     280: ifeq          287
     283: iconst_1
     284: goto          288
     287: iconst_0
     288: nop
     289: goto          294
     292: pop
     293: iconst_0
     294: istore        6
     296: iload         6
     298: ifeq          319
     301: new           #128                // class java/nio/file/FileSystemException
     304: dup
     305: aload_0
     306: invokevirtual #92                 // Method java/lang/Object.toString:()Ljava/lang/String;
     309: aload_1
     310: invokevirtual #92                 // Method java/lang/Object.toString:()Ljava/lang/String;
     313: ldc           #130                // String Recursively copying a directory into its subdirectory is prohibited.
     315: invokespecial #131                // Method java/nio/file/FileSystemException."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     318: athrow
     319: aload_0
     320: iconst_0
     321: iload_3
     322: new           #133                // class kotlin/io/path/PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5
     325: dup
     326: aload         4
     328: aload_0
     329: aload_1
     330: aload_2
     331: invokespecial #136                // Method kotlin/io/path/PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5."<init>":(Lkotlin/jvm/functions/Function3;Ljava/nio/file/Path;Ljava/nio/file/Path;Lkotlin/jvm/functions/Function3;)V
     334: checkcast     #138                // class kotlin/jvm/functions/Function1
     337: iconst_1
     338: aconst_null
     339: invokestatic  #142                // Method kotlin/io/path/PathsKt.visitFileTree$default:(Ljava/nio/file/Path;IZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
     342: aload_1
     343: areturn

  public static java.nio.file.Path copyToRecursively$default(java.nio.file.Path, java.nio.file.Path, kotlin.jvm.functions.Function3, boolean, kotlin.jvm.functions.Function3, int, java.lang.Object);
    Code:
       0: iload         5
       2: iconst_2
       3: iand
       4: ifeq          14
       7: getstatic     #152                // Field kotlin/io/path/PathsKt__PathRecursiveFunctionsKt$copyToRecursively$3.INSTANCE:Lkotlin/io/path/PathsKt__PathRecursiveFunctionsKt$copyToRecursively$3;
      10: checkcast     #32                 // class kotlin/jvm/functions/Function3
      13: astore_2
      14: iload         5
      16: bipush        8
      18: iand
      19: ifeq          35
      22: new           #154                // class kotlin/io/path/PathsKt__PathRecursiveFunctionsKt$copyToRecursively$4
      25: dup
      26: iload_3
      27: invokespecial #155                // Method kotlin/io/path/PathsKt__PathRecursiveFunctionsKt$copyToRecursively$4."<init>":(Z)V
      30: checkcast     #32                 // class kotlin/jvm/functions/Function3
      33: astore        4
      35: aload_0
      36: aload_1
      37: aload_2
      38: iload_3
      39: aload         4
      41: invokestatic  #37                 // Method kotlin/io/path/PathsKt.copyToRecursively:(Ljava/nio/file/Path;Ljava/nio/file/Path;Lkotlin/jvm/functions/Function3;ZLkotlin/jvm/functions/Function3;)Ljava/nio/file/Path;
      44: areturn

  private static final java.nio.file.FileVisitResult toFileVisitResult$PathsKt__PathRecursiveFunctionsKt(kotlin.io.path.CopyActionResult);
    Code:
       0: aload_0
       1: getstatic     #163                // Field kotlin/io/path/PathsKt__PathRecursiveFunctionsKt$WhenMappings.$EnumSwitchMapping$0:[I
       4: swap
       5: invokevirtual #169                // Method kotlin/io/path/CopyActionResult.ordinal:()I
       8: iaload
       9: tableswitch   { // 1 to 3
                     1: 36
                     2: 42
                     3: 48
               default: 54
          }
      36: getstatic     #175                // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;
      39: goto          62
      42: getstatic     #178                // Field java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;
      45: goto          62
      48: getstatic     #181                // Field java/nio/file/FileVisitResult.SKIP_SUBTREE:Ljava/nio/file/FileVisitResult;
      51: goto          62
      54: new           #183                // class kotlin/NoWhenBranchMatchedException
      57: dup
      58: invokespecial #186                // Method kotlin/NoWhenBranchMatchedException."<init>":()V
      61: athrow
      62: areturn

  private static final java.nio.file.FileVisitResult toFileVisitResult$PathsKt__PathRecursiveFunctionsKt(kotlin.io.path.OnErrorResult);
    Code:
       0: aload_0
       1: getstatic     #192                // Field kotlin/io/path/PathsKt__PathRecursiveFunctionsKt$WhenMappings.$EnumSwitchMapping$1:[I
       4: swap
       5: invokevirtual #195                // Method kotlin/io/path/OnErrorResult.ordinal:()I
       8: iaload
       9: tableswitch   { // 1 to 2
                     1: 32
                     2: 38
               default: 44
          }
      32: getstatic     #178                // Field java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;
      35: goto          52
      38: getstatic     #181                // Field java/nio/file/FileVisitResult.SKIP_SUBTREE:Ljava/nio/file/FileVisitResult;
      41: goto          52
      44: new           #183                // class kotlin/NoWhenBranchMatchedException
      47: dup
      48: invokespecial #186                // Method kotlin/NoWhenBranchMatchedException."<init>":()V
      51: athrow
      52: areturn

  public static final void deleteRecursively(java.nio.file.Path);
    Code:
       0: aload_0
       1: ldc           #14                 // String <this>
       3: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokestatic  #202                // Method deleteRecursivelyImpl$PathsKt__PathRecursiveFunctionsKt:(Ljava/nio/file/Path;)Ljava/util/List;
      10: astore_1
      11: aload_1
      12: checkcast     #204                // class java/util/Collection
      15: invokeinterface #208,  1          // InterfaceMethod java/util/Collection.isEmpty:()Z
      20: ifne          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ifeq          116
      31: new           #128                // class java/nio/file/FileSystemException
      34: dup
      35: ldc           #210                // String Failed to delete one or more files. See suppressed exceptions for details.
      37: invokespecial #213                // Method java/nio/file/FileSystemException."<init>":(Ljava/lang/String;)V
      40: astore_2
      41: aload_2
      42: astore_3
      43: iconst_0
      44: istore        4
      46: aload_1
      47: checkcast     #215                // class java/lang/Iterable
      50: astore        5
      52: iconst_0
      53: istore        6
      55: aload         5
      57: invokeinterface #219,  1          // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      62: astore        7
      64: aload         7
      66: invokeinterface #224,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      71: ifeq          109
      74: aload         7
      76: invokeinterface #228,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      81: astore        8
      83: aload         8
      85: checkcast     #230                // class java/lang/Exception
      88: astore        9
      90: iconst_0
      91: istore        10
      93: aload_3
      94: checkcast     #232                // class java/lang/Throwable
      97: aload         9
      99: checkcast     #232                // class java/lang/Throwable
     102: invokestatic  #238                // Method kotlin/ExceptionsKt.addSuppressed:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V
     105: nop
     106: goto          64
     109: nop
     110: nop
     111: aload_2
     112: checkcast     #232                // class java/lang/Throwable
     115: athrow
     116: return

  private static final java.util.List<java.lang.Exception> deleteRecursivelyImpl$PathsKt__PathRecursiveFunctionsKt(java.nio.file.Path);
    Code:
       0: new           #256                // class kotlin/io/path/ExceptionsCollector
       3: dup
       4: iconst_0
       5: iconst_1
       6: aconst_null
       7: invokespecial #259                // Method kotlin/io/path/ExceptionsCollector."<init>":(IILkotlin/jvm/internal/DefaultConstructorMarker;)V
      10: astore_1
      11: iconst_0
      12: istore_2
      13: iconst_1
      14: istore_2
      15: aload_0
      16: invokeinterface #126,  1          // InterfaceMethod java/nio/file/Path.getParent:()Ljava/nio/file/Path;
      21: dup
      22: ifnull        152
      25: astore_3
      26: iconst_0
      27: istore        4
      29: nop
      30: aload_3
      31: invokestatic  #263                // Method java/nio/file/Files.newDirectoryStream:(Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;
      34: astore        5
      36: goto          44
      39: astore        6
      41: aconst_null
      42: astore        5
      44: aload         5
      46: astore        7
      48: aload         7
      50: dup
      51: ifnull        147
      54: checkcast     #265                // class java/io/Closeable
      57: astore        5
      59: aconst_null
      60: astore        6
      62: nop
      63: aload         5
      65: checkcast     #267                // class java/nio/file/DirectoryStream
      68: astore        8
      70: iconst_0
      71: istore        9
      73: aload         8
      75: instanceof    #269                // class java/nio/file/SecureDirectoryStream
      78: ifeq          110
      81: iconst_0
      82: istore_2
      83: aload_1
      84: aload_3
      85: invokevirtual #272                // Method kotlin/io/path/ExceptionsCollector.setPath:(Ljava/nio/file/Path;)V
      88: aload         8
      90: checkcast     #269                // class java/nio/file/SecureDirectoryStream
      93: aload_0
      94: invokeinterface #275,  1          // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;
      99: dup
     100: ldc_w         #277                // String this.fileName
     103: invokestatic  #280                // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
     106: aload_1
     107: invokestatic  #284                // Method handleEntry$PathsKt__PathRecursiveFunctionsKt:(Ljava/nio/file/SecureDirectoryStream;Ljava/nio/file/Path;Lkotlin/io/path/ExceptionsCollector;)V
     110: nop
     111: getstatic     #289                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
     114: astore        8
     116: aload         5
     118: aload         6
     120: invokestatic  #295                // Method kotlin/io/CloseableKt.closeFinally:(Ljava/io/Closeable;Ljava/lang/Throwable;)V
     123: goto          149
     126: astore        8
     128: aload         8
     130: astore        6
     132: aload         8
     134: athrow
     135: astore        8
     137: aload         5
     139: aload         6
     141: invokestatic  #295                // Method kotlin/io/CloseableKt.closeFinally:(Ljava/io/Closeable;Ljava/lang/Throwable;)V
     144: aload         8
     146: athrow
     147: pop
     148: nop
     149: goto          154
     152: pop
     153: nop
     154: iload_2
     155: ifeq          163
     158: aload_0
     159: aload_1
     160: invokestatic  #299                // Method insecureHandleEntry$PathsKt__PathRecursiveFunctionsKt:(Ljava/nio/file/Path;Lkotlin/io/path/ExceptionsCollector;)V
     163: aload_1
     164: invokevirtual #303                // Method kotlin/io/path/ExceptionsCollector.getCollectedExceptions:()Ljava/util/List;
     167: areturn
    Exception table:
       from    to  target type
          29    36    39   Class java/lang/Throwable
          62   116   126   Class java/lang/Throwable
          62   116   135   any
         126   135   135   any
         135   137   135   any

  private static final void collectIfThrows$PathsKt__PathRecursiveFunctionsKt(kotlin.io.path.ExceptionsCollector, kotlin.jvm.functions.Function0<kotlin.Unit>);
    Code:
       0: iconst_0
       1: istore_2
       2: nop
       3: aload_1
       4: invokeinterface #323,  1          // InterfaceMethod kotlin/jvm/functions/Function0.invoke:()Ljava/lang/Object;
       9: pop
      10: goto          19
      13: astore_3
      14: aload_0
      15: aload_3
      16: invokevirtual #327                // Method kotlin/io/path/ExceptionsCollector.collect:(Ljava/lang/Exception;)V
      19: return
    Exception table:
       from    to  target type
           2    10    13   Class java/lang/Exception

  private static final <R> R tryIgnoreNoSuchFileException$PathsKt__PathRecursiveFunctionsKt(kotlin.jvm.functions.Function0<? extends R>);
    Code:
       0: iconst_0
       1: istore_1
       2: nop
       3: aload_0
       4: invokeinterface #323,  1          // InterfaceMethod kotlin/jvm/functions/Function0.invoke:()Ljava/lang/Object;
       9: astore_2
      10: goto          16
      13: astore_3
      14: aconst_null
      15: astore_2
      16: aload_2
      17: areturn
    Exception table:
       from    to  target type
           2    10    13   Class java/nio/file/NoSuchFileException

  private static final void handleEntry$PathsKt__PathRecursiveFunctionsKt(java.nio.file.SecureDirectoryStream<java.nio.file.Path>, java.nio.file.Path, kotlin.io.path.ExceptionsCollector);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #340                // Method kotlin/io/path/ExceptionsCollector.enterEntry:(Ljava/nio/file/Path;)V
       5: iconst_0
       6: istore_3
       7: nop
       8: iconst_0
       9: istore        4
      11: aload_0
      12: aload_1
      13: iconst_1
      14: anewarray     #99                 // class java/nio/file/LinkOption
      17: astore        5
      19: aload         5
      21: iconst_0
      22: getstatic     #344                // Field java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;
      25: aastore
      26: aload         5
      28: invokestatic  #348                // Method isDirectory$PathsKt__PathRecursiveFunctionsKt:(Ljava/nio/file/SecureDirectoryStream;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      31: ifeq          85
      34: aload_2
      35: invokevirtual #351                // Method kotlin/io/path/ExceptionsCollector.getTotalExceptions:()I
      38: istore        5
      40: aload_0
      41: aload_1
      42: aload_2
      43: invokestatic  #354                // Method enterDirectory$PathsKt__PathRecursiveFunctionsKt:(Ljava/nio/file/SecureDirectoryStream;Ljava/nio/file/Path;Lkotlin/io/path/ExceptionsCollector;)V
      46: iload         5
      48: aload_2
      49: invokevirtual #351                // Method kotlin/io/path/ExceptionsCollector.getTotalExceptions:()I
      52: if_icmpne     112
      55: iconst_0
      56: istore        6
      58: nop
      59: iconst_0
      60: istore        7
      62: aload_0
      63: aload_1
      64: invokeinterface #358,  2          // InterfaceMethod java/nio/file/SecureDirectoryStream.deleteDirectory:(Ljava/lang/Object;)V
      69: getstatic     #289                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
      72: astore        8
      74: goto          112
      77: astore        9
      79: aconst_null
      80: astore        8
      82: goto          112
      85: iconst_0
      86: istore        5
      88: nop
      89: iconst_0
      90: istore        6
      92: aload_0
      93: aload_1
      94: invokeinterface #361,  2          // InterfaceMethod java/nio/file/SecureDirectoryStream.deleteFile:(Ljava/lang/Object;)V
      99: getstatic     #289                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
     102: astore        7
     104: goto          112
     107: astore        8
     109: aconst_null
     110: astore        7
     112: nop
     113: goto          124
     116: astore        10
     118: aload_2
     119: aload         10
     121: invokevirtual #327                // Method kotlin/io/path/ExceptionsCollector.collect:(Ljava/lang/Exception;)V
     124: nop
     125: aload_2
     126: aload_1
     127: invokevirtual #364                // Method kotlin/io/path/ExceptionsCollector.exitEntry:(Ljava/nio/file/Path;)V
     130: return
    Exception table:
       from    to  target type
          58    74    77   Class java/nio/file/NoSuchFileException
          88   104   107   Class java/nio/file/NoSuchFileException
           7   113   116   Class java/lang/Exception

  private static final void enterDirectory$PathsKt__PathRecursiveFunctionsKt(java.nio.file.SecureDirectoryStream<java.nio.file.Path>, java.nio.file.Path, kotlin.io.path.ExceptionsCollector);
    Code:
       0: iconst_0
       1: istore_3
       2: nop
       3: iconst_0
       4: istore        4
       6: iconst_0
       7: istore        5
       9: nop
      10: iconst_0
      11: istore        6
      13: aload_0
      14: aload_1
      15: iconst_1
      16: anewarray     #99                 // class java/nio/file/LinkOption
      19: astore        7
      21: aload         7
      23: iconst_0
      24: getstatic     #344                // Field java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;
      27: aastore
      28: aload         7
      30: invokeinterface #376,  3          // InterfaceMethod java/nio/file/SecureDirectoryStream.newDirectoryStream:(Ljava/lang/Object;[Ljava/nio/file/LinkOption;)Ljava/nio/file/SecureDirectoryStream;
      35: astore        8
      37: goto          45
      40: astore        9
      42: aconst_null
      43: astore        8
      45: aload         8
      47: astore        10
      49: aload         10
      51: ifnull        166
      54: aload         10
      56: checkcast     #265                // class java/io/Closeable
      59: astore        5
      61: aconst_null
      62: astore        6
      64: nop
      65: aload         5
      67: checkcast     #269                // class java/nio/file/SecureDirectoryStream
      70: astore        7
      72: iconst_0
      73: istore        8
      75: aload         7
      77: invokeinterface #377,  1          // InterfaceMethod java/nio/file/SecureDirectoryStream.iterator:()Ljava/util/Iterator;
      82: astore        9
      84: aload         9
      86: invokeinterface #224,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      91: ifeq          129
      94: aload         9
      96: invokeinterface #228,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     101: checkcast     #49                 // class java/nio/file/Path
     104: astore        11
     106: aload         7
     108: aload         11
     110: invokeinterface #275,  1          // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;
     115: dup
     116: ldc_w         #379                // String entry.fileName
     119: invokestatic  #280                // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
     122: aload_2
     123: invokestatic  #284                // Method handleEntry$PathsKt__PathRecursiveFunctionsKt:(Ljava/nio/file/SecureDirectoryStream;Ljava/nio/file/Path;Lkotlin/io/path/ExceptionsCollector;)V
     126: goto          84
     129: nop
     130: getstatic     #289                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
     133: astore        7
     135: aload         5
     137: aload         6
     139: invokestatic  #295                // Method kotlin/io/CloseableKt.closeFinally:(Ljava/io/Closeable;Ljava/lang/Throwable;)V
     142: goto          167
     145: astore        7
     147: aload         7
     149: astore        6
     151: aload         7
     153: athrow
     154: astore        7
     156: aload         5
     158: aload         6
     160: invokestatic  #295                // Method kotlin/io/CloseableKt.closeFinally:(Ljava/io/Closeable;Ljava/lang/Throwable;)V
     163: aload         7
     165: athrow
     166: nop
     167: nop
     168: goto          179
     171: astore        12
     173: aload_2
     174: aload         12
     176: invokevirtual #327                // Method kotlin/io/path/ExceptionsCollector.collect:(Ljava/lang/Exception;)V
     179: nop
     180: return
    Exception table:
       from    to  target type
           9    37    40   Class java/nio/file/NoSuchFileException
          64   135   145   Class java/lang/Throwable
          64   135   154   any
         145   154   154   any
         154   156   154   any
           2   168   171   Class java/lang/Exception

  private static final boolean isDirectory$PathsKt__PathRecursiveFunctionsKt(java.nio.file.SecureDirectoryStream<java.nio.file.Path>, java.nio.file.Path, java.nio.file.LinkOption...);
    Code:
       0: iconst_0
       1: istore_3
       2: nop
       3: iconst_0
       4: istore        4
       6: aload_0
       7: aload_1
       8: ldc_w         #387                // class java/nio/file/attribute/BasicFileAttributeView
      11: aload_2
      12: aload_2
      13: arraylength
      14: invokestatic  #76                 // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
      17: checkcast     #78                 // class "[Ljava/nio/file/LinkOption;"
      20: invokeinterface #391,  4          // InterfaceMethod java/nio/file/SecureDirectoryStream.getFileAttributeView:(Ljava/lang/Object;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;
      25: checkcast     #387                // class java/nio/file/attribute/BasicFileAttributeView
      28: invokeinterface #395,  1          // InterfaceMethod java/nio/file/attribute/BasicFileAttributeView.readAttributes:()Ljava/nio/file/attribute/BasicFileAttributes;
      33: invokeinterface #400,  1          // InterfaceMethod java/nio/file/attribute/BasicFileAttributes.isDirectory:()Z
      38: invokestatic  #406                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      41: astore        5
      43: goto          51
      46: astore        6
      48: aconst_null
      49: astore        5
      51: aload         5
      53: dup
      54: ifnull        63
      57: invokevirtual #409                // Method java/lang/Boolean.booleanValue:()Z
      60: goto          65
      63: pop
      64: iconst_0
      65: ireturn
    Exception table:
       from    to  target type
           2    43    46   Class java/nio/file/NoSuchFileException

  private static final void insecureHandleEntry$PathsKt__PathRecursiveFunctionsKt(java.nio.file.Path, kotlin.io.path.ExceptionsCollector);
    Code:
       0: iconst_0
       1: istore_2
       2: nop
       3: iconst_0
       4: istore_3
       5: aload_0
       6: astore        4
       8: iconst_1
       9: anewarray     #99                 // class java/nio/file/LinkOption
      12: astore        5
      14: aload         5
      16: iconst_0
      17: getstatic     #344                // Field java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;
      20: aastore
      21: aload         5
      23: astore        5
      25: aload         4
      27: aload         5
      29: aload         5
      31: arraylength
      32: invokestatic  #76                 // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
      35: checkcast     #78                 // class "[Ljava/nio/file/LinkOption;"
      38: invokestatic  #415                // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      41: ifeq          72
      44: aload_1
      45: invokevirtual #351                // Method kotlin/io/path/ExceptionsCollector.getTotalExceptions:()I
      48: istore        4
      50: aload_0
      51: aload_1
      52: invokestatic  #418                // Method insecureEnterDirectory$PathsKt__PathRecursiveFunctionsKt:(Ljava/nio/file/Path;Lkotlin/io/path/ExceptionsCollector;)V
      55: iload         4
      57: aload_1
      58: invokevirtual #351                // Method kotlin/io/path/ExceptionsCollector.getTotalExceptions:()I
      61: if_icmpne     77
      64: aload_0
      65: invokestatic  #421                // Method java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z
      68: pop
      69: goto          77
      72: aload_0
      73: invokestatic  #421                // Method java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z
      76: pop
      77: nop
      78: goto          89
      81: astore        6
      83: aload_1
      84: aload         6
      86: invokevirtual #327                // Method kotlin/io/path/ExceptionsCollector.collect:(Ljava/lang/Exception;)V
      89: nop
      90: return
    Exception table:
       from    to  target type
           2    78    81   Class java/lang/Exception

  private static final void insecureEnterDirectory$PathsKt__PathRecursiveFunctionsKt(java.nio.file.Path, kotlin.io.path.ExceptionsCollector);
    Code:
       0: iconst_0
       1: istore_2
       2: nop
       3: iconst_0
       4: istore_3
       5: iconst_0
       6: istore        4
       8: nop
       9: iconst_0
      10: istore        5
      12: aload_0
      13: invokestatic  #263                // Method java/nio/file/Files.newDirectoryStream:(Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;
      16: astore        6
      18: goto          26
      21: astore        5
      23: aconst_null
      24: astore        6
      26: aload         6
      28: astore        7
      30: aload         7
      32: ifnull        141
      35: aload         7
      37: checkcast     #265                // class java/io/Closeable
      40: astore        4
      42: aconst_null
      43: astore        5
      45: nop
      46: aload         4
      48: checkcast     #267                // class java/nio/file/DirectoryStream
      51: astore        6
      53: iconst_0
      54: istore        8
      56: aload         6
      58: invokeinterface #423,  1          // InterfaceMethod java/nio/file/DirectoryStream.iterator:()Ljava/util/Iterator;
      63: astore        9
      65: aload         9
      67: invokeinterface #224,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      72: ifeq          104
      75: aload         9
      77: invokeinterface #228,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      82: checkcast     #49                 // class java/nio/file/Path
      85: astore        10
      87: aload         10
      89: ldc_w         #424                // String entry
      92: invokestatic  #280                // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
      95: aload         10
      97: aload_1
      98: invokestatic  #299                // Method insecureHandleEntry$PathsKt__PathRecursiveFunctionsKt:(Ljava/nio/file/Path;Lkotlin/io/path/ExceptionsCollector;)V
     101: goto          65
     104: nop
     105: getstatic     #289                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
     108: astore        6
     110: aload         4
     112: aload         5
     114: invokestatic  #295                // Method kotlin/io/CloseableKt.closeFinally:(Ljava/io/Closeable;Ljava/lang/Throwable;)V
     117: goto          142
     120: astore        6
     122: aload         6
     124: astore        5
     126: aload         6
     128: athrow
     129: astore        6
     131: aload         4
     133: aload         5
     135: invokestatic  #295                // Method kotlin/io/CloseableKt.closeFinally:(Ljava/io/Closeable;Ljava/lang/Throwable;)V
     138: aload         6
     140: athrow
     141: nop
     142: nop
     143: goto          154
     146: astore        11
     148: aload_1
     149: aload         11
     151: invokevirtual #327                // Method kotlin/io/path/ExceptionsCollector.collect:(Ljava/lang/Exception;)V
     154: nop
     155: return
    Exception table:
       from    to  target type
           8    18    21   Class java/nio/file/NoSuchFileException
          45   110   120   Class java/lang/Throwable
          45   110   129   any
         120   129   129   any
         129   131   129   any
           2   143   146   Class java/lang/Exception

  private static final java.nio.file.Path copyToRecursively$destination$PathsKt__PathRecursiveFunctionsKt(java.nio.file.Path, java.nio.file.Path, java.nio.file.Path);
    Code:
       0: aload_2
       1: aload_0
       2: invokestatic  #434                // Method kotlin/io/path/PathsKt.relativeTo:(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/nio/file/Path;
       5: astore_3
       6: aload_1
       7: aload_3
       8: invokevirtual #92                 // Method java/lang/Object.toString:()Ljava/lang/String;
      11: invokeinterface #438,  2          // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
      16: dup
      17: ldc_w         #440                // String target.resolve(relativePath.pathString)
      20: invokestatic  #280                // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
      23: areturn

  private static final java.nio.file.FileVisitResult copyToRecursively$error$PathsKt__PathRecursiveFunctionsKt(kotlin.jvm.functions.Function3<? super java.nio.file.Path, ? super java.nio.file.Path, ? super java.lang.Exception, ? extends kotlin.io.path.OnErrorResult>, java.nio.file.Path, java.nio.file.Path, java.nio.file.Path, java.lang.Exception);
    Code:
       0: aload_0
       1: aload_3
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokestatic  #449                // Method copyToRecursively$destination$PathsKt__PathRecursiveFunctionsKt:(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/nio/file/Path;
       8: aload         4
      10: invokeinterface #452,  4          // InterfaceMethod kotlin/jvm/functions/Function3.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #194                // class kotlin/io/path/OnErrorResult
      18: invokestatic  #454                // Method toFileVisitResult$PathsKt__PathRecursiveFunctionsKt:(Lkotlin/io/path/OnErrorResult;)Ljava/nio/file/FileVisitResult;
      21: areturn

  private static final java.nio.file.FileVisitResult copyToRecursively$copy$PathsKt__PathRecursiveFunctionsKt(kotlin.jvm.functions.Function3<? super kotlin.io.path.CopyActionContext, ? super java.nio.file.Path, ? super java.nio.file.Path, ? extends kotlin.io.path.CopyActionResult>, java.nio.file.Path, java.nio.file.Path, kotlin.jvm.functions.Function3<? super java.nio.file.Path, ? super java.nio.file.Path, ? super java.lang.Exception, ? extends kotlin.io.path.OnErrorResult>, java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes);
    Code:
       0: nop
       1: aload_0
       2: getstatic     #463                // Field kotlin/io/path/DefaultCopyActionContext.INSTANCE:Lkotlin/io/path/DefaultCopyActionContext;
       5: aload         4
       7: aload_1
       8: aload_2
       9: aload         4
      11: invokestatic  #449                // Method copyToRecursively$destination$PathsKt__PathRecursiveFunctionsKt:(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/nio/file/Path;
      14: invokeinterface #452,  4          // InterfaceMethod kotlin/jvm/functions/Function3.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #165                // class kotlin/io/path/CopyActionResult
      22: invokestatic  #465                // Method toFileVisitResult$PathsKt__PathRecursiveFunctionsKt:(Lkotlin/io/path/CopyActionResult;)Ljava/nio/file/FileVisitResult;
      25: astore        6
      27: goto          44
      30: astore        7
      32: aload_3
      33: aload_1
      34: aload_2
      35: aload         4
      37: aload         7
      39: invokestatic  #467                // Method copyToRecursively$error$PathsKt__PathRecursiveFunctionsKt:(Lkotlin/jvm/functions/Function3;Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/lang/Exception;)Ljava/nio/file/FileVisitResult;
      42: astore        6
      44: aload         6
      46: areturn
    Exception table:
       from    to  target type
           0    27    30   Class java/lang/Exception

  public static final java.nio.file.FileVisitResult access$copyToRecursively$copy(kotlin.jvm.functions.Function3, java.nio.file.Path, java.nio.file.Path, kotlin.jvm.functions.Function3, java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #473                // Method copyToRecursively$copy$PathsKt__PathRecursiveFunctionsKt:(Lkotlin/jvm/functions/Function3;Ljava/nio/file/Path;Ljava/nio/file/Path;Lkotlin/jvm/functions/Function3;Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
      11: areturn

  public static final java.nio.file.FileVisitResult access$copyToRecursively$error(kotlin.jvm.functions.Function3, java.nio.file.Path, java.nio.file.Path, java.nio.file.Path, java.lang.Exception);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #467                // Method copyToRecursively$error$PathsKt__PathRecursiveFunctionsKt:(Lkotlin/jvm/functions/Function3;Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/lang/Exception;)Ljava/nio/file/FileVisitResult;
       9: areturn

  public kotlin.io.path.PathsKt__PathRecursiveFunctionsKt();
    Code:
       0: aload_0
       1: invokespecial #475                // Method kotlin/io/path/PathsKt__PathReadWriteKt."<init>":()V
       4: return
}
