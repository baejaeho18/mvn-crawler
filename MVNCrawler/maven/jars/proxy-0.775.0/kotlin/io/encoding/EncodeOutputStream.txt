Compiled from "Base64IOStream.kt"
final class kotlin.io.encoding.EncodeOutputStream extends java.io.OutputStream {
  private final java.io.OutputStream output;

  private final kotlin.io.encoding.Base64 base64;

  private boolean isClosed;

  private int lineLength;

  private final byte[] symbolBuffer;

  private final byte[] byteBuffer;

  private int byteBufferLength;

  public kotlin.io.encoding.EncodeOutputStream(java.io.OutputStream, kotlin.io.encoding.Base64);
    Code:
       0: aload_1
       1: ldc           #9                  // String output
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #17                 // String base64
       9: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: invokespecial #20                 // Method java/io/OutputStream."<init>":()V
      16: aload_0
      17: aload_1
      18: putfield      #23                 // Field output:Ljava/io/OutputStream;
      21: aload_0
      22: aload_2
      23: putfield      #26                 // Field base64:Lkotlin/io/encoding/Base64;
      26: aload_0
      27: aload_0
      28: getfield      #26                 // Field base64:Lkotlin/io/encoding/Base64;
      31: invokevirtual #32                 // Method kotlin/io/encoding/Base64.isMimeScheme$kotlin_stdlib:()Z
      34: ifeq          42
      37: bipush        76
      39: goto          43
      42: iconst_m1
      43: putfield      #36                 // Field lineLength:I
      46: aload_0
      47: sipush        1024
      50: newarray       byte
      52: putfield      #40                 // Field symbolBuffer:[B
      55: aload_0
      56: iconst_3
      57: newarray       byte
      59: putfield      #43                 // Field byteBuffer:[B
      62: return

  public void write(int);
    Code:
       0: aload_0
       1: invokespecial #50                 // Method checkOpen:()V
       4: aload_0
       5: getfield      #43                 // Field byteBuffer:[B
       8: aload_0
       9: getfield      #53                 // Field byteBufferLength:I
      12: istore_2
      13: aload_0
      14: iload_2
      15: iconst_1
      16: iadd
      17: putfield      #53                 // Field byteBufferLength:I
      20: iload_2
      21: iload_1
      22: i2b
      23: bastore
      24: aload_0
      25: getfield      #53                 // Field byteBufferLength:I
      28: iconst_3
      29: if_icmpne     36
      32: aload_0
      33: invokespecial #56                 // Method encodeByteBufferIntoOutput:()V
      36: return

  public void write(byte[], int, int);
    Code:
       0: aload_1
       1: ldc           #60                 // String source
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokespecial #50                 // Method checkOpen:()V
      10: iload_2
      11: iflt          26
      14: iload_3
      15: iflt          26
      18: iload_2
      19: iload_3
      20: iadd
      21: aload_1
      22: arraylength
      23: if_icmple     72
      26: new           #62                 // class java/lang/IndexOutOfBoundsException
      29: dup
      30: new           #64                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #65                 // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #67                 // String offset:
      39: invokevirtual #71                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: iload_2
      43: invokevirtual #74                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      46: ldc           #76                 // String , length:
      48: invokevirtual #71                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: iload_3
      52: invokevirtual #74                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      55: ldc           #78                 // String , source size:
      57: invokevirtual #71                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_1
      61: arraylength
      62: invokevirtual #74                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      65: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: invokespecial #85                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      71: athrow
      72: iload_3
      73: ifne          77
      76: return
      77: aload_0
      78: getfield      #53                 // Field byteBufferLength:I
      81: iconst_3
      82: if_icmpge     89
      85: iconst_1
      86: goto          90
      89: iconst_0
      90: istore        4
      92: iload         4
      94: ifne          114
      97: ldc           #87                 // String Check failed.
      99: astore        5
     101: new           #89                 // class java/lang/IllegalStateException
     104: dup
     105: aload         5
     107: invokevirtual #92                 // Method java/lang/Object.toString:()Ljava/lang/String;
     110: invokespecial #93                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     113: athrow
     114: iload_2
     115: istore        4
     117: iload         4
     119: iload_3
     120: iadd
     121: istore        5
     123: aload_0
     124: getfield      #53                 // Field byteBufferLength:I
     127: ifeq          152
     130: iload         4
     132: aload_0
     133: aload_1
     134: iload         4
     136: iload         5
     138: invokespecial #97                 // Method copyIntoByteBuffer:([BII)I
     141: iadd
     142: istore        4
     144: aload_0
     145: getfield      #53                 // Field byteBufferLength:I
     148: ifeq          152
     151: return
     152: iload         4
     154: iconst_3
     155: iadd
     156: iload         5
     158: if_icmpgt     269
     161: aload_0
     162: getfield      #26                 // Field base64:Lkotlin/io/encoding/Base64;
     165: invokevirtual #32                 // Method kotlin/io/encoding/Base64.isMimeScheme$kotlin_stdlib:()Z
     168: ifeq          178
     171: aload_0
     172: getfield      #36                 // Field lineLength:I
     175: goto          183
     178: aload_0
     179: getfield      #40                 // Field symbolBuffer:[B
     182: arraylength
     183: iconst_4
     184: idiv
     185: istore        6
     187: iload         6
     189: iload         5
     191: iload         4
     193: isub
     194: iconst_3
     195: idiv
     196: invokestatic  #103                // Method java/lang/Math.min:(II)I
     199: istore        7
     201: iload         7
     203: iconst_3
     204: imul
     205: istore        8
     207: aload_0
     208: aload_1
     209: iload         4
     211: iload         4
     213: iload         8
     215: iadd
     216: invokespecial #106                // Method encodeIntoOutput:([BII)I
     219: istore        9
     221: iload         9
     223: iload         7
     225: iconst_4
     226: imul
     227: if_icmpne     234
     230: iconst_1
     231: goto          235
     234: iconst_0
     235: istore        10
     237: iload         10
     239: ifne          259
     242: ldc           #87                 // String Check failed.
     244: astore        11
     246: new           #89                 // class java/lang/IllegalStateException
     249: dup
     250: aload         11
     252: invokevirtual #92                 // Method java/lang/Object.toString:()Ljava/lang/String;
     255: invokespecial #93                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     258: athrow
     259: iload         4
     261: iload         8
     263: iadd
     264: istore        4
     266: goto          152
     269: aload_1
     270: aload_0
     271: getfield      #43                 // Field byteBuffer:[B
     274: iconst_0
     275: iload         4
     277: iload         5
     279: invokestatic  #112                // Method kotlin/collections/ArraysKt.copyInto:([B[BIII)[B
     282: pop
     283: aload_0
     284: iload         5
     286: iload         4
     288: isub
     289: putfield      #53                 // Field byteBufferLength:I
     292: return

  public void flush();
    Code:
       0: aload_0
       1: invokespecial #50                 // Method checkOpen:()V
       4: aload_0
       5: getfield      #23                 // Field output:Ljava/io/OutputStream;
       8: invokevirtual #124                // Method java/io/OutputStream.flush:()V
      11: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #129                // Field isClosed:Z
       4: ifne          30
       7: aload_0
       8: iconst_1
       9: putfield      #129                // Field isClosed:Z
      12: aload_0
      13: getfield      #53                 // Field byteBufferLength:I
      16: ifeq          23
      19: aload_0
      20: invokespecial #56                 // Method encodeByteBufferIntoOutput:()V
      23: aload_0
      24: getfield      #23                 // Field output:Ljava/io/OutputStream;
      27: invokevirtual #131                // Method java/io/OutputStream.close:()V
      30: return

  private final int copyIntoByteBuffer(byte[], int, int);
    Code:
       0: iconst_3
       1: aload_0
       2: getfield      #53                 // Field byteBufferLength:I
       5: isub
       6: iload_3
       7: iload_2
       8: isub
       9: invokestatic  #103                // Method java/lang/Math.min:(II)I
      12: istore        4
      14: aload_1
      15: aload_0
      16: getfield      #43                 // Field byteBuffer:[B
      19: aload_0
      20: getfield      #53                 // Field byteBufferLength:I
      23: iload_2
      24: iload_2
      25: iload         4
      27: iadd
      28: invokestatic  #112                // Method kotlin/collections/ArraysKt.copyInto:([B[BIII)[B
      31: pop
      32: aload_0
      33: aload_0
      34: getfield      #53                 // Field byteBufferLength:I
      37: iload         4
      39: iadd
      40: putfield      #53                 // Field byteBufferLength:I
      43: aload_0
      44: getfield      #53                 // Field byteBufferLength:I
      47: iconst_3
      48: if_icmpne     55
      51: aload_0
      52: invokespecial #56                 // Method encodeByteBufferIntoOutput:()V
      55: iload         4
      57: ireturn

  private final void encodeByteBufferIntoOutput();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #43                 // Field byteBuffer:[B
       5: iconst_0
       6: aload_0
       7: getfield      #53                 // Field byteBufferLength:I
      10: invokespecial #106                // Method encodeIntoOutput:([BII)I
      13: istore_1
      14: iload_1
      15: iconst_4
      16: if_icmpne     23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: istore_2
      25: iload_2
      26: ifne          44
      29: ldc           #87                 // String Check failed.
      31: astore_3
      32: new           #89                 // class java/lang/IllegalStateException
      35: dup
      36: aload_3
      37: invokevirtual #92                 // Method java/lang/Object.toString:()Ljava/lang/String;
      40: invokespecial #93                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: aload_0
      45: iconst_0
      46: putfield      #53                 // Field byteBufferLength:I
      49: return

  private final int encodeIntoOutput(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #26                 // Field base64:Lkotlin/io/encoding/Base64;
       4: aload_1
       5: aload_0
       6: getfield      #40                 // Field symbolBuffer:[B
       9: iconst_0
      10: iload_2
      11: iload_3
      12: invokevirtual #136                // Method kotlin/io/encoding/Base64.encodeIntoByteArray:([B[BIII)I
      15: istore        4
      17: aload_0
      18: getfield      #36                 // Field lineLength:I
      21: ifne          79
      24: aload_0
      25: getfield      #23                 // Field output:Ljava/io/OutputStream;
      28: getstatic     #140                // Field kotlin/io/encoding/Base64.Default:Lkotlin/io/encoding/Base64$Default;
      31: invokevirtual #146                // Method kotlin/io/encoding/Base64$Default.getMimeLineSeparatorSymbols$kotlin_stdlib:()[B
      34: invokevirtual #149                // Method java/io/OutputStream.write:([B)V
      37: aload_0
      38: bipush        76
      40: putfield      #36                 // Field lineLength:I
      43: iload         4
      45: bipush        76
      47: if_icmpgt     54
      50: iconst_1
      51: goto          55
      54: iconst_0
      55: istore        5
      57: iload         5
      59: ifne          79
      62: ldc           #87                 // String Check failed.
      64: astore        6
      66: new           #89                 // class java/lang/IllegalStateException
      69: dup
      70: aload         6
      72: invokevirtual #92                 // Method java/lang/Object.toString:()Ljava/lang/String;
      75: invokespecial #93                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      78: athrow
      79: aload_0
      80: getfield      #23                 // Field output:Ljava/io/OutputStream;
      83: aload_0
      84: getfield      #40                 // Field symbolBuffer:[B
      87: iconst_0
      88: iload         4
      90: invokevirtual #151                // Method java/io/OutputStream.write:([BII)V
      93: aload_0
      94: aload_0
      95: getfield      #36                 // Field lineLength:I
      98: iload         4
     100: isub
     101: putfield      #36                 // Field lineLength:I
     104: iload         4
     106: ireturn

  private final void checkOpen();
    Code:
       0: aload_0
       1: getfield      #129                // Field isClosed:Z
       4: ifeq          17
       7: new           #153                // class java/io/IOException
      10: dup
      11: ldc           #155                // String The output stream is closed.
      13: invokespecial #156                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return
}
