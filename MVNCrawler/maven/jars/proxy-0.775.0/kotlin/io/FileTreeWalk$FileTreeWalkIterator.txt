Compiled from "FileTreeWalk.kt"
final class kotlin.io.FileTreeWalk$FileTreeWalkIterator extends kotlin.collections.AbstractIterator<java.io.File> {
  private final java.util.ArrayDeque<kotlin.io.FileTreeWalk$WalkState> state;

  final kotlin.io.FileTreeWalk this$0;

  public kotlin.io.FileTreeWalk$FileTreeWalkIterator();
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field this$0:Lkotlin/io/FileTreeWalk;
       5: aload_0
       6: invokespecial #14                 // Method kotlin/collections/AbstractIterator."<init>":()V
       9: aload_0
      10: new           #16                 // class java/util/ArrayDeque
      13: dup
      14: invokespecial #17                 // Method java/util/ArrayDeque."<init>":()V
      17: putfield      #21                 // Field state:Ljava/util/ArrayDeque;
      20: nop
      21: nop
      22: aload_0
      23: getfield      #12                 // Field this$0:Lkotlin/io/FileTreeWalk;
      26: invokestatic  #27                 // Method kotlin/io/FileTreeWalk.access$getStart$p:(Lkotlin/io/FileTreeWalk;)Ljava/io/File;
      29: invokevirtual #33                 // Method java/io/File.isDirectory:()Z
      32: ifeq          56
      35: aload_0
      36: getfield      #21                 // Field state:Ljava/util/ArrayDeque;
      39: aload_0
      40: aload_0
      41: getfield      #12                 // Field this$0:Lkotlin/io/FileTreeWalk;
      44: invokestatic  #27                 // Method kotlin/io/FileTreeWalk.access$getStart$p:(Lkotlin/io/FileTreeWalk;)Ljava/io/File;
      47: invokespecial #37                 // Method directoryState:(Ljava/io/File;)Lkotlin/io/FileTreeWalk$DirectoryState;
      50: invokevirtual #41                 // Method java/util/ArrayDeque.push:(Ljava/lang/Object;)V
      53: goto          98
      56: aload_0
      57: getfield      #12                 // Field this$0:Lkotlin/io/FileTreeWalk;
      60: invokestatic  #27                 // Method kotlin/io/FileTreeWalk.access$getStart$p:(Lkotlin/io/FileTreeWalk;)Ljava/io/File;
      63: invokevirtual #44                 // Method java/io/File.isFile:()Z
      66: ifeq          94
      69: aload_0
      70: getfield      #21                 // Field state:Ljava/util/ArrayDeque;
      73: new           #46                 // class kotlin/io/FileTreeWalk$FileTreeWalkIterator$SingleFileState
      76: dup
      77: aload_0
      78: aload_0
      79: getfield      #12                 // Field this$0:Lkotlin/io/FileTreeWalk;
      82: invokestatic  #27                 // Method kotlin/io/FileTreeWalk.access$getStart$p:(Lkotlin/io/FileTreeWalk;)Ljava/io/File;
      85: invokespecial #49                 // Method kotlin/io/FileTreeWalk$FileTreeWalkIterator$SingleFileState."<init>":(Lkotlin/io/FileTreeWalk$FileTreeWalkIterator;Ljava/io/File;)V
      88: invokevirtual #41                 // Method java/util/ArrayDeque.push:(Ljava/lang/Object;)V
      91: goto          98
      94: aload_0
      95: invokevirtual #52                 // Method done:()V
      98: nop
      99: return

  protected void computeNext();
    Code:
       0: aload_0
       1: invokespecial #59                 // Method gotoNext:()Ljava/io/File;
       4: astore_1
       5: aload_1
       6: ifnull        17
       9: aload_0
      10: aload_1
      11: invokevirtual #62                 // Method setNext:(Ljava/lang/Object;)V
      14: goto          21
      17: aload_0
      18: invokevirtual #52                 // Method done:()V
      21: return

  private final kotlin.io.FileTreeWalk$DirectoryState directoryState(java.io.File);
    Code:
       0: aload_0
       1: getfield      #12                 // Field this$0:Lkotlin/io/FileTreeWalk;
       4: invokestatic  #68                 // Method kotlin/io/FileTreeWalk.access$getDirection$p:(Lkotlin/io/FileTreeWalk;)Lkotlin/io/FileWalkDirection;
       7: getstatic     #74                 // Field kotlin/io/FileTreeWalk$FileTreeWalkIterator$WhenMappings.$EnumSwitchMapping$0:[I
      10: swap
      11: invokevirtual #80                 // Method kotlin/io/FileWalkDirection.ordinal:()I
      14: iaload
      15: tableswitch   { // 1 to 2
                     1: 36
                     2: 51
               default: 66
          }
      36: new           #82                 // class kotlin/io/FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState
      39: dup
      40: aload_0
      41: aload_1
      42: invokespecial #83                 // Method kotlin/io/FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState."<init>":(Lkotlin/io/FileTreeWalk$FileTreeWalkIterator;Ljava/io/File;)V
      45: checkcast     #85                 // class kotlin/io/FileTreeWalk$DirectoryState
      48: goto          74
      51: new           #87                 // class kotlin/io/FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState
      54: dup
      55: aload_0
      56: aload_1
      57: invokespecial #88                 // Method kotlin/io/FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState."<init>":(Lkotlin/io/FileTreeWalk$FileTreeWalkIterator;Ljava/io/File;)V
      60: checkcast     #85                 // class kotlin/io/FileTreeWalk$DirectoryState
      63: goto          74
      66: new           #90                 // class kotlin/NoWhenBranchMatchedException
      69: dup
      70: invokespecial #91                 // Method kotlin/NoWhenBranchMatchedException."<init>":()V
      73: athrow
      74: areturn

  private final java.io.File gotoNext();
    Code:
       0: aload_0
       1: getfield      #21                 // Field state:Ljava/util/ArrayDeque;
       4: invokevirtual #96                 // Method java/util/ArrayDeque.peek:()Ljava/lang/Object;
       7: checkcast     #98                 // class kotlin/io/FileTreeWalk$WalkState
      10: dup
      11: ifnonnull     17
      14: pop
      15: aconst_null
      16: areturn
      17: astore_1
      18: aload_1
      19: invokevirtual #101                // Method kotlin/io/FileTreeWalk$WalkState.step:()Ljava/io/File;
      22: astore_2
      23: aload_2
      24: ifnonnull     40
      27: aload_0
      28: getfield      #21                 // Field state:Ljava/util/ArrayDeque;
      31: invokevirtual #104                // Method java/util/ArrayDeque.pop:()Ljava/lang/Object;
      34: pop
      35: aload_0
      36: astore_0
      37: goto          0
      40: aload_2
      41: aload_1
      42: invokevirtual #107                // Method kotlin/io/FileTreeWalk$WalkState.getRoot:()Ljava/io/File;
      45: invokestatic  #113                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      48: ifne          75
      51: aload_2
      52: invokevirtual #33                 // Method java/io/File.isDirectory:()Z
      55: ifeq          75
      58: aload_0
      59: getfield      #21                 // Field state:Ljava/util/ArrayDeque;
      62: invokevirtual #116                // Method java/util/ArrayDeque.size:()I
      65: aload_0
      66: getfield      #12                 // Field this$0:Lkotlin/io/FileTreeWalk;
      69: invokestatic  #120                // Method kotlin/io/FileTreeWalk.access$getMaxDepth$p:(Lkotlin/io/FileTreeWalk;)I
      72: if_icmplt     77
      75: aload_2
      76: areturn
      77: aload_0
      78: getfield      #21                 // Field state:Ljava/util/ArrayDeque;
      81: aload_0
      82: aload_2
      83: invokespecial #37                 // Method directoryState:(Ljava/io/File;)Lkotlin/io/FileTreeWalk$DirectoryState;
      86: invokevirtual #41                 // Method java/util/ArrayDeque.push:(Ljava/lang/Object;)V
      89: aload_0
      90: astore_0
      91: goto          0
}
