Compiled from "TimeSource.kt"
public final class kotlin.time.TimeSource$Monotonic$ValueTimeMark implements kotlin.time.ComparableTimeMark {
  private final long reading;

  public static long elapsedNow-UwyO8pc(long);
    Code:
       0: getstatic     #14                 // Field kotlin/time/MonotonicTimeSource.INSTANCE:Lkotlin/time/MonotonicTimeSource;
       3: lload_0
       4: invokevirtual #17                 // Method kotlin/time/MonotonicTimeSource."elapsedFrom-6eNON_k":(J)J
       7: lreturn

  public long elapsedNow-UwyO8pc();
    Code:
       0: aload_0
       1: getfield      #23                 // Field reading:J
       4: invokestatic  #25                 // Method "elapsedNow-UwyO8pc":(J)J
       7: lreturn

  public static long plus-LRDsOJo(long, long);
    Code:
       0: getstatic     #14                 // Field kotlin/time/MonotonicTimeSource.INSTANCE:Lkotlin/time/MonotonicTimeSource;
       3: lload_0
       4: lload_2
       5: invokevirtual #32                 // Method kotlin/time/MonotonicTimeSource."adjustReading-6QKq23U":(JJ)J
       8: lreturn

  public long plus-LRDsOJo(long);
    Code:
       0: aload_0
       1: getfield      #23                 // Field reading:J
       4: lload_1
       5: invokestatic  #35                 // Method "plus-LRDsOJo":(JJ)J
       8: lreturn

  public static long minus-LRDsOJo(long, long);
    Code:
       0: getstatic     #14                 // Field kotlin/time/MonotonicTimeSource.INSTANCE:Lkotlin/time/MonotonicTimeSource;
       3: lload_0
       4: lload_2
       5: invokestatic  #41                 // Method kotlin/time/Duration."unaryMinus-UwyO8pc":(J)J
       8: invokevirtual #32                 // Method kotlin/time/MonotonicTimeSource."adjustReading-6QKq23U":(JJ)J
      11: lreturn

  public long minus-LRDsOJo(long);
    Code:
       0: aload_0
       1: getfield      #23                 // Field reading:J
       4: lload_1
       5: invokestatic  #43                 // Method "minus-LRDsOJo":(JJ)J
       8: lreturn

  public static boolean hasPassedNow-impl(long);
    Code:
       0: lload_0
       1: invokestatic  #25                 // Method "elapsedNow-UwyO8pc":(J)J
       4: invokestatic  #48                 // Method kotlin/time/Duration."isNegative-impl":(J)Z
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean hasPassedNow();
    Code:
       0: aload_0
       1: getfield      #23                 // Field reading:J
       4: invokestatic  #52                 // Method "hasPassedNow-impl":(J)Z
       7: ireturn

  public static boolean hasNotPassedNow-impl(long);
    Code:
       0: lload_0
       1: invokestatic  #25                 // Method "elapsedNow-UwyO8pc":(J)J
       4: invokestatic  #48                 // Method kotlin/time/Duration."isNegative-impl":(J)Z
       7: ireturn

  public boolean hasNotPassedNow();
    Code:
       0: aload_0
       1: getfield      #23                 // Field reading:J
       4: invokestatic  #56                 // Method "hasNotPassedNow-impl":(J)Z
       7: ireturn

  public static long minus-UwyO8pc(long, kotlin.time.ComparableTimeMark);
    Code:
       0: aload_2
       1: ldc           #61                 // String other
       3: invokestatic  #67                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: instanceof    #2                  // class kotlin/time/TimeSource$Monotonic$ValueTimeMark
      10: ifne          52
      13: new           #69                 // class java/lang/IllegalArgumentException
      16: dup
      17: new           #71                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #75                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #77                 // String Subtracting or comparing time marks from different time sources is not possible:
      26: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: lload_0
      30: invokestatic  #85                 // Method "toString-impl":(J)Ljava/lang/String;
      33: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      36: ldc           #90                 // String  and
      38: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_2
      42: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      45: invokevirtual #94                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: invokespecial #97                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: lload_0
      53: aload_2
      54: checkcast     #2                  // class kotlin/time/TimeSource$Monotonic$ValueTimeMark
      57: invokevirtual #100                // Method "unbox-impl":()J
      60: invokestatic  #103                // Method "minus-6eNON_k":(JJ)J
      63: lreturn

  public long minus-UwyO8pc(kotlin.time.ComparableTimeMark);
    Code:
       0: aload_1
       1: ldc           #61                 // String other
       3: invokestatic  #67                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #23                 // Field reading:J
      10: aload_1
      11: invokestatic  #107                // Method "minus-UwyO8pc":(JLkotlin/time/ComparableTimeMark;)J
      14: lreturn

  public static final long minus-6eNON_k(long, long);
    Code:
       0: getstatic     #14                 // Field kotlin/time/MonotonicTimeSource.INSTANCE:Lkotlin/time/MonotonicTimeSource;
       3: lload_0
       4: lload_2
       5: invokevirtual #110                // Method kotlin/time/MonotonicTimeSource."differenceBetween-fRLX17w":(JJ)J
       8: lreturn

  public static final int compareTo-6eNON_k(long, long);
    Code:
       0: lload_0
       1: lload_2
       2: invokestatic  #103                // Method "minus-6eNON_k":(JJ)J
       5: getstatic     #116                // Field kotlin/time/Duration.Companion:Lkotlin/time/Duration$Companion;
       8: invokevirtual #121                // Method kotlin/time/Duration$Companion."getZERO-UwyO8pc":()J
      11: invokestatic  #124                // Method kotlin/time/Duration."compareTo-LRDsOJo":(JJ)I
      14: ireturn

  public static int compareTo-impl(long, kotlin.time.ComparableTimeMark);
    Code:
       0: aload_2
       1: ldc           #61                 // String other
       3: invokestatic  #67                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: lload_0
       7: invokestatic  #130                // Method "box-impl":(J)Lkotlin/time/TimeSource$Monotonic$ValueTimeMark;
      10: aload_2
      11: invokevirtual #134                // Method compareTo:(Lkotlin/time/ComparableTimeMark;)I
      14: ireturn

  public int compareTo(kotlin.time.ComparableTimeMark);
    Code:
       0: aload_0
       1: checkcast     #6                  // class kotlin/time/ComparableTimeMark
       4: aload_1
       5: invokestatic  #139                // Method kotlin/time/ComparableTimeMark$DefaultImpls.compareTo:(Lkotlin/time/ComparableTimeMark;Lkotlin/time/ComparableTimeMark;)I
       8: ireturn

  public static java.lang.String toString-impl(long);
    Code:
       0: new           #71                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #75                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #141                // String ValueTimeMark(reading=
       9: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: lload_0
      13: invokevirtual #144                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      16: bipush        41
      18: invokevirtual #147                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      21: invokevirtual #94                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      24: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #23                 // Field reading:J
       4: invokestatic  #85                 // Method "toString-impl":(J)Ljava/lang/String;
       7: areturn

  public static int hashCode-impl(long);
    Code:
       0: lload_0
       1: invokestatic  #154                // Method java/lang/Long.hashCode:(J)I
       4: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #23                 // Field reading:J
       4: invokestatic  #157                // Method "hashCode-impl":(J)I
       7: ireturn

  public static boolean equals-impl(long, java.lang.Object);
    Code:
       0: aload_2
       1: instanceof    #2                  // class kotlin/time/TimeSource$Monotonic$ValueTimeMark
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_2
      10: checkcast     #2                  // class kotlin/time/TimeSource$Monotonic$ValueTimeMark
      13: invokevirtual #100                // Method "unbox-impl":()J
      16: lstore_3
      17: lload_0
      18: lload_3
      19: lcmp
      20: ifeq          25
      23: iconst_0
      24: ireturn
      25: iconst_1
      26: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #23                 // Field reading:J
       4: aload_1
       5: invokestatic  #164                // Method "equals-impl":(JLjava/lang/Object;)Z
       8: ireturn

  private kotlin.time.TimeSource$Monotonic$ValueTimeMark(long);
    Code:
       0: aload_0
       1: invokespecial #166                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lload_1
       6: putfield      #23                 // Field reading:J
       9: return

  public static long constructor-impl(long);
    Code:
       0: lload_0
       1: lreturn

  public static final kotlin.time.TimeSource$Monotonic$ValueTimeMark box-impl(long);
    Code:
       0: new           #2                  // class kotlin/time/TimeSource$Monotonic$ValueTimeMark
       3: dup
       4: lload_0
       5: invokespecial #169                // Method "<init>":(J)V
       8: areturn

  public final long unbox-impl();
    Code:
       0: aload_0
       1: getfield      #23                 // Field reading:J
       4: lreturn

  public static final boolean equals-impl0(long, long);
    Code:
       0: lload_0
       1: lload_2
       2: lcmp
       3: ifne          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: ireturn

  public kotlin.time.ComparableTimeMark plus-LRDsOJo(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #177                // Method "plus-LRDsOJo":(J)J
       5: invokestatic  #130                // Method "box-impl":(J)Lkotlin/time/TimeSource$Monotonic$ValueTimeMark;
       8: areturn

  public kotlin.time.TimeMark plus-LRDsOJo(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #177                // Method "plus-LRDsOJo":(J)J
       5: invokestatic  #130                // Method "box-impl":(J)Lkotlin/time/TimeSource$Monotonic$ValueTimeMark;
       8: areturn

  public kotlin.time.ComparableTimeMark minus-LRDsOJo(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #180                // Method "minus-LRDsOJo":(J)J
       5: invokestatic  #130                // Method "box-impl":(J)Lkotlin/time/TimeSource$Monotonic$ValueTimeMark;
       8: areturn

  public kotlin.time.TimeMark minus-LRDsOJo(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #180                // Method "minus-LRDsOJo":(J)J
       5: invokestatic  #130                // Method "box-impl":(J)Lkotlin/time/TimeSource$Monotonic$ValueTimeMark;
       8: areturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #6                  // class kotlin/time/ComparableTimeMark
       5: invokevirtual #134                // Method compareTo:(Lkotlin/time/ComparableTimeMark;)I
       8: ireturn
}
