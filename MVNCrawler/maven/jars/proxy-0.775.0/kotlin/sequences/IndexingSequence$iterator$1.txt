Compiled from "Sequences.kt"
public final class kotlin.sequences.IndexingSequence$iterator$1 implements java.util.Iterator<kotlin.collections.IndexedValue<? extends T>>, kotlin.jvm.internal.markers.KMappedMarker {
  private final java.util.Iterator<T> iterator;

  private int index;

  kotlin.sequences.IndexingSequence$iterator$1(kotlin.sequences.IndexingSequence<T>);
    Code:
       0: aload_0
       1: invokespecial #15                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #21                 // Method kotlin/sequences/IndexingSequence.access$getSequence$p:(Lkotlin/sequences/IndexingSequence;)Lkotlin/sequences/Sequence;
       9: invokeinterface #27,  1           // InterfaceMethod kotlin/sequences/Sequence.iterator:()Ljava/util/Iterator;
      14: putfield      #30                 // Field iterator:Ljava/util/Iterator;
      17: return

  public final java.util.Iterator<T> getIterator();
    Code:
       0: aload_0
       1: getfield      #30                 // Field iterator:Ljava/util/Iterator;
       4: areturn

  public final int getIndex();
    Code:
       0: aload_0
       1: getfield      #43                 // Field index:I
       4: ireturn

  public final void setIndex(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #43                 // Field index:I
       5: return

  public kotlin.collections.IndexedValue<T> next();
    Code:
       0: new           #51                 // class kotlin/collections/IndexedValue
       3: dup
       4: aload_0
       5: getfield      #43                 // Field index:I
       8: istore_1
       9: aload_0
      10: iload_1
      11: iconst_1
      12: iadd
      13: putfield      #43                 // Field index:I
      16: iload_1
      17: istore_1
      18: iload_1
      19: ifge          25
      22: invokestatic  #56                 // Method kotlin/collections/CollectionsKt.throwIndexOverflow:()V
      25: iload_1
      26: aload_0
      27: getfield      #30                 // Field iterator:Ljava/util/Iterator;
      30: invokeinterface #59,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: invokespecial #62                 // Method kotlin/collections/IndexedValue."<init>":(ILjava/lang/Object;)V
      38: areturn

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #30                 // Field iterator:Ljava/util/Iterator;
       4: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
       9: ireturn

  public void remove();
    Code:
       0: new           #69                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #71                 // String Operation is not supported for read-only collection
       6: invokespecial #74                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.lang.Object next();
    Code:
       0: aload_0
       1: invokevirtual #76                 // Method next:()Lkotlin/collections/IndexedValue;
       4: areturn
}
