Compiled from "Sequences.kt"
public final class kotlin.sequences.TakeSequence<T> implements kotlin.sequences.Sequence<T>, kotlin.sequences.DropTakeSequence<T> {
  private final kotlin.sequences.Sequence<T> sequence;

  private final int count;

  public kotlin.sequences.TakeSequence(kotlin.sequences.Sequence<? extends T>, int);
    Code:
       0: aload_1
       1: ldc           #15                 // String sequence
       3: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokespecial #24                 // Method java/lang/Object."<init>":()V
      10: aload_0
      11: aload_1
      12: putfield      #27                 // Field sequence:Lkotlin/sequences/Sequence;
      15: aload_0
      16: iload_2
      17: putfield      #31                 // Field count:I
      20: nop
      21: aload_0
      22: getfield      #31                 // Field count:I
      25: iflt          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: istore_3
      34: iload_3
      35: ifne          83
      38: iconst_0
      39: istore        4
      41: new           #33                 // class java/lang/StringBuilder
      44: dup
      45: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      48: ldc           #36                 // String count must be non-negative, but was
      50: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_0
      54: getfield      #31                 // Field count:I
      57: invokevirtual #43                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      60: bipush        46
      62: invokevirtual #46                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      65: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: astore        4
      70: new           #52                 // class java/lang/IllegalArgumentException
      73: dup
      74: aload         4
      76: invokevirtual #53                 // Method java/lang/Object.toString:()Ljava/lang/String;
      79: invokespecial #56                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      82: athrow
      83: nop
      84: return

  public kotlin.sequences.Sequence<T> drop(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #31                 // Field count:I
       5: if_icmplt     14
       8: invokestatic  #68                 // Method kotlin/sequences/SequencesKt.emptySequence:()Lkotlin/sequences/Sequence;
      11: goto          33
      14: new           #70                 // class kotlin/sequences/SubSequence
      17: dup
      18: aload_0
      19: getfield      #27                 // Field sequence:Lkotlin/sequences/Sequence;
      22: iload_1
      23: aload_0
      24: getfield      #31                 // Field count:I
      27: invokespecial #73                 // Method kotlin/sequences/SubSequence."<init>":(Lkotlin/sequences/Sequence;II)V
      30: checkcast     #7                  // class kotlin/sequences/Sequence
      33: areturn

  public kotlin.sequences.Sequence<T> take(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #31                 // Field count:I
       5: if_icmplt     15
       8: aload_0
       9: checkcast     #7                  // class kotlin/sequences/Sequence
      12: goto          30
      15: new           #2                  // class kotlin/sequences/TakeSequence
      18: dup
      19: aload_0
      20: getfield      #27                 // Field sequence:Lkotlin/sequences/Sequence;
      23: iload_1
      24: invokespecial #77                 // Method "<init>":(Lkotlin/sequences/Sequence;I)V
      27: checkcast     #7                  // class kotlin/sequences/Sequence
      30: areturn

  public java.util.Iterator<T> iterator();
    Code:
       0: new           #82                 // class kotlin/sequences/TakeSequence$iterator$1
       3: dup
       4: aload_0
       5: invokespecial #85                 // Method kotlin/sequences/TakeSequence$iterator$1."<init>":(Lkotlin/sequences/TakeSequence;)V
       8: checkcast     #87                 // class java/util/Iterator
      11: areturn

  public static final int access$getCount$p(kotlin.sequences.TakeSequence);
    Code:
       0: aload_0
       1: getfield      #31                 // Field count:I
       4: ireturn

  public static final kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.TakeSequence);
    Code:
       0: aload_0
       1: getfield      #27                 // Field sequence:Lkotlin/sequences/Sequence;
       4: areturn
}
