Compiled from "Sequences.kt"
public final class kotlin.sequences.SubSequence<T> implements kotlin.sequences.Sequence<T>, kotlin.sequences.DropTakeSequence<T> {
  private final kotlin.sequences.Sequence<T> sequence;

  private final int startIndex;

  private final int endIndex;

  public kotlin.sequences.SubSequence(kotlin.sequences.Sequence<? extends T>, int, int);
    Code:
       0: aload_1
       1: ldc           #15                 // String sequence
       3: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokespecial #24                 // Method java/lang/Object."<init>":()V
      10: aload_0
      11: aload_1
      12: putfield      #27                 // Field sequence:Lkotlin/sequences/Sequence;
      15: aload_0
      16: iload_2
      17: putfield      #31                 // Field startIndex:I
      20: aload_0
      21: iload_3
      22: putfield      #34                 // Field endIndex:I
      25: nop
      26: aload_0
      27: getfield      #31                 // Field startIndex:I
      30: iflt          37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: istore        4
      40: iload         4
      42: ifne          85
      45: iconst_0
      46: istore        5
      48: new           #36                 // class java/lang/StringBuilder
      51: dup
      52: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
      55: ldc           #39                 // String startIndex should be non-negative, but is
      57: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: getfield      #31                 // Field startIndex:I
      64: invokevirtual #46                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      67: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: astore        5
      72: new           #52                 // class java/lang/IllegalArgumentException
      75: dup
      76: aload         5
      78: invokevirtual #53                 // Method java/lang/Object.toString:()Ljava/lang/String;
      81: invokespecial #56                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      84: athrow
      85: aload_0
      86: getfield      #34                 // Field endIndex:I
      89: iflt          96
      92: iconst_1
      93: goto          97
      96: iconst_0
      97: istore        4
      99: iload         4
     101: ifne          144
     104: iconst_0
     105: istore        5
     107: new           #36                 // class java/lang/StringBuilder
     110: dup
     111: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
     114: ldc           #58                 // String endIndex should be non-negative, but is
     116: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: aload_0
     120: getfield      #34                 // Field endIndex:I
     123: invokevirtual #46                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     126: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     129: astore        5
     131: new           #52                 // class java/lang/IllegalArgumentException
     134: dup
     135: aload         5
     137: invokevirtual #53                 // Method java/lang/Object.toString:()Ljava/lang/String;
     140: invokespecial #56                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     143: athrow
     144: aload_0
     145: getfield      #34                 // Field endIndex:I
     148: aload_0
     149: getfield      #31                 // Field startIndex:I
     152: if_icmplt     159
     155: iconst_1
     156: goto          160
     159: iconst_0
     160: istore        4
     162: iload         4
     164: ifne          219
     167: iconst_0
     168: istore        5
     170: new           #36                 // class java/lang/StringBuilder
     173: dup
     174: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
     177: ldc           #60                 // String endIndex should be not less than startIndex, but was
     179: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     182: aload_0
     183: getfield      #34                 // Field endIndex:I
     186: invokevirtual #46                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     189: ldc           #62                 // String  <
     191: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     194: aload_0
     195: getfield      #31                 // Field startIndex:I
     198: invokevirtual #46                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     201: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     204: astore        5
     206: new           #52                 // class java/lang/IllegalArgumentException
     209: dup
     210: aload         5
     212: invokevirtual #53                 // Method java/lang/Object.toString:()Ljava/lang/String;
     215: invokespecial #56                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     218: athrow
     219: nop
     220: return

  private final int getCount();
    Code:
       0: aload_0
       1: getfield      #34                 // Field endIndex:I
       4: aload_0
       5: getfield      #31                 // Field startIndex:I
       8: isub
       9: ireturn

  public kotlin.sequences.Sequence<T> drop(int);
    Code:
       0: iload_1
       1: aload_0
       2: invokespecial #74                 // Method getCount:()I
       5: if_icmplt     14
       8: invokestatic  #80                 // Method kotlin/sequences/SequencesKt.emptySequence:()Lkotlin/sequences/Sequence;
      11: goto          38
      14: new           #2                  // class kotlin/sequences/SubSequence
      17: dup
      18: aload_0
      19: getfield      #27                 // Field sequence:Lkotlin/sequences/Sequence;
      22: aload_0
      23: getfield      #31                 // Field startIndex:I
      26: iload_1
      27: iadd
      28: aload_0
      29: getfield      #34                 // Field endIndex:I
      32: invokespecial #82                 // Method "<init>":(Lkotlin/sequences/Sequence;II)V
      35: checkcast     #7                  // class kotlin/sequences/Sequence
      38: areturn

  public kotlin.sequences.Sequence<T> take(int);
    Code:
       0: iload_1
       1: aload_0
       2: invokespecial #74                 // Method getCount:()I
       5: if_icmplt     15
       8: aload_0
       9: checkcast     #7                  // class kotlin/sequences/Sequence
      12: goto          39
      15: new           #2                  // class kotlin/sequences/SubSequence
      18: dup
      19: aload_0
      20: getfield      #27                 // Field sequence:Lkotlin/sequences/Sequence;
      23: aload_0
      24: getfield      #31                 // Field startIndex:I
      27: aload_0
      28: getfield      #31                 // Field startIndex:I
      31: iload_1
      32: iadd
      33: invokespecial #82                 // Method "<init>":(Lkotlin/sequences/Sequence;II)V
      36: checkcast     #7                  // class kotlin/sequences/Sequence
      39: areturn

  public java.util.Iterator<T> iterator();
    Code:
       0: new           #89                 // class kotlin/sequences/SubSequence$iterator$1
       3: dup
       4: aload_0
       5: invokespecial #92                 // Method kotlin/sequences/SubSequence$iterator$1."<init>":(Lkotlin/sequences/SubSequence;)V
       8: checkcast     #94                 // class java/util/Iterator
      11: areturn

  public static final kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.SubSequence);
    Code:
       0: aload_0
       1: getfield      #27                 // Field sequence:Lkotlin/sequences/Sequence;
       4: areturn

  public static final int access$getStartIndex$p(kotlin.sequences.SubSequence);
    Code:
       0: aload_0
       1: getfield      #31                 // Field startIndex:I
       4: ireturn

  public static final int access$getEndIndex$p(kotlin.sequences.SubSequence);
    Code:
       0: aload_0
       1: getfield      #34                 // Field endIndex:I
       4: ireturn
}
