Compiled from "Ranges.kt"
final class kotlin.ranges.OpenEndFloatRange implements kotlin.ranges.OpenEndRange<java.lang.Float> {
  private final float _start;

  private final float _endExclusive;

  public kotlin.ranges.OpenEndFloatRange(float, float);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: fload_1
       6: putfield      #16                 // Field _start:F
       9: aload_0
      10: fload_2
      11: putfield      #19                 // Field _endExclusive:F
      14: return

  public java.lang.Float getStart();
    Code:
       0: aload_0
       1: getfield      #16                 // Field _start:F
       4: invokestatic  #32                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
       7: areturn

  public java.lang.Float getEndExclusive();
    Code:
       0: aload_0
       1: getfield      #19                 // Field _endExclusive:F
       4: invokestatic  #32                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
       7: areturn

  private final boolean lessThanOrEquals(float, float);
    Code:
       0: fload_1
       1: fload_2
       2: fcmpg
       3: ifgt          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: ireturn

  public boolean contains(float);
    Code:
       0: fload_1
       1: aload_0
       2: getfield      #16                 // Field _start:F
       5: fcmpl
       6: iflt          22
       9: fload_1
      10: aload_0
      11: getfield      #19                 // Field _endExclusive:F
      14: fcmpg
      15: ifge          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #16                 // Field _start:F
       4: aload_0
       5: getfield      #19                 // Field _endExclusive:F
       8: fcmpg
       9: iflt          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class kotlin/ranges/OpenEndFloatRange
       4: ifeq          74
       7: aload_0
       8: invokevirtual #47                 // Method isEmpty:()Z
      11: ifeq          24
      14: aload_1
      15: checkcast     #2                  // class kotlin/ranges/OpenEndFloatRange
      18: invokevirtual #47                 // Method isEmpty:()Z
      21: ifne          70
      24: aload_0
      25: getfield      #16                 // Field _start:F
      28: aload_1
      29: checkcast     #2                  // class kotlin/ranges/OpenEndFloatRange
      32: getfield      #16                 // Field _start:F
      35: fcmpg
      36: ifne          43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: ifeq          74
      47: aload_0
      48: getfield      #19                 // Field _endExclusive:F
      51: aload_1
      52: checkcast     #2                  // class kotlin/ranges/OpenEndFloatRange
      55: getfield      #19                 // Field _endExclusive:F
      58: fcmpg
      59: ifne          66
      62: iconst_1
      63: goto          67
      66: iconst_0
      67: ifeq          74
      70: iconst_1
      71: goto          75
      74: iconst_0
      75: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method isEmpty:()Z
       4: ifeq          11
       7: iconst_m1
       8: goto          29
      11: bipush        31
      13: aload_0
      14: getfield      #16                 // Field _start:F
      17: invokestatic  #54                 // Method java/lang/Float.hashCode:(F)I
      20: imul
      21: aload_0
      22: getfield      #19                 // Field _endExclusive:F
      25: invokestatic  #54                 // Method java/lang/Float.hashCode:(F)I
      28: iadd
      29: ireturn

  public java.lang.String toString();
    Code:
       0: new           #58                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #59                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #16                 // Field _start:F
      11: invokevirtual #63                 // Method java/lang/StringBuilder.append:(F)Ljava/lang/StringBuilder;
      14: ldc           #65                 // String ..<
      16: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #19                 // Field _endExclusive:F
      23: invokevirtual #63                 // Method java/lang/StringBuilder.append:(F)Ljava/lang/StringBuilder;
      26: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: areturn

  public java.lang.Comparable getStart();
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method getStart:()Ljava/lang/Float;
       4: checkcast     #75                 // class java/lang/Comparable
       7: areturn

  public java.lang.Comparable getEndExclusive();
    Code:
       0: aload_0
       1: invokevirtual #77                 // Method getEndExclusive:()Ljava/lang/Float;
       4: checkcast     #75                 // class java/lang/Comparable
       7: areturn

  public boolean contains(java.lang.Comparable);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #80                 // class java/lang/Number
       5: invokevirtual #84                 // Method java/lang/Number.floatValue:()F
       8: invokevirtual #86                 // Method contains:(F)Z
      11: ireturn
}
