Compiled from "CountingReader.java"
final class org.wildfly.client.config.CountingReader extends java.io.Reader {
  private int lineNumber;

  private int columnNumber;

  private int characterOffset;

  private final java.io.Reader reader;

  org.wildfly.client.config.CountingReader(java.io.Reader);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/Reader."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field lineNumber:I
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field columnNumber:I
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field characterOffset:I
      19: aload_0
      20: aload_1
      21: putfield      #5                  // Field reader:Ljava/io/Reader;
      24: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field reader:Ljava/io/Reader;
       4: invokevirtual #6                  // Method java/io/Reader.read:()I
       7: istore_1
       8: iload_1
       9: iconst_m1
      10: if_icmpne     15
      13: iconst_m1
      14: ireturn
      15: aload_0
      16: iload_1
      17: invokespecial #7                  // Method processChar:(I)V
      20: iload_1
      21: ireturn

  private void processChar(int);
    Code:
       0: iload_1
       1: lookupswitch  { // 1
                    10: 20
               default: 48
          }
      20: aload_0
      21: dup
      22: getfield      #4                  // Field characterOffset:I
      25: iconst_1
      26: iadd
      27: putfield      #4                  // Field characterOffset:I
      30: aload_0
      31: dup
      32: getfield      #2                  // Field lineNumber:I
      35: iconst_1
      36: iadd
      37: putfield      #2                  // Field lineNumber:I
      40: aload_0
      41: iconst_1
      42: putfield      #3                  // Field columnNumber:I
      45: goto          76
      48: iload_1
      49: i2c
      50: invokestatic  #8                  // Method java/lang/Character.isLowSurrogate:(C)Z
      53: ifne          76
      56: aload_0
      57: dup
      58: getfield      #4                  // Field characterOffset:I
      61: iconst_1
      62: iadd
      63: putfield      #4                  // Field characterOffset:I
      66: aload_0
      67: dup
      68: getfield      #3                  // Field columnNumber:I
      71: iconst_1
      72: iadd
      73: putfield      #3                  // Field columnNumber:I
      76: return

  public int read(char[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field reader:Ljava/io/Reader;
       4: aload_1
       5: invokevirtual #9                  // Method java/io/Reader.read:([C)I
       8: istore_2
       9: iload_2
      10: ifle          33
      13: iconst_0
      14: istore_3
      15: iload_3
      16: iload_2
      17: if_icmpge     33
      20: aload_0
      21: aload_1
      22: iload_3
      23: caload
      24: invokespecial #7                  // Method processChar:(I)V
      27: iinc          3, 1
      30: goto          15
      33: iload_2
      34: ireturn

  public int read(char[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field reader:Ljava/io/Reader;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #10                 // Method java/io/Reader.read:([CII)I
      10: istore        4
      12: iload         4
      14: ifle          43
      17: iconst_0
      18: istore        5
      20: iload         5
      22: iload         4
      24: if_icmpge     43
      27: aload_0
      28: aload_1
      29: iload         5
      31: iload_2
      32: iadd
      33: caload
      34: invokespecial #7                  // Method processChar:(I)V
      37: iinc          5, 1
      40: goto          20
      43: iload         4
      45: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field reader:Ljava/io/Reader;
       4: invokevirtual #11                 // Method java/io/Reader.close:()V
       7: return

  public int getLineNumber();
    Code:
       0: aload_0
       1: getfield      #2                  // Field lineNumber:I
       4: ireturn

  public int getColumnNumber();
    Code:
       0: aload_0
       1: getfield      #3                  // Field columnNumber:I
       4: ireturn

  public int getCharacterOffset();
    Code:
       0: aload_0
       1: getfield      #4                  // Field characterOffset:I
       4: ireturn
}
