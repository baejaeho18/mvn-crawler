Compiled from "SpinLock.java"
public class org.wildfly.common.lock.SpinLock implements org.wildfly.common.lock.ExtendedLock {
  private static final long ownerOffset;

  private static final int spinLimit;

  private volatile java.lang.Thread owner;

  private int level;

  public org.wildfly.common.lock.SpinLock();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public boolean isLocked();
    Code:
       0: aload_0
       1: getfield      #2                  // Field owner:Ljava/lang/Thread;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean isHeldByCurrentThread();
    Code:
       0: aload_0
       1: getfield      #2                  // Field owner:Ljava/lang/Thread;
       4: invokestatic  #3                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isFair();
    Code:
       0: iconst_1
       1: ireturn

  public void lock();
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: getfield      #2                  // Field owner:Ljava/lang/Thread;
       6: astore_1
       7: aload_1
       8: invokestatic  #3                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      11: if_acmpne     25
      14: aload_0
      15: dup
      16: getfield      #4                  // Field level:I
      19: iconst_1
      20: iadd
      21: putfield      #4                  // Field level:I
      24: return
      25: aload_1
      26: ifnonnull     52
      29: getstatic     #5                  // Field org/wildfly/common/lock/JDKSpecific.unsafe:Lsun/misc/Unsafe;
      32: aload_0
      33: getstatic     #6                  // Field ownerOffset:J
      36: aconst_null
      37: invokestatic  #3                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      40: invokevirtual #7                  // Method sun/misc/Unsafe.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z
      43: ifeq          52
      46: aload_0
      47: iconst_1
      48: putfield      #4                  // Field level:I
      51: return
      52: iload_2
      53: getstatic     #8                  // Field spinLimit:I
      56: if_icmplt     65
      59: invokestatic  #9                  // Method java/lang/Thread.yield:()V
      62: goto          2
      65: invokestatic  #10                 // Method org/wildfly/common/lock/JDKSpecific.onSpinWait:()V
      68: iinc          2, 1
      71: goto          2

  public void lockInterruptibly() throws java.lang.InterruptedException;
    Code:
       0: iconst_0
       1: istore_2
       2: invokestatic  #11                 // Method java/lang/Thread.interrupted:()Z
       5: ifeq          16
       8: new           #12                 // class java/lang/InterruptedException
      11: dup
      12: invokespecial #13                 // Method java/lang/InterruptedException."<init>":()V
      15: athrow
      16: aload_0
      17: getfield      #2                  // Field owner:Ljava/lang/Thread;
      20: astore_1
      21: aload_1
      22: invokestatic  #3                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      25: if_acmpne     39
      28: aload_0
      29: dup
      30: getfield      #4                  // Field level:I
      33: iconst_1
      34: iadd
      35: putfield      #4                  // Field level:I
      38: return
      39: aload_1
      40: ifnonnull     66
      43: getstatic     #5                  // Field org/wildfly/common/lock/JDKSpecific.unsafe:Lsun/misc/Unsafe;
      46: aload_0
      47: getstatic     #6                  // Field ownerOffset:J
      50: aconst_null
      51: invokestatic  #3                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      54: invokevirtual #7                  // Method sun/misc/Unsafe.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z
      57: ifeq          66
      60: aload_0
      61: iconst_1
      62: putfield      #4                  // Field level:I
      65: return
      66: iload_2
      67: getstatic     #8                  // Field spinLimit:I
      70: if_icmplt     79
      73: invokestatic  #9                  // Method java/lang/Thread.yield:()V
      76: goto          2
      79: invokestatic  #10                 // Method org/wildfly/common/lock/JDKSpecific.onSpinWait:()V
      82: iinc          2, 1
      85: goto          2

  public boolean tryLock();
    Code:
       0: aload_0
       1: getfield      #2                  // Field owner:Ljava/lang/Thread;
       4: astore_1
       5: aload_1
       6: invokestatic  #3                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       9: if_acmpne     24
      12: aload_0
      13: dup
      14: getfield      #4                  // Field level:I
      17: iconst_1
      18: iadd
      19: putfield      #4                  // Field level:I
      22: iconst_1
      23: ireturn
      24: aload_1
      25: ifnonnull     52
      28: getstatic     #5                  // Field org/wildfly/common/lock/JDKSpecific.unsafe:Lsun/misc/Unsafe;
      31: aload_0
      32: getstatic     #6                  // Field ownerOffset:J
      35: aconst_null
      36: invokestatic  #3                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      39: invokevirtual #7                  // Method sun/misc/Unsafe.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z
      42: ifeq          52
      45: aload_0
      46: iconst_1
      47: putfield      #4                  // Field level:I
      50: iconst_1
      51: ireturn
      52: iconst_0
      53: ireturn

  public void unlock();
    Code:
       0: aload_0
       1: getfield      #2                  // Field owner:Ljava/lang/Thread;
       4: astore_1
       5: aload_1
       6: invokestatic  #3                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       9: if_acmpne     34
      12: aload_0
      13: dup
      14: getfield      #4                  // Field level:I
      17: iconst_1
      18: isub
      19: dup_x1
      20: putfield      #4                  // Field level:I
      23: ifne          42
      26: aload_0
      27: aconst_null
      28: putfield      #2                  // Field owner:Ljava/lang/Thread;
      31: goto          42
      34: new           #14                 // class java/lang/IllegalMonitorStateException
      37: dup
      38: invokespecial #15                 // Method java/lang/IllegalMonitorStateException."<init>":()V
      41: athrow
      42: return

  public boolean tryLock(long, java.util.concurrent.TimeUnit) throws java.lang.UnsupportedOperationException;
    Code:
       0: invokestatic  #16                 // Method org/wildfly/common/Assert.unsupported:()Ljava/lang/UnsupportedOperationException;
       3: athrow

  public java.util.concurrent.locks.Condition newCondition() throws java.lang.UnsupportedOperationException;
    Code:
       0: invokestatic  #16                 // Method org/wildfly/common/Assert.unsupported:()Ljava/lang/UnsupportedOperationException;
       3: athrow

  private static java.lang.Integer lambda$static$0();
    Code:
       0: ldc           #17                 // String jboss.spin-lock.limit
       2: invokestatic  #18                 // Method org/wildfly/common/cpu/ProcessorInfo.availableProcessors:()I
       5: iconst_1
       6: if_icmpne     14
       9: ldc           #19                 // String 0
      11: goto          16
      14: ldc           #20                 // String 5000
      16: invokestatic  #21                 // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      19: invokestatic  #22                 // Method java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;
      22: areturn

  static {};
    Code:
       0: getstatic     #5                  // Field org/wildfly/common/lock/JDKSpecific.unsafe:Lsun/misc/Unsafe;
       3: ldc           #23                 // class org/wildfly/common/lock/SpinLock
       5: ldc           #24                 // String owner
       7: invokevirtual #25                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      10: invokevirtual #26                 // Method sun/misc/Unsafe.objectFieldOffset:(Ljava/lang/reflect/Field;)J
      13: putstatic     #6                  // Field ownerOffset:J
      16: goto          32
      19: astore_0
      20: new           #28                 // class java/lang/NoSuchFieldError
      23: dup
      24: aload_0
      25: invokevirtual #29                 // Method java/lang/NoSuchFieldException.getMessage:()Ljava/lang/String;
      28: invokespecial #30                 // Method java/lang/NoSuchFieldError."<init>":(Ljava/lang/String;)V
      31: athrow
      32: invokedynamic #31,  0             // InvokeDynamic #0:run:()Ljava/security/PrivilegedAction;
      37: invokestatic  #32                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      40: checkcast     #33                 // class java/lang/Integer
      43: invokevirtual #34                 // Method java/lang/Integer.intValue:()I
      46: putstatic     #8                  // Field spinLimit:I
      49: return
    Exception table:
       from    to  target type
           0    16    19   Class java/lang/NoSuchFieldException
}
