Compiled from "References.java"
final class org.wildfly.common.ref.References$ReaperThread extends java.lang.Thread {
  static final java.lang.ref.ReferenceQueue<java.lang.Object> REAPER_QUEUE;

  org.wildfly.common.ref.References$ReaperThread();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Thread."<init>":()V
       4: return

  public void run();
    Code:
       0: getstatic     #2                  // Field REAPER_QUEUE:Ljava/lang/ref/ReferenceQueue;
       3: invokevirtual #3                  // Method java/lang/ref/ReferenceQueue.remove:()Ljava/lang/ref/Reference;
       6: astore_1
       7: aload_1
       8: instanceof    #4                  // class org/wildfly/common/ref/CleanerReference
      11: ifeq          21
      14: aload_1
      15: checkcast     #4                  // class org/wildfly/common/ref/CleanerReference
      18: invokevirtual #5                  // Method org/wildfly/common/ref/CleanerReference.clean:()V
      21: aload_1
      22: instanceof    #6                  // class org/wildfly/common/ref/Reapable
      25: ifeq          35
      28: aload_1
      29: checkcast     #6                  // class org/wildfly/common/ref/Reapable
      32: invokestatic  #7                  // Method reap:(Lorg/wildfly/common/ref/Reapable;)V
      35: goto          0
      38: astore_1
      39: goto          0
      42: astore_1
      43: getstatic     #10                 // Field org/wildfly/common/ref/Log.log:Lorg/wildfly/common/ref/Log;
      46: aload_1
      47: invokeinterface #11,  2           // InterfaceMethod org/wildfly/common/ref/Log.reapFailed:(Ljava/lang/Throwable;)V
      52: goto          0
    Exception table:
       from    to  target type
           0    35    38   Class java/lang/InterruptedException
           0    35    42   Class java/lang/Throwable

  private static <T, A> void reap(org.wildfly.common.ref.Reapable<T, A>);
    Code:
       0: aload_0
       1: invokeinterface #12,  1           // InterfaceMethod org/wildfly/common/ref/Reapable.getReaper:()Lorg/wildfly/common/ref/Reaper;
       6: aload_0
       7: checkcast     #13                 // class org/wildfly/common/ref/Reference
      10: invokeinterface #14,  2           // InterfaceMethod org/wildfly/common/ref/Reaper.reap:(Lorg/wildfly/common/ref/Reference;)V
      15: return

  private static java.lang.Void lambda$static$0(java.util.concurrent.atomic.AtomicInteger);
    Code:
       0: new           #15                 // class org/wildfly/common/ref/References$ReaperThread
       3: dup
       4: invokespecial #16                 // Method "<init>":()V
       7: astore_1
       8: aload_1
       9: new           #17                 // class java/lang/StringBuilder
      12: dup
      13: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      16: ldc           #19                 // String Reference Reaper #
      18: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_0
      22: invokevirtual #21                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      25: invokevirtual #22                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      28: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: invokevirtual #24                 // Method setName:(Ljava/lang/String;)V
      34: aload_1
      35: iconst_1
      36: invokevirtual #25                 // Method setDaemon:(Z)V
      39: aload_1
      40: invokevirtual #26                 // Method start:()V
      43: aconst_null
      44: areturn

  static {};
    Code:
       0: new           #27                 // class java/lang/ref/ReferenceQueue
       3: dup
       4: invokespecial #28                 // Method java/lang/ref/ReferenceQueue."<init>":()V
       7: putstatic     #2                  // Field REAPER_QUEUE:Ljava/lang/ref/ReferenceQueue;
      10: new           #29                 // class java/util/concurrent/atomic/AtomicInteger
      13: dup
      14: iconst_1
      15: invokespecial #30                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      18: astore_0
      19: aload_0
      20: invokedynamic #31,  0             // InvokeDynamic #0:run:(Ljava/util/concurrent/atomic/AtomicInteger;)Ljava/security/PrivilegedAction;
      25: astore_1
      26: iconst_0
      27: istore_2
      28: iload_2
      29: iconst_3
      30: if_icmpge     44
      33: aload_1
      34: invokestatic  #32                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      37: pop
      38: iinc          2, 1
      41: goto          28
      44: return
}
