Compiled from "RemoteExceptionCause.java"
class org.wildfly.common.rpc.RemoteExceptionCause$1 extends java.lang.ClassValue<java.util.function.Function<java.lang.Throwable, java.util.Map<java.lang.String, java.lang.String>>> {
  org.wildfly.common.rpc.RemoteExceptionCause$1();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/ClassValue."<init>":()V
       4: return

  protected java.util.function.Function<java.lang.Throwable, java.util.Map<java.lang.String, java.lang.String>> computeValue(java.lang.Class<?>);
    Code:
       0: aload_1
       1: invokevirtual #2                  // Method java/lang/Class.getFields:()[Ljava/lang/reflect/Field;
       4: astore_2
       5: aload_2
       6: arraylength
       7: istore_3
       8: iconst_0
       9: istore        4
      11: iconst_0
      12: istore        5
      14: iload         4
      16: iload_3
      17: if_icmpge     51
      20: aload_2
      21: iload         4
      23: aaload
      24: invokevirtual #3                  // Method java/lang/reflect/Field.getModifiers:()I
      27: bipush        9
      29: iand
      30: iconst_1
      31: if_icmpne     45
      34: aload_2
      35: iload         5
      37: iinc          5, 1
      40: aload_2
      41: iload         4
      43: aaload
      44: aastore
      45: iinc          4, 1
      48: goto          14
      51: iload         5
      53: istore        6
      55: iload         5
      57: iload         4
      59: if_icmpge     76
      62: aload_2
      63: iload         5
      65: invokestatic  #5                  // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
      68: checkcast     #6                  // class "[Ljava/lang/reflect/Field;"
      71: astore        7
      73: goto          79
      76: aload_2
      77: astore        7
      79: iload         6
      81: ifne          90
      84: invokedynamic #7,  0              // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      89: areturn
      90: iload         6
      92: iconst_1
      93: if_icmpne     110
      96: aload         7
      98: iconst_0
      99: aaload
     100: astore        8
     102: aload         8
     104: invokedynamic #8,  0              // InvokeDynamic #1:apply:(Ljava/lang/reflect/Field;)Ljava/util/function/Function;
     109: areturn
     110: aload         7
     112: invokedynamic #9,  0              // InvokeDynamic #2:apply:([Ljava/lang/reflect/Field;)Ljava/util/function/Function;
     117: areturn

  protected java.lang.Object computeValue(java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #10                 // Method computeValue:(Ljava/lang/Class;)Ljava/util/function/Function;
       5: areturn

  private static java.util.Map lambda$computeValue$2(java.lang.reflect.Field[], java.lang.Throwable);
    Code:
       0: new           #11                 // class java/util/TreeMap
       3: dup
       4: invokespecial #12                 // Method java/util/TreeMap."<init>":()V
       7: astore_2
       8: aload_0
       9: astore_3
      10: aload_3
      11: arraylength
      12: istore        4
      14: iconst_0
      15: istore        5
      17: iload         5
      19: iload         4
      21: if_icmpge     72
      24: aload_3
      25: iload         5
      27: aaload
      28: astore        6
      30: aload_2
      31: aload         6
      33: invokevirtual #13                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
      36: aload         6
      38: aload_1
      39: invokevirtual #14                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
      42: invokestatic  #15                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      45: invokeinterface #16,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      50: pop
      51: goto          66
      54: astore        7
      56: new           #18                 // class java/lang/IllegalStateException
      59: dup
      60: aload         7
      62: invokespecial #19                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      65: athrow
      66: iinc          5, 1
      69: goto          17
      72: aload_2
      73: invokestatic  #20                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      76: areturn
    Exception table:
       from    to  target type
          30    51    54   Class java/lang/IllegalAccessException

  private static java.util.Map lambda$computeValue$1(java.lang.reflect.Field, java.lang.Throwable);
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
       4: aload_0
       5: aload_1
       6: invokevirtual #14                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: invokestatic  #15                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      12: invokestatic  #21                 // Method java/util/Collections.singletonMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;
      15: areturn
      16: astore_2
      17: new           #18                 // class java/lang/IllegalStateException
      20: dup
      21: aload_2
      22: invokespecial #19                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      25: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/lang/IllegalAccessException

  private static java.util.Map lambda$computeValue$0(java.lang.Throwable);
    Code:
       0: invokestatic  #22                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
       3: areturn
}
