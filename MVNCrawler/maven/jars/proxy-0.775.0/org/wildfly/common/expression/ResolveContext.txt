Compiled from "ResolveContext.java"
public final class org.wildfly.common.expression.ResolveContext<E extends java.lang.Exception> {
  private final org.wildfly.common.function.ExceptionBiConsumer<org.wildfly.common.expression.ResolveContext<E>, java.lang.StringBuilder, E> function;

  private java.lang.StringBuilder builder;

  private org.wildfly.common.expression.ExpressionNode current;

  org.wildfly.common.expression.ResolveContext(org.wildfly.common.function.ExceptionBiConsumer<org.wildfly.common.expression.ResolveContext<E>, java.lang.StringBuilder, E>, java.lang.StringBuilder);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field function:Lorg/wildfly/common/function/ExceptionBiConsumer;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field builder:Ljava/lang/StringBuilder;
      14: return

  public java.lang.String getKey() throws E;
    Code:
       0: aload_0
       1: getfield      #4                  // Field current:Lorg/wildfly/common/expression/ExpressionNode;
       4: ifnonnull     15
       7: new           #5                  // class java/lang/IllegalStateException
      10: dup
      11: invokespecial #6                  // Method java/lang/IllegalStateException."<init>":()V
      14: athrow
      15: aload_0
      16: getfield      #4                  // Field current:Lorg/wildfly/common/expression/ExpressionNode;
      19: invokevirtual #7                  // Method org/wildfly/common/expression/ExpressionNode.getKey:()Lorg/wildfly/common/expression/Node;
      22: astore_1
      23: aload_1
      24: instanceof    #8                  // class org/wildfly/common/expression/LiteralNode
      27: ifeq          35
      30: aload_1
      31: invokevirtual #9                  // Method java/lang/Object.toString:()Ljava/lang/String;
      34: areturn
      35: aload_1
      36: getstatic     #10                 // Field org/wildfly/common/expression/Node.NULL:Lorg/wildfly/common/expression/Node;
      39: if_acmpne     45
      42: ldc           #11                 // String
      44: areturn
      45: new           #12                 // class java/lang/StringBuilder
      48: dup
      49: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      52: astore_2
      53: aload_0
      54: aload_2
      55: aload_1
      56: invokespecial #14                 // Method emitToBuilder:(Ljava/lang/StringBuilder;Lorg/wildfly/common/expression/Node;)V
      59: aload_2
      60: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: areturn

  public void expandDefault(java.lang.StringBuilder) throws E;
    Code:
       0: aload_0
       1: getfield      #4                  // Field current:Lorg/wildfly/common/expression/ExpressionNode;
       4: ifnonnull     15
       7: new           #5                  // class java/lang/IllegalStateException
      10: dup
      11: invokespecial #6                  // Method java/lang/IllegalStateException."<init>":()V
      14: athrow
      15: aload_0
      16: aload_1
      17: aload_0
      18: getfield      #4                  // Field current:Lorg/wildfly/common/expression/ExpressionNode;
      21: invokevirtual #16                 // Method org/wildfly/common/expression/ExpressionNode.getDefaultValue:()Lorg/wildfly/common/expression/Node;
      24: invokespecial #14                 // Method emitToBuilder:(Ljava/lang/StringBuilder;Lorg/wildfly/common/expression/Node;)V
      27: return

  private void emitToBuilder(java.lang.StringBuilder, org.wildfly.common.expression.Node) throws E;
    Code:
       0: aload_2
       1: getstatic     #10                 // Field org/wildfly/common/expression/Node.NULL:Lorg/wildfly/common/expression/Node;
       4: if_acmpne     8
       7: return
       8: aload_2
       9: instanceof    #8                  // class org/wildfly/common/expression/LiteralNode
      12: ifeq          25
      15: aload_1
      16: aload_2
      17: invokevirtual #9                  // Method java/lang/Object.toString:()Ljava/lang/String;
      20: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: pop
      24: return
      25: aload_0
      26: getfield      #3                  // Field builder:Ljava/lang/StringBuilder;
      29: astore_3
      30: aload_0
      31: aload_1
      32: putfield      #3                  // Field builder:Ljava/lang/StringBuilder;
      35: aload_2
      36: aload_0
      37: aload_0
      38: getfield      #2                  // Field function:Lorg/wildfly/common/function/ExceptionBiConsumer;
      41: invokevirtual #18                 // Method org/wildfly/common/expression/Node.emit:(Lorg/wildfly/common/expression/ResolveContext;Lorg/wildfly/common/function/ExceptionBiConsumer;)V
      44: aload_0
      45: aload_3
      46: putfield      #3                  // Field builder:Ljava/lang/StringBuilder;
      49: goto          62
      52: astore        4
      54: aload_0
      55: aload_3
      56: putfield      #3                  // Field builder:Ljava/lang/StringBuilder;
      59: aload         4
      61: athrow
      62: return
    Exception table:
       from    to  target type
          30    44    52   any
          52    54    52   any

  public void expandDefault() throws E;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field builder:Ljava/lang/StringBuilder;
       5: invokevirtual #19                 // Method expandDefault:(Ljava/lang/StringBuilder;)V
       8: return

  public java.lang.String getExpandedDefault() throws E;
    Code:
       0: aload_0
       1: getfield      #4                  // Field current:Lorg/wildfly/common/expression/ExpressionNode;
       4: ifnonnull     15
       7: new           #5                  // class java/lang/IllegalStateException
      10: dup
      11: invokespecial #6                  // Method java/lang/IllegalStateException."<init>":()V
      14: athrow
      15: aload_0
      16: getfield      #4                  // Field current:Lorg/wildfly/common/expression/ExpressionNode;
      19: invokevirtual #16                 // Method org/wildfly/common/expression/ExpressionNode.getDefaultValue:()Lorg/wildfly/common/expression/Node;
      22: astore_1
      23: aload_1
      24: instanceof    #8                  // class org/wildfly/common/expression/LiteralNode
      27: ifeq          35
      30: aload_1
      31: invokevirtual #9                  // Method java/lang/Object.toString:()Ljava/lang/String;
      34: areturn
      35: aload_1
      36: getstatic     #10                 // Field org/wildfly/common/expression/Node.NULL:Lorg/wildfly/common/expression/Node;
      39: if_acmpne     45
      42: ldc           #11                 // String
      44: areturn
      45: new           #12                 // class java/lang/StringBuilder
      48: dup
      49: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      52: astore_2
      53: aload_0
      54: aload_2
      55: aload_1
      56: invokespecial #14                 // Method emitToBuilder:(Ljava/lang/StringBuilder;Lorg/wildfly/common/expression/Node;)V
      59: aload_2
      60: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: areturn

  public boolean hasDefault();
    Code:
       0: aload_0
       1: getfield      #4                  // Field current:Lorg/wildfly/common/expression/ExpressionNode;
       4: invokevirtual #16                 // Method org/wildfly/common/expression/ExpressionNode.getDefaultValue:()Lorg/wildfly/common/expression/Node;
       7: getstatic     #10                 // Field org/wildfly/common/expression/Node.NULL:Lorg/wildfly/common/expression/Node;
      10: if_acmpeq     17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  java.lang.StringBuilder getStringBuilder();
    Code:
       0: aload_0
       1: getfield      #3                  // Field builder:Ljava/lang/StringBuilder;
       4: areturn

  org.wildfly.common.expression.ExpressionNode setCurrent(org.wildfly.common.expression.ExpressionNode);
    Code:
       0: aload_0
       1: getfield      #4                  // Field current:Lorg/wildfly/common/expression/ExpressionNode;
       4: astore_2
       5: aload_0
       6: aload_1
       7: putfield      #4                  // Field current:Lorg/wildfly/common/expression/ExpressionNode;
      10: aload_2
      11: areturn
      12: astore_3
      13: aload_0
      14: aload_1
      15: putfield      #4                  // Field current:Lorg/wildfly/common/expression/ExpressionNode;
      18: aload_3
      19: athrow
    Exception table:
       from    to  target type
           0     5    12   any
}
