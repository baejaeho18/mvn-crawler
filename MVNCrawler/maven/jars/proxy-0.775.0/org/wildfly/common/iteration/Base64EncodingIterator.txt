Compiled from "Base64EncodingIterator.java"
abstract class org.wildfly.common.iteration.Base64EncodingIterator extends org.wildfly.common.iteration.CodePointIterator {
  private final org.wildfly.common.iteration.ByteIterator iter;

  private final boolean addPadding;

  private int c0;

  private int c1;

  private int c2;

  private int c3;

  private int state;

  private int offset;

  static final boolean $assertionsDisabled;

  org.wildfly.common.iteration.Base64EncodingIterator(org.wildfly.common.iteration.ByteIterator, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/wildfly/common/iteration/CodePointIterator."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field iter:Lorg/wildfly/common/iteration/ByteIterator;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field addPadding:Z
      14: return

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:I
       4: ifne          17
       7: aload_0
       8: getfield      #2                  // Field iter:Lorg/wildfly/common/iteration/ByteIterator;
      11: invokevirtual #5                  // Method org/wildfly/common/iteration/ByteIterator.hasNext:()Z
      14: ifne          33
      17: aload_0
      18: getfield      #4                  // Field state:I
      21: ifle          37
      24: aload_0
      25: getfield      #4                  // Field state:I
      28: bipush        13
      30: if_icmpge     37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ireturn

  public boolean hasPrevious();
    Code:
       0: aload_0
       1: getfield      #6                  // Field offset:I
       4: ifle          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  abstract int calc0(int);

  abstract int calc1(int, int);

  abstract int calc2(int, int);

  abstract int calc3(int);

  public int next() throws java.util.NoSuchElementException;
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method hasNext:()Z
       4: ifne          15
       7: new           #8                  // class java/util/NoSuchElementException
      10: dup
      11: invokespecial #9                  // Method java/util/NoSuchElementException."<init>":()V
      14: athrow
      15: aload_0
      16: dup
      17: getfield      #6                  // Field offset:I
      20: iconst_1
      21: iadd
      22: putfield      #6                  // Field offset:I
      25: aload_0
      26: getfield      #4                  // Field state:I
      29: tableswitch   { // 0 to 12
                     0: 96
                     1: 254
                     2: 264
                     3: 274
                     4: 284
                     5: 294
                     6: 305
                     7: 328
                     8: 337
                     9: 346
                    10: 357
                    11: 368
                    12: 391
               default: 400
          }
      96: getstatic     #10                 // Field $assertionsDisabled:Z
      99: ifne          120
     102: aload_0
     103: getfield      #2                  // Field iter:Lorg/wildfly/common/iteration/ByteIterator;
     106: invokevirtual #5                  // Method org/wildfly/common/iteration/ByteIterator.hasNext:()Z
     109: ifne          120
     112: new           #11                 // class java/lang/AssertionError
     115: dup
     116: invokespecial #12                 // Method java/lang/AssertionError."<init>":()V
     119: athrow
     120: aload_0
     121: getfield      #2                  // Field iter:Lorg/wildfly/common/iteration/ByteIterator;
     124: invokevirtual #13                 // Method org/wildfly/common/iteration/ByteIterator.next:()I
     127: istore_1
     128: aload_0
     129: aload_0
     130: iload_1
     131: invokevirtual #14                 // Method calc0:(I)I
     134: putfield      #15                 // Field c0:I
     137: aload_0
     138: getfield      #2                  // Field iter:Lorg/wildfly/common/iteration/ByteIterator;
     141: invokevirtual #5                  // Method org/wildfly/common/iteration/ByteIterator.hasNext:()Z
     144: ifne          168
     147: aload_0
     148: aload_0
     149: iload_1
     150: iconst_0
     151: invokevirtual #16                 // Method calc1:(II)I
     154: putfield      #17                 // Field c1:I
     157: aload_0
     158: bipush        6
     160: putfield      #4                  // Field state:I
     163: aload_0
     164: getfield      #15                 // Field c0:I
     167: ireturn
     168: aload_0
     169: getfield      #2                  // Field iter:Lorg/wildfly/common/iteration/ByteIterator;
     172: invokevirtual #13                 // Method org/wildfly/common/iteration/ByteIterator.next:()I
     175: istore_2
     176: aload_0
     177: aload_0
     178: iload_1
     179: iload_2
     180: invokevirtual #16                 // Method calc1:(II)I
     183: putfield      #17                 // Field c1:I
     186: aload_0
     187: getfield      #2                  // Field iter:Lorg/wildfly/common/iteration/ByteIterator;
     190: invokevirtual #5                  // Method org/wildfly/common/iteration/ByteIterator.hasNext:()Z
     193: ifne          217
     196: aload_0
     197: aload_0
     198: iload_2
     199: iconst_0
     200: invokevirtual #18                 // Method calc2:(II)I
     203: putfield      #19                 // Field c2:I
     206: aload_0
     207: bipush        10
     209: putfield      #4                  // Field state:I
     212: aload_0
     213: getfield      #15                 // Field c0:I
     216: ireturn
     217: aload_0
     218: getfield      #2                  // Field iter:Lorg/wildfly/common/iteration/ByteIterator;
     221: invokevirtual #13                 // Method org/wildfly/common/iteration/ByteIterator.next:()I
     224: istore_3
     225: aload_0
     226: aload_0
     227: iload_2
     228: iload_3
     229: invokevirtual #18                 // Method calc2:(II)I
     232: putfield      #19                 // Field c2:I
     235: aload_0
     236: aload_0
     237: iload_3
     238: invokevirtual #20                 // Method calc3:(I)I
     241: putfield      #21                 // Field c3:I
     244: aload_0
     245: iconst_2
     246: putfield      #4                  // Field state:I
     249: aload_0
     250: getfield      #15                 // Field c0:I
     253: ireturn
     254: aload_0
     255: iconst_2
     256: putfield      #4                  // Field state:I
     259: aload_0
     260: getfield      #15                 // Field c0:I
     263: ireturn
     264: aload_0
     265: iconst_3
     266: putfield      #4                  // Field state:I
     269: aload_0
     270: getfield      #17                 // Field c1:I
     273: ireturn
     274: aload_0
     275: iconst_4
     276: putfield      #4                  // Field state:I
     279: aload_0
     280: getfield      #19                 // Field c2:I
     283: ireturn
     284: aload_0
     285: iconst_0
     286: putfield      #4                  // Field state:I
     289: aload_0
     290: getfield      #21                 // Field c3:I
     293: ireturn
     294: aload_0
     295: bipush        6
     297: putfield      #4                  // Field state:I
     300: aload_0
     301: getfield      #15                 // Field c0:I
     304: ireturn
     305: aload_0
     306: aload_0
     307: getfield      #3                  // Field addPadding:Z
     310: ifeq          318
     313: bipush        7
     315: goto          320
     318: bipush        13
     320: putfield      #4                  // Field state:I
     323: aload_0
     324: getfield      #17                 // Field c1:I
     327: ireturn
     328: aload_0
     329: bipush        8
     331: putfield      #4                  // Field state:I
     334: bipush        61
     336: ireturn
     337: aload_0
     338: bipush        13
     340: putfield      #4                  // Field state:I
     343: bipush        61
     345: ireturn
     346: aload_0
     347: bipush        10
     349: putfield      #4                  // Field state:I
     352: aload_0
     353: getfield      #15                 // Field c0:I
     356: ireturn
     357: aload_0
     358: bipush        11
     360: putfield      #4                  // Field state:I
     363: aload_0
     364: getfield      #17                 // Field c1:I
     367: ireturn
     368: aload_0
     369: aload_0
     370: getfield      #3                  // Field addPadding:Z
     373: ifeq          381
     376: bipush        12
     378: goto          383
     381: bipush        14
     383: putfield      #4                  // Field state:I
     386: aload_0
     387: getfield      #19                 // Field c2:I
     390: ireturn
     391: aload_0
     392: bipush        14
     394: putfield      #4                  // Field state:I
     397: bipush        61
     399: ireturn
     400: aload_0
     401: getfield      #4                  // Field state:I
     404: invokestatic  #22                 // Method org/wildfly/common/Assert.impossibleSwitchCase:(I)Ljava/lang/IllegalStateException;
     407: athrow

  public int peekNext() throws java.util.NoSuchElementException;
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method hasNext:()Z
       4: ifne          15
       7: new           #8                  // class java/util/NoSuchElementException
      10: dup
      11: invokespecial #9                  // Method java/util/NoSuchElementException."<init>":()V
      14: athrow
      15: aload_0
      16: getfield      #4                  // Field state:I
      19: tableswitch   { // 0 to 12
                     0: 84
                     1: 241
                     2: 246
                     3: 251
                     4: 256
                     5: 261
                     6: 266
                     7: 271
                     8: 274
                     9: 277
                    10: 282
                    11: 287
                    12: 292
               default: 295
          }
      84: getstatic     #10                 // Field $assertionsDisabled:Z
      87: ifne          108
      90: aload_0
      91: getfield      #2                  // Field iter:Lorg/wildfly/common/iteration/ByteIterator;
      94: invokevirtual #5                  // Method org/wildfly/common/iteration/ByteIterator.hasNext:()Z
      97: ifne          108
     100: new           #11                 // class java/lang/AssertionError
     103: dup
     104: invokespecial #12                 // Method java/lang/AssertionError."<init>":()V
     107: athrow
     108: aload_0
     109: getfield      #2                  // Field iter:Lorg/wildfly/common/iteration/ByteIterator;
     112: invokevirtual #13                 // Method org/wildfly/common/iteration/ByteIterator.next:()I
     115: istore_1
     116: aload_0
     117: aload_0
     118: iload_1
     119: invokevirtual #14                 // Method calc0:(I)I
     122: putfield      #15                 // Field c0:I
     125: aload_0
     126: getfield      #2                  // Field iter:Lorg/wildfly/common/iteration/ByteIterator;
     129: invokevirtual #5                  // Method org/wildfly/common/iteration/ByteIterator.hasNext:()Z
     132: ifne          155
     135: aload_0
     136: aload_0
     137: iload_1
     138: iconst_0
     139: invokevirtual #16                 // Method calc1:(II)I
     142: putfield      #17                 // Field c1:I
     145: aload_0
     146: iconst_5
     147: putfield      #4                  // Field state:I
     150: aload_0
     151: getfield      #15                 // Field c0:I
     154: ireturn
     155: aload_0
     156: getfield      #2                  // Field iter:Lorg/wildfly/common/iteration/ByteIterator;
     159: invokevirtual #13                 // Method org/wildfly/common/iteration/ByteIterator.next:()I
     162: istore_2
     163: aload_0
     164: aload_0
     165: iload_1
     166: iload_2
     167: invokevirtual #16                 // Method calc1:(II)I
     170: putfield      #17                 // Field c1:I
     173: aload_0
     174: getfield      #2                  // Field iter:Lorg/wildfly/common/iteration/ByteIterator;
     177: invokevirtual #5                  // Method org/wildfly/common/iteration/ByteIterator.hasNext:()Z
     180: ifne          204
     183: aload_0
     184: aload_0
     185: iload_2
     186: iconst_0
     187: invokevirtual #18                 // Method calc2:(II)I
     190: putfield      #19                 // Field c2:I
     193: aload_0
     194: bipush        9
     196: putfield      #4                  // Field state:I
     199: aload_0
     200: getfield      #15                 // Field c0:I
     203: ireturn
     204: aload_0
     205: getfield      #2                  // Field iter:Lorg/wildfly/common/iteration/ByteIterator;
     208: invokevirtual #13                 // Method org/wildfly/common/iteration/ByteIterator.next:()I
     211: istore_3
     212: aload_0
     213: aload_0
     214: iload_2
     215: iload_3
     216: invokevirtual #18                 // Method calc2:(II)I
     219: putfield      #19                 // Field c2:I
     222: aload_0
     223: aload_0
     224: iload_3
     225: invokevirtual #20                 // Method calc3:(I)I
     228: putfield      #21                 // Field c3:I
     231: aload_0
     232: iconst_1
     233: putfield      #4                  // Field state:I
     236: aload_0
     237: getfield      #15                 // Field c0:I
     240: ireturn
     241: aload_0
     242: getfield      #15                 // Field c0:I
     245: ireturn
     246: aload_0
     247: getfield      #17                 // Field c1:I
     250: ireturn
     251: aload_0
     252: getfield      #19                 // Field c2:I
     255: ireturn
     256: aload_0
     257: getfield      #21                 // Field c3:I
     260: ireturn
     261: aload_0
     262: getfield      #15                 // Field c0:I
     265: ireturn
     266: aload_0
     267: getfield      #17                 // Field c1:I
     270: ireturn
     271: bipush        61
     273: ireturn
     274: bipush        61
     276: ireturn
     277: aload_0
     278: getfield      #15                 // Field c0:I
     281: ireturn
     282: aload_0
     283: getfield      #17                 // Field c1:I
     286: ireturn
     287: aload_0
     288: getfield      #19                 // Field c2:I
     291: ireturn
     292: bipush        61
     294: ireturn
     295: aload_0
     296: getfield      #4                  // Field state:I
     299: invokestatic  #22                 // Method org/wildfly/common/Assert.impossibleSwitchCase:(I)Ljava/lang/IllegalStateException;
     302: athrow

  public int previous() throws java.util.NoSuchElementException;
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method hasPrevious:()Z
       4: ifne          15
       7: new           #8                  // class java/util/NoSuchElementException
      10: dup
      11: invokespecial #9                  // Method java/util/NoSuchElementException."<init>":()V
      14: athrow
      15: aload_0
      16: dup
      17: getfield      #6                  // Field offset:I
      20: iconst_1
      21: isub
      22: putfield      #6                  // Field offset:I
      25: aload_0
      26: getfield      #4                  // Field state:I
      29: tableswitch   { // 0 to 15
                     0: 108
                     1: 108
                     2: 180
                     3: 190
                     4: 200
                     5: 108
                     6: 210
                     7: 220
                     8: 231
                     9: 108
                    10: 240
                    11: 251
                    12: 262
                    13: 273
                    14: 282
                    15: 108
               default: 291
          }
     108: aload_0
     109: getfield      #2                  // Field iter:Lorg/wildfly/common/iteration/ByteIterator;
     112: invokevirtual #24                 // Method org/wildfly/common/iteration/ByteIterator.previous:()I
     115: istore_1
     116: aload_0
     117: getfield      #2                  // Field iter:Lorg/wildfly/common/iteration/ByteIterator;
     120: invokevirtual #24                 // Method org/wildfly/common/iteration/ByteIterator.previous:()I
     123: istore_2
     124: aload_0
     125: getfield      #2                  // Field iter:Lorg/wildfly/common/iteration/ByteIterator;
     128: invokevirtual #24                 // Method org/wildfly/common/iteration/ByteIterator.previous:()I
     131: istore_3
     132: aload_0
     133: aload_0
     134: iload_3
     135: invokevirtual #14                 // Method calc0:(I)I
     138: putfield      #15                 // Field c0:I
     141: aload_0
     142: aload_0
     143: iload_3
     144: iload_2
     145: invokevirtual #16                 // Method calc1:(II)I
     148: putfield      #17                 // Field c1:I
     151: aload_0
     152: aload_0
     153: iload_2
     154: iload_1
     155: invokevirtual #18                 // Method calc2:(II)I
     158: putfield      #19                 // Field c2:I
     161: aload_0
     162: aload_0
     163: iload_1
     164: invokevirtual #20                 // Method calc3:(I)I
     167: putfield      #21                 // Field c3:I
     170: aload_0
     171: iconst_4
     172: putfield      #4                  // Field state:I
     175: aload_0
     176: getfield      #21                 // Field c3:I
     179: ireturn
     180: aload_0
     181: iconst_1
     182: putfield      #4                  // Field state:I
     185: aload_0
     186: getfield      #15                 // Field c0:I
     189: ireturn
     190: aload_0
     191: iconst_2
     192: putfield      #4                  // Field state:I
     195: aload_0
     196: getfield      #17                 // Field c1:I
     199: ireturn
     200: aload_0
     201: iconst_3
     202: putfield      #4                  // Field state:I
     205: aload_0
     206: getfield      #19                 // Field c2:I
     209: ireturn
     210: aload_0
     211: iconst_5
     212: putfield      #4                  // Field state:I
     215: aload_0
     216: getfield      #15                 // Field c0:I
     219: ireturn
     220: aload_0
     221: bipush        6
     223: putfield      #4                  // Field state:I
     226: aload_0
     227: getfield      #17                 // Field c1:I
     230: ireturn
     231: aload_0
     232: bipush        7
     234: putfield      #4                  // Field state:I
     237: bipush        61
     239: ireturn
     240: aload_0
     241: bipush        9
     243: putfield      #4                  // Field state:I
     246: aload_0
     247: getfield      #15                 // Field c0:I
     250: ireturn
     251: aload_0
     252: bipush        10
     254: putfield      #4                  // Field state:I
     257: aload_0
     258: getfield      #17                 // Field c1:I
     261: ireturn
     262: aload_0
     263: bipush        11
     265: putfield      #4                  // Field state:I
     268: aload_0
     269: getfield      #19                 // Field c2:I
     272: ireturn
     273: aload_0
     274: bipush        8
     276: putfield      #4                  // Field state:I
     279: bipush        61
     281: ireturn
     282: aload_0
     283: bipush        12
     285: putfield      #4                  // Field state:I
     288: bipush        61
     290: ireturn
     291: aload_0
     292: getfield      #4                  // Field state:I
     295: invokestatic  #22                 // Method org/wildfly/common/Assert.impossibleSwitchCase:(I)Ljava/lang/IllegalStateException;
     298: athrow

  public int peekPrevious() throws java.util.NoSuchElementException;
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method hasPrevious:()Z
       4: ifne          15
       7: new           #8                  // class java/util/NoSuchElementException
      10: dup
      11: invokespecial #9                  // Method java/util/NoSuchElementException."<init>":()V
      14: athrow
      15: aload_0
      16: getfield      #4                  // Field state:I
      19: tableswitch   { // 0 to 15
                     0: 96
                     1: 96
                     2: 108
                     3: 113
                     4: 118
                     5: 96
                     6: 123
                     7: 128
                     8: 133
                     9: 96
                    10: 136
                    11: 141
                    12: 146
                    13: 151
                    14: 154
                    15: 96
               default: 157
          }
      96: aload_0
      97: aload_0
      98: getfield      #2                  // Field iter:Lorg/wildfly/common/iteration/ByteIterator;
     101: invokevirtual #25                 // Method org/wildfly/common/iteration/ByteIterator.peekPrevious:()I
     104: invokevirtual #20                 // Method calc3:(I)I
     107: ireturn
     108: aload_0
     109: getfield      #15                 // Field c0:I
     112: ireturn
     113: aload_0
     114: getfield      #17                 // Field c1:I
     117: ireturn
     118: aload_0
     119: getfield      #19                 // Field c2:I
     122: ireturn
     123: aload_0
     124: getfield      #15                 // Field c0:I
     127: ireturn
     128: aload_0
     129: getfield      #17                 // Field c1:I
     132: ireturn
     133: bipush        61
     135: ireturn
     136: aload_0
     137: getfield      #15                 // Field c0:I
     140: ireturn
     141: aload_0
     142: getfield      #17                 // Field c1:I
     145: ireturn
     146: aload_0
     147: getfield      #19                 // Field c2:I
     150: ireturn
     151: bipush        61
     153: ireturn
     154: bipush        61
     156: ireturn
     157: aload_0
     158: getfield      #4                  // Field state:I
     161: invokestatic  #22                 // Method org/wildfly/common/Assert.impossibleSwitchCase:(I)Ljava/lang/IllegalStateException;
     164: athrow

  public long getIndex();
    Code:
       0: aload_0
       1: getfield      #6                  // Field offset:I
       4: i2l
       5: lreturn

  static {};
    Code:
       0: ldc           #26                 // class org/wildfly/common/iteration/Base64EncodingIterator
       2: invokevirtual #27                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #10                 // Field $assertionsDisabled:Z
      16: return
}
