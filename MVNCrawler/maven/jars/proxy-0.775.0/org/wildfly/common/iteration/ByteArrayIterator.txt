Compiled from "ByteArrayIterator.java"
final class org.wildfly.common.iteration.ByteArrayIterator extends org.wildfly.common.iteration.ByteIterator {
  private final int len;

  private final byte[] bytes;

  private final int offs;

  private int idx;

  org.wildfly.common.iteration.ByteArrayIterator(int, byte[], int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/wildfly/common/iteration/ByteIterator."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field len:I
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field bytes:[B
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field offs:I
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field idx:I
      24: return

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #5                  // Field idx:I
       4: aload_0
       5: getfield      #2                  // Field len:I
       8: if_icmpge     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public boolean hasPrevious();
    Code:
       0: aload_0
       1: getfield      #5                  // Field idx:I
       4: ifle          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public int next();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method hasNext:()Z
       4: ifne          15
       7: new           #7                  // class java/util/NoSuchElementException
      10: dup
      11: invokespecial #8                  // Method java/util/NoSuchElementException."<init>":()V
      14: athrow
      15: aload_0
      16: getfield      #3                  // Field bytes:[B
      19: aload_0
      20: getfield      #4                  // Field offs:I
      23: aload_0
      24: dup
      25: getfield      #5                  // Field idx:I
      28: dup_x1
      29: iconst_1
      30: iadd
      31: putfield      #5                  // Field idx:I
      34: iadd
      35: baload
      36: sipush        255
      39: iand
      40: ireturn

  public int previous();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method hasPrevious:()Z
       4: ifne          15
       7: new           #7                  // class java/util/NoSuchElementException
      10: dup
      11: invokespecial #8                  // Method java/util/NoSuchElementException."<init>":()V
      14: athrow
      15: aload_0
      16: getfield      #3                  // Field bytes:[B
      19: aload_0
      20: getfield      #4                  // Field offs:I
      23: aload_0
      24: dup
      25: getfield      #5                  // Field idx:I
      28: iconst_1
      29: isub
      30: dup_x1
      31: putfield      #5                  // Field idx:I
      34: iadd
      35: baload
      36: sipush        255
      39: iand
      40: ireturn

  public int peekNext() throws java.util.NoSuchElementException;
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method hasNext:()Z
       4: ifne          15
       7: new           #7                  // class java/util/NoSuchElementException
      10: dup
      11: invokespecial #8                  // Method java/util/NoSuchElementException."<init>":()V
      14: athrow
      15: aload_0
      16: getfield      #3                  // Field bytes:[B
      19: aload_0
      20: getfield      #4                  // Field offs:I
      23: aload_0
      24: getfield      #5                  // Field idx:I
      27: iadd
      28: baload
      29: sipush        255
      32: iand
      33: ireturn

  public int peekPrevious() throws java.util.NoSuchElementException;
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method hasPrevious:()Z
       4: ifne          15
       7: new           #7                  // class java/util/NoSuchElementException
      10: dup
      11: invokespecial #8                  // Method java/util/NoSuchElementException."<init>":()V
      14: athrow
      15: aload_0
      16: getfield      #3                  // Field bytes:[B
      19: aload_0
      20: getfield      #4                  // Field offs:I
      23: aload_0
      24: getfield      #5                  // Field idx:I
      27: iadd
      28: iconst_1
      29: isub
      30: baload
      31: sipush        255
      34: iand
      35: ireturn

  public long getIndex();
    Code:
       0: aload_0
       1: getfield      #5                  // Field idx:I
       4: i2l
       5: lreturn

  public void update(java.security.MessageDigest) throws java.lang.IllegalStateException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #3                  // Field bytes:[B
       5: aload_0
       6: getfield      #4                  // Field offs:I
       9: aload_0
      10: getfield      #5                  // Field idx:I
      13: iadd
      14: aload_0
      15: getfield      #2                  // Field len:I
      18: aload_0
      19: getfield      #5                  // Field idx:I
      22: isub
      23: invokevirtual #10                 // Method java/security/MessageDigest.update:([BII)V
      26: aload_0
      27: aload_0
      28: getfield      #2                  // Field len:I
      31: putfield      #5                  // Field idx:I
      34: return

  public org.wildfly.common.iteration.ByteIterator doFinal(java.security.MessageDigest) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method update:(Ljava/security/MessageDigest;)V
       5: aload_1
       6: invokevirtual #12                 // Method java/security/MessageDigest.digest:()[B
       9: invokestatic  #13                 // Method org/wildfly/common/iteration/ByteIterator.ofBytes:([B)Lorg/wildfly/common/iteration/ByteIterator;
      12: areturn

  public void update(javax.crypto.Mac) throws java.lang.IllegalStateException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #3                  // Field bytes:[B
       5: aload_0
       6: getfield      #4                  // Field offs:I
       9: aload_0
      10: getfield      #5                  // Field idx:I
      13: iadd
      14: aload_0
      15: getfield      #2                  // Field len:I
      18: aload_0
      19: getfield      #5                  // Field idx:I
      22: isub
      23: invokevirtual #14                 // Method javax/crypto/Mac.update:([BII)V
      26: aload_0
      27: aload_0
      28: getfield      #2                  // Field len:I
      31: putfield      #5                  // Field idx:I
      34: return

  public org.wildfly.common.iteration.ByteIterator doFinal(javax.crypto.Mac) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method update:(Ljavax/crypto/Mac;)V
       5: aload_1
       6: invokevirtual #16                 // Method javax/crypto/Mac.doFinal:()[B
       9: invokestatic  #13                 // Method org/wildfly/common/iteration/ByteIterator.ofBytes:([B)Lorg/wildfly/common/iteration/ByteIterator;
      12: areturn

  public void update(java.security.Signature) throws java.security.SignatureException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #3                  // Field bytes:[B
       5: aload_0
       6: getfield      #4                  // Field offs:I
       9: aload_0
      10: getfield      #5                  // Field idx:I
      13: iadd
      14: aload_0
      15: getfield      #2                  // Field len:I
      18: aload_0
      19: getfield      #5                  // Field idx:I
      22: isub
      23: invokevirtual #17                 // Method java/security/Signature.update:([BII)V
      26: aload_0
      27: aload_0
      28: getfield      #2                  // Field len:I
      31: putfield      #5                  // Field idx:I
      34: return

  public boolean verify(java.security.Signature) throws java.security.SignatureException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #3                  // Field bytes:[B
       5: aload_0
       6: getfield      #4                  // Field offs:I
       9: aload_0
      10: getfield      #5                  // Field idx:I
      13: iadd
      14: aload_0
      15: getfield      #2                  // Field len:I
      18: aload_0
      19: getfield      #5                  // Field idx:I
      22: isub
      23: invokevirtual #18                 // Method java/security/Signature.verify:([BII)Z
      26: istore_2
      27: aload_0
      28: aload_0
      29: getfield      #2                  // Field len:I
      32: putfield      #5                  // Field idx:I
      35: iload_2
      36: ireturn
      37: astore_3
      38: aload_0
      39: aload_0
      40: getfield      #2                  // Field len:I
      43: putfield      #5                  // Field idx:I
      46: aload_3
      47: athrow
    Exception table:
       from    to  target type
           0    27    37   any

  public java.io.ByteArrayOutputStream drainTo(java.io.ByteArrayOutputStream);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #3                  // Field bytes:[B
       5: aload_0
       6: getfield      #4                  // Field offs:I
       9: aload_0
      10: getfield      #5                  // Field idx:I
      13: iadd
      14: aload_0
      15: getfield      #2                  // Field len:I
      18: aload_0
      19: getfield      #5                  // Field idx:I
      22: isub
      23: invokevirtual #19                 // Method java/io/ByteArrayOutputStream.write:([BII)V
      26: aload_0
      27: aload_0
      28: getfield      #2                  // Field len:I
      31: putfield      #5                  // Field idx:I
      34: aload_1
      35: areturn

  public byte[] drain();
    Code:
       0: aload_0
       1: getfield      #3                  // Field bytes:[B
       4: aload_0
       5: getfield      #4                  // Field offs:I
       8: aload_0
       9: getfield      #5                  // Field idx:I
      12: iadd
      13: aload_0
      14: getfield      #4                  // Field offs:I
      17: aload_0
      18: getfield      #2                  // Field len:I
      21: iadd
      22: invokestatic  #20                 // Method java/util/Arrays.copyOfRange:([BII)[B
      25: astore_1
      26: aload_0
      27: aload_0
      28: getfield      #2                  // Field len:I
      31: putfield      #5                  // Field idx:I
      34: aload_1
      35: areturn
      36: astore_2
      37: aload_0
      38: aload_0
      39: getfield      #2                  // Field len:I
      42: putfield      #5                  // Field idx:I
      45: aload_2
      46: athrow
    Exception table:
       from    to  target type
           0    26    36   any

  public int drain(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field len:I
       4: aload_0
       5: getfield      #5                  // Field idx:I
       8: isub
       9: iload_3
      10: invokestatic  #21                 // Method java/lang/Math.min:(II)I
      13: istore        4
      15: aload_0
      16: getfield      #3                  // Field bytes:[B
      19: iload_2
      20: aload_0
      21: getfield      #5                  // Field idx:I
      24: iadd
      25: aload_1
      26: iload_2
      27: iload         4
      29: invokestatic  #22                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      32: aload_0
      33: dup
      34: getfield      #5                  // Field idx:I
      37: iload         4
      39: iadd
      40: putfield      #5                  // Field idx:I
      43: iload         4
      45: ireturn

  public java.lang.String drainToUtf8(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field len:I
       4: aload_0
       5: getfield      #5                  // Field idx:I
       8: isub
       9: iload_1
      10: invokestatic  #21                 // Method java/lang/Math.min:(II)I
      13: istore_2
      14: new           #23                 // class java/lang/String
      17: dup
      18: aload_0
      19: getfield      #3                  // Field bytes:[B
      22: aload_0
      23: getfield      #5                  // Field idx:I
      26: iload_2
      27: getstatic     #24                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      30: invokespecial #25                 // Method java/lang/String."<init>":([BIILjava/nio/charset/Charset;)V
      33: astore_3
      34: aload_0
      35: dup
      36: getfield      #5                  // Field idx:I
      39: iload_2
      40: iadd
      41: putfield      #5                  // Field idx:I
      44: aload_3
      45: areturn

  public java.lang.String drainToLatin1(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field len:I
       4: aload_0
       5: getfield      #5                  // Field idx:I
       8: isub
       9: iload_1
      10: invokestatic  #21                 // Method java/lang/Math.min:(II)I
      13: istore_2
      14: new           #23                 // class java/lang/String
      17: dup
      18: aload_0
      19: getfield      #3                  // Field bytes:[B
      22: aload_0
      23: getfield      #5                  // Field idx:I
      26: iload_2
      27: getstatic     #26                 // Field java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;
      30: invokespecial #25                 // Method java/lang/String."<init>":([BIILjava/nio/charset/Charset;)V
      33: astore_3
      34: aload_0
      35: dup
      36: getfield      #5                  // Field idx:I
      39: iload_2
      40: iadd
      41: putfield      #5                  // Field idx:I
      44: aload_3
      45: areturn

  public org.wildfly.common.bytes.ByteStringBuilder appendTo(org.wildfly.common.bytes.ByteStringBuilder);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #3                  // Field bytes:[B
       5: aload_0
       6: getfield      #4                  // Field offs:I
       9: aload_0
      10: getfield      #5                  // Field idx:I
      13: iadd
      14: aload_0
      15: getfield      #2                  // Field len:I
      18: aload_0
      19: getfield      #5                  // Field idx:I
      22: isub
      23: invokevirtual #27                 // Method org/wildfly/common/bytes/ByteStringBuilder.append:([BII)Lorg/wildfly/common/bytes/ByteStringBuilder;
      26: pop
      27: aload_0
      28: aload_0
      29: getfield      #2                  // Field len:I
      32: putfield      #5                  // Field idx:I
      35: aload_1
      36: areturn
}
