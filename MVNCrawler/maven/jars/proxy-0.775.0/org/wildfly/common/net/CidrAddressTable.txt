Compiled from "CidrAddressTable.java"
public final class org.wildfly.common.net.CidrAddressTable<T> implements java.lang.Iterable<org.wildfly.common.net.CidrAddressTable$Mapping<T>> {
  private static final org.wildfly.common.net.CidrAddressTable$Mapping[] NO_MAPPINGS;

  private final java.util.concurrent.atomic.AtomicReference<org.wildfly.common.net.CidrAddressTable$Mapping<T>[]> mappingsRef;

  static final boolean $assertionsDisabled;

  public org.wildfly.common.net.CidrAddressTable();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokestatic  #3                  // Method empty:()[Lorg/wildfly/common/net/CidrAddressTable$Mapping;
      12: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      15: putfield      #5                  // Field mappingsRef:Ljava/util/concurrent/atomic/AtomicReference;
      18: return

  private org.wildfly.common.net.CidrAddressTable(org.wildfly.common.net.CidrAddressTable$Mapping<T>[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: aload_1
      10: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      13: putfield      #5                  // Field mappingsRef:Ljava/util/concurrent/atomic/AtomicReference;
      16: return

  public T getOrDefault(java.net.InetAddress, T);
    Code:
       0: ldc           #6                  // String address
       2: aload_1
       3: invokestatic  #7                  // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_0
       9: getfield      #5                  // Field mappingsRef:Ljava/util/concurrent/atomic/AtomicReference;
      12: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      15: checkcast     #9                  // class "[Lorg/wildfly/common/net/CidrAddressTable$Mapping;"
      18: aload_1
      19: invokevirtual #10                 // Method java/net/InetAddress.getAddress:()[B
      22: aload_1
      23: instanceof    #11                 // class java/net/Inet4Address
      26: ifeq          34
      29: bipush        32
      31: goto          37
      34: sipush        128
      37: aload_1
      38: invokestatic  #12                 // Method org/wildfly/common/net/Inet.getScopeId:(Ljava/net/InetAddress;)I
      41: invokespecial #13                 // Method doGet:([Lorg/wildfly/common/net/CidrAddressTable$Mapping;[BII)Lorg/wildfly/common/net/CidrAddressTable$Mapping;
      44: astore_3
      45: aload_3
      46: ifnonnull     53
      49: aload_2
      50: goto          57
      53: aload_3
      54: getfield      #14                 // Field org/wildfly/common/net/CidrAddressTable$Mapping.value:Ljava/lang/Object;
      57: areturn

  public T get(java.net.InetAddress);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #15                 // Method getOrDefault:(Ljava/net/InetAddress;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public T put(org.wildfly.common.net.CidrAddress, T);
    Code:
       0: ldc           #16                 // String block
       2: aload_1
       3: invokestatic  #7                  // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: ldc           #17                 // String value
       9: aload_2
      10: invokestatic  #7                  // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: aload_1
      16: aconst_null
      17: aload_2
      18: iconst_1
      19: iconst_1
      20: invokespecial #18                 // Method doPut:(Lorg/wildfly/common/net/CidrAddress;Ljava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;
      23: areturn

  public T putIfAbsent(org.wildfly.common.net.CidrAddress, T);
    Code:
       0: ldc           #16                 // String block
       2: aload_1
       3: invokestatic  #7                  // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: ldc           #17                 // String value
       9: aload_2
      10: invokestatic  #7                  // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: aload_1
      16: aconst_null
      17: aload_2
      18: iconst_1
      19: iconst_0
      20: invokespecial #18                 // Method doPut:(Lorg/wildfly/common/net/CidrAddress;Ljava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;
      23: areturn

  public T replaceExact(org.wildfly.common.net.CidrAddress, T);
    Code:
       0: ldc           #16                 // String block
       2: aload_1
       3: invokestatic  #7                  // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: ldc           #17                 // String value
       9: aload_2
      10: invokestatic  #7                  // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: aload_1
      16: aconst_null
      17: aload_2
      18: iconst_0
      19: iconst_1
      20: invokespecial #18                 // Method doPut:(Lorg/wildfly/common/net/CidrAddress;Ljava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;
      23: areturn

  public boolean replaceExact(org.wildfly.common.net.CidrAddress, T, T);
    Code:
       0: ldc           #16                 // String block
       2: aload_1
       3: invokestatic  #7                  // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: ldc           #19                 // String expect
       9: aload_2
      10: invokestatic  #7                  // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: ldc           #20                 // String update
      16: aload_3
      17: invokestatic  #7                  // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      20: pop
      21: aload_0
      22: aload_1
      23: aload_2
      24: aload_3
      25: iconst_0
      26: iconst_1
      27: invokespecial #18                 // Method doPut:(Lorg/wildfly/common/net/CidrAddress;Ljava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;
      30: aload_2
      31: if_acmpne     38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: ireturn

  public T removeExact(org.wildfly.common.net.CidrAddress);
    Code:
       0: ldc           #16                 // String block
       2: aload_1
       3: invokestatic  #7                  // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: aconst_null
      10: aconst_null
      11: iconst_0
      12: iconst_1
      13: invokespecial #18                 // Method doPut:(Lorg/wildfly/common/net/CidrAddress;Ljava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;
      16: areturn

  public boolean removeExact(org.wildfly.common.net.CidrAddress, T);
    Code:
       0: ldc           #16                 // String block
       2: aload_1
       3: invokestatic  #7                  // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: aload_2
      10: aconst_null
      11: iconst_0
      12: iconst_1
      13: invokespecial #18                 // Method doPut:(Lorg/wildfly/common/net/CidrAddress;Ljava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;
      16: aload_2
      17: if_acmpne     24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  private T doPut(org.wildfly.common.net.CidrAddress, T, T, boolean, boolean);
    Code:
       0: getstatic     #21                 // Field $assertionsDisabled:Z
       3: ifne          24
       6: iload         4
       8: ifne          24
      11: iload         5
      13: ifne          24
      16: new           #22                 // class java/lang/AssertionError
      19: dup
      20: invokespecial #23                 // Method java/lang/AssertionError."<init>":()V
      23: athrow
      24: aload_0
      25: getfield      #5                  // Field mappingsRef:Ljava/util/concurrent/atomic/AtomicReference;
      28: astore        6
      30: aload_1
      31: invokevirtual #24                 // Method org/wildfly/common/net/CidrAddress.getNetworkAddress:()Ljava/net/InetAddress;
      34: invokevirtual #10                 // Method java/net/InetAddress.getAddress:()[B
      37: astore        7
      39: aload         6
      41: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      44: checkcast     #9                  // class "[Lorg/wildfly/common/net/CidrAddressTable$Mapping;"
      47: astore        8
      49: aload_0
      50: aload         8
      52: aload         7
      54: aload_1
      55: invokevirtual #25                 // Method org/wildfly/common/net/CidrAddress.getNetmaskBits:()I
      58: aload_1
      59: invokevirtual #26                 // Method org/wildfly/common/net/CidrAddress.getScopeId:()I
      62: invokespecial #27                 // Method doFind:([Lorg/wildfly/common/net/CidrAddressTable$Mapping;[BII)I
      65: istore        10
      67: iload         10
      69: ifge          85
      72: iload         4
      74: ifne          79
      77: aconst_null
      78: areturn
      79: aconst_null
      80: astore        11
      82: goto          95
      85: aload         8
      87: iload         10
      89: aaload
      90: getfield      #14                 // Field org/wildfly/common/net/CidrAddressTable$Mapping.value:Ljava/lang/Object;
      93: astore        11
      95: aload_2
      96: ifnull        115
      99: aload_2
     100: aload         11
     102: invokestatic  #28                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     105: istore        12
     107: iload         12
     109: ifne          118
     112: aload         11
     114: areturn
     115: iconst_0
     116: istore        12
     118: iload         10
     120: iflt          131
     123: iload         5
     125: ifne          131
     128: aload         11
     130: areturn
     131: aload         8
     133: arraylength
     134: istore        13
     136: aload_3
     137: ifnonnull     266
     140: getstatic     #21                 // Field $assertionsDisabled:Z
     143: ifne          159
     146: iload         10
     148: ifge          159
     151: new           #22                 // class java/lang/AssertionError
     154: dup
     155: invokespecial #23                 // Method java/lang/AssertionError."<init>":()V
     158: athrow
     159: iload         13
     161: iconst_1
     162: if_icmpne     173
     165: invokestatic  #3                  // Method empty:()[Lorg/wildfly/common/net/CidrAddressTable$Mapping;
     168: astore        9
     170: goto          514
     173: aload         8
     175: iload         10
     177: aaload
     178: astore        14
     180: aload         8
     182: iload         13
     184: iconst_1
     185: isub
     186: invokestatic  #29                 // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
     189: checkcast     #9                  // class "[Lorg/wildfly/common/net/CidrAddressTable$Mapping;"
     192: astore        9
     194: aload         8
     196: iload         10
     198: iconst_1
     199: iadd
     200: aload         9
     202: iload         10
     204: iload         13
     206: iload         10
     208: isub
     209: iconst_1
     210: isub
     211: invokestatic  #30                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     214: iconst_0
     215: istore        15
     217: iload         15
     219: iload         13
     221: iconst_1
     222: isub
     223: if_icmpge     263
     226: aload         9
     228: iload         15
     230: aaload
     231: getfield      #31                 // Field org/wildfly/common/net/CidrAddressTable$Mapping.parent:Lorg/wildfly/common/net/CidrAddressTable$Mapping;
     234: aload         14
     236: if_acmpne     257
     239: aload         9
     241: iload         15
     243: aload         9
     245: iload         15
     247: aaload
     248: aload         14
     250: getfield      #31                 // Field org/wildfly/common/net/CidrAddressTable$Mapping.parent:Lorg/wildfly/common/net/CidrAddressTable$Mapping;
     253: invokevirtual #32                 // Method org/wildfly/common/net/CidrAddressTable$Mapping.withNewParent:(Lorg/wildfly/common/net/CidrAddressTable$Mapping;)Lorg/wildfly/common/net/CidrAddressTable$Mapping;
     256: aastore
     257: iinc          15, 1
     260: goto          217
     263: goto          514
     266: iload         10
     268: iflt          368
     271: aload         8
     273: invokevirtual #33                 // Method "[Lorg/wildfly/common/net/CidrAddressTable$Mapping;".clone:()Ljava/lang/Object;
     276: checkcast     #9                  // class "[Lorg/wildfly/common/net/CidrAddressTable$Mapping;"
     279: astore        9
     281: aload         8
     283: iload         10
     285: aaload
     286: astore        14
     288: new           #34                 // class org/wildfly/common/net/CidrAddressTable$Mapping
     291: dup
     292: aload_1
     293: aload_3
     294: aload         8
     296: iload         10
     298: aaload
     299: getfield      #31                 // Field org/wildfly/common/net/CidrAddressTable$Mapping.parent:Lorg/wildfly/common/net/CidrAddressTable$Mapping;
     302: invokespecial #35                 // Method org/wildfly/common/net/CidrAddressTable$Mapping."<init>":(Lorg/wildfly/common/net/CidrAddress;Ljava/lang/Object;Lorg/wildfly/common/net/CidrAddressTable$Mapping;)V
     305: astore        15
     307: aload         9
     309: iload         10
     311: aload         15
     313: aastore
     314: iconst_0
     315: istore        16
     317: iload         16
     319: iload         13
     321: if_icmpge     365
     324: iload         16
     326: iload         10
     328: if_icmpeq     359
     331: aload         9
     333: iload         16
     335: aaload
     336: getfield      #31                 // Field org/wildfly/common/net/CidrAddressTable$Mapping.parent:Lorg/wildfly/common/net/CidrAddressTable$Mapping;
     339: aload         14
     341: if_acmpne     359
     344: aload         9
     346: iload         16
     348: aload         9
     350: iload         16
     352: aaload
     353: aload         15
     355: invokevirtual #32                 // Method org/wildfly/common/net/CidrAddressTable$Mapping.withNewParent:(Lorg/wildfly/common/net/CidrAddressTable$Mapping;)Lorg/wildfly/common/net/CidrAddressTable$Mapping;
     358: aastore
     359: iinc          16, 1
     362: goto          317
     365: goto          514
     368: aload         8
     370: iload         13
     372: iconst_1
     373: iadd
     374: invokestatic  #29                 // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
     377: checkcast     #9                  // class "[Lorg/wildfly/common/net/CidrAddressTable$Mapping;"
     380: astore        9
     382: aload_0
     383: aload         8
     385: aload         7
     387: aload_1
     388: invokevirtual #25                 // Method org/wildfly/common/net/CidrAddress.getNetmaskBits:()I
     391: aload_1
     392: invokevirtual #26                 // Method org/wildfly/common/net/CidrAddress.getScopeId:()I
     395: invokespecial #13                 // Method doGet:([Lorg/wildfly/common/net/CidrAddressTable$Mapping;[BII)Lorg/wildfly/common/net/CidrAddressTable$Mapping;
     398: astore        14
     400: new           #34                 // class org/wildfly/common/net/CidrAddressTable$Mapping
     403: dup
     404: aload_1
     405: aload_3
     406: aload         14
     408: invokespecial #35                 // Method org/wildfly/common/net/CidrAddressTable$Mapping."<init>":(Lorg/wildfly/common/net/CidrAddress;Ljava/lang/Object;Lorg/wildfly/common/net/CidrAddressTable$Mapping;)V
     411: astore        15
     413: aload         9
     415: iload         10
     417: ineg
     418: iconst_1
     419: isub
     420: aload         15
     422: aastore
     423: aload         8
     425: iload         10
     427: ineg
     428: iconst_1
     429: isub
     430: aload         9
     432: iload         10
     434: ineg
     435: iload         13
     437: iload         10
     439: iadd
     440: iconst_1
     441: iadd
     442: invokestatic  #30                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     445: iconst_0
     446: istore        16
     448: iload         16
     450: iload         13
     452: if_icmpgt     514
     455: aload         9
     457: iload         16
     459: aaload
     460: aload         15
     462: if_acmpeq     508
     465: aload         9
     467: iload         16
     469: aaload
     470: getfield      #31                 // Field org/wildfly/common/net/CidrAddressTable$Mapping.parent:Lorg/wildfly/common/net/CidrAddressTable$Mapping;
     473: aload         14
     475: if_acmpne     508
     478: aload_1
     479: aload         9
     481: iload         16
     483: aaload
     484: getfield      #36                 // Field org/wildfly/common/net/CidrAddressTable$Mapping.range:Lorg/wildfly/common/net/CidrAddress;
     487: invokevirtual #37                 // Method org/wildfly/common/net/CidrAddress.matches:(Lorg/wildfly/common/net/CidrAddress;)Z
     490: ifeq          508
     493: aload         9
     495: iload         16
     497: aload         9
     499: iload         16
     501: aaload
     502: aload         15
     504: invokevirtual #32                 // Method org/wildfly/common/net/CidrAddressTable$Mapping.withNewParent:(Lorg/wildfly/common/net/CidrAddressTable$Mapping;)Lorg/wildfly/common/net/CidrAddressTable$Mapping;
     507: aastore
     508: iinc          16, 1
     511: goto          448
     514: aload         6
     516: aload         8
     518: aload         9
     520: invokevirtual #38                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
     523: ifeq          39
     526: iload         12
     528: ifeq          535
     531: aload_2
     532: goto          537
     535: aload         11
     537: areturn

  private static <T> org.wildfly.common.net.CidrAddressTable$Mapping<T>[] empty();
    Code:
       0: getstatic     #39                 // Field NO_MAPPINGS:[Lorg/wildfly/common/net/CidrAddressTable$Mapping;
       3: areturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #5                  // Field mappingsRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokestatic  #3                  // Method empty:()[Lorg/wildfly/common/net/CidrAddressTable$Mapping;
       7: invokevirtual #40                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      10: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #5                  // Field mappingsRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #9                  // class "[Lorg/wildfly/common/net/CidrAddressTable$Mapping;"
      10: arraylength
      11: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokevirtual #41                 // Method size:()I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public org.wildfly.common.net.CidrAddressTable<T> clone();
    Code:
       0: new           #42                 // class org/wildfly/common/net/CidrAddressTable
       3: dup
       4: aload_0
       5: getfield      #5                  // Field mappingsRef:Ljava/util/concurrent/atomic/AtomicReference;
       8: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      11: checkcast     #9                  // class "[Lorg/wildfly/common/net/CidrAddressTable$Mapping;"
      14: invokespecial #43                 // Method "<init>":([Lorg/wildfly/common/net/CidrAddressTable$Mapping;)V
      17: areturn

  public java.util.Iterator<org.wildfly.common.net.CidrAddressTable$Mapping<T>> iterator();
    Code:
       0: aload_0
       1: getfield      #5                  // Field mappingsRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #9                  // class "[Lorg/wildfly/common/net/CidrAddressTable$Mapping;"
      10: astore_1
      11: new           #44                 // class org/wildfly/common/net/CidrAddressTable$1
      14: dup
      15: aload_0
      16: aload_1
      17: invokespecial #45                 // Method org/wildfly/common/net/CidrAddressTable$1."<init>":(Lorg/wildfly/common/net/CidrAddressTable;[Lorg/wildfly/common/net/CidrAddressTable$Mapping;)V
      20: areturn

  public java.util.Spliterator<org.wildfly.common.net.CidrAddressTable$Mapping<T>> spliterator();
    Code:
       0: aload_0
       1: getfield      #5                  // Field mappingsRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #9                  // class "[Lorg/wildfly/common/net/CidrAddressTable$Mapping;"
      10: astore_1
      11: aload_1
      12: sipush        1040
      15: invokestatic  #47                 // Method java/util/Spliterators.spliterator:([Ljava/lang/Object;I)Ljava/util/Spliterator;
      18: areturn

  public java.lang.String toString();
    Code:
       0: new           #48                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #5                  // Field mappingsRef:Ljava/util/concurrent/atomic/AtomicReference;
      12: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      15: checkcast     #9                  // class "[Lorg/wildfly/common/net/CidrAddressTable$Mapping;"
      18: astore_2
      19: aload_1
      20: aload_2
      21: arraylength
      22: invokevirtual #50                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      25: ldc           #51                 // String  mappings
      27: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: pop
      31: aload_2
      32: astore_3
      33: aload_3
      34: arraylength
      35: istore        4
      37: iconst_0
      38: istore        5
      40: iload         5
      42: iload         4
      44: if_icmpge     126
      47: aload_3
      48: iload         5
      50: aaload
      51: astore        6
      53: aload_1
      54: invokestatic  #53                 // Method java/lang/System.lineSeparator:()Ljava/lang/String;
      57: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: bipush        9
      62: invokevirtual #54                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      65: aload         6
      67: getfield      #36                 // Field org/wildfly/common/net/CidrAddressTable$Mapping.range:Lorg/wildfly/common/net/CidrAddress;
      70: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      73: pop
      74: aload         6
      76: getfield      #31                 // Field org/wildfly/common/net/CidrAddressTable$Mapping.parent:Lorg/wildfly/common/net/CidrAddressTable$Mapping;
      79: ifnull        105
      82: aload_1
      83: ldc           #56                 // String  (parent
      85: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: aload         6
      90: getfield      #31                 // Field org/wildfly/common/net/CidrAddressTable$Mapping.parent:Lorg/wildfly/common/net/CidrAddressTable$Mapping;
      93: getfield      #36                 // Field org/wildfly/common/net/CidrAddressTable$Mapping.range:Lorg/wildfly/common/net/CidrAddress;
      96: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      99: bipush        41
     101: invokevirtual #54                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     104: pop
     105: aload_1
     106: ldc           #57                 // String  ->
     108: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: aload         6
     113: getfield      #14                 // Field org/wildfly/common/net/CidrAddressTable$Mapping.value:Ljava/lang/Object;
     116: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     119: pop
     120: iinc          5, 1
     123: goto          40
     126: aload_1
     127: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     130: areturn

  private int doFind(org.wildfly.common.net.CidrAddressTable$Mapping<T>[], byte[], int, int);
    Code:
       0: iconst_0
       1: istore        5
       3: aload_1
       4: arraylength
       5: iconst_1
       6: isub
       7: istore        6
       9: iload         5
      11: iload         6
      13: if_icmpgt     79
      16: iload         5
      18: iload         6
      20: iadd
      21: iconst_1
      22: iushr
      23: istore        7
      25: aload_1
      26: iload         7
      28: aaload
      29: astore        8
      31: aload         8
      33: getfield      #36                 // Field org/wildfly/common/net/CidrAddressTable$Mapping.range:Lorg/wildfly/common/net/CidrAddress;
      36: aload_2
      37: iload_3
      38: iload         4
      40: invokevirtual #59                 // Method org/wildfly/common/net/CidrAddress.compareAddressBytesTo:([BII)I
      43: istore        9
      45: iload         9
      47: ifge          59
      50: iload         7
      52: iconst_1
      53: iadd
      54: istore        5
      56: goto          76
      59: iload         9
      61: ifle          73
      64: iload         7
      66: iconst_1
      67: isub
      68: istore        6
      70: goto          76
      73: iload         7
      75: ireturn
      76: goto          9
      79: iload         5
      81: iconst_1
      82: iadd
      83: ineg
      84: ireturn

  private org.wildfly.common.net.CidrAddressTable$Mapping<T> doGet(org.wildfly.common.net.CidrAddressTable$Mapping<T>[], byte[], int, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iload         4
       6: invokespecial #27                 // Method doFind:([Lorg/wildfly/common/net/CidrAddressTable$Mapping;[BII)I
       9: istore        5
      11: iload         5
      13: iflt          51
      16: getstatic     #21                 // Field $assertionsDisabled:Z
      19: ifne          46
      22: aload_1
      23: iload         5
      25: aaload
      26: getfield      #36                 // Field org/wildfly/common/net/CidrAddressTable$Mapping.range:Lorg/wildfly/common/net/CidrAddress;
      29: aload_2
      30: iload         4
      32: invokevirtual #60                 // Method org/wildfly/common/net/CidrAddress.matches:([BI)Z
      35: ifne          46
      38: new           #22                 // class java/lang/AssertionError
      41: dup
      42: invokespecial #23                 // Method java/lang/AssertionError."<init>":()V
      45: athrow
      46: aload_1
      47: iload         5
      49: aaload
      50: areturn
      51: iload         5
      53: ineg
      54: iconst_2
      55: isub
      56: istore        6
      58: iload         6
      60: iflt          125
      63: aload_1
      64: iload         6
      66: aaload
      67: getfield      #36                 // Field org/wildfly/common/net/CidrAddressTable$Mapping.range:Lorg/wildfly/common/net/CidrAddress;
      70: aload_2
      71: iload         4
      73: invokevirtual #60                 // Method org/wildfly/common/net/CidrAddress.matches:([BI)Z
      76: ifeq          84
      79: aload_1
      80: iload         6
      82: aaload
      83: areturn
      84: aload_1
      85: iload         6
      87: aaload
      88: getfield      #31                 // Field org/wildfly/common/net/CidrAddressTable$Mapping.parent:Lorg/wildfly/common/net/CidrAddressTable$Mapping;
      91: astore        7
      93: aload         7
      95: ifnull        125
      98: aload         7
     100: getfield      #36                 // Field org/wildfly/common/net/CidrAddressTable$Mapping.range:Lorg/wildfly/common/net/CidrAddress;
     103: aload_2
     104: iload         4
     106: invokevirtual #60                 // Method org/wildfly/common/net/CidrAddress.matches:([BI)Z
     109: ifeq          115
     112: aload         7
     114: areturn
     115: aload         7
     117: getfield      #31                 // Field org/wildfly/common/net/CidrAddressTable$Mapping.parent:Lorg/wildfly/common/net/CidrAddressTable$Mapping;
     120: astore        7
     122: goto          93
     125: aconst_null
     126: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #61                 // Method clone:()Lorg/wildfly/common/net/CidrAddressTable;
       4: areturn

  static {};
    Code:
       0: ldc           #42                 // class org/wildfly/common/net/CidrAddressTable
       2: invokevirtual #62                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #21                 // Field $assertionsDisabled:Z
      16: iconst_0
      17: anewarray     #34                 // class org/wildfly/common/net/CidrAddressTable$Mapping
      20: putstatic     #39                 // Field NO_MAPPINGS:[Lorg/wildfly/common/net/CidrAddressTable$Mapping;
      23: return
}
