Compiled from "ExceptionIntFunction.java"
public interface org.wildfly.common.function.ExceptionIntFunction<R, E extends java.lang.Exception> {
  public abstract R apply(int) throws E;

  public default <R2> org.wildfly.common.function.ExceptionIntFunction<R2, E> andThen(org.wildfly.common.function.ExceptionFunction<? super R, ? extends R2, ? extends E>);
    Code:
       0: ldc           #1                  // String after
       2: aload_1
       3: invokestatic  #2                  // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: invokedynamic #3,  0              // InvokeDynamic #0:apply:(Lorg/wildfly/common/function/ExceptionIntFunction;Lorg/wildfly/common/function/ExceptionFunction;)Lorg/wildfly/common/function/ExceptionIntFunction;
      14: areturn

  public default <T> org.wildfly.common.function.ExceptionFunction<T, R, E> compose(org.wildfly.common.function.ExceptionToIntFunction<? super T, ? extends E>);
    Code:
       0: ldc           #4                  // String before
       2: aload_1
       3: invokestatic  #2                  // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: invokedynamic #5,  0              // InvokeDynamic #1:apply:(Lorg/wildfly/common/function/ExceptionIntFunction;Lorg/wildfly/common/function/ExceptionToIntFunction;)Lorg/wildfly/common/function/ExceptionFunction;
      14: areturn

  private java.lang.Object lambda$compose$1(org.wildfly.common.function.ExceptionToIntFunction, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #6,  2            // InterfaceMethod org/wildfly/common/function/ExceptionToIntFunction.apply:(Ljava/lang/Object;)I
       8: invokeinterface #7,  2            // InterfaceMethod apply:(I)Ljava/lang/Object;
      13: areturn

  private java.lang.Object lambda$andThen$0(org.wildfly.common.function.ExceptionFunction, int) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_0
       2: iload_2
       3: invokeinterface #7,  2            // InterfaceMethod apply:(I)Ljava/lang/Object;
       8: invokeinterface #8,  2            // InterfaceMethod org/wildfly/common/function/ExceptionFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn
}
