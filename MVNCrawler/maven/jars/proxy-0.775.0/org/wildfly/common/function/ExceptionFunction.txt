Compiled from "ExceptionFunction.java"
public interface org.wildfly.common.function.ExceptionFunction<T, R, E extends java.lang.Exception> {
  public abstract R apply(T) throws E;

  public default <R2> org.wildfly.common.function.ExceptionFunction<T, R2, E> andThen(org.wildfly.common.function.ExceptionFunction<? super R, ? extends R2, ? extends E>);
    Code:
       0: ldc           #1                  // String after
       2: aload_1
       3: invokestatic  #2                  // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: invokedynamic #3,  0              // InvokeDynamic #0:apply:(Lorg/wildfly/common/function/ExceptionFunction;Lorg/wildfly/common/function/ExceptionFunction;)Lorg/wildfly/common/function/ExceptionFunction;
      14: areturn

  public default <R2> org.wildfly.common.function.ExceptionFunction<T, R2, E> andThen(org.wildfly.common.function.ExceptionBiFunction<? super T, ? super R, ? extends R2, ? extends E>);
    Code:
       0: ldc           #1                  // String after
       2: aload_1
       3: invokestatic  #2                  // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: invokedynamic #4,  0              // InvokeDynamic #1:apply:(Lorg/wildfly/common/function/ExceptionFunction;Lorg/wildfly/common/function/ExceptionBiFunction;)Lorg/wildfly/common/function/ExceptionFunction;
      14: areturn

  public default <T2> org.wildfly.common.function.ExceptionFunction<T2, R, E> compose(org.wildfly.common.function.ExceptionFunction<? super T2, ? extends T, ? extends E>);
    Code:
       0: ldc           #5                  // String before
       2: aload_1
       3: invokestatic  #2                  // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: invokedynamic #6,  0              // InvokeDynamic #2:apply:(Lorg/wildfly/common/function/ExceptionFunction;Lorg/wildfly/common/function/ExceptionFunction;)Lorg/wildfly/common/function/ExceptionFunction;
      14: areturn

  public default org.wildfly.common.function.ExceptionConsumer<T, E> andThen(org.wildfly.common.function.ExceptionConsumer<? super R, ? extends E>);
    Code:
       0: ldc           #1                  // String after
       2: aload_1
       3: invokestatic  #2                  // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: invokedynamic #7,  0              // InvokeDynamic #3:accept:(Lorg/wildfly/common/function/ExceptionFunction;Lorg/wildfly/common/function/ExceptionConsumer;)Lorg/wildfly/common/function/ExceptionConsumer;
      14: areturn

  public default org.wildfly.common.function.ExceptionConsumer<T, E> andThen(org.wildfly.common.function.ExceptionBiConsumer<? super T, ? super R, ? extends E>);
    Code:
       0: ldc           #1                  // String after
       2: aload_1
       3: invokestatic  #2                  // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: invokedynamic #8,  0              // InvokeDynamic #4:accept:(Lorg/wildfly/common/function/ExceptionFunction;Lorg/wildfly/common/function/ExceptionBiConsumer;)Lorg/wildfly/common/function/ExceptionConsumer;
      14: areturn

  public default org.wildfly.common.function.ExceptionPredicate<T, E> andThen(org.wildfly.common.function.ExceptionPredicate<? super R, ? extends E>);
    Code:
       0: ldc           #1                  // String after
       2: aload_1
       3: invokestatic  #2                  // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: invokedynamic #9,  0              // InvokeDynamic #5:test:(Lorg/wildfly/common/function/ExceptionFunction;Lorg/wildfly/common/function/ExceptionPredicate;)Lorg/wildfly/common/function/ExceptionPredicate;
      14: areturn

  public default org.wildfly.common.function.ExceptionPredicate<T, E> andThen(org.wildfly.common.function.ExceptionBiPredicate<? super T, ? super R, ? extends E>);
    Code:
       0: ldc           #1                  // String after
       2: aload_1
       3: invokestatic  #2                  // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: invokedynamic #10,  0             // InvokeDynamic #6:test:(Lorg/wildfly/common/function/ExceptionFunction;Lorg/wildfly/common/function/ExceptionBiPredicate;)Lorg/wildfly/common/function/ExceptionPredicate;
      14: areturn

  public default org.wildfly.common.function.ExceptionSupplier<R, E> compose(org.wildfly.common.function.ExceptionSupplier<? extends T, ? extends E>);
    Code:
       0: ldc           #5                  // String before
       2: aload_1
       3: invokestatic  #2                  // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: invokedynamic #11,  0             // InvokeDynamic #7:get:(Lorg/wildfly/common/function/ExceptionFunction;Lorg/wildfly/common/function/ExceptionSupplier;)Lorg/wildfly/common/function/ExceptionSupplier;
      14: areturn

  private java.lang.Object lambda$compose$7(org.wildfly.common.function.ExceptionSupplier) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #12,  1           // InterfaceMethod org/wildfly/common/function/ExceptionSupplier.get:()Ljava/lang/Object;
       7: invokeinterface #13,  2           // InterfaceMethod apply:(Ljava/lang/Object;)Ljava/lang/Object;
      12: areturn

  private boolean lambda$andThen$6(org.wildfly.common.function.ExceptionBiPredicate, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_2
       2: aload_0
       3: aload_2
       4: invokeinterface #13,  2           // InterfaceMethod apply:(Ljava/lang/Object;)Ljava/lang/Object;
       9: invokeinterface #14,  3           // InterfaceMethod org/wildfly/common/function/ExceptionBiPredicate.test:(Ljava/lang/Object;Ljava/lang/Object;)Z
      14: ireturn

  private boolean lambda$andThen$5(org.wildfly.common.function.ExceptionPredicate, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokeinterface #13,  2           // InterfaceMethod apply:(Ljava/lang/Object;)Ljava/lang/Object;
       8: invokeinterface #15,  2           // InterfaceMethod org/wildfly/common/function/ExceptionPredicate.test:(Ljava/lang/Object;)Z
      13: ireturn

  private void lambda$andThen$4(org.wildfly.common.function.ExceptionBiConsumer, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_2
       2: aload_0
       3: aload_2
       4: invokeinterface #13,  2           // InterfaceMethod apply:(Ljava/lang/Object;)Ljava/lang/Object;
       9: invokeinterface #16,  3           // InterfaceMethod org/wildfly/common/function/ExceptionBiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
      14: return

  private void lambda$andThen$3(org.wildfly.common.function.ExceptionConsumer, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokeinterface #13,  2           // InterfaceMethod apply:(Ljava/lang/Object;)Ljava/lang/Object;
       8: invokeinterface #17,  2           // InterfaceMethod org/wildfly/common/function/ExceptionConsumer.accept:(Ljava/lang/Object;)V
      13: return

  private java.lang.Object lambda$compose$2(org.wildfly.common.function.ExceptionFunction, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #13,  2           // InterfaceMethod apply:(Ljava/lang/Object;)Ljava/lang/Object;
       8: invokeinterface #13,  2           // InterfaceMethod apply:(Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  private java.lang.Object lambda$andThen$1(org.wildfly.common.function.ExceptionBiFunction, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_2
       2: aload_0
       3: aload_2
       4: invokeinterface #13,  2           // InterfaceMethod apply:(Ljava/lang/Object;)Ljava/lang/Object;
       9: invokeinterface #18,  3           // InterfaceMethod org/wildfly/common/function/ExceptionBiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: areturn

  private java.lang.Object lambda$andThen$0(org.wildfly.common.function.ExceptionFunction, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokeinterface #13,  2           // InterfaceMethod apply:(Ljava/lang/Object;)Ljava/lang/Object;
       8: invokeinterface #13,  2           // InterfaceMethod apply:(Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn
}
