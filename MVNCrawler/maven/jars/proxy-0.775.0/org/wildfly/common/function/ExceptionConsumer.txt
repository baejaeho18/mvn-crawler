Compiled from "ExceptionConsumer.java"
public interface org.wildfly.common.function.ExceptionConsumer<T, E extends java.lang.Exception> {
  public abstract void accept(T) throws E;

  public default org.wildfly.common.function.ExceptionConsumer<T, E> andThen(org.wildfly.common.function.ExceptionConsumer<? super T, ? extends E>);
    Code:
       0: ldc           #1                  // String after
       2: aload_1
       3: invokestatic  #2                  // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: invokedynamic #3,  0              // InvokeDynamic #0:accept:(Lorg/wildfly/common/function/ExceptionConsumer;Lorg/wildfly/common/function/ExceptionConsumer;)Lorg/wildfly/common/function/ExceptionConsumer;
      14: areturn

  public default org.wildfly.common.function.ExceptionConsumer<T, E> compose(org.wildfly.common.function.ExceptionConsumer<? super T, ? extends E>);
    Code:
       0: ldc           #4                  // String before
       2: aload_1
       3: invokestatic  #2                  // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: invokedynamic #5,  0              // InvokeDynamic #1:accept:(Lorg/wildfly/common/function/ExceptionConsumer;Lorg/wildfly/common/function/ExceptionConsumer;)Lorg/wildfly/common/function/ExceptionConsumer;
      14: areturn

  public default org.wildfly.common.function.ExceptionRunnable<E> compose(org.wildfly.common.function.ExceptionSupplier<? extends T, ? extends E>);
    Code:
       0: ldc           #4                  // String before
       2: aload_1
       3: invokestatic  #2                  // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: invokedynamic #6,  0              // InvokeDynamic #2:run:(Lorg/wildfly/common/function/ExceptionConsumer;Lorg/wildfly/common/function/ExceptionSupplier;)Lorg/wildfly/common/function/ExceptionRunnable;
      14: areturn

  private void lambda$compose$2(org.wildfly.common.function.ExceptionSupplier) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #7,  1            // InterfaceMethod org/wildfly/common/function/ExceptionSupplier.get:()Ljava/lang/Object;
       7: invokeinterface #8,  2            // InterfaceMethod accept:(Ljava/lang/Object;)V
      12: return

  private void lambda$compose$1(org.wildfly.common.function.ExceptionConsumer, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_2
       2: invokeinterface #8,  2            // InterfaceMethod accept:(Ljava/lang/Object;)V
       7: aload_1
       8: aload_2
       9: invokeinterface #8,  2            // InterfaceMethod accept:(Ljava/lang/Object;)V
      14: return

  private void lambda$andThen$0(org.wildfly.common.function.ExceptionConsumer, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_2
       2: invokeinterface #8,  2            // InterfaceMethod accept:(Ljava/lang/Object;)V
       7: aload_1
       8: aload_2
       9: invokeinterface #8,  2            // InterfaceMethod accept:(Ljava/lang/Object;)V
      14: return
}
