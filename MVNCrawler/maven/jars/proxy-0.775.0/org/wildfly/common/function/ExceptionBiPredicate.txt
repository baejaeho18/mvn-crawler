Compiled from "ExceptionBiPredicate.java"
public interface org.wildfly.common.function.ExceptionBiPredicate<T, U, E extends java.lang.Exception> {
  public abstract boolean test(T, U) throws E;

  public default org.wildfly.common.function.ExceptionBiPredicate<T, U, E> and(org.wildfly.common.function.ExceptionBiPredicate<T, U, E>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #1,  0              // InvokeDynamic #0:test:(Lorg/wildfly/common/function/ExceptionBiPredicate;Lorg/wildfly/common/function/ExceptionBiPredicate;)Lorg/wildfly/common/function/ExceptionBiPredicate;
       7: areturn

  public default org.wildfly.common.function.ExceptionBiPredicate<T, U, E> or(org.wildfly.common.function.ExceptionBiPredicate<T, U, E>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #2,  0              // InvokeDynamic #1:test:(Lorg/wildfly/common/function/ExceptionBiPredicate;Lorg/wildfly/common/function/ExceptionBiPredicate;)Lorg/wildfly/common/function/ExceptionBiPredicate;
       7: areturn

  public default org.wildfly.common.function.ExceptionBiPredicate<T, U, E> xor(org.wildfly.common.function.ExceptionBiPredicate<T, U, E>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #3,  0              // InvokeDynamic #2:test:(Lorg/wildfly/common/function/ExceptionBiPredicate;Lorg/wildfly/common/function/ExceptionBiPredicate;)Lorg/wildfly/common/function/ExceptionBiPredicate;
       7: areturn

  public default org.wildfly.common.function.ExceptionBiPredicate<T, U, E> not();
    Code:
       0: aload_0
       1: invokedynamic #4,  0              // InvokeDynamic #3:test:(Lorg/wildfly/common/function/ExceptionBiPredicate;)Lorg/wildfly/common/function/ExceptionBiPredicate;
       6: areturn

  private boolean lambda$not$3(java.lang.Object, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #5,  3            // InterfaceMethod test:(Ljava/lang/Object;Ljava/lang/Object;)Z
       8: ifne          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  private boolean lambda$xor$2(org.wildfly.common.function.ExceptionBiPredicate, java.lang.Object, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: invokeinterface #5,  3            // InterfaceMethod test:(Ljava/lang/Object;Ljava/lang/Object;)Z
       8: aload_1
       9: aload_2
      10: aload_3
      11: invokeinterface #5,  3            // InterfaceMethod test:(Ljava/lang/Object;Ljava/lang/Object;)Z
      16: if_icmpeq     23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  private boolean lambda$or$1(org.wildfly.common.function.ExceptionBiPredicate, java.lang.Object, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: invokeinterface #5,  3            // InterfaceMethod test:(Ljava/lang/Object;Ljava/lang/Object;)Z
       8: ifne          22
      11: aload_1
      12: aload_2
      13: aload_3
      14: invokeinterface #5,  3            // InterfaceMethod test:(Ljava/lang/Object;Ljava/lang/Object;)Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  private boolean lambda$and$0(org.wildfly.common.function.ExceptionBiPredicate, java.lang.Object, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: invokeinterface #5,  3            // InterfaceMethod test:(Ljava/lang/Object;Ljava/lang/Object;)Z
       8: ifeq          26
      11: aload_1
      12: aload_2
      13: aload_3
      14: invokeinterface #5,  3            // InterfaceMethod test:(Ljava/lang/Object;Ljava/lang/Object;)Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn
}
