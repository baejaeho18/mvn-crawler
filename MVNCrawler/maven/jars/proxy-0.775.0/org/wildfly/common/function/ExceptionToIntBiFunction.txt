Compiled from "ExceptionToIntBiFunction.java"
public interface org.wildfly.common.function.ExceptionToIntBiFunction<T, U, E extends java.lang.Exception> {
  public abstract int apply(T, U) throws E;

  public default <R> org.wildfly.common.function.ExceptionBiFunction<T, U, R, E> andThen(org.wildfly.common.function.ExceptionIntFunction<R, E>);
    Code:
       0: ldc           #1                  // String after
       2: aload_1
       3: invokestatic  #2                  // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: invokedynamic #3,  0              // InvokeDynamic #0:apply:(Lorg/wildfly/common/function/ExceptionToIntBiFunction;Lorg/wildfly/common/function/ExceptionIntFunction;)Lorg/wildfly/common/function/ExceptionBiFunction;
      14: areturn

  public default <R> org.wildfly.common.function.ExceptionBiFunction<T, U, R, E> andThen(org.wildfly.common.function.ExceptionLongFunction<R, E>);
    Code:
       0: ldc           #1                  // String after
       2: aload_1
       3: invokestatic  #2                  // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: invokedynamic #4,  0              // InvokeDynamic #1:apply:(Lorg/wildfly/common/function/ExceptionToIntBiFunction;Lorg/wildfly/common/function/ExceptionLongFunction;)Lorg/wildfly/common/function/ExceptionBiFunction;
      14: areturn

  private java.lang.Object lambda$andThen$1(org.wildfly.common.function.ExceptionLongFunction, java.lang.Object, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: aload_3
       4: invokeinterface #5,  3            // InterfaceMethod apply:(Ljava/lang/Object;Ljava/lang/Object;)I
       9: i2l
      10: invokeinterface #6,  3            // InterfaceMethod org/wildfly/common/function/ExceptionLongFunction.apply:(J)Ljava/lang/Object;
      15: areturn

  private java.lang.Object lambda$andThen$0(org.wildfly.common.function.ExceptionIntFunction, java.lang.Object, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: aload_3
       4: invokeinterface #5,  3            // InterfaceMethod apply:(Ljava/lang/Object;Ljava/lang/Object;)I
       9: invokeinterface #7,  2            // InterfaceMethod org/wildfly/common/function/ExceptionIntFunction.apply:(I)Ljava/lang/Object;
      14: areturn
}
