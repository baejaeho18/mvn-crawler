Compiled from "ExceptionPredicate.java"
public interface org.wildfly.common.function.ExceptionPredicate<T, E extends java.lang.Exception> {
  public abstract boolean test(T) throws E;

  public default org.wildfly.common.function.ExceptionPredicate<T, E> and(org.wildfly.common.function.ExceptionPredicate<T, E>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #1,  0              // InvokeDynamic #0:test:(Lorg/wildfly/common/function/ExceptionPredicate;Lorg/wildfly/common/function/ExceptionPredicate;)Lorg/wildfly/common/function/ExceptionPredicate;
       7: areturn

  public default org.wildfly.common.function.ExceptionPredicate<T, E> or(org.wildfly.common.function.ExceptionPredicate<T, E>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #2,  0              // InvokeDynamic #1:test:(Lorg/wildfly/common/function/ExceptionPredicate;Lorg/wildfly/common/function/ExceptionPredicate;)Lorg/wildfly/common/function/ExceptionPredicate;
       7: areturn

  public default org.wildfly.common.function.ExceptionPredicate<T, E> xor(org.wildfly.common.function.ExceptionPredicate<T, E>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #3,  0              // InvokeDynamic #2:test:(Lorg/wildfly/common/function/ExceptionPredicate;Lorg/wildfly/common/function/ExceptionPredicate;)Lorg/wildfly/common/function/ExceptionPredicate;
       7: areturn

  public default org.wildfly.common.function.ExceptionPredicate<T, E> not();
    Code:
       0: aload_0
       1: invokedynamic #4,  0              // InvokeDynamic #3:test:(Lorg/wildfly/common/function/ExceptionPredicate;)Lorg/wildfly/common/function/ExceptionPredicate;
       6: areturn

  public default <U> org.wildfly.common.function.ExceptionBiPredicate<T, U, E> with(org.wildfly.common.function.ExceptionPredicate<? super U, ? extends E>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #5,  0              // InvokeDynamic #4:test:(Lorg/wildfly/common/function/ExceptionPredicate;Lorg/wildfly/common/function/ExceptionPredicate;)Lorg/wildfly/common/function/ExceptionBiPredicate;
       7: areturn

  private boolean lambda$with$4(org.wildfly.common.function.ExceptionPredicate, java.lang.Object, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_2
       2: invokeinterface #6,  2            // InterfaceMethod test:(Ljava/lang/Object;)Z
       7: ifeq          24
      10: aload_1
      11: aload_3
      12: invokeinterface #6,  2            // InterfaceMethod test:(Ljava/lang/Object;)Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  private boolean lambda$not$3(java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #6,  2            // InterfaceMethod test:(Ljava/lang/Object;)Z
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  private boolean lambda$xor$2(org.wildfly.common.function.ExceptionPredicate, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_2
       2: invokeinterface #6,  2            // InterfaceMethod test:(Ljava/lang/Object;)Z
       7: aload_1
       8: aload_2
       9: invokeinterface #6,  2            // InterfaceMethod test:(Ljava/lang/Object;)Z
      14: if_icmpeq     21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  private boolean lambda$or$1(org.wildfly.common.function.ExceptionPredicate, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_2
       2: invokeinterface #6,  2            // InterfaceMethod test:(Ljava/lang/Object;)Z
       7: ifne          20
      10: aload_1
      11: aload_2
      12: invokeinterface #6,  2            // InterfaceMethod test:(Ljava/lang/Object;)Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  private boolean lambda$and$0(org.wildfly.common.function.ExceptionPredicate, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_2
       2: invokeinterface #6,  2            // InterfaceMethod test:(Ljava/lang/Object;)Z
       7: ifeq          24
      10: aload_1
      11: aload_2
      12: invokeinterface #6,  2            // InterfaceMethod test:(Ljava/lang/Object;)Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn
}
