Compiled from "ExceptionUnaryOperator.java"
public interface org.wildfly.common.function.ExceptionUnaryOperator<T, E extends java.lang.Exception> extends org.wildfly.common.function.ExceptionFunction<T, T, E> {
  public default org.wildfly.common.function.ExceptionUnaryOperator<T, E> andThen(org.wildfly.common.function.ExceptionUnaryOperator<T, ? extends E>);
    Code:
       0: ldc           #1                  // String after
       2: aload_1
       3: invokestatic  #2                  // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: invokedynamic #3,  0              // InvokeDynamic #0:apply:(Lorg/wildfly/common/function/ExceptionUnaryOperator;Lorg/wildfly/common/function/ExceptionUnaryOperator;)Lorg/wildfly/common/function/ExceptionUnaryOperator;
      14: areturn

  public default org.wildfly.common.function.ExceptionUnaryOperator<T, E> compose(org.wildfly.common.function.ExceptionUnaryOperator<T, ? extends E>);
    Code:
       0: ldc           #4                  // String before
       2: aload_1
       3: invokestatic  #2                  // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: invokedynamic #5,  0              // InvokeDynamic #1:apply:(Lorg/wildfly/common/function/ExceptionUnaryOperator;Lorg/wildfly/common/function/ExceptionUnaryOperator;)Lorg/wildfly/common/function/ExceptionUnaryOperator;
      14: areturn

  public static <T, E extends java.lang.Exception> org.wildfly.common.function.ExceptionUnaryOperator<T, E> of(org.wildfly.common.function.ExceptionFunction<T, T, E>);
    Code:
       0: aload_0
       1: instanceof    #6                  // class org/wildfly/common/function/ExceptionUnaryOperator
       4: ifeq          14
       7: aload_0
       8: checkcast     #6                  // class org/wildfly/common/function/ExceptionUnaryOperator
      11: goto          25
      14: aload_0
      15: dup
      16: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: invokedynamic #8,  0              // InvokeDynamic #2:apply:(Lorg/wildfly/common/function/ExceptionFunction;)Lorg/wildfly/common/function/ExceptionUnaryOperator;
      25: areturn

  public static <T, E extends java.lang.Exception> org.wildfly.common.function.ExceptionUnaryOperator<T, E> identity();
    Code:
       0: invokedynamic #9,  0              // InvokeDynamic #3:apply:()Lorg/wildfly/common/function/ExceptionUnaryOperator;
       5: areturn

  private static java.lang.Object lambda$identity$2(java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: areturn

  private java.lang.Object lambda$compose$1(org.wildfly.common.function.ExceptionUnaryOperator, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #10,  2           // InterfaceMethod apply:(Ljava/lang/Object;)Ljava/lang/Object;
       8: invokeinterface #10,  2           // InterfaceMethod apply:(Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  private java.lang.Object lambda$andThen$0(org.wildfly.common.function.ExceptionUnaryOperator, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokeinterface #10,  2           // InterfaceMethod apply:(Ljava/lang/Object;)Ljava/lang/Object;
       8: invokeinterface #10,  2           // InterfaceMethod apply:(Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn
}
