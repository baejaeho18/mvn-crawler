Compiled from "HibernateValidatorContext.java"
public interface org.hibernate.validator.HibernateValidatorContext extends jakarta.validation.ValidatorContext {
  public abstract org.hibernate.validator.HibernateValidatorContext messageInterpolator(jakarta.validation.MessageInterpolator);

  public abstract org.hibernate.validator.HibernateValidatorContext traversableResolver(jakarta.validation.TraversableResolver);

  public abstract org.hibernate.validator.HibernateValidatorContext constraintValidatorFactory(jakarta.validation.ConstraintValidatorFactory);

  public abstract org.hibernate.validator.HibernateValidatorContext parameterNameProvider(jakarta.validation.ParameterNameProvider);

  public abstract org.hibernate.validator.HibernateValidatorContext clockProvider(jakarta.validation.ClockProvider);

  public abstract org.hibernate.validator.HibernateValidatorContext addValueExtractor(jakarta.validation.valueextraction.ValueExtractor<?>);

  public abstract org.hibernate.validator.HibernateValidatorContext failFast(boolean);

  public abstract org.hibernate.validator.HibernateValidatorContext allowOverridingMethodAlterParameterConstraint(boolean);

  public abstract org.hibernate.validator.HibernateValidatorContext allowMultipleCascadedValidationOnReturnValues(boolean);

  public abstract org.hibernate.validator.HibernateValidatorContext allowParallelMethodsDefineParameterConstraints(boolean);

  public abstract org.hibernate.validator.HibernateValidatorContext enableTraversableResolverResultCache(boolean);

  public abstract org.hibernate.validator.HibernateValidatorContext temporalValidationTolerance(java.time.Duration);

  public abstract org.hibernate.validator.HibernateValidatorContext constraintValidatorPayload(java.lang.Object);

  public abstract org.hibernate.validator.HibernateValidatorContext showValidatedValuesInTraceLogs(boolean);

  public default jakarta.validation.ValidatorContext addValueExtractor(jakarta.validation.valueextraction.ValueExtractor);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #1,  2            // InterfaceMethod addValueExtractor:(Ljakarta/validation/valueextraction/ValueExtractor;)Lorg/hibernate/validator/HibernateValidatorContext;
       7: areturn

  public default jakarta.validation.ValidatorContext clockProvider(jakarta.validation.ClockProvider);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #7,  2            // InterfaceMethod clockProvider:(Ljakarta/validation/ClockProvider;)Lorg/hibernate/validator/HibernateValidatorContext;
       7: areturn

  public default jakarta.validation.ValidatorContext parameterNameProvider(jakarta.validation.ParameterNameProvider);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #11,  2           // InterfaceMethod parameterNameProvider:(Ljakarta/validation/ParameterNameProvider;)Lorg/hibernate/validator/HibernateValidatorContext;
       7: areturn

  public default jakarta.validation.ValidatorContext constraintValidatorFactory(jakarta.validation.ConstraintValidatorFactory);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #15,  2           // InterfaceMethod constraintValidatorFactory:(Ljakarta/validation/ConstraintValidatorFactory;)Lorg/hibernate/validator/HibernateValidatorContext;
       7: areturn

  public default jakarta.validation.ValidatorContext traversableResolver(jakarta.validation.TraversableResolver);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #19,  2           // InterfaceMethod traversableResolver:(Ljakarta/validation/TraversableResolver;)Lorg/hibernate/validator/HibernateValidatorContext;
       7: areturn

  public default jakarta.validation.ValidatorContext messageInterpolator(jakarta.validation.MessageInterpolator);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #23,  2           // InterfaceMethod messageInterpolator:(Ljakarta/validation/MessageInterpolator;)Lorg/hibernate/validator/HibernateValidatorContext;
       7: areturn
}
