Compiled from "BaseHibernateValidatorConfiguration.java"
public interface org.hibernate.validator.BaseHibernateValidatorConfiguration<S extends org.hibernate.validator.BaseHibernateValidatorConfiguration<S>> extends jakarta.validation.Configuration<S> {
  public static final java.lang.String FAIL_FAST;

  public static final java.lang.String ALLOW_PARAMETER_CONSTRAINT_OVERRIDE;

  public static final java.lang.String ALLOW_MULTIPLE_CASCADED_VALIDATION_ON_RESULT;

  public static final java.lang.String ALLOW_PARALLEL_METHODS_DEFINE_PARAMETER_CONSTRAINTS;

  public static final java.lang.String CONSTRAINT_MAPPING_CONTRIBUTOR;

  public static final java.lang.String CONSTRAINT_MAPPING_CONTRIBUTORS;

  public static final java.lang.String ENABLE_TRAVERSABLE_RESOLVER_RESULT_CACHE;

  public static final java.lang.String SCRIPT_EVALUATOR_FACTORY_CLASSNAME;

  public static final java.lang.String TEMPORAL_VALIDATION_TOLERANCE;

  public static final java.lang.String GETTER_PROPERTY_SELECTION_STRATEGY_CLASSNAME;

  public static final java.lang.String PROPERTY_NODE_NAME_PROVIDER_CLASSNAME;

  public static final java.lang.String LOCALE_RESOLVER_CLASSNAME;

  public static final java.lang.String CONSTRAINT_EXPRESSION_LANGUAGE_FEATURE_LEVEL;

  public static final java.lang.String CUSTOM_VIOLATION_EXPRESSION_LANGUAGE_FEATURE_LEVEL;

  public static final java.lang.String SHOW_VALIDATED_VALUE_IN_TRACE_LOGS;

  public abstract org.hibernate.validator.spi.resourceloading.ResourceBundleLocator getDefaultResourceBundleLocator();

  public abstract org.hibernate.validator.cfg.ConstraintMapping createConstraintMapping();

  public abstract java.util.Set<jakarta.validation.valueextraction.ValueExtractor<?>> getDefaultValueExtractors();

  public abstract S addMapping(org.hibernate.validator.cfg.ConstraintMapping);

  public abstract S failFast(boolean);

  public abstract S externalClassLoader(java.lang.ClassLoader);

  public abstract S allowOverridingMethodAlterParameterConstraint(boolean);

  public abstract S allowMultipleCascadedValidationOnReturnValues(boolean);

  public abstract S allowParallelMethodsDefineParameterConstraints(boolean);

  public abstract S enableTraversableResolverResultCache(boolean);

  public abstract S scriptEvaluatorFactory(org.hibernate.validator.spi.scripting.ScriptEvaluatorFactory);

  public abstract S temporalValidationTolerance(java.time.Duration);

  public abstract S constraintValidatorPayload(java.lang.Object);

  public abstract S getterPropertySelectionStrategy(org.hibernate.validator.spi.properties.GetterPropertySelectionStrategy);

  public abstract S propertyNodeNameProvider(org.hibernate.validator.spi.nodenameprovider.PropertyNodeNameProvider);

  public abstract S locales(java.util.Set<java.util.Locale>);

  public default S locales(java.util.Locale...);
    Code:
       0: aload_0
       1: new           #1                  // class java/util/HashSet
       4: dup
       5: aload_1
       6: invokestatic  #3                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       9: invokespecial #9                  // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      12: invokeinterface #13,  2           // InterfaceMethod locales:(Ljava/util/Set;)Lorg/hibernate/validator/BaseHibernateValidatorConfiguration;
      17: areturn

  public abstract S defaultLocale(java.util.Locale);

  public abstract S localeResolver(org.hibernate.validator.spi.messageinterpolation.LocaleResolver);

  public abstract S beanMetaDataClassNormalizer(org.hibernate.validator.metadata.BeanMetaDataClassNormalizer);

  public abstract S constraintExpressionLanguageFeatureLevel(org.hibernate.validator.messageinterpolation.ExpressionLanguageFeatureLevel);

  public abstract S customViolationExpressionLanguageFeatureLevel(org.hibernate.validator.messageinterpolation.ExpressionLanguageFeatureLevel);

  public abstract S showValidatedValuesInTraceLogs(boolean);
}
