Compiled from "CurrencyValidatorForMonetaryAmount.java"
public class org.hibernate.validator.internal.constraintvalidators.bv.money.CurrencyValidatorForMonetaryAmount implements jakarta.validation.ConstraintValidator<org.hibernate.validator.constraints.Currency, javax.money.MonetaryAmount> {
  private java.util.List<javax.money.CurrencyUnit> acceptedCurrencies;

  public org.hibernate.validator.internal.constraintvalidators.bv.money.CurrencyValidatorForMonetaryAmount();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void initialize(org.hibernate.validator.constraints.Currency);
    Code:
       0: new           #7                  // class java/util/ArrayList
       3: dup
       4: invokespecial #9                  // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_1
       9: invokeinterface #10,  1           // InterfaceMethod org/hibernate/validator/constraints/Currency.value:()[Ljava/lang/String;
      14: astore_3
      15: aload_3
      16: arraylength
      17: istore        4
      19: iconst_0
      20: istore        5
      22: iload         5
      24: iload         4
      26: if_icmpge     57
      29: aload_3
      30: iload         5
      32: aaload
      33: astore        6
      35: aload_2
      36: aload         6
      38: iconst_0
      39: anewarray     #16                 // class java/lang/String
      42: invokestatic  #18                 // Method javax/money/Monetary.getCurrency:(Ljava/lang/String;[Ljava/lang/String;)Ljavax/money/CurrencyUnit;
      45: invokeinterface #24,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      50: pop
      51: iinc          5, 1
      54: goto          22
      57: aload_0
      58: aload_2
      59: invokestatic  #30                 // Method org/hibernate/validator/internal/util/CollectionHelper.toImmutableList:(Ljava/util/List;)Ljava/util/List;
      62: putfield      #36                 // Field acceptedCurrencies:Ljava/util/List;
      65: return

  public boolean isValid(javax.money.MonetaryAmount, jakarta.validation.ConstraintValidatorContext);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_1
       5: ireturn
       6: aload_0
       7: getfield      #36                 // Field acceptedCurrencies:Ljava/util/List;
      10: aload_1
      11: invokeinterface #42,  1           // InterfaceMethod javax/money/MonetaryAmount.getCurrency:()Ljavax/money/CurrencyUnit;
      16: invokeinterface #47,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      21: ireturn

  public boolean isValid(java.lang.Object, jakarta.validation.ConstraintValidatorContext);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #43                 // class javax/money/MonetaryAmount
       5: aload_2
       6: invokevirtual #50                 // Method isValid:(Ljavax/money/MonetaryAmount;Ljakarta/validation/ConstraintValidatorContext;)Z
       9: ireturn

  public void initialize(java.lang.annotation.Annotation);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #11                 // class org/hibernate/validator/constraints/Currency
       5: invokevirtual #54                 // Method initialize:(Lorg/hibernate/validator/constraints/Currency;)V
       8: return
}
