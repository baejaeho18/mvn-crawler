Compiled from "DigitsValidatorForMonetaryAmount.java"
public class org.hibernate.validator.internal.constraintvalidators.bv.money.DigitsValidatorForMonetaryAmount implements jakarta.validation.ConstraintValidator<jakarta.validation.constraints.Digits, javax.money.MonetaryAmount> {
  private static final org.hibernate.validator.internal.util.logging.Log LOG;

  private int maxIntegerLength;

  private int maxFractionLength;

  public org.hibernate.validator.internal.constraintvalidators.bv.money.DigitsValidatorForMonetaryAmount();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void initialize(jakarta.validation.constraints.Digits);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #7,  1            // InterfaceMethod jakarta/validation/constraints/Digits.integer:()I
       7: putfield      #13                 // Field maxIntegerLength:I
      10: aload_0
      11: aload_1
      12: invokeinterface #19,  1           // InterfaceMethod jakarta/validation/constraints/Digits.fraction:()I
      17: putfield      #22                 // Field maxFractionLength:I
      20: aload_0
      21: invokevirtual #25                 // Method validateParameters:()V
      24: return

  public boolean isValid(javax.money.MonetaryAmount, jakarta.validation.ConstraintValidatorContext);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_1
       5: ireturn
       6: aload_1
       7: invokeinterface #28,  1           // InterfaceMethod javax/money/MonetaryAmount.getNumber:()Ljavax/money/NumberValue;
      12: ldc           #34                 // class java/math/BigDecimal
      14: invokevirtual #36                 // Method javax/money/NumberValue.numberValueExact:(Ljava/lang/Class;)Ljava/lang/Number;
      17: checkcast     #34                 // class java/math/BigDecimal
      20: astore_3
      21: aload_3
      22: invokevirtual #42                 // Method java/math/BigDecimal.precision:()I
      25: aload_3
      26: invokevirtual #45                 // Method java/math/BigDecimal.scale:()I
      29: isub
      30: istore        4
      32: aload_3
      33: invokevirtual #45                 // Method java/math/BigDecimal.scale:()I
      36: ifge          43
      39: iconst_0
      40: goto          47
      43: aload_3
      44: invokevirtual #45                 // Method java/math/BigDecimal.scale:()I
      47: istore        5
      49: aload_0
      50: getfield      #13                 // Field maxIntegerLength:I
      53: iload         4
      55: if_icmplt     71
      58: aload_0
      59: getfield      #22                 // Field maxFractionLength:I
      62: iload         5
      64: if_icmplt     71
      67: iconst_1
      68: goto          72
      71: iconst_0
      72: ireturn

  private void validateParameters();
    Code:
       0: aload_0
       1: getfield      #13                 // Field maxIntegerLength:I
       4: ifge          16
       7: getstatic     #48                 // Field LOG:Lorg/hibernate/validator/internal/util/logging/Log;
      10: invokeinterface #52,  1           // InterfaceMethod org/hibernate/validator/internal/util/logging/Log.getInvalidLengthForIntegerPartException:()Ljava/lang/IllegalArgumentException;
      15: athrow
      16: aload_0
      17: getfield      #22                 // Field maxFractionLength:I
      20: ifge          32
      23: getstatic     #48                 // Field LOG:Lorg/hibernate/validator/internal/util/logging/Log;
      26: invokeinterface #58,  1           // InterfaceMethod org/hibernate/validator/internal/util/logging/Log.getInvalidLengthForFractionPartException:()Ljava/lang/IllegalArgumentException;
      31: athrow
      32: return

  public boolean isValid(java.lang.Object, jakarta.validation.ConstraintValidatorContext);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #29                 // class javax/money/MonetaryAmount
       5: aload_2
       6: invokevirtual #61                 // Method isValid:(Ljavax/money/MonetaryAmount;Ljakarta/validation/ConstraintValidatorContext;)Z
       9: ireturn

  public void initialize(java.lang.annotation.Annotation);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #8                  // class jakarta/validation/constraints/Digits
       5: invokevirtual #65                 // Method initialize:(Ljakarta/validation/constraints/Digits;)V
       8: return

  static {};
    Code:
       0: invokestatic  #69                 // Method java/lang/invoke/MethodHandles.lookup:()Ljava/lang/invoke/MethodHandles$Lookup;
       3: invokestatic  #75                 // Method org/hibernate/validator/internal/util/logging/LoggerFactory.make:(Ljava/lang/invoke/MethodHandles$Lookup;)Lorg/hibernate/validator/internal/util/logging/Log;
       6: putstatic     #48                 // Field LOG:Lorg/hibernate/validator/internal/util/logging/Log;
       9: return
}
