Compiled from "ReadOnlyMapPropertyValueExtractor.java"
class org.hibernate.validator.internal.engine.valueextraction.ReadOnlyMapPropertyValueExtractor implements jakarta.validation.valueextraction.ValueExtractor<javafx.beans.property.ReadOnlyMapProperty<?, ?>> {
  static final org.hibernate.validator.internal.engine.valueextraction.ValueExtractorDescriptor DESCRIPTOR;

  private org.hibernate.validator.internal.engine.valueextraction.ReadOnlyMapPropertyValueExtractor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void extractValues(javafx.beans.property.ReadOnlyMapProperty<?, ?>, jakarta.validation.valueextraction.ValueExtractor$ValueReceiver);
    Code:
       0: aload_1
       1: invokevirtual #7                  // Method javafx/beans/property/ReadOnlyMapProperty.entrySet:()Ljava/util/Set;
       4: invokeinterface #13,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       9: astore_3
      10: aload_3
      11: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          55
      19: aload_3
      20: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #29                 // class java/util/Map$Entry
      28: astore        4
      30: aload_2
      31: ldc           #33                 // String <map value>
      33: aload         4
      35: invokeinterface #35,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      40: aload         4
      42: invokeinterface #38,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      47: invokeinterface #41,  4           // InterfaceMethod jakarta/validation/valueextraction/ValueExtractor$ValueReceiver.keyedValue:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      52: goto          10
      55: return

  public void extractValues(java.lang.Object, jakarta.validation.valueextraction.ValueExtractor$ValueReceiver);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #8                  // class javafx/beans/property/ReadOnlyMapProperty
       5: aload_2
       6: invokevirtual #47                 // Method extractValues:(Ljavafx/beans/property/ReadOnlyMapProperty;Ljakarta/validation/valueextraction/ValueExtractor$ValueReceiver;)V
       9: return

  static {};
    Code:
       0: new           #53                 // class org/hibernate/validator/internal/engine/valueextraction/ValueExtractorDescriptor
       3: dup
       4: new           #48                 // class org/hibernate/validator/internal/engine/valueextraction/ReadOnlyMapPropertyValueExtractor
       7: dup
       8: invokespecial #55                 // Method "<init>":()V
      11: ldc           #8                  // class javafx/beans/property/ReadOnlyMapProperty
      13: ldc           #8                  // class javafx/beans/property/ReadOnlyMapProperty
      15: invokevirtual #56                 // Method java/lang/Class.getTypeParameters:()[Ljava/lang/reflect/TypeVariable;
      18: iconst_1
      19: aaload
      20: iconst_0
      21: invokestatic  #62                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      24: invokespecial #68                 // Method org/hibernate/validator/internal/engine/valueextraction/ValueExtractorDescriptor."<init>":(Ljakarta/validation/valueextraction/ValueExtractor;Ljava/lang/Class;Ljava/lang/reflect/TypeVariable;ZLjava/util/Optional;)V
      27: putstatic     #71                 // Field DESCRIPTOR:Lorg/hibernate/validator/internal/engine/valueextraction/ValueExtractorDescriptor;
      30: return
}
