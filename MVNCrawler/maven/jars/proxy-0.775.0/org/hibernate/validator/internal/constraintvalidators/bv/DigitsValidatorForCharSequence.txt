Compiled from "DigitsValidatorForCharSequence.java"
public class org.hibernate.validator.internal.constraintvalidators.bv.DigitsValidatorForCharSequence implements jakarta.validation.ConstraintValidator<jakarta.validation.constraints.Digits, java.lang.CharSequence> {
  private static final org.hibernate.validator.internal.util.logging.Log LOG;

  private int maxIntegerLength;

  private int maxFractionLength;

  public org.hibernate.validator.internal.constraintvalidators.bv.DigitsValidatorForCharSequence();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void initialize(jakarta.validation.constraints.Digits);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #7,  1            // InterfaceMethod jakarta/validation/constraints/Digits.integer:()I
       7: putfield      #13                 // Field maxIntegerLength:I
      10: aload_0
      11: aload_1
      12: invokeinterface #19,  1           // InterfaceMethod jakarta/validation/constraints/Digits.fraction:()I
      17: putfield      #22                 // Field maxFractionLength:I
      20: aload_0
      21: invokevirtual #25                 // Method validateParameters:()V
      24: return

  public boolean isValid(java.lang.CharSequence, jakarta.validation.ConstraintValidatorContext);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_1
       5: ireturn
       6: aload_0
       7: aload_1
       8: invokevirtual #28                 // Method getBigDecimalValue:(Ljava/lang/CharSequence;)Ljava/math/BigDecimal;
      11: astore_3
      12: aload_3
      13: ifnonnull     18
      16: iconst_0
      17: ireturn
      18: aload_3
      19: invokevirtual #32                 // Method java/math/BigDecimal.precision:()I
      22: aload_3
      23: invokevirtual #37                 // Method java/math/BigDecimal.scale:()I
      26: isub
      27: istore        4
      29: aload_3
      30: invokevirtual #37                 // Method java/math/BigDecimal.scale:()I
      33: ifge          40
      36: iconst_0
      37: goto          44
      40: aload_3
      41: invokevirtual #37                 // Method java/math/BigDecimal.scale:()I
      44: istore        5
      46: aload_0
      47: getfield      #13                 // Field maxIntegerLength:I
      50: iload         4
      52: if_icmplt     68
      55: aload_0
      56: getfield      #22                 // Field maxFractionLength:I
      59: iload         5
      61: if_icmplt     68
      64: iconst_1
      65: goto          69
      68: iconst_0
      69: ireturn

  private java.math.BigDecimal getBigDecimalValue(java.lang.CharSequence);
    Code:
       0: new           #33                 // class java/math/BigDecimal
       3: dup
       4: aload_1
       5: invokeinterface #40,  1           // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
      10: invokespecial #46                 // Method java/math/BigDecimal."<init>":(Ljava/lang/String;)V
      13: astore_2
      14: goto          20
      17: astore_3
      18: aconst_null
      19: areturn
      20: aload_2
      21: areturn
    Exception table:
       from    to  target type
           0    14    17   Class java/lang/NumberFormatException

  private void validateParameters();
    Code:
       0: aload_0
       1: getfield      #13                 // Field maxIntegerLength:I
       4: ifge          16
       7: getstatic     #51                 // Field LOG:Lorg/hibernate/validator/internal/util/logging/Log;
      10: invokeinterface #55,  1           // InterfaceMethod org/hibernate/validator/internal/util/logging/Log.getInvalidLengthForIntegerPartException:()Ljava/lang/IllegalArgumentException;
      15: athrow
      16: aload_0
      17: getfield      #22                 // Field maxFractionLength:I
      20: ifge          32
      23: getstatic     #51                 // Field LOG:Lorg/hibernate/validator/internal/util/logging/Log;
      26: invokeinterface #61,  1           // InterfaceMethod org/hibernate/validator/internal/util/logging/Log.getInvalidLengthForFractionPartException:()Ljava/lang/IllegalArgumentException;
      31: athrow
      32: return

  public boolean isValid(java.lang.Object, jakarta.validation.ConstraintValidatorContext);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #41                 // class java/lang/CharSequence
       5: aload_2
       6: invokevirtual #64                 // Method isValid:(Ljava/lang/CharSequence;Ljakarta/validation/ConstraintValidatorContext;)Z
       9: ireturn

  public void initialize(java.lang.annotation.Annotation);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #8                  // class jakarta/validation/constraints/Digits
       5: invokevirtual #68                 // Method initialize:(Ljakarta/validation/constraints/Digits;)V
       8: return

  static {};
    Code:
       0: invokestatic  #72                 // Method java/lang/invoke/MethodHandles.lookup:()Ljava/lang/invoke/MethodHandles$Lookup;
       3: invokestatic  #78                 // Method org/hibernate/validator/internal/util/logging/LoggerFactory.make:(Ljava/lang/invoke/MethodHandles$Lookup;)Lorg/hibernate/validator/internal/util/logging/Log;
       6: putstatic     #51                 // Field LOG:Lorg/hibernate/validator/internal/util/logging/Log;
       9: return
}
