Compiled from "AbstractMinValidator.java"
public abstract class org.hibernate.validator.internal.constraintvalidators.bv.number.bound.AbstractMinValidator<T> implements jakarta.validation.ConstraintValidator<jakarta.validation.constraints.Min, T> {
  protected long minValue;

  public org.hibernate.validator.internal.constraintvalidators.bv.number.bound.AbstractMinValidator();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void initialize(jakarta.validation.constraints.Min);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #7,  1            // InterfaceMethod jakarta/validation/constraints/Min.value:()J
       7: putfield      #13                 // Field minValue:J
      10: return

  public boolean isValid(T, jakarta.validation.ConstraintValidatorContext);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_1
       5: ireturn
       6: aload_0
       7: aload_1
       8: invokevirtual #19                 // Method compare:(Ljava/lang/Object;)I
      11: iflt          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  protected abstract int compare(T);

  public void initialize(java.lang.annotation.Annotation);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #8                  // class jakarta/validation/constraints/Min
       5: invokevirtual #23                 // Method initialize:(Ljakarta/validation/constraints/Min;)V
       8: return
}
