Compiled from "CachingJPATraversableResolverForSingleValidation.java"
class org.hibernate.validator.internal.engine.resolver.CachingJPATraversableResolverForSingleValidation implements jakarta.validation.TraversableResolver {
  private final jakarta.validation.TraversableResolver delegate;

  private final java.util.HashMap<org.hibernate.validator.internal.engine.resolver.CachingJPATraversableResolverForSingleValidation$TraversableHolder, java.lang.Boolean> traversables;

  public org.hibernate.validator.internal.engine.resolver.CachingJPATraversableResolverForSingleValidation(jakarta.validation.TraversableResolver);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class java/util/HashMap
       8: dup
       9: invokespecial #9                  // Method java/util/HashMap."<init>":()V
      12: putfield      #10                 // Field traversables:Ljava/util/HashMap;
      15: aload_0
      16: aload_1
      17: putfield      #16                 // Field delegate:Ljakarta/validation/TraversableResolver;
      20: return

  public boolean isReachable(java.lang.Object, jakarta.validation.Path$Node, java.lang.Class<?>, jakarta.validation.Path, java.lang.annotation.ElementType);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_1
       5: ireturn
       6: aload_0
       7: getfield      #10                 // Field traversables:Ljava/util/HashMap;
      10: new           #20                 // class org/hibernate/validator/internal/engine/resolver/CachingJPATraversableResolverForSingleValidation$TraversableHolder
      13: dup
      14: aload_1
      15: aload_2
      16: invokespecial #22                 // Method org/hibernate/validator/internal/engine/resolver/CachingJPATraversableResolverForSingleValidation$TraversableHolder."<init>":(Ljava/lang/Object;Ljakarta/validation/Path$Node;)V
      19: aload_0
      20: aload_1
      21: aload_2
      22: aload_3
      23: aload         4
      25: aload         5
      27: invokedynamic #25,  0             // InvokeDynamic #0:apply:(Lorg/hibernate/validator/internal/engine/resolver/CachingJPATraversableResolverForSingleValidation;Ljava/lang/Object;Ljakarta/validation/Path$Node;Ljava/lang/Class;Ljakarta/validation/Path;Ljava/lang/annotation/ElementType;)Ljava/util/function/Function;
      32: invokevirtual #29                 // Method java/util/HashMap.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      35: checkcast     #33                 // class java/lang/Boolean
      38: invokevirtual #35                 // Method java/lang/Boolean.booleanValue:()Z
      41: ireturn

  public boolean isCascadable(java.lang.Object, jakarta.validation.Path$Node, java.lang.Class<?>, jakarta.validation.Path, java.lang.annotation.ElementType);
    Code:
       0: iconst_1
       1: ireturn

  private java.lang.Boolean lambda$isReachable$0(java.lang.Object, jakarta.validation.Path$Node, java.lang.Class, jakarta.validation.Path, java.lang.annotation.ElementType, org.hibernate.validator.internal.engine.resolver.CachingJPATraversableResolverForSingleValidation$TraversableHolder);
    Code:
       0: aload_0
       1: getfield      #16                 // Field delegate:Ljakarta/validation/TraversableResolver;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: invokeinterface #39,  6           // InterfaceMethod jakarta/validation/TraversableResolver.isReachable:(Ljava/lang/Object;Ljakarta/validation/Path$Node;Ljava/lang/Class;Ljakarta/validation/Path;Ljava/lang/annotation/ElementType;)Z
      16: invokestatic  #45                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      19: areturn
}
