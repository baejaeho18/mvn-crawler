Compiled from "SizeValidatorForArraysOfInt.java"
public class org.hibernate.validator.internal.constraintvalidators.bv.size.SizeValidatorForArraysOfInt extends org.hibernate.validator.internal.constraintvalidators.bv.size.SizeValidatorForArraysOfPrimitives implements jakarta.validation.ConstraintValidator<jakarta.validation.constraints.Size, int[]> {
  public org.hibernate.validator.internal.constraintvalidators.bv.size.SizeValidatorForArraysOfInt();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/hibernate/validator/internal/constraintvalidators/bv/size/SizeValidatorForArraysOfPrimitives."<init>":()V
       4: return

  public boolean isValid(int[], jakarta.validation.ConstraintValidatorContext);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_1
       5: ireturn
       6: aload_1
       7: arraylength
       8: aload_0
       9: getfield      #7                  // Field min:I
      12: if_icmplt     28
      15: aload_1
      16: arraylength
      17: aload_0
      18: getfield      #13                 // Field max:I
      21: if_icmpgt     28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public boolean isValid(java.lang.Object, jakarta.validation.ConstraintValidatorContext);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #16                 // class "[I"
       5: aload_2
       6: invokevirtual #18                 // Method isValid:([ILjakarta/validation/ConstraintValidatorContext;)Z
       9: ireturn

  public void initialize(java.lang.annotation.Annotation);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #22                 // class jakarta/validation/constraints/Size
       5: invokespecial #24                 // Method org/hibernate/validator/internal/constraintvalidators/bv/size/SizeValidatorForArraysOfPrimitives.initialize:(Ljakarta/validation/constraints/Size;)V
       8: return
}
