Compiled from "BaseBeanValidationContext.java"
public interface org.hibernate.validator.internal.engine.validationcontext.BaseBeanValidationContext<T> extends org.hibernate.validator.internal.engine.validationcontext.ValidationContext<T> {
  public abstract T getRootBean();

  public abstract java.lang.Class<T> getRootBeanClass();

  public abstract org.hibernate.validator.internal.metadata.aggregated.BeanMetaData<T> getRootBeanMetaData();

  public abstract jakarta.validation.TraversableResolver getTraversableResolver();

  public abstract boolean isBeanAlreadyValidated(java.lang.Object, java.lang.Class<?>, org.hibernate.validator.internal.engine.path.PathImpl);

  public abstract void markCurrentBeanAsProcessed(org.hibernate.validator.internal.engine.valuecontext.ValueContext<?, ?>);

  public abstract boolean hasMetaConstraintBeenProcessed(java.lang.Object, jakarta.validation.Path, org.hibernate.validator.internal.metadata.core.MetaConstraint<?>);

  public abstract void markConstraintProcessed(java.lang.Object, jakarta.validation.Path, org.hibernate.validator.internal.metadata.core.MetaConstraint<?>);

  public default boolean appliesTo(org.hibernate.validator.internal.metadata.core.MetaConstraint<?>);
    Code:
       0: iconst_1
       1: ireturn
}
