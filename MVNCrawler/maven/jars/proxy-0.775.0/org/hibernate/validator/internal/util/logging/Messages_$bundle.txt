Compiled from "Messages_$bundle.java"
public class org.hibernate.validator.internal.util.logging.Messages_$bundle implements org.hibernate.validator.internal.util.logging.Messages,java.io.Serializable {
  private static final long serialVersionUID;

  public static final org.hibernate.validator.internal.util.logging.Messages_$bundle INSTANCE;

  private static final java.util.Locale LOCALE;

  protected org.hibernate.validator.internal.util.logging.Messages_$bundle();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  protected java.lang.Object readResolve();
    Code:
       0: getstatic     #7                  // Field INSTANCE:Lorg/hibernate/validator/internal/util/logging/Messages_$bundle;
       3: areturn

  protected java.util.Locale getLoggingLocale();
    Code:
       0: getstatic     #13                 // Field LOCALE:Ljava/util/Locale;
       3: areturn

  protected java.lang.String mustNotBeNull0$str();
    Code:
       0: ldc           #17                 // String must not be null.
       2: areturn

  public final java.lang.String mustNotBeNull();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method mustNotBeNull0$str:()Ljava/lang/String;
       4: areturn

  protected java.lang.String mustNotBeNull1$str();
    Code:
       0: ldc           #23                 // String %s must not be null.
       2: areturn

  public final java.lang.String mustNotBeNull(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method getLoggingLocale:()Ljava/util/Locale;
       4: aload_0
       5: invokevirtual #29                 // Method mustNotBeNull1$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #2                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #32                 // Method java/lang/String.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: areturn

  protected java.lang.String parameterMustNotBeNull$str();
    Code:
       0: ldc           #38                 // String The parameter \"%s\" must not be null.
       2: areturn

  public final java.lang.String parameterMustNotBeNull(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method getLoggingLocale:()Ljava/util/Locale;
       4: aload_0
       5: invokevirtual #40                 // Method parameterMustNotBeNull$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #2                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #32                 // Method java/lang/String.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: areturn

  protected java.lang.String parameterMustNotBeEmpty$str();
    Code:
       0: ldc           #43                 // String The parameter \"%s\" must not be empty.
       2: areturn

  public final java.lang.String parameterMustNotBeEmpty(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method getLoggingLocale:()Ljava/util/Locale;
       4: aload_0
       5: invokevirtual #45                 // Method parameterMustNotBeEmpty$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #2                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #32                 // Method java/lang/String.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: areturn

  protected java.lang.String parameterShouldBeGreaterThanOrEqualTo$str();
    Code:
       0: ldc           #48                 // String The parameter \"%s\" should be greater than or equal to %d.
       2: areturn

  public final java.lang.String parameterShouldBeGreaterThanOrEqualTo(java.lang.String, int);
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method getLoggingLocale:()Ljava/util/Locale;
       4: aload_0
       5: invokevirtual #50                 // Method parameterShouldBeGreaterThanOrEqualTo$str:()Ljava/lang/String;
       8: iconst_2
       9: anewarray     #2                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: dup
      17: iconst_1
      18: iload_2
      19: invokestatic  #53                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      22: aastore
      23: invokestatic  #32                 // Method java/lang/String.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      26: areturn

  protected java.lang.String parameterShouldBeLessThanOrEqualTo$str();
    Code:
       0: ldc           #59                 // String The parameter \"%s\" should be less than or equal to %d.
       2: areturn

  public final java.lang.String parameterShouldBeLessThanOrEqualTo(java.lang.String, int);
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method getLoggingLocale:()Ljava/util/Locale;
       4: aload_0
       5: invokevirtual #61                 // Method parameterShouldBeLessThanOrEqualTo$str:()Ljava/lang/String;
       8: iconst_2
       9: anewarray     #2                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: dup
      17: iconst_1
      18: iload_2
      19: invokestatic  #53                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      22: aastore
      23: invokestatic  #32                 // Method java/lang/String.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      26: areturn

  protected java.lang.String beanTypeCannotBeNull$str();
    Code:
       0: ldc           #64                 // String The bean type cannot be null.
       2: areturn

  public final java.lang.String beanTypeCannotBeNull();
    Code:
       0: aload_0
       1: invokevirtual #66                 // Method beanTypeCannotBeNull$str:()Ljava/lang/String;
       4: areturn

  protected java.lang.String propertyPathCannotBeNull$str();
    Code:
       0: ldc           #69                 // String null is not allowed as property path.
       2: areturn

  public final java.lang.String propertyPathCannotBeNull();
    Code:
       0: aload_0
       1: invokevirtual #71                 // Method propertyPathCannotBeNull$str:()Ljava/lang/String;
       4: areturn

  protected java.lang.String propertyNameMustNotBeEmpty$str();
    Code:
       0: ldc           #74                 // String The property name must not be empty.
       2: areturn

  public final java.lang.String propertyNameMustNotBeEmpty();
    Code:
       0: aload_0
       1: invokevirtual #76                 // Method propertyNameMustNotBeEmpty$str:()Ljava/lang/String;
       4: areturn

  protected java.lang.String groupMustNotBeNull$str();
    Code:
       0: ldc           #79                 // String null passed as group name.
       2: areturn

  public final java.lang.String groupMustNotBeNull();
    Code:
       0: aload_0
       1: invokevirtual #81                 // Method groupMustNotBeNull$str:()Ljava/lang/String;
       4: areturn

  protected java.lang.String beanTypeMustNotBeNull$str();
    Code:
       0: ldc           #84                 // String The bean type must not be null when creating a constraint mapping.
       2: areturn

  public final java.lang.String beanTypeMustNotBeNull();
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method beanTypeMustNotBeNull$str:()Ljava/lang/String;
       4: areturn

  protected java.lang.String methodNameMustNotBeNull$str();
    Code:
       0: ldc           #89                 // String The method name must not be null.
       2: areturn

  public final java.lang.String methodNameMustNotBeNull();
    Code:
       0: aload_0
       1: invokevirtual #91                 // Method methodNameMustNotBeNull$str:()Ljava/lang/String;
       4: areturn

  protected java.lang.String validatedObjectMustNotBeNull$str();
    Code:
       0: ldc           #94                 // String The object to be validated must not be null.
       2: areturn

  public final java.lang.String validatedObjectMustNotBeNull();
    Code:
       0: aload_0
       1: invokevirtual #96                 // Method validatedObjectMustNotBeNull$str:()Ljava/lang/String;
       4: areturn

  protected java.lang.String validatedMethodMustNotBeNull$str();
    Code:
       0: ldc           #99                 // String The method to be validated must not be null.
       2: areturn

  public final java.lang.String validatedMethodMustNotBeNull();
    Code:
       0: aload_0
       1: invokevirtual #101                // Method validatedMethodMustNotBeNull$str:()Ljava/lang/String;
       4: areturn

  protected java.lang.String classCannotBeNull$str();
    Code:
       0: ldc           #104                // String The class cannot be null.
       2: areturn

  public final java.lang.String classCannotBeNull();
    Code:
       0: aload_0
       1: invokevirtual #106                // Method classCannotBeNull$str:()Ljava/lang/String;
       4: areturn

  protected java.lang.String classIsNull$str();
    Code:
       0: ldc           #109                // String Class is null.
       2: areturn

  public final java.lang.String classIsNull();
    Code:
       0: aload_0
       1: invokevirtual #111                // Method classIsNull$str:()Ljava/lang/String;
       4: areturn

  protected java.lang.String validatedConstructorMustNotBeNull$str();
    Code:
       0: ldc           #114                // String The constructor to be validated must not be null.
       2: areturn

  public final java.lang.String validatedConstructorMustNotBeNull();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method validatedConstructorMustNotBeNull$str:()Ljava/lang/String;
       4: areturn

  protected java.lang.String validatedParameterArrayMustNotBeNull$str();
    Code:
       0: ldc           #119                // String The method parameter array cannot not be null.
       2: areturn

  public final java.lang.String validatedParameterArrayMustNotBeNull();
    Code:
       0: aload_0
       1: invokevirtual #121                // Method validatedParameterArrayMustNotBeNull$str:()Ljava/lang/String;
       4: areturn

  protected java.lang.String validatedConstructorCreatedInstanceMustNotBeNull$str();
    Code:
       0: ldc           #124                // String The created instance must not be null.
       2: areturn

  public final java.lang.String validatedConstructorCreatedInstanceMustNotBeNull();
    Code:
       0: aload_0
       1: invokevirtual #126                // Method validatedConstructorCreatedInstanceMustNotBeNull$str:()Ljava/lang/String;
       4: areturn

  protected java.lang.String inputStreamCannotBeNull$str();
    Code:
       0: ldc           #129                // String The input stream for #addMapping() cannot be null.
       2: areturn

  public final java.lang.String inputStreamCannotBeNull();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method getLoggingLocale:()Ljava/util/Locale;
       4: aload_0
       5: invokevirtual #131                // Method inputStreamCannotBeNull$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #2                  // class java/lang/Object
      12: invokestatic  #32                 // Method java/lang/String.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: areturn

  protected java.lang.String constraintOnConstructorOfNonStaticInnerClass$str();
    Code:
       0: ldc           #134                // String Constraints on the parameters of constructors of non-static inner classes are not supported if those parameters have a generic type due to JDK bug JDK-5087240.
       2: areturn

  public final java.lang.String constraintOnConstructorOfNonStaticInnerClass();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method getLoggingLocale:()Ljava/util/Locale;
       4: aload_0
       5: invokevirtual #136                // Method constraintOnConstructorOfNonStaticInnerClass$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #2                  // class java/lang/Object
      12: invokestatic  #32                 // Method java/lang/String.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: areturn

  protected java.lang.String parameterizedTypesWithMoreThanOneTypeArgument$str();
    Code:
       0: ldc           #139                // String Custom parameterized types with more than one type argument are not supported and will not be checked for type use constraints.
       2: areturn

  public final java.lang.String parameterizedTypesWithMoreThanOneTypeArgument();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method getLoggingLocale:()Ljava/util/Locale;
       4: aload_0
       5: invokevirtual #141                // Method parameterizedTypesWithMoreThanOneTypeArgument$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #2                  // class java/lang/Object
      12: invokestatic  #32                 // Method java/lang/String.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: areturn

  protected java.lang.String unableToUseResourceBundleAggregation$str();
    Code:
       0: ldc           #144                // String Hibernate Validator cannot instantiate AggregateResourceBundle.CONTROL. This can happen most notably in a Google App Engine environment or when running Hibernate Validator as Java 9 named module. A PlatformResourceBundleLocator without bundle aggregation was created. This only affects you in case you are using multiple ConstraintDefinitionContributor JARs. ConstraintDefinitionContributors are a Hibernate Validator specific feature. All Jakarta Bean Validation features work as expected. See also https://hibernate.atlassian.net/browse/HV-1023.
       2: areturn

  public final java.lang.String unableToUseResourceBundleAggregation();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method getLoggingLocale:()Ljava/util/Locale;
       4: aload_0
       5: invokevirtual #146                // Method unableToUseResourceBundleAggregation$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #2                  // class java/lang/Object
      12: invokestatic  #32                 // Method java/lang/String.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: areturn

  protected java.lang.String annotationTypeMustNotBeNull$str();
    Code:
       0: ldc           #149                // String The annotation type must not be null when creating a constraint definition.
       2: areturn

  public final java.lang.String annotationTypeMustNotBeNull();
    Code:
       0: aload_0
       1: invokevirtual #151                // Method annotationTypeMustNotBeNull$str:()Ljava/lang/String;
       4: areturn

  protected java.lang.String annotationTypeMustBeAnnotatedWithConstraint$str();
    Code:
       0: ldc           #154                // String The annotation type must be annotated with @jakarta.validation.Constraint when creating a constraint definition.
       2: areturn

  public final java.lang.String annotationTypeMustBeAnnotatedWithConstraint();
    Code:
       0: aload_0
       1: invokevirtual #156                // Method annotationTypeMustBeAnnotatedWithConstraint$str:()Ljava/lang/String;
       4: areturn

  static {};
    Code:
       0: new           #8                  // class org/hibernate/validator/internal/util/logging/Messages_$bundle
       3: dup
       4: invokespecial #159                // Method "<init>":()V
       7: putstatic     #7                  // Field INSTANCE:Lorg/hibernate/validator/internal/util/logging/Messages_$bundle;
      10: getstatic     #160                // Field java/util/Locale.ROOT:Ljava/util/Locale;
      13: putstatic     #13                 // Field LOCALE:Ljava/util/Locale;
      16: return
}
