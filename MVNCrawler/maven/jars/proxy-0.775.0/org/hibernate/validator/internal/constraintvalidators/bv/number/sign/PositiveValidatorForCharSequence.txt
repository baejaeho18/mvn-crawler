Compiled from "PositiveValidatorForCharSequence.java"
public class org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveValidatorForCharSequence implements jakarta.validation.ConstraintValidator<jakarta.validation.constraints.Positive, java.lang.CharSequence> {
  public org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveValidatorForCharSequence();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public boolean isValid(java.lang.CharSequence, jakarta.validation.ConstraintValidatorContext);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_1
       5: ireturn
       6: new           #7                  // class java/math/BigDecimal
       9: dup
      10: aload_1
      11: invokeinterface #9,  1            // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
      16: invokespecial #15                 // Method java/math/BigDecimal."<init>":(Ljava/lang/String;)V
      19: invokestatic  #18                 // Method org/hibernate/validator/internal/constraintvalidators/bv/number/sign/NumberSignHelper.signum:(Ljava/math/BigDecimal;)I
      22: ifle          29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn
      31: astore_3
      32: iconst_0
      33: ireturn
    Exception table:
       from    to  target type
           6    30    31   Class java/lang/NumberFormatException

  public boolean isValid(java.lang.Object, jakarta.validation.ConstraintValidatorContext);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #10                 // class java/lang/CharSequence
       5: aload_2
       6: invokevirtual #26                 // Method isValid:(Ljava/lang/CharSequence;Ljakarta/validation/ConstraintValidatorContext;)Z
       9: ireturn
}
