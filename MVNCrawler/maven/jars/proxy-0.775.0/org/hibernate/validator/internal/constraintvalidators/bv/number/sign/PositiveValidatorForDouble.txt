Compiled from "PositiveValidatorForDouble.java"
public class org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveValidatorForDouble implements jakarta.validation.ConstraintValidator<jakarta.validation.constraints.Positive, java.lang.Double> {
  public org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveValidatorForDouble();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public boolean isValid(java.lang.Double, jakarta.validation.ConstraintValidatorContext);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_1
       5: ireturn
       6: aload_1
       7: getstatic     #7                  // Field org/hibernate/validator/internal/constraintvalidators/bv/number/InfinityNumberComparatorHelper.LESS_THAN:Ljava/util/OptionalInt;
      10: invokestatic  #13                 // Method org/hibernate/validator/internal/constraintvalidators/bv/number/sign/NumberSignHelper.signum:(Ljava/lang/Double;Ljava/util/OptionalInt;)I
      13: ifle          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public boolean isValid(java.lang.Object, jakarta.validation.ConstraintValidatorContext);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #19                 // class java/lang/Double
       5: aload_2
       6: invokevirtual #21                 // Method isValid:(Ljava/lang/Double;Ljakarta/validation/ConstraintValidatorContext;)Z
       9: ireturn
}
