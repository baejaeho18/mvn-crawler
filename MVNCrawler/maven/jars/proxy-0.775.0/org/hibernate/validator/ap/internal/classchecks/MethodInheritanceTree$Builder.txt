Compiled from "MethodInheritanceTree.java"
public class org.hibernate.validator.ap.internal.classchecks.MethodInheritanceTree$Builder {
  private final org.hibernate.validator.ap.internal.classchecks.MethodInheritanceTree$MethodNode rootMethodNode;

  private final java.util.Map<javax.lang.model.element.ExecutableElement, org.hibernate.validator.ap.internal.classchecks.MethodInheritanceTree$MethodNode> nodeMapping;

  public org.hibernate.validator.ap.internal.classchecks.MethodInheritanceTree$Builder(javax.lang.model.element.ExecutableElement);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #7                  // Method org/hibernate/validator/ap/internal/util/CollectionHelper.newHashMap:()Ljava/util/HashMap;
       8: putfield      #13                 // Field nodeMapping:Ljava/util/Map;
      11: aload_0
      12: new           #19                 // class org/hibernate/validator/ap/internal/classchecks/MethodInheritanceTree$MethodNode
      15: dup
      16: aload_1
      17: invokespecial #21                 // Method org/hibernate/validator/ap/internal/classchecks/MethodInheritanceTree$MethodNode."<init>":(Ljavax/lang/model/element/ExecutableElement;)V
      20: putfield      #24                 // Field rootMethodNode:Lorg/hibernate/validator/ap/internal/classchecks/MethodInheritanceTree$MethodNode;
      23: aload_0
      24: getfield      #13                 // Field nodeMapping:Ljava/util/Map;
      27: aload_1
      28: aload_0
      29: getfield      #24                 // Field rootMethodNode:Lorg/hibernate/validator/ap/internal/classchecks/MethodInheritanceTree$MethodNode;
      32: invokeinterface #28,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: return

  public void addOverriddenMethod(javax.lang.model.element.ExecutableElement, javax.lang.model.element.ExecutableElement);
    Code:
       0: new           #19                 // class org/hibernate/validator/ap/internal/classchecks/MethodInheritanceTree$MethodNode
       3: dup
       4: aload_2
       5: invokespecial #21                 // Method org/hibernate/validator/ap/internal/classchecks/MethodInheritanceTree$MethodNode."<init>":(Ljavax/lang/model/element/ExecutableElement;)V
       8: astore_3
       9: aload_0
      10: getfield      #13                 // Field nodeMapping:Ljava/util/Map;
      13: aload_1
      14: invokeinterface #34,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #19                 // class org/hibernate/validator/ap/internal/classchecks/MethodInheritanceTree$MethodNode
      22: aload_3
      23: invokevirtual #38                 // Method org/hibernate/validator/ap/internal/classchecks/MethodInheritanceTree$MethodNode.addOverriddenMethodNode:(Lorg/hibernate/validator/ap/internal/classchecks/MethodInheritanceTree$MethodNode;)V
      26: aload_0
      27: getfield      #13                 // Field nodeMapping:Ljava/util/Map;
      30: aload_2
      31: aload_3
      32: invokeinterface #28,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: return

  public org.hibernate.validator.ap.internal.classchecks.MethodInheritanceTree build();
    Code:
       0: new           #42                 // class org/hibernate/validator/ap/internal/classchecks/MethodInheritanceTree
       3: dup
       4: aload_0
       5: getfield      #24                 // Field rootMethodNode:Lorg/hibernate/validator/ap/internal/classchecks/MethodInheritanceTree$MethodNode;
       8: aload_0
       9: getfield      #13                 // Field nodeMapping:Ljava/util/Map;
      12: invokespecial #44                 // Method org/hibernate/validator/ap/internal/classchecks/MethodInheritanceTree."<init>":(Lorg/hibernate/validator/ap/internal/classchecks/MethodInheritanceTree$MethodNode;Ljava/util/Map;)V
      15: areturn
}
