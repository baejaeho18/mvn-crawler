Compiled from "MessagePack.java"
public class org.msgpack.core.MessagePack$UnpackerConfig implements java.lang.Cloneable {
  private boolean allowReadingStringAsBinary;

  private boolean allowReadingBinaryAsString;

  private java.nio.charset.CodingErrorAction actionOnMalformedString;

  private java.nio.charset.CodingErrorAction actionOnUnmappableString;

  private int stringSizeLimit;

  private int bufferSize;

  private int stringDecoderBufferSize;

  public org.msgpack.core.MessagePack$UnpackerConfig();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field allowReadingStringAsBinary:Z
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field allowReadingBinaryAsString:Z
      14: aload_0
      15: getstatic     #4                  // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;
      18: putfield      #5                  // Field actionOnMalformedString:Ljava/nio/charset/CodingErrorAction;
      21: aload_0
      22: getstatic     #4                  // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;
      25: putfield      #6                  // Field actionOnUnmappableString:Ljava/nio/charset/CodingErrorAction;
      28: aload_0
      29: ldc           #8                  // int 2147483647
      31: putfield      #9                  // Field stringSizeLimit:I
      34: aload_0
      35: sipush        8192
      38: putfield      #10                 // Field bufferSize:I
      41: aload_0
      42: sipush        8192
      45: putfield      #11                 // Field stringDecoderBufferSize:I
      48: return

  private org.msgpack.core.MessagePack$UnpackerConfig(org.msgpack.core.MessagePack$UnpackerConfig);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field allowReadingStringAsBinary:Z
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field allowReadingBinaryAsString:Z
      14: aload_0
      15: getstatic     #4                  // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;
      18: putfield      #5                  // Field actionOnMalformedString:Ljava/nio/charset/CodingErrorAction;
      21: aload_0
      22: getstatic     #4                  // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;
      25: putfield      #6                  // Field actionOnUnmappableString:Ljava/nio/charset/CodingErrorAction;
      28: aload_0
      29: ldc           #8                  // int 2147483647
      31: putfield      #9                  // Field stringSizeLimit:I
      34: aload_0
      35: sipush        8192
      38: putfield      #10                 // Field bufferSize:I
      41: aload_0
      42: sipush        8192
      45: putfield      #11                 // Field stringDecoderBufferSize:I
      48: aload_0
      49: aload_1
      50: getfield      #2                  // Field allowReadingStringAsBinary:Z
      53: putfield      #2                  // Field allowReadingStringAsBinary:Z
      56: aload_0
      57: aload_1
      58: getfield      #3                  // Field allowReadingBinaryAsString:Z
      61: putfield      #3                  // Field allowReadingBinaryAsString:Z
      64: aload_0
      65: aload_1
      66: getfield      #5                  // Field actionOnMalformedString:Ljava/nio/charset/CodingErrorAction;
      69: putfield      #5                  // Field actionOnMalformedString:Ljava/nio/charset/CodingErrorAction;
      72: aload_0
      73: aload_1
      74: getfield      #6                  // Field actionOnUnmappableString:Ljava/nio/charset/CodingErrorAction;
      77: putfield      #6                  // Field actionOnUnmappableString:Ljava/nio/charset/CodingErrorAction;
      80: aload_0
      81: aload_1
      82: getfield      #9                  // Field stringSizeLimit:I
      85: putfield      #9                  // Field stringSizeLimit:I
      88: aload_0
      89: aload_1
      90: getfield      #10                 // Field bufferSize:I
      93: putfield      #10                 // Field bufferSize:I
      96: return

  public org.msgpack.core.MessagePack$UnpackerConfig clone();
    Code:
       0: new           #12                 // class org/msgpack/core/MessagePack$UnpackerConfig
       3: dup
       4: aload_0
       5: invokespecial #13                 // Method "<init>":(Lorg/msgpack/core/MessagePack$UnpackerConfig;)V
       8: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field allowReadingStringAsBinary:Z
       4: ifeq          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: istore_1
      13: bipush        31
      15: iload_1
      16: imul
      17: aload_0
      18: getfield      #3                  // Field allowReadingBinaryAsString:Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: iadd
      30: istore_1
      31: bipush        31
      33: iload_1
      34: imul
      35: aload_0
      36: getfield      #5                  // Field actionOnMalformedString:Ljava/nio/charset/CodingErrorAction;
      39: ifnull        52
      42: aload_0
      43: getfield      #5                  // Field actionOnMalformedString:Ljava/nio/charset/CodingErrorAction;
      46: invokevirtual #14                 // Method java/lang/Object.hashCode:()I
      49: goto          53
      52: iconst_0
      53: iadd
      54: istore_1
      55: bipush        31
      57: iload_1
      58: imul
      59: aload_0
      60: getfield      #6                  // Field actionOnUnmappableString:Ljava/nio/charset/CodingErrorAction;
      63: ifnull        76
      66: aload_0
      67: getfield      #6                  // Field actionOnUnmappableString:Ljava/nio/charset/CodingErrorAction;
      70: invokevirtual #14                 // Method java/lang/Object.hashCode:()I
      73: goto          77
      76: iconst_0
      77: iadd
      78: istore_1
      79: bipush        31
      81: iload_1
      82: imul
      83: aload_0
      84: getfield      #9                  // Field stringSizeLimit:I
      87: iadd
      88: istore_1
      89: bipush        31
      91: iload_1
      92: imul
      93: aload_0
      94: getfield      #10                 // Field bufferSize:I
      97: iadd
      98: istore_1
      99: bipush        31
     101: iload_1
     102: imul
     103: aload_0
     104: getfield      #11                 // Field stringDecoderBufferSize:I
     107: iadd
     108: istore_1
     109: iload_1
     110: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #12                 // class org/msgpack/core/MessagePack$UnpackerConfig
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #12                 // class org/msgpack/core/MessagePack$UnpackerConfig
      13: astore_2
      14: aload_0
      15: getfield      #2                  // Field allowReadingStringAsBinary:Z
      18: aload_2
      19: getfield      #2                  // Field allowReadingStringAsBinary:Z
      22: if_icmpne     95
      25: aload_0
      26: getfield      #3                  // Field allowReadingBinaryAsString:Z
      29: aload_2
      30: getfield      #3                  // Field allowReadingBinaryAsString:Z
      33: if_icmpne     95
      36: aload_0
      37: getfield      #5                  // Field actionOnMalformedString:Ljava/nio/charset/CodingErrorAction;
      40: aload_2
      41: getfield      #5                  // Field actionOnMalformedString:Ljava/nio/charset/CodingErrorAction;
      44: if_acmpne     95
      47: aload_0
      48: getfield      #6                  // Field actionOnUnmappableString:Ljava/nio/charset/CodingErrorAction;
      51: aload_2
      52: getfield      #6                  // Field actionOnUnmappableString:Ljava/nio/charset/CodingErrorAction;
      55: if_acmpne     95
      58: aload_0
      59: getfield      #9                  // Field stringSizeLimit:I
      62: aload_2
      63: getfield      #9                  // Field stringSizeLimit:I
      66: if_icmpne     95
      69: aload_0
      70: getfield      #11                 // Field stringDecoderBufferSize:I
      73: aload_2
      74: getfield      #11                 // Field stringDecoderBufferSize:I
      77: if_icmpne     95
      80: aload_0
      81: getfield      #10                 // Field bufferSize:I
      84: aload_2
      85: getfield      #10                 // Field bufferSize:I
      88: if_icmpne     95
      91: iconst_1
      92: goto          96
      95: iconst_0
      96: ireturn

  public org.msgpack.core.MessageUnpacker newUnpacker(org.msgpack.core.buffer.MessageBufferInput);
    Code:
       0: new           #15                 // class org/msgpack/core/MessageUnpacker
       3: dup
       4: aload_1
       5: aload_0
       6: invokespecial #16                 // Method org/msgpack/core/MessageUnpacker."<init>":(Lorg/msgpack/core/buffer/MessageBufferInput;Lorg/msgpack/core/MessagePack$UnpackerConfig;)V
       9: areturn

  public org.msgpack.core.MessageUnpacker newUnpacker(java.io.InputStream);
    Code:
       0: aload_0
       1: new           #17                 // class org/msgpack/core/buffer/InputStreamBufferInput
       4: dup
       5: aload_1
       6: aload_0
       7: getfield      #10                 // Field bufferSize:I
      10: invokespecial #18                 // Method org/msgpack/core/buffer/InputStreamBufferInput."<init>":(Ljava/io/InputStream;I)V
      13: invokevirtual #19                 // Method newUnpacker:(Lorg/msgpack/core/buffer/MessageBufferInput;)Lorg/msgpack/core/MessageUnpacker;
      16: areturn

  public org.msgpack.core.MessageUnpacker newUnpacker(java.nio.channels.ReadableByteChannel);
    Code:
       0: aload_0
       1: new           #20                 // class org/msgpack/core/buffer/ChannelBufferInput
       4: dup
       5: aload_1
       6: aload_0
       7: getfield      #10                 // Field bufferSize:I
      10: invokespecial #21                 // Method org/msgpack/core/buffer/ChannelBufferInput."<init>":(Ljava/nio/channels/ReadableByteChannel;I)V
      13: invokevirtual #19                 // Method newUnpacker:(Lorg/msgpack/core/buffer/MessageBufferInput;)Lorg/msgpack/core/MessageUnpacker;
      16: areturn

  public org.msgpack.core.MessageUnpacker newUnpacker(byte[]);
    Code:
       0: aload_0
       1: new           #22                 // class org/msgpack/core/buffer/ArrayBufferInput
       4: dup
       5: aload_1
       6: invokespecial #23                 // Method org/msgpack/core/buffer/ArrayBufferInput."<init>":([B)V
       9: invokevirtual #19                 // Method newUnpacker:(Lorg/msgpack/core/buffer/MessageBufferInput;)Lorg/msgpack/core/MessageUnpacker;
      12: areturn

  public org.msgpack.core.MessageUnpacker newUnpacker(byte[], int, int);
    Code:
       0: aload_0
       1: new           #22                 // class org/msgpack/core/buffer/ArrayBufferInput
       4: dup
       5: aload_1
       6: iload_2
       7: iload_3
       8: invokespecial #24                 // Method org/msgpack/core/buffer/ArrayBufferInput."<init>":([BII)V
      11: invokevirtual #19                 // Method newUnpacker:(Lorg/msgpack/core/buffer/MessageBufferInput;)Lorg/msgpack/core/MessageUnpacker;
      14: areturn

  public org.msgpack.core.MessageUnpacker newUnpacker(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: new           #25                 // class org/msgpack/core/buffer/ByteBufferInput
       4: dup
       5: aload_1
       6: invokespecial #26                 // Method org/msgpack/core/buffer/ByteBufferInput."<init>":(Ljava/nio/ByteBuffer;)V
       9: invokevirtual #19                 // Method newUnpacker:(Lorg/msgpack/core/buffer/MessageBufferInput;)Lorg/msgpack/core/MessageUnpacker;
      12: areturn

  public org.msgpack.core.MessagePack$UnpackerConfig withAllowReadingStringAsBinary(boolean);
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method clone:()Lorg/msgpack/core/MessagePack$UnpackerConfig;
       4: astore_2
       5: aload_2
       6: iload_1
       7: putfield      #2                  // Field allowReadingStringAsBinary:Z
      10: aload_2
      11: areturn

  public boolean getAllowReadingStringAsBinary();
    Code:
       0: aload_0
       1: getfield      #2                  // Field allowReadingStringAsBinary:Z
       4: ireturn

  public org.msgpack.core.MessagePack$UnpackerConfig withAllowReadingBinaryAsString(boolean);
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method clone:()Lorg/msgpack/core/MessagePack$UnpackerConfig;
       4: astore_2
       5: aload_2
       6: iload_1
       7: putfield      #3                  // Field allowReadingBinaryAsString:Z
      10: aload_2
      11: areturn

  public boolean getAllowReadingBinaryAsString();
    Code:
       0: aload_0
       1: getfield      #3                  // Field allowReadingBinaryAsString:Z
       4: ireturn

  public org.msgpack.core.MessagePack$UnpackerConfig withActionOnMalformedString(java.nio.charset.CodingErrorAction);
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method clone:()Lorg/msgpack/core/MessagePack$UnpackerConfig;
       4: astore_2
       5: aload_2
       6: aload_1
       7: putfield      #5                  // Field actionOnMalformedString:Ljava/nio/charset/CodingErrorAction;
      10: aload_2
      11: areturn

  public java.nio.charset.CodingErrorAction getActionOnMalformedString();
    Code:
       0: aload_0
       1: getfield      #5                  // Field actionOnMalformedString:Ljava/nio/charset/CodingErrorAction;
       4: areturn

  public org.msgpack.core.MessagePack$UnpackerConfig withActionOnUnmappableString(java.nio.charset.CodingErrorAction);
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method clone:()Lorg/msgpack/core/MessagePack$UnpackerConfig;
       4: astore_2
       5: aload_2
       6: aload_1
       7: putfield      #6                  // Field actionOnUnmappableString:Ljava/nio/charset/CodingErrorAction;
      10: aload_2
      11: areturn

  public java.nio.charset.CodingErrorAction getActionOnUnmappableString();
    Code:
       0: aload_0
       1: getfield      #6                  // Field actionOnUnmappableString:Ljava/nio/charset/CodingErrorAction;
       4: areturn

  public org.msgpack.core.MessagePack$UnpackerConfig withStringSizeLimit(int);
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method clone:()Lorg/msgpack/core/MessagePack$UnpackerConfig;
       4: astore_2
       5: aload_2
       6: iload_1
       7: putfield      #9                  // Field stringSizeLimit:I
      10: aload_2
      11: areturn

  public int getStringSizeLimit();
    Code:
       0: aload_0
       1: getfield      #9                  // Field stringSizeLimit:I
       4: ireturn

  public org.msgpack.core.MessagePack$UnpackerConfig withStringDecoderBufferSize(int);
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method clone:()Lorg/msgpack/core/MessagePack$UnpackerConfig;
       4: astore_2
       5: aload_2
       6: iload_1
       7: putfield      #11                 // Field stringDecoderBufferSize:I
      10: aload_2
      11: areturn

  public int getStringDecoderBufferSize();
    Code:
       0: aload_0
       1: getfield      #11                 // Field stringDecoderBufferSize:I
       4: ireturn

  public org.msgpack.core.MessagePack$UnpackerConfig withBufferSize(int);
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method clone:()Lorg/msgpack/core/MessagePack$UnpackerConfig;
       4: astore_2
       5: aload_2
       6: iload_1
       7: putfield      #10                 // Field bufferSize:I
      10: aload_2
      11: areturn

  public int getBufferSize();
    Code:
       0: aload_0
       1: getfield      #10                 // Field bufferSize:I
       4: ireturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method clone:()Lorg/msgpack/core/MessagePack$UnpackerConfig;
       4: areturn
}
