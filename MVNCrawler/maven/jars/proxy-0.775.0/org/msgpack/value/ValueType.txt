Compiled from "ValueType.java"
public final class org.msgpack.value.ValueType extends java.lang.Enum<org.msgpack.value.ValueType> {
  public static final org.msgpack.value.ValueType NIL;

  public static final org.msgpack.value.ValueType BOOLEAN;

  public static final org.msgpack.value.ValueType INTEGER;

  public static final org.msgpack.value.ValueType FLOAT;

  public static final org.msgpack.value.ValueType STRING;

  public static final org.msgpack.value.ValueType BINARY;

  public static final org.msgpack.value.ValueType ARRAY;

  public static final org.msgpack.value.ValueType MAP;

  public static final org.msgpack.value.ValueType EXTENSION;

  private final boolean numberType;

  private final boolean rawType;

  private static final org.msgpack.value.ValueType[] $VALUES;

  public static org.msgpack.value.ValueType[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lorg/msgpack/value/ValueType;
       3: invokevirtual #2                  // Method "[Lorg/msgpack/value/ValueType;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lorg/msgpack/value/ValueType;"
       9: areturn

  public static org.msgpack.value.ValueType valueOf(java.lang.String);
    Code:
       0: ldc           #4                  // class org/msgpack/value/ValueType
       2: aload_0
       3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #4                  // class org/msgpack/value/ValueType
       9: areturn

  private org.msgpack.value.ValueType(boolean, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: aload_0
       7: iload_3
       8: putfield      #7                  // Field numberType:Z
      11: aload_0
      12: iload         4
      14: putfield      #8                  // Field rawType:Z
      17: return

  public boolean isNilType();
    Code:
       0: aload_0
       1: getstatic     #9                  // Field NIL:Lorg/msgpack/value/ValueType;
       4: if_acmpne     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean isBooleanType();
    Code:
       0: aload_0
       1: getstatic     #10                 // Field BOOLEAN:Lorg/msgpack/value/ValueType;
       4: if_acmpne     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean isNumberType();
    Code:
       0: aload_0
       1: getfield      #7                  // Field numberType:Z
       4: ireturn

  public boolean isIntegerType();
    Code:
       0: aload_0
       1: getstatic     #11                 // Field INTEGER:Lorg/msgpack/value/ValueType;
       4: if_acmpne     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean isFloatType();
    Code:
       0: aload_0
       1: getstatic     #12                 // Field FLOAT:Lorg/msgpack/value/ValueType;
       4: if_acmpne     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean isRawType();
    Code:
       0: aload_0
       1: getfield      #8                  // Field rawType:Z
       4: ireturn

  public boolean isStringType();
    Code:
       0: aload_0
       1: getstatic     #13                 // Field STRING:Lorg/msgpack/value/ValueType;
       4: if_acmpne     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean isBinaryType();
    Code:
       0: aload_0
       1: getstatic     #14                 // Field BINARY:Lorg/msgpack/value/ValueType;
       4: if_acmpne     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean isArrayType();
    Code:
       0: aload_0
       1: getstatic     #15                 // Field ARRAY:Lorg/msgpack/value/ValueType;
       4: if_acmpne     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean isMapType();
    Code:
       0: aload_0
       1: getstatic     #16                 // Field MAP:Lorg/msgpack/value/ValueType;
       4: if_acmpne     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean isExtensionType();
    Code:
       0: aload_0
       1: getstatic     #17                 // Field EXTENSION:Lorg/msgpack/value/ValueType;
       4: if_acmpne     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  static {};
    Code:
       0: new           #4                  // class org/msgpack/value/ValueType
       3: dup
       4: ldc           #18                 // String NIL
       6: iconst_0
       7: iconst_0
       8: iconst_0
       9: invokespecial #19                 // Method "<init>":(Ljava/lang/String;IZZ)V
      12: putstatic     #9                  // Field NIL:Lorg/msgpack/value/ValueType;
      15: new           #4                  // class org/msgpack/value/ValueType
      18: dup
      19: ldc           #20                 // String BOOLEAN
      21: iconst_1
      22: iconst_0
      23: iconst_0
      24: invokespecial #19                 // Method "<init>":(Ljava/lang/String;IZZ)V
      27: putstatic     #10                 // Field BOOLEAN:Lorg/msgpack/value/ValueType;
      30: new           #4                  // class org/msgpack/value/ValueType
      33: dup
      34: ldc           #21                 // String INTEGER
      36: iconst_2
      37: iconst_1
      38: iconst_0
      39: invokespecial #19                 // Method "<init>":(Ljava/lang/String;IZZ)V
      42: putstatic     #11                 // Field INTEGER:Lorg/msgpack/value/ValueType;
      45: new           #4                  // class org/msgpack/value/ValueType
      48: dup
      49: ldc           #22                 // String FLOAT
      51: iconst_3
      52: iconst_1
      53: iconst_0
      54: invokespecial #19                 // Method "<init>":(Ljava/lang/String;IZZ)V
      57: putstatic     #12                 // Field FLOAT:Lorg/msgpack/value/ValueType;
      60: new           #4                  // class org/msgpack/value/ValueType
      63: dup
      64: ldc           #23                 // String STRING
      66: iconst_4
      67: iconst_0
      68: iconst_1
      69: invokespecial #19                 // Method "<init>":(Ljava/lang/String;IZZ)V
      72: putstatic     #13                 // Field STRING:Lorg/msgpack/value/ValueType;
      75: new           #4                  // class org/msgpack/value/ValueType
      78: dup
      79: ldc           #24                 // String BINARY
      81: iconst_5
      82: iconst_0
      83: iconst_1
      84: invokespecial #19                 // Method "<init>":(Ljava/lang/String;IZZ)V
      87: putstatic     #14                 // Field BINARY:Lorg/msgpack/value/ValueType;
      90: new           #4                  // class org/msgpack/value/ValueType
      93: dup
      94: ldc           #25                 // String ARRAY
      96: bipush        6
      98: iconst_0
      99: iconst_0
     100: invokespecial #19                 // Method "<init>":(Ljava/lang/String;IZZ)V
     103: putstatic     #15                 // Field ARRAY:Lorg/msgpack/value/ValueType;
     106: new           #4                  // class org/msgpack/value/ValueType
     109: dup
     110: ldc           #26                 // String MAP
     112: bipush        7
     114: iconst_0
     115: iconst_0
     116: invokespecial #19                 // Method "<init>":(Ljava/lang/String;IZZ)V
     119: putstatic     #16                 // Field MAP:Lorg/msgpack/value/ValueType;
     122: new           #4                  // class org/msgpack/value/ValueType
     125: dup
     126: ldc           #27                 // String EXTENSION
     128: bipush        8
     130: iconst_0
     131: iconst_0
     132: invokespecial #19                 // Method "<init>":(Ljava/lang/String;IZZ)V
     135: putstatic     #17                 // Field EXTENSION:Lorg/msgpack/value/ValueType;
     138: bipush        9
     140: anewarray     #4                  // class org/msgpack/value/ValueType
     143: dup
     144: iconst_0
     145: getstatic     #9                  // Field NIL:Lorg/msgpack/value/ValueType;
     148: aastore
     149: dup
     150: iconst_1
     151: getstatic     #10                 // Field BOOLEAN:Lorg/msgpack/value/ValueType;
     154: aastore
     155: dup
     156: iconst_2
     157: getstatic     #11                 // Field INTEGER:Lorg/msgpack/value/ValueType;
     160: aastore
     161: dup
     162: iconst_3
     163: getstatic     #12                 // Field FLOAT:Lorg/msgpack/value/ValueType;
     166: aastore
     167: dup
     168: iconst_4
     169: getstatic     #13                 // Field STRING:Lorg/msgpack/value/ValueType;
     172: aastore
     173: dup
     174: iconst_5
     175: getstatic     #14                 // Field BINARY:Lorg/msgpack/value/ValueType;
     178: aastore
     179: dup
     180: bipush        6
     182: getstatic     #15                 // Field ARRAY:Lorg/msgpack/value/ValueType;
     185: aastore
     186: dup
     187: bipush        7
     189: getstatic     #16                 // Field MAP:Lorg/msgpack/value/ValueType;
     192: aastore
     193: dup
     194: bipush        8
     196: getstatic     #17                 // Field EXTENSION:Lorg/msgpack/value/ValueType;
     199: aastore
     200: putstatic     #1                  // Field $VALUES:[Lorg/msgpack/value/ValueType;
     203: return
}
