Compiled from "ImmutableDoubleValueImpl.java"
public class org.msgpack.value.impl.ImmutableDoubleValueImpl extends org.msgpack.value.impl.AbstractImmutableValue implements org.msgpack.value.ImmutableFloatValue {
  private final double value;

  public org.msgpack.value.impl.ImmutableDoubleValueImpl(double);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/msgpack/value/impl/AbstractImmutableValue."<init>":()V
       4: aload_0
       5: dload_1
       6: putfield      #2                  // Field value:D
       9: return

  public org.msgpack.value.ValueType getValueType();
    Code:
       0: getstatic     #3                  // Field org/msgpack/value/ValueType.FLOAT:Lorg/msgpack/value/ValueType;
       3: areturn

  public org.msgpack.value.impl.ImmutableDoubleValueImpl immutableValue();
    Code:
       0: aload_0
       1: areturn

  public org.msgpack.value.ImmutableNumberValue asNumberValue();
    Code:
       0: aload_0
       1: areturn

  public org.msgpack.value.ImmutableFloatValue asFloatValue();
    Code:
       0: aload_0
       1: areturn

  public byte toByte();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:D
       4: d2i
       5: i2b
       6: ireturn

  public short toShort();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:D
       4: d2i
       5: i2s
       6: ireturn

  public int toInt();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:D
       4: d2i
       5: ireturn

  public long toLong();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:D
       4: d2l
       5: lreturn

  public java.math.BigInteger toBigInteger();
    Code:
       0: new           #4                  // class java/math/BigDecimal
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:D
       8: invokespecial #5                  // Method java/math/BigDecimal."<init>":(D)V
      11: invokevirtual #6                  // Method java/math/BigDecimal.toBigInteger:()Ljava/math/BigInteger;
      14: areturn

  public float toFloat();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:D
       4: d2f
       5: freturn

  public double toDouble();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:D
       4: dreturn

  public void writeTo(org.msgpack.core.MessagePacker) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field value:D
       5: invokevirtual #7                  // Method org/msgpack/core/MessagePacker.packDouble:(D)Lorg/msgpack/core/MessagePacker;
       8: pop
       9: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #8                  // class org/msgpack/value/Value
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #8                  // class org/msgpack/value/Value
      20: astore_2
      21: aload_2
      22: invokeinterface #9,  1            // InterfaceMethod org/msgpack/value/Value.isFloatValue:()Z
      27: ifne          32
      30: iconst_0
      31: ireturn
      32: aload_0
      33: getfield      #2                  // Field value:D
      36: aload_2
      37: invokeinterface #10,  1           // InterfaceMethod org/msgpack/value/Value.asFloatValue:()Lorg/msgpack/value/FloatValue;
      42: invokeinterface #11,  1           // InterfaceMethod org/msgpack/value/FloatValue.toDouble:()D
      47: dcmpl
      48: ifne          55
      51: iconst_1
      52: goto          56
      55: iconst_0
      56: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:D
       4: invokestatic  #12                 // Method java/lang/Double.doubleToLongBits:(D)J
       7: lstore_1
       8: lload_1
       9: lload_1
      10: bipush        32
      12: lushr
      13: lxor
      14: l2i
      15: ireturn

  public java.lang.String toJson();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:D
       4: invokestatic  #13                 // Method java/lang/Double.isNaN:(D)Z
       7: ifne          20
      10: aload_0
      11: getfield      #2                  // Field value:D
      14: invokestatic  #14                 // Method java/lang/Double.isInfinite:(D)Z
      17: ifeq          23
      20: ldc           #15                 // String null
      22: areturn
      23: aload_0
      24: getfield      #2                  // Field value:D
      27: invokestatic  #16                 // Method java/lang/Double.toString:(D)Ljava/lang/String;
      30: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:D
       4: invokestatic  #16                 // Method java/lang/Double.toString:(D)Ljava/lang/String;
       7: areturn

  public org.msgpack.value.ImmutableTimestampValue asTimestampValue();
    Code:
       0: aload_0
       1: invokespecial #17                 // Method org/msgpack/value/impl/AbstractImmutableValue.asTimestampValue:()Lorg/msgpack/value/ImmutableTimestampValue;
       4: areturn

  public org.msgpack.value.ImmutableExtensionValue asExtensionValue();
    Code:
       0: aload_0
       1: invokespecial #18                 // Method org/msgpack/value/impl/AbstractImmutableValue.asExtensionValue:()Lorg/msgpack/value/ImmutableExtensionValue;
       4: areturn

  public org.msgpack.value.ImmutableMapValue asMapValue();
    Code:
       0: aload_0
       1: invokespecial #19                 // Method org/msgpack/value/impl/AbstractImmutableValue.asMapValue:()Lorg/msgpack/value/ImmutableMapValue;
       4: areturn

  public org.msgpack.value.ImmutableArrayValue asArrayValue();
    Code:
       0: aload_0
       1: invokespecial #20                 // Method org/msgpack/value/impl/AbstractImmutableValue.asArrayValue:()Lorg/msgpack/value/ImmutableArrayValue;
       4: areturn

  public org.msgpack.value.ImmutableStringValue asStringValue();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method org/msgpack/value/impl/AbstractImmutableValue.asStringValue:()Lorg/msgpack/value/ImmutableStringValue;
       4: areturn

  public org.msgpack.value.ImmutableBinaryValue asBinaryValue();
    Code:
       0: aload_0
       1: invokespecial #22                 // Method org/msgpack/value/impl/AbstractImmutableValue.asBinaryValue:()Lorg/msgpack/value/ImmutableBinaryValue;
       4: areturn

  public org.msgpack.value.ImmutableRawValue asRawValue();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method org/msgpack/value/impl/AbstractImmutableValue.asRawValue:()Lorg/msgpack/value/ImmutableRawValue;
       4: areturn

  public org.msgpack.value.ImmutableIntegerValue asIntegerValue();
    Code:
       0: aload_0
       1: invokespecial #24                 // Method org/msgpack/value/impl/AbstractImmutableValue.asIntegerValue:()Lorg/msgpack/value/ImmutableIntegerValue;
       4: areturn

  public org.msgpack.value.ImmutableBooleanValue asBooleanValue();
    Code:
       0: aload_0
       1: invokespecial #25                 // Method org/msgpack/value/impl/AbstractImmutableValue.asBooleanValue:()Lorg/msgpack/value/ImmutableBooleanValue;
       4: areturn

  public org.msgpack.value.ImmutableNilValue asNilValue();
    Code:
       0: aload_0
       1: invokespecial #26                 // Method org/msgpack/value/impl/AbstractImmutableValue.asNilValue:()Lorg/msgpack/value/ImmutableNilValue;
       4: areturn

  public boolean isTimestampValue();
    Code:
       0: aload_0
       1: invokespecial #27                 // Method org/msgpack/value/impl/AbstractImmutableValue.isTimestampValue:()Z
       4: ireturn

  public boolean isExtensionValue();
    Code:
       0: aload_0
       1: invokespecial #28                 // Method org/msgpack/value/impl/AbstractImmutableValue.isExtensionValue:()Z
       4: ireturn

  public boolean isMapValue();
    Code:
       0: aload_0
       1: invokespecial #29                 // Method org/msgpack/value/impl/AbstractImmutableValue.isMapValue:()Z
       4: ireturn

  public boolean isArrayValue();
    Code:
       0: aload_0
       1: invokespecial #30                 // Method org/msgpack/value/impl/AbstractImmutableValue.isArrayValue:()Z
       4: ireturn

  public boolean isStringValue();
    Code:
       0: aload_0
       1: invokespecial #31                 // Method org/msgpack/value/impl/AbstractImmutableValue.isStringValue:()Z
       4: ireturn

  public boolean isBinaryValue();
    Code:
       0: aload_0
       1: invokespecial #32                 // Method org/msgpack/value/impl/AbstractImmutableValue.isBinaryValue:()Z
       4: ireturn

  public boolean isRawValue();
    Code:
       0: aload_0
       1: invokespecial #33                 // Method org/msgpack/value/impl/AbstractImmutableValue.isRawValue:()Z
       4: ireturn

  public boolean isFloatValue();
    Code:
       0: aload_0
       1: invokespecial #34                 // Method org/msgpack/value/impl/AbstractImmutableValue.isFloatValue:()Z
       4: ireturn

  public boolean isIntegerValue();
    Code:
       0: aload_0
       1: invokespecial #35                 // Method org/msgpack/value/impl/AbstractImmutableValue.isIntegerValue:()Z
       4: ireturn

  public boolean isNumberValue();
    Code:
       0: aload_0
       1: invokespecial #36                 // Method org/msgpack/value/impl/AbstractImmutableValue.isNumberValue:()Z
       4: ireturn

  public boolean isBooleanValue();
    Code:
       0: aload_0
       1: invokespecial #37                 // Method org/msgpack/value/impl/AbstractImmutableValue.isBooleanValue:()Z
       4: ireturn

  public boolean isNilValue();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method org/msgpack/value/impl/AbstractImmutableValue.isNilValue:()Z
       4: ireturn

  public org.msgpack.value.FloatValue asFloatValue();
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method asFloatValue:()Lorg/msgpack/value/ImmutableFloatValue;
       4: areturn

  public org.msgpack.value.NumberValue asNumberValue();
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method asNumberValue:()Lorg/msgpack/value/ImmutableNumberValue;
       4: areturn

  public org.msgpack.value.ImmutableValue immutableValue();
    Code:
       0: aload_0
       1: invokevirtual #41                 // Method immutableValue:()Lorg/msgpack/value/impl/ImmutableDoubleValueImpl;
       4: areturn
}
