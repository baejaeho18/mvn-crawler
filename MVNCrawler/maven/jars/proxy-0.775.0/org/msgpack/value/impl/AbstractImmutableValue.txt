Compiled from "AbstractImmutableValue.java"
abstract class org.msgpack.value.impl.AbstractImmutableValue implements org.msgpack.value.ImmutableValue {
  org.msgpack.value.impl.AbstractImmutableValue();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public boolean isNilValue();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method getValueType:()Lorg/msgpack/value/ValueType;
       4: invokevirtual #3                  // Method org/msgpack/value/ValueType.isNilType:()Z
       7: ireturn

  public boolean isBooleanValue();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method getValueType:()Lorg/msgpack/value/ValueType;
       4: invokevirtual #4                  // Method org/msgpack/value/ValueType.isBooleanType:()Z
       7: ireturn

  public boolean isNumberValue();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method getValueType:()Lorg/msgpack/value/ValueType;
       4: invokevirtual #5                  // Method org/msgpack/value/ValueType.isNumberType:()Z
       7: ireturn

  public boolean isIntegerValue();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method getValueType:()Lorg/msgpack/value/ValueType;
       4: invokevirtual #6                  // Method org/msgpack/value/ValueType.isIntegerType:()Z
       7: ireturn

  public boolean isFloatValue();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method getValueType:()Lorg/msgpack/value/ValueType;
       4: invokevirtual #7                  // Method org/msgpack/value/ValueType.isFloatType:()Z
       7: ireturn

  public boolean isRawValue();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method getValueType:()Lorg/msgpack/value/ValueType;
       4: invokevirtual #8                  // Method org/msgpack/value/ValueType.isRawType:()Z
       7: ireturn

  public boolean isBinaryValue();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method getValueType:()Lorg/msgpack/value/ValueType;
       4: invokevirtual #9                  // Method org/msgpack/value/ValueType.isBinaryType:()Z
       7: ireturn

  public boolean isStringValue();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method getValueType:()Lorg/msgpack/value/ValueType;
       4: invokevirtual #10                 // Method org/msgpack/value/ValueType.isStringType:()Z
       7: ireturn

  public boolean isArrayValue();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method getValueType:()Lorg/msgpack/value/ValueType;
       4: invokevirtual #11                 // Method org/msgpack/value/ValueType.isArrayType:()Z
       7: ireturn

  public boolean isMapValue();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method getValueType:()Lorg/msgpack/value/ValueType;
       4: invokevirtual #12                 // Method org/msgpack/value/ValueType.isMapType:()Z
       7: ireturn

  public boolean isExtensionValue();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method getValueType:()Lorg/msgpack/value/ValueType;
       4: invokevirtual #13                 // Method org/msgpack/value/ValueType.isExtensionType:()Z
       7: ireturn

  public boolean isTimestampValue();
    Code:
       0: iconst_0
       1: ireturn

  public org.msgpack.value.ImmutableNilValue asNilValue();
    Code:
       0: new           #14                 // class org/msgpack/core/MessageTypeCastException
       3: dup
       4: invokespecial #15                 // Method org/msgpack/core/MessageTypeCastException."<init>":()V
       7: athrow

  public org.msgpack.value.ImmutableBooleanValue asBooleanValue();
    Code:
       0: new           #14                 // class org/msgpack/core/MessageTypeCastException
       3: dup
       4: invokespecial #15                 // Method org/msgpack/core/MessageTypeCastException."<init>":()V
       7: athrow

  public org.msgpack.value.ImmutableNumberValue asNumberValue();
    Code:
       0: new           #14                 // class org/msgpack/core/MessageTypeCastException
       3: dup
       4: invokespecial #15                 // Method org/msgpack/core/MessageTypeCastException."<init>":()V
       7: athrow

  public org.msgpack.value.ImmutableIntegerValue asIntegerValue();
    Code:
       0: new           #14                 // class org/msgpack/core/MessageTypeCastException
       3: dup
       4: invokespecial #15                 // Method org/msgpack/core/MessageTypeCastException."<init>":()V
       7: athrow

  public org.msgpack.value.ImmutableFloatValue asFloatValue();
    Code:
       0: new           #14                 // class org/msgpack/core/MessageTypeCastException
       3: dup
       4: invokespecial #15                 // Method org/msgpack/core/MessageTypeCastException."<init>":()V
       7: athrow

  public org.msgpack.value.ImmutableRawValue asRawValue();
    Code:
       0: new           #14                 // class org/msgpack/core/MessageTypeCastException
       3: dup
       4: invokespecial #15                 // Method org/msgpack/core/MessageTypeCastException."<init>":()V
       7: athrow

  public org.msgpack.value.ImmutableBinaryValue asBinaryValue();
    Code:
       0: new           #14                 // class org/msgpack/core/MessageTypeCastException
       3: dup
       4: invokespecial #15                 // Method org/msgpack/core/MessageTypeCastException."<init>":()V
       7: athrow

  public org.msgpack.value.ImmutableStringValue asStringValue();
    Code:
       0: new           #14                 // class org/msgpack/core/MessageTypeCastException
       3: dup
       4: invokespecial #15                 // Method org/msgpack/core/MessageTypeCastException."<init>":()V
       7: athrow

  public org.msgpack.value.ImmutableArrayValue asArrayValue();
    Code:
       0: new           #14                 // class org/msgpack/core/MessageTypeCastException
       3: dup
       4: invokespecial #15                 // Method org/msgpack/core/MessageTypeCastException."<init>":()V
       7: athrow

  public org.msgpack.value.ImmutableMapValue asMapValue();
    Code:
       0: new           #14                 // class org/msgpack/core/MessageTypeCastException
       3: dup
       4: invokespecial #15                 // Method org/msgpack/core/MessageTypeCastException."<init>":()V
       7: athrow

  public org.msgpack.value.ImmutableExtensionValue asExtensionValue();
    Code:
       0: new           #14                 // class org/msgpack/core/MessageTypeCastException
       3: dup
       4: invokespecial #15                 // Method org/msgpack/core/MessageTypeCastException."<init>":()V
       7: athrow

  public org.msgpack.value.ImmutableTimestampValue asTimestampValue();
    Code:
       0: new           #14                 // class org/msgpack/core/MessageTypeCastException
       3: dup
       4: invokespecial #15                 // Method org/msgpack/core/MessageTypeCastException."<init>":()V
       7: athrow

  public org.msgpack.value.TimestampValue asTimestampValue();
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method asTimestampValue:()Lorg/msgpack/value/ImmutableTimestampValue;
       4: areturn

  public org.msgpack.value.ExtensionValue asExtensionValue();
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method asExtensionValue:()Lorg/msgpack/value/ImmutableExtensionValue;
       4: areturn

  public org.msgpack.value.MapValue asMapValue();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method asMapValue:()Lorg/msgpack/value/ImmutableMapValue;
       4: areturn

  public org.msgpack.value.ArrayValue asArrayValue();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method asArrayValue:()Lorg/msgpack/value/ImmutableArrayValue;
       4: areturn

  public org.msgpack.value.StringValue asStringValue();
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method asStringValue:()Lorg/msgpack/value/ImmutableStringValue;
       4: areturn

  public org.msgpack.value.BinaryValue asBinaryValue();
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method asBinaryValue:()Lorg/msgpack/value/ImmutableBinaryValue;
       4: areturn

  public org.msgpack.value.RawValue asRawValue();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method asRawValue:()Lorg/msgpack/value/ImmutableRawValue;
       4: areturn

  public org.msgpack.value.FloatValue asFloatValue();
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method asFloatValue:()Lorg/msgpack/value/ImmutableFloatValue;
       4: areturn

  public org.msgpack.value.IntegerValue asIntegerValue();
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method asIntegerValue:()Lorg/msgpack/value/ImmutableIntegerValue;
       4: areturn

  public org.msgpack.value.NumberValue asNumberValue();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method asNumberValue:()Lorg/msgpack/value/ImmutableNumberValue;
       4: areturn

  public org.msgpack.value.BooleanValue asBooleanValue();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method asBooleanValue:()Lorg/msgpack/value/ImmutableBooleanValue;
       4: areturn

  public org.msgpack.value.NilValue asNilValue();
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method asNilValue:()Lorg/msgpack/value/ImmutableNilValue;
       4: areturn
}
