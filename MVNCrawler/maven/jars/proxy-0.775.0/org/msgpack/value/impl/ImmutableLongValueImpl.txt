Compiled from "ImmutableLongValueImpl.java"
public class org.msgpack.value.impl.ImmutableLongValueImpl extends org.msgpack.value.impl.AbstractImmutableValue implements org.msgpack.value.ImmutableIntegerValue {
  private final long value;

  private static final long BYTE_MIN;

  private static final long BYTE_MAX;

  private static final long SHORT_MIN;

  private static final long SHORT_MAX;

  private static final long INT_MIN;

  private static final long INT_MAX;

  public org.msgpack.value.impl.ImmutableLongValueImpl(long);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method org/msgpack/value/impl/AbstractImmutableValue."<init>":()V
       4: aload_0
       5: lload_1
       6: putfield      #5                  // Field value:J
       9: return

  public org.msgpack.value.ValueType getValueType();
    Code:
       0: getstatic     #6                  // Field org/msgpack/value/ValueType.INTEGER:Lorg/msgpack/value/ValueType;
       3: areturn

  public org.msgpack.value.ImmutableIntegerValue immutableValue();
    Code:
       0: aload_0
       1: areturn

  public org.msgpack.value.ImmutableNumberValue asNumberValue();
    Code:
       0: aload_0
       1: areturn

  public org.msgpack.value.ImmutableIntegerValue asIntegerValue();
    Code:
       0: aload_0
       1: areturn

  public byte toByte();
    Code:
       0: aload_0
       1: getfield      #5                  // Field value:J
       4: l2i
       5: i2b
       6: ireturn

  public short toShort();
    Code:
       0: aload_0
       1: getfield      #5                  // Field value:J
       4: l2i
       5: i2s
       6: ireturn

  public int toInt();
    Code:
       0: aload_0
       1: getfield      #5                  // Field value:J
       4: l2i
       5: ireturn

  public long toLong();
    Code:
       0: aload_0
       1: getfield      #5                  // Field value:J
       4: lreturn

  public java.math.BigInteger toBigInteger();
    Code:
       0: aload_0
       1: getfield      #5                  // Field value:J
       4: invokestatic  #7                  // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       7: areturn

  public float toFloat();
    Code:
       0: aload_0
       1: getfield      #5                  // Field value:J
       4: l2f
       5: freturn

  public double toDouble();
    Code:
       0: aload_0
       1: getfield      #5                  // Field value:J
       4: l2d
       5: dreturn

  public boolean isInByteRange();
    Code:
       0: ldc2_w        #9                  // long -128l
       3: aload_0
       4: getfield      #5                  // Field value:J
       7: lcmp
       8: ifgt          26
      11: aload_0
      12: getfield      #5                  // Field value:J
      15: ldc2_w        #11                 // long 127l
      18: lcmp
      19: ifgt          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public boolean isInShortRange();
    Code:
       0: ldc2_w        #13                 // long -32768l
       3: aload_0
       4: getfield      #5                  // Field value:J
       7: lcmp
       8: ifgt          26
      11: aload_0
      12: getfield      #5                  // Field value:J
      15: ldc2_w        #15                 // long 32767l
      18: lcmp
      19: ifgt          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public boolean isInIntRange();
    Code:
       0: ldc2_w        #17                 // long -2147483648l
       3: aload_0
       4: getfield      #5                  // Field value:J
       7: lcmp
       8: ifgt          26
      11: aload_0
      12: getfield      #5                  // Field value:J
      15: ldc2_w        #19                 // long 2147483647l
      18: lcmp
      19: ifgt          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public boolean isInLongRange();
    Code:
       0: iconst_1
       1: ireturn

  public org.msgpack.core.MessageFormat mostSuccinctMessageFormat();
    Code:
       0: aload_0
       1: invokestatic  #21                 // Method org/msgpack/value/impl/ImmutableBigIntegerValueImpl.mostSuccinctMessageFormat:(Lorg/msgpack/value/IntegerValue;)Lorg/msgpack/core/MessageFormat;
       4: areturn

  public byte asByte();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method isInByteRange:()Z
       4: ifne          19
       7: new           #23                 // class org/msgpack/core/MessageIntegerOverflowException
      10: dup
      11: aload_0
      12: getfield      #5                  // Field value:J
      15: invokespecial #24                 // Method org/msgpack/core/MessageIntegerOverflowException."<init>":(J)V
      18: athrow
      19: aload_0
      20: getfield      #5                  // Field value:J
      23: l2i
      24: i2b
      25: ireturn

  public short asShort();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method isInShortRange:()Z
       4: ifne          19
       7: new           #23                 // class org/msgpack/core/MessageIntegerOverflowException
      10: dup
      11: aload_0
      12: getfield      #5                  // Field value:J
      15: invokespecial #24                 // Method org/msgpack/core/MessageIntegerOverflowException."<init>":(J)V
      18: athrow
      19: aload_0
      20: getfield      #5                  // Field value:J
      23: l2i
      24: i2s
      25: ireturn

  public int asInt();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method isInIntRange:()Z
       4: ifne          19
       7: new           #23                 // class org/msgpack/core/MessageIntegerOverflowException
      10: dup
      11: aload_0
      12: getfield      #5                  // Field value:J
      15: invokespecial #24                 // Method org/msgpack/core/MessageIntegerOverflowException."<init>":(J)V
      18: athrow
      19: aload_0
      20: getfield      #5                  // Field value:J
      23: l2i
      24: ireturn

  public long asLong();
    Code:
       0: aload_0
       1: getfield      #5                  // Field value:J
       4: lreturn

  public java.math.BigInteger asBigInteger();
    Code:
       0: aload_0
       1: getfield      #5                  // Field value:J
       4: invokestatic  #7                  // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       7: areturn

  public void writeTo(org.msgpack.core.MessagePacker) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #5                  // Field value:J
       5: invokevirtual #27                 // Method org/msgpack/core/MessagePacker.packLong:(J)Lorg/msgpack/core/MessagePacker;
       8: pop
       9: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #28                 // class org/msgpack/value/Value
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #28                 // class org/msgpack/value/Value
      20: astore_2
      21: aload_2
      22: invokeinterface #29,  1           // InterfaceMethod org/msgpack/value/Value.isIntegerValue:()Z
      27: ifne          32
      30: iconst_0
      31: ireturn
      32: aload_2
      33: invokeinterface #30,  1           // InterfaceMethod org/msgpack/value/Value.asIntegerValue:()Lorg/msgpack/value/IntegerValue;
      38: astore_3
      39: aload_3
      40: invokeinterface #31,  1           // InterfaceMethod org/msgpack/value/IntegerValue.isInLongRange:()Z
      45: ifne          50
      48: iconst_0
      49: ireturn
      50: aload_0
      51: getfield      #5                  // Field value:J
      54: aload_3
      55: invokeinterface #32,  1           // InterfaceMethod org/msgpack/value/IntegerValue.toLong:()J
      60: lcmp
      61: ifne          68
      64: iconst_1
      65: goto          69
      68: iconst_0
      69: ireturn

  public int hashCode();
    Code:
       0: ldc2_w        #17                 // long -2147483648l
       3: aload_0
       4: getfield      #5                  // Field value:J
       7: lcmp
       8: ifgt          28
      11: aload_0
      12: getfield      #5                  // Field value:J
      15: ldc2_w        #19                 // long 2147483647l
      18: lcmp
      19: ifgt          28
      22: aload_0
      23: getfield      #5                  // Field value:J
      26: l2i
      27: ireturn
      28: aload_0
      29: getfield      #5                  // Field value:J
      32: aload_0
      33: getfield      #5                  // Field value:J
      36: bipush        32
      38: lushr
      39: lxor
      40: l2i
      41: ireturn

  public java.lang.String toJson();
    Code:
       0: aload_0
       1: getfield      #5                  // Field value:J
       4: invokestatic  #33                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
       7: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method toJson:()Ljava/lang/String;
       4: areturn

  public org.msgpack.value.ImmutableTimestampValue asTimestampValue();
    Code:
       0: aload_0
       1: invokespecial #35                 // Method org/msgpack/value/impl/AbstractImmutableValue.asTimestampValue:()Lorg/msgpack/value/ImmutableTimestampValue;
       4: areturn

  public org.msgpack.value.ImmutableExtensionValue asExtensionValue();
    Code:
       0: aload_0
       1: invokespecial #36                 // Method org/msgpack/value/impl/AbstractImmutableValue.asExtensionValue:()Lorg/msgpack/value/ImmutableExtensionValue;
       4: areturn

  public org.msgpack.value.ImmutableMapValue asMapValue();
    Code:
       0: aload_0
       1: invokespecial #37                 // Method org/msgpack/value/impl/AbstractImmutableValue.asMapValue:()Lorg/msgpack/value/ImmutableMapValue;
       4: areturn

  public org.msgpack.value.ImmutableArrayValue asArrayValue();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method org/msgpack/value/impl/AbstractImmutableValue.asArrayValue:()Lorg/msgpack/value/ImmutableArrayValue;
       4: areturn

  public org.msgpack.value.ImmutableStringValue asStringValue();
    Code:
       0: aload_0
       1: invokespecial #39                 // Method org/msgpack/value/impl/AbstractImmutableValue.asStringValue:()Lorg/msgpack/value/ImmutableStringValue;
       4: areturn

  public org.msgpack.value.ImmutableBinaryValue asBinaryValue();
    Code:
       0: aload_0
       1: invokespecial #40                 // Method org/msgpack/value/impl/AbstractImmutableValue.asBinaryValue:()Lorg/msgpack/value/ImmutableBinaryValue;
       4: areturn

  public org.msgpack.value.ImmutableRawValue asRawValue();
    Code:
       0: aload_0
       1: invokespecial #41                 // Method org/msgpack/value/impl/AbstractImmutableValue.asRawValue:()Lorg/msgpack/value/ImmutableRawValue;
       4: areturn

  public org.msgpack.value.ImmutableFloatValue asFloatValue();
    Code:
       0: aload_0
       1: invokespecial #42                 // Method org/msgpack/value/impl/AbstractImmutableValue.asFloatValue:()Lorg/msgpack/value/ImmutableFloatValue;
       4: areturn

  public org.msgpack.value.ImmutableBooleanValue asBooleanValue();
    Code:
       0: aload_0
       1: invokespecial #43                 // Method org/msgpack/value/impl/AbstractImmutableValue.asBooleanValue:()Lorg/msgpack/value/ImmutableBooleanValue;
       4: areturn

  public org.msgpack.value.ImmutableNilValue asNilValue();
    Code:
       0: aload_0
       1: invokespecial #44                 // Method org/msgpack/value/impl/AbstractImmutableValue.asNilValue:()Lorg/msgpack/value/ImmutableNilValue;
       4: areturn

  public boolean isTimestampValue();
    Code:
       0: aload_0
       1: invokespecial #45                 // Method org/msgpack/value/impl/AbstractImmutableValue.isTimestampValue:()Z
       4: ireturn

  public boolean isExtensionValue();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method org/msgpack/value/impl/AbstractImmutableValue.isExtensionValue:()Z
       4: ireturn

  public boolean isMapValue();
    Code:
       0: aload_0
       1: invokespecial #47                 // Method org/msgpack/value/impl/AbstractImmutableValue.isMapValue:()Z
       4: ireturn

  public boolean isArrayValue();
    Code:
       0: aload_0
       1: invokespecial #48                 // Method org/msgpack/value/impl/AbstractImmutableValue.isArrayValue:()Z
       4: ireturn

  public boolean isStringValue();
    Code:
       0: aload_0
       1: invokespecial #49                 // Method org/msgpack/value/impl/AbstractImmutableValue.isStringValue:()Z
       4: ireturn

  public boolean isBinaryValue();
    Code:
       0: aload_0
       1: invokespecial #50                 // Method org/msgpack/value/impl/AbstractImmutableValue.isBinaryValue:()Z
       4: ireturn

  public boolean isRawValue();
    Code:
       0: aload_0
       1: invokespecial #51                 // Method org/msgpack/value/impl/AbstractImmutableValue.isRawValue:()Z
       4: ireturn

  public boolean isFloatValue();
    Code:
       0: aload_0
       1: invokespecial #52                 // Method org/msgpack/value/impl/AbstractImmutableValue.isFloatValue:()Z
       4: ireturn

  public boolean isIntegerValue();
    Code:
       0: aload_0
       1: invokespecial #53                 // Method org/msgpack/value/impl/AbstractImmutableValue.isIntegerValue:()Z
       4: ireturn

  public boolean isNumberValue();
    Code:
       0: aload_0
       1: invokespecial #54                 // Method org/msgpack/value/impl/AbstractImmutableValue.isNumberValue:()Z
       4: ireturn

  public boolean isBooleanValue();
    Code:
       0: aload_0
       1: invokespecial #55                 // Method org/msgpack/value/impl/AbstractImmutableValue.isBooleanValue:()Z
       4: ireturn

  public boolean isNilValue();
    Code:
       0: aload_0
       1: invokespecial #56                 // Method org/msgpack/value/impl/AbstractImmutableValue.isNilValue:()Z
       4: ireturn

  public org.msgpack.value.IntegerValue asIntegerValue();
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method asIntegerValue:()Lorg/msgpack/value/ImmutableIntegerValue;
       4: areturn

  public org.msgpack.value.NumberValue asNumberValue();
    Code:
       0: aload_0
       1: invokevirtual #58                 // Method asNumberValue:()Lorg/msgpack/value/ImmutableNumberValue;
       4: areturn

  public org.msgpack.value.ImmutableValue immutableValue();
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method immutableValue:()Lorg/msgpack/value/ImmutableIntegerValue;
       4: areturn
}
