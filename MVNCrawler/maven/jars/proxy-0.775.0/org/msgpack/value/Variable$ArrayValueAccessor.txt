Compiled from "Variable.java"
class org.msgpack.value.Variable$ArrayValueAccessor extends org.msgpack.value.Variable$AbstractValueAccessor implements org.msgpack.value.ArrayValue {
  final org.msgpack.value.Variable this$0;

  private org.msgpack.value.Variable$ArrayValueAccessor(org.msgpack.value.Variable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/msgpack/value/Variable;
       5: aload_0
       6: aload_1
       7: aconst_null
       8: invokespecial #3                  // Method org/msgpack/value/Variable$AbstractValueAccessor."<init>":(Lorg/msgpack/value/Variable;Lorg/msgpack/value/Variable$1;)V
      11: return

  public org.msgpack.value.ValueType getValueType();
    Code:
       0: getstatic     #4                  // Field org/msgpack/value/ValueType.ARRAY:Lorg/msgpack/value/ValueType;
       3: areturn

  public org.msgpack.value.ArrayValue asArrayValue();
    Code:
       0: aload_0
       1: areturn

  public org.msgpack.value.ImmutableArrayValue immutableValue();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method array:()[Lorg/msgpack/value/Value;
       4: invokestatic  #6                  // Method org/msgpack/value/ValueFactory.newArray:([Lorg/msgpack/value/Value;)Lorg/msgpack/value/ImmutableArrayValue;
       7: areturn

  public int size();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method array:()[Lorg/msgpack/value/Value;
       4: arraylength
       5: ireturn

  public org.msgpack.value.Value get(int);
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method array:()[Lorg/msgpack/value/Value;
       4: iload_1
       5: aaload
       6: areturn

  public org.msgpack.value.Value getOrNilValue(int);
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method array:()[Lorg/msgpack/value/Value;
       4: astore_2
       5: aload_2
       6: arraylength
       7: iload_1
       8: if_icmpge     19
      11: iload_1
      12: iflt          19
      15: invokestatic  #7                  // Method org/msgpack/value/ValueFactory.newNil:()Lorg/msgpack/value/ImmutableNilValue;
      18: areturn
      19: aload_2
      20: iload_1
      21: aaload
      22: areturn

  public java.util.Iterator<org.msgpack.value.Value> iterator();
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method list:()Ljava/util/List;
       4: invokeinterface #9,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: areturn

  public java.util.List<org.msgpack.value.Value> list();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method array:()[Lorg/msgpack/value/Value;
       4: invokestatic  #10                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       7: areturn

  public org.msgpack.value.Value[] array();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/msgpack/value/Variable;
       4: invokestatic  #11                 // Method org/msgpack/value/Variable.access$1300:(Lorg/msgpack/value/Variable;)Ljava/lang/Object;
       7: checkcast     #12                 // class "[Lorg/msgpack/value/Value;"
      10: checkcast     #12                 // class "[Lorg/msgpack/value/Value;"
      13: areturn

  public void writeTo(org.msgpack.core.MessagePacker) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method immutableValue:()Lorg/msgpack/value/ImmutableArrayValue;
       4: aload_1
       5: invokeinterface #14,  2           // InterfaceMethod org/msgpack/value/ImmutableArrayValue.writeTo:(Lorg/msgpack/core/MessagePacker;)V
      10: return

  public org.msgpack.value.ImmutableValue immutableValue();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method immutableValue:()Lorg/msgpack/value/ImmutableArrayValue;
       4: areturn

  org.msgpack.value.Variable$ArrayValueAccessor(org.msgpack.value.Variable, org.msgpack.value.Variable$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lorg/msgpack/value/Variable;)V
       5: return
}
