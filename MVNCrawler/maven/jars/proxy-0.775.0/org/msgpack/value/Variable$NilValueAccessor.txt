Compiled from "Variable.java"
class org.msgpack.value.Variable$NilValueAccessor extends org.msgpack.value.Variable$AbstractValueAccessor implements org.msgpack.value.NilValue {
  final org.msgpack.value.Variable this$0;

  private org.msgpack.value.Variable$NilValueAccessor(org.msgpack.value.Variable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/msgpack/value/Variable;
       5: aload_0
       6: aload_1
       7: aconst_null
       8: invokespecial #3                  // Method org/msgpack/value/Variable$AbstractValueAccessor."<init>":(Lorg/msgpack/value/Variable;Lorg/msgpack/value/Variable$1;)V
      11: return

  public org.msgpack.value.ValueType getValueType();
    Code:
       0: getstatic     #4                  // Field org/msgpack/value/ValueType.NIL:Lorg/msgpack/value/ValueType;
       3: areturn

  public org.msgpack.value.NilValue asNilValue();
    Code:
       0: aload_0
       1: areturn

  public org.msgpack.value.ImmutableNilValue immutableValue();
    Code:
       0: invokestatic  #5                  // Method org/msgpack/value/ValueFactory.newNil:()Lorg/msgpack/value/ImmutableNilValue;
       3: areturn

  public void writeTo(org.msgpack.core.MessagePacker) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #6                  // Method org/msgpack/core/MessagePacker.packNil:()Lorg/msgpack/core/MessagePacker;
       4: pop
       5: return

  public org.msgpack.value.ImmutableValue immutableValue();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method immutableValue:()Lorg/msgpack/value/ImmutableNilValue;
       4: areturn

  org.msgpack.value.Variable$NilValueAccessor(org.msgpack.value.Variable, org.msgpack.value.Variable$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lorg/msgpack/value/Variable;)V
       5: return
}
