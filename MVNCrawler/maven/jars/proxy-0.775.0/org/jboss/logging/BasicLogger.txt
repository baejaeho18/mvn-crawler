Compiled from "BasicLogger.java"
public interface org.jboss.logging.BasicLogger {
  public abstract boolean isEnabled(org.jboss.logging.Logger$Level);

  public abstract boolean isTraceEnabled();

  public abstract void trace(java.lang.Object);

  public abstract void trace(java.lang.Object, java.lang.Throwable);

  public abstract void trace(java.lang.String, java.lang.Object, java.lang.Throwable);

  public abstract void trace(java.lang.String, java.lang.Object, java.lang.Object[], java.lang.Throwable);

  public abstract void tracev(java.lang.String, java.lang.Object...);

  public abstract void tracev(java.lang.String, java.lang.Object);

  public abstract void tracev(java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void tracev(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

  public abstract void tracev(java.lang.Throwable, java.lang.String, java.lang.Object...);

  public abstract void tracev(java.lang.Throwable, java.lang.String, java.lang.Object);

  public abstract void tracev(java.lang.Throwable, java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void tracev(java.lang.Throwable, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

  public abstract void tracef(java.lang.String, java.lang.Object...);

  public abstract void tracef(java.lang.String, java.lang.Object);

  public abstract void tracef(java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void tracef(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

  public abstract void tracef(java.lang.Throwable, java.lang.String, java.lang.Object...);

  public abstract void tracef(java.lang.Throwable, java.lang.String, java.lang.Object);

  public abstract void tracef(java.lang.Throwable, java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void tracef(java.lang.Throwable, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

  public abstract void tracef(java.lang.String, int);

  public abstract void tracef(java.lang.String, int, int);

  public abstract void tracef(java.lang.String, int, java.lang.Object);

  public abstract void tracef(java.lang.String, int, int, int);

  public abstract void tracef(java.lang.String, int, int, java.lang.Object);

  public abstract void tracef(java.lang.String, int, java.lang.Object, java.lang.Object);

  public abstract void tracef(java.lang.Throwable, java.lang.String, int);

  public abstract void tracef(java.lang.Throwable, java.lang.String, int, int);

  public abstract void tracef(java.lang.Throwable, java.lang.String, int, java.lang.Object);

  public abstract void tracef(java.lang.Throwable, java.lang.String, int, int, int);

  public abstract void tracef(java.lang.Throwable, java.lang.String, int, int, java.lang.Object);

  public abstract void tracef(java.lang.Throwable, java.lang.String, int, java.lang.Object, java.lang.Object);

  public abstract void tracef(java.lang.String, long);

  public abstract void tracef(java.lang.String, long, long);

  public abstract void tracef(java.lang.String, long, java.lang.Object);

  public abstract void tracef(java.lang.String, long, long, long);

  public abstract void tracef(java.lang.String, long, long, java.lang.Object);

  public abstract void tracef(java.lang.String, long, java.lang.Object, java.lang.Object);

  public abstract void tracef(java.lang.Throwable, java.lang.String, long);

  public abstract void tracef(java.lang.Throwable, java.lang.String, long, long);

  public abstract void tracef(java.lang.Throwable, java.lang.String, long, java.lang.Object);

  public abstract void tracef(java.lang.Throwable, java.lang.String, long, long, long);

  public abstract void tracef(java.lang.Throwable, java.lang.String, long, long, java.lang.Object);

  public abstract void tracef(java.lang.Throwable, java.lang.String, long, java.lang.Object, java.lang.Object);

  public abstract boolean isDebugEnabled();

  public abstract void debug(java.lang.Object);

  public abstract void debug(java.lang.Object, java.lang.Throwable);

  public abstract void debug(java.lang.String, java.lang.Object, java.lang.Throwable);

  public abstract void debug(java.lang.String, java.lang.Object, java.lang.Object[], java.lang.Throwable);

  public abstract void debugv(java.lang.String, java.lang.Object...);

  public abstract void debugv(java.lang.String, java.lang.Object);

  public abstract void debugv(java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void debugv(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

  public abstract void debugv(java.lang.Throwable, java.lang.String, java.lang.Object...);

  public abstract void debugv(java.lang.Throwable, java.lang.String, java.lang.Object);

  public abstract void debugv(java.lang.Throwable, java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void debugv(java.lang.Throwable, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

  public abstract void debugf(java.lang.String, java.lang.Object...);

  public abstract void debugf(java.lang.String, java.lang.Object);

  public abstract void debugf(java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void debugf(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

  public abstract void debugf(java.lang.Throwable, java.lang.String, java.lang.Object...);

  public abstract void debugf(java.lang.Throwable, java.lang.String, java.lang.Object);

  public abstract void debugf(java.lang.Throwable, java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void debugf(java.lang.Throwable, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

  public abstract void debugf(java.lang.String, int);

  public abstract void debugf(java.lang.String, int, int);

  public abstract void debugf(java.lang.String, int, java.lang.Object);

  public abstract void debugf(java.lang.String, int, int, int);

  public abstract void debugf(java.lang.String, int, int, java.lang.Object);

  public abstract void debugf(java.lang.String, int, java.lang.Object, java.lang.Object);

  public abstract void debugf(java.lang.Throwable, java.lang.String, int);

  public abstract void debugf(java.lang.Throwable, java.lang.String, int, int);

  public abstract void debugf(java.lang.Throwable, java.lang.String, int, java.lang.Object);

  public abstract void debugf(java.lang.Throwable, java.lang.String, int, int, int);

  public abstract void debugf(java.lang.Throwable, java.lang.String, int, int, java.lang.Object);

  public abstract void debugf(java.lang.Throwable, java.lang.String, int, java.lang.Object, java.lang.Object);

  public abstract void debugf(java.lang.String, long);

  public abstract void debugf(java.lang.String, long, long);

  public abstract void debugf(java.lang.String, long, java.lang.Object);

  public abstract void debugf(java.lang.String, long, long, long);

  public abstract void debugf(java.lang.String, long, long, java.lang.Object);

  public abstract void debugf(java.lang.String, long, java.lang.Object, java.lang.Object);

  public abstract void debugf(java.lang.Throwable, java.lang.String, long);

  public abstract void debugf(java.lang.Throwable, java.lang.String, long, long);

  public abstract void debugf(java.lang.Throwable, java.lang.String, long, java.lang.Object);

  public abstract void debugf(java.lang.Throwable, java.lang.String, long, long, long);

  public abstract void debugf(java.lang.Throwable, java.lang.String, long, long, java.lang.Object);

  public abstract void debugf(java.lang.Throwable, java.lang.String, long, java.lang.Object, java.lang.Object);

  public abstract boolean isInfoEnabled();

  public abstract void info(java.lang.Object);

  public abstract void info(java.lang.Object, java.lang.Throwable);

  public abstract void info(java.lang.String, java.lang.Object, java.lang.Throwable);

  public abstract void info(java.lang.String, java.lang.Object, java.lang.Object[], java.lang.Throwable);

  public abstract void infov(java.lang.String, java.lang.Object...);

  public abstract void infov(java.lang.String, java.lang.Object);

  public abstract void infov(java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void infov(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

  public abstract void infov(java.lang.Throwable, java.lang.String, java.lang.Object...);

  public abstract void infov(java.lang.Throwable, java.lang.String, java.lang.Object);

  public abstract void infov(java.lang.Throwable, java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void infov(java.lang.Throwable, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

  public abstract void infof(java.lang.String, java.lang.Object...);

  public abstract void infof(java.lang.String, java.lang.Object);

  public abstract void infof(java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void infof(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

  public abstract void infof(java.lang.Throwable, java.lang.String, java.lang.Object...);

  public abstract void infof(java.lang.Throwable, java.lang.String, java.lang.Object);

  public abstract void infof(java.lang.Throwable, java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void infof(java.lang.Throwable, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

  public abstract void warn(java.lang.Object);

  public abstract void warn(java.lang.Object, java.lang.Throwable);

  public abstract void warn(java.lang.String, java.lang.Object, java.lang.Throwable);

  public abstract void warn(java.lang.String, java.lang.Object, java.lang.Object[], java.lang.Throwable);

  public abstract void warnv(java.lang.String, java.lang.Object...);

  public abstract void warnv(java.lang.String, java.lang.Object);

  public abstract void warnv(java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void warnv(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

  public abstract void warnv(java.lang.Throwable, java.lang.String, java.lang.Object...);

  public abstract void warnv(java.lang.Throwable, java.lang.String, java.lang.Object);

  public abstract void warnv(java.lang.Throwable, java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void warnv(java.lang.Throwable, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

  public abstract void warnf(java.lang.String, java.lang.Object...);

  public abstract void warnf(java.lang.String, java.lang.Object);

  public abstract void warnf(java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void warnf(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

  public abstract void warnf(java.lang.Throwable, java.lang.String, java.lang.Object...);

  public abstract void warnf(java.lang.Throwable, java.lang.String, java.lang.Object);

  public abstract void warnf(java.lang.Throwable, java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void warnf(java.lang.Throwable, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

  public abstract void error(java.lang.Object);

  public abstract void error(java.lang.Object, java.lang.Throwable);

  public abstract void error(java.lang.String, java.lang.Object, java.lang.Throwable);

  public abstract void error(java.lang.String, java.lang.Object, java.lang.Object[], java.lang.Throwable);

  public abstract void errorv(java.lang.String, java.lang.Object...);

  public abstract void errorv(java.lang.String, java.lang.Object);

  public abstract void errorv(java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void errorv(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

  public abstract void errorv(java.lang.Throwable, java.lang.String, java.lang.Object...);

  public abstract void errorv(java.lang.Throwable, java.lang.String, java.lang.Object);

  public abstract void errorv(java.lang.Throwable, java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void errorv(java.lang.Throwable, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

  public abstract void errorf(java.lang.String, java.lang.Object...);

  public abstract void errorf(java.lang.String, java.lang.Object);

  public abstract void errorf(java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void errorf(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

  public abstract void errorf(java.lang.Throwable, java.lang.String, java.lang.Object...);

  public abstract void errorf(java.lang.Throwable, java.lang.String, java.lang.Object);

  public abstract void errorf(java.lang.Throwable, java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void errorf(java.lang.Throwable, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

  public abstract void fatal(java.lang.Object);

  public abstract void fatal(java.lang.Object, java.lang.Throwable);

  public abstract void fatal(java.lang.String, java.lang.Object, java.lang.Throwable);

  public abstract void fatal(java.lang.String, java.lang.Object, java.lang.Object[], java.lang.Throwable);

  public abstract void fatalv(java.lang.String, java.lang.Object...);

  public abstract void fatalv(java.lang.String, java.lang.Object);

  public abstract void fatalv(java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void fatalv(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

  public abstract void fatalv(java.lang.Throwable, java.lang.String, java.lang.Object...);

  public abstract void fatalv(java.lang.Throwable, java.lang.String, java.lang.Object);

  public abstract void fatalv(java.lang.Throwable, java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void fatalv(java.lang.Throwable, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

  public abstract void fatalf(java.lang.String, java.lang.Object...);

  public abstract void fatalf(java.lang.String, java.lang.Object);

  public abstract void fatalf(java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void fatalf(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

  public abstract void fatalf(java.lang.Throwable, java.lang.String, java.lang.Object...);

  public abstract void fatalf(java.lang.Throwable, java.lang.String, java.lang.Object);

  public abstract void fatalf(java.lang.Throwable, java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void fatalf(java.lang.Throwable, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

  public abstract void log(org.jboss.logging.Logger$Level, java.lang.Object);

  public abstract void log(org.jboss.logging.Logger$Level, java.lang.Object, java.lang.Throwable);

  public abstract void log(org.jboss.logging.Logger$Level, java.lang.String, java.lang.Object, java.lang.Throwable);

  public abstract void log(java.lang.String, org.jboss.logging.Logger$Level, java.lang.Object, java.lang.Object[], java.lang.Throwable);

  public abstract void logv(org.jboss.logging.Logger$Level, java.lang.String, java.lang.Object...);

  public abstract void logv(org.jboss.logging.Logger$Level, java.lang.String, java.lang.Object);

  public abstract void logv(org.jboss.logging.Logger$Level, java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void logv(org.jboss.logging.Logger$Level, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

  public abstract void logv(org.jboss.logging.Logger$Level, java.lang.Throwable, java.lang.String, java.lang.Object...);

  public abstract void logv(org.jboss.logging.Logger$Level, java.lang.Throwable, java.lang.String, java.lang.Object);

  public abstract void logv(org.jboss.logging.Logger$Level, java.lang.Throwable, java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void logv(org.jboss.logging.Logger$Level, java.lang.Throwable, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

  public abstract void logv(java.lang.String, org.jboss.logging.Logger$Level, java.lang.Throwable, java.lang.String, java.lang.Object...);

  public abstract void logv(java.lang.String, org.jboss.logging.Logger$Level, java.lang.Throwable, java.lang.String, java.lang.Object);

  public abstract void logv(java.lang.String, org.jboss.logging.Logger$Level, java.lang.Throwable, java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void logv(java.lang.String, org.jboss.logging.Logger$Level, java.lang.Throwable, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

  public abstract void logf(org.jboss.logging.Logger$Level, java.lang.String, java.lang.Object...);

  public abstract void logf(org.jboss.logging.Logger$Level, java.lang.String, java.lang.Object);

  public abstract void logf(org.jboss.logging.Logger$Level, java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void logf(org.jboss.logging.Logger$Level, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

  public abstract void logf(org.jboss.logging.Logger$Level, java.lang.Throwable, java.lang.String, java.lang.Object...);

  public abstract void logf(org.jboss.logging.Logger$Level, java.lang.Throwable, java.lang.String, java.lang.Object);

  public abstract void logf(org.jboss.logging.Logger$Level, java.lang.Throwable, java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void logf(org.jboss.logging.Logger$Level, java.lang.Throwable, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

  public abstract void logf(java.lang.String, org.jboss.logging.Logger$Level, java.lang.Throwable, java.lang.String, java.lang.Object);

  public abstract void logf(java.lang.String, org.jboss.logging.Logger$Level, java.lang.Throwable, java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void logf(java.lang.String, org.jboss.logging.Logger$Level, java.lang.Throwable, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

  public abstract void logf(java.lang.String, org.jboss.logging.Logger$Level, java.lang.Throwable, java.lang.String, java.lang.Object...);
}
