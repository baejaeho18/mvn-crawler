Compiled from "Log4jLogger.java"
final class org.jboss.logging.Log4jLogger extends org.jboss.logging.Logger {
  private static final long serialVersionUID;

  private final org.apache.log4j.Logger logger;

  org.jboss.logging.Log4jLogger(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/jboss/logging/Logger."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: aload_1
       7: invokestatic  #2                  // Method org/apache/log4j/Logger.getLogger:(Ljava/lang/String;)Lorg/apache/log4j/Logger;
      10: putfield      #3                  // Field logger:Lorg/apache/log4j/Logger;
      13: return

  public boolean isEnabled(org.jboss.logging.Logger$Level);
    Code:
       0: aload_1
       1: invokestatic  #4                  // Method translate:(Lorg/jboss/logging/Logger$Level;)Lorg/apache/log4j/Level;
       4: astore_2
       5: aload_0
       6: getfield      #3                  // Field logger:Lorg/apache/log4j/Logger;
       9: aload_2
      10: invokevirtual #5                  // Method org/apache/log4j/Logger.isEnabledFor:(Lorg/apache/log4j/Priority;)Z
      13: ifeq          34
      16: aload_2
      17: aload_0
      18: getfield      #3                  // Field logger:Lorg/apache/log4j/Logger;
      21: invokevirtual #6                  // Method org/apache/log4j/Logger.getEffectiveLevel:()Lorg/apache/log4j/Level;
      24: invokevirtual #7                  // Method org/apache/log4j/Level.isGreaterOrEqual:(Lorg/apache/log4j/Priority;)Z
      27: ifeq          34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: ireturn

  protected void doLog(org.jboss.logging.Logger$Level, java.lang.String, java.lang.Object, java.lang.Object[], java.lang.Throwable);
    Code:
       0: aload_1
       1: invokestatic  #4                  // Method translate:(Lorg/jboss/logging/Logger$Level;)Lorg/apache/log4j/Level;
       4: astore        6
       6: aload_0
       7: getfield      #3                  // Field logger:Lorg/apache/log4j/Logger;
      10: aload         6
      12: invokevirtual #5                  // Method org/apache/log4j/Logger.isEnabledFor:(Lorg/apache/log4j/Priority;)Z
      15: ifeq          59
      18: aload_0
      19: getfield      #3                  // Field logger:Lorg/apache/log4j/Logger;
      22: aload_2
      23: aload         6
      25: aload         4
      27: ifnull        36
      30: aload         4
      32: arraylength
      33: ifne          40
      36: aload_3
      37: goto          49
      40: aload_3
      41: invokestatic  #8                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      44: aload         4
      46: invokestatic  #9                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      49: aload         5
      51: invokevirtual #10                 // Method org/apache/log4j/Logger.log:(Ljava/lang/String;Lorg/apache/log4j/Priority;Ljava/lang/Object;Ljava/lang/Throwable;)V
      54: goto          59
      57: astore        7
      59: return
    Exception table:
       from    to  target type
          18    54    57   Class java/lang/Throwable

  protected void doLogf(org.jboss.logging.Logger$Level, java.lang.String, java.lang.String, java.lang.Object[], java.lang.Throwable);
    Code:
       0: aload_1
       1: invokestatic  #4                  // Method translate:(Lorg/jboss/logging/Logger$Level;)Lorg/apache/log4j/Level;
       4: astore        6
       6: aload_0
       7: getfield      #3                  // Field logger:Lorg/apache/log4j/Logger;
      10: aload         6
      12: invokevirtual #5                  // Method org/apache/log4j/Logger.isEnabledFor:(Lorg/apache/log4j/Priority;)Z
      15: ifeq          57
      18: aload_0
      19: getfield      #3                  // Field logger:Lorg/apache/log4j/Logger;
      22: aload_2
      23: aload         6
      25: aload         4
      27: ifnonnull     41
      30: aload_3
      31: iconst_0
      32: anewarray     #12                 // class java/lang/Object
      35: invokestatic  #13                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      38: goto          47
      41: aload_3
      42: aload         4
      44: invokestatic  #13                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      47: aload         5
      49: invokevirtual #10                 // Method org/apache/log4j/Logger.log:(Ljava/lang/String;Lorg/apache/log4j/Priority;Ljava/lang/Object;Ljava/lang/Throwable;)V
      52: goto          57
      55: astore        7
      57: return
    Exception table:
       from    to  target type
          18    52    55   Class java/lang/Throwable

  private static org.apache.log4j.Level translate(org.jboss.logging.Logger$Level);
    Code:
       0: aload_0
       1: getstatic     #14                 // Field org/jboss/logging/Logger$Level.TRACE:Lorg/jboss/logging/Logger$Level;
       4: if_acmpne     11
       7: getstatic     #15                 // Field org/apache/log4j/Level.TRACE:Lorg/apache/log4j/Level;
      10: areturn
      11: aload_0
      12: getstatic     #16                 // Field org/jboss/logging/Logger$Level.DEBUG:Lorg/jboss/logging/Logger$Level;
      15: if_acmpne     22
      18: getstatic     #17                 // Field org/apache/log4j/Level.DEBUG:Lorg/apache/log4j/Level;
      21: areturn
      22: aload_0
      23: invokestatic  #18                 // Method infoOrHigher:(Lorg/jboss/logging/Logger$Level;)Lorg/apache/log4j/Level;
      26: areturn

  private static org.apache.log4j.Level infoOrHigher(org.jboss.logging.Logger$Level);
    Code:
       0: aload_0
       1: getstatic     #19                 // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
       4: if_acmpne     11
       7: getstatic     #20                 // Field org/apache/log4j/Level.INFO:Lorg/apache/log4j/Level;
      10: areturn
      11: aload_0
      12: getstatic     #21                 // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      15: if_acmpne     22
      18: getstatic     #22                 // Field org/apache/log4j/Level.WARN:Lorg/apache/log4j/Level;
      21: areturn
      22: aload_0
      23: getstatic     #23                 // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      26: if_acmpne     33
      29: getstatic     #24                 // Field org/apache/log4j/Level.ERROR:Lorg/apache/log4j/Level;
      32: areturn
      33: aload_0
      34: getstatic     #25                 // Field org/jboss/logging/Logger$Level.FATAL:Lorg/jboss/logging/Logger$Level;
      37: if_acmpne     44
      40: getstatic     #26                 // Field org/apache/log4j/Level.FATAL:Lorg/apache/log4j/Level;
      43: areturn
      44: getstatic     #27                 // Field org/apache/log4j/Level.ALL:Lorg/apache/log4j/Level;
      47: areturn
}
