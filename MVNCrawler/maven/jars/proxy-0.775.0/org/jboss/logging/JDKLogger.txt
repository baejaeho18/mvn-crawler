Compiled from "JDKLogger.java"
final class org.jboss.logging.JDKLogger extends org.jboss.logging.Logger {
  private static final long serialVersionUID;

  private final transient java.util.logging.Logger logger;

  public org.jboss.logging.JDKLogger(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/jboss/logging/Logger."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: aload_1
       7: invokestatic  #2                  // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
      10: putfield      #3                  // Field logger:Ljava/util/logging/Logger;
      13: return

  protected void doLog(org.jboss.logging.Logger$Level, java.lang.String, java.lang.Object, java.lang.Object[], java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #4                  // Method isEnabled:(Lorg/jboss/logging/Logger$Level;)Z
       5: ifeq          92
       8: new           #5                  // class org/jboss/logging/JBossLogRecord
      11: dup
      12: aload_1
      13: invokestatic  #6                  // Method translate:(Lorg/jboss/logging/Logger$Level;)Ljava/util/logging/Level;
      16: aload_3
      17: invokestatic  #7                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      20: aload_2
      21: invokespecial #8                  // Method org/jboss/logging/JBossLogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;)V
      24: astore        6
      26: aload         5
      28: ifnull        38
      31: aload         6
      33: aload         5
      35: invokevirtual #9                  // Method org/jboss/logging/JBossLogRecord.setThrown:(Ljava/lang/Throwable;)V
      38: aload         6
      40: aload_0
      41: invokevirtual #10                 // Method getName:()Ljava/lang/String;
      44: invokevirtual #11                 // Method org/jboss/logging/JBossLogRecord.setLoggerName:(Ljava/lang/String;)V
      47: aload         6
      49: aload         4
      51: invokevirtual #12                 // Method org/jboss/logging/JBossLogRecord.setParameters:([Ljava/lang/Object;)V
      54: aload         6
      56: aload_0
      57: getfield      #3                  // Field logger:Ljava/util/logging/Logger;
      60: invokevirtual #13                 // Method java/util/logging/Logger.getResourceBundleName:()Ljava/lang/String;
      63: invokevirtual #14                 // Method org/jboss/logging/JBossLogRecord.setResourceBundleName:(Ljava/lang/String;)V
      66: aload         6
      68: aload_0
      69: getfield      #3                  // Field logger:Ljava/util/logging/Logger;
      72: invokevirtual #15                 // Method java/util/logging/Logger.getResourceBundle:()Ljava/util/ResourceBundle;
      75: invokevirtual #16                 // Method org/jboss/logging/JBossLogRecord.setResourceBundle:(Ljava/util/ResourceBundle;)V
      78: aload_0
      79: getfield      #3                  // Field logger:Ljava/util/logging/Logger;
      82: aload         6
      84: invokevirtual #17                 // Method java/util/logging/Logger.log:(Ljava/util/logging/LogRecord;)V
      87: goto          92
      90: astore        6
      92: return
    Exception table:
       from    to  target type
           8    87    90   Class java/lang/Throwable

  protected void doLogf(org.jboss.logging.Logger$Level, java.lang.String, java.lang.String, java.lang.Object[], java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #4                  // Method isEnabled:(Lorg/jboss/logging/Logger$Level;)Z
       5: ifeq          133
       8: aload_0
       9: getfield      #3                  // Field logger:Ljava/util/logging/Logger;
      12: invokevirtual #15                 // Method java/util/logging/Logger.getResourceBundle:()Ljava/util/ResourceBundle;
      15: astore        6
      17: aload         6
      19: ifnull        34
      22: aload         6
      24: aload_3
      25: invokevirtual #19                 // Method java/util/ResourceBundle.getString:(Ljava/lang/String;)Ljava/lang/String;
      28: astore_3
      29: goto          34
      32: astore        7
      34: aload         4
      36: ifnonnull     50
      39: aload_3
      40: iconst_0
      41: anewarray     #21                 // class java/lang/Object
      44: invokestatic  #22                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      47: goto          56
      50: aload_3
      51: aload         4
      53: invokestatic  #22                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      56: astore        7
      58: new           #5                  // class org/jboss/logging/JBossLogRecord
      61: dup
      62: aload_1
      63: invokestatic  #6                  // Method translate:(Lorg/jboss/logging/Logger$Level;)Ljava/util/logging/Level;
      66: aload         7
      68: aload_2
      69: invokespecial #8                  // Method org/jboss/logging/JBossLogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;)V
      72: astore        8
      74: aload         5
      76: ifnull        86
      79: aload         8
      81: aload         5
      83: invokevirtual #9                  // Method org/jboss/logging/JBossLogRecord.setThrown:(Ljava/lang/Throwable;)V
      86: aload         8
      88: aload_0
      89: invokevirtual #10                 // Method getName:()Ljava/lang/String;
      92: invokevirtual #11                 // Method org/jboss/logging/JBossLogRecord.setLoggerName:(Ljava/lang/String;)V
      95: aload         8
      97: aload_0
      98: getfield      #3                  // Field logger:Ljava/util/logging/Logger;
     101: invokevirtual #13                 // Method java/util/logging/Logger.getResourceBundleName:()Ljava/lang/String;
     104: invokevirtual #14                 // Method org/jboss/logging/JBossLogRecord.setResourceBundleName:(Ljava/lang/String;)V
     107: aload         8
     109: aconst_null
     110: invokevirtual #16                 // Method org/jboss/logging/JBossLogRecord.setResourceBundle:(Ljava/util/ResourceBundle;)V
     113: aload         8
     115: aconst_null
     116: invokevirtual #12                 // Method org/jboss/logging/JBossLogRecord.setParameters:([Ljava/lang/Object;)V
     119: aload_0
     120: getfield      #3                  // Field logger:Ljava/util/logging/Logger;
     123: aload         8
     125: invokevirtual #17                 // Method java/util/logging/Logger.log:(Ljava/util/logging/LogRecord;)V
     128: goto          133
     131: astore        6
     133: return
    Exception table:
       from    to  target type
          22    29    32   Class java/util/MissingResourceException
           8   128   131   Class java/lang/Throwable

  private static java.util.logging.Level translate(org.jboss.logging.Logger$Level);
    Code:
       0: aload_0
       1: getstatic     #23                 // Field org/jboss/logging/Logger$Level.TRACE:Lorg/jboss/logging/Logger$Level;
       4: if_acmpne     11
       7: getstatic     #24                 // Field org/jboss/logging/JDKLevel.TRACE:Lorg/jboss/logging/JDKLevel;
      10: areturn
      11: aload_0
      12: getstatic     #25                 // Field org/jboss/logging/Logger$Level.DEBUG:Lorg/jboss/logging/Logger$Level;
      15: if_acmpne     22
      18: getstatic     #26                 // Field org/jboss/logging/JDKLevel.DEBUG:Lorg/jboss/logging/JDKLevel;
      21: areturn
      22: aload_0
      23: invokestatic  #27                 // Method infoOrHigher:(Lorg/jboss/logging/Logger$Level;)Ljava/util/logging/Level;
      26: areturn

  private static java.util.logging.Level infoOrHigher(org.jboss.logging.Logger$Level);
    Code:
       0: aload_0
       1: getstatic     #28                 // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
       4: if_acmpne     11
       7: getstatic     #29                 // Field org/jboss/logging/JDKLevel.INFO:Lorg/jboss/logging/JDKLevel;
      10: areturn
      11: aload_0
      12: getstatic     #30                 // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      15: if_acmpne     22
      18: getstatic     #31                 // Field org/jboss/logging/JDKLevel.WARN:Lorg/jboss/logging/JDKLevel;
      21: areturn
      22: aload_0
      23: getstatic     #32                 // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      26: if_acmpne     33
      29: getstatic     #33                 // Field org/jboss/logging/JDKLevel.ERROR:Lorg/jboss/logging/JDKLevel;
      32: areturn
      33: aload_0
      34: getstatic     #34                 // Field org/jboss/logging/Logger$Level.FATAL:Lorg/jboss/logging/Logger$Level;
      37: if_acmpne     44
      40: getstatic     #35                 // Field org/jboss/logging/JDKLevel.FATAL:Lorg/jboss/logging/JDKLevel;
      43: areturn
      44: getstatic     #36                 // Field org/jboss/logging/JDKLevel.ALL:Ljava/util/logging/Level;
      47: areturn

  public boolean isEnabled(org.jboss.logging.Logger$Level);
    Code:
       0: aload_0
       1: getfield      #3                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: invokestatic  #6                  // Method translate:(Lorg/jboss/logging/Logger$Level;)Ljava/util/logging/Level;
       8: invokevirtual #37                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      11: ireturn
}
