Compiled from "EnhancedQueueExecutor.java"
final class org.jboss.threads.EnhancedQueueExecutor$MXBeanImpl implements org.jboss.threads.management.StandardThreadPoolMXBean {
  final org.jboss.threads.EnhancedQueueExecutor this$0;

  org.jboss.threads.EnhancedQueueExecutor$MXBeanImpl(org.jboss.threads.EnhancedQueueExecutor);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/jboss/threads/EnhancedQueueExecutor;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public float getGrowthResistance();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/jboss/threads/EnhancedQueueExecutor;
       4: invokevirtual #3                  // Method org/jboss/threads/EnhancedQueueExecutor.getGrowthResistance:()F
       7: freturn

  public void setGrowthResistance(float);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/jboss/threads/EnhancedQueueExecutor;
       4: fload_1
       5: invokevirtual #4                  // Method org/jboss/threads/EnhancedQueueExecutor.setGrowthResistance:(F)V
       8: return

  public boolean isGrowthResistanceSupported();
    Code:
       0: iconst_1
       1: ireturn

  public int getCorePoolSize();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/jboss/threads/EnhancedQueueExecutor;
       4: invokevirtual #5                  // Method org/jboss/threads/EnhancedQueueExecutor.getCorePoolSize:()I
       7: ireturn

  public void setCorePoolSize(int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/jboss/threads/EnhancedQueueExecutor;
       4: iload_1
       5: invokevirtual #6                  // Method org/jboss/threads/EnhancedQueueExecutor.setCorePoolSize:(I)V
       8: return

  public boolean isCorePoolSizeSupported();
    Code:
       0: iconst_1
       1: ireturn

  public boolean prestartCoreThread();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/jboss/threads/EnhancedQueueExecutor;
       4: invokevirtual #7                  // Method org/jboss/threads/EnhancedQueueExecutor.prestartCoreThread:()Z
       7: ireturn

  public int prestartAllCoreThreads();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/jboss/threads/EnhancedQueueExecutor;
       4: invokevirtual #8                  // Method org/jboss/threads/EnhancedQueueExecutor.prestartAllCoreThreads:()I
       7: ireturn

  public boolean isCoreThreadPrestartSupported();
    Code:
       0: iconst_1
       1: ireturn

  public int getMaximumPoolSize();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/jboss/threads/EnhancedQueueExecutor;
       4: invokevirtual #9                  // Method org/jboss/threads/EnhancedQueueExecutor.getMaximumPoolSize:()I
       7: ireturn

  public void setMaximumPoolSize(int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/jboss/threads/EnhancedQueueExecutor;
       4: iload_1
       5: invokevirtual #10                 // Method org/jboss/threads/EnhancedQueueExecutor.setMaximumPoolSize:(I)V
       8: return

  public int getPoolSize();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/jboss/threads/EnhancedQueueExecutor;
       4: invokevirtual #11                 // Method org/jboss/threads/EnhancedQueueExecutor.getPoolSize:()I
       7: ireturn

  public int getLargestPoolSize();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/jboss/threads/EnhancedQueueExecutor;
       4: invokevirtual #12                 // Method org/jboss/threads/EnhancedQueueExecutor.getLargestPoolSize:()I
       7: ireturn

  public int getActiveCount();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/jboss/threads/EnhancedQueueExecutor;
       4: invokevirtual #13                 // Method org/jboss/threads/EnhancedQueueExecutor.getActiveCount:()I
       7: ireturn

  public boolean isAllowCoreThreadTimeOut();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/jboss/threads/EnhancedQueueExecutor;
       4: invokevirtual #14                 // Method org/jboss/threads/EnhancedQueueExecutor.allowsCoreThreadTimeOut:()Z
       7: ireturn

  public void setAllowCoreThreadTimeOut(boolean);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/jboss/threads/EnhancedQueueExecutor;
       4: iload_1
       5: invokevirtual #15                 // Method org/jboss/threads/EnhancedQueueExecutor.allowCoreThreadTimeOut:(Z)V
       8: return

  public long getKeepAliveTimeSeconds();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/jboss/threads/EnhancedQueueExecutor;
       4: invokevirtual #16                 // Method org/jboss/threads/EnhancedQueueExecutor.getKeepAliveTime:()Ljava/time/Duration;
       7: invokevirtual #17                 // Method java/time/Duration.getSeconds:()J
      10: lreturn

  public void setKeepAliveTimeSeconds(long);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/jboss/threads/EnhancedQueueExecutor;
       4: lload_1
       5: getstatic     #18                 // Field java/time/temporal/ChronoUnit.SECONDS:Ljava/time/temporal/ChronoUnit;
       8: invokestatic  #19                 // Method java/time/Duration.of:(JLjava/time/temporal/TemporalUnit;)Ljava/time/Duration;
      11: invokevirtual #20                 // Method org/jboss/threads/EnhancedQueueExecutor.setKeepAliveTime:(Ljava/time/Duration;)V
      14: return

  public int getMaximumQueueSize();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/jboss/threads/EnhancedQueueExecutor;
       4: invokevirtual #21                 // Method org/jboss/threads/EnhancedQueueExecutor.getMaximumQueueSize:()I
       7: ireturn

  public void setMaximumQueueSize(int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/jboss/threads/EnhancedQueueExecutor;
       4: iload_1
       5: invokevirtual #22                 // Method org/jboss/threads/EnhancedQueueExecutor.setMaximumQueueSize:(I)V
       8: return

  public int getQueueSize();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/jboss/threads/EnhancedQueueExecutor;
       4: invokevirtual #23                 // Method org/jboss/threads/EnhancedQueueExecutor.getQueueSize:()I
       7: ireturn

  public int getLargestQueueSize();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/jboss/threads/EnhancedQueueExecutor;
       4: invokevirtual #24                 // Method org/jboss/threads/EnhancedQueueExecutor.getLargestQueueSize:()I
       7: ireturn

  public boolean isQueueBounded();
    Code:
       0: getstatic     #25                 // Field org/jboss/threads/EnhancedQueueExecutor.NO_QUEUE_LIMIT:Z
       3: ifne          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: ireturn

  public boolean isQueueSizeModifiable();
    Code:
       0: getstatic     #25                 // Field org/jboss/threads/EnhancedQueueExecutor.NO_QUEUE_LIMIT:Z
       3: ifne          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: ireturn

  public boolean isShutdown();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/jboss/threads/EnhancedQueueExecutor;
       4: invokevirtual #26                 // Method org/jboss/threads/EnhancedQueueExecutor.isShutdown:()Z
       7: ireturn

  public boolean isTerminating();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/jboss/threads/EnhancedQueueExecutor;
       4: invokevirtual #27                 // Method org/jboss/threads/EnhancedQueueExecutor.isTerminating:()Z
       7: ireturn

  public boolean isTerminated();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/jboss/threads/EnhancedQueueExecutor;
       4: invokevirtual #28                 // Method org/jboss/threads/EnhancedQueueExecutor.isTerminated:()Z
       7: ireturn

  public long getSubmittedTaskCount();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/jboss/threads/EnhancedQueueExecutor;
       4: invokevirtual #29                 // Method org/jboss/threads/EnhancedQueueExecutor.getSubmittedTaskCount:()J
       7: lreturn

  public long getRejectedTaskCount();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/jboss/threads/EnhancedQueueExecutor;
       4: invokevirtual #30                 // Method org/jboss/threads/EnhancedQueueExecutor.getRejectedTaskCount:()J
       7: lreturn

  public long getCompletedTaskCount();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/jboss/threads/EnhancedQueueExecutor;
       4: invokevirtual #31                 // Method org/jboss/threads/EnhancedQueueExecutor.getCompletedTaskCount:()J
       7: lreturn

  public long getSpinMissCount();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/jboss/threads/EnhancedQueueExecutor;
       4: invokestatic  #32                 // Method org/jboss/threads/EnhancedQueueExecutor.access$000:(Lorg/jboss/threads/EnhancedQueueExecutor;)Ljava/util/concurrent/atomic/LongAdder;
       7: invokevirtual #33                 // Method java/util/concurrent/atomic/LongAdder.longValue:()J
      10: lreturn
}
