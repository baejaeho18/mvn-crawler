Compiled from "EnhancedQueueExecutor.java"
public final class org.jboss.threads.EnhancedQueueExecutor$Builder {
  private java.util.concurrent.ThreadFactory threadFactory;

  private java.lang.Runnable terminationTask;

  private java.util.concurrent.Executor handoffExecutor;

  private java.lang.Thread$UncaughtExceptionHandler exceptionHandler;

  private int coreSize;

  private int maxSize;

  private java.time.Duration keepAliveTime;

  private float growthResistance;

  private boolean allowCoreTimeOut;

  private int maxQueueSize;

  private boolean registerMBean;

  private java.lang.String mBeanName;

  private org.jboss.threads.ContextHandler<?> contextHandler;

  public org.jboss.threads.EnhancedQueueExecutor$Builder();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #3                  // Method java/util/concurrent/Executors.defaultThreadFactory:()Ljava/util/concurrent/ThreadFactory;
       8: putfield      #4                  // Field threadFactory:Ljava/util/concurrent/ThreadFactory;
      11: aload_0
      12: invokestatic  #5                  // Method org/jboss/threads/NullRunnable.getInstance:()Lorg/jboss/threads/NullRunnable;
      15: putfield      #6                  // Field terminationTask:Ljava/lang/Runnable;
      18: aload_0
      19: getstatic     #7                  // Field org/jboss/threads/EnhancedQueueExecutor.DEFAULT_HANDLER:Ljava/util/concurrent/Executor;
      22: putfield      #8                  // Field handoffExecutor:Ljava/util/concurrent/Executor;
      25: aload_0
      26: invokestatic  #9                  // Method org/jboss/threads/JBossExecutors.loggingExceptionHandler:()Ljava/lang/Thread$UncaughtExceptionHandler;
      29: putfield      #10                 // Field exceptionHandler:Ljava/lang/Thread$UncaughtExceptionHandler;
      32: aload_0
      33: bipush        16
      35: putfield      #11                 // Field coreSize:I
      38: aload_0
      39: bipush        64
      41: putfield      #12                 // Field maxSize:I
      44: aload_0
      45: ldc2_w        #13                 // long 30l
      48: invokestatic  #15                 // Method java/time/Duration.ofSeconds:(J)Ljava/time/Duration;
      51: putfield      #16                 // Field keepAliveTime:Ljava/time/Duration;
      54: aload_0
      55: ldc           #18                 // int 2147483647
      57: putfield      #19                 // Field maxQueueSize:I
      60: aload_0
      61: getstatic     #20                 // Field org/jboss/threads/EnhancedQueueExecutor.REGISTER_MBEAN:Z
      64: putfield      #21                 // Field registerMBean:Z
      67: aload_0
      68: getstatic     #22                 // Field org/jboss/threads/ContextHandler.NONE:Lorg/jboss/threads/ContextHandler;
      71: putfield      #23                 // Field contextHandler:Lorg/jboss/threads/ContextHandler;
      74: return

  public java.util.concurrent.ThreadFactory getThreadFactory();
    Code:
       0: aload_0
       1: getfield      #4                  // Field threadFactory:Ljava/util/concurrent/ThreadFactory;
       4: areturn

  public org.jboss.threads.EnhancedQueueExecutor$Builder setThreadFactory(java.util.concurrent.ThreadFactory);
    Code:
       0: ldc           #24                 // String threadFactory
       2: aload_1
       3: invokestatic  #25                 // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: putfield      #4                  // Field threadFactory:Ljava/util/concurrent/ThreadFactory;
      12: aload_0
      13: areturn

  public java.lang.Runnable getTerminationTask();
    Code:
       0: aload_0
       1: getfield      #6                  // Field terminationTask:Ljava/lang/Runnable;
       4: areturn

  public org.jboss.threads.EnhancedQueueExecutor$Builder setTerminationTask(java.lang.Runnable);
    Code:
       0: ldc           #26                 // String terminationTask
       2: aload_1
       3: invokestatic  #25                 // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: putfield      #6                  // Field terminationTask:Ljava/lang/Runnable;
      12: aload_0
      13: areturn

  public int getCorePoolSize();
    Code:
       0: aload_0
       1: getfield      #11                 // Field coreSize:I
       4: ireturn

  public org.jboss.threads.EnhancedQueueExecutor$Builder setCorePoolSize(int);
    Code:
       0: ldc           #27                 // String coreSize
       2: iconst_0
       3: iload_1
       4: invokestatic  #28                 // Method org/wildfly/common/Assert.checkMinimumParameter:(Ljava/lang/String;II)V
       7: ldc           #27                 // String coreSize
       9: ldc2_w        #29                 // long 1048575l
      12: iload_1
      13: i2l
      14: invokestatic  #31                 // Method org/wildfly/common/Assert.checkMaximumParameter:(Ljava/lang/String;JJ)V
      17: aload_0
      18: iload_1
      19: putfield      #11                 // Field coreSize:I
      22: aload_0
      23: areturn

  public int getMaximumPoolSize();
    Code:
       0: aload_0
       1: getfield      #12                 // Field maxSize:I
       4: ireturn

  public org.jboss.threads.EnhancedQueueExecutor$Builder setMaximumPoolSize(int);
    Code:
       0: ldc           #32                 // String maxSize
       2: iconst_0
       3: iload_1
       4: invokestatic  #28                 // Method org/wildfly/common/Assert.checkMinimumParameter:(Ljava/lang/String;II)V
       7: ldc           #32                 // String maxSize
       9: ldc2_w        #29                 // long 1048575l
      12: iload_1
      13: i2l
      14: invokestatic  #31                 // Method org/wildfly/common/Assert.checkMaximumParameter:(Ljava/lang/String;JJ)V
      17: aload_0
      18: iload_1
      19: putfield      #12                 // Field maxSize:I
      22: aload_0
      23: areturn

  public java.time.Duration getKeepAliveTime();
    Code:
       0: aload_0
       1: getfield      #16                 // Field keepAliveTime:Ljava/time/Duration;
       4: areturn

  public long getKeepAliveTime(java.util.concurrent.TimeUnit);
    Code:
       0: ldc           #33                 // String keepAliveUnits
       2: aload_1
       3: invokestatic  #25                 // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_1
       8: aload_0
       9: getfield      #16                 // Field keepAliveTime:Ljava/time/Duration;
      12: invokevirtual #34                 // Method java/time/Duration.getSeconds:()J
      15: getstatic     #35                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      18: invokevirtual #36                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      21: lstore_2
      22: aload_1
      23: aload_0
      24: getfield      #16                 // Field keepAliveTime:Ljava/time/Duration;
      27: invokevirtual #37                 // Method java/time/Duration.getNano:()I
      30: i2l
      31: getstatic     #38                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      34: invokevirtual #36                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      37: lstore        4
      39: lload_2
      40: lload         4
      42: ladd
      43: lstore        6
      45: lload         6
      47: lconst_0
      48: lcmp
      49: ifge          58
      52: ldc2_w        #40                 // long 9223372036854775807l
      55: goto          60
      58: lload         6
      60: lreturn

  public org.jboss.threads.EnhancedQueueExecutor$Builder setKeepAliveTime(java.time.Duration);
    Code:
       0: ldc           #42                 // String keepAliveTime
       2: aload_1
       3: invokestatic  #25                 // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: putfield      #16                 // Field keepAliveTime:Ljava/time/Duration;
      12: aload_0
      13: areturn

  public org.jboss.threads.EnhancedQueueExecutor$Builder setKeepAliveTime(long, java.util.concurrent.TimeUnit);
    Code:
       0: ldc           #42                 // String keepAliveTime
       2: lconst_1
       3: lload_1
       4: invokestatic  #43                 // Method org/wildfly/common/Assert.checkMinimumParameter:(Ljava/lang/String;JJ)V
       7: ldc           #33                 // String keepAliveUnits
       9: aload_3
      10: invokestatic  #25                 // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: lload_1
      16: aload_3
      17: invokestatic  #44                 // Method org/jboss/threads/JDKSpecific.timeToTemporal:(Ljava/util/concurrent/TimeUnit;)Ljava/time/temporal/TemporalUnit;
      20: invokestatic  #45                 // Method java/time/Duration.of:(JLjava/time/temporal/TemporalUnit;)Ljava/time/Duration;
      23: putfield      #16                 // Field keepAliveTime:Ljava/time/Duration;
      26: aload_0
      27: areturn

  public float getGrowthResistance();
    Code:
       0: aload_0
       1: getfield      #46                 // Field growthResistance:F
       4: freturn

  public org.jboss.threads.EnhancedQueueExecutor$Builder setGrowthResistance(float);
    Code:
       0: ldc           #47                 // String growthResistance
       2: fconst_0
       3: fload_1
       4: invokestatic  #48                 // Method org/wildfly/common/Assert.checkMinimumParameter:(Ljava/lang/String;FF)V
       7: ldc           #47                 // String growthResistance
       9: fconst_1
      10: fload_1
      11: invokestatic  #49                 // Method org/wildfly/common/Assert.checkMaximumParameter:(Ljava/lang/String;FF)V
      14: aload_0
      15: fload_1
      16: putfield      #46                 // Field growthResistance:F
      19: aload_0
      20: areturn

  public boolean allowsCoreThreadTimeOut();
    Code:
       0: aload_0
       1: getfield      #50                 // Field allowCoreTimeOut:Z
       4: ireturn

  public org.jboss.threads.EnhancedQueueExecutor$Builder allowCoreThreadTimeOut(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #50                 // Field allowCoreTimeOut:Z
       5: aload_0
       6: areturn

  public int getMaximumQueueSize();
    Code:
       0: aload_0
       1: getfield      #19                 // Field maxQueueSize:I
       4: ireturn

  public org.jboss.threads.EnhancedQueueExecutor$Builder setMaximumQueueSize(int);
    Code:
       0: ldc           #51                 // String maxQueueSize
       2: iconst_0
       3: iload_1
       4: invokestatic  #28                 // Method org/wildfly/common/Assert.checkMinimumParameter:(Ljava/lang/String;II)V
       7: ldc           #51                 // String maxQueueSize
       9: ldc           #18                 // int 2147483647
      11: iload_1
      12: invokestatic  #52                 // Method org/wildfly/common/Assert.checkMaximumParameter:(Ljava/lang/String;II)V
      15: aload_0
      16: iload_1
      17: putfield      #19                 // Field maxQueueSize:I
      20: aload_0
      21: areturn

  public java.util.concurrent.Executor getHandoffExecutor();
    Code:
       0: aload_0
       1: getfield      #8                  // Field handoffExecutor:Ljava/util/concurrent/Executor;
       4: areturn

  public org.jboss.threads.EnhancedQueueExecutor$Builder setHandoffExecutor(java.util.concurrent.Executor);
    Code:
       0: ldc           #53                 // String handoffExecutor
       2: aload_1
       3: invokestatic  #25                 // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: putfield      #8                  // Field handoffExecutor:Ljava/util/concurrent/Executor;
      12: aload_0
      13: areturn

  public java.lang.Thread$UncaughtExceptionHandler getExceptionHandler();
    Code:
       0: aload_0
       1: getfield      #10                 // Field exceptionHandler:Ljava/lang/Thread$UncaughtExceptionHandler;
       4: areturn

  public org.jboss.threads.EnhancedQueueExecutor$Builder setExceptionHandler(java.lang.Thread$UncaughtExceptionHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field exceptionHandler:Ljava/lang/Thread$UncaughtExceptionHandler;
       5: aload_0
       6: areturn

  public org.jboss.threads.EnhancedQueueExecutor build();
    Code:
       0: new           #1                  // class org/jboss/threads/EnhancedQueueExecutor
       3: dup
       4: aload_0
       5: invokespecial #54                 // Method org/jboss/threads/EnhancedQueueExecutor."<init>":(Lorg/jboss/threads/EnhancedQueueExecutor$Builder;)V
       8: areturn

  public boolean isRegisterMBean();
    Code:
       0: aload_0
       1: getfield      #21                 // Field registerMBean:Z
       4: ireturn

  public org.jboss.threads.EnhancedQueueExecutor$Builder setRegisterMBean(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #21                 // Field registerMBean:Z
       5: aload_0
       6: areturn

  public java.lang.String getMBeanName();
    Code:
       0: aload_0
       1: getfield      #55                 // Field mBeanName:Ljava/lang/String;
       4: areturn

  public org.jboss.threads.EnhancedQueueExecutor$Builder setMBeanName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #55                 // Field mBeanName:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.jboss.threads.ContextHandler<?> getContextHandler();
    Code:
       0: aload_0
       1: getfield      #23                 // Field contextHandler:Lorg/jboss/threads/ContextHandler;
       4: areturn

  public org.jboss.threads.EnhancedQueueExecutor$Builder setContextHandler(org.jboss.threads.ContextHandler<?>);
    Code:
       0: ldc           #56                 // String contextHandler
       2: aload_1
       3: invokestatic  #25                 // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: putfield      #23                 // Field contextHandler:Lorg/jboss/threads/ContextHandler;
      12: aload_0
      13: areturn
}
