Compiled from "JBossThreadFactory.java"
public final class org.jboss.threads.JBossThreadFactory implements java.util.concurrent.ThreadFactory {
  private final java.lang.ThreadGroup threadGroup;

  private final java.lang.Boolean daemon;

  private final java.lang.Integer initialPriority;

  private final java.lang.Thread$UncaughtExceptionHandler uncaughtExceptionHandler;

  private final java.lang.Long stackSize;

  private final java.lang.String namePattern;

  private final java.util.concurrent.atomic.AtomicLong factoryThreadIndexSequence;

  private final long factoryIndex;

  private final java.security.AccessControlContext creatingContext;

  private static final java.util.concurrent.atomic.AtomicLong globalThreadIndexSequence;

  private static final java.util.concurrent.atomic.AtomicLong factoryIndexSequence;

  public org.jboss.threads.JBossThreadFactory(java.lang.ThreadGroup, java.lang.Boolean, java.lang.Integer, java.lang.String, java.lang.Thread$UncaughtExceptionHandler, java.lang.Long);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/concurrent/atomic/AtomicLong
       8: dup
       9: lconst_1
      10: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      13: putfield      #5                  // Field factoryThreadIndexSequence:Ljava/util/concurrent/atomic/AtomicLong;
      16: aload_1
      17: ifnonnull     45
      20: invokestatic  #6                  // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
      23: astore        7
      25: aload         7
      27: ifnull        38
      30: aload         7
      32: invokevirtual #7                  // Method java/lang/SecurityManager.getThreadGroup:()Ljava/lang/ThreadGroup;
      35: goto          44
      38: invokestatic  #8                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      41: invokevirtual #9                  // Method java/lang/Thread.getThreadGroup:()Ljava/lang/ThreadGroup;
      44: astore_1
      45: aload_0
      46: aload_1
      47: putfield      #10                 // Field threadGroup:Ljava/lang/ThreadGroup;
      50: aload_0
      51: aload_2
      52: putfield      #11                 // Field daemon:Ljava/lang/Boolean;
      55: aload_0
      56: aload_3
      57: putfield      #12                 // Field initialPriority:Ljava/lang/Integer;
      60: aload_0
      61: aload         5
      63: putfield      #13                 // Field uncaughtExceptionHandler:Ljava/lang/Thread$UncaughtExceptionHandler;
      66: aload_0
      67: aload         6
      69: putfield      #14                 // Field stackSize:Ljava/lang/Long;
      72: aload_0
      73: getstatic     #15                 // Field factoryIndexSequence:Ljava/util/concurrent/atomic/AtomicLong;
      76: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
      79: putfield      #17                 // Field factoryIndex:J
      82: aload         4
      84: ifnonnull     91
      87: ldc           #18                 // String pool-%f-thread-%t
      89: astore        4
      91: aload_0
      92: aload         4
      94: putfield      #19                 // Field namePattern:Ljava/lang/String;
      97: aload_0
      98: invokestatic  #20                 // Method java/security/AccessController.getContext:()Ljava/security/AccessControlContext;
     101: putfield      #21                 // Field creatingContext:Ljava/security/AccessControlContext;
     104: return

  public org.jboss.threads.JBossThreadFactory(java.lang.ThreadGroup, java.lang.Boolean, java.lang.Integer, java.lang.String, java.lang.Thread$UncaughtExceptionHandler, java.lang.Long, java.security.AccessControlContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokespecial #22                 // Method "<init>":(Ljava/lang/ThreadGroup;Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Thread$UncaughtExceptionHandler;Ljava/lang/Long;)V
      13: return

  public java.lang.Thread newThread(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #21                 // Field creatingContext:Ljava/security/AccessControlContext;
       4: dup
       5: astore_2
       6: ifnull        27
       9: new           #23                 // class org/jboss/threads/JBossThreadFactory$ThreadCreateAction
      12: dup
      13: aload_0
      14: aload_1
      15: aconst_null
      16: invokespecial #24                 // Method org/jboss/threads/JBossThreadFactory$ThreadCreateAction."<init>":(Lorg/jboss/threads/JBossThreadFactory;Ljava/lang/Runnable;Lorg/jboss/threads/JBossThreadFactory$1;)V
      19: aload_2
      20: invokestatic  #25                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;
      23: checkcast     #26                 // class java/lang/Thread
      26: areturn
      27: aload_0
      28: aload_1
      29: invokespecial #1                  // Method createThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;
      32: areturn

  private java.lang.Thread createThread(java.lang.Runnable);
    Code:
       0: new           #27                 // class org/jboss/threads/ThreadNameInfo
       3: dup
       4: getstatic     #28                 // Field globalThreadIndexSequence:Ljava/util/concurrent/atomic/AtomicLong;
       7: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
      10: aload_0
      11: getfield      #5                  // Field factoryThreadIndexSequence:Ljava/util/concurrent/atomic/AtomicLong;
      14: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
      17: aload_0
      18: getfield      #17                 // Field factoryIndex:J
      21: invokespecial #29                 // Method org/jboss/threads/ThreadNameInfo."<init>":(JJJ)V
      24: astore_2
      25: aload_0
      26: getfield      #14                 // Field stackSize:Ljava/lang/Long;
      29: ifnull        57
      32: new           #30                 // class org/jboss/threads/JBossThread
      35: dup
      36: aload_0
      37: getfield      #10                 // Field threadGroup:Ljava/lang/ThreadGroup;
      40: aload_1
      41: ldc           #31                 // String <new>
      43: aload_0
      44: getfield      #14                 // Field stackSize:Ljava/lang/Long;
      47: invokevirtual #32                 // Method java/lang/Long.longValue:()J
      50: invokespecial #33                 // Method org/jboss/threads/JBossThread."<init>":(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;J)V
      53: astore_3
      54: goto          70
      57: new           #30                 // class org/jboss/threads/JBossThread
      60: dup
      61: aload_0
      62: getfield      #10                 // Field threadGroup:Ljava/lang/ThreadGroup;
      65: aload_1
      66: invokespecial #34                 // Method org/jboss/threads/JBossThread."<init>":(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;)V
      69: astore_3
      70: aload_3
      71: aload_2
      72: invokevirtual #35                 // Method org/jboss/threads/JBossThread.setThreadNameInfo:(Lorg/jboss/threads/ThreadNameInfo;)V
      75: aload_3
      76: aload_2
      77: aload_3
      78: aload_0
      79: getfield      #19                 // Field namePattern:Ljava/lang/String;
      82: invokevirtual #36                 // Method org/jboss/threads/ThreadNameInfo.format:(Ljava/lang/Thread;Ljava/lang/String;)Ljava/lang/String;
      85: invokevirtual #37                 // Method org/jboss/threads/JBossThread.setName:(Ljava/lang/String;)V
      88: aload_0
      89: getfield      #12                 // Field initialPriority:Ljava/lang/Integer;
      92: ifnull        106
      95: aload_3
      96: aload_0
      97: getfield      #12                 // Field initialPriority:Ljava/lang/Integer;
     100: invokevirtual #38                 // Method java/lang/Integer.intValue:()I
     103: invokevirtual #39                 // Method org/jboss/threads/JBossThread.setPriority:(I)V
     106: aload_0
     107: getfield      #11                 // Field daemon:Ljava/lang/Boolean;
     110: ifnull        124
     113: aload_3
     114: aload_0
     115: getfield      #11                 // Field daemon:Ljava/lang/Boolean;
     118: invokevirtual #40                 // Method java/lang/Boolean.booleanValue:()Z
     121: invokevirtual #41                 // Method org/jboss/threads/JBossThread.setDaemon:(Z)V
     124: aload_0
     125: getfield      #13                 // Field uncaughtExceptionHandler:Ljava/lang/Thread$UncaughtExceptionHandler;
     128: ifnull        139
     131: aload_3
     132: aload_0
     133: getfield      #13                 // Field uncaughtExceptionHandler:Ljava/lang/Thread$UncaughtExceptionHandler;
     136: invokevirtual #42                 // Method org/jboss/threads/JBossThread.setUncaughtExceptionHandler:(Ljava/lang/Thread$UncaughtExceptionHandler;)V
     139: aload_3
     140: invokestatic  #43                 // Method org/jboss/threads/JBossExecutors.clearContextClassLoader:(Ljava/lang/Thread;)V
     143: aload_3
     144: areturn

  static java.lang.Thread access$100(org.jboss.threads.JBossThreadFactory, java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method createThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;
       5: areturn

  static {};
    Code:
       0: new           #3                  // class java/util/concurrent/atomic/AtomicLong
       3: dup
       4: lconst_1
       5: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
       8: putstatic     #28                 // Field globalThreadIndexSequence:Ljava/util/concurrent/atomic/AtomicLong;
      11: new           #3                  // class java/util/concurrent/atomic/AtomicLong
      14: dup
      15: lconst_1
      16: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      19: putstatic     #15                 // Field factoryIndexSequence:Ljava/util/concurrent/atomic/AtomicLong;
      22: return
}
