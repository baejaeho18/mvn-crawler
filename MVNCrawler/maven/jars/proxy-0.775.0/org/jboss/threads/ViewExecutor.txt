Compiled from "ViewExecutor.java"
public abstract class org.jboss.threads.ViewExecutor extends java.util.concurrent.AbstractExecutorService {
  private volatile java.lang.Thread$UncaughtExceptionHandler handler;

  private volatile java.lang.Runnable terminationTask;

  org.jboss.threads.ViewExecutor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/AbstractExecutorService."<init>":()V
       4: return

  public final void shutdown();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #2                  // Method shutdown:(Z)V
       5: return

  public abstract void shutdown(boolean);

  public final java.lang.Thread$UncaughtExceptionHandler getExceptionHandler();
    Code:
       0: aload_0
       1: getfield      #3                  // Field handler:Ljava/lang/Thread$UncaughtExceptionHandler;
       4: areturn

  public final void setExceptionHandler(java.lang.Thread$UncaughtExceptionHandler);
    Code:
       0: ldc           #4                  // String handler
       2: aload_1
       3: invokestatic  #5                  // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: putfield      #3                  // Field handler:Ljava/lang/Thread$UncaughtExceptionHandler;
      12: return

  public final java.lang.Runnable getTerminationTask();
    Code:
       0: aload_0
       1: getfield      #6                  // Field terminationTask:Ljava/lang/Runnable;
       4: areturn

  public final void setTerminationTask(java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field terminationTask:Ljava/lang/Runnable;
       5: return

  public static org.jboss.threads.ViewExecutor$Builder builder(java.util.concurrent.Executor);
    Code:
       0: ldc           #7                  // String delegate
       2: aload_0
       3: invokestatic  #5                  // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: new           #8                  // class org/jboss/threads/ViewExecutor$Builder
      10: dup
      11: aload_0
      12: invokespecial #9                  // Method org/jboss/threads/ViewExecutor$Builder."<init>":(Ljava/util/concurrent/Executor;)V
      15: areturn

  protected void runTermination();
    Code:
       0: aload_0
       1: getfield      #6                  // Field terminationTask:Ljava/lang/Runnable;
       4: astore_1
       5: aload_0
       6: aconst_null
       7: putfield      #6                  // Field terminationTask:Ljava/lang/Runnable;
      10: aload_1
      11: ifnull        51
      14: aload_1
      15: invokeinterface #10,  1           // InterfaceMethod java/lang/Runnable.run:()V
      20: goto          51
      23: astore_2
      24: aload_0
      25: getfield      #3                  // Field handler:Ljava/lang/Thread$UncaughtExceptionHandler;
      28: astore_3
      29: aload_3
      30: ifnull        51
      33: aload_0
      34: getfield      #3                  // Field handler:Ljava/lang/Thread$UncaughtExceptionHandler;
      37: invokestatic  #12                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      40: aload_2
      41: invokeinterface #13,  3           // InterfaceMethod java/lang/Thread$UncaughtExceptionHandler.uncaughtException:(Ljava/lang/Thread;Ljava/lang/Throwable;)V
      46: goto          51
      49: astore        4
      51: return
    Exception table:
       from    to  target type
          14    20    23   Class java/lang/Throwable
          33    46    49   Class java/lang/Throwable

  static int readIntPropertyPrefixed(java.lang.String, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #14                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
       5: invokestatic  #15                 // Method readPropertyPrefixed:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: invokestatic  #16                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      11: ireturn
      12: astore_2
      13: iload_1
      14: ireturn
    Exception table:
       from    to  target type
           0    11    12   Class java/lang/NumberFormatException

  static java.lang.String readPropertyPrefixed(java.lang.String, java.lang.String);
    Code:
       0: new           #18                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #20                 // String org.jboss.threads.view-executor.
       9: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      19: aload_1
      20: invokestatic  #23                 // Method readProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      23: areturn

  static java.lang.String readProperty(java.lang.String, java.lang.String);
    Code:
       0: invokestatic  #24                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
       3: astore_2
       4: aload_2
       5: ifnull        22
       8: aload_0
       9: aload_1
      10: invokedynamic #25,  0             // InvokeDynamic #0:run:(Ljava/lang/String;Ljava/lang/String;)Ljava/security/PrivilegedAction;
      15: invokestatic  #26                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      18: checkcast     #27                 // class java/lang/String
      21: areturn
      22: aload_0
      23: aload_1
      24: invokestatic  #28                 // Method readPropertyRaw:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      27: areturn

  static java.lang.String readPropertyRaw(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #29                 // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  private static java.lang.String lambda$readProperty$0(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #28                 // Method readPropertyRaw:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       5: areturn
}
