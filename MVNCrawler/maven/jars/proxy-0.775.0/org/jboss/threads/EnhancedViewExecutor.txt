Compiled from "EnhancedViewExecutor.java"
final class org.jboss.threads.EnhancedViewExecutor extends org.jboss.threads.ViewExecutor {
  private static final org.jboss.logging.Logger log;

  private static final long stateOffset;

  private static final int QUEUE_FAILURE_LOG_INTERVAL;

  private static final int MAX_QUEUE_SPINS;

  private static final long SHUTDOWN_MASK;

  private static final long ACTIVE_COUNT_MASK;

  private static final int QUEUED_SIZE_OFFSET;

  private static final long QUEUED_SIZE_MASK;

  private final java.util.concurrent.Executor delegate;

  private final int maxCount;

  private final int queueLimit;

  private final java.util.concurrent.locks.Lock executeLock;

  private final java.lang.Object shutdownLock;

  private final java.util.Set<org.jboss.threads.EnhancedViewExecutor$EnhancedViewExecutorRunnable> activeRunnables;

  private final java.util.Queue<org.jboss.threads.EnhancedViewExecutor$EnhancedViewExecutorRunnable> queue;

  private volatile long state;

  private volatile boolean interrupted;

  static final boolean $assertionsDisabled;

  org.jboss.threads.EnhancedViewExecutor(java.util.concurrent.Executor, int, int, java.lang.Thread$UncaughtExceptionHandler);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method org/jboss/threads/ViewExecutor."<init>":()V
       4: aload_0
       5: new           #7                  // class java/lang/Object
       8: dup
       9: invokespecial #8                  // Method java/lang/Object."<init>":()V
      12: putfield      #9                  // Field shutdownLock:Ljava/lang/Object;
      15: aload_0
      16: invokestatic  #10                 // Method java/util/concurrent/ConcurrentHashMap.newKeySet:()Ljava/util/concurrent/ConcurrentHashMap$KeySetView;
      19: putfield      #5                  // Field activeRunnables:Ljava/util/Set;
      22: aload_0
      23: new           #11                 // class java/util/concurrent/ConcurrentLinkedQueue
      26: dup
      27: invokespecial #12                 // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      30: putfield      #13                 // Field queue:Ljava/util/Queue;
      33: aload_0
      34: iconst_0
      35: putfield      #4                  // Field interrupted:Z
      38: aload_0
      39: ldc           #14                 // String delegate
      41: aload_1
      42: invokestatic  #15                 // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      45: checkcast     #16                 // class java/util/concurrent/Executor
      48: putfield      #17                 // Field delegate:Ljava/util/concurrent/Executor;
      51: aload_0
      52: iload_2
      53: putfield      #18                 // Field maxCount:I
      56: aload_0
      57: iload_3
      58: putfield      #19                 // Field queueLimit:I
      61: aload_0
      62: iload_3
      63: ifne          70
      66: aconst_null
      67: goto          73
      70: invokestatic  #20                 // Method org/wildfly/common/lock/Locks.reentrantLock:()Lorg/wildfly/common/lock/ExtendedLock;
      73: putfield      #21                 // Field executeLock:Ljava/util/concurrent/locks/Lock;
      76: aload_0
      77: aload         4
      79: invokevirtual #22                 // Method setExceptionHandler:(Ljava/lang/Thread$UncaughtExceptionHandler;)V
      82: return

  public void shutdown(boolean);
    Code:
       0: aload_0
       1: getfield      #23                 // Field state:J
       4: lstore_2
       5: lload_2
       6: invokestatic  #24                 // Method isShutdown:(J)Z
       9: ifeq          15
      12: goto          44
      15: lload_2
      16: ldc2_w        #25                 // long -9223372036854775808l
      19: lor
      20: lstore        4
      22: aload_0
      23: lload_2
      24: lload         4
      26: invokespecial #27                 // Method compareAndSwapState:(JJ)Z
      29: ifeq          41
      32: aload_0
      33: lload         4
      35: invokespecial #28                 // Method notifyWaitersIfTerminated:(J)V
      38: goto          44
      41: goto          0
      44: iload_1
      45: ifeq          67
      48: aload_0
      49: iconst_1
      50: putfield      #4                  // Field interrupted:Z
      53: aload_0
      54: getfield      #5                  // Field activeRunnables:Ljava/util/Set;
      57: invokedynamic #29,  0             // InvokeDynamic #0:accept:()Ljava/util/function/Consumer;
      62: invokeinterface #30,  2           // InterfaceMethod java/util/Set.forEach:(Ljava/util/function/Consumer;)V
      67: return

  public java.util.List<java.lang.Runnable> shutdownNow();
    Code:
       0: aload_0
       1: getfield      #23                 // Field state:J
       4: lstore_2
       5: lload_2
       6: invokestatic  #31                 // Method getQueueSize:(J)I
       9: istore_1
      10: lload_2
      11: invokestatic  #24                 // Method isShutdown:(J)Z
      14: ifeq          24
      17: iload_1
      18: ifne          24
      21: goto          57
      24: lload_2
      25: ldc2_w        #25                 // long -9223372036854775808l
      28: lor
      29: ldc2_w        #32                 // long -4611686016279904257l
      32: land
      33: lstore        4
      35: aload_0
      36: lload_2
      37: lload         4
      39: invokespecial #27                 // Method compareAndSwapState:(JJ)Z
      42: ifeq          54
      45: aload_0
      46: lload         4
      48: invokespecial #28                 // Method notifyWaitersIfTerminated:(J)V
      51: goto          57
      54: goto          0
      57: aload_0
      58: iconst_1
      59: putfield      #4                  // Field interrupted:Z
      62: aload_0
      63: getfield      #5                  // Field activeRunnables:Ljava/util/Set;
      66: invokedynamic #29,  0             // InvokeDynamic #0:accept:()Ljava/util/function/Consumer;
      71: invokeinterface #30,  2           // InterfaceMethod java/util/Set.forEach:(Ljava/util/function/Consumer;)V
      76: iload_1
      77: ifle          116
      80: new           #34                 // class java/util/ArrayList
      83: dup
      84: iload_1
      85: invokespecial #35                 // Method java/util/ArrayList."<init>":(I)V
      88: astore_2
      89: iconst_0
      90: istore_3
      91: iload_3
      92: iload_1
      93: if_icmpge     114
      96: aload_2
      97: aload_0
      98: invokespecial #36                 // Method blockingTake:()Lorg/jboss/threads/EnhancedViewExecutor$EnhancedViewExecutorRunnable;
     101: invokestatic  #37                 // Method org/jboss/threads/EnhancedViewExecutor$EnhancedViewExecutorRunnable.access$000:(Lorg/jboss/threads/EnhancedViewExecutor$EnhancedViewExecutorRunnable;)Ljava/lang/Runnable;
     104: invokevirtual #38                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     107: pop
     108: iinc          3, 1
     111: goto          91
     114: aload_2
     115: areturn
     116: invokestatic  #39                 // Method java/util/Collections.emptyList:()Ljava/util/List;
     119: areturn

  public boolean isShutdown();
    Code:
       0: aload_0
       1: getfield      #23                 // Field state:J
       4: invokestatic  #24                 // Method isShutdown:(J)Z
       7: ireturn

  private static boolean isShutdown(long);
    Code:
       0: lload_0
       1: ldc2_w        #25                 // long -9223372036854775808l
       4: land
       5: lconst_0
       6: lcmp
       7: ifeq          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isTerminated();
    Code:
       0: aload_0
       1: getfield      #23                 // Field state:J
       4: invokestatic  #40                 // Method isTerminated:(J)Z
       7: ireturn

  private static boolean isTerminated(long);
    Code:
       0: lload_0
       1: ldc2_w        #25                 // long -9223372036854775808l
       4: lcmp
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  private void notifyWaitersIfTerminated(long);
    Code:
       0: lload_1
       1: invokestatic  #40                 // Method isTerminated:(J)Z
       4: ifeq          63
       7: aload_0
       8: getfield      #9                  // Field shutdownLock:Ljava/lang/Object;
      11: dup
      12: astore_3
      13: monitorenter
      14: aload_0
      15: getfield      #9                  // Field shutdownLock:Ljava/lang/Object;
      18: invokevirtual #41                 // Method java/lang/Object.notifyAll:()V
      21: aload_3
      22: monitorexit
      23: goto          33
      26: astore        4
      28: aload_3
      29: monitorexit
      30: aload         4
      32: athrow
      33: getstatic     #42                 // Field $assertionsDisabled:Z
      36: ifne          59
      39: aload_0
      40: getfield      #13                 // Field queue:Ljava/util/Queue;
      43: invokeinterface #43,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
      48: ifne          59
      51: new           #44                 // class java/lang/AssertionError
      54: dup
      55: invokespecial #45                 // Method java/lang/AssertionError."<init>":()V
      58: athrow
      59: aload_0
      60: invokevirtual #46                 // Method runTermination:()V
      63: return
    Exception table:
       from    to  target type
          14    23    26   any
          26    30    26   any

  public boolean awaitTermination(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_3
       1: lload_1
       2: invokevirtual #47                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
       5: lstore        4
       7: invokestatic  #48                 // Method java/lang/System.nanoTime:()J
      10: lstore        6
      12: aload_0
      13: getfield      #9                  // Field shutdownLock:Ljava/lang/Object;
      16: dup
      17: astore        8
      19: monitorenter
      20: aload_0
      21: invokevirtual #49                 // Method isTerminated:()Z
      24: ifne          83
      27: lload         4
      29: lload         6
      31: lneg
      32: invokestatic  #48                 // Method java/lang/System.nanoTime:()J
      35: dup2
      36: lstore        6
      38: ladd
      39: lconst_0
      40: invokestatic  #50                 // Method java/lang/Math.max:(JJ)J
      43: lsub
      44: lstore        4
      46: getstatic     #51                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      49: lload         4
      51: getstatic     #52                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      54: invokevirtual #53                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      57: lstore        9
      59: lload         9
      61: lconst_0
      62: lcmp
      63: ifgt          71
      66: iconst_0
      67: aload         8
      69: monitorexit
      70: ireturn
      71: aload_0
      72: getfield      #9                  // Field shutdownLock:Ljava/lang/Object;
      75: lload         9
      77: invokevirtual #54                 // Method java/lang/Object.wait:(J)V
      80: goto          20
      83: iconst_1
      84: aload         8
      86: monitorexit
      87: ireturn
      88: astore        11
      90: aload         8
      92: monitorexit
      93: aload         11
      95: athrow
    Exception table:
       from    to  target type
          20    70    88   any
          71    87    88   any
          88    93    88   any

  public void execute(java.lang.Runnable);
    Code:
       0: ldc           #55                 // String task
       2: aload_1
       3: invokestatic  #15                 // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: new           #56                 // class org/jboss/threads/EnhancedViewExecutor$EnhancedViewExecutorRunnable
      10: dup
      11: aload_0
      12: aload_1
      13: invokestatic  #57                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      16: invokestatic  #58                 // Method org/jboss/threads/JBossExecutors.getContextClassLoader:(Ljava/lang/Thread;)Ljava/lang/ClassLoader;
      19: invokespecial #59                 // Method org/jboss/threads/EnhancedViewExecutor$EnhancedViewExecutorRunnable."<init>":(Lorg/jboss/threads/EnhancedViewExecutor;Ljava/lang/Runnable;Ljava/lang/ClassLoader;)V
      22: astore_2
      23: aload_0
      24: getfield      #18                 // Field maxCount:I
      27: istore_3
      28: aload_0
      29: getfield      #19                 // Field queueLimit:I
      32: istore        4
      34: aconst_null
      35: astore        5
      37: aload_0
      38: getfield      #23                 // Field state:J
      41: lstore        6
      43: lload         6
      45: invokestatic  #24                 // Method isShutdown:(J)Z
      48: ifeq          61
      51: new           #60                 // class java/util/concurrent/RejectedExecutionException
      54: dup
      55: ldc           #61                 // String Executor has been shut down
      57: invokespecial #62                 // Method java/util/concurrent/RejectedExecutionException."<init>":(Ljava/lang/String;)V
      60: athrow
      61: lload         6
      63: invokestatic  #63                 // Method getActiveCount:(J)I
      66: istore        8
      68: lload         6
      70: invokestatic  #31                 // Method getQueueSize:(J)I
      73: istore        9
      75: iload         4
      77: ifeq          114
      80: aload         5
      82: ifnonnull     114
      85: iload         9
      87: ifne          114
      90: iload         8
      92: iload_3
      93: iconst_1
      94: isub
      95: if_icmplt     114
      98: aload_0
      99: getfield      #21                 // Field executeLock:Ljava/util/concurrent/locks/Lock;
     102: astore        5
     104: aload         5
     106: invokeinterface #64,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
     111: goto          37
     114: iload         8
     116: iload_3
     117: if_icmpge     201
     120: getstatic     #42                 // Field $assertionsDisabled:Z
     123: ifne          142
     126: lload         6
     128: invokestatic  #31                 // Method getQueueSize:(J)I
     131: ifeq          142
     134: new           #44                 // class java/lang/AssertionError
     137: dup
     138: invokespecial #45                 // Method java/lang/AssertionError."<init>":()V
     141: athrow
     142: iload         8
     144: iconst_1
     145: iadd
     146: i2l
     147: lstore        10
     149: aload_0
     150: lload         6
     152: lload         10
     154: lload         6
     156: ldc2_w        #65                 // long -2147483648l
     159: land
     160: lor
     161: invokespecial #27                 // Method compareAndSwapState:(JJ)Z
     164: ifeq          37
     167: aload_0
     168: getfield      #17                 // Field delegate:Ljava/util/concurrent/Executor;
     171: aload_2
     172: invokeinterface #67,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
     177: aload         5
     179: ifnull        189
     182: aload         5
     184: invokeinterface #68,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     189: return
     190: astore        12
     192: aload_0
     193: iconst_0
     194: invokespecial #2                  // Method taskComplete:(Z)Lorg/jboss/threads/EnhancedViewExecutor$EnhancedViewExecutorRunnable;
     197: pop
     198: aload         12
     200: athrow
     201: iload         9
     203: iload         4
     205: if_icmpge     274
     208: getstatic     #42                 // Field $assertionsDisabled:Z
     211: ifne          228
     214: iload         8
     216: iload_3
     217: if_icmpeq     228
     220: new           #44                 // class java/lang/AssertionError
     223: dup
     224: invokespecial #45                 // Method java/lang/AssertionError."<init>":()V
     227: athrow
     228: iload         9
     230: iconst_1
     231: iadd
     232: i2l
     233: lstore        10
     235: aload_0
     236: lload         6
     238: lload         10
     240: bipush        31
     242: lshl
     243: lload         6
     245: ldc2_w        #32                 // long -4611686016279904257l
     248: land
     249: lor
     250: invokespecial #27                 // Method compareAndSwapState:(JJ)Z
     253: ifeq          37
     256: aload_0
     257: aload_2
     258: invokespecial #70                 // Method enqueue:(Lorg/jboss/threads/EnhancedViewExecutor$EnhancedViewExecutorRunnable;)V
     261: aload         5
     263: ifnull        273
     266: aload         5
     268: invokeinterface #68,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     273: return
     274: new           #60                 // class java/util/concurrent/RejectedExecutionException
     277: dup
     278: ldc           #71                 // String No executor queue space remaining
     280: invokespecial #62                 // Method java/util/concurrent/RejectedExecutionException."<init>":(Ljava/lang/String;)V
     283: athrow
     284: astore        13
     286: aload         5
     288: ifnull        298
     291: aload         5
     293: invokeinterface #68,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     298: aload         13
     300: athrow
    Exception table:
       from    to  target type
         167   177   190   Class java/lang/Throwable
          37   177   284   any
         190   261   284   any
         274   286   284   any

  private void enqueue(org.jboss.threads.EnhancedViewExecutor$EnhancedViewExecutorRunnable);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: getfield      #13                 // Field queue:Ljava/util/Queue;
       6: aload_1
       7: invokeinterface #72,  2           // InterfaceMethod java/util/Queue.offer:(Ljava/lang/Object;)Z
      12: ifeq          16
      15: return
      16: new           #60                 // class java/util/concurrent/RejectedExecutionException
      19: dup
      20: ldc           #73                 // String Task was rejected by the queue. This should never happen.
      22: invokespecial #62                 // Method java/util/concurrent/RejectedExecutionException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: astore_3
      27: aload_0
      28: invokespecial #74                 // Method decrementQueueSize:()Z
      31: ifeq          36
      34: aload_3
      35: athrow
      36: iload_2
      37: ifne          49
      40: getstatic     #75                 // Field log:Lorg/jboss/logging/Logger;
      43: ldc           #76                 // String Failed to submit a task to the queue. This should never happen.
      45: aload_3
      46: invokevirtual #77                 // Method org/jboss/logging/Logger.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      49: iinc          2, 1
      52: iload_2
      53: getstatic     #78                 // Field QUEUE_FAILURE_LOG_INTERVAL:I
      56: if_icmplt     61
      59: iconst_0
      60: istore_2
      61: invokestatic  #79                 // Method java/lang/Thread.yield:()V
      64: goto          2
    Exception table:
       from    to  target type
           2    15    26   Class java/lang/Throwable
          16    26    26   Class java/lang/Throwable

  private boolean decrementQueueSize();
    Code:
       0: aload_0
       1: getfield      #23                 // Field state:J
       4: lstore_1
       5: lload_1
       6: invokestatic  #31                 // Method getQueueSize:(J)I
       9: istore_3
      10: iload_3
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: iload_3
      17: iconst_1
      18: isub
      19: i2l
      20: lstore        4
      22: lload_1
      23: ldc2_w        #32                 // long -4611686016279904257l
      26: land
      27: lload         4
      29: bipush        31
      31: lshl
      32: lor
      33: lstore        6
      35: aload_0
      36: lload_1
      37: lload         6
      39: invokespecial #27                 // Method compareAndSwapState:(JJ)Z
      42: ifeq          53
      45: aload_0
      46: lload         6
      48: invokespecial #28                 // Method notifyWaitersIfTerminated:(J)V
      51: iconst_1
      52: ireturn
      53: goto          0

  private org.jboss.threads.EnhancedViewExecutor$EnhancedViewExecutorRunnable blockingTake();
    Code:
       0: iconst_0
       1: istore_1
       2: iconst_0
       3: istore_2
       4: aload_0
       5: getfield      #13                 // Field queue:Ljava/util/Queue;
       8: invokeinterface #80,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      13: checkcast     #56                 // class org/jboss/threads/EnhancedViewExecutor$EnhancedViewExecutorRunnable
      16: astore_3
      17: aload_3
      18: ifnull        23
      21: aload_3
      22: areturn
      23: iload_1
      24: getstatic     #81                 // Field MAX_QUEUE_SPINS:I
      27: if_icmpge     39
      30: iinc          1, 1
      33: invokestatic  #82                 // Method org/jboss/threads/JDKSpecific.onSpinWait:()V
      36: goto          42
      39: invokestatic  #79                 // Method java/lang/Thread.yield:()V
      42: goto          4
      45: astore_3
      46: iload_2
      47: ifne          59
      50: getstatic     #75                 // Field log:Lorg/jboss/logging/Logger;
      53: ldc           #83                 // String Failed to read from the queue. This should never happen.
      55: aload_3
      56: invokevirtual #77                 // Method org/jboss/logging/Logger.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      59: iinc          2, 1
      62: iload_2
      63: getstatic     #78                 // Field QUEUE_FAILURE_LOG_INTERVAL:I
      66: if_icmplt     71
      69: iconst_0
      70: istore_2
      71: invokestatic  #79                 // Method java/lang/Thread.yield:()V
      74: goto          4
    Exception table:
       from    to  target type
           4    22    45   Class java/lang/Throwable
          23    42    45   Class java/lang/Throwable

  private org.jboss.threads.EnhancedViewExecutor$EnhancedViewExecutorRunnable taskComplete(boolean);
    Code:
       0: aload_0
       1: getfield      #23                 // Field state:J
       4: lstore_2
       5: lload_2
       6: invokestatic  #31                 // Method getQueueSize:(J)I
       9: istore        4
      11: iload         4
      13: ifle          73
      16: iload_1
      17: ifeq          73
      20: iload         4
      22: iconst_1
      23: isub
      24: i2l
      25: lstore        5
      27: aload_0
      28: lload_2
      29: lload         5
      31: bipush        31
      33: lshl
      34: lload_2
      35: ldc2_w        #32                 // long -4611686016279904257l
      38: land
      39: lor
      40: invokespecial #27                 // Method compareAndSwapState:(JJ)Z
      43: ifeq          70
      46: aload_0
      47: invokespecial #36                 // Method blockingTake:()Lorg/jboss/threads/EnhancedViewExecutor$EnhancedViewExecutorRunnable;
      50: astore        7
      52: aload_0
      53: getfield      #17                 // Field delegate:Ljava/util/concurrent/Executor;
      56: aload         7
      58: invokeinterface #67,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      63: aconst_null
      64: areturn
      65: astore        8
      67: aload         7
      69: areturn
      70: goto          106
      73: lload_2
      74: invokestatic  #63                 // Method getActiveCount:(J)I
      77: iconst_1
      78: isub
      79: i2l
      80: lload_2
      81: ldc2_w        #65                 // long -2147483648l
      84: land
      85: lor
      86: lstore        5
      88: aload_0
      89: lload_2
      90: lload         5
      92: invokespecial #27                 // Method compareAndSwapState:(JJ)Z
      95: ifeq          106
      98: aload_0
      99: lload         5
     101: invokespecial #28                 // Method notifyWaitersIfTerminated:(J)V
     104: aconst_null
     105: areturn
     106: goto          0
    Exception table:
       from    to  target type
          52    64    65   Class java/lang/Throwable

  private static int getActiveCount(long);
    Code:
       0: lload_0
       1: ldc2_w        #84                 // long 2147483647l
       4: land
       5: l2i
       6: ireturn

  private static int getQueueSize(long);
    Code:
       0: lload_0
       1: ldc2_w        #86                 // long 4611686016279904256l
       4: land
       5: bipush        31
       7: lshr
       8: l2i
       9: ireturn

  private boolean compareAndSwapState(long, long);
    Code:
       0: getstatic     #88                 // Field org/jboss/threads/JBossExecutors.unsafe:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #89                 // Field stateOffset:J
       7: lload_1
       8: lload_3
       9: invokevirtual #90                 // Method sun/misc/Unsafe.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z
      12: ireturn

  private java.lang.Thread$UncaughtExceptionHandler uncaughtExceptionHandler();
    Code:
       0: aload_0
       1: invokevirtual #91                 // Method getExceptionHandler:()Ljava/lang/Thread$UncaughtExceptionHandler;
       4: astore_1
       5: aload_1
       6: ifnull        11
       9: aload_1
      10: areturn
      11: invokestatic  #57                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      14: invokevirtual #92                 // Method java/lang/Thread.getUncaughtExceptionHandler:()Ljava/lang/Thread$UncaughtExceptionHandler;
      17: astore_2
      18: aload_2
      19: ifnull        26
      22: aload_2
      23: goto          29
      26: invokestatic  #93                 // Method org/jboss/threads/JBossExecutors.loggingExceptionHandler:()Ljava/lang/Thread$UncaughtExceptionHandler;
      29: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #23                 // Field state:J
       4: lstore_1
       5: lload_1
       6: invokestatic  #63                 // Method getActiveCount:(J)I
       9: istore_3
      10: lload_1
      11: invokestatic  #31                 // Method getQueueSize:(J)I
      14: istore        4
      16: lload_1
      17: invokestatic  #24                 // Method isShutdown:(J)Z
      20: istore        5
      22: lload_1
      23: invokestatic  #40                 // Method isTerminated:(J)Z
      26: istore        6
      28: new           #94                 // class java/lang/StringBuilder
      31: dup
      32: invokespecial #95                 // Method java/lang/StringBuilder."<init>":()V
      35: ldc           #96                 // String EnhancedViewExecutor{delegate=
      37: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_0
      41: getfield      #17                 // Field delegate:Ljava/util/concurrent/Executor;
      44: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      47: ldc           #99                 // String , active=
      49: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: iload_3
      53: invokevirtual #100                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      56: ldc           #101                // String , queued=
      58: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: iload         4
      63: invokevirtual #100                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      66: ldc           #102                // String , shutdown=
      68: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: iload         5
      73: invokevirtual #103                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      76: ldc           #104                // String , terminated=
      78: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: iload         6
      83: invokevirtual #103                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      86: bipush        125
      88: invokevirtual #105                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      91: invokevirtual #106                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      94: areturn

  static java.util.Set access$100(org.jboss.threads.EnhancedViewExecutor);
    Code:
       0: aload_0
       1: getfield      #5                  // Field activeRunnables:Ljava/util/Set;
       4: areturn

  static boolean access$200(org.jboss.threads.EnhancedViewExecutor);
    Code:
       0: aload_0
       1: getfield      #4                  // Field interrupted:Z
       4: ireturn

  static java.lang.Thread$UncaughtExceptionHandler access$300(org.jboss.threads.EnhancedViewExecutor);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method uncaughtExceptionHandler:()Ljava/lang/Thread$UncaughtExceptionHandler;
       4: areturn

  static org.jboss.threads.EnhancedViewExecutor$EnhancedViewExecutorRunnable access$400(org.jboss.threads.EnhancedViewExecutor, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #2                  // Method taskComplete:(Z)Lorg/jboss/threads/EnhancedViewExecutor$EnhancedViewExecutorRunnable;
       5: areturn

  static {};
    Code:
       0: ldc           #1                  // class org/jboss/threads/EnhancedViewExecutor
       2: invokevirtual #107                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #42                 // Field $assertionsDisabled:Z
      16: ldc           #108                // String org.jboss.threads.view-executor
      18: invokestatic  #109                // Method org/jboss/logging/Logger.getLogger:(Ljava/lang/String;)Lorg/jboss/logging/Logger;
      21: putstatic     #75                 // Field log:Lorg/jboss/logging/Logger;
      24: getstatic     #88                 // Field org/jboss/threads/JBossExecutors.unsafe:Lsun/misc/Unsafe;
      27: ldc           #1                  // class org/jboss/threads/EnhancedViewExecutor
      29: ldc           #110                // String state
      31: invokevirtual #111                // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      34: invokevirtual #112                // Method sun/misc/Unsafe.objectFieldOffset:(Ljava/lang/reflect/Field;)J
      37: putstatic     #89                 // Field stateOffset:J
      40: goto          56
      43: astore_0
      44: new           #114                // class java/lang/NoSuchFieldError
      47: dup
      48: aload_0
      49: invokevirtual #115                // Method java/lang/NoSuchFieldException.getMessage:()Ljava/lang/String;
      52: invokespecial #116                // Method java/lang/NoSuchFieldError."<init>":(Ljava/lang/String;)V
      55: athrow
      56: ldc           #117                // String queue.failure.log.interval
      58: ldc           #118                // int 1000000
      60: invokestatic  #119                // Method readIntPropertyPrefixed:(Ljava/lang/String;I)I
      63: putstatic     #78                 // Field QUEUE_FAILURE_LOG_INTERVAL:I
      66: ldc           #120                // String queue.poll.spins
      68: invokestatic  #121                // Method org/wildfly/common/cpu/ProcessorInfo.availableProcessors:()I
      71: iconst_1
      72: if_icmpne     79
      75: iconst_0
      76: goto          82
      79: sipush        128
      82: invokestatic  #119                // Method readIntPropertyPrefixed:(Ljava/lang/String;I)I
      85: putstatic     #81                 // Field MAX_QUEUE_SPINS:I
      88: return
    Exception table:
       from    to  target type
          24    40    43   Class java/lang/NoSuchFieldException
}
