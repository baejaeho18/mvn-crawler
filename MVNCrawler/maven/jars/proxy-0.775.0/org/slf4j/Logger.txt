Compiled from "Logger.java"
public interface org.slf4j.Logger {
  public static final java.lang.String ROOT_LOGGER_NAME;

  public abstract java.lang.String getName();

  public default org.slf4j.spi.LoggingEventBuilder makeLoggingEventBuilder(org.slf4j.event.Level);
    Code:
       0: new           #3                  // class org/slf4j/spi/DefaultLoggingEventBuilder
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #5                  // Method org/slf4j/spi/DefaultLoggingEventBuilder."<init>":(Lorg/slf4j/Logger;Lorg/slf4j/event/Level;)V
       9: areturn

  public default org.slf4j.spi.LoggingEventBuilder atLevel(org.slf4j.event.Level);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #9,  2            // InterfaceMethod isEnabledForLevel:(Lorg/slf4j/event/Level;)Z
       7: ifeq          18
      10: aload_0
      11: aload_1
      12: invokeinterface #15,  2           // InterfaceMethod makeLoggingEventBuilder:(Lorg/slf4j/event/Level;)Lorg/slf4j/spi/LoggingEventBuilder;
      17: areturn
      18: invokestatic  #19                 // Method org/slf4j/spi/NOPLoggingEventBuilder.singleton:()Lorg/slf4j/spi/LoggingEventBuilder;
      21: areturn

  public default boolean isEnabledForLevel(org.slf4j.event.Level);
    Code:
       0: aload_1
       1: invokevirtual #25                 // Method org/slf4j/event/Level.toInt:()I
       4: istore_2
       5: iload_2
       6: lookupswitch  { // 5
                     0: 56
                    10: 63
                    20: 70
                    30: 77
                    40: 84
               default: 91
          }
      56: aload_0
      57: invokeinterface #31,  1           // InterfaceMethod isTraceEnabled:()Z
      62: ireturn
      63: aload_0
      64: invokeinterface #35,  1           // InterfaceMethod isDebugEnabled:()Z
      69: ireturn
      70: aload_0
      71: invokeinterface #38,  1           // InterfaceMethod isInfoEnabled:()Z
      76: ireturn
      77: aload_0
      78: invokeinterface #41,  1           // InterfaceMethod isWarnEnabled:()Z
      83: ireturn
      84: aload_0
      85: invokeinterface #44,  1           // InterfaceMethod isErrorEnabled:()Z
      90: ireturn
      91: new           #47                 // class java/lang/IllegalArgumentException
      94: dup
      95: new           #49                 // class java/lang/StringBuilder
      98: dup
      99: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
     102: ldc           #54                 // String Level [
     104: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: aload_1
     108: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     111: ldc           #63                 // String ] not recognized.
     113: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: invokevirtual #65                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     119: invokespecial #69                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     122: athrow

  public abstract boolean isTraceEnabled();

  public abstract void trace(java.lang.String);

  public abstract void trace(java.lang.String, java.lang.Object);

  public abstract void trace(java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void trace(java.lang.String, java.lang.Object...);

  public abstract void trace(java.lang.String, java.lang.Throwable);

  public abstract boolean isTraceEnabled(org.slf4j.Marker);

  public default org.slf4j.spi.LoggingEventBuilder atTrace();
    Code:
       0: aload_0
       1: invokeinterface #31,  1           // InterfaceMethod isTraceEnabled:()Z
       6: ifeq          19
       9: aload_0
      10: getstatic     #72                 // Field org/slf4j/event/Level.TRACE:Lorg/slf4j/event/Level;
      13: invokeinterface #15,  2           // InterfaceMethod makeLoggingEventBuilder:(Lorg/slf4j/event/Level;)Lorg/slf4j/spi/LoggingEventBuilder;
      18: areturn
      19: invokestatic  #19                 // Method org/slf4j/spi/NOPLoggingEventBuilder.singleton:()Lorg/slf4j/spi/LoggingEventBuilder;
      22: areturn

  public abstract void trace(org.slf4j.Marker, java.lang.String);

  public abstract void trace(org.slf4j.Marker, java.lang.String, java.lang.Object);

  public abstract void trace(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void trace(org.slf4j.Marker, java.lang.String, java.lang.Object...);

  public abstract void trace(org.slf4j.Marker, java.lang.String, java.lang.Throwable);

  public abstract boolean isDebugEnabled();

  public abstract void debug(java.lang.String);

  public abstract void debug(java.lang.String, java.lang.Object);

  public abstract void debug(java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void debug(java.lang.String, java.lang.Object...);

  public abstract void debug(java.lang.String, java.lang.Throwable);

  public abstract boolean isDebugEnabled(org.slf4j.Marker);

  public abstract void debug(org.slf4j.Marker, java.lang.String);

  public abstract void debug(org.slf4j.Marker, java.lang.String, java.lang.Object);

  public abstract void debug(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void debug(org.slf4j.Marker, java.lang.String, java.lang.Object...);

  public abstract void debug(org.slf4j.Marker, java.lang.String, java.lang.Throwable);

  public default org.slf4j.spi.LoggingEventBuilder atDebug();
    Code:
       0: aload_0
       1: invokeinterface #35,  1           // InterfaceMethod isDebugEnabled:()Z
       6: ifeq          19
       9: aload_0
      10: getstatic     #76                 // Field org/slf4j/event/Level.DEBUG:Lorg/slf4j/event/Level;
      13: invokeinterface #15,  2           // InterfaceMethod makeLoggingEventBuilder:(Lorg/slf4j/event/Level;)Lorg/slf4j/spi/LoggingEventBuilder;
      18: areturn
      19: invokestatic  #19                 // Method org/slf4j/spi/NOPLoggingEventBuilder.singleton:()Lorg/slf4j/spi/LoggingEventBuilder;
      22: areturn

  public abstract boolean isInfoEnabled();

  public abstract void info(java.lang.String);

  public abstract void info(java.lang.String, java.lang.Object);

  public abstract void info(java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void info(java.lang.String, java.lang.Object...);

  public abstract void info(java.lang.String, java.lang.Throwable);

  public abstract boolean isInfoEnabled(org.slf4j.Marker);

  public abstract void info(org.slf4j.Marker, java.lang.String);

  public abstract void info(org.slf4j.Marker, java.lang.String, java.lang.Object);

  public abstract void info(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void info(org.slf4j.Marker, java.lang.String, java.lang.Object...);

  public abstract void info(org.slf4j.Marker, java.lang.String, java.lang.Throwable);

  public default org.slf4j.spi.LoggingEventBuilder atInfo();
    Code:
       0: aload_0
       1: invokeinterface #38,  1           // InterfaceMethod isInfoEnabled:()Z
       6: ifeq          19
       9: aload_0
      10: getstatic     #79                 // Field org/slf4j/event/Level.INFO:Lorg/slf4j/event/Level;
      13: invokeinterface #15,  2           // InterfaceMethod makeLoggingEventBuilder:(Lorg/slf4j/event/Level;)Lorg/slf4j/spi/LoggingEventBuilder;
      18: areturn
      19: invokestatic  #19                 // Method org/slf4j/spi/NOPLoggingEventBuilder.singleton:()Lorg/slf4j/spi/LoggingEventBuilder;
      22: areturn

  public abstract boolean isWarnEnabled();

  public abstract void warn(java.lang.String);

  public abstract void warn(java.lang.String, java.lang.Object);

  public abstract void warn(java.lang.String, java.lang.Object...);

  public abstract void warn(java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void warn(java.lang.String, java.lang.Throwable);

  public abstract boolean isWarnEnabled(org.slf4j.Marker);

  public abstract void warn(org.slf4j.Marker, java.lang.String);

  public abstract void warn(org.slf4j.Marker, java.lang.String, java.lang.Object);

  public abstract void warn(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void warn(org.slf4j.Marker, java.lang.String, java.lang.Object...);

  public abstract void warn(org.slf4j.Marker, java.lang.String, java.lang.Throwable);

  public default org.slf4j.spi.LoggingEventBuilder atWarn();
    Code:
       0: aload_0
       1: invokeinterface #41,  1           // InterfaceMethod isWarnEnabled:()Z
       6: ifeq          19
       9: aload_0
      10: getstatic     #82                 // Field org/slf4j/event/Level.WARN:Lorg/slf4j/event/Level;
      13: invokeinterface #15,  2           // InterfaceMethod makeLoggingEventBuilder:(Lorg/slf4j/event/Level;)Lorg/slf4j/spi/LoggingEventBuilder;
      18: areturn
      19: invokestatic  #19                 // Method org/slf4j/spi/NOPLoggingEventBuilder.singleton:()Lorg/slf4j/spi/LoggingEventBuilder;
      22: areturn

  public abstract boolean isErrorEnabled();

  public abstract void error(java.lang.String);

  public abstract void error(java.lang.String, java.lang.Object);

  public abstract void error(java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void error(java.lang.String, java.lang.Object...);

  public abstract void error(java.lang.String, java.lang.Throwable);

  public abstract boolean isErrorEnabled(org.slf4j.Marker);

  public abstract void error(org.slf4j.Marker, java.lang.String);

  public abstract void error(org.slf4j.Marker, java.lang.String, java.lang.Object);

  public abstract void error(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void error(org.slf4j.Marker, java.lang.String, java.lang.Object...);

  public abstract void error(org.slf4j.Marker, java.lang.String, java.lang.Throwable);

  public default org.slf4j.spi.LoggingEventBuilder atError();
    Code:
       0: aload_0
       1: invokeinterface #44,  1           // InterfaceMethod isErrorEnabled:()Z
       6: ifeq          19
       9: aload_0
      10: getstatic     #85                 // Field org/slf4j/event/Level.ERROR:Lorg/slf4j/event/Level;
      13: invokeinterface #15,  2           // InterfaceMethod makeLoggingEventBuilder:(Lorg/slf4j/event/Level;)Lorg/slf4j/spi/LoggingEventBuilder;
      18: areturn
      19: invokestatic  #19                 // Method org/slf4j/spi/NOPLoggingEventBuilder.singleton:()Lorg/slf4j/spi/LoggingEventBuilder;
      22: areturn
}
