Compiled from "FailableFunction.java"
public interface org.apache.commons.lang3.function.FailableFunction<T, R, E extends java.lang.Throwable> {
  public static final org.apache.commons.lang3.function.FailableFunction NOP;

  public static <T, E extends java.lang.Throwable> org.apache.commons.lang3.function.FailableFunction<T, T, E> identity();
    Code:
       0: invokedynamic #1,  0              // InvokeDynamic #0:apply:()Lorg/apache/commons/lang3/function/FailableFunction;
       5: areturn

  public static <T, R, E extends java.lang.Throwable> org.apache.commons.lang3.function.FailableFunction<T, R, E> nop();
    Code:
       0: getstatic     #2                  // Field NOP:Lorg/apache/commons/lang3/function/FailableFunction;
       3: areturn

  public default <V> org.apache.commons.lang3.function.FailableFunction<T, V, E> andThen(org.apache.commons.lang3.function.FailableFunction<? super R, ? extends V, E>);
    Code:
       0: aload_1
       1: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: invokedynamic #4,  0              // InvokeDynamic #1:apply:(Lorg/apache/commons/lang3/function/FailableFunction;Lorg/apache/commons/lang3/function/FailableFunction;)Lorg/apache/commons/lang3/function/FailableFunction;
      12: areturn

  public abstract R apply(T) throws E;

  public default <V> org.apache.commons.lang3.function.FailableFunction<V, R, E> compose(org.apache.commons.lang3.function.FailableFunction<? super V, ? extends T, E>);
    Code:
       0: aload_1
       1: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: invokedynamic #5,  0              // InvokeDynamic #2:apply:(Lorg/apache/commons/lang3/function/FailableFunction;Lorg/apache/commons/lang3/function/FailableFunction;)Lorg/apache/commons/lang3/function/FailableFunction;
      12: areturn

  private java.lang.Object lambda$compose$3(org.apache.commons.lang3.function.FailableFunction, java.lang.Object) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #6,  2            // InterfaceMethod apply:(Ljava/lang/Object;)Ljava/lang/Object;
       8: invokeinterface #6,  2            // InterfaceMethod apply:(Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  private java.lang.Object lambda$andThen$2(org.apache.commons.lang3.function.FailableFunction, java.lang.Object) throws java.lang.Throwable;
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokeinterface #6,  2            // InterfaceMethod apply:(Ljava/lang/Object;)Ljava/lang/Object;
       8: invokeinterface #6,  2            // InterfaceMethod apply:(Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  private static java.lang.Object lambda$identity$1(java.lang.Object) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: areturn

  private static java.lang.Object lambda$static$0(java.lang.Object) throws java.lang.Throwable;
    Code:
       0: aconst_null
       1: areturn

  static {};
    Code:
       0: invokedynamic #7,  0              // InvokeDynamic #3:apply:()Lorg/apache/commons/lang3/function/FailableFunction;
       5: putstatic     #2                  // Field NOP:Lorg/apache/commons/lang3/function/FailableFunction;
       8: return
}
