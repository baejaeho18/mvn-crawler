Compiled from "FailablePredicate.java"
public interface org.apache.commons.lang3.function.FailablePredicate<T, E extends java.lang.Throwable> {
  public static final org.apache.commons.lang3.function.FailablePredicate FALSE;

  public static final org.apache.commons.lang3.function.FailablePredicate TRUE;

  public static <T, E extends java.lang.Throwable> org.apache.commons.lang3.function.FailablePredicate<T, E> falsePredicate();
    Code:
       0: getstatic     #1                  // Field FALSE:Lorg/apache/commons/lang3/function/FailablePredicate;
       3: areturn

  public static <T, E extends java.lang.Throwable> org.apache.commons.lang3.function.FailablePredicate<T, E> truePredicate();
    Code:
       0: getstatic     #2                  // Field TRUE:Lorg/apache/commons/lang3/function/FailablePredicate;
       3: areturn

  public default org.apache.commons.lang3.function.FailablePredicate<T, E> and(org.apache.commons.lang3.function.FailablePredicate<? super T, E>);
    Code:
       0: aload_1
       1: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: invokedynamic #4,  0              // InvokeDynamic #0:test:(Lorg/apache/commons/lang3/function/FailablePredicate;Lorg/apache/commons/lang3/function/FailablePredicate;)Lorg/apache/commons/lang3/function/FailablePredicate;
      12: areturn

  public default org.apache.commons.lang3.function.FailablePredicate<T, E> negate();
    Code:
       0: aload_0
       1: invokedynamic #5,  0              // InvokeDynamic #1:test:(Lorg/apache/commons/lang3/function/FailablePredicate;)Lorg/apache/commons/lang3/function/FailablePredicate;
       6: areturn

  public default org.apache.commons.lang3.function.FailablePredicate<T, E> or(org.apache.commons.lang3.function.FailablePredicate<? super T, E>);
    Code:
       0: aload_1
       1: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: invokedynamic #6,  0              // InvokeDynamic #2:test:(Lorg/apache/commons/lang3/function/FailablePredicate;Lorg/apache/commons/lang3/function/FailablePredicate;)Lorg/apache/commons/lang3/function/FailablePredicate;
      12: areturn

  public abstract boolean test(T) throws E;

  private boolean lambda$or$4(org.apache.commons.lang3.function.FailablePredicate, java.lang.Object) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_2
       2: invokeinterface #7,  2            // InterfaceMethod test:(Ljava/lang/Object;)Z
       7: ifne          20
      10: aload_1
      11: aload_2
      12: invokeinterface #7,  2            // InterfaceMethod test:(Ljava/lang/Object;)Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  private boolean lambda$negate$3(java.lang.Object) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #7,  2            // InterfaceMethod test:(Ljava/lang/Object;)Z
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  private boolean lambda$and$2(org.apache.commons.lang3.function.FailablePredicate, java.lang.Object) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_2
       2: invokeinterface #7,  2            // InterfaceMethod test:(Ljava/lang/Object;)Z
       7: ifeq          24
      10: aload_1
      11: aload_2
      12: invokeinterface #7,  2            // InterfaceMethod test:(Ljava/lang/Object;)Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  private static boolean lambda$static$1(java.lang.Object) throws java.lang.Throwable;
    Code:
       0: iconst_1
       1: ireturn

  private static boolean lambda$static$0(java.lang.Object) throws java.lang.Throwable;
    Code:
       0: iconst_0
       1: ireturn

  static {};
    Code:
       0: invokedynamic #8,  0              // InvokeDynamic #3:test:()Lorg/apache/commons/lang3/function/FailablePredicate;
       5: putstatic     #1                  // Field FALSE:Lorg/apache/commons/lang3/function/FailablePredicate;
       8: invokedynamic #9,  0              // InvokeDynamic #4:test:()Lorg/apache/commons/lang3/function/FailablePredicate;
      13: putstatic     #2                  // Field TRUE:Lorg/apache/commons/lang3/function/FailablePredicate;
      16: return
}
