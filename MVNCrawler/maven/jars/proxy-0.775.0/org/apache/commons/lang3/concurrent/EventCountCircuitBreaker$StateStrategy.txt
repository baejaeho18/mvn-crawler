Compiled from "EventCountCircuitBreaker.java"
abstract class org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$StateStrategy {
  private org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$StateStrategy();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public boolean isCheckIntervalFinished(org.apache.commons.lang3.concurrent.EventCountCircuitBreaker, org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$CheckIntervalData, long);
    Code:
       0: lload_3
       1: aload_2
       2: invokevirtual #3                  // Method org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData.getCheckIntervalStart:()J
       5: lsub
       6: aload_0
       7: aload_1
       8: invokevirtual #4                  // Method fetchCheckInterval:(Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker;)J
      11: lcmp
      12: ifle          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  public abstract boolean isStateTransition(org.apache.commons.lang3.concurrent.EventCountCircuitBreaker, org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$CheckIntervalData, org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$CheckIntervalData);

  protected abstract long fetchCheckInterval(org.apache.commons.lang3.concurrent.EventCountCircuitBreaker);

  org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$StateStrategy(org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
