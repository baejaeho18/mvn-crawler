Compiled from "Buffers.java"
public final class org.xnio.Buffers {
  private static final byte[] NO_BYTES;

  public static final java.nio.ByteBuffer EMPTY_BYTE_BUFFER;

  public static final org.xnio.Pooled<java.nio.ByteBuffer> EMPTY_POOLED_BYTE_BUFFER;

  private org.xnio.Buffers();
    Code:
       0: aload_0
       1: invokespecial #36                 // Method java/lang/Object."<init>":()V
       4: return

  public static <T extends java.nio.Buffer> T flip(T);
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method java/nio/Buffer.flip:()Ljava/nio/Buffer;
       4: pop
       5: aload_0
       6: areturn

  public static <T extends java.nio.Buffer> T clear(T);
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method java/nio/Buffer.clear:()Ljava/nio/Buffer;
       4: pop
       5: aload_0
       6: areturn

  public static <T extends java.nio.Buffer> T limit(T, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #58                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
       5: pop
       6: aload_0
       7: areturn

  public static <T extends java.nio.Buffer> T mark(T);
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method java/nio/Buffer.mark:()Ljava/nio/Buffer;
       4: pop
       5: aload_0
       6: areturn

  public static <T extends java.nio.Buffer> T position(T, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #65                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
       5: pop
       6: aload_0
       7: areturn

  public static <T extends java.nio.Buffer> T reset(T);
    Code:
       0: aload_0
       1: invokevirtual #68                 // Method java/nio/Buffer.reset:()Ljava/nio/Buffer;
       4: pop
       5: aload_0
       6: areturn

  public static <T extends java.nio.Buffer> T rewind(T);
    Code:
       0: aload_0
       1: invokevirtual #71                 // Method java/nio/Buffer.rewind:()Ljava/nio/Buffer;
       4: pop
       5: aload_0
       6: areturn

  public static java.nio.ByteBuffer slice(java.nio.ByteBuffer, int);
    Code:
       0: aload_0
       1: invokevirtual #79                 // Method java/nio/ByteBuffer.remaining:()I
       4: istore_2
       5: iload_1
       6: iload_2
       7: if_icmpgt     16
      10: iload_1
      11: iload_2
      12: ineg
      13: if_icmpge     25
      16: getstatic     #85                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      19: invokeinterface #89,  1           // InterfaceMethod org/xnio/_private/Messages.bufferUnderflow:()Ljava/nio/BufferUnderflowException;
      24: athrow
      25: aload_0
      26: invokevirtual #91                 // Method java/nio/ByteBuffer.position:()I
      29: istore_3
      30: aload_0
      31: invokevirtual #93                 // Method java/nio/ByteBuffer.limit:()I
      34: istore        4
      36: iload_1
      37: ifge          95
      40: aload_0
      41: iload         4
      43: iload_1
      44: iadd
      45: invokevirtual #94                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      48: pop
      49: aload_0
      50: invokevirtual #97                 // Method java/nio/ByteBuffer.slice:()Ljava/nio/ByteBuffer;
      53: astore        5
      55: aload_0
      56: iload         4
      58: invokevirtual #94                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      61: pop
      62: aload_0
      63: iload         4
      65: iload_1
      66: iadd
      67: invokevirtual #98                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      70: pop
      71: aload         5
      73: areturn
      74: astore        6
      76: aload_0
      77: iload         4
      79: invokevirtual #94                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      82: pop
      83: aload_0
      84: iload         4
      86: iload_1
      87: iadd
      88: invokevirtual #98                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      91: pop
      92: aload         6
      94: athrow
      95: aload_0
      96: iload_3
      97: iload_1
      98: iadd
      99: invokevirtual #94                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     102: pop
     103: aload_0
     104: invokevirtual #97                 // Method java/nio/ByteBuffer.slice:()Ljava/nio/ByteBuffer;
     107: astore        5
     109: aload_0
     110: iload         4
     112: invokevirtual #94                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     115: pop
     116: aload_0
     117: iload_3
     118: iload_1
     119: iadd
     120: invokevirtual #98                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     123: pop
     124: aload         5
     126: areturn
     127: astore        7
     129: aload_0
     130: iload         4
     132: invokevirtual #94                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     135: pop
     136: aload_0
     137: iload_3
     138: iload_1
     139: iadd
     140: invokevirtual #98                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     143: pop
     144: aload         7
     146: athrow
    Exception table:
       from    to  target type
          49    55    74   any
          74    76    74   any
         103   109   127   any
         127   129   127   any

  public static java.nio.ByteBuffer copy(java.nio.ByteBuffer, int, org.xnio.BufferAllocator<java.nio.ByteBuffer>);
    Code:
       0: aload_0
       1: invokevirtual #79                 // Method java/nio/ByteBuffer.remaining:()I
       4: istore_3
       5: iload_1
       6: iload_3
       7: if_icmpgt     16
      10: iload_1
      11: iload_3
      12: ineg
      13: if_icmpge     25
      16: getstatic     #85                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      19: invokeinterface #89,  1           // InterfaceMethod org/xnio/_private/Messages.bufferUnderflow:()Ljava/nio/BufferUnderflowException;
      24: athrow
      25: aload_0
      26: invokevirtual #91                 // Method java/nio/ByteBuffer.position:()I
      29: istore        4
      31: aload_0
      32: invokevirtual #93                 // Method java/nio/ByteBuffer.limit:()I
      35: istore        5
      37: iload_1
      38: ifge          114
      41: aload_2
      42: iload_1
      43: ineg
      44: invokeinterface #112,  2          // InterfaceMethod org/xnio/BufferAllocator.allocate:(I)Ljava/nio/Buffer;
      49: checkcast     #75                 // class java/nio/ByteBuffer
      52: astore        6
      54: aload_0
      55: iload         5
      57: iload_1
      58: iadd
      59: invokevirtual #98                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      62: pop
      63: aload         6
      65: aload_0
      66: invokevirtual #116                // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      69: pop
      70: aload         6
      72: astore        7
      74: aload_0
      75: iload         5
      77: invokevirtual #94                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      80: pop
      81: aload_0
      82: iload         5
      84: iload_1
      85: iadd
      86: invokevirtual #98                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      89: pop
      90: aload         7
      92: areturn
      93: astore        8
      95: aload_0
      96: iload         5
      98: invokevirtual #94                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     101: pop
     102: aload_0
     103: iload         5
     105: iload_1
     106: iadd
     107: invokevirtual #98                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     110: pop
     111: aload         8
     113: athrow
     114: aload_2
     115: iload_1
     116: invokeinterface #112,  2          // InterfaceMethod org/xnio/BufferAllocator.allocate:(I)Ljava/nio/Buffer;
     121: checkcast     #75                 // class java/nio/ByteBuffer
     124: astore        6
     126: aload_0
     127: iload         4
     129: iload_1
     130: iadd
     131: invokevirtual #94                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     134: pop
     135: aload         6
     137: aload_0
     138: invokevirtual #116                // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
     141: pop
     142: aload         6
     144: astore        7
     146: aload_0
     147: iload         5
     149: invokevirtual #94                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     152: pop
     153: aload_0
     154: iload         4
     156: iload_1
     157: iadd
     158: invokevirtual #98                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     161: pop
     162: aload         7
     164: areturn
     165: astore        9
     167: aload_0
     168: iload         5
     170: invokevirtual #94                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     173: pop
     174: aload_0
     175: iload         4
     177: iload_1
     178: iadd
     179: invokevirtual #98                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     182: pop
     183: aload         9
     185: athrow
    Exception table:
       from    to  target type
          63    74    93   any
          93    95    93   any
         135   146   165   any
         165   167   165   any

  public static int copy(java.nio.ByteBuffer, java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: invokevirtual #79                 // Method java/nio/ByteBuffer.remaining:()I
       4: istore_2
       5: aload_0
       6: invokevirtual #79                 // Method java/nio/ByteBuffer.remaining:()I
       9: istore_3
      10: iload_3
      11: iload_2
      12: if_icmplt     23
      15: aload_0
      16: aload_1
      17: invokevirtual #116                // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      20: pop
      21: iload_2
      22: ireturn
      23: aload_0
      24: aload_1
      25: iload_3
      26: invokestatic  #124                // Method slice:(Ljava/nio/ByteBuffer;I)Ljava/nio/ByteBuffer;
      29: invokevirtual #116                // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      32: pop
      33: iload_3
      34: ireturn

  public static int copy(java.nio.ByteBuffer[], int, int, java.nio.ByteBuffer);
    Code:
       0: iconst_0
       1: istore        4
       3: iconst_0
       4: istore        5
       6: iload         5
       8: iload_2
       9: if_icmpge     91
      12: aload_0
      13: iload         5
      15: iload_1
      16: iadd
      17: aaload
      18: astore        6
      20: aload         6
      22: invokevirtual #79                 // Method java/nio/ByteBuffer.remaining:()I
      25: istore        7
      27: iload         7
      29: ifne          35
      32: goto          85
      35: iload         7
      37: aload_3
      38: invokevirtual #79                 // Method java/nio/ByteBuffer.remaining:()I
      41: if_icmpge     66
      44: aload         6
      46: aload_3
      47: iload         7
      49: invokestatic  #124                // Method slice:(Ljava/nio/ByteBuffer;I)Ljava/nio/ByteBuffer;
      52: invokevirtual #116                // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      55: pop
      56: iload         4
      58: iload         7
      60: iadd
      61: istore        4
      63: goto          85
      66: iload         4
      68: aload_3
      69: invokevirtual #79                 // Method java/nio/ByteBuffer.remaining:()I
      72: iadd
      73: istore        4
      75: aload         6
      77: aload_3
      78: invokevirtual #116                // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      81: pop
      82: iload         4
      84: ireturn
      85: iinc          5, 1
      88: goto          6
      91: iload         4
      93: ireturn

  public static int copy(java.nio.ByteBuffer, java.nio.ByteBuffer[], int, int);
    Code:
       0: iconst_0
       1: istore        4
       3: iconst_0
       4: istore        5
       6: iload         5
       8: iload_3
       9: if_icmpge     90
      12: aload_1
      13: iload         5
      15: iload_2
      16: iadd
      17: aaload
      18: astore        6
      20: aload         6
      22: invokevirtual #79                 // Method java/nio/ByteBuffer.remaining:()I
      25: istore        7
      27: iload         7
      29: ifne          35
      32: goto          84
      35: iload         7
      37: aload_0
      38: invokevirtual #79                 // Method java/nio/ByteBuffer.remaining:()I
      41: if_icmple     70
      44: iload         4
      46: aload_0
      47: invokevirtual #79                 // Method java/nio/ByteBuffer.remaining:()I
      50: iadd
      51: istore        4
      53: aload_0
      54: aload         6
      56: aload_0
      57: invokevirtual #79                 // Method java/nio/ByteBuffer.remaining:()I
      60: invokestatic  #124                // Method slice:(Ljava/nio/ByteBuffer;I)Ljava/nio/ByteBuffer;
      63: invokevirtual #116                // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      66: pop
      67: iload         4
      69: ireturn
      70: aload_0
      71: aload         6
      73: invokevirtual #116                // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      76: pop
      77: iload         4
      79: iload         7
      81: iadd
      82: istore        4
      84: iinc          5, 1
      87: goto          6
      90: iload         4
      92: ireturn

  public static long copy(java.nio.ByteBuffer[], int, int, java.nio.ByteBuffer[], int, int);
    Code:
       0: lconst_0
       1: lstore        6
       3: iconst_0
       4: istore        8
       6: iconst_0
       7: istore        9
       9: iload_2
      10: ifeq          18
      13: iload         5
      15: ifne          20
      18: lconst_0
      19: lreturn
      20: aload_3
      21: iload         4
      23: aaload
      24: astore        10
      26: aload_0
      27: iload_1
      28: aaload
      29: astore        11
      31: iload         8
      33: iload         5
      35: if_icmpge     163
      38: iload         9
      40: iload_2
      41: if_icmpge     163
      44: aload_3
      45: iload         4
      47: iload         8
      49: iadd
      50: aaload
      51: astore        10
      53: aload_0
      54: iload_1
      55: iload         9
      57: iadd
      58: aaload
      59: astore        11
      61: aload         10
      63: invokevirtual #79                 // Method java/nio/ByteBuffer.remaining:()I
      66: istore        12
      68: aload         11
      70: invokevirtual #79                 // Method java/nio/ByteBuffer.remaining:()I
      73: istore        13
      75: iload         12
      77: iload         13
      79: if_icmpge     104
      82: aload         11
      84: aload         10
      86: invokevirtual #116                // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      89: pop
      90: iinc          8, 1
      93: lload         6
      95: iload         12
      97: i2l
      98: ladd
      99: lstore        6
     101: goto          160
     104: iload         12
     106: iload         13
     108: if_icmple     138
     111: aload         11
     113: aload         10
     115: iload         13
     117: invokestatic  #124                // Method slice:(Ljava/nio/ByteBuffer;I)Ljava/nio/ByteBuffer;
     120: invokevirtual #116                // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
     123: pop
     124: iinc          9, 1
     127: lload         6
     129: iload         13
     131: i2l
     132: ladd
     133: lstore        6
     135: goto          160
     138: aload         11
     140: aload         10
     142: invokevirtual #116                // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
     145: pop
     146: iinc          8, 1
     149: iinc          9, 1
     152: lload         6
     154: iload         12
     156: i2l
     157: ladd
     158: lstore        6
     160: goto          31
     163: lload         6
     165: lreturn

  public static int copy(int, java.nio.ByteBuffer, java.nio.ByteBuffer);
    Code:
       0: iload_0
       1: iflt          22
       4: iload_0
       5: aload_2
       6: invokevirtual #79                 // Method java/nio/ByteBuffer.remaining:()I
       9: invokestatic  #154                // Method java/lang/Math.min:(II)I
      12: aload_1
      13: invokevirtual #79                 // Method java/nio/ByteBuffer.remaining:()I
      16: invokestatic  #154                // Method java/lang/Math.min:(II)I
      19: goto          39
      22: iload_0
      23: aload_2
      24: invokevirtual #79                 // Method java/nio/ByteBuffer.remaining:()I
      27: ineg
      28: invokestatic  #157                // Method java/lang/Math.max:(II)I
      31: aload_1
      32: invokevirtual #79                 // Method java/nio/ByteBuffer.remaining:()I
      35: ineg
      36: invokestatic  #157                // Method java/lang/Math.max:(II)I
      39: istore_3
      40: aload_2
      41: iload_3
      42: invokestatic  #124                // Method slice:(Ljava/nio/ByteBuffer;I)Ljava/nio/ByteBuffer;
      45: astore        4
      47: aload_1
      48: aload         4
      50: invokevirtual #116                // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      53: pop
      54: aload         4
      56: invokevirtual #91                 // Method java/nio/ByteBuffer.position:()I
      59: ireturn

  public static int copy(int, java.nio.ByteBuffer[], int, int, java.nio.ByteBuffer);
    Code:
       0: aload         4
       2: invokevirtual #79                 // Method java/nio/ByteBuffer.remaining:()I
       5: iload_0
       6: if_icmple     76
       9: aload         4
      11: invokevirtual #93                 // Method java/nio/ByteBuffer.limit:()I
      14: istore        5
      16: iload_0
      17: ifge          29
      20: getstatic     #85                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      23: invokeinterface #163,  1          // InterfaceMethod org/xnio/_private/Messages.copyNegative:()Ljava/lang/UnsupportedOperationException;
      28: athrow
      29: aload         4
      31: aload         4
      33: invokevirtual #91                 // Method java/nio/ByteBuffer.position:()I
      36: iload_0
      37: iadd
      38: invokevirtual #94                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      41: pop
      42: aload_1
      43: iload_2
      44: iload_3
      45: aload         4
      47: invokestatic  #165                // Method copy:([Ljava/nio/ByteBuffer;IILjava/nio/ByteBuffer;)I
      50: istore        6
      52: aload         4
      54: iload         5
      56: invokevirtual #94                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      59: pop
      60: iload         6
      62: ireturn
      63: astore        7
      65: aload         4
      67: iload         5
      69: invokevirtual #94                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      72: pop
      73: aload         7
      75: athrow
      76: aload_1
      77: iload_2
      78: iload_3
      79: aload         4
      81: invokestatic  #165                // Method copy:([Ljava/nio/ByteBuffer;IILjava/nio/ByteBuffer;)I
      84: ireturn
    Exception table:
       from    to  target type
          29    52    63   any
          63    65    63   any

  public static int copy(int, java.nio.ByteBuffer, java.nio.ByteBuffer[], int, int);
    Code:
       0: aload_1
       1: invokevirtual #79                 // Method java/nio/ByteBuffer.remaining:()I
       4: iload_0
       5: if_icmple     77
       8: iload_0
       9: ifge          21
      12: getstatic     #85                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      15: invokeinterface #163,  1          // InterfaceMethod org/xnio/_private/Messages.copyNegative:()Ljava/lang/UnsupportedOperationException;
      20: athrow
      21: aload_1
      22: invokevirtual #93                 // Method java/nio/ByteBuffer.limit:()I
      25: istore        5
      27: aload_1
      28: aload_1
      29: invokevirtual #91                 // Method java/nio/ByteBuffer.position:()I
      32: iload_0
      33: aload_1
      34: invokevirtual #79                 // Method java/nio/ByteBuffer.remaining:()I
      37: invokestatic  #154                // Method java/lang/Math.min:(II)I
      40: iadd
      41: invokevirtual #94                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      44: pop
      45: aload_1
      46: aload_2
      47: iload_3
      48: iload         4
      50: invokestatic  #169                // Method copy:(Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;II)I
      53: istore        6
      55: aload_1
      56: iload         5
      58: invokevirtual #94                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      61: pop
      62: iload         6
      64: ireturn
      65: astore        7
      67: aload_1
      68: iload         5
      70: invokevirtual #94                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      73: pop
      74: aload         7
      76: athrow
      77: aload_1
      78: aload_2
      79: iload_3
      80: iload         4
      82: invokestatic  #169                // Method copy:(Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;II)I
      85: ireturn
    Exception table:
       from    to  target type
          27    55    65   any
          65    67    65   any

  public static long copy(long, java.nio.ByteBuffer[], int, int, java.nio.ByteBuffer[], int, int);
    Code:
       0: lconst_0
       1: lstore        8
       3: iconst_0
       4: istore        10
       6: iconst_0
       7: istore        11
       9: lload_0
      10: lconst_0
      11: lcmp
      12: ifge          24
      15: getstatic     #85                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      18: invokeinterface #163,  1          // InterfaceMethod org/xnio/_private/Messages.copyNegative:()Ljava/lang/UnsupportedOperationException;
      23: athrow
      24: iload         4
      26: ifeq          40
      29: iload         7
      31: ifeq          40
      34: lload_0
      35: lconst_0
      36: lcmp
      37: ifne          42
      40: lconst_0
      41: lreturn
      42: iload         10
      44: iload         7
      46: if_icmpge     200
      49: iload         11
      51: iload         4
      53: if_icmpge     200
      56: aload         5
      58: iload         6
      60: iload         10
      62: iadd
      63: aaload
      64: astore        12
      66: aload_2
      67: iload_3
      68: iload         11
      70: iadd
      71: aaload
      72: astore        13
      74: aload         12
      76: invokevirtual #79                 // Method java/nio/ByteBuffer.remaining:()I
      79: istore        14
      81: lload_0
      82: aload         13
      84: invokevirtual #79                 // Method java/nio/ByteBuffer.remaining:()I
      87: i2l
      88: invokestatic  #174                // Method java/lang/Math.min:(JJ)J
      91: l2i
      92: istore        15
      94: iload         14
      96: iload         15
      98: if_icmpge     129
     101: aload         13
     103: aload         12
     105: invokevirtual #116                // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
     108: pop
     109: iinc          10, 1
     112: lload         8
     114: iload         14
     116: i2l
     117: ladd
     118: lstore        8
     120: lload_0
     121: iload         14
     123: i2l
     124: lsub
     125: lstore_0
     126: goto          197
     129: iload         14
     131: iload         15
     133: if_icmple     169
     136: aload         13
     138: aload         12
     140: iload         15
     142: invokestatic  #124                // Method slice:(Ljava/nio/ByteBuffer;I)Ljava/nio/ByteBuffer;
     145: invokevirtual #116                // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
     148: pop
     149: iinc          11, 1
     152: lload         8
     154: iload         15
     156: i2l
     157: ladd
     158: lstore        8
     160: lload_0
     161: iload         15
     163: i2l
     164: lsub
     165: lstore_0
     166: goto          197
     169: aload         13
     171: aload         12
     173: invokevirtual #116                // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
     176: pop
     177: iinc          10, 1
     180: iinc          11, 1
     183: lload         8
     185: iload         14
     187: i2l
     188: ladd
     189: lstore        8
     191: lload_0
     192: iload         14
     194: i2l
     195: lsub
     196: lstore_0
     197: goto          42
     200: lload         8
     202: lreturn

  public static java.nio.ByteBuffer fill(java.nio.ByteBuffer, int, int);
    Code:
       0: iload_2
       1: aload_0
       2: invokevirtual #79                 // Method java/nio/ByteBuffer.remaining:()I
       5: if_icmple     17
       8: getstatic     #85                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      11: invokeinterface #89,  1           // InterfaceMethod org/xnio/_private/Messages.bufferUnderflow:()Ljava/nio/BufferUnderflowException;
      16: athrow
      17: aload_0
      18: invokevirtual #180                // Method java/nio/ByteBuffer.hasArray:()Z
      21: ifeq          59
      24: aload_0
      25: invokevirtual #183                // Method java/nio/ByteBuffer.arrayOffset:()I
      28: istore_3
      29: aload_0
      30: invokevirtual #187                // Method java/nio/ByteBuffer.array:()[B
      33: iload_3
      34: aload_0
      35: invokevirtual #91                 // Method java/nio/ByteBuffer.position:()I
      38: iadd
      39: iload_3
      40: aload_0
      41: invokevirtual #93                 // Method java/nio/ByteBuffer.limit:()I
      44: iadd
      45: iload_1
      46: i2b
      47: invokestatic  #192                // Method java/util/Arrays.fill:([BIIB)V
      50: aload_0
      51: iload_2
      52: invokestatic  #195                // Method skip:(Ljava/nio/Buffer;I)Ljava/nio/Buffer;
      55: pop
      56: goto          78
      59: iload_2
      60: istore_3
      61: iload_3
      62: ifle          78
      65: aload_0
      66: iload_1
      67: i2b
      68: invokevirtual #198                // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      71: pop
      72: iinc          3, -1
      75: goto          61
      78: aload_0
      79: areturn

  public static java.nio.CharBuffer slice(java.nio.CharBuffer, int);
    Code:
       0: iload_1
       1: aload_0
       2: invokevirtual #204                // Method java/nio/CharBuffer.remaining:()I
       5: if_icmpgt     17
       8: iload_1
       9: aload_0
      10: invokevirtual #204                // Method java/nio/CharBuffer.remaining:()I
      13: ineg
      14: if_icmpge     26
      17: getstatic     #85                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      20: invokeinterface #89,  1           // InterfaceMethod org/xnio/_private/Messages.bufferUnderflow:()Ljava/nio/BufferUnderflowException;
      25: athrow
      26: aload_0
      27: invokevirtual #205                // Method java/nio/CharBuffer.position:()I
      30: istore_2
      31: aload_0
      32: invokevirtual #206                // Method java/nio/CharBuffer.limit:()I
      35: istore_3
      36: iload_1
      37: ifge          90
      40: aload_0
      41: iload_3
      42: iload_1
      43: iadd
      44: invokevirtual #207                // Method java/nio/CharBuffer.limit:(I)Ljava/nio/Buffer;
      47: pop
      48: aload_0
      49: invokevirtual #210                // Method java/nio/CharBuffer.slice:()Ljava/nio/CharBuffer;
      52: astore        4
      54: aload_0
      55: iload_3
      56: invokevirtual #207                // Method java/nio/CharBuffer.limit:(I)Ljava/nio/Buffer;
      59: pop
      60: aload_0
      61: iload_3
      62: iload_1
      63: iadd
      64: invokevirtual #211                // Method java/nio/CharBuffer.position:(I)Ljava/nio/Buffer;
      67: pop
      68: aload         4
      70: areturn
      71: astore        5
      73: aload_0
      74: iload_3
      75: invokevirtual #207                // Method java/nio/CharBuffer.limit:(I)Ljava/nio/Buffer;
      78: pop
      79: aload_0
      80: iload_3
      81: iload_1
      82: iadd
      83: invokevirtual #211                // Method java/nio/CharBuffer.position:(I)Ljava/nio/Buffer;
      86: pop
      87: aload         5
      89: athrow
      90: aload_0
      91: iload_2
      92: iload_1
      93: iadd
      94: invokevirtual #207                // Method java/nio/CharBuffer.limit:(I)Ljava/nio/Buffer;
      97: pop
      98: aload_0
      99: invokevirtual #210                // Method java/nio/CharBuffer.slice:()Ljava/nio/CharBuffer;
     102: astore        4
     104: aload_0
     105: iload_3
     106: invokevirtual #207                // Method java/nio/CharBuffer.limit:(I)Ljava/nio/Buffer;
     109: pop
     110: aload_0
     111: iload_2
     112: iload_1
     113: iadd
     114: invokevirtual #211                // Method java/nio/CharBuffer.position:(I)Ljava/nio/Buffer;
     117: pop
     118: aload         4
     120: areturn
     121: astore        6
     123: aload_0
     124: iload_3
     125: invokevirtual #207                // Method java/nio/CharBuffer.limit:(I)Ljava/nio/Buffer;
     128: pop
     129: aload_0
     130: iload_2
     131: iload_1
     132: iadd
     133: invokevirtual #211                // Method java/nio/CharBuffer.position:(I)Ljava/nio/Buffer;
     136: pop
     137: aload         6
     139: athrow
    Exception table:
       from    to  target type
          48    54    71   any
          71    73    71   any
          98   104   121   any
         121   123   121   any

  public static java.nio.CharBuffer fill(java.nio.CharBuffer, int, int);
    Code:
       0: iload_2
       1: aload_0
       2: invokevirtual #204                // Method java/nio/CharBuffer.remaining:()I
       5: if_icmple     17
       8: getstatic     #85                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      11: invokeinterface #89,  1           // InterfaceMethod org/xnio/_private/Messages.bufferUnderflow:()Ljava/nio/BufferUnderflowException;
      16: athrow
      17: aload_0
      18: invokevirtual #214                // Method java/nio/CharBuffer.hasArray:()Z
      21: ifeq          59
      24: aload_0
      25: invokevirtual #215                // Method java/nio/CharBuffer.arrayOffset:()I
      28: istore_3
      29: aload_0
      30: invokevirtual #218                // Method java/nio/CharBuffer.array:()[C
      33: iload_3
      34: aload_0
      35: invokevirtual #205                // Method java/nio/CharBuffer.position:()I
      38: iadd
      39: iload_3
      40: aload_0
      41: invokevirtual #206                // Method java/nio/CharBuffer.limit:()I
      44: iadd
      45: iload_1
      46: i2c
      47: invokestatic  #221                // Method java/util/Arrays.fill:([CIIC)V
      50: aload_0
      51: iload_2
      52: invokestatic  #195                // Method skip:(Ljava/nio/Buffer;I)Ljava/nio/Buffer;
      55: pop
      56: goto          78
      59: iload_2
      60: istore_3
      61: iload_3
      62: ifle          78
      65: aload_0
      66: iload_1
      67: i2c
      68: invokevirtual #224                // Method java/nio/CharBuffer.put:(C)Ljava/nio/CharBuffer;
      71: pop
      72: iinc          3, -1
      75: goto          61
      78: aload_0
      79: areturn

  public static java.nio.ShortBuffer slice(java.nio.ShortBuffer, int);
    Code:
       0: iload_1
       1: aload_0
       2: invokevirtual #228                // Method java/nio/ShortBuffer.remaining:()I
       5: if_icmpgt     17
       8: iload_1
       9: aload_0
      10: invokevirtual #228                // Method java/nio/ShortBuffer.remaining:()I
      13: ineg
      14: if_icmpge     26
      17: getstatic     #85                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      20: invokeinterface #89,  1           // InterfaceMethod org/xnio/_private/Messages.bufferUnderflow:()Ljava/nio/BufferUnderflowException;
      25: athrow
      26: aload_0
      27: invokevirtual #229                // Method java/nio/ShortBuffer.position:()I
      30: istore_2
      31: aload_0
      32: invokevirtual #230                // Method java/nio/ShortBuffer.limit:()I
      35: istore_3
      36: iload_1
      37: ifge          90
      40: aload_0
      41: iload_3
      42: iload_1
      43: iadd
      44: invokevirtual #231                // Method java/nio/ShortBuffer.limit:(I)Ljava/nio/Buffer;
      47: pop
      48: aload_0
      49: invokevirtual #234                // Method java/nio/ShortBuffer.slice:()Ljava/nio/ShortBuffer;
      52: astore        4
      54: aload_0
      55: iload_3
      56: invokevirtual #231                // Method java/nio/ShortBuffer.limit:(I)Ljava/nio/Buffer;
      59: pop
      60: aload_0
      61: iload_3
      62: iload_1
      63: iadd
      64: invokevirtual #235                // Method java/nio/ShortBuffer.position:(I)Ljava/nio/Buffer;
      67: pop
      68: aload         4
      70: areturn
      71: astore        5
      73: aload_0
      74: iload_3
      75: invokevirtual #231                // Method java/nio/ShortBuffer.limit:(I)Ljava/nio/Buffer;
      78: pop
      79: aload_0
      80: iload_3
      81: iload_1
      82: iadd
      83: invokevirtual #235                // Method java/nio/ShortBuffer.position:(I)Ljava/nio/Buffer;
      86: pop
      87: aload         5
      89: athrow
      90: aload_0
      91: iload_2
      92: iload_1
      93: iadd
      94: invokevirtual #231                // Method java/nio/ShortBuffer.limit:(I)Ljava/nio/Buffer;
      97: pop
      98: aload_0
      99: invokevirtual #234                // Method java/nio/ShortBuffer.slice:()Ljava/nio/ShortBuffer;
     102: astore        4
     104: aload_0
     105: iload_3
     106: invokevirtual #231                // Method java/nio/ShortBuffer.limit:(I)Ljava/nio/Buffer;
     109: pop
     110: aload_0
     111: iload_2
     112: iload_1
     113: iadd
     114: invokevirtual #235                // Method java/nio/ShortBuffer.position:(I)Ljava/nio/Buffer;
     117: pop
     118: aload         4
     120: areturn
     121: astore        6
     123: aload_0
     124: iload_3
     125: invokevirtual #231                // Method java/nio/ShortBuffer.limit:(I)Ljava/nio/Buffer;
     128: pop
     129: aload_0
     130: iload_2
     131: iload_1
     132: iadd
     133: invokevirtual #235                // Method java/nio/ShortBuffer.position:(I)Ljava/nio/Buffer;
     136: pop
     137: aload         6
     139: athrow
    Exception table:
       from    to  target type
          48    54    71   any
          71    73    71   any
          98   104   121   any
         121   123   121   any

  public static java.nio.ShortBuffer fill(java.nio.ShortBuffer, int, int);
    Code:
       0: iload_2
       1: aload_0
       2: invokevirtual #228                // Method java/nio/ShortBuffer.remaining:()I
       5: if_icmple     17
       8: getstatic     #85                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      11: invokeinterface #89,  1           // InterfaceMethod org/xnio/_private/Messages.bufferUnderflow:()Ljava/nio/BufferUnderflowException;
      16: athrow
      17: aload_0
      18: invokevirtual #238                // Method java/nio/ShortBuffer.hasArray:()Z
      21: ifeq          59
      24: aload_0
      25: invokevirtual #239                // Method java/nio/ShortBuffer.arrayOffset:()I
      28: istore_3
      29: aload_0
      30: invokevirtual #242                // Method java/nio/ShortBuffer.array:()[S
      33: iload_3
      34: aload_0
      35: invokevirtual #229                // Method java/nio/ShortBuffer.position:()I
      38: iadd
      39: iload_3
      40: aload_0
      41: invokevirtual #230                // Method java/nio/ShortBuffer.limit:()I
      44: iadd
      45: iload_1
      46: i2s
      47: invokestatic  #245                // Method java/util/Arrays.fill:([SIIS)V
      50: aload_0
      51: iload_2
      52: invokestatic  #195                // Method skip:(Ljava/nio/Buffer;I)Ljava/nio/Buffer;
      55: pop
      56: goto          78
      59: iload_2
      60: istore_3
      61: iload_3
      62: ifle          78
      65: aload_0
      66: iload_1
      67: i2s
      68: invokevirtual #248                // Method java/nio/ShortBuffer.put:(S)Ljava/nio/ShortBuffer;
      71: pop
      72: iinc          3, -1
      75: goto          61
      78: aload_0
      79: areturn

  public static java.nio.IntBuffer slice(java.nio.IntBuffer, int);
    Code:
       0: iload_1
       1: aload_0
       2: invokevirtual #252                // Method java/nio/IntBuffer.remaining:()I
       5: if_icmpgt     17
       8: iload_1
       9: aload_0
      10: invokevirtual #252                // Method java/nio/IntBuffer.remaining:()I
      13: ineg
      14: if_icmpge     26
      17: getstatic     #85                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      20: invokeinterface #89,  1           // InterfaceMethod org/xnio/_private/Messages.bufferUnderflow:()Ljava/nio/BufferUnderflowException;
      25: athrow
      26: aload_0
      27: invokevirtual #253                // Method java/nio/IntBuffer.position:()I
      30: istore_2
      31: aload_0
      32: invokevirtual #254                // Method java/nio/IntBuffer.limit:()I
      35: istore_3
      36: iload_1
      37: ifge          90
      40: aload_0
      41: iload_3
      42: iload_1
      43: iadd
      44: invokevirtual #255                // Method java/nio/IntBuffer.limit:(I)Ljava/nio/Buffer;
      47: pop
      48: aload_0
      49: invokevirtual #258                // Method java/nio/IntBuffer.slice:()Ljava/nio/IntBuffer;
      52: astore        4
      54: aload_0
      55: iload_3
      56: invokevirtual #255                // Method java/nio/IntBuffer.limit:(I)Ljava/nio/Buffer;
      59: pop
      60: aload_0
      61: iload_3
      62: iload_1
      63: iadd
      64: invokevirtual #259                // Method java/nio/IntBuffer.position:(I)Ljava/nio/Buffer;
      67: pop
      68: aload         4
      70: areturn
      71: astore        5
      73: aload_0
      74: iload_3
      75: invokevirtual #255                // Method java/nio/IntBuffer.limit:(I)Ljava/nio/Buffer;
      78: pop
      79: aload_0
      80: iload_3
      81: iload_1
      82: iadd
      83: invokevirtual #259                // Method java/nio/IntBuffer.position:(I)Ljava/nio/Buffer;
      86: pop
      87: aload         5
      89: athrow
      90: aload_0
      91: iload_2
      92: iload_1
      93: iadd
      94: invokevirtual #255                // Method java/nio/IntBuffer.limit:(I)Ljava/nio/Buffer;
      97: pop
      98: aload_0
      99: invokevirtual #258                // Method java/nio/IntBuffer.slice:()Ljava/nio/IntBuffer;
     102: astore        4
     104: aload_0
     105: iload_3
     106: invokevirtual #255                // Method java/nio/IntBuffer.limit:(I)Ljava/nio/Buffer;
     109: pop
     110: aload_0
     111: iload_2
     112: iload_1
     113: iadd
     114: invokevirtual #259                // Method java/nio/IntBuffer.position:(I)Ljava/nio/Buffer;
     117: pop
     118: aload         4
     120: areturn
     121: astore        6
     123: aload_0
     124: iload_3
     125: invokevirtual #255                // Method java/nio/IntBuffer.limit:(I)Ljava/nio/Buffer;
     128: pop
     129: aload_0
     130: iload_2
     131: iload_1
     132: iadd
     133: invokevirtual #259                // Method java/nio/IntBuffer.position:(I)Ljava/nio/Buffer;
     136: pop
     137: aload         6
     139: athrow
    Exception table:
       from    to  target type
          48    54    71   any
          71    73    71   any
          98   104   121   any
         121   123   121   any

  public static java.nio.IntBuffer fill(java.nio.IntBuffer, int, int);
    Code:
       0: iload_2
       1: aload_0
       2: invokevirtual #252                // Method java/nio/IntBuffer.remaining:()I
       5: if_icmple     17
       8: getstatic     #85                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      11: invokeinterface #89,  1           // InterfaceMethod org/xnio/_private/Messages.bufferUnderflow:()Ljava/nio/BufferUnderflowException;
      16: athrow
      17: aload_0
      18: invokevirtual #262                // Method java/nio/IntBuffer.hasArray:()Z
      21: ifeq          58
      24: aload_0
      25: invokevirtual #263                // Method java/nio/IntBuffer.arrayOffset:()I
      28: istore_3
      29: aload_0
      30: invokevirtual #266                // Method java/nio/IntBuffer.array:()[I
      33: iload_3
      34: aload_0
      35: invokevirtual #253                // Method java/nio/IntBuffer.position:()I
      38: iadd
      39: iload_3
      40: aload_0
      41: invokevirtual #254                // Method java/nio/IntBuffer.limit:()I
      44: iadd
      45: iload_1
      46: invokestatic  #269                // Method java/util/Arrays.fill:([IIII)V
      49: aload_0
      50: iload_2
      51: invokestatic  #195                // Method skip:(Ljava/nio/Buffer;I)Ljava/nio/Buffer;
      54: pop
      55: goto          76
      58: iload_2
      59: istore_3
      60: iload_3
      61: ifle          76
      64: aload_0
      65: iload_1
      66: invokevirtual #272                // Method java/nio/IntBuffer.put:(I)Ljava/nio/IntBuffer;
      69: pop
      70: iinc          3, -1
      73: goto          60
      76: aload_0
      77: areturn

  public static java.nio.LongBuffer slice(java.nio.LongBuffer, int);
    Code:
       0: iload_1
       1: aload_0
       2: invokevirtual #276                // Method java/nio/LongBuffer.remaining:()I
       5: if_icmpgt     17
       8: iload_1
       9: aload_0
      10: invokevirtual #276                // Method java/nio/LongBuffer.remaining:()I
      13: ineg
      14: if_icmpge     26
      17: getstatic     #85                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      20: invokeinterface #89,  1           // InterfaceMethod org/xnio/_private/Messages.bufferUnderflow:()Ljava/nio/BufferUnderflowException;
      25: athrow
      26: aload_0
      27: invokevirtual #277                // Method java/nio/LongBuffer.position:()I
      30: istore_2
      31: aload_0
      32: invokevirtual #278                // Method java/nio/LongBuffer.limit:()I
      35: istore_3
      36: iload_1
      37: ifge          90
      40: aload_0
      41: iload_3
      42: iload_1
      43: iadd
      44: invokevirtual #279                // Method java/nio/LongBuffer.limit:(I)Ljava/nio/Buffer;
      47: pop
      48: aload_0
      49: invokevirtual #282                // Method java/nio/LongBuffer.slice:()Ljava/nio/LongBuffer;
      52: astore        4
      54: aload_0
      55: iload_3
      56: invokevirtual #279                // Method java/nio/LongBuffer.limit:(I)Ljava/nio/Buffer;
      59: pop
      60: aload_0
      61: iload_3
      62: iload_1
      63: iadd
      64: invokevirtual #283                // Method java/nio/LongBuffer.position:(I)Ljava/nio/Buffer;
      67: pop
      68: aload         4
      70: areturn
      71: astore        5
      73: aload_0
      74: iload_3
      75: invokevirtual #279                // Method java/nio/LongBuffer.limit:(I)Ljava/nio/Buffer;
      78: pop
      79: aload_0
      80: iload_3
      81: iload_1
      82: iadd
      83: invokevirtual #283                // Method java/nio/LongBuffer.position:(I)Ljava/nio/Buffer;
      86: pop
      87: aload         5
      89: athrow
      90: aload_0
      91: iload_2
      92: iload_1
      93: iadd
      94: invokevirtual #279                // Method java/nio/LongBuffer.limit:(I)Ljava/nio/Buffer;
      97: pop
      98: aload_0
      99: invokevirtual #282                // Method java/nio/LongBuffer.slice:()Ljava/nio/LongBuffer;
     102: astore        4
     104: aload_0
     105: iload_3
     106: invokevirtual #279                // Method java/nio/LongBuffer.limit:(I)Ljava/nio/Buffer;
     109: pop
     110: aload_0
     111: iload_2
     112: iload_1
     113: iadd
     114: invokevirtual #283                // Method java/nio/LongBuffer.position:(I)Ljava/nio/Buffer;
     117: pop
     118: aload         4
     120: areturn
     121: astore        6
     123: aload_0
     124: iload_3
     125: invokevirtual #279                // Method java/nio/LongBuffer.limit:(I)Ljava/nio/Buffer;
     128: pop
     129: aload_0
     130: iload_2
     131: iload_1
     132: iadd
     133: invokevirtual #283                // Method java/nio/LongBuffer.position:(I)Ljava/nio/Buffer;
     136: pop
     137: aload         6
     139: athrow
    Exception table:
       from    to  target type
          48    54    71   any
          71    73    71   any
          98   104   121   any
         121   123   121   any

  public static java.nio.LongBuffer fill(java.nio.LongBuffer, long, int);
    Code:
       0: iload_3
       1: aload_0
       2: invokevirtual #276                // Method java/nio/LongBuffer.remaining:()I
       5: if_icmple     17
       8: getstatic     #85                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      11: invokeinterface #89,  1           // InterfaceMethod org/xnio/_private/Messages.bufferUnderflow:()Ljava/nio/BufferUnderflowException;
      16: athrow
      17: aload_0
      18: invokevirtual #286                // Method java/nio/LongBuffer.hasArray:()Z
      21: ifeq          61
      24: aload_0
      25: invokevirtual #287                // Method java/nio/LongBuffer.arrayOffset:()I
      28: istore        4
      30: aload_0
      31: invokevirtual #290                // Method java/nio/LongBuffer.array:()[J
      34: iload         4
      36: aload_0
      37: invokevirtual #277                // Method java/nio/LongBuffer.position:()I
      40: iadd
      41: iload         4
      43: aload_0
      44: invokevirtual #278                // Method java/nio/LongBuffer.limit:()I
      47: iadd
      48: lload_1
      49: invokestatic  #293                // Method java/util/Arrays.fill:([JIIJ)V
      52: aload_0
      53: iload_3
      54: invokestatic  #195                // Method skip:(Ljava/nio/Buffer;I)Ljava/nio/Buffer;
      57: pop
      58: goto          81
      61: iload_3
      62: istore        4
      64: iload         4
      66: ifle          81
      69: aload_0
      70: lload_1
      71: invokevirtual #296                // Method java/nio/LongBuffer.put:(J)Ljava/nio/LongBuffer;
      74: pop
      75: iinc          4, -1
      78: goto          64
      81: aload_0
      82: areturn

  public static <T extends java.nio.Buffer> T skip(T, int) throws java.nio.BufferUnderflowException;
    Code:
       0: iload_1
       1: ifge          16
       4: getstatic     #85                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
       7: ldc_w         #299                // String cnt
      10: invokeinterface #303,  2          // InterfaceMethod org/xnio/_private/Messages.parameterOutOfRange:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      15: athrow
      16: iload_1
      17: aload_0
      18: invokevirtual #304                // Method java/nio/Buffer.remaining:()I
      21: if_icmple     33
      24: getstatic     #85                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      27: invokeinterface #89,  1           // InterfaceMethod org/xnio/_private/Messages.bufferUnderflow:()Ljava/nio/BufferUnderflowException;
      32: athrow
      33: aload_0
      34: aload_0
      35: invokevirtual #305                // Method java/nio/Buffer.position:()I
      38: iload_1
      39: iadd
      40: invokevirtual #65                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      43: pop
      44: aload_0
      45: areturn

  public static int trySkip(java.nio.Buffer, int);
    Code:
       0: iload_1
       1: ifge          16
       4: getstatic     #85                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
       7: ldc_w         #299                // String cnt
      10: invokeinterface #303,  2          // InterfaceMethod org/xnio/_private/Messages.parameterOutOfRange:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      15: athrow
      16: aload_0
      17: invokevirtual #304                // Method java/nio/Buffer.remaining:()I
      20: istore_2
      21: iload_1
      22: iload_2
      23: if_icmple     28
      26: iload_2
      27: istore_1
      28: aload_0
      29: aload_0
      30: invokevirtual #305                // Method java/nio/Buffer.position:()I
      33: iload_1
      34: iadd
      35: invokevirtual #65                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      38: pop
      39: iload_1
      40: ireturn

  public static long trySkip(java.nio.Buffer[], int, int, long);
    Code:
       0: lload_3
       1: lconst_0
       2: lcmp
       3: ifge          18
       6: getstatic     #85                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
       9: ldc_w         #299                // String cnt
      12: invokeinterface #303,  2          // InterfaceMethod org/xnio/_private/Messages.parameterOutOfRange:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      17: athrow
      18: iload_2
      19: ifge          34
      22: getstatic     #85                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      25: ldc_w         #310                // String len
      28: invokeinterface #303,  2          // InterfaceMethod org/xnio/_private/Messages.parameterOutOfRange:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      33: athrow
      34: iload_1
      35: ifge          50
      38: getstatic     #85                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      41: ldc_w         #311                // String offs
      44: invokeinterface #303,  2          // InterfaceMethod org/xnio/_private/Messages.parameterOutOfRange:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      49: athrow
      50: iload_1
      51: aload_0
      52: arraylength
      53: if_icmple     68
      56: getstatic     #85                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      59: ldc_w         #311                // String offs
      62: invokeinterface #303,  2          // InterfaceMethod org/xnio/_private/Messages.parameterOutOfRange:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      67: athrow
      68: iload_1
      69: iload_2
      70: iadd
      71: aload_0
      72: arraylength
      73: if_icmple     88
      76: getstatic     #85                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      79: ldc_w         #311                // String offs
      82: invokeinterface #303,  2          // InterfaceMethod org/xnio/_private/Messages.parameterOutOfRange:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      87: athrow
      88: lconst_0
      89: lstore        5
      91: iconst_0
      92: istore        7
      94: iload         7
      96: iload_2
      97: if_icmpge     179
     100: aload_0
     101: iload_1
     102: iload         7
     104: iadd
     105: aaload
     106: astore        8
     108: aload         8
     110: invokevirtual #304                // Method java/nio/Buffer.remaining:()I
     113: istore        9
     115: iload         9
     117: i2l
     118: lload_3
     119: lcmp
     120: ifge          154
     123: aload         8
     125: aload         8
     127: invokevirtual #305                // Method java/nio/Buffer.position:()I
     130: iload         9
     132: iadd
     133: invokevirtual #65                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
     136: pop
     137: lload_3
     138: iload         9
     140: i2l
     141: lsub
     142: lstore_3
     143: lload         5
     145: iload         9
     147: i2l
     148: ladd
     149: lstore        5
     151: goto          173
     154: aload         8
     156: aload         8
     158: invokevirtual #305                // Method java/nio/Buffer.position:()I
     161: lload_3
     162: l2i
     163: iadd
     164: invokevirtual #65                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
     167: pop
     168: lload         5
     170: lload_3
     171: ladd
     172: lreturn
     173: iinc          7, 1
     176: goto          94
     179: lload         5
     181: lreturn

  public static <T extends java.nio.Buffer> T unget(T, int);
    Code:
       0: iload_1
       1: ifge          16
       4: getstatic     #85                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
       7: ldc_w         #299                // String cnt
      10: invokeinterface #303,  2          // InterfaceMethod org/xnio/_private/Messages.parameterOutOfRange:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      15: athrow
      16: iload_1
      17: aload_0
      18: invokevirtual #305                // Method java/nio/Buffer.position:()I
      21: if_icmple     33
      24: getstatic     #85                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      27: invokeinterface #89,  1           // InterfaceMethod org/xnio/_private/Messages.bufferUnderflow:()Ljava/nio/BufferUnderflowException;
      32: athrow
      33: aload_0
      34: aload_0
      35: invokevirtual #305                // Method java/nio/Buffer.position:()I
      38: iload_1
      39: isub
      40: invokevirtual #65                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      43: pop
      44: aload_0
      45: areturn

  public static byte[] take(java.nio.ByteBuffer, int);
    Code:
       0: iload_1
       1: ifge          16
       4: getstatic     #85                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
       7: ldc_w         #299                // String cnt
      10: invokeinterface #303,  2          // InterfaceMethod org/xnio/_private/Messages.parameterOutOfRange:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      15: athrow
      16: aload_0
      17: invokevirtual #180                // Method java/nio/ByteBuffer.hasArray:()Z
      20: ifeq          86
      23: aload_0
      24: invokevirtual #91                 // Method java/nio/ByteBuffer.position:()I
      27: istore_2
      28: aload_0
      29: invokevirtual #93                 // Method java/nio/ByteBuffer.limit:()I
      32: istore_3
      33: iload_3
      34: iload_2
      35: isub
      36: iload_1
      37: if_icmpge     48
      40: new           #298                // class java/nio/BufferUnderflowException
      43: dup
      44: invokespecial #318                // Method java/nio/BufferUnderflowException."<init>":()V
      47: athrow
      48: aload_0
      49: invokevirtual #187                // Method java/nio/ByteBuffer.array:()[B
      52: astore        4
      54: aload_0
      55: invokevirtual #183                // Method java/nio/ByteBuffer.arrayOffset:()I
      58: istore        5
      60: aload_0
      61: iload_2
      62: iload_1
      63: iadd
      64: invokevirtual #98                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      67: pop
      68: iload         5
      70: iload_2
      71: iadd
      72: istore        6
      74: aload         4
      76: iload         6
      78: iload         6
      80: iload_1
      81: iadd
      82: invokestatic  #322                // Method java/util/Arrays.copyOfRange:([BII)[B
      85: areturn
      86: iload_1
      87: newarray       byte
      89: astore_2
      90: aload_0
      91: aload_2
      92: invokevirtual #326                // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
      95: pop
      96: aload_2
      97: areturn

  public static char[] take(java.nio.CharBuffer, int);
    Code:
       0: iload_1
       1: ifge          16
       4: getstatic     #85                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
       7: ldc_w         #299                // String cnt
      10: invokeinterface #303,  2          // InterfaceMethod org/xnio/_private/Messages.parameterOutOfRange:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      15: athrow
      16: aload_0
      17: invokevirtual #214                // Method java/nio/CharBuffer.hasArray:()Z
      20: ifeq          86
      23: aload_0
      24: invokevirtual #205                // Method java/nio/CharBuffer.position:()I
      27: istore_2
      28: aload_0
      29: invokevirtual #206                // Method java/nio/CharBuffer.limit:()I
      32: istore_3
      33: iload_3
      34: iload_2
      35: isub
      36: iload_1
      37: if_icmpge     48
      40: new           #298                // class java/nio/BufferUnderflowException
      43: dup
      44: invokespecial #318                // Method java/nio/BufferUnderflowException."<init>":()V
      47: athrow
      48: aload_0
      49: invokevirtual #218                // Method java/nio/CharBuffer.array:()[C
      52: astore        4
      54: aload_0
      55: invokevirtual #215                // Method java/nio/CharBuffer.arrayOffset:()I
      58: istore        5
      60: aload_0
      61: iload_2
      62: iload_1
      63: iadd
      64: invokevirtual #211                // Method java/nio/CharBuffer.position:(I)Ljava/nio/Buffer;
      67: pop
      68: iload         5
      70: iload_2
      71: iadd
      72: istore        6
      74: aload         4
      76: iload         6
      78: iload         6
      80: iload_1
      81: iadd
      82: invokestatic  #334                // Method java/util/Arrays.copyOfRange:([CII)[C
      85: areturn
      86: iload_1
      87: newarray       char
      89: astore_2
      90: aload_0
      91: aload_2
      92: invokevirtual #337                // Method java/nio/CharBuffer.get:([C)Ljava/nio/CharBuffer;
      95: pop
      96: aload_2
      97: areturn

  public static short[] take(java.nio.ShortBuffer, int);
    Code:
       0: iload_1
       1: ifge          16
       4: getstatic     #85                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
       7: ldc_w         #299                // String cnt
      10: invokeinterface #303,  2          // InterfaceMethod org/xnio/_private/Messages.parameterOutOfRange:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      15: athrow
      16: aload_0
      17: invokevirtual #238                // Method java/nio/ShortBuffer.hasArray:()Z
      20: ifeq          86
      23: aload_0
      24: invokevirtual #229                // Method java/nio/ShortBuffer.position:()I
      27: istore_2
      28: aload_0
      29: invokevirtual #230                // Method java/nio/ShortBuffer.limit:()I
      32: istore_3
      33: iload_3
      34: iload_2
      35: isub
      36: iload_1
      37: if_icmpge     48
      40: new           #298                // class java/nio/BufferUnderflowException
      43: dup
      44: invokespecial #318                // Method java/nio/BufferUnderflowException."<init>":()V
      47: athrow
      48: aload_0
      49: invokevirtual #242                // Method java/nio/ShortBuffer.array:()[S
      52: astore        4
      54: aload_0
      55: invokevirtual #239                // Method java/nio/ShortBuffer.arrayOffset:()I
      58: istore        5
      60: aload_0
      61: iload_2
      62: iload_1
      63: iadd
      64: invokevirtual #235                // Method java/nio/ShortBuffer.position:(I)Ljava/nio/Buffer;
      67: pop
      68: iload         5
      70: iload_2
      71: iadd
      72: istore        6
      74: aload         4
      76: iload         6
      78: iload         6
      80: iload_1
      81: iadd
      82: invokestatic  #343                // Method java/util/Arrays.copyOfRange:([SII)[S
      85: areturn
      86: iload_1
      87: newarray       short
      89: astore_2
      90: aload_0
      91: aload_2
      92: invokevirtual #346                // Method java/nio/ShortBuffer.get:([S)Ljava/nio/ShortBuffer;
      95: pop
      96: aload_2
      97: areturn

  public static int[] take(java.nio.IntBuffer, int);
    Code:
       0: iload_1
       1: ifge          16
       4: getstatic     #85                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
       7: ldc_w         #299                // String cnt
      10: invokeinterface #303,  2          // InterfaceMethod org/xnio/_private/Messages.parameterOutOfRange:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      15: athrow
      16: aload_0
      17: invokevirtual #262                // Method java/nio/IntBuffer.hasArray:()Z
      20: ifeq          86
      23: aload_0
      24: invokevirtual #253                // Method java/nio/IntBuffer.position:()I
      27: istore_2
      28: aload_0
      29: invokevirtual #254                // Method java/nio/IntBuffer.limit:()I
      32: istore_3
      33: iload_3
      34: iload_2
      35: isub
      36: iload_1
      37: if_icmpge     48
      40: new           #298                // class java/nio/BufferUnderflowException
      43: dup
      44: invokespecial #318                // Method java/nio/BufferUnderflowException."<init>":()V
      47: athrow
      48: aload_0
      49: invokevirtual #266                // Method java/nio/IntBuffer.array:()[I
      52: astore        4
      54: aload_0
      55: invokevirtual #263                // Method java/nio/IntBuffer.arrayOffset:()I
      58: istore        5
      60: aload_0
      61: iload_2
      62: iload_1
      63: iadd
      64: invokevirtual #259                // Method java/nio/IntBuffer.position:(I)Ljava/nio/Buffer;
      67: pop
      68: iload         5
      70: iload_2
      71: iadd
      72: istore        6
      74: aload         4
      76: iload         6
      78: iload         6
      80: iload_1
      81: iadd
      82: invokestatic  #352                // Method java/util/Arrays.copyOfRange:([III)[I
      85: areturn
      86: iload_1
      87: newarray       int
      89: astore_2
      90: aload_0
      91: aload_2
      92: invokevirtual #355                // Method java/nio/IntBuffer.get:([I)Ljava/nio/IntBuffer;
      95: pop
      96: aload_2
      97: areturn

  public static long[] take(java.nio.LongBuffer, int);
    Code:
       0: iload_1
       1: ifge          16
       4: getstatic     #85                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
       7: ldc_w         #299                // String cnt
      10: invokeinterface #303,  2          // InterfaceMethod org/xnio/_private/Messages.parameterOutOfRange:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      15: athrow
      16: aload_0
      17: invokevirtual #286                // Method java/nio/LongBuffer.hasArray:()Z
      20: ifeq          86
      23: aload_0
      24: invokevirtual #277                // Method java/nio/LongBuffer.position:()I
      27: istore_2
      28: aload_0
      29: invokevirtual #278                // Method java/nio/LongBuffer.limit:()I
      32: istore_3
      33: iload_3
      34: iload_2
      35: isub
      36: iload_1
      37: if_icmpge     48
      40: new           #298                // class java/nio/BufferUnderflowException
      43: dup
      44: invokespecial #318                // Method java/nio/BufferUnderflowException."<init>":()V
      47: athrow
      48: aload_0
      49: invokevirtual #290                // Method java/nio/LongBuffer.array:()[J
      52: astore        4
      54: aload_0
      55: invokevirtual #287                // Method java/nio/LongBuffer.arrayOffset:()I
      58: istore        5
      60: aload_0
      61: iload_2
      62: iload_1
      63: iadd
      64: invokevirtual #283                // Method java/nio/LongBuffer.position:(I)Ljava/nio/Buffer;
      67: pop
      68: iload         5
      70: iload_2
      71: iadd
      72: istore        6
      74: aload         4
      76: iload         6
      78: iload         6
      80: iload_1
      81: iadd
      82: invokestatic  #361                // Method java/util/Arrays.copyOfRange:([JII)[J
      85: areturn
      86: iload_1
      87: newarray       long
      89: astore_2
      90: aload_0
      91: aload_2
      92: invokevirtual #364                // Method java/nio/LongBuffer.get:([J)Ljava/nio/LongBuffer;
      95: pop
      96: aload_2
      97: areturn

  public static byte[] take(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokevirtual #79                 // Method java/nio/ByteBuffer.remaining:()I
       4: istore_1
       5: iload_1
       6: ifne          13
       9: getstatic     #369                // Field NO_BYTES:[B
      12: areturn
      13: aload_0
      14: invokevirtual #180                // Method java/nio/ByteBuffer.hasArray:()Z
      17: ifeq          62
      20: aload_0
      21: invokevirtual #91                 // Method java/nio/ByteBuffer.position:()I
      24: istore_2
      25: aload_0
      26: invokevirtual #93                 // Method java/nio/ByteBuffer.limit:()I
      29: istore_3
      30: aload_0
      31: invokevirtual #187                // Method java/nio/ByteBuffer.array:()[B
      34: astore        4
      36: aload_0
      37: invokevirtual #183                // Method java/nio/ByteBuffer.arrayOffset:()I
      40: istore        5
      42: aload_0
      43: iload_3
      44: invokevirtual #98                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      47: pop
      48: aload         4
      50: iload         5
      52: iload_2
      53: iadd
      54: iload         5
      56: iload_3
      57: iadd
      58: invokestatic  #322                // Method java/util/Arrays.copyOfRange:([BII)[B
      61: areturn
      62: iload_1
      63: newarray       byte
      65: astore_2
      66: aload_0
      67: aload_2
      68: invokevirtual #326                // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
      71: pop
      72: aload_2
      73: areturn

  public static byte[] take(java.nio.ByteBuffer[], int, int);
    Code:
       0: iload_2
       1: iconst_1
       2: if_icmpne     12
       5: aload_0
       6: iload_1
       7: aaload
       8: invokestatic  #372                // Method take:(Ljava/nio/ByteBuffer;)[B
      11: areturn
      12: aload_0
      13: iload_1
      14: iload_2
      15: invokestatic  #375                // Method remaining:([Ljava/nio/Buffer;II)J
      18: lstore_3
      19: lload_3
      20: lconst_0
      21: lcmp
      22: ifne          29
      25: getstatic     #369                // Field NO_BYTES:[B
      28: areturn
      29: lload_3
      30: ldc2_w        #376                // long 2147483647l
      33: lcmp
      34: ifle          48
      37: new           #379                // class java/lang/OutOfMemoryError
      40: dup
      41: ldc_w         #381                // String Array too large
      44: invokespecial #384                // Method java/lang/OutOfMemoryError."<init>":(Ljava/lang/String;)V
      47: athrow
      48: lload_3
      49: l2i
      50: newarray       byte
      52: astore        5
      54: iconst_0
      55: istore        6
      57: iconst_0
      58: istore        9
      60: iload         9
      62: iload_2
      63: if_icmpge     106
      66: aload_0
      67: iload         9
      69: iload_1
      70: iadd
      71: aaload
      72: astore        8
      74: aload         8
      76: invokevirtual #79                 // Method java/nio/ByteBuffer.remaining:()I
      79: istore        7
      81: aload         8
      83: aload         5
      85: iload         6
      87: iload         7
      89: invokevirtual #388                // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
      92: pop
      93: iload         6
      95: iload         7
      97: iadd
      98: istore        6
     100: iinc          9, 1
     103: goto          60
     106: aload         5
     108: areturn

  public static char[] take(java.nio.CharBuffer);
    Code:
       0: aload_0
       1: invokevirtual #204                // Method java/nio/CharBuffer.remaining:()I
       4: newarray       char
       6: astore_1
       7: aload_0
       8: aload_1
       9: invokevirtual #337                // Method java/nio/CharBuffer.get:([C)Ljava/nio/CharBuffer;
      12: pop
      13: aload_1
      14: areturn

  public static short[] take(java.nio.ShortBuffer);
    Code:
       0: aload_0
       1: invokevirtual #228                // Method java/nio/ShortBuffer.remaining:()I
       4: newarray       short
       6: astore_1
       7: aload_0
       8: aload_1
       9: invokevirtual #346                // Method java/nio/ShortBuffer.get:([S)Ljava/nio/ShortBuffer;
      12: pop
      13: aload_1
      14: areturn

  public static int[] take(java.nio.IntBuffer);
    Code:
       0: aload_0
       1: invokevirtual #252                // Method java/nio/IntBuffer.remaining:()I
       4: newarray       int
       6: astore_1
       7: aload_0
       8: aload_1
       9: invokevirtual #355                // Method java/nio/IntBuffer.get:([I)Ljava/nio/IntBuffer;
      12: pop
      13: aload_1
      14: areturn

  public static long[] take(java.nio.LongBuffer);
    Code:
       0: aload_0
       1: invokevirtual #276                // Method java/nio/LongBuffer.remaining:()I
       4: newarray       long
       6: astore_1
       7: aload_0
       8: aload_1
       9: invokevirtual #364                // Method java/nio/LongBuffer.get:([J)Ljava/nio/LongBuffer;
      12: pop
      13: aload_1
      14: areturn

  public static java.lang.Object createDumper(java.nio.ByteBuffer, int, int);
    Code:
       0: iload_2
       1: ifgt          16
       4: getstatic     #85                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
       7: ldc_w         #397                // String columns
      10: invokeinterface #303,  2          // InterfaceMethod org/xnio/_private/Messages.parameterOutOfRange:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      15: athrow
      16: iload_1
      17: ifge          32
      20: getstatic     #85                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      23: ldc_w         #399                // String indent
      26: invokeinterface #303,  2          // InterfaceMethod org/xnio/_private/Messages.parameterOutOfRange:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      31: athrow
      32: new           #25                 // class org/xnio/Buffers$1
      35: dup
      36: aload_0
      37: iload_1
      38: iload_2
      39: invokespecial #402                // Method org/xnio/Buffers$1."<init>":(Ljava/nio/ByteBuffer;II)V
      42: areturn

  public static void dump(java.nio.ByteBuffer, java.lang.Appendable, int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: ifgt          16
       4: getstatic     #85                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
       7: ldc_w         #397                // String columns
      10: invokeinterface #303,  2          // InterfaceMethod org/xnio/_private/Messages.parameterOutOfRange:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      15: athrow
      16: iload_2
      17: ifge          32
      20: getstatic     #85                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      23: ldc_w         #399                // String indent
      26: invokeinterface #303,  2          // InterfaceMethod org/xnio/_private/Messages.parameterOutOfRange:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      31: athrow
      32: aload_0
      33: invokevirtual #91                 // Method java/nio/ByteBuffer.position:()I
      36: istore        4
      38: aload_0
      39: invokevirtual #79                 // Method java/nio/ByteBuffer.remaining:()I
      42: istore        5
      44: bipush        8
      46: iload_3
      47: iconst_1
      48: isub
      49: ishl
      50: istore        6
      52: aload_0
      53: invokevirtual #79                 // Method java/nio/ByteBuffer.remaining:()I
      56: bipush        16
      58: invokestatic  #412                // Method java/lang/Integer.toString:(II)Ljava/lang/String;
      61: invokevirtual #416                // Method java/lang/String.length:()I
      64: iconst_4
      65: invokestatic  #157                // Method java/lang/Math.max:(II)I
      68: istore        7
      70: iconst_0
      71: istore        8
      73: iload         8
      75: iload         5
      77: if_icmpge     203
      80: iconst_0
      81: istore        9
      83: iload         9
      85: iload_2
      86: if_icmpge     104
      89: aload_1
      90: bipush        32
      92: invokeinterface #422,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
      97: pop
      98: iinc          9, 1
     101: goto          83
     104: iload         8
     106: bipush        16
     108: invokestatic  #412                // Method java/lang/Integer.toString:(II)Ljava/lang/String;
     111: astore        9
     113: iload         7
     115: aload         9
     117: invokevirtual #416                // Method java/lang/String.length:()I
     120: isub
     121: istore        10
     123: iload         10
     125: ifle          143
     128: aload_1
     129: bipush        48
     131: invokeinterface #422,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
     136: pop
     137: iinc          10, -1
     140: goto          123
     143: aload_1
     144: aload         9
     146: invokeinterface #425,  2          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
     151: pop
     152: aload_1
     153: ldc_w         #427                // String  -
     156: invokeinterface #425,  2          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
     161: pop
     162: aload_0
     163: aload_1
     164: iload         4
     166: iload         8
     168: iadd
     169: iload_3
     170: invokestatic  #430                // Method appendHexRow:(Ljava/nio/ByteBuffer;Ljava/lang/Appendable;II)V
     173: aload_0
     174: aload_1
     175: iload         4
     177: iload         8
     179: iadd
     180: iload_3
     181: invokestatic  #433                // Method appendTextRow:(Ljava/nio/ByteBuffer;Ljava/lang/Appendable;II)V
     184: aload_1
     185: bipush        10
     187: invokeinterface #422,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
     192: pop
     193: iload         8
     195: iload         6
     197: iadd
     198: istore        8
     200: goto          73
     203: return

  private static void appendHexRow(java.nio.ByteBuffer, java.lang.Appendable, int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #93                 // Method java/nio/ByteBuffer.limit:()I
       4: istore        4
       6: iload_2
       7: istore        5
       9: iconst_0
      10: istore        6
      12: iload         6
      14: iload_3
      15: if_icmpge     136
      18: iconst_0
      19: istore        7
      21: iload         7
      23: bipush        8
      25: if_icmpge     112
      28: iload         5
      30: iload         4
      32: if_icmplt     48
      35: aload_1
      36: ldc_w         #440                // String
      39: invokeinterface #425,  2          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      44: pop
      45: goto          97
      48: aload_0
      49: iload         5
      51: iinc          5, 1
      54: invokevirtual #443                // Method java/nio/ByteBuffer.get:(I)B
      57: sipush        255
      60: iand
      61: istore        8
      63: iload         8
      65: bipush        16
      67: invokestatic  #412                // Method java/lang/Integer.toString:(II)Ljava/lang/String;
      70: astore        9
      72: iload         8
      74: bipush        16
      76: if_icmpge     88
      79: aload_1
      80: bipush        48
      82: invokeinterface #422,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
      87: pop
      88: aload_1
      89: aload         9
      91: invokeinterface #425,  2          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      96: pop
      97: aload_1
      98: bipush        32
     100: invokeinterface #422,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
     105: pop
     106: iinc          7, 1
     109: goto          21
     112: aload_1
     113: bipush        32
     115: invokeinterface #422,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
     120: pop
     121: aload_1
     122: bipush        32
     124: invokeinterface #422,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
     129: pop
     130: iinc          6, 1
     133: goto          12
     136: return

  private static void appendTextRow(java.nio.ByteBuffer, java.lang.Appendable, int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #93                 // Method java/nio/ByteBuffer.limit:()I
       4: istore        4
       6: iload_2
       7: istore        5
       9: aload_1
      10: bipush        91
      12: invokeinterface #422,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
      17: pop
      18: aload_1
      19: bipush        32
      21: invokeinterface #422,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
      26: pop
      27: iconst_0
      28: istore        6
      30: iload         6
      32: iload_3
      33: if_icmpge     131
      36: iconst_0
      37: istore        7
      39: iload         7
      41: bipush        8
      43: if_icmpge     116
      46: iload         5
      48: iload         4
      50: if_icmplt     65
      53: aload_1
      54: bipush        32
      56: invokeinterface #422,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
      61: pop
      62: goto          110
      65: aload_0
      66: iload         5
      68: iinc          5, 1
      71: invokevirtual #443                // Method java/nio/ByteBuffer.get:(I)B
      74: sipush        255
      77: iand
      78: i2c
      79: istore        8
      81: iload         8
      83: invokestatic  #452                // Method java/lang/Character.isISOControl:(C)Z
      86: ifeq          101
      89: aload_1
      90: bipush        46
      92: invokeinterface #422,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
      97: pop
      98: goto          110
     101: aload_1
     102: iload         8
     104: invokeinterface #422,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
     109: pop
     110: iinc          7, 1
     113: goto          39
     116: aload_1
     117: bipush        32
     119: invokeinterface #422,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
     124: pop
     125: iinc          6, 1
     128: goto          30
     131: aload_1
     132: bipush        93
     134: invokeinterface #422,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
     139: pop
     140: return

  public static java.lang.Object createDumper(java.nio.CharBuffer, int, int);
    Code:
       0: iload_2
       1: ifgt          16
       4: getstatic     #85                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
       7: ldc_w         #397                // String columns
      10: invokeinterface #303,  2          // InterfaceMethod org/xnio/_private/Messages.parameterOutOfRange:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      15: athrow
      16: iload_1
      17: ifge          32
      20: getstatic     #85                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      23: ldc_w         #399                // String indent
      26: invokeinterface #303,  2          // InterfaceMethod org/xnio/_private/Messages.parameterOutOfRange:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      31: athrow
      32: new           #23                 // class org/xnio/Buffers$2
      35: dup
      36: aload_0
      37: iload_1
      38: iload_2
      39: invokespecial #457                // Method org/xnio/Buffers$2."<init>":(Ljava/nio/CharBuffer;II)V
      42: areturn

  public static void dump(java.nio.CharBuffer, java.lang.Appendable, int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: ifgt          16
       4: getstatic     #85                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
       7: ldc_w         #397                // String columns
      10: invokeinterface #303,  2          // InterfaceMethod org/xnio/_private/Messages.parameterOutOfRange:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      15: athrow
      16: iload_2
      17: ifge          32
      20: getstatic     #85                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      23: ldc_w         #399                // String indent
      26: invokeinterface #303,  2          // InterfaceMethod org/xnio/_private/Messages.parameterOutOfRange:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      31: athrow
      32: aload_0
      33: invokevirtual #205                // Method java/nio/CharBuffer.position:()I
      36: istore        4
      38: aload_0
      39: invokevirtual #204                // Method java/nio/CharBuffer.remaining:()I
      42: istore        5
      44: bipush        8
      46: iload_3
      47: iconst_1
      48: isub
      49: ishl
      50: istore        6
      52: aload_0
      53: invokevirtual #204                // Method java/nio/CharBuffer.remaining:()I
      56: bipush        16
      58: invokestatic  #412                // Method java/lang/Integer.toString:(II)Ljava/lang/String;
      61: invokevirtual #416                // Method java/lang/String.length:()I
      64: iconst_4
      65: invokestatic  #157                // Method java/lang/Math.max:(II)I
      68: istore        7
      70: iconst_0
      71: istore        8
      73: iload         8
      75: iload         5
      77: if_icmpge     203
      80: iconst_0
      81: istore        9
      83: iload         9
      85: iload_2
      86: if_icmpge     104
      89: aload_1
      90: bipush        32
      92: invokeinterface #422,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
      97: pop
      98: iinc          9, 1
     101: goto          83
     104: iload         8
     106: bipush        16
     108: invokestatic  #412                // Method java/lang/Integer.toString:(II)Ljava/lang/String;
     111: astore        9
     113: iload         7
     115: aload         9
     117: invokevirtual #416                // Method java/lang/String.length:()I
     120: isub
     121: istore        10
     123: iload         10
     125: ifle          143
     128: aload_1
     129: bipush        48
     131: invokeinterface #422,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
     136: pop
     137: iinc          10, -1
     140: goto          123
     143: aload_1
     144: aload         9
     146: invokeinterface #425,  2          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
     151: pop
     152: aload_1
     153: ldc_w         #427                // String  -
     156: invokeinterface #425,  2          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
     161: pop
     162: aload_0
     163: aload_1
     164: iload         4
     166: iload         8
     168: iadd
     169: iload_3
     170: invokestatic  #460                // Method appendHexRow:(Ljava/nio/CharBuffer;Ljava/lang/Appendable;II)V
     173: aload_0
     174: aload_1
     175: iload         4
     177: iload         8
     179: iadd
     180: iload_3
     181: invokestatic  #462                // Method appendTextRow:(Ljava/nio/CharBuffer;Ljava/lang/Appendable;II)V
     184: aload_1
     185: bipush        10
     187: invokeinterface #422,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
     192: pop
     193: iload         8
     195: iload         6
     197: iadd
     198: istore        8
     200: goto          73
     203: return

  private static void appendHexRow(java.nio.CharBuffer, java.lang.Appendable, int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #206                // Method java/nio/CharBuffer.limit:()I
       4: istore        4
       6: iload_2
       7: istore        5
       9: iconst_0
      10: istore        6
      12: iload         6
      14: iload_3
      15: if_icmpge     134
      18: iconst_0
      19: istore        7
      21: iload         7
      23: bipush        8
      25: if_icmpge     110
      28: iload         5
      30: iload         4
      32: if_icmplt     48
      35: aload_1
      36: ldc_w         #440                // String
      39: invokeinterface #425,  2          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      44: pop
      45: goto          95
      48: aload_0
      49: iload         5
      51: iinc          5, 1
      54: invokevirtual #465                // Method java/nio/CharBuffer.get:(I)C
      57: istore        8
      59: iload         8
      61: bipush        16
      63: invokestatic  #412                // Method java/lang/Integer.toString:(II)Ljava/lang/String;
      66: astore        9
      68: aload_1
      69: ldc_w         #467                // String 0000
      72: aload         9
      74: invokevirtual #416                // Method java/lang/String.length:()I
      77: invokevirtual #471                // Method java/lang/String.substring:(I)Ljava/lang/String;
      80: invokeinterface #425,  2          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      85: pop
      86: aload_1
      87: aload         9
      89: invokeinterface #425,  2          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      94: pop
      95: aload_1
      96: bipush        32
      98: invokeinterface #422,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
     103: pop
     104: iinc          7, 1
     107: goto          21
     110: aload_1
     111: bipush        32
     113: invokeinterface #422,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
     118: pop
     119: aload_1
     120: bipush        32
     122: invokeinterface #422,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
     127: pop
     128: iinc          6, 1
     131: goto          12
     134: return

  private static void appendTextRow(java.nio.CharBuffer, java.lang.Appendable, int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #206                // Method java/nio/CharBuffer.limit:()I
       4: istore        4
       6: iload_2
       7: istore        5
       9: aload_1
      10: bipush        91
      12: invokeinterface #422,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
      17: pop
      18: aload_1
      19: bipush        32
      21: invokeinterface #422,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
      26: pop
      27: iconst_0
      28: istore        6
      30: iload         6
      32: iload_3
      33: if_icmpge     142
      36: iconst_0
      37: istore        7
      39: iload         7
      41: bipush        8
      43: if_icmpge     127
      46: iload         5
      48: iload         4
      50: if_icmplt     65
      53: aload_1
      54: bipush        32
      56: invokeinterface #422,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
      61: pop
      62: goto          121
      65: aload_0
      66: iload         5
      68: iinc          5, 1
      71: invokevirtual #465                // Method java/nio/CharBuffer.get:(I)C
      74: istore        8
      76: iload         8
      78: invokestatic  #452                // Method java/lang/Character.isISOControl:(C)Z
      81: ifne          100
      84: iload         8
      86: invokestatic  #474                // Method java/lang/Character.isHighSurrogate:(C)Z
      89: ifne          100
      92: iload         8
      94: invokestatic  #477                // Method java/lang/Character.isLowSurrogate:(C)Z
      97: ifeq          112
     100: aload_1
     101: bipush        46
     103: invokeinterface #422,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
     108: pop
     109: goto          121
     112: aload_1
     113: iload         8
     115: invokeinterface #422,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
     120: pop
     121: iinc          7, 1
     124: goto          39
     127: aload_1
     128: bipush        32
     130: invokeinterface #422,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
     135: pop
     136: iinc          6, 1
     139: goto          30
     142: aload_1
     143: bipush        93
     145: invokeinterface #422,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
     150: pop
     151: return

  public static boolean hasRemaining(java.nio.Buffer[], int, int);
    Code:
       0: iconst_0
       1: istore_3
       2: iload_3
       3: iload_2
       4: if_icmpge     26
       7: aload_0
       8: iload_3
       9: iload_1
      10: iadd
      11: aaload
      12: invokevirtual #481                // Method java/nio/Buffer.hasRemaining:()Z
      15: ifeq          20
      18: iconst_1
      19: ireturn
      20: iinc          3, 1
      23: goto          2
      26: iconst_0
      27: ireturn

  public static boolean hasRemaining(java.nio.Buffer[]);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_0
       3: arraylength
       4: invokestatic  #484                // Method hasRemaining:([Ljava/nio/Buffer;II)Z
       7: ireturn

  public static long remaining(java.nio.Buffer[], int, int);
    Code:
       0: lconst_0
       1: lstore_3
       2: iconst_0
       3: istore        5
       5: iload         5
       7: iload_2
       8: if_icmpge     30
      11: lload_3
      12: aload_0
      13: iload         5
      15: iload_1
      16: iadd
      17: aaload
      18: invokevirtual #304                // Method java/nio/Buffer.remaining:()I
      21: i2l
      22: ladd
      23: lstore_3
      24: iinc          5, 1
      27: goto          5
      30: lload_3
      31: lreturn

  public static long remaining(java.nio.Buffer[]);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_0
       3: arraylength
       4: invokestatic  #375                // Method remaining:([Ljava/nio/Buffer;II)J
       7: lreturn

  public static java.nio.ByteBuffer putModifiedUtf8(java.nio.ByteBuffer, java.lang.String) throws java.nio.BufferOverflowException;
    Code:
       0: aload_1
       1: invokevirtual #492                // Method java/lang/String.toCharArray:()[C
       4: astore_2
       5: aload_2
       6: astore_3
       7: aload_3
       8: arraylength
       9: istore        4
      11: iconst_0
      12: istore        5
      14: iload         5
      16: iload         4
      18: if_icmpge     151
      21: aload_3
      22: iload         5
      24: caload
      25: istore        6
      27: iload         6
      29: ifle          50
      32: iload         6
      34: bipush        127
      36: if_icmpgt     50
      39: aload_0
      40: iload         6
      42: i2b
      43: invokevirtual #198                // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      46: pop
      47: goto          145
      50: iload         6
      52: sipush        2047
      55: if_icmpgt     94
      58: aload_0
      59: sipush        192
      62: bipush        31
      64: iload         6
      66: bipush        6
      68: ishr
      69: iand
      70: ior
      71: i2b
      72: invokevirtual #198                // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      75: pop
      76: aload_0
      77: sipush        128
      80: bipush        63
      82: iload         6
      84: iand
      85: ior
      86: i2b
      87: invokevirtual #198                // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      90: pop
      91: goto          145
      94: aload_0
      95: sipush        224
      98: bipush        15
     100: iload         6
     102: bipush        12
     104: ishr
     105: iand
     106: ior
     107: i2b
     108: invokevirtual #198                // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     111: pop
     112: aload_0
     113: sipush        128
     116: bipush        63
     118: iload         6
     120: bipush        6
     122: ishr
     123: iand
     124: ior
     125: i2b
     126: invokevirtual #198                // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     129: pop
     130: aload_0
     131: sipush        128
     134: bipush        63
     136: iload         6
     138: iand
     139: ior
     140: i2b
     141: invokevirtual #198                // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     144: pop
     145: iinc          5, 1
     148: goto          14
     151: aload_0
     152: areturn

  public static java.lang.String getModifiedUtf8Z(java.nio.ByteBuffer) throws java.nio.BufferUnderflowException;
    Code:
       0: new           #498                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #499                // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: invokestatic  #503                // Method readUTFChar:(Ljava/nio/ByteBuffer;)I
      12: istore_2
      13: iload_2
      14: iconst_m1
      15: if_icmpne     23
      18: aload_1
      19: invokevirtual #506                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn
      23: aload_1
      24: iload_2
      25: i2c
      26: invokevirtual #509                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      29: pop
      30: goto          8

  public static java.lang.String getModifiedUtf8(java.nio.ByteBuffer) throws java.nio.BufferUnderflowException;
    Code:
       0: new           #498                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #499                // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #515                // Method java/nio/ByteBuffer.hasRemaining:()Z
      12: ifeq          44
      15: aload_0
      16: invokestatic  #503                // Method readUTFChar:(Ljava/nio/ByteBuffer;)I
      19: istore_2
      20: iload_2
      21: iconst_m1
      22: if_icmpne     34
      25: aload_1
      26: iconst_0
      27: invokevirtual #509                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      30: pop
      31: goto          41
      34: aload_1
      35: iload_2
      36: i2c
      37: invokevirtual #509                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      40: pop
      41: goto          8
      44: aload_1
      45: invokevirtual #506                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: areturn

  private static int readUTFChar(java.nio.ByteBuffer) throws java.nio.BufferUnderflowException;
    Code:
       0: aload_0
       1: invokevirtual #518                // Method java/nio/ByteBuffer.get:()B
       4: sipush        255
       7: iand
       8: istore_1
       9: iload_1
      10: ifne          15
      13: iconst_m1
      14: ireturn
      15: iload_1
      16: sipush        128
      19: if_icmpge     25
      22: iload_1
      23: i2c
      24: ireturn
      25: iload_1
      26: sipush        192
      29: if_icmpge     35
      32: bipush        63
      34: ireturn
      35: iload_1
      36: sipush        224
      39: if_icmpge     78
      42: aload_0
      43: invokevirtual #518                // Method java/nio/ByteBuffer.get:()B
      46: sipush        255
      49: iand
      50: istore_2
      51: iload_2
      52: sipush        192
      55: iand
      56: sipush        128
      59: if_icmpeq     65
      62: bipush        63
      64: ireturn
      65: iload_1
      66: bipush        31
      68: iand
      69: bipush        6
      71: ishl
      72: iload_2
      73: bipush        63
      75: iand
      76: ior
      77: ireturn
      78: iload_1
      79: sipush        240
      82: if_icmpge     152
      85: aload_0
      86: invokevirtual #518                // Method java/nio/ByteBuffer.get:()B
      89: sipush        255
      92: iand
      93: istore_2
      94: iload_2
      95: sipush        192
      98: iand
      99: sipush        128
     102: if_icmpeq     108
     105: bipush        63
     107: ireturn
     108: aload_0
     109: invokevirtual #518                // Method java/nio/ByteBuffer.get:()B
     112: sipush        255
     115: iand
     116: istore_3
     117: iload_3
     118: sipush        192
     121: iand
     122: sipush        128
     125: if_icmpeq     131
     128: bipush        63
     130: ireturn
     131: iload_1
     132: bipush        15
     134: iand
     135: bipush        12
     137: ishl
     138: iload_2
     139: bipush        63
     141: iand
     142: bipush        6
     144: ishl
     145: ior
     146: iload_3
     147: bipush        63
     149: iand
     150: ior
     151: ireturn
     152: bipush        63
     154: ireturn

  public static boolean readAsciiZ(java.nio.ByteBuffer, java.lang.StringBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: bipush        63
       4: invokestatic  #525                // Method readAsciiZ:(Ljava/nio/ByteBuffer;Ljava/lang/StringBuilder;C)Z
       7: ireturn

  public static boolean readAsciiZ(java.nio.ByteBuffer, java.lang.StringBuilder, char);
    Code:
       0: aload_0
       1: invokevirtual #515                // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: invokevirtual #518                // Method java/nio/ByteBuffer.get:()B
      13: istore_3
      14: iload_3
      15: ifne          20
      18: iconst_1
      19: ireturn
      20: aload_1
      21: iload_3
      22: ifge          29
      25: iload_2
      26: goto          31
      29: iload_3
      30: i2c
      31: invokevirtual #509                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      34: pop
      35: goto          0

  public static boolean readAsciiLine(java.nio.ByteBuffer, java.lang.StringBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: bipush        63
       4: bipush        10
       6: invokestatic  #531                // Method readAsciiLine:(Ljava/nio/ByteBuffer;Ljava/lang/StringBuilder;CC)Z
       9: ireturn

  public static boolean readAsciiLine(java.nio.ByteBuffer, java.lang.StringBuilder, char);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: bipush        10
       5: invokestatic  #531                // Method readAsciiLine:(Ljava/nio/ByteBuffer;Ljava/lang/StringBuilder;CC)Z
       8: ireturn

  public static boolean readAsciiLine(java.nio.ByteBuffer, java.lang.StringBuilder, char, char);
    Code:
       0: aload_0
       1: invokevirtual #515                // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: invokevirtual #518                // Method java/nio/ByteBuffer.get:()B
      13: istore        4
      15: aload_1
      16: iload         4
      18: ifge          25
      21: iload_2
      22: goto          28
      25: iload         4
      27: i2c
      28: invokevirtual #509                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      31: pop
      32: iload         4
      34: iload_3
      35: if_icmpne     40
      38: iconst_1
      39: ireturn
      40: goto          0

  public static void readAscii(java.nio.ByteBuffer, java.lang.StringBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: bipush        63
       4: invokestatic  #537                // Method readAscii:(Ljava/nio/ByteBuffer;Ljava/lang/StringBuilder;C)V
       7: return

  public static void readAscii(java.nio.ByteBuffer, java.lang.StringBuilder, char);
    Code:
       0: aload_0
       1: invokevirtual #515                // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifne          8
       7: return
       8: aload_0
       9: invokevirtual #518                // Method java/nio/ByteBuffer.get:()B
      12: istore_3
      13: aload_1
      14: iload_3
      15: ifge          22
      18: iload_2
      19: goto          24
      22: iload_3
      23: i2c
      24: invokevirtual #509                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      27: pop
      28: goto          0

  public static void readAscii(java.nio.ByteBuffer, java.lang.StringBuilder, int, char);
    Code:
       0: iload_2
       1: ifle          41
       4: aload_0
       5: invokevirtual #515                // Method java/nio/ByteBuffer.hasRemaining:()Z
       8: ifne          12
      11: return
      12: aload_0
      13: invokevirtual #518                // Method java/nio/ByteBuffer.get:()B
      16: istore        4
      18: aload_1
      19: iload         4
      21: ifge          28
      24: iload_3
      25: goto          31
      28: iload         4
      30: i2c
      31: invokevirtual #509                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      34: pop
      35: iinc          2, -1
      38: goto          0
      41: return

  public static boolean readLatin1Z(java.nio.ByteBuffer, java.lang.StringBuilder);
    Code:
       0: aload_0
       1: invokevirtual #515                // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: invokevirtual #518                // Method java/nio/ByteBuffer.get:()B
      13: istore_2
      14: iload_2
      15: ifne          20
      18: iconst_1
      19: ireturn
      20: aload_1
      21: iload_2
      22: sipush        255
      25: iand
      26: i2c
      27: invokevirtual #509                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      30: pop
      31: goto          0

  public static boolean readLatin1Line(java.nio.ByteBuffer, java.lang.StringBuilder);
    Code:
       0: aload_0
       1: invokevirtual #515                // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: invokevirtual #518                // Method java/nio/ByteBuffer.get:()B
      13: istore_2
      14: aload_1
      15: iload_2
      16: sipush        255
      19: iand
      20: i2c
      21: invokevirtual #509                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      24: pop
      25: iload_2
      26: bipush        10
      28: if_icmpne     33
      31: iconst_1
      32: ireturn
      33: goto          0

  public static boolean readLatin1Line(java.nio.ByteBuffer, java.lang.StringBuilder, char);
    Code:
       0: aload_0
       1: invokevirtual #515                // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: invokevirtual #518                // Method java/nio/ByteBuffer.get:()B
      13: istore_3
      14: aload_1
      15: iload_3
      16: sipush        255
      19: iand
      20: i2c
      21: invokevirtual #509                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      24: pop
      25: iload_3
      26: iload_2
      27: if_icmpne     32
      30: iconst_1
      31: ireturn
      32: goto          0

  public static void readLatin1(java.nio.ByteBuffer, java.lang.StringBuilder);
    Code:
       0: aload_0
       1: invokevirtual #515                // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifne          8
       7: return
       8: aload_0
       9: invokevirtual #518                // Method java/nio/ByteBuffer.get:()B
      12: istore_2
      13: aload_1
      14: iload_2
      15: sipush        255
      18: iand
      19: i2c
      20: invokevirtual #509                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      23: pop
      24: goto          0

  public static boolean readModifiedUtf8Z(java.nio.ByteBuffer, java.lang.StringBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: bipush        63
       4: invokestatic  #544                // Method readModifiedUtf8Z:(Ljava/nio/ByteBuffer;Ljava/lang/StringBuilder;C)Z
       7: ireturn

  public static boolean readModifiedUtf8Z(java.nio.ByteBuffer, java.lang.StringBuilder, char);
    Code:
       0: aload_0
       1: invokevirtual #515                // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: invokevirtual #518                // Method java/nio/ByteBuffer.get:()B
      13: sipush        255
      16: iand
      17: istore_3
      18: iload_3
      19: ifne          24
      22: iconst_1
      23: ireturn
      24: iload_3
      25: sipush        128
      28: if_icmpge     41
      31: aload_1
      32: iload_3
      33: i2c
      34: invokevirtual #509                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      37: pop
      38: goto          271
      41: iload_3
      42: sipush        192
      45: if_icmpge     57
      48: aload_1
      49: iload_2
      50: invokevirtual #509                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      53: pop
      54: goto          271
      57: iload_3
      58: sipush        224
      61: if_icmpge     132
      64: aload_0
      65: invokevirtual #515                // Method java/nio/ByteBuffer.hasRemaining:()Z
      68: ifeq          124
      71: aload_0
      72: invokevirtual #518                // Method java/nio/ByteBuffer.get:()B
      75: sipush        255
      78: iand
      79: istore        4
      81: iload         4
      83: sipush        192
      86: iand
      87: sipush        128
      90: if_icmpeq     102
      93: aload_1
      94: iload_2
      95: invokevirtual #509                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      98: pop
      99: goto          121
     102: aload_1
     103: iload_3
     104: bipush        31
     106: iand
     107: bipush        6
     109: ishl
     110: iload         4
     112: bipush        63
     114: iand
     115: ior
     116: i2c
     117: invokevirtual #509                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     120: pop
     121: goto          271
     124: aload_0
     125: iconst_1
     126: invokestatic  #546                // Method unget:(Ljava/nio/Buffer;I)Ljava/nio/Buffer;
     129: pop
     130: iconst_0
     131: ireturn
     132: iload_3
     133: sipush        240
     136: if_icmpge     265
     139: aload_0
     140: invokevirtual #515                // Method java/nio/ByteBuffer.hasRemaining:()Z
     143: ifeq          257
     146: aload_0
     147: invokevirtual #518                // Method java/nio/ByteBuffer.get:()B
     150: sipush        255
     153: iand
     154: istore        4
     156: iload         4
     158: sipush        192
     161: iand
     162: sipush        128
     165: if_icmpeq     177
     168: aload_1
     169: iload_2
     170: invokevirtual #509                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     173: pop
     174: goto          254
     177: aload_0
     178: invokevirtual #515                // Method java/nio/ByteBuffer.hasRemaining:()Z
     181: ifeq          246
     184: aload_0
     185: invokevirtual #518                // Method java/nio/ByteBuffer.get:()B
     188: sipush        255
     191: iand
     192: istore        5
     194: iload         5
     196: sipush        192
     199: iand
     200: sipush        128
     203: if_icmpeq     215
     206: aload_1
     207: iload_2
     208: invokevirtual #509                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     211: pop
     212: goto          243
     215: aload_1
     216: iload_3
     217: bipush        15
     219: iand
     220: bipush        12
     222: ishl
     223: iload         4
     225: bipush        63
     227: iand
     228: bipush        6
     230: ishl
     231: ior
     232: iload         5
     234: bipush        63
     236: iand
     237: ior
     238: i2c
     239: invokevirtual #509                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     242: pop
     243: goto          254
     246: aload_0
     247: iconst_2
     248: invokestatic  #546                // Method unget:(Ljava/nio/Buffer;I)Ljava/nio/Buffer;
     251: pop
     252: iconst_0
     253: ireturn
     254: goto          271
     257: aload_0
     258: iconst_1
     259: invokestatic  #546                // Method unget:(Ljava/nio/Buffer;I)Ljava/nio/Buffer;
     262: pop
     263: iconst_0
     264: ireturn
     265: aload_1
     266: iload_2
     267: invokevirtual #509                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     270: pop
     271: goto          0

  public static boolean readModifiedUtf8Line(java.nio.ByteBuffer, java.lang.StringBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: bipush        63
       4: invokestatic  #549                // Method readModifiedUtf8Line:(Ljava/nio/ByteBuffer;Ljava/lang/StringBuilder;C)Z
       7: ireturn

  public static boolean readModifiedUtf8Line(java.nio.ByteBuffer, java.lang.StringBuilder, char);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: bipush        10
       5: invokestatic  #551                // Method readModifiedUtf8Line:(Ljava/nio/ByteBuffer;Ljava/lang/StringBuilder;CC)Z
       8: ireturn

  public static boolean readModifiedUtf8Line(java.nio.ByteBuffer, java.lang.StringBuilder, char, char);
    Code:
       0: aload_0
       1: invokevirtual #515                // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: invokevirtual #518                // Method java/nio/ByteBuffer.get:()B
      13: sipush        255
      16: iand
      17: istore        4
      19: iload         4
      21: sipush        128
      24: if_icmpge     43
      27: aload_1
      28: iload         4
      30: i2c
      31: invokevirtual #509                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      34: pop
      35: iload         4
      37: iload_3
      38: if_icmpne     302
      41: iconst_1
      42: ireturn
      43: iload         4
      45: sipush        192
      48: if_icmpge     60
      51: aload_1
      52: iload_2
      53: invokevirtual #509                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      56: pop
      57: goto          302
      60: iload         4
      62: sipush        224
      65: if_icmpge     149
      68: aload_0
      69: invokevirtual #515                // Method java/nio/ByteBuffer.hasRemaining:()Z
      72: ifeq          141
      75: aload_0
      76: invokevirtual #518                // Method java/nio/ByteBuffer.get:()B
      79: sipush        255
      82: iand
      83: istore        5
      85: iload         5
      87: sipush        192
      90: iand
      91: sipush        128
      94: if_icmpeq     106
      97: aload_1
      98: iload_2
      99: invokevirtual #509                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     102: pop
     103: goto          138
     106: iload         4
     108: bipush        31
     110: iand
     111: bipush        6
     113: ishl
     114: iload         5
     116: bipush        63
     118: iand
     119: ior
     120: i2c
     121: istore        6
     123: aload_1
     124: iload         6
     126: invokevirtual #509                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     129: pop
     130: iload         6
     132: iload_3
     133: if_icmpne     138
     136: iconst_1
     137: ireturn
     138: goto          302
     141: aload_0
     142: iconst_1
     143: invokestatic  #546                // Method unget:(Ljava/nio/Buffer;I)Ljava/nio/Buffer;
     146: pop
     147: iconst_0
     148: ireturn
     149: iload         4
     151: sipush        240
     154: if_icmpge     296
     157: aload_0
     158: invokevirtual #515                // Method java/nio/ByteBuffer.hasRemaining:()Z
     161: ifeq          288
     164: aload_0
     165: invokevirtual #518                // Method java/nio/ByteBuffer.get:()B
     168: sipush        255
     171: iand
     172: istore        5
     174: iload         5
     176: sipush        192
     179: iand
     180: sipush        128
     183: if_icmpeq     195
     186: aload_1
     187: iload_2
     188: invokevirtual #509                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     191: pop
     192: goto          285
     195: aload_0
     196: invokevirtual #515                // Method java/nio/ByteBuffer.hasRemaining:()Z
     199: ifeq          277
     202: aload_0
     203: invokevirtual #518                // Method java/nio/ByteBuffer.get:()B
     206: sipush        255
     209: iand
     210: istore        6
     212: iload         6
     214: sipush        192
     217: iand
     218: sipush        128
     221: if_icmpeq     233
     224: aload_1
     225: iload_2
     226: invokevirtual #509                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     229: pop
     230: goto          274
     233: iload         4
     235: bipush        15
     237: iand
     238: bipush        12
     240: ishl
     241: iload         5
     243: bipush        63
     245: iand
     246: bipush        6
     248: ishl
     249: ior
     250: iload         6
     252: bipush        63
     254: iand
     255: ior
     256: i2c
     257: istore        7
     259: aload_1
     260: iload         7
     262: invokevirtual #509                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     265: pop
     266: iload         7
     268: iload_3
     269: if_icmpne     274
     272: iconst_1
     273: ireturn
     274: goto          285
     277: aload_0
     278: iconst_2
     279: invokestatic  #546                // Method unget:(Ljava/nio/Buffer;I)Ljava/nio/Buffer;
     282: pop
     283: iconst_0
     284: ireturn
     285: goto          302
     288: aload_0
     289: iconst_1
     290: invokestatic  #546                // Method unget:(Ljava/nio/Buffer;I)Ljava/nio/Buffer;
     293: pop
     294: iconst_0
     295: ireturn
     296: aload_1
     297: iload_2
     298: invokevirtual #509                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     301: pop
     302: goto          0

  public static boolean readLine(java.nio.ByteBuffer, java.lang.StringBuilder, java.nio.charset.CharsetDecoder);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: bipush        10
       5: invokestatic  #556                // Method readLine:(Ljava/nio/ByteBuffer;Ljava/lang/StringBuilder;Ljava/nio/charset/CharsetDecoder;C)Z
       8: ireturn

  public static boolean readLine(java.nio.ByteBuffer, java.lang.StringBuilder, java.nio.charset.CharsetDecoder, char);
    Code:
       0: iconst_1
       1: invokestatic  #561                // Method java/nio/CharBuffer.allocate:(I)Ljava/nio/CharBuffer;
       4: astore        4
       6: aload_2
       7: aload_0
       8: aload         4
      10: iconst_0
      11: invokevirtual #567                // Method java/nio/charset/CharsetDecoder.decode:(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;Z)Ljava/nio/charset/CoderResult;
      14: astore        5
      16: aload         5
      18: invokevirtual #572                // Method java/nio/charset/CoderResult.isUnderflow:()Z
      21: ifeq          34
      24: aload         4
      26: invokevirtual #573                // Method java/nio/CharBuffer.hasRemaining:()Z
      29: ifeq          50
      32: iconst_0
      33: ireturn
      34: aload         4
      36: invokevirtual #573                // Method java/nio/CharBuffer.hasRemaining:()Z
      39: ifeq          50
      42: new           #575                // class java/lang/IllegalStateException
      45: dup
      46: invokespecial #576                // Method java/lang/IllegalStateException."<init>":()V
      49: athrow
      50: aload         4
      52: iconst_0
      53: invokevirtual #465                // Method java/nio/CharBuffer.get:(I)C
      56: istore        6
      58: aload_1
      59: iload         6
      61: invokevirtual #509                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      64: pop
      65: iload         6
      67: iload_3
      68: if_icmpne     73
      71: iconst_1
      72: ireturn
      73: aload         4
      75: invokevirtual #577                // Method java/nio/CharBuffer.clear:()Ljava/nio/Buffer;
      78: pop
      79: goto          6

  public static <B extends java.nio.Buffer> org.xnio.Pooled<B> pooledWrapper(B);
    Code:
       0: new           #21                 // class org/xnio/Buffers$3
       3: dup
       4: aload_0
       5: invokespecial #586                // Method org/xnio/Buffers$3."<init>":(Ljava/nio/Buffer;)V
       8: areturn

  public static org.xnio.Pooled<java.nio.ByteBuffer> globalPooledWrapper(java.nio.ByteBuffer);
    Code:
       0: new           #19                 // class org/xnio/Buffers$4
       3: dup
       4: aload_0
       5: invokespecial #593                // Method org/xnio/Buffers$4."<init>":(Ljava/nio/ByteBuffer;)V
       8: areturn

  public static org.xnio.Pooled<java.nio.ByteBuffer> emptyPooledByteBuffer();
    Code:
       0: new           #17                 // class org/xnio/Buffers$5
       3: dup
       4: invokespecial #597                // Method org/xnio/Buffers$5."<init>":()V
       7: areturn

  public static org.xnio.BufferAllocator<java.nio.ByteBuffer> sliceAllocator(java.nio.ByteBuffer);
    Code:
       0: new           #15                 // class org/xnio/Buffers$6
       3: dup
       4: aload_0
       5: invokespecial #601                // Method org/xnio/Buffers$6."<init>":(Ljava/nio/ByteBuffer;)V
       8: areturn

  public static <B extends java.nio.Buffer> org.xnio.Pool<B> allocatedBufferPool(org.xnio.BufferAllocator<B>, int);
    Code:
       0: new           #13                 // class org/xnio/Buffers$7
       3: dup
       4: aload_0
       5: iload_1
       6: invokespecial #607                // Method org/xnio/Buffers$7."<init>":(Lorg/xnio/BufferAllocator;I)V
       9: areturn

  public static org.xnio.Pool<java.nio.ByteBuffer> secureBufferPool(org.xnio.Pool<java.nio.ByteBuffer>);
    Code:
       0: new           #10                 // class org/xnio/Buffers$SecureByteBufferPool
       3: dup
       4: aload_0
       5: invokespecial #615                // Method org/xnio/Buffers$SecureByteBufferPool."<init>":(Lorg/xnio/Pool;)V
       8: areturn

  public static boolean isSecureBufferPool(org.xnio.Pool<?>);
    Code:
       0: aload_0
       1: instanceof    #10                 // class org/xnio/Buffers$SecureByteBufferPool
       4: ireturn

  public static void zero(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokevirtual #625                // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
       4: pop
       5: aload_0
       6: invokevirtual #79                 // Method java/nio/ByteBuffer.remaining:()I
       9: bipush        8
      11: if_icmplt     23
      14: aload_0
      15: lconst_0
      16: invokevirtual #629                // Method java/nio/ByteBuffer.putLong:(J)Ljava/nio/ByteBuffer;
      19: pop
      20: goto          5
      23: aload_0
      24: invokevirtual #515                // Method java/nio/ByteBuffer.hasRemaining:()Z
      27: ifeq          39
      30: aload_0
      31: iconst_0
      32: invokevirtual #198                // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      35: pop
      36: goto          23
      39: aload_0
      40: invokevirtual #625                // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      43: pop
      44: return

  public static void zero(java.nio.CharBuffer);
    Code:
       0: aload_0
       1: invokevirtual #577                // Method java/nio/CharBuffer.clear:()Ljava/nio/Buffer;
       4: pop
       5: aload_0
       6: invokevirtual #204                // Method java/nio/CharBuffer.remaining:()I
       9: bipush        32
      11: if_icmplt     25
      14: aload_0
      15: ldc_w         #632                // String \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000
      18: invokevirtual #635                // Method java/nio/CharBuffer.put:(Ljava/lang/String;)Ljava/nio/CharBuffer;
      21: pop
      22: goto          5
      25: aload_0
      26: invokevirtual #573                // Method java/nio/CharBuffer.hasRemaining:()Z
      29: ifeq          41
      32: aload_0
      33: iconst_0
      34: invokevirtual #224                // Method java/nio/CharBuffer.put:(C)Ljava/nio/CharBuffer;
      37: pop
      38: goto          25
      41: aload_0
      42: invokevirtual #577                // Method java/nio/CharBuffer.clear:()Ljava/nio/Buffer;
      45: pop
      46: return

  public static boolean isDirect(java.nio.Buffer...) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: iconst_0
       2: aload_0
       3: arraylength
       4: invokestatic  #640                // Method isDirect:([Ljava/nio/Buffer;II)Z
       7: ireturn

  public static boolean isDirect(java.nio.Buffer[], int, int);
    Code:
       0: iconst_0
       1: istore_3
       2: iconst_0
       3: istore        4
       5: iconst_0
       6: istore        5
       8: iload         5
      10: iload_2
      11: if_icmpge     88
      14: aload_0
      15: iload         5
      17: iload_1
      18: iadd
      19: aaload
      20: astore        6
      22: aload         6
      24: ifnonnull     39
      27: getstatic     #85                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      30: ldc_w         #641                // String buffer
      33: invokeinterface #644,  2          // InterfaceMethod org/xnio/_private/Messages.nullParameter:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      38: athrow
      39: aload         6
      41: invokevirtual #646                // Method java/nio/Buffer.isDirect:()Z
      44: ifeq          66
      47: iload         4
      49: ifeq          61
      52: getstatic     #85                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      55: invokeinterface #650,  1          // InterfaceMethod org/xnio/_private/Messages.mixedDirectAndHeap:()Ljava/lang/IllegalArgumentException;
      60: athrow
      61: iconst_1
      62: istore_3
      63: goto          82
      66: iload_3
      67: ifeq          79
      70: getstatic     #85                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      73: invokeinterface #650,  1          // InterfaceMethod org/xnio/_private/Messages.mixedDirectAndHeap:()Ljava/lang/IllegalArgumentException;
      78: athrow
      79: iconst_1
      80: istore        4
      82: iinc          5, 1
      85: goto          8
      88: iload_3
      89: ireturn

  public static void assertWritable(java.nio.Buffer[], int, int) throws java.nio.ReadOnlyBufferException;
    Code:
       0: iconst_0
       1: istore_3
       2: iload_3
       3: iload_2
       4: if_icmpge     33
       7: aload_0
       8: iload_3
       9: iload_1
      10: iadd
      11: aaload
      12: invokevirtual #660                // Method java/nio/Buffer.isReadOnly:()Z
      15: ifeq          27
      18: getstatic     #85                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      21: invokeinterface #664,  1          // InterfaceMethod org/xnio/_private/Messages.readOnlyBuffer:()Ljava/nio/ReadOnlyBufferException;
      26: athrow
      27: iinc          3, 1
      30: goto          2
      33: return

  public static void assertWritable(java.nio.Buffer...) throws java.nio.ReadOnlyBufferException;
    Code:
       0: aload_0
       1: iconst_0
       2: aload_0
       3: arraylength
       4: invokestatic  #667                // Method assertWritable:([Ljava/nio/Buffer;II)V
       7: return

  public static void addRandom(java.nio.ByteBuffer, java.util.Random, int);
    Code:
       0: iload_2
       1: newarray       byte
       3: astore_3
       4: aload_1
       5: aload_3
       6: invokevirtual #675                // Method java/util/Random.nextBytes:([B)V
       9: aload_0
      10: aload_3
      11: invokevirtual #677                // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
      14: pop
      15: return

  public static void addRandom(java.nio.ByteBuffer, int);
    Code:
       0: aload_0
       1: invokestatic  #686                // Method org/xnio/IoUtils.getThreadLocalRandom:()Ljava/util/Random;
       4: iload_1
       5: invokestatic  #688                // Method addRandom:(Ljava/nio/ByteBuffer;Ljava/util/Random;I)V
       8: return

  public static void addRandom(java.nio.ByteBuffer, java.util.Random);
    Code:
       0: aload_0
       1: invokevirtual #79                 // Method java/nio/ByteBuffer.remaining:()I
       4: ifne          8
       7: return
       8: aload_0
       9: aload_1
      10: aload_1
      11: aload_0
      12: invokevirtual #79                 // Method java/nio/ByteBuffer.remaining:()I
      15: invokevirtual #693                // Method java/util/Random.nextInt:(I)I
      18: invokestatic  #688                // Method addRandom:(Ljava/nio/ByteBuffer;Ljava/util/Random;I)V
      21: return

  public static void addRandom(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokestatic  #686                // Method org/xnio/IoUtils.getThreadLocalRandom:()Ljava/util/Random;
       4: invokestatic  #695                // Method addRandom:(Ljava/nio/ByteBuffer;Ljava/util/Random;)V
       7: return

  public static int fillFromStream(java.nio.ByteBuffer, java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #79                 // Method java/nio/ByteBuffer.remaining:()I
       4: istore_2
       5: iload_2
       6: ifne          11
       9: iconst_0
      10: ireturn
      11: aload_0
      12: invokevirtual #91                 // Method java/nio/ByteBuffer.position:()I
      15: istore_3
      16: aload_0
      17: invokevirtual #180                // Method java/nio/ByteBuffer.hasArray:()Z
      20: ifeq          77
      23: aload_1
      24: aload_0
      25: invokevirtual #187                // Method java/nio/ByteBuffer.array:()[B
      28: iload_3
      29: aload_0
      30: invokevirtual #183                // Method java/nio/ByteBuffer.arrayOffset:()I
      33: iadd
      34: iload_2
      35: invokevirtual #705                // Method java/io/InputStream.read:([BII)I
      38: istore        4
      40: goto          60
      43: astore        5
      45: aload_0
      46: iload_3
      47: aload         5
      49: getfield      #708                // Field java/io/InterruptedIOException.bytesTransferred:I
      52: iadd
      53: invokevirtual #98                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      56: pop
      57: aload         5
      59: athrow
      60: iload         4
      62: ifle          74
      65: aload_0
      66: iload_3
      67: iload         4
      69: iadd
      70: invokevirtual #98                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      73: pop
      74: iload         4
      76: ireturn
      77: iload_2
      78: newarray       byte
      80: astore        4
      82: aload_1
      83: aload         4
      85: invokevirtual #711                // Method java/io/InputStream.read:([B)I
      88: istore        5
      90: goto          124
      93: astore        6
      95: aload         6
      97: getfield      #708                // Field java/io/InterruptedIOException.bytesTransferred:I
     100: istore        7
     102: aload_0
     103: aload         4
     105: iconst_0
     106: iload         7
     108: invokevirtual #713                // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
     111: pop
     112: aload_0
     113: iload_3
     114: iload         7
     116: iadd
     117: invokevirtual #98                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     120: pop
     121: aload         6
     123: athrow
     124: iload         5
     126: ifle          139
     129: aload_0
     130: aload         4
     132: iconst_0
     133: iload         5
     135: invokevirtual #713                // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
     138: pop
     139: iload         5
     141: ireturn
    Exception table:
       from    to  target type
          23    40    43   Class java/io/InterruptedIOException
          82    90    93   Class java/io/InterruptedIOException

  public static java.lang.String debugString(java.nio.ByteBuffer);
    Code:
       0: new           #498                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #499                // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc_w         #722                // String 1 buffer of
      12: invokevirtual #725                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: aload_0
      16: invokevirtual #79                 // Method java/nio/ByteBuffer.remaining:()I
      19: invokevirtual #728                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      22: ldc_w         #730                // String  bytes
      25: invokevirtual #725                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: pop
      29: aload_1
      30: invokevirtual #506                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: areturn

  public static java.lang.String debugString(java.nio.ByteBuffer[], int, int);
    Code:
       0: new           #498                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #499                // Method java/lang/StringBuilder."<init>":()V
       7: astore_3
       8: aload_3
       9: iload_2
      10: invokevirtual #728                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      13: ldc_w         #733                // String  buffer(s)
      16: invokevirtual #725                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: pop
      20: iload_2
      21: ifle          47
      24: aload_3
      25: ldc_w         #735                // String  of
      28: invokevirtual #725                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: iload_1
      33: iload_2
      34: invokestatic  #375                // Method remaining:([Ljava/nio/Buffer;II)J
      37: invokevirtual #738                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      40: ldc_w         #730                // String  bytes
      43: invokevirtual #725                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: pop
      47: aload_3
      48: invokevirtual #506                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: areturn

  public static void emptyToStream(java.io.OutputStream, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #79                 // Method java/nio/ByteBuffer.remaining:()I
       4: istore_2
       5: iload_2
       6: ifne          10
       9: return
      10: aload_1
      11: invokevirtual #91                 // Method java/nio/ByteBuffer.position:()I
      14: istore_3
      15: aload_1
      16: invokevirtual #180                // Method java/nio/ByteBuffer.hasArray:()Z
      19: ifeq          67
      22: aload_0
      23: aload_1
      24: invokevirtual #187                // Method java/nio/ByteBuffer.array:()[B
      27: iload_3
      28: aload_1
      29: invokevirtual #183                // Method java/nio/ByteBuffer.arrayOffset:()I
      32: iadd
      33: iload_2
      34: invokevirtual #746                // Method java/io/OutputStream.write:([BII)V
      37: goto          57
      40: astore        4
      42: aload_1
      43: iload_3
      44: aload         4
      46: getfield      #708                // Field java/io/InterruptedIOException.bytesTransferred:I
      49: iadd
      50: invokevirtual #98                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      53: pop
      54: aload         4
      56: athrow
      57: aload_1
      58: aload_1
      59: invokevirtual #93                 // Method java/nio/ByteBuffer.limit:()I
      62: invokevirtual #98                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      65: pop
      66: return
      67: aload_1
      68: invokestatic  #372                // Method take:(Ljava/nio/ByteBuffer;)[B
      71: astore        4
      73: aload_0
      74: aload         4
      76: invokevirtual #748                // Method java/io/OutputStream.write:([B)V
      79: goto          110
      82: astore        5
      84: aload_1
      85: iload_3
      86: aload         5
      88: getfield      #708                // Field java/io/InterruptedIOException.bytesTransferred:I
      91: iadd
      92: invokevirtual #98                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      95: pop
      96: aload         5
      98: athrow
      99: astore        5
     101: aload_1
     102: iload_3
     103: invokevirtual #98                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     106: pop
     107: aload         5
     109: athrow
     110: return
    Exception table:
       from    to  target type
          22    37    40   Class java/io/InterruptedIOException
          73    79    82   Class java/io/InterruptedIOException
          73    79    99   Class java/io/IOException

  static {};
    Code:
       0: iconst_0
       1: newarray       byte
       3: putstatic     #369                // Field NO_BYTES:[B
       6: iconst_0
       7: invokestatic  #754                // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      10: putstatic     #756                // Field EMPTY_BYTE_BUFFER:Ljava/nio/ByteBuffer;
      13: invokestatic  #758                // Method emptyPooledByteBuffer:()Lorg/xnio/Pooled;
      16: putstatic     #760                // Field EMPTY_POOLED_BYTE_BUFFER:Lorg/xnio/Pooled;
      19: return
}
