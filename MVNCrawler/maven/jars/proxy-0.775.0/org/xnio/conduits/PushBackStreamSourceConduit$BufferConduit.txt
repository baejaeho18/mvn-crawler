Compiled from "PushBackStreamSourceConduit.java"
class org.xnio.conduits.PushBackStreamSourceConduit$BufferConduit extends org.xnio.conduits.AbstractStreamSourceConduit<org.xnio.conduits.StreamSourceConduit> implements org.xnio.conduits.StreamSourceConduit {
  private final org.xnio.Pooled<java.nio.ByteBuffer> pooledBuffer;

  final org.xnio.conduits.PushBackStreamSourceConduit this$0;

  org.xnio.conduits.PushBackStreamSourceConduit$BufferConduit(org.xnio.conduits.StreamSourceConduit, org.xnio.Pooled<java.nio.ByteBuffer>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field this$0:Lorg/xnio/conduits/PushBackStreamSourceConduit;
       5: aload_0
       6: aload_2
       7: invokespecial #24                 // Method org/xnio/conduits/AbstractStreamSourceConduit."<init>":(Lorg/xnio/conduits/StreamSourceConduit;)V
      10: aload_0
      11: aload_3
      12: putfield      #26                 // Field pooledBuffer:Lorg/xnio/Pooled;
      15: return

  public void resumeReads();
    Code:
       0: aload_0
       1: getfield      #35                 // Field next:Lorg/xnio/conduits/Conduit;
       4: checkcast     #7                  // class org/xnio/conduits/StreamSourceConduit
       7: invokeinterface #38,  1           // InterfaceMethod org/xnio/conduits/StreamSourceConduit.wakeupReads:()V
      12: return

  public void terminateReads() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #43                 // Method org/xnio/conduits/AbstractStreamSourceConduit.terminateReads:()V
       4: aload_0
       5: getfield      #26                 // Field pooledBuffer:Lorg/xnio/Pooled;
       8: ifnull        20
      11: aload_0
      12: getfield      #26                 // Field pooledBuffer:Lorg/xnio/Pooled;
      15: invokeinterface #48,  1           // InterfaceMethod org/xnio/Pooled.free:()V
      20: aload_0
      21: getfield      #35                 // Field next:Lorg/xnio/conduits/Conduit;
      24: checkcast     #7                  // class org/xnio/conduits/StreamSourceConduit
      27: invokeinterface #49,  1           // InterfaceMethod org/xnio/conduits/StreamSourceConduit.terminateReads:()V
      32: goto          66
      35: astore_1
      36: aload_0
      37: getfield      #26                 // Field pooledBuffer:Lorg/xnio/Pooled;
      40: ifnull        52
      43: aload_0
      44: getfield      #26                 // Field pooledBuffer:Lorg/xnio/Pooled;
      47: invokeinterface #48,  1           // InterfaceMethod org/xnio/Pooled.free:()V
      52: aload_0
      53: getfield      #35                 // Field next:Lorg/xnio/conduits/Conduit;
      56: checkcast     #7                  // class org/xnio/conduits/StreamSourceConduit
      59: invokeinterface #49,  1           // InterfaceMethod org/xnio/conduits/StreamSourceConduit.terminateReads:()V
      64: aload_1
      65: athrow
      66: return
    Exception table:
       from    to  target type
           0     4    35   any

  public void awaitReadable(long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: return

  public void awaitReadable() throws java.io.IOException;
    Code:
       0: return

  public int read(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #67                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #35                 // Field next:Lorg/xnio/conduits/Conduit;
      13: checkcast     #7                  // class org/xnio/conduits/StreamSourceConduit
      16: astore_3
      17: aload_0
      18: getfield      #26                 // Field pooledBuffer:Lorg/xnio/Pooled;
      21: invokeinterface #71,  1           // InterfaceMethod org/xnio/Pooled.getResource:()Ljava/lang/Object;
      26: checkcast     #63                 // class java/nio/ByteBuffer
      29: astore        4
      31: aload_1
      32: aload         4
      34: invokestatic  #77                 // Method org/xnio/Buffers.copy:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I
      37: istore_2
      38: aload         4
      40: invokevirtual #67                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      43: ifeq          48
      46: iload_2
      47: ireturn
      48: aload_0
      49: invokespecial #80                 // Method moveToNext:()V
      52: iload_2
      53: ifle          69
      56: aload_3
      57: aload_0
      58: getfield      #21                 // Field this$0:Lorg/xnio/conduits/PushBackStreamSourceConduit;
      61: getfield      #81                 // Field org/xnio/conduits/PushBackStreamSourceConduit.next:Lorg/xnio/conduits/Conduit;
      64: if_acmpne     69
      67: iload_2
      68: ireturn
      69: goto          80
      72: astore        4
      74: aload_0
      75: invokespecial #80                 // Method moveToNext:()V
      78: iconst_0
      79: istore_2
      80: aload_3
      81: aload_1
      82: invokeinterface #83,  2           // InterfaceMethod org/xnio/conduits/StreamSourceConduit.read:(Ljava/nio/ByteBuffer;)I
      87: istore        4
      89: iload         4
      91: ifle          101
      94: iload         4
      96: iload_2
      97: iadd
      98: goto          111
     101: iload_2
     102: ifle          109
     105: iload_2
     106: goto          111
     109: iload         4
     111: ireturn
    Exception table:
       from    to  target type
          17    47    72   Class java/lang/IllegalStateException
          48    68    72   Class java/lang/IllegalStateException

  public long read(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #35                 // Field next:Lorg/xnio/conduits/Conduit;
       4: checkcast     #7                  // class org/xnio/conduits/StreamSourceConduit
       7: astore        6
       9: aload_0
      10: getfield      #26                 // Field pooledBuffer:Lorg/xnio/Pooled;
      13: invokeinterface #71,  1           // InterfaceMethod org/xnio/Pooled.getResource:()Ljava/lang/Object;
      18: checkcast     #63                 // class java/nio/ByteBuffer
      21: astore        7
      23: aload_1
      24: iload_2
      25: iload_3
      26: aload         7
      28: invokestatic  #95                 // Method org/xnio/Buffers.copy:([Ljava/nio/ByteBuffer;IILjava/nio/ByteBuffer;)I
      31: i2l
      32: lstore        4
      34: aload         7
      36: invokevirtual #67                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      39: ifeq          45
      42: lload         4
      44: lreturn
      45: aload_0
      46: invokespecial #80                 // Method moveToNext:()V
      49: lload         4
      51: lconst_0
      52: lcmp
      53: ifle          71
      56: aload         6
      58: aload_0
      59: getfield      #21                 // Field this$0:Lorg/xnio/conduits/PushBackStreamSourceConduit;
      62: getfield      #81                 // Field org/xnio/conduits/PushBackStreamSourceConduit.next:Lorg/xnio/conduits/Conduit;
      65: if_acmpne     71
      68: lload         4
      70: lreturn
      71: goto          83
      74: astore        7
      76: aload_0
      77: invokespecial #80                 // Method moveToNext:()V
      80: lconst_0
      81: lstore        4
      83: aload         6
      85: aload_1
      86: iload_2
      87: iload_3
      88: invokeinterface #99,  4           // InterfaceMethod org/xnio/conduits/StreamSourceConduit.read:([Ljava/nio/ByteBuffer;II)J
      93: lstore        7
      95: lload         7
      97: lconst_0
      98: lcmp
      99: ifle          110
     102: lload         7
     104: lload         4
     106: ladd
     107: goto          124
     110: lload         4
     112: lconst_0
     113: lcmp
     114: ifle          122
     117: lload         4
     119: goto          124
     122: lload         7
     124: lreturn
    Exception table:
       from    to  target type
           9    44    74   Class java/lang/IllegalStateException
          45    70    74   Class java/lang/IllegalStateException

  public long transferTo(long, long, java.nio.channels.FileChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #26                 // Field pooledBuffer:Lorg/xnio/Pooled;
       4: invokeinterface #71,  1           // InterfaceMethod org/xnio/Pooled.getResource:()Ljava/lang/Object;
       9: checkcast     #63                 // class java/nio/ByteBuffer
      12: astore        8
      14: aload         8
      16: invokevirtual #108                // Method java/nio/ByteBuffer.position:()I
      19: istore        9
      21: aload         8
      23: invokevirtual #111                // Method java/nio/ByteBuffer.remaining:()I
      26: istore        10
      28: iload         10
      30: i2l
      31: lload_3
      32: lcmp
      33: ifle          88
      36: aload         8
      38: iload         9
      40: lload_3
      41: l2i
      42: iadd
      43: invokevirtual #115                // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      46: pop
      47: aload         5
      49: aload         8
      51: lload_1
      52: invokevirtual #121                // Method java/nio/channels/FileChannel.write:(Ljava/nio/ByteBuffer;J)I
      55: i2l
      56: lstore        11
      58: aload         8
      60: iload         9
      62: iload         10
      64: iadd
      65: invokevirtual #115                // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      68: pop
      69: lload         11
      71: lreturn
      72: astore        13
      74: aload         8
      76: iload         9
      78: iload         10
      80: iadd
      81: invokevirtual #115                // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      84: pop
      85: aload         13
      87: athrow
      88: aload         5
      90: aload         8
      92: lload_1
      93: invokevirtual #121                // Method java/nio/channels/FileChannel.write:(Ljava/nio/ByteBuffer;J)I
      96: i2l
      97: lstore        6
      99: lload         6
     101: iload         10
     103: i2l
     104: lcmp
     105: ifne          115
     108: aload_0
     109: invokespecial #80                 // Method moveToNext:()V
     112: goto          118
     115: lload         6
     117: lreturn
     118: lload_1
     119: lload         6
     121: ladd
     122: lstore_1
     123: lload_3
     124: lload         6
     126: lsub
     127: lstore_3
     128: goto          140
     131: astore        9
     133: aload_0
     134: invokespecial #80                 // Method moveToNext:()V
     137: lconst_0
     138: lstore        6
     140: lload         6
     142: aload_0
     143: getfield      #35                 // Field next:Lorg/xnio/conduits/Conduit;
     146: checkcast     #7                  // class org/xnio/conduits/StreamSourceConduit
     149: lload_1
     150: lload_3
     151: aload         5
     153: invokeinterface #123,  6          // InterfaceMethod org/xnio/conduits/StreamSourceConduit.transferTo:(JJLjava/nio/channels/FileChannel;)J
     158: ladd
     159: lreturn
    Exception table:
       from    to  target type
          36    58    72   any
          72    74    72   any
           0    69   131   Class java/lang/IllegalStateException
          72   117   131   Class java/lang/IllegalStateException
         118   128   131   Class java/lang/IllegalStateException

  public long transferTo(long, java.nio.ByteBuffer, org.xnio.channels.StreamSinkChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #26                 // Field pooledBuffer:Lorg/xnio/Pooled;
       4: invokeinterface #71,  1           // InterfaceMethod org/xnio/Pooled.getResource:()Ljava/lang/Object;
       9: checkcast     #63                 // class java/nio/ByteBuffer
      12: astore        7
      14: aload         7
      16: invokevirtual #108                // Method java/nio/ByteBuffer.position:()I
      19: istore        8
      21: aload         7
      23: invokevirtual #111                // Method java/nio/ByteBuffer.remaining:()I
      26: istore        9
      28: iload         9
      30: i2l
      31: lload_1
      32: lcmp
      33: ifle          128
      36: aload         7
      38: iload         8
      40: lload_1
      41: l2i
      42: iadd
      43: invokevirtual #115                // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      46: pop
      47: aload         4
      49: aload         7
      51: invokeinterface #133,  2          // InterfaceMethod org/xnio/channels/StreamSinkChannel.write:(Ljava/nio/ByteBuffer;)I
      56: istore        10
      58: iload         10
      60: ifne          83
      63: aload_3
      64: invokevirtual #137                // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      67: pop
      68: aload_3
      69: aload         7
      71: invokestatic  #77                 // Method org/xnio/Buffers.copy:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I
      74: pop
      75: aload_3
      76: invokevirtual #140                // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      79: pop
      80: goto          93
      83: aload_3
      84: invokevirtual #137                // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      87: pop
      88: aload_3
      89: invokevirtual #140                // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      92: pop
      93: iload         10
      95: i2l
      96: lstore        11
      98: aload         7
     100: iload         8
     102: iload         9
     104: iadd
     105: invokevirtual #115                // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     108: pop
     109: lload         11
     111: lreturn
     112: astore        13
     114: aload         7
     116: iload         8
     118: iload         9
     120: iadd
     121: invokevirtual #115                // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     124: pop
     125: aload         13
     127: athrow
     128: aload         4
     130: aload         7
     132: invokeinterface #133,  2          // InterfaceMethod org/xnio/channels/StreamSinkChannel.write:(Ljava/nio/ByteBuffer;)I
     137: i2l
     138: lstore        5
     140: lload         5
     142: iload         9
     144: i2l
     145: lcmp
     146: ifne          156
     149: aload_0
     150: invokespecial #80                 // Method moveToNext:()V
     153: goto          196
     156: lload         5
     158: lconst_0
     159: lcmp
     160: ifne          183
     163: aload_3
     164: invokevirtual #137                // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     167: pop
     168: aload_3
     169: aload         7
     171: invokestatic  #77                 // Method org/xnio/Buffers.copy:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I
     174: pop
     175: aload_3
     176: invokevirtual #140                // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     179: pop
     180: goto          193
     183: aload_3
     184: invokevirtual #137                // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     187: pop
     188: aload_3
     189: invokevirtual #140                // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     192: pop
     193: lload         5
     195: lreturn
     196: goto          208
     199: astore        8
     201: aload_0
     202: invokespecial #80                 // Method moveToNext:()V
     205: lconst_0
     206: lstore        5
     208: aload_0
     209: getfield      #35                 // Field next:Lorg/xnio/conduits/Conduit;
     212: checkcast     #7                  // class org/xnio/conduits/StreamSourceConduit
     215: lload_1
     216: lload         5
     218: lsub
     219: aload_3
     220: aload         4
     222: invokeinterface #142,  5          // InterfaceMethod org/xnio/conduits/StreamSourceConduit.transferTo:(JLjava/nio/ByteBuffer;Lorg/xnio/channels/StreamSinkChannel;)J
     227: lstore        8
     229: lload         8
     231: lconst_0
     232: lcmp
     233: ifle          244
     236: lload         5
     238: lload         8
     240: ladd
     241: goto          258
     244: lload         5
     246: lconst_0
     247: lcmp
     248: ifle          256
     251: lload         5
     253: goto          258
     256: lload         8
     258: lreturn
    Exception table:
       from    to  target type
          36    98   112   any
         112   114   112   any
           0   109   199   Class java/lang/IllegalStateException
         112   195   199   Class java/lang/IllegalStateException

  private final void moveToNext();
    Code:
       0: aload_0
       1: getfield      #21                 // Field this$0:Lorg/xnio/conduits/PushBackStreamSourceConduit;
       4: aload_0
       5: getfield      #35                 // Field next:Lorg/xnio/conduits/Conduit;
       8: checkcast     #7                  // class org/xnio/conduits/StreamSourceConduit
      11: invokestatic  #148                // Method org/xnio/conduits/PushBackStreamSourceConduit.access$002:(Lorg/xnio/conduits/PushBackStreamSourceConduit;Lorg/xnio/conduits/StreamSourceConduit;)Lorg/xnio/conduits/StreamSourceConduit;
      14: pop
      15: aload_0
      16: getfield      #26                 // Field pooledBuffer:Lorg/xnio/Pooled;
      19: invokeinterface #48,  1           // InterfaceMethod org/xnio/Pooled.free:()V
      24: return
}
