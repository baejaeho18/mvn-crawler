Compiled from "BufferedStreamSinkConduit.java"
public final class org.xnio.conduits.BufferedStreamSinkConduit extends org.xnio.conduits.AbstractStreamSinkConduit<org.xnio.conduits.StreamSinkConduit> {
  private final org.xnio.Pooled<java.nio.ByteBuffer> pooledBuffer;

  private boolean terminate;

  public org.xnio.conduits.BufferedStreamSinkConduit(org.xnio.conduits.StreamSinkConduit, org.xnio.Pooled<java.nio.ByteBuffer>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #17                 // Method org/xnio/conduits/AbstractStreamSinkConduit."<init>":(Lorg/xnio/conduits/StreamSinkConduit;)V
       5: aload_0
       6: aload_2
       7: putfield      #19                 // Field pooledBuffer:Lorg/xnio/Pooled;
      10: return

  public long transferFrom(java.nio.channels.FileChannel, long, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #31                 // Method flushLocal:()Z
       4: ifeq          18
       7: aload_0
       8: aload_1
       9: lload_2
      10: lload         4
      12: invokespecial #33                 // Method org/xnio/conduits/AbstractStreamSinkConduit.transferFrom:(Ljava/nio/channels/FileChannel;JJ)J
      15: goto          19
      18: lconst_0
      19: lreturn

  public long transferFrom(org.xnio.channels.StreamSourceChannel, long, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #31                 // Method flushLocal:()Z
       4: ifeq          16
       7: aload_0
       8: aload_1
       9: lload_2
      10: aload         4
      12: invokespecial #41                 // Method org/xnio/conduits/AbstractStreamSinkConduit.transferFrom:(Lorg/xnio/channels/StreamSourceChannel;JLjava/nio/ByteBuffer;)J
      15: lreturn
      16: aload         4
      18: iconst_0
      19: invokevirtual #47                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      22: pop
      23: lconst_0
      24: lreturn

  public int write(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #19                 // Field pooledBuffer:Lorg/xnio/Pooled;
       4: invokeinterface #61,  1           // InterfaceMethod org/xnio/Pooled.getResource:()Ljava/lang/Object;
       9: checkcast     #43                 // class java/nio/ByteBuffer
      12: astore_2
      13: aload_2
      14: invokevirtual #64                 // Method java/nio/ByteBuffer.position:()I
      17: istore_3
      18: aload_2
      19: invokevirtual #66                 // Method java/nio/ByteBuffer.limit:()I
      22: istore        4
      24: aload_1
      25: invokevirtual #69                 // Method java/nio/ByteBuffer.remaining:()I
      28: istore        5
      30: iload         4
      32: iload_3
      33: isub
      34: istore        6
      36: iload         5
      38: iload         6
      40: if_icmpge     52
      43: aload_2
      44: aload_1
      45: invokevirtual #73                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      48: pop
      49: iload         5
      51: ireturn
      52: aload_2
      53: invokevirtual #64                 // Method java/nio/ByteBuffer.position:()I
      56: ifne          89
      59: aload_0
      60: aload_1
      61: invokespecial #75                 // Method org/xnio/conduits/AbstractStreamSinkConduit.write:(Ljava/nio/ByteBuffer;)I
      64: istore        7
      66: iload         5
      68: iload         7
      70: if_icmple     86
      73: aload_2
      74: aload_1
      75: invokestatic  #81                 // Method org/xnio/Buffers.copy:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I
      78: istore        8
      80: iload         7
      82: iload         8
      84: iadd
      85: ireturn
      86: iload         7
      88: ireturn
      89: aload_2
      90: invokevirtual #85                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      93: pop
      94: aload_0
      95: iconst_2
      96: anewarray     #43                 // class java/nio/ByteBuffer
      99: dup
     100: iconst_0
     101: aload_2
     102: aastore
     103: dup
     104: iconst_1
     105: aload_1
     106: aastore
     107: iconst_0
     108: iconst_2
     109: invokespecial #88                 // Method org/xnio/conduits/AbstractStreamSinkConduit.write:([Ljava/nio/ByteBuffer;II)J
     112: pop2
     113: aload_2
     114: invokevirtual #92                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
     117: pop
     118: goto          131
     121: astore        9
     123: aload_2
     124: invokevirtual #92                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
     127: pop
     128: aload         9
     130: athrow
     131: aload_1
     132: invokevirtual #97                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     135: ifeq          144
     138: aload_2
     139: aload_1
     140: invokestatic  #81                 // Method org/xnio/Buffers.copy:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I
     143: pop
     144: iload         5
     146: aload_1
     147: invokevirtual #69                 // Method java/nio/ByteBuffer.remaining:()I
     150: isub
     151: ireturn
     152: astore_2
     153: new           #99                 // class java/nio/channels/ClosedChannelException
     156: dup
     157: invokespecial #102                // Method java/nio/channels/ClosedChannelException."<init>":()V
     160: athrow
    Exception table:
       from    to  target type
          94   113   121   any
         121   123   121   any
           0    51   152   Class java/lang/IllegalStateException
          52    85   152   Class java/lang/IllegalStateException
          86    88   152   Class java/lang/IllegalStateException
          89   151   152   Class java/lang/IllegalStateException

  public long write(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: ifne          6
       4: lconst_0
       5: lreturn
       6: iload_3
       7: iconst_1
       8: if_icmpne     20
      11: aload_0
      12: aload_1
      13: iload_2
      14: aaload
      15: invokevirtual #113                // Method write:(Ljava/nio/ByteBuffer;)I
      18: i2l
      19: lreturn
      20: aload_0
      21: getfield      #19                 // Field pooledBuffer:Lorg/xnio/Pooled;
      24: invokeinterface #61,  1           // InterfaceMethod org/xnio/Pooled.getResource:()Ljava/lang/Object;
      29: checkcast     #43                 // class java/nio/ByteBuffer
      32: astore        4
      34: aload         4
      36: invokevirtual #64                 // Method java/nio/ByteBuffer.position:()I
      39: istore        5
      41: aload         4
      43: invokevirtual #66                 // Method java/nio/ByteBuffer.limit:()I
      46: istore        6
      48: aload_1
      49: iload_2
      50: iload_3
      51: invokestatic  #116                // Method org/xnio/Buffers.remaining:([Ljava/nio/Buffer;II)J
      54: lstore        7
      56: iload         6
      58: iload         5
      60: isub
      61: istore        9
      63: lload         7
      65: iload         9
      67: i2l
      68: lcmp
      69: ifge          100
      72: iconst_0
      73: istore        10
      75: iload         10
      77: iload_3
      78: if_icmpge     97
      81: aload         4
      83: aload_1
      84: iload         10
      86: aaload
      87: invokevirtual #73                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      90: pop
      91: iinc          10, 1
      94: goto          75
      97: lload         7
      99: lreturn
     100: aload         4
     102: invokevirtual #64                 // Method java/nio/ByteBuffer.position:()I
     105: ifne          145
     108: aload_0
     109: aload_1
     110: iload_2
     111: iload_3
     112: invokespecial #88                 // Method org/xnio/conduits/AbstractStreamSinkConduit.write:([Ljava/nio/ByteBuffer;II)J
     115: lstore        10
     117: lload         7
     119: lload         10
     121: lcmp
     122: ifle          142
     125: aload         4
     127: aload_1
     128: iload_2
     129: iload_3
     130: invokestatic  #121                // Method org/xnio/Buffers.copy:(Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;II)I
     133: istore        12
     135: lload         10
     137: iload         12
     139: i2l
     140: ladd
     141: lreturn
     142: lload         10
     144: lreturn
     145: aload         4
     147: invokevirtual #85                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     150: pop
     151: iload_2
     152: ifle          173
     155: aload_1
     156: iload_2
     157: iconst_1
     158: isub
     159: iload_2
     160: iload_3
     161: iadd
     162: invokestatic  #127                // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
     165: checkcast     #118                // class "[Ljava/nio/ByteBuffer;"
     168: astore        10
     170: goto          190
     173: iload_3
     174: iconst_1
     175: iadd
     176: anewarray     #43                 // class java/nio/ByteBuffer
     179: astore        10
     181: aload_1
     182: iload_2
     183: aload         10
     185: iconst_1
     186: iload_3
     187: invokestatic  #133                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     190: aload         10
     192: iconst_0
     193: aload         4
     195: aastore
     196: aload_0
     197: aload         10
     199: iconst_0
     200: aload         10
     202: arraylength
     203: invokespecial #88                 // Method org/xnio/conduits/AbstractStreamSinkConduit.write:([Ljava/nio/ByteBuffer;II)J
     206: pop2
     207: aload         4
     209: invokevirtual #92                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
     212: pop
     213: goto          227
     216: astore        13
     218: aload         4
     220: invokevirtual #92                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
     223: pop
     224: aload         13
     226: athrow
     227: aload         4
     229: aload_1
     230: iload_2
     231: iload_3
     232: invokestatic  #121                // Method org/xnio/Buffers.copy:(Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;II)I
     235: pop
     236: lload         7
     238: aload_1
     239: iload_2
     240: iload_3
     241: invokestatic  #116                // Method org/xnio/Buffers.remaining:([Ljava/nio/Buffer;II)J
     244: lsub
     245: lreturn
     246: astore        4
     248: new           #99                 // class java/nio/channels/ClosedChannelException
     251: dup
     252: invokespecial #102                // Method java/nio/channels/ClosedChannelException."<init>":()V
     255: athrow
    Exception table:
       from    to  target type
         151   207   216   any
         216   218   216   any
          20    99   246   Class java/lang/IllegalStateException
         100   141   246   Class java/lang/IllegalStateException
         142   144   246   Class java/lang/IllegalStateException
         145   245   246   Class java/lang/IllegalStateException

  private boolean flushLocal() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #19                 // Field pooledBuffer:Lorg/xnio/Pooled;
       4: invokeinterface #61,  1           // InterfaceMethod org/xnio/Pooled.getResource:()Ljava/lang/Object;
       9: checkcast     #43                 // class java/nio/ByteBuffer
      12: astore_1
      13: aload_1
      14: invokevirtual #64                 // Method java/nio/ByteBuffer.position:()I
      17: ifle          71
      20: aload_1
      21: invokevirtual #85                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      24: pop
      25: aload_0
      26: aload_1
      27: invokespecial #75                 // Method org/xnio/conduits/AbstractStreamSinkConduit.write:(Ljava/nio/ByteBuffer;)I
      30: pop
      31: aload_1
      32: invokevirtual #97                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      35: ifne          25
      38: aload_0
      39: getfield      #140                // Field terminate:Z
      42: ifeq          54
      45: aload_0
      46: getfield      #19                 // Field pooledBuffer:Lorg/xnio/Pooled;
      49: invokeinterface #143,  1          // InterfaceMethod org/xnio/Pooled.free:()V
      54: iconst_1
      55: istore_2
      56: aload_1
      57: invokevirtual #92                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
      60: pop
      61: iload_2
      62: ireturn
      63: astore_3
      64: aload_1
      65: invokevirtual #92                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
      68: pop
      69: aload_3
      70: athrow
      71: iconst_1
      72: ireturn
      73: astore_1
      74: iconst_1
      75: ireturn
    Exception table:
       from    to  target type
          25    56    63   any
           0    61    73   Class java/lang/IllegalStateException
          63    72    73   Class java/lang/IllegalStateException

  public int writeFinal(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #150                // Method org/xnio/conduits/Conduits.writeFinalBasic:(Lorg/xnio/conduits/StreamSinkConduit;Ljava/nio/ByteBuffer;)I
       5: ireturn

  public long writeFinal(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #153                // Method org/xnio/conduits/Conduits.writeFinalBasic:(Lorg/xnio/conduits/StreamSinkConduit;[Ljava/nio/ByteBuffer;II)J
       7: lreturn

  public boolean flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #31                 // Method flushLocal:()Z
       4: ifeq          18
       7: aload_0
       8: invokespecial #158                // Method org/xnio/conduits/AbstractStreamSinkConduit.flush:()Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public void truncateWrites() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #19                 // Field pooledBuffer:Lorg/xnio/Pooled;
       4: invokeinterface #143,  1          // InterfaceMethod org/xnio/Pooled.free:()V
       9: aload_0
      10: invokespecial #161                // Method org/xnio/conduits/AbstractStreamSinkConduit.truncateWrites:()V
      13: return

  public void terminateWrites() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #140                // Field terminate:Z
       5: aload_0
       6: invokespecial #164                // Method org/xnio/conduits/AbstractStreamSinkConduit.terminateWrites:()V
       9: return
}
