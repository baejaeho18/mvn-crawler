Compiled from "ByteBufferPool.java"
final class org.xnio.ByteBufferPool$OneCache implements org.xnio.ByteBufferPool$Cache {
  private final org.xnio.ByteBufferPool$Cache parent;

  private java.nio.ByteBuffer buffer;

  org.xnio.ByteBufferPool$OneCache(org.xnio.ByteBufferPool$Cache);
    Code:
       0: aload_0
       1: invokespecial #20                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #22                 // Field parent:Lorg/xnio/ByteBufferPool$Cache;
       9: return

  public void free(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: getfield      #28                 // Field buffer:Ljava/nio/ByteBuffer;
       4: ifnonnull     15
       7: aload_0
       8: aload_1
       9: putfield      #28                 // Field buffer:Ljava/nio/ByteBuffer;
      12: goto          25
      15: aload_0
      16: getfield      #22                 // Field parent:Lorg/xnio/ByteBufferPool$Cache;
      19: aload_1
      20: invokeinterface #30,  2           // InterfaceMethod org/xnio/ByteBufferPool$Cache.free:(Ljava/nio/ByteBuffer;)V
      25: return

  public void flushBuffer(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: getfield      #22                 // Field parent:Lorg/xnio/ByteBufferPool$Cache;
       4: aload_1
       5: invokeinterface #34,  2           // InterfaceMethod org/xnio/ByteBufferPool$Cache.flushBuffer:(Ljava/nio/ByteBuffer;)V
      10: return

  public java.nio.ByteBuffer allocate();
    Code:
       0: aload_0
       1: getfield      #28                 // Field buffer:Ljava/nio/ByteBuffer;
       4: ifnull        27
       7: aload_0
       8: getfield      #28                 // Field buffer:Ljava/nio/ByteBuffer;
      11: astore_1
      12: aload_0
      13: aconst_null
      14: putfield      #28                 // Field buffer:Ljava/nio/ByteBuffer;
      17: aload_1
      18: areturn
      19: astore_2
      20: aload_0
      21: aconst_null
      22: putfield      #28                 // Field buffer:Ljava/nio/ByteBuffer;
      25: aload_2
      26: athrow
      27: aload_0
      28: getfield      #22                 // Field parent:Lorg/xnio/ByteBufferPool$Cache;
      31: invokeinterface #40,  1           // InterfaceMethod org/xnio/ByteBufferPool$Cache.allocate:()Ljava/nio/ByteBuffer;
      36: areturn
    Exception table:
       from    to  target type
           7    12    19   any

  public void destroy();
    Code:
       0: aload_0
       1: getfield      #28                 // Field buffer:Ljava/nio/ByteBuffer;
       4: astore_1
       5: aload_1
       6: ifnull        24
       9: aload_0
      10: aconst_null
      11: putfield      #28                 // Field buffer:Ljava/nio/ByteBuffer;
      14: aload_0
      15: getfield      #22                 // Field parent:Lorg/xnio/ByteBufferPool$Cache;
      18: aload_1
      19: invokeinterface #30,  2           // InterfaceMethod org/xnio/ByteBufferPool$Cache.free:(Ljava/nio/ByteBuffer;)V
      24: return

  public void flush();
    Code:
       0: aload_0
       1: getfield      #28                 // Field buffer:Ljava/nio/ByteBuffer;
       4: astore_1
       5: aload_1
       6: ifnull        19
       9: aload_0
      10: aconst_null
      11: putfield      #28                 // Field buffer:Ljava/nio/ByteBuffer;
      14: aload_0
      15: aload_1
      16: invokevirtual #45                 // Method flushBuffer:(Ljava/nio/ByteBuffer;)V
      19: aload_0
      20: getfield      #22                 // Field parent:Lorg/xnio/ByteBufferPool$Cache;
      23: invokeinterface #47,  1           // InterfaceMethod org/xnio/ByteBufferPool$Cache.flush:()V
      28: return
}
