Compiled from "JsseSslStreamSourceConduit.java"
final class org.xnio.ssl.JsseSslStreamSourceConduit extends org.xnio.conduits.AbstractStreamSourceConduit<org.xnio.conduits.StreamSourceConduit> {
  private final org.xnio.ssl.JsseSslConduitEngine sslEngine;

  private volatile boolean tls;

  protected org.xnio.ssl.JsseSslStreamSourceConduit(org.xnio.conduits.StreamSourceConduit, org.xnio.ssl.JsseSslConduitEngine, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method org/xnio/conduits/AbstractStreamSourceConduit."<init>":(Lorg/xnio/conduits/StreamSourceConduit;)V
       5: aload_2
       6: ifnonnull     20
       9: getstatic     #21                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      12: ldc           #22                 // String sslEngine
      14: invokeinterface #26,  2           // InterfaceMethod org/xnio/_private/Messages.nullParameter:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      19: athrow
      20: aload_0
      21: aload_2
      22: putfield      #32                 // Field sslEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      25: aload_0
      26: iload_3
      27: putfield      #34                 // Field tls:Z
      30: return

  void enableTls();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #34                 // Field tls:Z
       5: aload_0
       6: invokevirtual #44                 // Method isReadResumed:()Z
       9: ifeq          16
      12: aload_0
      13: invokevirtual #47                 // Method wakeupReads:()V
      16: return

  public long transferTo(long, long, java.nio.channels.FileChannel) throws java.io.IOException;
    Code:
       0: aload         5
       2: new           #53                 // class org/xnio/conduits/ConduitReadableByteChannel
       5: dup
       6: aload_0
       7: invokespecial #54                 // Method org/xnio/conduits/ConduitReadableByteChannel."<init>":(Lorg/xnio/conduits/StreamSourceConduit;)V
      10: lload_1
      11: lload_3
      12: invokevirtual #60                 // Method java/nio/channels/FileChannel.transferFrom:(Ljava/nio/channels/ReadableByteChannel;JJ)J
      15: lreturn

  public long transferTo(long, java.nio.ByteBuffer, org.xnio.channels.StreamSinkChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: aload         4
       5: invokestatic  #72                 // Method org/xnio/conduits/Conduits.transfer:(Lorg/xnio/conduits/StreamSourceConduit;JLjava/nio/ByteBuffer;Ljava/nio/channels/WritableByteChannel;)J
       8: lreturn

  public int read(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #34                 // Field tls:Z
       4: ifne          24
       7: aload_0
       8: aload_1
       9: invokespecial #79                 // Method org/xnio/conduits/AbstractStreamSourceConduit.read:(Ljava/nio/ByteBuffer;)I
      12: istore_2
      13: iload_2
      14: iconst_m1
      15: if_icmpne     22
      18: aload_0
      19: invokevirtual #82                 // Method terminateReads:()V
      22: iload_2
      23: ireturn
      24: aload_0
      25: getfield      #32                 // Field sslEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      28: invokevirtual #85                 // Method org/xnio/ssl/JsseSslConduitEngine.isDataAvailable:()Z
      31: ifne          44
      34: aload_0
      35: getfield      #32                 // Field sslEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      38: invokevirtual #88                 // Method org/xnio/ssl/JsseSslConduitEngine.isInboundClosed:()Z
      41: ifne          54
      44: aload_0
      45: getfield      #32                 // Field sslEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      48: invokevirtual #91                 // Method org/xnio/ssl/JsseSslConduitEngine.isClosed:()Z
      51: ifeq          56
      54: iconst_m1
      55: ireturn
      56: aload_0
      57: getfield      #32                 // Field sslEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      60: invokevirtual #95                 // Method org/xnio/ssl/JsseSslConduitEngine.getUnwrapLock:()Ljava/lang/Object;
      63: dup
      64: astore_3
      65: monitorenter
      66: aload_0
      67: getfield      #32                 // Field sslEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      70: invokevirtual #99                 // Method org/xnio/ssl/JsseSslConduitEngine.getUnwrapBuffer:()Ljava/nio/ByteBuffer;
      73: invokevirtual #105                // Method java/nio/ByteBuffer.remaining:()I
      76: ifle          83
      79: iconst_1
      80: goto          84
      83: iconst_0
      84: istore_2
      85: aload_3
      86: monitorexit
      87: goto          97
      90: astore        4
      92: aload_3
      93: monitorexit
      94: aload         4
      96: athrow
      97: iload_2
      98: ifeq          116
     101: aload_0
     102: getfield      #32                 // Field sslEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
     105: aload_1
     106: invokevirtual #112                // Method org/xnio/ssl/JsseSslConduitEngine.unwrap:(Ljava/nio/ByteBuffer;)I
     109: istore_3
     110: iload_3
     111: ifle          116
     114: iload_3
     115: ireturn
     116: aload_0
     117: getfield      #32                 // Field sslEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
     120: invokevirtual #95                 // Method org/xnio/ssl/JsseSslConduitEngine.getUnwrapLock:()Ljava/lang/Object;
     123: dup
     124: astore        4
     126: monitorenter
     127: aload_0
     128: getfield      #32                 // Field sslEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
     131: invokevirtual #99                 // Method org/xnio/ssl/JsseSslConduitEngine.getUnwrapBuffer:()Ljava/nio/ByteBuffer;
     134: invokevirtual #115                // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
     137: astore        5
     139: aload_0
     140: aload         5
     142: invokespecial #79                 // Method org/xnio/conduits/AbstractStreamSourceConduit.read:(Ljava/nio/ByteBuffer;)I
     145: istore_3
     146: aload         5
     148: invokevirtual #119                // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     151: pop
     152: goto          166
     155: astore        6
     157: aload         5
     159: invokevirtual #119                // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     162: pop
     163: aload         6
     165: athrow
     166: aload         4
     168: monitorexit
     169: goto          180
     172: astore        7
     174: aload         4
     176: monitorexit
     177: aload         7
     179: athrow
     180: aload_0
     181: getfield      #32                 // Field sslEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
     184: aload_1
     185: invokevirtual #112                // Method org/xnio/ssl/JsseSslConduitEngine.unwrap:(Ljava/nio/ByteBuffer;)I
     188: istore        4
     190: iload         4
     192: ifne          206
     195: iload_3
     196: iconst_m1
     197: if_icmpne     206
     200: aload_0
     201: invokevirtual #82                 // Method terminateReads:()V
     204: iconst_m1
     205: ireturn
     206: iload         4
     208: ireturn
    Exception table:
       from    to  target type
          66    87    90   any
          90    94    90   any
         139   146   155   any
         155   157   155   any
         127   169   172   any
         172   177   172   any

  public long read(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #34                 // Field tls:Z
       4: ifne          32
       7: aload_0
       8: aload_1
       9: iload_2
      10: iload_3
      11: invokespecial #129                // Method org/xnio/conduits/AbstractStreamSourceConduit.read:([Ljava/nio/ByteBuffer;II)J
      14: lstore        4
      16: lload         4
      18: ldc2_w        #130                // long -1l
      21: lcmp
      22: ifne          29
      25: aload_0
      26: invokevirtual #82                 // Method terminateReads:()V
      29: lload         4
      31: lreturn
      32: iload_2
      33: iflt          53
      36: iload_2
      37: iload_3
      38: if_icmpgt     53
      41: iload_3
      42: iflt          53
      45: iload_2
      46: iload_3
      47: iadd
      48: aload_1
      49: arraylength
      50: if_icmple     61
      53: new           #133                // class java/lang/ArrayIndexOutOfBoundsException
      56: dup
      57: invokespecial #135                // Method java/lang/ArrayIndexOutOfBoundsException."<init>":()V
      60: athrow
      61: aload_0
      62: getfield      #32                 // Field sslEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      65: invokevirtual #91                 // Method org/xnio/ssl/JsseSslConduitEngine.isClosed:()Z
      68: ifne          91
      71: aload_0
      72: getfield      #32                 // Field sslEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      75: invokevirtual #85                 // Method org/xnio/ssl/JsseSslConduitEngine.isDataAvailable:()Z
      78: ifne          95
      81: aload_0
      82: getfield      #32                 // Field sslEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      85: invokevirtual #88                 // Method org/xnio/ssl/JsseSslConduitEngine.isInboundClosed:()Z
      88: ifeq          95
      91: ldc2_w        #130                // long -1l
      94: lreturn
      95: aload_0
      96: getfield      #32                 // Field sslEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      99: invokevirtual #95                 // Method org/xnio/ssl/JsseSslConduitEngine.getUnwrapLock:()Ljava/lang/Object;
     102: dup
     103: astore        7
     105: monitorenter
     106: aload_0
     107: getfield      #32                 // Field sslEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
     110: invokevirtual #99                 // Method org/xnio/ssl/JsseSslConduitEngine.getUnwrapBuffer:()Ljava/nio/ByteBuffer;
     113: invokevirtual #115                // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
     116: astore        8
     118: aload_0
     119: aload         8
     121: invokespecial #79                 // Method org/xnio/conduits/AbstractStreamSourceConduit.read:(Ljava/nio/ByteBuffer;)I
     124: istore        4
     126: aload         8
     128: invokevirtual #119                // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     131: pop
     132: goto          146
     135: astore        9
     137: aload         8
     139: invokevirtual #119                // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     142: pop
     143: aload         9
     145: athrow
     146: aload         7
     148: monitorexit
     149: goto          160
     152: astore        10
     154: aload         7
     156: monitorexit
     157: aload         10
     159: athrow
     160: aload_0
     161: getfield      #32                 // Field sslEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
     164: aload_1
     165: iload_2
     166: iload_3
     167: invokevirtual #139                // Method org/xnio/ssl/JsseSslConduitEngine.unwrap:([Ljava/nio/ByteBuffer;II)J
     170: lstore        5
     172: lload         5
     174: lconst_0
     175: lcmp
     176: ifne          193
     179: iload         4
     181: iconst_m1
     182: if_icmpne     193
     185: aload_0
     186: invokevirtual #82                 // Method terminateReads:()V
     189: ldc2_w        #130                // long -1l
     192: lreturn
     193: lload         5
     195: lreturn
    Exception table:
       from    to  target type
         118   126   135   any
         135   137   135   any
         106   149   152   any
         152   157   152   any

  public void resumeReads();
    Code:
       0: aload_0
       1: getfield      #34                 // Field tls:Z
       4: ifeq          24
       7: aload_0
       8: getfield      #32                 // Field sslEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      11: invokevirtual #146                // Method org/xnio/ssl/JsseSslConduitEngine.isFirstHandshake:()Z
      14: ifeq          24
      17: aload_0
      18: invokespecial #147                // Method org/xnio/conduits/AbstractStreamSourceConduit.wakeupReads:()V
      21: goto          28
      24: aload_0
      25: invokespecial #149                // Method org/xnio/conduits/AbstractStreamSourceConduit.resumeReads:()V
      28: return

  public void terminateReads() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #34                 // Field tls:Z
       4: ifne          12
       7: aload_0
       8: invokespecial #150                // Method org/xnio/conduits/AbstractStreamSourceConduit.terminateReads:()V
      11: return
      12: aload_0
      13: getfield      #32                 // Field sslEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      16: invokevirtual #153                // Method org/xnio/ssl/JsseSslConduitEngine.closeInbound:()V
      19: goto          40
      22: astore_1
      23: aload_0
      24: invokespecial #150                // Method org/xnio/conduits/AbstractStreamSourceConduit.terminateReads:()V
      27: goto          38
      30: astore_2
      31: aload_2
      32: aload_1
      33: invokevirtual #157                // Method java/io/IOException.addSuppressed:(Ljava/lang/Throwable;)V
      36: aload_2
      37: athrow
      38: aload_1
      39: athrow
      40: return
    Exception table:
       from    to  target type
          12    19    22   Class java/io/IOException
          23    27    30   Class java/io/IOException

  public void awaitReadable() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #34                 // Field tls:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #32                 // Field sslEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      11: invokevirtual #164                // Method org/xnio/ssl/JsseSslConduitEngine.awaitCanUnwrap:()V
      14: aload_0
      15: getfield      #32                 // Field sslEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      18: invokevirtual #85                 // Method org/xnio/ssl/JsseSslConduitEngine.isDataAvailable:()Z
      21: ifeq          25
      24: return
      25: aload_0
      26: invokespecial #166                // Method org/xnio/conduits/AbstractStreamSourceConduit.awaitReadable:()V
      29: return

  public void awaitReadable(long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #34                 // Field tls:Z
       4: ifne          14
       7: aload_0
       8: lload_1
       9: aload_3
      10: invokespecial #169                // Method org/xnio/conduits/AbstractStreamSourceConduit.awaitReadable:(JLjava/util/concurrent/TimeUnit;)V
      13: return
      14: aload_0
      15: getfield      #32                 // Field sslEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      18: invokevirtual #95                 // Method org/xnio/ssl/JsseSslConduitEngine.getUnwrapLock:()Ljava/lang/Object;
      21: dup
      22: astore        4
      24: monitorenter
      25: aload_0
      26: getfield      #32                 // Field sslEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      29: invokevirtual #99                 // Method org/xnio/ssl/JsseSslConduitEngine.getUnwrapBuffer:()Ljava/nio/ByteBuffer;
      32: invokevirtual #172                // Method java/nio/ByteBuffer.hasRemaining:()Z
      35: ifeq          42
      38: aload         4
      40: monitorexit
      41: return
      42: aload         4
      44: monitorexit
      45: goto          56
      48: astore        5
      50: aload         4
      52: monitorexit
      53: aload         5
      55: athrow
      56: aload_3
      57: lload_1
      58: invokevirtual #178                // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      61: lstore        4
      63: invokestatic  #184                // Method java/lang/System.nanoTime:()J
      66: lstore        6
      68: aload_0
      69: getfield      #32                 // Field sslEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      72: lload_1
      73: aload_3
      74: invokevirtual #186                // Method org/xnio/ssl/JsseSslConduitEngine.awaitCanUnwrap:(JLjava/util/concurrent/TimeUnit;)V
      77: invokestatic  #184                // Method java/lang/System.nanoTime:()J
      80: lload         6
      82: lsub
      83: lstore        6
      85: lload         6
      87: lload         4
      89: lcmp
      90: ifle          94
      93: return
      94: aload_0
      95: lload         4
      97: lload         6
      99: lsub
     100: getstatic     #190                // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
     103: invokespecial #169                // Method org/xnio/conduits/AbstractStreamSourceConduit.awaitReadable:(JLjava/util/concurrent/TimeUnit;)V
     106: return
    Exception table:
       from    to  target type
          25    41    48   any
          42    45    48   any
          48    53    48   any
}
