Compiled from "JsseSslConnection.java"
public final class org.xnio.ssl.JsseSslConnection extends org.xnio.ssl.SslConnection {
  private final org.xnio.StreamConnection streamConnection;

  private final org.xnio.ssl.JsseStreamConduit conduit;

  private final org.xnio.ChannelListener$SimpleSetter<org.xnio.ssl.SslConnection> handshakeSetter;

  private static final java.util.Set<org.xnio.Option<?>> SUPPORTED_OPTIONS;

  public org.xnio.ssl.JsseSslConnection(org.xnio.StreamConnection, javax.net.ssl.SSLEngine);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #36                 // Field org/xnio/ssl/JsseXnioSsl.bufferPool:Lorg/xnio/Pool;
       6: getstatic     #36                 // Field org/xnio/ssl/JsseXnioSsl.bufferPool:Lorg/xnio/Pool;
       9: invokespecial #39                 // Method "<init>":(Lorg/xnio/StreamConnection;Ljavax/net/ssl/SSLEngine;Lorg/xnio/Pool;Lorg/xnio/Pool;)V
      12: return

  org.xnio.ssl.JsseSslConnection(org.xnio.StreamConnection, javax.net.ssl.SSLEngine, org.xnio.Pool<java.nio.ByteBuffer>, org.xnio.Pool<java.nio.ByteBuffer>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #50                 // Method org/xnio/StreamConnection.getIoThread:()Lorg/xnio/XnioIoThread;
       5: invokespecial #53                 // Method org/xnio/ssl/SslConnection."<init>":(Lorg/xnio/XnioIoThread;)V
       8: aload_0
       9: new           #7                  // class org/xnio/ChannelListener$SimpleSetter
      12: dup
      13: invokespecial #56                 // Method org/xnio/ChannelListener$SimpleSetter."<init>":()V
      16: putfield      #58                 // Field handshakeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
      19: aload_0
      20: aload_1
      21: putfield      #60                 // Field streamConnection:Lorg/xnio/StreamConnection;
      24: aload_0
      25: new           #62                 // class org/xnio/ssl/JsseStreamConduit
      28: dup
      29: aload_0
      30: aload_2
      31: aload_1
      32: invokevirtual #66                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      35: invokevirtual #72                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
      38: aload_1
      39: invokevirtual #76                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      42: invokevirtual #81                 // Method org/xnio/conduits/ConduitStreamSinkChannel.getConduit:()Lorg/xnio/conduits/StreamSinkConduit;
      45: aload_3
      46: aload         4
      48: invokespecial #84                 // Method org/xnio/ssl/JsseStreamConduit."<init>":(Lorg/xnio/ssl/JsseSslConnection;Ljavax/net/ssl/SSLEngine;Lorg/xnio/conduits/StreamSourceConduit;Lorg/xnio/conduits/StreamSinkConduit;Lorg/xnio/Pool;Lorg/xnio/Pool;)V
      51: putfield      #86                 // Field conduit:Lorg/xnio/ssl/JsseStreamConduit;
      54: aload_0
      55: aload_0
      56: getfield      #86                 // Field conduit:Lorg/xnio/ssl/JsseStreamConduit;
      59: invokevirtual #90                 // Method setSourceConduit:(Lorg/xnio/conduits/StreamSourceConduit;)V
      62: aload_0
      63: aload_0
      64: getfield      #86                 // Field conduit:Lorg/xnio/ssl/JsseStreamConduit;
      67: invokevirtual #94                 // Method setSinkConduit:(Lorg/xnio/conduits/StreamSinkConduit;)V
      70: return

  public void startHandshake() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #86                 // Field conduit:Lorg/xnio/ssl/JsseStreamConduit;
       4: invokevirtual #103                // Method org/xnio/ssl/JsseStreamConduit.beginHandshake:()V
       7: return

  public javax.net.ssl.SSLSession getSslSession();
    Code:
       0: aload_0
       1: getfield      #86                 // Field conduit:Lorg/xnio/ssl/JsseStreamConduit;
       4: invokevirtual #107                // Method org/xnio/ssl/JsseStreamConduit.getSslSession:()Ljavax/net/ssl/SSLSession;
       7: areturn

  protected void closeAction() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #86                 // Field conduit:Lorg/xnio/ssl/JsseStreamConduit;
       4: invokevirtual #114                // Method org/xnio/ssl/JsseStreamConduit.isWriteShutdown:()Z
       7: ifne          17
      10: aload_0
      11: getfield      #86                 // Field conduit:Lorg/xnio/ssl/JsseStreamConduit;
      14: invokevirtual #117                // Method org/xnio/ssl/JsseStreamConduit.terminateWrites:()V
      17: aload_0
      18: getfield      #86                 // Field conduit:Lorg/xnio/ssl/JsseStreamConduit;
      21: invokevirtual #120                // Method org/xnio/ssl/JsseStreamConduit.isReadShutdown:()Z
      24: ifne          34
      27: aload_0
      28: getfield      #86                 // Field conduit:Lorg/xnio/ssl/JsseStreamConduit;
      31: invokevirtual #123                // Method org/xnio/ssl/JsseStreamConduit.terminateReads:()V
      34: aload_0
      35: getfield      #86                 // Field conduit:Lorg/xnio/ssl/JsseStreamConduit;
      38: invokevirtual #126                // Method org/xnio/ssl/JsseStreamConduit.flush:()Z
      41: pop
      42: aload_0
      43: getfield      #86                 // Field conduit:Lorg/xnio/ssl/JsseStreamConduit;
      46: invokevirtual #129                // Method org/xnio/ssl/JsseStreamConduit.markTerminated:()Z
      49: pop
      50: aload_0
      51: getfield      #60                 // Field streamConnection:Lorg/xnio/StreamConnection;
      54: invokevirtual #132                // Method org/xnio/StreamConnection.close:()V
      57: goto          103
      60: astore_1
      61: aload_0
      62: getfield      #86                 // Field conduit:Lorg/xnio/ssl/JsseStreamConduit;
      65: invokevirtual #120                // Method org/xnio/ssl/JsseStreamConduit.isReadShutdown:()Z
      68: ifne          78
      71: aload_0
      72: getfield      #86                 // Field conduit:Lorg/xnio/ssl/JsseStreamConduit;
      75: invokevirtual #123                // Method org/xnio/ssl/JsseStreamConduit.terminateReads:()V
      78: goto          82
      81: astore_2
      82: aload_0
      83: getfield      #86                 // Field conduit:Lorg/xnio/ssl/JsseStreamConduit;
      86: invokevirtual #129                // Method org/xnio/ssl/JsseStreamConduit.markTerminated:()Z
      89: pop
      90: aload_0
      91: getfield      #60                 // Field streamConnection:Lorg/xnio/StreamConnection;
      94: invokevirtual #132                // Method org/xnio/StreamConnection.close:()V
      97: goto          101
     100: astore_2
     101: aload_1
     102: athrow
     103: return
    Exception table:
       from    to  target type
           0    57    60   Class java/lang/Throwable
          61    78    81   Class java/lang/Throwable
          82    97   100   Class java/lang/Throwable

  public java.net.SocketAddress getPeerAddress();
    Code:
       0: aload_0
       1: getfield      #60                 // Field streamConnection:Lorg/xnio/StreamConnection;
       4: invokevirtual #138                // Method org/xnio/StreamConnection.getPeerAddress:()Ljava/net/SocketAddress;
       7: areturn

  public java.net.SocketAddress getLocalAddress();
    Code:
       0: aload_0
       1: getfield      #60                 // Field streamConnection:Lorg/xnio/StreamConnection;
       4: invokevirtual #141                // Method org/xnio/StreamConnection.getLocalAddress:()Ljava/net/SocketAddress;
       7: areturn

  public org.xnio.ChannelListener$Setter<? extends org.xnio.ssl.SslConnection> getHandshakeSetter();
    Code:
       0: aload_0
       1: getfield      #58                 // Field handshakeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
       4: areturn

  void invokeHandshakeListener();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #58                 // Field handshakeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
       5: invokevirtual #149                // Method org/xnio/ChannelListener$SimpleSetter.get:()Lorg/xnio/ChannelListener;
       8: invokestatic  #155                // Method org/xnio/ChannelListeners.invokeChannelListener:(Ljava/nio/channels/Channel;Lorg/xnio/ChannelListener;)Z
      11: pop
      12: return

  public <T> T setOption(org.xnio.Option<T>, T) throws java.lang.IllegalArgumentException, java.io.IOException;
    Code:
       0: aload_1
       1: getstatic     #166                // Field org/xnio/Options.SSL_CLIENT_AUTH_MODE:Lorg/xnio/Option;
       4: if_acmpne     122
       7: aload_0
       8: getfield      #86                 // Field conduit:Lorg/xnio/ssl/JsseStreamConduit;
      11: invokevirtual #170                // Method org/xnio/ssl/JsseStreamConduit.getEngine:()Ljavax/net/ssl/SSLEngine;
      14: astore_3
      15: aload_1
      16: aload_3
      17: invokevirtual #175                // Method javax/net/ssl/SSLEngine.getNeedClientAuth:()Z
      20: ifeq          29
      23: getstatic     #181                // Field org/xnio/SslClientAuthMode.REQUIRED:Lorg/xnio/SslClientAuthMode;
      26: goto          45
      29: aload_3
      30: invokevirtual #186                // Method javax/net/ssl/SSLEngine.getWantClientAuth:()Z
      33: ifeq          42
      36: getstatic     #189                // Field org/xnio/SslClientAuthMode.REQUESTED:Lorg/xnio/SslClientAuthMode;
      39: goto          45
      42: getstatic     #192                // Field org/xnio/SslClientAuthMode.NOT_REQUESTED:Lorg/xnio/SslClientAuthMode;
      45: invokevirtual #196                // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      48: astore        4
      50: aload_3
      51: aload_2
      52: getstatic     #181                // Field org/xnio/SslClientAuthMode.REQUIRED:Lorg/xnio/SslClientAuthMode;
      55: if_acmpne     62
      58: iconst_1
      59: goto          63
      62: iconst_0
      63: invokevirtual #200                // Method javax/net/ssl/SSLEngine.setNeedClientAuth:(Z)V
      66: aload_3
      67: aload_2
      68: getstatic     #189                // Field org/xnio/SslClientAuthMode.REQUESTED:Lorg/xnio/SslClientAuthMode;
      71: if_acmpne     78
      74: iconst_1
      75: goto          79
      78: iconst_0
      79: invokevirtual #203                // Method javax/net/ssl/SSLEngine.setWantClientAuth:(Z)V
      82: aload         4
      84: areturn
      85: astore        5
      87: aload_3
      88: aload_2
      89: getstatic     #181                // Field org/xnio/SslClientAuthMode.REQUIRED:Lorg/xnio/SslClientAuthMode;
      92: if_acmpne     99
      95: iconst_1
      96: goto          100
      99: iconst_0
     100: invokevirtual #200                // Method javax/net/ssl/SSLEngine.setNeedClientAuth:(Z)V
     103: aload_3
     104: aload_2
     105: getstatic     #189                // Field org/xnio/SslClientAuthMode.REQUESTED:Lorg/xnio/SslClientAuthMode;
     108: if_acmpne     115
     111: iconst_1
     112: goto          116
     115: iconst_0
     116: invokevirtual #203                // Method javax/net/ssl/SSLEngine.setWantClientAuth:(Z)V
     119: aload         5
     121: athrow
     122: aload_1
     123: getstatic     #206                // Field org/xnio/Options.SECURE:Lorg/xnio/Option;
     126: if_acmpne     137
     129: new           #160                // class java/lang/IllegalArgumentException
     132: dup
     133: invokespecial #207                // Method java/lang/IllegalArgumentException."<init>":()V
     136: athrow
     137: aload_0
     138: getfield      #60                 // Field streamConnection:Lorg/xnio/StreamConnection;
     141: aload_1
     142: aload_2
     143: invokevirtual #209                // Method org/xnio/StreamConnection.setOption:(Lorg/xnio/Option;Ljava/lang/Object;)Ljava/lang/Object;
     146: areturn
    Exception table:
       from    to  target type
          15    50    85   any
          85    87    85   any

  public <T> T getOption(org.xnio.Option<T>) throws java.io.IOException;
    Code:
       0: aload_1
       1: getstatic     #166                // Field org/xnio/Options.SSL_CLIENT_AUTH_MODE:Lorg/xnio/Option;
       4: if_acmpne     49
       7: aload_0
       8: getfield      #86                 // Field conduit:Lorg/xnio/ssl/JsseStreamConduit;
      11: invokevirtual #170                // Method org/xnio/ssl/JsseStreamConduit.getEngine:()Ljavax/net/ssl/SSLEngine;
      14: astore_2
      15: aload_1
      16: aload_2
      17: invokevirtual #175                // Method javax/net/ssl/SSLEngine.getNeedClientAuth:()Z
      20: ifeq          29
      23: getstatic     #181                // Field org/xnio/SslClientAuthMode.REQUIRED:Lorg/xnio/SslClientAuthMode;
      26: goto          45
      29: aload_2
      30: invokevirtual #186                // Method javax/net/ssl/SSLEngine.getWantClientAuth:()Z
      33: ifeq          42
      36: getstatic     #189                // Field org/xnio/SslClientAuthMode.REQUESTED:Lorg/xnio/SslClientAuthMode;
      39: goto          45
      42: getstatic     #192                // Field org/xnio/SslClientAuthMode.NOT_REQUESTED:Lorg/xnio/SslClientAuthMode;
      45: invokevirtual #196                // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      48: areturn
      49: aload_1
      50: getstatic     #206                // Field org/xnio/Options.SECURE:Lorg/xnio/Option;
      53: if_acmpne     73
      56: aload_1
      57: aload_0
      58: getfield      #86                 // Field conduit:Lorg/xnio/ssl/JsseStreamConduit;
      61: invokevirtual #220                // Method org/xnio/ssl/JsseStreamConduit.isTls:()Z
      64: invokestatic  #226                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      67: invokevirtual #196                // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      70: goto          81
      73: aload_0
      74: getfield      #60                 // Field streamConnection:Lorg/xnio/StreamConnection;
      77: aload_1
      78: invokevirtual #228                // Method org/xnio/StreamConnection.getOption:(Lorg/xnio/Option;)Ljava/lang/Object;
      81: areturn

  public boolean supportsOption(org.xnio.Option<?>);
    Code:
       0: getstatic     #233                // Field SUPPORTED_OPTIONS:Ljava/util/Set;
       3: aload_1
       4: invokeinterface #239,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
       9: ifne          23
      12: aload_0
      13: getfield      #60                 // Field streamConnection:Lorg/xnio/StreamConnection;
      16: aload_1
      17: invokevirtual #241                // Method org/xnio/StreamConnection.supportsOption:(Lorg/xnio/Option;)Z
      20: ifeq          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #60                 // Field streamConnection:Lorg/xnio/StreamConnection;
       4: invokevirtual #245                // Method org/xnio/StreamConnection.isOpen:()Z
       7: ireturn

  public boolean isWriteShutdown();
    Code:
       0: aload_0
       1: getfield      #60                 // Field streamConnection:Lorg/xnio/StreamConnection;
       4: invokevirtual #246                // Method org/xnio/StreamConnection.isWriteShutdown:()Z
       7: ireturn

  public boolean isReadShutdown();
    Code:
       0: aload_0
       1: getfield      #60                 // Field streamConnection:Lorg/xnio/StreamConnection;
       4: invokevirtual #247                // Method org/xnio/StreamConnection.isReadShutdown:()Z
       7: ireturn

  public javax.net.ssl.SSLEngine getEngine();
    Code:
       0: aload_0
       1: getfield      #86                 // Field conduit:Lorg/xnio/ssl/JsseStreamConduit;
       4: invokevirtual #170                // Method org/xnio/ssl/JsseStreamConduit.getEngine:()Ljavax/net/ssl/SSLEngine;
       7: areturn

  static {};
    Code:
       0: invokestatic  #252                // Method org/xnio/Option.setBuilder:()Lorg/xnio/Option$SetBuilder;
       3: getstatic     #206                // Field org/xnio/Options.SECURE:Lorg/xnio/Option;
       6: getstatic     #166                // Field org/xnio/Options.SSL_CLIENT_AUTH_MODE:Lorg/xnio/Option;
       9: invokevirtual #256                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      12: invokevirtual #260                // Method org/xnio/Option$SetBuilder.create:()Ljava/util/Set;
      15: putstatic     #233                // Field SUPPORTED_OPTIONS:Ljava/util/Set;
      18: return
}
