Compiled from "JsseXnioSsl.java"
class org.xnio.ssl.JsseXnioSsl$4 implements org.xnio.ChannelListener<org.xnio.StreamConnection> {
  final org.xnio.OptionMap val$optionMap;

  final java.net.InetSocketAddress val$destination;

  final org.xnio.FutureResult val$futureResult;

  final org.xnio.ChannelListener val$openListener;

  final org.xnio.ssl.JsseXnioSsl this$0;

  org.xnio.ssl.JsseXnioSsl$4(org.xnio.ssl.JsseXnioSsl, org.xnio.OptionMap, java.net.InetSocketAddress, org.xnio.FutureResult, org.xnio.ChannelListener);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #27                 // Field this$0:Lorg/xnio/ssl/JsseXnioSsl;
       5: aload_0
       6: aload_2
       7: putfield      #29                 // Field val$optionMap:Lorg/xnio/OptionMap;
      10: aload_0
      11: aload_3
      12: putfield      #31                 // Field val$destination:Ljava/net/InetSocketAddress;
      15: aload_0
      16: aload         4
      18: putfield      #33                 // Field val$futureResult:Lorg/xnio/FutureResult;
      21: aload_0
      22: aload         5
      24: putfield      #35                 // Field val$openListener:Lorg/xnio/ChannelListener;
      27: aload_0
      28: invokespecial #38                 // Method java/lang/Object."<init>":()V
      31: return

  public void handleEvent(org.xnio.StreamConnection);
    Code:
       0: aload_0
       1: getfield      #27                 // Field this$0:Lorg/xnio/ssl/JsseXnioSsl;
       4: invokestatic  #50                 // Method org/xnio/ssl/JsseXnioSsl.access$000:(Lorg/xnio/ssl/JsseXnioSsl;)Ljavax/net/ssl/SSLContext;
       7: aload_0
       8: getfield      #29                 // Field val$optionMap:Lorg/xnio/OptionMap;
      11: aload_0
      12: getfield      #31                 // Field val$destination:Ljava/net/InetSocketAddress;
      15: invokestatic  #56                 // Method org/xnio/ssl/JsseSslUtils.createSSLEngine:(Ljavax/net/ssl/SSLContext;Lorg/xnio/OptionMap;Ljava/net/InetSocketAddress;)Ljavax/net/ssl/SSLEngine;
      18: astore_2
      19: aload_0
      20: getfield      #29                 // Field val$optionMap:Lorg/xnio/OptionMap;
      23: getstatic     #62                 // Field org/xnio/Options.SSL_STARTTLS:Lorg/xnio/Option;
      26: iconst_0
      27: invokevirtual #68                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      30: istore_3
      31: getstatic     #72                 // Field org/xnio/ssl/JsseXnioSsl.NEW_IMPL:Z
      34: ifeq          55
      37: new           #74                 // class org/xnio/ssl/JsseSslConnection
      40: dup
      41: aload_1
      42: aload_2
      43: getstatic     #78                 // Field org/xnio/ssl/JsseXnioSsl.bufferPool:Lorg/xnio/Pool;
      46: getstatic     #78                 // Field org/xnio/ssl/JsseXnioSsl.bufferPool:Lorg/xnio/Pool;
      49: invokespecial #81                 // Method org/xnio/ssl/JsseSslConnection."<init>":(Lorg/xnio/StreamConnection;Ljavax/net/ssl/SSLEngine;Lorg/xnio/Pool;Lorg/xnio/Pool;)V
      52: goto          71
      55: new           #85                 // class org/xnio/ssl/JsseSslStreamConnection
      58: dup
      59: aload_1
      60: aload_2
      61: getstatic     #78                 // Field org/xnio/ssl/JsseXnioSsl.bufferPool:Lorg/xnio/Pool;
      64: getstatic     #78                 // Field org/xnio/ssl/JsseXnioSsl.bufferPool:Lorg/xnio/Pool;
      67: iload_3
      68: invokespecial #88                 // Method org/xnio/ssl/JsseSslStreamConnection."<init>":(Lorg/xnio/StreamConnection;Ljavax/net/ssl/SSLEngine;Lorg/xnio/Pool;Lorg/xnio/Pool;Z)V
      71: astore        4
      73: goto          89
      76: astore        5
      78: aload_0
      79: getfield      #33                 // Field val$futureResult:Lorg/xnio/FutureResult;
      82: invokevirtual #96                 // Method org/xnio/FutureResult.setCancelled:()Z
      85: pop
      86: aload         5
      88: athrow
      89: getstatic     #72                 // Field org/xnio/ssl/JsseXnioSsl.NEW_IMPL:Z
      92: ifeq          125
      95: iload_3
      96: ifne          125
      99: aload         4
     101: invokevirtual #99                 // Method org/xnio/ssl/SslConnection.startHandshake:()V
     104: goto          125
     107: astore        5
     109: aload_0
     110: getfield      #33                 // Field val$futureResult:Lorg/xnio/FutureResult;
     113: aload         5
     115: invokevirtual #103                // Method org/xnio/FutureResult.setException:(Ljava/io/IOException;)Z
     118: ifeq          125
     121: aload_1
     122: invokestatic  #109                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     125: aload_0
     126: getfield      #33                 // Field val$futureResult:Lorg/xnio/FutureResult;
     129: aload         4
     131: invokevirtual #113                // Method org/xnio/FutureResult.setResult:(Ljava/lang/Object;)Z
     134: ifne          144
     137: aload_1
     138: invokestatic  #109                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     141: goto          154
     144: aload         4
     146: aload_0
     147: getfield      #35                 // Field val$openListener:Lorg/xnio/ChannelListener;
     150: invokestatic  #119                // Method org/xnio/ChannelListeners.invokeChannelListener:(Ljava/nio/channels/Channel;Lorg/xnio/ChannelListener;)Z
     153: pop
     154: return
    Exception table:
       from    to  target type
          31    73    76   Class java/lang/RuntimeException
          99   104   107   Class java/io/IOException

  public void handleEvent(java.nio.channels.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #132                // class org/xnio/StreamConnection
       5: invokevirtual #134                // Method handleEvent:(Lorg/xnio/StreamConnection;)V
       8: return
}
