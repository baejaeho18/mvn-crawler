Compiled from "JsseXnioSsl.java"
public final class org.xnio.ssl.JsseXnioSsl extends org.xnio.ssl.XnioSsl {
  public static final boolean NEW_IMPL;

  static final org.xnio.Pool<java.nio.ByteBuffer> bufferPool;

  private final javax.net.ssl.SSLContext sslContext;

  public org.xnio.ssl.JsseXnioSsl(org.xnio.Xnio, org.xnio.OptionMap) throws java.security.NoSuchProviderException, java.security.NoSuchAlgorithmException, java.security.KeyManagementException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_2
       4: invokestatic  #53                 // Method org/xnio/ssl/JsseSslUtils.createSSLContext:(Lorg/xnio/OptionMap;)Ljavax/net/ssl/SSLContext;
       7: invokespecial #56                 // Method "<init>":(Lorg/xnio/Xnio;Lorg/xnio/OptionMap;Ljavax/net/ssl/SSLContext;)V
      10: return

  public org.xnio.ssl.JsseXnioSsl(org.xnio.Xnio, org.xnio.OptionMap, javax.net.ssl.SSLContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: aload_2
       4: invokespecial #65                 // Method org/xnio/ssl/XnioSsl."<init>":(Lorg/xnio/Xnio;Ljavax/net/ssl/SSLContext;Lorg/xnio/OptionMap;)V
       7: aload_0
       8: aload_3
       9: putfield      #67                 // Field sslContext:Ljavax/net/ssl/SSLContext;
      12: return

  public javax.net.ssl.SSLContext getSslContext();
    Code:
       0: aload_0
       1: getfield      #67                 // Field sslContext:Ljavax/net/ssl/SSLContext;
       4: areturn

  public static javax.net.ssl.SSLEngine getSslEngine(org.xnio.ssl.SslConnection);
    Code:
       0: aload_0
       1: instanceof    #73                 // class org/xnio/ssl/JsseSslStreamConnection
       4: ifeq          15
       7: aload_0
       8: checkcast     #73                 // class org/xnio/ssl/JsseSslStreamConnection
      11: invokevirtual #77                 // Method org/xnio/ssl/JsseSslStreamConnection.getEngine:()Ljavax/net/ssl/SSLEngine;
      14: areturn
      15: aload_0
      16: instanceof    #79                 // class org/xnio/ssl/JsseSslConnection
      19: ifeq          30
      22: aload_0
      23: checkcast     #79                 // class org/xnio/ssl/JsseSslConnection
      26: invokevirtual #80                 // Method org/xnio/ssl/JsseSslConnection.getEngine:()Ljavax/net/ssl/SSLEngine;
      29: areturn
      30: getstatic     #86                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      33: invokeinterface #90,  1           // InterfaceMethod org/xnio/_private/Messages.notFromThisProvider:()Ljava/lang/IllegalArgumentException;
      38: athrow

  public org.xnio.IoFuture<org.xnio.channels.ConnectedSslStreamChannel> connectSsl(org.xnio.XnioWorker, java.net.InetSocketAddress, java.net.InetSocketAddress, org.xnio.ChannelListener<? super org.xnio.channels.ConnectedSslStreamChannel>, org.xnio.ChannelListener<? super org.xnio.channels.BoundChannel>, org.xnio.OptionMap);
    Code:
       0: new           #97                 // class org/xnio/FutureResult
       3: dup
       4: invokestatic  #103                // Method org/xnio/IoUtils.directExecutor:()Ljava/util/concurrent/Executor;
       7: invokespecial #106                // Method org/xnio/FutureResult."<init>":(Ljava/util/concurrent/Executor;)V
      10: astore        7
      12: aload_0
      13: aload_1
      14: aload_2
      15: aload_3
      16: new           #15                 // class org/xnio/ssl/JsseXnioSsl$2
      19: dup
      20: aload_0
      21: aload         7
      23: aload         4
      25: invokespecial #109                // Method org/xnio/ssl/JsseXnioSsl$2."<init>":(Lorg/xnio/ssl/JsseXnioSsl;Lorg/xnio/FutureResult;Lorg/xnio/ChannelListener;)V
      28: aload         5
      30: aload         6
      32: invokevirtual #112                // Method openSslConnection:(Lorg/xnio/XnioWorker;Ljava/net/InetSocketAddress;Ljava/net/InetSocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
      35: new           #17                 // class org/xnio/ssl/JsseXnioSsl$1
      38: dup
      39: aload_0
      40: invokespecial #115                // Method org/xnio/ssl/JsseXnioSsl$1."<init>":(Lorg/xnio/ssl/JsseXnioSsl;)V
      43: aload         7
      45: invokeinterface #119,  3          // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
      50: astore        8
      52: aload         7
      54: invokevirtual #123                // Method org/xnio/FutureResult.getIoFuture:()Lorg/xnio/IoFuture;
      57: new           #13                 // class org/xnio/ssl/JsseXnioSsl$3
      60: dup
      61: aload_0
      62: invokespecial #124                // Method org/xnio/ssl/JsseXnioSsl$3."<init>":(Lorg/xnio/ssl/JsseXnioSsl;)V
      65: aload         8
      67: invokeinterface #119,  3          // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
      72: pop
      73: aload         7
      75: aload         8
      77: invokevirtual #128                // Method org/xnio/FutureResult.addCancelHandler:(Lorg/xnio/Cancellable;)V
      80: aload         7
      82: invokevirtual #123                // Method org/xnio/FutureResult.getIoFuture:()Lorg/xnio/IoFuture;
      85: areturn

  public org.xnio.IoFuture<org.xnio.ssl.SslConnection> openSslConnection(org.xnio.XnioWorker, java.net.InetSocketAddress, java.net.InetSocketAddress, org.xnio.ChannelListener<? super org.xnio.ssl.SslConnection>, org.xnio.ChannelListener<? super org.xnio.channels.BoundChannel>, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #151                // Method org/xnio/XnioWorker.getIoThread:()Lorg/xnio/XnioIoThread;
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: invokevirtual #154                // Method openSslConnection:(Lorg/xnio/XnioIoThread;Ljava/net/InetSocketAddress;Ljava/net/InetSocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
      16: areturn

  public org.xnio.IoFuture<org.xnio.ssl.SslConnection> openSslConnection(org.xnio.XnioIoThread, java.net.InetSocketAddress, java.net.InetSocketAddress, org.xnio.ChannelListener<? super org.xnio.ssl.SslConnection>, org.xnio.ChannelListener<? super org.xnio.channels.BoundChannel>, org.xnio.OptionMap);
    Code:
       0: new           #97                 // class org/xnio/FutureResult
       3: dup
       4: aload_1
       5: invokespecial #106                // Method org/xnio/FutureResult."<init>":(Ljava/util/concurrent/Executor;)V
       8: astore        7
      10: aload_1
      11: aload_2
      12: aload_3
      13: new           #11                 // class org/xnio/ssl/JsseXnioSsl$4
      16: dup
      17: aload_0
      18: aload         6
      20: aload_3
      21: aload         7
      23: aload         4
      25: invokespecial #159                // Method org/xnio/ssl/JsseXnioSsl$4."<init>":(Lorg/xnio/ssl/JsseXnioSsl;Lorg/xnio/OptionMap;Ljava/net/InetSocketAddress;Lorg/xnio/FutureResult;Lorg/xnio/ChannelListener;)V
      28: aload         5
      30: aload         6
      32: invokevirtual #165                // Method org/xnio/XnioIoThread.openStreamConnection:(Ljava/net/SocketAddress;Ljava/net/SocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
      35: astore        8
      37: aload         8
      39: new           #9                  // class org/xnio/ssl/JsseXnioSsl$5
      42: dup
      43: aload_0
      44: invokespecial #166                // Method org/xnio/ssl/JsseXnioSsl$5."<init>":(Lorg/xnio/ssl/JsseXnioSsl;)V
      47: aload         7
      49: invokeinterface #119,  3          // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
      54: pop
      55: aload         7
      57: aload         8
      59: invokevirtual #128                // Method org/xnio/FutureResult.addCancelHandler:(Lorg/xnio/Cancellable;)V
      62: aload         7
      64: invokevirtual #123                // Method org/xnio/FutureResult.getIoFuture:()Lorg/xnio/IoFuture;
      67: areturn

  public org.xnio.channels.AcceptingChannel<org.xnio.channels.ConnectedSslStreamChannel> createSslTcpServer(org.xnio.XnioWorker, java.net.InetSocketAddress, org.xnio.ChannelListener<? super org.xnio.channels.AcceptingChannel<org.xnio.channels.ConnectedSslStreamChannel>>, org.xnio.OptionMap) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: aload         4
       6: invokevirtual #178                // Method createSslConnectionServer:(Lorg/xnio/XnioWorker;Ljava/net/InetSocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/channels/AcceptingChannel;
       9: astore        5
      11: new           #7                  // class org/xnio/ssl/JsseXnioSsl$6
      14: dup
      15: aload_0
      16: aload         5
      18: invokespecial #181                // Method org/xnio/ssl/JsseXnioSsl$6."<init>":(Lorg/xnio/ssl/JsseXnioSsl;Lorg/xnio/channels/AcceptingChannel;)V
      21: astore        6
      23: aload         6
      25: invokeinterface #187,  1          // InterfaceMethod org/xnio/channels/AcceptingChannel.getAcceptSetter:()Lorg/xnio/ChannelListener$Setter;
      30: aload_3
      31: invokeinterface #191,  2          // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      36: aload         6
      38: areturn

  public org.xnio.channels.AcceptingChannel<org.xnio.ssl.SslConnection> createSslConnectionServer(org.xnio.XnioWorker, java.net.InetSocketAddress, org.xnio.ChannelListener<? super org.xnio.channels.AcceptingChannel<org.xnio.ssl.SslConnection>>, org.xnio.OptionMap) throws java.io.IOException;
    Code:
       0: new           #201                // class org/xnio/ssl/JsseAcceptingSslStreamConnection
       3: dup
       4: aload_0
       5: getfield      #67                 // Field sslContext:Ljavax/net/ssl/SSLContext;
       8: aload_1
       9: aload_2
      10: aconst_null
      11: aload         4
      13: invokevirtual #205                // Method org/xnio/XnioWorker.createStreamConnectionServer:(Ljava/net/SocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/channels/AcceptingChannel;
      16: aload         4
      18: getstatic     #207                // Field bufferPool:Lorg/xnio/Pool;
      21: getstatic     #207                // Field bufferPool:Lorg/xnio/Pool;
      24: aload         4
      26: getstatic     #213                // Field org/xnio/Options.SSL_STARTTLS:Lorg/xnio/Option;
      29: iconst_0
      30: invokevirtual #219                // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      33: invokespecial #222                // Method org/xnio/ssl/JsseAcceptingSslStreamConnection."<init>":(Ljavax/net/ssl/SSLContext;Lorg/xnio/channels/AcceptingChannel;Lorg/xnio/OptionMap;Lorg/xnio/Pool;Lorg/xnio/Pool;Z)V
      36: astore        5
      38: aload_3
      39: ifnull        53
      42: aload         5
      44: invokevirtual #223                // Method org/xnio/ssl/JsseAcceptingSslStreamConnection.getAcceptSetter:()Lorg/xnio/ChannelListener$Setter;
      47: aload_3
      48: invokeinterface #191,  2          // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      53: aload         5
      55: areturn

  private static java.lang.Boolean lambda$static$0();
    Code:
       0: ldc           #229                // String org.xnio.ssl.new
       2: ldc           #231                // String false
       4: invokestatic  #237                // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: invokestatic  #243                // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
      10: invokestatic  #247                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      13: areturn

  static javax.net.ssl.SSLContext access$000(org.xnio.ssl.JsseXnioSsl);
    Code:
       0: aload_0
       1: getfield      #67                 // Field sslContext:Ljavax/net/ssl/SSLContext;
       4: areturn

  static {};
    Code:
       0: invokedynamic #269,  0            // InvokeDynamic #0:run:()Ljava/security/PrivilegedAction;
       5: invokestatic  #275                // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
       8: checkcast     #239                // class java/lang/Boolean
      11: invokevirtual #279                // Method java/lang/Boolean.booleanValue:()Z
      14: putstatic     #281                // Field NEW_IMPL:Z
      17: new           #283                // class org/xnio/ByteBufferSlicePool
      20: dup
      21: getstatic     #289                // Field org/xnio/BufferAllocator.DIRECT_BYTE_BUFFER_ALLOCATOR:Lorg/xnio/BufferAllocator;
      24: sipush        21504
      27: ldc_w         #290                // int 2752512
      30: invokespecial #293                // Method org/xnio/ByteBufferSlicePool."<init>":(Lorg/xnio/BufferAllocator;II)V
      33: putstatic     #207                // Field bufferPool:Lorg/xnio/Pool;
      36: return
}
