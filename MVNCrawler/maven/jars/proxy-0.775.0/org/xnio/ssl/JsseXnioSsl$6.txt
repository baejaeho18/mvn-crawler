Compiled from "JsseXnioSsl.java"
class org.xnio.ssl.JsseXnioSsl$6 implements org.xnio.channels.AcceptingChannel<org.xnio.channels.ConnectedSslStreamChannel> {
  final org.xnio.channels.AcceptingChannel val$server;

  final org.xnio.ssl.JsseXnioSsl this$0;

  org.xnio.ssl.JsseXnioSsl$6(org.xnio.ssl.JsseXnioSsl, org.xnio.channels.AcceptingChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #26                 // Field this$0:Lorg/xnio/ssl/JsseXnioSsl;
       5: aload_0
       6: aload_2
       7: putfield      #28                 // Field val$server:Lorg/xnio/channels/AcceptingChannel;
      10: aload_0
      11: invokespecial #31                 // Method java/lang/Object."<init>":()V
      14: return

  public org.xnio.channels.ConnectedSslStreamChannel accept() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #28                 // Field val$server:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #40,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.accept:()Lorg/xnio/channels/ConnectedChannel;
       9: checkcast     #42                 // class org/xnio/ssl/SslConnection
      12: astore_1
      13: aload_1
      14: ifnonnull     21
      17: aconst_null
      18: goto          37
      21: new           #44                 // class org/xnio/channels/AssembledConnectedSslStreamChannel
      24: dup
      25: aload_1
      26: aload_1
      27: invokevirtual #48                 // Method org/xnio/ssl/SslConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      30: aload_1
      31: invokevirtual #52                 // Method org/xnio/ssl/SslConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      34: invokespecial #55                 // Method org/xnio/channels/AssembledConnectedSslStreamChannel."<init>":(Lorg/xnio/channels/SslChannel;Lorg/xnio/channels/StreamSourceChannel;Lorg/xnio/channels/StreamSinkChannel;)V
      37: areturn

  public org.xnio.ChannelListener$Setter<? extends org.xnio.channels.AcceptingChannel<org.xnio.channels.ConnectedSslStreamChannel>> getAcceptSetter();
    Code:
       0: aload_0
       1: getfield      #28                 // Field val$server:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #64,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.getAcceptSetter:()Lorg/xnio/ChannelListener$Setter;
       9: aload_0
      10: invokestatic  #70                 // Method org/xnio/ChannelListeners.getDelegatingSetter:(Lorg/xnio/ChannelListener$Setter;Ljava/nio/channels/Channel;)Lorg/xnio/ChannelListener$Setter;
      13: areturn

  public org.xnio.ChannelListener$Setter<? extends org.xnio.channels.AcceptingChannel<org.xnio.channels.ConnectedSslStreamChannel>> getCloseSetter();
    Code:
       0: aload_0
       1: getfield      #28                 // Field val$server:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #73,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.getCloseSetter:()Lorg/xnio/ChannelListener$Setter;
       9: aload_0
      10: invokestatic  #70                 // Method org/xnio/ChannelListeners.getDelegatingSetter:(Lorg/xnio/ChannelListener$Setter;Ljava/nio/channels/Channel;)Lorg/xnio/ChannelListener$Setter;
      13: areturn

  public java.net.SocketAddress getLocalAddress();
    Code:
       0: aload_0
       1: getfield      #28                 // Field val$server:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #77,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.getLocalAddress:()Ljava/net/SocketAddress;
       9: areturn

  public <A extends java.net.SocketAddress> A getLocalAddress(java.lang.Class<A>);
    Code:
       0: aload_0
       1: getfield      #28                 // Field val$server:Lorg/xnio/channels/AcceptingChannel;
       4: aload_1
       5: invokeinterface #81,  2           // InterfaceMethod org/xnio/channels/AcceptingChannel.getLocalAddress:(Ljava/lang/Class;)Ljava/net/SocketAddress;
      10: areturn

  public void suspendAccepts();
    Code:
       0: aload_0
       1: getfield      #28                 // Field val$server:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #87,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.suspendAccepts:()V
       9: return

  public void resumeAccepts();
    Code:
       0: aload_0
       1: getfield      #28                 // Field val$server:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #90,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.resumeAccepts:()V
       9: return

  public boolean isAcceptResumed();
    Code:
       0: aload_0
       1: getfield      #28                 // Field val$server:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #94,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.isAcceptResumed:()Z
       9: ireturn

  public void wakeupAccepts();
    Code:
       0: aload_0
       1: getfield      #28                 // Field val$server:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #97,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.wakeupAccepts:()V
       9: return

  public void awaitAcceptable() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #28                 // Field val$server:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #100,  1          // InterfaceMethod org/xnio/channels/AcceptingChannel.awaitAcceptable:()V
       9: return

  public void awaitAcceptable(long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #28                 // Field val$server:Lorg/xnio/channels/AcceptingChannel;
       4: lload_1
       5: aload_3
       6: invokeinterface #103,  4          // InterfaceMethod org/xnio/channels/AcceptingChannel.awaitAcceptable:(JLjava/util/concurrent/TimeUnit;)V
      11: return

  public org.xnio.XnioWorker getWorker();
    Code:
       0: aload_0
       1: getfield      #28                 // Field val$server:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #111,  1          // InterfaceMethod org/xnio/channels/AcceptingChannel.getWorker:()Lorg/xnio/XnioWorker;
       9: areturn

  public org.xnio.XnioExecutor getAcceptThread();
    Code:
       0: aload_0
       1: getfield      #28                 // Field val$server:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #116,  1          // InterfaceMethod org/xnio/channels/AcceptingChannel.getAcceptThread:()Lorg/xnio/XnioExecutor;
       9: areturn

  public org.xnio.XnioIoThread getIoThread();
    Code:
       0: aload_0
       1: getfield      #28                 // Field val$server:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #120,  1          // InterfaceMethod org/xnio/channels/AcceptingChannel.getIoThread:()Lorg/xnio/XnioIoThread;
       9: areturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #28                 // Field val$server:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #123,  1          // InterfaceMethod org/xnio/channels/AcceptingChannel.close:()V
       9: return

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #28                 // Field val$server:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #126,  1          // InterfaceMethod org/xnio/channels/AcceptingChannel.isOpen:()Z
       9: ireturn

  public boolean supportsOption(org.xnio.Option<?>);
    Code:
       0: aload_0
       1: getfield      #28                 // Field val$server:Lorg/xnio/channels/AcceptingChannel;
       4: aload_1
       5: invokeinterface #131,  2          // InterfaceMethod org/xnio/channels/AcceptingChannel.supportsOption:(Lorg/xnio/Option;)Z
      10: ireturn

  public <T> T getOption(org.xnio.Option<T>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #28                 // Field val$server:Lorg/xnio/channels/AcceptingChannel;
       4: aload_1
       5: invokeinterface #139,  2          // InterfaceMethod org/xnio/channels/AcceptingChannel.getOption:(Lorg/xnio/Option;)Ljava/lang/Object;
      10: areturn

  public <T> T setOption(org.xnio.Option<T>, T) throws java.lang.IllegalArgumentException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #28                 // Field val$server:Lorg/xnio/channels/AcceptingChannel;
       4: aload_1
       5: aload_2
       6: invokeinterface #147,  3          // InterfaceMethod org/xnio/channels/AcceptingChannel.setOption:(Lorg/xnio/Option;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public org.xnio.channels.ConnectedChannel accept() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #152                // Method accept:()Lorg/xnio/channels/ConnectedSslStreamChannel;
       4: areturn

  public org.xnio.channels.CloseableChannel accept() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #152                // Method accept:()Lorg/xnio/channels/ConnectedSslStreamChannel;
       4: areturn
}
