Compiled from "JsseSslStreamConnection.java"
public final class org.xnio.ssl.JsseSslStreamConnection extends org.xnio.ssl.SslConnection {
  private final org.xnio.StreamConnection connection;

  private final org.xnio.ssl.JsseSslConduitEngine sslConduitEngine;

  private volatile boolean tls;

  private final org.xnio.ChannelListener$SimpleSetter<org.xnio.ssl.SslConnection> handshakeSetter;

  private volatile int state;

  private static final int FLAG_READ_CLOSE_REQUESTED;

  private static final int FLAG_WRITE_CLOSE_REQUESTED;

  private static final int FLAG_READ_CLOSED;

  private static final int FLAG_WRITE_CLOSED;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.xnio.ssl.JsseSslStreamConnection> stateUpdater;

  private static final java.util.Set<org.xnio.Option<?>> SUPPORTED_OPTIONS;

  public org.xnio.ssl.JsseSslStreamConnection(org.xnio.StreamConnection, javax.net.ssl.SSLEngine, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #56                 // Field org/xnio/ssl/JsseXnioSsl.bufferPool:Lorg/xnio/Pool;
       6: getstatic     #56                 // Field org/xnio/ssl/JsseXnioSsl.bufferPool:Lorg/xnio/Pool;
       9: iload_3
      10: invokespecial #59                 // Method "<init>":(Lorg/xnio/StreamConnection;Ljavax/net/ssl/SSLEngine;Lorg/xnio/Pool;Lorg/xnio/Pool;Z)V
      13: return

  org.xnio.ssl.JsseSslStreamConnection(org.xnio.StreamConnection, javax.net.ssl.SSLEngine, org.xnio.Pool<java.nio.ByteBuffer>, org.xnio.Pool<java.nio.ByteBuffer>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #71                 // Method org/xnio/StreamConnection.getIoThread:()Lorg/xnio/XnioIoThread;
       5: invokespecial #74                 // Method org/xnio/ssl/SslConnection."<init>":(Lorg/xnio/XnioIoThread;)V
       8: aload_0
       9: new           #7                  // class org/xnio/ChannelListener$SimpleSetter
      12: dup
      13: invokespecial #77                 // Method org/xnio/ChannelListener$SimpleSetter."<init>":()V
      16: putfield      #79                 // Field handshakeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
      19: aload_0
      20: aload_1
      21: putfield      #81                 // Field connection:Lorg/xnio/StreamConnection;
      24: aload_1
      25: invokevirtual #85                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      28: invokevirtual #91                 // Method org/xnio/conduits/ConduitStreamSinkChannel.getConduit:()Lorg/xnio/conduits/StreamSinkConduit;
      31: astore        6
      33: aload_1
      34: invokevirtual #95                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      37: invokevirtual #100                // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
      40: astore        7
      42: aload_0
      43: new           #102                // class org/xnio/ssl/JsseSslConduitEngine
      46: dup
      47: aload_0
      48: aload         6
      50: aload         7
      52: aload_2
      53: aload_3
      54: aload         4
      56: invokespecial #105                // Method org/xnio/ssl/JsseSslConduitEngine."<init>":(Lorg/xnio/ssl/JsseSslStreamConnection;Lorg/xnio/conduits/StreamSinkConduit;Lorg/xnio/conduits/StreamSourceConduit;Ljavax/net/ssl/SSLEngine;Lorg/xnio/Pool;Lorg/xnio/Pool;)V
      59: putfield      #107                // Field sslConduitEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      62: aload_0
      63: iload         5
      65: ifne          72
      68: iconst_1
      69: goto          73
      72: iconst_0
      73: putfield      #117                // Field tls:Z
      76: aload_0
      77: new           #119                // class org/xnio/ssl/JsseSslStreamSinkConduit
      80: dup
      81: aload         6
      83: aload_0
      84: getfield      #107                // Field sslConduitEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      87: aload_0
      88: getfield      #117                // Field tls:Z
      91: invokespecial #122                // Method org/xnio/ssl/JsseSslStreamSinkConduit."<init>":(Lorg/xnio/conduits/StreamSinkConduit;Lorg/xnio/ssl/JsseSslConduitEngine;Z)V
      94: invokevirtual #126                // Method setSinkConduit:(Lorg/xnio/conduits/StreamSinkConduit;)V
      97: aload_0
      98: new           #128                // class org/xnio/ssl/JsseSslStreamSourceConduit
     101: dup
     102: aload         7
     104: aload_0
     105: getfield      #107                // Field sslConduitEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
     108: aload_0
     109: getfield      #117                // Field tls:Z
     112: invokespecial #131                // Method org/xnio/ssl/JsseSslStreamSourceConduit."<init>":(Lorg/xnio/conduits/StreamSourceConduit;Lorg/xnio/ssl/JsseSslConduitEngine;Z)V
     115: invokevirtual #135                // Method setSourceConduit:(Lorg/xnio/conduits/StreamSourceConduit;)V
     118: aload_0
     119: invokevirtual #136                // Method getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     122: aload_0
     123: invokedynamic #155,  0            // InvokeDynamic #0:handleEvent:(Lorg/xnio/ssl/JsseSslStreamConnection;)Lorg/xnio/ChannelListener;
     128: invokevirtual #159                // Method org/xnio/conduits/ConduitStreamSourceChannel.setCloseListener:(Lorg/xnio/ChannelListener;)V
     131: aload_0
     132: invokevirtual #160                // Method getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     135: aload_0
     136: invokedynamic #167,  0            // InvokeDynamic #1:handleEvent:(Lorg/xnio/ssl/JsseSslStreamConnection;)Lorg/xnio/ChannelListener;
     141: invokevirtual #168                // Method org/xnio/conduits/ConduitStreamSinkChannel.setCloseListener:(Lorg/xnio/ChannelListener;)V
     144: return

  public synchronized void startHandshake() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #117                // Field tls:Z
       4: ifne          38
       7: aload_0
       8: iconst_1
       9: putfield      #117                // Field tls:Z
      12: aload_0
      13: invokevirtual #136                // Method getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      16: invokevirtual #100                // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
      19: checkcast     #128                // class org/xnio/ssl/JsseSslStreamSourceConduit
      22: invokevirtual #181                // Method org/xnio/ssl/JsseSslStreamSourceConduit.enableTls:()V
      25: aload_0
      26: invokevirtual #160                // Method getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      29: invokevirtual #91                 // Method org/xnio/conduits/ConduitStreamSinkChannel.getConduit:()Lorg/xnio/conduits/StreamSinkConduit;
      32: checkcast     #119                // class org/xnio/ssl/JsseSslStreamSinkConduit
      35: invokevirtual #182                // Method org/xnio/ssl/JsseSslStreamSinkConduit.enableTls:()V
      38: aload_0
      39: getfield      #107                // Field sslConduitEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      42: invokevirtual #185                // Method org/xnio/ssl/JsseSslConduitEngine.beginHandshake:()V
      45: return

  public java.net.SocketAddress getPeerAddress();
    Code:
       0: aload_0
       1: getfield      #81                 // Field connection:Lorg/xnio/StreamConnection;
       4: invokevirtual #189                // Method org/xnio/StreamConnection.getPeerAddress:()Ljava/net/SocketAddress;
       7: areturn

  public java.net.SocketAddress getLocalAddress();
    Code:
       0: aload_0
       1: getfield      #81                 // Field connection:Lorg/xnio/StreamConnection;
       4: invokevirtual #192                // Method org/xnio/StreamConnection.getLocalAddress:()Ljava/net/SocketAddress;
       7: areturn

  protected void closeAction() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #107                // Field sslConduitEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
       4: invokevirtual #197                // Method org/xnio/ssl/JsseSslConduitEngine.isClosed:()Z
       7: ifne          20
      10: aload_0
      11: getfield      #107                // Field sslConduitEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      14: invokevirtual #200                // Method org/xnio/ssl/JsseSslConduitEngine.close:()V
      17: goto          104
      20: aload_0
      21: getfield      #117                // Field tls:Z
      24: ifeq          97
      27: aload_0
      28: invokevirtual #160                // Method getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      31: invokevirtual #91                 // Method org/xnio/conduits/ConduitStreamSinkChannel.getConduit:()Lorg/xnio/conduits/StreamSinkConduit;
      34: invokeinterface #203,  1          // InterfaceMethod org/xnio/conduits/StreamSinkConduit.terminateWrites:()V
      39: goto          68
      42: astore_1
      43: aload_0
      44: invokevirtual #136                // Method getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      47: invokevirtual #100                // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
      50: invokeinterface #206,  1          // InterfaceMethod org/xnio/conduits/StreamSourceConduit.terminateReads:()V
      55: goto          59
      58: astore_2
      59: aload_0
      60: getfield      #81                 // Field connection:Lorg/xnio/StreamConnection;
      63: invokestatic  #212                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      66: aload_1
      67: athrow
      68: aload_0
      69: invokevirtual #136                // Method getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      72: invokevirtual #100                // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
      75: invokeinterface #206,  1          // InterfaceMethod org/xnio/conduits/StreamSourceConduit.terminateReads:()V
      80: goto          93
      83: astore_1
      84: aload_0
      85: getfield      #81                 // Field connection:Lorg/xnio/StreamConnection;
      88: invokestatic  #212                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      91: aload_1
      92: athrow
      93: aload_0
      94: invokespecial #214                // Method org/xnio/ssl/SslConnection.closeAction:()V
      97: aload_0
      98: getfield      #81                 // Field connection:Lorg/xnio/StreamConnection;
     101: invokevirtual #215                // Method org/xnio/StreamConnection.close:()V
     104: return
    Exception table:
       from    to  target type
          27    39    42   Class java/io/IOException
          43    55    58   Class java/io/IOException
          68    80    83   Class java/io/IOException

  protected void notifyWriteClosed();
    Code:
       0: return

  protected void notifyReadClosed();
    Code:
       0: return

  public <T> T setOption(org.xnio.Option<T>, T) throws java.lang.IllegalArgumentException, java.io.IOException;
    Code:
       0: aload_1
       1: getstatic     #230                // Field org/xnio/Options.SSL_CLIENT_AUTH_MODE:Lorg/xnio/Option;
       4: if_acmpne     122
       7: aload_0
       8: getfield      #107                // Field sslConduitEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      11: invokevirtual #234                // Method org/xnio/ssl/JsseSslConduitEngine.getEngine:()Ljavax/net/ssl/SSLEngine;
      14: astore_3
      15: aload_1
      16: aload_3
      17: invokevirtual #237                // Method javax/net/ssl/SSLEngine.getNeedClientAuth:()Z
      20: ifeq          29
      23: getstatic     #243                // Field org/xnio/SslClientAuthMode.REQUIRED:Lorg/xnio/SslClientAuthMode;
      26: goto          45
      29: aload_3
      30: invokevirtual #248                // Method javax/net/ssl/SSLEngine.getWantClientAuth:()Z
      33: ifeq          42
      36: getstatic     #251                // Field org/xnio/SslClientAuthMode.REQUESTED:Lorg/xnio/SslClientAuthMode;
      39: goto          45
      42: getstatic     #254                // Field org/xnio/SslClientAuthMode.NOT_REQUESTED:Lorg/xnio/SslClientAuthMode;
      45: invokevirtual #258                // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      48: astore        4
      50: aload_3
      51: aload_2
      52: getstatic     #243                // Field org/xnio/SslClientAuthMode.REQUIRED:Lorg/xnio/SslClientAuthMode;
      55: if_acmpne     62
      58: iconst_1
      59: goto          63
      62: iconst_0
      63: invokevirtual #262                // Method javax/net/ssl/SSLEngine.setNeedClientAuth:(Z)V
      66: aload_3
      67: aload_2
      68: getstatic     #251                // Field org/xnio/SslClientAuthMode.REQUESTED:Lorg/xnio/SslClientAuthMode;
      71: if_acmpne     78
      74: iconst_1
      75: goto          79
      78: iconst_0
      79: invokevirtual #265                // Method javax/net/ssl/SSLEngine.setWantClientAuth:(Z)V
      82: aload         4
      84: areturn
      85: astore        5
      87: aload_3
      88: aload_2
      89: getstatic     #243                // Field org/xnio/SslClientAuthMode.REQUIRED:Lorg/xnio/SslClientAuthMode;
      92: if_acmpne     99
      95: iconst_1
      96: goto          100
      99: iconst_0
     100: invokevirtual #262                // Method javax/net/ssl/SSLEngine.setNeedClientAuth:(Z)V
     103: aload_3
     104: aload_2
     105: getstatic     #251                // Field org/xnio/SslClientAuthMode.REQUESTED:Lorg/xnio/SslClientAuthMode;
     108: if_acmpne     115
     111: iconst_1
     112: goto          116
     115: iconst_0
     116: invokevirtual #265                // Method javax/net/ssl/SSLEngine.setWantClientAuth:(Z)V
     119: aload         5
     121: athrow
     122: aload_1
     123: getstatic     #270                // Field org/xnio/Options.SECURE:Lorg/xnio/Option;
     126: if_acmpne     137
     129: new           #224                // class java/lang/IllegalArgumentException
     132: dup
     133: invokespecial #271                // Method java/lang/IllegalArgumentException."<init>":()V
     136: athrow
     137: aload_0
     138: getfield      #81                 // Field connection:Lorg/xnio/StreamConnection;
     141: aload_1
     142: aload_2
     143: invokevirtual #273                // Method org/xnio/StreamConnection.setOption:(Lorg/xnio/Option;Ljava/lang/Object;)Ljava/lang/Object;
     146: areturn
    Exception table:
       from    to  target type
          15    50    85   any
          85    87    85   any

  public <T> T getOption(org.xnio.Option<T>) throws java.io.IOException;
    Code:
       0: aload_1
       1: getstatic     #230                // Field org/xnio/Options.SSL_CLIENT_AUTH_MODE:Lorg/xnio/Option;
       4: if_acmpne     49
       7: aload_0
       8: getfield      #107                // Field sslConduitEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      11: invokevirtual #234                // Method org/xnio/ssl/JsseSslConduitEngine.getEngine:()Ljavax/net/ssl/SSLEngine;
      14: astore_2
      15: aload_1
      16: aload_2
      17: invokevirtual #237                // Method javax/net/ssl/SSLEngine.getNeedClientAuth:()Z
      20: ifeq          29
      23: getstatic     #243                // Field org/xnio/SslClientAuthMode.REQUIRED:Lorg/xnio/SslClientAuthMode;
      26: goto          45
      29: aload_2
      30: invokevirtual #248                // Method javax/net/ssl/SSLEngine.getWantClientAuth:()Z
      33: ifeq          42
      36: getstatic     #251                // Field org/xnio/SslClientAuthMode.REQUESTED:Lorg/xnio/SslClientAuthMode;
      39: goto          45
      42: getstatic     #254                // Field org/xnio/SslClientAuthMode.NOT_REQUESTED:Lorg/xnio/SslClientAuthMode;
      45: invokevirtual #258                // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      48: areturn
      49: aload_1
      50: getstatic     #270                // Field org/xnio/Options.SECURE:Lorg/xnio/Option;
      53: if_acmpne     70
      56: aload_1
      57: aload_0
      58: getfield      #117                // Field tls:Z
      61: invokestatic  #288                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      64: invokevirtual #258                // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      67: goto          78
      70: aload_0
      71: getfield      #81                 // Field connection:Lorg/xnio/StreamConnection;
      74: aload_1
      75: invokevirtual #290                // Method org/xnio/StreamConnection.getOption:(Lorg/xnio/Option;)Ljava/lang/Object;
      78: areturn

  public boolean supportsOption(org.xnio.Option<?>);
    Code:
       0: getstatic     #295                // Field SUPPORTED_OPTIONS:Ljava/util/Set;
       3: aload_1
       4: invokeinterface #301,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
       9: ifne          23
      12: aload_0
      13: getfield      #81                 // Field connection:Lorg/xnio/StreamConnection;
      16: aload_1
      17: invokevirtual #303                // Method org/xnio/StreamConnection.supportsOption:(Lorg/xnio/Option;)Z
      20: ifeq          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  public javax.net.ssl.SSLSession getSslSession();
    Code:
       0: aload_0
       1: getfield      #117                // Field tls:Z
       4: ifeq          17
       7: aload_0
       8: getfield      #107                // Field sslConduitEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      11: invokevirtual #309                // Method org/xnio/ssl/JsseSslConduitEngine.getSession:()Ljavax/net/ssl/SSLSession;
      14: goto          18
      17: aconst_null
      18: areturn

  public org.xnio.ChannelListener$Setter<? extends org.xnio.ssl.SslConnection> getHandshakeSetter();
    Code:
       0: aload_0
       1: getfield      #79                 // Field handshakeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
       4: areturn

  javax.net.ssl.SSLEngine getEngine();
    Code:
       0: aload_0
       1: getfield      #107                // Field sslConduitEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
       4: invokevirtual #234                // Method org/xnio/ssl/JsseSslConduitEngine.getEngine:()Ljavax/net/ssl/SSLEngine;
       7: areturn

  protected boolean readClosed();
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #317                // Field state:I
       8: istore_3
       9: iload_3
      10: iconst_1
      11: invokestatic  #323                // Method org/xnio/Bits.allAreSet:(II)Z
      14: ifeq          20
      17: goto          38
      20: iload_3
      21: iconst_1
      22: ior
      23: istore        4
      25: getstatic     #325                // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      28: aload_0
      29: iload_3
      30: iload         4
      32: invokevirtual #331                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      35: ifeq          4
      38: iload_3
      39: iconst_1
      40: invokestatic  #323                // Method org/xnio/Bits.allAreSet:(II)Z
      43: istore_1
      44: aload_0
      45: getfield      #107                // Field sslConduitEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      48: invokevirtual #197                // Method org/xnio/ssl/JsseSslConduitEngine.isClosed:()Z
      51: ifne          61
      54: aload_0
      55: getfield      #117                // Field tls:Z
      58: ifne          108
      61: aload_0
      62: getfield      #317                // Field state:I
      65: istore_3
      66: iload_3
      67: iconst_4
      68: invokestatic  #323                // Method org/xnio/Bits.allAreSet:(II)Z
      71: ifeq          78
      74: iconst_0
      75: aload_2
      76: monitorexit
      77: ireturn
      78: iload_3
      79: iconst_4
      80: ior
      81: istore        4
      83: getstatic     #325                // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      86: aload_0
      87: iload_3
      88: iload         4
      90: invokevirtual #331                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      93: ifeq          61
      96: iload_3
      97: iconst_4
      98: invokestatic  #323                // Method org/xnio/Bits.allAreSet:(II)Z
     101: ifeq          112
     104: iconst_0
     105: aload_2
     106: monitorexit
     107: ireturn
     108: iload_1
     109: aload_2
     110: monitorexit
     111: ireturn
     112: aload_2
     113: monitorexit
     114: goto          124
     117: astore        5
     119: aload_2
     120: monitorexit
     121: aload         5
     123: athrow
     124: aload_0
     125: invokespecial #333                // Method org/xnio/ssl/SslConnection.readClosed:()Z
     128: pop
     129: iload_1
     130: ireturn
    Exception table:
       from    to  target type
           4    77   117   any
          78   107   117   any
         108   111   117   any
         112   114   117   any
         117   121   117   any

  protected boolean writeClosed();
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #317                // Field state:I
       8: istore_3
       9: iload_3
      10: iconst_2
      11: invokestatic  #323                // Method org/xnio/Bits.allAreSet:(II)Z
      14: ifeq          20
      17: goto          38
      20: iload_3
      21: iconst_2
      22: ior
      23: istore        4
      25: getstatic     #325                // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      28: aload_0
      29: iload_3
      30: iload         4
      32: invokevirtual #331                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      35: ifeq          4
      38: iload_3
      39: iconst_2
      40: invokestatic  #323                // Method org/xnio/Bits.allAreSet:(II)Z
      43: istore_1
      44: aload_0
      45: getfield      #107                // Field sslConduitEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      48: invokevirtual #197                // Method org/xnio/ssl/JsseSslConduitEngine.isClosed:()Z
      51: ifne          61
      54: aload_0
      55: getfield      #117                // Field tls:Z
      58: ifne          111
      61: aload_0
      62: getfield      #317                // Field state:I
      65: istore_3
      66: iload_3
      67: bipush        8
      69: invokestatic  #323                // Method org/xnio/Bits.allAreSet:(II)Z
      72: ifeq          79
      75: iconst_0
      76: aload_2
      77: monitorexit
      78: ireturn
      79: iload_3
      80: bipush        8
      82: ior
      83: istore        4
      85: getstatic     #325                // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      88: aload_0
      89: iload_3
      90: iload         4
      92: invokevirtual #331                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      95: ifeq          61
      98: iload_3
      99: bipush        8
     101: invokestatic  #323                // Method org/xnio/Bits.allAreSet:(II)Z
     104: ifeq          115
     107: iconst_0
     108: aload_2
     109: monitorexit
     110: ireturn
     111: iload_1
     112: aload_2
     113: monitorexit
     114: ireturn
     115: aload_2
     116: monitorexit
     117: goto          127
     120: astore        5
     122: aload_2
     123: monitorexit
     124: aload         5
     126: athrow
     127: aload_0
     128: invokespecial #339                // Method org/xnio/ssl/SslConnection.writeClosed:()Z
     131: pop
     132: iload_1
     133: ireturn
    Exception table:
       from    to  target type
           4    78   120   any
          79   110   120   any
         111   114   120   any
         115   117   120   any
         120   124   120   any

  protected void handleHandshakeFinished();
    Code:
       0: aload_0
       1: getfield      #79                 // Field handshakeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
       4: invokevirtual #344                // Method org/xnio/ChannelListener$SimpleSetter.get:()Lorg/xnio/ChannelListener;
       7: astore_1
       8: aload_1
       9: ifnonnull     13
      12: return
      13: aload_0
      14: aload_1
      15: invokestatic  #350                // Method org/xnio/ChannelListeners.invokeChannelListener:(Ljava/nio/channels/Channel;Lorg/xnio/ChannelListener;)Z
      18: pop
      19: return

  public boolean isReadShutdown();
    Code:
       0: aload_0
       1: getfield      #317                // Field state:I
       4: iconst_1
       5: invokestatic  #323                // Method org/xnio/Bits.allAreSet:(II)Z
       8: ireturn

  public boolean isWriteShutdown();
    Code:
       0: aload_0
       1: getfield      #317                // Field state:I
       4: iconst_2
       5: invokestatic  #323                // Method org/xnio/Bits.allAreSet:(II)Z
       8: ireturn

  private void lambda$new$1(org.xnio.conduits.ConduitStreamSinkChannel);
    Code:
       0: aload_0
       1: invokevirtual #356                // Method writeClosed:()Z
       4: pop
       5: return

  private void lambda$new$0(org.xnio.conduits.ConduitStreamSourceChannel);
    Code:
       0: aload_0
       1: invokevirtual #359                // Method readClosed:()Z
       4: pop
       5: return

  static {};
    Code:
       0: ldc           #2                  // class org/xnio/ssl/JsseSslStreamConnection
       2: ldc_w         #362                // String state
       5: invokestatic  #366                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       8: putstatic     #325                // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      11: invokestatic  #370                // Method org/xnio/Option.setBuilder:()Lorg/xnio/Option$SetBuilder;
      14: getstatic     #270                // Field org/xnio/Options.SECURE:Lorg/xnio/Option;
      17: getstatic     #230                // Field org/xnio/Options.SSL_CLIENT_AUTH_MODE:Lorg/xnio/Option;
      20: invokevirtual #374                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      23: invokevirtual #378                // Method org/xnio/Option$SetBuilder.create:()Ljava/util/Set;
      26: putstatic     #295                // Field SUPPORTED_OPTIONS:Ljava/util/Set;
      29: return
}
