Compiled from "BufferPipeInputStream.java"
public class org.xnio.streams.BufferPipeInputStream extends java.io.InputStream {
  private final java.util.Queue<org.xnio.Pooled<java.nio.ByteBuffer>> queue;

  private final org.xnio.streams.BufferPipeInputStream$InputHandler inputHandler;

  private boolean eof;

  private java.io.IOException failure;

  static final boolean $assertionsDisabled;

  public org.xnio.streams.BufferPipeInputStream(org.xnio.streams.BufferPipeInputStream$InputHandler);
    Code:
       0: aload_0
       1: invokespecial #23                 // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #25                 // Field inputHandler:Lorg/xnio/streams/BufferPipeInputStream$InputHandler;
       9: aload_0
      10: new           #27                 // class java/util/ArrayDeque
      13: dup
      14: invokespecial #28                 // Method java/util/ArrayDeque."<init>":()V
      17: putfield      #30                 // Field queue:Ljava/util/Queue;
      20: return

  public void push(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_1
       5: invokevirtual #40                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       8: ifeq          43
      11: aload_0
      12: getfield      #42                 // Field eof:Z
      15: ifne          43
      18: aload_0
      19: getfield      #44                 // Field failure:Ljava/io/IOException;
      22: ifnonnull     43
      25: aload_0
      26: getfield      #30                 // Field queue:Ljava/util/Queue;
      29: aload_1
      30: invokestatic  #50                 // Method org/xnio/Buffers.pooledWrapper:(Ljava/nio/Buffer;)Lorg/xnio/Pooled;
      33: invokeinterface #56,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
      38: pop
      39: aload_0
      40: invokevirtual #61                 // Method java/lang/Object.notifyAll:()V
      43: aload_2
      44: monitorexit
      45: goto          53
      48: astore_3
      49: aload_2
      50: monitorexit
      51: aload_3
      52: athrow
      53: return
    Exception table:
       from    to  target type
           4    45    48   any
          48    51    48   any

  public void push(org.xnio.Pooled<java.nio.ByteBuffer>);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_1
       5: invokeinterface #73,  1           // InterfaceMethod org/xnio/Pooled.getResource:()Ljava/lang/Object;
      10: checkcast     #36                 // class java/nio/ByteBuffer
      13: invokevirtual #40                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      16: ifeq          51
      19: aload_0
      20: getfield      #42                 // Field eof:Z
      23: ifne          51
      26: aload_0
      27: getfield      #44                 // Field failure:Ljava/io/IOException;
      30: ifnonnull     51
      33: aload_0
      34: getfield      #30                 // Field queue:Ljava/util/Queue;
      37: aload_1
      38: invokeinterface #56,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
      43: pop
      44: aload_0
      45: invokevirtual #61                 // Method java/lang/Object.notifyAll:()V
      48: goto          57
      51: aload_1
      52: invokeinterface #76,  1           // InterfaceMethod org/xnio/Pooled.free:()V
      57: aload_2
      58: monitorexit
      59: goto          67
      62: astore_3
      63: aload_2
      64: monitorexit
      65: aload_3
      66: athrow
      67: return
    Exception table:
       from    to  target type
           4    59    62   any
          62    65    62   any

  public void pushException(java.io.IOException);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #42                 // Field eof:Z
       8: ifne          20
      11: aload_0
      12: aload_1
      13: putfield      #44                 // Field failure:Ljava/io/IOException;
      16: aload_0
      17: invokevirtual #61                 // Method java/lang/Object.notifyAll:()V
      20: aload_2
      21: monitorexit
      22: goto          30
      25: astore_3
      26: aload_2
      27: monitorexit
      28: aload_3
      29: athrow
      30: return
    Exception table:
       from    to  target type
           4    22    25   any
          25    28    25   any

  public void pushEof();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: iconst_1
       6: putfield      #42                 // Field eof:Z
       9: aload_0
      10: invokevirtual #61                 // Method java/lang/Object.notifyAll:()V
      13: aload_1
      14: monitorexit
      15: goto          23
      18: astore_2
      19: aload_1
      20: monitorexit
      21: aload_2
      22: athrow
      23: return
    Exception table:
       from    to  target type
           4    15    18   any
          18    21    18   any

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #30                 // Field queue:Ljava/util/Queue;
       4: astore_1
       5: aload_0
       6: dup
       7: astore_2
       8: monitorenter
       9: aload_1
      10: invokeinterface #92,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
      15: ifeq          59
      18: aload_0
      19: getfield      #42                 // Field eof:Z
      22: ifeq          29
      25: iconst_m1
      26: aload_2
      27: monitorexit
      28: ireturn
      29: aload_0
      30: invokespecial #95                 // Method checkFailure:()V
      33: invokestatic  #100                // Method org/xnio/Xnio.checkBlockingAllowed:()V
      36: aload_0
      37: invokevirtual #103                // Method java/lang/Object.wait:()V
      40: goto          9
      43: astore_3
      44: invokestatic  #109                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      47: invokevirtual #112                // Method java/lang/Thread.interrupt:()V
      50: getstatic     #118                // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      53: invokeinterface #122,  1          // InterfaceMethod org/xnio/_private/Messages.interruptedIO:()Ljava/io/InterruptedIOException;
      58: athrow
      59: aload_1
      60: invokeinterface #125,  1          // InterfaceMethod java/util/Queue.peek:()Ljava/lang/Object;
      65: checkcast     #69                 // class org/xnio/Pooled
      68: astore_3
      69: aload_3
      70: invokeinterface #73,  1           // InterfaceMethod org/xnio/Pooled.getResource:()Ljava/lang/Object;
      75: checkcast     #36                 // class java/nio/ByteBuffer
      78: astore        4
      80: aload         4
      82: invokevirtual #129                // Method java/nio/ByteBuffer.get:()B
      85: sipush        255
      88: iand
      89: istore        5
      91: aload         4
      93: invokevirtual #132                // Method java/nio/ByteBuffer.remaining:()I
      96: ifne          147
      99: aload_1
     100: invokeinterface #135,  1          // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
     105: pop
     106: aload_0
     107: getfield      #25                 // Field inputHandler:Lorg/xnio/streams/BufferPipeInputStream$InputHandler;
     110: aload_3
     111: invokeinterface #138,  2          // InterfaceMethod org/xnio/streams/BufferPipeInputStream$InputHandler.acknowledge:(Lorg/xnio/Pooled;)V
     116: aload_3
     117: invokeinterface #76,  1           // InterfaceMethod org/xnio/Pooled.free:()V
     122: goto          147
     125: astore        6
     127: aload_3
     128: invokeinterface #76,  1           // InterfaceMethod org/xnio/Pooled.free:()V
     133: goto          147
     136: astore        7
     138: aload_3
     139: invokeinterface #76,  1           // InterfaceMethod org/xnio/Pooled.free:()V
     144: aload         7
     146: athrow
     147: iload         5
     149: aload_2
     150: monitorexit
     151: ireturn
     152: astore        8
     154: aload_2
     155: monitorexit
     156: aload         8
     158: athrow
    Exception table:
       from    to  target type
          36    40    43   Class java/lang/InterruptedException
         106   116   125   Class java/io/IOException
         106   116   136   any
         125   127   136   any
         136   138   136   any
           9    28   152   any
          29   151   152   any
         152   156   152   any

  private void clearQueue();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #30                 // Field queue:Ljava/util/Queue;
       8: invokeinterface #135,  1          // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      13: checkcast     #69                 // class org/xnio/Pooled
      16: dup
      17: astore_2
      18: ifnull        30
      21: aload_2
      22: invokeinterface #76,  1           // InterfaceMethod org/xnio/Pooled.free:()V
      27: goto          4
      30: aload_1
      31: monitorexit
      32: goto          40
      35: astore_3
      36: aload_1
      37: monitorexit
      38: aload_3
      39: athrow
      40: return
    Exception table:
       from    to  target type
           4    32    35   any
          35    38    35   any

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: ifne          6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: getfield      #30                 // Field queue:Ljava/util/Queue;
      10: astore        4
      12: aload_0
      13: dup
      14: astore        5
      16: monitorenter
      17: aload         4
      19: invokeinterface #92,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
      24: ifeq          70
      27: aload_0
      28: getfield      #42                 // Field eof:Z
      31: ifeq          39
      34: iconst_m1
      35: aload         5
      37: monitorexit
      38: ireturn
      39: aload_0
      40: invokespecial #95                 // Method checkFailure:()V
      43: invokestatic  #100                // Method org/xnio/Xnio.checkBlockingAllowed:()V
      46: aload_0
      47: invokevirtual #103                // Method java/lang/Object.wait:()V
      50: goto          17
      53: astore        6
      55: invokestatic  #109                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      58: invokevirtual #112                // Method java/lang/Thread.interrupt:()V
      61: getstatic     #118                // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      64: invokeinterface #122,  1          // InterfaceMethod org/xnio/_private/Messages.interruptedIO:()Ljava/io/InterruptedIOException;
      69: athrow
      70: iconst_0
      71: istore        6
      73: iload_3
      74: ifle          211
      77: aload         4
      79: invokeinterface #125,  1          // InterfaceMethod java/util/Queue.peek:()Ljava/lang/Object;
      84: checkcast     #69                 // class org/xnio/Pooled
      87: astore        7
      89: aload         7
      91: ifnonnull     97
      94: goto          211
      97: aload         7
      99: invokeinterface #73,  1           // InterfaceMethod org/xnio/Pooled.getResource:()Ljava/lang/Object;
     104: checkcast     #36                 // class java/nio/ByteBuffer
     107: astore        8
     109: aload         8
     111: invokevirtual #132                // Method java/nio/ByteBuffer.remaining:()I
     114: iload_3
     115: invokestatic  #151                // Method java/lang/Math.min:(II)I
     118: istore        9
     120: aload         8
     122: aload_1
     123: iload_2
     124: iload         9
     126: invokevirtual #154                // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
     129: pop
     130: iload_2
     131: iload         9
     133: iadd
     134: istore_2
     135: iload         6
     137: iload         9
     139: iadd
     140: istore        6
     142: iload_3
     143: iload         9
     145: isub
     146: istore_3
     147: aload         8
     149: invokevirtual #132                // Method java/nio/ByteBuffer.remaining:()I
     152: ifne          208
     155: aload         4
     157: invokeinterface #135,  1          // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
     162: pop
     163: aload_0
     164: getfield      #25                 // Field inputHandler:Lorg/xnio/streams/BufferPipeInputStream$InputHandler;
     167: aload         7
     169: invokeinterface #138,  2          // InterfaceMethod org/xnio/streams/BufferPipeInputStream$InputHandler.acknowledge:(Lorg/xnio/Pooled;)V
     174: aload         7
     176: invokeinterface #76,  1           // InterfaceMethod org/xnio/Pooled.free:()V
     181: goto          208
     184: astore        10
     186: aload         7
     188: invokeinterface #76,  1           // InterfaceMethod org/xnio/Pooled.free:()V
     193: goto          208
     196: astore        11
     198: aload         7
     200: invokeinterface #76,  1           // InterfaceMethod org/xnio/Pooled.free:()V
     205: aload         11
     207: athrow
     208: goto          73
     211: iload         6
     213: aload         5
     215: monitorexit
     216: ireturn
     217: astore        12
     219: aload         5
     221: monitorexit
     222: aload         12
     224: athrow
    Exception table:
       from    to  target type
          46    50    53   Class java/lang/InterruptedException
         163   174   184   Class java/io/IOException
         163   174   196   any
         184   186   196   any
         196   198   196   any
          17    38   217   any
          39   216   217   any
         217   222   217   any

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: iconst_0
       5: istore_2
       6: aload_0
       7: getfield      #30                 // Field queue:Ljava/util/Queue;
      10: invokeinterface #166,  1          // InterfaceMethod java/util/Queue.iterator:()Ljava/util/Iterator;
      15: astore_3
      16: aload_3
      17: invokeinterface #171,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          64
      25: aload_3
      26: invokeinterface #174,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #69                 // class org/xnio/Pooled
      34: astore        4
      36: iload_2
      37: aload         4
      39: invokeinterface #73,  1           // InterfaceMethod org/xnio/Pooled.getResource:()Ljava/lang/Object;
      44: checkcast     #36                 // class java/nio/ByteBuffer
      47: invokevirtual #132                // Method java/nio/ByteBuffer.remaining:()I
      50: iadd
      51: istore_2
      52: iload_2
      53: ifge          61
      56: ldc           #175                // int 2147483647
      58: aload_1
      59: monitorexit
      60: ireturn
      61: goto          16
      64: iload_2
      65: aload_1
      66: monitorexit
      67: ireturn
      68: astore        5
      70: aload_1
      71: monitorexit
      72: aload         5
      74: athrow
    Exception table:
       from    to  target type
           4    60    68   any
          61    67    68   any
          68    72    68   any

  public long skip(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #30                 // Field queue:Ljava/util/Queue;
       4: astore_3
       5: aload_0
       6: dup
       7: astore        4
       9: monitorenter
      10: aload_3
      11: invokeinterface #92,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
      16: ifeq          62
      19: aload_0
      20: getfield      #42                 // Field eof:Z
      23: ifeq          31
      26: lconst_0
      27: aload         4
      29: monitorexit
      30: lreturn
      31: aload_0
      32: invokespecial #95                 // Method checkFailure:()V
      35: invokestatic  #100                // Method org/xnio/Xnio.checkBlockingAllowed:()V
      38: aload_0
      39: invokevirtual #103                // Method java/lang/Object.wait:()V
      42: goto          10
      45: astore        5
      47: invokestatic  #109                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      50: invokevirtual #112                // Method java/lang/Thread.interrupt:()V
      53: getstatic     #118                // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      56: invokeinterface #122,  1          // InterfaceMethod org/xnio/_private/Messages.interruptedIO:()Ljava/io/InterruptedIOException;
      61: athrow
      62: lconst_0
      63: lstore        5
      65: lload_1
      66: lconst_0
      67: lcmp
      68: ifle          212
      71: aload_3
      72: invokeinterface #125,  1          // InterfaceMethod java/util/Queue.peek:()Ljava/lang/Object;
      77: checkcast     #69                 // class org/xnio/Pooled
      80: astore        7
      82: aload         7
      84: ifnonnull     90
      87: goto          212
      90: aload         7
      92: invokeinterface #73,  1           // InterfaceMethod org/xnio/Pooled.getResource:()Ljava/lang/Object;
      97: checkcast     #36                 // class java/nio/ByteBuffer
     100: astore        8
     102: aload         8
     104: invokevirtual #132                // Method java/nio/ByteBuffer.remaining:()I
     107: i2l
     108: ldc2_w        #178                // long 2147483647l
     111: lload_1
     112: invokestatic  #183                // Method java/lang/Math.max:(JJ)J
     115: invokestatic  #185                // Method java/lang/Math.min:(JJ)J
     118: l2i
     119: istore        9
     121: aload         8
     123: aload         8
     125: invokevirtual #188                // Method java/nio/ByteBuffer.position:()I
     128: iload         9
     130: iadd
     131: invokevirtual #191                // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     134: pop
     135: lload         5
     137: iload         9
     139: i2l
     140: ladd
     141: lstore        5
     143: lload_1
     144: iload         9
     146: i2l
     147: lsub
     148: lstore_1
     149: aload         8
     151: invokevirtual #132                // Method java/nio/ByteBuffer.remaining:()I
     154: ifne          209
     157: aload_3
     158: invokeinterface #135,  1          // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
     163: pop
     164: aload_0
     165: getfield      #25                 // Field inputHandler:Lorg/xnio/streams/BufferPipeInputStream$InputHandler;
     168: aload         7
     170: invokeinterface #138,  2          // InterfaceMethod org/xnio/streams/BufferPipeInputStream$InputHandler.acknowledge:(Lorg/xnio/Pooled;)V
     175: aload         7
     177: invokeinterface #76,  1           // InterfaceMethod org/xnio/Pooled.free:()V
     182: goto          209
     185: astore        10
     187: aload         7
     189: invokeinterface #76,  1           // InterfaceMethod org/xnio/Pooled.free:()V
     194: goto          209
     197: astore        11
     199: aload         7
     201: invokeinterface #76,  1           // InterfaceMethod org/xnio/Pooled.free:()V
     206: aload         11
     208: athrow
     209: goto          65
     212: lload         5
     214: aload         4
     216: monitorexit
     217: lreturn
     218: astore        12
     220: aload         4
     222: monitorexit
     223: aload         12
     225: athrow
    Exception table:
       from    to  target type
          38    42    45   Class java/lang/InterruptedException
         164   175   185   Class java/io/IOException
         164   175   197   any
         185   187   197   any
         197   199   197   any
          10    30   218   any
          31   217   218   any
         218   223   218   any

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #42                 // Field eof:Z
       8: ifne          38
      11: aload_0
      12: invokespecial #197                // Method clearQueue:()V
      15: aload_0
      16: iconst_1
      17: putfield      #42                 // Field eof:Z
      20: aload_0
      21: aconst_null
      22: putfield      #44                 // Field failure:Ljava/io/IOException;
      25: aload_0
      26: invokevirtual #61                 // Method java/lang/Object.notifyAll:()V
      29: aload_0
      30: getfield      #25                 // Field inputHandler:Lorg/xnio/streams/BufferPipeInputStream$InputHandler;
      33: invokeinterface #199,  1          // InterfaceMethod org/xnio/streams/BufferPipeInputStream$InputHandler.close:()V
      38: aload_1
      39: monitorexit
      40: goto          48
      43: astore_2
      44: aload_1
      45: monitorexit
      46: aload_2
      47: athrow
      48: return
    Exception table:
       from    to  target type
           4    40    43   any
          43    46    43   any

  private void checkFailure() throws java.io.IOException;
    Code:
       0: getstatic     #201                // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #204                // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifne          21
      13: new           #206                // class java/lang/AssertionError
      16: dup
      17: invokespecial #207                // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #44                 // Field failure:Ljava/io/IOException;
      25: astore_1
      26: aload_1
      27: ifnull        48
      30: aload_1
      31: invokevirtual #211                // Method java/io/IOException.fillInStackTrace:()Ljava/lang/Throwable;
      34: pop
      35: aload_1
      36: athrow
      37: astore_2
      38: aload_0
      39: invokespecial #197                // Method clearQueue:()V
      42: aload_0
      43: invokevirtual #61                 // Method java/lang/Object.notifyAll:()V
      46: aload_2
      47: athrow
      48: return
    Exception table:
       from    to  target type
          35    38    37   any

  static {};
    Code:
       0: ldc           #2                  // class org/xnio/streams/BufferPipeInputStream
       2: invokevirtual #217                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #201                // Field $assertionsDisabled:Z
      16: return
}
