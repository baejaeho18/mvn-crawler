Compiled from "BufferPipeOutputStream.java"
public class org.xnio.streams.BufferPipeOutputStream extends java.io.OutputStream {
  private org.xnio.Pooled<java.nio.ByteBuffer> buffer;

  private boolean closed;

  private final org.xnio.streams.BufferPipeOutputStream$BufferWriter bufferWriterTask;

  static final boolean $assertionsDisabled;

  public org.xnio.streams.BufferPipeOutputStream(org.xnio.streams.BufferPipeOutputStream$BufferWriter) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #23                 // Method java/io/OutputStream."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #25                 // Field bufferWriterTask:Lorg/xnio/streams/BufferPipeOutputStream$BufferWriter;
       9: aload_0
      10: dup
      11: astore_2
      12: monitorenter
      13: aload_0
      14: aload_1
      15: iconst_1
      16: invokeinterface #29,  2           // InterfaceMethod org/xnio/streams/BufferPipeOutputStream$BufferWriter.getBuffer:(Z)Lorg/xnio/Pooled;
      21: putfield      #31                 // Field buffer:Lorg/xnio/Pooled;
      24: aload_2
      25: monitorexit
      26: goto          34
      29: astore_3
      30: aload_2
      31: monitorexit
      32: aload_3
      33: athrow
      34: return
    Exception table:
       from    to  target type
          13    26    29   any
          29    32    29   any

  private static java.io.IOException closed();
    Code:
       0: new           #20                 // class java/io/IOException
       3: dup
       4: ldc           #40                 // String Stream is closed
       6: invokespecial #43                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
       9: areturn

  private void checkClosed() throws java.io.IOException;
    Code:
       0: getstatic     #46                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #52                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifne          21
      13: new           #54                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #55                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #57                 // Field closed:Z
      25: ifeq          32
      28: invokestatic  #59                 // Method closed:()Ljava/io/IOException;
      31: athrow
      32: return

  private org.xnio.Pooled<java.nio.ByteBuffer> getBuffer() throws java.io.IOException;
    Code:
       0: getstatic     #46                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #52                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifne          21
      13: new           #54                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #55                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #31                 // Field buffer:Lorg/xnio/Pooled;
      25: astore_1
      26: aload_1
      27: ifnull        47
      30: aload_1
      31: invokeinterface #67,  1           // InterfaceMethod org/xnio/Pooled.getResource:()Ljava/lang/Object;
      36: checkcast     #69                 // class java/nio/ByteBuffer
      39: invokevirtual #73                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      42: ifeq          47
      45: aload_1
      46: areturn
      47: aload_1
      48: ifnull        56
      51: aload_0
      52: iconst_0
      53: invokespecial #77                 // Method send:(Z)V
      56: aload_0
      57: aload_0
      58: getfield      #25                 // Field bufferWriterTask:Lorg/xnio/streams/BufferPipeOutputStream$BufferWriter;
      61: iconst_0
      62: invokeinterface #29,  2           // InterfaceMethod org/xnio/streams/BufferPipeOutputStream$BufferWriter.getBuffer:(Z)Lorg/xnio/Pooled;
      67: dup_x1
      68: putfield      #31                 // Field buffer:Lorg/xnio/Pooled;
      71: areturn

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: invokespecial #81                 // Method checkClosed:()V
       8: aload_0
       9: invokespecial #83                 // Method getBuffer:()Lorg/xnio/Pooled;
      12: invokeinterface #67,  1           // InterfaceMethod org/xnio/Pooled.getResource:()Ljava/lang/Object;
      17: checkcast     #69                 // class java/nio/ByteBuffer
      20: iload_1
      21: i2b
      22: invokevirtual #87                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      25: pop
      26: aload_2
      27: monitorexit
      28: goto          36
      31: astore_3
      32: aload_2
      33: monitorexit
      34: aload_3
      35: athrow
      36: return
    Exception table:
       from    to  target type
           4    28    31   any
          31    34    31   any

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: astore        4
       4: monitorenter
       5: aload_0
       6: invokespecial #81                 // Method checkClosed:()V
       9: iload_3
      10: ifle          61
      13: aload_0
      14: invokespecial #83                 // Method getBuffer:()Lorg/xnio/Pooled;
      17: invokeinterface #67,  1           // InterfaceMethod org/xnio/Pooled.getResource:()Ljava/lang/Object;
      22: checkcast     #69                 // class java/nio/ByteBuffer
      25: astore        5
      27: iload_3
      28: aload         5
      30: invokevirtual #94                 // Method java/nio/ByteBuffer.remaining:()I
      33: invokestatic  #100                // Method java/lang/Math.min:(II)I
      36: istore        6
      38: aload         5
      40: aload_1
      41: iload_2
      42: iload         6
      44: invokevirtual #103                // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      47: pop
      48: iload_3
      49: iload         6
      51: isub
      52: istore_3
      53: iload_2
      54: iload         6
      56: iadd
      57: istore_2
      58: goto          9
      61: aload         4
      63: monitorexit
      64: goto          75
      67: astore        7
      69: aload         4
      71: monitorexit
      72: aload         7
      74: athrow
      75: return
    Exception table:
       from    to  target type
           5    64    67   any
          67    72    67   any

  private void send(boolean) throws java.io.IOException;
    Code:
       0: getstatic     #46                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #52                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifne          21
      13: new           #54                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #55                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: getstatic     #46                 // Field $assertionsDisabled:Z
      24: ifne          42
      27: aload_0
      28: getfield      #57                 // Field closed:Z
      31: ifeq          42
      34: new           #54                 // class java/lang/AssertionError
      37: dup
      38: invokespecial #55                 // Method java/lang/AssertionError."<init>":()V
      41: athrow
      42: aload_0
      43: getfield      #31                 // Field buffer:Lorg/xnio/Pooled;
      46: astore_2
      47: aload_2
      48: ifnonnull     55
      51: aconst_null
      52: goto          64
      55: aload_2
      56: invokeinterface #67,  1           // InterfaceMethod org/xnio/Pooled.getResource:()Ljava/lang/Object;
      61: checkcast     #69                 // class java/nio/ByteBuffer
      64: astore_3
      65: aload_0
      66: aconst_null
      67: putfield      #31                 // Field buffer:Lorg/xnio/Pooled;
      70: aload_3
      71: ifnull        95
      74: aload_3
      75: invokevirtual #111                // Method java/nio/ByteBuffer.position:()I
      78: ifle          95
      81: aload_3
      82: invokevirtual #115                // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      85: pop
      86: aload_0
      87: aload_2
      88: iload_1
      89: invokespecial #118                // Method send:(Lorg/xnio/Pooled;Z)V
      92: goto          130
      95: iload_1
      96: ifeq          130
      99: aload_0
     100: invokespecial #83                 // Method getBuffer:()Lorg/xnio/Pooled;
     103: astore        4
     105: aload         4
     107: invokeinterface #67,  1           // InterfaceMethod org/xnio/Pooled.getResource:()Ljava/lang/Object;
     112: checkcast     #69                 // class java/nio/ByteBuffer
     115: astore        5
     117: aload         5
     119: invokevirtual #115                // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     122: pop
     123: aload_0
     124: aload         4
     126: iload_1
     127: invokespecial #118                // Method send:(Lorg/xnio/Pooled;Z)V
     130: return

  private void send(org.xnio.Pooled<java.nio.ByteBuffer>, boolean) throws java.io.IOException;
    Code:
       0: getstatic     #46                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #52                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifne          21
      13: new           #54                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #55                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #25                 // Field bufferWriterTask:Lorg/xnio/streams/BufferPipeOutputStream$BufferWriter;
      25: aload_1
      26: iload_2
      27: invokeinterface #126,  3          // InterfaceMethod org/xnio/streams/BufferPipeOutputStream$BufferWriter.accept:(Lorg/xnio/Pooled;Z)V
      32: goto          43
      35: astore_3
      36: aload_0
      37: iconst_1
      38: putfield      #57                 // Field closed:Z
      41: aload_3
      42: athrow
      43: return
    Exception table:
       from    to  target type
          21    32    35   Class java/io/IOException

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #131                // Method flush:(Z)V
       5: return

  private void flush(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #57                 // Field closed:Z
       8: ifeq          14
      11: aload_2
      12: monitorexit
      13: return
      14: aload_0
      15: iload_1
      16: invokespecial #77                 // Method send:(Z)V
      19: aload_0
      20: getfield      #25                 // Field bufferWriterTask:Lorg/xnio/streams/BufferPipeOutputStream$BufferWriter;
      23: invokeinterface #133,  1          // InterfaceMethod org/xnio/streams/BufferPipeOutputStream$BufferWriter.flush:()V
      28: goto          44
      31: astore_3
      32: aload_0
      33: iconst_1
      34: putfield      #57                 // Field closed:Z
      37: aload_0
      38: aconst_null
      39: putfield      #31                 // Field buffer:Lorg/xnio/Pooled;
      42: aload_3
      43: athrow
      44: aload_2
      45: monitorexit
      46: goto          56
      49: astore        4
      51: aload_2
      52: monitorexit
      53: aload         4
      55: athrow
      56: return
    Exception table:
       from    to  target type
          19    28    31   Class java/io/IOException
           4    13    49   any
          14    46    49   any
          49    53    49   any

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #57                 // Field closed:Z
       8: ifeq          14
      11: aload_1
      12: monitorexit
      13: return
      14: aload_0
      15: iconst_1
      16: invokespecial #131                // Method flush:(Z)V
      19: aload_0
      20: iconst_1
      21: putfield      #57                 // Field closed:Z
      24: goto          35
      27: astore_2
      28: aload_0
      29: iconst_1
      30: putfield      #57                 // Field closed:Z
      33: aload_2
      34: athrow
      35: aload_1
      36: monitorexit
      37: goto          45
      40: astore_3
      41: aload_1
      42: monitorexit
      43: aload_3
      44: athrow
      45: return
    Exception table:
       from    to  target type
          14    19    27   any
           4    13    40   any
          14    37    40   any
          40    43    40   any

  public org.xnio.Pooled<java.nio.ByteBuffer> breakPipe();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #57                 // Field closed:Z
       8: ifeq          15
      11: aconst_null
      12: aload_1
      13: monitorexit
      14: areturn
      15: aload_0
      16: iconst_1
      17: putfield      #57                 // Field closed:Z
      20: aload_0
      21: getfield      #31                 // Field buffer:Lorg/xnio/Pooled;
      24: astore_2
      25: aload_0
      26: aconst_null
      27: putfield      #31                 // Field buffer:Lorg/xnio/Pooled;
      30: aload_1
      31: monitorexit
      32: aload_2
      33: areturn
      34: astore_3
      35: aload_0
      36: aconst_null
      37: putfield      #31                 // Field buffer:Lorg/xnio/Pooled;
      40: aload_3
      41: athrow
      42: astore        4
      44: aload_1
      45: monitorexit
      46: aload         4
      48: athrow
    Exception table:
       from    to  target type
          20    25    34   any
           4    14    42   any
          15    32    42   any
          34    46    42   any

  static {};
    Code:
       0: ldc           #2                  // class org/xnio/streams/BufferPipeOutputStream
       2: invokevirtual #141                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #46                 // Field $assertionsDisabled:Z
      16: return
}
