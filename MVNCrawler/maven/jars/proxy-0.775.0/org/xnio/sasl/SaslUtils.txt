Compiled from "SaslUtils.java"
public final class org.xnio.sasl.SaslUtils {
  public static final byte[] EMPTY_BYTES;

  private org.xnio.sasl.SaslUtils();
    Code:
       0: aload_0
       1: invokespecial #13                 // Method java/lang/Object."<init>":()V
       4: return

  public static java.util.Iterator<javax.security.sasl.SaslServerFactory> getSaslServerFactories(java.lang.ClassLoader, boolean);
    Code:
       0: ldc           #20                 // class javax/security/sasl/SaslServerFactory
       2: aload_0
       3: iload_1
       4: invokestatic  #24                 // Method getFactories:(Ljava/lang/Class;Ljava/lang/ClassLoader;Z)Ljava/util/Iterator;
       7: areturn

  public static java.util.Iterator<javax.security.sasl.SaslServerFactory> getSaslServerFactories();
    Code:
       0: ldc           #20                 // class javax/security/sasl/SaslServerFactory
       2: aconst_null
       3: iconst_1
       4: invokestatic  #24                 // Method getFactories:(Ljava/lang/Class;Ljava/lang/ClassLoader;Z)Ljava/util/Iterator;
       7: areturn

  public static java.util.Iterator<javax.security.sasl.SaslClientFactory> getSaslClientFactories(java.lang.ClassLoader, boolean);
    Code:
       0: ldc           #34                 // class javax/security/sasl/SaslClientFactory
       2: aload_0
       3: iload_1
       4: invokestatic  #24                 // Method getFactories:(Ljava/lang/Class;Ljava/lang/ClassLoader;Z)Ljava/util/Iterator;
       7: areturn

  public static java.util.Iterator<javax.security.sasl.SaslClientFactory> getSaslClientFactories();
    Code:
       0: ldc           #34                 // class javax/security/sasl/SaslClientFactory
       2: aconst_null
       3: iconst_1
       4: invokestatic  #24                 // Method getFactories:(Ljava/lang/Class;Ljava/lang/ClassLoader;Z)Ljava/util/Iterator;
       7: areturn

  private static <T> java.util.Iterator<T> getFactories(java.lang.Class<T>, java.lang.ClassLoader, boolean);
    Code:
       0: new           #46                 // class java/util/LinkedHashSet
       3: dup
       4: invokespecial #47                 // Method java/util/LinkedHashSet."<init>":()V
       7: astore_3
       8: aload_0
       9: aload_1
      10: invokestatic  #53                 // Method java/util/ServiceLoader.load:(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/ServiceLoader;
      13: astore        4
      15: aload         4
      17: invokevirtual #56                 // Method java/util/ServiceLoader.iterator:()Ljava/util/Iterator;
      20: astore        5
      22: aload         5
      24: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          53
      32: aload         5
      34: invokeinterface #68,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: astore        6
      41: aload_3
      42: aload         6
      44: invokeinterface #72,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      49: pop
      50: goto          22
      53: iload_2
      54: ifeq          304
      57: new           #74                 // class java/util/HashSet
      60: dup
      61: invokespecial #75                 // Method java/util/HashSet."<init>":()V
      64: astore        5
      66: new           #77                 // class java/lang/StringBuilder
      69: dup
      70: invokespecial #78                 // Method java/lang/StringBuilder."<init>":()V
      73: aload_0
      74: invokevirtual #84                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      77: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: ldc           #90                 // String .
      82: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: invokevirtual #93                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      88: astore        6
      90: invokestatic  #99                 // Method java/security/Security.getProviders:()[Ljava/security/Provider;
      93: astore        7
      95: invokestatic  #105                // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
      98: astore        8
     100: aload         7
     102: astore        9
     104: aload         9
     106: arraylength
     107: istore        10
     109: iconst_0
     110: istore        11
     112: iload         11
     114: iload         10
     116: if_icmpge     304
     119: aload         9
     121: iload         11
     123: aaload
     124: astore        12
     126: aload         8
     128: ifnonnull     142
     131: aload         12
     133: invokevirtual #117                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     136: invokevirtual #121                // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
     139: goto          157
     142: new           #7                  // class org/xnio/sasl/SaslUtils$1
     145: dup
     146: aload         12
     148: invokespecial #126                // Method org/xnio/sasl/SaslUtils$1."<init>":(Ljava/security/Provider;)V
     151: invokestatic  #132                // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
     154: checkcast     #107                // class java/lang/ClassLoader
     157: astore        13
     159: aload         12
     161: invokevirtual #136                // Method java/security/Provider.keySet:()Ljava/util/Set;
     164: invokeinterface #137,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     169: astore        14
     171: aload         14
     173: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     178: ifeq          298
     181: aload         14
     183: invokeinterface #68,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     188: astore        15
     190: aload         15
     192: instanceof    #109                // class java/lang/String
     195: ifeq          295
     198: aload         15
     200: checkcast     #109                // class java/lang/String
     203: aload         6
     205: invokevirtual #141                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     208: ifeq          295
     211: aload         15
     213: checkcast     #109                // class java/lang/String
     216: bipush        32
     218: invokevirtual #145                // Method java/lang/String.indexOf:(I)I
     221: ifge          295
     224: aload         12
     226: aload         15
     228: checkcast     #109                // class java/lang/String
     231: invokevirtual #149                // Method java/security/Provider.getProperty:(Ljava/lang/String;)Ljava/lang/String;
     234: astore        16
     236: aload         16
     238: ifnull        295
     241: aload         5
     243: aload         16
     245: invokeinterface #72,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     250: ifeq          295
     253: aload_3
     254: aload         16
     256: iconst_1
     257: aload         13
     259: invokestatic  #153                // Method java/lang/Class.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;
     262: aload_0
     263: invokevirtual #157                // Method java/lang/Class.asSubclass:(Ljava/lang/Class;)Ljava/lang/Class;
     266: invokevirtual #160                // Method java/lang/Class.newInstance:()Ljava/lang/Object;
     269: invokeinterface #72,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     274: pop
     275: goto          295
     278: astore        17
     280: goto          295
     283: astore        17
     285: goto          295
     288: astore        17
     290: goto          295
     293: astore        17
     295: goto          171
     298: iinc          11, 1
     301: goto          112
     304: aload_3
     305: invokeinterface #137,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     310: areturn
    Exception table:
       from    to  target type
         253   275   278   Class java/lang/ClassNotFoundException
         253   275   283   Class java/lang/ClassCastException
         253   275   288   Class java/lang/InstantiationException
         253   275   293   Class java/lang/IllegalAccessException

  public static boolean evaluateChallenge(javax.security.sasl.SaslClient, java.nio.ByteBuffer, java.nio.ByteBuffer) throws javax.security.sasl.SaslException;
    Code:
       0: aload_0
       1: aload_2
       2: invokestatic  #191                // Method evaluateChallenge:(Ljavax/security/sasl/SaslClient;Ljava/nio/ByteBuffer;)[B
       5: astore_3
       6: aload_3
       7: ifnull        31
      10: aload_1
      11: ifnonnull     23
      14: getstatic     #197                // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      17: invokeinterface #201,  1          // InterfaceMethod org/xnio/_private/Messages.extraChallenge:()Ljavax/security/sasl/SaslException;
      22: athrow
      23: aload_1
      24: aload_3
      25: invokevirtual #208                // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
      28: pop
      29: iconst_0
      30: ireturn
      31: iconst_1
      32: ireturn

  public static byte[] evaluateChallenge(javax.security.sasl.SaslClient, java.nio.ByteBuffer) throws javax.security.sasl.SaslException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #220                // Method org/xnio/Buffers.take:(Ljava/nio/ByteBuffer;)[B
       5: invokeinterface #225,  2          // InterfaceMethod javax/security/sasl/SaslClient.evaluateChallenge:([B)[B
      10: areturn

  public static boolean evaluateResponse(javax.security.sasl.SaslServer, java.nio.ByteBuffer, java.nio.ByteBuffer) throws javax.security.sasl.SaslException;
    Code:
       0: aload_0
       1: aload_2
       2: invokestatic  #230                // Method evaluateResponse:(Ljavax/security/sasl/SaslServer;Ljava/nio/ByteBuffer;)[B
       5: astore_3
       6: aload_3
       7: ifnull        36
      10: aload_1
      11: ifnonnull     23
      14: getstatic     #197                // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      17: invokeinterface #233,  1          // InterfaceMethod org/xnio/_private/Messages.extraResponse:()Ljavax/security/sasl/SaslException;
      22: athrow
      23: aload_1
      24: aload_3
      25: invokevirtual #208                // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
      28: pop
      29: aload_0
      30: invokeinterface #238,  1          // InterfaceMethod javax/security/sasl/SaslServer.isComplete:()Z
      35: ireturn
      36: iconst_1
      37: ireturn

  public static byte[] evaluateResponse(javax.security.sasl.SaslServer, java.nio.ByteBuffer) throws javax.security.sasl.SaslException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #243                // Method java/nio/ByteBuffer.hasRemaining:()Z
       5: ifeq          15
       8: aload_1
       9: invokestatic  #220                // Method org/xnio/Buffers.take:(Ljava/nio/ByteBuffer;)[B
      12: goto          18
      15: getstatic     #245                // Field EMPTY_BYTES:[B
      18: invokeinterface #247,  2          // InterfaceMethod javax/security/sasl/SaslServer.evaluateResponse:([B)[B
      23: areturn

  public static void wrap(javax.security.sasl.SaslClient, java.nio.ByteBuffer, java.nio.ByteBuffer) throws javax.security.sasl.SaslException;
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokestatic  #251                // Method wrap:(Ljavax/security/sasl/SaslClient;Ljava/nio/ByteBuffer;)[B
       6: invokevirtual #208                // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
       9: pop
      10: return

  public static byte[] wrap(javax.security.sasl.SaslClient, java.nio.ByteBuffer) throws javax.security.sasl.SaslException;
    Code:
       0: aload_1
       1: invokevirtual #255                // Method java/nio/ByteBuffer.remaining:()I
       4: istore_3
       5: iload_3
       6: ifne          24
       9: aload_0
      10: getstatic     #245                // Field EMPTY_BYTES:[B
      13: iconst_0
      14: iload_3
      15: invokeinterface #258,  4          // InterfaceMethod javax/security/sasl/SaslClient.wrap:([BII)[B
      20: astore_2
      21: goto          83
      24: aload_1
      25: invokevirtual #261                // Method java/nio/ByteBuffer.hasArray:()Z
      28: ifeq          69
      31: aload_1
      32: invokevirtual #265                // Method java/nio/ByteBuffer.array:()[B
      35: astore        4
      37: aload_1
      38: invokevirtual #268                // Method java/nio/ByteBuffer.arrayOffset:()I
      41: istore        5
      43: aload_1
      44: aload_1
      45: invokevirtual #271                // Method java/nio/ByteBuffer.position:()I
      48: iload_3
      49: iadd
      50: invokevirtual #274                // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      53: pop
      54: aload_0
      55: aload         4
      57: iload         5
      59: iload_3
      60: invokeinterface #258,  4          // InterfaceMethod javax/security/sasl/SaslClient.wrap:([BII)[B
      65: astore_2
      66: goto          83
      69: aload_0
      70: aload_1
      71: iload_3
      72: invokestatic  #277                // Method org/xnio/Buffers.take:(Ljava/nio/ByteBuffer;I)[B
      75: iconst_0
      76: iload_3
      77: invokeinterface #258,  4          // InterfaceMethod javax/security/sasl/SaslClient.wrap:([BII)[B
      82: astore_2
      83: aload_2
      84: areturn

  public static void wrap(javax.security.sasl.SaslServer, java.nio.ByteBuffer, java.nio.ByteBuffer) throws javax.security.sasl.SaslException;
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokestatic  #283                // Method wrap:(Ljavax/security/sasl/SaslServer;Ljava/nio/ByteBuffer;)[B
       6: invokevirtual #208                // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
       9: pop
      10: return

  public static byte[] wrap(javax.security.sasl.SaslServer, java.nio.ByteBuffer) throws javax.security.sasl.SaslException;
    Code:
       0: aload_1
       1: invokevirtual #255                // Method java/nio/ByteBuffer.remaining:()I
       4: istore_3
       5: iload_3
       6: ifne          24
       9: aload_0
      10: getstatic     #245                // Field EMPTY_BYTES:[B
      13: iconst_0
      14: iload_3
      15: invokeinterface #284,  4          // InterfaceMethod javax/security/sasl/SaslServer.wrap:([BII)[B
      20: astore_2
      21: goto          83
      24: aload_1
      25: invokevirtual #261                // Method java/nio/ByteBuffer.hasArray:()Z
      28: ifeq          69
      31: aload_1
      32: invokevirtual #265                // Method java/nio/ByteBuffer.array:()[B
      35: astore        4
      37: aload_1
      38: invokevirtual #268                // Method java/nio/ByteBuffer.arrayOffset:()I
      41: istore        5
      43: aload_1
      44: aload_1
      45: invokevirtual #271                // Method java/nio/ByteBuffer.position:()I
      48: iload_3
      49: iadd
      50: invokevirtual #274                // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      53: pop
      54: aload_0
      55: aload         4
      57: iload         5
      59: iload_3
      60: invokeinterface #284,  4          // InterfaceMethod javax/security/sasl/SaslServer.wrap:([BII)[B
      65: astore_2
      66: goto          83
      69: aload_0
      70: aload_1
      71: iload_3
      72: invokestatic  #277                // Method org/xnio/Buffers.take:(Ljava/nio/ByteBuffer;I)[B
      75: iconst_0
      76: iload_3
      77: invokeinterface #284,  4          // InterfaceMethod javax/security/sasl/SaslServer.wrap:([BII)[B
      82: astore_2
      83: aload_2
      84: areturn

  public static void unwrap(javax.security.sasl.SaslClient, java.nio.ByteBuffer, java.nio.ByteBuffer) throws javax.security.sasl.SaslException;
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokestatic  #287                // Method unwrap:(Ljavax/security/sasl/SaslClient;Ljava/nio/ByteBuffer;)[B
       6: invokevirtual #208                // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
       9: pop
      10: return

  public static byte[] unwrap(javax.security.sasl.SaslClient, java.nio.ByteBuffer) throws javax.security.sasl.SaslException;
    Code:
       0: aload_1
       1: invokevirtual #255                // Method java/nio/ByteBuffer.remaining:()I
       4: istore_3
       5: iload_3
       6: ifne          24
       9: aload_0
      10: getstatic     #245                // Field EMPTY_BYTES:[B
      13: iconst_0
      14: iload_3
      15: invokeinterface #289,  4          // InterfaceMethod javax/security/sasl/SaslClient.unwrap:([BII)[B
      20: astore_2
      21: goto          83
      24: aload_1
      25: invokevirtual #261                // Method java/nio/ByteBuffer.hasArray:()Z
      28: ifeq          69
      31: aload_1
      32: invokevirtual #265                // Method java/nio/ByteBuffer.array:()[B
      35: astore        4
      37: aload_1
      38: invokevirtual #268                // Method java/nio/ByteBuffer.arrayOffset:()I
      41: istore        5
      43: aload_1
      44: aload_1
      45: invokevirtual #271                // Method java/nio/ByteBuffer.position:()I
      48: iload_3
      49: iadd
      50: invokevirtual #274                // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      53: pop
      54: aload_0
      55: aload         4
      57: iload         5
      59: iload_3
      60: invokeinterface #289,  4          // InterfaceMethod javax/security/sasl/SaslClient.unwrap:([BII)[B
      65: astore_2
      66: goto          83
      69: aload_0
      70: aload_1
      71: iload_3
      72: invokestatic  #277                // Method org/xnio/Buffers.take:(Ljava/nio/ByteBuffer;I)[B
      75: iconst_0
      76: iload_3
      77: invokeinterface #289,  4          // InterfaceMethod javax/security/sasl/SaslClient.unwrap:([BII)[B
      82: astore_2
      83: aload_2
      84: areturn

  public static void unwrap(javax.security.sasl.SaslServer, java.nio.ByteBuffer, java.nio.ByteBuffer) throws javax.security.sasl.SaslException;
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokestatic  #291                // Method unwrap:(Ljavax/security/sasl/SaslServer;Ljava/nio/ByteBuffer;)[B
       6: invokevirtual #208                // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
       9: pop
      10: return

  public static byte[] unwrap(javax.security.sasl.SaslServer, java.nio.ByteBuffer) throws javax.security.sasl.SaslException;
    Code:
       0: aload_1
       1: invokevirtual #255                // Method java/nio/ByteBuffer.remaining:()I
       4: istore_3
       5: iload_3
       6: ifne          24
       9: aload_0
      10: getstatic     #245                // Field EMPTY_BYTES:[B
      13: iconst_0
      14: iload_3
      15: invokeinterface #292,  4          // InterfaceMethod javax/security/sasl/SaslServer.unwrap:([BII)[B
      20: astore_2
      21: goto          83
      24: aload_1
      25: invokevirtual #261                // Method java/nio/ByteBuffer.hasArray:()Z
      28: ifeq          69
      31: aload_1
      32: invokevirtual #265                // Method java/nio/ByteBuffer.array:()[B
      35: astore        4
      37: aload_1
      38: invokevirtual #268                // Method java/nio/ByteBuffer.arrayOffset:()I
      41: istore        5
      43: aload_1
      44: aload_1
      45: invokevirtual #271                // Method java/nio/ByteBuffer.position:()I
      48: iload_3
      49: iadd
      50: invokevirtual #274                // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      53: pop
      54: aload_0
      55: aload         4
      57: iload         5
      59: iload_3
      60: invokeinterface #292,  4          // InterfaceMethod javax/security/sasl/SaslServer.unwrap:([BII)[B
      65: astore_2
      66: goto          83
      69: aload_0
      70: aload_1
      71: iload_3
      72: invokestatic  #277                // Method org/xnio/Buffers.take:(Ljava/nio/ByteBuffer;I)[B
      75: iconst_0
      76: iload_3
      77: invokeinterface #292,  4          // InterfaceMethod javax/security/sasl/SaslServer.unwrap:([BII)[B
      82: astore_2
      83: aload_2
      84: areturn

  public static java.util.Map<java.lang.String, java.lang.Object> createPropertyMap(org.xnio.OptionMap, boolean);
    Code:
       0: new           #297                // class java/util/HashMap
       3: dup
       4: invokespecial #298                // Method java/util/HashMap."<init>":()V
       7: astore_2
       8: aload_0
       9: getstatic     #304                // Field org/xnio/Options.SASL_POLICY_FORWARD_SECRECY:Lorg/xnio/Option;
      12: aload_2
      13: ldc_w         #306                // String javax.security.sasl.policy.forward
      16: aconst_null
      17: invokestatic  #309                // Method add:(Lorg/xnio/OptionMap;Lorg/xnio/Option;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;)V
      20: aload_0
      21: getstatic     #312                // Field org/xnio/Options.SASL_POLICY_NOACTIVE:Lorg/xnio/Option;
      24: aload_2
      25: ldc_w         #314                // String javax.security.sasl.policy.noactive
      28: aconst_null
      29: invokestatic  #309                // Method add:(Lorg/xnio/OptionMap;Lorg/xnio/Option;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;)V
      32: aload_0
      33: getstatic     #317                // Field org/xnio/Options.SASL_POLICY_NOANONYMOUS:Lorg/xnio/Option;
      36: aload_2
      37: ldc_w         #319                // String javax.security.sasl.policy.noanonymous
      40: getstatic     #325                // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      43: invokestatic  #309                // Method add:(Lorg/xnio/OptionMap;Lorg/xnio/Option;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;)V
      46: aload_0
      47: getstatic     #328                // Field org/xnio/Options.SASL_POLICY_NODICTIONARY:Lorg/xnio/Option;
      50: aload_2
      51: ldc_w         #330                // String javax.security.sasl.policy.nodictionary
      54: aconst_null
      55: invokestatic  #309                // Method add:(Lorg/xnio/OptionMap;Lorg/xnio/Option;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;)V
      58: aload_0
      59: getstatic     #333                // Field org/xnio/Options.SASL_POLICY_NOPLAINTEXT:Lorg/xnio/Option;
      62: aload_2
      63: ldc_w         #335                // String javax.security.sasl.policy.noplaintext
      66: iload_1
      67: ifne          74
      70: iconst_1
      71: goto          75
      74: iconst_0
      75: invokestatic  #345                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      78: invokestatic  #309                // Method add:(Lorg/xnio/OptionMap;Lorg/xnio/Option;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;)V
      81: aload_0
      82: getstatic     #348                // Field org/xnio/Options.SASL_POLICY_PASS_CREDENTIALS:Lorg/xnio/Option;
      85: aload_2
      86: ldc_w         #350                // String javax.security.sasl.policy.credentials
      89: aconst_null
      90: invokestatic  #309                // Method add:(Lorg/xnio/OptionMap;Lorg/xnio/Option;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;)V
      93: aload_0
      94: getstatic     #353                // Field org/xnio/Options.SASL_REUSE:Lorg/xnio/Option;
      97: aload_2
      98: ldc_w         #355                // String javax.security.sasl.reuse
     101: aconst_null
     102: invokestatic  #309                // Method add:(Lorg/xnio/OptionMap;Lorg/xnio/Option;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;)V
     105: aload_0
     106: getstatic     #358                // Field org/xnio/Options.SASL_SERVER_AUTH:Lorg/xnio/Option;
     109: aload_2
     110: ldc_w         #360                // String javax.security.sasl.server.authentication
     113: aconst_null
     114: invokestatic  #309                // Method add:(Lorg/xnio/OptionMap;Lorg/xnio/Option;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;)V
     117: aload_0
     118: getstatic     #363                // Field org/xnio/Options.SASL_QOP:Lorg/xnio/Option;
     121: aload_2
     122: ldc_w         #365                // String javax.security.sasl.qop
     125: invokestatic  #369                // Method addQopList:(Lorg/xnio/OptionMap;Lorg/xnio/Option;Ljava/util/Map;Ljava/lang/String;)V
     128: aload_0
     129: getstatic     #372                // Field org/xnio/Options.SASL_STRENGTH:Lorg/xnio/Option;
     132: aload_2
     133: ldc_w         #374                // String javax.security.sasl.strength
     136: aconst_null
     137: invokestatic  #309                // Method add:(Lorg/xnio/OptionMap;Lorg/xnio/Option;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;)V
     140: aload_0
     141: getstatic     #377                // Field org/xnio/Options.SASL_PROPERTIES:Lorg/xnio/Option;
     144: aload_2
     145: invokestatic  #381                // Method addSaslProperties:(Lorg/xnio/OptionMap;Lorg/xnio/Option;Ljava/util/Map;)V
     148: aload_2
     149: areturn

  private static <T> void add(org.xnio.OptionMap, org.xnio.Option<T>, java.util.Map<java.lang.String, java.lang.Object>, java.lang.String, T);
    Code:
       0: aload_0
       1: aload_1
       2: aload         4
       4: invokevirtual #392                // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Ljava/lang/Object;)Ljava/lang/Object;
       7: astore        5
       9: aload         5
      11: ifnull        33
      14: aload_2
      15: aload_3
      16: aload         5
      18: invokevirtual #393                // Method java/lang/Object.toString:()Ljava/lang/String;
      21: getstatic     #399                // Field java/util/Locale.US:Ljava/util/Locale;
      24: invokevirtual #403                // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      27: invokeinterface #406,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      32: pop
      33: return

  private static void addQopList(org.xnio.OptionMap, org.xnio.Option<org.xnio.Sequence<org.xnio.sasl.SaslQop>>, java.util.Map<java.lang.String, java.lang.Object>, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #416                // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;)Ljava/lang/Object;
       5: checkcast     #418                // class org/xnio/Sequence
       8: astore        4
      10: aload         4
      12: ifnonnull     16
      15: return
      16: aload         4
      18: astore        5
      20: new           #77                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #78                 // Method java/lang/StringBuilder."<init>":()V
      27: astore        6
      29: aload         5
      31: invokevirtual #419                // Method org/xnio/Sequence.iterator:()Ljava/util/Iterator;
      34: astore        7
      36: aload         7
      38: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      43: ifne          47
      46: return
      47: aload         6
      49: aload         7
      51: invokeinterface #68,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      56: checkcast     #421                // class org/xnio/sasl/SaslQop
      59: invokevirtual #424                // Method org/xnio/sasl/SaslQop.getString:()Ljava/lang/String;
      62: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: pop
      66: aload         7
      68: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      73: ifeq          84
      76: aload         6
      78: bipush        44
      80: invokevirtual #427                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      83: pop
      84: aload         7
      86: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      91: ifne          47
      94: aload_2
      95: aload_3
      96: aload         6
      98: invokevirtual #93                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     101: invokeinterface #406,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     106: pop
     107: return

  private static void addSaslProperties(org.xnio.OptionMap, org.xnio.Option<org.xnio.Sequence<org.xnio.Property>>, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #416                // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;)Ljava/lang/Object;
       5: checkcast     #418                // class org/xnio/Sequence
       8: astore_3
       9: aload_3
      10: ifnonnull     14
      13: return
      14: aload_3
      15: invokevirtual #419                // Method org/xnio/Sequence.iterator:()Ljava/util/Iterator;
      18: astore        4
      20: aload         4
      22: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          62
      30: aload         4
      32: invokeinterface #68,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #438                // class org/xnio/Property
      40: astore        5
      42: aload_2
      43: aload         5
      45: invokevirtual #441                // Method org/xnio/Property.getKey:()Ljava/lang/String;
      48: aload         5
      50: invokevirtual #444                // Method org/xnio/Property.getValue:()Ljava/lang/Object;
      53: invokeinterface #406,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      58: pop
      59: goto          20
      62: return

  static {};
    Code:
       0: iconst_0
       1: newarray       byte
       3: putstatic     #245                // Field EMPTY_BYTES:[B
       6: return
}
