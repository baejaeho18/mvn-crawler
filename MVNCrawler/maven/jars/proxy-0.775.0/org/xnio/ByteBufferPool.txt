Compiled from "ByteBufferPool.java"
public abstract class org.xnio.ByteBufferPool {
  private static final boolean sliceLargeBuffers;

  private final java.util.concurrent.ConcurrentLinkedQueue<java.nio.ByteBuffer> masterQueue;

  private final java.lang.ThreadLocal<org.xnio.ByteBufferPool$Cache> threadLocalCache;

  private final org.xnio.ByteBufferPool$Cache defaultCache;

  private final int size;

  private final boolean direct;

  public static final int LARGE_SIZE;

  public static final int MEDIUM_SIZE;

  public static final int SMALL_SIZE;

  static final int CACHE_LINE_SIZE;

  public static final org.xnio.ByteBufferPool LARGE_DIRECT;

  public static final org.xnio.ByteBufferPool MEDIUM_DIRECT;

  public static final org.xnio.ByteBufferPool SMALL_DIRECT;

  public static final org.xnio.ByteBufferPool LARGE_HEAP;

  public static final org.xnio.ByteBufferPool MEDIUM_HEAP;

  public static final org.xnio.ByteBufferPool SMALL_HEAP;

  static final boolean $assertionsDisabled;

  org.xnio.ByteBufferPool(int, boolean);
    Code:
       0: aload_0
       1: invokespecial #65                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #67                 // class java/util/concurrent/ConcurrentLinkedQueue
       8: dup
       9: invokespecial #68                 // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      12: putfield      #70                 // Field masterQueue:Ljava/util/concurrent/ConcurrentLinkedQueue;
      15: aload_0
      16: aload_0
      17: invokedynamic #89,  0             // InvokeDynamic #0:get:(Lorg/xnio/ByteBufferPool;)Ljava/util/function/Supplier;
      22: invokestatic  #95                 // Method java/lang/ThreadLocal.withInitial:(Ljava/util/function/Supplier;)Ljava/lang/ThreadLocal;
      25: putfield      #97                 // Field threadLocalCache:Ljava/lang/ThreadLocal;
      28: aload_0
      29: new           #7                  // class org/xnio/ByteBufferPool$DefaultCache
      32: dup
      33: aload_0
      34: invokespecial #100                // Method org/xnio/ByteBufferPool$DefaultCache."<init>":(Lorg/xnio/ByteBufferPool;)V
      37: putfield      #102                // Field defaultCache:Lorg/xnio/ByteBufferPool$Cache;
      40: getstatic     #104                // Field $assertionsDisabled:Z
      43: ifne          62
      46: iload_1
      47: invokestatic  #110                // Method java/lang/Integer.bitCount:(I)I
      50: iconst_1
      51: if_icmpeq     62
      54: new           #112                // class java/lang/AssertionError
      57: dup
      58: invokespecial #113                // Method java/lang/AssertionError."<init>":()V
      61: athrow
      62: getstatic     #104                // Field $assertionsDisabled:Z
      65: ifne          82
      68: iload_1
      69: bipush        16
      71: if_icmpge     82
      74: new           #112                // class java/lang/AssertionError
      77: dup
      78: invokespecial #113                // Method java/lang/AssertionError."<init>":()V
      81: athrow
      82: getstatic     #104                // Field $assertionsDisabled:Z
      85: ifne          102
      88: iload_1
      89: ldc           #114                // int 1073741824
      91: if_icmple     102
      94: new           #112                // class java/lang/AssertionError
      97: dup
      98: invokespecial #113                // Method java/lang/AssertionError."<init>":()V
     101: athrow
     102: aload_0
     103: iload_1
     104: putfield      #116                // Field size:I
     107: aload_0
     108: iload_2
     109: putfield      #118                // Field direct:Z
     112: return

  public java.nio.ByteBuffer allocate();
    Code:
       0: aload_0
       1: getfield      #97                 // Field threadLocalCache:Ljava/lang/ThreadLocal;
       4: invokevirtual #123                // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       7: checkcast     #19                 // class org/xnio/ByteBufferPool$Cache
      10: invokeinterface #125,  1          // InterfaceMethod org/xnio/ByteBufferPool$Cache.allocate:()Ljava/nio/ByteBuffer;
      15: areturn

  public void allocate(java.nio.ByteBuffer[], int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_1
       4: arraylength
       5: iload_2
       6: isub
       7: invokevirtual #129                // Method allocate:([Ljava/nio/ByteBuffer;II)V
      10: return

  public void allocate(java.nio.ByteBuffer[], int, int);
    Code:
       0: ldc           #133                // String array
       2: aload_1
       3: invokestatic  #139                // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_1
       8: iload_2
       9: iload_3
      10: invokestatic  #143                // Method org/wildfly/common/Assert.checkArrayBounds:([Ljava/lang/Object;II)V
      13: iconst_0
      14: istore        4
      16: iload         4
      18: iload_3
      19: if_icmpge     38
      22: aload_1
      23: iload_2
      24: iload         4
      26: iadd
      27: aload_0
      28: invokevirtual #144                // Method allocate:()Ljava/nio/ByteBuffer;
      31: aastore
      32: iinc          4, 1
      35: goto          16
      38: return

  public static void free(java.nio.ByteBuffer);
    Code:
       0: ldc           #150                // String buffer
       2: aload_0
       3: invokestatic  #139                // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: invokevirtual #156                // Method java/nio/ByteBuffer.capacity:()I
      11: istore_1
      12: iload_1
      13: invokestatic  #110                // Method java/lang/Integer.bitCount:(I)I
      16: iconst_1
      17: if_icmpne     129
      20: aload_0
      21: invokevirtual #160                // Method java/nio/ByteBuffer.isReadOnly:()Z
      24: ifne          129
      27: aload_0
      28: invokevirtual #163                // Method java/nio/ByteBuffer.isDirect:()Z
      31: ifeq          83
      34: iload_1
      35: sipush        8192
      38: if_icmpne     51
      41: getstatic     #165                // Field MEDIUM_DIRECT:Lorg/xnio/ByteBufferPool;
      44: aload_0
      45: invokevirtual #168                // Method doFree:(Ljava/nio/ByteBuffer;)V
      48: goto          129
      51: iload_1
      52: bipush        64
      54: if_icmpne     67
      57: getstatic     #170                // Field SMALL_DIRECT:Lorg/xnio/ByteBufferPool;
      60: aload_0
      61: invokevirtual #168                // Method doFree:(Ljava/nio/ByteBuffer;)V
      64: goto          129
      67: iload_1
      68: ldc           #47                 // int 1048576
      70: if_icmpne     129
      73: getstatic     #172                // Field LARGE_DIRECT:Lorg/xnio/ByteBufferPool;
      76: aload_0
      77: invokevirtual #168                // Method doFree:(Ljava/nio/ByteBuffer;)V
      80: goto          129
      83: iload_1
      84: sipush        8192
      87: if_icmpne     100
      90: getstatic     #174                // Field MEDIUM_HEAP:Lorg/xnio/ByteBufferPool;
      93: aload_0
      94: invokevirtual #168                // Method doFree:(Ljava/nio/ByteBuffer;)V
      97: goto          129
     100: iload_1
     101: bipush        64
     103: if_icmpne     116
     106: getstatic     #176                // Field SMALL_HEAP:Lorg/xnio/ByteBufferPool;
     109: aload_0
     110: invokevirtual #168                // Method doFree:(Ljava/nio/ByteBuffer;)V
     113: goto          129
     116: iload_1
     117: ldc           #47                 // int 1048576
     119: if_icmpne     129
     122: getstatic     #178                // Field LARGE_HEAP:Lorg/xnio/ByteBufferPool;
     125: aload_0
     126: invokevirtual #168                // Method doFree:(Ljava/nio/ByteBuffer;)V
     129: return

  public static void free(java.nio.ByteBuffer[], int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #143                // Method org/wildfly/common/Assert.checkArrayBounds:([Ljava/lang/Object;II)V
       6: iconst_0
       7: istore_3
       8: iload_3
       9: iload_2
      10: if_icmpge     187
      13: aload_0
      14: iload_1
      15: iload_3
      16: iadd
      17: aaload
      18: astore        4
      20: aload         4
      22: ifnonnull     28
      25: goto          181
      28: aload         4
      30: invokevirtual #156                // Method java/nio/ByteBuffer.capacity:()I
      33: istore        5
      35: iload         5
      37: invokestatic  #110                // Method java/lang/Integer.bitCount:(I)I
      40: iconst_1
      41: if_icmpne     175
      44: aload         4
      46: invokevirtual #160                // Method java/nio/ByteBuffer.isReadOnly:()Z
      49: ifne          175
      52: aload         4
      54: invokevirtual #163                // Method java/nio/ByteBuffer.isDirect:()Z
      57: ifeq          123
      60: aload         4
      62: instanceof    #181                // class java/nio/MappedByteBuffer
      65: ifne          175
      68: iload         5
      70: sipush        8192
      73: if_icmpne     87
      76: getstatic     #165                // Field MEDIUM_DIRECT:Lorg/xnio/ByteBufferPool;
      79: aload         4
      81: invokevirtual #168                // Method doFree:(Ljava/nio/ByteBuffer;)V
      84: goto          175
      87: iload         5
      89: bipush        64
      91: if_icmpne     105
      94: getstatic     #170                // Field SMALL_DIRECT:Lorg/xnio/ByteBufferPool;
      97: aload         4
      99: invokevirtual #168                // Method doFree:(Ljava/nio/ByteBuffer;)V
     102: goto          175
     105: iload         5
     107: ldc           #47                 // int 1048576
     109: if_icmpne     175
     112: getstatic     #172                // Field LARGE_DIRECT:Lorg/xnio/ByteBufferPool;
     115: aload         4
     117: invokevirtual #168                // Method doFree:(Ljava/nio/ByteBuffer;)V
     120: goto          175
     123: iload         5
     125: sipush        8192
     128: if_icmpne     142
     131: getstatic     #174                // Field MEDIUM_HEAP:Lorg/xnio/ByteBufferPool;
     134: aload         4
     136: invokevirtual #168                // Method doFree:(Ljava/nio/ByteBuffer;)V
     139: goto          175
     142: iload         5
     144: bipush        64
     146: if_icmpne     160
     149: getstatic     #176                // Field SMALL_HEAP:Lorg/xnio/ByteBufferPool;
     152: aload         4
     154: invokevirtual #168                // Method doFree:(Ljava/nio/ByteBuffer;)V
     157: goto          175
     160: iload         5
     162: ldc           #47                 // int 1048576
     164: if_icmpne     175
     167: getstatic     #178                // Field LARGE_HEAP:Lorg/xnio/ByteBufferPool;
     170: aload         4
     172: invokevirtual #168                // Method doFree:(Ljava/nio/ByteBuffer;)V
     175: aload_0
     176: iload_1
     177: iload_3
     178: iadd
     179: aconst_null
     180: aastore
     181: iinc          3, 1
     184: goto          8
     187: return

  public static void zeroAndFree(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokestatic  #187                // Method org/xnio/Buffers.zero:(Ljava/nio/ByteBuffer;)V
       4: aload_0
       5: invokestatic  #189                // Method free:(Ljava/nio/ByteBuffer;)V
       8: return

  public boolean isDirect();
    Code:
       0: aload_0
       1: getfield      #118                // Field direct:Z
       4: ireturn

  public int getSize();
    Code:
       0: aload_0
       1: getfield      #116                // Field size:I
       4: ireturn

  public void flushCaches();
    Code:
       0: aload_0
       1: getfield      #97                 // Field threadLocalCache:Ljava/lang/ThreadLocal;
       4: invokevirtual #123                // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       7: checkcast     #19                 // class org/xnio/ByteBufferPool$Cache
      10: invokeinterface #194,  1          // InterfaceMethod org/xnio/ByteBufferPool$Cache.flush:()V
      15: return

  public static void flushAllCaches();
    Code:
       0: getstatic     #176                // Field SMALL_HEAP:Lorg/xnio/ByteBufferPool;
       3: invokevirtual #197                // Method flushCaches:()V
       6: getstatic     #174                // Field MEDIUM_HEAP:Lorg/xnio/ByteBufferPool;
       9: invokevirtual #197                // Method flushCaches:()V
      12: getstatic     #178                // Field LARGE_HEAP:Lorg/xnio/ByteBufferPool;
      15: invokevirtual #197                // Method flushCaches:()V
      18: getstatic     #170                // Field SMALL_DIRECT:Lorg/xnio/ByteBufferPool;
      21: invokevirtual #197                // Method flushCaches:()V
      24: getstatic     #165                // Field MEDIUM_DIRECT:Lorg/xnio/ByteBufferPool;
      27: invokevirtual #197                // Method flushCaches:()V
      30: getstatic     #172                // Field LARGE_DIRECT:Lorg/xnio/ByteBufferPool;
      33: invokevirtual #197                // Method flushCaches:()V
      36: return

  public <T, U, E extends java.lang.Exception> void acceptWithCacheEx(int, org.wildfly.common.function.ExceptionBiConsumer<T, U, E>, T, U) throws E;
    Code:
       0: ldc           #204                // String cacheSize
       2: iconst_0
       3: iload_1
       4: invokestatic  #208                // Method org/wildfly/common/Assert.checkMinimumParameter:(Ljava/lang/String;II)V
       7: ldc           #210                // String consumer
       9: aload_2
      10: invokestatic  #139                // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: getfield      #97                 // Field threadLocalCache:Ljava/lang/ThreadLocal;
      18: astore        5
      20: aload         5
      22: invokevirtual #123                // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      25: checkcast     #19                 // class org/xnio/ByteBufferPool$Cache
      28: astore        6
      30: iload_1
      31: ifne          44
      34: aload_2
      35: aload_3
      36: aload         4
      38: invokeinterface #216,  3          // InterfaceMethod org/wildfly/common/function/ExceptionBiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
      43: return
      44: iload_1
      45: bipush        64
      47: if_icmpgt     150
      50: iload_1
      51: iconst_1
      52: if_icmpne     69
      55: new           #16                 // class org/xnio/ByteBufferPool$OneCache
      58: dup
      59: aload         6
      61: invokespecial #219                // Method org/xnio/ByteBufferPool$OneCache."<init>":(Lorg/xnio/ByteBufferPool$Cache;)V
      64: astore        7
      66: goto          100
      69: iload_1
      70: iconst_2
      71: if_icmpne     88
      74: new           #13                 // class org/xnio/ByteBufferPool$TwoCache
      77: dup
      78: aload         6
      80: invokespecial #220                // Method org/xnio/ByteBufferPool$TwoCache."<init>":(Lorg/xnio/ByteBufferPool$Cache;)V
      83: astore        7
      85: goto          100
      88: new           #10                 // class org/xnio/ByteBufferPool$MultiCache
      91: dup
      92: aload         6
      94: iload_1
      95: invokespecial #223                // Method org/xnio/ByteBufferPool$MultiCache."<init>":(Lorg/xnio/ByteBufferPool$Cache;I)V
      98: astore        7
     100: aload         5
     102: aload         7
     104: invokevirtual #227                // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
     107: aload_2
     108: aload_3
     109: aload         4
     111: invokeinterface #216,  3          // InterfaceMethod org/wildfly/common/function/ExceptionBiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
     116: aload         5
     118: aload         6
     120: invokevirtual #227                // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
     123: aload         7
     125: invokeinterface #230,  1          // InterfaceMethod org/xnio/ByteBufferPool$Cache.destroy:()V
     130: return
     131: astore        8
     133: aload         5
     135: aload         6
     137: invokevirtual #227                // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
     140: aload         7
     142: invokeinterface #230,  1          // InterfaceMethod org/xnio/ByteBufferPool$Cache.destroy:()V
     147: aload         8
     149: athrow
     150: new           #10                 // class org/xnio/ByteBufferPool$MultiCache
     153: dup
     154: aload         6
     156: bipush        64
     158: invokespecial #223                // Method org/xnio/ByteBufferPool$MultiCache."<init>":(Lorg/xnio/ByteBufferPool$Cache;I)V
     161: astore        7
     163: aload         5
     165: aload         7
     167: invokevirtual #227                // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
     170: aload_0
     171: iload_1
     172: bipush        64
     174: isub
     175: aload_2
     176: aload_3
     177: aload         4
     179: invokevirtual #234                // Method acceptWithCacheEx:(ILorg/wildfly/common/function/ExceptionBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)V
     182: aload         7
     184: invokeinterface #230,  1          // InterfaceMethod org/xnio/ByteBufferPool$Cache.destroy:()V
     189: return
     190: astore        9
     192: aload         7
     194: invokeinterface #230,  1          // InterfaceMethod org/xnio/ByteBufferPool$Cache.destroy:()V
     199: aload         9
     201: athrow
    Exception table:
       from    to  target type
         107   116   131   any
         131   133   131   any
         170   182   190   any
         190   192   190   any

  public <T, E extends java.lang.Exception> void acceptWithCacheEx(int, org.wildfly.common.function.ExceptionConsumer<T, E>, T) throws E;
    Code:
       0: ldc           #210                // String consumer
       2: aload_2
       3: invokestatic  #139                // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: iload_1
       9: invokestatic  #251                // Method org/wildfly/common/function/Functions.exceptionConsumerBiConsumer:()Lorg/wildfly/common/function/ExceptionBiConsumer;
      12: aload_2
      13: aload_3
      14: invokevirtual #234                // Method acceptWithCacheEx:(ILorg/wildfly/common/function/ExceptionBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)V
      17: return

  public <E extends java.lang.Exception> void runWithCacheEx(int, org.wildfly.common.function.ExceptionRunnable<E>) throws E;
    Code:
       0: ldc_w         #259                // String runnable
       3: aload_2
       4: invokestatic  #139                // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       7: pop
       8: aload_0
       9: iload_1
      10: invokestatic  #263                // Method org/wildfly/common/function/Functions.exceptionRunnableConsumer:()Lorg/wildfly/common/function/ExceptionConsumer;
      13: aload_2
      14: invokevirtual #265                // Method acceptWithCacheEx:(ILorg/wildfly/common/function/ExceptionConsumer;Ljava/lang/Object;)V
      17: return

  public void runWithCache(int, java.lang.Runnable);
    Code:
       0: ldc_w         #259                // String runnable
       3: aload_2
       4: invokestatic  #139                // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       7: pop
       8: aload_0
       9: iload_1
      10: invokedynamic #280,  0            // InvokeDynamic #1:accept:()Lorg/wildfly/common/function/ExceptionConsumer;
      15: aload_2
      16: invokevirtual #265                // Method acceptWithCacheEx:(ILorg/wildfly/common/function/ExceptionConsumer;Ljava/lang/Object;)V
      19: return

  public <T, U, R, E extends java.lang.Exception> R applyWithCacheEx(int, org.wildfly.common.function.ExceptionBiFunction<T, U, R, E>, T, U) throws E;
    Code:
       0: ldc           #204                // String cacheSize
       2: iconst_0
       3: iload_1
       4: invokestatic  #208                // Method org/wildfly/common/Assert.checkMinimumParameter:(Ljava/lang/String;II)V
       7: ldc_w         #286                // String function
      10: aload_2
      11: invokestatic  #139                // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: aload_0
      16: getfield      #97                 // Field threadLocalCache:Ljava/lang/ThreadLocal;
      19: astore        5
      21: aload         5
      23: invokevirtual #123                // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      26: checkcast     #19                 // class org/xnio/ByteBufferPool$Cache
      29: astore        6
      31: iload_1
      32: ifne          45
      35: aload_2
      36: aload_3
      37: aload         4
      39: invokeinterface #292,  3          // InterfaceMethod org/wildfly/common/function/ExceptionBiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      44: areturn
      45: iload_1
      46: bipush        64
      48: if_icmpgt     155
      51: iload_1
      52: iconst_1
      53: if_icmpne     70
      56: new           #16                 // class org/xnio/ByteBufferPool$OneCache
      59: dup
      60: aload         6
      62: invokespecial #219                // Method org/xnio/ByteBufferPool$OneCache."<init>":(Lorg/xnio/ByteBufferPool$Cache;)V
      65: astore        7
      67: goto          101
      70: iload_1
      71: iconst_2
      72: if_icmpne     89
      75: new           #13                 // class org/xnio/ByteBufferPool$TwoCache
      78: dup
      79: aload         6
      81: invokespecial #220                // Method org/xnio/ByteBufferPool$TwoCache."<init>":(Lorg/xnio/ByteBufferPool$Cache;)V
      84: astore        7
      86: goto          101
      89: new           #10                 // class org/xnio/ByteBufferPool$MultiCache
      92: dup
      93: aload         6
      95: iload_1
      96: invokespecial #223                // Method org/xnio/ByteBufferPool$MultiCache."<init>":(Lorg/xnio/ByteBufferPool$Cache;I)V
      99: astore        7
     101: aload         5
     103: aload         7
     105: invokevirtual #227                // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
     108: aload_2
     109: aload_3
     110: aload         4
     112: invokeinterface #292,  3          // InterfaceMethod org/wildfly/common/function/ExceptionBiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     117: astore        8
     119: aload         5
     121: aload         6
     123: invokevirtual #227                // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
     126: aload         7
     128: invokeinterface #230,  1          // InterfaceMethod org/xnio/ByteBufferPool$Cache.destroy:()V
     133: aload         8
     135: areturn
     136: astore        9
     138: aload         5
     140: aload         6
     142: invokevirtual #227                // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
     145: aload         7
     147: invokeinterface #230,  1          // InterfaceMethod org/xnio/ByteBufferPool$Cache.destroy:()V
     152: aload         9
     154: athrow
     155: new           #10                 // class org/xnio/ByteBufferPool$MultiCache
     158: dup
     159: aload         6
     161: bipush        64
     163: invokespecial #223                // Method org/xnio/ByteBufferPool$MultiCache."<init>":(Lorg/xnio/ByteBufferPool$Cache;I)V
     166: astore        7
     168: aload         5
     170: aload         7
     172: invokevirtual #227                // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
     175: aload_0
     176: iload_1
     177: bipush        64
     179: isub
     180: aload_2
     181: aload_3
     182: aload         4
     184: invokevirtual #294                // Method applyWithCacheEx:(ILorg/wildfly/common/function/ExceptionBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     187: astore        8
     189: aload         7
     191: invokeinterface #230,  1          // InterfaceMethod org/xnio/ByteBufferPool$Cache.destroy:()V
     196: aload         8
     198: areturn
     199: astore        10
     201: aload         7
     203: invokeinterface #230,  1          // InterfaceMethod org/xnio/ByteBufferPool$Cache.destroy:()V
     208: aload         10
     210: athrow
    Exception table:
       from    to  target type
         108   119   136   any
         136   138   136   any
         175   189   199   any
         199   201   199   any

  public <T, R, E extends java.lang.Exception> R applyWithCacheEx(int, org.wildfly.common.function.ExceptionFunction<T, R, E>, T) throws E;
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #302                // Method org/wildfly/common/function/Functions.exceptionFunctionBiFunction:()Lorg/wildfly/common/function/ExceptionBiFunction;
       5: aload_2
       6: aload_3
       7: invokevirtual #294                // Method applyWithCacheEx:(ILorg/wildfly/common/function/ExceptionBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public <R, E extends java.lang.Exception> R getWithCacheEx(int, org.wildfly.common.function.ExceptionSupplier<R, E>) throws E;
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #311                // Method org/wildfly/common/function/Functions.exceptionSupplierFunction:()Lorg/wildfly/common/function/ExceptionFunction;
       5: aload_2
       6: invokevirtual #313                // Method applyWithCacheEx:(ILorg/wildfly/common/function/ExceptionFunction;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  org.xnio.ByteBufferPool$Cache getDefaultCache();
    Code:
       0: aload_0
       1: getfield      #102                // Field defaultCache:Lorg/xnio/ByteBufferPool$Cache;
       4: areturn

  java.util.concurrent.ConcurrentLinkedQueue<java.nio.ByteBuffer> getMasterQueue();
    Code:
       0: aload_0
       1: getfield      #70                 // Field masterQueue:Ljava/util/concurrent/ConcurrentLinkedQueue;
       4: areturn

  private java.nio.ByteBuffer allocateMaster();
    Code:
       0: aload_0
       1: getfield      #70                 // Field masterQueue:Ljava/util/concurrent/ConcurrentLinkedQueue;
       4: invokevirtual #323                // Method java/util/concurrent/ConcurrentLinkedQueue.poll:()Ljava/lang/Object;
       7: checkcast     #152                // class java/nio/ByteBuffer
      10: astore_1
      11: aload_1
      12: ifnonnull     20
      15: aload_0
      16: invokevirtual #326                // Method createBuffer:()Ljava/nio/ByteBuffer;
      19: astore_1
      20: aload_1
      21: areturn

  static org.xnio.ByteBufferPool create(int, boolean);
    Code:
       0: getstatic     #104                // Field $assertionsDisabled:Z
       3: ifne          22
       6: iload_0
       7: invokestatic  #110                // Method java/lang/Integer.bitCount:(I)I
      10: iconst_1
      11: if_icmpeq     22
      14: new           #112                // class java/lang/AssertionError
      17: dup
      18: invokespecial #113                // Method java/lang/AssertionError."<init>":()V
      21: athrow
      22: getstatic     #104                // Field $assertionsDisabled:Z
      25: ifne          42
      28: iload_0
      29: bipush        16
      31: if_icmpge     42
      34: new           #112                // class java/lang/AssertionError
      37: dup
      38: invokespecial #113                // Method java/lang/AssertionError."<init>":()V
      41: athrow
      42: getstatic     #104                // Field $assertionsDisabled:Z
      45: ifne          62
      48: iload_0
      49: ldc           #114                // int 1073741824
      51: if_icmple     62
      54: new           #112                // class java/lang/AssertionError
      57: dup
      58: invokespecial #113                // Method java/lang/AssertionError."<init>":()V
      61: athrow
      62: new           #27                 // class org/xnio/ByteBufferPool$1
      65: dup
      66: iload_0
      67: iload_1
      68: invokespecial #331                // Method org/xnio/ByteBufferPool$1."<init>":(IZ)V
      71: areturn

  static org.xnio.ByteBufferPool subPool(org.xnio.ByteBufferPool, int);
    Code:
       0: getstatic     #104                // Field $assertionsDisabled:Z
       3: ifne          22
       6: iload_1
       7: invokestatic  #110                // Method java/lang/Integer.bitCount:(I)I
      10: iconst_1
      11: if_icmpeq     22
      14: new           #112                // class java/lang/AssertionError
      17: dup
      18: invokespecial #113                // Method java/lang/AssertionError."<init>":()V
      21: athrow
      22: getstatic     #104                // Field $assertionsDisabled:Z
      25: ifne          47
      28: aload_0
      29: invokevirtual #335                // Method getSize:()I
      32: invokestatic  #110                // Method java/lang/Integer.bitCount:(I)I
      35: iconst_1
      36: if_icmpeq     47
      39: new           #112                // class java/lang/AssertionError
      42: dup
      43: invokespecial #113                // Method java/lang/AssertionError."<init>":()V
      46: athrow
      47: getstatic     #104                // Field $assertionsDisabled:Z
      50: ifne          67
      53: iload_1
      54: bipush        16
      56: if_icmpge     67
      59: new           #112                // class java/lang/AssertionError
      62: dup
      63: invokespecial #113                // Method java/lang/AssertionError."<init>":()V
      66: athrow
      67: getstatic     #104                // Field $assertionsDisabled:Z
      70: ifne          89
      73: iload_1
      74: aload_0
      75: invokevirtual #335                // Method getSize:()I
      78: if_icmplt     89
      81: new           #112                // class java/lang/AssertionError
      84: dup
      85: invokespecial #113                // Method java/lang/AssertionError."<init>":()V
      88: athrow
      89: getstatic     #104                // Field $assertionsDisabled:Z
      92: ifne          112
      95: aload_0
      96: invokevirtual #335                // Method getSize:()I
      99: iload_1
     100: irem
     101: ifeq          112
     104: new           #112                // class java/lang/AssertionError
     107: dup
     108: invokespecial #113                // Method java/lang/AssertionError."<init>":()V
     111: athrow
     112: new           #25                 // class org/xnio/ByteBufferPool$2
     115: dup
     116: iload_1
     117: aload_0
     118: invokevirtual #336                // Method isDirect:()Z
     121: aload_0
     122: invokespecial #339                // Method org/xnio/ByteBufferPool$2."<init>":(IZLorg/xnio/ByteBufferPool;)V
     125: areturn

  abstract java.nio.ByteBuffer createBuffer();

  final void freeMaster(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: getfield      #70                 // Field masterQueue:Ljava/util/concurrent/ConcurrentLinkedQueue;
       4: aload_1
       5: invokevirtual #344                // Method java/util/concurrent/ConcurrentLinkedQueue.add:(Ljava/lang/Object;)Z
       8: pop
       9: return

  final void doFree(java.nio.ByteBuffer);
    Code:
       0: getstatic     #104                // Field $assertionsDisabled:Z
       3: ifne          25
       6: aload_1
       7: invokevirtual #156                // Method java/nio/ByteBuffer.capacity:()I
      10: aload_0
      11: getfield      #116                // Field size:I
      14: if_icmpeq     25
      17: new           #112                // class java/lang/AssertionError
      20: dup
      21: invokespecial #113                // Method java/lang/AssertionError."<init>":()V
      24: athrow
      25: getstatic     #104                // Field $assertionsDisabled:Z
      28: ifne          50
      31: aload_1
      32: invokevirtual #163                // Method java/nio/ByteBuffer.isDirect:()Z
      35: aload_0
      36: getfield      #118                // Field direct:Z
      39: if_icmpeq     50
      42: new           #112                // class java/lang/AssertionError
      45: dup
      46: invokespecial #113                // Method java/lang/AssertionError."<init>":()V
      49: athrow
      50: aload_1
      51: invokevirtual #348                // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      54: pop
      55: aload_0
      56: getfield      #97                 // Field threadLocalCache:Ljava/lang/ThreadLocal;
      59: invokevirtual #123                // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      62: checkcast     #19                 // class org/xnio/ByteBufferPool$Cache
      65: aload_1
      66: invokeinterface #349,  2          // InterfaceMethod org/xnio/ByteBufferPool$Cache.free:(Ljava/nio/ByteBuffer;)V
      71: return

  static java.nio.ByteBuffer access$000(org.xnio.ByteBufferPool);
    Code:
       0: aload_0
       1: invokespecial #353                // Method allocateMaster:()Ljava/nio/ByteBuffer;
       4: areturn

  static {};
    Code:
       0: ldc           #2                  // class org/xnio/ByteBufferPool
       2: invokevirtual #360                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #104                // Field $assertionsDisabled:Z
      16: ldc_w         #362                // String xnio.buffer.slice-large-buffers
      19: ldc_w         #364                // String true
      22: invokestatic  #370                // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      25: invokestatic  #376                // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
      28: putstatic     #378                // Field sliceLargeBuffers:Z
      31: bipush        64
      33: invokestatic  #383                // Method org/wildfly/common/cpu/CacheInfo.getSmallestDataCacheLineSize:()I
      36: invokestatic  #389                // Method java/lang/Math.max:(II)I
      39: putstatic     #391                // Field CACHE_LINE_SIZE:I
      42: ldc           #47                 // int 1048576
      44: iconst_1
      45: invokestatic  #393                // Method create:(IZ)Lorg/xnio/ByteBufferPool;
      48: putstatic     #172                // Field LARGE_DIRECT:Lorg/xnio/ByteBufferPool;
      51: getstatic     #378                // Field sliceLargeBuffers:Z
      54: ifeq          69
      57: getstatic     #172                // Field LARGE_DIRECT:Lorg/xnio/ByteBufferPool;
      60: sipush        8192
      63: invokestatic  #395                // Method subPool:(Lorg/xnio/ByteBufferPool;I)Lorg/xnio/ByteBufferPool;
      66: goto          76
      69: sipush        8192
      72: iconst_1
      73: invokestatic  #393                // Method create:(IZ)Lorg/xnio/ByteBufferPool;
      76: putstatic     #165                // Field MEDIUM_DIRECT:Lorg/xnio/ByteBufferPool;
      79: getstatic     #165                // Field MEDIUM_DIRECT:Lorg/xnio/ByteBufferPool;
      82: bipush        64
      84: invokestatic  #395                // Method subPool:(Lorg/xnio/ByteBufferPool;I)Lorg/xnio/ByteBufferPool;
      87: putstatic     #170                // Field SMALL_DIRECT:Lorg/xnio/ByteBufferPool;
      90: ldc           #47                 // int 1048576
      92: iconst_0
      93: invokestatic  #393                // Method create:(IZ)Lorg/xnio/ByteBufferPool;
      96: putstatic     #178                // Field LARGE_HEAP:Lorg/xnio/ByteBufferPool;
      99: sipush        8192
     102: iconst_0
     103: invokestatic  #393                // Method create:(IZ)Lorg/xnio/ByteBufferPool;
     106: putstatic     #174                // Field MEDIUM_HEAP:Lorg/xnio/ByteBufferPool;
     109: bipush        64
     111: iconst_0
     112: invokestatic  #393                // Method create:(IZ)Lorg/xnio/ByteBufferPool;
     115: putstatic     #176                // Field SMALL_HEAP:Lorg/xnio/ByteBufferPool;
     118: return
}
