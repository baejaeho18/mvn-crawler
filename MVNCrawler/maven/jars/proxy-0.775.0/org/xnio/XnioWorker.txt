Compiled from "XnioWorker.java"
public abstract class org.xnio.XnioWorker extends java.util.concurrent.AbstractExecutorService implements org.xnio.channels.Configurable, java.util.concurrent.ExecutorService, org.xnio.XnioIoFactory, org.wildfly.common.context.Contextual<org.xnio.XnioWorker> {
  private final org.xnio.Xnio xnio;

  private final org.xnio.XnioWorker$TaskPool taskPool;

  private final java.lang.String name;

  private final java.lang.Runnable terminationTask;

  private final org.wildfly.common.net.CidrAddressTable<java.net.InetSocketAddress> bindAddressTable;

  private volatile int taskSeq;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.xnio.XnioWorker> taskSeqUpdater;

  private static final java.util.concurrent.atomic.AtomicInteger seq;

  private static final java.lang.RuntimePermission CREATE_WORKER_PERMISSION;

  private static final org.jboss.logging.Logger log;

  private static final org.wildfly.common.context.ContextManager<org.xnio.XnioWorker> CONTEXT_MANAGER;

  private static final java.util.Set<org.xnio.Option<?>> OPTIONS;

  private static final java.util.Set<org.xnio.Option<?>> EXTERNAL_POOL_OPTIONS;

  private static final org.xnio.IoFuture$HandlingNotifier<org.xnio.StreamConnection, org.xnio.FutureResult<org.xnio.channels.ConnectedStreamChannel>> STREAM_WRAPPING_HANDLER;

  private static final org.xnio.IoFuture$HandlingNotifier<org.xnio.MessageConnection, org.xnio.FutureResult<org.xnio.channels.ConnectedMessageChannel>> MESSAGE_WRAPPING_HANDLER;

  private int getNextSeq();
    Code:
       0: getstatic     #123                // Field taskSeqUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #129                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.incrementAndGet:(Ljava/lang/Object;)I
       7: ireturn

  protected org.xnio.XnioWorker(org.xnio.XnioWorker$Builder);
    Code:
       0: aload_0
       1: invokespecial #136                // Method java/util/concurrent/AbstractExecutorService."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #140                // Method org/xnio/XnioWorker$Builder.access$000:(Lorg/xnio/XnioWorker$Builder;)Lorg/xnio/Xnio;
       9: putfield      #142                // Field xnio:Lorg/xnio/Xnio;
      12: aload_0
      13: aload_1
      14: invokestatic  #146                // Method org/xnio/XnioWorker$Builder.access$100:(Lorg/xnio/XnioWorker$Builder;)Ljava/lang/Runnable;
      17: putfield      #148                // Field terminationTask:Ljava/lang/Runnable;
      20: invokestatic  #154                // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
      23: astore_2
      24: aload_2
      25: ifnull        35
      28: aload_2
      29: getstatic     #156                // Field CREATE_WORKER_PERMISSION:Ljava/lang/RuntimePermission;
      32: invokevirtual #162                // Method java/lang/SecurityManager.checkPermission:(Ljava/security/Permission;)V
      35: aload_1
      36: invokevirtual #166                // Method org/xnio/XnioWorker$Builder.getWorkerName:()Ljava/lang/String;
      39: astore_3
      40: aload_3
      41: ifnonnull     69
      44: new           #168                // class java/lang/StringBuilder
      47: dup
      48: invokespecial #169                // Method java/lang/StringBuilder."<init>":()V
      51: ldc           #171                // String XNIO-
      53: invokevirtual #175                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: getstatic     #177                // Field seq:Ljava/util/concurrent/atomic/AtomicInteger;
      59: invokevirtual #182                // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      62: invokevirtual #185                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      65: invokevirtual #188                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: astore_3
      69: aload_0
      70: aload_3
      71: putfield      #192                // Field name:Ljava/lang/String;
      74: aload_1
      75: invokevirtual #196                // Method org/xnio/XnioWorker$Builder.isDaemon:()Z
      78: istore        4
      80: aload_0
      81: aload_1
      82: invokevirtual #200                // Method org/xnio/XnioWorker$Builder.getBindAddressConfigurations:()Lorg/wildfly/common/net/CidrAddressTable;
      85: putfield      #202                // Field bindAddressTable:Lorg/wildfly/common/net/CidrAddressTable;
      88: new           #58                 // class org/xnio/XnioWorker$1
      91: dup
      92: aload_0
      93: invokespecial #205                // Method org/xnio/XnioWorker$1."<init>":(Lorg/xnio/XnioWorker;)V
      96: astore        5
      98: aload_1
      99: invokevirtual #209                // Method org/xnio/XnioWorker$Builder.getExternalExecutorService:()Ljava/util/concurrent/ExecutorService;
     102: astore        6
     104: aload         6
     106: ifnull        200
     109: aload         6
     111: instanceof    #67                 // class org/jboss/threads/EnhancedQueueExecutor
     114: ifeq          143
     117: aload_0
     118: new           #18                 // class org/xnio/XnioWorker$ExternalTaskPool
     121: dup
     122: new           #24                 // class org/xnio/XnioWorker$EnhancedQueueExecutorTaskPool
     125: dup
     126: aload         6
     128: checkcast     #67                 // class org/jboss/threads/EnhancedQueueExecutor
     131: invokespecial #212                // Method org/xnio/XnioWorker$EnhancedQueueExecutorTaskPool."<init>":(Lorg/jboss/threads/EnhancedQueueExecutor;)V
     134: invokespecial #215                // Method org/xnio/XnioWorker$ExternalTaskPool."<init>":(Lorg/xnio/XnioWorker$TaskPool;)V
     137: putfield      #217                // Field taskPool:Lorg/xnio/XnioWorker$TaskPool;
     140: goto          357
     143: aload         6
     145: instanceof    #221                // class java/util/concurrent/ThreadPoolExecutor
     148: ifeq          177
     151: aload_0
     152: new           #18                 // class org/xnio/XnioWorker$ExternalTaskPool
     155: dup
     156: new           #27                 // class org/xnio/XnioWorker$ThreadPoolExecutorTaskPool
     159: dup
     160: aload         6
     162: checkcast     #221                // class java/util/concurrent/ThreadPoolExecutor
     165: invokespecial #224                // Method org/xnio/XnioWorker$ThreadPoolExecutorTaskPool."<init>":(Ljava/util/concurrent/ThreadPoolExecutor;)V
     168: invokespecial #215                // Method org/xnio/XnioWorker$ExternalTaskPool."<init>":(Lorg/xnio/XnioWorker$TaskPool;)V
     171: putfield      #217                // Field taskPool:Lorg/xnio/XnioWorker$TaskPool;
     174: goto          357
     177: aload_0
     178: new           #18                 // class org/xnio/XnioWorker$ExternalTaskPool
     181: dup
     182: new           #21                 // class org/xnio/XnioWorker$ExecutorServiceTaskPool
     185: dup
     186: aload         6
     188: invokespecial #227                // Method org/xnio/XnioWorker$ExecutorServiceTaskPool."<init>":(Ljava/util/concurrent/ExecutorService;)V
     191: invokespecial #215                // Method org/xnio/XnioWorker$ExternalTaskPool."<init>":(Lorg/xnio/XnioWorker$TaskPool;)V
     194: putfield      #217                // Field taskPool:Lorg/xnio/XnioWorker$TaskPool;
     197: goto          357
     200: getstatic     #231                // Field org/jboss/threads/EnhancedQueueExecutor.DISABLE_HINT:Z
     203: ifeq          278
     206: aload_1
     207: invokevirtual #234                // Method org/xnio/XnioWorker$Builder.getMaxWorkerPoolSize:()I
     210: aload_1
     211: invokevirtual #237                // Method org/xnio/XnioWorker$Builder.getCoreWorkerPoolSize:()I
     214: invokestatic  #243                // Method java/lang/Math.max:(II)I
     217: istore        7
     219: aload_0
     220: new           #27                 // class org/xnio/XnioWorker$ThreadPoolExecutorTaskPool
     223: dup
     224: new           #30                 // class org/xnio/XnioWorker$DefaultThreadPoolExecutor
     227: dup
     228: iload         7
     230: iload         7
     232: aload_1
     233: invokevirtual #247                // Method org/xnio/XnioWorker$Builder.getWorkerKeepAlive:()J
     236: getstatic     #253                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     239: new           #255                // class java/util/concurrent/LinkedBlockingDeque
     242: dup
     243: invokespecial #256                // Method java/util/concurrent/LinkedBlockingDeque."<init>":()V
     246: new           #36                 // class org/xnio/XnioWorker$WorkerThreadFactory
     249: dup
     250: aload_0
     251: aload_1
     252: invokevirtual #260                // Method org/xnio/XnioWorker$Builder.getThreadGroup:()Ljava/lang/ThreadGroup;
     255: aload_1
     256: invokevirtual #263                // Method org/xnio/XnioWorker$Builder.getWorkerStackSize:()J
     259: iload         4
     261: invokespecial #266                // Method org/xnio/XnioWorker$WorkerThreadFactory."<init>":(Lorg/xnio/XnioWorker;Ljava/lang/ThreadGroup;JZ)V
     264: aload         5
     266: invokespecial #269                // Method org/xnio/XnioWorker$DefaultThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;Ljava/lang/Runnable;)V
     269: invokespecial #224                // Method org/xnio/XnioWorker$ThreadPoolExecutorTaskPool."<init>":(Ljava/util/concurrent/ThreadPoolExecutor;)V
     272: putfield      #217                // Field taskPool:Lorg/xnio/XnioWorker$TaskPool;
     275: goto          357
     278: aload_0
     279: new           #24                 // class org/xnio/XnioWorker$EnhancedQueueExecutorTaskPool
     282: dup
     283: new           #65                 // class org/jboss/threads/EnhancedQueueExecutor$Builder
     286: dup
     287: invokespecial #270                // Method org/jboss/threads/EnhancedQueueExecutor$Builder."<init>":()V
     290: aload_1
     291: invokevirtual #237                // Method org/xnio/XnioWorker$Builder.getCoreWorkerPoolSize:()I
     294: invokevirtual #274                // Method org/jboss/threads/EnhancedQueueExecutor$Builder.setCorePoolSize:(I)Lorg/jboss/threads/EnhancedQueueExecutor$Builder;
     297: aload_1
     298: invokevirtual #234                // Method org/xnio/XnioWorker$Builder.getMaxWorkerPoolSize:()I
     301: invokevirtual #277                // Method org/jboss/threads/EnhancedQueueExecutor$Builder.setMaximumPoolSize:(I)Lorg/jboss/threads/EnhancedQueueExecutor$Builder;
     304: aload_1
     305: invokevirtual #247                // Method org/xnio/XnioWorker$Builder.getWorkerKeepAlive:()J
     308: getstatic     #253                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     311: invokevirtual #281                // Method org/jboss/threads/EnhancedQueueExecutor$Builder.setKeepAliveTime:(JLjava/util/concurrent/TimeUnit;)Lorg/jboss/threads/EnhancedQueueExecutor$Builder;
     314: new           #36                 // class org/xnio/XnioWorker$WorkerThreadFactory
     317: dup
     318: aload_0
     319: aload_1
     320: invokevirtual #260                // Method org/xnio/XnioWorker$Builder.getThreadGroup:()Ljava/lang/ThreadGroup;
     323: aload_1
     324: invokevirtual #263                // Method org/xnio/XnioWorker$Builder.getWorkerStackSize:()J
     327: iload         4
     329: invokespecial #266                // Method org/xnio/XnioWorker$WorkerThreadFactory."<init>":(Lorg/xnio/XnioWorker;Ljava/lang/ThreadGroup;JZ)V
     332: invokevirtual #285                // Method org/jboss/threads/EnhancedQueueExecutor$Builder.setThreadFactory:(Ljava/util/concurrent/ThreadFactory;)Lorg/jboss/threads/EnhancedQueueExecutor$Builder;
     335: aload         5
     337: invokevirtual #289                // Method org/jboss/threads/EnhancedQueueExecutor$Builder.setTerminationTask:(Ljava/lang/Runnable;)Lorg/jboss/threads/EnhancedQueueExecutor$Builder;
     340: iconst_1
     341: invokevirtual #293                // Method org/jboss/threads/EnhancedQueueExecutor$Builder.setRegisterMBean:(Z)Lorg/jboss/threads/EnhancedQueueExecutor$Builder;
     344: aload_3
     345: invokevirtual #297                // Method org/jboss/threads/EnhancedQueueExecutor$Builder.setMBeanName:(Ljava/lang/String;)Lorg/jboss/threads/EnhancedQueueExecutor$Builder;
     348: invokevirtual #301                // Method org/jboss/threads/EnhancedQueueExecutor$Builder.build:()Lorg/jboss/threads/EnhancedQueueExecutor;
     351: invokespecial #212                // Method org/xnio/XnioWorker$EnhancedQueueExecutorTaskPool."<init>":(Lorg/jboss/threads/EnhancedQueueExecutor;)V
     354: putfield      #217                // Field taskPool:Lorg/xnio/XnioWorker$TaskPool;
     357: return

  public static org.wildfly.common.context.ContextManager<org.xnio.XnioWorker> getContextManager();
    Code:
       0: getstatic     #315                // Field CONTEXT_MANAGER:Lorg/wildfly/common/context/ContextManager;
       3: areturn

  public org.wildfly.common.context.ContextManager<org.xnio.XnioWorker> getInstanceContextManager();
    Code:
       0: invokestatic  #318                // Method getContextManager:()Lorg/wildfly/common/context/ContextManager;
       3: areturn

  public org.xnio.channels.AcceptingChannel<? extends org.xnio.channels.ConnectedStreamChannel> createStreamServer(java.net.SocketAddress, org.xnio.ChannelListener<? super org.xnio.channels.AcceptingChannel<org.xnio.channels.ConnectedStreamChannel>>, org.xnio.OptionMap) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_3
       4: invokevirtual #327                // Method createStreamConnectionServer:(Ljava/net/SocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/channels/AcceptingChannel;
       7: astore        4
       9: new           #56                 // class org/xnio/XnioWorker$2
      12: dup
      13: aload_0
      14: aload         4
      16: invokespecial #330                // Method org/xnio/XnioWorker$2."<init>":(Lorg/xnio/XnioWorker;Lorg/xnio/channels/AcceptingChannel;)V
      19: astore        5
      21: aload         5
      23: invokeinterface #336,  1          // InterfaceMethod org/xnio/channels/AcceptingChannel.getAcceptSetter:()Lorg/xnio/ChannelListener$Setter;
      28: aload_2
      29: invokeinterface #340,  2          // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      34: aload         5
      36: areturn

  public org.xnio.channels.AcceptingChannel<org.xnio.StreamConnection> createStreamConnectionServer(java.net.SocketAddress, org.xnio.ChannelListener<? super org.xnio.channels.AcceptingChannel<org.xnio.StreamConnection>>, org.xnio.OptionMap) throws java.io.IOException;
    Code:
       0: ldc_w         #354                // String bindAddress
       3: aload_1
       4: invokestatic  #360                // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       7: pop
       8: aload_1
       9: instanceof    #362                // class java/net/InetSocketAddress
      12: ifeq          26
      15: aload_0
      16: aload_1
      17: checkcast     #362                // class java/net/InetSocketAddress
      20: aload_2
      21: aload_3
      22: invokevirtual #366                // Method createTcpConnectionServer:(Ljava/net/InetSocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/channels/AcceptingChannel;
      25: areturn
      26: aload_1
      27: instanceof    #368                // class org/xnio/LocalSocketAddress
      30: ifeq          44
      33: aload_0
      34: aload_1
      35: checkcast     #368                // class org/xnio/LocalSocketAddress
      38: aload_2
      39: aload_3
      40: invokevirtual #372                // Method createLocalStreamConnectionServer:(Lorg/xnio/LocalSocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/channels/AcceptingChannel;
      43: areturn
      44: getstatic     #378                // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      47: aload_1
      48: invokevirtual #384                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      51: invokeinterface #388,  2          // InterfaceMethod org/xnio/_private/Messages.badSockType:(Ljava/lang/Class;)Ljava/lang/IllegalArgumentException;
      56: athrow

  protected org.xnio.channels.AcceptingChannel<org.xnio.StreamConnection> createTcpConnectionServer(java.net.InetSocketAddress, org.xnio.ChannelListener<? super org.xnio.channels.AcceptingChannel<org.xnio.StreamConnection>>, org.xnio.OptionMap) throws java.io.IOException;
    Code:
       0: getstatic     #378                // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
       3: ldc_w         #391                // String createTcpConnectionServer
       6: invokeinterface #395,  2          // InterfaceMethod org/xnio/_private/Messages.unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
      11: athrow

  protected org.xnio.channels.AcceptingChannel<org.xnio.StreamConnection> createLocalStreamConnectionServer(org.xnio.LocalSocketAddress, org.xnio.ChannelListener<? super org.xnio.channels.AcceptingChannel<org.xnio.StreamConnection>>, org.xnio.OptionMap) throws java.io.IOException;
    Code:
       0: getstatic     #378                // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
       3: ldc_w         #398                // String createLocalStreamConnectionServer
       6: invokeinterface #395,  2          // InterfaceMethod org/xnio/_private/Messages.unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
      11: athrow

  public org.xnio.IoFuture<org.xnio.channels.ConnectedStreamChannel> connectStream(java.net.SocketAddress, org.xnio.ChannelListener<? super org.xnio.channels.ConnectedStreamChannel>, org.xnio.OptionMap);
    Code:
       0: new           #404                // class org/xnio/FutureResult
       3: dup
       4: invokespecial #405                // Method org/xnio/FutureResult."<init>":()V
       7: astore        4
       9: new           #42                 // class org/xnio/XnioWorker$StreamConnectionWrapListener
      12: dup
      13: aload         4
      15: aload_2
      16: invokespecial #408                // Method org/xnio/XnioWorker$StreamConnectionWrapListener."<init>":(Lorg/xnio/FutureResult;Lorg/xnio/ChannelListener;)V
      19: astore        5
      21: aload_0
      22: aload_1
      23: aload         5
      25: aload_3
      26: invokevirtual #411                // Method openStreamConnection:(Ljava/net/SocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
      29: astore        6
      31: aload         6
      33: getstatic     #413                // Field STREAM_WRAPPING_HANDLER:Lorg/xnio/IoFuture$HandlingNotifier;
      36: aload         4
      38: invokeinterface #417,  3          // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
      43: pop
      44: aload         4
      46: aload         6
      48: invokevirtual #421                // Method org/xnio/FutureResult.addCancelHandler:(Lorg/xnio/Cancellable;)V
      51: aload         4
      53: invokevirtual #425                // Method org/xnio/FutureResult.getIoFuture:()Lorg/xnio/IoFuture;
      56: areturn

  public org.xnio.IoFuture<org.xnio.channels.ConnectedStreamChannel> connectStream(java.net.SocketAddress, org.xnio.ChannelListener<? super org.xnio.channels.ConnectedStreamChannel>, org.xnio.ChannelListener<? super org.xnio.channels.BoundChannel>, org.xnio.OptionMap);
    Code:
       0: new           #404                // class org/xnio/FutureResult
       3: dup
       4: invokespecial #405                // Method org/xnio/FutureResult."<init>":()V
       7: astore        5
       9: new           #42                 // class org/xnio/XnioWorker$StreamConnectionWrapListener
      12: dup
      13: aload         5
      15: aload_2
      16: invokespecial #408                // Method org/xnio/XnioWorker$StreamConnectionWrapListener."<init>":(Lorg/xnio/FutureResult;Lorg/xnio/ChannelListener;)V
      19: astore        6
      21: aload_0
      22: aload_1
      23: aload         6
      25: aload_3
      26: aload         4
      28: invokevirtual #440                // Method openStreamConnection:(Ljava/net/SocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
      31: astore        7
      33: aload         7
      35: getstatic     #413                // Field STREAM_WRAPPING_HANDLER:Lorg/xnio/IoFuture$HandlingNotifier;
      38: aload         5
      40: invokeinterface #417,  3          // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
      45: pop
      46: aload         5
      48: aload         7
      50: invokevirtual #421                // Method org/xnio/FutureResult.addCancelHandler:(Lorg/xnio/Cancellable;)V
      53: aload         5
      55: invokevirtual #425                // Method org/xnio/FutureResult.getIoFuture:()Lorg/xnio/IoFuture;
      58: areturn

  public org.xnio.IoFuture<org.xnio.channels.ConnectedStreamChannel> connectStream(java.net.SocketAddress, java.net.SocketAddress, org.xnio.ChannelListener<? super org.xnio.channels.ConnectedStreamChannel>, org.xnio.ChannelListener<? super org.xnio.channels.BoundChannel>, org.xnio.OptionMap);
    Code:
       0: new           #404                // class org/xnio/FutureResult
       3: dup
       4: invokespecial #405                // Method org/xnio/FutureResult."<init>":()V
       7: astore        6
       9: new           #42                 // class org/xnio/XnioWorker$StreamConnectionWrapListener
      12: dup
      13: aload         6
      15: aload_3
      16: invokespecial #408                // Method org/xnio/XnioWorker$StreamConnectionWrapListener."<init>":(Lorg/xnio/FutureResult;Lorg/xnio/ChannelListener;)V
      19: astore        7
      21: aload_0
      22: aload_1
      23: aload_2
      24: aload         7
      26: aload         4
      28: aload         5
      30: invokevirtual #446                // Method openStreamConnection:(Ljava/net/SocketAddress;Ljava/net/SocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
      33: astore        8
      35: aload         8
      37: getstatic     #413                // Field STREAM_WRAPPING_HANDLER:Lorg/xnio/IoFuture$HandlingNotifier;
      40: aload         6
      42: invokeinterface #417,  3          // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
      47: pop
      48: aload         6
      50: aload         8
      52: invokevirtual #421                // Method org/xnio/FutureResult.addCancelHandler:(Lorg/xnio/Cancellable;)V
      55: aload         6
      57: invokevirtual #425                // Method org/xnio/FutureResult.getIoFuture:()Lorg/xnio/IoFuture;
      60: areturn

  public org.xnio.IoFuture<org.xnio.StreamConnection> openStreamConnection(java.net.SocketAddress, org.xnio.ChannelListener<? super org.xnio.StreamConnection>, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: invokevirtual #451                // Method chooseThread:()Lorg/xnio/XnioIoThread;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #454                // Method org/xnio/XnioIoThread.openStreamConnection:(Ljava/net/SocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
      10: areturn

  public org.xnio.IoFuture<org.xnio.StreamConnection> openStreamConnection(java.net.SocketAddress, org.xnio.ChannelListener<? super org.xnio.StreamConnection>, org.xnio.ChannelListener<? super org.xnio.channels.BoundChannel>, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: invokevirtual #451                // Method chooseThread:()Lorg/xnio/XnioIoThread;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #457                // Method org/xnio/XnioIoThread.openStreamConnection:(Ljava/net/SocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
      12: areturn

  public org.xnio.IoFuture<org.xnio.StreamConnection> openStreamConnection(java.net.SocketAddress, java.net.SocketAddress, org.xnio.ChannelListener<? super org.xnio.StreamConnection>, org.xnio.ChannelListener<? super org.xnio.channels.BoundChannel>, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: invokevirtual #451                // Method chooseThread:()Lorg/xnio/XnioIoThread;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: invokevirtual #459                // Method org/xnio/XnioIoThread.openStreamConnection:(Ljava/net/SocketAddress;Ljava/net/SocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
      14: areturn

  public org.xnio.IoFuture<org.xnio.channels.ConnectedStreamChannel> acceptStream(java.net.SocketAddress, org.xnio.ChannelListener<? super org.xnio.channels.ConnectedStreamChannel>, org.xnio.ChannelListener<? super org.xnio.channels.BoundChannel>, org.xnio.OptionMap);
    Code:
       0: new           #404                // class org/xnio/FutureResult
       3: dup
       4: invokespecial #405                // Method org/xnio/FutureResult."<init>":()V
       7: astore        5
       9: new           #42                 // class org/xnio/XnioWorker$StreamConnectionWrapListener
      12: dup
      13: aload         5
      15: aload_2
      16: invokespecial #408                // Method org/xnio/XnioWorker$StreamConnectionWrapListener."<init>":(Lorg/xnio/FutureResult;Lorg/xnio/ChannelListener;)V
      19: astore        6
      21: aload_0
      22: aload_1
      23: aload         6
      25: aload_3
      26: aload         4
      28: invokevirtual #463                // Method acceptStreamConnection:(Ljava/net/SocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
      31: astore        7
      33: aload         7
      35: getstatic     #413                // Field STREAM_WRAPPING_HANDLER:Lorg/xnio/IoFuture$HandlingNotifier;
      38: aload         5
      40: invokeinterface #417,  3          // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
      45: pop
      46: aload         5
      48: aload         7
      50: invokevirtual #421                // Method org/xnio/FutureResult.addCancelHandler:(Lorg/xnio/Cancellable;)V
      53: aload         5
      55: invokevirtual #425                // Method org/xnio/FutureResult.getIoFuture:()Lorg/xnio/IoFuture;
      58: areturn

  public org.xnio.IoFuture<org.xnio.StreamConnection> acceptStreamConnection(java.net.SocketAddress, org.xnio.ChannelListener<? super org.xnio.StreamConnection>, org.xnio.ChannelListener<? super org.xnio.channels.BoundChannel>, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: invokevirtual #451                // Method chooseThread:()Lorg/xnio/XnioIoThread;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #464                // Method org/xnio/XnioIoThread.acceptStreamConnection:(Ljava/net/SocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
      12: areturn

  public org.xnio.IoFuture<org.xnio.channels.ConnectedMessageChannel> connectDatagram(java.net.SocketAddress, org.xnio.ChannelListener<? super org.xnio.channels.ConnectedMessageChannel>, org.xnio.ChannelListener<? super org.xnio.channels.BoundChannel>, org.xnio.OptionMap);
    Code:
       0: new           #404                // class org/xnio/FutureResult
       3: dup
       4: invokespecial #405                // Method org/xnio/FutureResult."<init>":()V
       7: astore        5
       9: new           #39                 // class org/xnio/XnioWorker$MessageConnectionWrapListener
      12: dup
      13: aload         5
      15: aload_2
      16: invokespecial #467                // Method org/xnio/XnioWorker$MessageConnectionWrapListener."<init>":(Lorg/xnio/FutureResult;Lorg/xnio/ChannelListener;)V
      19: astore        6
      21: aload_0
      22: aload_1
      23: aload         6
      25: aload         4
      27: invokevirtual #470                // Method openMessageConnection:(Ljava/net/SocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
      30: astore        7
      32: aload         7
      34: getstatic     #472                // Field MESSAGE_WRAPPING_HANDLER:Lorg/xnio/IoFuture$HandlingNotifier;
      37: aload         5
      39: invokeinterface #417,  3          // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
      44: pop
      45: aload         5
      47: aload         7
      49: invokevirtual #421                // Method org/xnio/FutureResult.addCancelHandler:(Lorg/xnio/Cancellable;)V
      52: aload         5
      54: invokevirtual #425                // Method org/xnio/FutureResult.getIoFuture:()Lorg/xnio/IoFuture;
      57: areturn

  public org.xnio.IoFuture<org.xnio.channels.ConnectedMessageChannel> connectDatagram(java.net.SocketAddress, java.net.SocketAddress, org.xnio.ChannelListener<? super org.xnio.channels.ConnectedMessageChannel>, org.xnio.ChannelListener<? super org.xnio.channels.BoundChannel>, org.xnio.OptionMap);
    Code:
       0: new           #404                // class org/xnio/FutureResult
       3: dup
       4: invokespecial #405                // Method org/xnio/FutureResult."<init>":()V
       7: astore        6
       9: new           #39                 // class org/xnio/XnioWorker$MessageConnectionWrapListener
      12: dup
      13: aload         6
      15: aload_3
      16: invokespecial #467                // Method org/xnio/XnioWorker$MessageConnectionWrapListener."<init>":(Lorg/xnio/FutureResult;Lorg/xnio/ChannelListener;)V
      19: astore        7
      21: aload_0
      22: aload_2
      23: aload         7
      25: aload         5
      27: invokevirtual #470                // Method openMessageConnection:(Ljava/net/SocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
      30: astore        8
      32: aload         8
      34: getstatic     #472                // Field MESSAGE_WRAPPING_HANDLER:Lorg/xnio/IoFuture$HandlingNotifier;
      37: aload         6
      39: invokeinterface #417,  3          // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
      44: pop
      45: aload         6
      47: aload         8
      49: invokevirtual #421                // Method org/xnio/FutureResult.addCancelHandler:(Lorg/xnio/Cancellable;)V
      52: aload         6
      54: invokevirtual #425                // Method org/xnio/FutureResult.getIoFuture:()Lorg/xnio/IoFuture;
      57: areturn

  public org.xnio.IoFuture<org.xnio.MessageConnection> openMessageConnection(java.net.SocketAddress, org.xnio.ChannelListener<? super org.xnio.MessageConnection>, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: invokevirtual #451                // Method chooseThread:()Lorg/xnio/XnioIoThread;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #479                // Method org/xnio/XnioIoThread.openMessageConnection:(Ljava/net/SocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
      10: areturn

  public org.xnio.IoFuture<org.xnio.channels.ConnectedMessageChannel> acceptDatagram(java.net.SocketAddress, org.xnio.ChannelListener<? super org.xnio.channels.ConnectedMessageChannel>, org.xnio.ChannelListener<? super org.xnio.channels.BoundChannel>, org.xnio.OptionMap);
    Code:
       0: new           #404                // class org/xnio/FutureResult
       3: dup
       4: invokespecial #405                // Method org/xnio/FutureResult."<init>":()V
       7: astore        5
       9: new           #39                 // class org/xnio/XnioWorker$MessageConnectionWrapListener
      12: dup
      13: aload         5
      15: aload_2
      16: invokespecial #467                // Method org/xnio/XnioWorker$MessageConnectionWrapListener."<init>":(Lorg/xnio/FutureResult;Lorg/xnio/ChannelListener;)V
      19: astore        6
      21: aload_0
      22: aload_1
      23: aload         6
      25: aload_3
      26: aload         4
      28: invokevirtual #484                // Method acceptMessageConnection:(Ljava/net/SocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
      31: astore        7
      33: aload         7
      35: getstatic     #472                // Field MESSAGE_WRAPPING_HANDLER:Lorg/xnio/IoFuture$HandlingNotifier;
      38: aload         5
      40: invokeinterface #417,  3          // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
      45: pop
      46: aload         5
      48: aload         7
      50: invokevirtual #421                // Method org/xnio/FutureResult.addCancelHandler:(Lorg/xnio/Cancellable;)V
      53: aload         5
      55: invokevirtual #425                // Method org/xnio/FutureResult.getIoFuture:()Lorg/xnio/IoFuture;
      58: areturn

  public org.xnio.IoFuture<org.xnio.MessageConnection> acceptMessageConnection(java.net.SocketAddress, org.xnio.ChannelListener<? super org.xnio.MessageConnection>, org.xnio.ChannelListener<? super org.xnio.channels.BoundChannel>, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: invokevirtual #451                // Method chooseThread:()Lorg/xnio/XnioIoThread;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #486                // Method org/xnio/XnioIoThread.acceptMessageConnection:(Ljava/net/SocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
      12: areturn

  public org.xnio.channels.MulticastMessageChannel createUdpServer(java.net.InetSocketAddress, org.xnio.ChannelListener<? super org.xnio.channels.MulticastMessageChannel>, org.xnio.OptionMap) throws java.io.IOException;
    Code:
       0: getstatic     #378                // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
       3: ldc_w         #490                // String createUdpServer
       6: invokeinterface #395,  2          // InterfaceMethod org/xnio/_private/Messages.unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
      11: athrow

  public org.xnio.channels.MulticastMessageChannel createUdpServer(java.net.InetSocketAddress, org.xnio.OptionMap) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #498                // Method org/xnio/ChannelListeners.nullChannelListener:()Lorg/xnio/ChannelListener;
       5: aload_2
       6: invokevirtual #500                // Method createUdpServer:(Ljava/net/InetSocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/channels/MulticastMessageChannel;
       9: areturn

  public void createPipe(org.xnio.ChannelListener<? super org.xnio.channels.StreamChannel>, org.xnio.ChannelListener<? super org.xnio.channels.StreamChannel>, org.xnio.OptionMap) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #507                // Method createFullDuplexPipe:()Lorg/xnio/ChannelPipe;
       4: astore        4
       6: aload_3
       7: getstatic     #513                // Field org/xnio/Options.WORKER_ESTABLISH_WRITING:Lorg/xnio/Option;
      10: iconst_0
      11: invokevirtual #519                // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      14: istore        5
      16: aload         4
      18: invokevirtual #525                // Method org/xnio/ChannelPipe.getLeftSide:()Lorg/xnio/channels/CloseableChannel;
      21: checkcast     #527                // class org/xnio/channels/StreamChannel
      24: astore        6
      26: iload         5
      28: ifeq          41
      31: aload         6
      33: invokeinterface #531,  1          // InterfaceMethod org/xnio/channels/StreamChannel.getWriteThread:()Lorg/xnio/XnioExecutor;
      38: goto          48
      41: aload         6
      43: invokeinterface #534,  1          // InterfaceMethod org/xnio/channels/StreamChannel.getReadThread:()Lorg/xnio/XnioExecutor;
      48: astore        7
      50: aload         4
      52: invokevirtual #539                // Method org/xnio/ChannelPipe.getRightSide:()Lorg/xnio/channels/CloseableChannel;
      55: checkcast     #527                // class org/xnio/channels/StreamChannel
      58: astore        8
      60: iload         5
      62: ifeq          75
      65: aload         8
      67: invokeinterface #531,  1          // InterfaceMethod org/xnio/channels/StreamChannel.getWriteThread:()Lorg/xnio/XnioExecutor;
      72: goto          82
      75: aload         8
      77: invokeinterface #534,  1          // InterfaceMethod org/xnio/channels/StreamChannel.getReadThread:()Lorg/xnio/XnioExecutor;
      82: astore        9
      84: aload         7
      86: aload         6
      88: aload_1
      89: invokestatic  #543                // Method org/xnio/ChannelListeners.getChannelListenerTask:(Ljava/nio/channels/Channel;Lorg/xnio/ChannelListener;)Ljava/lang/Runnable;
      92: invokeinterface #547,  2          // InterfaceMethod org/xnio/XnioExecutor.execute:(Ljava/lang/Runnable;)V
      97: aload         9
      99: aload         8
     101: aload_2
     102: invokestatic  #543                // Method org/xnio/ChannelListeners.getChannelListenerTask:(Ljava/nio/channels/Channel;Lorg/xnio/ChannelListener;)Ljava/lang/Runnable;
     105: invokeinterface #547,  2          // InterfaceMethod org/xnio/XnioExecutor.execute:(Ljava/lang/Runnable;)V
     110: return

  public void createOneWayPipe(org.xnio.ChannelListener<? super org.xnio.channels.StreamSourceChannel>, org.xnio.ChannelListener<? super org.xnio.channels.StreamSinkChannel>, org.xnio.OptionMap) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #565                // Method createHalfDuplexPipe:()Lorg/xnio/ChannelPipe;
       4: astore        4
       6: aload         4
       8: invokevirtual #525                // Method org/xnio/ChannelPipe.getLeftSide:()Lorg/xnio/channels/CloseableChannel;
      11: checkcast     #567                // class org/xnio/channels/StreamSourceChannel
      14: astore        5
      16: aload         5
      18: invokeinterface #568,  1          // InterfaceMethod org/xnio/channels/StreamSourceChannel.getReadThread:()Lorg/xnio/XnioExecutor;
      23: astore        6
      25: aload         4
      27: invokevirtual #539                // Method org/xnio/ChannelPipe.getRightSide:()Lorg/xnio/channels/CloseableChannel;
      30: checkcast     #570                // class org/xnio/channels/StreamSinkChannel
      33: astore        7
      35: aload         7
      37: invokeinterface #571,  1          // InterfaceMethod org/xnio/channels/StreamSinkChannel.getWriteThread:()Lorg/xnio/XnioExecutor;
      42: astore        8
      44: aload         6
      46: aload         5
      48: aload_1
      49: invokestatic  #543                // Method org/xnio/ChannelListeners.getChannelListenerTask:(Ljava/nio/channels/Channel;Lorg/xnio/ChannelListener;)Ljava/lang/Runnable;
      52: invokeinterface #547,  2          // InterfaceMethod org/xnio/XnioExecutor.execute:(Ljava/lang/Runnable;)V
      57: aload         8
      59: aload         7
      61: aload_2
      62: invokestatic  #543                // Method org/xnio/ChannelListeners.getChannelListenerTask:(Ljava/nio/channels/Channel;Lorg/xnio/ChannelListener;)Ljava/lang/Runnable;
      65: invokeinterface #547,  2          // InterfaceMethod org/xnio/XnioExecutor.execute:(Ljava/lang/Runnable;)V
      70: return

  public org.xnio.channels.StreamSourceChannel getInflatingChannel(org.xnio.channels.StreamSourceChannel, org.xnio.OptionMap) throws java.io.IOException;
    Code:
       0: getstatic     #584                // Field org/xnio/XnioWorker$7.$SwitchMap$org$xnio$CompressionType:[I
       3: aload_2
       4: getstatic     #587                // Field org/xnio/Options.COMPRESSION_TYPE:Lorg/xnio/Option;
       7: getstatic     #593                // Field org/xnio/CompressionType.DEFLATE:Lorg/xnio/CompressionType;
      10: invokevirtual #596                // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #589                // class org/xnio/CompressionType
      16: invokevirtual #599                // Method org/xnio/CompressionType.ordinal:()I
      19: iaload
      20: lookupswitch  { // 2
                     1: 48
                     2: 53
               default: 58
          }
      48: iconst_0
      49: istore_3
      50: goto          67
      53: iconst_1
      54: istore_3
      55: goto          67
      58: getstatic     #378                // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      61: invokeinterface #603,  1          // InterfaceMethod org/xnio/_private/Messages.badCompressionFormat:()Ljava/lang/IllegalArgumentException;
      66: athrow
      67: aload_0
      68: aload_1
      69: new           #605                // class java/util/zip/Inflater
      72: dup
      73: iload_3
      74: invokespecial #608                // Method java/util/zip/Inflater."<init>":(Z)V
      77: invokevirtual #611                // Method getInflatingChannel:(Lorg/xnio/channels/StreamSourceChannel;Ljava/util/zip/Inflater;)Lorg/xnio/channels/StreamSourceChannel;
      80: areturn

  protected org.xnio.channels.StreamSourceChannel getInflatingChannel(org.xnio.channels.StreamSourceChannel, java.util.zip.Inflater) throws java.io.IOException;
    Code:
       0: new           #616                // class org/xnio/conduits/ConduitStreamSourceChannel
       3: dup
       4: getstatic     #620                // Field org/xnio/channels/Configurable.EMPTY:Lorg/xnio/channels/Configurable;
       7: new           #622                // class org/xnio/conduits/InflatingStreamSourceConduit
      10: dup
      11: new           #624                // class org/xnio/conduits/StreamSourceChannelWrappingConduit
      14: dup
      15: aload_1
      16: invokespecial #627                // Method org/xnio/conduits/StreamSourceChannelWrappingConduit."<init>":(Lorg/xnio/channels/StreamSourceChannel;)V
      19: aload_2
      20: invokespecial #630                // Method org/xnio/conduits/InflatingStreamSourceConduit."<init>":(Lorg/xnio/conduits/StreamSourceConduit;Ljava/util/zip/Inflater;)V
      23: invokespecial #633                // Method org/xnio/conduits/ConduitStreamSourceChannel."<init>":(Lorg/xnio/channels/Configurable;Lorg/xnio/conduits/StreamSourceConduit;)V
      26: areturn

  public org.xnio.channels.StreamSinkChannel getDeflatingChannel(org.xnio.channels.StreamSinkChannel, org.xnio.OptionMap) throws java.io.IOException;
    Code:
       0: aload_2
       1: getstatic     #640                // Field org/xnio/Options.COMPRESSION_LEVEL:Lorg/xnio/Option;
       4: iconst_m1
       5: invokevirtual #643                // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
       8: istore_3
       9: getstatic     #584                // Field org/xnio/XnioWorker$7.$SwitchMap$org$xnio$CompressionType:[I
      12: aload_2
      13: getstatic     #587                // Field org/xnio/Options.COMPRESSION_TYPE:Lorg/xnio/Option;
      16: getstatic     #593                // Field org/xnio/CompressionType.DEFLATE:Lorg/xnio/CompressionType;
      19: invokevirtual #596                // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #589                // class org/xnio/CompressionType
      25: invokevirtual #599                // Method org/xnio/CompressionType.ordinal:()I
      28: iaload
      29: lookupswitch  { // 2
                     1: 56
                     2: 62
               default: 68
          }
      56: iconst_0
      57: istore        4
      59: goto          77
      62: iconst_1
      63: istore        4
      65: goto          77
      68: getstatic     #378                // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      71: invokeinterface #603,  1          // InterfaceMethod org/xnio/_private/Messages.badCompressionFormat:()Ljava/lang/IllegalArgumentException;
      76: athrow
      77: aload_0
      78: aload_1
      79: new           #645                // class java/util/zip/Deflater
      82: dup
      83: iload_3
      84: iload         4
      86: invokespecial #648                // Method java/util/zip/Deflater."<init>":(IZ)V
      89: invokevirtual #651                // Method getDeflatingChannel:(Lorg/xnio/channels/StreamSinkChannel;Ljava/util/zip/Deflater;)Lorg/xnio/channels/StreamSinkChannel;
      92: areturn

  protected org.xnio.channels.StreamSinkChannel getDeflatingChannel(org.xnio.channels.StreamSinkChannel, java.util.zip.Deflater) throws java.io.IOException;
    Code:
       0: new           #654                // class org/xnio/conduits/ConduitStreamSinkChannel
       3: dup
       4: getstatic     #620                // Field org/xnio/channels/Configurable.EMPTY:Lorg/xnio/channels/Configurable;
       7: new           #656                // class org/xnio/conduits/DeflatingStreamSinkConduit
      10: dup
      11: new           #658                // class org/xnio/conduits/StreamSinkChannelWrappingConduit
      14: dup
      15: aload_1
      16: invokespecial #661                // Method org/xnio/conduits/StreamSinkChannelWrappingConduit."<init>":(Lorg/xnio/channels/StreamSinkChannel;)V
      19: aload_2
      20: invokespecial #664                // Method org/xnio/conduits/DeflatingStreamSinkConduit."<init>":(Lorg/xnio/conduits/StreamSinkConduit;Ljava/util/zip/Deflater;)V
      23: invokespecial #667                // Method org/xnio/conduits/ConduitStreamSinkChannel."<init>":(Lorg/xnio/channels/Configurable;Lorg/xnio/conduits/StreamSinkConduit;)V
      26: areturn

  public org.xnio.ChannelPipe<org.xnio.channels.StreamChannel, org.xnio.channels.StreamChannel> createFullDuplexPipe() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #451                // Method chooseThread:()Lorg/xnio/XnioIoThread;
       4: invokevirtual #671                // Method org/xnio/XnioIoThread.createFullDuplexPipe:()Lorg/xnio/ChannelPipe;
       7: areturn

  public org.xnio.ChannelPipe<org.xnio.StreamConnection, org.xnio.StreamConnection> createFullDuplexPipeConnection() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #451                // Method chooseThread:()Lorg/xnio/XnioIoThread;
       4: invokevirtual #675                // Method org/xnio/XnioIoThread.createFullDuplexPipeConnection:()Lorg/xnio/ChannelPipe;
       7: areturn

  public org.xnio.ChannelPipe<org.xnio.channels.StreamSourceChannel, org.xnio.channels.StreamSinkChannel> createHalfDuplexPipe() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #451                // Method chooseThread:()Lorg/xnio/XnioIoThread;
       4: invokevirtual #677                // Method org/xnio/XnioIoThread.createHalfDuplexPipe:()Lorg/xnio/ChannelPipe;
       7: areturn

  public org.xnio.ChannelPipe<org.xnio.StreamConnection, org.xnio.StreamConnection> createFullDuplexPipeConnection(org.xnio.XnioIoFactory) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #451                // Method chooseThread:()Lorg/xnio/XnioIoThread;
       4: aload_1
       5: invokevirtual #681                // Method org/xnio/XnioIoThread.createFullDuplexPipeConnection:(Lorg/xnio/XnioIoFactory;)Lorg/xnio/ChannelPipe;
       8: areturn

  public org.xnio.ChannelPipe<org.xnio.channels.StreamSourceChannel, org.xnio.channels.StreamSinkChannel> createHalfDuplexPipe(org.xnio.XnioIoFactory) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #451                // Method chooseThread:()Lorg/xnio/XnioIoThread;
       4: aload_1
       5: invokevirtual #686                // Method org/xnio/XnioIoThread.createHalfDuplexPipe:(Lorg/xnio/XnioIoFactory;)Lorg/xnio/ChannelPipe;
       8: areturn

  public abstract void shutdown();

  public abstract java.util.List<java.lang.Runnable> shutdownNow();

  public abstract boolean isShutdown();

  public abstract boolean isTerminated();

  public abstract boolean awaitTermination(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;

  public abstract void awaitTermination() throws java.lang.InterruptedException;

  public final org.xnio.XnioIoThread getIoThread();
    Code:
       0: aload_0
       1: invokevirtual #451                // Method chooseThread:()Lorg/xnio/XnioIoThread;
       4: areturn

  public abstract org.xnio.XnioIoThread getIoThread(int);

  protected java.lang.Runnable getTerminationTask();
    Code:
       0: aload_0
       1: getfield      #148                // Field terminationTask:Ljava/lang/Runnable;
       4: areturn

  protected void taskPoolTerminated();
    Code:
       0: return

  protected void shutDownTaskPool();
    Code:
       0: aload_0
       1: invokevirtual #705                // Method isTaskPoolExternal:()Z
       4: ifeq          14
       7: aload_0
       8: invokevirtual #707                // Method taskPoolTerminated:()V
      11: goto          26
      14: new           #54                 // class org/xnio/XnioWorker$3
      17: dup
      18: aload_0
      19: invokespecial #708                // Method org/xnio/XnioWorker$3."<init>":(Lorg/xnio/XnioWorker;)V
      22: invokestatic  #714                // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      25: pop
      26: return

  protected java.util.List<java.lang.Runnable> shutDownTaskPoolNow();
    Code:
       0: aload_0
       1: invokevirtual #705                // Method isTaskPoolExternal:()Z
       4: ifne          22
       7: new           #52                 // class org/xnio/XnioWorker$4
      10: dup
      11: aload_0
      12: invokespecial #716                // Method org/xnio/XnioWorker$4."<init>":(Lorg/xnio/XnioWorker;)V
      15: invokestatic  #714                // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      18: checkcast     #718                // class java/util/List
      21: areturn
      22: invokestatic  #723                // Method java/util/Collections.emptyList:()Ljava/util/List;
      25: areturn

  protected boolean isTaskPoolExternal();
    Code:
       0: aload_0
       1: getfield      #217                // Field taskPool:Lorg/xnio/XnioWorker$TaskPool;
       4: instanceof    #18                 // class org/xnio/XnioWorker$ExternalTaskPool
       7: ireturn

  public void execute(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #217                // Field taskPool:Lorg/xnio/XnioWorker$TaskPool;
       4: aload_1
       5: invokeinterface #724,  2          // InterfaceMethod org/xnio/XnioWorker$TaskPool.execute:(Ljava/lang/Runnable;)V
      10: return

  public abstract int getIoThreadCount();

  public boolean supportsOption(org.xnio.Option<?>);
    Code:
       0: aload_0
       1: getfield      #217                // Field taskPool:Lorg/xnio/XnioWorker$TaskPool;
       4: instanceof    #18                 // class org/xnio/XnioWorker$ExternalTaskPool
       7: ifeq          22
      10: getstatic     #731                // Field EXTERNAL_POOL_OPTIONS:Ljava/util/Set;
      13: aload_1
      14: invokeinterface #737,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      19: goto          31
      22: getstatic     #739                // Field OPTIONS:Ljava/util/Set;
      25: aload_1
      26: invokeinterface #737,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      31: ireturn

  public <T> T getOption(org.xnio.Option<T>) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #746                // Method supportsOption:(Lorg/xnio/Option;)Z
       5: ifne          10
       8: aconst_null
       9: areturn
      10: aload_1
      11: getstatic     #749                // Field org/xnio/Options.WORKER_TASK_CORE_THREADS:Lorg/xnio/Option;
      14: invokevirtual #752                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      17: ifeq          37
      20: aload_1
      21: aload_0
      22: getfield      #217                // Field taskPool:Lorg/xnio/XnioWorker$TaskPool;
      25: invokeinterface #755,  1          // InterfaceMethod org/xnio/XnioWorker$TaskPool.getCorePoolSize:()I
      30: invokestatic  #761                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      33: invokevirtual #765                // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      36: areturn
      37: aload_1
      38: getstatic     #768                // Field org/xnio/Options.WORKER_TASK_MAX_THREADS:Lorg/xnio/Option;
      41: invokevirtual #752                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      44: ifeq          64
      47: aload_1
      48: aload_0
      49: getfield      #217                // Field taskPool:Lorg/xnio/XnioWorker$TaskPool;
      52: invokeinterface #771,  1          // InterfaceMethod org/xnio/XnioWorker$TaskPool.getMaximumPoolSize:()I
      57: invokestatic  #761                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      60: invokevirtual #765                // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      63: areturn
      64: aload_1
      65: getstatic     #774                // Field org/xnio/Options.WORKER_TASK_KEEPALIVE:Lorg/xnio/Option;
      68: invokevirtual #752                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      71: ifeq          101
      74: aload_1
      75: ldc2_w        #775                // long 2147483647l
      78: aload_0
      79: getfield      #217                // Field taskPool:Lorg/xnio/XnioWorker$TaskPool;
      82: getstatic     #253                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      85: invokeinterface #780,  2          // InterfaceMethod org/xnio/XnioWorker$TaskPool.getKeepAliveTime:(Ljava/util/concurrent/TimeUnit;)J
      90: invokestatic  #784                // Method java/lang/Math.min:(JJ)J
      93: l2i
      94: invokestatic  #761                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      97: invokevirtual #765                // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     100: areturn
     101: aconst_null
     102: areturn

  public <T> T setOption(org.xnio.Option<T>, T) throws java.lang.IllegalArgumentException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #746                // Method supportsOption:(Lorg/xnio/Option;)Z
       5: ifne          10
       8: aconst_null
       9: areturn
      10: aload_1
      11: getstatic     #749                // Field org/xnio/Options.WORKER_TASK_CORE_THREADS:Lorg/xnio/Option;
      14: invokevirtual #752                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      17: ifeq          61
      20: aload_0
      21: getfield      #217                // Field taskPool:Lorg/xnio/XnioWorker$TaskPool;
      24: invokeinterface #755,  1          // InterfaceMethod org/xnio/XnioWorker$TaskPool.getCorePoolSize:()I
      29: istore_3
      30: aload_0
      31: getfield      #217                // Field taskPool:Lorg/xnio/XnioWorker$TaskPool;
      34: getstatic     #749                // Field org/xnio/Options.WORKER_TASK_CORE_THREADS:Lorg/xnio/Option;
      37: aload_2
      38: invokevirtual #765                // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      41: checkcast     #757                // class java/lang/Integer
      44: invokevirtual #792                // Method java/lang/Integer.intValue:()I
      47: invokeinterface #795,  2          // InterfaceMethod org/xnio/XnioWorker$TaskPool.setCorePoolSize:(I)V
      52: aload_1
      53: iload_3
      54: invokestatic  #761                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      57: invokevirtual #765                // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      60: areturn
      61: aload_1
      62: getstatic     #768                // Field org/xnio/Options.WORKER_TASK_MAX_THREADS:Lorg/xnio/Option;
      65: invokevirtual #752                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      68: ifeq          112
      71: aload_0
      72: getfield      #217                // Field taskPool:Lorg/xnio/XnioWorker$TaskPool;
      75: invokeinterface #771,  1          // InterfaceMethod org/xnio/XnioWorker$TaskPool.getMaximumPoolSize:()I
      80: istore_3
      81: aload_0
      82: getfield      #217                // Field taskPool:Lorg/xnio/XnioWorker$TaskPool;
      85: getstatic     #768                // Field org/xnio/Options.WORKER_TASK_MAX_THREADS:Lorg/xnio/Option;
      88: aload_2
      89: invokevirtual #765                // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      92: checkcast     #757                // class java/lang/Integer
      95: invokevirtual #792                // Method java/lang/Integer.intValue:()I
      98: invokeinterface #797,  2          // InterfaceMethod org/xnio/XnioWorker$TaskPool.setMaximumPoolSize:(I)V
     103: aload_1
     104: iload_3
     105: invokestatic  #761                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     108: invokevirtual #765                // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     111: areturn
     112: aload_1
     113: getstatic     #774                // Field org/xnio/Options.WORKER_TASK_KEEPALIVE:Lorg/xnio/Option;
     116: invokevirtual #752                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     119: ifeq          177
     122: aload_0
     123: getfield      #217                // Field taskPool:Lorg/xnio/XnioWorker$TaskPool;
     126: getstatic     #253                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     129: invokeinterface #780,  2          // InterfaceMethod org/xnio/XnioWorker$TaskPool.getKeepAliveTime:(Ljava/util/concurrent/TimeUnit;)J
     134: lstore_3
     135: aload_0
     136: getfield      #217                // Field taskPool:Lorg/xnio/XnioWorker$TaskPool;
     139: getstatic     #774                // Field org/xnio/Options.WORKER_TASK_KEEPALIVE:Lorg/xnio/Option;
     142: aload_2
     143: invokevirtual #765                // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     146: checkcast     #757                // class java/lang/Integer
     149: invokevirtual #792                // Method java/lang/Integer.intValue:()I
     152: i2l
     153: getstatic     #253                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     156: invokeinterface #800,  4          // InterfaceMethod org/xnio/XnioWorker$TaskPool.setKeepAliveTime:(JLjava/util/concurrent/TimeUnit;)V
     161: aload_1
     162: ldc2_w        #775                // long 2147483647l
     165: lload_3
     166: invokestatic  #784                // Method java/lang/Math.min:(JJ)J
     169: l2i
     170: invokestatic  #761                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     173: invokevirtual #765                // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     176: areturn
     177: aconst_null
     178: areturn

  public org.xnio.Xnio getXnio();
    Code:
       0: aload_0
       1: getfield      #142                // Field xnio:Lorg/xnio/Xnio;
       4: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #192                // Field name:Ljava/lang/String;
       4: areturn

  protected abstract org.xnio.XnioIoThread chooseThread();

  protected final int getCoreWorkerPoolSize();
    Code:
       0: aload_0
       1: getfield      #217                // Field taskPool:Lorg/xnio/XnioWorker$TaskPool;
       4: invokeinterface #755,  1          // InterfaceMethod org/xnio/XnioWorker$TaskPool.getCorePoolSize:()I
       9: ireturn

  protected final int getBusyWorkerThreadCount();
    Code:
       0: aload_0
       1: getfield      #217                // Field taskPool:Lorg/xnio/XnioWorker$TaskPool;
       4: invokeinterface #812,  1          // InterfaceMethod org/xnio/XnioWorker$TaskPool.getActiveCount:()I
       9: ireturn

  protected final int getWorkerPoolSize();
    Code:
       0: aload_0
       1: getfield      #217                // Field taskPool:Lorg/xnio/XnioWorker$TaskPool;
       4: invokeinterface #816,  1          // InterfaceMethod org/xnio/XnioWorker$TaskPool.getPoolSize:()I
       9: ireturn

  protected final int getMaxWorkerPoolSize();
    Code:
       0: aload_0
       1: getfield      #217                // Field taskPool:Lorg/xnio/XnioWorker$TaskPool;
       4: invokeinterface #771,  1          // InterfaceMethod org/xnio/XnioWorker$TaskPool.getMaximumPoolSize:()I
       9: ireturn

  protected final int getWorkerQueueSize();
    Code:
       0: aload_0
       1: getfield      #217                // Field taskPool:Lorg/xnio/XnioWorker$TaskPool;
       4: invokeinterface #820,  1          // InterfaceMethod org/xnio/XnioWorker$TaskPool.getQueueSize:()I
       9: ireturn

  protected org.wildfly.common.net.CidrAddressTable<java.net.InetSocketAddress> getBindAddressTable();
    Code:
       0: aload_0
       1: getfield      #202                // Field bindAddressTable:Lorg/wildfly/common/net/CidrAddressTable;
       4: areturn

  public java.net.InetSocketAddress getBindAddress(java.net.InetAddress);
    Code:
       0: aload_0
       1: getfield      #202                // Field bindAddressTable:Lorg/wildfly/common/net/CidrAddressTable;
       4: aload_1
       5: invokevirtual #829                // Method org/wildfly/common/net/CidrAddressTable.get:(Ljava/net/InetAddress;)Ljava/lang/Object;
       8: checkcast     #362                // class java/net/InetSocketAddress
      11: areturn

  public abstract org.xnio.management.XnioWorkerMXBean getMXBean();

  protected abstract org.xnio.ManagementRegistration registerServerMXBean(org.xnio.management.XnioServerMXBean);

  private static java.lang.Void lambda$static$2();
    Code:
       0: getstatic     #315                // Field CONTEXT_MANAGER:Lorg/wildfly/common/context/ContextManager;
       3: invokedynamic #854,  0            // InvokeDynamic #0:get:()Ljava/util/function/Supplier;
       8: invokevirtual #860                // Method org/wildfly/common/context/ContextManager.setGlobalDefaultSupplier:(Ljava/util/function/Supplier;)V
      11: aconst_null
      12: areturn

  private static org.xnio.XnioWorker lambda$null$1();
    Code:
       0: getstatic     #865                // Field org/xnio/DefaultXnioWorkerHolder.INSTANCE:Lorg/xnio/XnioWorker;
       3: areturn

  private static org.wildfly.common.context.ContextManager lambda$static$0();
    Code:
       0: new           #856                // class org/wildfly/common/context/ContextManager
       3: dup
       4: ldc           #2                  // class org/xnio/XnioWorker
       6: ldc_w         #868                // String org.xnio.worker
       9: invokespecial #871                // Method org/wildfly/common/context/ContextManager."<init>":(Ljava/lang/Class;Ljava/lang/String;)V
      12: areturn

  static org.xnio.XnioWorker$TaskPool access$200(org.xnio.XnioWorker);
    Code:
       0: aload_0
       1: getfield      #217                // Field taskPool:Lorg/xnio/XnioWorker$TaskPool;
       4: areturn

  static org.jboss.logging.Logger access$300();
    Code:
       0: getstatic     #878                // Field log:Lorg/jboss/logging/Logger;
       3: areturn

  static org.xnio.Xnio access$500(org.xnio.XnioWorker);
    Code:
       0: aload_0
       1: getfield      #142                // Field xnio:Lorg/xnio/Xnio;
       4: areturn

  static java.lang.String access$600(org.xnio.XnioWorker);
    Code:
       0: aload_0
       1: getfield      #192                // Field name:Ljava/lang/String;
       4: areturn

  static int access$700(org.xnio.XnioWorker);
    Code:
       0: aload_0
       1: invokespecial #886                // Method getNextSeq:()I
       4: ireturn

  static {};
    Code:
       0: ldc           #2                  // class org/xnio/XnioWorker
       2: ldc_w         #888                // String taskSeq
       5: invokestatic  #892                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       8: putstatic     #123                // Field taskSeqUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      11: new           #179                // class java/util/concurrent/atomic/AtomicInteger
      14: dup
      15: iconst_1
      16: invokespecial #894                // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      19: putstatic     #177                // Field seq:Ljava/util/concurrent/atomic/AtomicInteger;
      22: new           #896                // class java/lang/RuntimePermission
      25: dup
      26: ldc_w         #898                // String createXnioWorker
      29: invokespecial #901                // Method java/lang/RuntimePermission."<init>":(Ljava/lang/String;)V
      32: putstatic     #156                // Field CREATE_WORKER_PERMISSION:Ljava/lang/RuntimePermission;
      35: ldc_w         #903                // String org.xnio
      38: invokestatic  #909                // Method org/jboss/logging/Logger.getLogger:(Ljava/lang/String;)Lorg/jboss/logging/Logger;
      41: putstatic     #878                // Field log:Lorg/jboss/logging/Logger;
      44: invokedynamic #917,  0            // InvokeDynamic #1:run:()Ljava/security/PrivilegedAction;
      49: invokestatic  #714                // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      52: checkcast     #856                // class org/wildfly/common/context/ContextManager
      55: putstatic     #315                // Field CONTEXT_MANAGER:Lorg/wildfly/common/context/ContextManager;
      58: invokedynamic #922,  0            // InvokeDynamic #2:run:()Ljava/security/PrivilegedAction;
      63: invokestatic  #714                // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      66: pop
      67: invokestatic  #926                // Method org/xnio/Option.setBuilder:()Lorg/xnio/Option$SetBuilder;
      70: getstatic     #749                // Field org/xnio/Options.WORKER_TASK_CORE_THREADS:Lorg/xnio/Option;
      73: invokevirtual #930                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      76: getstatic     #768                // Field org/xnio/Options.WORKER_TASK_MAX_THREADS:Lorg/xnio/Option;
      79: invokevirtual #930                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      82: getstatic     #774                // Field org/xnio/Options.WORKER_TASK_KEEPALIVE:Lorg/xnio/Option;
      85: invokevirtual #930                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      88: invokevirtual #934                // Method org/xnio/Option$SetBuilder.create:()Ljava/util/Set;
      91: putstatic     #739                // Field OPTIONS:Ljava/util/Set;
      94: invokestatic  #926                // Method org/xnio/Option.setBuilder:()Lorg/xnio/Option$SetBuilder;
      97: invokevirtual #934                // Method org/xnio/Option$SetBuilder.create:()Ljava/util/Set;
     100: putstatic     #731                // Field EXTERNAL_POOL_OPTIONS:Ljava/util/Set;
     103: new           #50                 // class org/xnio/XnioWorker$5
     106: dup
     107: invokespecial #935                // Method org/xnio/XnioWorker$5."<init>":()V
     110: putstatic     #413                // Field STREAM_WRAPPING_HANDLER:Lorg/xnio/IoFuture$HandlingNotifier;
     113: new           #48                 // class org/xnio/XnioWorker$6
     116: dup
     117: invokespecial #936                // Method org/xnio/XnioWorker$6."<init>":()V
     120: putstatic     #472                // Field MESSAGE_WRAPPING_HANDLER:Lorg/xnio/IoFuture$HandlingNotifier;
     123: return
}
