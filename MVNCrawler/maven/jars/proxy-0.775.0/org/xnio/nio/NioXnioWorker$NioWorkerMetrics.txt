Compiled from "NioXnioWorker.java"
class org.xnio.nio.NioXnioWorker$NioWorkerMetrics implements org.xnio.management.XnioWorkerMXBean,java.io.Closeable {
  private final java.lang.String workerName;

  private final java.util.concurrent.CopyOnWriteArrayList<org.xnio.management.XnioServerMXBean> serverMetrics;

  private java.io.Closeable mbeanHandle;

  final org.xnio.nio.NioXnioWorker this$0;

  private org.xnio.nio.NioXnioWorker$NioWorkerMetrics(org.xnio.nio.NioXnioWorker, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field this$0:Lorg/xnio/nio/NioXnioWorker;
       5: aload_0
       6: invokespecial #5                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #6                  // class java/util/concurrent/CopyOnWriteArrayList
      13: dup
      14: invokespecial #7                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      17: putfield      #8                  // Field serverMetrics:Ljava/util/concurrent/CopyOnWriteArrayList;
      20: aload_0
      21: aload_2
      22: putfield      #9                  // Field workerName:Ljava/lang/String;
      25: return

  public java.lang.String getProviderName();
    Code:
       0: ldc           #10                 // String nio
       2: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #9                  // Field workerName:Ljava/lang/String;
       4: areturn

  public boolean isShutdownRequested();
    Code:
       0: aload_0
       1: getfield      #4                  // Field this$0:Lorg/xnio/nio/NioXnioWorker;
       4: invokevirtual #11                 // Method org/xnio/nio/NioXnioWorker.isShutdown:()Z
       7: ireturn

  public int getCoreWorkerPoolSize();
    Code:
       0: aload_0
       1: getfield      #4                  // Field this$0:Lorg/xnio/nio/NioXnioWorker;
       4: invokestatic  #12                 // Method org/xnio/nio/NioXnioWorker.access$300:(Lorg/xnio/nio/NioXnioWorker;)I
       7: ireturn

  public int getMaxWorkerPoolSize();
    Code:
       0: aload_0
       1: getfield      #4                  // Field this$0:Lorg/xnio/nio/NioXnioWorker;
       4: invokestatic  #13                 // Method org/xnio/nio/NioXnioWorker.access$400:(Lorg/xnio/nio/NioXnioWorker;)I
       7: ireturn

  public int getWorkerPoolSize();
    Code:
       0: aload_0
       1: getfield      #4                  // Field this$0:Lorg/xnio/nio/NioXnioWorker;
       4: invokestatic  #14                 // Method org/xnio/nio/NioXnioWorker.access$500:(Lorg/xnio/nio/NioXnioWorker;)I
       7: ireturn

  public int getBusyWorkerThreadCount();
    Code:
       0: aload_0
       1: getfield      #4                  // Field this$0:Lorg/xnio/nio/NioXnioWorker;
       4: invokestatic  #15                 // Method org/xnio/nio/NioXnioWorker.access$600:(Lorg/xnio/nio/NioXnioWorker;)I
       7: ireturn

  public int getIoThreadCount();
    Code:
       0: aload_0
       1: getfield      #4                  // Field this$0:Lorg/xnio/nio/NioXnioWorker;
       4: invokevirtual #16                 // Method org/xnio/nio/NioXnioWorker.getIoThreadCount:()I
       7: ireturn

  public int getWorkerQueueSize();
    Code:
       0: aload_0
       1: getfield      #4                  // Field this$0:Lorg/xnio/nio/NioXnioWorker;
       4: invokestatic  #17                 // Method org/xnio/nio/NioXnioWorker.access$700:(Lorg/xnio/nio/NioXnioWorker;)I
       7: ireturn

  private org.xnio.ManagementRegistration registerServerMXBean(org.xnio.management.XnioServerMXBean);
    Code:
       0: aload_0
       1: getfield      #8                  // Field serverMetrics:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: aload_1
       5: invokevirtual #18                 // Method java/util/concurrent/CopyOnWriteArrayList.addIfAbsent:(Ljava/lang/Object;)Z
       8: pop
       9: aload_1
      10: invokestatic  #19                 // Method org/xnio/nio/NioXnio.register:(Lorg/xnio/management/XnioServerMXBean;)Ljava/io/Closeable;
      13: astore_2
      14: aload_0
      15: aload_1
      16: aload_2
      17: invokedynamic #20,  0             // InvokeDynamic #0:close:(Lorg/xnio/nio/NioXnioWorker$NioWorkerMetrics;Lorg/xnio/management/XnioServerMXBean;Ljava/io/Closeable;)Lorg/xnio/ManagementRegistration;
      22: areturn

  public java.util.Set<org.xnio.management.XnioServerMXBean> getServerMXBeans();
    Code:
       0: new           #21                 // class java/util/LinkedHashSet
       3: dup
       4: aload_0
       5: getfield      #8                  // Field serverMetrics:Ljava/util/concurrent/CopyOnWriteArrayList;
       8: invokespecial #22                 // Method java/util/LinkedHashSet."<init>":(Ljava/util/Collection;)V
      11: areturn

  private void register();
    Code:
       0: aload_0
       1: aload_0
       2: invokestatic  #23                 // Method org/xnio/nio/NioXnio.register:(Lorg/xnio/management/XnioWorkerMXBean;)Ljava/io/Closeable;
       5: putfield      #24                 // Field mbeanHandle:Ljava/io/Closeable;
       8: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #24                 // Field mbeanHandle:Ljava/io/Closeable;
       4: invokestatic  #25                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
       7: aload_0
       8: getfield      #8                  // Field serverMetrics:Ljava/util/concurrent/CopyOnWriteArrayList;
      11: invokevirtual #26                 // Method java/util/concurrent/CopyOnWriteArrayList.clear:()V
      14: return

  private void lambda$registerServerMXBean$0(org.xnio.management.XnioServerMXBean, java.io.Closeable);
    Code:
       0: aload_0
       1: getfield      #8                  // Field serverMetrics:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: aload_1
       5: invokevirtual #27                 // Method java/util/concurrent/CopyOnWriteArrayList.remove:(Ljava/lang/Object;)Z
       8: pop
       9: aload_2
      10: invokestatic  #25                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      13: return

  org.xnio.nio.NioXnioWorker$NioWorkerMetrics(org.xnio.nio.NioXnioWorker, java.lang.String, org.xnio.nio.NioXnioWorker$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #3                  // Method "<init>":(Lorg/xnio/nio/NioXnioWorker;Ljava/lang/String;)V
       6: return

  static void access$100(org.xnio.nio.NioXnioWorker$NioWorkerMetrics);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method register:()V
       4: return

  static org.xnio.ManagementRegistration access$200(org.xnio.nio.NioXnioWorker$NioWorkerMetrics, org.xnio.management.XnioServerMXBean);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method registerServerMXBean:(Lorg/xnio/management/XnioServerMXBean;)Lorg/xnio/ManagementRegistration;
       5: areturn
}
