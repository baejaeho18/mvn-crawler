Compiled from "NioXnio.java"
final class org.xnio.nio.NioXnio extends org.xnio.Xnio {
  static final boolean IS_HP_UX;

  static final boolean HAS_BUGGY_EVENT_PORT;

  final org.xnio.nio.NioXnio$SelectorCreator tempSelectorCreator;

  final org.xnio.nio.NioXnio$SelectorCreator mainSelectorCreator;

  private final java.lang.ThreadLocal<org.xnio.nio.NioXnio$FinalizableSelectorHolder> selectorThreadLocal;

  org.xnio.nio.NioXnio();
    Code:
       0: aload_0
       1: ldc           #1                  // String nio
       3: invokespecial #2                  // Method org/xnio/Xnio."<init>":(Ljava/lang/String;)V
       6: aload_0
       7: new           #3                  // class org/xnio/nio/NioXnio$4
      10: dup
      11: aload_0
      12: invokespecial #4                  // Method org/xnio/nio/NioXnio$4."<init>":(Lorg/xnio/nio/NioXnio;)V
      15: putfield      #5                  // Field selectorThreadLocal:Ljava/lang/ThreadLocal;
      18: new           #6                  // class org/xnio/nio/NioXnio$2
      21: dup
      22: aload_0
      23: invokespecial #7                  // Method org/xnio/nio/NioXnio$2."<init>":(Lorg/xnio/nio/NioXnio;)V
      26: invokestatic  #8                  // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      29: checkcast     #9                  // class "[Ljava/lang/Object;"
      32: astore_1
      33: aload_0
      34: aload_1
      35: iconst_1
      36: aaload
      37: checkcast     #10                 // class org/xnio/nio/NioXnio$SelectorCreator
      40: putfield      #11                 // Field tempSelectorCreator:Lorg/xnio/nio/NioXnio$SelectorCreator;
      43: aload_0
      44: aload_1
      45: iconst_2
      46: aaload
      47: checkcast     #10                 // class org/xnio/nio/NioXnio$SelectorCreator
      50: putfield      #12                 // Field mainSelectorCreator:Lorg/xnio/nio/NioXnio$SelectorCreator;
      53: getstatic     #13                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
      56: aload_0
      57: getfield      #12                 // Field mainSelectorCreator:Lorg/xnio/nio/NioXnio$SelectorCreator;
      60: aload_0
      61: getfield      #11                 // Field tempSelectorCreator:Lorg/xnio/nio/NioXnio$SelectorCreator;
      64: invokeinterface #14,  3           // InterfaceMethod org/xnio/nio/Log.selectors:(Ljava/lang/Object;Ljava/lang/Object;)V
      69: new           #15                 // class org/xnio/nio/NioXnio$3
      72: dup
      73: aload_0
      74: invokespecial #16                 // Method org/xnio/nio/NioXnio$3."<init>":(Lorg/xnio/nio/NioXnio;)V
      77: invokestatic  #17                 // Method register:(Lorg/xnio/management/XnioProviderMXBean;)Ljava/io/Closeable;
      80: pop
      81: return

  protected org.xnio.XnioWorker build(org.xnio.XnioWorker$Builder);
    Code:
       0: new           #18                 // class org/xnio/nio/NioXnioWorker
       3: dup
       4: aload_1
       5: invokespecial #19                 // Method org/xnio/nio/NioXnioWorker."<init>":(Lorg/xnio/XnioWorker$Builder;)V
       8: astore_2
       9: aload_2
      10: invokevirtual #20                 // Method org/xnio/nio/NioXnioWorker.start:()V
      13: aload_2
      14: areturn

  public org.xnio.FileSystemWatcher createFileSystemWatcher(java.lang.String, org.xnio.OptionMap);
    Code:
       0: aload_2
       1: getstatic     #21                 // Field org/xnio/Options.THREAD_DAEMON:Lorg/xnio/Option;
       4: iconst_1
       5: invokevirtual #22                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
       8: istore_3
       9: new           #23                 // class org/xnio/nio/WatchServiceFileSystemWatcher
      12: dup
      13: aload_1
      14: iload_3
      15: invokespecial #24                 // Method org/xnio/nio/WatchServiceFileSystemWatcher."<init>":(Ljava/lang/String;Z)V
      18: areturn
      19: astore_3
      20: aload_0
      21: aload_1
      22: aload_2
      23: invokespecial #26                 // Method org/xnio/Xnio.createFileSystemWatcher:(Ljava/lang/String;Lorg/xnio/OptionMap;)Lorg/xnio/FileSystemWatcher;
      26: areturn
    Exception table:
       from    to  target type
           0    18    19   Class java/lang/LinkageError

  protected void handleThreadExit();
    Code:
       0: getstatic     #13                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
       3: ldc           #27                 // String Invoke selectorThreadLocal.remove() on Thread [%s] exits
       5: invokestatic  #28                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       8: invokevirtual #29                 // Method java/lang/Thread.getName:()Ljava/lang/String;
      11: invokeinterface #30,  3           // InterfaceMethod org/xnio/nio/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      16: aload_0
      17: getfield      #5                  // Field selectorThreadLocal:Ljava/lang/ThreadLocal;
      20: invokevirtual #31                 // Method java/lang/ThreadLocal.remove:()V
      23: aload_0
      24: invokespecial #32                 // Method org/xnio/Xnio.handleThreadExit:()V
      27: return

  java.nio.channels.Selector getSelector() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field selectorThreadLocal:Ljava/lang/ThreadLocal;
       4: astore_1
       5: aload_1
       6: invokevirtual #33                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       9: checkcast     #34                 // class org/xnio/nio/NioXnio$FinalizableSelectorHolder
      12: astore_2
      13: aload_2
      14: ifnonnull     40
      17: new           #34                 // class org/xnio/nio/NioXnio$FinalizableSelectorHolder
      20: dup
      21: aload_0
      22: getfield      #11                 // Field tempSelectorCreator:Lorg/xnio/nio/NioXnio$SelectorCreator;
      25: invokeinterface #35,  1           // InterfaceMethod org/xnio/nio/NioXnio$SelectorCreator.open:()Ljava/nio/channels/Selector;
      30: aconst_null
      31: invokespecial #36                 // Method org/xnio/nio/NioXnio$FinalizableSelectorHolder."<init>":(Ljava/nio/channels/Selector;Lorg/xnio/nio/NioXnio$1;)V
      34: astore_2
      35: aload_1
      36: aload_2
      37: invokevirtual #37                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      40: aload_2
      41: getfield      #38                 // Field org/xnio/nio/NioXnio$FinalizableSelectorHolder.selector:Ljava/nio/channels/Selector;
      44: areturn

  protected static java.io.Closeable register(org.xnio.management.XnioWorkerMXBean);
    Code:
       0: aload_0
       1: invokestatic  #39                 // Method org/xnio/Xnio.register:(Lorg/xnio/management/XnioWorkerMXBean;)Ljava/io/Closeable;
       4: areturn

  protected static java.io.Closeable register(org.xnio.management.XnioServerMXBean);
    Code:
       0: aload_0
       1: invokestatic  #40                 // Method org/xnio/Xnio.register:(Lorg/xnio/management/XnioServerMXBean;)Ljava/io/Closeable;
       4: areturn

  static {};
    Code:
       0: getstatic     #13                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
       3: invokestatic  #41                 // Method org/xnio/nio/Version.getVersionString:()Ljava/lang/String;
       6: invokeinterface #42,  2           // InterfaceMethod org/xnio/nio/Log.greeting:(Ljava/lang/String;)V
      11: new           #43                 // class org/xnio/nio/NioXnio$1
      14: dup
      15: invokespecial #44                 // Method org/xnio/nio/NioXnio$1."<init>":()V
      18: invokestatic  #8                  // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      21: checkcast     #45                 // class java/lang/Boolean
      24: invokevirtual #46                 // Method java/lang/Boolean.booleanValue:()Z
      27: putstatic     #47                 // Field IS_HP_UX:Z
      30: iconst_1
      31: putstatic     #48                 // Field HAS_BUGGY_EVENT_PORT:Z
      34: return
}
