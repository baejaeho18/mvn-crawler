Compiled from "NioXnioWorker.java"
final class org.xnio.nio.NioXnioWorker extends org.xnio.XnioWorker {
  private static final int CLOSE_REQ;

  private static final int CLOSE_COMP;

  private final long workerStackSize;

  private volatile int state;

  private final org.xnio.nio.WorkerThread[] workerThreads;

  private final org.xnio.nio.WorkerThread acceptThread;

  private final org.xnio.nio.NioXnioWorker$NioWorkerMetrics metrics;

  private volatile java.lang.Thread shutdownWaiter;

  private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<org.xnio.nio.NioXnioWorker, java.lang.Thread> shutdownWaiterUpdater;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.xnio.nio.NioXnioWorker> stateUpdater;

  org.xnio.nio.NioXnioWorker(org.xnio.XnioWorker$Builder);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method org/xnio/XnioWorker."<init>":(Lorg/xnio/XnioWorker$Builder;)V
       5: aload_0
       6: iconst_1
       7: putfield      #7                  // Field state:I
      10: aload_1
      11: invokevirtual #8                  // Method org/xnio/XnioWorker$Builder.getXnio:()Lorg/xnio/Xnio;
      14: checkcast     #9                  // class org/xnio/nio/NioXnio
      17: astore_2
      18: aload_1
      19: invokevirtual #10                 // Method org/xnio/XnioWorker$Builder.getWorkerIoThreads:()I
      22: istore_3
      23: aload_0
      24: aload_1
      25: invokevirtual #11                 // Method org/xnio/XnioWorker$Builder.getWorkerStackSize:()J
      28: putfield      #12                 // Field workerStackSize:J
      31: aload_0
      32: invokevirtual #13                 // Method getName:()Ljava/lang/String;
      35: astore        4
      37: iload_3
      38: anewarray     #14                 // class org/xnio/nio/WorkerThread
      41: astore        5
      43: aload_1
      44: invokevirtual #15                 // Method org/xnio/XnioWorker$Builder.getThreadGroup:()Ljava/lang/ThreadGroup;
      47: astore        6
      49: aload_1
      50: invokevirtual #16                 // Method org/xnio/XnioWorker$Builder.isDaemon:()Z
      53: istore        7
      55: iconst_0
      56: istore        8
      58: iconst_0
      59: istore        9
      61: iload         9
      63: iload_3
      64: if_icmpge     162
      67: aload_2
      68: getfield      #17                 // Field org/xnio/nio/NioXnio.mainSelectorCreator:Lorg/xnio/nio/NioXnio$SelectorCreator;
      71: invokeinterface #18,  1           // InterfaceMethod org/xnio/nio/NioXnio$SelectorCreator.open:()Ljava/nio/channels/Selector;
      76: astore        10
      78: goto          94
      81: astore        11
      83: getstatic     #20                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
      86: aload         11
      88: invokeinterface #21,  2           // InterfaceMethod org/xnio/nio/Log.unexpectedSelectorOpenProblem:(Ljava/lang/Throwable;)Ljava/lang/IllegalStateException;
      93: athrow
      94: new           #14                 // class org/xnio/nio/WorkerThread
      97: dup
      98: aload_0
      99: aload         10
     101: ldc           #22                 // String %s I/O-%d
     103: iconst_2
     104: anewarray     #23                 // class java/lang/Object
     107: dup
     108: iconst_0
     109: aload         4
     111: aastore
     112: dup
     113: iconst_1
     114: iload         9
     116: iconst_1
     117: iadd
     118: invokestatic  #24                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     121: aastore
     122: invokestatic  #25                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     125: aload         6
     127: aload_0
     128: getfield      #12                 // Field workerStackSize:J
     131: iload         9
     133: invokespecial #26                 // Method org/xnio/nio/WorkerThread."<init>":(Lorg/xnio/nio/NioXnioWorker;Ljava/nio/channels/Selector;Ljava/lang/String;Ljava/lang/ThreadGroup;JI)V
     136: astore        11
     138: iload         7
     140: ifeq          149
     143: aload         11
     145: iconst_1
     146: invokevirtual #27                 // Method org/xnio/nio/WorkerThread.setDaemon:(Z)V
     149: aload         5
     151: iload         9
     153: aload         11
     155: aastore
     156: iinc          9, 1
     159: goto          61
     162: aload_2
     163: getfield      #17                 // Field org/xnio/nio/NioXnio.mainSelectorCreator:Lorg/xnio/nio/NioXnio$SelectorCreator;
     166: invokeinterface #18,  1           // InterfaceMethod org/xnio/nio/NioXnio$SelectorCreator.open:()Ljava/nio/channels/Selector;
     171: astore        9
     173: goto          189
     176: astore        10
     178: getstatic     #20                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
     181: aload         10
     183: invokeinterface #21,  2           // InterfaceMethod org/xnio/nio/Log.unexpectedSelectorOpenProblem:(Ljava/lang/Throwable;)Ljava/lang/IllegalStateException;
     188: athrow
     189: aload_0
     190: new           #14                 // class org/xnio/nio/WorkerThread
     193: dup
     194: aload_0
     195: aload         9
     197: ldc           #28                 // String %s Accept
     199: iconst_1
     200: anewarray     #23                 // class java/lang/Object
     203: dup
     204: iconst_0
     205: aload         4
     207: aastore
     208: invokestatic  #25                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     211: aload         6
     213: aload_0
     214: getfield      #12                 // Field workerStackSize:J
     217: iload_3
     218: invokespecial #26                 // Method org/xnio/nio/WorkerThread."<init>":(Lorg/xnio/nio/NioXnioWorker;Ljava/nio/channels/Selector;Ljava/lang/String;Ljava/lang/ThreadGroup;JI)V
     221: putfield      #29                 // Field acceptThread:Lorg/xnio/nio/WorkerThread;
     224: iload         7
     226: ifeq          237
     229: aload_0
     230: getfield      #29                 // Field acceptThread:Lorg/xnio/nio/WorkerThread;
     233: iconst_1
     234: invokevirtual #27                 // Method org/xnio/nio/WorkerThread.setDaemon:(Z)V
     237: iconst_1
     238: istore        8
     240: iload         8
     242: ifne          348
     245: aload         5
     247: astore        9
     249: aload         9
     251: arraylength
     252: istore        10
     254: iconst_0
     255: istore        11
     257: iload         11
     259: iload         10
     261: if_icmpge     290
     264: aload         9
     266: iload         11
     268: aaload
     269: astore        12
     271: aload         12
     273: ifnull        284
     276: aload         12
     278: invokevirtual #30                 // Method org/xnio/nio/WorkerThread.getSelector:()Ljava/nio/channels/Selector;
     281: invokestatic  #31                 // Method org/xnio/IoUtils.safeClose:(Ljava/nio/channels/Selector;)V
     284: iinc          11, 1
     287: goto          257
     290: goto          348
     293: astore        13
     295: iload         8
     297: ifne          345
     300: aload         5
     302: astore        14
     304: aload         14
     306: arraylength
     307: istore        15
     309: iconst_0
     310: istore        16
     312: iload         16
     314: iload         15
     316: if_icmpge     345
     319: aload         14
     321: iload         16
     323: aaload
     324: astore        17
     326: aload         17
     328: ifnull        339
     331: aload         17
     333: invokevirtual #30                 // Method org/xnio/nio/WorkerThread.getSelector:()Ljava/nio/channels/Selector;
     336: invokestatic  #31                 // Method org/xnio/IoUtils.safeClose:(Ljava/nio/channels/Selector;)V
     339: iinc          16, 1
     342: goto          312
     345: aload         13
     347: athrow
     348: aload_0
     349: aload         5
     351: putfield      #32                 // Field workerThreads:[Lorg/xnio/nio/WorkerThread;
     354: aload_0
     355: new           #33                 // class org/xnio/nio/NioXnioWorker$NioWorkerMetrics
     358: dup
     359: aload_0
     360: aload         4
     362: aconst_null
     363: invokespecial #34                 // Method org/xnio/nio/NioXnioWorker$NioWorkerMetrics."<init>":(Lorg/xnio/nio/NioXnioWorker;Ljava/lang/String;Lorg/xnio/nio/NioXnioWorker$1;)V
     366: putfield      #35                 // Field metrics:Lorg/xnio/nio/NioXnioWorker$NioWorkerMetrics;
     369: aload_0
     370: getfield      #35                 // Field metrics:Lorg/xnio/nio/NioXnioWorker$NioWorkerMetrics;
     373: invokestatic  #36                 // Method org/xnio/nio/NioXnioWorker$NioWorkerMetrics.access$100:(Lorg/xnio/nio/NioXnioWorker$NioWorkerMetrics;)V
     376: return
    Exception table:
       from    to  target type
          67    78    81   Class java/io/IOException
         162   173   176   Class java/io/IOException
          58   240   293   any
         293   295   293   any

  void start();
    Code:
       0: aload_0
       1: getfield      #32                 // Field workerThreads:[Lorg/xnio/nio/WorkerThread;
       4: astore_1
       5: aload_1
       6: arraylength
       7: istore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: iload_2
      12: if_icmpge     35
      15: aload_1
      16: iload_3
      17: aaload
      18: astore        4
      20: aload_0
      21: invokevirtual #37                 // Method openResourceUnconditionally:()V
      24: aload         4
      26: invokevirtual #38                 // Method org/xnio/nio/WorkerThread.start:()V
      29: iinc          3, 1
      32: goto          10
      35: aload_0
      36: invokevirtual #37                 // Method openResourceUnconditionally:()V
      39: aload_0
      40: getfield      #29                 // Field acceptThread:Lorg/xnio/nio/WorkerThread;
      43: invokevirtual #38                 // Method org/xnio/nio/WorkerThread.start:()V
      46: return

  protected org.wildfly.common.net.CidrAddressTable<java.net.InetSocketAddress> getBindAddressTable();
    Code:
       0: aload_0
       1: invokespecial #39                 // Method org/xnio/XnioWorker.getBindAddressTable:()Lorg/wildfly/common/net/CidrAddressTable;
       4: areturn

  protected org.xnio.nio.WorkerThread chooseThread();
    Code:
       0: aload_0
       1: invokestatic  #40                 // Method java/util/concurrent/ThreadLocalRandom.current:()Ljava/util/concurrent/ThreadLocalRandom;
       4: invokevirtual #41                 // Method java/util/concurrent/ThreadLocalRandom.nextInt:()I
       7: invokevirtual #42                 // Method getIoThread:(I)Lorg/xnio/nio/WorkerThread;
      10: areturn

  public org.xnio.nio.WorkerThread getIoThread(int);
    Code:
       0: aload_0
       1: getfield      #32                 // Field workerThreads:[Lorg/xnio/nio/WorkerThread;
       4: astore_2
       5: aload_2
       6: arraylength
       7: istore_3
       8: iload_3
       9: ifne          21
      12: getstatic     #20                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
      15: invokeinterface #43,  1           // InterfaceMethod org/xnio/nio/Log.noThreads:()Ljava/lang/IllegalArgumentException;
      20: athrow
      21: iload_3
      22: iconst_1
      23: if_icmpne     30
      26: aload_2
      27: iconst_0
      28: aaload
      29: areturn
      30: aload_2
      31: iload_1
      32: iload_3
      33: irem
      34: invokestatic  #44                 // Method java/lang/Math.abs:(I)I
      37: aaload
      38: areturn

  public int getIoThreadCount();
    Code:
       0: aload_0
       1: getfield      #32                 // Field workerThreads:[Lorg/xnio/nio/WorkerThread;
       4: arraylength
       5: ireturn

  org.xnio.nio.WorkerThread[] getAll();
    Code:
       0: aload_0
       1: getfield      #32                 // Field workerThreads:[Lorg/xnio/nio/WorkerThread;
       4: areturn

  protected org.xnio.channels.AcceptingChannel<org.xnio.StreamConnection> createTcpConnectionServer(java.net.InetSocketAddress, org.xnio.ChannelListener<? super org.xnio.channels.AcceptingChannel<org.xnio.StreamConnection>>, org.xnio.OptionMap) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method checkShutdown:()V
       4: iconst_0
       5: istore        4
       7: invokestatic  #46                 // Method java/nio/channels/ServerSocketChannel.open:()Ljava/nio/channels/ServerSocketChannel;
      10: astore        5
      12: aload_3
      13: getstatic     #47                 // Field org/xnio/Options.RECEIVE_BUFFER:Lorg/xnio/Option;
      16: invokevirtual #48                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
      19: ifeq          38
      22: aload         5
      24: invokevirtual #49                 // Method java/nio/channels/ServerSocketChannel.socket:()Ljava/net/ServerSocket;
      27: aload_3
      28: getstatic     #47                 // Field org/xnio/Options.RECEIVE_BUFFER:Lorg/xnio/Option;
      31: iconst_m1
      32: invokevirtual #50                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
      35: invokevirtual #51                 // Method java/net/ServerSocket.setReceiveBufferSize:(I)V
      38: aload         5
      40: invokevirtual #49                 // Method java/nio/channels/ServerSocketChannel.socket:()Ljava/net/ServerSocket;
      43: aload_3
      44: getstatic     #52                 // Field org/xnio/Options.REUSE_ADDRESSES:Lorg/xnio/Option;
      47: iconst_1
      48: invokevirtual #53                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      51: invokevirtual #54                 // Method java/net/ServerSocket.setReuseAddress:(Z)V
      54: aload         5
      56: iconst_0
      57: invokevirtual #55                 // Method java/nio/channels/ServerSocketChannel.configureBlocking:(Z)Ljava/nio/channels/SelectableChannel;
      60: pop
      61: aload_3
      62: getstatic     #56                 // Field org/xnio/Options.BACKLOG:Lorg/xnio/Option;
      65: invokevirtual #48                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
      68: ifeq          93
      71: aload         5
      73: invokevirtual #49                 // Method java/nio/channels/ServerSocketChannel.socket:()Ljava/net/ServerSocket;
      76: aload_1
      77: aload_3
      78: getstatic     #56                 // Field org/xnio/Options.BACKLOG:Lorg/xnio/Option;
      81: sipush        128
      84: invokevirtual #50                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
      87: invokevirtual #57                 // Method java/net/ServerSocket.bind:(Ljava/net/SocketAddress;I)V
      90: goto          102
      93: aload         5
      95: invokevirtual #49                 // Method java/nio/channels/ServerSocketChannel.socket:()Ljava/net/ServerSocket;
      98: aload_1
      99: invokevirtual #58                 // Method java/net/ServerSocket.bind:(Ljava/net/SocketAddress;)V
     102: new           #59                 // class org/xnio/nio/QueuedNioTcpServer2
     105: dup
     106: new           #60                 // class org/xnio/nio/NioTcpServer
     109: dup
     110: aload_0
     111: aload         5
     113: aload_3
     114: iconst_1
     115: invokespecial #61                 // Method org/xnio/nio/NioTcpServer."<init>":(Lorg/xnio/nio/NioXnioWorker;Ljava/nio/channels/ServerSocketChannel;Lorg/xnio/OptionMap;Z)V
     118: invokespecial #62                 // Method org/xnio/nio/QueuedNioTcpServer2."<init>":(Lorg/xnio/nio/NioTcpServer;)V
     121: astore        6
     123: aload         6
     125: aload_2
     126: invokevirtual #63                 // Method org/xnio/nio/QueuedNioTcpServer2.setAcceptListener:(Lorg/xnio/ChannelListener;)V
     129: iconst_1
     130: istore        4
     132: aload         6
     134: astore        7
     136: iload         4
     138: ifne          146
     141: aload         5
     143: invokestatic  #64                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     146: aload         7
     148: areturn
     149: astore        8
     151: iload         4
     153: ifne          161
     156: aload         5
     158: invokestatic  #64                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     161: aload         8
     163: athrow
    Exception table:
       from    to  target type
          12   136   149   any
         149   151   149   any

  public org.xnio.channels.MulticastMessageChannel createUdpServer(java.net.InetSocketAddress, org.xnio.ChannelListener<? super org.xnio.channels.MulticastMessageChannel>, org.xnio.OptionMap) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method checkShutdown:()V
       4: aload_1
       5: ifnull        44
       8: aload_1
       9: invokevirtual #65                 // Method java/net/InetSocketAddress.getAddress:()Ljava/net/InetAddress;
      12: astore        5
      14: aload         5
      16: instanceof    #66                 // class java/net/Inet6Address
      19: ifeq          33
      22: getstatic     #67                 // Field java/net/StandardProtocolFamily.INET6:Ljava/net/StandardProtocolFamily;
      25: invokestatic  #68                 // Method java/nio/channels/DatagramChannel.open:(Ljava/net/ProtocolFamily;)Ljava/nio/channels/DatagramChannel;
      28: astore        4
      30: goto          41
      33: getstatic     #69                 // Field java/net/StandardProtocolFamily.INET:Ljava/net/StandardProtocolFamily;
      36: invokestatic  #68                 // Method java/nio/channels/DatagramChannel.open:(Ljava/net/ProtocolFamily;)Ljava/nio/channels/DatagramChannel;
      39: astore        4
      41: goto          49
      44: invokestatic  #70                 // Method java/nio/channels/DatagramChannel.open:()Ljava/nio/channels/DatagramChannel;
      47: astore        4
      49: aload         4
      51: iconst_0
      52: invokevirtual #71                 // Method java/nio/channels/DatagramChannel.configureBlocking:(Z)Ljava/nio/channels/SelectableChannel;
      55: pop
      56: aload_3
      57: getstatic     #72                 // Field org/xnio/Options.BROADCAST:Lorg/xnio/Option;
      60: invokevirtual #48                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
      63: ifeq          82
      66: aload         4
      68: invokevirtual #73                 // Method java/nio/channels/DatagramChannel.socket:()Ljava/net/DatagramSocket;
      71: aload_3
      72: getstatic     #72                 // Field org/xnio/Options.BROADCAST:Lorg/xnio/Option;
      75: iconst_0
      76: invokevirtual #53                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      79: invokevirtual #74                 // Method java/net/DatagramSocket.setBroadcast:(Z)V
      82: aload_3
      83: getstatic     #75                 // Field org/xnio/Options.IP_TRAFFIC_CLASS:Lorg/xnio/Option;
      86: invokevirtual #48                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
      89: ifeq          108
      92: aload         4
      94: invokevirtual #73                 // Method java/nio/channels/DatagramChannel.socket:()Ljava/net/DatagramSocket;
      97: aload_3
      98: getstatic     #75                 // Field org/xnio/Options.IP_TRAFFIC_CLASS:Lorg/xnio/Option;
     101: iconst_m1
     102: invokevirtual #50                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
     105: invokevirtual #76                 // Method java/net/DatagramSocket.setTrafficClass:(I)V
     108: aload_3
     109: getstatic     #47                 // Field org/xnio/Options.RECEIVE_BUFFER:Lorg/xnio/Option;
     112: invokevirtual #48                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
     115: ifeq          134
     118: aload         4
     120: invokevirtual #73                 // Method java/nio/channels/DatagramChannel.socket:()Ljava/net/DatagramSocket;
     123: aload_3
     124: getstatic     #47                 // Field org/xnio/Options.RECEIVE_BUFFER:Lorg/xnio/Option;
     127: iconst_m1
     128: invokevirtual #50                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
     131: invokevirtual #77                 // Method java/net/DatagramSocket.setReceiveBufferSize:(I)V
     134: aload         4
     136: invokevirtual #73                 // Method java/nio/channels/DatagramChannel.socket:()Ljava/net/DatagramSocket;
     139: aload_3
     140: getstatic     #52                 // Field org/xnio/Options.REUSE_ADDRESSES:Lorg/xnio/Option;
     143: iconst_1
     144: invokevirtual #53                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
     147: invokevirtual #78                 // Method java/net/DatagramSocket.setReuseAddress:(Z)V
     150: aload_3
     151: getstatic     #79                 // Field org/xnio/Options.SEND_BUFFER:Lorg/xnio/Option;
     154: invokevirtual #48                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
     157: ifeq          176
     160: aload         4
     162: invokevirtual #73                 // Method java/nio/channels/DatagramChannel.socket:()Ljava/net/DatagramSocket;
     165: aload_3
     166: getstatic     #79                 // Field org/xnio/Options.SEND_BUFFER:Lorg/xnio/Option;
     169: iconst_m1
     170: invokevirtual #50                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
     173: invokevirtual #80                 // Method java/net/DatagramSocket.setSendBufferSize:(I)V
     176: aload         4
     178: invokevirtual #73                 // Method java/nio/channels/DatagramChannel.socket:()Ljava/net/DatagramSocket;
     181: aload_1
     182: invokevirtual #81                 // Method java/net/DatagramSocket.bind:(Ljava/net/SocketAddress;)V
     185: new           #82                 // class org/xnio/nio/NioUdpChannel
     188: dup
     189: aload_0
     190: aload         4
     192: invokespecial #83                 // Method org/xnio/nio/NioUdpChannel."<init>":(Lorg/xnio/nio/NioXnioWorker;Ljava/nio/channels/DatagramChannel;)V
     195: astore        5
     197: aload         5
     199: aload_2
     200: invokestatic  #84                 // Method org/xnio/ChannelListeners.invokeChannelListener:(Ljava/nio/channels/Channel;Lorg/xnio/ChannelListener;)Z
     203: pop
     204: aload         5
     206: areturn

  public boolean isShutdown();
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:I
       4: ldc           #86                 // int -2147483648
       6: iand
       7: ifeq          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isTerminated();
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:I
       4: ldc           #87                 // int 1073741824
       6: iand
       7: ifeq          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  void openResourceUnconditionally();
    Code:
       0: getstatic     #88                 // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #89                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndIncrement:(Ljava/lang/Object;)I
       7: istore_1
       8: getstatic     #20                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
      11: invokeinterface #90,  1           // InterfaceMethod org/xnio/nio/Log.isTraceEnabled:()Z
      16: ifeq          40
      19: getstatic     #20                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
      22: ldc           #91                 // String CAS %s %08x -> %08x
      24: aload_0
      25: iload_1
      26: invokestatic  #24                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      29: iload_1
      30: iconst_1
      31: iadd
      32: invokestatic  #24                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      35: invokeinterface #92,  5           // InterfaceMethod org/xnio/nio/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      40: return

  void checkShutdown() throws org.xnio.ClosedWorkerException;
    Code:
       0: aload_0
       1: invokevirtual #93                 // Method isShutdown:()Z
       4: ifeq          17
       7: getstatic     #20                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
      10: aload_0
      11: invokeinterface #94,  2           // InterfaceMethod org/xnio/nio/Log.workerShutDown:(Lorg/xnio/nio/NioXnioWorker;)Lorg/xnio/ClosedWorkerException;
      16: athrow
      17: return

  void closeResource();
    Code:
       0: getstatic     #88                 // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #95                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.decrementAndGet:(Ljava/lang/Object;)I
       7: istore_1
       8: getstatic     #20                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
      11: invokeinterface #90,  1           // InterfaceMethod org/xnio/nio/Log.isTraceEnabled:()Z
      16: ifeq          40
      19: getstatic     #20                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
      22: ldc           #91                 // String CAS %s %08x -> %08x
      24: aload_0
      25: iload_1
      26: iconst_1
      27: iadd
      28: invokestatic  #24                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      31: iload_1
      32: invokestatic  #24                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      35: invokeinterface #92,  5           // InterfaceMethod org/xnio/nio/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      40: iload_1
      41: ldc           #86                 // int -2147483648
      43: if_icmpne     123
      46: getstatic     #88                 // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      49: aload_0
      50: ldc           #86                 // int -2147483648
      52: ldc           #96                 // int -1073741824
      54: invokevirtual #97                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      57: ifeq          115
      60: getstatic     #20                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
      63: ldc           #98                 // String CAS %s %08x -> %08x (close complete)
      65: aload_0
      66: ldc           #86                 // int -2147483648
      68: invokestatic  #24                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      71: ldc           #96                 // int -1073741824
      73: invokestatic  #24                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      76: invokeinterface #92,  5           // InterfaceMethod org/xnio/nio/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      81: getstatic     #99                 // Field shutdownWaiterUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      84: aload_0
      85: aconst_null
      86: invokevirtual #100                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      89: checkcast     #101                // class java/lang/Thread
      92: invokestatic  #102                // Method safeUnpark:(Ljava/lang/Thread;)V
      95: aload_0
      96: invokevirtual #103                // Method getTerminationTask:()Ljava/lang/Runnable;
      99: astore_2
     100: aload_2
     101: ifnull        114
     104: aload_2
     105: invokeinterface #104,  1          // InterfaceMethod java/lang/Runnable.run:()V
     110: goto          114
     113: astore_3
     114: return
     115: aload_0
     116: getfield      #7                  // Field state:I
     119: istore_1
     120: goto          40
     123: return
    Exception table:
       from    to  target type
         104   110   113   Class java/lang/Throwable

  public void shutdown();
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:I
       4: istore_1
       5: iload_1
       6: ldc           #86                 // int -2147483648
       8: iand
       9: ifne          92
      12: getstatic     #88                 // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      15: aload_0
      16: iload_1
      17: iload_1
      18: ldc           #86                 // int -2147483648
      20: ior
      21: invokevirtual #97                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      24: ifne          35
      27: aload_0
      28: getfield      #7                  // Field state:I
      31: istore_1
      32: goto          5
      35: getstatic     #20                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
      38: ldc           #106                // String Initiating shutdown of %s
      40: aload_0
      41: invokeinterface #107,  3          // InterfaceMethod org/xnio/nio/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      46: aload_0
      47: getfield      #32                 // Field workerThreads:[Lorg/xnio/nio/WorkerThread;
      50: astore_2
      51: aload_2
      52: arraylength
      53: istore_3
      54: iconst_0
      55: istore        4
      57: iload         4
      59: iload_3
      60: if_icmpge     80
      63: aload_2
      64: iload         4
      66: aaload
      67: astore        5
      69: aload         5
      71: invokevirtual #108                // Method org/xnio/nio/WorkerThread.shutdown:()V
      74: iinc          4, 1
      77: goto          57
      80: aload_0
      81: getfield      #29                 // Field acceptThread:Lorg/xnio/nio/WorkerThread;
      84: invokevirtual #108                // Method org/xnio/nio/WorkerThread.shutdown:()V
      87: aload_0
      88: invokevirtual #109                // Method shutDownTaskPool:()V
      91: return
      92: getstatic     #20                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
      95: ldc           #110                // String Idempotent shutdown of %s
      97: aload_0
      98: invokeinterface #107,  3          // InterfaceMethod org/xnio/nio/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
     103: return

  public java.util.List<java.lang.Runnable> shutdownNow();
    Code:
       0: aload_0
       1: invokevirtual #111                // Method shutdown:()V
       4: aload_0
       5: invokevirtual #112                // Method shutDownTaskPoolNow:()Ljava/util/List;
       8: areturn

  public boolean awaitTermination(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:I
       4: istore        4
       6: iload         4
       8: ldc           #87                 // int 1073741824
      10: invokestatic  #113                // Method org/xnio/Bits.allAreSet:(II)Z
      13: ifeq          18
      16: iconst_1
      17: ireturn
      18: invokestatic  #114                // Method java/lang/System.nanoTime:()J
      21: lstore        5
      23: aload_3
      24: lload_1
      25: invokevirtual #115                // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      28: lstore        7
      30: invokestatic  #116                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      33: astore        9
      35: aload_0
      36: getfield      #7                  // Field state:I
      39: dup
      40: istore        4
      42: ldc           #87                 // int 1073741824
      44: invokestatic  #117                // Method org/xnio/Bits.allAreClear:(II)Z
      47: ifeq          164
      50: getstatic     #99                 // Field shutdownWaiterUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      53: aload_0
      54: aload         9
      56: invokevirtual #100                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      59: checkcast     #101                // class java/lang/Thread
      62: astore        10
      64: aload_0
      65: getfield      #7                  // Field state:I
      68: dup
      69: istore        4
      71: ldc           #87                 // int 1073741824
      73: invokestatic  #113                // Method org/xnio/Bits.allAreSet:(II)Z
      76: ifeq          87
      79: aload         10
      81: invokestatic  #102                // Method safeUnpark:(Ljava/lang/Thread;)V
      84: goto          164
      87: aload_0
      88: lload         7
      90: invokestatic  #118                // Method java/util/concurrent/locks/LockSupport.parkNanos:(Ljava/lang/Object;J)V
      93: invokestatic  #119                // Method java/lang/Thread.interrupted:()Z
      96: ifeq          107
      99: new           #120                // class java/lang/InterruptedException
     102: dup
     103: invokespecial #121                // Method java/lang/InterruptedException."<init>":()V
     106: athrow
     107: invokestatic  #114                // Method java/lang/System.nanoTime:()J
     110: lstore        11
     112: lload         7
     114: lload         11
     116: lload         5
     118: lsub
     119: lsub
     120: lstore        7
     122: lload         7
     124: lconst_0
     125: lcmp
     126: ifge          143
     129: aload_0
     130: getfield      #7                  // Field state:I
     133: istore        4
     135: aload         10
     137: invokestatic  #102                // Method safeUnpark:(Ljava/lang/Thread;)V
     140: goto          164
     143: aload         10
     145: invokestatic  #102                // Method safeUnpark:(Ljava/lang/Thread;)V
     148: goto          161
     151: astore        13
     153: aload         10
     155: invokestatic  #102                // Method safeUnpark:(Ljava/lang/Thread;)V
     158: aload         13
     160: athrow
     161: goto          35
     164: iload         4
     166: ldc           #87                 // int 1073741824
     168: invokestatic  #113                // Method org/xnio/Bits.allAreSet:(II)Z
     171: ireturn
    Exception table:
       from    to  target type
          64    79   151   any
          87   135   151   any
         151   153   151   any

  public void awaitTermination() throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:I
       4: istore_1
       5: iload_1
       6: ldc           #87                 // int 1073741824
       8: invokestatic  #113                // Method org/xnio/Bits.allAreSet:(II)Z
      11: ifeq          15
      14: return
      15: invokestatic  #116                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      18: astore_2
      19: aload_0
      20: getfield      #7                  // Field state:I
      23: ldc           #87                 // int 1073741824
      25: invokestatic  #117                // Method org/xnio/Bits.allAreClear:(II)Z
      28: ifeq          99
      31: getstatic     #99                 // Field shutdownWaiterUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      34: aload_0
      35: aload_2
      36: invokevirtual #100                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      39: checkcast     #101                // class java/lang/Thread
      42: astore_3
      43: aload_0
      44: getfield      #7                  // Field state:I
      47: ldc           #87                 // int 1073741824
      49: invokestatic  #113                // Method org/xnio/Bits.allAreSet:(II)Z
      52: ifeq          62
      55: aload_3
      56: invokestatic  #102                // Method safeUnpark:(Ljava/lang/Thread;)V
      59: goto          99
      62: aload_0
      63: invokestatic  #122                // Method java/util/concurrent/locks/LockSupport.park:(Ljava/lang/Object;)V
      66: invokestatic  #119                // Method java/lang/Thread.interrupted:()Z
      69: ifeq          80
      72: new           #120                // class java/lang/InterruptedException
      75: dup
      76: invokespecial #121                // Method java/lang/InterruptedException."<init>":()V
      79: athrow
      80: aload_3
      81: invokestatic  #102                // Method safeUnpark:(Ljava/lang/Thread;)V
      84: goto          96
      87: astore        4
      89: aload_3
      90: invokestatic  #102                // Method safeUnpark:(Ljava/lang/Thread;)V
      93: aload         4
      95: athrow
      96: goto          19
      99: return
    Exception table:
       from    to  target type
          43    55    87   any
          62    80    87   any
          87    89    87   any

  private static void safeUnpark(java.lang.Thread);
    Code:
       0: aload_0
       1: ifnull        8
       4: aload_0
       5: invokestatic  #123                // Method java/util/concurrent/locks/LockSupport.unpark:(Ljava/lang/Thread;)V
       8: return

  protected void taskPoolTerminated();
    Code:
       0: aload_0
       1: getfield      #35                 // Field metrics:Lorg/xnio/nio/NioXnioWorker$NioWorkerMetrics;
       4: invokestatic  #64                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
       7: aload_0
       8: invokevirtual #124                // Method closeResource:()V
      11: return

  public <T> T getOption(org.xnio.Option<T>) throws java.io.IOException;
    Code:
       0: aload_1
       1: getstatic     #125                // Field org/xnio/Options.WORKER_IO_THREADS:Lorg/xnio/Option;
       4: invokevirtual #126                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       7: ifeq          23
      10: aload_1
      11: aload_0
      12: getfield      #32                 // Field workerThreads:[Lorg/xnio/nio/WorkerThread;
      15: arraylength
      16: invokestatic  #24                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      19: invokevirtual #127                // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      22: areturn
      23: aload_1
      24: getstatic     #128                // Field org/xnio/Options.STACK_SIZE:Lorg/xnio/Option;
      27: invokevirtual #126                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      30: ifeq          45
      33: aload_1
      34: aload_0
      35: getfield      #12                 // Field workerStackSize:J
      38: invokestatic  #129                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      41: invokevirtual #127                // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      44: areturn
      45: aload_0
      46: aload_1
      47: invokespecial #130                // Method org/xnio/XnioWorker.getOption:(Lorg/xnio/Option;)Ljava/lang/Object;
      50: areturn

  public org.xnio.nio.NioXnio getXnio();
    Code:
       0: aload_0
       1: invokespecial #131                // Method org/xnio/XnioWorker.getXnio:()Lorg/xnio/Xnio;
       4: checkcast     #9                  // class org/xnio/nio/NioXnio
       7: areturn

  org.xnio.nio.WorkerThread getAcceptThread();
    Code:
       0: aload_0
       1: getfield      #29                 // Field acceptThread:Lorg/xnio/nio/WorkerThread;
       4: areturn

  public org.xnio.management.XnioWorkerMXBean getMXBean();
    Code:
       0: aload_0
       1: getfield      #35                 // Field metrics:Lorg/xnio/nio/NioXnioWorker$NioWorkerMetrics;
       4: areturn

  protected org.xnio.ManagementRegistration registerServerMXBean(org.xnio.management.XnioServerMXBean);
    Code:
       0: aload_0
       1: getfield      #35                 // Field metrics:Lorg/xnio/nio/NioXnioWorker$NioWorkerMetrics;
       4: aload_1
       5: invokestatic  #132                // Method org/xnio/nio/NioXnioWorker$NioWorkerMetrics.access$200:(Lorg/xnio/nio/NioXnioWorker$NioWorkerMetrics;Lorg/xnio/management/XnioServerMXBean;)Lorg/xnio/ManagementRegistration;
       8: areturn

  protected org.xnio.XnioIoThread chooseThread();
    Code:
       0: aload_0
       1: invokevirtual #133                // Method chooseThread:()Lorg/xnio/nio/WorkerThread;
       4: areturn

  public org.xnio.Xnio getXnio();
    Code:
       0: aload_0
       1: invokevirtual #134                // Method getXnio:()Lorg/xnio/nio/NioXnio;
       4: areturn

  public org.xnio.XnioIoThread getIoThread(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #42                 // Method getIoThread:(I)Lorg/xnio/nio/WorkerThread;
       5: areturn

  static int access$300(org.xnio.nio.NioXnioWorker);
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getCoreWorkerPoolSize:()I
       4: ireturn

  static int access$400(org.xnio.nio.NioXnioWorker);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getMaxWorkerPoolSize:()I
       4: ireturn

  static int access$500(org.xnio.nio.NioXnioWorker);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method getWorkerPoolSize:()I
       4: ireturn

  static int access$600(org.xnio.nio.NioXnioWorker);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method getBusyWorkerThreadCount:()I
       4: ireturn

  static int access$700(org.xnio.nio.NioXnioWorker);
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method getWorkerQueueSize:()I
       4: ireturn

  static {};
    Code:
       0: ldc           #85                 // class org/xnio/nio/NioXnioWorker
       2: ldc           #101                // class java/lang/Thread
       4: ldc           #135                // String shutdownWaiter
       6: invokestatic  #136                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       9: putstatic     #99                 // Field shutdownWaiterUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      12: ldc           #85                 // class org/xnio/nio/NioXnioWorker
      14: ldc           #137                // String state
      16: invokestatic  #138                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      19: putstatic     #88                 // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      22: return
}
