Compiled from "NioSocketConduit.java"
final class org.xnio.nio.NioSocketConduit extends org.xnio.nio.NioHandle implements org.xnio.conduits.StreamSourceConduit,org.xnio.conduits.StreamSinkConduit {
  private final java.nio.channels.SocketChannel socketChannel;

  private final org.xnio.nio.NioSocketStreamConnection connection;

  private org.xnio.conduits.ReadReadyHandler readReadyHandler;

  private org.xnio.conduits.WriteReadyHandler writeReadyHandler;

  private volatile int readTimeout;

  private long lastRead;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.xnio.nio.NioSocketConduit> readTimeoutUpdater;

  private volatile int writeTimeout;

  private long lastWrite;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.xnio.nio.NioSocketConduit> writeTimeoutUpdater;

  org.xnio.nio.NioSocketConduit(org.xnio.nio.WorkerThread, java.nio.channels.SelectionKey, org.xnio.nio.NioSocketStreamConnection);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/xnio/nio/NioHandle."<init>":(Lorg/xnio/nio/WorkerThread;Ljava/nio/channels/SelectionKey;)V
       6: aload_0
       7: aload_3
       8: putfield      #2                  // Field connection:Lorg/xnio/nio/NioSocketStreamConnection;
      11: aload_0
      12: aload_2
      13: invokevirtual #3                  // Method java/nio/channels/SelectionKey.channel:()Ljava/nio/channels/SelectableChannel;
      16: checkcast     #4                  // class java/nio/channels/SocketChannel
      19: putfield      #5                  // Field socketChannel:Ljava/nio/channels/SocketChannel;
      22: return

  void handleReady(int);
    Code:
       0: iload_1
       1: ifne          28
       4: aload_0
       5: invokevirtual #6                  // Method getSelectionKey:()Ljava/nio/channels/SelectionKey;
       8: astore_2
       9: aload_2
      10: invokevirtual #7                  // Method java/nio/channels/SelectionKey.interestOps:()I
      13: istore_3
      14: iload_3
      15: ifeq          23
      18: iload_3
      19: istore_1
      20: goto          28
      23: aload_0
      24: invokevirtual #8                  // Method forceTermination:()V
      27: return
      28: iload_1
      29: iconst_1
      30: invokestatic  #10                 // Method org/xnio/Bits.allAreSet:(II)Z
      33: ifeq          60
      36: aload_0
      37: invokevirtual #11                 // Method isReadShutdown:()Z
      40: ifeq          47
      43: aload_0
      44: invokevirtual #12                 // Method suspendReads:()V
      47: aload_0
      48: getfield      #13                 // Field readReadyHandler:Lorg/xnio/conduits/ReadReadyHandler;
      51: invokeinterface #14,  1           // InterfaceMethod org/xnio/conduits/ReadReadyHandler.readReady:()V
      56: goto          60
      59: astore_2
      60: iload_1
      61: iconst_4
      62: invokestatic  #10                 // Method org/xnio/Bits.allAreSet:(II)Z
      65: ifeq          92
      68: aload_0
      69: invokevirtual #16                 // Method isWriteShutdown:()Z
      72: ifeq          79
      75: aload_0
      76: invokevirtual #17                 // Method suspendWrites:()V
      79: aload_0
      80: getfield      #18                 // Field writeReadyHandler:Lorg/xnio/conduits/WriteReadyHandler;
      83: invokeinterface #19,  1           // InterfaceMethod org/xnio/conduits/WriteReadyHandler.writeReady:()V
      88: goto          92
      91: astore_2
      92: goto          96
      95: astore_2
      96: return
    Exception table:
       from    to  target type
          36    56    59   Class java/lang/Throwable
          68    88    91   Class java/lang/Throwable
           0    27    95   Class java/nio/channels/CancelledKeyException
          28    92    95   Class java/nio/channels/CancelledKeyException

  public org.xnio.XnioWorker getWorker();
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method getWorkerThread:()Lorg/xnio/nio/WorkerThread;
       4: invokevirtual #22                 // Method org/xnio/nio/WorkerThread.getWorker:()Lorg/xnio/nio/NioXnioWorker;
       7: areturn

  void forceTermination();
    Code:
       0: aload_0
       1: getfield      #13                 // Field readReadyHandler:Lorg/xnio/conduits/ReadReadyHandler;
       4: astore_1
       5: aload_1
       6: ifnull        15
       9: aload_1
      10: invokeinterface #23,  1           // InterfaceMethod org/xnio/conduits/ReadReadyHandler.forceTermination:()V
      15: aload_0
      16: getfield      #18                 // Field writeReadyHandler:Lorg/xnio/conduits/WriteReadyHandler;
      19: astore_2
      20: aload_2
      21: ifnull        30
      24: aload_2
      25: invokeinterface #24,  1           // InterfaceMethod org/xnio/conduits/WriteReadyHandler.forceTermination:()V
      30: return

  void terminated();
    Code:
       0: aload_0
       1: getfield      #13                 // Field readReadyHandler:Lorg/xnio/conduits/ReadReadyHandler;
       4: astore_1
       5: aload_1
       6: ifnull        15
       9: aload_1
      10: invokeinterface #25,  1           // InterfaceMethod org/xnio/conduits/ReadReadyHandler.terminated:()V
      15: aload_0
      16: getfield      #18                 // Field writeReadyHandler:Lorg/xnio/conduits/WriteReadyHandler;
      19: astore_2
      20: aload_2
      21: ifnull        30
      24: aload_2
      25: invokeinterface #26,  1           // InterfaceMethod org/xnio/conduits/WriteReadyHandler.terminated:()V
      30: return

  int getAndSetWriteTimeout(int);
    Code:
       0: getstatic     #27                 // Field writeTimeoutUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: iload_1
       5: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndSet:(Ljava/lang/Object;I)I
       8: ireturn

  int getWriteTimeout();
    Code:
       0: aload_0
       1: getfield      #29                 // Field writeTimeout:I
       4: ireturn

  private void checkWriteTimeout(boolean) throws org.xnio.channels.WriteTimeoutException;
    Code:
       0: aload_0
       1: getfield      #29                 // Field writeTimeout:I
       4: istore_2
       5: iload_2
       6: ifle          58
       9: iload_1
      10: ifeq          23
      13: aload_0
      14: invokestatic  #30                 // Method java/lang/System.nanoTime:()J
      17: putfield      #31                 // Field lastWrite:J
      20: goto          58
      23: aload_0
      24: getfield      #31                 // Field lastWrite:J
      27: lstore_3
      28: lload_3
      29: lconst_0
      30: lcmp
      31: ifle          58
      34: invokestatic  #30                 // Method java/lang/System.nanoTime:()J
      37: lload_3
      38: lsub
      39: ldc2_w        #32                 // long 1000000l
      42: ldiv
      43: iload_2
      44: i2l
      45: lcmp
      46: ifle          58
      49: getstatic     #34                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
      52: invokeinterface #35,  1           // InterfaceMethod org/xnio/nio/Log.writeTimeout:()Lorg/xnio/channels/WriteTimeoutException;
      57: athrow
      58: return

  public final long transferFrom(java.nio.channels.FileChannel, long, long) throws java.io.IOException;
    Code:
       0: aload_1
       1: lload_2
       2: lload         4
       4: aload_0
       5: getfield      #5                  // Field socketChannel:Ljava/nio/channels/SocketChannel;
       8: invokevirtual #36                 // Method java/nio/channels/FileChannel.transferTo:(JJLjava/nio/channels/WritableByteChannel;)J
      11: lstore        6
      13: aload_0
      14: lload         6
      16: lconst_0
      17: lcmp
      18: ifle          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: invokespecial #37                 // Method checkWriteTimeout:(Z)V
      29: lload         6
      31: lreturn

  public long transferFrom(org.xnio.channels.StreamSourceChannel, long, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: lload_2
       2: aload         4
       4: aload_0
       5: invokestatic  #38                 // Method org/xnio/conduits/Conduits.transfer:(Ljava/nio/channels/ReadableByteChannel;JLjava/nio/ByteBuffer;Lorg/xnio/conduits/StreamSinkConduit;)J
       8: lreturn

  public int write(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field socketChannel:Ljava/nio/channels/SocketChannel;
       4: aload_1
       5: invokevirtual #39                 // Method java/nio/channels/SocketChannel.write:(Ljava/nio/ByteBuffer;)I
       8: istore_2
       9: aload_0
      10: iload_2
      11: ifle          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: invokespecial #37                 // Method checkWriteTimeout:(Z)V
      22: iload_2
      23: ireturn

  public long write(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: iconst_1
       2: if_icmpne     14
       5: aload_0
       6: aload_1
       7: iload_2
       8: aaload
       9: invokevirtual #40                 // Method write:(Ljava/nio/ByteBuffer;)I
      12: i2l
      13: lreturn
      14: aload_0
      15: getfield      #5                  // Field socketChannel:Ljava/nio/channels/SocketChannel;
      18: aload_1
      19: iload_2
      20: iload_3
      21: invokevirtual #41                 // Method java/nio/channels/SocketChannel.write:([Ljava/nio/ByteBuffer;II)J
      24: lstore        4
      26: aload_0
      27: lload         4
      29: lconst_0
      30: lcmp
      31: ifle          38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: invokespecial #37                 // Method checkWriteTimeout:(Z)V
      42: lload         4
      44: lreturn

  public int writeFinal(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #42                 // Method org/xnio/conduits/Conduits.writeFinalBasic:(Lorg/xnio/conduits/StreamSinkConduit;Ljava/nio/ByteBuffer;)I
       5: ireturn

  public long writeFinal(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #43                 // Method org/xnio/conduits/Conduits.writeFinalBasic:(Lorg/xnio/conduits/StreamSinkConduit;[Ljava/nio/ByteBuffer;II)J
       7: lreturn

  public boolean flush() throws java.io.IOException;
    Code:
       0: iconst_1
       1: ireturn

  public void terminateWrites() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field connection:Lorg/xnio/nio/NioSocketStreamConnection;
       4: invokevirtual #44                 // Method org/xnio/nio/NioSocketStreamConnection.writeClosed:()Z
       7: ifeq          71
      10: aload_0
      11: invokevirtual #6                  // Method getSelectionKey:()Ljava/nio/channels/SelectionKey;
      14: invokevirtual #45                 // Method java/nio/channels/SelectionKey.isValid:()Z
      17: ifeq          25
      20: aload_0
      21: iconst_4
      22: invokevirtual #46                 // Method suspend:(I)V
      25: aload_0
      26: getfield      #5                  // Field socketChannel:Ljava/nio/channels/SocketChannel;
      29: invokevirtual #47                 // Method java/nio/channels/SocketChannel.isOpen:()Z
      32: ifeq          49
      35: aload_0
      36: getfield      #5                  // Field socketChannel:Ljava/nio/channels/SocketChannel;
      39: invokevirtual #48                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
      42: invokevirtual #49                 // Method java/net/Socket.shutdownOutput:()V
      45: goto          49
      48: astore_1
      49: aload_0
      50: invokevirtual #51                 // Method writeTerminated:()V
      53: goto          71
      56: astore_1
      57: aload_0
      58: invokevirtual #51                 // Method writeTerminated:()V
      61: goto          71
      64: astore_2
      65: aload_0
      66: invokevirtual #51                 // Method writeTerminated:()V
      69: aload_2
      70: athrow
      71: return
    Exception table:
       from    to  target type
          35    45    48   Class java/net/SocketException
          10    49    56   Class java/nio/channels/ClosedChannelException
          10    49    64   any

  public void truncateWrites() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method terminateWrites:()V
       4: return

  void writeTerminated();
    Code:
       0: aload_0
       1: getfield      #18                 // Field writeReadyHandler:Lorg/xnio/conduits/WriteReadyHandler;
       4: astore_1
       5: aload_1
       6: ifnull        19
       9: aload_1
      10: invokeinterface #26,  1           // InterfaceMethod org/xnio/conduits/WriteReadyHandler.terminated:()V
      15: goto          19
      18: astore_2
      19: return
    Exception table:
       from    to  target type
           9    15    18   Class java/lang/Throwable

  public boolean isWriteShutdown();
    Code:
       0: aload_0
       1: getfield      #2                  // Field connection:Lorg/xnio/nio/NioSocketStreamConnection;
       4: invokevirtual #54                 // Method org/xnio/nio/NioSocketStreamConnection.isWriteShutdown:()Z
       7: ireturn

  public void resumeWrites();
    Code:
       0: aload_0
       1: iconst_4
       2: invokevirtual #55                 // Method resume:(I)V
       5: return

  public void suspendWrites();
    Code:
       0: aload_0
       1: iconst_4
       2: invokevirtual #46                 // Method suspend:(I)V
       5: return

  public void wakeupWrites();
    Code:
       0: aload_0
       1: iconst_4
       2: invokevirtual #56                 // Method wakeup:(I)V
       5: return

  public boolean isWriteResumed();
    Code:
       0: aload_0
       1: iconst_4
       2: invokevirtual #57                 // Method isResumed:(I)Z
       5: ireturn

  public void awaitWritable() throws java.io.IOException;
    Code:
       0: invokestatic  #58                 // Method org/xnio/Xnio.checkBlockingAllowed:()V
       3: aload_0
       4: invokevirtual #16                 // Method isWriteShutdown:()Z
       7: ifeq          11
      10: return
      11: aload_0
      12: invokevirtual #59                 // Method getWorker:()Lorg/xnio/XnioWorker;
      15: invokevirtual #60                 // Method org/xnio/XnioWorker.getXnio:()Lorg/xnio/Xnio;
      18: checkcast     #61                 // class org/xnio/nio/NioXnio
      21: aload_0
      22: getfield      #5                  // Field socketChannel:Ljava/nio/channels/SocketChannel;
      25: iconst_4
      26: invokestatic  #62                 // Method org/xnio/nio/SelectorUtils.await:(Lorg/xnio/nio/NioXnio;Ljava/nio/channels/SelectableChannel;I)V
      29: return

  public void awaitWritable(long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: invokestatic  #58                 // Method org/xnio/Xnio.checkBlockingAllowed:()V
       3: aload_0
       4: invokevirtual #16                 // Method isWriteShutdown:()Z
       7: ifeq          11
      10: return
      11: aload_0
      12: invokevirtual #59                 // Method getWorker:()Lorg/xnio/XnioWorker;
      15: invokevirtual #60                 // Method org/xnio/XnioWorker.getXnio:()Lorg/xnio/Xnio;
      18: checkcast     #61                 // class org/xnio/nio/NioXnio
      21: aload_0
      22: getfield      #5                  // Field socketChannel:Ljava/nio/channels/SocketChannel;
      25: iconst_4
      26: lload_1
      27: aload_3
      28: invokestatic  #63                 // Method org/xnio/nio/SelectorUtils.await:(Lorg/xnio/nio/NioXnio;Ljava/nio/channels/SelectableChannel;IJLjava/util/concurrent/TimeUnit;)V
      31: return

  public org.xnio.XnioIoThread getWriteThread();
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method getWorkerThread:()Lorg/xnio/nio/WorkerThread;
       4: areturn

  public void setWriteReadyHandler(org.xnio.conduits.WriteReadyHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field writeReadyHandler:Lorg/xnio/conduits/WriteReadyHandler;
       5: return

  int getAndSetReadTimeout(int);
    Code:
       0: getstatic     #64                 // Field readTimeoutUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: iload_1
       5: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndSet:(Ljava/lang/Object;I)I
       8: ireturn

  int getReadTimeout();
    Code:
       0: aload_0
       1: getfield      #65                 // Field readTimeout:I
       4: ireturn

  private void checkReadTimeout(boolean) throws org.xnio.channels.ReadTimeoutException;
    Code:
       0: aload_0
       1: getfield      #65                 // Field readTimeout:I
       4: istore_2
       5: iload_2
       6: ifle          58
       9: iload_1
      10: ifeq          23
      13: aload_0
      14: invokestatic  #30                 // Method java/lang/System.nanoTime:()J
      17: putfield      #66                 // Field lastRead:J
      20: goto          58
      23: aload_0
      24: getfield      #66                 // Field lastRead:J
      27: lstore_3
      28: lload_3
      29: lconst_0
      30: lcmp
      31: ifle          58
      34: invokestatic  #30                 // Method java/lang/System.nanoTime:()J
      37: lload_3
      38: lsub
      39: ldc2_w        #32                 // long 1000000l
      42: ldiv
      43: iload_2
      44: i2l
      45: lcmp
      46: ifle          58
      49: getstatic     #34                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
      52: invokeinterface #67,  1           // InterfaceMethod org/xnio/nio/Log.readTimeout:()Lorg/xnio/channels/ReadTimeoutException;
      57: athrow
      58: return

  public long transferTo(long, long, java.nio.channels.FileChannel) throws java.io.IOException;
    Code:
       0: aload         5
       2: aload_0
       3: getfield      #5                  // Field socketChannel:Ljava/nio/channels/SocketChannel;
       6: lload_1
       7: lload_3
       8: invokevirtual #68                 // Method java/nio/channels/FileChannel.transferFrom:(Ljava/nio/channels/ReadableByteChannel;JJ)J
      11: lstore        6
      13: aload_0
      14: lload         6
      16: lconst_0
      17: lcmp
      18: ifle          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: invokespecial #69                 // Method checkReadTimeout:(Z)V
      29: lload         6
      31: lreturn

  public long transferTo(long, java.nio.ByteBuffer, org.xnio.channels.StreamSinkChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: aload         4
       5: invokestatic  #70                 // Method org/xnio/conduits/Conduits.transfer:(Lorg/xnio/conduits/StreamSourceConduit;JLjava/nio/ByteBuffer;Ljava/nio/channels/WritableByteChannel;)J
       8: lreturn

  public int read(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field socketChannel:Ljava/nio/channels/SocketChannel;
       4: aload_1
       5: invokevirtual #71                 // Method java/nio/channels/SocketChannel.read:(Ljava/nio/ByteBuffer;)I
       8: istore_2
       9: goto          15
      12: astore_3
      13: iconst_m1
      14: ireturn
      15: iload_2
      16: iconst_m1
      17: if_icmpeq     36
      20: aload_0
      21: iload_2
      22: ifle          29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: invokespecial #69                 // Method checkReadTimeout:(Z)V
      33: goto          40
      36: aload_0
      37: invokevirtual #72                 // Method terminateReads:()V
      40: iload_2
      41: ireturn
    Exception table:
       from    to  target type
           0     9    12   Class java/nio/channels/ClosedChannelException

  public long read(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: iconst_1
       2: if_icmpne     14
       5: aload_0
       6: aload_1
       7: iload_2
       8: aaload
       9: invokevirtual #73                 // Method read:(Ljava/nio/ByteBuffer;)I
      12: i2l
      13: lreturn
      14: aload_0
      15: getfield      #5                  // Field socketChannel:Ljava/nio/channels/SocketChannel;
      18: aload_1
      19: iload_2
      20: iload_3
      21: invokevirtual #74                 // Method java/nio/channels/SocketChannel.read:([Ljava/nio/ByteBuffer;II)J
      24: lstore        4
      26: goto          35
      29: astore        6
      31: ldc2_w        #75                 // long -1l
      34: lreturn
      35: lload         4
      37: ldc2_w        #75                 // long -1l
      40: lcmp
      41: ifeq          63
      44: aload_0
      45: lload         4
      47: lconst_0
      48: lcmp
      49: ifle          56
      52: iconst_1
      53: goto          57
      56: iconst_0
      57: invokespecial #69                 // Method checkReadTimeout:(Z)V
      60: goto          67
      63: aload_0
      64: invokevirtual #72                 // Method terminateReads:()V
      67: lload         4
      69: lreturn
    Exception table:
       from    to  target type
          14    26    29   Class java/nio/channels/ClosedChannelException

  public void terminateReads() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field connection:Lorg/xnio/nio/NioSocketStreamConnection;
       4: invokevirtual #77                 // Method org/xnio/nio/NioSocketStreamConnection.readClosed:()Z
       7: ifeq          71
      10: aload_0
      11: invokevirtual #6                  // Method getSelectionKey:()Ljava/nio/channels/SelectionKey;
      14: invokevirtual #45                 // Method java/nio/channels/SelectionKey.isValid:()Z
      17: ifeq          25
      20: aload_0
      21: iconst_1
      22: invokevirtual #46                 // Method suspend:(I)V
      25: aload_0
      26: getfield      #5                  // Field socketChannel:Ljava/nio/channels/SocketChannel;
      29: invokevirtual #47                 // Method java/nio/channels/SocketChannel.isOpen:()Z
      32: ifeq          49
      35: aload_0
      36: getfield      #5                  // Field socketChannel:Ljava/nio/channels/SocketChannel;
      39: invokevirtual #48                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
      42: invokevirtual #78                 // Method java/net/Socket.shutdownInput:()V
      45: goto          49
      48: astore_1
      49: aload_0
      50: invokevirtual #79                 // Method readTerminated:()V
      53: goto          71
      56: astore_1
      57: aload_0
      58: invokevirtual #79                 // Method readTerminated:()V
      61: goto          71
      64: astore_2
      65: aload_0
      66: invokevirtual #79                 // Method readTerminated:()V
      69: aload_2
      70: athrow
      71: return
    Exception table:
       from    to  target type
          35    45    48   Class java/net/SocketException
          10    49    56   Class java/nio/channels/ClosedChannelException
          10    49    64   any

  void readTerminated();
    Code:
       0: aload_0
       1: getfield      #13                 // Field readReadyHandler:Lorg/xnio/conduits/ReadReadyHandler;
       4: astore_1
       5: aload_1
       6: ifnull        19
       9: aload_1
      10: invokeinterface #25,  1           // InterfaceMethod org/xnio/conduits/ReadReadyHandler.terminated:()V
      15: goto          19
      18: astore_2
      19: return
    Exception table:
       from    to  target type
           9    15    18   Class java/lang/Throwable

  public boolean isReadShutdown();
    Code:
       0: aload_0
       1: getfield      #2                  // Field connection:Lorg/xnio/nio/NioSocketStreamConnection;
       4: invokevirtual #80                 // Method org/xnio/nio/NioSocketStreamConnection.isReadShutdown:()Z
       7: ireturn

  public void resumeReads();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #55                 // Method resume:(I)V
       5: return

  public void suspendReads();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #46                 // Method suspend:(I)V
       5: return

  public void wakeupReads();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #56                 // Method wakeup:(I)V
       5: return

  public boolean isReadResumed();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #57                 // Method isResumed:(I)Z
       5: ireturn

  public void awaitReadable() throws java.io.IOException;
    Code:
       0: invokestatic  #58                 // Method org/xnio/Xnio.checkBlockingAllowed:()V
       3: aload_0
       4: invokevirtual #59                 // Method getWorker:()Lorg/xnio/XnioWorker;
       7: invokevirtual #60                 // Method org/xnio/XnioWorker.getXnio:()Lorg/xnio/Xnio;
      10: checkcast     #61                 // class org/xnio/nio/NioXnio
      13: aload_0
      14: getfield      #5                  // Field socketChannel:Ljava/nio/channels/SocketChannel;
      17: iconst_1
      18: invokestatic  #62                 // Method org/xnio/nio/SelectorUtils.await:(Lorg/xnio/nio/NioXnio;Ljava/nio/channels/SelectableChannel;I)V
      21: return

  public void awaitReadable(long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: invokestatic  #58                 // Method org/xnio/Xnio.checkBlockingAllowed:()V
       3: aload_0
       4: invokevirtual #59                 // Method getWorker:()Lorg/xnio/XnioWorker;
       7: invokevirtual #60                 // Method org/xnio/XnioWorker.getXnio:()Lorg/xnio/Xnio;
      10: checkcast     #61                 // class org/xnio/nio/NioXnio
      13: aload_0
      14: getfield      #5                  // Field socketChannel:Ljava/nio/channels/SocketChannel;
      17: iconst_1
      18: lload_1
      19: aload_3
      20: invokestatic  #63                 // Method org/xnio/nio/SelectorUtils.await:(Lorg/xnio/nio/NioXnio;Ljava/nio/channels/SelectableChannel;IJLjava/util/concurrent/TimeUnit;)V
      23: return

  public org.xnio.XnioIoThread getReadThread();
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method getWorkerThread:()Lorg/xnio/nio/WorkerThread;
       4: areturn

  public void setReadReadyHandler(org.xnio.conduits.ReadReadyHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field readReadyHandler:Lorg/xnio/conduits/ReadReadyHandler;
       5: return

  java.nio.channels.SocketChannel getSocketChannel();
    Code:
       0: aload_0
       1: getfield      #5                  // Field socketChannel:Ljava/nio/channels/SocketChannel;
       4: areturn

  static {};
    Code:
       0: ldc           #81                 // class org/xnio/nio/NioSocketConduit
       2: ldc           #82                 // String readTimeout
       4: invokestatic  #83                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       7: putstatic     #64                 // Field readTimeoutUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: ldc           #81                 // class org/xnio/nio/NioSocketConduit
      12: ldc           #84                 // String writeTimeout
      14: invokestatic  #83                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      17: putstatic     #27                 // Field writeTimeoutUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      20: return
}
