Compiled from "NioTcpServer.java"
final class org.xnio.nio.NioTcpServer extends org.xnio.nio.AbstractNioChannel<org.xnio.nio.NioTcpServer> implements org.xnio.channels.AcceptingChannel<org.xnio.StreamConnection>, org.xnio.channels.AcceptListenerSettable<org.xnio.nio.NioTcpServer> {
  private static final java.lang.String FQCN;

  private volatile org.xnio.ChannelListener<? super org.xnio.nio.NioTcpServer> acceptListener;

  private final org.xnio.nio.NioTcpServerHandle[] handles;

  private final java.nio.channels.ServerSocketChannel channel;

  private final java.net.ServerSocket socket;

  private final org.xnio.ManagementRegistration mbeanHandle;

  private static final java.util.Set<org.xnio.Option<?>> options;

  private volatile int keepAlive;

  private volatile int oobInline;

  private volatile int tcpNoDelay;

  private volatile int sendBuffer;

  private volatile long connectionStatus;

  private volatile int readTimeout;

  private volatile int writeTimeout;

  private volatile int tokenConnectionCount;

  volatile boolean resumed;

  private static final long CONN_LOW_MASK;

  private static final long CONN_LOW_BIT;

  private static final long CONN_LOW_ONE;

  private static final long CONN_HIGH_MASK;

  private static final long CONN_HIGH_BIT;

  private static final long CONN_HIGH_ONE;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.xnio.nio.NioTcpServer> keepAliveUpdater;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.xnio.nio.NioTcpServer> oobInlineUpdater;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.xnio.nio.NioTcpServer> tcpNoDelayUpdater;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.xnio.nio.NioTcpServer> sendBufferUpdater;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.xnio.nio.NioTcpServer> readTimeoutUpdater;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.xnio.nio.NioTcpServer> writeTimeoutUpdater;

  private static final java.util.concurrent.atomic.AtomicLongFieldUpdater<org.xnio.nio.NioTcpServer> connectionStatusUpdater;

  static final boolean $assertionsDisabled;

  org.xnio.nio.NioTcpServer(org.xnio.nio.NioXnioWorker, java.nio.channels.ServerSocketChannel, org.xnio.OptionMap, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method org/xnio/nio/AbstractNioChannel."<init>":(Lorg/xnio/nio/NioXnioWorker;)V
       5: aload_0
       6: iconst_m1
       7: putfield      #6                  // Field sendBuffer:I
      10: aload_0
      11: ldc2_w        #7                  // long 4611686018427387903l
      14: putfield      #4                  // Field connectionStatus:J
      17: aload_0
      18: aload_2
      19: putfield      #9                  // Field channel:Ljava/nio/channels/ServerSocketChannel;
      22: iload         4
      24: ifeq          52
      27: iconst_1
      28: anewarray     #10                 // class org/xnio/nio/WorkerThread
      31: dup
      32: iconst_0
      33: aload_1
      34: invokevirtual #11                 // Method org/xnio/nio/NioXnioWorker.getAcceptThread:()Lorg/xnio/nio/WorkerThread;
      37: aastore
      38: astore        5
      40: iconst_1
      41: istore        6
      43: iconst_0
      44: istore        7
      46: iconst_0
      47: istore        8
      49: goto          147
      52: aload_1
      53: invokevirtual #12                 // Method org/xnio/nio/NioXnioWorker.getAll:()[Lorg/xnio/nio/WorkerThread;
      56: astore        5
      58: aload         5
      60: arraylength
      61: istore        6
      63: iload         6
      65: ifne          77
      68: getstatic     #13                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
      71: invokeinterface #14,  1           // InterfaceMethod org/xnio/nio/Log.noThreads:()Ljava/lang/IllegalArgumentException;
      76: athrow
      77: aload_3
      78: getstatic     #15                 // Field org/xnio/Options.BALANCING_TOKENS:Lorg/xnio/Option;
      81: iconst_m1
      82: invokevirtual #16                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
      85: istore        7
      87: aload_3
      88: getstatic     #17                 // Field org/xnio/Options.BALANCING_CONNECTIONS:Lorg/xnio/Option;
      91: bipush        16
      93: invokevirtual #16                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
      96: istore        8
      98: iload         7
     100: iconst_m1
     101: if_icmpeq     147
     104: iload         7
     106: iconst_1
     107: if_icmplt     117
     110: iload         7
     112: iload         6
     114: if_icmplt     126
     117: getstatic     #13                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
     120: invokeinterface #18,  1           // InterfaceMethod org/xnio/nio/Log.balancingTokens:()Ljava/lang/IllegalArgumentException;
     125: athrow
     126: iload         8
     128: iconst_1
     129: if_icmpge     141
     132: getstatic     #13                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
     135: invokeinterface #19,  1           // InterfaceMethod org/xnio/nio/Log.balancingConnectionCount:()Ljava/lang/IllegalArgumentException;
     140: athrow
     141: aload_0
     142: iload         8
     144: putfield      #20                 // Field tokenConnectionCount:I
     147: aload_0
     148: aload_2
     149: invokevirtual #21                 // Method java/nio/channels/ServerSocketChannel.socket:()Ljava/net/ServerSocket;
     152: putfield      #22                 // Field socket:Ljava/net/ServerSocket;
     155: aload_3
     156: getstatic     #23                 // Field org/xnio/Options.SEND_BUFFER:Lorg/xnio/Option;
     159: invokevirtual #24                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
     162: ifeq          202
     165: aload_3
     166: getstatic     #23                 // Field org/xnio/Options.SEND_BUFFER:Lorg/xnio/Option;
     169: ldc           #26                 // int 65536
     171: invokevirtual #16                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
     174: istore        9
     176: iload         9
     178: iconst_1
     179: if_icmpge     193
     182: getstatic     #13                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
     185: ldc           #27                 // String sendBufferSize
     187: invokeinterface #28,  2           // InterfaceMethod org/xnio/nio/Log.parameterOutOfRange:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
     192: athrow
     193: getstatic     #29                 // Field sendBufferUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     196: aload_0
     197: iload         9
     199: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.set:(Ljava/lang/Object;I)V
     202: aload_3
     203: getstatic     #31                 // Field org/xnio/Options.KEEP_ALIVE:Lorg/xnio/Option;
     206: invokevirtual #24                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
     209: ifeq          235
     212: getstatic     #32                 // Field keepAliveUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     215: aload_0
     216: aload_3
     217: getstatic     #31                 // Field org/xnio/Options.KEEP_ALIVE:Lorg/xnio/Option;
     220: iconst_0
     221: invokevirtual #33                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
     224: ifeq          231
     227: iconst_1
     228: goto          232
     231: iconst_0
     232: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.lazySet:(Ljava/lang/Object;I)V
     235: aload_3
     236: getstatic     #35                 // Field org/xnio/Options.TCP_OOB_INLINE:Lorg/xnio/Option;
     239: invokevirtual #24                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
     242: ifeq          268
     245: getstatic     #36                 // Field oobInlineUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     248: aload_0
     249: aload_3
     250: getstatic     #35                 // Field org/xnio/Options.TCP_OOB_INLINE:Lorg/xnio/Option;
     253: iconst_0
     254: invokevirtual #33                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
     257: ifeq          264
     260: iconst_1
     261: goto          265
     264: iconst_0
     265: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.lazySet:(Ljava/lang/Object;I)V
     268: aload_3
     269: getstatic     #37                 // Field org/xnio/Options.TCP_NODELAY:Lorg/xnio/Option;
     272: invokevirtual #24                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
     275: ifeq          301
     278: getstatic     #38                 // Field tcpNoDelayUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     281: aload_0
     282: aload_3
     283: getstatic     #37                 // Field org/xnio/Options.TCP_NODELAY:Lorg/xnio/Option;
     286: iconst_0
     287: invokevirtual #33                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
     290: ifeq          297
     293: iconst_1
     294: goto          298
     297: iconst_0
     298: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.lazySet:(Ljava/lang/Object;I)V
     301: aload_3
     302: getstatic     #39                 // Field org/xnio/Options.READ_TIMEOUT:Lorg/xnio/Option;
     305: invokevirtual #24                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
     308: ifeq          326
     311: getstatic     #40                 // Field readTimeoutUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     314: aload_0
     315: aload_3
     316: getstatic     #39                 // Field org/xnio/Options.READ_TIMEOUT:Lorg/xnio/Option;
     319: iconst_0
     320: invokevirtual #16                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
     323: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.lazySet:(Ljava/lang/Object;I)V
     326: aload_3
     327: getstatic     #41                 // Field org/xnio/Options.WRITE_TIMEOUT:Lorg/xnio/Option;
     330: invokevirtual #24                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
     333: ifeq          351
     336: getstatic     #42                 // Field writeTimeoutUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     339: aload_0
     340: aload_3
     341: getstatic     #41                 // Field org/xnio/Options.WRITE_TIMEOUT:Lorg/xnio/Option;
     344: iconst_0
     345: invokevirtual #16                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
     348: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.lazySet:(Ljava/lang/Object;I)V
     351: aload_3
     352: getstatic     #43                 // Field org/xnio/Options.CONNECTION_HIGH_WATER:Lorg/xnio/Option;
     355: invokevirtual #24                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
     358: ifne          371
     361: aload_3
     362: getstatic     #44                 // Field org/xnio/Options.CONNECTION_LOW_WATER:Lorg/xnio/Option;
     365: invokevirtual #24                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
     368: ifeq          474
     371: aload_3
     372: getstatic     #43                 // Field org/xnio/Options.CONNECTION_HIGH_WATER:Lorg/xnio/Option;
     375: ldc           #46                 // int 2147483647
     377: invokevirtual #16                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
     380: istore        13
     382: aload_3
     383: getstatic     #44                 // Field org/xnio/Options.CONNECTION_LOW_WATER:Lorg/xnio/Option;
     386: iload         13
     388: invokevirtual #16                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
     391: istore        14
     393: iload         13
     395: ifgt          402
     398: invokestatic  #47                 // Method badHighWater:()Ljava/lang/IllegalArgumentException;
     401: athrow
     402: iload         14
     404: ifle          414
     407: iload         14
     409: iload         13
     411: if_icmple     420
     414: iload         13
     416: invokestatic  #48                 // Method badLowWater:(I)Ljava/lang/IllegalArgumentException;
     419: athrow
     420: iload         13
     422: i2l
     423: bipush        31
     425: lshl
     426: iload         14
     428: i2l
     429: iconst_0
     430: lshl
     431: lor
     432: lstore        15
     434: getstatic     #49                 // Field connectionStatusUpdater:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
     437: aload_0
     438: lload         15
     440: invokevirtual #50                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.lazySet:(Ljava/lang/Object;J)V
     443: iload         14
     445: iload         6
     447: idiv
     448: istore        9
     450: iload         14
     452: iload         6
     454: irem
     455: istore        10
     457: iload         13
     459: iload         6
     461: idiv
     462: istore        11
     464: iload         13
     466: iload         6
     468: irem
     469: istore        12
     471: goto          498
     474: ldc           #46                 // int 2147483647
     476: istore        9
     478: iconst_0
     479: istore        10
     481: ldc           #46                 // int 2147483647
     483: istore        11
     485: iconst_0
     486: istore        12
     488: getstatic     #49                 // Field connectionStatusUpdater:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
     491: aload_0
     492: ldc2_w        #7                  // long 4611686018427387903l
     495: invokevirtual #50                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.lazySet:(Ljava/lang/Object;J)V
     498: iload         6
     500: anewarray     #51                 // class org/xnio/nio/NioTcpServerHandle
     503: astore        13
     505: iconst_0
     506: istore        14
     508: iload         6
     510: istore        15
     512: iload         14
     514: iload         15
     516: if_icmpge     599
     519: aload         5
     521: iload         14
     523: aaload
     524: aload_2
     525: invokevirtual #52                 // Method org/xnio/nio/WorkerThread.registerChannel:(Ljava/nio/channels/spi/AbstractSelectableChannel;)Ljava/nio/channels/SelectionKey;
     528: astore        16
     530: aload         13
     532: iload         14
     534: new           #51                 // class org/xnio/nio/NioTcpServerHandle
     537: dup
     538: aload_0
     539: aload         16
     541: aload         5
     543: iload         14
     545: aaload
     546: iload         14
     548: iload         12
     550: if_icmpge     560
     553: iload         11
     555: iconst_1
     556: iadd
     557: goto          562
     560: iload         11
     562: iload         14
     564: iload         10
     566: if_icmpge     576
     569: iload         9
     571: iconst_1
     572: iadd
     573: goto          578
     576: iload         9
     578: invokespecial #53                 // Method org/xnio/nio/NioTcpServerHandle."<init>":(Lorg/xnio/nio/NioTcpServer;Ljava/nio/channels/SelectionKey;Lorg/xnio/nio/WorkerThread;II)V
     581: aastore
     582: aload         16
     584: aload         13
     586: iload         14
     588: aaload
     589: invokevirtual #54                 // Method java/nio/channels/SelectionKey.attach:(Ljava/lang/Object;)Ljava/lang/Object;
     592: pop
     593: iinc          14, 1
     596: goto          512
     599: aload_0
     600: aload         13
     602: putfield      #55                 // Field handles:[Lorg/xnio/nio/NioTcpServerHandle;
     605: iload         7
     607: ifle          647
     610: iconst_0
     611: istore        14
     613: iload         14
     615: iload         6
     617: if_icmpge     647
     620: aload         13
     622: iload         14
     624: aaload
     625: iload         14
     627: iload         7
     629: if_icmpge     637
     632: iload         8
     634: goto          638
     637: iconst_0
     638: invokevirtual #56                 // Method org/xnio/nio/NioTcpServerHandle.initializeTokenCount:(I)V
     641: iinc          14, 1
     644: goto          613
     647: aload_0
     648: aload_1
     649: new           #57                 // class org/xnio/nio/NioTcpServer$1
     652: dup
     653: aload_0
     654: aload_1
     655: aload         13
     657: invokespecial #58                 // Method org/xnio/nio/NioTcpServer$1."<init>":(Lorg/xnio/nio/NioTcpServer;Lorg/xnio/nio/NioXnioWorker;[Lorg/xnio/nio/NioTcpServerHandle;)V
     660: invokevirtual #59                 // Method org/xnio/nio/NioXnioWorker.registerServerMXBean:(Lorg/xnio/management/XnioServerMXBean;)Lorg/xnio/ManagementRegistration;
     663: putfield      #60                 // Field mbeanHandle:Lorg/xnio/ManagementRegistration;
     666: return

  private static java.lang.IllegalArgumentException badLowWater(int);
    Code:
       0: new           #61                 // class java/lang/IllegalArgumentException
       3: dup
       4: new           #62                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #63                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #64                 // String Low water must be greater than 0 and less than or equal to high water (
      13: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: iload_0
      17: invokevirtual #66                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      20: ldc           #67                 // String )
      22: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: invokespecial #69                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      31: areturn

  private static java.lang.IllegalArgumentException badHighWater();
    Code:
       0: new           #61                 // class java/lang/IllegalArgumentException
       3: dup
       4: ldc           #70                 // String High water must be greater than 0
       6: invokespecial #69                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
       9: areturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field channel:Ljava/nio/channels/ServerSocketChannel;
       4: invokevirtual #71                 // Method java/nio/channels/ServerSocketChannel.close:()V
       7: aload_0
       8: getfield      #55                 // Field handles:[Lorg/xnio/nio/NioTcpServerHandle;
      11: astore_1
      12: aload_1
      13: arraylength
      14: istore_2
      15: iconst_0
      16: istore_3
      17: iload_3
      18: iload_2
      19: if_icmpge     39
      22: aload_1
      23: iload_3
      24: aaload
      25: astore        4
      27: aload         4
      29: iconst_0
      30: invokevirtual #72                 // Method org/xnio/nio/NioTcpServerHandle.cancelKey:(Z)V
      33: iinc          3, 1
      36: goto          17
      39: aload_0
      40: getfield      #60                 // Field mbeanHandle:Lorg/xnio/ManagementRegistration;
      43: invokestatic  #73                 // Method org/xnio/IoUtils.safeClose:(Ljava/lang/AutoCloseable;)V
      46: goto          101
      49: astore        5
      51: aload_0
      52: getfield      #55                 // Field handles:[Lorg/xnio/nio/NioTcpServerHandle;
      55: astore        6
      57: aload         6
      59: arraylength
      60: istore        7
      62: iconst_0
      63: istore        8
      65: iload         8
      67: iload         7
      69: if_icmpge     91
      72: aload         6
      74: iload         8
      76: aaload
      77: astore        9
      79: aload         9
      81: iconst_0
      82: invokevirtual #72                 // Method org/xnio/nio/NioTcpServerHandle.cancelKey:(Z)V
      85: iinc          8, 1
      88: goto          65
      91: aload_0
      92: getfield      #60                 // Field mbeanHandle:Lorg/xnio/ManagementRegistration;
      95: invokestatic  #73                 // Method org/xnio/IoUtils.safeClose:(Ljava/lang/AutoCloseable;)V
      98: aload         5
     100: athrow
     101: return
    Exception table:
       from    to  target type
           0     7    49   any
          49    51    49   any

  public boolean supportsOption(org.xnio.Option<?>);
    Code:
       0: getstatic     #74                 // Field options:Ljava/util/Set;
       3: aload_1
       4: invokeinterface #75,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
       9: ireturn

  public <T> T getOption(org.xnio.Option<T>) throws org.xnio.channels.UnsupportedOptionException, java.io.IOException;
    Code:
       0: aload_1
       1: getstatic     #76                 // Field org/xnio/Options.REUSE_ADDRESSES:Lorg/xnio/Option;
       4: if_acmpne     22
       7: aload_1
       8: aload_0
       9: getfield      #22                 // Field socket:Ljava/net/ServerSocket;
      12: invokevirtual #77                 // Method java/net/ServerSocket.getReuseAddress:()Z
      15: invokestatic  #78                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      18: invokevirtual #79                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      21: areturn
      22: aload_1
      23: getstatic     #80                 // Field org/xnio/Options.RECEIVE_BUFFER:Lorg/xnio/Option;
      26: if_acmpne     44
      29: aload_1
      30: aload_0
      31: getfield      #22                 // Field socket:Ljava/net/ServerSocket;
      34: invokevirtual #81                 // Method java/net/ServerSocket.getReceiveBufferSize:()I
      37: invokestatic  #82                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      40: invokevirtual #79                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      43: areturn
      44: aload_1
      45: getstatic     #23                 // Field org/xnio/Options.SEND_BUFFER:Lorg/xnio/Option;
      48: if_acmpne     74
      51: aload_0
      52: getfield      #6                  // Field sendBuffer:I
      55: istore_2
      56: iload_2
      57: iconst_m1
      58: if_icmpne     65
      61: aconst_null
      62: goto          73
      65: aload_1
      66: iload_2
      67: invokestatic  #82                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      70: invokevirtual #79                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      73: areturn
      74: aload_1
      75: getstatic     #31                 // Field org/xnio/Options.KEEP_ALIVE:Lorg/xnio/Option;
      78: if_acmpne     101
      81: aload_1
      82: aload_0
      83: getfield      #83                 // Field keepAlive:I
      86: ifeq          93
      89: iconst_1
      90: goto          94
      93: iconst_0
      94: invokestatic  #78                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      97: invokevirtual #79                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     100: areturn
     101: aload_1
     102: getstatic     #35                 // Field org/xnio/Options.TCP_OOB_INLINE:Lorg/xnio/Option;
     105: if_acmpne     128
     108: aload_1
     109: aload_0
     110: getfield      #84                 // Field oobInline:I
     113: ifeq          120
     116: iconst_1
     117: goto          121
     120: iconst_0
     121: invokestatic  #78                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     124: invokevirtual #79                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     127: areturn
     128: aload_1
     129: getstatic     #37                 // Field org/xnio/Options.TCP_NODELAY:Lorg/xnio/Option;
     132: if_acmpne     155
     135: aload_1
     136: aload_0
     137: getfield      #85                 // Field tcpNoDelay:I
     140: ifeq          147
     143: iconst_1
     144: goto          148
     147: iconst_0
     148: invokestatic  #78                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     151: invokevirtual #79                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     154: areturn
     155: aload_1
     156: getstatic     #39                 // Field org/xnio/Options.READ_TIMEOUT:Lorg/xnio/Option;
     159: if_acmpne     174
     162: aload_1
     163: aload_0
     164: getfield      #86                 // Field readTimeout:I
     167: invokestatic  #82                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     170: invokevirtual #79                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     173: areturn
     174: aload_1
     175: getstatic     #41                 // Field org/xnio/Options.WRITE_TIMEOUT:Lorg/xnio/Option;
     178: if_acmpne     193
     181: aload_1
     182: aload_0
     183: getfield      #87                 // Field writeTimeout:I
     186: invokestatic  #82                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     189: invokevirtual #79                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     192: areturn
     193: aload_1
     194: getstatic     #43                 // Field org/xnio/Options.CONNECTION_HIGH_WATER:Lorg/xnio/Option;
     197: if_acmpne     215
     200: aload_1
     201: aload_0
     202: getfield      #4                  // Field connectionStatus:J
     205: invokestatic  #3                  // Method getHighWater:(J)I
     208: invokestatic  #82                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     211: invokevirtual #79                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     214: areturn
     215: aload_1
     216: getstatic     #44                 // Field org/xnio/Options.CONNECTION_LOW_WATER:Lorg/xnio/Option;
     219: if_acmpne     237
     222: aload_1
     223: aload_0
     224: getfield      #4                  // Field connectionStatus:J
     227: invokestatic  #2                  // Method getLowWater:(J)I
     230: invokestatic  #82                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     233: invokevirtual #79                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     236: areturn
     237: aconst_null
     238: areturn

  public <T> T setOption(org.xnio.Option<T>, T) throws java.lang.IllegalArgumentException, java.io.IOException;
    Code:
       0: aload_1
       1: getstatic     #76                 // Field org/xnio/Options.REUSE_ADDRESSES:Lorg/xnio/Option;
       4: if_acmpne     44
       7: aload_0
       8: getfield      #22                 // Field socket:Ljava/net/ServerSocket;
      11: invokevirtual #77                 // Method java/net/ServerSocket.getReuseAddress:()Z
      14: invokestatic  #78                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      17: astore_3
      18: aload_0
      19: getfield      #22                 // Field socket:Ljava/net/ServerSocket;
      22: getstatic     #76                 // Field org/xnio/Options.REUSE_ADDRESSES:Lorg/xnio/Option;
      25: aload_2
      26: getstatic     #88                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      29: invokevirtual #89                 // Method org/xnio/Option.cast:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #90                 // class java/lang/Boolean
      35: invokevirtual #91                 // Method java/lang/Boolean.booleanValue:()Z
      38: invokevirtual #92                 // Method java/net/ServerSocket.setReuseAddress:(Z)V
      41: goto          502
      44: aload_1
      45: getstatic     #80                 // Field org/xnio/Options.RECEIVE_BUFFER:Lorg/xnio/Option;
      48: if_acmpne     111
      51: aload_0
      52: getfield      #22                 // Field socket:Ljava/net/ServerSocket;
      55: invokevirtual #81                 // Method java/net/ServerSocket.getReceiveBufferSize:()I
      58: invokestatic  #82                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      61: astore_3
      62: getstatic     #80                 // Field org/xnio/Options.RECEIVE_BUFFER:Lorg/xnio/Option;
      65: aload_2
      66: ldc           #26                 // int 65536
      68: invokestatic  #82                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      71: invokevirtual #89                 // Method org/xnio/Option.cast:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      74: checkcast     #45                 // class java/lang/Integer
      77: invokevirtual #93                 // Method java/lang/Integer.intValue:()I
      80: istore        4
      82: iload         4
      84: iconst_1
      85: if_icmpge     99
      88: getstatic     #13                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
      91: ldc           #94                 // String RECEIVE_BUFFER
      93: invokeinterface #95,  2           // InterfaceMethod org/xnio/nio/Log.optionOutOfRange:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      98: athrow
      99: aload_0
     100: getfield      #22                 // Field socket:Ljava/net/ServerSocket;
     103: iload         4
     105: invokevirtual #96                 // Method java/net/ServerSocket.setReceiveBufferSize:(I)V
     108: goto          502
     111: aload_1
     112: getstatic     #23                 // Field org/xnio/Options.SEND_BUFFER:Lorg/xnio/Option;
     115: if_acmpne     185
     118: getstatic     #23                 // Field org/xnio/Options.SEND_BUFFER:Lorg/xnio/Option;
     121: aload_2
     122: ldc           #26                 // int 65536
     124: invokestatic  #82                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     127: invokevirtual #89                 // Method org/xnio/Option.cast:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     130: checkcast     #45                 // class java/lang/Integer
     133: invokevirtual #93                 // Method java/lang/Integer.intValue:()I
     136: istore        4
     138: iload         4
     140: iconst_1
     141: if_icmpge     155
     144: getstatic     #13                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
     147: ldc           #97                 // String SEND_BUFFER
     149: invokeinterface #95,  2           // InterfaceMethod org/xnio/nio/Log.optionOutOfRange:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
     154: athrow
     155: getstatic     #29                 // Field sendBufferUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     158: aload_0
     159: iload         4
     161: invokevirtual #98                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndSet:(Ljava/lang/Object;I)I
     164: istore        5
     166: iload         5
     168: iconst_m1
     169: if_icmpne     176
     172: aconst_null
     173: goto          181
     176: iload         5
     178: invokestatic  #82                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     181: astore_3
     182: goto          502
     185: aload_1
     186: getstatic     #31                 // Field org/xnio/Options.KEEP_ALIVE:Lorg/xnio/Option;
     189: if_acmpne     238
     192: getstatic     #32                 // Field keepAliveUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     195: aload_0
     196: getstatic     #31                 // Field org/xnio/Options.KEEP_ALIVE:Lorg/xnio/Option;
     199: aload_2
     200: getstatic     #88                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
     203: invokevirtual #89                 // Method org/xnio/Option.cast:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     206: checkcast     #90                 // class java/lang/Boolean
     209: invokevirtual #91                 // Method java/lang/Boolean.booleanValue:()Z
     212: ifeq          219
     215: iconst_1
     216: goto          220
     219: iconst_0
     220: invokevirtual #98                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndSet:(Ljava/lang/Object;I)I
     223: ifeq          230
     226: iconst_1
     227: goto          231
     230: iconst_0
     231: invokestatic  #78                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     234: astore_3
     235: goto          502
     238: aload_1
     239: getstatic     #35                 // Field org/xnio/Options.TCP_OOB_INLINE:Lorg/xnio/Option;
     242: if_acmpne     291
     245: getstatic     #36                 // Field oobInlineUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     248: aload_0
     249: getstatic     #35                 // Field org/xnio/Options.TCP_OOB_INLINE:Lorg/xnio/Option;
     252: aload_2
     253: getstatic     #88                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
     256: invokevirtual #89                 // Method org/xnio/Option.cast:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     259: checkcast     #90                 // class java/lang/Boolean
     262: invokevirtual #91                 // Method java/lang/Boolean.booleanValue:()Z
     265: ifeq          272
     268: iconst_1
     269: goto          273
     272: iconst_0
     273: invokevirtual #98                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndSet:(Ljava/lang/Object;I)I
     276: ifeq          283
     279: iconst_1
     280: goto          284
     283: iconst_0
     284: invokestatic  #78                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     287: astore_3
     288: goto          502
     291: aload_1
     292: getstatic     #37                 // Field org/xnio/Options.TCP_NODELAY:Lorg/xnio/Option;
     295: if_acmpne     344
     298: getstatic     #38                 // Field tcpNoDelayUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     301: aload_0
     302: getstatic     #37                 // Field org/xnio/Options.TCP_NODELAY:Lorg/xnio/Option;
     305: aload_2
     306: getstatic     #88                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
     309: invokevirtual #89                 // Method org/xnio/Option.cast:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     312: checkcast     #90                 // class java/lang/Boolean
     315: invokevirtual #91                 // Method java/lang/Boolean.booleanValue:()Z
     318: ifeq          325
     321: iconst_1
     322: goto          326
     325: iconst_0
     326: invokevirtual #98                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndSet:(Ljava/lang/Object;I)I
     329: ifeq          336
     332: iconst_1
     333: goto          337
     336: iconst_0
     337: invokestatic  #78                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     340: astore_3
     341: goto          502
     344: aload_1
     345: getstatic     #39                 // Field org/xnio/Options.READ_TIMEOUT:Lorg/xnio/Option;
     348: if_acmpne     382
     351: getstatic     #40                 // Field readTimeoutUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     354: aload_0
     355: getstatic     #39                 // Field org/xnio/Options.READ_TIMEOUT:Lorg/xnio/Option;
     358: aload_2
     359: iconst_0
     360: invokestatic  #82                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     363: invokevirtual #89                 // Method org/xnio/Option.cast:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     366: checkcast     #45                 // class java/lang/Integer
     369: invokevirtual #93                 // Method java/lang/Integer.intValue:()I
     372: invokevirtual #98                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndSet:(Ljava/lang/Object;I)I
     375: invokestatic  #82                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     378: astore_3
     379: goto          502
     382: aload_1
     383: getstatic     #41                 // Field org/xnio/Options.WRITE_TIMEOUT:Lorg/xnio/Option;
     386: if_acmpne     420
     389: getstatic     #42                 // Field writeTimeoutUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     392: aload_0
     393: getstatic     #41                 // Field org/xnio/Options.WRITE_TIMEOUT:Lorg/xnio/Option;
     396: aload_2
     397: iconst_0
     398: invokestatic  #82                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     401: invokevirtual #89                 // Method org/xnio/Option.cast:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     404: checkcast     #45                 // class java/lang/Integer
     407: invokevirtual #93                 // Method java/lang/Integer.intValue:()I
     410: invokevirtual #98                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndSet:(Ljava/lang/Object;I)I
     413: invokestatic  #82                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     416: astore_3
     417: goto          502
     420: aload_1
     421: getstatic     #43                 // Field org/xnio/Options.CONNECTION_HIGH_WATER:Lorg/xnio/Option;
     424: if_acmpne     460
     427: aload_0
     428: iconst_m1
     429: getstatic     #43                 // Field org/xnio/Options.CONNECTION_HIGH_WATER:Lorg/xnio/Option;
     432: aload_2
     433: ldc           #46                 // int 2147483647
     435: invokestatic  #82                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     438: invokevirtual #89                 // Method org/xnio/Option.cast:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     441: checkcast     #45                 // class java/lang/Integer
     444: invokevirtual #93                 // Method java/lang/Integer.intValue:()I
     447: invokespecial #99                 // Method updateWaterMark:(II)J
     450: invokestatic  #3                  // Method getHighWater:(J)I
     453: invokestatic  #82                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     456: astore_3
     457: goto          502
     460: aload_1
     461: getstatic     #44                 // Field org/xnio/Options.CONNECTION_LOW_WATER:Lorg/xnio/Option;
     464: if_acmpne     500
     467: aload_0
     468: getstatic     #44                 // Field org/xnio/Options.CONNECTION_LOW_WATER:Lorg/xnio/Option;
     471: aload_2
     472: ldc           #46                 // int 2147483647
     474: invokestatic  #82                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     477: invokevirtual #89                 // Method org/xnio/Option.cast:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     480: checkcast     #45                 // class java/lang/Integer
     483: invokevirtual #93                 // Method java/lang/Integer.intValue:()I
     486: iconst_m1
     487: invokespecial #99                 // Method updateWaterMark:(II)J
     490: invokestatic  #2                  // Method getLowWater:(J)I
     493: invokestatic  #82                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     496: astore_3
     497: goto          502
     500: aconst_null
     501: areturn
     502: aload_1
     503: aload_3
     504: invokevirtual #79                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     507: areturn

  private long updateWaterMark(int, int);
    Code:
       0: getstatic     #100                // Field $assertionsDisabled:Z
       3: ifne          24
       6: iload_1
       7: iconst_m1
       8: if_icmpne     24
      11: iload_2
      12: iconst_m1
      13: if_icmpne     24
      16: new           #101                // class java/lang/AssertionError
      19: dup
      20: invokespecial #102                // Method java/lang/AssertionError."<init>":()V
      23: athrow
      24: getstatic     #100                // Field $assertionsDisabled:Z
      27: ifne          53
      30: iload_1
      31: iconst_m1
      32: if_icmpeq     53
      35: iload_2
      36: iconst_m1
      37: if_icmpeq     53
      40: iload_1
      41: iload_2
      42: if_icmple     53
      45: new           #101                // class java/lang/AssertionError
      48: dup
      49: invokespecial #102                // Method java/lang/AssertionError."<init>":()V
      52: athrow
      53: aload_0
      54: getfield      #4                  // Field connectionStatus:J
      57: lstore_3
      58: lload_3
      59: invokestatic  #2                  // Method getLowWater:(J)I
      62: istore        8
      64: lload_3
      65: invokestatic  #3                  // Method getHighWater:(J)I
      68: istore        7
      70: iload_1
      71: iconst_m1
      72: if_icmpne     80
      75: iload         8
      77: goto          81
      80: iload_1
      81: istore        9
      83: iload_2
      84: iconst_m1
      85: if_icmpne     93
      88: iload         7
      90: goto          94
      93: iload_2
      94: istore        10
      96: iload_1
      97: iconst_m1
      98: if_icmpeq     115
     101: iload         9
     103: iload         10
     105: if_icmple     115
     108: iload         9
     110: istore        10
     112: goto          131
     115: iload_2
     116: iconst_m1
     117: if_icmpeq     131
     120: iload         10
     122: iload         9
     124: if_icmpge     131
     127: iload         10
     129: istore        9
     131: iload         8
     133: iload         9
     135: if_icmpne     147
     138: iload         7
     140: iload         10
     142: if_icmpne     147
     145: lload_3
     146: lreturn
     147: iload         9
     149: i2l
     150: iconst_0
     151: lshl
     152: iload         10
     154: i2l
     155: bipush        31
     157: lshl
     158: lor
     159: lstore        5
     161: getstatic     #49                 // Field connectionStatusUpdater:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
     164: aload_0
     165: lload_3
     166: lload         5
     168: invokevirtual #103                // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.compareAndSet:(Ljava/lang/Object;JJ)Z
     171: ifeq          53
     174: aload_0
     175: getfield      #55                 // Field handles:[Lorg/xnio/nio/NioTcpServerHandle;
     178: astore        11
     180: aload         11
     182: arraylength
     183: istore        12
     185: iload         9
     187: iload         12
     189: idiv
     190: istore        13
     192: iload         9
     194: iload         12
     196: irem
     197: istore        14
     199: iload         10
     201: iload         12
     203: idiv
     204: istore        15
     206: iload         10
     208: iload         12
     210: irem
     211: istore        16
     213: iconst_0
     214: istore        17
     216: iload         17
     218: aload         11
     220: arraylength
     221: if_icmpge     274
     224: aload         11
     226: iload         17
     228: aaload
     229: astore        18
     231: aload         18
     233: iload         17
     235: iload         16
     237: if_icmpge     247
     240: iload         15
     242: iconst_1
     243: iadd
     244: goto          249
     247: iload         15
     249: iload         17
     251: iload         14
     253: if_icmpge     263
     256: iload         13
     258: iconst_1
     259: iadd
     260: goto          265
     263: iload         13
     265: invokevirtual #104                // Method org/xnio/nio/NioTcpServerHandle.executeSetTask:(II)V
     268: iinc          17, 1
     271: goto          216
     274: lload_3
     275: lreturn

  private static int getHighWater(long);
    Code:
       0: lload_0
       1: ldc2_w        #105                // long 4611686016279904256l
       4: land
       5: bipush        31
       7: lshr
       8: l2i
       9: ireturn

  private static int getLowWater(long);
    Code:
       0: lload_0
       1: ldc2_w        #107                // long 2147483647l
       4: land
       5: iconst_0
       6: lshr
       7: l2i
       8: ireturn

  public org.xnio.nio.NioSocketStreamConnection accept() throws java.nio.channels.ClosedChannelException;
    Code:
       0: invokestatic  #109                // Method org/xnio/nio/WorkerThread.getCurrent:()Lorg/xnio/nio/WorkerThread;
       3: astore_1
       4: aload_1
       5: ifnonnull     10
       8: aconst_null
       9: areturn
      10: aload_0
      11: getfield      #55                 // Field handles:[Lorg/xnio/nio/NioTcpServerHandle;
      14: arraylength
      15: iconst_1
      16: if_icmpne     29
      19: aload_0
      20: getfield      #55                 // Field handles:[Lorg/xnio/nio/NioTcpServerHandle;
      23: iconst_0
      24: aaload
      25: astore_2
      26: goto          39
      29: aload_0
      30: getfield      #55                 // Field handles:[Lorg/xnio/nio/NioTcpServerHandle;
      33: aload_1
      34: invokevirtual #110                // Method org/xnio/nio/WorkerThread.getNumber:()I
      37: aaload
      38: astore_2
      39: aload_2
      40: invokevirtual #111                // Method org/xnio/nio/NioTcpServerHandle.getConnection:()Z
      43: ifne          48
      46: aconst_null
      47: areturn
      48: iconst_0
      49: istore        4
      51: aload_0
      52: getfield      #9                  // Field channel:Ljava/nio/channels/ServerSocketChannel;
      55: invokevirtual #112                // Method java/nio/channels/ServerSocketChannel.accept:()Ljava/nio/channels/SocketChannel;
      58: astore_3
      59: aload_3
      60: ifnull        263
      63: invokestatic  #113                // Method java/util/concurrent/ThreadLocalRandom.current:()Ljava/util/concurrent/ThreadLocalRandom;
      66: invokevirtual #114                // Method java/util/concurrent/ThreadLocalRandom.nextInt:()I
      69: istore        5
      71: aload_3
      72: iconst_0
      73: invokevirtual #115                // Method java/nio/channels/SocketChannel.configureBlocking:(Z)Ljava/nio/channels/SelectableChannel;
      76: pop
      77: aload_3
      78: invokevirtual #116                // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
      81: astore        6
      83: aload         6
      85: aload_0
      86: getfield      #83                 // Field keepAlive:I
      89: ifeq          96
      92: iconst_1
      93: goto          97
      96: iconst_0
      97: invokevirtual #117                // Method java/net/Socket.setKeepAlive:(Z)V
     100: aload         6
     102: aload_0
     103: getfield      #84                 // Field oobInline:I
     106: ifeq          113
     109: iconst_1
     110: goto          114
     113: iconst_0
     114: invokevirtual #118                // Method java/net/Socket.setOOBInline:(Z)V
     117: aload         6
     119: aload_0
     120: getfield      #85                 // Field tcpNoDelay:I
     123: ifeq          130
     126: iconst_1
     127: goto          131
     130: iconst_0
     131: invokevirtual #119                // Method java/net/Socket.setTcpNoDelay:(Z)V
     134: aload_0
     135: getfield      #6                  // Field sendBuffer:I
     138: istore        7
     140: iload         7
     142: ifle          152
     145: aload         6
     147: iload         7
     149: invokevirtual #120                // Method java/net/Socket.setSendBufferSize:(I)V
     152: aload_0
     153: getfield      #121                // Field worker:Lorg/xnio/nio/NioXnioWorker;
     156: iload         5
     158: invokevirtual #122                // Method org/xnio/nio/NioXnioWorker.getIoThread:(I)Lorg/xnio/nio/WorkerThread;
     161: astore        8
     163: aload         8
     165: aload_3
     166: invokevirtual #52                 // Method org/xnio/nio/WorkerThread.registerChannel:(Ljava/nio/channels/spi/AbstractSelectableChannel;)Ljava/nio/channels/SelectionKey;
     169: astore        9
     171: new           #123                // class org/xnio/nio/NioSocketStreamConnection
     174: dup
     175: aload         8
     177: aload         9
     179: aload_2
     180: invokespecial #124                // Method org/xnio/nio/NioSocketStreamConnection."<init>":(Lorg/xnio/nio/WorkerThread;Ljava/nio/channels/SelectionKey;Lorg/xnio/nio/ChannelClosed;)V
     183: astore        10
     185: aload         10
     187: getstatic     #39                 // Field org/xnio/Options.READ_TIMEOUT:Lorg/xnio/Option;
     190: aload_0
     191: getfield      #86                 // Field readTimeout:I
     194: invokestatic  #82                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     197: invokevirtual #125                // Method org/xnio/nio/NioSocketStreamConnection.setOption:(Lorg/xnio/Option;Ljava/lang/Object;)Ljava/lang/Object;
     200: pop
     201: aload         10
     203: getstatic     #41                 // Field org/xnio/Options.WRITE_TIMEOUT:Lorg/xnio/Option;
     206: aload_0
     207: getfield      #87                 // Field writeTimeout:I
     210: invokestatic  #82                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     213: invokevirtual #125                // Method org/xnio/nio/NioSocketStreamConnection.setOption:(Lorg/xnio/Option;Ljava/lang/Object;)Ljava/lang/Object;
     216: pop
     217: iconst_1
     218: istore        4
     220: aload_2
     221: invokevirtual #126                // Method org/xnio/nio/NioTcpServerHandle.resetBackOff:()V
     224: aload         10
     226: astore        11
     228: iload         4
     230: ifne          237
     233: aload_3
     234: invokestatic  #127                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     237: iload         4
     239: ifne          246
     242: aload_2
     243: invokevirtual #128                // Method org/xnio/nio/NioTcpServerHandle.freeConnection:()V
     246: aload         11
     248: areturn
     249: astore        12
     251: iload         4
     253: ifne          260
     256: aload_3
     257: invokestatic  #127                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     260: aload         12
     262: athrow
     263: iload         4
     265: ifne          329
     268: aload_2
     269: invokevirtual #128                // Method org/xnio/nio/NioTcpServerHandle.freeConnection:()V
     272: goto          329
     275: astore        5
     277: aload         5
     279: athrow
     280: astore        5
     282: aload_2
     283: invokevirtual #131                // Method org/xnio/nio/NioTcpServerHandle.startBackOff:()V
     286: getstatic     #13                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
     289: aload         5
     291: aload_2
     292: invokevirtual #132                // Method org/xnio/nio/NioTcpServerHandle.getBackOffTime:()I
     295: invokeinterface #133,  3          // InterfaceMethod org/xnio/nio/Log.acceptFailed:(Ljava/io/IOException;I)V
     300: aconst_null
     301: astore        6
     303: iload         4
     305: ifne          312
     308: aload_2
     309: invokevirtual #128                // Method org/xnio/nio/NioTcpServerHandle.freeConnection:()V
     312: aload         6
     314: areturn
     315: astore        13
     317: iload         4
     319: ifne          326
     322: aload_2
     323: invokevirtual #128                // Method org/xnio/nio/NioTcpServerHandle.freeConnection:()V
     326: aload         13
     328: athrow
     329: aconst_null
     330: areturn
    Exception table:
       from    to  target type
          63   228   249   any
         249   251   249   any
          51   237   275   Class java/nio/channels/ClosedChannelException
         249   263   275   Class java/nio/channels/ClosedChannelException
          51   237   280   Class java/io/IOException
         249   263   280   Class java/io/IOException
          51   237   315   any
         249   263   315   any
         275   303   315   any
         315   317   315   any

  public java.lang.String toString();
    Code:
       0: ldc           #134                // String TCP server (NIO) <%s>
       2: iconst_1
       3: anewarray     #135                // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: invokevirtual #136                // Method java/lang/Object.hashCode:()I
      12: invokestatic  #137                // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      15: aastore
      16: invokestatic  #138                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: areturn

  public org.xnio.ChannelListener<? super org.xnio.nio.NioTcpServer> getAcceptListener();
    Code:
       0: aload_0
       1: getfield      #139                // Field acceptListener:Lorg/xnio/ChannelListener;
       4: areturn

  public void setAcceptListener(org.xnio.ChannelListener<? super org.xnio.nio.NioTcpServer>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #139                // Field acceptListener:Lorg/xnio/ChannelListener;
       5: return

  public org.xnio.ChannelListener$Setter<org.xnio.nio.NioTcpServer> getAcceptSetter();
    Code:
       0: new           #140                // class org/xnio/channels/AcceptListenerSettable$Setter
       3: dup
       4: aload_0
       5: invokespecial #141                // Method org/xnio/channels/AcceptListenerSettable$Setter."<init>":(Lorg/xnio/channels/AcceptListenerSettable;)V
       8: areturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #9                  // Field channel:Ljava/nio/channels/ServerSocketChannel;
       4: invokevirtual #142                // Method java/nio/channels/ServerSocketChannel.isOpen:()Z
       7: ireturn

  public java.net.SocketAddress getLocalAddress();
    Code:
       0: aload_0
       1: getfield      #22                 // Field socket:Ljava/net/ServerSocket;
       4: invokevirtual #143                // Method java/net/ServerSocket.getLocalSocketAddress:()Ljava/net/SocketAddress;
       7: areturn

  public <A extends java.net.SocketAddress> A getLocalAddress(java.lang.Class<A>);
    Code:
       0: aload_0
       1: invokevirtual #144                // Method getLocalAddress:()Ljava/net/SocketAddress;
       4: astore_2
       5: aload_1
       6: aload_2
       7: invokevirtual #145                // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      10: ifeq          24
      13: aload_1
      14: aload_2
      15: invokevirtual #146                // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #147                // class java/net/SocketAddress
      21: goto          25
      24: aconst_null
      25: areturn

  public void suspendAccepts();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #148                // Field resumed:Z
       5: aload_0
       6: iconst_0
       7: invokespecial #149                // Method doResume:(I)V
      10: return

  public void resumeAccepts();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #148                // Field resumed:Z
       5: aload_0
       6: bipush        16
       8: invokespecial #149                // Method doResume:(I)V
      11: return

  public boolean isAcceptResumed();
    Code:
       0: aload_0
       1: getfield      #148                // Field resumed:Z
       4: ireturn

  private void doResume(int);
    Code:
       0: iload_1
       1: ifne          41
       4: aload_0
       5: getfield      #55                 // Field handles:[Lorg/xnio/nio/NioTcpServerHandle;
       8: astore_2
       9: aload_2
      10: arraylength
      11: istore_3
      12: iconst_0
      13: istore        4
      15: iload         4
      17: iload_3
      18: if_icmpge     38
      21: aload_2
      22: iload         4
      24: aaload
      25: astore        5
      27: aload         5
      29: invokevirtual #151                // Method org/xnio/nio/NioTcpServerHandle.suspend:()V
      32: iinc          4, 1
      35: goto          15
      38: goto          75
      41: aload_0
      42: getfield      #55                 // Field handles:[Lorg/xnio/nio/NioTcpServerHandle;
      45: astore_2
      46: aload_2
      47: arraylength
      48: istore_3
      49: iconst_0
      50: istore        4
      52: iload         4
      54: iload_3
      55: if_icmpge     75
      58: aload_2
      59: iload         4
      61: aaload
      62: astore        5
      64: aload         5
      66: invokevirtual #152                // Method org/xnio/nio/NioTcpServerHandle.resume:()V
      69: iinc          4, 1
      72: goto          52
      75: return

  public void wakeupAccepts();
    Code:
       0: getstatic     #153                // Field org/xnio/nio/Log.tcpServerLog:Lorg/xnio/nio/Log;
       3: getstatic     #154                // Field FQCN:Ljava/lang/String;
       6: getstatic     #155                // Field org/jboss/logging/Logger$Level.TRACE:Lorg/jboss/logging/Logger$Level;
       9: aconst_null
      10: ldc           #156                // String Wake up accepts on %s
      12: aload_0
      13: invokeinterface #157,  6          // InterfaceMethod org/xnio/nio/Log.logf:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      18: aload_0
      19: invokevirtual #158                // Method resumeAccepts:()V
      22: aload_0
      23: getfield      #55                 // Field handles:[Lorg/xnio/nio/NioTcpServerHandle;
      26: astore_1
      27: invokestatic  #159                // Method org/xnio/IoUtils.getThreadLocalRandom:()Ljava/util/Random;
      30: aload_1
      31: arraylength
      32: invokevirtual #160                // Method java/util/Random.nextInt:(I)I
      35: istore_2
      36: aload_1
      37: iload_2
      38: aaload
      39: bipush        16
      41: invokevirtual #161                // Method org/xnio/nio/NioTcpServerHandle.wakeup:(I)V
      44: return

  public void awaitAcceptable() throws java.io.IOException;
    Code:
       0: getstatic     #13                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
       3: ldc           #162                // String awaitAcceptable
       5: invokeinterface #163,  2          // InterfaceMethod org/xnio/nio/Log.unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
      10: athrow

  public void awaitAcceptable(long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: getstatic     #13                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
       3: ldc           #162                // String awaitAcceptable
       5: invokeinterface #163,  2          // InterfaceMethod org/xnio/nio/Log.unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
      10: athrow

  public org.xnio.XnioExecutor getAcceptThread();
    Code:
       0: aload_0
       1: invokevirtual #164                // Method getIoThread:()Lorg/xnio/XnioIoThread;
       4: areturn

  org.xnio.nio.NioTcpServerHandle getHandle(int);
    Code:
       0: aload_0
       1: getfield      #55                 // Field handles:[Lorg/xnio/nio/NioTcpServerHandle;
       4: iload_1
       5: aaload
       6: areturn

  int getTokenConnectionCount();
    Code:
       0: aload_0
       1: getfield      #20                 // Field tokenConnectionCount:I
       4: ireturn

  public org.xnio.channels.ConnectedChannel accept() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #165                // Method accept:()Lorg/xnio/nio/NioSocketStreamConnection;
       4: areturn

  public org.xnio.channels.CloseableChannel accept() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #165                // Method accept:()Lorg/xnio/nio/NioSocketStreamConnection;
       4: areturn

  static long access$000(org.xnio.nio.NioTcpServer);
    Code:
       0: aload_0
       1: getfield      #4                  // Field connectionStatus:J
       4: lreturn

  static int access$100(long);
    Code:
       0: lload_0
       1: invokestatic  #3                  // Method getHighWater:(J)I
       4: ireturn

  static int access$200(long);
    Code:
       0: lload_0
       1: invokestatic  #2                  // Method getLowWater:(J)I
       4: ireturn

  static {};
    Code:
       0: ldc           #1                  // class org/xnio/nio/NioTcpServer
       2: invokevirtual #166                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #100                // Field $assertionsDisabled:Z
      16: ldc           #1                  // class org/xnio/nio/NioTcpServer
      18: invokevirtual #167                // Method java/lang/Class.getName:()Ljava/lang/String;
      21: putstatic     #154                // Field FQCN:Ljava/lang/String;
      24: invokestatic  #168                // Method org/xnio/Option.setBuilder:()Lorg/xnio/Option$SetBuilder;
      27: getstatic     #76                 // Field org/xnio/Options.REUSE_ADDRESSES:Lorg/xnio/Option;
      30: invokevirtual #169                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      33: getstatic     #80                 // Field org/xnio/Options.RECEIVE_BUFFER:Lorg/xnio/Option;
      36: invokevirtual #169                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      39: getstatic     #23                 // Field org/xnio/Options.SEND_BUFFER:Lorg/xnio/Option;
      42: invokevirtual #169                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      45: getstatic     #31                 // Field org/xnio/Options.KEEP_ALIVE:Lorg/xnio/Option;
      48: invokevirtual #169                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      51: getstatic     #35                 // Field org/xnio/Options.TCP_OOB_INLINE:Lorg/xnio/Option;
      54: invokevirtual #169                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      57: getstatic     #37                 // Field org/xnio/Options.TCP_NODELAY:Lorg/xnio/Option;
      60: invokevirtual #169                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      63: getstatic     #43                 // Field org/xnio/Options.CONNECTION_HIGH_WATER:Lorg/xnio/Option;
      66: invokevirtual #169                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      69: getstatic     #44                 // Field org/xnio/Options.CONNECTION_LOW_WATER:Lorg/xnio/Option;
      72: invokevirtual #169                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      75: getstatic     #39                 // Field org/xnio/Options.READ_TIMEOUT:Lorg/xnio/Option;
      78: invokevirtual #169                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      81: getstatic     #41                 // Field org/xnio/Options.WRITE_TIMEOUT:Lorg/xnio/Option;
      84: invokevirtual #169                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      87: invokevirtual #170                // Method org/xnio/Option$SetBuilder.create:()Ljava/util/Set;
      90: putstatic     #74                 // Field options:Ljava/util/Set;
      93: ldc           #1                  // class org/xnio/nio/NioTcpServer
      95: ldc           #171                // String keepAlive
      97: invokestatic  #172                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     100: putstatic     #32                 // Field keepAliveUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     103: ldc           #1                  // class org/xnio/nio/NioTcpServer
     105: ldc           #173                // String oobInline
     107: invokestatic  #172                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     110: putstatic     #36                 // Field oobInlineUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     113: ldc           #1                  // class org/xnio/nio/NioTcpServer
     115: ldc           #174                // String tcpNoDelay
     117: invokestatic  #172                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     120: putstatic     #38                 // Field tcpNoDelayUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     123: ldc           #1                  // class org/xnio/nio/NioTcpServer
     125: ldc           #175                // String sendBuffer
     127: invokestatic  #172                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     130: putstatic     #29                 // Field sendBufferUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     133: ldc           #1                  // class org/xnio/nio/NioTcpServer
     135: ldc           #176                // String readTimeout
     137: invokestatic  #172                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     140: putstatic     #40                 // Field readTimeoutUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     143: ldc           #1                  // class org/xnio/nio/NioTcpServer
     145: ldc           #177                // String writeTimeout
     147: invokestatic  #172                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     150: putstatic     #42                 // Field writeTimeoutUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     153: ldc           #1                  // class org/xnio/nio/NioTcpServer
     155: ldc           #178                // String connectionStatus
     157: invokestatic  #179                // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
     160: putstatic     #49                 // Field connectionStatusUpdater:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
     163: return
}
