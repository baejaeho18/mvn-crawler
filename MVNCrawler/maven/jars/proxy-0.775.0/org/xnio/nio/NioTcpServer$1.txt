Compiled from "NioTcpServer.java"
class org.xnio.nio.NioTcpServer$1 implements org.xnio.management.XnioServerMXBean {
  final org.xnio.nio.NioXnioWorker val$worker;

  final org.xnio.nio.NioTcpServerHandle[] val$handles;

  final org.xnio.nio.NioTcpServer this$0;

  org.xnio.nio.NioTcpServer$1(org.xnio.nio.NioTcpServer, org.xnio.nio.NioXnioWorker, org.xnio.nio.NioTcpServerHandle[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/xnio/nio/NioTcpServer;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$worker:Lorg/xnio/nio/NioXnioWorker;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$handles:[Lorg/xnio/nio/NioTcpServerHandle;
      15: aload_0
      16: invokespecial #4                  // Method java/lang/Object."<init>":()V
      19: return

  public java.lang.String getProviderName();
    Code:
       0: ldc           #5                  // String nio
       2: areturn

  public java.lang.String getWorkerName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$worker:Lorg/xnio/nio/NioXnioWorker;
       4: invokevirtual #6                  // Method org/xnio/nio/NioXnioWorker.getName:()Ljava/lang/String;
       7: areturn

  public java.lang.String getBindAddress();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/xnio/nio/NioTcpServer;
       4: invokevirtual #7                  // Method org/xnio/nio/NioTcpServer.getLocalAddress:()Ljava/net/SocketAddress;
       7: invokestatic  #8                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      10: areturn

  public int getConnectionCount();
    Code:
       0: new           #9                  // class java/util/concurrent/atomic/AtomicInteger
       3: dup
       4: invokespecial #10                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
       7: astore_1
       8: new           #11                 // class java/util/concurrent/CountDownLatch
      11: dup
      12: aload_0
      13: getfield      #3                  // Field val$handles:[Lorg/xnio/nio/NioTcpServerHandle;
      16: arraylength
      17: invokespecial #12                 // Method java/util/concurrent/CountDownLatch."<init>":(I)V
      20: astore_2
      21: aload_0
      22: getfield      #3                  // Field val$handles:[Lorg/xnio/nio/NioTcpServerHandle;
      25: astore_3
      26: aload_3
      27: arraylength
      28: istore        4
      30: iconst_0
      31: istore        5
      33: iload         5
      35: iload         4
      37: if_icmpge     69
      40: aload_3
      41: iload         5
      43: aaload
      44: astore        6
      46: aload         6
      48: invokevirtual #13                 // Method org/xnio/nio/NioTcpServerHandle.getWorkerThread:()Lorg/xnio/nio/WorkerThread;
      51: aload_1
      52: aload         6
      54: aload_2
      55: invokedynamic #14,  0             // InvokeDynamic #0:run:(Ljava/util/concurrent/atomic/AtomicInteger;Lorg/xnio/nio/NioTcpServerHandle;Ljava/util/concurrent/CountDownLatch;)Ljava/lang/Runnable;
      60: invokevirtual #15                 // Method org/xnio/nio/WorkerThread.execute:(Ljava/lang/Runnable;)V
      63: iinc          5, 1
      66: goto          33
      69: aload_2
      70: invokevirtual #16                 // Method java/util/concurrent/CountDownLatch.await:()V
      73: goto          83
      76: astore_3
      77: invokestatic  #18                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      80: invokevirtual #19                 // Method java/lang/Thread.interrupt:()V
      83: aload_1
      84: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      87: ireturn
    Exception table:
       from    to  target type
          69    73    76   Class java/lang/InterruptedException

  public int getConnectionLimitHighWater();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/xnio/nio/NioTcpServer;
       4: invokestatic  #21                 // Method org/xnio/nio/NioTcpServer.access$000:(Lorg/xnio/nio/NioTcpServer;)J
       7: invokestatic  #22                 // Method org/xnio/nio/NioTcpServer.access$100:(J)I
      10: ireturn

  public int getConnectionLimitLowWater();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/xnio/nio/NioTcpServer;
       4: invokestatic  #21                 // Method org/xnio/nio/NioTcpServer.access$000:(Lorg/xnio/nio/NioTcpServer;)J
       7: invokestatic  #23                 // Method org/xnio/nio/NioTcpServer.access$200:(J)I
      10: ireturn

  private static void lambda$getConnectionCount$0(java.util.concurrent.atomic.AtomicInteger, org.xnio.nio.NioTcpServerHandle, java.util.concurrent.CountDownLatch);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #24                 // Method org/xnio/nio/NioTcpServerHandle.getConnectionCount:()I
       5: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicInteger.getAndAdd:(I)I
       8: pop
       9: aload_2
      10: invokevirtual #26                 // Method java/util/concurrent/CountDownLatch.countDown:()V
      13: return
}
