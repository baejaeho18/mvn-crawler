Compiled from "NioPipeSourceConduit.java"
final class org.xnio.nio.NioPipeSourceConduit extends org.xnio.nio.NioHandle implements org.xnio.conduits.StreamSourceConduit {
  private final java.nio.channels.Pipe$SourceChannel sourceChannel;

  private final org.xnio.nio.NioPipeStreamConnection connection;

  private org.xnio.conduits.ReadReadyHandler readReadyHandler;

  private volatile int readTimeout;

  private long lastRead;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.xnio.nio.NioPipeSourceConduit> readTimeoutUpdater;

  org.xnio.nio.NioPipeSourceConduit(org.xnio.nio.WorkerThread, java.nio.channels.SelectionKey, org.xnio.nio.NioPipeStreamConnection);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/xnio/nio/NioHandle."<init>":(Lorg/xnio/nio/WorkerThread;Ljava/nio/channels/SelectionKey;)V
       6: aload_0
       7: aload_3
       8: putfield      #2                  // Field connection:Lorg/xnio/nio/NioPipeStreamConnection;
      11: aload_0
      12: aload_2
      13: invokevirtual #3                  // Method java/nio/channels/SelectionKey.channel:()Ljava/nio/channels/SelectableChannel;
      16: checkcast     #4                  // class java/nio/channels/Pipe$SourceChannel
      19: putfield      #5                  // Field sourceChannel:Ljava/nio/channels/Pipe$SourceChannel;
      22: return

  void handleReady(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field readReadyHandler:Lorg/xnio/conduits/ReadReadyHandler;
       4: invokeinterface #7,  1            // InterfaceMethod org/xnio/conduits/ReadReadyHandler.readReady:()V
       9: goto          13
      12: astore_2
      13: return
    Exception table:
       from    to  target type
           0     9    12   Class java/nio/channels/CancelledKeyException

  public org.xnio.XnioWorker getWorker();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method getWorkerThread:()Lorg/xnio/nio/WorkerThread;
       4: invokevirtual #10                 // Method org/xnio/nio/WorkerThread.getWorker:()Lorg/xnio/nio/NioXnioWorker;
       7: areturn

  void forceTermination();
    Code:
       0: aload_0
       1: getfield      #6                  // Field readReadyHandler:Lorg/xnio/conduits/ReadReadyHandler;
       4: astore_1
       5: aload_1
       6: ifnull        15
       9: aload_1
      10: invokeinterface #11,  1           // InterfaceMethod org/xnio/conduits/ReadReadyHandler.forceTermination:()V
      15: return

  void terminated();
    Code:
       0: aload_0
       1: getfield      #6                  // Field readReadyHandler:Lorg/xnio/conduits/ReadReadyHandler;
       4: astore_1
       5: aload_1
       6: ifnull        15
       9: aload_1
      10: invokeinterface #12,  1           // InterfaceMethod org/xnio/conduits/ReadReadyHandler.terminated:()V
      15: return

  int getAndSetReadTimeout(int);
    Code:
       0: getstatic     #13                 // Field readTimeoutUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: iload_1
       5: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndSet:(Ljava/lang/Object;I)I
       8: ireturn

  int getReadTimeout();
    Code:
       0: aload_0
       1: getfield      #15                 // Field readTimeout:I
       4: ireturn

  private void checkReadTimeout(boolean) throws org.xnio.channels.ReadTimeoutException;
    Code:
       0: aload_0
       1: getfield      #15                 // Field readTimeout:I
       4: istore_2
       5: iload_2
       6: ifle          58
       9: iload_1
      10: ifeq          23
      13: aload_0
      14: invokestatic  #16                 // Method java/lang/System.nanoTime:()J
      17: putfield      #17                 // Field lastRead:J
      20: goto          58
      23: aload_0
      24: getfield      #17                 // Field lastRead:J
      27: lstore_3
      28: lload_3
      29: lconst_0
      30: lcmp
      31: ifle          58
      34: invokestatic  #16                 // Method java/lang/System.nanoTime:()J
      37: lload_3
      38: lsub
      39: ldc2_w        #18                 // long 1000000l
      42: ldiv
      43: iload_2
      44: i2l
      45: lcmp
      46: ifle          58
      49: getstatic     #20                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
      52: invokeinterface #21,  1           // InterfaceMethod org/xnio/nio/Log.readTimeout:()Lorg/xnio/channels/ReadTimeoutException;
      57: athrow
      58: return

  public long transferTo(long, long, java.nio.channels.FileChannel) throws java.io.IOException;
    Code:
       0: aload         5
       2: aload_0
       3: getfield      #5                  // Field sourceChannel:Ljava/nio/channels/Pipe$SourceChannel;
       6: lload_1
       7: lload_3
       8: invokevirtual #22                 // Method java/nio/channels/FileChannel.transferFrom:(Ljava/nio/channels/ReadableByteChannel;JJ)J
      11: lstore        6
      13: aload_0
      14: lload         6
      16: lconst_0
      17: lcmp
      18: ifle          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: invokespecial #23                 // Method checkReadTimeout:(Z)V
      29: lload         6
      31: lreturn

  public long transferTo(long, java.nio.ByteBuffer, org.xnio.channels.StreamSinkChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: aload         4
       5: invokestatic  #24                 // Method org/xnio/conduits/Conduits.transfer:(Lorg/xnio/conduits/StreamSourceConduit;JLjava/nio/ByteBuffer;Ljava/nio/channels/WritableByteChannel;)J
       8: lreturn

  public int read(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field sourceChannel:Ljava/nio/channels/Pipe$SourceChannel;
       4: aload_1
       5: invokevirtual #25                 // Method java/nio/channels/Pipe$SourceChannel.read:(Ljava/nio/ByteBuffer;)I
       8: istore_2
       9: goto          15
      12: astore_3
      13: iconst_m1
      14: ireturn
      15: iload_2
      16: iconst_m1
      17: if_icmpeq     33
      20: aload_0
      21: iload_2
      22: ifle          29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: invokespecial #23                 // Method checkReadTimeout:(Z)V
      33: iload_2
      34: ireturn
    Exception table:
       from    to  target type
           0     9    12   Class java/nio/channels/ClosedChannelException

  public long read(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: iconst_1
       2: if_icmpne     14
       5: aload_0
       6: aload_1
       7: iload_2
       8: aaload
       9: invokevirtual #27                 // Method read:(Ljava/nio/ByteBuffer;)I
      12: i2l
      13: lreturn
      14: aload_0
      15: getfield      #5                  // Field sourceChannel:Ljava/nio/channels/Pipe$SourceChannel;
      18: aload_1
      19: iload_2
      20: iload_3
      21: invokevirtual #28                 // Method java/nio/channels/Pipe$SourceChannel.read:([Ljava/nio/ByteBuffer;II)J
      24: lstore        4
      26: goto          35
      29: astore        6
      31: ldc2_w        #29                 // long -1l
      34: lreturn
      35: lload         4
      37: ldc2_w        #29                 // long -1l
      40: lcmp
      41: ifeq          60
      44: aload_0
      45: lload         4
      47: lconst_0
      48: lcmp
      49: ifle          56
      52: iconst_1
      53: goto          57
      56: iconst_0
      57: invokespecial #23                 // Method checkReadTimeout:(Z)V
      60: lload         4
      62: lreturn
    Exception table:
       from    to  target type
          14    26    29   Class java/nio/channels/ClosedChannelException

  public void terminateReads() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field connection:Lorg/xnio/nio/NioPipeStreamConnection;
       4: invokevirtual #31                 // Method org/xnio/nio/NioPipeStreamConnection.readClosed:()Z
       7: ifeq          39
      10: aload_0
      11: getfield      #5                  // Field sourceChannel:Ljava/nio/channels/Pipe$SourceChannel;
      14: invokevirtual #32                 // Method java/nio/channels/Pipe$SourceChannel.close:()V
      17: aload_0
      18: invokevirtual #33                 // Method readTerminated:()V
      21: goto          39
      24: astore_1
      25: aload_0
      26: invokevirtual #33                 // Method readTerminated:()V
      29: goto          39
      32: astore_2
      33: aload_0
      34: invokevirtual #33                 // Method readTerminated:()V
      37: aload_2
      38: athrow
      39: return
    Exception table:
       from    to  target type
          10    17    24   Class java/nio/channels/ClosedChannelException
          10    17    32   any

  void readTerminated();
    Code:
       0: aload_0
       1: getfield      #6                  // Field readReadyHandler:Lorg/xnio/conduits/ReadReadyHandler;
       4: astore_1
       5: aload_1
       6: ifnull        19
       9: aload_1
      10: invokeinterface #12,  1           // InterfaceMethod org/xnio/conduits/ReadReadyHandler.terminated:()V
      15: goto          19
      18: astore_2
      19: return
    Exception table:
       from    to  target type
           9    15    18   Class java/lang/Throwable

  public boolean isReadShutdown();
    Code:
       0: aload_0
       1: getfield      #2                  // Field connection:Lorg/xnio/nio/NioPipeStreamConnection;
       4: invokevirtual #35                 // Method org/xnio/nio/NioPipeStreamConnection.isReadShutdown:()Z
       7: ireturn

  public void resumeReads();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #37                 // Method resume:(I)V
       5: return

  public void suspendReads();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #38                 // Method suspend:(I)V
       5: return

  public void wakeupReads();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #39                 // Method wakeup:(I)V
       5: return

  public boolean isReadResumed();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #40                 // Method isResumed:(I)Z
       5: ireturn

  public void awaitReadable() throws java.io.IOException;
    Code:
       0: invokestatic  #41                 // Method org/xnio/Xnio.checkBlockingAllowed:()V
       3: aload_0
       4: invokevirtual #42                 // Method getWorker:()Lorg/xnio/XnioWorker;
       7: invokevirtual #43                 // Method org/xnio/XnioWorker.getXnio:()Lorg/xnio/Xnio;
      10: checkcast     #44                 // class org/xnio/nio/NioXnio
      13: aload_0
      14: getfield      #5                  // Field sourceChannel:Ljava/nio/channels/Pipe$SourceChannel;
      17: iconst_1
      18: invokestatic  #45                 // Method org/xnio/nio/SelectorUtils.await:(Lorg/xnio/nio/NioXnio;Ljava/nio/channels/SelectableChannel;I)V
      21: return

  public void awaitReadable(long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: invokestatic  #41                 // Method org/xnio/Xnio.checkBlockingAllowed:()V
       3: aload_0
       4: invokevirtual #42                 // Method getWorker:()Lorg/xnio/XnioWorker;
       7: invokevirtual #43                 // Method org/xnio/XnioWorker.getXnio:()Lorg/xnio/Xnio;
      10: checkcast     #44                 // class org/xnio/nio/NioXnio
      13: aload_0
      14: getfield      #5                  // Field sourceChannel:Ljava/nio/channels/Pipe$SourceChannel;
      17: iconst_1
      18: lload_1
      19: aload_3
      20: invokestatic  #46                 // Method org/xnio/nio/SelectorUtils.await:(Lorg/xnio/nio/NioXnio;Ljava/nio/channels/SelectableChannel;IJLjava/util/concurrent/TimeUnit;)V
      23: return

  public org.xnio.XnioIoThread getReadThread();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method getWorkerThread:()Lorg/xnio/nio/WorkerThread;
       4: areturn

  public void setReadReadyHandler(org.xnio.conduits.ReadReadyHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field readReadyHandler:Lorg/xnio/conduits/ReadReadyHandler;
       5: return

  static {};
    Code:
       0: ldc           #47                 // class org/xnio/nio/NioPipeSourceConduit
       2: ldc           #48                 // String readTimeout
       4: invokestatic  #49                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       7: putstatic     #13                 // Field readTimeoutUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: return
}
