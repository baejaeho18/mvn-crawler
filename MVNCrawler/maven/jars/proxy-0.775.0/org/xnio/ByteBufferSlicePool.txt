Compiled from "ByteBufferSlicePool.java"
public final class org.xnio.ByteBufferSlicePool implements org.xnio.Pool<java.nio.ByteBuffer> {
  private static final int LOCAL_LENGTH;

  private static final java.util.Queue<java.nio.ByteBuffer> FREE_DIRECT_BUFFERS;

  private final java.util.Set<org.xnio.ByteBufferSlicePool$Ref> refSet;

  private final java.util.Queue<org.xnio.ByteBufferSlicePool$Slice> sliceQueue;

  private final org.xnio.BufferAllocator<java.nio.ByteBuffer> allocator;

  private final int bufferSize;

  private final int buffersPerRegion;

  private final int threadLocalQueueSize;

  private final java.util.List<java.nio.ByteBuffer> directBuffers;

  private final java.lang.ThreadLocal<org.xnio.ByteBufferSlicePool$ThreadLocalCache> localQueueHolder;

  public org.xnio.ByteBufferSlicePool(org.xnio.BufferAllocator<java.nio.ByteBuffer>, int, int, int);
    Code:
       0: aload_0
       1: invokespecial #53                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #55                 // class java/util/HashSet
       8: dup
       9: invokespecial #56                 // Method java/util/HashSet."<init>":()V
      12: invokestatic  #62                 // Method java/util/Collections.synchronizedSet:(Ljava/util/Set;)Ljava/util/Set;
      15: putfield      #64                 // Field refSet:Ljava/util/Set;
      18: aload_0
      19: new           #12                 // class org/xnio/ByteBufferSlicePool$ThreadLocalCacheWrapper
      22: dup
      23: aload_0
      24: invokespecial #67                 // Method org/xnio/ByteBufferSlicePool$ThreadLocalCacheWrapper."<init>":(Lorg/xnio/ByteBufferSlicePool;)V
      27: putfield      #69                 // Field localQueueHolder:Ljava/lang/ThreadLocal;
      30: iload_2
      31: ifgt          45
      34: getstatic     #75                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      37: ldc           #76                 // String bufferSize
      39: invokeinterface #80,  2           // InterfaceMethod org/xnio/_private/Messages.parameterOutOfRange:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      44: athrow
      45: iload_3
      46: iload_2
      47: if_icmpge     61
      50: getstatic     #75                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      53: ldc           #76                 // String bufferSize
      55: invokeinterface #80,  2           // InterfaceMethod org/xnio/_private/Messages.parameterOutOfRange:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      60: athrow
      61: aload_0
      62: iload_3
      63: iload_2
      64: idiv
      65: putfield      #84                 // Field buffersPerRegion:I
      68: aload_0
      69: iload_2
      70: putfield      #86                 // Field bufferSize:I
      73: aload_0
      74: aload_1
      75: putfield      #88                 // Field allocator:Lorg/xnio/BufferAllocator;
      78: aload_0
      79: new           #90                 // class java/util/concurrent/ConcurrentLinkedQueue
      82: dup
      83: invokespecial #91                 // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      86: putfield      #93                 // Field sliceQueue:Ljava/util/Queue;
      89: aload_0
      90: iload         4
      92: putfield      #95                 // Field threadLocalQueueSize:I
      95: aload_1
      96: getstatic     #98                 // Field org/xnio/BufferAllocator.DIRECT_BYTE_BUFFER_ALLOCATOR:Lorg/xnio/BufferAllocator;
      99: if_acmpne     119
     102: aload_0
     103: new           #100                // class java/util/ArrayList
     106: dup
     107: invokespecial #101                // Method java/util/ArrayList."<init>":()V
     110: invokestatic  #105                // Method java/util/Collections.synchronizedList:(Ljava/util/List;)Ljava/util/List;
     113: putfield      #107                // Field directBuffers:Ljava/util/List;
     116: goto          124
     119: aload_0
     120: aconst_null
     121: putfield      #107                // Field directBuffers:Ljava/util/List;
     124: return

  public org.xnio.ByteBufferSlicePool(org.xnio.BufferAllocator<java.nio.ByteBuffer>, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: getstatic     #114                // Field LOCAL_LENGTH:I
       7: invokespecial #116                // Method "<init>":(Lorg/xnio/BufferAllocator;III)V
      10: return

  public org.xnio.ByteBufferSlicePool(int, int);
    Code:
       0: aload_0
       1: getstatic     #98                 // Field org/xnio/BufferAllocator.DIRECT_BYTE_BUFFER_ALLOCATOR:Lorg/xnio/BufferAllocator;
       4: iload_1
       5: iload_2
       6: invokespecial #119                // Method "<init>":(Lorg/xnio/BufferAllocator;II)V
       9: return

  public org.xnio.Pooled<java.nio.ByteBuffer> allocate();
    Code:
       0: aload_0
       1: getfield      #95                 // Field threadLocalQueueSize:I
       4: ifle          68
       7: aload_0
       8: getfield      #69                 // Field localQueueHolder:Ljava/lang/ThreadLocal;
      11: invokevirtual #128                // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      14: checkcast     #15                 // class org/xnio/ByteBufferSlicePool$ThreadLocalCache
      17: astore_2
      18: aload_2
      19: getfield      #131                // Field org/xnio/ByteBufferSlicePool$ThreadLocalCache.outstanding:I
      22: aload_0
      23: getfield      #95                 // Field threadLocalQueueSize:I
      26: if_icmpeq     39
      29: aload_2
      30: dup
      31: getfield      #131                // Field org/xnio/ByteBufferSlicePool$ThreadLocalCache.outstanding:I
      34: iconst_1
      35: iadd
      36: putfield      #131                // Field org/xnio/ByteBufferSlicePool$ThreadLocalCache.outstanding:I
      39: aload_2
      40: getfield      #135                // Field org/xnio/ByteBufferSlicePool$ThreadLocalCache.queue:Ljava/util/ArrayDeque;
      43: invokevirtual #140                // Method java/util/ArrayDeque.poll:()Ljava/lang/Object;
      46: checkcast     #21                 // class org/xnio/ByteBufferSlicePool$Slice
      49: astore_1
      50: aload_1
      51: ifnull        68
      54: new           #24                 // class org/xnio/ByteBufferSlicePool$PooledByteBuffer
      57: dup
      58: aload_0
      59: aload_1
      60: aload_1
      61: invokevirtual #144                // Method org/xnio/ByteBufferSlicePool$Slice.slice:()Ljava/nio/ByteBuffer;
      64: invokespecial #147                // Method org/xnio/ByteBufferSlicePool$PooledByteBuffer."<init>":(Lorg/xnio/ByteBufferSlicePool;Lorg/xnio/ByteBufferSlicePool$Slice;Ljava/nio/ByteBuffer;)V
      67: areturn
      68: aload_0
      69: getfield      #93                 // Field sliceQueue:Ljava/util/Queue;
      72: astore_2
      73: aload_2
      74: invokeinterface #150,  1          // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      79: checkcast     #21                 // class org/xnio/ByteBufferSlicePool$Slice
      82: astore_1
      83: aload_1
      84: ifnull        101
      87: new           #24                 // class org/xnio/ByteBufferSlicePool$PooledByteBuffer
      90: dup
      91: aload_0
      92: aload_1
      93: aload_1
      94: invokevirtual #144                // Method org/xnio/ByteBufferSlicePool$Slice.slice:()Ljava/nio/ByteBuffer;
      97: invokespecial #147                // Method org/xnio/ByteBufferSlicePool$PooledByteBuffer."<init>":(Lorg/xnio/ByteBufferSlicePool;Lorg/xnio/ByteBufferSlicePool$Slice;Ljava/nio/ByteBuffer;)V
     100: areturn
     101: aload_2
     102: dup
     103: astore_3
     104: monitorenter
     105: aload_2
     106: invokeinterface #150,  1          // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
     111: checkcast     #21                 // class org/xnio/ByteBufferSlicePool$Slice
     114: astore_1
     115: aload_1
     116: ifnull        135
     119: new           #24                 // class org/xnio/ByteBufferSlicePool$PooledByteBuffer
     122: dup
     123: aload_0
     124: aload_1
     125: aload_1
     126: invokevirtual #144                // Method org/xnio/ByteBufferSlicePool$Slice.slice:()Ljava/nio/ByteBuffer;
     129: invokespecial #147                // Method org/xnio/ByteBufferSlicePool$PooledByteBuffer."<init>":(Lorg/xnio/ByteBufferSlicePool;Lorg/xnio/ByteBufferSlicePool$Slice;Ljava/nio/ByteBuffer;)V
     132: aload_3
     133: monitorexit
     134: areturn
     135: aload_0
     136: aload_0
     137: getfield      #84                 // Field buffersPerRegion:I
     140: aload_0
     141: getfield      #86                 // Field bufferSize:I
     144: invokespecial #154                // Method allocateSlices:(II)Lorg/xnio/ByteBufferSlicePool$Slice;
     147: astore        4
     149: new           #24                 // class org/xnio/ByteBufferSlicePool$PooledByteBuffer
     152: dup
     153: aload_0
     154: aload         4
     156: aload         4
     158: invokevirtual #144                // Method org/xnio/ByteBufferSlicePool$Slice.slice:()Ljava/nio/ByteBuffer;
     161: invokespecial #147                // Method org/xnio/ByteBufferSlicePool$PooledByteBuffer."<init>":(Lorg/xnio/ByteBufferSlicePool;Lorg/xnio/ByteBufferSlicePool$Slice;Ljava/nio/ByteBuffer;)V
     164: aload_3
     165: monitorexit
     166: areturn
     167: astore        5
     169: aload_3
     170: monitorexit
     171: aload         5
     173: athrow
    Exception table:
       from    to  target type
         105   134   167   any
         135   166   167   any
         167   171   167   any

  private org.xnio.ByteBufferSlicePool$Slice allocateSlices(int, int);
    Code:
       0: aload_0
       1: getfield      #107                // Field directBuffers:Ljava/util/List;
       4: ifnull        101
       7: getstatic     #162                // Field FREE_DIRECT_BUFFERS:Ljava/util/Queue;
      10: invokeinterface #150,  1          // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      15: checkcast     #164                // class java/nio/ByteBuffer
      18: astore_3
      19: aload_3
      20: ifnull        46
      23: aload_0
      24: aload_3
      25: iload_1
      26: iload_2
      27: invokespecial #168                // Method sliceReusedBuffer:(Ljava/nio/ByteBuffer;II)Lorg/xnio/ByteBufferSlicePool$Slice;
      30: astore        4
      32: aload_0
      33: getfield      #107                // Field directBuffers:Ljava/util/List;
      36: aload_3
      37: invokeinterface #174,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      42: pop
      43: aload         4
      45: areturn
      46: aload_0
      47: getfield      #88                 // Field allocator:Lorg/xnio/BufferAllocator;
      50: iload_1
      51: iload_2
      52: imul
      53: invokeinterface #177,  2          // InterfaceMethod org/xnio/BufferAllocator.allocate:(I)Ljava/nio/Buffer;
      58: checkcast     #164                // class java/nio/ByteBuffer
      61: astore_3
      62: aload_0
      63: aload_3
      64: iload_1
      65: iload_2
      66: invokespecial #180                // Method sliceAllocatedBuffer:(Ljava/nio/ByteBuffer;II)Lorg/xnio/ByteBufferSlicePool$Slice;
      69: astore        4
      71: aload_0
      72: getfield      #107                // Field directBuffers:Ljava/util/List;
      75: aload_3
      76: invokeinterface #174,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      81: pop
      82: aload         4
      84: areturn
      85: astore        5
      87: aload_0
      88: getfield      #107                // Field directBuffers:Ljava/util/List;
      91: aload_3
      92: invokeinterface #174,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      97: pop
      98: aload         5
     100: athrow
     101: aload_0
     102: aload_0
     103: getfield      #88                 // Field allocator:Lorg/xnio/BufferAllocator;
     106: iload_1
     107: iload_2
     108: imul
     109: invokeinterface #177,  2          // InterfaceMethod org/xnio/BufferAllocator.allocate:(I)Ljava/nio/Buffer;
     114: checkcast     #164                // class java/nio/ByteBuffer
     117: iload_1
     118: iload_2
     119: invokespecial #180                // Method sliceAllocatedBuffer:(Ljava/nio/ByteBuffer;II)Lorg/xnio/ByteBufferSlicePool$Slice;
     122: areturn
    Exception table:
       from    to  target type
          19    32    85   any
          46    71    85   any
          85    87    85   any

  private org.xnio.ByteBufferSlicePool$Slice sliceReusedBuffer(java.nio.ByteBuffer, int, int);
    Code:
       0: iload_2
       1: aload_1
       2: invokevirtual #186                // Method java/nio/ByteBuffer.capacity:()I
       5: iload_3
       6: idiv
       7: invokestatic  #192                // Method java/lang/Math.min:(II)I
      10: istore        4
      12: iload_3
      13: istore        5
      15: iconst_1
      16: istore        6
      18: iload         6
      20: iload         4
      22: if_icmpge     59
      25: aload_0
      26: getfield      #93                 // Field sliceQueue:Ljava/util/Queue;
      29: new           #21                 // class org/xnio/ByteBufferSlicePool$Slice
      32: dup
      33: aload_1
      34: iload         5
      36: iload_3
      37: aconst_null
      38: invokespecial #195                // Method org/xnio/ByteBufferSlicePool$Slice."<init>":(Ljava/nio/ByteBuffer;IILorg/xnio/ByteBufferSlicePool$1;)V
      41: invokeinterface #196,  2          // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
      46: pop
      47: iload         5
      49: iload_3
      50: iadd
      51: istore        5
      53: iinc          6, 1
      56: goto          18
      59: iload         4
      61: ifne          71
      64: aload_0
      65: iload_2
      66: iload_3
      67: invokespecial #154                // Method allocateSlices:(II)Lorg/xnio/ByteBufferSlicePool$Slice;
      70: areturn
      71: iload         4
      73: iload_2
      74: if_icmpge     96
      77: aload_0
      78: getfield      #93                 // Field sliceQueue:Ljava/util/Queue;
      81: aload_0
      82: iload_2
      83: iload         4
      85: isub
      86: iload_3
      87: invokespecial #154                // Method allocateSlices:(II)Lorg/xnio/ByteBufferSlicePool$Slice;
      90: invokeinterface #196,  2          // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
      95: pop
      96: new           #21                 // class org/xnio/ByteBufferSlicePool$Slice
      99: dup
     100: aload_1
     101: iconst_0
     102: iload_3
     103: aconst_null
     104: invokespecial #195                // Method org/xnio/ByteBufferSlicePool$Slice."<init>":(Ljava/nio/ByteBuffer;IILorg/xnio/ByteBufferSlicePool$1;)V
     107: areturn

  private org.xnio.ByteBufferSlicePool$Slice sliceAllocatedBuffer(java.nio.ByteBuffer, int, int);
    Code:
       0: iload_3
       1: istore        4
       3: iconst_1
       4: istore        5
       6: iload         5
       8: iload_2
       9: if_icmpge     46
      12: aload_0
      13: getfield      #93                 // Field sliceQueue:Ljava/util/Queue;
      16: new           #21                 // class org/xnio/ByteBufferSlicePool$Slice
      19: dup
      20: aload_1
      21: iload         4
      23: iload_3
      24: aconst_null
      25: invokespecial #195                // Method org/xnio/ByteBufferSlicePool$Slice."<init>":(Ljava/nio/ByteBuffer;IILorg/xnio/ByteBufferSlicePool$1;)V
      28: invokeinterface #196,  2          // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
      33: pop
      34: iload         4
      36: iload_3
      37: iadd
      38: istore        4
      40: iinc          5, 1
      43: goto          6
      46: new           #21                 // class org/xnio/ByteBufferSlicePool$Slice
      49: dup
      50: aload_1
      51: iconst_0
      52: iload_3
      53: aconst_null
      54: invokespecial #195                // Method org/xnio/ByteBufferSlicePool$Slice."<init>":(Ljava/nio/ByteBuffer;IILorg/xnio/ByteBufferSlicePool$1;)V
      57: areturn

  public void clean();
    Code:
       0: aload_0
       1: getfield      #69                 // Field localQueueHolder:Ljava/lang/ThreadLocal;
       4: invokevirtual #128                // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       7: checkcast     #15                 // class org/xnio/ByteBufferSlicePool$ThreadLocalCache
      10: astore_1
      11: aload_1
      12: getfield      #135                // Field org/xnio/ByteBufferSlicePool$ThreadLocalCache.queue:Ljava/util/ArrayDeque;
      15: invokevirtual #204                // Method java/util/ArrayDeque.isEmpty:()Z
      18: ifne          28
      21: aload_1
      22: getfield      #135                // Field org/xnio/ByteBufferSlicePool$ThreadLocalCache.queue:Ljava/util/ArrayDeque;
      25: invokevirtual #207                // Method java/util/ArrayDeque.clear:()V
      28: aload_0
      29: getfield      #93                 // Field sliceQueue:Ljava/util/Queue;
      32: invokeinterface #208,  1          // InterfaceMethod java/util/Queue.isEmpty:()Z
      37: ifne          49
      40: aload_0
      41: getfield      #93                 // Field sliceQueue:Ljava/util/Queue;
      44: invokeinterface #209,  1          // InterfaceMethod java/util/Queue.clear:()V
      49: aload_0
      50: getfield      #107                // Field directBuffers:Ljava/util/List;
      53: ifnull        69
      56: getstatic     #162                // Field FREE_DIRECT_BUFFERS:Ljava/util/Queue;
      59: aload_0
      60: getfield      #107                // Field directBuffers:Ljava/util/List;
      63: invokeinterface #213,  2          // InterfaceMethod java/util/Queue.addAll:(Ljava/util/Collection;)Z
      68: pop
      69: return

  public int getBufferSize();
    Code:
       0: aload_0
       1: getfield      #86                 // Field bufferSize:I
       4: ireturn

  private org.xnio.ByteBufferSlicePool$ThreadLocalCache createThreadLocalCache();
    Code:
       0: new           #15                 // class org/xnio/ByteBufferSlicePool$ThreadLocalCache
       3: dup
       4: aload_0
       5: invokespecial #217                // Method org/xnio/ByteBufferSlicePool$ThreadLocalCache."<init>":(Lorg/xnio/ByteBufferSlicePool;)V
       8: areturn

  private void freeThreadLocalCache(org.xnio.ByteBufferSlicePool$ThreadLocalCache);
    Code:
       0: aload_1
       1: getfield      #135                // Field org/xnio/ByteBufferSlicePool$ThreadLocalCache.queue:Ljava/util/ArrayDeque;
       4: astore_2
       5: aload_2
       6: invokevirtual #140                // Method java/util/ArrayDeque.poll:()Ljava/lang/Object;
       9: checkcast     #21                 // class org/xnio/ByteBufferSlicePool$Slice
      12: astore_3
      13: aload_3
      14: ifnull        33
      17: aload_0
      18: aload_3
      19: invokespecial #223                // Method doFree:(Lorg/xnio/ByteBufferSlicePool$Slice;)V
      22: aload_2
      23: invokevirtual #140                // Method java/util/ArrayDeque.poll:()Ljava/lang/Object;
      26: checkcast     #21                 // class org/xnio/ByteBufferSlicePool$Slice
      29: astore_3
      30: goto          13
      33: return

  private void doFree(org.xnio.ByteBufferSlicePool$Slice);
    Code:
       0: aload_0
       1: getfield      #95                 // Field threadLocalQueueSize:I
       4: ifle          85
       7: aload_0
       8: getfield      #69                 // Field localQueueHolder:Ljava/lang/ThreadLocal;
      11: invokevirtual #128                // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      14: checkcast     #15                 // class org/xnio/ByteBufferSlicePool$ThreadLocalCache
      17: astore_2
      18: iconst_0
      19: istore_3
      20: aload_2
      21: getfield      #131                // Field org/xnio/ByteBufferSlicePool$ThreadLocalCache.outstanding:I
      24: ifle          39
      27: aload_2
      28: dup
      29: getfield      #131                // Field org/xnio/ByteBufferSlicePool$ThreadLocalCache.outstanding:I
      32: iconst_1
      33: isub
      34: putfield      #131                // Field org/xnio/ByteBufferSlicePool$ThreadLocalCache.outstanding:I
      37: iconst_1
      38: istore_3
      39: aload_2
      40: getfield      #135                // Field org/xnio/ByteBufferSlicePool$ThreadLocalCache.queue:Ljava/util/ArrayDeque;
      43: astore        4
      45: aload         4
      47: invokevirtual #229                // Method java/util/ArrayDeque.size:()I
      50: aload_0
      51: getfield      #95                 // Field threadLocalQueueSize:I
      54: if_icmpeq     61
      57: iload_3
      58: ifne          75
      61: aload_0
      62: getfield      #93                 // Field sliceQueue:Ljava/util/Queue;
      65: aload_1
      66: invokeinterface #196,  2          // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
      71: pop
      72: goto          82
      75: aload         4
      77: aload_1
      78: invokevirtual #230                // Method java/util/ArrayDeque.add:(Ljava/lang/Object;)Z
      81: pop
      82: goto          96
      85: aload_0
      86: getfield      #93                 // Field sliceQueue:Ljava/util/Queue;
      89: aload_1
      90: invokeinterface #196,  2          // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
      95: pop
      96: return

  static java.util.Set access$200(org.xnio.ByteBufferSlicePool);
    Code:
       0: aload_0
       1: getfield      #64                 // Field refSet:Ljava/util/Set;
       4: areturn

  static void access$300(org.xnio.ByteBufferSlicePool, org.xnio.ByteBufferSlicePool$Slice);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #223                // Method doFree:(Lorg/xnio/ByteBufferSlicePool$Slice;)V
       5: return

  static int access$400(org.xnio.ByteBufferSlicePool);
    Code:
       0: aload_0
       1: getfield      #95                 // Field threadLocalQueueSize:I
       4: ireturn

  static org.xnio.ByteBufferSlicePool$ThreadLocalCache access$500(org.xnio.ByteBufferSlicePool);
    Code:
       0: aload_0
       1: invokespecial #245                // Method createThreadLocalCache:()Lorg/xnio/ByteBufferSlicePool$ThreadLocalCache;
       4: areturn

  static void access$600(org.xnio.ByteBufferSlicePool, org.xnio.ByteBufferSlicePool$ThreadLocalCache);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #249                // Method freeThreadLocalCache:(Lorg/xnio/ByteBufferSlicePool$ThreadLocalCache;)V
       5: return

  static {};
    Code:
       0: new           #254                // class org/xnio/ReadPropertyAction
       3: dup
       4: ldc_w         #256                // String xnio.bufferpool.threadlocal.size
       7: ldc_w         #258                // String 12
      10: invokespecial #261                // Method org/xnio/ReadPropertyAction."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      13: invokestatic  #267                // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      16: checkcast     #269                // class java/lang/String
      19: astore_0
      20: aload_0
      21: invokestatic  #275                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      24: istore_1
      25: goto          32
      28: astore_2
      29: bipush        12
      31: istore_1
      32: iload_1
      33: putstatic     #114                // Field LOCAL_LENGTH:I
      36: new           #90                 // class java/util/concurrent/ConcurrentLinkedQueue
      39: dup
      40: invokespecial #91                 // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      43: putstatic     #162                // Field FREE_DIRECT_BUFFERS:Ljava/util/Queue;
      46: return
    Exception table:
       from    to  target type
          20    25    28   Class java/lang/NumberFormatException
}
