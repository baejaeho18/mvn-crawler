Compiled from "Xnio.java"
public abstract class org.xnio.Xnio {
  static final java.net.InetSocketAddress ANY_INET_ADDRESS;

  static final org.xnio.LocalSocketAddress ANY_LOCAL_ADDRESS;

  private static final java.util.EnumMap<org.xnio.FileAccess, org.xnio.OptionMap> FILE_ACCESS_OPTION_MAPS;

  private static final java.lang.RuntimePermission ALLOW_BLOCKING_SETTING;

  public static final boolean NIO2;

  private final java.lang.String name;

  private static final java.lang.ThreadLocal<java.lang.Boolean> BLOCKING;

  protected org.xnio.Xnio(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #56                 // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     19
       8: getstatic     #62                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      11: ldc           #63                 // String name
      13: invokeinterface #67,  2           // InterfaceMethod org/xnio/_private/Messages.nullParameter:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      18: athrow
      19: aload_0
      20: aload_1
      21: putfield      #71                 // Field name:Ljava/lang/String;
      24: return

  public static boolean allowBlocking(boolean) throws java.lang.SecurityException;
    Code:
       0: invokestatic  #83                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
       3: astore_1
       4: aload_1
       5: ifnull        15
       8: aload_1
       9: getstatic     #85                 // Field ALLOW_BLOCKING_SETTING:Ljava/lang/RuntimePermission;
      12: invokevirtual #91                 // Method java/lang/SecurityManager.checkPermission:(Ljava/security/Permission;)V
      15: getstatic     #93                 // Field BLOCKING:Ljava/lang/ThreadLocal;
      18: astore_2
      19: aload_2
      20: invokevirtual #99                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      23: checkcast     #101                // class java/lang/Boolean
      26: invokevirtual #105                // Method java/lang/Boolean.booleanValue:()Z
      29: istore_3
      30: aload_2
      31: iload_0
      32: invokestatic  #109                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      35: invokevirtual #113                // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      38: iload_3
      39: ireturn
      40: astore        4
      42: aload_2
      43: iload_0
      44: invokestatic  #109                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      47: invokevirtual #113                // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      50: aload         4
      52: athrow
    Exception table:
       from    to  target type
          19    30    40   any
          40    42    40   any

  public static boolean isBlockingAllowed();
    Code:
       0: getstatic     #93                 // Field BLOCKING:Ljava/lang/ThreadLocal;
       3: invokevirtual #99                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #101                // class java/lang/Boolean
       9: invokevirtual #105                // Method java/lang/Boolean.booleanValue:()Z
      12: ireturn

  public static void checkBlockingAllowed() throws java.lang.IllegalStateException;
    Code:
       0: getstatic     #93                 // Field BLOCKING:Ljava/lang/ThreadLocal;
       3: invokevirtual #99                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #101                // class java/lang/Boolean
       9: invokevirtual #105                // Method java/lang/Boolean.booleanValue:()Z
      12: ifne          24
      15: getstatic     #62                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      18: invokeinterface #127,  1          // InterfaceMethod org/xnio/_private/Messages.blockingNotAllowed:()Ljava/lang/IllegalStateException;
      23: athrow
      24: return

  public static org.xnio.Xnio getInstance(java.lang.ClassLoader);
    Code:
       0: aconst_null
       1: new           #22                 // class org/xnio/Xnio$2
       4: dup
       5: aload_0
       6: invokespecial #132                // Method org/xnio/Xnio$2."<init>":(Ljava/lang/ClassLoader;)V
       9: invokestatic  #138                // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      12: checkcast     #140                // class java/util/ServiceLoader
      15: invokestatic  #144                // Method doGetInstance:(Ljava/lang/String;Ljava/util/ServiceLoader;)Lorg/xnio/Xnio;
      18: areturn

  public static org.xnio.Xnio getInstance();
    Code:
       0: aconst_null
       1: new           #20                 // class org/xnio/Xnio$3
       4: dup
       5: invokespecial #148                // Method org/xnio/Xnio$3."<init>":()V
       8: invokestatic  #138                // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      11: checkcast     #140                // class java/util/ServiceLoader
      14: invokestatic  #144                // Method doGetInstance:(Ljava/lang/String;Ljava/util/ServiceLoader;)Lorg/xnio/Xnio;
      17: areturn

  public static org.xnio.Xnio getInstance(java.lang.String, java.lang.ClassLoader);
    Code:
       0: aload_0
       1: new           #18                 // class org/xnio/Xnio$4
       4: dup
       5: aload_1
       6: invokespecial #150                // Method org/xnio/Xnio$4."<init>":(Ljava/lang/ClassLoader;)V
       9: invokestatic  #138                // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      12: checkcast     #140                // class java/util/ServiceLoader
      15: invokestatic  #144                // Method doGetInstance:(Ljava/lang/String;Ljava/util/ServiceLoader;)Lorg/xnio/Xnio;
      18: areturn

  public static org.xnio.Xnio getInstance(java.lang.String);
    Code:
       0: aload_0
       1: new           #16                 // class org/xnio/Xnio$5
       4: dup
       5: invokespecial #153                // Method org/xnio/Xnio$5."<init>":()V
       8: invokestatic  #138                // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      11: checkcast     #140                // class java/util/ServiceLoader
      14: invokestatic  #144                // Method doGetInstance:(Ljava/lang/String;Ljava/util/ServiceLoader;)Lorg/xnio/Xnio;
      17: areturn

  private static synchronized org.xnio.Xnio doGetInstance(java.lang.String, java.util.ServiceLoader<org.xnio.XnioProvider>);
    Code:
       0: aload_1
       1: invokevirtual #160                // Method java/util/ServiceLoader.iterator:()Ljava/util/Iterator;
       4: astore_2
       5: aload_2
       6: invokeinterface #165,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      11: ifne          17
      14: goto          96
      17: aload_2
      18: invokeinterface #168,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #170                // class org/xnio/XnioProvider
      26: astore_3
      27: aload_0
      28: ifnull        44
      31: aload_0
      32: aload_3
      33: invokeinterface #174,  1          // InterfaceMethod org/xnio/XnioProvider.getName:()Ljava/lang/String;
      38: invokevirtual #178                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      41: ifeq          51
      44: aload_3
      45: invokeinterface #180,  1          // InterfaceMethod org/xnio/XnioProvider.getInstance:()Lorg/xnio/Xnio;
      50: areturn
      51: goto          74
      54: astore        4
      56: getstatic     #62                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      59: aload         4
      61: ldc           #182                // String Not loading provider %s
      63: aload_3
      64: invokeinterface #174,  1          // InterfaceMethod org/xnio/XnioProvider.getName:()Ljava/lang/String;
      69: invokeinterface #186,  4          // InterfaceMethod org/xnio/_private/Messages.debugf:(Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      74: goto          5
      77: astore_3
      78: getstatic     #62                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      81: aload_3
      82: ldc           #188                // String Skipping non-loadable provider
      84: iconst_0
      85: anewarray     #4                  // class java/lang/Object
      88: invokeinterface #191,  4          // InterfaceMethod org/xnio/_private/Messages.debugf:(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      93: goto          5
      96: invokestatic  #194                // Method org/xnio/Xnio$OsgiSupport.doGetOsgiService:()Lorg/xnio/Xnio;
      99: astore_3
     100: aload_3
     101: ifnull        106
     104: aload_3
     105: areturn
     106: goto          129
     109: astore_3
     110: goto          129
     113: astore_3
     114: getstatic     #62                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
     117: aload_3
     118: ldc           #196                // String Not using OSGi service
     120: iconst_0
     121: anewarray     #4                  // class java/lang/Object
     124: invokeinterface #191,  4          // InterfaceMethod org/xnio/_private/Messages.debugf:(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
     129: getstatic     #62                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
     132: invokeinterface #200,  1          // InterfaceMethod org/xnio/_private/Messages.noProviderFound:()Ljava/lang/IllegalArgumentException;
     137: athrow
    Exception table:
       from    to  target type
          27    50    54   Class java/lang/Throwable
           5    14    77   Class java/lang/Throwable
          17    50    77   Class java/lang/Throwable
          51    74    77   Class java/lang/Throwable
          96   105   109   Class java/lang/NoClassDefFoundError
          96   105   113   Class java/lang/Throwable

  public org.xnio.ssl.XnioSsl getSslProvider(org.xnio.OptionMap) throws java.security.GeneralSecurityException;
    Code:
       0: new           #216                // class org/xnio/ssl/JsseXnioSsl
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #219                // Method org/xnio/ssl/JsseXnioSsl."<init>":(Lorg/xnio/Xnio;Lorg/xnio/OptionMap;)V
       9: areturn

  public org.xnio.ssl.XnioSsl getSslProvider(javax.net.ssl.KeyManager[], javax.net.ssl.TrustManager[], org.xnio.OptionMap) throws java.security.GeneralSecurityException;
    Code:
       0: new           #216                // class org/xnio/ssl/JsseXnioSsl
       3: dup
       4: aload_0
       5: aload_3
       6: aload_1
       7: aload_2
       8: aconst_null
       9: aload_3
      10: invokestatic  #228                // Method org/xnio/ssl/JsseSslUtils.createSSLContext:([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;Lorg/xnio/OptionMap;)Ljavax/net/ssl/SSLContext;
      13: invokespecial #231                // Method org/xnio/ssl/JsseXnioSsl."<init>":(Lorg/xnio/Xnio;Lorg/xnio/OptionMap;Ljavax/net/ssl/SSLContext;)V
      16: areturn

  public java.nio.channels.FileChannel openFile(java.io.File, org.xnio.OptionMap) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     15
       4: getstatic     #62                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
       7: ldc           #243                // String file
       9: invokeinterface #67,  2           // InterfaceMethod org/xnio/_private/Messages.nullParameter:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      14: athrow
      15: aload_2
      16: ifnonnull     30
      19: getstatic     #62                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      22: ldc           #245                // String options
      24: invokeinterface #67,  2           // InterfaceMethod org/xnio/_private/Messages.nullParameter:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      29: athrow
      30: aload_2
      31: getstatic     #251                // Field org/xnio/Options.FILE_ACCESS:Lorg/xnio/Option;
      34: getstatic     #257                // Field org/xnio/FileAccess.READ_WRITE:Lorg/xnio/FileAccess;
      37: invokevirtual #262                // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Ljava/lang/Object;)Ljava/lang/Object;
      40: checkcast     #253                // class org/xnio/FileAccess
      43: astore_3
      44: aload_2
      45: getstatic     #265                // Field org/xnio/Options.FILE_APPEND:Lorg/xnio/Option;
      48: iconst_0
      49: invokevirtual #268                // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      52: istore        4
      54: aload_2
      55: getstatic     #271                // Field org/xnio/Options.FILE_CREATE:Lorg/xnio/Option;
      58: aload_3
      59: getstatic     #274                // Field org/xnio/FileAccess.READ_ONLY:Lorg/xnio/FileAccess;
      62: if_acmpeq     69
      65: iconst_1
      66: goto          70
      69: iconst_0
      70: invokevirtual #268                // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      73: istore        5
      75: ldc_w         #280                // class java/nio/file/StandardOpenOption
      78: invokestatic  #286                // Method java/util/EnumSet.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;
      81: astore        6
      83: iload         5
      85: ifeq          97
      88: aload         6
      90: getstatic     #290                // Field java/nio/file/StandardOpenOption.CREATE:Ljava/nio/file/StandardOpenOption;
      93: invokevirtual #293                // Method java/util/EnumSet.add:(Ljava/lang/Object;)Z
      96: pop
      97: aload_3
      98: invokevirtual #296                // Method org/xnio/FileAccess.isRead:()Z
     101: ifeq          113
     104: aload         6
     106: getstatic     #299                // Field java/nio/file/StandardOpenOption.READ:Ljava/nio/file/StandardOpenOption;
     109: invokevirtual #293                // Method java/util/EnumSet.add:(Ljava/lang/Object;)Z
     112: pop
     113: aload_3
     114: invokevirtual #302                // Method org/xnio/FileAccess.isWrite:()Z
     117: ifeq          129
     120: aload         6
     122: getstatic     #305                // Field java/nio/file/StandardOpenOption.WRITE:Ljava/nio/file/StandardOpenOption;
     125: invokevirtual #293                // Method java/util/EnumSet.add:(Ljava/lang/Object;)Z
     128: pop
     129: iload         4
     131: ifeq          143
     134: aload         6
     136: getstatic     #308                // Field java/nio/file/StandardOpenOption.APPEND:Ljava/nio/file/StandardOpenOption;
     139: invokevirtual #293                // Method java/util/EnumSet.add:(Ljava/lang/Object;)Z
     142: pop
     143: aload_1
     144: invokevirtual #312                // Method java/io/File.toPath:()Ljava/nio/file/Path;
     147: astore        7
     149: new           #314                // class org/xnio/XnioFileChannel
     152: dup
     153: aload         7
     155: invokeinterface #320,  1          // InterfaceMethod java/nio/file/Path.getFileSystem:()Ljava/nio/file/FileSystem;
     160: invokevirtual #325                // Method java/nio/file/FileSystem.provider:()Ljava/nio/file/spi/FileSystemProvider;
     163: aload         7
     165: aload         6
     167: iconst_0
     168: anewarray     #327                // class java/nio/file/attribute/FileAttribute
     171: invokevirtual #333                // Method java/nio/file/spi/FileSystemProvider.newFileChannel:(Ljava/nio/file/Path;Ljava/util/Set;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/channels/FileChannel;
     174: invokespecial #336                // Method org/xnio/XnioFileChannel."<init>":(Ljava/nio/channels/FileChannel;)V
     177: areturn
     178: astore_3
     179: new           #338                // class java/io/FileNotFoundException
     182: dup
     183: aload_3
     184: invokevirtual #341                // Method java/nio/file/NoSuchFileException.getMessage:()Ljava/lang/String;
     187: invokespecial #343                // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
     190: athrow
    Exception table:
       from    to  target type
          30   177   178   Class java/nio/file/NoSuchFileException

  public java.nio.channels.FileChannel openFile(java.lang.String, org.xnio.OptionMap) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     16
       4: getstatic     #62                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
       7: ldc_w         #357                // String fileName
      10: invokeinterface #67,  2           // InterfaceMethod org/xnio/_private/Messages.nullParameter:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      15: athrow
      16: aload_0
      17: new           #276                // class java/io/File
      20: dup
      21: aload_1
      22: invokespecial #358                // Method java/io/File."<init>":(Ljava/lang/String;)V
      25: aload_2
      26: invokevirtual #360                // Method openFile:(Ljava/io/File;Lorg/xnio/OptionMap;)Ljava/nio/channels/FileChannel;
      29: areturn

  public java.nio.channels.FileChannel openFile(java.io.File, org.xnio.FileAccess) throws java.io.IOException;
    Code:
       0: aload_2
       1: ifnonnull     16
       4: getstatic     #62                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
       7: ldc_w         #363                // String access
      10: invokeinterface #67,  2           // InterfaceMethod org/xnio/_private/Messages.nullParameter:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      15: athrow
      16: aload_0
      17: aload_1
      18: getstatic     #365                // Field FILE_ACCESS_OPTION_MAPS:Ljava/util/EnumMap;
      21: aload_2
      22: invokevirtual #370                // Method java/util/EnumMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #259                // class org/xnio/OptionMap
      28: invokevirtual #360                // Method openFile:(Ljava/io/File;Lorg/xnio/OptionMap;)Ljava/nio/channels/FileChannel;
      31: areturn

  public java.nio.channels.FileChannel openFile(java.lang.String, org.xnio.FileAccess) throws java.io.IOException;
    Code:
       0: aload_2
       1: ifnonnull     16
       4: getstatic     #62                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
       7: ldc_w         #363                // String access
      10: invokeinterface #67,  2           // InterfaceMethod org/xnio/_private/Messages.nullParameter:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      15: athrow
      16: aload_1
      17: ifnonnull     32
      20: getstatic     #62                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      23: ldc_w         #357                // String fileName
      26: invokeinterface #67,  2           // InterfaceMethod org/xnio/_private/Messages.nullParameter:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      31: athrow
      32: aload_0
      33: new           #276                // class java/io/File
      36: dup
      37: aload_1
      38: invokespecial #358                // Method java/io/File."<init>":(Ljava/lang/String;)V
      41: getstatic     #365                // Field FILE_ACCESS_OPTION_MAPS:Ljava/util/EnumMap;
      44: aload_2
      45: invokevirtual #370                // Method java/util/EnumMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      48: checkcast     #259                // class org/xnio/OptionMap
      51: invokevirtual #360                // Method openFile:(Ljava/io/File;Lorg/xnio/OptionMap;)Ljava/nio/channels/FileChannel;
      54: areturn

  protected java.nio.channels.FileChannel unwrapFileChannel(java.nio.channels.FileChannel);
    Code:
       0: aload_1
       1: instanceof    #314                // class org/xnio/XnioFileChannel
       4: ifeq          15
       7: aload_1
       8: checkcast     #314                // class org/xnio/XnioFileChannel
      11: invokevirtual #377                // Method org/xnio/XnioFileChannel.getDelegate:()Ljava/nio/channels/FileChannel;
      14: areturn
      15: aload_1
      16: areturn

  public org.xnio.XnioWorker$Builder createWorkerBuilder();
    Code:
       0: new           #26                 // class org/xnio/XnioWorker$Builder
       3: dup
       4: aload_0
       5: invokespecial #384                // Method org/xnio/XnioWorker$Builder."<init>":(Lorg/xnio/Xnio;)V
       8: areturn

  protected abstract org.xnio.XnioWorker build(org.xnio.XnioWorker$Builder);

  public org.xnio.XnioWorker createWorker(org.xnio.OptionMap) throws java.io.IOException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: invokevirtual #393                // Method createWorker:(Ljava/lang/ThreadGroup;Lorg/xnio/OptionMap;)Lorg/xnio/XnioWorker;
       6: areturn

  public org.xnio.XnioWorker createWorker(java.lang.ThreadGroup, org.xnio.OptionMap) throws java.io.IOException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokevirtual #396                // Method createWorker:(Ljava/lang/ThreadGroup;Lorg/xnio/OptionMap;Ljava/lang/Runnable;)Lorg/xnio/XnioWorker;
       7: areturn

  public org.xnio.XnioWorker createWorker(java.lang.ThreadGroup, org.xnio.OptionMap, java.lang.Runnable) throws java.io.IOException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: invokevirtual #400                // Method createWorkerBuilder:()Lorg/xnio/XnioWorker$Builder;
       4: astore        4
       6: aload         4
       8: aload_2
       9: invokevirtual #404                // Method org/xnio/XnioWorker$Builder.populateFromOptions:(Lorg/xnio/OptionMap;)Lorg/xnio/XnioWorker$Builder;
      12: pop
      13: aload         4
      15: aload_1
      16: invokevirtual #408                // Method org/xnio/XnioWorker$Builder.setThreadGroup:(Ljava/lang/ThreadGroup;)Lorg/xnio/XnioWorker$Builder;
      19: pop
      20: aload         4
      22: aload_3
      23: invokevirtual #412                // Method org/xnio/XnioWorker$Builder.setTerminationTask:(Ljava/lang/Runnable;)Lorg/xnio/XnioWorker$Builder;
      26: pop
      27: aload         4
      29: invokevirtual #415                // Method org/xnio/XnioWorker$Builder.build:()Lorg/xnio/XnioWorker;
      32: areturn

  public org.xnio.FileSystemWatcher createFileSystemWatcher(java.lang.String, org.xnio.OptionMap);
    Code:
       0: aload_2
       1: getstatic     #424                // Field org/xnio/Options.WATCHER_POLL_INTERVAL:Lorg/xnio/Option;
       4: sipush        5000
       7: invokevirtual #427                // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
      10: istore_3
      11: aload_2
      12: getstatic     #430                // Field org/xnio/Options.THREAD_DAEMON:Lorg/xnio/Option;
      15: iconst_1
      16: invokevirtual #268                // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      19: istore        4
      21: new           #432                // class org/xnio/PollingFileSystemWatcher
      24: dup
      25: aload_1
      26: iload_3
      27: iload         4
      29: invokespecial #435                // Method org/xnio/PollingFileSystemWatcher."<init>":(Ljava/lang/String;IZ)V
      32: areturn

  protected void handleThreadExit();
    Code:
       0: return

  public final java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #71                 // Field name:Ljava/lang/String;
       4: areturn

  public final java.lang.String toString();
    Code:
       0: ldc_w         #442                // String XNIO provider \"%s\" <%s@%s>
       3: iconst_3
       4: anewarray     #4                  // class java/lang/Object
       7: dup
       8: iconst_0
       9: aload_0
      10: invokevirtual #443                // Method getName:()Ljava/lang/String;
      13: aastore
      14: dup
      15: iconst_1
      16: aload_0
      17: invokevirtual #447                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: invokevirtual #450                // Method java/lang/Class.getName:()Ljava/lang/String;
      23: aastore
      24: dup
      25: iconst_2
      26: aload_0
      27: invokevirtual #454                // Method java/lang/Object.hashCode:()I
      30: invokestatic  #460                // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      33: aastore
      34: invokestatic  #464                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      37: areturn

  protected static java.lang.String getProperty(java.lang.String);
    Code:
       0: aload_0
       1: ldc_w         #468                // String xnio.
       4: invokevirtual #472                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       7: ifne          19
      10: getstatic     #62                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      13: invokeinterface #476,  1          // InterfaceMethod org/xnio/_private/Messages.propReadForbidden:()Ljava/lang/SecurityException;
      18: athrow
      19: invokestatic  #83                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
      22: astore_1
      23: aload_1
      24: ifnull        43
      27: new           #478                // class org/xnio/ReadPropertyAction
      30: dup
      31: aload_0
      32: aconst_null
      33: invokespecial #481                // Method org/xnio/ReadPropertyAction."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      36: invokestatic  #138                // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      39: checkcast     #69                 // class java/lang/String
      42: areturn
      43: aload_0
      44: invokestatic  #483                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      47: areturn

  protected static java.lang.String getProperty(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: ldc_w         #468                // String xnio.
       4: invokevirtual #472                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       7: ifne          19
      10: getstatic     #62                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      13: invokeinterface #476,  1          // InterfaceMethod org/xnio/_private/Messages.propReadForbidden:()Ljava/lang/SecurityException;
      18: athrow
      19: invokestatic  #83                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
      22: astore_2
      23: aload_2
      24: ifnull        43
      27: new           #478                // class org/xnio/ReadPropertyAction
      30: dup
      31: aload_0
      32: aload_1
      33: invokespecial #481                // Method org/xnio/ReadPropertyAction."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      36: invokestatic  #138                // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      39: checkcast     #69                 // class java/lang/String
      42: areturn
      43: aload_0
      44: aload_1
      45: invokestatic  #486                // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      48: areturn

  protected static java.io.Closeable register(org.xnio.management.XnioProviderMXBean);
    Code:
       0: new           #491                // class javax/management/ObjectName
       3: dup
       4: ldc_w         #493                // String org.xnio
       7: iconst_2
       8: anewarray     #31                 // class org/xnio/ObjectProperties$Property
      11: dup
      12: iconst_0
      13: ldc_w         #495                // String type
      16: ldc_w         #497                // String Xnio
      19: invokestatic  #501                // Method org/xnio/ObjectProperties.property:(Ljava/lang/String;Ljava/lang/String;)Lorg/xnio/ObjectProperties$Property;
      22: aastore
      23: dup
      24: iconst_1
      25: ldc_w         #502                // String provider
      28: aload_0
      29: invokeinterface #505,  1          // InterfaceMethod org/xnio/management/XnioProviderMXBean.getName:()Ljava/lang/String;
      34: invokestatic  #508                // Method javax/management/ObjectName.quote:(Ljava/lang/String;)Ljava/lang/String;
      37: invokestatic  #501                // Method org/xnio/ObjectProperties.property:(Ljava/lang/String;Ljava/lang/String;)Lorg/xnio/ObjectProperties$Property;
      40: aastore
      41: invokestatic  #512                // Method org/xnio/ObjectProperties.properties:([Lorg/xnio/ObjectProperties$Property;)Lorg/xnio/ObjectProperties;
      44: invokespecial #515                // Method javax/management/ObjectName."<init>":(Ljava/lang/String;Ljava/util/Hashtable;)V
      47: astore_1
      48: invokestatic  #519                // Method org/xnio/Xnio$MBeanHolder.access$000:()Ljavax/management/MBeanServer;
      51: aload_0
      52: aload_1
      53: invokeinterface #525,  3          // InterfaceMethod javax/management/MBeanServer.registerMBean:(Ljava/lang/Object;Ljavax/management/ObjectName;)Ljavax/management/ObjectInstance;
      58: pop
      59: new           #7                  // class org/xnio/Xnio$MBeanCloseable
      62: dup
      63: aload_1
      64: invokespecial #528                // Method org/xnio/Xnio$MBeanCloseable."<init>":(Ljavax/management/ObjectName;)V
      67: areturn
      68: astore_1
      69: invokestatic  #534                // Method org/xnio/IoUtils.nullCloseable:()Ljava/io/Closeable;
      72: areturn
    Exception table:
       from    to  target type
           0    67    68   Class java/lang/Throwable

  protected static java.io.Closeable register(org.xnio.management.XnioWorkerMXBean);
    Code:
       0: new           #491                // class javax/management/ObjectName
       3: dup
       4: ldc_w         #493                // String org.xnio
       7: iconst_3
       8: anewarray     #31                 // class org/xnio/ObjectProperties$Property
      11: dup
      12: iconst_0
      13: ldc_w         #495                // String type
      16: ldc_w         #497                // String Xnio
      19: invokestatic  #501                // Method org/xnio/ObjectProperties.property:(Ljava/lang/String;Ljava/lang/String;)Lorg/xnio/ObjectProperties$Property;
      22: aastore
      23: dup
      24: iconst_1
      25: ldc_w         #502                // String provider
      28: aload_0
      29: invokeinterface #545,  1          // InterfaceMethod org/xnio/management/XnioWorkerMXBean.getProviderName:()Ljava/lang/String;
      34: invokestatic  #508                // Method javax/management/ObjectName.quote:(Ljava/lang/String;)Ljava/lang/String;
      37: invokestatic  #501                // Method org/xnio/ObjectProperties.property:(Ljava/lang/String;Ljava/lang/String;)Lorg/xnio/ObjectProperties$Property;
      40: aastore
      41: dup
      42: iconst_2
      43: ldc_w         #547                // String worker
      46: aload_0
      47: invokeinterface #548,  1          // InterfaceMethod org/xnio/management/XnioWorkerMXBean.getName:()Ljava/lang/String;
      52: invokestatic  #508                // Method javax/management/ObjectName.quote:(Ljava/lang/String;)Ljava/lang/String;
      55: invokestatic  #501                // Method org/xnio/ObjectProperties.property:(Ljava/lang/String;Ljava/lang/String;)Lorg/xnio/ObjectProperties$Property;
      58: aastore
      59: invokestatic  #512                // Method org/xnio/ObjectProperties.properties:([Lorg/xnio/ObjectProperties$Property;)Lorg/xnio/ObjectProperties;
      62: invokespecial #515                // Method javax/management/ObjectName."<init>":(Ljava/lang/String;Ljava/util/Hashtable;)V
      65: astore_1
      66: invokestatic  #519                // Method org/xnio/Xnio$MBeanHolder.access$000:()Ljavax/management/MBeanServer;
      69: aload_0
      70: aload_1
      71: invokeinterface #525,  3          // InterfaceMethod javax/management/MBeanServer.registerMBean:(Ljava/lang/Object;Ljavax/management/ObjectName;)Ljavax/management/ObjectInstance;
      76: pop
      77: new           #7                  // class org/xnio/Xnio$MBeanCloseable
      80: dup
      81: aload_1
      82: invokespecial #528                // Method org/xnio/Xnio$MBeanCloseable."<init>":(Ljavax/management/ObjectName;)V
      85: areturn
      86: astore_1
      87: invokestatic  #534                // Method org/xnio/IoUtils.nullCloseable:()Ljava/io/Closeable;
      90: areturn
    Exception table:
       from    to  target type
           0    85    86   Class java/lang/Throwable

  protected static java.io.Closeable register(org.xnio.management.XnioServerMXBean);
    Code:
       0: new           #491                // class javax/management/ObjectName
       3: dup
       4: ldc_w         #493                // String org.xnio
       7: iconst_4
       8: anewarray     #31                 // class org/xnio/ObjectProperties$Property
      11: dup
      12: iconst_0
      13: ldc_w         #495                // String type
      16: ldc_w         #497                // String Xnio
      19: invokestatic  #501                // Method org/xnio/ObjectProperties.property:(Ljava/lang/String;Ljava/lang/String;)Lorg/xnio/ObjectProperties$Property;
      22: aastore
      23: dup
      24: iconst_1
      25: ldc_w         #502                // String provider
      28: aload_0
      29: invokeinterface #554,  1          // InterfaceMethod org/xnio/management/XnioServerMXBean.getProviderName:()Ljava/lang/String;
      34: invokestatic  #508                // Method javax/management/ObjectName.quote:(Ljava/lang/String;)Ljava/lang/String;
      37: invokestatic  #501                // Method org/xnio/ObjectProperties.property:(Ljava/lang/String;Ljava/lang/String;)Lorg/xnio/ObjectProperties$Property;
      40: aastore
      41: dup
      42: iconst_2
      43: ldc_w         #547                // String worker
      46: aload_0
      47: invokeinterface #557,  1          // InterfaceMethod org/xnio/management/XnioServerMXBean.getWorkerName:()Ljava/lang/String;
      52: invokestatic  #508                // Method javax/management/ObjectName.quote:(Ljava/lang/String;)Ljava/lang/String;
      55: invokestatic  #501                // Method org/xnio/ObjectProperties.property:(Ljava/lang/String;Ljava/lang/String;)Lorg/xnio/ObjectProperties$Property;
      58: aastore
      59: dup
      60: iconst_3
      61: ldc_w         #559                // String address
      64: aload_0
      65: invokeinterface #562,  1          // InterfaceMethod org/xnio/management/XnioServerMXBean.getBindAddress:()Ljava/lang/String;
      70: invokestatic  #508                // Method javax/management/ObjectName.quote:(Ljava/lang/String;)Ljava/lang/String;
      73: invokestatic  #501                // Method org/xnio/ObjectProperties.property:(Ljava/lang/String;Ljava/lang/String;)Lorg/xnio/ObjectProperties$Property;
      76: aastore
      77: invokestatic  #512                // Method org/xnio/ObjectProperties.properties:([Lorg/xnio/ObjectProperties$Property;)Lorg/xnio/ObjectProperties;
      80: invokespecial #515                // Method javax/management/ObjectName."<init>":(Ljava/lang/String;Ljava/util/Hashtable;)V
      83: astore_1
      84: invokestatic  #519                // Method org/xnio/Xnio$MBeanHolder.access$000:()Ljavax/management/MBeanServer;
      87: aload_0
      88: aload_1
      89: invokeinterface #525,  3          // InterfaceMethod javax/management/MBeanServer.registerMBean:(Ljava/lang/Object;Ljavax/management/ObjectName;)Ljavax/management/ObjectInstance;
      94: pop
      95: new           #7                  // class org/xnio/Xnio$MBeanCloseable
      98: dup
      99: aload_1
     100: invokespecial #528                // Method org/xnio/Xnio$MBeanCloseable."<init>":(Ljavax/management/ObjectName;)V
     103: areturn
     104: astore_1
     105: invokestatic  #534                // Method org/xnio/IoUtils.nullCloseable:()Ljava/io/Closeable;
     108: areturn
    Exception table:
       from    to  target type
           0   103   104   Class java/lang/Throwable

  static {};
    Code:
       0: new           #567                // class java/net/InetSocketAddress
       3: dup
       4: iconst_0
       5: invokespecial #570                // Method java/net/InetSocketAddress."<init>":(I)V
       8: putstatic     #572                // Field ANY_INET_ADDRESS:Ljava/net/InetSocketAddress;
      11: new           #574                // class org/xnio/LocalSocketAddress
      14: dup
      15: ldc_w         #576                // String
      18: invokespecial #577                // Method org/xnio/LocalSocketAddress."<init>":(Ljava/lang/String;)V
      21: putstatic     #579                // Field ANY_LOCAL_ADDRESS:Lorg/xnio/LocalSocketAddress;
      24: new           #581                // class java/lang/RuntimePermission
      27: dup
      28: ldc_w         #583                // String changeThreadBlockingSetting
      31: invokespecial #584                // Method java/lang/RuntimePermission."<init>":(Ljava/lang/String;)V
      34: putstatic     #85                 // Field ALLOW_BLOCKING_SETTING:Ljava/lang/RuntimePermission;
      37: getstatic     #62                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      40: getstatic     #589                // Field org/xnio/Version.VERSION:Ljava/lang/String;
      43: invokeinterface #592,  2          // InterfaceMethod org/xnio/_private/Messages.greeting:(Ljava/lang/String;)V
      48: new           #367                // class java/util/EnumMap
      51: dup
      52: ldc           #253                // class org/xnio/FileAccess
      54: invokespecial #595                // Method java/util/EnumMap."<init>":(Ljava/lang/Class;)V
      57: astore_0
      58: invokestatic  #599                // Method org/xnio/FileAccess.values:()[Lorg/xnio/FileAccess;
      61: astore_1
      62: aload_1
      63: arraylength
      64: istore_2
      65: iconst_0
      66: istore_3
      67: iload_3
      68: iload_2
      69: if_icmpge     98
      72: aload_1
      73: iload_3
      74: aaload
      75: astore        4
      77: aload_0
      78: aload         4
      80: getstatic     #251                // Field org/xnio/Options.FILE_ACCESS:Lorg/xnio/Option;
      83: aload         4
      85: invokestatic  #604                // Method org/xnio/OptionMap.create:(Lorg/xnio/Option;Ljava/lang/Object;)Lorg/xnio/OptionMap;
      88: invokevirtual #608                // Method java/util/EnumMap.put:(Ljava/lang/Enum;Ljava/lang/Object;)Ljava/lang/Object;
      91: pop
      92: iinc          3, 1
      95: goto          67
      98: aload_0
      99: putstatic     #365                // Field FILE_ACCESS_OPTION_MAPS:Ljava/util/EnumMap;
     102: new           #24                 // class org/xnio/Xnio$1
     105: dup
     106: invokespecial #609                // Method org/xnio/Xnio$1."<init>":()V
     109: putstatic     #93                 // Field BLOCKING:Ljava/lang/ThreadLocal;
     112: return
}
