Compiled from "XnioWorker.java"
class org.xnio.XnioWorker$ExecutorServiceTaskPool implements org.xnio.XnioWorker$TaskPool {
  private final java.util.concurrent.ExecutorService delegate;

  org.xnio.XnioWorker$ExecutorServiceTaskPool(java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: invokespecial #18                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #20                 // Field delegate:Ljava/util/concurrent/ExecutorService;
       9: return

  public void shutdown();
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Ljava/util/concurrent/ExecutorService;
       4: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/ExecutorService.shutdown:()V
       9: return

  public java.util.List<java.lang.Runnable> shutdownNow();
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Ljava/util/concurrent/ExecutorService;
       4: invokeinterface #32,  1           // InterfaceMethod java/util/concurrent/ExecutorService.shutdownNow:()Ljava/util/List;
       9: areturn

  public void execute(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Ljava/util/concurrent/ExecutorService;
       4: aload_1
       5: invokeinterface #36,  2           // InterfaceMethod java/util/concurrent/ExecutorService.execute:(Ljava/lang/Runnable;)V
      10: return

  public int getCorePoolSize();
    Code:
       0: iconst_m1
       1: ireturn

  public int getMaximumPoolSize();
    Code:
       0: iconst_m1
       1: ireturn

  public long getKeepAliveTime(java.util.concurrent.TimeUnit);
    Code:
       0: ldc2_w        #44                 // long -1l
       3: lreturn

  public void setCorePoolSize(int);
    Code:
       0: return

  public void setMaximumPoolSize(int);
    Code:
       0: return

  public void setKeepAliveTime(long, java.util.concurrent.TimeUnit);
    Code:
       0: return

  public int getActiveCount();
    Code:
       0: iconst_m1
       1: ireturn

  public int getPoolSize();
    Code:
       0: iconst_m1
       1: ireturn

  public int getQueueSize();
    Code:
       0: iconst_m1
       1: ireturn
}
