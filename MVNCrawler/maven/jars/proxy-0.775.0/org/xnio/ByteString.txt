Compiled from "ByteString.java"
public final class org.xnio.ByteString implements java.lang.Comparable<org.xnio.ByteString>, java.io.Serializable, java.lang.CharSequence {
  private static final long serialVersionUID;

  private final byte[] bytes;

  private final int offs;

  private final int len;

  private transient int hashCode;

  private transient int hashCodeIgnoreCase;

  private static final org.xnio.ByteString ZERO;

  static final boolean $assertionsDisabled;

  private org.xnio.ByteString(byte[], int, int);
    Code:
       0: aload_0
       1: invokespecial #32                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #34                 // Field bytes:[B
       9: aload_0
      10: iload_2
      11: putfield      #36                 // Field offs:I
      14: aload_0
      15: iload_3
      16: putfield      #38                 // Field len:I
      19: iload_2
      20: ifge          34
      23: getstatic     #44                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      26: ldc           #45                 // String offs
      28: invokeinterface #49,  2           // InterfaceMethod org/xnio/_private/Messages.parameterOutOfRange:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      33: athrow
      34: iload_3
      35: ifge          49
      38: getstatic     #44                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      41: ldc           #51                 // String len
      43: invokeinterface #49,  2           // InterfaceMethod org/xnio/_private/Messages.parameterOutOfRange:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      48: athrow
      49: iload_2
      50: iload_3
      51: iadd
      52: aload_1
      53: arraylength
      54: if_icmple     68
      57: getstatic     #44                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      60: ldc           #45                 // String offs
      62: invokeinterface #49,  2           // InterfaceMethod org/xnio/_private/Messages.parameterOutOfRange:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      67: athrow
      68: return

  private static int calcHashCode(byte[], int, int);
    Code:
       0: bipush        31
       2: istore_3
       3: iload_1
       4: iload_2
       5: iadd
       6: istore        4
       8: iload_1
       9: istore        5
      11: iload         5
      13: iload         4
      15: if_icmpge     39
      18: iload_3
      19: iconst_5
      20: ishl
      21: iload_3
      22: isub
      23: aload_0
      24: iload         5
      26: baload
      27: sipush        255
      30: iand
      31: iadd
      32: istore_3
      33: iinc          5, 1
      36: goto          11
      39: iload_3
      40: ifne          48
      43: ldc           #55                 // int 2147483647
      45: goto          49
      48: iload_3
      49: ireturn

  private static int calcHashCodeIgnoreCase(byte[], int, int);
    Code:
       0: bipush        31
       2: istore_3
       3: iload_1
       4: iload_2
       5: iadd
       6: istore        4
       8: iload_1
       9: istore        5
      11: iload         5
      13: iload         4
      15: if_icmpge     42
      18: iload_3
      19: iconst_5
      20: ishl
      21: iload_3
      22: isub
      23: aload_0
      24: iload         5
      26: baload
      27: invokestatic  #63                 // Method upperCase:(B)I
      30: sipush        255
      33: iand
      34: iadd
      35: istore_3
      36: iinc          5, 1
      39: goto          11
      42: iload_3
      43: ifne          51
      46: ldc           #55                 // int 2147483647
      48: goto          52
      51: iload_3
      52: ireturn

  private org.xnio.ByteString(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokespecial #66                 // Method "<init>":([BII)V
       8: return

  public static org.xnio.ByteString of(byte...);
    Code:
       0: new           #2                  // class org/xnio/ByteString
       3: dup
       4: aload_0
       5: invokevirtual #72                 // Method "[B".clone:()Ljava/lang/Object;
       8: checkcast     #50                 // class "[B"
      11: invokespecial #74                 // Method "<init>":([B)V
      14: areturn

  public static org.xnio.ByteString copyOf(byte[], int, int);
    Code:
       0: new           #2                  // class org/xnio/ByteString
       3: dup
       4: aload_0
       5: iload_1
       6: iload_1
       7: iload_2
       8: iadd
       9: invokestatic  #82                 // Method java/util/Arrays.copyOfRange:([BII)[B
      12: invokespecial #74                 // Method "<init>":([B)V
      15: areturn

  public static org.xnio.ByteString getBytes(java.lang.String, java.lang.String) throws java.io.UnsupportedEncodingException;
    Code:
       0: new           #2                  // class org/xnio/ByteString
       3: dup
       4: aload_0
       5: aload_1
       6: invokevirtual #92                 // Method java/lang/String.getBytes:(Ljava/lang/String;)[B
       9: invokespecial #74                 // Method "<init>":([B)V
      12: areturn

  public static org.xnio.ByteString getBytes(java.lang.String, java.nio.charset.Charset);
    Code:
       0: new           #2                  // class org/xnio/ByteString
       3: dup
       4: aload_0
       5: aload_1
       6: invokevirtual #99                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
       9: invokespecial #74                 // Method "<init>":([B)V
      12: areturn

  public static org.xnio.ByteString getBytes(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #105                // Method java/lang/String.length:()I
       4: istore_1
       5: new           #2                  // class org/xnio/ByteString
       8: dup
       9: iconst_0
      10: iload_1
      11: newarray       byte
      13: iconst_0
      14: aload_0
      15: iconst_0
      16: iload_1
      17: invokestatic  #109                // Method getStringBytes:(Z[BILjava/lang/String;II)[B
      20: iconst_0
      21: iload_1
      22: invokespecial #66                 // Method "<init>":([BII)V
      25: areturn

  public static org.xnio.ByteString getBytes(java.nio.ByteBuffer);
    Code:
       0: new           #2                  // class org/xnio/ByteString
       3: dup
       4: aload_0
       5: invokestatic  #116                // Method org/xnio/Buffers.take:(Ljava/nio/ByteBuffer;)[B
       8: invokespecial #74                 // Method "<init>":([B)V
      11: areturn

  public static org.xnio.ByteString getBytes(java.nio.ByteBuffer, int);
    Code:
       0: new           #2                  // class org/xnio/ByteString
       3: dup
       4: aload_0
       5: iload_1
       6: invokestatic  #122                // Method org/xnio/Buffers.take:(Ljava/nio/ByteBuffer;I)[B
       9: invokespecial #74                 // Method "<init>":([B)V
      12: areturn

  public byte[] getBytes();
    Code:
       0: aload_0
       1: getfield      #34                 // Field bytes:[B
       4: aload_0
       5: getfield      #36                 // Field offs:I
       8: aload_0
       9: getfield      #38                 // Field len:I
      12: invokestatic  #82                 // Method java/util/Arrays.copyOfRange:([BII)[B
      15: areturn

  public void getBytes(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #126                // Method copyTo:([B)V
       5: return

  public void getBytes(byte[], int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokevirtual #130                // Method copyTo:([BI)V
       6: return

  public void getBytes(byte[], int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #132                // Method copyTo:([BII)V
       7: return

  public void copyTo(int, byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #34                 // Field bytes:[B
       4: iload_1
       5: aload_0
       6: getfield      #36                 // Field offs:I
       9: iadd
      10: aload_2
      11: iload_3
      12: aload_0
      13: getfield      #38                 // Field len:I
      16: iload         4
      18: invokestatic  #139                // Method java/lang/Math.min:(II)I
      21: invokestatic  #145                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      24: return

  public void copyTo(byte[], int, int);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_1
       3: iload_2
       4: iload_3
       5: invokevirtual #149                // Method copyTo:(I[BII)V
       8: return

  public void copyTo(byte[], int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_1
       4: arraylength
       5: iload_2
       6: isub
       7: invokevirtual #132                // Method copyTo:([BII)V
      10: return

  public void copyTo(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #132                // Method copyTo:([BII)V
       8: return

  public void appendTo(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #34                 // Field bytes:[B
       5: aload_0
       6: getfield      #36                 // Field offs:I
       9: aload_0
      10: getfield      #38                 // Field len:I
      13: invokevirtual #157                // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      16: pop
      17: return

  public int tryAppendTo(int, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: getfield      #34                 // Field bytes:[B
       4: astore_3
       5: aload_2
       6: invokevirtual #162                // Method java/nio/ByteBuffer.remaining:()I
       9: aload_3
      10: arraylength
      11: iload_1
      12: isub
      13: invokestatic  #139                // Method java/lang/Math.min:(II)I
      16: istore        4
      18: aload_2
      19: aload_3
      20: iload_1
      21: aload_0
      22: getfield      #36                 // Field offs:I
      25: iadd
      26: iload         4
      28: invokevirtual #157                // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      31: pop
      32: iload         4
      34: ireturn

  public void writeTo(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #34                 // Field bytes:[B
       5: aload_0
       6: getfield      #36                 // Field offs:I
       9: aload_0
      10: getfield      #38                 // Field len:I
      13: invokevirtual #171                // Method java/io/OutputStream.write:([BII)V
      16: return

  public int compareTo(org.xnio.ByteString);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_0
       6: ireturn
       7: aload_0
       8: getfield      #38                 // Field len:I
      11: istore_2
      12: aload_1
      13: getfield      #38                 // Field len:I
      16: istore_3
      17: iload_2
      18: iload_3
      19: invokestatic  #139                // Method java/lang/Math.min:(II)I
      22: istore        4
      24: aload_0
      25: getfield      #34                 // Field bytes:[B
      28: astore        5
      30: aload_1
      31: getfield      #34                 // Field bytes:[B
      34: astore        6
      36: aload_0
      37: getfield      #36                 // Field offs:I
      40: istore        7
      42: aload_1
      43: getfield      #36                 // Field offs:I
      46: istore        8
      48: iconst_0
      49: istore        10
      51: iload         10
      53: iload         4
      55: if_icmpge     94
      58: aload         5
      60: iload         10
      62: iload         7
      64: iadd
      65: baload
      66: aload         6
      68: iload         10
      70: iload         8
      72: iadd
      73: baload
      74: isub
      75: invokestatic  #181                // Method java/lang/Integer.signum:(I)I
      78: istore        9
      80: iload         9
      82: ifeq          88
      85: iload         9
      87: ireturn
      88: iinc          10, 1
      91: goto          51
      94: iload_2
      95: iload_3
      96: isub
      97: invokestatic  #181                // Method java/lang/Integer.signum:(I)I
     100: ireturn

  public int compareToIgnoreCase(org.xnio.ByteString);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_0
       6: ireturn
       7: aload_1
       8: aload_0
       9: if_acmpne     14
      12: iconst_0
      13: ireturn
      14: aload_0
      15: getfield      #38                 // Field len:I
      18: istore_2
      19: aload_1
      20: getfield      #38                 // Field len:I
      23: istore_3
      24: iload_2
      25: iload_3
      26: invokestatic  #139                // Method java/lang/Math.min:(II)I
      29: istore        4
      31: aload_0
      32: getfield      #34                 // Field bytes:[B
      35: astore        5
      37: aload_1
      38: getfield      #34                 // Field bytes:[B
      41: astore        6
      43: aload_0
      44: getfield      #36                 // Field offs:I
      47: istore        7
      49: aload_1
      50: getfield      #36                 // Field offs:I
      53: istore        8
      55: iconst_0
      56: istore        10
      58: iload         10
      60: iload         4
      62: if_icmpge     107
      65: aload         5
      67: iload         10
      69: iload         7
      71: iadd
      72: baload
      73: invokestatic  #63                 // Method upperCase:(B)I
      76: aload         6
      78: iload         10
      80: iload         8
      82: iadd
      83: baload
      84: invokestatic  #63                 // Method upperCase:(B)I
      87: isub
      88: invokestatic  #181                // Method java/lang/Integer.signum:(I)I
      91: istore        9
      93: iload         9
      95: ifeq          101
      98: iload         9
     100: ireturn
     101: iinc          10, 1
     104: goto          58
     107: iload_2
     108: iload_3
     109: isub
     110: invokestatic  #181                // Method java/lang/Integer.signum:(I)I
     113: ireturn

  private static int upperCase(byte);
    Code:
       0: iload_0
       1: bipush        97
       3: if_icmplt     20
       6: iload_0
       7: bipush        122
       9: if_icmpgt     20
      12: iload_0
      13: sipush        223
      16: iand
      17: goto          21
      20: iload_0
      21: ireturn

  public java.lang.String toString(java.lang.String) throws java.io.UnsupportedEncodingException;
    Code:
       0: ldc           #193                // String ISO-8859-1
       2: aload_1
       3: invokevirtual #197                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
       6: ifne          27
       9: ldc           #199                // String Latin-1
      11: aload_1
      12: invokevirtual #197                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      15: ifne          27
      18: ldc           #201                // String ISO-Latin-1
      20: aload_1
      21: invokevirtual #205                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      24: ifeq          32
      27: aload_0
      28: invokevirtual #208                // Method toString:()Ljava/lang/String;
      31: areturn
      32: new           #89                 // class java/lang/String
      35: dup
      36: aload_0
      37: getfield      #34                 // Field bytes:[B
      40: aload_0
      41: getfield      #36                 // Field offs:I
      44: aload_0
      45: getfield      #38                 // Field len:I
      48: aload_1
      49: invokespecial #211                // Method java/lang/String."<init>":([BIILjava/lang/String;)V
      52: areturn

  public int length();
    Code:
       0: aload_0
       1: getfield      #38                 // Field len:I
       4: ireturn

  public java.lang.String toString();
    Code:
       0: new           #89                 // class java/lang/String
       3: dup
       4: aload_0
       5: getfield      #34                 // Field bytes:[B
       8: iconst_0
       9: aload_0
      10: getfield      #36                 // Field offs:I
      13: aload_0
      14: getfield      #38                 // Field len:I
      17: invokespecial #214                // Method java/lang/String."<init>":([BIII)V
      20: areturn

  public java.lang.String toUtf8String();
    Code:
       0: new           #89                 // class java/lang/String
       3: dup
       4: aload_0
       5: getfield      #34                 // Field bytes:[B
       8: aload_0
       9: getfield      #36                 // Field offs:I
      12: aload_0
      13: getfield      #38                 // Field len:I
      16: getstatic     #220                // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      19: invokespecial #223                // Method java/lang/String."<init>":([BIILjava/nio/charset/Charset;)V
      22: areturn

  public byte byteAt(int);
    Code:
       0: iload_1
       1: iflt          12
       4: iload_1
       5: aload_0
       6: getfield      #38                 // Field len:I
       9: if_icmple     20
      12: new           #227                // class java/lang/ArrayIndexOutOfBoundsException
      15: dup
      16: invokespecial #228                // Method java/lang/ArrayIndexOutOfBoundsException."<init>":()V
      19: athrow
      20: aload_0
      21: getfield      #34                 // Field bytes:[B
      24: iload_1
      25: aload_0
      26: getfield      #36                 // Field offs:I
      29: iadd
      30: baload
      31: ireturn

  public org.xnio.ByteString substring(int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_0
       3: getfield      #38                 // Field len:I
       6: iload_1
       7: isub
       8: invokevirtual #234                // Method substring:(II)Lorg/xnio/ByteString;
      11: areturn

  public org.xnio.ByteString substring(int, int);
    Code:
       0: aload_0
       1: getfield      #38                 // Field len:I
       4: iload_1
       5: isub
       6: iload_2
       7: if_icmpge     18
      10: new           #236                // class java/lang/IndexOutOfBoundsException
      13: dup
      14: invokespecial #237                // Method java/lang/IndexOutOfBoundsException."<init>":()V
      17: athrow
      18: new           #2                  // class org/xnio/ByteString
      21: dup
      22: aload_0
      23: getfield      #34                 // Field bytes:[B
      26: aload_0
      27: getfield      #36                 // Field offs:I
      30: iload_1
      31: iadd
      32: iload_2
      33: invokespecial #66                 // Method "<init>":([BII)V
      36: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #239                // Field hashCode:I
       4: istore_1
       5: iload_1
       6: ifne          30
       9: aload_0
      10: aload_0
      11: getfield      #34                 // Field bytes:[B
      14: aload_0
      15: getfield      #36                 // Field offs:I
      18: aload_0
      19: getfield      #38                 // Field len:I
      22: invokestatic  #241                // Method calcHashCode:([BII)I
      25: dup
      26: istore_1
      27: putfield      #239                // Field hashCode:I
      30: iload_1
      31: ireturn

  public int hashCodeIgnoreCase();
    Code:
       0: aload_0
       1: getfield      #243                // Field hashCodeIgnoreCase:I
       4: istore_1
       5: iload_1
       6: ifne          30
       9: aload_0
      10: aload_0
      11: getfield      #34                 // Field bytes:[B
      14: aload_0
      15: getfield      #36                 // Field offs:I
      18: aload_0
      19: getfield      #38                 // Field len:I
      22: invokestatic  #245                // Method calcHashCodeIgnoreCase:([BII)I
      25: dup
      26: istore_1
      27: putfield      #243                // Field hashCodeIgnoreCase:I
      30: iload_1
      31: ireturn

  private void readObject(java.io.ObjectInputStream) throws java.lang.ClassNotFoundException, java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #254                // Method java/io/ObjectInputStream.defaultReadObject:()V
       4: return

  private static boolean equals(byte[], int, byte[], int, int);
    Code:
       0: iconst_0
       1: istore        5
       3: iload         5
       5: iload         4
       7: if_icmpge     33
      10: aload_0
      11: iload         5
      13: iload_1
      14: iadd
      15: baload
      16: aload_2
      17: iload         5
      19: iload_3
      20: iadd
      21: baload
      22: if_icmpeq     27
      25: iconst_0
      26: ireturn
      27: iinc          5, 1
      30: goto          3
      33: iconst_1
      34: ireturn

  private static boolean equalsIgnoreCase(byte[], int, byte[], int, int);
    Code:
       0: iconst_0
       1: istore        5
       3: iload         5
       5: iload         4
       7: if_icmpge     39
      10: aload_0
      11: iload         5
      13: iload_1
      14: iadd
      15: baload
      16: invokestatic  #63                 // Method upperCase:(B)I
      19: aload_2
      20: iload         5
      22: iload_3
      23: iadd
      24: baload
      25: invokestatic  #63                 // Method upperCase:(B)I
      28: if_icmpeq     33
      31: iconst_0
      32: ireturn
      33: iinc          5, 1
      36: goto          3
      39: iconst_1
      40: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class org/xnio/ByteString
       4: ifeq          22
       7: aload_0
       8: aload_1
       9: checkcast     #2                  // class org/xnio/ByteString
      12: invokevirtual #263                // Method equals:(Lorg/xnio/ByteString;)Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public boolean equals(org.xnio.ByteString);
    Code:
       0: aload_0
       1: getfield      #38                 // Field len:I
       4: istore_2
       5: aload_0
       6: aload_1
       7: if_acmpeq     45
      10: aload_1
      11: ifnull        49
      14: iload_2
      15: aload_1
      16: getfield      #38                 // Field len:I
      19: if_icmpne     49
      22: aload_0
      23: getfield      #34                 // Field bytes:[B
      26: aload_0
      27: getfield      #36                 // Field offs:I
      30: aload_1
      31: getfield      #34                 // Field bytes:[B
      34: aload_1
      35: getfield      #36                 // Field offs:I
      38: iload_2
      39: invokestatic  #267                // Method equals:([BI[BII)Z
      42: ifeq          49
      45: iconst_1
      46: goto          50
      49: iconst_0
      50: ireturn

  public boolean equalsIgnoreCase(org.xnio.ByteString);
    Code:
       0: aload_0
       1: getfield      #38                 // Field len:I
       4: istore_2
       5: aload_0
       6: aload_1
       7: if_acmpeq     45
      10: aload_1
      11: ifnull        49
      14: iload_2
      15: aload_1
      16: getfield      #38                 // Field len:I
      19: if_icmpne     49
      22: aload_0
      23: getfield      #34                 // Field bytes:[B
      26: aload_0
      27: getfield      #36                 // Field offs:I
      30: aload_1
      31: getfield      #34                 // Field bytes:[B
      34: aload_1
      35: getfield      #36                 // Field offs:I
      38: iload_2
      39: invokestatic  #269                // Method equalsIgnoreCase:([BI[BII)Z
      42: ifeq          49
      45: iconst_1
      46: goto          50
      49: iconst_0
      50: ireturn

  public int toInt(int);
    Code:
       0: aload_0
       1: getfield      #38                 // Field len:I
       4: istore_2
       5: iload_1
       6: iload_2
       7: if_icmplt     12
      10: iconst_0
      11: ireturn
      12: aload_0
      13: getfield      #34                 // Field bytes:[B
      16: astore_3
      17: iconst_0
      18: istore        4
      20: iload_1
      21: aload_0
      22: getfield      #36                 // Field offs:I
      25: iadd
      26: istore        6
      28: iload         6
      30: iload_2
      31: if_icmpge     80
      34: aload_3
      35: iload         6
      37: baload
      38: istore        5
      40: iload         5
      42: bipush        48
      44: if_icmplt     54
      47: iload         5
      49: bipush        57
      51: if_icmple     57
      54: iload         4
      56: ireturn
      57: iload         4
      59: iconst_3
      60: ishl
      61: iload         4
      63: iconst_1
      64: ishl
      65: iadd
      66: iload         5
      68: bipush        48
      70: isub
      71: iadd
      72: istore        4
      74: iinc          6, 1
      77: goto          28
      80: iload         4
      82: ireturn

  public int toInt();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #274                // Method toInt:(I)I
       5: ireturn

  public long toLong(int);
    Code:
       0: aload_0
       1: getfield      #38                 // Field len:I
       4: istore_2
       5: iload_1
       6: iload_2
       7: if_icmplt     12
      10: lconst_0
      11: lreturn
      12: aload_0
      13: getfield      #34                 // Field bytes:[B
      16: astore_3
      17: lconst_0
      18: lstore        4
      20: iload_1
      21: istore        7
      23: iload         7
      25: iload_2
      26: if_icmpge     76
      29: aload_3
      30: iload         7
      32: baload
      33: istore        6
      35: iload         6
      37: bipush        48
      39: if_icmplt     49
      42: iload         6
      44: bipush        57
      46: if_icmple     52
      49: lload         4
      51: lreturn
      52: lload         4
      54: iconst_3
      55: lshl
      56: lload         4
      58: iconst_1
      59: lshl
      60: ladd
      61: iload         6
      63: bipush        48
      65: isub
      66: i2l
      67: ladd
      68: lstore        4
      70: iinc          7, 1
      73: goto          23
      76: lload         4
      78: lreturn

  public long toLong();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #279                // Method toLong:(I)J
       5: lreturn

  private static int decimalCount(int);
    Code:
       0: getstatic     #282                // Field $assertionsDisabled:Z
       3: ifne          18
       6: iload_0
       7: ifge          18
      10: new           #284                // class java/lang/AssertionError
      13: dup
      14: invokespecial #285                // Method java/lang/AssertionError."<init>":()V
      17: athrow
      18: iload_0
      19: bipush        10
      21: if_icmpge     26
      24: iconst_1
      25: ireturn
      26: iload_0
      27: bipush        100
      29: if_icmpge     34
      32: iconst_2
      33: ireturn
      34: iload_0
      35: sipush        1000
      38: if_icmpge     43
      41: iconst_3
      42: ireturn
      43: iload_0
      44: sipush        10000
      47: if_icmpge     52
      50: iconst_4
      51: ireturn
      52: iload_0
      53: ldc_w         #286                // int 100000
      56: if_icmpge     61
      59: iconst_5
      60: ireturn
      61: iload_0
      62: ldc_w         #287                // int 1000000
      65: if_icmpge     71
      68: bipush        6
      70: ireturn
      71: iload_0
      72: ldc_w         #288                // int 10000000
      75: if_icmpge     81
      78: bipush        7
      80: ireturn
      81: iload_0
      82: ldc_w         #289                // int 100000000
      85: if_icmpge     91
      88: bipush        8
      90: ireturn
      91: iload_0
      92: ldc_w         #290                // int 1000000000
      95: if_icmpge     101
      98: bipush        9
     100: ireturn
     101: bipush        10
     103: ireturn

  private static int decimalCount(long);
    Code:
       0: getstatic     #282                // Field $assertionsDisabled:Z
       3: ifne          20
       6: lload_0
       7: lconst_0
       8: lcmp
       9: ifge          20
      12: new           #284                // class java/lang/AssertionError
      15: dup
      16: invokespecial #285                // Method java/lang/AssertionError."<init>":()V
      19: athrow
      20: lload_0
      21: ldc2_w        #293                // long 10l
      24: lcmp
      25: ifge          30
      28: iconst_1
      29: ireturn
      30: lload_0
      31: ldc2_w        #295                // long 100l
      34: lcmp
      35: ifge          40
      38: iconst_2
      39: ireturn
      40: lload_0
      41: ldc2_w        #297                // long 1000l
      44: lcmp
      45: ifge          50
      48: iconst_3
      49: ireturn
      50: lload_0
      51: ldc2_w        #299                // long 10000l
      54: lcmp
      55: ifge          60
      58: iconst_4
      59: ireturn
      60: lload_0
      61: ldc2_w        #301                // long 100000l
      64: lcmp
      65: ifge          70
      68: iconst_5
      69: ireturn
      70: lload_0
      71: ldc2_w        #303                // long 1000000l
      74: lcmp
      75: ifge          81
      78: bipush        6
      80: ireturn
      81: lload_0
      82: ldc2_w        #305                // long 10000000l
      85: lcmp
      86: ifge          92
      89: bipush        7
      91: ireturn
      92: lload_0
      93: ldc2_w        #307                // long 100000000l
      96: lcmp
      97: ifge          103
     100: bipush        8
     102: ireturn
     103: lload_0
     104: ldc2_w        #309                // long 1000000000l
     107: lcmp
     108: ifge          114
     111: bipush        9
     113: ireturn
     114: lload_0
     115: ldc2_w        #311                // long 10000000000l
     118: lcmp
     119: ifge          125
     122: bipush        10
     124: ireturn
     125: lload_0
     126: ldc2_w        #313                // long 100000000000l
     129: lcmp
     130: ifge          136
     133: bipush        11
     135: ireturn
     136: lload_0
     137: ldc2_w        #315                // long 1000000000000l
     140: lcmp
     141: ifge          147
     144: bipush        12
     146: ireturn
     147: lload_0
     148: ldc2_w        #317                // long 10000000000000l
     151: lcmp
     152: ifge          158
     155: bipush        13
     157: ireturn
     158: lload_0
     159: ldc2_w        #319                // long 100000000000000l
     162: lcmp
     163: ifge          169
     166: bipush        14
     168: ireturn
     169: lload_0
     170: ldc2_w        #321                // long 1000000000000000l
     173: lcmp
     174: ifge          180
     177: bipush        15
     179: ireturn
     180: lload_0
     181: ldc2_w        #323                // long 10000000000000000l
     184: lcmp
     185: ifge          191
     188: bipush        16
     190: ireturn
     191: lload_0
     192: ldc2_w        #325                // long 100000000000000000l
     195: lcmp
     196: ifge          202
     199: bipush        17
     201: ireturn
     202: lload_0
     203: ldc2_w        #327                // long 1000000000000000000l
     206: lcmp
     207: ifge          213
     210: bipush        18
     212: ireturn
     213: bipush        19
     215: ireturn

  public static org.xnio.ByteString fromLong(long);
    Code:
       0: lload_0
       1: lconst_0
       2: lcmp
       3: ifne          10
       6: getstatic     #332                // Field ZERO:Lorg/xnio/ByteString;
       9: areturn
      10: lload_0
      11: invokestatic  #336                // Method java/lang/Math.abs:(J)J
      14: invokestatic  #338                // Method decimalCount:(J)I
      17: istore_2
      18: lload_0
      19: lconst_0
      20: lcmp
      21: ifge          39
      24: iinc          2, 1
      27: iload_2
      28: newarray       byte
      30: astore_3
      31: aload_3
      32: iconst_0
      33: bipush        45
      35: bastore
      36: goto          43
      39: iload_2
      40: newarray       byte
      42: astore_3
      43: lload_0
      44: ldc2_w        #293                // long 10l
      47: ldiv
      48: lstore        4
      50: lload_0
      51: lload         4
      53: iconst_3
      54: lshl
      55: lload         4
      57: iconst_1
      58: lshl
      59: ladd
      60: lsub
      61: l2i
      62: istore        6
      64: aload_3
      65: iinc          2, -1
      68: iload_2
      69: iload         6
      71: bipush        48
      73: iadd
      74: i2b
      75: bastore
      76: lload         4
      78: lstore_0
      79: iload_2
      80: ifgt          43
      83: new           #2                  // class org/xnio/ByteString
      86: dup
      87: aload_3
      88: invokespecial #74                 // Method "<init>":([B)V
      91: areturn

  public static org.xnio.ByteString fromInt(int);
    Code:
       0: iload_0
       1: ifne          8
       4: getstatic     #332                // Field ZERO:Lorg/xnio/ByteString;
       7: areturn
       8: iload_0
       9: invokestatic  #343                // Method java/lang/Math.abs:(I)I
      12: invokestatic  #345                // Method decimalCount:(I)I
      15: istore_1
      16: iload_0
      17: ifge          35
      20: iinc          1, 1
      23: iload_1
      24: newarray       byte
      26: astore_2
      27: aload_2
      28: iconst_0
      29: bipush        45
      31: bastore
      32: goto          39
      35: iload_1
      36: newarray       byte
      38: astore_2
      39: iload_0
      40: bipush        10
      42: idiv
      43: istore_3
      44: iload_0
      45: iload_3
      46: iconst_3
      47: ishl
      48: iload_3
      49: iconst_1
      50: ishl
      51: iadd
      52: isub
      53: istore        4
      55: aload_2
      56: iinc          1, -1
      59: iload_1
      60: iload         4
      62: bipush        48
      64: iadd
      65: i2b
      66: bastore
      67: iload_3
      68: istore_0
      69: iload_1
      70: ifgt          39
      73: new           #2                  // class org/xnio/ByteString
      76: dup
      77: aload_2
      78: invokespecial #74                 // Method "<init>":([B)V
      81: areturn

  public boolean equalToString(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: getfield      #34                 // Field bytes:[B
      10: astore_2
      11: aload_2
      12: arraylength
      13: istore_3
      14: aload_1
      15: invokevirtual #105                // Method java/lang/String.length:()I
      18: iload_3
      19: if_icmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_0
      25: getfield      #36                 // Field offs:I
      28: aload_0
      29: getfield      #38                 // Field len:I
      32: iadd
      33: istore        5
      35: aload_0
      36: getfield      #36                 // Field offs:I
      39: istore        6
      41: iload         6
      43: iload         5
      45: if_icmpge     86
      48: aload_1
      49: iload         6
      51: invokevirtual #350                // Method java/lang/String.charAt:(I)C
      54: istore        4
      56: iload         4
      58: sipush        255
      61: if_icmpgt     78
      64: aload_2
      65: iload         6
      67: baload
      68: aload_1
      69: iload         6
      71: invokevirtual #350                // Method java/lang/String.charAt:(I)C
      74: i2b
      75: if_icmpeq     80
      78: iconst_0
      79: ireturn
      80: iinc          6, 1
      83: goto          41
      86: iconst_1
      87: ireturn

  public boolean equalToStringIgnoreCase(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: getfield      #34                 // Field bytes:[B
      10: astore_2
      11: aload_2
      12: arraylength
      13: istore_3
      14: aload_1
      15: invokevirtual #105                // Method java/lang/String.length:()I
      18: iload_3
      19: if_icmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_0
      25: getfield      #36                 // Field offs:I
      28: aload_0
      29: getfield      #38                 // Field len:I
      32: iadd
      33: istore        5
      35: aload_0
      36: getfield      #36                 // Field offs:I
      39: istore        6
      41: iload         6
      43: iload         5
      45: if_icmpge     88
      48: aload_1
      49: iload         6
      51: invokevirtual #350                // Method java/lang/String.charAt:(I)C
      54: istore        4
      56: iload         4
      58: sipush        255
      61: if_icmpgt     80
      64: aload_2
      65: iload         6
      67: baload
      68: invokestatic  #63                 // Method upperCase:(B)I
      71: iload         4
      73: i2b
      74: invokestatic  #63                 // Method upperCase:(B)I
      77: if_icmpeq     82
      80: iconst_0
      81: ireturn
      82: iinc          6, 1
      85: goto          41
      88: iconst_1
      89: ireturn

  public int indexOf(char);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: invokevirtual #358                // Method indexOf:(CI)I
       6: ireturn

  public int indexOf(char, int);
    Code:
       0: iload_1
       1: sipush        255
       4: if_icmple     9
       7: iconst_m1
       8: ireturn
       9: aload_0
      10: getfield      #38                 // Field len:I
      13: istore_3
      14: iload_2
      15: iload_3
      16: if_icmple     21
      19: iconst_m1
      20: ireturn
      21: iconst_0
      22: iload_2
      23: invokestatic  #362                // Method java/lang/Math.max:(II)I
      26: aload_0
      27: getfield      #36                 // Field offs:I
      30: iadd
      31: istore_2
      32: aload_0
      33: getfield      #34                 // Field bytes:[B
      36: astore        4
      38: iload_1
      39: i2b
      40: istore        5
      42: iload_2
      43: iload_3
      44: iadd
      45: istore        6
      47: iload_2
      48: istore        7
      50: iload         7
      52: iload         6
      54: if_icmpge     76
      57: aload         4
      59: iload         7
      61: baload
      62: iload         5
      64: if_icmpne     70
      67: iload         7
      69: ireturn
      70: iinc          7, 1
      73: goto          50
      76: iconst_m1
      77: ireturn

  public int lastIndexOf(char);
    Code:
       0: aload_0
       1: iload_1
       2: aload_0
       3: invokevirtual #365                // Method length:()I
       6: iconst_1
       7: isub
       8: invokevirtual #367                // Method lastIndexOf:(CI)I
      11: ireturn

  public int lastIndexOf(char, int);
    Code:
       0: iload_1
       1: sipush        255
       4: if_icmple     9
       7: iconst_m1
       8: ireturn
       9: aload_0
      10: getfield      #34                 // Field bytes:[B
      13: astore_3
      14: aload_0
      15: getfield      #36                 // Field offs:I
      18: istore        4
      20: iload_2
      21: aload_0
      22: getfield      #38                 // Field len:I
      25: iconst_1
      26: isub
      27: invokestatic  #139                // Method java/lang/Math.min:(II)I
      30: iload         4
      32: iadd
      33: istore_2
      34: iload_1
      35: i2b
      36: istore        5
      38: iload_2
      39: istore        6
      41: iload         6
      43: iload         4
      45: if_icmplt     66
      48: aload_3
      49: iload         6
      51: baload
      52: iload         5
      54: if_icmpne     60
      57: iload         6
      59: ireturn
      60: iinc          6, -1
      63: goto          41
      66: iconst_m1
      67: ireturn

  private static int arrayIndexOf(byte[], int, byte[], int, int);
    Code:
       0: aload_0
       1: arraylength
       2: iload_1
       3: isub
       4: istore        5
       6: iload         4
       8: iload         5
      10: if_icmpgt     18
      13: iload         5
      15: ifge          20
      18: iconst_m1
      19: ireturn
      20: iconst_0
      21: iload_1
      22: invokestatic  #362                // Method java/lang/Math.max:(II)I
      25: istore_1
      26: iload         4
      28: ifne          33
      31: iload_1
      32: ireturn
      33: aload_2
      34: iload_3
      35: baload
      36: istore        6
      38: iload         5
      40: iload         4
      42: isub
      43: istore        7
      45: iload_1
      46: istore        8
      48: iload         8
      50: iload         7
      52: if_icmpge     108
      55: aload_0
      56: iload         8
      58: baload
      59: iload         6
      61: if_icmpne     102
      64: iconst_1
      65: istore        9
      67: iload         9
      69: iload         4
      71: if_icmpge     99
      74: aload_0
      75: iload         8
      77: iload         9
      79: iadd
      80: baload
      81: aload_2
      82: iload         9
      84: iload_3
      85: iadd
      86: baload
      87: if_icmpeq     93
      90: goto          102
      93: iinc          9, 1
      96: goto          67
      99: iload         8
     101: ireturn
     102: iinc          8, 1
     105: goto          48
     108: iconst_m1
     109: ireturn

  private static int arrayIndexOf(byte[], int, java.lang.String);
    Code:
       0: aload_0
       1: arraylength
       2: iload_1
       3: isub
       4: istore_3
       5: aload_2
       6: invokevirtual #105                // Method java/lang/String.length:()I
       9: istore        4
      11: iload         4
      13: iload_3
      14: if_icmpgt     21
      17: iload_3
      18: ifge          23
      21: iconst_m1
      22: ireturn
      23: iconst_0
      24: iload_1
      25: invokestatic  #362                // Method java/lang/Math.max:(II)I
      28: istore_1
      29: iload         4
      31: ifne          36
      34: iload_1
      35: ireturn
      36: aload_2
      37: iconst_0
      38: invokevirtual #350                // Method java/lang/String.charAt:(I)C
      41: istore        5
      43: iload         5
      45: sipush        255
      48: if_icmple     53
      51: iconst_m1
      52: ireturn
      53: iload_3
      54: iload         4
      56: isub
      57: istore        7
      59: iload_1
      60: istore        8
      62: iload         8
      64: iload         7
      66: if_icmpge     136
      69: aload_0
      70: iload         8
      72: baload
      73: iload         5
      75: if_icmpne     130
      78: iconst_1
      79: istore        9
      81: iload         9
      83: iload         4
      85: if_icmpge     127
      88: aload_2
      89: iload         9
      91: invokevirtual #350                // Method java/lang/String.charAt:(I)C
      94: istore        6
      96: iload         6
      98: sipush        255
     101: if_icmple     106
     104: iconst_m1
     105: ireturn
     106: aload_0
     107: iload         8
     109: iload         9
     111: iadd
     112: baload
     113: iload         6
     115: if_icmpeq     121
     118: goto          130
     121: iinc          9, 1
     124: goto          81
     127: iload         8
     129: ireturn
     130: iinc          8, 1
     133: goto          62
     136: iconst_m1
     137: ireturn

  private static int arrayIndexOfIgnoreCase(byte[], int, byte[], int, int);
    Code:
       0: aload_0
       1: arraylength
       2: iload_1
       3: isub
       4: istore        5
       6: iload         4
       8: iload         5
      10: if_icmpgt     18
      13: iload         5
      15: ifge          20
      18: iconst_m1
      19: ireturn
      20: iconst_0
      21: iload_1
      22: invokestatic  #362                // Method java/lang/Math.max:(II)I
      25: istore_1
      26: iload         4
      28: ifne          33
      31: iload_1
      32: ireturn
      33: aload_2
      34: iload_3
      35: baload
      36: invokestatic  #63                 // Method upperCase:(B)I
      39: istore        6
      41: iload         5
      43: iload         4
      45: isub
      46: istore        7
      48: iload_1
      49: istore        8
      51: iload         8
      53: iload         7
      55: if_icmpge     120
      58: aload_0
      59: iload         8
      61: baload
      62: invokestatic  #63                 // Method upperCase:(B)I
      65: iload         6
      67: if_icmpne     114
      70: iconst_1
      71: istore        9
      73: iload         9
      75: iload         4
      77: if_icmpge     111
      80: aload_0
      81: iload         8
      83: iload         9
      85: iadd
      86: baload
      87: invokestatic  #63                 // Method upperCase:(B)I
      90: aload_2
      91: iload         9
      93: iload_3
      94: iadd
      95: baload
      96: invokestatic  #63                 // Method upperCase:(B)I
      99: if_icmpeq     105
     102: goto          114
     105: iinc          9, 1
     108: goto          73
     111: iload         8
     113: ireturn
     114: iinc          8, 1
     117: goto          51
     120: iconst_m1
     121: ireturn

  private static int arrayIndexOfIgnoreCase(byte[], int, java.lang.String);
    Code:
       0: aload_0
       1: arraylength
       2: iload_1
       3: isub
       4: istore_3
       5: aload_2
       6: invokevirtual #105                // Method java/lang/String.length:()I
       9: istore        4
      11: iload         4
      13: iload_3
      14: if_icmpgt     21
      17: iload_3
      18: ifge          23
      21: iconst_m1
      22: ireturn
      23: iconst_0
      24: iload_1
      25: invokestatic  #362                // Method java/lang/Math.max:(II)I
      28: istore_1
      29: iload         4
      31: ifne          36
      34: iload_1
      35: ireturn
      36: aload_2
      37: iconst_0
      38: invokevirtual #350                // Method java/lang/String.charAt:(I)C
      41: istore        5
      43: iload         5
      45: sipush        255
      48: if_icmple     53
      51: iconst_m1
      52: ireturn
      53: iload         5
      55: i2b
      56: invokestatic  #63                 // Method upperCase:(B)I
      59: istore        6
      61: iload_3
      62: iload         4
      64: isub
      65: istore        7
      67: iload_1
      68: istore        9
      70: iload         9
      72: iload         7
      74: if_icmpge     154
      77: aload_0
      78: iload         9
      80: baload
      81: invokestatic  #63                 // Method upperCase:(B)I
      84: iload         6
      86: if_icmpne     148
      89: iconst_1
      90: istore        10
      92: iload         10
      94: iload         4
      96: if_icmpge     145
      99: aload_2
     100: iload         10
     102: invokevirtual #350                // Method java/lang/String.charAt:(I)C
     105: istore        8
     107: iload         8
     109: sipush        255
     112: if_icmple     117
     115: iconst_m1
     116: ireturn
     117: aload_0
     118: iload         9
     120: iload         10
     122: iadd
     123: baload
     124: invokestatic  #63                 // Method upperCase:(B)I
     127: iload         8
     129: i2b
     130: invokestatic  #63                 // Method upperCase:(B)I
     133: if_icmpeq     139
     136: goto          148
     139: iinc          10, 1
     142: goto          92
     145: iload         9
     147: ireturn
     148: iinc          9, 1
     151: goto          70
     154: iconst_m1
     155: ireturn

  private static int arrayLastIndexOf(byte[], int, byte[], int, int);
    Code:
       0: aload_0
       1: arraylength
       2: iload_1
       3: isub
       4: istore        5
       6: iload         4
       8: iload         5
      10: if_icmpgt     22
      13: iload         5
      15: iflt          22
      18: iload_1
      19: ifge          24
      22: iconst_m1
      23: ireturn
      24: iload         5
      26: iload         4
      28: isub
      29: iload_1
      30: invokestatic  #139                // Method java/lang/Math.min:(II)I
      33: istore_1
      34: iload         4
      36: ifne          41
      39: iload_1
      40: ireturn
      41: aload_2
      42: iconst_0
      43: baload
      44: istore        6
      46: iload_1
      47: iconst_1
      48: isub
      49: istore        7
      51: iload         7
      53: iflt          103
      56: aload_0
      57: iload         7
      59: baload
      60: iload         6
      62: if_icmpne     97
      65: iconst_1
      66: istore        8
      68: iload         8
      70: iload         4
      72: if_icmpge     97
      75: aload_0
      76: iload         7
      78: iload         8
      80: iadd
      81: baload
      82: aload_2
      83: iload_3
      84: iload         8
      86: iadd
      87: baload
      88: if_icmpeq     94
      91: goto          97
      94: iload         7
      96: ireturn
      97: iinc          7, -1
     100: goto          51
     103: iconst_m1
     104: ireturn

  private static int arrayLastIndexOf(byte[], int, java.lang.String);
    Code:
       0: aload_0
       1: arraylength
       2: iload_1
       3: isub
       4: istore_3
       5: aload_2
       6: invokevirtual #105                // Method java/lang/String.length:()I
       9: istore        4
      11: iload         4
      13: iload_3
      14: if_icmpgt     25
      17: iload_3
      18: iflt          25
      21: iload_1
      22: ifge          27
      25: iconst_m1
      26: ireturn
      27: iload_3
      28: iload         4
      30: isub
      31: iload_1
      32: invokestatic  #139                // Method java/lang/Math.min:(II)I
      35: istore_1
      36: iload         4
      38: ifne          43
      41: iload_1
      42: ireturn
      43: aload_2
      44: iconst_0
      45: invokevirtual #350                // Method java/lang/String.charAt:(I)C
      48: istore        5
      50: iload         5
      52: sipush        255
      55: if_icmple     60
      58: iconst_m1
      59: ireturn
      60: iload         5
      62: i2b
      63: istore        6
      65: iload_1
      66: iconst_1
      67: isub
      68: istore        8
      70: iload         8
      72: iflt          137
      75: aload_0
      76: iload         8
      78: baload
      79: iload         6
      81: if_icmpne     131
      84: iconst_1
      85: istore        9
      87: iload         9
      89: iload         4
      91: if_icmpge     131
      94: aload_2
      95: iload         9
      97: invokevirtual #350                // Method java/lang/String.charAt:(I)C
     100: istore        7
     102: iload         7
     104: sipush        255
     107: if_icmple     112
     110: iconst_m1
     111: ireturn
     112: aload_0
     113: iload         8
     115: iload         9
     117: iadd
     118: baload
     119: iload         7
     121: i2b
     122: if_icmpeq     128
     125: goto          131
     128: iload         8
     130: ireturn
     131: iinc          8, -1
     134: goto          70
     137: iconst_m1
     138: ireturn

  private static int arrayLastIndexOfIgnoreCase(byte[], int, byte[], int, int);
    Code:
       0: aload_0
       1: arraylength
       2: iload_1
       3: isub
       4: istore        5
       6: iload         4
       8: iload         5
      10: if_icmpgt     22
      13: iload         5
      15: iflt          22
      18: iload_1
      19: ifge          24
      22: iconst_m1
      23: ireturn
      24: iload         5
      26: iload         4
      28: isub
      29: iload_1
      30: invokestatic  #139                // Method java/lang/Math.min:(II)I
      33: istore_1
      34: iload         4
      36: ifne          41
      39: iload_1
      40: ireturn
      41: aload_2
      42: iload_3
      43: baload
      44: invokestatic  #63                 // Method upperCase:(B)I
      47: istore        6
      49: iload_1
      50: iconst_1
      51: isub
      52: istore        7
      54: iload         7
      56: iflt          115
      59: aload_0
      60: iload         7
      62: baload
      63: invokestatic  #63                 // Method upperCase:(B)I
      66: iload         6
      68: if_icmpne     109
      71: iconst_1
      72: istore        8
      74: iload         8
      76: iload         4
      78: if_icmpge     109
      81: aload_0
      82: iload         7
      84: iload         8
      86: iadd
      87: baload
      88: invokestatic  #63                 // Method upperCase:(B)I
      91: aload_2
      92: iload         8
      94: iload_3
      95: iadd
      96: baload
      97: invokestatic  #63                 // Method upperCase:(B)I
     100: if_icmpeq     106
     103: goto          109
     106: iload         7
     108: ireturn
     109: iinc          7, -1
     112: goto          54
     115: iconst_m1
     116: ireturn

  private static int arrayLastIndexOfIgnoreCase(byte[], int, java.lang.String);
    Code:
       0: aload_0
       1: arraylength
       2: iload_1
       3: isub
       4: istore_3
       5: aload_2
       6: invokevirtual #105                // Method java/lang/String.length:()I
       9: istore        4
      11: iload         4
      13: iload_3
      14: if_icmpgt     25
      17: iload_3
      18: iflt          25
      21: iload_1
      22: ifge          27
      25: iconst_m1
      26: ireturn
      27: iload_3
      28: iload         4
      30: isub
      31: iload_1
      32: invokestatic  #139                // Method java/lang/Math.min:(II)I
      35: istore_1
      36: iload         4
      38: ifne          43
      41: iload_1
      42: ireturn
      43: aload_2
      44: iconst_0
      45: invokevirtual #350                // Method java/lang/String.charAt:(I)C
      48: istore        5
      50: iload         5
      52: sipush        255
      55: if_icmple     60
      58: iconst_m1
      59: ireturn
      60: iload         5
      62: i2b
      63: invokestatic  #63                 // Method upperCase:(B)I
      66: istore        6
      68: iload_1
      69: iconst_1
      70: isub
      71: istore        8
      73: iload         8
      75: iflt          149
      78: aload_0
      79: iload         8
      81: baload
      82: invokestatic  #63                 // Method upperCase:(B)I
      85: iload         6
      87: if_icmpne     143
      90: iconst_1
      91: istore        9
      93: iload         9
      95: iload         4
      97: if_icmpge     143
     100: aload_2
     101: iload         9
     103: invokevirtual #350                // Method java/lang/String.charAt:(I)C
     106: istore        7
     108: iload         7
     110: sipush        255
     113: if_icmple     118
     116: iconst_m1
     117: ireturn
     118: aload_0
     119: iload         8
     121: iload         9
     123: iadd
     124: baload
     125: invokestatic  #63                 // Method upperCase:(B)I
     128: iload         7
     130: i2b
     131: invokestatic  #63                 // Method upperCase:(B)I
     134: if_icmpeq     140
     137: goto          143
     140: iload         8
     142: ireturn
     143: iinc          8, -1
     146: goto          73
     149: iconst_m1
     150: ireturn

  public boolean contains(org.xnio.ByteString);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: getfield      #34                 // Field bytes:[B
      17: astore_2
      18: aload_0
      19: getfield      #34                 // Field bytes:[B
      22: aload_0
      23: getfield      #36                 // Field offs:I
      26: aload_2
      27: aload_1
      28: getfield      #36                 // Field offs:I
      31: aload_1
      32: getfield      #38                 // Field len:I
      35: invokestatic  #386                // Method arrayIndexOf:([BI[BII)I
      38: iconst_m1
      39: if_icmpeq     46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: ireturn

  public boolean contains(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        19
       4: aload_0
       5: invokevirtual #208                // Method toString:()Ljava/lang/String;
       8: aload_1
       9: invokevirtual #389                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      12: ifeq          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  public boolean containsIgnoreCase(org.xnio.ByteString);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpeq     36
       5: aload_1
       6: ifnull        40
       9: aload_0
      10: getfield      #34                 // Field bytes:[B
      13: aload_0
      14: getfield      #36                 // Field offs:I
      17: aload_1
      18: getfield      #34                 // Field bytes:[B
      21: aload_1
      22: getfield      #36                 // Field offs:I
      25: aload_1
      26: getfield      #38                 // Field len:I
      29: invokestatic  #392                // Method arrayIndexOfIgnoreCase:([BI[BII)I
      32: iconst_m1
      33: if_icmpeq     40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn

  public boolean containsIgnoreCase(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #34                 // Field bytes:[B
       4: aload_0
       5: getfield      #36                 // Field offs:I
       8: aload_1
       9: invokestatic  #394                // Method arrayIndexOfIgnoreCase:([BILjava/lang/String;)I
      12: iconst_m1
      13: if_icmpeq     20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public int indexOf(org.xnio.ByteString);
    Code:
       0: aload_0
       1: getfield      #34                 // Field bytes:[B
       4: aload_0
       5: getfield      #36                 // Field offs:I
       8: aload_1
       9: getfield      #34                 // Field bytes:[B
      12: aload_1
      13: getfield      #36                 // Field offs:I
      16: aload_1
      17: getfield      #38                 // Field len:I
      20: invokestatic  #386                // Method arrayIndexOf:([BI[BII)I
      23: ireturn

  public int indexOf(org.xnio.ByteString, int);
    Code:
       0: iload_2
       1: aload_0
       2: getfield      #38                 // Field len:I
       5: if_icmple     10
       8: iconst_m1
       9: ireturn
      10: iload_2
      11: ifge          16
      14: iconst_0
      15: istore_2
      16: aload_0
      17: getfield      #34                 // Field bytes:[B
      20: aload_0
      21: getfield      #36                 // Field offs:I
      24: iload_2
      25: iadd
      26: aload_1
      27: getfield      #34                 // Field bytes:[B
      30: aload_1
      31: getfield      #36                 // Field offs:I
      34: aload_1
      35: getfield      #38                 // Field len:I
      38: invokestatic  #386                // Method arrayIndexOf:([BI[BII)I
      41: ireturn

  public int indexOf(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #34                 // Field bytes:[B
       4: aload_0
       5: getfield      #36                 // Field offs:I
       8: aload_1
       9: invokestatic  #398                // Method arrayIndexOf:([BILjava/lang/String;)I
      12: ireturn

  public int indexOf(java.lang.String, int);
    Code:
       0: iload_2
       1: aload_0
       2: getfield      #38                 // Field len:I
       5: if_icmple     10
       8: iconst_m1
       9: ireturn
      10: iload_2
      11: ifge          16
      14: iconst_0
      15: istore_2
      16: aload_0
      17: getfield      #34                 // Field bytes:[B
      20: aload_0
      21: getfield      #36                 // Field offs:I
      24: iload_2
      25: iadd
      26: aload_1
      27: invokestatic  #398                // Method arrayIndexOf:([BILjava/lang/String;)I
      30: ireturn

  public int indexOfIgnoreCase(org.xnio.ByteString);
    Code:
       0: aload_0
       1: getfield      #34                 // Field bytes:[B
       4: aload_0
       5: getfield      #36                 // Field offs:I
       8: aload_1
       9: getfield      #34                 // Field bytes:[B
      12: aload_1
      13: getfield      #36                 // Field offs:I
      16: aload_1
      17: getfield      #38                 // Field len:I
      20: invokestatic  #392                // Method arrayIndexOfIgnoreCase:([BI[BII)I
      23: ireturn

  public int indexOfIgnoreCase(org.xnio.ByteString, int);
    Code:
       0: iload_2
       1: aload_0
       2: getfield      #38                 // Field len:I
       5: if_icmple     10
       8: iconst_m1
       9: ireturn
      10: iload_2
      11: ifge          16
      14: iconst_0
      15: istore_2
      16: aload_0
      17: getfield      #34                 // Field bytes:[B
      20: aload_0
      21: getfield      #36                 // Field offs:I
      24: iload_2
      25: iadd
      26: aload_1
      27: getfield      #34                 // Field bytes:[B
      30: aload_1
      31: getfield      #36                 // Field offs:I
      34: aload_1
      35: getfield      #38                 // Field len:I
      38: invokestatic  #392                // Method arrayIndexOfIgnoreCase:([BI[BII)I
      41: ireturn

  public int indexOfIgnoreCase(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #34                 // Field bytes:[B
       4: aload_0
       5: getfield      #36                 // Field offs:I
       8: aload_1
       9: invokestatic  #394                // Method arrayIndexOfIgnoreCase:([BILjava/lang/String;)I
      12: ireturn

  public int indexOfIgnoreCase(java.lang.String, int);
    Code:
       0: iload_2
       1: aload_0
       2: getfield      #38                 // Field len:I
       5: if_icmple     10
       8: iconst_m1
       9: ireturn
      10: iload_2
      11: ifge          16
      14: iconst_0
      15: istore_2
      16: aload_0
      17: getfield      #34                 // Field bytes:[B
      20: aload_0
      21: getfield      #36                 // Field offs:I
      24: iload_2
      25: iadd
      26: aload_1
      27: invokestatic  #394                // Method arrayIndexOfIgnoreCase:([BILjava/lang/String;)I
      30: ireturn

  public int lastIndexOf(org.xnio.ByteString);
    Code:
       0: aload_0
       1: getfield      #34                 // Field bytes:[B
       4: aload_0
       5: getfield      #36                 // Field offs:I
       8: aload_1
       9: getfield      #34                 // Field bytes:[B
      12: aload_1
      13: getfield      #36                 // Field offs:I
      16: aload_1
      17: getfield      #38                 // Field len:I
      20: invokestatic  #402                // Method arrayLastIndexOf:([BI[BII)I
      23: ireturn

  public int lastIndexOf(org.xnio.ByteString, int);
    Code:
       0: iload_2
       1: aload_0
       2: getfield      #38                 // Field len:I
       5: if_icmple     10
       8: iconst_m1
       9: ireturn
      10: iload_2
      11: ifge          16
      14: iconst_0
      15: istore_2
      16: aload_0
      17: getfield      #34                 // Field bytes:[B
      20: aload_0
      21: getfield      #36                 // Field offs:I
      24: iload_2
      25: iadd
      26: aload_1
      27: getfield      #34                 // Field bytes:[B
      30: aload_1
      31: getfield      #36                 // Field offs:I
      34: aload_1
      35: getfield      #38                 // Field len:I
      38: invokestatic  #402                // Method arrayLastIndexOf:([BI[BII)I
      41: ireturn

  public int lastIndexOf(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #34                 // Field bytes:[B
       4: aload_0
       5: getfield      #36                 // Field offs:I
       8: aload_1
       9: invokestatic  #404                // Method arrayLastIndexOf:([BILjava/lang/String;)I
      12: ireturn

  public int lastIndexOf(java.lang.String, int);
    Code:
       0: aload_0
       1: getfield      #34                 // Field bytes:[B
       4: aload_0
       5: getfield      #36                 // Field offs:I
       8: iload_2
       9: iadd
      10: aload_1
      11: invokestatic  #404                // Method arrayLastIndexOf:([BILjava/lang/String;)I
      14: ireturn

  public int lastIndexOfIgnoreCase(org.xnio.ByteString);
    Code:
       0: aload_0
       1: getfield      #34                 // Field bytes:[B
       4: aload_0
       5: getfield      #36                 // Field offs:I
       8: aload_1
       9: getfield      #34                 // Field bytes:[B
      12: aload_1
      13: getfield      #36                 // Field offs:I
      16: aload_1
      17: getfield      #38                 // Field len:I
      20: invokestatic  #407                // Method arrayLastIndexOfIgnoreCase:([BI[BII)I
      23: ireturn

  public int lastIndexOfIgnoreCase(org.xnio.ByteString, int);
    Code:
       0: iload_2
       1: aload_0
       2: getfield      #38                 // Field len:I
       5: if_icmple     10
       8: iconst_m1
       9: ireturn
      10: iload_2
      11: ifge          16
      14: iconst_0
      15: istore_2
      16: aload_0
      17: getfield      #34                 // Field bytes:[B
      20: aload_0
      21: getfield      #36                 // Field offs:I
      24: iload_2
      25: iadd
      26: aload_1
      27: getfield      #34                 // Field bytes:[B
      30: aload_1
      31: getfield      #36                 // Field offs:I
      34: aload_1
      35: getfield      #38                 // Field len:I
      38: invokestatic  #407                // Method arrayLastIndexOfIgnoreCase:([BI[BII)I
      41: ireturn

  public int lastIndexOfIgnoreCase(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #34                 // Field bytes:[B
       4: aload_0
       5: getfield      #36                 // Field offs:I
       8: aload_1
       9: invokestatic  #409                // Method arrayLastIndexOfIgnoreCase:([BILjava/lang/String;)I
      12: ireturn

  public int lastIndexOfIgnoreCase(java.lang.String, int);
    Code:
       0: aload_0
       1: getfield      #34                 // Field bytes:[B
       4: aload_0
       5: getfield      #36                 // Field offs:I
       8: iload_2
       9: iadd
      10: aload_1
      11: invokestatic  #409                // Method arrayLastIndexOfIgnoreCase:([BILjava/lang/String;)I
      14: ireturn

  public boolean regionMatches(boolean, int, byte[], int, int);
    Code:
       0: iload_2
       1: iflt          30
       4: iload         4
       6: iflt          30
       9: iload_2
      10: iload         5
      12: iadd
      13: aload_0
      14: getfield      #38                 // Field len:I
      17: if_icmpgt     30
      20: iload         4
      22: iload         5
      24: iadd
      25: aload_3
      26: arraylength
      27: if_icmple     32
      30: iconst_0
      31: ireturn
      32: iload_1
      33: ifeq          55
      36: aload_0
      37: getfield      #34                 // Field bytes:[B
      40: iload_2
      41: aload_0
      42: getfield      #36                 // Field offs:I
      45: iadd
      46: aload_3
      47: iload         4
      49: iload         5
      51: invokestatic  #269                // Method equalsIgnoreCase:([BI[BII)Z
      54: ireturn
      55: aload_0
      56: getfield      #34                 // Field bytes:[B
      59: iload_2
      60: aload_0
      61: getfield      #36                 // Field offs:I
      64: iadd
      65: aload_3
      66: iload         4
      68: iload         5
      70: invokestatic  #267                // Method equals:([BI[BII)Z
      73: ireturn

  public boolean regionMatches(boolean, int, org.xnio.ByteString, int, int);
    Code:
       0: iload_2
       1: iflt          32
       4: iload         4
       6: iflt          32
       9: iload_2
      10: iload         5
      12: iadd
      13: aload_0
      14: getfield      #38                 // Field len:I
      17: if_icmpgt     32
      20: iload         4
      22: iload         5
      24: iadd
      25: aload_3
      26: getfield      #38                 // Field len:I
      29: if_icmple     34
      32: iconst_0
      33: ireturn
      34: iload_1
      35: ifeq          60
      38: aload_0
      39: getfield      #34                 // Field bytes:[B
      42: iload_2
      43: aload_0
      44: getfield      #36                 // Field offs:I
      47: iadd
      48: aload_3
      49: getfield      #34                 // Field bytes:[B
      52: iload         4
      54: iload         5
      56: invokestatic  #269                // Method equalsIgnoreCase:([BI[BII)Z
      59: ireturn
      60: aload_0
      61: getfield      #34                 // Field bytes:[B
      64: iload_2
      65: aload_0
      66: getfield      #36                 // Field offs:I
      69: iadd
      70: aload_3
      71: getfield      #34                 // Field bytes:[B
      74: iload         4
      76: iload         5
      78: invokestatic  #267                // Method equals:([BI[BII)Z
      81: ireturn

  public boolean regionMatches(boolean, int, java.lang.String, int, int);
    Code:
       0: iload_2
       1: iflt          32
       4: iload         4
       6: iflt          32
       9: iload_2
      10: iload         5
      12: iadd
      13: aload_0
      14: getfield      #38                 // Field len:I
      17: if_icmpgt     32
      20: iload         4
      22: iload         5
      24: iadd
      25: aload_3
      26: invokevirtual #105                // Method java/lang/String.length:()I
      29: if_icmple     34
      32: iconst_0
      33: ireturn
      34: iload_1
      35: ifeq          57
      38: aload_0
      39: getfield      #34                 // Field bytes:[B
      42: iload_2
      43: aload_0
      44: getfield      #36                 // Field offs:I
      47: iadd
      48: aload_3
      49: iload         4
      51: iload         5
      53: invokestatic  #419                // Method equalsIgnoreCase:([BILjava/lang/String;II)Z
      56: ireturn
      57: aload_0
      58: getfield      #34                 // Field bytes:[B
      61: iload_2
      62: aload_0
      63: getfield      #36                 // Field offs:I
      66: iadd
      67: aload_3
      68: iload         4
      70: iload         5
      72: invokestatic  #421                // Method equals:([BILjava/lang/String;II)Z
      75: ireturn

  private static boolean equalsIgnoreCase(byte[], int, java.lang.String, int, int);
    Code:
       0: iconst_0
       1: istore        6
       3: iload         6
       5: iload         4
       7: if_icmpge     50
      10: aload_2
      11: iload         6
      13: iload_3
      14: iadd
      15: invokevirtual #350                // Method java/lang/String.charAt:(I)C
      18: istore        5
      20: iload         5
      22: sipush        255
      25: if_icmple     30
      28: iconst_0
      29: ireturn
      30: aload_0
      31: iload         6
      33: iload_1
      34: iadd
      35: baload
      36: iload         5
      38: i2b
      39: if_icmpeq     44
      42: iconst_0
      43: ireturn
      44: iinc          6, 1
      47: goto          3
      50: iconst_1
      51: ireturn

  private static boolean equals(byte[], int, java.lang.String, int, int);
    Code:
       0: iconst_0
       1: istore        6
       3: iload         6
       5: iload         4
       7: if_icmpge     56
      10: aload_2
      11: iload         6
      13: iload_3
      14: iadd
      15: invokevirtual #350                // Method java/lang/String.charAt:(I)C
      18: istore        5
      20: iload         5
      22: sipush        255
      25: if_icmple     30
      28: iconst_0
      29: ireturn
      30: aload_0
      31: iload         6
      33: iload_1
      34: iadd
      35: baload
      36: invokestatic  #63                 // Method upperCase:(B)I
      39: iload         5
      41: i2b
      42: invokestatic  #63                 // Method upperCase:(B)I
      45: if_icmpeq     50
      48: iconst_0
      49: ireturn
      50: iinc          6, 1
      53: goto          3
      56: iconst_1
      57: ireturn

  public boolean startsWith(org.xnio.ByteString);
    Code:
       0: aload_0
       1: iconst_0
       2: iconst_0
       3: aload_1
       4: iconst_0
       5: aload_1
       6: invokevirtual #365                // Method length:()I
       9: invokevirtual #425                // Method regionMatches:(ZILorg/xnio/ByteString;II)Z
      12: ireturn

  public boolean startsWith(java.lang.String);
    Code:
       0: aload_0
       1: iconst_0
       2: iconst_0
       3: aload_1
       4: iconst_0
       5: aload_1
       6: invokevirtual #105                // Method java/lang/String.length:()I
       9: invokevirtual #428                // Method regionMatches:(ZILjava/lang/String;II)Z
      12: ireturn

  public boolean startsWith(char);
    Code:
       0: iload_1
       1: sipush        255
       4: if_icmpgt     32
       7: aload_0
       8: getfield      #38                 // Field len:I
      11: ifle          32
      14: aload_0
      15: getfield      #34                 // Field bytes:[B
      18: aload_0
      19: getfield      #36                 // Field offs:I
      22: baload
      23: iload_1
      24: i2b
      25: if_icmpne     32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  public boolean startsWithIgnoreCase(org.xnio.ByteString);
    Code:
       0: aload_0
       1: iconst_1
       2: iconst_0
       3: aload_1
       4: iconst_0
       5: aload_1
       6: invokevirtual #365                // Method length:()I
       9: invokevirtual #425                // Method regionMatches:(ZILorg/xnio/ByteString;II)Z
      12: ireturn

  public boolean startsWithIgnoreCase(java.lang.String);
    Code:
       0: aload_0
       1: iconst_1
       2: iconst_0
       3: aload_1
       4: iconst_0
       5: aload_1
       6: invokevirtual #105                // Method java/lang/String.length:()I
       9: invokevirtual #428                // Method regionMatches:(ZILjava/lang/String;II)Z
      12: ireturn

  public boolean startsWithIgnoreCase(char);
    Code:
       0: iload_1
       1: sipush        255
       4: if_icmpgt     38
       7: aload_0
       8: getfield      #38                 // Field len:I
      11: ifle          38
      14: aload_0
      15: getfield      #34                 // Field bytes:[B
      18: aload_0
      19: getfield      #36                 // Field offs:I
      22: baload
      23: invokestatic  #63                 // Method upperCase:(B)I
      26: iload_1
      27: i2b
      28: invokestatic  #63                 // Method upperCase:(B)I
      31: if_icmpne     38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: ireturn

  public boolean endsWith(org.xnio.ByteString);
    Code:
       0: aload_1
       1: getfield      #38                 // Field len:I
       4: istore_2
       5: aload_0
       6: iconst_0
       7: aload_0
       8: getfield      #38                 // Field len:I
      11: iload_2
      12: isub
      13: aload_1
      14: iconst_0
      15: iload_2
      16: invokevirtual #425                // Method regionMatches:(ZILorg/xnio/ByteString;II)Z
      19: ireturn

  public boolean endsWith(java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #105                // Method java/lang/String.length:()I
       4: istore_2
       5: aload_0
       6: iconst_0
       7: aload_0
       8: getfield      #38                 // Field len:I
      11: iload_2
      12: isub
      13: aload_1
      14: iconst_0
      15: iload_2
      16: invokevirtual #428                // Method regionMatches:(ZILjava/lang/String;II)Z
      19: ireturn

  public boolean endsWith(char);
    Code:
       0: aload_0
       1: getfield      #38                 // Field len:I
       4: istore_2
       5: iload_1
       6: sipush        255
       9: if_icmpgt     38
      12: iload_2
      13: ifle          38
      16: aload_0
      17: getfield      #34                 // Field bytes:[B
      20: aload_0
      21: getfield      #36                 // Field offs:I
      24: iload_2
      25: iadd
      26: iconst_1
      27: isub
      28: baload
      29: iload_1
      30: i2b
      31: if_icmpne     38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: ireturn

  public boolean endsWithIgnoreCase(org.xnio.ByteString);
    Code:
       0: aload_1
       1: invokevirtual #365                // Method length:()I
       4: istore_2
       5: aload_0
       6: iconst_1
       7: aload_0
       8: getfield      #38                 // Field len:I
      11: iload_2
      12: isub
      13: aload_1
      14: iconst_0
      15: iload_2
      16: invokevirtual #425                // Method regionMatches:(ZILorg/xnio/ByteString;II)Z
      19: ireturn

  public boolean endsWithIgnoreCase(java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #105                // Method java/lang/String.length:()I
       4: istore_2
       5: aload_0
       6: iconst_1
       7: aload_0
       8: getfield      #38                 // Field len:I
      11: iload_2
      12: isub
      13: aload_1
      14: iconst_0
      15: iload_2
      16: invokevirtual #428                // Method regionMatches:(ZILjava/lang/String;II)Z
      19: ireturn

  public boolean endsWithIgnoreCase(char);
    Code:
       0: aload_0
       1: getfield      #38                 // Field len:I
       4: istore_2
       5: iload_1
       6: sipush        255
       9: if_icmpgt     44
      12: iload_2
      13: ifle          44
      16: aload_0
      17: getfield      #34                 // Field bytes:[B
      20: aload_0
      21: getfield      #36                 // Field offs:I
      24: iload_2
      25: iadd
      26: iconst_1
      27: isub
      28: baload
      29: invokestatic  #63                 // Method upperCase:(B)I
      32: iload_1
      33: i2b
      34: invokestatic  #63                 // Method upperCase:(B)I
      37: if_icmpne     44
      40: iconst_1
      41: goto          45
      44: iconst_0
      45: ireturn

  public org.xnio.ByteString concat(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #437                // Method concat:([BII)Lorg/xnio/ByteString;
       8: areturn

  public org.xnio.ByteString concat(byte[], int, int);
    Code:
       0: iload_3
       1: ifgt          6
       4: aload_0
       5: areturn
       6: aload_0
       7: getfield      #38                 // Field len:I
      10: istore        4
      12: aload_0
      13: getfield      #34                 // Field bytes:[B
      16: aload_0
      17: getfield      #36                 // Field offs:I
      20: iload         4
      22: iload_3
      23: iadd
      24: invokestatic  #82                 // Method java/util/Arrays.copyOfRange:([BII)[B
      27: astore        5
      29: aload_1
      30: iload_2
      31: aload         5
      33: iload         4
      35: iload_3
      36: invokestatic  #145                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      39: new           #2                  // class org/xnio/ByteString
      42: dup
      43: aload         5
      45: invokespecial #74                 // Method "<init>":([B)V
      48: areturn

  public org.xnio.ByteString concat(org.xnio.ByteString);
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #34                 // Field bytes:[B
       5: aload_1
       6: getfield      #36                 // Field offs:I
       9: aload_1
      10: getfield      #38                 // Field len:I
      13: invokevirtual #437                // Method concat:([BII)Lorg/xnio/ByteString;
      16: areturn

  public org.xnio.ByteString concat(org.xnio.ByteString, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #34                 // Field bytes:[B
       5: iload_2
       6: aload_1
       7: getfield      #36                 // Field offs:I
      10: iadd
      11: iload_3
      12: aload_1
      13: getfield      #38                 // Field len:I
      16: invokestatic  #139                // Method java/lang/Math.min:(II)I
      19: invokevirtual #437                // Method concat:([BII)Lorg/xnio/ByteString;
      22: areturn

  public org.xnio.ByteString concat(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: invokevirtual #105                // Method java/lang/String.length:()I
       7: invokevirtual #444                // Method concat:(Ljava/lang/String;II)Lorg/xnio/ByteString;
      10: areturn

  private static byte[] getStringBytes(boolean, byte[], int, java.lang.String, int, int);
    Code:
       0: iload_0
       1: ifeq          20
       4: aload_3
       5: iload         4
       7: iload         4
       9: iload         5
      11: iadd
      12: aload_1
      13: iload_2
      14: invokevirtual #447                // Method java/lang/String.getBytes:(II[BI)V
      17: goto          73
      20: iload         4
      22: istore        6
      24: iload         6
      26: iload         5
      28: if_icmpge     73
      31: aload_3
      32: iload         6
      34: invokevirtual #350                // Method java/lang/String.charAt:(I)C
      37: istore        7
      39: iload         7
      41: sipush        255
      44: if_icmple     58
      47: new           #449                // class java/lang/IllegalArgumentException
      50: dup
      51: ldc_w         #451                // String Invalid string contents
      54: invokespecial #454                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      57: athrow
      58: aload_1
      59: iload         6
      61: iload_2
      62: iadd
      63: iload         7
      65: i2b
      66: bastore
      67: iinc          6, 1
      70: goto          24
      73: aload_1
      74: areturn

  public org.xnio.ByteString concat(java.lang.String, int, int);
    Code:
       0: iload_3
       1: ifgt          6
       4: aload_0
       5: areturn
       6: aload_0
       7: getfield      #34                 // Field bytes:[B
      10: astore        4
      12: aload_0
      13: getfield      #38                 // Field len:I
      16: istore        5
      18: aload         4
      20: iload_2
      21: iload_2
      22: iload         5
      24: iadd
      25: iload_3
      26: iadd
      27: invokestatic  #82                 // Method java/util/Arrays.copyOfRange:([BII)[B
      30: astore        6
      32: iconst_0
      33: aload         6
      35: iload         5
      37: aload_1
      38: iload_2
      39: iload_3
      40: invokestatic  #109                // Method getStringBytes:(Z[BILjava/lang/String;II)[B
      43: pop
      44: new           #2                  // class org/xnio/ByteString
      47: dup
      48: aload         6
      50: invokespecial #74                 // Method "<init>":([B)V
      53: areturn

  public static org.xnio.ByteString concat(java.lang.String, org.xnio.ByteString);
    Code:
       0: aload_0
       1: invokevirtual #105                // Method java/lang/String.length:()I
       4: istore_2
       5: aload_1
       6: getfield      #34                 // Field bytes:[B
       9: astore_3
      10: aload_3
      11: arraylength
      12: istore        4
      14: iload_2
      15: iload         4
      17: iadd
      18: newarray       byte
      20: astore        5
      22: iconst_0
      23: aload         5
      25: iconst_0
      26: aload_0
      27: iconst_0
      28: iload_2
      29: invokestatic  #109                // Method getStringBytes:(Z[BILjava/lang/String;II)[B
      32: pop
      33: aload_3
      34: aload_1
      35: getfield      #36                 // Field offs:I
      38: aload         5
      40: iload_2
      41: iload         4
      43: invokestatic  #145                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      46: new           #2                  // class org/xnio/ByteString
      49: dup
      50: aload         5
      52: invokespecial #74                 // Method "<init>":([B)V
      55: areturn

  public static org.xnio.ByteString concat(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #105                // Method java/lang/String.length:()I
       4: istore_2
       5: aload_1
       6: invokevirtual #105                // Method java/lang/String.length:()I
       9: istore_3
      10: iload_2
      11: iload_3
      12: iadd
      13: newarray       byte
      15: astore        4
      17: iconst_0
      18: aload         4
      20: iconst_0
      21: aload_0
      22: iconst_0
      23: iload_2
      24: invokestatic  #109                // Method getStringBytes:(Z[BILjava/lang/String;II)[B
      27: pop
      28: iconst_0
      29: aload         4
      31: iload_2
      32: aload_1
      33: iconst_0
      34: iload_3
      35: invokestatic  #109                // Method getStringBytes:(Z[BILjava/lang/String;II)[B
      38: pop
      39: new           #2                  // class org/xnio/ByteString
      42: dup
      43: aload         4
      45: invokespecial #74                 // Method "<init>":([B)V
      48: areturn

  public char charAt(int);
    Code:
       0: iload_1
       1: iflt          12
       4: iload_1
       5: aload_0
       6: getfield      #38                 // Field len:I
       9: if_icmple     20
      12: new           #227                // class java/lang/ArrayIndexOutOfBoundsException
      15: dup
      16: invokespecial #228                // Method java/lang/ArrayIndexOutOfBoundsException."<init>":()V
      19: athrow
      20: aload_0
      21: getfield      #34                 // Field bytes:[B
      24: iload_1
      25: aload_0
      26: getfield      #36                 // Field offs:I
      29: iadd
      30: baload
      31: sipush        255
      34: iand
      35: i2c
      36: ireturn

  public org.xnio.ByteString subSequence(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #234                // Method substring:(II)Lorg/xnio/ByteString;
       6: areturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2                  // class org/xnio/ByteString
       5: invokevirtual #464                // Method compareTo:(Lorg/xnio/ByteString;)I
       8: ireturn

  public java.lang.CharSequence subSequence(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #467                // Method subSequence:(II)Lorg/xnio/ByteString;
       6: areturn

  static {};
    Code:
       0: ldc           #2                  // class org/xnio/ByteString
       2: invokevirtual #474                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #282                // Field $assertionsDisabled:Z
      16: new           #2                  // class org/xnio/ByteString
      19: dup
      20: iconst_1
      21: newarray       byte
      23: dup
      24: iconst_0
      25: bipush        48
      27: bastore
      28: invokespecial #74                 // Method "<init>":([B)V
      31: putstatic     #332                // Field ZERO:Lorg/xnio/ByteString;
      34: return
}
