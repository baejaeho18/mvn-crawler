Compiled from "XnioWorker.java"
class org.xnio.XnioWorker$ThreadPoolExecutorTaskPool implements org.xnio.XnioWorker$TaskPool {
  private final java.util.concurrent.ThreadPoolExecutor delegate;

  org.xnio.XnioWorker$ThreadPoolExecutorTaskPool(java.util.concurrent.ThreadPoolExecutor);
    Code:
       0: aload_0
       1: invokespecial #18                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #20                 // Field delegate:Ljava/util/concurrent/ThreadPoolExecutor;
       9: return

  public void shutdown();
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Ljava/util/concurrent/ThreadPoolExecutor;
       4: invokevirtual #27                 // Method java/util/concurrent/ThreadPoolExecutor.shutdown:()V
       7: return

  public java.util.List<java.lang.Runnable> shutdownNow();
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Ljava/util/concurrent/ThreadPoolExecutor;
       4: invokevirtual #32                 // Method java/util/concurrent/ThreadPoolExecutor.shutdownNow:()Ljava/util/List;
       7: areturn

  public void execute(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Ljava/util/concurrent/ThreadPoolExecutor;
       4: aload_1
       5: invokevirtual #36                 // Method java/util/concurrent/ThreadPoolExecutor.execute:(Ljava/lang/Runnable;)V
       8: return

  public int getCorePoolSize();
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Ljava/util/concurrent/ThreadPoolExecutor;
       4: invokevirtual #42                 // Method java/util/concurrent/ThreadPoolExecutor.getCorePoolSize:()I
       7: ireturn

  public int getMaximumPoolSize();
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Ljava/util/concurrent/ThreadPoolExecutor;
       4: invokevirtual #45                 // Method java/util/concurrent/ThreadPoolExecutor.getMaximumPoolSize:()I
       7: ireturn

  public long getKeepAliveTime(java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Ljava/util/concurrent/ThreadPoolExecutor;
       4: aload_1
       5: invokevirtual #49                 // Method java/util/concurrent/ThreadPoolExecutor.getKeepAliveTime:(Ljava/util/concurrent/TimeUnit;)J
       8: lreturn

  public void setCorePoolSize(int);
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Ljava/util/concurrent/ThreadPoolExecutor;
       4: iload_1
       5: invokevirtual #55                 // Method java/util/concurrent/ThreadPoolExecutor.setCorePoolSize:(I)V
       8: return

  public void setMaximumPoolSize(int);
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Ljava/util/concurrent/ThreadPoolExecutor;
       4: iload_1
       5: invokevirtual #60                 // Method java/util/concurrent/ThreadPoolExecutor.setMaximumPoolSize:(I)V
       8: return

  public void setKeepAliveTime(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Ljava/util/concurrent/ThreadPoolExecutor;
       4: lload_1
       5: aload_3
       6: invokevirtual #64                 // Method java/util/concurrent/ThreadPoolExecutor.setKeepAliveTime:(JLjava/util/concurrent/TimeUnit;)V
       9: return

  public int getActiveCount();
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Ljava/util/concurrent/ThreadPoolExecutor;
       4: invokevirtual #69                 // Method java/util/concurrent/ThreadPoolExecutor.getActiveCount:()I
       7: ireturn

  public int getPoolSize();
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Ljava/util/concurrent/ThreadPoolExecutor;
       4: invokevirtual #72                 // Method java/util/concurrent/ThreadPoolExecutor.getPoolSize:()I
       7: ireturn

  public int getQueueSize();
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Ljava/util/concurrent/ThreadPoolExecutor;
       4: invokevirtual #77                 // Method java/util/concurrent/ThreadPoolExecutor.getQueue:()Ljava/util/concurrent/BlockingQueue;
       7: invokeinterface #81,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.size:()I
      12: ireturn
}
