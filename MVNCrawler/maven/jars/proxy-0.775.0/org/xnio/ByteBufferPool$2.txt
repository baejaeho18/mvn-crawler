Compiled from "ByteBufferPool.java"
final class org.xnio.ByteBufferPool$2 extends org.xnio.ByteBufferPool {
  final org.xnio.ByteBufferPool val$parent;

  org.xnio.ByteBufferPool$2(int, boolean, org.xnio.ByteBufferPool);
    Code:
       0: aload_0
       1: aload_3
       2: putfield      #14                 // Field val$parent:Lorg/xnio/ByteBufferPool;
       5: aload_0
       6: iload_1
       7: iload_2
       8: invokespecial #17                 // Method org/xnio/ByteBufferPool."<init>":(IZ)V
      11: return

  java.nio.ByteBuffer createBuffer();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: invokevirtual #29                 // Method getMasterQueue:()Ljava/util/concurrent/ConcurrentLinkedQueue;
       8: invokevirtual #35                 // Method java/util/concurrent/ConcurrentLinkedQueue.poll:()Ljava/lang/Object;
      11: checkcast     #37                 // class java/nio/ByteBuffer
      14: astore_2
      15: aload_2
      16: ifnull        23
      19: aload_2
      20: aload_1
      21: monitorexit
      22: areturn
      23: aload_0
      24: getfield      #14                 // Field val$parent:Lorg/xnio/ByteBufferPool;
      27: invokevirtual #42                 // Method org/xnio/ByteBufferPool.allocate:()Ljava/nio/ByteBuffer;
      30: astore_3
      31: aload_0
      32: invokevirtual #46                 // Method getSize:()I
      35: istore        4
      37: aload_3
      38: iload         4
      40: invokestatic  #52                 // Method org/xnio/Buffers.slice:(Ljava/nio/ByteBuffer;I)Ljava/nio/ByteBuffer;
      43: astore        5
      45: aload_3
      46: invokevirtual #56                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      49: ifeq          84
      52: iload         4
      54: getstatic     #59                 // Field CACHE_LINE_SIZE:I
      57: if_icmpge     71
      60: aload_3
      61: getstatic     #59                 // Field CACHE_LINE_SIZE:I
      64: iload         4
      66: isub
      67: invokestatic  #63                 // Method org/xnio/Buffers.skip:(Ljava/nio/Buffer;I)Ljava/nio/Buffer;
      70: pop
      71: aload_0
      72: aload_3
      73: iload         4
      75: invokestatic  #52                 // Method org/xnio/Buffers.slice:(Ljava/nio/ByteBuffer;I)Ljava/nio/ByteBuffer;
      78: invokespecial #67                 // Method org/xnio/ByteBufferPool.doFree:(Ljava/nio/ByteBuffer;)V
      81: goto          45
      84: aload         5
      86: aload_1
      87: monitorexit
      88: areturn
      89: astore        6
      91: aload_1
      92: monitorexit
      93: aload         6
      95: athrow
    Exception table:
       from    to  target type
           4    22    89   any
          23    88    89   any
          89    93    89   any
}
