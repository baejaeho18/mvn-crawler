Compiled from "NullStreamSinkChannel.java"
public final class org.xnio.channels.NullStreamSinkChannel implements org.xnio.channels.StreamSinkChannel, org.xnio.channels.WriteListenerSettable<org.xnio.channels.NullStreamSinkChannel>, org.xnio.channels.CloseListenerSettable<org.xnio.channels.NullStreamSinkChannel> {
  private final org.xnio.XnioIoThread thread;

  private volatile int state;

  private org.xnio.ChannelListener<? super org.xnio.channels.NullStreamSinkChannel> writeListener;

  private org.xnio.ChannelListener<? super org.xnio.channels.NullStreamSinkChannel> closeListener;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.xnio.channels.NullStreamSinkChannel> stateUpdater;

  private static final int FLAG_ENTERED;

  private static final int FLAG_CLOSED;

  private static final int FLAG_RESUMED;

  public org.xnio.channels.NullStreamSinkChannel(org.xnio.XnioIoThread);
    Code:
       0: aload_0
       1: invokespecial #43                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #45                 // Field thread:Lorg/xnio/XnioIoThread;
       9: return

  public org.xnio.XnioWorker getWorker();
    Code:
       0: aload_0
       1: getfield      #45                 // Field thread:Lorg/xnio/XnioIoThread;
       4: invokevirtual #53                 // Method org/xnio/XnioIoThread.getWorker:()Lorg/xnio/XnioWorker;
       7: areturn

  public org.xnio.XnioIoThread getIoThread();
    Code:
       0: aload_0
       1: getfield      #45                 // Field thread:Lorg/xnio/XnioIoThread;
       4: areturn

  public org.xnio.XnioExecutor getWriteThread();
    Code:
       0: aload_0
       1: getfield      #45                 // Field thread:Lorg/xnio/XnioIoThread;
       4: areturn

  public long transferFrom(java.nio.channels.FileChannel, long, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #66                 // Method enterWrite:()I
       4: istore        6
       6: aload_1
       7: invokevirtual #72                 // Method java/nio/channels/FileChannel.size:()J
      10: lload_2
      11: lsub
      12: lload         4
      14: invokestatic  #78                 // Method java/lang/Math.min:(JJ)J
      17: lstore        7
      19: aload_0
      20: iload         6
      22: invokespecial #82                 // Method exitWrite:(I)V
      25: lload         7
      27: lreturn
      28: astore        9
      30: aload_0
      31: iload         6
      33: invokespecial #82                 // Method exitWrite:(I)V
      36: aload         9
      38: athrow
    Exception table:
       from    to  target type
           6    19    28   any
          28    30    28   any

  public long transferFrom(org.xnio.channels.StreamSourceChannel, long, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #66                 // Method enterWrite:()I
       4: istore        5
       6: aload_1
       7: lload_2
       8: invokestatic  #97                 // Method org/xnio/channels/Channels.drain:(Lorg/xnio/channels/StreamSourceChannel;J)J
      11: lstore        6
      13: aload         4
      15: iconst_0
      16: invokevirtual #103                // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      19: pop
      20: aload_0
      21: iload         5
      23: invokespecial #82                 // Method exitWrite:(I)V
      26: lload         6
      28: lreturn
      29: astore        8
      31: aload         4
      33: iconst_0
      34: invokevirtual #103                // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      37: pop
      38: aload_0
      39: iload         5
      41: invokespecial #82                 // Method exitWrite:(I)V
      44: aload         8
      46: athrow
    Exception table:
       from    to  target type
           6    13    29   any
          29    31    29   any

  public void setWriteListener(org.xnio.ChannelListener<? super org.xnio.channels.NullStreamSinkChannel>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #114                // Field writeListener:Lorg/xnio/ChannelListener;
       5: return

  public org.xnio.ChannelListener<? super org.xnio.channels.NullStreamSinkChannel> getWriteListener();
    Code:
       0: aload_0
       1: getfield      #114                // Field writeListener:Lorg/xnio/ChannelListener;
       4: areturn

  public void setCloseListener(org.xnio.ChannelListener<? super org.xnio.channels.NullStreamSinkChannel>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #120                // Field closeListener:Lorg/xnio/ChannelListener;
       5: return

  public org.xnio.ChannelListener<? super org.xnio.channels.NullStreamSinkChannel> getCloseListener();
    Code:
       0: aload_0
       1: getfield      #120                // Field closeListener:Lorg/xnio/ChannelListener;
       4: areturn

  public org.xnio.ChannelListener$Setter<org.xnio.channels.NullStreamSinkChannel> getWriteSetter();
    Code:
       0: new           #19                 // class org/xnio/channels/WriteListenerSettable$Setter
       3: dup
       4: aload_0
       5: invokespecial #127                // Method org/xnio/channels/WriteListenerSettable$Setter."<init>":(Lorg/xnio/channels/WriteListenerSettable;)V
       8: areturn

  public org.xnio.ChannelListener$Setter<org.xnio.channels.NullStreamSinkChannel> getCloseSetter();
    Code:
       0: new           #21                 // class org/xnio/channels/CloseListenerSettable$Setter
       3: dup
       4: aload_0
       5: invokespecial #131                // Method org/xnio/channels/CloseListenerSettable$Setter."<init>":(Lorg/xnio/channels/CloseListenerSettable;)V
       8: areturn

  public int writeFinal(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #137                // Method org/xnio/channels/Channels.writeFinalBasic:(Lorg/xnio/channels/StreamSinkChannel;Ljava/nio/ByteBuffer;)I
       5: ireturn

  public long writeFinal(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #141                // Method org/xnio/channels/Channels.writeFinalBasic:(Lorg/xnio/channels/StreamSinkChannel;[Ljava/nio/ByteBuffer;II)J
       7: lreturn

  public long writeFinal(java.nio.ByteBuffer[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokestatic  #141                // Method org/xnio/channels/Channels.writeFinalBasic:(Lorg/xnio/channels/StreamSinkChannel;[Ljava/nio/ByteBuffer;II)J
       8: lreturn

  public int write(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #66                 // Method enterWrite:()I
       4: istore_2
       5: aload_1
       6: invokevirtual #150                // Method java/nio/ByteBuffer.remaining:()I
       9: istore_3
      10: aload_1
      11: aload_1
      12: invokevirtual #152                // Method java/nio/ByteBuffer.limit:()I
      15: invokevirtual #154                // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      18: pop
      19: aload_0
      20: iload_2
      21: invokespecial #82                 // Method exitWrite:(I)V
      24: iload_3
      25: ireturn
      26: astore        4
      28: aload_1
      29: aload_1
      30: invokevirtual #152                // Method java/nio/ByteBuffer.limit:()I
      33: invokevirtual #154                // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      36: pop
      37: aload_0
      38: iload_2
      39: invokespecial #82                 // Method exitWrite:(I)V
      42: aload         4
      44: athrow
    Exception table:
       from    to  target type
           5    10    26   any
          26    28    26   any

  public long write(java.nio.ByteBuffer[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #156                // Method write:([Ljava/nio/ByteBuffer;II)J
       8: lreturn

  public long write(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: ifne          6
       4: lconst_0
       5: lreturn
       6: aload_0
       7: invokespecial #66                 // Method enterWrite:()I
      10: istore        4
      12: lconst_0
      13: lstore        5
      15: iconst_0
      16: istore        8
      18: iload         8
      20: iload_3
      21: if_icmpge     58
      24: aload_1
      25: iload         8
      27: aaload
      28: astore        7
      30: lload         5
      32: aload         7
      34: invokevirtual #150                // Method java/nio/ByteBuffer.remaining:()I
      37: i2l
      38: ladd
      39: lstore        5
      41: aload         7
      43: aload         7
      45: invokevirtual #152                // Method java/nio/ByteBuffer.limit:()I
      48: invokevirtual #154                // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      51: pop
      52: iinc          8, 1
      55: goto          18
      58: lload         5
      60: lstore        8
      62: aload_0
      63: iload         4
      65: invokespecial #82                 // Method exitWrite:(I)V
      68: lload         8
      70: lreturn
      71: astore        10
      73: aload_0
      74: iload         4
      76: invokespecial #82                 // Method exitWrite:(I)V
      79: aload         10
      81: athrow
    Exception table:
       from    to  target type
          12    62    71   any
          71    73    71   any

  public void suspendWrites();
    Code:
       0: aload_0
       1: getfield      #162                // Field state:I
       4: istore_1
       5: iload_1
       6: iconst_4
       7: invokestatic  #168                // Method org/xnio/Bits.allAreClear:(II)Z
      10: ifne          21
      13: iload_1
      14: iconst_2
      15: invokestatic  #171                // Method org/xnio/Bits.allAreSet:(II)Z
      18: ifeq          22
      21: return
      22: iload_1
      23: bipush        -5
      25: iand
      26: istore_2
      27: getstatic     #173                // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      30: aload_0
      31: iload_1
      32: iload_2
      33: invokevirtual #179                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      36: ifeq          0
      39: return

  public void resumeWrites();
    Code:
       0: aload_0
       1: getfield      #162                // Field state:I
       4: istore_1
       5: iload_1
       6: bipush        6
       8: invokestatic  #185                // Method org/xnio/Bits.anyAreSet:(II)Z
      11: ifeq          15
      14: return
      15: iload_1
      16: iconst_4
      17: ior
      18: istore_2
      19: getstatic     #173                // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      22: aload_0
      23: iload_1
      24: iload_2
      25: invokevirtual #179                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      28: ifeq          0
      31: aload_0
      32: getfield      #45                 // Field thread:Lorg/xnio/XnioIoThread;
      35: aload_0
      36: aload_0
      37: getfield      #114                // Field writeListener:Lorg/xnio/ChannelListener;
      40: invokestatic  #191                // Method org/xnio/ChannelListeners.getChannelListenerTask:(Ljava/nio/channels/Channel;Lorg/xnio/ChannelListener;)Ljava/lang/Runnable;
      43: invokevirtual #195                // Method org/xnio/XnioIoThread.execute:(Ljava/lang/Runnable;)V
      46: return

  public void wakeupWrites();
    Code:
       0: aload_0
       1: invokevirtual #198                // Method resumeWrites:()V
       4: return

  public boolean isWriteResumed();
    Code:
       0: aload_0
       1: getfield      #162                // Field state:I
       4: istore_1
       5: iload_1
       6: iconst_4
       7: invokestatic  #171                // Method org/xnio/Bits.allAreSet:(II)Z
      10: ifeq          25
      13: iload_1
      14: iconst_2
      15: invokestatic  #168                // Method org/xnio/Bits.allAreClear:(II)Z
      18: ifeq          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  public void shutdownWrites() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #162                // Field state:I
       4: istore_1
       5: iload_1
       6: iconst_2
       7: invokestatic  #171                // Method org/xnio/Bits.allAreSet:(II)Z
      10: ifeq          14
      13: return
      14: iload_1
      15: iconst_2
      16: ior
      17: istore_2
      18: getstatic     #173                // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      21: aload_0
      22: iload_1
      23: iload_2
      24: invokevirtual #179                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      27: ifeq          0
      30: aload_0
      31: aconst_null
      32: putfield      #114                // Field writeListener:Lorg/xnio/ChannelListener;
      35: aload_0
      36: aload_0
      37: getfield      #120                // Field closeListener:Lorg/xnio/ChannelListener;
      40: invokestatic  #205                // Method org/xnio/ChannelListeners.invokeChannelListener:(Ljava/nio/channels/Channel;Lorg/xnio/ChannelListener;)Z
      43: pop
      44: return

  public void awaitWritable() throws java.io.IOException;
    Code:
       0: return

  public void awaitWritable(long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: return

  public boolean flush() throws java.io.IOException;
    Code:
       0: iconst_1
       1: ireturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #162                // Field state:I
       4: iconst_2
       5: invokestatic  #168                // Method org/xnio/Bits.allAreClear:(II)Z
       8: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #215                // Method shutdownWrites:()V
       4: return

  public boolean supportsOption(org.xnio.Option<?>);
    Code:
       0: iconst_0
       1: ireturn

  public <T> T getOption(org.xnio.Option<T>) throws java.io.IOException;
    Code:
       0: aconst_null
       1: areturn

  public <T> T setOption(org.xnio.Option<T>, T) throws java.lang.IllegalArgumentException, java.io.IOException;
    Code:
       0: aconst_null
       1: areturn

  private int enterWrite() throws java.nio.channels.ClosedChannelException;
    Code:
       0: aload_0
       1: getfield      #162                // Field state:I
       4: istore_1
       5: iload_1
       6: iconst_1
       7: invokestatic  #171                // Method org/xnio/Bits.allAreSet:(II)Z
      10: ifeq          21
      13: new           #237                // class org/xnio/channels/ConcurrentStreamChannelAccessException
      16: dup
      17: invokespecial #238                // Method org/xnio/channels/ConcurrentStreamChannelAccessException."<init>":()V
      20: athrow
      21: iload_1
      22: iconst_2
      23: invokestatic  #171                // Method org/xnio/Bits.allAreSet:(II)Z
      26: ifeq          37
      29: new           #235                // class java/nio/channels/ClosedChannelException
      32: dup
      33: invokespecial #239                // Method java/nio/channels/ClosedChannelException."<init>":()V
      36: athrow
      37: iload_1
      38: iconst_1
      39: ior
      40: istore_2
      41: getstatic     #173                // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      44: aload_0
      45: iload_1
      46: iload_2
      47: invokevirtual #179                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      50: ifeq          0
      53: iload_2
      54: ireturn

  private void exitWrite(int);
    Code:
       0: iload_1
       1: bipush        -2
       3: iand
       4: istore_2
       5: getstatic     #173                // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       8: aload_0
       9: iload_1
      10: iload_2
      11: invokevirtual #179                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      14: ifne          30
      17: aload_0
      18: getfield      #162                // Field state:I
      21: istore_1
      22: iload_1
      23: bipush        -2
      25: iand
      26: istore_2
      27: goto          5
      30: return

  static {};
    Code:
       0: ldc           #2                  // class org/xnio/channels/NullStreamSinkChannel
       2: ldc           #241                // String state
       4: invokestatic  #245                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       7: putstatic     #173                // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: return
}
