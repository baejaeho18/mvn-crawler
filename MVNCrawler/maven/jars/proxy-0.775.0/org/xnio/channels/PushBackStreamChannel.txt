Compiled from "PushBackStreamChannel.java"
public final class org.xnio.channels.PushBackStreamChannel implements org.xnio.channels.StreamSourceChannel, org.xnio.channels.WrappedChannel<org.xnio.channels.StreamSourceChannel> {
  private final org.xnio.channels.StreamSourceChannel firstChannel;

  private org.xnio.channels.StreamSourceChannel channel;

  private org.xnio.ChannelListener<? super org.xnio.channels.PushBackStreamChannel> readListener;

  private org.xnio.ChannelListener<? super org.xnio.channels.PushBackStreamChannel> closeListener;

  public org.xnio.channels.PushBackStreamChannel(org.xnio.channels.StreamSourceChannel);
    Code:
       0: aload_0
       1: invokespecial #38                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: aload_1
       7: dup_x1
       8: putfield      #40                 // Field firstChannel:Lorg/xnio/channels/StreamSourceChannel;
      11: putfield      #42                 // Field channel:Lorg/xnio/channels/StreamSourceChannel;
      14: aload_0
      15: getfield      #40                 // Field firstChannel:Lorg/xnio/channels/StreamSourceChannel;
      18: invokeinterface #46,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.getReadSetter:()Lorg/xnio/ChannelListener$Setter;
      23: new           #21                 // class org/xnio/channels/PushBackStreamChannel$1
      26: dup
      27: aload_0
      28: invokespecial #49                 // Method org/xnio/channels/PushBackStreamChannel$1."<init>":(Lorg/xnio/channels/PushBackStreamChannel;)V
      31: invokeinterface #53,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      36: aload_0
      37: getfield      #40                 // Field firstChannel:Lorg/xnio/channels/StreamSourceChannel;
      40: invokeinterface #56,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.getCloseSetter:()Lorg/xnio/ChannelListener$Setter;
      45: new           #19                 // class org/xnio/channels/PushBackStreamChannel$2
      48: dup
      49: aload_0
      50: invokespecial #57                 // Method org/xnio/channels/PushBackStreamChannel$2."<init>":(Lorg/xnio/channels/PushBackStreamChannel;)V
      53: invokeinterface #53,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      58: return

  public void setReadListener(org.xnio.ChannelListener<? super org.xnio.channels.PushBackStreamChannel>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #63                 // Field readListener:Lorg/xnio/ChannelListener;
       5: return

  public void setCloseListener(org.xnio.ChannelListener<? super org.xnio.channels.PushBackStreamChannel>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #66                 // Field closeListener:Lorg/xnio/ChannelListener;
       5: return

  public org.xnio.ChannelListener$Setter<? extends org.xnio.channels.PushBackStreamChannel> getReadSetter();
    Code:
       0: new           #17                 // class org/xnio/channels/PushBackStreamChannel$3
       3: dup
       4: aload_0
       5: invokespecial #68                 // Method org/xnio/channels/PushBackStreamChannel$3."<init>":(Lorg/xnio/channels/PushBackStreamChannel;)V
       8: areturn

  public org.xnio.ChannelListener$Setter<? extends org.xnio.channels.PushBackStreamChannel> getCloseSetter();
    Code:
       0: new           #15                 // class org/xnio/channels/PushBackStreamChannel$4
       3: dup
       4: aload_0
       5: invokespecial #69                 // Method org/xnio/channels/PushBackStreamChannel$4."<init>":(Lorg/xnio/channels/PushBackStreamChannel;)V
       8: areturn

  public long transferTo(long, long, java.nio.channels.FileChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #42                 // Field channel:Lorg/xnio/channels/StreamSourceChannel;
       4: astore        6
       6: aload         6
       8: ifnonnull     13
      11: lconst_0
      12: lreturn
      13: aload         6
      15: lload_1
      16: lload_3
      17: aload         5
      19: invokeinterface #75,  6           // InterfaceMethod org/xnio/channels/StreamSourceChannel.transferTo:(JJLjava/nio/channels/FileChannel;)J
      24: lreturn

  public long transferTo(long, java.nio.ByteBuffer, org.xnio.channels.StreamSinkChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #42                 // Field channel:Lorg/xnio/channels/StreamSourceChannel;
       4: astore        5
       6: aload         5
       8: ifnonnull     15
      11: ldc2_w        #82                 // long -1l
      14: lreturn
      15: aload         5
      17: lload_1
      18: aload_3
      19: aload         4
      21: invokeinterface #85,  5           // InterfaceMethod org/xnio/channels/StreamSourceChannel.transferTo:(JLjava/nio/ByteBuffer;Lorg/xnio/channels/StreamSinkChannel;)J
      26: lreturn

  public int read(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #42                 // Field channel:Lorg/xnio/channels/StreamSourceChannel;
       4: astore_2
       5: aload_2
       6: ifnonnull     11
       9: iconst_m1
      10: ireturn
      11: aload_2
      12: aload_1
      13: invokeinterface #92,  2           // InterfaceMethod org/xnio/channels/StreamSourceChannel.read:(Ljava/nio/ByteBuffer;)I
      18: ireturn

  public long read(java.nio.ByteBuffer[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #42                 // Field channel:Lorg/xnio/channels/StreamSourceChannel;
       4: astore_2
       5: aload_2
       6: ifnonnull     13
       9: ldc2_w        #82                 // long -1l
      12: lreturn
      13: aload_2
      14: aload_1
      15: invokeinterface #96,  2           // InterfaceMethod org/xnio/channels/StreamSourceChannel.read:([Ljava/nio/ByteBuffer;)J
      20: lreturn

  public long read(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #42                 // Field channel:Lorg/xnio/channels/StreamSourceChannel;
       4: astore        4
       6: aload         4
       8: ifnonnull     15
      11: ldc2_w        #82                 // long -1l
      14: lreturn
      15: aload         4
      17: aload_1
      18: iload_2
      19: iload_3
      20: invokeinterface #101,  4          // InterfaceMethod org/xnio/channels/StreamSourceChannel.read:([Ljava/nio/ByteBuffer;II)J
      25: lreturn

  public void unget(org.xnio.Pooled<java.nio.ByteBuffer>);
    Code:
       0: aload_0
       1: getfield      #42                 // Field channel:Lorg/xnio/channels/StreamSourceChannel;
       4: astore_2
       5: aload_2
       6: ifnonnull     16
       9: aload_1
      10: invokeinterface #112,  1          // InterfaceMethod org/xnio/Pooled.free:()V
      15: return
      16: aload_0
      17: new           #12                 // class org/xnio/channels/PushBackStreamChannel$BufferHolder
      20: dup
      21: aload_0
      22: aload_2
      23: aload_1
      24: invokespecial #115                // Method org/xnio/channels/PushBackStreamChannel$BufferHolder."<init>":(Lorg/xnio/channels/PushBackStreamChannel;Lorg/xnio/channels/StreamSourceChannel;Lorg/xnio/Pooled;)V
      27: putfield      #42                 // Field channel:Lorg/xnio/channels/StreamSourceChannel;
      30: return

  public void suspendReads();
    Code:
       0: aload_0
       1: getfield      #40                 // Field firstChannel:Lorg/xnio/channels/StreamSourceChannel;
       4: invokeinterface #122,  1          // InterfaceMethod org/xnio/channels/StreamSourceChannel.suspendReads:()V
       9: return

  public void resumeReads();
    Code:
       0: aload_0
       1: getfield      #42                 // Field channel:Lorg/xnio/channels/StreamSourceChannel;
       4: astore_1
       5: aload_1
       6: ifnull        15
       9: aload_1
      10: invokeinterface #125,  1          // InterfaceMethod org/xnio/channels/StreamSourceChannel.resumeReads:()V
      15: return

  public boolean isReadResumed();
    Code:
       0: aload_0
       1: getfield      #40                 // Field firstChannel:Lorg/xnio/channels/StreamSourceChannel;
       4: invokeinterface #129,  1          // InterfaceMethod org/xnio/channels/StreamSourceChannel.isReadResumed:()Z
       9: ireturn

  public void wakeupReads();
    Code:
       0: aload_0
       1: getfield      #40                 // Field firstChannel:Lorg/xnio/channels/StreamSourceChannel;
       4: invokeinterface #132,  1          // InterfaceMethod org/xnio/channels/StreamSourceChannel.wakeupReads:()V
       9: return

  public void shutdownReads() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #42                 // Field channel:Lorg/xnio/channels/StreamSourceChannel;
       4: astore_1
       5: aload_1
       6: ifnull        20
       9: aload_0
      10: aconst_null
      11: putfield      #42                 // Field channel:Lorg/xnio/channels/StreamSourceChannel;
      14: aload_1
      15: invokeinterface #135,  1          // InterfaceMethod org/xnio/channels/StreamSourceChannel.shutdownReads:()V
      20: return

  public void awaitReadable() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #42                 // Field channel:Lorg/xnio/channels/StreamSourceChannel;
       4: astore_1
       5: aload_1
       6: ifnull        15
       9: aload_1
      10: invokeinterface #138,  1          // InterfaceMethod org/xnio/channels/StreamSourceChannel.awaitReadable:()V
      15: return

  public void awaitReadable(long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #42                 // Field channel:Lorg/xnio/channels/StreamSourceChannel;
       4: astore        4
       6: aload         4
       8: ifnull        20
      11: aload         4
      13: lload_1
      14: aload_3
      15: invokeinterface #141,  4          // InterfaceMethod org/xnio/channels/StreamSourceChannel.awaitReadable:(JLjava/util/concurrent/TimeUnit;)V
      20: return

  public org.xnio.XnioExecutor getReadThread();
    Code:
       0: aload_0
       1: getfield      #40                 // Field firstChannel:Lorg/xnio/channels/StreamSourceChannel;
       4: invokeinterface #149,  1          // InterfaceMethod org/xnio/channels/StreamSourceChannel.getReadThread:()Lorg/xnio/XnioExecutor;
       9: areturn

  public org.xnio.XnioIoThread getIoThread();
    Code:
       0: aload_0
       1: getfield      #40                 // Field firstChannel:Lorg/xnio/channels/StreamSourceChannel;
       4: invokeinterface #153,  1          // InterfaceMethod org/xnio/channels/StreamSourceChannel.getIoThread:()Lorg/xnio/XnioIoThread;
       9: areturn

  public org.xnio.XnioWorker getWorker();
    Code:
       0: aload_0
       1: getfield      #40                 // Field firstChannel:Lorg/xnio/channels/StreamSourceChannel;
       4: invokeinterface #157,  1          // InterfaceMethod org/xnio/channels/StreamSourceChannel.getWorker:()Lorg/xnio/XnioWorker;
       9: areturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #40                 // Field firstChannel:Lorg/xnio/channels/StreamSourceChannel;
       4: invokeinterface #160,  1          // InterfaceMethod org/xnio/channels/StreamSourceChannel.isOpen:()Z
       9: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #42                 // Field channel:Lorg/xnio/channels/StreamSourceChannel;
       4: astore_1
       5: aload_1
       6: ifnull        20
       9: aload_0
      10: aconst_null
      11: putfield      #42                 // Field channel:Lorg/xnio/channels/StreamSourceChannel;
      14: aload_1
      15: invokeinterface #163,  1          // InterfaceMethod org/xnio/channels/StreamSourceChannel.close:()V
      20: return

  public boolean supportsOption(org.xnio.Option<?>);
    Code:
       0: aload_0
       1: getfield      #40                 // Field firstChannel:Lorg/xnio/channels/StreamSourceChannel;
       4: aload_1
       5: invokeinterface #168,  2          // InterfaceMethod org/xnio/channels/StreamSourceChannel.supportsOption:(Lorg/xnio/Option;)Z
      10: ireturn

  public <T> T getOption(org.xnio.Option<T>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #40                 // Field firstChannel:Lorg/xnio/channels/StreamSourceChannel;
       4: aload_1
       5: invokeinterface #176,  2          // InterfaceMethod org/xnio/channels/StreamSourceChannel.getOption:(Lorg/xnio/Option;)Ljava/lang/Object;
      10: areturn

  public <T> T setOption(org.xnio.Option<T>, T) throws java.lang.IllegalArgumentException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #40                 // Field firstChannel:Lorg/xnio/channels/StreamSourceChannel;
       4: aload_1
       5: aload_2
       6: invokeinterface #184,  3          // InterfaceMethod org/xnio/channels/StreamSourceChannel.setOption:(Lorg/xnio/Option;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public org.xnio.channels.StreamSourceChannel getChannel();
    Code:
       0: aload_0
       1: getfield      #40                 // Field firstChannel:Lorg/xnio/channels/StreamSourceChannel;
       4: areturn

  public java.nio.channels.Channel getChannel();
    Code:
       0: aload_0
       1: invokevirtual #192                // Method getChannel:()Lorg/xnio/channels/StreamSourceChannel;
       4: areturn

  static org.xnio.ChannelListener access$000(org.xnio.channels.PushBackStreamChannel);
    Code:
       0: aload_0
       1: getfield      #63                 // Field readListener:Lorg/xnio/ChannelListener;
       4: areturn

  static org.xnio.ChannelListener access$100(org.xnio.channels.PushBackStreamChannel);
    Code:
       0: aload_0
       1: getfield      #66                 // Field closeListener:Lorg/xnio/ChannelListener;
       4: areturn

  static org.xnio.channels.StreamSourceChannel access$202(org.xnio.channels.PushBackStreamChannel, org.xnio.channels.StreamSourceChannel);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #42                 // Field channel:Lorg/xnio/channels/StreamSourceChannel;
       6: areturn

  static org.xnio.channels.StreamSourceChannel access$300(org.xnio.channels.PushBackStreamChannel);
    Code:
       0: aload_0
       1: getfield      #40                 // Field firstChannel:Lorg/xnio/channels/StreamSourceChannel;
       4: areturn
}
