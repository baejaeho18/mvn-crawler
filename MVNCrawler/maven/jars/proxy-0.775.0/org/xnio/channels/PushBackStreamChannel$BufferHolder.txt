Compiled from "PushBackStreamChannel.java"
class org.xnio.channels.PushBackStreamChannel$BufferHolder implements org.xnio.channels.StreamSourceChannel {
  private final org.xnio.channels.StreamSourceChannel next;

  private final org.xnio.Pooled<java.nio.ByteBuffer> buffer;

  final org.xnio.channels.PushBackStreamChannel this$0;

  org.xnio.channels.PushBackStreamChannel$BufferHolder(org.xnio.channels.StreamSourceChannel, org.xnio.Pooled<java.nio.ByteBuffer>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #27                 // Field this$0:Lorg/xnio/channels/PushBackStreamChannel;
       5: aload_0
       6: invokespecial #30                 // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #32                 // Field next:Lorg/xnio/channels/StreamSourceChannel;
      14: aload_0
      15: aload_3
      16: putfield      #34                 // Field buffer:Lorg/xnio/Pooled;
      19: return

  public long transferTo(long, long, java.nio.channels.FileChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #34                 // Field buffer:Lorg/xnio/Pooled;
       4: invokeinterface #48,  1           // InterfaceMethod org/xnio/Pooled.getResource:()Ljava/lang/Object;
       9: checkcast     #50                 // class java/nio/ByteBuffer
      12: astore        8
      14: aload         8
      16: invokevirtual #54                 // Method java/nio/ByteBuffer.position:()I
      19: istore        9
      21: aload         8
      23: invokevirtual #57                 // Method java/nio/ByteBuffer.remaining:()I
      26: istore        10
      28: iload         10
      30: i2l
      31: lload_3
      32: lcmp
      33: ifle          88
      36: aload         8
      38: iload         9
      40: lload_3
      41: l2i
      42: iadd
      43: invokevirtual #61                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      46: pop
      47: aload         5
      49: aload         8
      51: lload_1
      52: invokevirtual #67                 // Method java/nio/channels/FileChannel.write:(Ljava/nio/ByteBuffer;J)I
      55: i2l
      56: lstore        11
      58: aload         8
      60: iload         9
      62: iload         10
      64: iadd
      65: invokevirtual #61                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      68: pop
      69: lload         11
      71: lreturn
      72: astore        13
      74: aload         8
      76: iload         9
      78: iload         10
      80: iadd
      81: invokevirtual #61                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      84: pop
      85: aload         13
      87: athrow
      88: aload         5
      90: aload         8
      92: lload_1
      93: invokevirtual #67                 // Method java/nio/channels/FileChannel.write:(Ljava/nio/ByteBuffer;J)I
      96: i2l
      97: lstore        6
      99: lload         6
     101: iload         10
     103: i2l
     104: lcmp
     105: ifne          116
     108: aload_0
     109: invokespecial #73                 // Method moveToNext:()Lorg/xnio/channels/StreamSourceChannel;
     112: pop
     113: goto          119
     116: lload         6
     118: lreturn
     119: lload_1
     120: lload         6
     122: ladd
     123: lstore_1
     124: lload_3
     125: lload         6
     127: lsub
     128: lstore_3
     129: goto          142
     132: astore        9
     134: aload_0
     135: invokespecial #73                 // Method moveToNext:()Lorg/xnio/channels/StreamSourceChannel;
     138: pop
     139: lconst_0
     140: lstore        6
     142: lload         6
     144: aload_0
     145: getfield      #32                 // Field next:Lorg/xnio/channels/StreamSourceChannel;
     148: lload_1
     149: lload_3
     150: aload         5
     152: invokeinterface #75,  6           // InterfaceMethod org/xnio/channels/StreamSourceChannel.transferTo:(JJLjava/nio/channels/FileChannel;)J
     157: ladd
     158: lreturn
    Exception table:
       from    to  target type
          36    58    72   any
          72    74    72   any
           0    69   132   Class java/lang/IllegalStateException
          72   118   132   Class java/lang/IllegalStateException
         119   129   132   Class java/lang/IllegalStateException

  public long transferTo(long, java.nio.ByteBuffer, org.xnio.channels.StreamSinkChannel) throws java.io.IOException;
    Code:
       0: aload_3
       1: invokevirtual #92                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
       4: pop
       5: aload_0
       6: getfield      #34                 // Field buffer:Lorg/xnio/Pooled;
       9: invokeinterface #48,  1           // InterfaceMethod org/xnio/Pooled.getResource:()Ljava/lang/Object;
      14: checkcast     #50                 // class java/nio/ByteBuffer
      17: astore        7
      19: aload         7
      21: invokevirtual #54                 // Method java/nio/ByteBuffer.position:()I
      24: istore        8
      26: aload         7
      28: invokevirtual #57                 // Method java/nio/ByteBuffer.remaining:()I
      31: istore        9
      33: iload         9
      35: i2l
      36: lload_1
      37: lcmp
      38: ifle          100
      41: aload         7
      43: iload         8
      45: lload_1
      46: l2i
      47: iadd
      48: invokevirtual #61                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      51: pop
      52: aload_3
      53: iconst_0
      54: invokevirtual #61                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      57: pop
      58: aload         4
      60: aload         7
      62: invokeinterface #97,  2           // InterfaceMethod org/xnio/channels/StreamSinkChannel.write:(Ljava/nio/ByteBuffer;)I
      67: i2l
      68: lstore        10
      70: aload         7
      72: iload         8
      74: iload         9
      76: iadd
      77: invokevirtual #61                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      80: pop
      81: lload         10
      83: lreturn
      84: astore        12
      86: aload         7
      88: iload         8
      90: iload         9
      92: iadd
      93: invokevirtual #61                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      96: pop
      97: aload         12
      99: athrow
     100: aload         4
     102: aload         7
     104: invokeinterface #97,  2           // InterfaceMethod org/xnio/channels/StreamSinkChannel.write:(Ljava/nio/ByteBuffer;)I
     109: i2l
     110: lstore        5
     112: lload         5
     114: iload         9
     116: i2l
     117: lcmp
     118: ifne          129
     121: aload_0
     122: invokespecial #73                 // Method moveToNext:()Lorg/xnio/channels/StreamSourceChannel;
     125: pop
     126: goto          132
     129: lload         5
     131: lreturn
     132: goto          145
     135: astore        8
     137: aload_0
     138: invokespecial #73                 // Method moveToNext:()Lorg/xnio/channels/StreamSourceChannel;
     141: pop
     142: lconst_0
     143: lstore        5
     145: aload_0
     146: getfield      #32                 // Field next:Lorg/xnio/channels/StreamSourceChannel;
     149: lload_1
     150: lload         5
     152: lsub
     153: aload_3
     154: aload         4
     156: invokeinterface #99,  5           // InterfaceMethod org/xnio/channels/StreamSourceChannel.transferTo:(JLjava/nio/ByteBuffer;Lorg/xnio/channels/StreamSinkChannel;)J
     161: lstore        8
     163: lload         8
     165: lconst_0
     166: lcmp
     167: ifle          178
     170: lload         5
     172: lload         8
     174: ladd
     175: goto          192
     178: lload         5
     180: lconst_0
     181: lcmp
     182: ifle          190
     185: lload         5
     187: goto          192
     190: lload         8
     192: lreturn
    Exception table:
       from    to  target type
          41    70    84   any
          84    86    84   any
           5    81   135   Class java/lang/IllegalStateException
          84   131   135   Class java/lang/IllegalStateException

  public long read(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #34                 // Field buffer:Lorg/xnio/Pooled;
       4: invokeinterface #48,  1           // InterfaceMethod org/xnio/Pooled.getResource:()Ljava/lang/Object;
       9: checkcast     #50                 // class java/nio/ByteBuffer
      12: astore        6
      14: aload_1
      15: iload_2
      16: iload_3
      17: aload         6
      19: invokestatic  #110                // Method org/xnio/Buffers.copy:([Ljava/nio/ByteBuffer;IILjava/nio/ByteBuffer;)I
      22: i2l
      23: lstore        4
      25: aload         6
      27: invokevirtual #114                // Method java/nio/ByteBuffer.hasRemaining:()Z
      30: ifeq          36
      33: lload         4
      35: lreturn
      36: aload_0
      37: getfield      #27                 // Field this$0:Lorg/xnio/channels/PushBackStreamChannel;
      40: aload_0
      41: getfield      #32                 // Field next:Lorg/xnio/channels/StreamSourceChannel;
      44: invokestatic  #118                // Method org/xnio/channels/PushBackStreamChannel.access$202:(Lorg/xnio/channels/PushBackStreamChannel;Lorg/xnio/channels/StreamSourceChannel;)Lorg/xnio/channels/StreamSourceChannel;
      47: astore        7
      49: aload_0
      50: getfield      #34                 // Field buffer:Lorg/xnio/Pooled;
      53: invokeinterface #121,  1          // InterfaceMethod org/xnio/Pooled.free:()V
      58: lload         4
      60: lconst_0
      61: lcmp
      62: ifle          80
      65: aload         7
      67: aload_0
      68: getfield      #27                 // Field this$0:Lorg/xnio/channels/PushBackStreamChannel;
      71: invokestatic  #125                // Method org/xnio/channels/PushBackStreamChannel.access$300:(Lorg/xnio/channels/PushBackStreamChannel;)Lorg/xnio/channels/StreamSourceChannel;
      74: if_acmpne     80
      77: lload         4
      79: lreturn
      80: goto          93
      83: astore        6
      85: aload_0
      86: invokespecial #73                 // Method moveToNext:()Lorg/xnio/channels/StreamSourceChannel;
      89: pop
      90: lconst_0
      91: lstore        4
      93: aload_0
      94: getfield      #32                 // Field next:Lorg/xnio/channels/StreamSourceChannel;
      97: aload_1
      98: iload_2
      99: iload_3
     100: invokeinterface #129,  4          // InterfaceMethod org/xnio/channels/StreamSourceChannel.read:([Ljava/nio/ByteBuffer;II)J
     105: lstore        6
     107: lload         6
     109: lconst_0
     110: lcmp
     111: ifle          122
     114: lload         6
     116: lload         4
     118: ladd
     119: goto          136
     122: lload         4
     124: lconst_0
     125: lcmp
     126: ifle          134
     129: lload         4
     131: goto          136
     134: lload         6
     136: lreturn
    Exception table:
       from    to  target type
           0    35    83   Class java/lang/IllegalStateException
          36    79    83   Class java/lang/IllegalStateException

  public long read(java.nio.ByteBuffer[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #134                // Method read:([Ljava/nio/ByteBuffer;II)J
       8: lreturn

  public int read(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #114                // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #34                 // Field buffer:Lorg/xnio/Pooled;
      13: invokeinterface #48,  1           // InterfaceMethod org/xnio/Pooled.getResource:()Ljava/lang/Object;
      18: checkcast     #50                 // class java/nio/ByteBuffer
      21: astore_3
      22: aload_1
      23: aload_3
      24: invokestatic  #137                // Method org/xnio/Buffers.copy:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I
      27: istore_2
      28: aload_3
      29: invokevirtual #114                // Method java/nio/ByteBuffer.hasRemaining:()Z
      32: ifeq          37
      35: iload_2
      36: ireturn
      37: aload_0
      38: invokespecial #73                 // Method moveToNext:()Lorg/xnio/channels/StreamSourceChannel;
      41: astore        4
      43: iload_2
      44: ifle          61
      47: aload         4
      49: aload_0
      50: getfield      #27                 // Field this$0:Lorg/xnio/channels/PushBackStreamChannel;
      53: invokestatic  #125                // Method org/xnio/channels/PushBackStreamChannel.access$300:(Lorg/xnio/channels/PushBackStreamChannel;)Lorg/xnio/channels/StreamSourceChannel;
      56: if_acmpne     61
      59: iload_2
      60: ireturn
      61: goto          72
      64: astore_3
      65: aload_0
      66: invokespecial #73                 // Method moveToNext:()Lorg/xnio/channels/StreamSourceChannel;
      69: pop
      70: iconst_0
      71: istore_2
      72: aload_0
      73: getfield      #32                 // Field next:Lorg/xnio/channels/StreamSourceChannel;
      76: aload_1
      77: invokeinterface #139,  2          // InterfaceMethod org/xnio/channels/StreamSourceChannel.read:(Ljava/nio/ByteBuffer;)I
      82: istore_3
      83: iload_3
      84: ifle          93
      87: iload_3
      88: iload_2
      89: iadd
      90: goto          102
      93: iload_2
      94: ifle          101
      97: iload_2
      98: goto          102
     101: iload_3
     102: ireturn
    Exception table:
       from    to  target type
           9    36    64   Class java/lang/IllegalStateException
          37    60    64   Class java/lang/IllegalStateException

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #34                 // Field buffer:Lorg/xnio/Pooled;
       4: invokeinterface #121,  1          // InterfaceMethod org/xnio/Pooled.free:()V
       9: aload_0
      10: getfield      #32                 // Field next:Lorg/xnio/channels/StreamSourceChannel;
      13: invokeinterface #143,  1          // InterfaceMethod org/xnio/channels/StreamSourceChannel.close:()V
      18: return

  public void resumeReads();
    Code:
       0: aload_0
       1: getfield      #27                 // Field this$0:Lorg/xnio/channels/PushBackStreamChannel;
       4: invokestatic  #125                // Method org/xnio/channels/PushBackStreamChannel.access$300:(Lorg/xnio/channels/PushBackStreamChannel;)Lorg/xnio/channels/StreamSourceChannel;
       7: invokeinterface #147,  1          // InterfaceMethod org/xnio/channels/StreamSourceChannel.wakeupReads:()V
      12: return

  public void shutdownReads() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #34                 // Field buffer:Lorg/xnio/Pooled;
       4: invokeinterface #121,  1          // InterfaceMethod org/xnio/Pooled.free:()V
       9: aload_0
      10: getfield      #32                 // Field next:Lorg/xnio/channels/StreamSourceChannel;
      13: invokeinterface #150,  1          // InterfaceMethod org/xnio/channels/StreamSourceChannel.shutdownReads:()V
      18: return

  public void awaitReadable() throws java.io.IOException;
    Code:
       0: return

  public void awaitReadable(long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: return

  public boolean isOpen();
    Code:
       0: new           #158                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #159                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public org.xnio.ChannelListener$Setter<? extends org.xnio.channels.StreamSourceChannel> getReadSetter();
    Code:
       0: new           #158                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #159                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public org.xnio.ChannelListener$Setter<? extends org.xnio.channels.StreamSourceChannel> getCloseSetter();
    Code:
       0: new           #158                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #159                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void suspendReads();
    Code:
       0: new           #158                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #159                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean isReadResumed();
    Code:
       0: new           #158                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #159                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void wakeupReads();
    Code:
       0: new           #158                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #159                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public org.xnio.XnioExecutor getReadThread();
    Code:
       0: new           #158                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #159                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public org.xnio.XnioIoThread getIoThread();
    Code:
       0: new           #158                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #159                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public org.xnio.XnioWorker getWorker();
    Code:
       0: new           #158                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #159                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean supportsOption(org.xnio.Option<?>);
    Code:
       0: new           #158                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #159                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public <T> T getOption(org.xnio.Option<T>) throws java.io.IOException;
    Code:
       0: new           #158                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #159                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public <T> T setOption(org.xnio.Option<T>, T) throws java.lang.IllegalArgumentException, java.io.IOException;
    Code:
       0: new           #158                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #159                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  private final org.xnio.channels.StreamSourceChannel moveToNext();
    Code:
       0: aload_0
       1: getfield      #34                 // Field buffer:Lorg/xnio/Pooled;
       4: invokeinterface #121,  1          // InterfaceMethod org/xnio/Pooled.free:()V
       9: aload_0
      10: getfield      #27                 // Field this$0:Lorg/xnio/channels/PushBackStreamChannel;
      13: aload_0
      14: getfield      #32                 // Field next:Lorg/xnio/channels/StreamSourceChannel;
      17: invokestatic  #118                // Method org/xnio/channels/PushBackStreamChannel.access$202:(Lorg/xnio/channels/PushBackStreamChannel;Lorg/xnio/channels/StreamSourceChannel;)Lorg/xnio/channels/StreamSourceChannel;
      20: areturn
}
