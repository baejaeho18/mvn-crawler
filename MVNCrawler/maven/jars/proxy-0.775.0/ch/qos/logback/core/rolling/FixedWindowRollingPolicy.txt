Compiled from "FixedWindowRollingPolicy.java"
public class ch.qos.logback.core.rolling.FixedWindowRollingPolicy extends ch.qos.logback.core.rolling.RollingPolicyBase {
  static final java.lang.String FNP_NOT_SET;

  static final java.lang.String PRUDENT_MODE_UNSUPPORTED;

  static final java.lang.String SEE_PARENT_FN_NOT_SET;

  int maxIndex;

  int minIndex;

  ch.qos.logback.core.rolling.helper.RenameUtil util;

  ch.qos.logback.core.rolling.helper.Compressor compressor;

  public static final java.lang.String ZIP_ENTRY_DATE_PATTERN;

  private static int MAX_WINDOW_SIZE;

  public ch.qos.logback.core.rolling.FixedWindowRollingPolicy();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method ch/qos/logback/core/rolling/RollingPolicyBase."<init>":()V
       4: aload_0
       5: new           #9                  // class ch/qos/logback/core/rolling/helper/RenameUtil
       8: dup
       9: invokespecial #11                 // Method ch/qos/logback/core/rolling/helper/RenameUtil."<init>":()V
      12: putfield      #12                 // Field util:Lch/qos/logback/core/rolling/helper/RenameUtil;
      15: aload_0
      16: iconst_1
      17: putfield      #18                 // Field minIndex:I
      20: aload_0
      21: bipush        7
      23: putfield      #22                 // Field maxIndex:I
      26: return

  public void start();
    Code:
       0: aload_0
       1: getfield      #12                 // Field util:Lch/qos/logback/core/rolling/helper/RenameUtil;
       4: aload_0
       5: getfield      #25                 // Field context:Lch/qos/logback/core/Context;
       8: invokevirtual #29                 // Method ch/qos/logback/core/rolling/helper/RenameUtil.setContext:(Lch/qos/logback/core/Context;)V
      11: aload_0
      12: getfield      #33                 // Field fileNamePatternStr:Ljava/lang/String;
      15: ifnull        44
      18: aload_0
      19: new           #37                 // class ch/qos/logback/core/rolling/helper/FileNamePattern
      22: dup
      23: aload_0
      24: getfield      #33                 // Field fileNamePatternStr:Ljava/lang/String;
      27: aload_0
      28: getfield      #25                 // Field context:Lch/qos/logback/core/Context;
      31: invokespecial #39                 // Method ch/qos/logback/core/rolling/helper/FileNamePattern."<init>":(Ljava/lang/String;Lch/qos/logback/core/Context;)V
      34: putfield      #42                 // Field fileNamePattern:Lch/qos/logback/core/rolling/helper/FileNamePattern;
      37: aload_0
      38: invokevirtual #46                 // Method determineCompressionMode:()V
      41: goto          66
      44: aload_0
      45: ldc           #49                 // String The \"FileNamePattern\" property must be set before using FixedWindowRollingPolicy.
      47: invokevirtual #51                 // Method addError:(Ljava/lang/String;)V
      50: aload_0
      51: ldc           #55                 // String See also http://logback.qos.ch/codes.html#tbr_fnp_not_set
      53: invokevirtual #51                 // Method addError:(Ljava/lang/String;)V
      56: new           #57                 // class java/lang/IllegalStateException
      59: dup
      60: ldc           #59                 // String The \"FileNamePattern\" property must be set before using FixedWindowRollingPolicy. See also http://logback.qos.ch/codes.html#tbr_fnp_not_set
      62: invokespecial #61                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      65: athrow
      66: aload_0
      67: invokevirtual #63                 // Method isParentPrudent:()Z
      70: ifeq          95
      73: aload_0
      74: ldc           #67                 // String Prudent mode is not supported with FixedWindowRollingPolicy.
      76: invokevirtual #51                 // Method addError:(Ljava/lang/String;)V
      79: aload_0
      80: ldc           #69                 // String See also http://logback.qos.ch/codes.html#tbr_fnp_prudent_unsupported
      82: invokevirtual #51                 // Method addError:(Ljava/lang/String;)V
      85: new           #57                 // class java/lang/IllegalStateException
      88: dup
      89: ldc           #71                 // String Prudent mode is not supported.
      91: invokespecial #61                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      94: athrow
      95: aload_0
      96: invokevirtual #73                 // Method getParentsRawFileProperty:()Ljava/lang/String;
      99: ifnonnull     124
     102: aload_0
     103: ldc           #77                 // String The File name property must be set before using this rolling policy.
     105: invokevirtual #51                 // Method addError:(Ljava/lang/String;)V
     108: aload_0
     109: ldc           #79                 // String Please refer to http://logback.qos.ch/codes.html#fwrp_parentFileName_not_set
     111: invokevirtual #51                 // Method addError:(Ljava/lang/String;)V
     114: new           #57                 // class java/lang/IllegalStateException
     117: dup
     118: ldc           #81                 // String The \"File\" option must be set.
     120: invokespecial #61                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     123: athrow
     124: aload_0
     125: getfield      #22                 // Field maxIndex:I
     128: aload_0
     129: getfield      #18                 // Field minIndex:I
     132: if_icmpge     166
     135: aload_0
     136: aload_0
     137: getfield      #22                 // Field maxIndex:I
     140: aload_0
     141: getfield      #18                 // Field minIndex:I
     144: invokedynamic #83,  0             // InvokeDynamic #0:makeConcatWithConstants:(II)Ljava/lang/String;
     149: invokevirtual #87                 // Method addWarn:(Ljava/lang/String;)V
     152: aload_0
     153: ldc           #90                 // String Setting maxIndex to equal minIndex.
     155: invokevirtual #87                 // Method addWarn:(Ljava/lang/String;)V
     158: aload_0
     159: aload_0
     160: getfield      #18                 // Field minIndex:I
     163: putfield      #22                 // Field maxIndex:I
     166: aload_0
     167: invokevirtual #92                 // Method getMaxWindowSize:()I
     170: istore_1
     171: aload_0
     172: getfield      #22                 // Field maxIndex:I
     175: aload_0
     176: getfield      #18                 // Field minIndex:I
     179: isub
     180: iload_1
     181: if_icmple     213
     184: aload_0
     185: ldc           #96                 // String Large window sizes are not allowed.
     187: invokevirtual #87                 // Method addWarn:(Ljava/lang/String;)V
     190: aload_0
     191: aload_0
     192: getfield      #18                 // Field minIndex:I
     195: iload_1
     196: iadd
     197: putfield      #22                 // Field maxIndex:I
     200: aload_0
     201: aload_0
     202: getfield      #22                 // Field maxIndex:I
     205: invokedynamic #98,  0             // InvokeDynamic #1:makeConcatWithConstants:(I)Ljava/lang/String;
     210: invokevirtual #87                 // Method addWarn:(Ljava/lang/String;)V
     213: aload_0
     214: getfield      #42                 // Field fileNamePattern:Lch/qos/logback/core/rolling/helper/FileNamePattern;
     217: invokevirtual #101                // Method ch/qos/logback/core/rolling/helper/FileNamePattern.getIntegerTokenConverter:()Lch/qos/logback/core/rolling/helper/IntegerTokenConverter;
     220: astore_2
     221: aload_2
     222: ifnonnull     245
     225: new           #57                 // class java/lang/IllegalStateException
     228: dup
     229: aload_0
     230: getfield      #42                 // Field fileNamePattern:Lch/qos/logback/core/rolling/helper/FileNamePattern;
     233: invokevirtual #105                // Method ch/qos/logback/core/rolling/helper/FileNamePattern.getPattern:()Ljava/lang/String;
     236: invokedynamic #108,  0            // InvokeDynamic #2:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
     241: invokespecial #61                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     244: athrow
     245: aload_0
     246: getfield      #111                // Field compressionMode:Lch/qos/logback/core/rolling/helper/CompressionMode;
     249: getstatic     #115                // Field ch/qos/logback/core/rolling/helper/CompressionMode.ZIP:Lch/qos/logback/core/rolling/helper/CompressionMode;
     252: if_acmpne     280
     255: aload_0
     256: aload_0
     257: getfield      #33                 // Field fileNamePatternStr:Ljava/lang/String;
     260: invokevirtual #120                // Method transformFileNamePatternFromInt2Date:(Ljava/lang/String;)Ljava/lang/String;
     263: astore_3
     264: aload_0
     265: new           #37                 // class ch/qos/logback/core/rolling/helper/FileNamePattern
     268: dup
     269: aload_3
     270: aload_0
     271: getfield      #25                 // Field context:Lch/qos/logback/core/Context;
     274: invokespecial #39                 // Method ch/qos/logback/core/rolling/helper/FileNamePattern."<init>":(Ljava/lang/String;Lch/qos/logback/core/Context;)V
     277: putfield      #123                // Field zipEntryFileNamePattern:Lch/qos/logback/core/rolling/helper/FileNamePattern;
     280: aload_0
     281: new           #126                // class ch/qos/logback/core/rolling/helper/Compressor
     284: dup
     285: aload_0
     286: getfield      #111                // Field compressionMode:Lch/qos/logback/core/rolling/helper/CompressionMode;
     289: invokespecial #128                // Method ch/qos/logback/core/rolling/helper/Compressor."<init>":(Lch/qos/logback/core/rolling/helper/CompressionMode;)V
     292: putfield      #131                // Field compressor:Lch/qos/logback/core/rolling/helper/Compressor;
     295: aload_0
     296: getfield      #131                // Field compressor:Lch/qos/logback/core/rolling/helper/Compressor;
     299: aload_0
     300: getfield      #25                 // Field context:Lch/qos/logback/core/Context;
     303: invokevirtual #135                // Method ch/qos/logback/core/rolling/helper/Compressor.setContext:(Lch/qos/logback/core/Context;)V
     306: aload_0
     307: invokespecial #136                // Method ch/qos/logback/core/rolling/RollingPolicyBase.start:()V
     310: return

  protected int getMaxWindowSize();
    Code:
       0: getstatic     #139                // Field MAX_WINDOW_SIZE:I
       3: ireturn

  private java.lang.String transformFileNamePatternFromInt2Date(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #142                // Method ch/qos/logback/core/rolling/helper/FileFilterUtil.slashify:(Ljava/lang/String;)Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: invokestatic  #147                // Method ch/qos/logback/core/rolling/helper/FileFilterUtil.afterLastSlash:(Ljava/lang/String;)Ljava/lang/String;
       9: astore_3
      10: aload_3
      11: ldc           #150                // String %i
      13: ldc           #152                // String %d{yyyy-MM-dd_HHmm}
      15: invokevirtual #154                // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      18: areturn

  public void rollover() throws ch.qos.logback.core.rolling.RolloverFailure;
    Code:
       0: aload_0
       1: getfield      #22                 // Field maxIndex:I
       4: iflt          243
       7: new           #160                // class java/io/File
      10: dup
      11: aload_0
      12: getfield      #42                 // Field fileNamePattern:Lch/qos/logback/core/rolling/helper/FileNamePattern;
      15: aload_0
      16: getfield      #22                 // Field maxIndex:I
      19: invokevirtual #162                // Method ch/qos/logback/core/rolling/helper/FileNamePattern.convertInt:(I)Ljava/lang/String;
      22: invokespecial #165                // Method java/io/File."<init>":(Ljava/lang/String;)V
      25: astore_1
      26: aload_1
      27: invokevirtual #166                // Method java/io/File.exists:()Z
      30: ifeq          38
      33: aload_1
      34: invokevirtual #169                // Method java/io/File.delete:()Z
      37: pop
      38: aload_0
      39: getfield      #22                 // Field maxIndex:I
      42: iconst_1
      43: isub
      44: istore_2
      45: iload_2
      46: aload_0
      47: getfield      #18                 // Field minIndex:I
      50: if_icmplt     117
      53: aload_0
      54: getfield      #42                 // Field fileNamePattern:Lch/qos/logback/core/rolling/helper/FileNamePattern;
      57: iload_2
      58: invokevirtual #162                // Method ch/qos/logback/core/rolling/helper/FileNamePattern.convertInt:(I)Ljava/lang/String;
      61: astore_3
      62: new           #160                // class java/io/File
      65: dup
      66: aload_3
      67: invokespecial #165                // Method java/io/File."<init>":(Ljava/lang/String;)V
      70: astore        4
      72: aload         4
      74: invokevirtual #166                // Method java/io/File.exists:()Z
      77: ifeq          101
      80: aload_0
      81: getfield      #12                 // Field util:Lch/qos/logback/core/rolling/helper/RenameUtil;
      84: aload_3
      85: aload_0
      86: getfield      #42                 // Field fileNamePattern:Lch/qos/logback/core/rolling/helper/FileNamePattern;
      89: iload_2
      90: iconst_1
      91: iadd
      92: invokevirtual #162                // Method ch/qos/logback/core/rolling/helper/FileNamePattern.convertInt:(I)Ljava/lang/String;
      95: invokevirtual #172                // Method ch/qos/logback/core/rolling/helper/RenameUtil.rename:(Ljava/lang/String;Ljava/lang/String;)V
      98: goto          111
     101: aload_0
     102: aload_3
     103: invokedynamic #176,  0            // InvokeDynamic #3:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
     108: invokevirtual #177                // Method addInfo:(Ljava/lang/String;)V
     111: iinc          2, -1
     114: goto          45
     117: getstatic     #180                // Field ch/qos/logback/core/rolling/FixedWindowRollingPolicy$1.$SwitchMap$ch$qos$logback$core$rolling$helper$CompressionMode:[I
     120: aload_0
     121: getfield      #111                // Field compressionMode:Lch/qos/logback/core/rolling/helper/CompressionMode;
     124: invokevirtual #186                // Method ch/qos/logback/core/rolling/helper/CompressionMode.ordinal:()I
     127: iaload
     128: tableswitch   { // 1 to 3
                     1: 156
                     2: 181
                     3: 207
               default: 243
          }
     156: aload_0
     157: getfield      #12                 // Field util:Lch/qos/logback/core/rolling/helper/RenameUtil;
     160: aload_0
     161: invokevirtual #189                // Method getActiveFileName:()Ljava/lang/String;
     164: aload_0
     165: getfield      #42                 // Field fileNamePattern:Lch/qos/logback/core/rolling/helper/FileNamePattern;
     168: aload_0
     169: getfield      #18                 // Field minIndex:I
     172: invokevirtual #162                // Method ch/qos/logback/core/rolling/helper/FileNamePattern.convertInt:(I)Ljava/lang/String;
     175: invokevirtual #172                // Method ch/qos/logback/core/rolling/helper/RenameUtil.rename:(Ljava/lang/String;Ljava/lang/String;)V
     178: goto          243
     181: aload_0
     182: getfield      #131                // Field compressor:Lch/qos/logback/core/rolling/helper/Compressor;
     185: aload_0
     186: invokevirtual #189                // Method getActiveFileName:()Ljava/lang/String;
     189: aload_0
     190: getfield      #42                 // Field fileNamePattern:Lch/qos/logback/core/rolling/helper/FileNamePattern;
     193: aload_0
     194: getfield      #18                 // Field minIndex:I
     197: invokevirtual #162                // Method ch/qos/logback/core/rolling/helper/FileNamePattern.convertInt:(I)Ljava/lang/String;
     200: aconst_null
     201: invokevirtual #192                // Method ch/qos/logback/core/rolling/helper/Compressor.compress:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     204: goto          243
     207: aload_0
     208: getfield      #131                // Field compressor:Lch/qos/logback/core/rolling/helper/Compressor;
     211: aload_0
     212: invokevirtual #189                // Method getActiveFileName:()Ljava/lang/String;
     215: aload_0
     216: getfield      #42                 // Field fileNamePattern:Lch/qos/logback/core/rolling/helper/FileNamePattern;
     219: aload_0
     220: getfield      #18                 // Field minIndex:I
     223: invokevirtual #162                // Method ch/qos/logback/core/rolling/helper/FileNamePattern.convertInt:(I)Ljava/lang/String;
     226: aload_0
     227: getfield      #123                // Field zipEntryFileNamePattern:Lch/qos/logback/core/rolling/helper/FileNamePattern;
     230: new           #196                // class java/util/Date
     233: dup
     234: invokespecial #198                // Method java/util/Date."<init>":()V
     237: invokevirtual #199                // Method ch/qos/logback/core/rolling/helper/FileNamePattern.convert:(Ljava/lang/Object;)Ljava/lang/String;
     240: invokevirtual #192                // Method ch/qos/logback/core/rolling/helper/Compressor.compress:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     243: return

  public java.lang.String getActiveFileName();
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method getParentsRawFileProperty:()Ljava/lang/String;
       4: areturn

  public int getMaxIndex();
    Code:
       0: aload_0
       1: getfield      #22                 // Field maxIndex:I
       4: ireturn

  public int getMinIndex();
    Code:
       0: aload_0
       1: getfield      #18                 // Field minIndex:I
       4: ireturn

  public void setMaxIndex(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #22                 // Field maxIndex:I
       5: return

  public void setMinIndex(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #18                 // Field minIndex:I
       5: return

  static {};
    Code:
       0: bipush        20
       2: putstatic     #139                // Field MAX_WINDOW_SIZE:I
       5: return
}
