Compiled from "SizeBasedTriggeringPolicy.java"
public class ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy<E> extends ch.qos.logback.core.rolling.TriggeringPolicyBase<E> {
  public static final java.lang.String SEE_SIZE_FORMAT;

  public static final long DEFAULT_MAX_FILE_SIZE;

  ch.qos.logback.core.util.FileSize maxFileSize;

  ch.qos.logback.core.util.InvocationGate invocationGate;

  java.lang.Integer checkIncrement;

  public ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method ch/qos/logback/core/rolling/TriggeringPolicyBase."<init>":()V
       4: aload_0
       5: new           #7                  // class ch/qos/logback/core/util/FileSize
       8: dup
       9: ldc2_w        #11                 // long 10485760l
      12: invokespecial #13                 // Method ch/qos/logback/core/util/FileSize."<init>":(J)V
      15: putfield      #16                 // Field maxFileSize:Lch/qos/logback/core/util/FileSize;
      18: aload_0
      19: new           #20                 // class ch/qos/logback/core/util/SimpleInvocationGate
      22: dup
      23: invokespecial #22                 // Method ch/qos/logback/core/util/SimpleInvocationGate."<init>":()V
      26: putfield      #23                 // Field invocationGate:Lch/qos/logback/core/util/InvocationGate;
      29: aload_0
      30: aconst_null
      31: putfield      #27                 // Field checkIncrement:Ljava/lang/Integer;
      34: return

  public void start();
    Code:
       0: aload_0
       1: getfield      #27                 // Field checkIncrement:Ljava/lang/Integer;
       4: ifnull        25
       7: aload_0
       8: new           #20                 // class ch/qos/logback/core/util/SimpleInvocationGate
      11: dup
      12: aload_0
      13: getfield      #27                 // Field checkIncrement:Ljava/lang/Integer;
      16: invokevirtual #31                 // Method java/lang/Integer.intValue:()I
      19: invokespecial #37                 // Method ch/qos/logback/core/util/SimpleInvocationGate."<init>":(I)V
      22: putfield      #23                 // Field invocationGate:Lch/qos/logback/core/util/InvocationGate;
      25: aload_0
      26: invokespecial #40                 // Method ch/qos/logback/core/rolling/TriggeringPolicyBase.start:()V
      29: return

  public boolean isTriggeringEvent(java.io.File, E);
    Code:
       0: invokestatic  #43                 // Method java/lang/System.currentTimeMillis:()J
       3: lstore_3
       4: aload_0
       5: getfield      #23                 // Field invocationGate:Lch/qos/logback/core/util/InvocationGate;
       8: lload_3
       9: invokeinterface #49,  3           // InterfaceMethod ch/qos/logback/core/util/InvocationGate.isTooSoon:(J)Z
      14: ifeq          19
      17: iconst_0
      18: ireturn
      19: aload_1
      20: invokevirtual #55                 // Method java/io/File.length:()J
      23: aload_0
      24: getfield      #16                 // Field maxFileSize:Lch/qos/logback/core/util/FileSize;
      27: invokevirtual #60                 // Method ch/qos/logback/core/util/FileSize.getSize:()J
      30: lcmp
      31: iflt          38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: ireturn

  public ch.qos.logback.core.util.FileSize getMaxFileSize();
    Code:
       0: aload_0
       1: getfield      #16                 // Field maxFileSize:Lch/qos/logback/core/util/FileSize;
       4: areturn

  public void setMaxFileSize(ch.qos.logback.core.util.FileSize);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field maxFileSize:Lch/qos/logback/core/util/FileSize;
       5: return

  public java.lang.Integer getCheckIncrement();
    Code:
       0: aload_0
       1: getfield      #27                 // Field checkIncrement:Ljava/lang/Integer;
       4: areturn

  public void setCheckIncrement(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #27                 // Field checkIncrement:Ljava/lang/Integer;
       5: return
}
