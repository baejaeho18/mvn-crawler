Compiled from "AbstractServerSocketAppender.java"
public abstract class ch.qos.logback.core.net.server.AbstractServerSocketAppender<E> extends ch.qos.logback.core.AppenderBase<E> {
  public static final int DEFAULT_BACKLOG;

  public static final int DEFAULT_CLIENT_QUEUE_SIZE;

  private int port;

  private int backlog;

  private int clientQueueSize;

  private java.lang.String address;

  private ch.qos.logback.core.net.server.ServerRunner<ch.qos.logback.core.net.server.RemoteReceiverClient> runner;

  public ch.qos.logback.core.net.server.AbstractServerSocketAppender();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method ch/qos/logback/core/AppenderBase."<init>":()V
       4: aload_0
       5: sipush        4560
       8: putfield      #9                  // Field port:I
      11: aload_0
      12: bipush        50
      14: putfield      #15                 // Field backlog:I
      17: aload_0
      18: bipush        100
      20: putfield      #18                 // Field clientQueueSize:I
      23: return

  public void start();
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method isStarted:()Z
       4: ifeq          8
       7: return
       8: aload_0
       9: invokevirtual #25                 // Method getServerSocketFactory:()Ljavax/net/ServerSocketFactory;
      12: aload_0
      13: invokevirtual #29                 // Method getPort:()I
      16: aload_0
      17: invokevirtual #33                 // Method getBacklog:()I
      20: aload_0
      21: invokevirtual #36                 // Method getInetAddress:()Ljava/net/InetAddress;
      24: invokevirtual #40                 // Method javax/net/ServerSocketFactory.createServerSocket:(IILjava/net/InetAddress;)Ljava/net/ServerSocket;
      27: astore_1
      28: aload_0
      29: aload_1
      30: invokevirtual #46                 // Method createServerListener:(Ljava/net/ServerSocket;)Lch/qos/logback/core/net/server/ServerListener;
      33: astore_2
      34: aload_0
      35: aload_0
      36: aload_2
      37: aload_0
      38: invokevirtual #50                 // Method getContext:()Lch/qos/logback/core/Context;
      41: invokeinterface #54,  1           // InterfaceMethod ch/qos/logback/core/Context.getExecutorService:()Ljava/util/concurrent/ExecutorService;
      46: invokevirtual #60                 // Method createServerRunner:(Lch/qos/logback/core/net/server/ServerListener;Ljava/util/concurrent/Executor;)Lch/qos/logback/core/net/server/ServerRunner;
      49: putfield      #64                 // Field runner:Lch/qos/logback/core/net/server/ServerRunner;
      52: aload_0
      53: getfield      #64                 // Field runner:Lch/qos/logback/core/net/server/ServerRunner;
      56: aload_0
      57: invokevirtual #50                 // Method getContext:()Lch/qos/logback/core/Context;
      60: invokeinterface #68,  2           // InterfaceMethod ch/qos/logback/core/net/server/ServerRunner.setContext:(Lch/qos/logback/core/Context;)V
      65: aload_0
      66: invokevirtual #50                 // Method getContext:()Lch/qos/logback/core/Context;
      69: invokeinterface #54,  1           // InterfaceMethod ch/qos/logback/core/Context.getExecutorService:()Ljava/util/concurrent/ExecutorService;
      74: aload_0
      75: getfield      #64                 // Field runner:Lch/qos/logback/core/net/server/ServerRunner;
      78: invokeinterface #74,  2           // InterfaceMethod java/util/concurrent/ExecutorService.execute:(Ljava/lang/Runnable;)V
      83: aload_0
      84: invokespecial #80                 // Method ch/qos/logback/core/AppenderBase.start:()V
      87: goto          105
      90: astore_1
      91: aload_0
      92: aload_1
      93: invokestatic  #85                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      96: invokedynamic #91,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
     101: aload_1
     102: invokevirtual #95                 // Method addError:(Ljava/lang/String;Ljava/lang/Throwable;)V
     105: return
    Exception table:
       from    to  target type
           8    87    90   Class java/lang/Exception

  protected ch.qos.logback.core.net.server.ServerListener<ch.qos.logback.core.net.server.RemoteReceiverClient> createServerListener(java.net.ServerSocket);
    Code:
       0: new           #99                 // class ch/qos/logback/core/net/server/RemoteReceiverServerListener
       3: dup
       4: aload_1
       5: invokespecial #101                // Method ch/qos/logback/core/net/server/RemoteReceiverServerListener."<init>":(Ljava/net/ServerSocket;)V
       8: areturn

  protected ch.qos.logback.core.net.server.ServerRunner<ch.qos.logback.core.net.server.RemoteReceiverClient> createServerRunner(ch.qos.logback.core.net.server.ServerListener<ch.qos.logback.core.net.server.RemoteReceiverClient>, java.util.concurrent.Executor);
    Code:
       0: new           #104                // class ch/qos/logback/core/net/server/RemoteReceiverServerRunner
       3: dup
       4: aload_1
       5: aload_2
       6: aload_0
       7: invokevirtual #106                // Method getClientQueueSize:()I
      10: invokespecial #109                // Method ch/qos/logback/core/net/server/RemoteReceiverServerRunner."<init>":(Lch/qos/logback/core/net/server/ServerListener;Ljava/util/concurrent/Executor;I)V
      13: areturn

  public void stop();
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method isStarted:()Z
       4: ifne          8
       7: return
       8: aload_0
       9: getfield      #64                 // Field runner:Lch/qos/logback/core/net/server/ServerRunner;
      12: invokeinterface #112,  1          // InterfaceMethod ch/qos/logback/core/net/server/ServerRunner.stop:()V
      17: aload_0
      18: invokespecial #115                // Method ch/qos/logback/core/AppenderBase.stop:()V
      21: goto          39
      24: astore_1
      25: aload_0
      26: aload_1
      27: invokestatic  #85                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      30: invokedynamic #118,  0            // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      35: aload_1
      36: invokevirtual #95                 // Method addError:(Ljava/lang/String;Ljava/lang/Throwable;)V
      39: return
    Exception table:
       from    to  target type
           8    21    24   Class java/io/IOException

  protected void append(E);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: aload_1
       7: invokevirtual #119                // Method postProcessEvent:(Ljava/lang/Object;)V
      10: aload_0
      11: invokevirtual #123                // Method getPST:()Lch/qos/logback/core/spi/PreSerializationTransformer;
      14: aload_1
      15: invokeinterface #127,  2          // InterfaceMethod ch/qos/logback/core/spi/PreSerializationTransformer.transform:(Ljava/lang/Object;)Ljava/io/Serializable;
      20: astore_2
      21: aload_0
      22: getfield      #64                 // Field runner:Lch/qos/logback/core/net/server/ServerRunner;
      25: new           #133                // class ch/qos/logback/core/net/server/AbstractServerSocketAppender$1
      28: dup
      29: aload_0
      30: aload_2
      31: invokespecial #135                // Method ch/qos/logback/core/net/server/AbstractServerSocketAppender$1."<init>":(Lch/qos/logback/core/net/server/AbstractServerSocketAppender;Ljava/io/Serializable;)V
      34: invokeinterface #138,  2          // InterfaceMethod ch/qos/logback/core/net/server/ServerRunner.accept:(Lch/qos/logback/core/net/server/ClientVisitor;)V
      39: return

  protected abstract void postProcessEvent(E);

  protected abstract ch.qos.logback.core.spi.PreSerializationTransformer<E> getPST();

  protected javax.net.ServerSocketFactory getServerSocketFactory() throws java.lang.Exception;
    Code:
       0: invokestatic  #142                // Method javax/net/ServerSocketFactory.getDefault:()Ljavax/net/ServerSocketFactory;
       3: areturn

  protected java.net.InetAddress getInetAddress() throws java.net.UnknownHostException;
    Code:
       0: aload_0
       1: invokevirtual #145                // Method getAddress:()Ljava/lang/String;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: invokevirtual #145                // Method getAddress:()Ljava/lang/String;
      13: invokestatic  #149                // Method java/net/InetAddress.getByName:(Ljava/lang/String;)Ljava/net/InetAddress;
      16: areturn

  public int getPort();
    Code:
       0: aload_0
       1: getfield      #9                  // Field port:I
       4: ireturn

  public void setPort(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field port:I
       5: return

  public int getBacklog();
    Code:
       0: aload_0
       1: getfield      #15                 // Field backlog:I
       4: ireturn

  public void setBacklog(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #15                 // Field backlog:I
       5: return

  public java.lang.String getAddress();
    Code:
       0: aload_0
       1: getfield      #155                // Field address:Ljava/lang/String;
       4: areturn

  public void setAddress(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #155                // Field address:Ljava/lang/String;
       5: return

  public int getClientQueueSize();
    Code:
       0: aload_0
       1: getfield      #18                 // Field clientQueueSize:I
       4: ireturn

  public void setClientQueueSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #18                 // Field clientQueueSize:I
       5: return
}
