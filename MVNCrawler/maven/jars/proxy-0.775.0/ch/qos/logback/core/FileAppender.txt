Compiled from "FileAppender.java"
public class ch.qos.logback.core.FileAppender<E> extends ch.qos.logback.core.OutputStreamAppender<E> {
  public static final long DEFAULT_BUFFER_SIZE;

  protected static java.lang.String COLLISION_WITH_EARLIER_APPENDER_URL;

  protected boolean append;

  protected java.lang.String fileName;

  private boolean prudent;

  private ch.qos.logback.core.util.FileSize bufferSize;

  public ch.qos.logback.core.FileAppender();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method ch/qos/logback/core/OutputStreamAppender."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #9                  // Field append:Z
       9: aload_0
      10: aconst_null
      11: putfield      #15                 // Field fileName:Ljava/lang/String;
      14: aload_0
      15: iconst_0
      16: putfield      #19                 // Field prudent:Z
      19: aload_0
      20: new           #22                 // class ch/qos/logback/core/util/FileSize
      23: dup
      24: ldc2_w        #24                 // long 8192l
      27: invokespecial #26                 // Method ch/qos/logback/core/util/FileSize."<init>":(J)V
      30: putfield      #29                 // Field bufferSize:Lch/qos/logback/core/util/FileSize;
      33: return

  public void setFile(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: aload_0
       5: aload_1
       6: putfield      #15                 // Field fileName:Ljava/lang/String;
       9: goto          20
      12: aload_0
      13: aload_1
      14: invokevirtual #33                 // Method java/lang/String.trim:()Ljava/lang/String;
      17: putfield      #15                 // Field fileName:Ljava/lang/String;
      20: return

  public boolean isAppend();
    Code:
       0: aload_0
       1: getfield      #9                  // Field append:Z
       4: ireturn

  public final java.lang.String rawFileProperty();
    Code:
       0: aload_0
       1: getfield      #15                 // Field fileName:Ljava/lang/String;
       4: areturn

  public java.lang.String getFile();
    Code:
       0: aload_0
       1: getfield      #15                 // Field fileName:Ljava/lang/String;
       4: areturn

  public void start();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: invokevirtual #39                 // Method getFile:()Ljava/lang/String;
       6: ifnull        114
       9: aload_0
      10: aload_0
      11: getfield      #15                 // Field fileName:Ljava/lang/String;
      14: invokedynamic #42,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      19: invokevirtual #46                 // Method addInfo:(Ljava/lang/String;)V
      22: aload_0
      23: getfield      #19                 // Field prudent:Z
      26: ifeq          47
      29: aload_0
      30: invokevirtual #50                 // Method isAppend:()Z
      33: ifne          47
      36: aload_0
      37: iconst_1
      38: invokevirtual #54                 // Method setAppend:(Z)V
      41: aload_0
      42: ldc           #58                 // String Setting \"Append\" property to true on account of \"Prudent\" mode
      44: invokevirtual #60                 // Method addWarn:(Ljava/lang/String;)V
      47: aload_0
      48: invokevirtual #63                 // Method checkForFileCollisionInPreviousFileAppenders:()Z
      51: ifeq          78
      54: aload_0
      55: ldc           #66                 // String Collisions detected with FileAppender/RollingAppender instances defined earlier. Aborting.
      57: invokevirtual #68                 // Method addError:(Ljava/lang/String;)V
      60: aload_0
      61: getstatic     #71                 // Field COLLISION_WITH_EARLIER_APPENDER_URL:Ljava/lang/String;
      64: invokedynamic #74,  0             // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      69: invokevirtual #68                 // Method addError:(Ljava/lang/String;)V
      72: iinc          1, 1
      75: goto          130
      78: aload_0
      79: aload_0
      80: invokevirtual #39                 // Method getFile:()Ljava/lang/String;
      83: invokevirtual #75                 // Method openFile:(Ljava/lang/String;)V
      86: goto          130
      89: astore_2
      90: iinc          1, 1
      93: aload_0
      94: aload_0
      95: getfield      #15                 // Field fileName:Ljava/lang/String;
      98: aload_0
      99: getfield      #9                  // Field append:Z
     102: invokedynamic #80,  0             // InvokeDynamic #2:makeConcatWithConstants:(Ljava/lang/String;Z)Ljava/lang/String;
     107: aload_2
     108: invokevirtual #83                 // Method addError:(Ljava/lang/String;Ljava/lang/Throwable;)V
     111: goto          130
     114: iinc          1, 1
     117: aload_0
     118: aload_0
     119: getfield      #86                 // Field name:Ljava/lang/String;
     122: invokedynamic #89,  0             // InvokeDynamic #3:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
     127: invokevirtual #68                 // Method addError:(Ljava/lang/String;)V
     130: iload_1
     131: ifne          138
     134: aload_0
     135: invokespecial #90                 // Method ch/qos/logback/core/OutputStreamAppender.start:()V
     138: return
    Exception table:
       from    to  target type
          78    86    89   Class java/io/IOException

  public void stop();
    Code:
       0: aload_0
       1: invokevirtual #93                 // Method isStarted:()Z
       4: ifne          8
       7: return
       8: aload_0
       9: invokespecial #96                 // Method ch/qos/logback/core/OutputStreamAppender.stop:()V
      12: aload_0
      13: getfield      #99                 // Field context:Lch/qos/logback/core/Context;
      16: invokestatic  #103                // Method ch/qos/logback/core/util/ContextUtil.getFilenameCollisionMap:(Lch/qos/logback/core/Context;)Ljava/util/Map;
      19: astore_1
      20: aload_1
      21: ifnull        31
      24: aload_0
      25: invokevirtual #109                // Method getName:()Ljava/lang/String;
      28: ifnonnull     32
      31: return
      32: aload_1
      33: aload_0
      34: invokevirtual #109                // Method getName:()Ljava/lang/String;
      37: invokeinterface #112,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      42: pop
      43: return

  protected boolean checkForFileCollisionInPreviousFileAppenders();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #15                 // Field fileName:Ljava/lang/String;
       6: ifnonnull     11
       9: iconst_0
      10: ireturn
      11: aload_0
      12: getfield      #99                 // Field context:Lch/qos/logback/core/Context;
      15: ldc           #118                // String FA_FILENAMES_MAP
      17: invokeinterface #120,  2          // InterfaceMethod ch/qos/logback/core/Context.getObject:(Ljava/lang/String;)Ljava/lang/Object;
      22: checkcast     #113                // class java/util/Map
      25: astore_2
      26: aload_2
      27: ifnonnull     32
      30: iload_1
      31: ireturn
      32: aload_2
      33: invokeinterface #126,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      38: invokeinterface #130,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      43: astore_3
      44: aload_3
      45: invokeinterface #136,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      50: ifeq          112
      53: aload_3
      54: invokeinterface #141,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      59: checkcast     #145                // class java/util/Map$Entry
      62: astore        4
      64: aload_0
      65: getfield      #15                 // Field fileName:Ljava/lang/String;
      68: aload         4
      70: invokeinterface #147,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      75: invokevirtual #150                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      78: ifeq          109
      81: aload_0
      82: ldc           #154                // String File
      84: aload         4
      86: invokeinterface #147,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      91: checkcast     #34                 // class java/lang/String
      94: aload         4
      96: invokeinterface #156,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     101: checkcast     #34                 // class java/lang/String
     104: invokevirtual #159                // Method addErrorForCollision:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     107: iconst_1
     108: istore_1
     109: goto          44
     112: aload_0
     113: getfield      #86                 // Field name:Ljava/lang/String;
     116: ifnull        134
     119: aload_2
     120: aload_0
     121: invokevirtual #109                // Method getName:()Ljava/lang/String;
     124: aload_0
     125: getfield      #15                 // Field fileName:Ljava/lang/String;
     128: invokeinterface #163,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     133: pop
     134: iload_1
     135: ireturn

  protected void addErrorForCollision(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokedynamic #167,  0            // InvokeDynamic #4:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       9: invokevirtual #68                 // Method addError:(Ljava/lang/String;)V
      12: return

  public void openFile(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #170                // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #174                // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: new           #178                // class java/io/File
      10: dup
      11: aload_1
      12: invokespecial #180                // Method java/io/File."<init>":(Ljava/lang/String;)V
      15: astore_2
      16: aload_2
      17: invokestatic  #182                // Method ch/qos/logback/core/util/FileUtil.createMissingParentDirectories:(Ljava/io/File;)Z
      20: istore_3
      21: iload_3
      22: ifne          38
      25: aload_0
      26: aload_2
      27: invokevirtual #188                // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      30: invokedynamic #191,  0            // InvokeDynamic #5:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      35: invokevirtual #68                 // Method addError:(Ljava/lang/String;)V
      38: new           #192                // class ch/qos/logback/core/recovery/ResilientFileOutputStream
      41: dup
      42: aload_2
      43: aload_0
      44: getfield      #9                  // Field append:Z
      47: aload_0
      48: getfield      #29                 // Field bufferSize:Lch/qos/logback/core/util/FileSize;
      51: invokevirtual #194                // Method ch/qos/logback/core/util/FileSize.getSize:()J
      54: invokespecial #198                // Method ch/qos/logback/core/recovery/ResilientFileOutputStream."<init>":(Ljava/io/File;ZJ)V
      57: astore        4
      59: aload         4
      61: aload_0
      62: getfield      #99                 // Field context:Lch/qos/logback/core/Context;
      65: invokevirtual #201                // Method ch/qos/logback/core/recovery/ResilientFileOutputStream.setContext:(Lch/qos/logback/core/Context;)V
      68: aload_0
      69: aload         4
      71: invokevirtual #205                // Method setOutputStream:(Ljava/io/OutputStream;)V
      74: aload_0
      75: getfield      #170                // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      78: invokevirtual #209                // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      81: goto          96
      84: astore        5
      86: aload_0
      87: getfield      #170                // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      90: invokevirtual #209                // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      93: aload         5
      95: athrow
      96: return
    Exception table:
       from    to  target type
           7    74    84   any
          84    86    84   any

  public boolean isPrudent();
    Code:
       0: aload_0
       1: getfield      #19                 // Field prudent:Z
       4: ireturn

  public void setPrudent(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #19                 // Field prudent:Z
       5: return

  public void setAppend(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field append:Z
       5: return

  public void setBufferSize(ch.qos.logback.core.util.FileSize);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #212                // Method ch/qos/logback/core/util/FileSize.toString:()Ljava/lang/String;
       5: invokedynamic #215,  0            // InvokeDynamic #6:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      10: invokevirtual #46                 // Method addInfo:(Ljava/lang/String;)V
      13: aload_0
      14: aload_1
      15: putfield      #29                 // Field bufferSize:Lch/qos/logback/core/util/FileSize;
      18: return

  private void safeWrite(E) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #216                // Method getOutputStream:()Ljava/io/OutputStream;
       4: checkcast     #192                // class ch/qos/logback/core/recovery/ResilientFileOutputStream
       7: astore_2
       8: aload_2
       9: invokevirtual #220                // Method ch/qos/logback/core/recovery/ResilientFileOutputStream.getChannel:()Ljava/nio/channels/FileChannel;
      12: astore_3
      13: aload_3
      14: ifnonnull     18
      17: return
      18: invokestatic  #224                // Method java/lang/Thread.interrupted:()Z
      21: istore        4
      23: aconst_null
      24: astore        5
      26: aload_3
      27: invokevirtual #229                // Method java/nio/channels/FileChannel.lock:()Ljava/nio/channels/FileLock;
      30: astore        5
      32: aload_3
      33: invokevirtual #234                // Method java/nio/channels/FileChannel.position:()J
      36: lstore        6
      38: aload_3
      39: invokevirtual #237                // Method java/nio/channels/FileChannel.size:()J
      42: lstore        8
      44: lload         8
      46: lload         6
      48: lcmp
      49: ifeq          59
      52: aload_3
      53: lload         8
      55: invokevirtual #240                // Method java/nio/channels/FileChannel.position:(J)Ljava/nio/channels/FileChannel;
      58: pop
      59: aload_0
      60: aload_1
      61: invokespecial #243                // Method ch/qos/logback/core/OutputStreamAppender.writeOut:(Ljava/lang/Object;)V
      64: aload         5
      66: ifnull        82
      69: aload         5
      71: invokevirtual #247                // Method java/nio/channels/FileLock.isValid:()Z
      74: ifeq          82
      77: aload         5
      79: invokevirtual #252                // Method java/nio/channels/FileLock.release:()V
      82: iload         4
      84: ifeq          170
      87: invokestatic  #255                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      90: invokevirtual #259                // Method java/lang/Thread.interrupt:()V
      93: goto          170
      96: astore        6
      98: aload_2
      99: aload         6
     101: invokevirtual #262                // Method ch/qos/logback/core/recovery/ResilientFileOutputStream.postIOFailure:(Ljava/io/IOException;)V
     104: aload         5
     106: ifnull        122
     109: aload         5
     111: invokevirtual #247                // Method java/nio/channels/FileLock.isValid:()Z
     114: ifeq          122
     117: aload         5
     119: invokevirtual #252                // Method java/nio/channels/FileLock.release:()V
     122: iload         4
     124: ifeq          170
     127: invokestatic  #255                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     130: invokevirtual #259                // Method java/lang/Thread.interrupt:()V
     133: goto          170
     136: astore        10
     138: aload         5
     140: ifnull        156
     143: aload         5
     145: invokevirtual #247                // Method java/nio/channels/FileLock.isValid:()Z
     148: ifeq          156
     151: aload         5
     153: invokevirtual #252                // Method java/nio/channels/FileLock.release:()V
     156: iload         4
     158: ifeq          167
     161: invokestatic  #255                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     164: invokevirtual #259                // Method java/lang/Thread.interrupt:()V
     167: aload         10
     169: athrow
     170: return
    Exception table:
       from    to  target type
          26    64    96   Class java/io/IOException
          26    64   136   any
          96   104   136   any
         136   138   136   any

  protected void writeOut(E) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #19                 // Field prudent:Z
       4: ifeq          15
       7: aload_0
       8: aload_1
       9: invokevirtual #266                // Method safeWrite:(Ljava/lang/Object;)V
      12: goto          20
      15: aload_0
      16: aload_1
      17: invokespecial #243                // Method ch/qos/logback/core/OutputStreamAppender.writeOut:(Ljava/lang/Object;)V
      20: return

  static {};
    Code:
       0: ldc_w         #269                // String http://logback.qos.ch/codes.html#earlier_fa_collision
       3: putstatic     #71                 // Field COLLISION_WITH_EARLIER_APPENDER_URL:Ljava/lang/String;
       6: return
}
