Compiled from "ContextBase.java"
public class ch.qos.logback.core.ContextBase implements ch.qos.logback.core.Context,ch.qos.logback.core.spi.LifeCycle {
  private long birthTime;

  private java.lang.String name;

  private ch.qos.logback.core.status.StatusManager sm;

  java.util.Map<java.lang.String, java.lang.String> propertyMap;

  java.util.Map<java.lang.String, java.lang.Object> objectMap;

  ch.qos.logback.core.spi.LogbackLock configurationLock;

  private final java.util.List<ch.qos.logback.core.spi.ConfigurationEventListener> configurationEventListenerList;

  private java.util.concurrent.ScheduledExecutorService scheduledExecutorService;

  private java.util.concurrent.ThreadPoolExecutor threadPoolExecutor;

  protected java.util.List<java.util.concurrent.ScheduledFuture<?>> scheduledFutures;

  private ch.qos.logback.core.LifeCycleManager lifeCycleManager;

  private ch.qos.logback.core.spi.SequenceNumberGenerator sequenceNumberGenerator;

  private boolean started;

  public ch.qos.logback.core.ContextBase();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #9                  // Method java/lang/System.currentTimeMillis:()J
       8: putfield      #15                 // Field birthTime:J
      11: aload_0
      12: new           #21                 // class ch/qos/logback/core/BasicStatusManager
      15: dup
      16: invokespecial #23                 // Method ch/qos/logback/core/BasicStatusManager."<init>":()V
      19: putfield      #24                 // Field sm:Lch/qos/logback/core/status/StatusManager;
      22: aload_0
      23: new           #28                 // class java/util/HashMap
      26: dup
      27: invokespecial #30                 // Method java/util/HashMap."<init>":()V
      30: putfield      #31                 // Field propertyMap:Ljava/util/Map;
      33: aload_0
      34: new           #35                 // class java/util/concurrent/ConcurrentHashMap
      37: dup
      38: invokespecial #37                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      41: putfield      #38                 // Field objectMap:Ljava/util/Map;
      44: aload_0
      45: new           #41                 // class ch/qos/logback/core/spi/LogbackLock
      48: dup
      49: invokespecial #43                 // Method ch/qos/logback/core/spi/LogbackLock."<init>":()V
      52: putfield      #44                 // Field configurationLock:Lch/qos/logback/core/spi/LogbackLock;
      55: aload_0
      56: new           #48                 // class java/util/concurrent/CopyOnWriteArrayList
      59: dup
      60: invokespecial #50                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      63: putfield      #51                 // Field configurationEventListenerList:Ljava/util/List;
      66: aload_0
      67: new           #55                 // class java/util/ArrayList
      70: dup
      71: iconst_1
      72: invokespecial #57                 // Method java/util/ArrayList."<init>":(I)V
      75: putfield      #60                 // Field scheduledFutures:Ljava/util/List;
      78: aload_0
      79: invokevirtual #63                 // Method initCollisionMaps:()V
      82: return

  public ch.qos.logback.core.status.StatusManager getStatusManager();
    Code:
       0: aload_0
       1: getfield      #24                 // Field sm:Lch/qos/logback/core/status/StatusManager;
       4: areturn

  public void setStatusManager(ch.qos.logback.core.status.StatusManager);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #66                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #68                 // String null StatusManager not allowed
      10: invokespecial #70                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: putfield      #24                 // Field sm:Lch/qos/logback/core/status/StatusManager;
      19: return

  public java.util.Map<java.lang.String, java.lang.String> getCopyOfPropertyMap();
    Code:
       0: new           #28                 // class java/util/HashMap
       3: dup
       4: aload_0
       5: getfield      #31                 // Field propertyMap:Ljava/util/Map;
       8: invokespecial #73                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      11: areturn

  public void putProperty(java.lang.String, java.lang.String);
    Code:
       0: ldc           #76                 // String HOSTNAME
       2: aload_1
       3: invokevirtual #78                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
       6: ifeq          17
       9: aload_0
      10: aload_2
      11: invokevirtual #84                 // Method putHostnameProperty:(Ljava/lang/String;)V
      14: goto          29
      17: aload_0
      18: getfield      #31                 // Field propertyMap:Ljava/util/Map;
      21: aload_1
      22: aload_2
      23: invokeinterface #87,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      28: pop
      29: return

  protected void initCollisionMaps();
    Code:
       0: aload_0
       1: ldc           #93                 // String FA_FILENAMES_MAP
       3: new           #28                 // class java/util/HashMap
       6: dup
       7: invokespecial #30                 // Method java/util/HashMap."<init>":()V
      10: invokevirtual #95                 // Method putObject:(Ljava/lang/String;Ljava/lang/Object;)V
      13: aload_0
      14: ldc           #99                 // String RFA_FILENAME_PATTERN_COLLISION_MAP
      16: new           #28                 // class java/util/HashMap
      19: dup
      20: invokespecial #30                 // Method java/util/HashMap."<init>":()V
      23: invokevirtual #95                 // Method putObject:(Ljava/lang/String;Ljava/lang/Object;)V
      26: return

  public java.lang.String getProperty(java.lang.String);
    Code:
       0: ldc           #101                // String CONTEXT_NAME
       2: aload_1
       3: invokevirtual #103                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifeq          14
       9: aload_0
      10: invokevirtual #107                // Method getName:()Ljava/lang/String;
      13: areturn
      14: ldc           #76                 // String HOSTNAME
      16: aload_1
      17: invokevirtual #78                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      20: ifeq          28
      23: aload_0
      24: invokevirtual #111                // Method lazyGetHostname:()Ljava/lang/String;
      27: areturn
      28: aload_0
      29: getfield      #31                 // Field propertyMap:Ljava/util/Map;
      32: aload_1
      33: invokeinterface #114,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      38: checkcast     #79                 // class java/lang/String
      41: areturn

  private java.lang.String lazyGetHostname();
    Code:
       0: aload_0
       1: getfield      #31                 // Field propertyMap:Ljava/util/Map;
       4: ldc           #76                 // String HOSTNAME
       6: invokeinterface #114,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #79                 // class java/lang/String
      14: astore_1
      15: aload_1
      16: ifnonnull     36
      19: new           #118                // class ch/qos/logback/core/util/NetworkAddressUtil
      22: dup
      23: aload_0
      24: invokespecial #120                // Method ch/qos/logback/core/util/NetworkAddressUtil."<init>":(Lch/qos/logback/core/Context;)V
      27: invokevirtual #123                // Method ch/qos/logback/core/util/NetworkAddressUtil.safelyGetLocalHostName:()Ljava/lang/String;
      30: astore_1
      31: aload_0
      32: aload_1
      33: invokevirtual #84                 // Method putHostnameProperty:(Ljava/lang/String;)V
      36: aload_1
      37: areturn

  private void putHostnameProperty(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #31                 // Field propertyMap:Ljava/util/Map;
       4: ldc           #76                 // String HOSTNAME
       6: invokeinterface #114,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #79                 // class java/lang/String
      14: astore_2
      15: aload_2
      16: ifnonnull     32
      19: aload_0
      20: getfield      #31                 // Field propertyMap:Ljava/util/Map;
      23: ldc           #76                 // String HOSTNAME
      25: aload_1
      26: invokeinterface #87,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      31: pop
      32: return

  public java.lang.Object getObject(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #38                 // Field objectMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #114,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public void putObject(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #38                 // Field objectMap:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #87,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public void removeObject(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #38                 // Field objectMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #126,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #129                // Field name:Ljava/lang/String;
       4: areturn

  public void start();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #133                // Field started:Z
       5: return

  public void stop();
    Code:
       0: aload_0
       1: invokevirtual #137                // Method stopExecutorServices:()V
       4: aload_0
       5: iconst_0
       6: putfield      #133                // Field started:Z
       9: return

  public boolean isStarted();
    Code:
       0: aload_0
       1: getfield      #133                // Field started:Z
       4: ireturn

  public void reset();
    Code:
       0: aload_0
       1: invokevirtual #140                // Method removeShutdownHook:()V
       4: aload_0
       5: invokevirtual #143                // Method getLifeCycleManager:()Lch/qos/logback/core/LifeCycleManager;
       8: invokevirtual #147                // Method ch/qos/logback/core/LifeCycleManager.reset:()V
      11: aload_0
      12: getfield      #31                 // Field propertyMap:Ljava/util/Map;
      15: invokeinterface #152,  1          // InterfaceMethod java/util/Map.clear:()V
      20: aload_0
      21: getfield      #38                 // Field objectMap:Ljava/util/Map;
      24: invokeinterface #152,  1          // InterfaceMethod java/util/Map.clear:()V
      29: return

  public void setName(java.lang.String) throws java.lang.IllegalStateException;
    Code:
       0: aload_1
       1: ifnull        16
       4: aload_1
       5: aload_0
       6: getfield      #129                // Field name:Ljava/lang/String;
       9: invokevirtual #103                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      12: ifeq          16
      15: return
      16: aload_0
      17: getfield      #129                // Field name:Ljava/lang/String;
      20: ifnull        35
      23: ldc           #155                // String default
      25: aload_0
      26: getfield      #129                // Field name:Ljava/lang/String;
      29: invokevirtual #103                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      32: ifeq          43
      35: aload_0
      36: aload_1
      37: putfield      #129                // Field name:Ljava/lang/String;
      40: goto          53
      43: new           #157                // class java/lang/IllegalStateException
      46: dup
      47: ldc           #159                // String Context has been already given a name
      49: invokespecial #161                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      52: athrow
      53: return

  public long getBirthTime();
    Code:
       0: aload_0
       1: getfield      #15                 // Field birthTime:J
       4: lreturn

  public java.lang.Object getConfigurationLock();
    Code:
       0: aload_0
       1: getfield      #44                 // Field configurationLock:Lch/qos/logback/core/spi/LogbackLock;
       4: areturn

  public synchronized java.util.concurrent.ExecutorService getExecutorService();
    Code:
       0: aload_0
       1: getfield      #162                // Field threadPoolExecutor:Ljava/util/concurrent/ThreadPoolExecutor;
       4: ifnonnull     14
       7: aload_0
       8: invokestatic  #166                // Method ch/qos/logback/core/util/ExecutorServiceUtil.newThreadPoolExecutor:()Ljava/util/concurrent/ThreadPoolExecutor;
      11: putfield      #162                // Field threadPoolExecutor:Ljava/util/concurrent/ThreadPoolExecutor;
      14: aload_0
      15: getfield      #162                // Field threadPoolExecutor:Ljava/util/concurrent/ThreadPoolExecutor;
      18: areturn

  public synchronized java.util.concurrent.ScheduledExecutorService getScheduledExecutorService();
    Code:
       0: aload_0
       1: getfield      #172                // Field scheduledExecutorService:Ljava/util/concurrent/ScheduledExecutorService;
       4: ifnonnull     14
       7: aload_0
       8: invokestatic  #176                // Method ch/qos/logback/core/util/ExecutorServiceUtil.newScheduledExecutorService:()Ljava/util/concurrent/ScheduledExecutorService;
      11: putfield      #172                // Field scheduledExecutorService:Ljava/util/concurrent/ScheduledExecutorService;
      14: aload_0
      15: getfield      #172                // Field scheduledExecutorService:Ljava/util/concurrent/ScheduledExecutorService;
      18: areturn

  private synchronized void stopExecutorServices();
    Code:
       0: aload_0
       1: getfield      #172                // Field scheduledExecutorService:Ljava/util/concurrent/ScheduledExecutorService;
       4: invokestatic  #180                // Method ch/qos/logback/core/util/ExecutorServiceUtil.shutdown:(Ljava/util/concurrent/ExecutorService;)V
       7: aload_0
       8: aconst_null
       9: putfield      #172                // Field scheduledExecutorService:Ljava/util/concurrent/ScheduledExecutorService;
      12: aload_0
      13: getfield      #162                // Field threadPoolExecutor:Ljava/util/concurrent/ThreadPoolExecutor;
      16: invokestatic  #180                // Method ch/qos/logback/core/util/ExecutorServiceUtil.shutdown:(Ljava/util/concurrent/ExecutorService;)V
      19: aload_0
      20: aconst_null
      21: putfield      #162                // Field threadPoolExecutor:Ljava/util/concurrent/ThreadPoolExecutor;
      24: return

  private void removeShutdownHook();
    Code:
       0: aload_0
       1: ldc           #184                // String SHUTDOWN_HOOK
       3: invokevirtual #186                // Method getObject:(Ljava/lang/String;)Ljava/lang/Object;
       6: checkcast     #190                // class java/lang/Thread
       9: astore_1
      10: aload_1
      11: ifnull        83
      14: aload_0
      15: ldc           #184                // String SHUTDOWN_HOOK
      17: invokevirtual #192                // Method removeObject:(Ljava/lang/String;)V
      20: aload_0
      21: getfield      #24                 // Field sm:Lch/qos/logback/core/status/StatusManager;
      24: new           #195                // class ch/qos/logback/core/status/InfoStatus
      27: dup
      28: aload_1
      29: invokestatic  #197                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      32: invokedynamic #201,  0            // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      37: aload_0
      38: invokespecial #205                // Method ch/qos/logback/core/status/InfoStatus."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      41: invokeinterface #207,  2          // InterfaceMethod ch/qos/logback/core/status/StatusManager.add:(Lch/qos/logback/core/status/Status;)V
      46: invokestatic  #213                // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
      49: astore_2
      50: aload_2
      51: aload_1
      52: invokevirtual #219                // Method java/lang/Runtime.removeShutdownHook:(Ljava/lang/Thread;)Z
      55: istore_3
      56: aload_0
      57: getfield      #24                 // Field sm:Lch/qos/logback/core/status/StatusManager;
      60: new           #195                // class ch/qos/logback/core/status/InfoStatus
      63: dup
      64: iload_3
      65: invokedynamic #222,  0            // InvokeDynamic #1:makeConcatWithConstants:(Z)Ljava/lang/String;
      70: aload_0
      71: invokespecial #205                // Method ch/qos/logback/core/status/InfoStatus."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      74: invokeinterface #207,  2          // InterfaceMethod ch/qos/logback/core/status/StatusManager.add:(Lch/qos/logback/core/status/Status;)V
      79: goto          83
      82: astore_2
      83: return
    Exception table:
       from    to  target type
          20    79    82   Class java/lang/IllegalStateException

  public void register(ch.qos.logback.core.spi.LifeCycle);
    Code:
       0: aload_0
       1: invokevirtual #143                // Method getLifeCycleManager:()Lch/qos/logback/core/LifeCycleManager;
       4: aload_1
       5: invokevirtual #225                // Method ch/qos/logback/core/LifeCycleManager.register:(Lch/qos/logback/core/spi/LifeCycle;)V
       8: return

  synchronized ch.qos.logback.core.LifeCycleManager getLifeCycleManager();
    Code:
       0: aload_0
       1: getfield      #229                // Field lifeCycleManager:Lch/qos/logback/core/LifeCycleManager;
       4: ifnonnull     18
       7: aload_0
       8: new           #148                // class ch/qos/logback/core/LifeCycleManager
      11: dup
      12: invokespecial #233                // Method ch/qos/logback/core/LifeCycleManager."<init>":()V
      15: putfield      #229                // Field lifeCycleManager:Lch/qos/logback/core/LifeCycleManager;
      18: aload_0
      19: getfield      #229                // Field lifeCycleManager:Lch/qos/logback/core/LifeCycleManager;
      22: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #129                // Field name:Ljava/lang/String;
       4: areturn

  public void addScheduledFuture(java.util.concurrent.ScheduledFuture<?>);
    Code:
       0: aload_0
       1: getfield      #60                 // Field scheduledFutures:Ljava/util/List;
       4: aload_1
       5: invokeinterface #234,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public java.util.List<java.util.concurrent.ScheduledFuture<?>> getScheduledFutures();
    Code:
       0: aload_0
       1: invokevirtual #238                // Method getCopyOfScheduledFutures:()Ljava/util/List;
       4: areturn

  public java.util.List<java.util.concurrent.ScheduledFuture<?>> getCopyOfScheduledFutures();
    Code:
       0: new           #55                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #60                 // Field scheduledFutures:Ljava/util/List;
       8: invokespecial #242                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      11: areturn

  public ch.qos.logback.core.spi.SequenceNumberGenerator getSequenceNumberGenerator();
    Code:
       0: aload_0
       1: getfield      #245                // Field sequenceNumberGenerator:Lch/qos/logback/core/spi/SequenceNumberGenerator;
       4: areturn

  public void setSequenceNumberGenerator(ch.qos.logback.core.spi.SequenceNumberGenerator);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #245                // Field sequenceNumberGenerator:Lch/qos/logback/core/spi/SequenceNumberGenerator;
       5: return

  public void addConfigurationEventListener(ch.qos.logback.core.spi.ConfigurationEventListener);
    Code:
       0: aload_0
       1: getfield      #51                 // Field configurationEventListenerList:Ljava/util/List;
       4: aload_1
       5: invokeinterface #234,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public void fireConfigurationEvent(ch.qos.logback.core.spi.ConfigurationEvent);
    Code:
       0: aload_0
       1: getfield      #51                 // Field configurationEventListenerList:Ljava/util/List;
       4: aload_1
       5: invokedynamic #249,  0            // InvokeDynamic #2:accept:(Lch/qos/logback/core/spi/ConfigurationEvent;)Ljava/util/function/Consumer;
      10: invokeinterface #253,  2          // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      15: return

  private static void lambda$fireConfigurationEvent$0(ch.qos.logback.core.spi.ConfigurationEvent, ch.qos.logback.core.spi.ConfigurationEventListener);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #257,  2          // InterfaceMethod ch/qos/logback/core/spi/ConfigurationEventListener.listen:(Lch/qos/logback/core/spi/ConfigurationEvent;)V
       7: return
}
