Compiled from "RollingPolicyBase.java"
public abstract class ch.qos.logback.core.rolling.RollingPolicyBase extends ch.qos.logback.core.spi.ContextAwareBase implements ch.qos.logback.core.rolling.RollingPolicy {
  protected ch.qos.logback.core.rolling.helper.CompressionMode compressionMode;

  ch.qos.logback.core.rolling.helper.FileNamePattern fileNamePattern;

  protected java.lang.String fileNamePatternStr;

  private ch.qos.logback.core.FileAppender<?> parent;

  ch.qos.logback.core.rolling.helper.FileNamePattern zipEntryFileNamePattern;

  private boolean started;

  public ch.qos.logback.core.rolling.RollingPolicyBase();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method ch/qos/logback/core/spi/ContextAwareBase."<init>":()V
       4: aload_0
       5: getstatic     #7                  // Field ch/qos/logback/core/rolling/helper/CompressionMode.NONE:Lch/qos/logback/core/rolling/helper/CompressionMode;
       8: putfield      #13                 // Field compressionMode:Lch/qos/logback/core/rolling/helper/CompressionMode;
      11: return

  protected void determineCompressionMode();
    Code:
       0: aload_0
       1: getfield      #18                 // Field fileNamePatternStr:Ljava/lang/String;
       4: ldc           #22                 // String .gz
       6: invokevirtual #24                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
       9: ifeq          28
      12: aload_0
      13: ldc           #30                 // String Will use gz compression
      15: invokevirtual #32                 // Method addInfo:(Ljava/lang/String;)V
      18: aload_0
      19: getstatic     #36                 // Field ch/qos/logback/core/rolling/helper/CompressionMode.GZ:Lch/qos/logback/core/rolling/helper/CompressionMode;
      22: putfield      #13                 // Field compressionMode:Lch/qos/logback/core/rolling/helper/CompressionMode;
      25: goto          69
      28: aload_0
      29: getfield      #18                 // Field fileNamePatternStr:Ljava/lang/String;
      32: ldc           #39                 // String .zip
      34: invokevirtual #24                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      37: ifeq          56
      40: aload_0
      41: ldc           #41                 // String Will use zip compression
      43: invokevirtual #32                 // Method addInfo:(Ljava/lang/String;)V
      46: aload_0
      47: getstatic     #43                 // Field ch/qos/logback/core/rolling/helper/CompressionMode.ZIP:Lch/qos/logback/core/rolling/helper/CompressionMode;
      50: putfield      #13                 // Field compressionMode:Lch/qos/logback/core/rolling/helper/CompressionMode;
      53: goto          69
      56: aload_0
      57: ldc           #46                 // String No compression will be used
      59: invokevirtual #32                 // Method addInfo:(Ljava/lang/String;)V
      62: aload_0
      63: getstatic     #7                  // Field ch/qos/logback/core/rolling/helper/CompressionMode.NONE:Lch/qos/logback/core/rolling/helper/CompressionMode;
      66: putfield      #13                 // Field compressionMode:Lch/qos/logback/core/rolling/helper/CompressionMode;
      69: return

  public void setFileNamePattern(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field fileNamePatternStr:Ljava/lang/String;
       5: return

  public java.lang.String getFileNamePattern();
    Code:
       0: aload_0
       1: getfield      #18                 // Field fileNamePatternStr:Ljava/lang/String;
       4: areturn

  public ch.qos.logback.core.rolling.helper.CompressionMode getCompressionMode();
    Code:
       0: aload_0
       1: getfield      #13                 // Field compressionMode:Lch/qos/logback/core/rolling/helper/CompressionMode;
       4: areturn

  public boolean isStarted();
    Code:
       0: aload_0
       1: getfield      #48                 // Field started:Z
       4: ireturn

  public void start();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #48                 // Field started:Z
       5: return

  public void stop();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #48                 // Field started:Z
       5: return

  public void setParent(ch.qos.logback.core.FileAppender<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #52                 // Field parent:Lch/qos/logback/core/FileAppender;
       5: return

  public boolean isParentPrudent();
    Code:
       0: aload_0
       1: getfield      #52                 // Field parent:Lch/qos/logback/core/FileAppender;
       4: invokevirtual #56                 // Method ch/qos/logback/core/FileAppender.isPrudent:()Z
       7: ireturn

  public java.lang.String getParentsRawFileProperty();
    Code:
       0: aload_0
       1: getfield      #52                 // Field parent:Lch/qos/logback/core/FileAppender;
       4: invokevirtual #62                 // Method ch/qos/logback/core/FileAppender.rawFileProperty:()Ljava/lang/String;
       7: areturn
}
