Compiled from "RollingFileAppender.java"
public class ch.qos.logback.core.rolling.RollingFileAppender<E> extends ch.qos.logback.core.FileAppender<E> {
  java.io.File currentlyActiveFile;

  ch.qos.logback.core.rolling.TriggeringPolicy<E> triggeringPolicy;

  ch.qos.logback.core.rolling.RollingPolicy rollingPolicy;

  java.util.concurrent.locks.Lock triggeringPolicyLock;

  private static java.lang.String RFA_NO_TP_URL;

  private static java.lang.String RFA_NO_RP_URL;

  private static java.lang.String COLLISION_URL;

  private static java.lang.String RFA_LATE_FILE_URL;

  public ch.qos.logback.core.rolling.RollingFileAppender();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method ch/qos/logback/core/FileAppender."<init>":()V
       4: aload_0
       5: new           #9                  // class java/util/concurrent/locks/ReentrantLock
       8: dup
       9: invokespecial #11                 // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      12: putfield      #12                 // Field triggeringPolicyLock:Ljava/util/concurrent/locks/Lock;
      15: return

  public void start();
    Code:
       0: aload_0
       1: getfield      #18                 // Field triggeringPolicy:Lch/qos/logback/core/rolling/TriggeringPolicy;
       4: ifnonnull     33
       7: aload_0
       8: aload_0
       9: invokevirtual #22                 // Method getName:()Ljava/lang/String;
      12: invokedynamic #26,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      17: invokevirtual #30                 // Method addWarn:(Ljava/lang/String;)V
      20: aload_0
      21: getstatic     #34                 // Field RFA_NO_TP_URL:Ljava/lang/String;
      24: invokedynamic #38,  0             // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      29: invokevirtual #30                 // Method addWarn:(Ljava/lang/String;)V
      32: return
      33: aload_0
      34: getfield      #18                 // Field triggeringPolicy:Lch/qos/logback/core/rolling/TriggeringPolicy;
      37: invokeinterface #39,  1           // InterfaceMethod ch/qos/logback/core/rolling/TriggeringPolicy.isStarted:()Z
      42: ifne          52
      45: aload_0
      46: ldc           #45                 // String TriggeringPolicy has not started. RollingFileAppender will not start
      48: invokevirtual #30                 // Method addWarn:(Ljava/lang/String;)V
      51: return
      52: aload_0
      53: invokevirtual #47                 // Method checkForCollisionsInPreviousRollingFileAppenders:()Z
      56: ifeq          78
      59: aload_0
      60: ldc           #50                 // String Collisions detected with FileAppender/RollingAppender instances defined earlier. Aborting.
      62: invokevirtual #52                 // Method addError:(Ljava/lang/String;)V
      65: aload_0
      66: getstatic     #55                 // Field COLLISION_WITH_EARLIER_APPENDER_URL:Ljava/lang/String;
      69: invokedynamic #38,  0             // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      74: invokevirtual #52                 // Method addError:(Ljava/lang/String;)V
      77: return
      78: aload_0
      79: getfield      #58                 // Field append:Z
      82: ifne          96
      85: aload_0
      86: ldc           #62                 // String Append mode is mandatory for RollingFileAppender. Defaulting to append=true.
      88: invokevirtual #30                 // Method addWarn:(Ljava/lang/String;)V
      91: aload_0
      92: iconst_1
      93: putfield      #58                 // Field append:Z
      96: aload_0
      97: getfield      #64                 // Field rollingPolicy:Lch/qos/logback/core/rolling/RollingPolicy;
     100: ifnonnull     129
     103: aload_0
     104: aload_0
     105: invokevirtual #22                 // Method getName:()Ljava/lang/String;
     108: invokedynamic #68,  0             // InvokeDynamic #2:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
     113: invokevirtual #52                 // Method addError:(Ljava/lang/String;)V
     116: aload_0
     117: getstatic     #69                 // Field RFA_NO_RP_URL:Ljava/lang/String;
     120: invokedynamic #38,  0             // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
     125: invokevirtual #52                 // Method addError:(Ljava/lang/String;)V
     128: return
     129: aload_0
     130: invokevirtual #72                 // Method checkForFileAndPatternCollisions:()Z
     133: ifeq          155
     136: aload_0
     137: ldc           #75                 // String File property collides with fileNamePattern. Aborting.
     139: invokevirtual #52                 // Method addError:(Ljava/lang/String;)V
     142: aload_0
     143: getstatic     #77                 // Field COLLISION_URL:Ljava/lang/String;
     146: invokedynamic #38,  0             // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
     151: invokevirtual #52                 // Method addError:(Ljava/lang/String;)V
     154: return
     155: aload_0
     156: invokevirtual #80                 // Method isPrudent:()Z
     159: ifeq          202
     162: aload_0
     163: invokevirtual #83                 // Method rawFileProperty:()Ljava/lang/String;
     166: ifnull        180
     169: aload_0
     170: ldc           #86                 // String Setting \"File\" property to null on account of prudent mode
     172: invokevirtual #30                 // Method addWarn:(Ljava/lang/String;)V
     175: aload_0
     176: aconst_null
     177: invokevirtual #88                 // Method setFile:(Ljava/lang/String;)V
     180: aload_0
     181: getfield      #64                 // Field rollingPolicy:Lch/qos/logback/core/rolling/RollingPolicy;
     184: invokeinterface #91,  1           // InterfaceMethod ch/qos/logback/core/rolling/RollingPolicy.getCompressionMode:()Lch/qos/logback/core/rolling/helper/CompressionMode;
     189: getstatic     #97                 // Field ch/qos/logback/core/rolling/helper/CompressionMode.NONE:Lch/qos/logback/core/rolling/helper/CompressionMode;
     192: if_acmpeq     202
     195: aload_0
     196: ldc           #103                // String Compression is not supported in prudent mode. Aborting
     198: invokevirtual #52                 // Method addError:(Ljava/lang/String;)V
     201: return
     202: aload_0
     203: new           #105                // class java/io/File
     206: dup
     207: aload_0
     208: invokevirtual #107                // Method getFile:()Ljava/lang/String;
     211: invokespecial #110                // Method java/io/File."<init>":(Ljava/lang/String;)V
     214: putfield      #112                // Field currentlyActiveFile:Ljava/io/File;
     217: aload_0
     218: aload_0
     219: invokevirtual #107                // Method getFile:()Ljava/lang/String;
     222: invokedynamic #116,  0            // InvokeDynamic #3:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
     227: invokevirtual #117                // Method addInfo:(Ljava/lang/String;)V
     230: aload_0
     231: invokespecial #120                // Method ch/qos/logback/core/FileAppender.start:()V
     234: return

  private boolean checkForFileAndPatternCollisions();
    Code:
       0: aload_0
       1: getfield      #18                 // Field triggeringPolicy:Lch/qos/logback/core/rolling/TriggeringPolicy;
       4: instanceof    #123                // class ch/qos/logback/core/rolling/RollingPolicyBase
       7: ifeq          48
      10: aload_0
      11: getfield      #18                 // Field triggeringPolicy:Lch/qos/logback/core/rolling/TriggeringPolicy;
      14: checkcast     #123                // class ch/qos/logback/core/rolling/RollingPolicyBase
      17: astore_1
      18: aload_1
      19: getfield      #125                // Field ch/qos/logback/core/rolling/RollingPolicyBase.fileNamePattern:Lch/qos/logback/core/rolling/helper/FileNamePattern;
      22: astore_2
      23: aload_2
      24: ifnull        48
      27: aload_0
      28: getfield      #129                // Field fileName:Ljava/lang/String;
      31: ifnull        48
      34: aload_2
      35: invokevirtual #132                // Method ch/qos/logback/core/rolling/helper/FileNamePattern.toRegex:()Ljava/lang/String;
      38: astore_3
      39: aload_0
      40: getfield      #129                // Field fileName:Ljava/lang/String;
      43: aload_3
      44: invokevirtual #137                // Method java/lang/String.matches:(Ljava/lang/String;)Z
      47: ireturn
      48: iconst_0
      49: ireturn

  private boolean checkForCollisionsInPreviousRollingFileAppenders();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #18                 // Field triggeringPolicy:Lch/qos/logback/core/rolling/TriggeringPolicy;
       6: instanceof    #123                // class ch/qos/logback/core/rolling/RollingPolicyBase
       9: ifeq          39
      12: aload_0
      13: getfield      #18                 // Field triggeringPolicy:Lch/qos/logback/core/rolling/TriggeringPolicy;
      16: checkcast     #123                // class ch/qos/logback/core/rolling/RollingPolicyBase
      19: astore_2
      20: aload_2
      21: getfield      #125                // Field ch/qos/logback/core/rolling/RollingPolicyBase.fileNamePattern:Lch/qos/logback/core/rolling/helper/FileNamePattern;
      24: astore_3
      25: aload_0
      26: aload_3
      27: invokevirtual #143                // Method innerCheckForFileNamePatternCollisionInPreviousRFA:(Lch/qos/logback/core/rolling/helper/FileNamePattern;)Z
      30: istore        4
      32: iload         4
      34: ifeq          39
      37: iconst_1
      38: istore_1
      39: iload_1
      40: ireturn

  private boolean innerCheckForFileNamePatternCollisionInPreviousRFA(ch.qos.logback.core.rolling.helper.FileNamePattern);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: getfield      #147                // Field context:Lch/qos/logback/core/Context;
       6: ldc           #151                // String RFA_FILENAME_PATTERN_COLLISION_MAP
       8: invokeinterface #153,  2          // InterfaceMethod ch/qos/logback/core/Context.getObject:(Ljava/lang/String;)Ljava/lang/Object;
      13: checkcast     #159                // class java/util/Map
      16: astore_3
      17: aload_3
      18: ifnonnull     23
      21: iload_2
      22: ireturn
      23: aload_3
      24: invokeinterface #161,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      29: invokeinterface #165,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      34: astore        4
      36: aload         4
      38: invokeinterface #171,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      43: ifeq          106
      46: aload         4
      48: invokeinterface #176,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      53: checkcast     #180                // class java/util/Map$Entry
      56: astore        5
      58: aload_1
      59: aload         5
      61: invokeinterface #182,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      66: invokevirtual #185                // Method ch/qos/logback/core/rolling/helper/FileNamePattern.equals:(Ljava/lang/Object;)Z
      69: ifeq          103
      72: aload_0
      73: ldc           #189                // String FileNamePattern
      75: aload         5
      77: invokeinterface #182,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      82: checkcast     #133                // class ch/qos/logback/core/rolling/helper/FileNamePattern
      85: invokevirtual #191                // Method ch/qos/logback/core/rolling/helper/FileNamePattern.toString:()Ljava/lang/String;
      88: aload         5
      90: invokeinterface #194,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      95: checkcast     #138                // class java/lang/String
      98: invokevirtual #197                // Method addErrorForCollision:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     101: iconst_1
     102: istore_2
     103: goto          36
     106: aload_0
     107: getfield      #201                // Field name:Ljava/lang/String;
     110: ifnull        125
     113: aload_3
     114: aload_0
     115: invokevirtual #22                 // Method getName:()Ljava/lang/String;
     118: aload_1
     119: invokeinterface #204,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     124: pop
     125: iload_2
     126: ireturn

  public void stop();
    Code:
       0: aload_0
       1: invokevirtual #208                // Method isStarted:()Z
       4: ifne          8
       7: return
       8: aload_0
       9: invokespecial #209                // Method ch/qos/logback/core/FileAppender.stop:()V
      12: aload_0
      13: getfield      #64                 // Field rollingPolicy:Lch/qos/logback/core/rolling/RollingPolicy;
      16: ifnull        28
      19: aload_0
      20: getfield      #64                 // Field rollingPolicy:Lch/qos/logback/core/rolling/RollingPolicy;
      23: invokeinterface #212,  1          // InterfaceMethod ch/qos/logback/core/rolling/RollingPolicy.stop:()V
      28: aload_0
      29: getfield      #18                 // Field triggeringPolicy:Lch/qos/logback/core/rolling/TriggeringPolicy;
      32: ifnull        44
      35: aload_0
      36: getfield      #18                 // Field triggeringPolicy:Lch/qos/logback/core/rolling/TriggeringPolicy;
      39: invokeinterface #213,  1          // InterfaceMethod ch/qos/logback/core/rolling/TriggeringPolicy.stop:()V
      44: aload_0
      45: getfield      #147                // Field context:Lch/qos/logback/core/Context;
      48: invokestatic  #214                // Method ch/qos/logback/core/util/ContextUtil.getFilenamePatternCollisionMap:(Lch/qos/logback/core/Context;)Ljava/util/Map;
      51: astore_1
      52: aload_1
      53: ifnull        74
      56: aload_0
      57: invokevirtual #22                 // Method getName:()Ljava/lang/String;
      60: ifnull        74
      63: aload_1
      64: aload_0
      65: invokevirtual #22                 // Method getName:()Ljava/lang/String;
      68: invokeinterface #220,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      73: pop
      74: return

  public void setFile(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        36
       4: aload_0
       5: getfield      #18                 // Field triggeringPolicy:Lch/qos/logback/core/rolling/TriggeringPolicy;
       8: ifnonnull     18
      11: aload_0
      12: getfield      #64                 // Field rollingPolicy:Lch/qos/logback/core/rolling/RollingPolicy;
      15: ifnull        36
      18: aload_0
      19: ldc           #224                // String File property must be set before any triggeringPolicy or rollingPolicy properties
      21: invokevirtual #52                 // Method addError:(Ljava/lang/String;)V
      24: aload_0
      25: getstatic     #226                // Field RFA_LATE_FILE_URL:Ljava/lang/String;
      28: invokedynamic #38,  0             // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      33: invokevirtual #52                 // Method addError:(Ljava/lang/String;)V
      36: aload_0
      37: aload_1
      38: invokespecial #229                // Method ch/qos/logback/core/FileAppender.setFile:(Ljava/lang/String;)V
      41: return

  public java.lang.String getFile();
    Code:
       0: aload_0
       1: getfield      #64                 // Field rollingPolicy:Lch/qos/logback/core/rolling/RollingPolicy;
       4: invokeinterface #230,  1          // InterfaceMethod ch/qos/logback/core/rolling/RollingPolicy.getActiveFileName:()Ljava/lang/String;
       9: areturn

  public void rollover();
    Code:
       0: aload_0
       1: getfield      #233                // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #237                // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: invokevirtual #239                // Method closeOutputStream:()V
      11: aload_0
      12: invokevirtual #242                // Method attemptRollover:()V
      15: aload_0
      16: invokevirtual #245                // Method attemptOpenFile:()V
      19: aload_0
      20: getfield      #233                // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      23: invokevirtual #248                // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      26: goto          39
      29: astore_1
      30: aload_0
      31: getfield      #233                // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      34: invokevirtual #248                // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      37: aload_1
      38: athrow
      39: return
    Exception table:
       from    to  target type
           7    19    29   any

  private void attemptOpenFile();
    Code:
       0: aload_0
       1: new           #105                // class java/io/File
       4: dup
       5: aload_0
       6: getfield      #64                 // Field rollingPolicy:Lch/qos/logback/core/rolling/RollingPolicy;
       9: invokeinterface #230,  1          // InterfaceMethod ch/qos/logback/core/rolling/RollingPolicy.getActiveFileName:()Ljava/lang/String;
      14: invokespecial #110                // Method java/io/File."<init>":(Ljava/lang/String;)V
      17: putfield      #112                // Field currentlyActiveFile:Ljava/io/File;
      20: aload_0
      21: aload_0
      22: getfield      #64                 // Field rollingPolicy:Lch/qos/logback/core/rolling/RollingPolicy;
      25: invokeinterface #230,  1          // InterfaceMethod ch/qos/logback/core/rolling/RollingPolicy.getActiveFileName:()Ljava/lang/String;
      30: invokevirtual #251                // Method openFile:(Ljava/lang/String;)V
      33: goto          51
      36: astore_1
      37: aload_0
      38: aload_0
      39: getfield      #129                // Field fileName:Ljava/lang/String;
      42: invokedynamic #256,  0            // InvokeDynamic #4:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      47: aload_1
      48: invokevirtual #257                // Method addError:(Ljava/lang/String;Ljava/lang/Throwable;)V
      51: return
    Exception table:
       from    to  target type
           0    33    36   Class java/io/IOException

  private void attemptRollover();
    Code:
       0: aload_0
       1: getfield      #64                 // Field rollingPolicy:Lch/qos/logback/core/rolling/RollingPolicy;
       4: invokeinterface #260,  1          // InterfaceMethod ch/qos/logback/core/rolling/RollingPolicy.rollover:()V
       9: goto          25
      12: astore_1
      13: aload_0
      14: ldc_w         #265                // String RolloverFailure occurred. Deferring roll-over.
      17: invokevirtual #30                 // Method addWarn:(Ljava/lang/String;)V
      20: aload_0
      21: iconst_1
      22: putfield      #58                 // Field append:Z
      25: return
    Exception table:
       from    to  target type
           0     9    12   Class ch/qos/logback/core/rolling/RolloverFailure

  protected void subAppend(E);
    Code:
       0: aload_0
       1: getfield      #12                 // Field triggeringPolicyLock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #267,  1          // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: getfield      #18                 // Field triggeringPolicy:Lch/qos/logback/core/rolling/TriggeringPolicy;
      13: aload_0
      14: getfield      #112                // Field currentlyActiveFile:Ljava/io/File;
      17: aload_1
      18: invokeinterface #270,  3          // InterfaceMethod ch/qos/logback/core/rolling/TriggeringPolicy.isTriggeringEvent:(Ljava/io/File;Ljava/lang/Object;)Z
      23: ifeq          30
      26: aload_0
      27: invokevirtual #274                // Method rollover:()V
      30: aload_0
      31: getfield      #12                 // Field triggeringPolicyLock:Ljava/util/concurrent/locks/Lock;
      34: invokeinterface #275,  1          // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      39: goto          54
      42: astore_2
      43: aload_0
      44: getfield      #12                 // Field triggeringPolicyLock:Ljava/util/concurrent/locks/Lock;
      47: invokeinterface #275,  1          // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      52: aload_2
      53: athrow
      54: aload_0
      55: aload_1
      56: invokespecial #276                // Method ch/qos/logback/core/FileAppender.subAppend:(Ljava/lang/Object;)V
      59: return
    Exception table:
       from    to  target type
           9    30    42   any

  public ch.qos.logback.core.rolling.RollingPolicy getRollingPolicy();
    Code:
       0: aload_0
       1: getfield      #64                 // Field rollingPolicy:Lch/qos/logback/core/rolling/RollingPolicy;
       4: areturn

  public ch.qos.logback.core.rolling.TriggeringPolicy<E> getTriggeringPolicy();
    Code:
       0: aload_0
       1: getfield      #18                 // Field triggeringPolicy:Lch/qos/logback/core/rolling/TriggeringPolicy;
       4: areturn

  public void setRollingPolicy(ch.qos.logback.core.rolling.RollingPolicy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #64                 // Field rollingPolicy:Lch/qos/logback/core/rolling/RollingPolicy;
       5: aload_0
       6: getfield      #64                 // Field rollingPolicy:Lch/qos/logback/core/rolling/RollingPolicy;
       9: instanceof    #40                 // class ch/qos/logback/core/rolling/TriggeringPolicy
      12: ifeq          23
      15: aload_0
      16: aload_1
      17: checkcast     #40                 // class ch/qos/logback/core/rolling/TriggeringPolicy
      20: putfield      #18                 // Field triggeringPolicy:Lch/qos/logback/core/rolling/TriggeringPolicy;
      23: return

  public void setTriggeringPolicy(ch.qos.logback.core.rolling.TriggeringPolicy<E>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field triggeringPolicy:Lch/qos/logback/core/rolling/TriggeringPolicy;
       5: aload_1
       6: instanceof    #92                 // class ch/qos/logback/core/rolling/RollingPolicy
       9: ifeq          20
      12: aload_0
      13: aload_1
      14: checkcast     #92                 // class ch/qos/logback/core/rolling/RollingPolicy
      17: putfield      #64                 // Field rollingPolicy:Lch/qos/logback/core/rolling/RollingPolicy;
      20: return

  static {};
    Code:
       0: ldc_w         #280                // String http://logback.qos.ch/codes.html#rfa_no_tp
       3: putstatic     #34                 // Field RFA_NO_TP_URL:Ljava/lang/String;
       6: ldc_w         #282                // String http://logback.qos.ch/codes.html#rfa_no_rp
       9: putstatic     #69                 // Field RFA_NO_RP_URL:Ljava/lang/String;
      12: ldc_w         #284                // String http://logback.qos.ch/codes.html#rfa_collision
      15: putstatic     #77                 // Field COLLISION_URL:Ljava/lang/String;
      18: ldc_w         #286                // String http://logback.qos.ch/codes.html#rfa_file_after
      21: putstatic     #226                // Field RFA_LATE_FILE_URL:Ljava/lang/String;
      24: return
}
