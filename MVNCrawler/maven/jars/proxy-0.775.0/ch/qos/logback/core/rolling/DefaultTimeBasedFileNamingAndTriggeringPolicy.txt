Compiled from "DefaultTimeBasedFileNamingAndTriggeringPolicy.java"
public class ch.qos.logback.core.rolling.DefaultTimeBasedFileNamingAndTriggeringPolicy<E> extends ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicyBase<E> {
  public ch.qos.logback.core.rolling.DefaultTimeBasedFileNamingAndTriggeringPolicy();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method ch/qos/logback/core/rolling/TimeBasedFileNamingAndTriggeringPolicyBase."<init>":()V
       4: return

  public void start();
    Code:
       0: aload_0
       1: invokespecial #7                  // Method ch/qos/logback/core/rolling/TimeBasedFileNamingAndTriggeringPolicyBase.start:()V
       4: aload_0
       5: invokespecial #10                 // Method ch/qos/logback/core/rolling/TimeBasedFileNamingAndTriggeringPolicyBase.isErrorFree:()Z
       8: ifne          12
      11: return
      12: aload_0
      13: getfield      #14                 // Field tbrp:Lch/qos/logback/core/rolling/TimeBasedRollingPolicy;
      16: getfield      #20                 // Field ch/qos/logback/core/rolling/TimeBasedRollingPolicy.fileNamePattern:Lch/qos/logback/core/rolling/helper/FileNamePattern;
      19: invokevirtual #26                 // Method ch/qos/logback/core/rolling/helper/FileNamePattern.hasIntegerTokenCOnverter:()Z
      22: ifeq          45
      25: aload_0
      26: aload_0
      27: getfield      #14                 // Field tbrp:Lch/qos/logback/core/rolling/TimeBasedRollingPolicy;
      30: getfield      #20                 // Field ch/qos/logback/core/rolling/TimeBasedRollingPolicy.fileNamePattern:Lch/qos/logback/core/rolling/helper/FileNamePattern;
      33: invokestatic  #31                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      36: invokedynamic #37,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      41: invokevirtual #41                 // Method addError:(Ljava/lang/String;)V
      44: return
      45: aload_0
      46: new           #45                 // class ch/qos/logback/core/rolling/helper/TimeBasedArchiveRemover
      49: dup
      50: aload_0
      51: getfield      #14                 // Field tbrp:Lch/qos/logback/core/rolling/TimeBasedRollingPolicy;
      54: getfield      #20                 // Field ch/qos/logback/core/rolling/TimeBasedRollingPolicy.fileNamePattern:Lch/qos/logback/core/rolling/helper/FileNamePattern;
      57: aload_0
      58: getfield      #47                 // Field rc:Lch/qos/logback/core/rolling/helper/RollingCalendar;
      61: invokespecial #51                 // Method ch/qos/logback/core/rolling/helper/TimeBasedArchiveRemover."<init>":(Lch/qos/logback/core/rolling/helper/FileNamePattern;Lch/qos/logback/core/rolling/helper/RollingCalendar;)V
      64: putfield      #54                 // Field archiveRemover:Lch/qos/logback/core/rolling/helper/ArchiveRemover;
      67: aload_0
      68: getfield      #54                 // Field archiveRemover:Lch/qos/logback/core/rolling/helper/ArchiveRemover;
      71: aload_0
      72: getfield      #58                 // Field context:Lch/qos/logback/core/Context;
      75: invokeinterface #62,  2           // InterfaceMethod ch/qos/logback/core/rolling/helper/ArchiveRemover.setContext:(Lch/qos/logback/core/Context;)V
      80: aload_0
      81: iconst_1
      82: putfield      #68                 // Field started:Z
      85: return

  public boolean isTriggeringEvent(java.io.File, E);
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method getCurrentTime:()J
       4: lstore_3
       5: aload_0
       6: getfield      #76                 // Field atomicNextCheck:Ljava/util/concurrent/atomic/AtomicLong;
       9: invokevirtual #80                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      12: lstore        5
      14: lload_3
      15: lload         5
      17: lcmp
      18: iflt          80
      21: aload_0
      22: lload_3
      23: invokevirtual #85                 // Method computeNextCheck:(J)J
      26: lstore        7
      28: aload_0
      29: getfield      #76                 // Field atomicNextCheck:Ljava/util/concurrent/atomic/AtomicLong;
      32: lload         7
      34: invokevirtual #89                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
      37: aload_0
      38: getfield      #93                 // Field dateInCurrentPeriod:Ljava/time/Instant;
      41: astore        9
      43: aload_0
      44: aload         9
      46: invokevirtual #97                 // Method java/time/Instant.toString:()Ljava/lang/String;
      49: invokedynamic #103,  0            // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      54: invokevirtual #104                // Method addInfo:(Ljava/lang/String;)V
      57: aload_0
      58: aload_0
      59: getfield      #14                 // Field tbrp:Lch/qos/logback/core/rolling/TimeBasedRollingPolicy;
      62: getfield      #107                // Field ch/qos/logback/core/rolling/TimeBasedRollingPolicy.fileNamePatternWithoutCompSuffix:Lch/qos/logback/core/rolling/helper/FileNamePattern;
      65: aload         9
      67: invokevirtual #110                // Method ch/qos/logback/core/rolling/helper/FileNamePattern.convert:(Ljava/lang/Object;)Ljava/lang/String;
      70: putfield      #113                // Field elapsedPeriodsFileName:Ljava/lang/String;
      73: aload_0
      74: lload_3
      75: invokevirtual #117                // Method setDateInCurrentPeriod:(J)V
      78: iconst_1
      79: ireturn
      80: iconst_0
      81: ireturn

  public java.lang.String toString();
    Code:
       0: ldc           #120                // String c.q.l.core.rolling.DefaultTimeBasedFileNamingAndTriggeringPolicy
       2: areturn
}
