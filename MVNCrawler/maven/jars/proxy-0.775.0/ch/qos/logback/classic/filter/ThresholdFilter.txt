Compiled from "ThresholdFilter.java"
public class ch.qos.logback.classic.filter.ThresholdFilter extends ch.qos.logback.core.filter.Filter<ch.qos.logback.classic.spi.ILoggingEvent> {
  ch.qos.logback.classic.Level level;

  public ch.qos.logback.classic.filter.ThresholdFilter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method ch/qos/logback/core/filter/Filter."<init>":()V
       4: return

  public ch.qos.logback.core.spi.FilterReply decide(ch.qos.logback.classic.spi.ILoggingEvent);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method isStarted:()Z
       4: ifne          11
       7: getstatic     #13                 // Field ch/qos/logback/core/spi/FilterReply.NEUTRAL:Lch/qos/logback/core/spi/FilterReply;
      10: areturn
      11: aload_1
      12: invokeinterface #19,  1           // InterfaceMethod ch/qos/logback/classic/spi/ILoggingEvent.getLevel:()Lch/qos/logback/classic/Level;
      17: aload_0
      18: getfield      #25                 // Field level:Lch/qos/logback/classic/Level;
      21: invokevirtual #29                 // Method ch/qos/logback/classic/Level.isGreaterOrEqual:(Lch/qos/logback/classic/Level;)Z
      24: ifeq          31
      27: getstatic     #13                 // Field ch/qos/logback/core/spi/FilterReply.NEUTRAL:Lch/qos/logback/core/spi/FilterReply;
      30: areturn
      31: getstatic     #35                 // Field ch/qos/logback/core/spi/FilterReply.DENY:Lch/qos/logback/core/spi/FilterReply;
      34: areturn

  public void setLevel(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #38                 // Method ch/qos/logback/classic/Level.toLevel:(Ljava/lang/String;)Lch/qos/logback/classic/Level;
       5: putfield      #25                 // Field level:Lch/qos/logback/classic/Level;
       8: return

  public void start();
    Code:
       0: aload_0
       1: getfield      #25                 // Field level:Lch/qos/logback/classic/Level;
       4: ifnull        11
       7: aload_0
       8: invokespecial #42                 // Method ch/qos/logback/core/filter/Filter.start:()V
      11: return

  public ch.qos.logback.core.spi.FilterReply decide(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #20                 // class ch/qos/logback/classic/spi/ILoggingEvent
       5: invokevirtual #45                 // Method decide:(Lch/qos/logback/classic/spi/ILoggingEvent;)Lch/qos/logback/core/spi/FilterReply;
       8: areturn
}
