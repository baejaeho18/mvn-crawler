Compiled from "HttpServletRequest.java"
public interface jakarta.servlet.http.HttpServletRequest extends jakarta.servlet.ServletRequest {
  public static final java.lang.String BASIC_AUTH;

  public static final java.lang.String FORM_AUTH;

  public static final java.lang.String CLIENT_CERT_AUTH;

  public static final java.lang.String DIGEST_AUTH;

  public abstract java.lang.String getAuthType();

  public abstract jakarta.servlet.http.Cookie[] getCookies();

  public abstract long getDateHeader(java.lang.String);

  public abstract java.lang.String getHeader(java.lang.String);

  public abstract java.util.Enumeration<java.lang.String> getHeaders(java.lang.String);

  public abstract java.util.Enumeration<java.lang.String> getHeaderNames();

  public abstract int getIntHeader(java.lang.String);

  public default jakarta.servlet.http.HttpServletMapping getHttpServletMapping();
    Code:
       0: new           #1                  // class jakarta/servlet/http/HttpServletRequest$1
       3: dup
       4: aload_0
       5: invokespecial #2                  // Method jakarta/servlet/http/HttpServletRequest$1."<init>":(Ljakarta/servlet/http/HttpServletRequest;)V
       8: areturn

  public abstract java.lang.String getMethod();

  public abstract java.lang.String getPathInfo();

  public abstract java.lang.String getPathTranslated();

  public default jakarta.servlet.http.PushBuilder newPushBuilder();
    Code:
       0: aconst_null
       1: areturn

  public abstract java.lang.String getContextPath();

  public abstract java.lang.String getQueryString();

  public abstract java.lang.String getRemoteUser();

  public abstract boolean isUserInRole(java.lang.String);

  public abstract java.security.Principal getUserPrincipal();

  public abstract java.lang.String getRequestedSessionId();

  public abstract java.lang.String getRequestURI();

  public abstract java.lang.StringBuffer getRequestURL();

  public abstract java.lang.String getServletPath();

  public abstract jakarta.servlet.http.HttpSession getSession(boolean);

  public abstract jakarta.servlet.http.HttpSession getSession();

  public abstract java.lang.String changeSessionId();

  public abstract boolean isRequestedSessionIdValid();

  public abstract boolean isRequestedSessionIdFromCookie();

  public abstract boolean isRequestedSessionIdFromURL();

  public abstract boolean authenticate(jakarta.servlet.http.HttpServletResponse) throws java.io.IOException, jakarta.servlet.ServletException;

  public abstract void login(java.lang.String, java.lang.String) throws jakarta.servlet.ServletException;

  public abstract void logout() throws jakarta.servlet.ServletException;

  public abstract java.util.Collection<jakarta.servlet.http.Part> getParts() throws java.io.IOException, jakarta.servlet.ServletException;

  public abstract jakarta.servlet.http.Part getPart(java.lang.String) throws java.io.IOException, jakarta.servlet.ServletException;

  public abstract <T extends jakarta.servlet.http.HttpUpgradeHandler> T upgrade(java.lang.Class<T>) throws java.io.IOException, jakarta.servlet.ServletException;

  public default java.util.Map<java.lang.String, java.lang.String> getTrailerFields();
    Code:
       0: invokestatic  #3                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
       3: areturn

  public default boolean isTrailerFieldsReady();
    Code:
       0: iconst_1
       1: ireturn
}
