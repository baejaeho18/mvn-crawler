Compiled from "HttpServlet.java"
class jakarta.servlet.http.NoBodyOutputStream extends jakarta.servlet.ServletOutputStream {
  private static final java.lang.String LSTRING_FILE;

  private static java.util.ResourceBundle lStrings;

  static java.lang.ThreadLocal<java.lang.Boolean> disableFlush;

  private int contentLength;

  jakarta.servlet.http.NoBodyOutputStream();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method jakarta/servlet/ServletOutputStream."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field contentLength:I
       9: return

  void reset();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #2                  // Field contentLength:I
       5: return

  int getContentLength();
    Code:
       0: aload_0
       1: getfield      #2                  // Field contentLength:I
       4: ireturn

  public void write(int);
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field contentLength:I
       5: iconst_1
       6: iadd
       7: putfield      #2                  // Field contentLength:I
      10: return

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     20
       4: new           #3                  // class java/lang/NullPointerException
       7: dup
       8: getstatic     #4                  // Field lStrings:Ljava/util/ResourceBundle;
      11: ldc           #5                  // String err.io.nullArray
      13: invokevirtual #6                  // Method java/util/ResourceBundle.getString:(Ljava/lang/String;)Ljava/lang/String;
      16: invokespecial #7                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: iload_2
      21: iflt          36
      24: iload_3
      25: iflt          36
      28: iload_2
      29: iload_3
      30: iadd
      31: aload_1
      32: arraylength
      33: if_icmple     96
      36: getstatic     #4                  // Field lStrings:Ljava/util/ResourceBundle;
      39: ldc           #8                  // String err.io.indexOutOfBounds
      41: invokevirtual #6                  // Method java/util/ResourceBundle.getString:(Ljava/lang/String;)Ljava/lang/String;
      44: astore        4
      46: iconst_3
      47: anewarray     #9                  // class java/lang/Object
      50: astore        5
      52: aload         5
      54: iconst_0
      55: iload_2
      56: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      59: aastore
      60: aload         5
      62: iconst_1
      63: iload_3
      64: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      67: aastore
      68: aload         5
      70: iconst_2
      71: aload_1
      72: arraylength
      73: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      76: aastore
      77: aload         4
      79: aload         5
      81: invokestatic  #11                 // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      84: astore        4
      86: new           #12                 // class java/lang/IndexOutOfBoundsException
      89: dup
      90: aload         4
      92: invokespecial #13                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      95: athrow
      96: aload_0
      97: dup
      98: getfield      #2                  // Field contentLength:I
     101: iload_3
     102: iadd
     103: putfield      #2                  // Field contentLength:I
     106: return

  public void flush() throws java.io.IOException;
    Code:
       0: getstatic     #14                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
       3: getstatic     #15                 // Field disableFlush:Ljava/lang/ThreadLocal;
       6: invokevirtual #16                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       9: invokevirtual #17                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
      12: ifeq          19
      15: aload_0
      16: invokespecial #18                 // Method jakarta/servlet/ServletOutputStream.flush:()V
      19: return

  public boolean isReady();
    Code:
       0: new           #19                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #20                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void setWriteListener(jakarta.servlet.WriteListener);
    Code:
       0: new           #19                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #20                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  static {};
    Code:
       0: ldc           #22                 // String jakarta.servlet.http.LocalStrings
       2: invokestatic  #23                 // Method java/util/ResourceBundle.getBundle:(Ljava/lang/String;)Ljava/util/ResourceBundle;
       5: putstatic     #4                  // Field lStrings:Ljava/util/ResourceBundle;
       8: new           #24                 // class java/lang/ThreadLocal
      11: dup
      12: invokespecial #25                 // Method java/lang/ThreadLocal."<init>":()V
      15: putstatic     #15                 // Field disableFlush:Ljava/lang/ThreadLocal;
      18: return
}
