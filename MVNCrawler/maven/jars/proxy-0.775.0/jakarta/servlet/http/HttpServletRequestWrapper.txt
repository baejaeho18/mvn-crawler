Compiled from "HttpServletRequestWrapper.java"
public class jakarta.servlet.http.HttpServletRequestWrapper extends jakarta.servlet.ServletRequestWrapper implements jakarta.servlet.http.HttpServletRequest {
  public jakarta.servlet.http.HttpServletRequestWrapper(jakarta.servlet.http.HttpServletRequest);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method jakarta/servlet/ServletRequestWrapper."<init>":(Ljakarta/servlet/ServletRequest;)V
       5: return

  private jakarta.servlet.http.HttpServletRequest _getHttpServletRequest();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method jakarta/servlet/ServletRequestWrapper.getRequest:()Ljakarta/servlet/ServletRequest;
       4: checkcast     #3                  // class jakarta/servlet/http/HttpServletRequest
       7: areturn

  public java.lang.String getAuthType();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method _getHttpServletRequest:()Ljakarta/servlet/http/HttpServletRequest;
       4: invokeinterface #5,  1            // InterfaceMethod jakarta/servlet/http/HttpServletRequest.getAuthType:()Ljava/lang/String;
       9: areturn

  public jakarta.servlet.http.Cookie[] getCookies();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method _getHttpServletRequest:()Ljakarta/servlet/http/HttpServletRequest;
       4: invokeinterface #6,  1            // InterfaceMethod jakarta/servlet/http/HttpServletRequest.getCookies:()[Ljakarta/servlet/http/Cookie;
       9: areturn

  public long getDateHeader(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method _getHttpServletRequest:()Ljakarta/servlet/http/HttpServletRequest;
       4: aload_1
       5: invokeinterface #7,  2            // InterfaceMethod jakarta/servlet/http/HttpServletRequest.getDateHeader:(Ljava/lang/String;)J
      10: lreturn

  public java.lang.String getHeader(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method _getHttpServletRequest:()Ljakarta/servlet/http/HttpServletRequest;
       4: aload_1
       5: invokeinterface #8,  2            // InterfaceMethod jakarta/servlet/http/HttpServletRequest.getHeader:(Ljava/lang/String;)Ljava/lang/String;
      10: areturn

  public java.util.Enumeration<java.lang.String> getHeaders(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method _getHttpServletRequest:()Ljakarta/servlet/http/HttpServletRequest;
       4: aload_1
       5: invokeinterface #9,  2            // InterfaceMethod jakarta/servlet/http/HttpServletRequest.getHeaders:(Ljava/lang/String;)Ljava/util/Enumeration;
      10: areturn

  public java.util.Enumeration<java.lang.String> getHeaderNames();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method _getHttpServletRequest:()Ljakarta/servlet/http/HttpServletRequest;
       4: invokeinterface #10,  1           // InterfaceMethod jakarta/servlet/http/HttpServletRequest.getHeaderNames:()Ljava/util/Enumeration;
       9: areturn

  public int getIntHeader(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method _getHttpServletRequest:()Ljakarta/servlet/http/HttpServletRequest;
       4: aload_1
       5: invokeinterface #11,  2           // InterfaceMethod jakarta/servlet/http/HttpServletRequest.getIntHeader:(Ljava/lang/String;)I
      10: ireturn

  public jakarta.servlet.http.HttpServletMapping getHttpServletMapping();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method _getHttpServletRequest:()Ljakarta/servlet/http/HttpServletRequest;
       4: invokeinterface #12,  1           // InterfaceMethod jakarta/servlet/http/HttpServletRequest.getHttpServletMapping:()Ljakarta/servlet/http/HttpServletMapping;
       9: areturn

  public java.lang.String getMethod();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method _getHttpServletRequest:()Ljakarta/servlet/http/HttpServletRequest;
       4: invokeinterface #13,  1           // InterfaceMethod jakarta/servlet/http/HttpServletRequest.getMethod:()Ljava/lang/String;
       9: areturn

  public java.lang.String getPathInfo();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method _getHttpServletRequest:()Ljakarta/servlet/http/HttpServletRequest;
       4: invokeinterface #14,  1           // InterfaceMethod jakarta/servlet/http/HttpServletRequest.getPathInfo:()Ljava/lang/String;
       9: areturn

  public java.lang.String getPathTranslated();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method _getHttpServletRequest:()Ljakarta/servlet/http/HttpServletRequest;
       4: invokeinterface #15,  1           // InterfaceMethod jakarta/servlet/http/HttpServletRequest.getPathTranslated:()Ljava/lang/String;
       9: areturn

  public java.lang.String getContextPath();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method _getHttpServletRequest:()Ljakarta/servlet/http/HttpServletRequest;
       4: invokeinterface #16,  1           // InterfaceMethod jakarta/servlet/http/HttpServletRequest.getContextPath:()Ljava/lang/String;
       9: areturn

  public java.lang.String getQueryString();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method _getHttpServletRequest:()Ljakarta/servlet/http/HttpServletRequest;
       4: invokeinterface #17,  1           // InterfaceMethod jakarta/servlet/http/HttpServletRequest.getQueryString:()Ljava/lang/String;
       9: areturn

  public java.lang.String getRemoteUser();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method _getHttpServletRequest:()Ljakarta/servlet/http/HttpServletRequest;
       4: invokeinterface #18,  1           // InterfaceMethod jakarta/servlet/http/HttpServletRequest.getRemoteUser:()Ljava/lang/String;
       9: areturn

  public boolean isUserInRole(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method _getHttpServletRequest:()Ljakarta/servlet/http/HttpServletRequest;
       4: aload_1
       5: invokeinterface #19,  2           // InterfaceMethod jakarta/servlet/http/HttpServletRequest.isUserInRole:(Ljava/lang/String;)Z
      10: ireturn

  public java.security.Principal getUserPrincipal();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method _getHttpServletRequest:()Ljakarta/servlet/http/HttpServletRequest;
       4: invokeinterface #20,  1           // InterfaceMethod jakarta/servlet/http/HttpServletRequest.getUserPrincipal:()Ljava/security/Principal;
       9: areturn

  public java.lang.String getRequestedSessionId();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method _getHttpServletRequest:()Ljakarta/servlet/http/HttpServletRequest;
       4: invokeinterface #21,  1           // InterfaceMethod jakarta/servlet/http/HttpServletRequest.getRequestedSessionId:()Ljava/lang/String;
       9: areturn

  public java.lang.String getRequestURI();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method _getHttpServletRequest:()Ljakarta/servlet/http/HttpServletRequest;
       4: invokeinterface #22,  1           // InterfaceMethod jakarta/servlet/http/HttpServletRequest.getRequestURI:()Ljava/lang/String;
       9: areturn

  public java.lang.StringBuffer getRequestURL();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method _getHttpServletRequest:()Ljakarta/servlet/http/HttpServletRequest;
       4: invokeinterface #23,  1           // InterfaceMethod jakarta/servlet/http/HttpServletRequest.getRequestURL:()Ljava/lang/StringBuffer;
       9: areturn

  public java.lang.String getServletPath();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method _getHttpServletRequest:()Ljakarta/servlet/http/HttpServletRequest;
       4: invokeinterface #24,  1           // InterfaceMethod jakarta/servlet/http/HttpServletRequest.getServletPath:()Ljava/lang/String;
       9: areturn

  public jakarta.servlet.http.HttpSession getSession(boolean);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method _getHttpServletRequest:()Ljakarta/servlet/http/HttpServletRequest;
       4: iload_1
       5: invokeinterface #25,  2           // InterfaceMethod jakarta/servlet/http/HttpServletRequest.getSession:(Z)Ljakarta/servlet/http/HttpSession;
      10: areturn

  public jakarta.servlet.http.HttpSession getSession();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method _getHttpServletRequest:()Ljakarta/servlet/http/HttpServletRequest;
       4: invokeinterface #26,  1           // InterfaceMethod jakarta/servlet/http/HttpServletRequest.getSession:()Ljakarta/servlet/http/HttpSession;
       9: areturn

  public java.lang.String changeSessionId();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method _getHttpServletRequest:()Ljakarta/servlet/http/HttpServletRequest;
       4: invokeinterface #27,  1           // InterfaceMethod jakarta/servlet/http/HttpServletRequest.changeSessionId:()Ljava/lang/String;
       9: areturn

  public boolean isRequestedSessionIdValid();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method _getHttpServletRequest:()Ljakarta/servlet/http/HttpServletRequest;
       4: invokeinterface #28,  1           // InterfaceMethod jakarta/servlet/http/HttpServletRequest.isRequestedSessionIdValid:()Z
       9: ireturn

  public boolean isRequestedSessionIdFromCookie();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method _getHttpServletRequest:()Ljakarta/servlet/http/HttpServletRequest;
       4: invokeinterface #29,  1           // InterfaceMethod jakarta/servlet/http/HttpServletRequest.isRequestedSessionIdFromCookie:()Z
       9: ireturn

  public boolean isRequestedSessionIdFromURL();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method _getHttpServletRequest:()Ljakarta/servlet/http/HttpServletRequest;
       4: invokeinterface #30,  1           // InterfaceMethod jakarta/servlet/http/HttpServletRequest.isRequestedSessionIdFromURL:()Z
       9: ireturn

  public boolean authenticate(jakarta.servlet.http.HttpServletResponse) throws java.io.IOException, jakarta.servlet.ServletException;
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method _getHttpServletRequest:()Ljakarta/servlet/http/HttpServletRequest;
       4: aload_1
       5: invokeinterface #31,  2           // InterfaceMethod jakarta/servlet/http/HttpServletRequest.authenticate:(Ljakarta/servlet/http/HttpServletResponse;)Z
      10: ireturn

  public void login(java.lang.String, java.lang.String) throws jakarta.servlet.ServletException;
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method _getHttpServletRequest:()Ljakarta/servlet/http/HttpServletRequest;
       4: aload_1
       5: aload_2
       6: invokeinterface #32,  3           // InterfaceMethod jakarta/servlet/http/HttpServletRequest.login:(Ljava/lang/String;Ljava/lang/String;)V
      11: return

  public void logout() throws jakarta.servlet.ServletException;
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method _getHttpServletRequest:()Ljakarta/servlet/http/HttpServletRequest;
       4: invokeinterface #33,  1           // InterfaceMethod jakarta/servlet/http/HttpServletRequest.logout:()V
       9: return

  public java.util.Collection<jakarta.servlet.http.Part> getParts() throws java.io.IOException, jakarta.servlet.ServletException;
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method _getHttpServletRequest:()Ljakarta/servlet/http/HttpServletRequest;
       4: invokeinterface #34,  1           // InterfaceMethod jakarta/servlet/http/HttpServletRequest.getParts:()Ljava/util/Collection;
       9: areturn

  public jakarta.servlet.http.Part getPart(java.lang.String) throws java.io.IOException, jakarta.servlet.ServletException;
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method _getHttpServletRequest:()Ljakarta/servlet/http/HttpServletRequest;
       4: aload_1
       5: invokeinterface #35,  2           // InterfaceMethod jakarta/servlet/http/HttpServletRequest.getPart:(Ljava/lang/String;)Ljakarta/servlet/http/Part;
      10: areturn

  public <T extends jakarta.servlet.http.HttpUpgradeHandler> T upgrade(java.lang.Class<T>) throws java.io.IOException, jakarta.servlet.ServletException;
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method _getHttpServletRequest:()Ljakarta/servlet/http/HttpServletRequest;
       4: aload_1
       5: invokeinterface #36,  2           // InterfaceMethod jakarta/servlet/http/HttpServletRequest.upgrade:(Ljava/lang/Class;)Ljakarta/servlet/http/HttpUpgradeHandler;
      10: areturn

  public jakarta.servlet.http.PushBuilder newPushBuilder();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method _getHttpServletRequest:()Ljakarta/servlet/http/HttpServletRequest;
       4: invokeinterface #37,  1           // InterfaceMethod jakarta/servlet/http/HttpServletRequest.newPushBuilder:()Ljakarta/servlet/http/PushBuilder;
       9: areturn

  public java.util.Map<java.lang.String, java.lang.String> getTrailerFields();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method _getHttpServletRequest:()Ljakarta/servlet/http/HttpServletRequest;
       4: invokeinterface #38,  1           // InterfaceMethod jakarta/servlet/http/HttpServletRequest.getTrailerFields:()Ljava/util/Map;
       9: areturn

  public boolean isTrailerFieldsReady();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method _getHttpServletRequest:()Ljakarta/servlet/http/HttpServletRequest;
       4: invokeinterface #39,  1           // InterfaceMethod jakarta/servlet/http/HttpServletRequest.isTrailerFieldsReady:()Z
       9: ireturn
}
