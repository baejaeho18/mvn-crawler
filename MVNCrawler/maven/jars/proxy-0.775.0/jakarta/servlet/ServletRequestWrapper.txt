Compiled from "ServletRequestWrapper.java"
public class jakarta.servlet.ServletRequestWrapper implements jakarta.servlet.ServletRequest {
  private jakarta.servlet.ServletRequest request;

  public jakarta.servlet.ServletRequestWrapper(jakarta.servlet.ServletRequest);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #2                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #3                  // String Request cannot be null
      14: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: putfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
      23: return

  public jakarta.servlet.ServletRequest getRequest();
    Code:
       0: aload_0
       1: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
       4: areturn

  public void setRequest(jakarta.servlet.ServletRequest);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #3                  // String Request cannot be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: putfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
      19: return

  public java.lang.Object getAttribute(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
       4: aload_1
       5: invokeinterface #6,  2            // InterfaceMethod jakarta/servlet/ServletRequest.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      10: areturn

  public java.util.Enumeration<java.lang.String> getAttributeNames();
    Code:
       0: aload_0
       1: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
       4: invokeinterface #7,  1            // InterfaceMethod jakarta/servlet/ServletRequest.getAttributeNames:()Ljava/util/Enumeration;
       9: areturn

  public java.lang.String getCharacterEncoding();
    Code:
       0: aload_0
       1: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
       4: invokeinterface #8,  1            // InterfaceMethod jakarta/servlet/ServletRequest.getCharacterEncoding:()Ljava/lang/String;
       9: areturn

  public void setCharacterEncoding(java.lang.String) throws java.io.UnsupportedEncodingException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
       4: aload_1
       5: invokeinterface #9,  2            // InterfaceMethod jakarta/servlet/ServletRequest.setCharacterEncoding:(Ljava/lang/String;)V
      10: return

  public int getContentLength();
    Code:
       0: aload_0
       1: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
       4: invokeinterface #10,  1           // InterfaceMethod jakarta/servlet/ServletRequest.getContentLength:()I
       9: ireturn

  public long getContentLengthLong();
    Code:
       0: aload_0
       1: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
       4: invokeinterface #11,  1           // InterfaceMethod jakarta/servlet/ServletRequest.getContentLengthLong:()J
       9: lreturn

  public java.lang.String getContentType();
    Code:
       0: aload_0
       1: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
       4: invokeinterface #12,  1           // InterfaceMethod jakarta/servlet/ServletRequest.getContentType:()Ljava/lang/String;
       9: areturn

  public jakarta.servlet.ServletInputStream getInputStream() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
       4: invokeinterface #13,  1           // InterfaceMethod jakarta/servlet/ServletRequest.getInputStream:()Ljakarta/servlet/ServletInputStream;
       9: areturn

  public java.lang.String getParameter(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
       4: aload_1
       5: invokeinterface #14,  2           // InterfaceMethod jakarta/servlet/ServletRequest.getParameter:(Ljava/lang/String;)Ljava/lang/String;
      10: areturn

  public java.util.Map<java.lang.String, java.lang.String[]> getParameterMap();
    Code:
       0: aload_0
       1: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
       4: invokeinterface #15,  1           // InterfaceMethod jakarta/servlet/ServletRequest.getParameterMap:()Ljava/util/Map;
       9: areturn

  public java.util.Enumeration<java.lang.String> getParameterNames();
    Code:
       0: aload_0
       1: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
       4: invokeinterface #16,  1           // InterfaceMethod jakarta/servlet/ServletRequest.getParameterNames:()Ljava/util/Enumeration;
       9: areturn

  public java.lang.String[] getParameterValues(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
       4: aload_1
       5: invokeinterface #17,  2           // InterfaceMethod jakarta/servlet/ServletRequest.getParameterValues:(Ljava/lang/String;)[Ljava/lang/String;
      10: areturn

  public java.lang.String getProtocol();
    Code:
       0: aload_0
       1: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
       4: invokeinterface #18,  1           // InterfaceMethod jakarta/servlet/ServletRequest.getProtocol:()Ljava/lang/String;
       9: areturn

  public java.lang.String getScheme();
    Code:
       0: aload_0
       1: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
       4: invokeinterface #19,  1           // InterfaceMethod jakarta/servlet/ServletRequest.getScheme:()Ljava/lang/String;
       9: areturn

  public java.lang.String getServerName();
    Code:
       0: aload_0
       1: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
       4: invokeinterface #20,  1           // InterfaceMethod jakarta/servlet/ServletRequest.getServerName:()Ljava/lang/String;
       9: areturn

  public int getServerPort();
    Code:
       0: aload_0
       1: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
       4: invokeinterface #21,  1           // InterfaceMethod jakarta/servlet/ServletRequest.getServerPort:()I
       9: ireturn

  public java.io.BufferedReader getReader() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
       4: invokeinterface #22,  1           // InterfaceMethod jakarta/servlet/ServletRequest.getReader:()Ljava/io/BufferedReader;
       9: areturn

  public java.lang.String getRemoteAddr();
    Code:
       0: aload_0
       1: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
       4: invokeinterface #23,  1           // InterfaceMethod jakarta/servlet/ServletRequest.getRemoteAddr:()Ljava/lang/String;
       9: areturn

  public java.lang.String getRemoteHost();
    Code:
       0: aload_0
       1: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
       4: invokeinterface #24,  1           // InterfaceMethod jakarta/servlet/ServletRequest.getRemoteHost:()Ljava/lang/String;
       9: areturn

  public void setAttribute(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
       4: aload_1
       5: aload_2
       6: invokeinterface #25,  3           // InterfaceMethod jakarta/servlet/ServletRequest.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V
      11: return

  public void removeAttribute(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
       4: aload_1
       5: invokeinterface #26,  2           // InterfaceMethod jakarta/servlet/ServletRequest.removeAttribute:(Ljava/lang/String;)V
      10: return

  public java.util.Locale getLocale();
    Code:
       0: aload_0
       1: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
       4: invokeinterface #27,  1           // InterfaceMethod jakarta/servlet/ServletRequest.getLocale:()Ljava/util/Locale;
       9: areturn

  public java.util.Enumeration<java.util.Locale> getLocales();
    Code:
       0: aload_0
       1: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
       4: invokeinterface #28,  1           // InterfaceMethod jakarta/servlet/ServletRequest.getLocales:()Ljava/util/Enumeration;
       9: areturn

  public boolean isSecure();
    Code:
       0: aload_0
       1: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
       4: invokeinterface #29,  1           // InterfaceMethod jakarta/servlet/ServletRequest.isSecure:()Z
       9: ireturn

  public jakarta.servlet.RequestDispatcher getRequestDispatcher(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
       4: aload_1
       5: invokeinterface #30,  2           // InterfaceMethod jakarta/servlet/ServletRequest.getRequestDispatcher:(Ljava/lang/String;)Ljakarta/servlet/RequestDispatcher;
      10: areturn

  public int getRemotePort();
    Code:
       0: aload_0
       1: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
       4: invokeinterface #31,  1           // InterfaceMethod jakarta/servlet/ServletRequest.getRemotePort:()I
       9: ireturn

  public java.lang.String getLocalName();
    Code:
       0: aload_0
       1: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
       4: invokeinterface #32,  1           // InterfaceMethod jakarta/servlet/ServletRequest.getLocalName:()Ljava/lang/String;
       9: areturn

  public java.lang.String getLocalAddr();
    Code:
       0: aload_0
       1: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
       4: invokeinterface #33,  1           // InterfaceMethod jakarta/servlet/ServletRequest.getLocalAddr:()Ljava/lang/String;
       9: areturn

  public int getLocalPort();
    Code:
       0: aload_0
       1: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
       4: invokeinterface #34,  1           // InterfaceMethod jakarta/servlet/ServletRequest.getLocalPort:()I
       9: ireturn

  public jakarta.servlet.ServletContext getServletContext();
    Code:
       0: aload_0
       1: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
       4: invokeinterface #35,  1           // InterfaceMethod jakarta/servlet/ServletRequest.getServletContext:()Ljakarta/servlet/ServletContext;
       9: areturn

  public jakarta.servlet.AsyncContext startAsync() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
       4: invokeinterface #36,  1           // InterfaceMethod jakarta/servlet/ServletRequest.startAsync:()Ljakarta/servlet/AsyncContext;
       9: areturn

  public jakarta.servlet.AsyncContext startAsync(jakarta.servlet.ServletRequest, jakarta.servlet.ServletResponse) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
       4: aload_1
       5: aload_2
       6: invokeinterface #37,  3           // InterfaceMethod jakarta/servlet/ServletRequest.startAsync:(Ljakarta/servlet/ServletRequest;Ljakarta/servlet/ServletResponse;)Ljakarta/servlet/AsyncContext;
      11: areturn

  public boolean isAsyncStarted();
    Code:
       0: aload_0
       1: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
       4: invokeinterface #38,  1           // InterfaceMethod jakarta/servlet/ServletRequest.isAsyncStarted:()Z
       9: ireturn

  public boolean isAsyncSupported();
    Code:
       0: aload_0
       1: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
       4: invokeinterface #39,  1           // InterfaceMethod jakarta/servlet/ServletRequest.isAsyncSupported:()Z
       9: ireturn

  public jakarta.servlet.AsyncContext getAsyncContext();
    Code:
       0: aload_0
       1: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
       4: invokeinterface #40,  1           // InterfaceMethod jakarta/servlet/ServletRequest.getAsyncContext:()Ljakarta/servlet/AsyncContext;
       9: areturn

  public boolean isWrapperFor(jakarta.servlet.ServletRequest);
    Code:
       0: aload_0
       1: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
       4: aload_1
       5: if_acmpne     10
       8: iconst_1
       9: ireturn
      10: aload_0
      11: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
      14: instanceof    #41                 // class jakarta/servlet/ServletRequestWrapper
      17: ifeq          32
      20: aload_0
      21: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
      24: checkcast     #41                 // class jakarta/servlet/ServletRequestWrapper
      27: aload_1
      28: invokevirtual #42                 // Method isWrapperFor:(Ljakarta/servlet/ServletRequest;)Z
      31: ireturn
      32: iconst_0
      33: ireturn

  public boolean isWrapperFor(java.lang.Class<?>);
    Code:
       0: ldc           #43                 // class jakarta/servlet/ServletRequest
       2: aload_1
       3: invokevirtual #44                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       6: ifne          31
       9: new           #2                  // class java/lang/IllegalArgumentException
      12: dup
      13: aload_1
      14: invokevirtual #45                 // Method java/lang/Class.getName:()Ljava/lang/String;
      17: ldc           #43                 // class jakarta/servlet/ServletRequest
      19: invokevirtual #45                 // Method java/lang/Class.getName:()Ljava/lang/String;
      22: invokedynamic #46,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      27: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_1
      32: aload_0
      33: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
      36: invokevirtual #47                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      39: invokevirtual #44                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      42: ifeq          47
      45: iconst_1
      46: ireturn
      47: aload_0
      48: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
      51: instanceof    #41                 // class jakarta/servlet/ServletRequestWrapper
      54: ifeq          69
      57: aload_0
      58: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
      61: checkcast     #41                 // class jakarta/servlet/ServletRequestWrapper
      64: aload_1
      65: invokevirtual #48                 // Method isWrapperFor:(Ljava/lang/Class;)Z
      68: ireturn
      69: iconst_0
      70: ireturn

  public jakarta.servlet.DispatcherType getDispatcherType();
    Code:
       0: aload_0
       1: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
       4: invokeinterface #49,  1           // InterfaceMethod jakarta/servlet/ServletRequest.getDispatcherType:()Ljakarta/servlet/DispatcherType;
       9: areturn

  public java.lang.String getRequestId();
    Code:
       0: aload_0
       1: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
       4: invokeinterface #50,  1           // InterfaceMethod jakarta/servlet/ServletRequest.getRequestId:()Ljava/lang/String;
       9: areturn

  public java.lang.String getProtocolRequestId();
    Code:
       0: aload_0
       1: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
       4: invokeinterface #51,  1           // InterfaceMethod jakarta/servlet/ServletRequest.getProtocolRequestId:()Ljava/lang/String;
       9: areturn

  public jakarta.servlet.ServletConnection getServletConnection();
    Code:
       0: aload_0
       1: getfield      #5                  // Field request:Ljakarta/servlet/ServletRequest;
       4: invokeinterface #52,  1           // InterfaceMethod jakarta/servlet/ServletRequest.getServletConnection:()Ljakarta/servlet/ServletConnection;
       9: areturn
}
