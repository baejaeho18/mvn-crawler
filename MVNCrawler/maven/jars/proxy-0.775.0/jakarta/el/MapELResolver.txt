Compiled from "MapELResolver.java"
public class jakarta.el.MapELResolver extends jakarta.el.ELResolver {
  private static java.lang.Class<?> theUnmodifiableMapClass;

  private boolean isReadOnly;

  public jakarta.el.MapELResolver();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method jakarta/el/ELResolver."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field isReadOnly:Z
       9: return

  public jakarta.el.MapELResolver(boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method jakarta/el/ELResolver."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field isReadOnly:Z
       9: return

  public java.lang.Class<?> getType(jakarta.el.ELContext, java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #3                  // class java/lang/NullPointerException
       7: dup
       8: invokespecial #4                  // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: aload_2
      13: ifnull        31
      16: aload_2
      17: instanceof    #5                  // class java/util/Map
      20: ifeq          31
      23: aload_1
      24: iconst_1
      25: invokevirtual #6                  // Method jakarta/el/ELContext.setPropertyResolved:(Z)V
      28: ldc           #7                  // class java/lang/Object
      30: areturn
      31: aconst_null
      32: areturn

  public java.lang.Object getValue(jakarta.el.ELContext, java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #3                  // class java/lang/NullPointerException
       7: dup
       8: invokespecial #4                  // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: aload_2
      13: ifnull        44
      16: aload_2
      17: instanceof    #5                  // class java/util/Map
      20: ifeq          44
      23: aload_1
      24: aload_2
      25: aload_3
      26: invokevirtual #8                  // Method jakarta/el/ELContext.setPropertyResolved:(Ljava/lang/Object;Ljava/lang/Object;)V
      29: aload_2
      30: checkcast     #5                  // class java/util/Map
      33: astore        4
      35: aload         4
      37: aload_3
      38: invokeinterface #9,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      43: areturn
      44: aconst_null
      45: areturn

  public void setValue(jakarta.el.ELContext, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #3                  // class java/lang/NullPointerException
       7: dup
       8: invokespecial #4                  // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: aload_2
      13: ifnull        85
      16: aload_2
      17: instanceof    #5                  // class java/util/Map
      20: ifeq          85
      23: aload_1
      24: aload_2
      25: aload_3
      26: invokevirtual #8                  // Method jakarta/el/ELContext.setPropertyResolved:(Ljava/lang/Object;Ljava/lang/Object;)V
      29: aload_2
      30: checkcast     #5                  // class java/util/Map
      33: astore        5
      35: aload_0
      36: getfield      #2                  // Field isReadOnly:Z
      39: ifne          53
      42: aload         5
      44: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      47: getstatic     #11                 // Field theUnmodifiableMapClass:Ljava/lang/Class;
      50: if_acmpne     61
      53: new           #12                 // class jakarta/el/PropertyNotWritableException
      56: dup
      57: invokespecial #13                 // Method jakarta/el/PropertyNotWritableException."<init>":()V
      60: athrow
      61: aload         5
      63: aload_3
      64: aload         4
      66: invokeinterface #14,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      71: pop
      72: goto          85
      75: astore        6
      77: new           #12                 // class jakarta/el/PropertyNotWritableException
      80: dup
      81: invokespecial #13                 // Method jakarta/el/PropertyNotWritableException."<init>":()V
      84: athrow
      85: return
    Exception table:
       from    to  target type
          61    72    75   Class java/lang/UnsupportedOperationException

  public boolean isReadOnly(jakarta.el.ELContext, java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #3                  // class java/lang/NullPointerException
       7: dup
       8: invokespecial #4                  // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: aload_2
      13: ifnull        58
      16: aload_2
      17: instanceof    #5                  // class java/util/Map
      20: ifeq          58
      23: aload_1
      24: iconst_1
      25: invokevirtual #6                  // Method jakarta/el/ELContext.setPropertyResolved:(Z)V
      28: aload_2
      29: checkcast     #5                  // class java/util/Map
      32: astore        4
      34: aload_0
      35: getfield      #2                  // Field isReadOnly:Z
      38: ifne          52
      41: aload         4
      43: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      46: getstatic     #11                 // Field theUnmodifiableMapClass:Ljava/lang/Class;
      49: if_acmpne     56
      52: iconst_1
      53: goto          57
      56: iconst_0
      57: ireturn
      58: iconst_0
      59: ireturn

  public java.util.Iterator<java.beans.FeatureDescriptor> getFeatureDescriptors(jakarta.el.ELContext, java.lang.Object);
    Code:
       0: aload_2
       1: ifnull        169
       4: aload_2
       5: instanceof    #5                  // class java/util/Map
       8: ifeq          169
      11: aload_2
      12: checkcast     #5                  // class java/util/Map
      15: astore_3
      16: aload_3
      17: invokeinterface #16,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      22: invokeinterface #17,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      27: astore        4
      29: new           #18                 // class java/util/ArrayList
      32: dup
      33: invokespecial #19                 // Method java/util/ArrayList."<init>":()V
      36: astore        5
      38: aload         4
      40: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      45: ifeq          161
      48: aload         4
      50: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      55: astore        6
      57: new           #22                 // class java/beans/FeatureDescriptor
      60: dup
      61: invokespecial #23                 // Method java/beans/FeatureDescriptor."<init>":()V
      64: astore        7
      66: aload         6
      68: ifnonnull     75
      71: aconst_null
      72: goto          80
      75: aload         6
      77: invokevirtual #24                 // Method java/lang/Object.toString:()Ljava/lang/String;
      80: astore        8
      82: aload         7
      84: aload         8
      86: invokevirtual #25                 // Method java/beans/FeatureDescriptor.setName:(Ljava/lang/String;)V
      89: aload         7
      91: aload         8
      93: invokevirtual #26                 // Method java/beans/FeatureDescriptor.setDisplayName:(Ljava/lang/String;)V
      96: aload         7
      98: ldc           #27                 // String
     100: invokevirtual #28                 // Method java/beans/FeatureDescriptor.setShortDescription:(Ljava/lang/String;)V
     103: aload         7
     105: iconst_0
     106: invokevirtual #29                 // Method java/beans/FeatureDescriptor.setExpert:(Z)V
     109: aload         7
     111: iconst_0
     112: invokevirtual #30                 // Method java/beans/FeatureDescriptor.setHidden:(Z)V
     115: aload         7
     117: iconst_1
     118: invokevirtual #31                 // Method java/beans/FeatureDescriptor.setPreferred:(Z)V
     121: aload         6
     123: ifnull        138
     126: aload         7
     128: ldc           #32                 // String type
     130: aload         6
     132: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     135: invokevirtual #33                 // Method java/beans/FeatureDescriptor.setValue:(Ljava/lang/String;Ljava/lang/Object;)V
     138: aload         7
     140: ldc           #34                 // String resolvableAtDesignTime
     142: getstatic     #35                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
     145: invokevirtual #33                 // Method java/beans/FeatureDescriptor.setValue:(Ljava/lang/String;Ljava/lang/Object;)V
     148: aload         5
     150: aload         7
     152: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     157: pop
     158: goto          38
     161: aload         5
     163: invokeinterface #37,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     168: areturn
     169: aconst_null
     170: areturn

  public java.lang.Class<?> getCommonPropertyType(jakarta.el.ELContext, java.lang.Object);
    Code:
       0: aload_2
       1: ifnull        14
       4: aload_2
       5: instanceof    #5                  // class java/util/Map
       8: ifeq          14
      11: ldc           #7                  // class java/lang/Object
      13: areturn
      14: aconst_null
      15: areturn

  static {};
    Code:
       0: new           #38                 // class java/util/HashMap
       3: dup
       4: invokespecial #39                 // Method java/util/HashMap."<init>":()V
       7: invokestatic  #40                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      10: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      13: putstatic     #11                 // Field theUnmodifiableMapClass:Ljava/lang/Class;
      16: return
}
