Compiled from "SSLUtil.scala"
public final class io.youi.server.util.SSLUtil$ {
  public static final io.youi.server.util.SSLUtil$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class io/youi/server/util/SSLUtil$
       3: invokespecial #12                 // Method "<init>":()V
       6: return

  public javax.net.ssl.SSLContext createSSLContext(java.io.File, java.lang.String);
    Code:
       0: aload_2
       1: invokevirtual #20                 // Method java/lang/String.toCharArray:()[C
       4: astore_3
       5: ldc           #22                 // String JKS
       7: invokestatic  #28                 // Method java/security/KeyStore.getInstance:(Ljava/lang/String;)Ljava/security/KeyStore;
      10: astore        4
      12: getstatic     #33                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      15: aload_1
      16: invokevirtual #39                 // Method java/io/File.exists:()Z
      19: new           #41                 // class io/youi/server/util/SSLUtil$$anonfun$createSSLContext$1
      22: dup
      23: aload_1
      24: invokespecial #44                 // Method io/youi/server/util/SSLUtil$$anonfun$createSSLContext$1."<init>":(Ljava/io/File;)V
      27: invokevirtual #48                 // Method scala/Predef$.assert:(ZLscala/Function0;)V
      30: aload_1
      31: invokevirtual #52                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
      34: iconst_0
      35: anewarray     #54                 // class java/nio/file/OpenOption
      38: invokestatic  #60                 // Method java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;
      41: astore        5
      43: aload         4
      45: aload         5
      47: aload_3
      48: invokevirtual #64                 // Method java/security/KeyStore.load:(Ljava/io/InputStream;[C)V
      51: invokestatic  #70                 // Method javax/net/ssl/KeyManagerFactory.getDefaultAlgorithm:()Ljava/lang/String;
      54: invokestatic  #73                 // Method javax/net/ssl/KeyManagerFactory.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/KeyManagerFactory;
      57: astore        6
      59: aload         6
      61: aload         4
      63: aload_3
      64: invokevirtual #77                 // Method javax/net/ssl/KeyManagerFactory.init:(Ljava/security/KeyStore;[C)V
      67: aload         6
      69: invokevirtual #81                 // Method javax/net/ssl/KeyManagerFactory.getKeyManagers:()[Ljavax/net/ssl/KeyManager;
      72: astore        7
      74: invokestatic  #84                 // Method javax/net/ssl/TrustManagerFactory.getDefaultAlgorithm:()Ljava/lang/String;
      77: invokestatic  #87                 // Method javax/net/ssl/TrustManagerFactory.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/TrustManagerFactory;
      80: astore        8
      82: aload         8
      84: aload         4
      86: invokevirtual #90                 // Method javax/net/ssl/TrustManagerFactory.init:(Ljava/security/KeyStore;)V
      89: aload         8
      91: invokevirtual #94                 // Method javax/net/ssl/TrustManagerFactory.getTrustManagers:()[Ljavax/net/ssl/TrustManager;
      94: astore        9
      96: ldc           #96                 // String TLS
      98: invokestatic  #101                // Method javax/net/ssl/SSLContext.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;
     101: astore        10
     103: aload         10
     105: aload         7
     107: aload         9
     109: aconst_null
     110: invokevirtual #104                // Method javax/net/ssl/SSLContext.init:([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;)V
     113: aload         10
     115: areturn

  private io.youi.server.util.SSLUtil$();
    Code:
       0: aload_0
       1: invokespecial #126                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #128                // Field MODULE$:Lio/youi/server/util/SSLUtil$;
       8: return
}
