Compiled from "Limit.scala"
public final class zio.aws.shield.model.Limit$Wrapper implements zio.aws.shield.model.Limit$ReadOnly {
  private final scala.Option<java.lang.String> type;

  private final scala.Option<java.lang.Object> max;

  public zio.aws.shield.model.Limit asEditable();
    Code:
       0: aload_0
       1: invokestatic  #27                 // InterfaceMethod zio/aws/shield/model/Limit$ReadOnly.asEditable$:(Lzio/aws/shield/model/Limit$ReadOnly;)Lzio/aws/shield/model/Limit;
       4: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.String> getType();
    Code:
       0: aload_0
       1: invokestatic  #36                 // InterfaceMethod zio/aws/shield/model/Limit$ReadOnly.getType$:(Lzio/aws/shield/model/Limit$ReadOnly;)Lzio/ZIO;
       4: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.Object> getMax();
    Code:
       0: aload_0
       1: invokestatic  #41                 // InterfaceMethod zio/aws/shield/model/Limit$ReadOnly.getMax$:(Lzio/aws/shield/model/Limit$ReadOnly;)Lzio/ZIO;
       4: areturn

  public scala.Option<java.lang.String> type();
    Code:
       0: aload_0
       1: getfield      #45                 // Field type:Lscala/Option;
       4: areturn

  public scala.Option<java.lang.Object> max();
    Code:
       0: aload_0
       1: getfield      #48                 // Field max:Lscala/Option;
       4: areturn

  public static final java.lang.String $anonfun$type$1(java.lang.String);
    Code:
       0: aload_0
       1: areturn

  public static final long $anonfun$max$1(java.lang.Long);
    Code:
       0: getstatic     #60                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: invokevirtual #63                 // Method scala/Predef$.Long2long:(Ljava/lang/Long;)J
       7: lreturn

  public zio.aws.shield.model.Limit$Wrapper(software.amazon.awssdk.services.shield.model.Limit);
    Code:
       0: aload_0
       1: invokespecial #70                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #74                 // InterfaceMethod zio/aws/shield/model/Limit$ReadOnly.$init$:(Lzio/aws/shield/model/Limit$ReadOnly;)V
       8: aload_0
       9: getstatic     #79                 // Field scala/Option$.MODULE$:Lscala/Option$;
      12: aload_1
      13: invokevirtual #84                 // Method software/amazon/awssdk/services/shield/model/Limit.type:()Ljava/lang/String;
      16: invokevirtual #88                 // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
      19: invokedynamic #106,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
      24: invokevirtual #112                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      27: putfield      #45                 // Field type:Lscala/Option;
      30: aload_0
      31: getstatic     #79                 // Field scala/Option$.MODULE$:Lscala/Option$;
      34: aload_1
      35: invokevirtual #115                // Method software/amazon/awssdk/services/shield/model/Limit.max:()Ljava/lang/Long;
      38: invokevirtual #88                 // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
      41: invokedynamic #122,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
      46: invokevirtual #112                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      49: putfield      #48                 // Field max:Lscala/Option;
      52: return

  public static final java.lang.Object $anonfun$max$1$adapted(java.lang.Long);
    Code:
       0: aload_0
       1: invokestatic  #125                // Method $anonfun$max$1:(Ljava/lang/Long;)J
       4: invokestatic  #131                // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
       7: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #143,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
