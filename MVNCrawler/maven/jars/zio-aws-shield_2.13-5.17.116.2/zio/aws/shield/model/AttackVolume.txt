Compiled from "AttackVolume.scala"
public final class zio.aws.shield.model.AttackVolume implements scala.Product,java.io.Serializable {
  private final scala.Option<zio.aws.shield.model.AttackVolumeStatistics> bitsPerSecond;

  private final scala.Option<zio.aws.shield.model.AttackVolumeStatistics> packetsPerSecond;

  private final scala.Option<zio.aws.shield.model.AttackVolumeStatistics> requestsPerSecond;

  public static scala.Option<zio.aws.shield.model.AttackVolumeStatistics> $lessinit$greater$default$3();
    Code:
       0: getstatic     #47                 // Field zio/aws/shield/model/AttackVolume$.MODULE$:Lzio/aws/shield/model/AttackVolume$;
       3: invokevirtual #49                 // Method zio/aws/shield/model/AttackVolume$.$lessinit$greater$default$3:()Lscala/Option;
       6: areturn

  public static scala.Option<zio.aws.shield.model.AttackVolumeStatistics> $lessinit$greater$default$2();
    Code:
       0: getstatic     #47                 // Field zio/aws/shield/model/AttackVolume$.MODULE$:Lzio/aws/shield/model/AttackVolume$;
       3: invokevirtual #52                 // Method zio/aws/shield/model/AttackVolume$.$lessinit$greater$default$2:()Lscala/Option;
       6: areturn

  public static scala.Option<zio.aws.shield.model.AttackVolumeStatistics> $lessinit$greater$default$1();
    Code:
       0: getstatic     #47                 // Field zio/aws/shield/model/AttackVolume$.MODULE$:Lzio/aws/shield/model/AttackVolume$;
       3: invokevirtual #55                 // Method zio/aws/shield/model/AttackVolume$.$lessinit$greater$default$1:()Lscala/Option;
       6: areturn

  public static scala.Option<scala.Tuple3<scala.Option<zio.aws.shield.model.AttackVolumeStatistics>, scala.Option<zio.aws.shield.model.AttackVolumeStatistics>, scala.Option<zio.aws.shield.model.AttackVolumeStatistics>>> unapply(zio.aws.shield.model.AttackVolume);
    Code:
       0: getstatic     #47                 // Field zio/aws/shield/model/AttackVolume$.MODULE$:Lzio/aws/shield/model/AttackVolume$;
       3: aload_0
       4: invokevirtual #61                 // Method zio/aws/shield/model/AttackVolume$.unapply:(Lzio/aws/shield/model/AttackVolume;)Lscala/Option;
       7: areturn

  public static scala.Option<zio.aws.shield.model.AttackVolumeStatistics> apply$default$3();
    Code:
       0: getstatic     #47                 // Field zio/aws/shield/model/AttackVolume$.MODULE$:Lzio/aws/shield/model/AttackVolume$;
       3: invokevirtual #65                 // Method zio/aws/shield/model/AttackVolume$.apply$default$3:()Lscala/Option;
       6: areturn

  public static scala.Option<zio.aws.shield.model.AttackVolumeStatistics> apply$default$2();
    Code:
       0: getstatic     #47                 // Field zio/aws/shield/model/AttackVolume$.MODULE$:Lzio/aws/shield/model/AttackVolume$;
       3: invokevirtual #68                 // Method zio/aws/shield/model/AttackVolume$.apply$default$2:()Lscala/Option;
       6: areturn

  public static scala.Option<zio.aws.shield.model.AttackVolumeStatistics> apply$default$1();
    Code:
       0: getstatic     #47                 // Field zio/aws/shield/model/AttackVolume$.MODULE$:Lzio/aws/shield/model/AttackVolume$;
       3: invokevirtual #71                 // Method zio/aws/shield/model/AttackVolume$.apply$default$1:()Lscala/Option;
       6: areturn

  public static zio.aws.shield.model.AttackVolume apply(scala.Option<zio.aws.shield.model.AttackVolumeStatistics>, scala.Option<zio.aws.shield.model.AttackVolumeStatistics>, scala.Option<zio.aws.shield.model.AttackVolumeStatistics>);
    Code:
       0: getstatic     #47                 // Field zio/aws/shield/model/AttackVolume$.MODULE$:Lzio/aws/shield/model/AttackVolume$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #76                 // Method zio/aws/shield/model/AttackVolume$.apply:(Lscala/Option;Lscala/Option;Lscala/Option;)Lzio/aws/shield/model/AttackVolume;
       9: areturn

  public static zio.aws.shield.model.AttackVolume$ReadOnly wrap(software.amazon.awssdk.services.shield.model.AttackVolume);
    Code:
       0: getstatic     #47                 // Field zio/aws/shield/model/AttackVolume$.MODULE$:Lzio/aws/shield/model/AttackVolume$;
       3: aload_0
       4: invokevirtual #81                 // Method zio/aws/shield/model/AttackVolume$.wrap:(Lsoftware/amazon/awssdk/services/shield/model/AttackVolume;)Lzio/aws/shield/model/AttackVolume$ReadOnly;
       7: areturn

  public scala.collection.Iterator<java.lang.String> productElementNames();
    Code:
       0: aload_0
       1: invokestatic  #89                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public scala.Option<zio.aws.shield.model.AttackVolumeStatistics> bitsPerSecond();
    Code:
       0: aload_0
       1: getfield      #92                 // Field bitsPerSecond:Lscala/Option;
       4: areturn

  public scala.Option<zio.aws.shield.model.AttackVolumeStatistics> packetsPerSecond();
    Code:
       0: aload_0
       1: getfield      #94                 // Field packetsPerSecond:Lscala/Option;
       4: areturn

  public scala.Option<zio.aws.shield.model.AttackVolumeStatistics> requestsPerSecond();
    Code:
       0: aload_0
       1: getfield      #96                 // Field requestsPerSecond:Lscala/Option;
       4: areturn

  public software.amazon.awssdk.services.shield.model.AttackVolume buildAwsValue();
    Code:
       0: getstatic     #47                 // Field zio/aws/shield/model/AttackVolume$.MODULE$:Lzio/aws/shield/model/AttackVolume$;
       3: invokevirtual #102                // Method zio/aws/shield/model/AttackVolume$.zio$aws$shield$model$AttackVolume$$zioAwsBuilderHelper:()Lzio/aws/core/BuilderHelper;
       6: getstatic     #47                 // Field zio/aws/shield/model/AttackVolume$.MODULE$:Lzio/aws/shield/model/AttackVolume$;
       9: invokevirtual #102                // Method zio/aws/shield/model/AttackVolume$.zio$aws$shield$model$AttackVolume$$zioAwsBuilderHelper:()Lzio/aws/core/BuilderHelper;
      12: getstatic     #47                 // Field zio/aws/shield/model/AttackVolume$.MODULE$:Lzio/aws/shield/model/AttackVolume$;
      15: invokevirtual #102                // Method zio/aws/shield/model/AttackVolume$.zio$aws$shield$model$AttackVolume$$zioAwsBuilderHelper:()Lzio/aws/core/BuilderHelper;
      18: invokestatic  #106                // Method software/amazon/awssdk/services/shield/model/AttackVolume.builder:()Lsoftware/amazon/awssdk/services/shield/model/AttackVolume$Builder;
      21: invokeinterface #109,  2          // InterfaceMethod zio/aws/core/BuilderHelper.BuilderOps:(Lsoftware/amazon/awssdk/utils/builder/SdkBuilder;)Lzio/aws/core/BuilderHelper$BuilderOps;
      26: aload_0
      27: invokevirtual #111                // Method bitsPerSecond:()Lscala/Option;
      30: invokedynamic #131,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
      35: invokevirtual #137                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      38: invokedynamic #144,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
      43: invokevirtual #148                // Method zio/aws/core/BuilderHelper$BuilderOps.optionallyWith:(Lscala/Option;Lscala/Function1;)Lsoftware/amazon/awssdk/utils/builder/SdkBuilder;
      46: invokeinterface #109,  2          // InterfaceMethod zio/aws/core/BuilderHelper.BuilderOps:(Lsoftware/amazon/awssdk/utils/builder/SdkBuilder;)Lzio/aws/core/BuilderHelper$BuilderOps;
      51: aload_0
      52: invokevirtual #150                // Method packetsPerSecond:()Lscala/Option;
      55: invokedynamic #155,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
      60: invokevirtual #137                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      63: invokedynamic #160,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
      68: invokevirtual #148                // Method zio/aws/core/BuilderHelper$BuilderOps.optionallyWith:(Lscala/Option;Lscala/Function1;)Lsoftware/amazon/awssdk/utils/builder/SdkBuilder;
      71: invokeinterface #109,  2          // InterfaceMethod zio/aws/core/BuilderHelper.BuilderOps:(Lsoftware/amazon/awssdk/utils/builder/SdkBuilder;)Lzio/aws/core/BuilderHelper$BuilderOps;
      76: aload_0
      77: invokevirtual #162                // Method requestsPerSecond:()Lscala/Option;
      80: invokedynamic #167,  0            // InvokeDynamic #4:apply:()Lscala/Function1;
      85: invokevirtual #137                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      88: invokedynamic #172,  0            // InvokeDynamic #5:apply:()Lscala/Function1;
      93: invokevirtual #148                // Method zio/aws/core/BuilderHelper$BuilderOps.optionallyWith:(Lscala/Option;Lscala/Function1;)Lsoftware/amazon/awssdk/utils/builder/SdkBuilder;
      96: invokeinterface #178,  1          // InterfaceMethod software/amazon/awssdk/utils/builder/SdkBuilder.build:()Ljava/lang/Object;
     101: checkcast     #21                 // class software/amazon/awssdk/services/shield/model/AttackVolume
     104: areturn

  public zio.aws.shield.model.AttackVolume$ReadOnly asReadOnly();
    Code:
       0: getstatic     #47                 // Field zio/aws/shield/model/AttackVolume$.MODULE$:Lzio/aws/shield/model/AttackVolume$;
       3: aload_0
       4: invokevirtual #182                // Method buildAwsValue:()Lsoftware/amazon/awssdk/services/shield/model/AttackVolume;
       7: invokevirtual #81                 // Method zio/aws/shield/model/AttackVolume$.wrap:(Lsoftware/amazon/awssdk/services/shield/model/AttackVolume;)Lzio/aws/shield/model/AttackVolume$ReadOnly;
      10: areturn

  public zio.aws.shield.model.AttackVolume copy(scala.Option<zio.aws.shield.model.AttackVolumeStatistics>, scala.Option<zio.aws.shield.model.AttackVolumeStatistics>, scala.Option<zio.aws.shield.model.AttackVolumeStatistics>);
    Code:
       0: new           #2                  // class zio/aws/shield/model/AttackVolume
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokespecial #187                // Method "<init>":(Lscala/Option;Lscala/Option;Lscala/Option;)V
      10: areturn

  public scala.Option<zio.aws.shield.model.AttackVolumeStatistics> copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #111                // Method bitsPerSecond:()Lscala/Option;
       4: areturn

  public scala.Option<zio.aws.shield.model.AttackVolumeStatistics> copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #150                // Method packetsPerSecond:()Lscala/Option;
       4: areturn

  public scala.Option<zio.aws.shield.model.AttackVolumeStatistics> copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #162                // Method requestsPerSecond:()Lscala/Option;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #194                // String AttackVolume
       2: areturn

  public int productArity();
    Code:
       0: iconst_3
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 2
                     0: 28
                     1: 35
                     2: 42
               default: 49
          }
      28: aload_0
      29: invokevirtual #111                // Method bitsPerSecond:()Lscala/Option;
      32: goto          56
      35: aload_0
      36: invokevirtual #150                // Method packetsPerSecond:()Lscala/Option;
      39: goto          56
      42: aload_0
      43: invokevirtual #162                // Method requestsPerSecond:()Lscala/Option;
      46: goto          56
      49: iload_1
      50: invokestatic  #204                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
      53: goto          56
      56: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #212                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #215                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class zio/aws/shield/model/AttackVolume
       4: ireturn

  public java.lang.String productElementName(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 2
                     0: 28
                     1: 33
                     2: 38
               default: 43
          }
      28: ldc           #221                // String bitsPerSecond
      30: goto          53
      33: ldc           #222                // String packetsPerSecond
      35: goto          53
      38: ldc           #223                // String requestsPerSecond
      40: goto          53
      43: iload_1
      44: invokestatic  #204                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
      47: checkcast     #225                // class java/lang/String
      50: goto          53
      53: areturn

  public int hashCode();
    Code:
       0: getstatic     #212                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #230                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #212                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #235                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     141
       5: aload_1
       6: astore_3
       7: aload_3
       8: instanceof    #2                  // class zio/aws/shield/model/AttackVolume
      11: ifeq          19
      14: iconst_1
      15: istore_2
      16: goto          27
      19: goto          22
      22: iconst_0
      23: istore_2
      24: goto          27
      27: iload_2
      28: ifeq          145
      31: aload_1
      32: checkcast     #2                  // class zio/aws/shield/model/AttackVolume
      35: astore        4
      37: aload_0
      38: invokevirtual #111                // Method bitsPerSecond:()Lscala/Option;
      41: aload         4
      43: invokevirtual #111                // Method bitsPerSecond:()Lscala/Option;
      46: astore        5
      48: dup
      49: ifnonnull     61
      52: pop
      53: aload         5
      55: ifnull        69
      58: goto          137
      61: aload         5
      63: invokevirtual #238                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      66: ifeq          137
      69: aload_0
      70: invokevirtual #150                // Method packetsPerSecond:()Lscala/Option;
      73: aload         4
      75: invokevirtual #150                // Method packetsPerSecond:()Lscala/Option;
      78: astore        6
      80: dup
      81: ifnonnull     93
      84: pop
      85: aload         6
      87: ifnull        101
      90: goto          137
      93: aload         6
      95: invokevirtual #238                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      98: ifeq          137
     101: aload_0
     102: invokevirtual #162                // Method requestsPerSecond:()Lscala/Option;
     105: aload         4
     107: invokevirtual #162                // Method requestsPerSecond:()Lscala/Option;
     110: astore        7
     112: dup
     113: ifnonnull     125
     116: pop
     117: aload         7
     119: ifnull        133
     122: goto          137
     125: aload         7
     127: invokevirtual #238                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     130: ifeq          137
     133: iconst_1
     134: goto          138
     137: iconst_0
     138: ifeq          145
     141: iconst_1
     142: goto          146
     145: iconst_0
     146: ireturn

  public static final software.amazon.awssdk.services.shield.model.AttackVolumeStatistics $anonfun$buildAwsValue$1(zio.aws.shield.model.AttackVolumeStatistics);
    Code:
       0: aload_0
       1: invokevirtual #244                // Method zio/aws/shield/model/AttackVolumeStatistics.buildAwsValue:()Lsoftware/amazon/awssdk/services/shield/model/AttackVolumeStatistics;
       4: areturn

  public static final software.amazon.awssdk.services.shield.model.AttackVolume$Builder $anonfun$buildAwsValue$3(software.amazon.awssdk.services.shield.model.AttackVolume$Builder, software.amazon.awssdk.services.shield.model.AttackVolumeStatistics);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #251,  2          // InterfaceMethod software/amazon/awssdk/services/shield/model/AttackVolume$Builder.bitsPerSecond:(Lsoftware/amazon/awssdk/services/shield/model/AttackVolumeStatistics;)Lsoftware/amazon/awssdk/services/shield/model/AttackVolume$Builder;
       7: areturn

  public static final scala.Function1 $anonfun$buildAwsValue$2(software.amazon.awssdk.services.shield.model.AttackVolume$Builder);
    Code:
       0: aload_0
       1: invokedynamic #259,  0            // InvokeDynamic #6:apply:(Lsoftware/amazon/awssdk/services/shield/model/AttackVolume$Builder;)Lscala/Function1;
       6: areturn

  public static final software.amazon.awssdk.services.shield.model.AttackVolumeStatistics $anonfun$buildAwsValue$4(zio.aws.shield.model.AttackVolumeStatistics);
    Code:
       0: aload_0
       1: invokevirtual #244                // Method zio/aws/shield/model/AttackVolumeStatistics.buildAwsValue:()Lsoftware/amazon/awssdk/services/shield/model/AttackVolumeStatistics;
       4: areturn

  public static final software.amazon.awssdk.services.shield.model.AttackVolume$Builder $anonfun$buildAwsValue$6(software.amazon.awssdk.services.shield.model.AttackVolume$Builder, software.amazon.awssdk.services.shield.model.AttackVolumeStatistics);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #263,  2          // InterfaceMethod software/amazon/awssdk/services/shield/model/AttackVolume$Builder.packetsPerSecond:(Lsoftware/amazon/awssdk/services/shield/model/AttackVolumeStatistics;)Lsoftware/amazon/awssdk/services/shield/model/AttackVolume$Builder;
       7: areturn

  public static final scala.Function1 $anonfun$buildAwsValue$5(software.amazon.awssdk.services.shield.model.AttackVolume$Builder);
    Code:
       0: aload_0
       1: invokedynamic #268,  0            // InvokeDynamic #7:apply:(Lsoftware/amazon/awssdk/services/shield/model/AttackVolume$Builder;)Lscala/Function1;
       6: areturn

  public static final software.amazon.awssdk.services.shield.model.AttackVolumeStatistics $anonfun$buildAwsValue$7(zio.aws.shield.model.AttackVolumeStatistics);
    Code:
       0: aload_0
       1: invokevirtual #244                // Method zio/aws/shield/model/AttackVolumeStatistics.buildAwsValue:()Lsoftware/amazon/awssdk/services/shield/model/AttackVolumeStatistics;
       4: areturn

  public static final software.amazon.awssdk.services.shield.model.AttackVolume$Builder $anonfun$buildAwsValue$9(software.amazon.awssdk.services.shield.model.AttackVolume$Builder, software.amazon.awssdk.services.shield.model.AttackVolumeStatistics);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #272,  2          // InterfaceMethod software/amazon/awssdk/services/shield/model/AttackVolume$Builder.requestsPerSecond:(Lsoftware/amazon/awssdk/services/shield/model/AttackVolumeStatistics;)Lsoftware/amazon/awssdk/services/shield/model/AttackVolume$Builder;
       7: areturn

  public static final scala.Function1 $anonfun$buildAwsValue$8(software.amazon.awssdk.services.shield.model.AttackVolume$Builder);
    Code:
       0: aload_0
       1: invokedynamic #277,  0            // InvokeDynamic #8:apply:(Lsoftware/amazon/awssdk/services/shield/model/AttackVolume$Builder;)Lscala/Function1;
       6: areturn

  public zio.aws.shield.model.AttackVolume(scala.Option<zio.aws.shield.model.AttackVolumeStatistics>, scala.Option<zio.aws.shield.model.AttackVolumeStatistics>, scala.Option<zio.aws.shield.model.AttackVolumeStatistics>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #92                 // Field bitsPerSecond:Lscala/Option;
       5: aload_0
       6: aload_2
       7: putfield      #94                 // Field packetsPerSecond:Lscala/Option;
      10: aload_0
      11: aload_3
      12: putfield      #96                 // Field requestsPerSecond:Lscala/Option;
      15: aload_0
      16: invokespecial #281                // Method java/lang/Object."<init>":()V
      19: aload_0
      20: invokestatic  #285                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
      23: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #297,  0            // InvokeDynamic #9:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
