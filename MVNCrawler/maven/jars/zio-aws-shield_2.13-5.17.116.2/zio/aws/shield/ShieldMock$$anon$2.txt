Compiled from "ShieldMock.scala"
public final class zio.aws.shield.ShieldMock$$anon$2 implements zio.aws.shield.Shield {
  private final software.amazon.awssdk.services.shield.ShieldAsyncClient api;

  private final zio.test.mock.Proxy proxy$1;

  private final zio.Runtime rts$1;

  public software.amazon.awssdk.services.shield.ShieldAsyncClient api();
    Code:
       0: aload_0
       1: getfield      #295                // Field api:Lsoftware/amazon/awssdk/services/shield/ShieldAsyncClient;
       4: areturn

  public <R1> zio.aws.shield.Shield withAspect(zio.ZIOAspect<scala.runtime.Nothing$, R1, zio.aws.core.AwsError, zio.aws.core.AwsError, scala.runtime.Nothing$, zio.aws.core.aspects.package$Described<?>>, zio.ZEnvironment<R1>);
    Code:
       0: aload_0
       1: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.shield.model.EnableApplicationLayerAutomaticResponseResponse$ReadOnly> enableApplicationLayerAutomaticResponse(zio.aws.shield.model.EnableApplicationLayerAutomaticResponseRequest);
    Code:
       0: aload_0
       1: getfield      #310                // Field proxy$1:Lzio/test/mock/Proxy;
       4: getstatic     #314                // Field zio/aws/shield/ShieldMock$EnableApplicationLayerAutomaticResponse$.MODULE$:Lzio/aws/shield/ShieldMock$EnableApplicationLayerAutomaticResponse$;
       7: aload_1
       8: invokevirtual #320                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.stream.ZStream<java.lang.Object, zio.aws.core.AwsError, zio.aws.shield.model.Protection$ReadOnly> listProtections(zio.aws.shield.model.ListProtectionsRequest);
    Code:
       0: aload_0
       1: getfield      #326                // Field rts$1:Lzio/Runtime;
       4: aload_0
       5: getfield      #310                // Field proxy$1:Lzio/test/mock/Proxy;
       8: getstatic     #329                // Field zio/aws/shield/ShieldMock$ListProtections$.MODULE$:Lzio/aws/shield/ShieldMock$ListProtections$;
      11: aload_1
      12: invokevirtual #320                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      15: ldc_w         #331                // String zio.aws.shield.ShieldMock.compose.$anon.listProtections(ShieldMock.scala:295)
      18: invokeinterface #337,  3          // InterfaceMethod zio/Runtime.unsafeRun:(Lzio/ZIO;Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #339                // class zio/stream/ZStream
      26: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.shield.model.ListProtectionsResponse$ReadOnly> listProtectionsPaginated(zio.aws.shield.model.ListProtectionsRequest);
    Code:
       0: aload_0
       1: getfield      #310                // Field proxy$1:Lzio/test/mock/Proxy;
       4: getstatic     #346                // Field zio/aws/shield/ShieldMock$ListProtectionsPaginated$.MODULE$:Lzio/aws/shield/ShieldMock$ListProtectionsPaginated$;
       7: aload_1
       8: invokevirtual #320                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.shield.model.AssociateDrtLogBucketResponse$ReadOnly> associateDRTLogBucket(zio.aws.shield.model.AssociateDrtLogBucketRequest);
    Code:
       0: aload_0
       1: getfield      #310                // Field proxy$1:Lzio/test/mock/Proxy;
       4: getstatic     #352                // Field zio/aws/shield/ShieldMock$AssociateDRTLogBucket$.MODULE$:Lzio/aws/shield/ShieldMock$AssociateDRTLogBucket$;
       7: aload_1
       8: invokevirtual #320                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.shield.model.CreateSubscriptionResponse$ReadOnly> createSubscription(zio.aws.shield.model.CreateSubscriptionRequest);
    Code:
       0: aload_0
       1: getfield      #310                // Field proxy$1:Lzio/test/mock/Proxy;
       4: getstatic     #359                // Field zio/aws/shield/ShieldMock$CreateSubscription$.MODULE$:Lzio/aws/shield/ShieldMock$CreateSubscription$;
       7: aload_1
       8: invokevirtual #320                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.shield.model.DescribeEmergencyContactSettingsResponse$ReadOnly> describeEmergencyContactSettings(zio.aws.shield.model.DescribeEmergencyContactSettingsRequest);
    Code:
       0: aload_0
       1: getfield      #310                // Field proxy$1:Lzio/test/mock/Proxy;
       4: getstatic     #366                // Field zio/aws/shield/ShieldMock$DescribeEmergencyContactSettings$.MODULE$:Lzio/aws/shield/ShieldMock$DescribeEmergencyContactSettings$;
       7: aload_1
       8: invokevirtual #320                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.shield.model.UpdateSubscriptionResponse$ReadOnly> updateSubscription(zio.aws.shield.model.UpdateSubscriptionRequest);
    Code:
       0: aload_0
       1: getfield      #310                // Field proxy$1:Lzio/test/mock/Proxy;
       4: getstatic     #373                // Field zio/aws/shield/ShieldMock$UpdateSubscription$.MODULE$:Lzio/aws/shield/ShieldMock$UpdateSubscription$;
       7: aload_1
       8: invokevirtual #320                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.shield.model.DescribeAttackStatisticsResponse$ReadOnly> describeAttackStatistics(zio.aws.shield.model.DescribeAttackStatisticsRequest);
    Code:
       0: aload_0
       1: getfield      #310                // Field proxy$1:Lzio/test/mock/Proxy;
       4: getstatic     #380                // Field zio/aws/shield/ShieldMock$DescribeAttackStatistics$.MODULE$:Lzio/aws/shield/ShieldMock$DescribeAttackStatistics$;
       7: aload_1
       8: invokevirtual #320                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.shield.model.DeleteProtectionResponse$ReadOnly> deleteProtection(zio.aws.shield.model.DeleteProtectionRequest);
    Code:
       0: aload_0
       1: getfield      #310                // Field proxy$1:Lzio/test/mock/Proxy;
       4: getstatic     #387                // Field zio/aws/shield/ShieldMock$DeleteProtection$.MODULE$:Lzio/aws/shield/ShieldMock$DeleteProtection$;
       7: aload_1
       8: invokevirtual #320                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.shield.model.DisassociateDrtLogBucketResponse$ReadOnly> disassociateDRTLogBucket(zio.aws.shield.model.DisassociateDrtLogBucketRequest);
    Code:
       0: aload_0
       1: getfield      #310                // Field proxy$1:Lzio/test/mock/Proxy;
       4: getstatic     #394                // Field zio/aws/shield/ShieldMock$DisassociateDRTLogBucket$.MODULE$:Lzio/aws/shield/ShieldMock$DisassociateDRTLogBucket$;
       7: aload_1
       8: invokevirtual #320                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.shield.model.GetSubscriptionStateResponse$ReadOnly> getSubscriptionState(zio.aws.shield.model.GetSubscriptionStateRequest);
    Code:
       0: aload_0
       1: getfield      #310                // Field proxy$1:Lzio/test/mock/Proxy;
       4: getstatic     #401                // Field zio/aws/shield/ShieldMock$GetSubscriptionState$.MODULE$:Lzio/aws/shield/ShieldMock$GetSubscriptionState$;
       7: aload_1
       8: invokevirtual #320                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.shield.model.DescribeAttackResponse$ReadOnly> describeAttack(zio.aws.shield.model.DescribeAttackRequest);
    Code:
       0: aload_0
       1: getfield      #310                // Field proxy$1:Lzio/test/mock/Proxy;
       4: getstatic     #408                // Field zio/aws/shield/ShieldMock$DescribeAttack$.MODULE$:Lzio/aws/shield/ShieldMock$DescribeAttack$;
       7: aload_1
       8: invokevirtual #320                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.shield.model.UpdateEmergencyContactSettingsResponse$ReadOnly> updateEmergencyContactSettings(zio.aws.shield.model.UpdateEmergencyContactSettingsRequest);
    Code:
       0: aload_0
       1: getfield      #310                // Field proxy$1:Lzio/test/mock/Proxy;
       4: getstatic     #415                // Field zio/aws/shield/ShieldMock$UpdateEmergencyContactSettings$.MODULE$:Lzio/aws/shield/ShieldMock$UpdateEmergencyContactSettings$;
       7: aload_1
       8: invokevirtual #320                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.shield.model.DescribeProtectionGroupResponse$ReadOnly> describeProtectionGroup(zio.aws.shield.model.DescribeProtectionGroupRequest);
    Code:
       0: aload_0
       1: getfield      #310                // Field proxy$1:Lzio/test/mock/Proxy;
       4: getstatic     #422                // Field zio/aws/shield/ShieldMock$DescribeProtectionGroup$.MODULE$:Lzio/aws/shield/ShieldMock$DescribeProtectionGroup$;
       7: aload_1
       8: invokevirtual #320                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.shield.model.UpdateProtectionGroupResponse$ReadOnly> updateProtectionGroup(zio.aws.shield.model.UpdateProtectionGroupRequest);
    Code:
       0: aload_0
       1: getfield      #310                // Field proxy$1:Lzio/test/mock/Proxy;
       4: getstatic     #429                // Field zio/aws/shield/ShieldMock$UpdateProtectionGroup$.MODULE$:Lzio/aws/shield/ShieldMock$UpdateProtectionGroup$;
       7: aload_1
       8: invokevirtual #320                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.shield.model.EnableProactiveEngagementResponse$ReadOnly> enableProactiveEngagement(zio.aws.shield.model.EnableProactiveEngagementRequest);
    Code:
       0: aload_0
       1: getfield      #310                // Field proxy$1:Lzio/test/mock/Proxy;
       4: getstatic     #436                // Field zio/aws/shield/ShieldMock$EnableProactiveEngagement$.MODULE$:Lzio/aws/shield/ShieldMock$EnableProactiveEngagement$;
       7: aload_1
       8: invokevirtual #320                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.shield.model.CreateProtectionGroupResponse$ReadOnly> createProtectionGroup(zio.aws.shield.model.CreateProtectionGroupRequest);
    Code:
       0: aload_0
       1: getfield      #310                // Field proxy$1:Lzio/test/mock/Proxy;
       4: getstatic     #443                // Field zio/aws/shield/ShieldMock$CreateProtectionGroup$.MODULE$:Lzio/aws/shield/ShieldMock$CreateProtectionGroup$;
       7: aload_1
       8: invokevirtual #320                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.stream.ZStream<java.lang.Object, zio.aws.core.AwsError, zio.aws.shield.model.ProtectionGroup$ReadOnly> listProtectionGroups(zio.aws.shield.model.ListProtectionGroupsRequest);
    Code:
       0: aload_0
       1: getfield      #326                // Field rts$1:Lzio/Runtime;
       4: aload_0
       5: getfield      #310                // Field proxy$1:Lzio/test/mock/Proxy;
       8: getstatic     #450                // Field zio/aws/shield/ShieldMock$ListProtectionGroups$.MODULE$:Lzio/aws/shield/ShieldMock$ListProtectionGroups$;
      11: aload_1
      12: invokevirtual #320                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      15: ldc_w         #452                // String zio.aws.shield.ShieldMock.compose.$anon.listProtectionGroups(ShieldMock.scala:373)
      18: invokeinterface #337,  3          // InterfaceMethod zio/Runtime.unsafeRun:(Lzio/ZIO;Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #339                // class zio/stream/ZStream
      26: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.shield.model.ListProtectionGroupsResponse$ReadOnly> listProtectionGroupsPaginated(zio.aws.shield.model.ListProtectionGroupsRequest);
    Code:
       0: aload_0
       1: getfield      #310                // Field proxy$1:Lzio/test/mock/Proxy;
       4: getstatic     #459                // Field zio/aws/shield/ShieldMock$ListProtectionGroupsPaginated$.MODULE$:Lzio/aws/shield/ShieldMock$ListProtectionGroupsPaginated$;
       7: aload_1
       8: invokevirtual #320                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.shield.model.AssociateHealthCheckResponse$ReadOnly> associateHealthCheck(zio.aws.shield.model.AssociateHealthCheckRequest);
    Code:
       0: aload_0
       1: getfield      #310                // Field proxy$1:Lzio/test/mock/Proxy;
       4: getstatic     #465                // Field zio/aws/shield/ShieldMock$AssociateHealthCheck$.MODULE$:Lzio/aws/shield/ShieldMock$AssociateHealthCheck$;
       7: aload_1
       8: invokevirtual #320                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.shield.model.DescribeDrtAccessResponse$ReadOnly> describeDRTAccess(zio.aws.shield.model.DescribeDrtAccessRequest);
    Code:
       0: aload_0
       1: getfield      #310                // Field proxy$1:Lzio/test/mock/Proxy;
       4: getstatic     #472                // Field zio/aws/shield/ShieldMock$DescribeDRTAccess$.MODULE$:Lzio/aws/shield/ShieldMock$DescribeDRTAccess$;
       7: aload_1
       8: invokevirtual #320                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.shield.model.DisassociateHealthCheckResponse$ReadOnly> disassociateHealthCheck(zio.aws.shield.model.DisassociateHealthCheckRequest);
    Code:
       0: aload_0
       1: getfield      #310                // Field proxy$1:Lzio/test/mock/Proxy;
       4: getstatic     #479                // Field zio/aws/shield/ShieldMock$DisassociateHealthCheck$.MODULE$:Lzio/aws/shield/ShieldMock$DisassociateHealthCheck$;
       7: aload_1
       8: invokevirtual #320                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.shield.model.DescribeSubscriptionResponse$ReadOnly> describeSubscription(zio.aws.shield.model.DescribeSubscriptionRequest);
    Code:
       0: aload_0
       1: getfield      #310                // Field proxy$1:Lzio/test/mock/Proxy;
       4: getstatic     #486                // Field zio/aws/shield/ShieldMock$DescribeSubscription$.MODULE$:Lzio/aws/shield/ShieldMock$DescribeSubscription$;
       7: aload_1
       8: invokevirtual #320                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.shield.model.AssociateProactiveEngagementDetailsResponse$ReadOnly> associateProactiveEngagementDetails(zio.aws.shield.model.AssociateProactiveEngagementDetailsRequest);
    Code:
       0: aload_0
       1: getfield      #310                // Field proxy$1:Lzio/test/mock/Proxy;
       4: getstatic     #493                // Field zio/aws/shield/ShieldMock$AssociateProactiveEngagementDetails$.MODULE$:Lzio/aws/shield/ShieldMock$AssociateProactiveEngagementDetails$;
       7: aload_1
       8: invokevirtual #320                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.shield.model.UpdateApplicationLayerAutomaticResponseResponse$ReadOnly> updateApplicationLayerAutomaticResponse(zio.aws.shield.model.UpdateApplicationLayerAutomaticResponseRequest);
    Code:
       0: aload_0
       1: getfield      #310                // Field proxy$1:Lzio/test/mock/Proxy;
       4: getstatic     #500                // Field zio/aws/shield/ShieldMock$UpdateApplicationLayerAutomaticResponse$.MODULE$:Lzio/aws/shield/ShieldMock$UpdateApplicationLayerAutomaticResponse$;
       7: aload_1
       8: invokevirtual #320                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.shield.model.DisableProactiveEngagementResponse$ReadOnly> disableProactiveEngagement(zio.aws.shield.model.DisableProactiveEngagementRequest);
    Code:
       0: aload_0
       1: getfield      #310                // Field proxy$1:Lzio/test/mock/Proxy;
       4: getstatic     #507                // Field zio/aws/shield/ShieldMock$DisableProactiveEngagement$.MODULE$:Lzio/aws/shield/ShieldMock$DisableProactiveEngagement$;
       7: aload_1
       8: invokevirtual #320                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.shield.model.UntagResourceResponse$ReadOnly> untagResource(zio.aws.shield.model.UntagResourceRequest);
    Code:
       0: aload_0
       1: getfield      #310                // Field proxy$1:Lzio/test/mock/Proxy;
       4: getstatic     #514                // Field zio/aws/shield/ShieldMock$UntagResource$.MODULE$:Lzio/aws/shield/ShieldMock$UntagResource$;
       7: aload_1
       8: invokevirtual #320                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.stream.ZStream<java.lang.Object, zio.aws.core.AwsError, zio.aws.shield.model.AttackSummary$ReadOnly> listAttacks(zio.aws.shield.model.ListAttacksRequest);
    Code:
       0: aload_0
       1: getfield      #326                // Field rts$1:Lzio/Runtime;
       4: aload_0
       5: getfield      #310                // Field proxy$1:Lzio/test/mock/Proxy;
       8: getstatic     #521                // Field zio/aws/shield/ShieldMock$ListAttacks$.MODULE$:Lzio/aws/shield/ShieldMock$ListAttacks$;
      11: aload_1
      12: invokevirtual #320                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      15: ldc_w         #523                // String zio.aws.shield.ShieldMock.compose.$anon.listAttacks(ShieldMock.scala:424)
      18: invokeinterface #337,  3          // InterfaceMethod zio/Runtime.unsafeRun:(Lzio/ZIO;Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #339                // class zio/stream/ZStream
      26: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.shield.model.ListAttacksResponse$ReadOnly> listAttacksPaginated(zio.aws.shield.model.ListAttacksRequest);
    Code:
       0: aload_0
       1: getfield      #310                // Field proxy$1:Lzio/test/mock/Proxy;
       4: getstatic     #530                // Field zio/aws/shield/ShieldMock$ListAttacksPaginated$.MODULE$:Lzio/aws/shield/ShieldMock$ListAttacksPaginated$;
       7: aload_1
       8: invokevirtual #320                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.shield.model.CreateProtectionResponse$ReadOnly> createProtection(zio.aws.shield.model.CreateProtectionRequest);
    Code:
       0: aload_0
       1: getfield      #310                // Field proxy$1:Lzio/test/mock/Proxy;
       4: getstatic     #536                // Field zio/aws/shield/ShieldMock$CreateProtection$.MODULE$:Lzio/aws/shield/ShieldMock$CreateProtection$;
       7: aload_1
       8: invokevirtual #320                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.shield.model.DeleteProtectionGroupResponse$ReadOnly> deleteProtectionGroup(zio.aws.shield.model.DeleteProtectionGroupRequest);
    Code:
       0: aload_0
       1: getfield      #310                // Field proxy$1:Lzio/test/mock/Proxy;
       4: getstatic     #543                // Field zio/aws/shield/ShieldMock$DeleteProtectionGroup$.MODULE$:Lzio/aws/shield/ShieldMock$DeleteProtectionGroup$;
       7: aload_1
       8: invokevirtual #320                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.shield.model.AssociateDrtRoleResponse$ReadOnly> associateDRTRole(zio.aws.shield.model.AssociateDrtRoleRequest);
    Code:
       0: aload_0
       1: getfield      #310                // Field proxy$1:Lzio/test/mock/Proxy;
       4: getstatic     #550                // Field zio/aws/shield/ShieldMock$AssociateDRTRole$.MODULE$:Lzio/aws/shield/ShieldMock$AssociateDRTRole$;
       7: aload_1
       8: invokevirtual #320                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.stream.ZStream<java.lang.Object, zio.aws.core.AwsError, java.lang.String> listResourcesInProtectionGroup(zio.aws.shield.model.ListResourcesInProtectionGroupRequest);
    Code:
       0: aload_0
       1: getfield      #326                // Field rts$1:Lzio/Runtime;
       4: aload_0
       5: getfield      #310                // Field proxy$1:Lzio/test/mock/Proxy;
       8: getstatic     #557                // Field zio/aws/shield/ShieldMock$ListResourcesInProtectionGroup$.MODULE$:Lzio/aws/shield/ShieldMock$ListResourcesInProtectionGroup$;
      11: aload_1
      12: invokevirtual #320                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      15: ldc_w         #559                // String zio.aws.shield.ShieldMock.compose.$anon.listResourcesInProtectionGroup(ShieldMock.scala:444)
      18: invokeinterface #337,  3          // InterfaceMethod zio/Runtime.unsafeRun:(Lzio/ZIO;Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #339                // class zio/stream/ZStream
      26: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.shield.model.ListResourcesInProtectionGroupResponse$ReadOnly> listResourcesInProtectionGroupPaginated(zio.aws.shield.model.ListResourcesInProtectionGroupRequest);
    Code:
       0: aload_0
       1: getfield      #310                // Field proxy$1:Lzio/test/mock/Proxy;
       4: getstatic     #566                // Field zio/aws/shield/ShieldMock$ListResourcesInProtectionGroupPaginated$.MODULE$:Lzio/aws/shield/ShieldMock$ListResourcesInProtectionGroupPaginated$;
       7: aload_1
       8: invokevirtual #320                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.shield.model.DisassociateDrtRoleResponse$ReadOnly> disassociateDRTRole(zio.aws.shield.model.DisassociateDrtRoleRequest);
    Code:
       0: aload_0
       1: getfield      #310                // Field proxy$1:Lzio/test/mock/Proxy;
       4: getstatic     #572                // Field zio/aws/shield/ShieldMock$DisassociateDRTRole$.MODULE$:Lzio/aws/shield/ShieldMock$DisassociateDRTRole$;
       7: aload_1
       8: invokevirtual #320                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.shield.model.ListTagsForResourceResponse$ReadOnly> listTagsForResource(zio.aws.shield.model.ListTagsForResourceRequest);
    Code:
       0: aload_0
       1: getfield      #310                // Field proxy$1:Lzio/test/mock/Proxy;
       4: getstatic     #579                // Field zio/aws/shield/ShieldMock$ListTagsForResource$.MODULE$:Lzio/aws/shield/ShieldMock$ListTagsForResource$;
       7: aload_1
       8: invokevirtual #320                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.shield.model.TagResourceResponse$ReadOnly> tagResource(zio.aws.shield.model.TagResourceRequest);
    Code:
       0: aload_0
       1: getfield      #310                // Field proxy$1:Lzio/test/mock/Proxy;
       4: getstatic     #586                // Field zio/aws/shield/ShieldMock$TagResource$.MODULE$:Lzio/aws/shield/ShieldMock$TagResource$;
       7: aload_1
       8: invokevirtual #320                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.shield.model.DisableApplicationLayerAutomaticResponseResponse$ReadOnly> disableApplicationLayerAutomaticResponse(zio.aws.shield.model.DisableApplicationLayerAutomaticResponseRequest);
    Code:
       0: aload_0
       1: getfield      #310                // Field proxy$1:Lzio/test/mock/Proxy;
       4: getstatic     #593                // Field zio/aws/shield/ShieldMock$DisableApplicationLayerAutomaticResponse$.MODULE$:Lzio/aws/shield/ShieldMock$DisableApplicationLayerAutomaticResponse$;
       7: aload_1
       8: invokevirtual #320                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.shield.model.DescribeProtectionResponse$ReadOnly> describeProtection(zio.aws.shield.model.DescribeProtectionRequest);
    Code:
       0: aload_0
       1: getfield      #310                // Field proxy$1:Lzio/test/mock/Proxy;
       4: getstatic     #600                // Field zio/aws/shield/ShieldMock$DescribeProtection$.MODULE$:Lzio/aws/shield/ShieldMock$DescribeProtection$;
       7: aload_1
       8: invokevirtual #320                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public java.lang.Object withAspect(zio.ZIOAspect, zio.ZEnvironment);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #604                // Method withAspect:(Lzio/ZIOAspect;Lzio/ZEnvironment;)Lzio/aws/shield/Shield;
       6: areturn

  public zio.aws.shield.ShieldMock$$anon$2(zio.test.mock.Proxy, zio.Runtime);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #310                // Field proxy$1:Lzio/test/mock/Proxy;
       5: aload_0
       6: aload_2
       7: putfield      #326                // Field rts$1:Lzio/Runtime;
      10: aload_0
      11: invokespecial #609                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: aconst_null
      16: putfield      #295                // Field api:Lsoftware/amazon/awssdk/services/shield/ShieldAsyncClient;
      19: return
}
