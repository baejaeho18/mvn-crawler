Compiled from "GridFS.java"
public class com.mongodb.gridfs.GridFS {
  public static final int DEFAULT_CHUNKSIZE;

  public static final java.lang.String DEFAULT_BUCKET;

  private final com.mongodb.DB database;

  private final java.lang.String bucketName;

  private final com.mongodb.DBCollection filesCollection;

  private final com.mongodb.DBCollection chunksCollection;

  public com.mongodb.gridfs.GridFS(com.mongodb.DB);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #2                  // String fs
       4: invokespecial #3                  // Method "<init>":(Lcom/mongodb/DB;Ljava/lang/String;)V
       7: return

  public com.mongodb.gridfs.GridFS(com.mongodb.DB, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #5                  // Field database:Lcom/mongodb/DB;
       9: aload_0
      10: aload_2
      11: putfield      #6                  // Field bucketName:Ljava/lang/String;
      14: aload_0
      15: aload_0
      16: getfield      #5                  // Field database:Lcom/mongodb/DB;
      19: new           #7                  // class java/lang/StringBuilder
      22: dup
      23: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      26: aload_0
      27: getfield      #6                  // Field bucketName:Ljava/lang/String;
      30: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: ldc           #10                 // String .files
      35: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: invokevirtual #12                 // Method com/mongodb/DB.getCollection:(Ljava/lang/String;)Lcom/mongodb/DBCollection;
      44: putfield      #13                 // Field filesCollection:Lcom/mongodb/DBCollection;
      47: aload_0
      48: aload_0
      49: getfield      #5                  // Field database:Lcom/mongodb/DB;
      52: new           #7                  // class java/lang/StringBuilder
      55: dup
      56: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      59: aload_0
      60: getfield      #6                  // Field bucketName:Ljava/lang/String;
      63: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: ldc           #14                 // String .chunks
      68: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      74: invokevirtual #12                 // Method com/mongodb/DB.getCollection:(Ljava/lang/String;)Lcom/mongodb/DBCollection;
      77: putfield      #15                 // Field chunksCollection:Lcom/mongodb/DBCollection;
      80: aload_0
      81: getfield      #13                 // Field filesCollection:Lcom/mongodb/DBCollection;
      84: invokevirtual #16                 // Method com/mongodb/DBCollection.count:()J
      87: ldc2_w        #17                 // long 1000l
      90: lcmp
      91: ifge          123
      94: aload_0
      95: getfield      #13                 // Field filesCollection:Lcom/mongodb/DBCollection;
      98: new           #19                 // class com/mongodb/BasicDBObject
     101: dup
     102: ldc           #20                 // String filename
     104: iconst_1
     105: invokestatic  #21                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     108: invokespecial #22                 // Method com/mongodb/BasicDBObject."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     111: ldc           #23                 // String uploadDate
     113: iconst_1
     114: invokestatic  #21                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     117: invokevirtual #24                 // Method com/mongodb/BasicDBObject.append:(Ljava/lang/String;Ljava/lang/Object;)Lcom/mongodb/BasicDBObject;
     120: invokevirtual #25                 // Method com/mongodb/DBCollection.createIndex:(Lcom/mongodb/DBObject;)V
     123: aload_0
     124: getfield      #15                 // Field chunksCollection:Lcom/mongodb/DBCollection;
     127: invokevirtual #16                 // Method com/mongodb/DBCollection.count:()J
     130: ldc2_w        #17                 // long 1000l
     133: lcmp
     134: ifge          179
     137: aload_0
     138: getfield      #15                 // Field chunksCollection:Lcom/mongodb/DBCollection;
     141: new           #19                 // class com/mongodb/BasicDBObject
     144: dup
     145: ldc           #26                 // String files_id
     147: iconst_1
     148: invokestatic  #21                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     151: invokespecial #22                 // Method com/mongodb/BasicDBObject."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     154: ldc           #27                 // String n
     156: iconst_1
     157: invokestatic  #21                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     160: invokevirtual #24                 // Method com/mongodb/BasicDBObject.append:(Ljava/lang/String;Ljava/lang/Object;)Lcom/mongodb/BasicDBObject;
     163: new           #19                 // class com/mongodb/BasicDBObject
     166: dup
     167: ldc           #28                 // String unique
     169: iconst_1
     170: invokestatic  #29                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     173: invokespecial #22                 // Method com/mongodb/BasicDBObject."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     176: invokevirtual #30                 // Method com/mongodb/DBCollection.createIndex:(Lcom/mongodb/DBObject;Lcom/mongodb/DBObject;)V
     179: goto          183
     182: astore_3
     183: aload_0
     184: getfield      #13                 // Field filesCollection:Lcom/mongodb/DBCollection;
     187: ldc           #32                 // class com/mongodb/gridfs/GridFSDBFile
     189: invokevirtual #33                 // Method com/mongodb/DBCollection.setObjectClass:(Ljava/lang/Class;)V
     192: return
    Exception table:
       from    to  target type
          80   179   182   Class com/mongodb/MongoException

  public com.mongodb.DBCursor getFileList();
    Code:
       0: aload_0
       1: getfield      #13                 // Field filesCollection:Lcom/mongodb/DBCollection;
       4: invokevirtual #34                 // Method com/mongodb/DBCollection.find:()Lcom/mongodb/DBCursor;
       7: new           #19                 // class com/mongodb/BasicDBObject
      10: dup
      11: ldc           #20                 // String filename
      13: iconst_1
      14: invokestatic  #21                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      17: invokespecial #22                 // Method com/mongodb/BasicDBObject."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      20: invokevirtual #35                 // Method com/mongodb/DBCursor.sort:(Lcom/mongodb/DBObject;)Lcom/mongodb/DBCursor;
      23: areturn

  public com.mongodb.DBCursor getFileList(com.mongodb.DBObject);
    Code:
       0: aload_0
       1: getfield      #13                 // Field filesCollection:Lcom/mongodb/DBCollection;
       4: aload_1
       5: invokevirtual #36                 // Method com/mongodb/DBCollection.find:(Lcom/mongodb/DBObject;)Lcom/mongodb/DBCursor;
       8: new           #19                 // class com/mongodb/BasicDBObject
      11: dup
      12: ldc           #20                 // String filename
      14: iconst_1
      15: invokestatic  #21                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      18: invokespecial #22                 // Method com/mongodb/BasicDBObject."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      21: invokevirtual #35                 // Method com/mongodb/DBCursor.sort:(Lcom/mongodb/DBObject;)Lcom/mongodb/DBCursor;
      24: areturn

  public com.mongodb.DBCursor getFileList(com.mongodb.DBObject, com.mongodb.DBObject);
    Code:
       0: aload_0
       1: getfield      #13                 // Field filesCollection:Lcom/mongodb/DBCollection;
       4: aload_1
       5: invokevirtual #36                 // Method com/mongodb/DBCollection.find:(Lcom/mongodb/DBObject;)Lcom/mongodb/DBCursor;
       8: aload_2
       9: invokevirtual #35                 // Method com/mongodb/DBCursor.sort:(Lcom/mongodb/DBObject;)Lcom/mongodb/DBCursor;
      12: areturn

  public com.mongodb.gridfs.GridFSDBFile find(org.bson.types.ObjectId);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #37                 // Method findOne:(Lorg/bson/types/ObjectId;)Lcom/mongodb/gridfs/GridFSDBFile;
       5: areturn

  public com.mongodb.gridfs.GridFSDBFile findOne(org.bson.types.ObjectId);
    Code:
       0: aload_0
       1: new           #19                 // class com/mongodb/BasicDBObject
       4: dup
       5: ldc           #38                 // String _id
       7: aload_1
       8: invokespecial #22                 // Method com/mongodb/BasicDBObject."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      11: invokevirtual #39                 // Method findOne:(Lcom/mongodb/DBObject;)Lcom/mongodb/gridfs/GridFSDBFile;
      14: areturn

  public com.mongodb.gridfs.GridFSDBFile findOne(java.lang.String);
    Code:
       0: aload_0
       1: new           #19                 // class com/mongodb/BasicDBObject
       4: dup
       5: ldc           #20                 // String filename
       7: aload_1
       8: invokespecial #22                 // Method com/mongodb/BasicDBObject."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      11: invokevirtual #39                 // Method findOne:(Lcom/mongodb/DBObject;)Lcom/mongodb/gridfs/GridFSDBFile;
      14: areturn

  public com.mongodb.gridfs.GridFSDBFile findOne(com.mongodb.DBObject);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #13                 // Field filesCollection:Lcom/mongodb/DBCollection;
       5: aload_1
       6: invokevirtual #40                 // Method com/mongodb/DBCollection.findOne:(Lcom/mongodb/DBObject;)Lcom/mongodb/DBObject;
       9: invokespecial #41                 // Method injectGridFSInstance:(Ljava/lang/Object;)Lcom/mongodb/gridfs/GridFSDBFile;
      12: areturn

  public java.util.List<com.mongodb.gridfs.GridFSDBFile> find(java.lang.String);
    Code:
       0: aload_0
       1: new           #19                 // class com/mongodb/BasicDBObject
       4: dup
       5: ldc           #20                 // String filename
       7: aload_1
       8: invokespecial #22                 // Method com/mongodb/BasicDBObject."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      11: invokevirtual #42                 // Method find:(Lcom/mongodb/DBObject;)Ljava/util/List;
      14: areturn

  public java.util.List<com.mongodb.gridfs.GridFSDBFile> find(java.lang.String, com.mongodb.DBObject);
    Code:
       0: aload_0
       1: new           #19                 // class com/mongodb/BasicDBObject
       4: dup
       5: ldc           #20                 // String filename
       7: aload_1
       8: invokespecial #22                 // Method com/mongodb/BasicDBObject."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      11: aload_2
      12: invokevirtual #43                 // Method find:(Lcom/mongodb/DBObject;Lcom/mongodb/DBObject;)Ljava/util/List;
      15: areturn

  public java.util.List<com.mongodb.gridfs.GridFSDBFile> find(com.mongodb.DBObject);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #43                 // Method find:(Lcom/mongodb/DBObject;Lcom/mongodb/DBObject;)Ljava/util/List;
       6: areturn

  public java.util.List<com.mongodb.gridfs.GridFSDBFile> find(com.mongodb.DBObject, com.mongodb.DBObject);
    Code:
       0: new           #44                 // class java/util/ArrayList
       3: dup
       4: invokespecial #45                 // Method java/util/ArrayList."<init>":()V
       7: astore_3
       8: aload_0
       9: getfield      #13                 // Field filesCollection:Lcom/mongodb/DBCollection;
      12: aload_1
      13: invokevirtual #36                 // Method com/mongodb/DBCollection.find:(Lcom/mongodb/DBObject;)Lcom/mongodb/DBCursor;
      16: astore        4
      18: aload_2
      19: ifnull        29
      22: aload         4
      24: aload_2
      25: invokevirtual #35                 // Method com/mongodb/DBCursor.sort:(Lcom/mongodb/DBObject;)Lcom/mongodb/DBCursor;
      28: pop
      29: aload         4
      31: invokevirtual #46                 // Method com/mongodb/DBCursor.hasNext:()Z
      34: ifeq          56
      37: aload_3
      38: aload_0
      39: aload         4
      41: invokevirtual #47                 // Method com/mongodb/DBCursor.next:()Lcom/mongodb/DBObject;
      44: invokespecial #41                 // Method injectGridFSInstance:(Ljava/lang/Object;)Lcom/mongodb/gridfs/GridFSDBFile;
      47: invokeinterface #48,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      52: pop
      53: goto          29
      56: aload         4
      58: invokevirtual #49                 // Method com/mongodb/DBCursor.close:()V
      61: goto          74
      64: astore        5
      66: aload         4
      68: invokevirtual #49                 // Method com/mongodb/DBCursor.close:()V
      71: aload         5
      73: athrow
      74: aload_3
      75: invokestatic  #50                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      78: areturn
    Exception table:
       from    to  target type
          29    56    64   any
          64    66    64   any

  private com.mongodb.gridfs.GridFSDBFile injectGridFSInstance(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_1
       7: instanceof    #32                 // class com/mongodb/gridfs/GridFSDBFile
      10: ifne          23
      13: new           #51                 // class java/lang/IllegalArgumentException
      16: dup
      17: ldc           #52                 // String somehow didn\'t get a GridFSDBFile
      19: invokespecial #53                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: aload_1
      24: checkcast     #32                 // class com/mongodb/gridfs/GridFSDBFile
      27: astore_2
      28: aload_2
      29: aload_0
      30: putfield      #54                 // Field com/mongodb/gridfs/GridFSDBFile.fs:Lcom/mongodb/gridfs/GridFS;
      33: aload_2
      34: areturn

  public void remove(org.bson.types.ObjectId);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #51                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #55                 // String file id can not be null
      10: invokespecial #53                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #13                 // Field filesCollection:Lcom/mongodb/DBCollection;
      18: new           #19                 // class com/mongodb/BasicDBObject
      21: dup
      22: ldc           #38                 // String _id
      24: aload_1
      25: invokespecial #22                 // Method com/mongodb/BasicDBObject."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      28: invokevirtual #56                 // Method com/mongodb/DBCollection.remove:(Lcom/mongodb/DBObject;)Lcom/mongodb/WriteResult;
      31: pop
      32: aload_0
      33: getfield      #15                 // Field chunksCollection:Lcom/mongodb/DBCollection;
      36: new           #19                 // class com/mongodb/BasicDBObject
      39: dup
      40: ldc           #26                 // String files_id
      42: aload_1
      43: invokespecial #22                 // Method com/mongodb/BasicDBObject."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      46: invokevirtual #56                 // Method com/mongodb/DBCollection.remove:(Lcom/mongodb/DBObject;)Lcom/mongodb/WriteResult;
      49: pop
      50: return

  public void remove(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #51                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #57                 // String filename can not be null
      10: invokespecial #53                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: new           #19                 // class com/mongodb/BasicDBObject
      18: dup
      19: ldc           #20                 // String filename
      21: aload_1
      22: invokespecial #22                 // Method com/mongodb/BasicDBObject."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      25: invokevirtual #58                 // Method remove:(Lcom/mongodb/DBObject;)V
      28: return

  public void remove(com.mongodb.DBObject);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #51                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #59                 // String query can not be null
      10: invokespecial #53                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: invokevirtual #42                 // Method find:(Lcom/mongodb/DBObject;)Ljava/util/List;
      19: invokeinterface #60,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      24: astore_2
      25: aload_2
      26: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          51
      34: aload_2
      35: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #32                 // class com/mongodb/gridfs/GridFSDBFile
      43: astore_3
      44: aload_3
      45: invokevirtual #63                 // Method com/mongodb/gridfs/GridFSDBFile.remove:()V
      48: goto          25
      51: return

  public com.mongodb.gridfs.GridFSInputFile createFile(byte[]);
    Code:
       0: aload_0
       1: new           #64                 // class java/io/ByteArrayInputStream
       4: dup
       5: aload_1
       6: invokespecial #65                 // Method java/io/ByteArrayInputStream."<init>":([B)V
       9: iconst_1
      10: invokevirtual #66                 // Method createFile:(Ljava/io/InputStream;Z)Lcom/mongodb/gridfs/GridFSInputFile;
      13: areturn

  public com.mongodb.gridfs.GridFSInputFile createFile(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #67                 // class java/io/FileInputStream
       4: dup
       5: aload_1
       6: invokespecial #68                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
       9: aload_1
      10: invokevirtual #69                 // Method java/io/File.getName:()Ljava/lang/String;
      13: iconst_1
      14: invokevirtual #70                 // Method createFile:(Ljava/io/InputStream;Ljava/lang/String;Z)Lcom/mongodb/gridfs/GridFSInputFile;
      17: areturn

  public com.mongodb.gridfs.GridFSInputFile createFile(java.io.InputStream);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #71                 // Method createFile:(Ljava/io/InputStream;Ljava/lang/String;)Lcom/mongodb/gridfs/GridFSInputFile;
       6: areturn

  public com.mongodb.gridfs.GridFSInputFile createFile(java.io.InputStream, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: iload_2
       4: invokevirtual #70                 // Method createFile:(Ljava/io/InputStream;Ljava/lang/String;Z)Lcom/mongodb/gridfs/GridFSInputFile;
       7: areturn

  public com.mongodb.gridfs.GridFSInputFile createFile(java.io.InputStream, java.lang.String);
    Code:
       0: new           #72                 // class com/mongodb/gridfs/GridFSInputFile
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #73                 // Method com/mongodb/gridfs/GridFSInputFile."<init>":(Lcom/mongodb/gridfs/GridFS;Ljava/io/InputStream;Ljava/lang/String;)V
      10: areturn

  public com.mongodb.gridfs.GridFSInputFile createFile(java.io.InputStream, java.lang.String, boolean);
    Code:
       0: new           #72                 // class com/mongodb/gridfs/GridFSInputFile
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: iload_3
       8: invokespecial #74                 // Method com/mongodb/gridfs/GridFSInputFile."<init>":(Lcom/mongodb/gridfs/GridFS;Ljava/io/InputStream;Ljava/lang/String;Z)V
      11: areturn

  public com.mongodb.gridfs.GridFSInputFile createFile(java.lang.String);
    Code:
       0: new           #72                 // class com/mongodb/gridfs/GridFSInputFile
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #75                 // Method com/mongodb/gridfs/GridFSInputFile."<init>":(Lcom/mongodb/gridfs/GridFS;Ljava/lang/String;)V
       9: areturn

  public com.mongodb.gridfs.GridFSInputFile createFile();
    Code:
       0: new           #72                 // class com/mongodb/gridfs/GridFSInputFile
       3: dup
       4: aload_0
       5: invokespecial #76                 // Method com/mongodb/gridfs/GridFSInputFile."<init>":(Lcom/mongodb/gridfs/GridFS;)V
       8: areturn

  public java.lang.String getBucketName();
    Code:
       0: aload_0
       1: getfield      #6                  // Field bucketName:Ljava/lang/String;
       4: areturn

  public com.mongodb.DB getDB();
    Code:
       0: aload_0
       1: getfield      #5                  // Field database:Lcom/mongodb/DB;
       4: areturn

  protected com.mongodb.DBCollection getFilesCollection();
    Code:
       0: aload_0
       1: getfield      #13                 // Field filesCollection:Lcom/mongodb/DBCollection;
       4: areturn

  protected com.mongodb.DBCollection getChunksCollection();
    Code:
       0: aload_0
       1: getfield      #15                 // Field chunksCollection:Lcom/mongodb/DBCollection;
       4: areturn
}
