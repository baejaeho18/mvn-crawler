Compiled from "GridFSFile.java"
public abstract class com.mongodb.gridfs.GridFSFile implements com.mongodb.DBObject {
  private static final org.bson.codecs.configuration.CodecRegistry DEFAULT_REGISTRY;

  private static final java.util.Set<java.lang.String> VALID_FIELDS;

  final com.mongodb.DBObject extra;

  com.mongodb.gridfs.GridFS fs;

  java.lang.Object id;

  java.lang.String filename;

  java.lang.String contentType;

  long length;

  long chunkSize;

  java.util.Date uploadDate;

  public com.mongodb.gridfs.GridFSFile();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class com/mongodb/BasicDBObject
       8: dup
       9: invokespecial #3                  // Method com/mongodb/BasicDBObject."<init>":()V
      12: putfield      #4                  // Field extra:Lcom/mongodb/DBObject;
      15: return

  public void save();
    Code:
       0: aload_0
       1: getfield      #5                  // Field fs:Lcom/mongodb/gridfs/GridFS;
       4: ifnonnull     17
       7: new           #6                  // class com/mongodb/MongoException
      10: dup
      11: ldc           #7                  // String need fs
      13: invokespecial #8                  // Method com/mongodb/MongoException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #5                  // Field fs:Lcom/mongodb/gridfs/GridFS;
      21: invokevirtual #9                  // Method com/mongodb/gridfs/GridFS.getFilesCollection:()Lcom/mongodb/DBCollection;
      24: aload_0
      25: invokevirtual #10                 // Method com/mongodb/DBCollection.save:(Lcom/mongodb/DBObject;)Lcom/mongodb/WriteResult;
      28: pop
      29: return

  public int numChunks();
    Code:
       0: aload_0
       1: getfield      #11                 // Field length:J
       4: l2d
       5: dstore_1
       6: dload_1
       7: aload_0
       8: getfield      #12                 // Field chunkSize:J
      11: l2d
      12: ddiv
      13: dstore_1
      14: dload_1
      15: invokestatic  #13                 // Method java/lang/Math.ceil:(D)D
      18: d2i
      19: ireturn

  public java.lang.Object getId();
    Code:
       0: aload_0
       1: getfield      #14                 // Field id:Ljava/lang/Object;
       4: areturn

  public java.lang.String getFilename();
    Code:
       0: aload_0
       1: getfield      #15                 // Field filename:Ljava/lang/String;
       4: areturn

  public java.lang.String getContentType();
    Code:
       0: aload_0
       1: getfield      #16                 // Field contentType:Ljava/lang/String;
       4: areturn

  public long getLength();
    Code:
       0: aload_0
       1: getfield      #11                 // Field length:J
       4: lreturn

  public long getChunkSize();
    Code:
       0: aload_0
       1: getfield      #12                 // Field chunkSize:J
       4: lreturn

  public java.util.Date getUploadDate();
    Code:
       0: aload_0
       1: getfield      #17                 // Field uploadDate:Ljava/util/Date;
       4: areturn

  public java.util.List<java.lang.String> getAliases();
    Code:
       0: aload_0
       1: getfield      #4                  // Field extra:Lcom/mongodb/DBObject;
       4: ldc           #18                 // String aliases
       6: invokeinterface #19,  2           // InterfaceMethod com/mongodb/DBObject.get:(Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #20                 // class java/util/List
      14: areturn

  public com.mongodb.DBObject getMetaData();
    Code:
       0: aload_0
       1: getfield      #4                  // Field extra:Lcom/mongodb/DBObject;
       4: ldc           #21                 // String metadata
       6: invokeinterface #19,  2           // InterfaceMethod com/mongodb/DBObject.get:(Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #22                 // class com/mongodb/DBObject
      14: areturn

  public void setMetaData(com.mongodb.DBObject);
    Code:
       0: aload_0
       1: getfield      #4                  // Field extra:Lcom/mongodb/DBObject;
       4: ldc           #21                 // String metadata
       6: aload_1
       7: invokeinterface #23,  3           // InterfaceMethod com/mongodb/DBObject.put:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      12: pop
      13: return

  public java.lang.Object put(java.lang.String, java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #24                 // class java/lang/RuntimeException
       7: dup
       8: ldc           #25                 // String key should never be null
      10: invokespecial #26                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_1
      15: ldc           #27                 // String _id
      17: invokevirtual #28                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      20: ifeq          31
      23: aload_0
      24: aload_2
      25: putfield      #14                 // Field id:Ljava/lang/Object;
      28: goto          157
      31: aload_1
      32: ldc           #29                 // String filename
      34: invokevirtual #28                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      37: ifeq          59
      40: aload_0
      41: aload_2
      42: ifnonnull     49
      45: aconst_null
      46: goto          53
      49: aload_2
      50: invokevirtual #30                 // Method java/lang/Object.toString:()Ljava/lang/String;
      53: putfield      #15                 // Field filename:Ljava/lang/String;
      56: goto          157
      59: aload_1
      60: ldc           #31                 // String contentType
      62: invokevirtual #28                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      65: ifeq          79
      68: aload_0
      69: aload_2
      70: checkcast     #32                 // class java/lang/String
      73: putfield      #16                 // Field contentType:Ljava/lang/String;
      76: goto          157
      79: aload_1
      80: ldc           #33                 // String length
      82: invokevirtual #28                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      85: ifeq          102
      88: aload_0
      89: aload_2
      90: checkcast     #34                 // class java/lang/Number
      93: invokevirtual #35                 // Method java/lang/Number.longValue:()J
      96: putfield      #11                 // Field length:J
      99: goto          157
     102: aload_1
     103: ldc           #36                 // String chunkSize
     105: invokevirtual #28                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     108: ifeq          125
     111: aload_0
     112: aload_2
     113: checkcast     #34                 // class java/lang/Number
     116: invokevirtual #35                 // Method java/lang/Number.longValue:()J
     119: putfield      #12                 // Field chunkSize:J
     122: goto          157
     125: aload_1
     126: ldc           #37                 // String uploadDate
     128: invokevirtual #28                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     131: ifeq          145
     134: aload_0
     135: aload_2
     136: checkcast     #38                 // class java/util/Date
     139: putfield      #17                 // Field uploadDate:Ljava/util/Date;
     142: goto          157
     145: aload_0
     146: getfield      #4                  // Field extra:Lcom/mongodb/DBObject;
     149: aload_1
     150: aload_2
     151: invokeinterface #23,  3           // InterfaceMethod com/mongodb/DBObject.put:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
     156: pop
     157: aload_2
     158: areturn

  public java.lang.Object get(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #39                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #40                 // String Key should never be null
      10: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_1
      15: ldc           #27                 // String _id
      17: invokevirtual #28                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      20: ifeq          28
      23: aload_0
      24: getfield      #14                 // Field id:Ljava/lang/Object;
      27: areturn
      28: aload_1
      29: ldc           #29                 // String filename
      31: invokevirtual #28                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      34: ifeq          42
      37: aload_0
      38: getfield      #15                 // Field filename:Ljava/lang/String;
      41: areturn
      42: aload_1
      43: ldc           #31                 // String contentType
      45: invokevirtual #28                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      48: ifeq          56
      51: aload_0
      52: getfield      #16                 // Field contentType:Ljava/lang/String;
      55: areturn
      56: aload_1
      57: ldc           #33                 // String length
      59: invokevirtual #28                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      62: ifeq          73
      65: aload_0
      66: getfield      #11                 // Field length:J
      69: invokestatic  #42                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      72: areturn
      73: aload_1
      74: ldc           #36                 // String chunkSize
      76: invokevirtual #28                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      79: ifeq          90
      82: aload_0
      83: getfield      #12                 // Field chunkSize:J
      86: invokestatic  #42                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      89: areturn
      90: aload_1
      91: ldc           #37                 // String uploadDate
      93: invokevirtual #28                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      96: ifeq          104
      99: aload_0
     100: getfield      #17                 // Field uploadDate:Ljava/util/Date;
     103: areturn
     104: aload_0
     105: getfield      #4                  // Field extra:Lcom/mongodb/DBObject;
     108: aload_1
     109: invokeinterface #19,  2           // InterfaceMethod com/mongodb/DBObject.get:(Ljava/lang/String;)Ljava/lang/Object;
     114: areturn

  public boolean containsField(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method keySet:()Ljava/util/Set;
       4: aload_1
       5: invokeinterface #44,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      10: ireturn

  public java.util.Set<java.lang.String> keySet();
    Code:
       0: new           #45                 // class java/util/HashSet
       3: dup
       4: invokespecial #46                 // Method java/util/HashSet."<init>":()V
       7: astore_1
       8: aload_1
       9: getstatic     #47                 // Field VALID_FIELDS:Ljava/util/Set;
      12: invokeinterface #48,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      17: pop
      18: aload_1
      19: aload_0
      20: getfield      #4                  // Field extra:Lcom/mongodb/DBObject;
      23: invokeinterface #49,  1           // InterfaceMethod com/mongodb/DBObject.keySet:()Ljava/util/Set;
      28: invokeinterface #48,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      33: pop
      34: aload_1
      35: areturn

  public boolean isPartialObject();
    Code:
       0: iconst_0
       1: ireturn

  public void markAsPartialObject();
    Code:
       0: new           #6                  // class com/mongodb/MongoException
       3: dup
       4: ldc           #50                 // String Can\'t load partial GridFSFile file
       6: invokespecial #8                  // Method com/mongodb/MongoException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.lang.String toString();
    Code:
       0: new           #51                 // class org/bson/json/JsonWriter
       3: dup
       4: new           #52                 // class java/io/StringWriter
       7: dup
       8: invokespecial #53                 // Method java/io/StringWriter."<init>":()V
      11: invokestatic  #54                 // Method org/bson/json/JsonWriterSettings.builder:()Lorg/bson/json/JsonWriterSettings$Builder;
      14: invokevirtual #55                 // Method org/bson/json/JsonWriterSettings$Builder.build:()Lorg/bson/json/JsonWriterSettings;
      17: invokespecial #56                 // Method org/bson/json/JsonWriter."<init>":(Ljava/io/Writer;Lorg/bson/json/JsonWriterSettings;)V
      20: astore_1
      21: getstatic     #57                 // Field DEFAULT_REGISTRY:Lorg/bson/codecs/configuration/CodecRegistry;
      24: ldc           #58                 // class com/mongodb/gridfs/GridFSFile
      26: invokeinterface #59,  2           // InterfaceMethod org/bson/codecs/configuration/CodecRegistry.get:(Ljava/lang/Class;)Lorg/bson/codecs/Codec;
      31: aload_1
      32: aload_0
      33: invokestatic  #60                 // Method org/bson/codecs/EncoderContext.builder:()Lorg/bson/codecs/EncoderContext$Builder;
      36: iconst_1
      37: invokevirtual #61                 // Method org/bson/codecs/EncoderContext$Builder.isEncodingCollectibleDocument:(Z)Lorg/bson/codecs/EncoderContext$Builder;
      40: invokevirtual #62                 // Method org/bson/codecs/EncoderContext$Builder.build:()Lorg/bson/codecs/EncoderContext;
      43: invokeinterface #63,  4           // InterfaceMethod org/bson/codecs/Codec.encode:(Lorg/bson/BsonWriter;Ljava/lang/Object;Lorg/bson/codecs/EncoderContext;)V
      48: aload_1
      49: invokevirtual #64                 // Method org/bson/json/JsonWriter.getWriter:()Ljava/io/Writer;
      52: invokevirtual #30                 // Method java/lang/Object.toString:()Ljava/lang/String;
      55: areturn

  protected void setGridFS(com.mongodb.gridfs.GridFS);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field fs:Lcom/mongodb/gridfs/GridFS;
       5: return

  protected com.mongodb.gridfs.GridFS getGridFS();
    Code:
       0: aload_0
       1: getfield      #5                  // Field fs:Lcom/mongodb/gridfs/GridFS;
       4: areturn

  public void putAll(org.bson.BSONObject);
    Code:
       0: new           #65                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #66                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void putAll(java.util.Map);
    Code:
       0: new           #65                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #66                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public java.util.Map<?, ?> toMap();
    Code:
       0: new           #65                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #66                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public java.lang.Object removeField(java.lang.String);
    Code:
       0: new           #65                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #66                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  static {};
    Code:
       0: iconst_3
       1: anewarray     #67                 // class org/bson/codecs/configuration/CodecProvider
       4: dup
       5: iconst_0
       6: new           #68                 // class org/bson/codecs/ValueCodecProvider
       9: dup
      10: invokespecial #69                 // Method org/bson/codecs/ValueCodecProvider."<init>":()V
      13: aastore
      14: dup
      15: iconst_1
      16: new           #70                 // class org/bson/codecs/BsonValueCodecProvider
      19: dup
      20: invokespecial #71                 // Method org/bson/codecs/BsonValueCodecProvider."<init>":()V
      23: aastore
      24: dup
      25: iconst_2
      26: new           #72                 // class com/mongodb/DBObjectCodecProvider
      29: dup
      30: invokespecial #73                 // Method com/mongodb/DBObjectCodecProvider."<init>":()V
      33: aastore
      34: invokestatic  #74                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      37: invokestatic  #75                 // Method org/bson/codecs/configuration/CodecRegistries.fromProviders:(Ljava/util/List;)Lorg/bson/codecs/configuration/CodecRegistry;
      40: putstatic     #57                 // Field DEFAULT_REGISTRY:Lorg/bson/codecs/configuration/CodecRegistry;
      43: new           #45                 // class java/util/HashSet
      46: dup
      47: bipush        7
      49: anewarray     #32                 // class java/lang/String
      52: dup
      53: iconst_0
      54: ldc           #27                 // String _id
      56: aastore
      57: dup
      58: iconst_1
      59: ldc           #29                 // String filename
      61: aastore
      62: dup
      63: iconst_2
      64: ldc           #31                 // String contentType
      66: aastore
      67: dup
      68: iconst_3
      69: ldc           #33                 // String length
      71: aastore
      72: dup
      73: iconst_4
      74: ldc           #36                 // String chunkSize
      76: aastore
      77: dup
      78: iconst_5
      79: ldc           #37                 // String uploadDate
      81: aastore
      82: dup
      83: bipush        6
      85: ldc           #18                 // String aliases
      87: aastore
      88: invokestatic  #74                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      91: invokespecial #76                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      94: invokestatic  #77                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      97: putstatic     #47                 // Field VALID_FIELDS:Ljava/util/Set;
     100: return
}
