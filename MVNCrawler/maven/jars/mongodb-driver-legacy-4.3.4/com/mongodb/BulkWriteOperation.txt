Compiled from "BulkWriteOperation.java"
public class com.mongodb.BulkWriteOperation {
  private static final java.lang.String ID_FIELD_NAME;

  private final boolean ordered;

  private final com.mongodb.DBCollection collection;

  private final java.util.List<com.mongodb.WriteRequest> requests;

  private java.lang.Boolean bypassDocumentValidation;

  private boolean closed;

  com.mongodb.BulkWriteOperation(boolean, com.mongodb.DBCollection);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field requests:Ljava/util/List;
      15: aload_0
      16: iload_1
      17: putfield      #5                  // Field ordered:Z
      20: aload_0
      21: aload_2
      22: putfield      #6                  // Field collection:Lcom/mongodb/DBCollection;
      25: return

  public boolean isOrdered();
    Code:
       0: aload_0
       1: getfield      #5                  // Field ordered:Z
       4: ireturn

  public java.lang.Boolean getBypassDocumentValidation();
    Code:
       0: aload_0
       1: getfield      #7                  // Field bypassDocumentValidation:Ljava/lang/Boolean;
       4: areturn

  public void setBypassDocumentValidation(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field bypassDocumentValidation:Ljava/lang/Boolean;
       5: return

  public void insert(com.mongodb.DBObject);
    Code:
       0: ldc           #8                  // String already executed
       2: aload_0
       3: getfield      #9                  // Field closed:Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: invokestatic  #10                 // Method com/mongodb/assertions/Assertions.isTrue:(Ljava/lang/String;Z)V
      17: aload_1
      18: ldc           #12                 // String _id
      20: invokeinterface #13,  2           // InterfaceMethod com/mongodb/DBObject.get:(Ljava/lang/String;)Ljava/lang/Object;
      25: ifnonnull     44
      28: aload_1
      29: ldc           #12                 // String _id
      31: new           #14                 // class org/bson/types/ObjectId
      34: dup
      35: invokespecial #15                 // Method org/bson/types/ObjectId."<init>":()V
      38: invokeinterface #16,  3           // InterfaceMethod com/mongodb/DBObject.put:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      43: pop
      44: aload_0
      45: new           #17                 // class com/mongodb/InsertRequest
      48: dup
      49: aload_1
      50: aload_0
      51: getfield      #6                  // Field collection:Lcom/mongodb/DBCollection;
      54: invokevirtual #18                 // Method com/mongodb/DBCollection.getObjectCodec:()Lorg/bson/codecs/Codec;
      57: invokespecial #19                 // Method com/mongodb/InsertRequest."<init>":(Lcom/mongodb/DBObject;Lorg/bson/codecs/Encoder;)V
      60: invokevirtual #20                 // Method addRequest:(Lcom/mongodb/WriteRequest;)V
      63: return

  public com.mongodb.BulkWriteRequestBuilder find(com.mongodb.DBObject);
    Code:
       0: ldc           #8                  // String already executed
       2: aload_0
       3: getfield      #9                  // Field closed:Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: invokestatic  #10                 // Method com/mongodb/assertions/Assertions.isTrue:(Ljava/lang/String;Z)V
      17: new           #21                 // class com/mongodb/BulkWriteRequestBuilder
      20: dup
      21: aload_0
      22: aload_1
      23: aload_0
      24: getfield      #6                  // Field collection:Lcom/mongodb/DBCollection;
      27: invokevirtual #22                 // Method com/mongodb/DBCollection.getDefaultDBObjectCodec:()Lorg/bson/codecs/Codec;
      30: aload_0
      31: getfield      #6                  // Field collection:Lcom/mongodb/DBCollection;
      34: invokevirtual #18                 // Method com/mongodb/DBCollection.getObjectCodec:()Lorg/bson/codecs/Codec;
      37: invokespecial #23                 // Method com/mongodb/BulkWriteRequestBuilder."<init>":(Lcom/mongodb/BulkWriteOperation;Lcom/mongodb/DBObject;Lorg/bson/codecs/Encoder;Lorg/bson/codecs/Encoder;)V
      40: areturn

  public com.mongodb.BulkWriteResult execute();
    Code:
       0: ldc           #8                  // String already executed
       2: aload_0
       3: getfield      #9                  // Field closed:Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: invokestatic  #10                 // Method com/mongodb/assertions/Assertions.isTrue:(Ljava/lang/String;Z)V
      17: aload_0
      18: iconst_1
      19: putfield      #9                  // Field closed:Z
      22: aload_0
      23: getfield      #6                  // Field collection:Lcom/mongodb/DBCollection;
      26: aload_0
      27: getfield      #5                  // Field ordered:Z
      30: aload_0
      31: getfield      #7                  // Field bypassDocumentValidation:Ljava/lang/Boolean;
      34: aload_0
      35: getfield      #4                  // Field requests:Ljava/util/List;
      38: invokevirtual #24                 // Method com/mongodb/DBCollection.executeBulkWriteOperation:(ZLjava/lang/Boolean;Ljava/util/List;)Lcom/mongodb/BulkWriteResult;
      41: areturn

  public com.mongodb.BulkWriteResult execute(com.mongodb.WriteConcern);
    Code:
       0: ldc           #8                  // String already executed
       2: aload_0
       3: getfield      #9                  // Field closed:Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: invokestatic  #10                 // Method com/mongodb/assertions/Assertions.isTrue:(Ljava/lang/String;Z)V
      17: aload_0
      18: iconst_1
      19: putfield      #9                  // Field closed:Z
      22: aload_0
      23: getfield      #6                  // Field collection:Lcom/mongodb/DBCollection;
      26: aload_0
      27: getfield      #5                  // Field ordered:Z
      30: aload_0
      31: getfield      #7                  // Field bypassDocumentValidation:Ljava/lang/Boolean;
      34: aload_0
      35: getfield      #4                  // Field requests:Ljava/util/List;
      38: aload_1
      39: invokevirtual #25                 // Method com/mongodb/DBCollection.executeBulkWriteOperation:(ZLjava/lang/Boolean;Ljava/util/List;Lcom/mongodb/WriteConcern;)Lcom/mongodb/BulkWriteResult;
      42: areturn

  void addRequest(com.mongodb.WriteRequest);
    Code:
       0: ldc           #8                  // String already executed
       2: aload_0
       3: getfield      #9                  // Field closed:Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: invokestatic  #10                 // Method com/mongodb/assertions/Assertions.isTrue:(Ljava/lang/String;Z)V
      17: aload_0
      18: getfield      #4                  // Field requests:Ljava/util/List;
      21: aload_1
      22: invokeinterface #26,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      27: pop
      28: return
}
