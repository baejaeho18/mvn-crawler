Compiled from "DBEncoderAdapter.java"
class com.mongodb.DBEncoderAdapter implements org.bson.codecs.Encoder<com.mongodb.DBObject> {
  private final com.mongodb.DBEncoder encoder;

  com.mongodb.DBEncoderAdapter(com.mongodb.DBEncoder);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #2                  // String encoder
       7: aload_1
       8: invokestatic  #3                  // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #4                  // class com/mongodb/DBEncoder
      14: putfield      #5                  // Field encoder:Lcom/mongodb/DBEncoder;
      17: return

  public void encode(org.bson.BsonWriter, com.mongodb.DBObject, org.bson.codecs.EncoderContext);
    Code:
       0: new           #6                  // class org/bson/io/BasicOutputBuffer
       3: dup
       4: invokespecial #7                  // Method org/bson/io/BasicOutputBuffer."<init>":()V
       7: astore        4
       9: aload_0
      10: getfield      #5                  // Field encoder:Lcom/mongodb/DBEncoder;
      13: aload         4
      15: aload_2
      16: invokeinterface #8,  3            // InterfaceMethod com/mongodb/DBEncoder.writeObject:(Lorg/bson/io/OutputBuffer;Lorg/bson/BSONObject;)I
      21: pop
      22: new           #9                  // class org/bson/BsonBinaryReader
      25: dup
      26: new           #10                 // class org/bson/io/ByteBufferBsonInput
      29: dup
      30: new           #11                 // class org/bson/ByteBufNIO
      33: dup
      34: aload         4
      36: invokevirtual #12                 // Method org/bson/io/BasicOutputBuffer.toByteArray:()[B
      39: invokestatic  #13                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      42: invokespecial #14                 // Method org/bson/ByteBufNIO."<init>":(Ljava/nio/ByteBuffer;)V
      45: invokespecial #15                 // Method org/bson/io/ByteBufferBsonInput."<init>":(Lorg/bson/ByteBuf;)V
      48: invokespecial #16                 // Method org/bson/BsonBinaryReader."<init>":(Lorg/bson/io/BsonInput;)V
      51: astore        5
      53: aload_1
      54: aload         5
      56: invokeinterface #17,  2           // InterfaceMethod org/bson/BsonWriter.pipe:(Lorg/bson/BsonReader;)V
      61: aload         5
      63: invokevirtual #18                 // Method org/bson/BsonBinaryReader.close:()V
      66: goto          79
      69: astore        6
      71: aload         5
      73: invokevirtual #18                 // Method org/bson/BsonBinaryReader.close:()V
      76: aload         6
      78: athrow
      79: aload         4
      81: invokevirtual #19                 // Method org/bson/io/BasicOutputBuffer.close:()V
      84: goto          97
      87: astore        7
      89: aload         4
      91: invokevirtual #19                 // Method org/bson/io/BasicOutputBuffer.close:()V
      94: aload         7
      96: athrow
      97: return
    Exception table:
       from    to  target type
          53    61    69   any
          69    71    69   any
           9    79    87   any
          87    89    87   any

  public java.lang.Class<com.mongodb.DBObject> getEncoderClass();
    Code:
       0: ldc           #20                 // class com/mongodb/DBObject
       2: areturn

  public void encode(org.bson.BsonWriter, java.lang.Object, org.bson.codecs.EncoderContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #20                 // class com/mongodb/DBObject
       6: aload_3
       7: invokevirtual #21                 // Method encode:(Lorg/bson/BsonWriter;Lcom/mongodb/DBObject;Lorg/bson/codecs/EncoderContext;)V
      10: return
}
