Compiled from "Recycler.java"
final class io.netty.util.Recycler$WeakOrderQueue {
  static final io.netty.util.Recycler$WeakOrderQueue DUMMY;

  private io.netty.util.Recycler$WeakOrderQueue$Link head;

  private io.netty.util.Recycler$WeakOrderQueue$Link tail;

  private io.netty.util.Recycler$WeakOrderQueue next;

  private final java.lang.ref.WeakReference<java.lang.Thread> owner;

  private final int id;

  private final java.util.concurrent.atomic.AtomicInteger availableSharedCapacity;

  static final boolean $assertionsDisabled;

  private io.netty.util.Recycler$WeakOrderQueue();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #42                 // Method io/netty/util/Recycler.access$900:()Ljava/util/concurrent/atomic/AtomicInteger;
       8: invokevirtual #48                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      11: putfield      #50                 // Field id:I
      14: aload_0
      15: aconst_null
      16: putfield      #52                 // Field owner:Ljava/lang/ref/WeakReference;
      19: aload_0
      20: aconst_null
      21: putfield      #54                 // Field availableSharedCapacity:Ljava/util/concurrent/atomic/AtomicInteger;
      24: return

  private io.netty.util.Recycler$WeakOrderQueue(io.netty.util.Recycler$Stack<?>, java.lang.Thread);
    Code:
       0: aload_0
       1: invokespecial #38                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #42                 // Method io/netty/util/Recycler.access$900:()Ljava/util/concurrent/atomic/AtomicInteger;
       8: invokevirtual #48                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      11: putfield      #50                 // Field id:I
      14: aload_0
      15: aload_0
      16: new           #10                 // class io/netty/util/Recycler$WeakOrderQueue$Link
      19: dup
      20: aconst_null
      21: invokespecial #59                 // Method io/netty/util/Recycler$WeakOrderQueue$Link."<init>":(Lio/netty/util/Recycler$1;)V
      24: dup_x1
      25: putfield      #61                 // Field tail:Lio/netty/util/Recycler$WeakOrderQueue$Link;
      28: putfield      #63                 // Field head:Lio/netty/util/Recycler$WeakOrderQueue$Link;
      31: aload_0
      32: new           #65                 // class java/lang/ref/WeakReference
      35: dup
      36: aload_2
      37: invokespecial #68                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
      40: putfield      #52                 // Field owner:Ljava/lang/ref/WeakReference;
      43: aload_0
      44: aload_1
      45: getfield      #69                 // Field io/netty/util/Recycler$Stack.availableSharedCapacity:Ljava/util/concurrent/atomic/AtomicInteger;
      48: putfield      #54                 // Field availableSharedCapacity:Ljava/util/concurrent/atomic/AtomicInteger;
      51: return

  static io.netty.util.Recycler$WeakOrderQueue newQueue(io.netty.util.Recycler$Stack<?>, java.lang.Thread);
    Code:
       0: new           #2                  // class io/netty/util/Recycler$WeakOrderQueue
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #78                 // Method "<init>":(Lio/netty/util/Recycler$Stack;Ljava/lang/Thread;)V
       9: astore_2
      10: aload_0
      11: aload_2
      12: invokevirtual #82                 // Method io/netty/util/Recycler$Stack.setHead:(Lio/netty/util/Recycler$WeakOrderQueue;)V
      15: aload_2
      16: areturn

  private void setNext(io.netty.util.Recycler$WeakOrderQueue);
    Code:
       0: getstatic     #86                 // Field $assertionsDisabled:Z
       3: ifne          19
       6: aload_1
       7: aload_0
       8: if_acmpne     19
      11: new           #88                 // class java/lang/AssertionError
      14: dup
      15: invokespecial #89                 // Method java/lang/AssertionError."<init>":()V
      18: athrow
      19: aload_0
      20: aload_1
      21: putfield      #91                 // Field next:Lio/netty/util/Recycler$WeakOrderQueue;
      24: return

  static io.netty.util.Recycler$WeakOrderQueue allocate(io.netty.util.Recycler$Stack<?>, java.lang.Thread);
    Code:
       0: aload_0
       1: getfield      #69                 // Field io/netty/util/Recycler$Stack.availableSharedCapacity:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokestatic  #95                 // Method io/netty/util/Recycler.access$800:()I
       7: invokestatic  #99                 // Method reserveSpace:(Ljava/util/concurrent/atomic/AtomicInteger;I)Z
      10: ifeq          21
      13: aload_0
      14: aload_1
      15: invokestatic  #101                // Method newQueue:(Lio/netty/util/Recycler$Stack;Ljava/lang/Thread;)Lio/netty/util/Recycler$WeakOrderQueue;
      18: goto          22
      21: aconst_null
      22: areturn

  private static boolean reserveSpace(java.util.concurrent.atomic.AtomicInteger, int);
    Code:
       0: getstatic     #86                 // Field $assertionsDisabled:Z
       3: ifne          18
       6: iload_1
       7: ifge          18
      10: new           #88                 // class java/lang/AssertionError
      13: dup
      14: invokespecial #89                 // Method java/lang/AssertionError."<init>":()V
      17: athrow
      18: aload_0
      19: invokevirtual #104                // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      22: istore_2
      23: iload_2
      24: iload_1
      25: if_icmpge     30
      28: iconst_0
      29: ireturn
      30: aload_0
      31: iload_2
      32: iload_2
      33: iload_1
      34: isub
      35: invokevirtual #108                // Method java/util/concurrent/atomic/AtomicInteger.compareAndSet:(II)Z
      38: ifeq          43
      41: iconst_1
      42: ireturn
      43: goto          18

  private void reclaimSpace(int);
    Code:
       0: getstatic     #86                 // Field $assertionsDisabled:Z
       3: ifne          18
       6: iload_1
       7: ifge          18
      10: new           #88                 // class java/lang/AssertionError
      13: dup
      14: invokespecial #89                 // Method java/lang/AssertionError."<init>":()V
      17: athrow
      18: aload_0
      19: getfield      #54                 // Field availableSharedCapacity:Ljava/util/concurrent/atomic/AtomicInteger;
      22: iload_1
      23: invokevirtual #116                // Method java/util/concurrent/atomic/AtomicInteger.addAndGet:(I)I
      26: pop
      27: return

  void add(io.netty.util.Recycler$DefaultHandle<?>);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #50                 // Field id:I
       5: invokestatic  #122                // Method io/netty/util/Recycler$DefaultHandle.access$1102:(Lio/netty/util/Recycler$DefaultHandle;I)I
       8: pop
       9: aload_0
      10: getfield      #61                 // Field tail:Lio/netty/util/Recycler$WeakOrderQueue$Link;
      13: astore_2
      14: aload_2
      15: invokevirtual #123                // Method io/netty/util/Recycler$WeakOrderQueue$Link.get:()I
      18: dup
      19: istore_3
      20: invokestatic  #95                 // Method io/netty/util/Recycler.access$800:()I
      23: if_icmpne     63
      26: aload_0
      27: getfield      #54                 // Field availableSharedCapacity:Ljava/util/concurrent/atomic/AtomicInteger;
      30: invokestatic  #95                 // Method io/netty/util/Recycler.access$800:()I
      33: invokestatic  #99                 // Method reserveSpace:(Ljava/util/concurrent/atomic/AtomicInteger;I)Z
      36: ifne          40
      39: return
      40: aload_0
      41: aload_2
      42: new           #10                 // class io/netty/util/Recycler$WeakOrderQueue$Link
      45: dup
      46: aconst_null
      47: invokespecial #59                 // Method io/netty/util/Recycler$WeakOrderQueue$Link."<init>":(Lio/netty/util/Recycler$1;)V
      50: invokestatic  #127                // Method io/netty/util/Recycler$WeakOrderQueue$Link.access$1202:(Lio/netty/util/Recycler$WeakOrderQueue$Link;Lio/netty/util/Recycler$WeakOrderQueue$Link;)Lio/netty/util/Recycler$WeakOrderQueue$Link;
      53: dup
      54: astore_2
      55: putfield      #61                 // Field tail:Lio/netty/util/Recycler$WeakOrderQueue$Link;
      58: aload_2
      59: invokevirtual #123                // Method io/netty/util/Recycler$WeakOrderQueue$Link.get:()I
      62: istore_3
      63: aload_2
      64: invokestatic  #131                // Method io/netty/util/Recycler$WeakOrderQueue$Link.access$1300:(Lio/netty/util/Recycler$WeakOrderQueue$Link;)[Lio/netty/util/Recycler$DefaultHandle;
      67: iload_3
      68: aload_1
      69: aastore
      70: aload_1
      71: aconst_null
      72: invokestatic  #135                // Method io/netty/util/Recycler$DefaultHandle.access$502:(Lio/netty/util/Recycler$DefaultHandle;Lio/netty/util/Recycler$Stack;)Lio/netty/util/Recycler$Stack;
      75: pop
      76: aload_2
      77: iload_3
      78: iconst_1
      79: iadd
      80: invokevirtual #138                // Method io/netty/util/Recycler$WeakOrderQueue$Link.lazySet:(I)V
      83: return

  boolean hasFinalData();
    Code:
       0: aload_0
       1: getfield      #61                 // Field tail:Lio/netty/util/Recycler$WeakOrderQueue$Link;
       4: invokestatic  #148                // Method io/netty/util/Recycler$WeakOrderQueue$Link.access$1400:(Lio/netty/util/Recycler$WeakOrderQueue$Link;)I
       7: aload_0
       8: getfield      #61                 // Field tail:Lio/netty/util/Recycler$WeakOrderQueue$Link;
      11: invokevirtual #123                // Method io/netty/util/Recycler$WeakOrderQueue$Link.get:()I
      14: if_icmpeq     21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  boolean transfer(io.netty.util.Recycler$Stack<?>);
    Code:
       0: aload_0
       1: getfield      #63                 // Field head:Lio/netty/util/Recycler$WeakOrderQueue$Link;
       4: astore_2
       5: aload_2
       6: ifnonnull     11
       9: iconst_0
      10: ireturn
      11: aload_2
      12: invokestatic  #148                // Method io/netty/util/Recycler$WeakOrderQueue$Link.access$1400:(Lio/netty/util/Recycler$WeakOrderQueue$Link;)I
      15: invokestatic  #95                 // Method io/netty/util/Recycler.access$800:()I
      18: if_icmpne     40
      21: aload_2
      22: invokestatic  #154                // Method io/netty/util/Recycler$WeakOrderQueue$Link.access$1200:(Lio/netty/util/Recycler$WeakOrderQueue$Link;)Lio/netty/util/Recycler$WeakOrderQueue$Link;
      25: ifnonnull     30
      28: iconst_0
      29: ireturn
      30: aload_0
      31: aload_2
      32: invokestatic  #154                // Method io/netty/util/Recycler$WeakOrderQueue$Link.access$1200:(Lio/netty/util/Recycler$WeakOrderQueue$Link;)Lio/netty/util/Recycler$WeakOrderQueue$Link;
      35: dup
      36: astore_2
      37: putfield      #63                 // Field head:Lio/netty/util/Recycler$WeakOrderQueue$Link;
      40: aload_2
      41: invokestatic  #148                // Method io/netty/util/Recycler$WeakOrderQueue$Link.access$1400:(Lio/netty/util/Recycler$WeakOrderQueue$Link;)I
      44: istore_3
      45: aload_2
      46: invokevirtual #123                // Method io/netty/util/Recycler$WeakOrderQueue$Link.get:()I
      49: istore        4
      51: iload         4
      53: iload_3
      54: isub
      55: istore        5
      57: iload         5
      59: ifne          64
      62: iconst_0
      63: ireturn
      64: aload_1
      65: invokestatic  #158                // Method io/netty/util/Recycler$Stack.access$700:(Lio/netty/util/Recycler$Stack;)I
      68: istore        6
      70: iload         6
      72: iload         5
      74: iadd
      75: istore        7
      77: iload         7
      79: aload_1
      80: invokestatic  #162                // Method io/netty/util/Recycler$Stack.access$600:(Lio/netty/util/Recycler$Stack;)[Lio/netty/util/Recycler$DefaultHandle;
      83: arraylength
      84: if_icmple     109
      87: aload_1
      88: iload         7
      90: invokevirtual #165                // Method io/netty/util/Recycler$Stack.increaseCapacity:(I)I
      93: istore        8
      95: iload_3
      96: iload         8
      98: iadd
      99: iload         6
     101: isub
     102: iload         4
     104: invokestatic  #171                // Method java/lang/Math.min:(II)I
     107: istore        4
     109: iload_3
     110: iload         4
     112: if_icmpeq     291
     115: aload_2
     116: invokestatic  #131                // Method io/netty/util/Recycler$WeakOrderQueue$Link.access$1300:(Lio/netty/util/Recycler$WeakOrderQueue$Link;)[Lio/netty/util/Recycler$DefaultHandle;
     119: astore        8
     121: aload_1
     122: invokestatic  #162                // Method io/netty/util/Recycler$Stack.access$600:(Lio/netty/util/Recycler$Stack;)[Lio/netty/util/Recycler$DefaultHandle;
     125: astore        9
     127: iload         6
     129: istore        10
     131: iload_3
     132: istore        11
     134: iload         11
     136: iload         4
     138: if_icmpge     234
     141: aload         8
     143: iload         11
     145: aaload
     146: astore        12
     148: aload         12
     150: invokestatic  #177                // Method io/netty/util/Recycler$DefaultHandle.access$1500:(Lio/netty/util/Recycler$DefaultHandle;)I
     153: ifne          170
     156: aload         12
     158: aload         12
     160: invokestatic  #180                // Method io/netty/util/Recycler$DefaultHandle.access$1100:(Lio/netty/util/Recycler$DefaultHandle;)I
     163: invokestatic  #183                // Method io/netty/util/Recycler$DefaultHandle.access$1502:(Lio/netty/util/Recycler$DefaultHandle;I)I
     166: pop
     167: goto          193
     170: aload         12
     172: invokestatic  #177                // Method io/netty/util/Recycler$DefaultHandle.access$1500:(Lio/netty/util/Recycler$DefaultHandle;)I
     175: aload         12
     177: invokestatic  #180                // Method io/netty/util/Recycler$DefaultHandle.access$1100:(Lio/netty/util/Recycler$DefaultHandle;)I
     180: if_icmpeq     193
     183: new           #185                // class java/lang/IllegalStateException
     186: dup
     187: ldc           #187                // String recycled already
     189: invokespecial #190                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     192: athrow
     193: aload         8
     195: iload         11
     197: aconst_null
     198: aastore
     199: aload_1
     200: aload         12
     202: invokevirtual #194                // Method io/netty/util/Recycler$Stack.dropHandle:(Lio/netty/util/Recycler$DefaultHandle;)Z
     205: ifeq          211
     208: goto          228
     211: aload         12
     213: aload_1
     214: invokestatic  #135                // Method io/netty/util/Recycler$DefaultHandle.access$502:(Lio/netty/util/Recycler$DefaultHandle;Lio/netty/util/Recycler$Stack;)Lio/netty/util/Recycler$Stack;
     217: pop
     218: aload         9
     220: iload         10
     222: iinc          10, 1
     225: aload         12
     227: aastore
     228: iinc          11, 1
     231: goto          134
     234: iload         4
     236: invokestatic  #95                 // Method io/netty/util/Recycler.access$800:()I
     239: if_icmpne     264
     242: aload_2
     243: invokestatic  #154                // Method io/netty/util/Recycler$WeakOrderQueue$Link.access$1200:(Lio/netty/util/Recycler$WeakOrderQueue$Link;)Lio/netty/util/Recycler$WeakOrderQueue$Link;
     246: ifnull        264
     249: aload_0
     250: invokestatic  #95                 // Method io/netty/util/Recycler.access$800:()I
     253: invokespecial #196                // Method reclaimSpace:(I)V
     256: aload_0
     257: aload_2
     258: invokestatic  #154                // Method io/netty/util/Recycler$WeakOrderQueue$Link.access$1200:(Lio/netty/util/Recycler$WeakOrderQueue$Link;)Lio/netty/util/Recycler$WeakOrderQueue$Link;
     261: putfield      #63                 // Field head:Lio/netty/util/Recycler$WeakOrderQueue$Link;
     264: aload_2
     265: iload         4
     267: invokestatic  #200                // Method io/netty/util/Recycler$WeakOrderQueue$Link.access$1402:(Lio/netty/util/Recycler$WeakOrderQueue$Link;I)I
     270: pop
     271: aload_1
     272: invokestatic  #158                // Method io/netty/util/Recycler$Stack.access$700:(Lio/netty/util/Recycler$Stack;)I
     275: iload         10
     277: if_icmpne     282
     280: iconst_0
     281: ireturn
     282: aload_1
     283: iload         10
     285: invokestatic  #204                // Method io/netty/util/Recycler$Stack.access$702:(Lio/netty/util/Recycler$Stack;I)I
     288: pop
     289: iconst_1
     290: ireturn
     291: iconst_0
     292: ireturn

  protected void finalize() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: invokespecial #221                // Method java/lang/Object.finalize:()V
       4: aload_0
       5: getfield      #63                 // Field head:Lio/netty/util/Recycler$WeakOrderQueue$Link;
       8: astore_1
       9: aload_1
      10: ifnull        28
      13: aload_0
      14: invokestatic  #95                 // Method io/netty/util/Recycler.access$800:()I
      17: invokespecial #196                // Method reclaimSpace:(I)V
      20: aload_1
      21: invokestatic  #154                // Method io/netty/util/Recycler$WeakOrderQueue$Link.access$1200:(Lio/netty/util/Recycler$WeakOrderQueue$Link;)Lio/netty/util/Recycler$WeakOrderQueue$Link;
      24: astore_1
      25: goto          9
      28: goto          58
      31: astore_2
      32: aload_0
      33: getfield      #63                 // Field head:Lio/netty/util/Recycler$WeakOrderQueue$Link;
      36: astore_3
      37: aload_3
      38: ifnull        56
      41: aload_0
      42: invokestatic  #95                 // Method io/netty/util/Recycler.access$800:()I
      45: invokespecial #196                // Method reclaimSpace:(I)V
      48: aload_3
      49: invokestatic  #154                // Method io/netty/util/Recycler$WeakOrderQueue$Link.access$1200:(Lio/netty/util/Recycler$WeakOrderQueue$Link;)Lio/netty/util/Recycler$WeakOrderQueue$Link;
      52: astore_3
      53: goto          37
      56: aload_2
      57: athrow
      58: return
    Exception table:
       from    to  target type
           0     4    31   any

  static void access$1700(io.netty.util.Recycler$WeakOrderQueue, io.netty.util.Recycler$WeakOrderQueue);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #226                // Method setNext:(Lio/netty/util/Recycler$WeakOrderQueue;)V
       5: return

  static io.netty.util.Recycler$WeakOrderQueue access$1800(io.netty.util.Recycler$WeakOrderQueue);
    Code:
       0: aload_0
       1: getfield      #91                 // Field next:Lio/netty/util/Recycler$WeakOrderQueue;
       4: areturn

  static java.lang.ref.WeakReference access$1900(io.netty.util.Recycler$WeakOrderQueue);
    Code:
       0: aload_0
       1: getfield      #52                 // Field owner:Ljava/lang/ref/WeakReference;
       4: areturn

  static {};
    Code:
       0: ldc           #7                  // class io/netty/util/Recycler
       2: invokevirtual #238                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #86                 // Field $assertionsDisabled:Z
      16: new           #2                  // class io/netty/util/Recycler$WeakOrderQueue
      19: dup
      20: invokespecial #239                // Method "<init>":()V
      23: putstatic     #241                // Field DUMMY:Lio/netty/util/Recycler$WeakOrderQueue;
      26: return
}
