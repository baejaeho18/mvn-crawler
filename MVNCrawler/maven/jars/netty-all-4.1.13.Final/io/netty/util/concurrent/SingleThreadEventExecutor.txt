Compiled from "SingleThreadEventExecutor.java"
public abstract class io.netty.util.concurrent.SingleThreadEventExecutor extends io.netty.util.concurrent.AbstractScheduledEventExecutor implements io.netty.util.concurrent.OrderedEventExecutor {
  static final int DEFAULT_MAX_PENDING_EXECUTOR_TASKS;

  private static final io.netty.util.internal.logging.InternalLogger logger;

  private static final int ST_NOT_STARTED;

  private static final int ST_STARTED;

  private static final int ST_SHUTTING_DOWN;

  private static final int ST_SHUTDOWN;

  private static final int ST_TERMINATED;

  private static final java.lang.Runnable WAKEUP_TASK;

  private static final java.lang.Runnable NOOP_TASK;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<io.netty.util.concurrent.SingleThreadEventExecutor> STATE_UPDATER;

  private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<io.netty.util.concurrent.SingleThreadEventExecutor, io.netty.util.concurrent.ThreadProperties> PROPERTIES_UPDATER;

  private final java.util.Queue<java.lang.Runnable> taskQueue;

  private volatile java.lang.Thread thread;

  private volatile io.netty.util.concurrent.ThreadProperties threadProperties;

  private final java.util.concurrent.Executor executor;

  private volatile boolean interrupted;

  private final java.util.concurrent.Semaphore threadLock;

  private final java.util.Set<java.lang.Runnable> shutdownHooks;

  private final boolean addTaskWakesUp;

  private final int maxPendingTasks;

  private final io.netty.util.concurrent.RejectedExecutionHandler rejectedExecutionHandler;

  private long lastExecutionTime;

  private volatile int state;

  private volatile long gracefulShutdownQuietPeriod;

  private volatile long gracefulShutdownTimeout;

  private long gracefulShutdownStartTime;

  private final io.netty.util.concurrent.Promise<?> terminationFuture;

  private static final long SCHEDULE_PURGE_INTERVAL;

  static final boolean $assertionsDisabled;

  protected io.netty.util.concurrent.SingleThreadEventExecutor(io.netty.util.concurrent.EventExecutorGroup, java.util.concurrent.ThreadFactory, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: new           #78                 // class io/netty/util/concurrent/ThreadPerTaskExecutor
       5: dup
       6: aload_2
       7: invokespecial #81                 // Method io/netty/util/concurrent/ThreadPerTaskExecutor."<init>":(Ljava/util/concurrent/ThreadFactory;)V
      10: iload_3
      11: invokespecial #84                 // Method "<init>":(Lio/netty/util/concurrent/EventExecutorGroup;Ljava/util/concurrent/Executor;Z)V
      14: return

  protected io.netty.util.concurrent.SingleThreadEventExecutor(io.netty.util.concurrent.EventExecutorGroup, java.util.concurrent.ThreadFactory, boolean, int, io.netty.util.concurrent.RejectedExecutionHandler);
    Code:
       0: aload_0
       1: aload_1
       2: new           #78                 // class io/netty/util/concurrent/ThreadPerTaskExecutor
       5: dup
       6: aload_2
       7: invokespecial #81                 // Method io/netty/util/concurrent/ThreadPerTaskExecutor."<init>":(Ljava/util/concurrent/ThreadFactory;)V
      10: iload_3
      11: iload         4
      13: aload         5
      15: invokespecial #94                 // Method "<init>":(Lio/netty/util/concurrent/EventExecutorGroup;Ljava/util/concurrent/Executor;ZILio/netty/util/concurrent/RejectedExecutionHandler;)V
      18: return

  protected io.netty.util.concurrent.SingleThreadEventExecutor(io.netty.util.concurrent.EventExecutorGroup, java.util.concurrent.Executor, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: getstatic     #97                 // Field DEFAULT_MAX_PENDING_EXECUTOR_TASKS:I
       7: invokestatic  #103                // Method io/netty/util/concurrent/RejectedExecutionHandlers.reject:()Lio/netty/util/concurrent/RejectedExecutionHandler;
      10: invokespecial #94                 // Method "<init>":(Lio/netty/util/concurrent/EventExecutorGroup;Ljava/util/concurrent/Executor;ZILio/netty/util/concurrent/RejectedExecutionHandler;)V
      13: return

  protected io.netty.util.concurrent.SingleThreadEventExecutor(io.netty.util.concurrent.EventExecutorGroup, java.util.concurrent.Executor, boolean, int, io.netty.util.concurrent.RejectedExecutionHandler);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #106                // Method io/netty/util/concurrent/AbstractScheduledEventExecutor."<init>":(Lio/netty/util/concurrent/EventExecutorGroup;)V
       5: aload_0
       6: new           #108                // class java/util/concurrent/Semaphore
       9: dup
      10: iconst_0
      11: invokespecial #111                // Method java/util/concurrent/Semaphore."<init>":(I)V
      14: putfield      #113                // Field threadLock:Ljava/util/concurrent/Semaphore;
      17: aload_0
      18: new           #115                // class java/util/LinkedHashSet
      21: dup
      22: invokespecial #118                // Method java/util/LinkedHashSet."<init>":()V
      25: putfield      #120                // Field shutdownHooks:Ljava/util/Set;
      28: aload_0
      29: iconst_1
      30: putfield      #122                // Field state:I
      33: aload_0
      34: new           #124                // class io/netty/util/concurrent/DefaultPromise
      37: dup
      38: getstatic     #130                // Field io/netty/util/concurrent/GlobalEventExecutor.INSTANCE:Lio/netty/util/concurrent/GlobalEventExecutor;
      41: invokespecial #133                // Method io/netty/util/concurrent/DefaultPromise."<init>":(Lio/netty/util/concurrent/EventExecutor;)V
      44: putfield      #135                // Field terminationFuture:Lio/netty/util/concurrent/Promise;
      47: aload_0
      48: iload_3
      49: putfield      #137                // Field addTaskWakesUp:Z
      52: aload_0
      53: bipush        16
      55: iload         4
      57: invokestatic  #143                // Method java/lang/Math.max:(II)I
      60: putfield      #145                // Field maxPendingTasks:I
      63: aload_0
      64: aload_2
      65: ldc           #146                // String executor
      67: invokestatic  #152                // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      70: checkcast     #154                // class java/util/concurrent/Executor
      73: putfield      #156                // Field executor:Ljava/util/concurrent/Executor;
      76: aload_0
      77: aload_0
      78: aload_0
      79: getfield      #145                // Field maxPendingTasks:I
      82: invokevirtual #160                // Method newTaskQueue:(I)Ljava/util/Queue;
      85: putfield      #162                // Field taskQueue:Ljava/util/Queue;
      88: aload_0
      89: aload         5
      91: ldc           #163                // String rejectedHandler
      93: invokestatic  #152                // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      96: checkcast     #165                // class io/netty/util/concurrent/RejectedExecutionHandler
      99: putfield      #167                // Field rejectedExecutionHandler:Lio/netty/util/concurrent/RejectedExecutionHandler;
     102: return

  protected java.util.Queue<java.lang.Runnable> newTaskQueue();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #145                // Field maxPendingTasks:I
       5: invokevirtual #160                // Method newTaskQueue:(I)Ljava/util/Queue;
       8: areturn

  protected java.util.Queue<java.lang.Runnable> newTaskQueue(int);
    Code:
       0: new           #171                // class java/util/concurrent/LinkedBlockingQueue
       3: dup
       4: iload_1
       5: invokespecial #172                // Method java/util/concurrent/LinkedBlockingQueue."<init>":(I)V
       8: areturn

  protected void interruptThread();
    Code:
       0: aload_0
       1: getfield      #175                // Field thread:Ljava/lang/Thread;
       4: astore_1
       5: aload_1
       6: ifnonnull     17
       9: aload_0
      10: iconst_1
      11: putfield      #177                // Field interrupted:Z
      14: goto          21
      17: aload_1
      18: invokevirtual #182                // Method java/lang/Thread.interrupt:()V
      21: return

  protected java.lang.Runnable pollTask();
    Code:
       0: getstatic     #187                // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #191                // Method inEventLoop:()Z
      10: ifne          21
      13: new           #193                // class java/lang/AssertionError
      16: dup
      17: invokespecial #194                // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #162                // Field taskQueue:Ljava/util/Queue;
      25: invokestatic  #198                // Method pollTaskFrom:(Ljava/util/Queue;)Ljava/lang/Runnable;
      28: areturn

  protected static java.lang.Runnable pollTaskFrom(java.util.Queue<java.lang.Runnable>);
    Code:
       0: aload_0
       1: invokeinterface #204,  1          // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
       6: checkcast     #206                // class java/lang/Runnable
       9: astore_1
      10: aload_1
      11: getstatic     #208                // Field WAKEUP_TASK:Ljava/lang/Runnable;
      14: if_acmpne     20
      17: goto          0
      20: aload_1
      21: areturn

  protected java.lang.Runnable takeTask();
    Code:
       0: getstatic     #187                // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #191                // Method inEventLoop:()Z
      10: ifne          21
      13: new           #193                // class java/lang/AssertionError
      16: dup
      17: invokespecial #194                // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #162                // Field taskQueue:Ljava/util/Queue;
      25: instanceof    #214                // class java/util/concurrent/BlockingQueue
      28: ifne          39
      31: new           #216                // class java/lang/UnsupportedOperationException
      34: dup
      35: invokespecial #217                // Method java/lang/UnsupportedOperationException."<init>":()V
      38: athrow
      39: aload_0
      40: getfield      #162                // Field taskQueue:Ljava/util/Queue;
      43: checkcast     #214                // class java/util/concurrent/BlockingQueue
      46: astore_1
      47: aload_0
      48: invokevirtual #221                // Method peekScheduledTask:()Lio/netty/util/concurrent/ScheduledFutureTask;
      51: astore_2
      52: aload_2
      53: ifnonnull     84
      56: aconst_null
      57: astore_3
      58: aload_1
      59: invokeinterface #224,  1          // InterfaceMethod java/util/concurrent/BlockingQueue.take:()Ljava/lang/Object;
      64: checkcast     #206                // class java/lang/Runnable
      67: astore_3
      68: aload_3
      69: getstatic     #208                // Field WAKEUP_TASK:Ljava/lang/Runnable;
      72: if_acmpne     77
      75: aconst_null
      76: astore_3
      77: goto          82
      80: astore        4
      82: aload_3
      83: areturn
      84: aload_2
      85: invokevirtual #230                // Method io/netty/util/concurrent/ScheduledFutureTask.delayNanos:()J
      88: lstore        5
      90: aconst_null
      91: astore        7
      93: lload         5
      95: lconst_0
      96: lcmp
      97: ifle          123
     100: aload_1
     101: lload         5
     103: getstatic     #236                // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
     106: invokeinterface #239,  4          // InterfaceMethod java/util/concurrent/BlockingQueue.poll:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
     111: checkcast     #206                // class java/lang/Runnable
     114: astore        7
     116: goto          123
     119: astore        8
     121: aconst_null
     122: areturn
     123: aload         7
     125: ifnonnull     144
     128: aload_0
     129: invokespecial #242                // Method fetchFromScheduledTaskQueue:()Z
     132: pop
     133: aload_1
     134: invokeinterface #243,  1          // InterfaceMethod java/util/concurrent/BlockingQueue.poll:()Ljava/lang/Object;
     139: checkcast     #206                // class java/lang/Runnable
     142: astore        7
     144: aload         7
     146: ifnull        152
     149: aload         7
     151: areturn
     152: goto          47
    Exception table:
       from    to  target type
          58    77    80   Class java/lang/InterruptedException
         100   116   119   Class java/lang/InterruptedException

  private boolean fetchFromScheduledTaskQueue();
    Code:
       0: invokestatic  #253                // Method io/netty/util/concurrent/AbstractScheduledEventExecutor.nanoTime:()J
       3: lstore_1
       4: aload_0
       5: lload_1
       6: invokevirtual #257                // Method pollScheduledTask:(J)Ljava/lang/Runnable;
       9: astore_3
      10: aload_3
      11: ifnull        52
      14: aload_0
      15: getfield      #162                // Field taskQueue:Ljava/util/Queue;
      18: aload_3
      19: invokeinterface #261,  2          // InterfaceMethod java/util/Queue.offer:(Ljava/lang/Object;)Z
      24: ifne          43
      27: aload_0
      28: invokevirtual #264                // Method scheduledTaskQueue:()Ljava/util/Queue;
      31: aload_3
      32: checkcast     #226                // class io/netty/util/concurrent/ScheduledFutureTask
      35: invokeinterface #267,  2          // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
      40: pop
      41: iconst_0
      42: ireturn
      43: aload_0
      44: lload_1
      45: invokevirtual #257                // Method pollScheduledTask:(J)Ljava/lang/Runnable;
      48: astore_3
      49: goto          10
      52: iconst_1
      53: ireturn

  protected java.lang.Runnable peekTask();
    Code:
       0: getstatic     #187                // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #191                // Method inEventLoop:()Z
      10: ifne          21
      13: new           #193                // class java/lang/AssertionError
      16: dup
      17: invokespecial #194                // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #162                // Field taskQueue:Ljava/util/Queue;
      25: invokeinterface #271,  1          // InterfaceMethod java/util/Queue.peek:()Ljava/lang/Object;
      30: checkcast     #206                // class java/lang/Runnable
      33: areturn

  protected boolean hasTasks();
    Code:
       0: getstatic     #187                // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #191                // Method inEventLoop:()Z
      10: ifne          21
      13: new           #193                // class java/lang/AssertionError
      16: dup
      17: invokespecial #194                // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #162                // Field taskQueue:Ljava/util/Queue;
      25: invokeinterface #275,  1          // InterfaceMethod java/util/Queue.isEmpty:()Z
      30: ifne          37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ireturn

  public int pendingTasks();
    Code:
       0: aload_0
       1: getfield      #162                // Field taskQueue:Ljava/util/Queue;
       4: invokeinterface #280,  1          // InterfaceMethod java/util/Queue.size:()I
       9: ireturn

  protected void addTask(java.lang.Runnable);
    Code:
       0: aload_1
       1: ifnonnull     15
       4: new           #284                // class java/lang/NullPointerException
       7: dup
       8: ldc_w         #285                // String task
      11: invokespecial #288                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: aload_0
      16: aload_1
      17: invokevirtual #292                // Method offerTask:(Ljava/lang/Runnable;)Z
      20: ifne          28
      23: aload_0
      24: aload_1
      25: invokevirtual #294                // Method reject:(Ljava/lang/Runnable;)V
      28: return

  final boolean offerTask(java.lang.Runnable);
    Code:
       0: aload_0
       1: invokevirtual #297                // Method isShutdown:()Z
       4: ifeq          10
       7: invokestatic  #299                // Method reject:()V
      10: aload_0
      11: getfield      #162                // Field taskQueue:Ljava/util/Queue;
      14: aload_1
      15: invokeinterface #261,  2          // InterfaceMethod java/util/Queue.offer:(Ljava/lang/Object;)Z
      20: ireturn

  protected boolean removeTask(java.lang.Runnable);
    Code:
       0: aload_1
       1: ifnonnull     15
       4: new           #284                // class java/lang/NullPointerException
       7: dup
       8: ldc_w         #285                // String task
      11: invokespecial #288                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: aload_0
      16: getfield      #162                // Field taskQueue:Ljava/util/Queue;
      19: aload_1
      20: invokeinterface #303,  2          // InterfaceMethod java/util/Queue.remove:(Ljava/lang/Object;)Z
      25: ireturn

  protected boolean runAllTasks();
    Code:
       0: getstatic     #187                // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #191                // Method inEventLoop:()Z
      10: ifne          21
      13: new           #193                // class java/lang/AssertionError
      16: dup
      17: invokespecial #194                // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: iconst_0
      22: istore_1
      23: aload_0
      24: invokespecial #242                // Method fetchFromScheduledTaskQueue:()Z
      27: istore_2
      28: aload_0
      29: aload_0
      30: getfield      #162                // Field taskQueue:Ljava/util/Queue;
      33: invokevirtual #308                // Method runAllTasksFrom:(Ljava/util/Queue;)Z
      36: ifeq          41
      39: iconst_1
      40: istore_1
      41: iload_2
      42: ifeq          23
      45: iload_1
      46: ifeq          56
      49: aload_0
      50: invokestatic  #309                // Method io/netty/util/concurrent/ScheduledFutureTask.nanoTime:()J
      53: putfield      #311                // Field lastExecutionTime:J
      56: aload_0
      57: invokevirtual #314                // Method afterRunningAllTasks:()V
      60: iload_1
      61: ireturn

  protected final boolean runAllTasksFrom(java.util.Queue<java.lang.Runnable>);
    Code:
       0: aload_1
       1: invokestatic  #198                // Method pollTaskFrom:(Ljava/util/Queue;)Ljava/lang/Runnable;
       4: astore_2
       5: aload_2
       6: ifnonnull     11
       9: iconst_0
      10: ireturn
      11: aload_2
      12: invokestatic  #319                // Method safeExecute:(Ljava/lang/Runnable;)V
      15: aload_1
      16: invokestatic  #198                // Method pollTaskFrom:(Ljava/util/Queue;)Ljava/lang/Runnable;
      19: astore_2
      20: aload_2
      21: ifnonnull     11
      24: iconst_1
      25: ireturn

  protected boolean runAllTasks(long);
    Code:
       0: aload_0
       1: invokespecial #242                // Method fetchFromScheduledTaskQueue:()Z
       4: pop
       5: aload_0
       6: invokevirtual #322                // Method pollTask:()Ljava/lang/Runnable;
       9: astore_3
      10: aload_3
      11: ifnonnull     20
      14: aload_0
      15: invokevirtual #314                // Method afterRunningAllTasks:()V
      18: iconst_0
      19: ireturn
      20: invokestatic  #309                // Method io/netty/util/concurrent/ScheduledFutureTask.nanoTime:()J
      23: lload_1
      24: ladd
      25: lstore        4
      27: lconst_0
      28: lstore        6
      30: aload_3
      31: invokestatic  #319                // Method safeExecute:(Ljava/lang/Runnable;)V
      34: lload         6
      36: lconst_1
      37: ladd
      38: lstore        6
      40: lload         6
      42: ldc2_w        #323                // long 63l
      45: land
      46: lconst_0
      47: lcmp
      48: ifne          67
      51: invokestatic  #309                // Method io/netty/util/concurrent/ScheduledFutureTask.nanoTime:()J
      54: lstore        8
      56: lload         8
      58: lload         4
      60: lcmp
      61: iflt          67
      64: goto          84
      67: aload_0
      68: invokevirtual #322                // Method pollTask:()Ljava/lang/Runnable;
      71: astore_3
      72: aload_3
      73: ifnonnull     30
      76: invokestatic  #309                // Method io/netty/util/concurrent/ScheduledFutureTask.nanoTime:()J
      79: lstore        8
      81: goto          84
      84: aload_0
      85: invokevirtual #314                // Method afterRunningAllTasks:()V
      88: aload_0
      89: lload         8
      91: putfield      #311                // Field lastExecutionTime:J
      94: iconst_1
      95: ireturn

  protected void afterRunningAllTasks();
    Code:
       0: return

  protected long delayNanos(long);
    Code:
       0: aload_0
       1: invokevirtual #221                // Method peekScheduledTask:()Lio/netty/util/concurrent/ScheduledFutureTask;
       4: astore_3
       5: aload_3
       6: ifnonnull     13
       9: getstatic     #330                // Field SCHEDULE_PURGE_INTERVAL:J
      12: lreturn
      13: aload_3
      14: lload_1
      15: invokevirtual #332                // Method io/netty/util/concurrent/ScheduledFutureTask.delayNanos:(J)J
      18: lreturn

  protected void updateLastExecutionTime();
    Code:
       0: aload_0
       1: invokestatic  #309                // Method io/netty/util/concurrent/ScheduledFutureTask.nanoTime:()J
       4: putfield      #311                // Field lastExecutionTime:J
       7: return

  protected abstract void run();

  protected void cleanup();
    Code:
       0: return

  protected void wakeup(boolean);
    Code:
       0: iload_1
       1: ifeq          12
       4: aload_0
       5: getfield      #122                // Field state:I
       8: iconst_3
       9: if_icmpne     25
      12: aload_0
      13: getfield      #162                // Field taskQueue:Ljava/util/Queue;
      16: getstatic     #208                // Field WAKEUP_TASK:Ljava/lang/Runnable;
      19: invokeinterface #261,  2          // InterfaceMethod java/util/Queue.offer:(Ljava/lang/Object;)Z
      24: pop
      25: return

  public boolean inEventLoop(java.lang.Thread);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #175                // Field thread:Ljava/lang/Thread;
       5: if_acmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public void addShutdownHook(java.lang.Runnable);
    Code:
       0: aload_0
       1: invokevirtual #191                // Method inEventLoop:()Z
       4: ifeq          21
       7: aload_0
       8: getfield      #120                // Field shutdownHooks:Ljava/util/Set;
      11: aload_1
      12: invokeinterface #343,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      17: pop
      18: goto          34
      21: aload_0
      22: new           #16                 // class io/netty/util/concurrent/SingleThreadEventExecutor$3
      25: dup
      26: aload_0
      27: aload_1
      28: invokespecial #346                // Method io/netty/util/concurrent/SingleThreadEventExecutor$3."<init>":(Lio/netty/util/concurrent/SingleThreadEventExecutor;Ljava/lang/Runnable;)V
      31: invokevirtual #349                // Method execute:(Ljava/lang/Runnable;)V
      34: return

  public void removeShutdownHook(java.lang.Runnable);
    Code:
       0: aload_0
       1: invokevirtual #191                // Method inEventLoop:()Z
       4: ifeq          21
       7: aload_0
       8: getfield      #120                // Field shutdownHooks:Ljava/util/Set;
      11: aload_1
      12: invokeinterface #351,  2          // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      17: pop
      18: goto          34
      21: aload_0
      22: new           #14                 // class io/netty/util/concurrent/SingleThreadEventExecutor$4
      25: dup
      26: aload_0
      27: aload_1
      28: invokespecial #352                // Method io/netty/util/concurrent/SingleThreadEventExecutor$4."<init>":(Lio/netty/util/concurrent/SingleThreadEventExecutor;Ljava/lang/Runnable;)V
      31: invokevirtual #349                // Method execute:(Ljava/lang/Runnable;)V
      34: return

  private boolean runShutdownHooks();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #120                // Field shutdownHooks:Ljava/util/Set;
       6: invokeinterface #356,  1          // InterfaceMethod java/util/Set.isEmpty:()Z
      11: ifne          107
      14: new           #358                // class java/util/ArrayList
      17: dup
      18: aload_0
      19: getfield      #120                // Field shutdownHooks:Ljava/util/Set;
      22: invokespecial #361                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      25: astore_2
      26: aload_0
      27: getfield      #120                // Field shutdownHooks:Ljava/util/Set;
      30: invokeinterface #364,  1          // InterfaceMethod java/util/Set.clear:()V
      35: aload_2
      36: invokeinterface #370,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      41: astore_3
      42: aload_3
      43: invokeinterface #375,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      48: ifeq          104
      51: aload_3
      52: invokeinterface #378,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      57: checkcast     #206                // class java/lang/Runnable
      60: astore        4
      62: aload         4
      64: invokeinterface #380,  1          // InterfaceMethod java/lang/Runnable.run:()V
      69: iconst_1
      70: istore_1
      71: goto          101
      74: astore        5
      76: getstatic     #382                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      79: ldc_w         #384                // String Shutdown hook raised an exception.
      82: aload         5
      84: invokeinterface #390,  3          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      89: iconst_1
      90: istore_1
      91: goto          101
      94: astore        6
      96: iconst_1
      97: istore_1
      98: aload         6
     100: athrow
     101: goto          42
     104: goto          2
     107: iload_1
     108: ifeq          118
     111: aload_0
     112: invokestatic  #309                // Method io/netty/util/concurrent/ScheduledFutureTask.nanoTime:()J
     115: putfield      #311                // Field lastExecutionTime:J
     118: iload_1
     119: ireturn
    Exception table:
       from    to  target type
          62    69    74   Class java/lang/Throwable
          62    69    94   any
          74    89    94   any
          94    96    94   any

  public io.netty.util.concurrent.Future<?> shutdownGracefully(long, long, java.util.concurrent.TimeUnit);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifge          40
       6: new           #400                // class java/lang/IllegalArgumentException
       9: dup
      10: new           #402                // class java/lang/StringBuilder
      13: dup
      14: invokespecial #403                // Method java/lang/StringBuilder."<init>":()V
      17: ldc_w         #405                // String quietPeriod:
      20: invokevirtual #409                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: lload_1
      24: invokevirtual #412                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      27: ldc_w         #414                // String  (expected >= 0)
      30: invokevirtual #409                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #418                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokespecial #419                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: lload_3
      41: lload_1
      42: lcmp
      43: ifge          90
      46: new           #400                // class java/lang/IllegalArgumentException
      49: dup
      50: new           #402                // class java/lang/StringBuilder
      53: dup
      54: invokespecial #403                // Method java/lang/StringBuilder."<init>":()V
      57: ldc_w         #421                // String timeout:
      60: invokevirtual #409                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: lload_3
      64: invokevirtual #412                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      67: ldc_w         #423                // String  (expected >= quietPeriod (
      70: invokevirtual #409                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: lload_1
      74: invokevirtual #412                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      77: ldc_w         #425                // String ))
      80: invokevirtual #409                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: invokevirtual #418                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      86: invokespecial #419                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      89: athrow
      90: aload         5
      92: ifnonnull     106
      95: new           #284                // class java/lang/NullPointerException
      98: dup
      99: ldc_w         #427                // String unit
     102: invokespecial #288                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
     105: athrow
     106: aload_0
     107: invokevirtual #430                // Method isShuttingDown:()Z
     110: ifeq          118
     113: aload_0
     114: invokevirtual #433                // Method terminationFuture:()Lio/netty/util/concurrent/Future;
     117: areturn
     118: aload_0
     119: invokevirtual #191                // Method inEventLoop:()Z
     122: istore        6
     124: aload_0
     125: invokevirtual #430                // Method isShuttingDown:()Z
     128: ifeq          136
     131: aload_0
     132: invokevirtual #433                // Method terminationFuture:()Lio/netty/util/concurrent/Future;
     135: areturn
     136: iconst_1
     137: istore        7
     139: aload_0
     140: getfield      #122                // Field state:I
     143: istore        8
     145: iload         6
     147: ifeq          156
     150: iconst_3
     151: istore        9
     153: goto          197
     156: iload         8
     158: lookupswitch  { // 2
                     1: 184
                     2: 184
               default: 190
          }
     184: iconst_3
     185: istore        9
     187: goto          197
     190: iload         8
     192: istore        9
     194: iconst_0
     195: istore        7
     197: getstatic     #435                // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     200: aload_0
     201: iload         8
     203: iload         9
     205: invokevirtual #441                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
     208: ifeq          214
     211: goto          217
     214: goto          124
     217: aload_0
     218: aload         5
     220: lload_1
     221: invokevirtual #444                // Method java/util/concurrent/TimeUnit.toNanos:(J)J
     224: putfield      #446                // Field gracefulShutdownQuietPeriod:J
     227: aload_0
     228: aload         5
     230: lload_3
     231: invokevirtual #444                // Method java/util/concurrent/TimeUnit.toNanos:(J)J
     234: putfield      #448                // Field gracefulShutdownTimeout:J
     237: iload         8
     239: iconst_1
     240: if_icmpne     247
     243: aload_0
     244: invokespecial #451                // Method doStartThread:()V
     247: iload         7
     249: ifeq          258
     252: aload_0
     253: iload         6
     255: invokevirtual #453                // Method wakeup:(Z)V
     258: aload_0
     259: invokevirtual #433                // Method terminationFuture:()Lio/netty/util/concurrent/Future;
     262: areturn

  public io.netty.util.concurrent.Future<?> terminationFuture();
    Code:
       0: aload_0
       1: getfield      #135                // Field terminationFuture:Lio/netty/util/concurrent/Promise;
       4: areturn

  public void shutdown();
    Code:
       0: aload_0
       1: invokevirtual #297                // Method isShutdown:()Z
       4: ifeq          8
       7: return
       8: aload_0
       9: invokevirtual #191                // Method inEventLoop:()Z
      12: istore_1
      13: aload_0
      14: invokevirtual #430                // Method isShuttingDown:()Z
      17: ifeq          21
      20: return
      21: iconst_1
      22: istore_2
      23: aload_0
      24: getfield      #122                // Field state:I
      27: istore_3
      28: iload_1
      29: ifeq          38
      32: iconst_4
      33: istore        4
      35: goto          75
      38: iload_3
      39: tableswitch   { // 1 to 3
                     1: 64
                     2: 64
                     3: 64
               default: 70
          }
      64: iconst_4
      65: istore        4
      67: goto          75
      70: iload_3
      71: istore        4
      73: iconst_0
      74: istore_2
      75: getstatic     #435                // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      78: aload_0
      79: iload_3
      80: iload         4
      82: invokevirtual #441                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      85: ifeq          91
      88: goto          94
      91: goto          13
      94: iload_3
      95: iconst_1
      96: if_icmpne     103
      99: aload_0
     100: invokespecial #451                // Method doStartThread:()V
     103: iload_2
     104: ifeq          112
     107: aload_0
     108: iload_1
     109: invokevirtual #453                // Method wakeup:(Z)V
     112: return

  public boolean isShuttingDown();
    Code:
       0: aload_0
       1: getfield      #122                // Field state:I
       4: iconst_3
       5: if_icmplt     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isShutdown();
    Code:
       0: aload_0
       1: getfield      #122                // Field state:I
       4: iconst_4
       5: if_icmplt     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isTerminated();
    Code:
       0: aload_0
       1: getfield      #122                // Field state:I
       4: iconst_5
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  protected boolean confirmShutdown();
    Code:
       0: aload_0
       1: invokevirtual #430                // Method isShuttingDown:()Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: invokevirtual #191                // Method inEventLoop:()Z
      13: ifne          27
      16: new           #462                // class java/lang/IllegalStateException
      19: dup
      20: ldc_w         #464                // String must be invoked from an event loop
      23: invokespecial #465                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload_0
      28: invokevirtual #468                // Method cancelScheduledTasks:()V
      31: aload_0
      32: getfield      #470                // Field gracefulShutdownStartTime:J
      35: lconst_0
      36: lcmp
      37: ifne          47
      40: aload_0
      41: invokestatic  #309                // Method io/netty/util/concurrent/ScheduledFutureTask.nanoTime:()J
      44: putfield      #470                // Field gracefulShutdownStartTime:J
      47: aload_0
      48: invokevirtual #472                // Method runAllTasks:()Z
      51: ifne          61
      54: aload_0
      55: invokespecial #474                // Method runShutdownHooks:()Z
      58: ifeq          88
      61: aload_0
      62: invokevirtual #297                // Method isShutdown:()Z
      65: ifeq          70
      68: iconst_1
      69: ireturn
      70: aload_0
      71: getfield      #446                // Field gracefulShutdownQuietPeriod:J
      74: lconst_0
      75: lcmp
      76: ifne          81
      79: iconst_1
      80: ireturn
      81: aload_0
      82: iconst_1
      83: invokevirtual #453                // Method wakeup:(Z)V
      86: iconst_0
      87: ireturn
      88: invokestatic  #309                // Method io/netty/util/concurrent/ScheduledFutureTask.nanoTime:()J
      91: lstore_1
      92: aload_0
      93: invokevirtual #297                // Method isShutdown:()Z
      96: ifne          113
      99: lload_1
     100: aload_0
     101: getfield      #470                // Field gracefulShutdownStartTime:J
     104: lsub
     105: aload_0
     106: getfield      #448                // Field gracefulShutdownTimeout:J
     109: lcmp
     110: ifle          115
     113: iconst_1
     114: ireturn
     115: lload_1
     116: aload_0
     117: getfield      #311                // Field lastExecutionTime:J
     120: lsub
     121: aload_0
     122: getfield      #446                // Field gracefulShutdownQuietPeriod:J
     125: lcmp
     126: ifgt          146
     129: aload_0
     130: iconst_1
     131: invokevirtual #453                // Method wakeup:(Z)V
     134: ldc2_w        #475                // long 100l
     137: invokestatic  #480                // Method java/lang/Thread.sleep:(J)V
     140: goto          144
     143: astore_3
     144: iconst_0
     145: ireturn
     146: iconst_1
     147: ireturn
    Exception table:
       from    to  target type
         134   140   143   Class java/lang/InterruptedException

  public boolean awaitTermination(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_3
       1: ifnonnull     15
       4: new           #284                // class java/lang/NullPointerException
       7: dup
       8: ldc_w         #427                // String unit
      11: invokespecial #288                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: aload_0
      16: invokevirtual #191                // Method inEventLoop:()Z
      19: ifeq          33
      22: new           #462                // class java/lang/IllegalStateException
      25: dup
      26: ldc_w         #484                // String cannot await termination of the current thread
      29: invokespecial #465                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: aload_0
      34: getfield      #113                // Field threadLock:Ljava/util/concurrent/Semaphore;
      37: lload_1
      38: aload_3
      39: invokevirtual #487                // Method java/util/concurrent/Semaphore.tryAcquire:(JLjava/util/concurrent/TimeUnit;)Z
      42: ifeq          52
      45: aload_0
      46: getfield      #113                // Field threadLock:Ljava/util/concurrent/Semaphore;
      49: invokevirtual #490                // Method java/util/concurrent/Semaphore.release:()V
      52: aload_0
      53: invokevirtual #492                // Method isTerminated:()Z
      56: ireturn

  public void execute(java.lang.Runnable);
    Code:
       0: aload_1
       1: ifnonnull     15
       4: new           #284                // class java/lang/NullPointerException
       7: dup
       8: ldc_w         #285                // String task
      11: invokespecial #288                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: aload_0
      16: invokevirtual #191                // Method inEventLoop:()Z
      19: istore_2
      20: iload_2
      21: ifeq          32
      24: aload_0
      25: aload_1
      26: invokevirtual #494                // Method addTask:(Ljava/lang/Runnable;)V
      29: goto          59
      32: aload_0
      33: invokespecial #497                // Method startThread:()V
      36: aload_0
      37: aload_1
      38: invokevirtual #494                // Method addTask:(Ljava/lang/Runnable;)V
      41: aload_0
      42: invokevirtual #297                // Method isShutdown:()Z
      45: ifeq          59
      48: aload_0
      49: aload_1
      50: invokevirtual #499                // Method removeTask:(Ljava/lang/Runnable;)Z
      53: ifeq          59
      56: invokestatic  #299                // Method reject:()V
      59: aload_0
      60: getfield      #137                // Field addTaskWakesUp:Z
      63: ifne          79
      66: aload_0
      67: aload_1
      68: invokevirtual #502                // Method wakesUpForTask:(Ljava/lang/Runnable;)Z
      71: ifeq          79
      74: aload_0
      75: iload_2
      76: invokevirtual #453                // Method wakeup:(Z)V
      79: return

  public <T> T invokeAny(java.util.Collection<? extends java.util.concurrent.Callable<T>>) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException;
    Code:
       0: aload_0
       1: ldc_w         #507                // String invokeAny
       4: invokespecial #510                // Method throwIfInEventLoop:(Ljava/lang/String;)V
       7: aload_0
       8: aload_1
       9: invokespecial #512                // Method io/netty/util/concurrent/AbstractScheduledEventExecutor.invokeAny:(Ljava/util/Collection;)Ljava/lang/Object;
      12: areturn

  public <T> T invokeAny(java.util.Collection<? extends java.util.concurrent.Callable<T>>, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException;
    Code:
       0: aload_0
       1: ldc_w         #507                // String invokeAny
       4: invokespecial #510                // Method throwIfInEventLoop:(Ljava/lang/String;)V
       7: aload_0
       8: aload_1
       9: lload_2
      10: aload         4
      12: invokespecial #520                // Method io/netty/util/concurrent/AbstractScheduledEventExecutor.invokeAny:(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      15: areturn

  public <T> java.util.List<java.util.concurrent.Future<T>> invokeAll(java.util.Collection<? extends java.util.concurrent.Callable<T>>) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: ldc_w         #523                // String invokeAll
       4: invokespecial #510                // Method throwIfInEventLoop:(Ljava/lang/String;)V
       7: aload_0
       8: aload_1
       9: invokespecial #525                // Method io/netty/util/concurrent/AbstractScheduledEventExecutor.invokeAll:(Ljava/util/Collection;)Ljava/util/List;
      12: areturn

  public <T> java.util.List<java.util.concurrent.Future<T>> invokeAll(java.util.Collection<? extends java.util.concurrent.Callable<T>>, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: ldc_w         #523                // String invokeAll
       4: invokespecial #510                // Method throwIfInEventLoop:(Ljava/lang/String;)V
       7: aload_0
       8: aload_1
       9: lload_2
      10: aload         4
      12: invokespecial #528                // Method io/netty/util/concurrent/AbstractScheduledEventExecutor.invokeAll:(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/util/List;
      15: areturn

  private void throwIfInEventLoop(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #191                // Method inEventLoop:()Z
       4: ifeq          41
       7: new           #530                // class java/util/concurrent/RejectedExecutionException
      10: dup
      11: new           #402                // class java/lang/StringBuilder
      14: dup
      15: invokespecial #403                // Method java/lang/StringBuilder."<init>":()V
      18: ldc_w         #532                // String Calling
      21: invokevirtual #409                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_1
      25: invokevirtual #409                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: ldc_w         #534                // String  from within the EventLoop is not allowed
      31: invokevirtual #409                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #418                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: invokespecial #535                // Method java/util/concurrent/RejectedExecutionException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: return

  public final io.netty.util.concurrent.ThreadProperties threadProperties();
    Code:
       0: aload_0
       1: getfield      #540                // Field threadProperties:Lio/netty/util/concurrent/ThreadProperties;
       4: astore_1
       5: aload_1
       6: ifnonnull     101
       9: aload_0
      10: getfield      #175                // Field thread:Ljava/lang/Thread;
      13: astore_2
      14: aload_2
      15: ifnonnull     75
      18: getstatic     #187                // Field $assertionsDisabled:Z
      21: ifne          39
      24: aload_0
      25: invokevirtual #191                // Method inEventLoop:()Z
      28: ifeq          39
      31: new           #193                // class java/lang/AssertionError
      34: dup
      35: invokespecial #194                // Method java/lang/AssertionError."<init>":()V
      38: athrow
      39: aload_0
      40: getstatic     #544                // Field NOOP_TASK:Ljava/lang/Runnable;
      43: invokevirtual #548                // Method submit:(Ljava/lang/Runnable;)Lio/netty/util/concurrent/Future;
      46: invokeinterface #553,  1          // InterfaceMethod io/netty/util/concurrent/Future.syncUninterruptibly:()Lio/netty/util/concurrent/Future;
      51: pop
      52: aload_0
      53: getfield      #175                // Field thread:Ljava/lang/Thread;
      56: astore_2
      57: getstatic     #187                // Field $assertionsDisabled:Z
      60: ifne          75
      63: aload_2
      64: ifnonnull     75
      67: new           #193                // class java/lang/AssertionError
      70: dup
      71: invokespecial #194                // Method java/lang/AssertionError."<init>":()V
      74: athrow
      75: new           #9                  // class io/netty/util/concurrent/SingleThreadEventExecutor$DefaultThreadProperties
      78: dup
      79: aload_2
      80: invokespecial #556                // Method io/netty/util/concurrent/SingleThreadEventExecutor$DefaultThreadProperties."<init>":(Ljava/lang/Thread;)V
      83: astore_1
      84: getstatic     #558                // Field PROPERTIES_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      87: aload_0
      88: aconst_null
      89: aload_1
      90: invokevirtual #563                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      93: ifne          101
      96: aload_0
      97: getfield      #540                // Field threadProperties:Lio/netty/util/concurrent/ThreadProperties;
     100: astore_1
     101: aload_1
     102: areturn

  protected boolean wakesUpForTask(java.lang.Runnable);
    Code:
       0: iconst_1
       1: ireturn

  protected static void reject();
    Code:
       0: new           #530                // class java/util/concurrent/RejectedExecutionException
       3: dup
       4: ldc_w         #565                // String event executor terminated
       7: invokespecial #535                // Method java/util/concurrent/RejectedExecutionException."<init>":(Ljava/lang/String;)V
      10: athrow

  protected final void reject(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #167                // Field rejectedExecutionHandler:Lio/netty/util/concurrent/RejectedExecutionHandler;
       4: aload_1
       5: aload_0
       6: invokeinterface #569,  3          // InterfaceMethod io/netty/util/concurrent/RejectedExecutionHandler.rejected:(Ljava/lang/Runnable;Lio/netty/util/concurrent/SingleThreadEventExecutor;)V
      11: return

  private void startThread();
    Code:
       0: aload_0
       1: getfield      #122                // Field state:I
       4: iconst_1
       5: if_icmpne     24
       8: getstatic     #435                // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      11: aload_0
      12: iconst_1
      13: iconst_2
      14: invokevirtual #441                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      17: ifeq          24
      20: aload_0
      21: invokespecial #451                // Method doStartThread:()V
      24: return

  private void doStartThread();
    Code:
       0: getstatic     #187                // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: getfield      #175                // Field thread:Ljava/lang/Thread;
      10: ifnull        21
      13: new           #193                // class java/lang/AssertionError
      16: dup
      17: invokespecial #194                // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #156                // Field executor:Ljava/util/concurrent/Executor;
      25: new           #12                 // class io/netty/util/concurrent/SingleThreadEventExecutor$5
      28: dup
      29: aload_0
      30: invokespecial #572                // Method io/netty/util/concurrent/SingleThreadEventExecutor$5."<init>":(Lio/netty/util/concurrent/SingleThreadEventExecutor;)V
      33: invokeinterface #573,  2          // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      38: return

  static java.util.Set access$000(io.netty.util.concurrent.SingleThreadEventExecutor);
    Code:
       0: aload_0
       1: getfield      #120                // Field shutdownHooks:Ljava/util/Set;
       4: areturn

  static java.lang.Thread access$102(io.netty.util.concurrent.SingleThreadEventExecutor, java.lang.Thread);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #175                // Field thread:Ljava/lang/Thread;
       6: areturn

  static boolean access$200(io.netty.util.concurrent.SingleThreadEventExecutor);
    Code:
       0: aload_0
       1: getfield      #177                // Field interrupted:Z
       4: ireturn

  static java.lang.Thread access$100(io.netty.util.concurrent.SingleThreadEventExecutor);
    Code:
       0: aload_0
       1: getfield      #175                // Field thread:Ljava/lang/Thread;
       4: areturn

  static io.netty.util.internal.logging.InternalLogger access$300();
    Code:
       0: getstatic     #382                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       3: areturn

  static int access$400(io.netty.util.concurrent.SingleThreadEventExecutor);
    Code:
       0: aload_0
       1: getfield      #122                // Field state:I
       4: ireturn

  static java.util.concurrent.atomic.AtomicIntegerFieldUpdater access$500();
    Code:
       0: getstatic     #435                // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: areturn

  static long access$600(io.netty.util.concurrent.SingleThreadEventExecutor);
    Code:
       0: aload_0
       1: getfield      #470                // Field gracefulShutdownStartTime:J
       4: lreturn

  static java.util.concurrent.Semaphore access$700(io.netty.util.concurrent.SingleThreadEventExecutor);
    Code:
       0: aload_0
       1: getfield      #113                // Field threadLock:Ljava/util/concurrent/Semaphore;
       4: areturn

  static java.util.Queue access$800(io.netty.util.concurrent.SingleThreadEventExecutor);
    Code:
       0: aload_0
       1: getfield      #162                // Field taskQueue:Ljava/util/Queue;
       4: areturn

  static io.netty.util.concurrent.Promise access$900(io.netty.util.concurrent.SingleThreadEventExecutor);
    Code:
       0: aload_0
       1: getfield      #135                // Field terminationFuture:Lio/netty/util/concurrent/Promise;
       4: areturn

  static {};
    Code:
       0: ldc           #2                  // class io/netty/util/concurrent/SingleThreadEventExecutor
       2: invokevirtual #603                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #187                // Field $assertionsDisabled:Z
      16: bipush        16
      18: ldc_w         #605                // String io.netty.eventexecutor.maxPendingTasks
      21: ldc_w         #606                // int 2147483647
      24: invokestatic  #612                // Method io/netty/util/internal/SystemPropertyUtil.getInt:(Ljava/lang/String;I)I
      27: invokestatic  #143                // Method java/lang/Math.max:(II)I
      30: putstatic     #97                 // Field DEFAULT_MAX_PENDING_EXECUTOR_TASKS:I
      33: ldc           #2                  // class io/netty/util/concurrent/SingleThreadEventExecutor
      35: invokestatic  #618                // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
      38: putstatic     #382                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      41: new           #20                 // class io/netty/util/concurrent/SingleThreadEventExecutor$1
      44: dup
      45: invokespecial #619                // Method io/netty/util/concurrent/SingleThreadEventExecutor$1."<init>":()V
      48: putstatic     #208                // Field WAKEUP_TASK:Ljava/lang/Runnable;
      51: new           #18                 // class io/netty/util/concurrent/SingleThreadEventExecutor$2
      54: dup
      55: invokespecial #620                // Method io/netty/util/concurrent/SingleThreadEventExecutor$2."<init>":()V
      58: putstatic     #544                // Field NOOP_TASK:Ljava/lang/Runnable;
      61: ldc           #2                  // class io/netty/util/concurrent/SingleThreadEventExecutor
      63: ldc_w         #621                // String state
      66: invokestatic  #625                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      69: putstatic     #435                // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      72: ldc           #2                  // class io/netty/util/concurrent/SingleThreadEventExecutor
      74: ldc_w         #542                // class io/netty/util/concurrent/ThreadProperties
      77: ldc_w         #626                // String threadProperties
      80: invokestatic  #629                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      83: putstatic     #558                // Field PROPERTIES_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      86: getstatic     #632                // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      89: lconst_1
      90: invokevirtual #444                // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      93: putstatic     #330                // Field SCHEDULE_PURGE_INTERVAL:J
      96: return
}
