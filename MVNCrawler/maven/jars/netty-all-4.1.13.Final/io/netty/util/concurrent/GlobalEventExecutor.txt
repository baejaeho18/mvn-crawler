Compiled from "GlobalEventExecutor.java"
public final class io.netty.util.concurrent.GlobalEventExecutor extends io.netty.util.concurrent.AbstractScheduledEventExecutor {
  private static final io.netty.util.internal.logging.InternalLogger logger;

  private static final long SCHEDULE_QUIET_PERIOD_INTERVAL;

  public static final io.netty.util.concurrent.GlobalEventExecutor INSTANCE;

  final java.util.concurrent.BlockingQueue<java.lang.Runnable> taskQueue;

  final io.netty.util.concurrent.ScheduledFutureTask<java.lang.Void> quietPeriodTask;

  final java.util.concurrent.ThreadFactory threadFactory;

  private final io.netty.util.concurrent.GlobalEventExecutor$TaskRunner taskRunner;

  private final java.util.concurrent.atomic.AtomicBoolean started;

  volatile java.lang.Thread thread;

  private final io.netty.util.concurrent.Future<?> terminationFuture;

  private io.netty.util.concurrent.GlobalEventExecutor();
    Code:
       0: aload_0
       1: invokespecial #37                 // Method io/netty/util/concurrent/AbstractScheduledEventExecutor."<init>":()V
       4: aload_0
       5: new           #39                 // class java/util/concurrent/LinkedBlockingQueue
       8: dup
       9: invokespecial #40                 // Method java/util/concurrent/LinkedBlockingQueue."<init>":()V
      12: putfield      #42                 // Field taskQueue:Ljava/util/concurrent/BlockingQueue;
      15: aload_0
      16: new           #44                 // class io/netty/util/concurrent/ScheduledFutureTask
      19: dup
      20: aload_0
      21: new           #10                 // class io/netty/util/concurrent/GlobalEventExecutor$1
      24: dup
      25: aload_0
      26: invokespecial #47                 // Method io/netty/util/concurrent/GlobalEventExecutor$1."<init>":(Lio/netty/util/concurrent/GlobalEventExecutor;)V
      29: aconst_null
      30: invokestatic  #53                 // Method java/util/concurrent/Executors.callable:(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Callable;
      33: getstatic     #55                 // Field SCHEDULE_QUIET_PERIOD_INTERVAL:J
      36: invokestatic  #59                 // Method io/netty/util/concurrent/ScheduledFutureTask.deadlineNanos:(J)J
      39: getstatic     #55                 // Field SCHEDULE_QUIET_PERIOD_INTERVAL:J
      42: lneg
      43: invokespecial #62                 // Method io/netty/util/concurrent/ScheduledFutureTask."<init>":(Lio/netty/util/concurrent/AbstractScheduledEventExecutor;Ljava/util/concurrent/Callable;JJ)V
      46: putfield      #64                 // Field quietPeriodTask:Lio/netty/util/concurrent/ScheduledFutureTask;
      49: aload_0
      50: new           #66                 // class io/netty/util/concurrent/DefaultThreadFactory
      53: dup
      54: aload_0
      55: invokevirtual #72                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      58: invokestatic  #76                 // Method io/netty/util/concurrent/DefaultThreadFactory.toPoolName:(Ljava/lang/Class;)Ljava/lang/String;
      61: iconst_0
      62: iconst_5
      63: aconst_null
      64: invokespecial #79                 // Method io/netty/util/concurrent/DefaultThreadFactory."<init>":(Ljava/lang/String;ZILjava/lang/ThreadGroup;)V
      67: putfield      #81                 // Field threadFactory:Ljava/util/concurrent/ThreadFactory;
      70: aload_0
      71: new           #7                  // class io/netty/util/concurrent/GlobalEventExecutor$TaskRunner
      74: dup
      75: aload_0
      76: invokespecial #82                 // Method io/netty/util/concurrent/GlobalEventExecutor$TaskRunner."<init>":(Lio/netty/util/concurrent/GlobalEventExecutor;)V
      79: putfield      #84                 // Field taskRunner:Lio/netty/util/concurrent/GlobalEventExecutor$TaskRunner;
      82: aload_0
      83: new           #86                 // class java/util/concurrent/atomic/AtomicBoolean
      86: dup
      87: invokespecial #87                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      90: putfield      #89                 // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
      93: aload_0
      94: new           #91                 // class io/netty/util/concurrent/FailedFuture
      97: dup
      98: aload_0
      99: new           #93                 // class java/lang/UnsupportedOperationException
     102: dup
     103: invokespecial #94                 // Method java/lang/UnsupportedOperationException."<init>":()V
     106: invokespecial #97                 // Method io/netty/util/concurrent/FailedFuture."<init>":(Lio/netty/util/concurrent/EventExecutor;Ljava/lang/Throwable;)V
     109: putfield      #99                 // Field terminationFuture:Lio/netty/util/concurrent/Future;
     112: aload_0
     113: invokevirtual #103                // Method scheduledTaskQueue:()Ljava/util/Queue;
     116: aload_0
     117: getfield      #64                 // Field quietPeriodTask:Lio/netty/util/concurrent/ScheduledFutureTask;
     120: invokeinterface #109,  2          // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
     125: pop
     126: return

  java.lang.Runnable takeTask();
    Code:
       0: aload_0
       1: getfield      #42                 // Field taskQueue:Ljava/util/concurrent/BlockingQueue;
       4: astore_1
       5: aload_0
       6: invokevirtual #120                // Method peekScheduledTask:()Lio/netty/util/concurrent/ScheduledFutureTask;
       9: astore_2
      10: aload_2
      11: ifnonnull     33
      14: aconst_null
      15: astore_3
      16: aload_1
      17: invokeinterface #124,  1          // InterfaceMethod java/util/concurrent/BlockingQueue.take:()Ljava/lang/Object;
      22: checkcast     #126                // class java/lang/Runnable
      25: astore_3
      26: goto          31
      29: astore        4
      31: aload_3
      32: areturn
      33: aload_2
      34: invokevirtual #130                // Method io/netty/util/concurrent/ScheduledFutureTask.delayNanos:()J
      37: lstore        5
      39: lload         5
      41: lconst_0
      42: lcmp
      43: ifle          69
      46: aload_1
      47: lload         5
      49: getstatic     #136                // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      52: invokeinterface #140,  4          // InterfaceMethod java/util/concurrent/BlockingQueue.poll:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      57: checkcast     #126                // class java/lang/Runnable
      60: astore        7
      62: goto          80
      65: astore        8
      67: aconst_null
      68: areturn
      69: aload_1
      70: invokeinterface #142,  1          // InterfaceMethod java/util/concurrent/BlockingQueue.poll:()Ljava/lang/Object;
      75: checkcast     #126                // class java/lang/Runnable
      78: astore        7
      80: aload         7
      82: ifnonnull     100
      85: aload_0
      86: invokespecial #145                // Method fetchFromScheduledTaskQueue:()V
      89: aload_1
      90: invokeinterface #142,  1          // InterfaceMethod java/util/concurrent/BlockingQueue.poll:()Ljava/lang/Object;
      95: checkcast     #126                // class java/lang/Runnable
      98: astore        7
     100: aload         7
     102: ifnull        108
     105: aload         7
     107: areturn
     108: goto          5
    Exception table:
       from    to  target type
          16    26    29   Class java/lang/InterruptedException
          46    62    65   Class java/lang/InterruptedException

  private void fetchFromScheduledTaskQueue();
    Code:
       0: invokestatic  #154                // Method io/netty/util/concurrent/AbstractScheduledEventExecutor.nanoTime:()J
       3: lstore_1
       4: aload_0
       5: lload_1
       6: invokevirtual #158                // Method pollScheduledTask:(J)Ljava/lang/Runnable;
       9: astore_3
      10: aload_3
      11: ifnull        34
      14: aload_0
      15: getfield      #42                 // Field taskQueue:Ljava/util/concurrent/BlockingQueue;
      18: aload_3
      19: invokeinterface #159,  2          // InterfaceMethod java/util/concurrent/BlockingQueue.add:(Ljava/lang/Object;)Z
      24: pop
      25: aload_0
      26: lload_1
      27: invokevirtual #158                // Method pollScheduledTask:(J)Ljava/lang/Runnable;
      30: astore_3
      31: goto          10
      34: return

  public int pendingTasks();
    Code:
       0: aload_0
       1: getfield      #42                 // Field taskQueue:Ljava/util/concurrent/BlockingQueue;
       4: invokeinterface #164,  1          // InterfaceMethod java/util/concurrent/BlockingQueue.size:()I
       9: ireturn

  private void addTask(java.lang.Runnable);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #168                // class java/lang/NullPointerException
       7: dup
       8: ldc           #169                // String task
      10: invokespecial #172                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #42                 // Field taskQueue:Ljava/util/concurrent/BlockingQueue;
      18: aload_1
      19: invokeinterface #159,  2          // InterfaceMethod java/util/concurrent/BlockingQueue.add:(Ljava/lang/Object;)Z
      24: pop
      25: return

  public boolean inEventLoop(java.lang.Thread);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #176                // Field thread:Ljava/lang/Thread;
       5: if_acmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public io.netty.util.concurrent.Future<?> shutdownGracefully(long, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokevirtual #181                // Method terminationFuture:()Lio/netty/util/concurrent/Future;
       4: areturn

  public io.netty.util.concurrent.Future<?> terminationFuture();
    Code:
       0: aload_0
       1: getfield      #99                 // Field terminationFuture:Lio/netty/util/concurrent/Future;
       4: areturn

  public void shutdown();
    Code:
       0: new           #93                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #94                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean isShuttingDown();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isShutdown();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isTerminated();
    Code:
       0: iconst_0
       1: ireturn

  public boolean awaitTermination(long, java.util.concurrent.TimeUnit);
    Code:
       0: iconst_0
       1: ireturn

  public boolean awaitInactivity(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_3
       1: ifnonnull     14
       4: new           #168                // class java/lang/NullPointerException
       7: dup
       8: ldc           #194                // String unit
      10: invokespecial #172                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #176                // Field thread:Ljava/lang/Thread;
      18: astore        4
      20: aload         4
      22: ifnonnull     35
      25: new           #196                // class java/lang/IllegalStateException
      28: dup
      29: ldc           #198                // String thread was not started
      31: invokespecial #199                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload         4
      37: aload_3
      38: lload_1
      39: invokevirtual #204                // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      42: invokevirtual #208                // Method java/lang/Thread.join:(J)V
      45: aload         4
      47: invokevirtual #211                // Method java/lang/Thread.isAlive:()Z
      50: ifne          57
      53: iconst_1
      54: goto          58
      57: iconst_0
      58: ireturn

  public void execute(java.lang.Runnable);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #168                // class java/lang/NullPointerException
       7: dup
       8: ldc           #169                // String task
      10: invokespecial #172                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: invokespecial #214                // Method addTask:(Ljava/lang/Runnable;)V
      19: aload_0
      20: invokevirtual #216                // Method inEventLoop:()Z
      23: ifne          30
      26: aload_0
      27: invokespecial #219                // Method startThread:()V
      30: return

  private void startThread();
    Code:
       0: aload_0
       1: getfield      #89                 // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #223                // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          35
      12: aload_0
      13: getfield      #81                 // Field threadFactory:Ljava/util/concurrent/ThreadFactory;
      16: aload_0
      17: getfield      #84                 // Field taskRunner:Lio/netty/util/concurrent/GlobalEventExecutor$TaskRunner;
      20: invokeinterface #229,  2          // InterfaceMethod java/util/concurrent/ThreadFactory.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;
      25: astore_1
      26: aload_0
      27: aload_1
      28: putfield      #176                // Field thread:Ljava/lang/Thread;
      31: aload_1
      32: invokevirtual #232                // Method java/lang/Thread.start:()V
      35: return

  static io.netty.util.internal.logging.InternalLogger access$000();
    Code:
       0: getstatic     #237                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       3: areturn

  static java.util.concurrent.atomic.AtomicBoolean access$100(io.netty.util.concurrent.GlobalEventExecutor);
    Code:
       0: aload_0
       1: getfield      #89                 // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: areturn

  static {};
    Code:
       0: ldc           #2                  // class io/netty/util/concurrent/GlobalEventExecutor
       2: invokestatic  #247                // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
       5: putstatic     #237                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       8: getstatic     #250                // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      11: lconst_1
      12: invokevirtual #253                // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      15: putstatic     #55                 // Field SCHEDULE_QUIET_PERIOD_INTERVAL:J
      18: new           #2                  // class io/netty/util/concurrent/GlobalEventExecutor
      21: dup
      22: invokespecial #254                // Method "<init>":()V
      25: putstatic     #256                // Field INSTANCE:Lio/netty/util/concurrent/GlobalEventExecutor;
      28: return
}
