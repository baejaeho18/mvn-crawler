Compiled from "ResourceLeakDetector.java"
public class io.netty.util.ResourceLeakDetector<T> {
  private static final java.lang.String PROP_LEVEL_OLD;

  private static final java.lang.String PROP_LEVEL;

  private static final io.netty.util.ResourceLeakDetector$Level DEFAULT_LEVEL;

  private static final java.lang.String PROP_MAX_RECORDS;

  private static final int DEFAULT_MAX_RECORDS;

  private static final int MAX_RECORDS;

  private static io.netty.util.ResourceLeakDetector$Level level;

  private static final io.netty.util.internal.logging.InternalLogger logger;

  static final int DEFAULT_SAMPLING_INTERVAL;

  private final java.util.concurrent.ConcurrentMap<io.netty.util.ResourceLeakDetector<T>.DefaultResourceLeak, io.netty.util.ResourceLeakDetector$LeakEntry> allLeaks;

  private final java.lang.ref.ReferenceQueue<java.lang.Object> refQueue;

  private final java.util.concurrent.ConcurrentMap<java.lang.String, java.lang.Boolean> reportedLeaks;

  private final java.lang.String resourceType;

  private final int samplingInterval;

  private static final java.lang.String[] STACK_TRACE_ELEMENT_EXCLUSIONS;

  public static void setEnabled(boolean);
    Code:
       0: iload_0
       1: ifeq          10
       4: getstatic     #54                 // Field io/netty/util/ResourceLeakDetector$Level.SIMPLE:Lio/netty/util/ResourceLeakDetector$Level;
       7: goto          13
      10: getstatic     #57                 // Field io/netty/util/ResourceLeakDetector$Level.DISABLED:Lio/netty/util/ResourceLeakDetector$Level;
      13: invokestatic  #61                 // Method setLevel:(Lio/netty/util/ResourceLeakDetector$Level;)V
      16: return

  public static boolean isEnabled();
    Code:
       0: invokestatic  #69                 // Method getLevel:()Lio/netty/util/ResourceLeakDetector$Level;
       3: invokevirtual #73                 // Method io/netty/util/ResourceLeakDetector$Level.ordinal:()I
       6: getstatic     #57                 // Field io/netty/util/ResourceLeakDetector$Level.DISABLED:Lio/netty/util/ResourceLeakDetector$Level;
       9: invokevirtual #73                 // Method io/netty/util/ResourceLeakDetector$Level.ordinal:()I
      12: if_icmple     19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  public static void setLevel(io.netty.util.ResourceLeakDetector$Level);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #75                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #76                 // String level
      10: invokespecial #80                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: putstatic     #82                 // Field level:Lio/netty/util/ResourceLeakDetector$Level;
      18: return

  public static io.netty.util.ResourceLeakDetector$Level getLevel();
    Code:
       0: getstatic     #82                 // Field level:Lio/netty/util/ResourceLeakDetector$Level;
       3: areturn

  public io.netty.util.ResourceLeakDetector(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #89                 // Method io/netty/util/internal/StringUtil.simpleClassName:(Ljava/lang/Class;)Ljava/lang/String;
       5: invokespecial #90                 // Method "<init>":(Ljava/lang/String;)V
       8: return

  public io.netty.util.ResourceLeakDetector(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: sipush        128
       5: ldc2_w        #96                 // long 9223372036854775807l
       8: invokespecial #100                // Method "<init>":(Ljava/lang/String;IJ)V
      11: return

  public io.netty.util.ResourceLeakDetector(java.lang.Class<?>, int, long);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #104                // Method "<init>":(Ljava/lang/Class;I)V
       6: return

  public io.netty.util.ResourceLeakDetector(java.lang.Class<?>, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #89                 // Method io/netty/util/internal/StringUtil.simpleClassName:(Ljava/lang/Class;)Ljava/lang/String;
       5: iload_2
       6: ldc2_w        #96                 // long 9223372036854775807l
       9: invokespecial #100                // Method "<init>":(Ljava/lang/String;IJ)V
      12: return

  public io.netty.util.ResourceLeakDetector(java.lang.String, int, long);
    Code:
       0: aload_0
       1: invokespecial #109                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #115                // Method io/netty/util/internal/PlatformDependent.newConcurrentHashMap:()Ljava/util/concurrent/ConcurrentMap;
       8: putfield      #117                // Field allLeaks:Ljava/util/concurrent/ConcurrentMap;
      11: aload_0
      12: new           #119                // class java/lang/ref/ReferenceQueue
      15: dup
      16: invokespecial #120                // Method java/lang/ref/ReferenceQueue."<init>":()V
      19: putfield      #122                // Field refQueue:Ljava/lang/ref/ReferenceQueue;
      22: aload_0
      23: invokestatic  #115                // Method io/netty/util/internal/PlatformDependent.newConcurrentHashMap:()Ljava/util/concurrent/ConcurrentMap;
      26: putfield      #124                // Field reportedLeaks:Ljava/util/concurrent/ConcurrentMap;
      29: aload_1
      30: ifnonnull     43
      33: new           #75                 // class java/lang/NullPointerException
      36: dup
      37: ldc           #125                // String resourceType
      39: invokespecial #80                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_0
      44: aload_1
      45: putfield      #129                // Field resourceType:Ljava/lang/String;
      48: aload_0
      49: iload_2
      50: putfield      #131                // Field samplingInterval:I
      53: return

  public final io.netty.util.ResourceLeak open(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #137                // Method track0:(Ljava/lang/Object;)Lio/netty/util/ResourceLeakDetector$DefaultResourceLeak;
       5: areturn

  public final io.netty.util.ResourceLeakTracker<T> track(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #137                // Method track0:(Ljava/lang/Object;)Lio/netty/util/ResourceLeakDetector$DefaultResourceLeak;
       5: areturn

  private io.netty.util.ResourceLeakDetector<T>.DefaultResourceLeak track0(T);
    Code:
       0: getstatic     #82                 // Field level:Lio/netty/util/ResourceLeakDetector$Level;
       3: astore_2
       4: aload_2
       5: getstatic     #57                 // Field io/netty/util/ResourceLeakDetector$Level.DISABLED:Lio/netty/util/ResourceLeakDetector$Level;
       8: if_acmpne     13
      11: aconst_null
      12: areturn
      13: aload_2
      14: invokevirtual #73                 // Method io/netty/util/ResourceLeakDetector$Level.ordinal:()I
      17: getstatic     #145                // Field io/netty/util/ResourceLeakDetector$Level.PARANOID:Lio/netty/util/ResourceLeakDetector$Level;
      20: invokevirtual #73                 // Method io/netty/util/ResourceLeakDetector$Level.ordinal:()I
      23: if_icmpge     56
      26: invokestatic  #149                // Method io/netty/util/internal/PlatformDependent.threadLocalRandom:()Ljava/util/Random;
      29: aload_0
      30: getfield      #131                // Field samplingInterval:I
      33: invokevirtual #155                // Method java/util/Random.nextInt:(I)I
      36: ifne          54
      39: aload_0
      40: aload_2
      41: invokespecial #158                // Method reportLeak:(Lio/netty/util/ResourceLeakDetector$Level;)V
      44: new           #11                 // class io/netty/util/ResourceLeakDetector$DefaultResourceLeak
      47: dup
      48: aload_0
      49: aload_1
      50: invokespecial #161                // Method io/netty/util/ResourceLeakDetector$DefaultResourceLeak."<init>":(Lio/netty/util/ResourceLeakDetector;Ljava/lang/Object;)V
      53: areturn
      54: aconst_null
      55: areturn
      56: aload_0
      57: aload_2
      58: invokespecial #158                // Method reportLeak:(Lio/netty/util/ResourceLeakDetector$Level;)V
      61: new           #11                 // class io/netty/util/ResourceLeakDetector$DefaultResourceLeak
      64: dup
      65: aload_0
      66: aload_1
      67: invokespecial #161                // Method io/netty/util/ResourceLeakDetector$DefaultResourceLeak."<init>":(Lio/netty/util/ResourceLeakDetector;Ljava/lang/Object;)V
      70: areturn

  private void reportLeak(io.netty.util.ResourceLeakDetector$Level);
    Code:
       0: getstatic     #163                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       3: invokeinterface #168,  1          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isErrorEnabled:()Z
       8: ifne          38
      11: aload_0
      12: getfield      #122                // Field refQueue:Ljava/lang/ref/ReferenceQueue;
      15: invokevirtual #172                // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
      18: checkcast     #11                 // class io/netty/util/ResourceLeakDetector$DefaultResourceLeak
      21: astore_2
      22: aload_2
      23: ifnonnull     29
      26: goto          37
      29: aload_2
      30: invokevirtual #175                // Method io/netty/util/ResourceLeakDetector$DefaultResourceLeak.close:()Z
      33: pop
      34: goto          11
      37: return
      38: aload_0
      39: getfield      #122                // Field refQueue:Ljava/lang/ref/ReferenceQueue;
      42: invokevirtual #172                // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
      45: checkcast     #11                 // class io/netty/util/ResourceLeakDetector$DefaultResourceLeak
      48: astore_2
      49: aload_2
      50: ifnonnull     56
      53: goto          121
      56: aload_2
      57: invokevirtual #178                // Method io/netty/util/ResourceLeakDetector$DefaultResourceLeak.clear:()V
      60: aload_2
      61: invokevirtual #175                // Method io/netty/util/ResourceLeakDetector$DefaultResourceLeak.close:()Z
      64: ifne          70
      67: goto          38
      70: aload_2
      71: invokevirtual #182                // Method io/netty/util/ResourceLeakDetector$DefaultResourceLeak.toString:()Ljava/lang/String;
      74: astore_3
      75: aload_0
      76: getfield      #124                // Field reportedLeaks:Ljava/util/concurrent/ConcurrentMap;
      79: aload_3
      80: getstatic     #188                // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      83: invokeinterface #194,  3          // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      88: ifnonnull     118
      91: aload_3
      92: invokevirtual #197                // Method java/lang/String.isEmpty:()Z
      95: ifeq          109
      98: aload_0
      99: aload_0
     100: getfield      #129                // Field resourceType:Ljava/lang/String;
     103: invokevirtual #200                // Method reportUntracedLeak:(Ljava/lang/String;)V
     106: goto          118
     109: aload_0
     110: aload_0
     111: getfield      #129                // Field resourceType:Ljava/lang/String;
     114: aload_3
     115: invokevirtual #204                // Method reportTracedLeak:(Ljava/lang/String;Ljava/lang/String;)V
     118: goto          38
     121: return

  protected void reportTracedLeak(java.lang.String, java.lang.String);
    Code:
       0: getstatic     #163                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       3: ldc           #210                // String LEAK: {}.release() was not called before it\'s garbage-collected. See http://netty.io/wiki/reference-counted-objects.html for more information.{}
       5: aload_1
       6: aload_2
       7: invokeinterface #214,  4          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      12: return

  protected void reportUntracedLeak(java.lang.String);
    Code:
       0: getstatic     #163                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       3: ldc           #216                // String LEAK: {}.release() was not called before it\'s garbage-collected. Enable advanced leak reporting to find out where the leak occurred. To enable advanced leak reporting, specify the JVM option \'-D{}={}\' or call {}.setLevel() See http://netty.io/wiki/reference-counted-objects.html for more information.
       5: iconst_4
       6: anewarray     #5                  // class java/lang/Object
       9: dup
      10: iconst_0
      11: aload_1
      12: aastore
      13: dup
      14: iconst_1
      15: ldc           #22                 // String io.netty.leakDetection.level
      17: aastore
      18: dup
      19: iconst_2
      20: getstatic     #219                // Field io/netty/util/ResourceLeakDetector$Level.ADVANCED:Lio/netty/util/ResourceLeakDetector$Level;
      23: invokevirtual #222                // Method io/netty/util/ResourceLeakDetector$Level.name:()Ljava/lang/String;
      26: invokevirtual #225                // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      29: aastore
      30: dup
      31: iconst_3
      32: aload_0
      33: invokestatic  #228                // Method io/netty/util/internal/StringUtil.simpleClassName:(Ljava/lang/Object;)Ljava/lang/String;
      36: aastore
      37: invokeinterface #231,  3          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.error:(Ljava/lang/String;[Ljava/lang/Object;)V
      42: return

  protected void reportInstancesLeak(java.lang.String);
    Code:
       0: return

  static java.lang.String newRecord(java.lang.Object, int);
    Code:
       0: new           #236                // class java/lang/StringBuilder
       3: dup
       4: sipush        4096
       7: invokespecial #239                // Method java/lang/StringBuilder."<init>":(I)V
      10: astore_2
      11: aload_0
      12: ifnull        60
      15: aload_2
      16: ldc           #241                // String \tHint:
      18: invokevirtual #245                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: pop
      22: aload_0
      23: instanceof    #247                // class io/netty/util/ResourceLeakHint
      26: ifeq          46
      29: aload_2
      30: aload_0
      31: checkcast     #247                // class io/netty/util/ResourceLeakHint
      34: invokeinterface #250,  1          // InterfaceMethod io/netty/util/ResourceLeakHint.toHintString:()Ljava/lang/String;
      39: invokevirtual #245                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: pop
      43: goto          52
      46: aload_2
      47: aload_0
      48: invokevirtual #253                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      51: pop
      52: aload_2
      53: getstatic     #256                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
      56: invokevirtual #245                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: pop
      60: new           #258                // class java/lang/Throwable
      63: dup
      64: invokespecial #259                // Method java/lang/Throwable."<init>":()V
      67: invokevirtual #263                // Method java/lang/Throwable.getStackTrace:()[Ljava/lang/StackTraceElement;
      70: astore_3
      71: aload_3
      72: astore        4
      74: aload         4
      76: arraylength
      77: istore        5
      79: iconst_0
      80: istore        6
      82: iload         6
      84: iload         5
      86: if_icmpge     198
      89: aload         4
      91: iload         6
      93: aaload
      94: astore        7
      96: iload_1
      97: ifle          106
     100: iinc          1, -1
     103: goto          192
     106: aload         7
     108: invokevirtual #268                // Method java/lang/StackTraceElement.toString:()Ljava/lang/String;
     111: astore        8
     113: iconst_0
     114: istore        9
     116: getstatic     #270                // Field STACK_TRACE_ELEMENT_EXCLUSIONS:[Ljava/lang/String;
     119: astore        10
     121: aload         10
     123: arraylength
     124: istore        11
     126: iconst_0
     127: istore        12
     129: iload         12
     131: iload         11
     133: if_icmpge     165
     136: aload         10
     138: iload         12
     140: aaload
     141: astore        13
     143: aload         8
     145: aload         13
     147: invokevirtual #275                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     150: ifeq          159
     153: iconst_1
     154: istore        9
     156: goto          165
     159: iinc          12, 1
     162: goto          129
     165: iload         9
     167: ifne          192
     170: aload_2
     171: bipush        9
     173: invokevirtual #278                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     176: pop
     177: aload_2
     178: aload         8
     180: invokevirtual #245                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     183: pop
     184: aload_2
     185: getstatic     #256                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
     188: invokevirtual #245                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     191: pop
     192: iinc          6, 1
     195: goto          82
     198: aload_2
     199: invokevirtual #279                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     202: areturn

  static io.netty.util.ResourceLeakDetector$Level access$000();
    Code:
       0: getstatic     #292                // Field DEFAULT_LEVEL:Lio/netty/util/ResourceLeakDetector$Level;
       3: areturn

  static java.lang.ref.ReferenceQueue access$100(io.netty.util.ResourceLeakDetector);
    Code:
       0: aload_0
       1: getfield      #122                // Field refQueue:Ljava/lang/ref/ReferenceQueue;
       4: areturn

  static java.util.concurrent.ConcurrentMap access$200(io.netty.util.ResourceLeakDetector);
    Code:
       0: aload_0
       1: getfield      #117                // Field allLeaks:Ljava/util/concurrent/ConcurrentMap;
       4: areturn

  static int access$300();
    Code:
       0: getstatic     #300                // Field MAX_RECORDS:I
       3: ireturn

  static {};
    Code:
       0: getstatic     #54                 // Field io/netty/util/ResourceLeakDetector$Level.SIMPLE:Lio/netty/util/ResourceLeakDetector$Level;
       3: putstatic     #292                // Field DEFAULT_LEVEL:Lio/netty/util/ResourceLeakDetector$Level;
       6: ldc           #2                  // class io/netty/util/ResourceLeakDetector
       8: invokestatic  #307                // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
      11: putstatic     #163                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      14: ldc_w         #309                // String io.netty.noResourceLeakDetection
      17: invokestatic  #315                // Method io/netty/util/internal/SystemPropertyUtil.get:(Ljava/lang/String;)Ljava/lang/String;
      20: ifnull        71
      23: ldc_w         #309                // String io.netty.noResourceLeakDetection
      26: iconst_0
      27: invokestatic  #319                // Method io/netty/util/internal/SystemPropertyUtil.getBoolean:(Ljava/lang/String;Z)Z
      30: istore_0
      31: getstatic     #163                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      34: ldc_w         #321                // String -Dio.netty.noResourceLeakDetection: {}
      37: iload_0
      38: invokestatic  #325                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      41: invokeinterface #329,  3          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      46: getstatic     #163                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      49: ldc_w         #331                // String -Dio.netty.noResourceLeakDetection is deprecated. Use \'-D{}={}\' instead.
      52: ldc           #22                 // String io.netty.leakDetection.level
      54: getstatic     #292                // Field DEFAULT_LEVEL:Lio/netty/util/ResourceLeakDetector$Level;
      57: invokevirtual #222                // Method io/netty/util/ResourceLeakDetector$Level.name:()Ljava/lang/String;
      60: invokevirtual #225                // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      63: invokeinterface #334,  4          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      68: goto          73
      71: iconst_0
      72: istore_0
      73: iload_0
      74: ifeq          83
      77: getstatic     #57                 // Field io/netty/util/ResourceLeakDetector$Level.DISABLED:Lio/netty/util/ResourceLeakDetector$Level;
      80: goto          86
      83: getstatic     #292                // Field DEFAULT_LEVEL:Lio/netty/util/ResourceLeakDetector$Level;
      86: astore_1
      87: ldc           #19                 // String io.netty.leakDetectionLevel
      89: aload_1
      90: invokevirtual #222                // Method io/netty/util/ResourceLeakDetector$Level.name:()Ljava/lang/String;
      93: invokestatic  #337                // Method io/netty/util/internal/SystemPropertyUtil.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      96: astore_2
      97: ldc           #22                 // String io.netty.leakDetection.level
      99: aload_2
     100: invokestatic  #337                // Method io/netty/util/internal/SystemPropertyUtil.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     103: astore_2
     104: aload_2
     105: invokestatic  #341                // Method io/netty/util/ResourceLeakDetector$Level.parseLevel:(Ljava/lang/String;)Lio/netty/util/ResourceLeakDetector$Level;
     108: astore_3
     109: ldc           #27                 // String io.netty.leakDetection.maxRecords
     111: iconst_4
     112: invokestatic  #345                // Method io/netty/util/internal/SystemPropertyUtil.getInt:(Ljava/lang/String;I)I
     115: putstatic     #300                // Field MAX_RECORDS:I
     118: aload_3
     119: putstatic     #82                 // Field level:Lio/netty/util/ResourceLeakDetector$Level;
     122: getstatic     #163                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
     125: invokeinterface #348,  1          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isDebugEnabled:()Z
     130: ifeq          172
     133: getstatic     #163                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
     136: ldc_w         #350                // String -D{}: {}
     139: ldc           #22                 // String io.netty.leakDetection.level
     141: aload_3
     142: invokevirtual #222                // Method io/netty/util/ResourceLeakDetector$Level.name:()Ljava/lang/String;
     145: invokevirtual #225                // Method java/lang/String.toLowerCase:()Ljava/lang/String;
     148: invokeinterface #352,  4          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     153: getstatic     #163                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
     156: ldc_w         #350                // String -D{}: {}
     159: ldc           #27                 // String io.netty.leakDetection.maxRecords
     161: getstatic     #300                // Field MAX_RECORDS:I
     164: invokestatic  #357                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     167: invokeinterface #352,  4          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     172: iconst_4
     173: anewarray     #127                // class java/lang/String
     176: dup
     177: iconst_0
     178: ldc_w         #359                // String io.netty.util.ReferenceCountUtil.touch(
     181: aastore
     182: dup
     183: iconst_1
     184: ldc_w         #361                // String io.netty.buffer.AdvancedLeakAwareByteBuf.touch(
     187: aastore
     188: dup
     189: iconst_2
     190: ldc_w         #363                // String io.netty.buffer.AbstractByteBufAllocator.toLeakAwareBuffer(
     193: aastore
     194: dup
     195: iconst_3
     196: ldc_w         #365                // String io.netty.buffer.AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation(
     199: aastore
     200: putstatic     #270                // Field STACK_TRACE_ELEMENT_EXCLUSIONS:[Ljava/lang/String;
     203: return
}
