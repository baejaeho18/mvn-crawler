Compiled from "AtomicReferenceArrayQueue.java"
abstract class io.netty.util.internal.shaded.org.jctools.queues.atomic.AtomicReferenceArrayQueue<E> extends java.util.AbstractQueue<E> {
  protected final java.util.concurrent.atomic.AtomicReferenceArray<E> buffer;

  protected final int mask;

  public io.netty.util.internal.shaded.org.jctools.queues.atomic.AtomicReferenceArrayQueue(int);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method java/util/AbstractQueue."<init>":()V
       4: iload_1
       5: invokestatic  #22                 // Method io/netty/util/internal/shaded/org/jctools/util/Pow2.roundToPowerOfTwo:(I)I
       8: istore_2
       9: aload_0
      10: iload_2
      11: iconst_1
      12: isub
      13: putfield      #24                 // Field mask:I
      16: aload_0
      17: new           #26                 // class java/util/concurrent/atomic/AtomicReferenceArray
      20: dup
      21: iload_2
      22: invokespecial #28                 // Method java/util/concurrent/atomic/AtomicReferenceArray."<init>":(I)V
      25: putfield      #30                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      28: return

  public java.util.Iterator<E> iterator();
    Code:
       0: new           #39                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #40                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokevirtual #53                 // Method java/lang/Class.getName:()Ljava/lang/String;
       7: areturn

  public void clear();
    Code:
       0: aload_0
       1: invokevirtual #58                 // Method poll:()Ljava/lang/Object;
       4: ifnonnull     0
       7: aload_0
       8: invokevirtual #62                 // Method isEmpty:()Z
      11: ifne          17
      14: goto          0
      17: return

  protected final int calcElementOffset(long, int);
    Code:
       0: lload_1
       1: l2i
       2: iload_3
       3: iand
       4: ireturn

  protected final int calcElementOffset(long);
    Code:
       0: lload_1
       1: l2i
       2: aload_0
       3: getfield      #24                 // Field mask:I
       6: iand
       7: ireturn

  protected final E lvElement(java.util.concurrent.atomic.AtomicReferenceArray<E>, int);
    Code:
       0: aload_1
       1: iload_2
       2: invokevirtual #73                 // Method java/util/concurrent/atomic/AtomicReferenceArray.get:(I)Ljava/lang/Object;
       5: areturn

  protected final E lpElement(java.util.concurrent.atomic.AtomicReferenceArray<E>, int);
    Code:
       0: aload_1
       1: iload_2
       2: invokevirtual #73                 // Method java/util/concurrent/atomic/AtomicReferenceArray.get:(I)Ljava/lang/Object;
       5: areturn

  protected final E lpElement(int);
    Code:
       0: aload_0
       1: getfield      #30                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
       4: iload_1
       5: invokevirtual #73                 // Method java/util/concurrent/atomic/AtomicReferenceArray.get:(I)Ljava/lang/Object;
       8: areturn

  protected final void spElement(java.util.concurrent.atomic.AtomicReferenceArray<E>, int, E);
    Code:
       0: aload_1
       1: iload_2
       2: aload_3
       3: invokevirtual #81                 // Method java/util/concurrent/atomic/AtomicReferenceArray.lazySet:(ILjava/lang/Object;)V
       6: return

  protected final void spElement(int, E);
    Code:
       0: aload_0
       1: getfield      #30                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
       4: iload_1
       5: aload_2
       6: invokevirtual #81                 // Method java/util/concurrent/atomic/AtomicReferenceArray.lazySet:(ILjava/lang/Object;)V
       9: return

  protected final void soElement(java.util.concurrent.atomic.AtomicReferenceArray<E>, int, E);
    Code:
       0: aload_1
       1: iload_2
       2: aload_3
       3: invokevirtual #81                 // Method java/util/concurrent/atomic/AtomicReferenceArray.lazySet:(ILjava/lang/Object;)V
       6: return

  protected final void soElement(int, E);
    Code:
       0: aload_0
       1: getfield      #30                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
       4: iload_1
       5: aload_2
       6: invokevirtual #81                 // Method java/util/concurrent/atomic/AtomicReferenceArray.lazySet:(ILjava/lang/Object;)V
       9: return

  protected final void svElement(java.util.concurrent.atomic.AtomicReferenceArray<E>, int, E);
    Code:
       0: aload_1
       1: iload_2
       2: aload_3
       3: invokevirtual #89                 // Method java/util/concurrent/atomic/AtomicReferenceArray.set:(ILjava/lang/Object;)V
       6: return

  protected final E lvElement(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #30                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
       5: iload_1
       6: invokevirtual #91                 // Method lvElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
       9: areturn
}
