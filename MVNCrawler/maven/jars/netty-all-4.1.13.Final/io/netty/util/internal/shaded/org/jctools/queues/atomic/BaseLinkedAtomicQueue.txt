Compiled from "BaseLinkedAtomicQueue.java"
abstract class io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue<E> extends java.util.AbstractQueue<E> {
  private final java.util.concurrent.atomic.AtomicReference<io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode<E>> producerNode;

  private final java.util.concurrent.atomic.AtomicReference<io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode<E>> consumerNode;

  public io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue();
    Code:
       0: aload_0
       1: invokespecial #14                 // Method java/util/AbstractQueue."<init>":()V
       4: aload_0
       5: new           #16                 // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokespecial #17                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      12: putfield      #19                 // Field producerNode:Ljava/util/concurrent/atomic/AtomicReference;
      15: aload_0
      16: new           #16                 // class java/util/concurrent/atomic/AtomicReference
      19: dup
      20: invokespecial #17                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      23: putfield      #21                 // Field consumerNode:Ljava/util/concurrent/atomic/AtomicReference;
      26: return

  protected final io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode<E> lvProducerNode();
    Code:
       0: aload_0
       1: getfield      #19                 // Field producerNode:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #32                 // class io/netty/util/internal/shaded/org/jctools/queues/atomic/LinkedQueueAtomicNode
      10: areturn

  protected final io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode<E> lpProducerNode();
    Code:
       0: aload_0
       1: getfield      #19                 // Field producerNode:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #32                 // class io/netty/util/internal/shaded/org/jctools/queues/atomic/LinkedQueueAtomicNode
      10: areturn

  protected final void spProducerNode(io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode<E>);
    Code:
       0: aload_0
       1: getfield      #19                 // Field producerNode:Ljava/util/concurrent/atomic/AtomicReference;
       4: aload_1
       5: invokevirtual #39                 // Method java/util/concurrent/atomic/AtomicReference.lazySet:(Ljava/lang/Object;)V
       8: return

  protected final io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode<E> xchgProducerNode(io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode<E>);
    Code:
       0: aload_0
       1: getfield      #19                 // Field producerNode:Ljava/util/concurrent/atomic/AtomicReference;
       4: aload_1
       5: invokevirtual #48                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #32                 // class io/netty/util/internal/shaded/org/jctools/queues/atomic/LinkedQueueAtomicNode
      11: areturn

  protected final io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode<E> lvConsumerNode();
    Code:
       0: aload_0
       1: getfield      #21                 // Field consumerNode:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #32                 // class io/netty/util/internal/shaded/org/jctools/queues/atomic/LinkedQueueAtomicNode
      10: areturn

  protected final io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode<E> lpConsumerNode();
    Code:
       0: aload_0
       1: getfield      #21                 // Field consumerNode:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #32                 // class io/netty/util/internal/shaded/org/jctools/queues/atomic/LinkedQueueAtomicNode
      10: areturn

  protected final void spConsumerNode(io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode<E>);
    Code:
       0: aload_0
       1: getfield      #21                 // Field consumerNode:Ljava/util/concurrent/atomic/AtomicReference;
       4: aload_1
       5: invokevirtual #39                 // Method java/util/concurrent/atomic/AtomicReference.lazySet:(Ljava/lang/Object;)V
       8: return

  public final java.util.Iterator<E> iterator();
    Code:
       0: new           #55                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #56                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #64                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokevirtual #69                 // Method java/lang/Class.getName:()Ljava/lang/String;
       7: areturn

  public final int size();
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method lvConsumerNode:()Lio/netty/util/internal/shaded/org/jctools/queues/atomic/LinkedQueueAtomicNode;
       4: astore_1
       5: aload_0
       6: invokevirtual #75                 // Method lvProducerNode:()Lio/netty/util/internal/shaded/org/jctools/queues/atomic/LinkedQueueAtomicNode;
       9: astore_2
      10: iconst_0
      11: istore_3
      12: aload_1
      13: aload_2
      14: if_acmpeq     50
      17: aload_1
      18: ifnull        50
      21: iload_3
      22: ldc           #76                 // int 2147483647
      24: if_icmpge     50
      27: aload_1
      28: invokevirtual #79                 // Method io/netty/util/internal/shaded/org/jctools/queues/atomic/LinkedQueueAtomicNode.lvNext:()Lio/netty/util/internal/shaded/org/jctools/queues/atomic/LinkedQueueAtomicNode;
      31: astore        4
      33: aload         4
      35: aload_1
      36: if_acmpne     41
      39: iload_3
      40: ireturn
      41: aload         4
      43: astore_1
      44: iinc          3, 1
      47: goto          12
      50: iload_3
      51: ireturn

  public final boolean isEmpty();
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method lvConsumerNode:()Lio/netty/util/internal/shaded/org/jctools/queues/atomic/LinkedQueueAtomicNode;
       4: aload_0
       5: invokevirtual #75                 // Method lvProducerNode:()Lio/netty/util/internal/shaded/org/jctools/queues/atomic/LinkedQueueAtomicNode;
       8: if_acmpne     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  protected E getSingleConsumerNodeValue(io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode<E>, io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode<E>);
    Code:
       0: aload_2
       1: invokevirtual #89                 // Method io/netty/util/internal/shaded/org/jctools/queues/atomic/LinkedQueueAtomicNode.getAndNullValue:()Ljava/lang/Object;
       4: astore_3
       5: aload_1
       6: aload_1
       7: invokevirtual #92                 // Method io/netty/util/internal/shaded/org/jctools/queues/atomic/LinkedQueueAtomicNode.soNext:(Lio/netty/util/internal/shaded/org/jctools/queues/atomic/LinkedQueueAtomicNode;)V
      10: aload_0
      11: aload_2
      12: invokevirtual #94                 // Method spConsumerNode:(Lio/netty/util/internal/shaded/org/jctools/queues/atomic/LinkedQueueAtomicNode;)V
      15: aload_3
      16: areturn
}
