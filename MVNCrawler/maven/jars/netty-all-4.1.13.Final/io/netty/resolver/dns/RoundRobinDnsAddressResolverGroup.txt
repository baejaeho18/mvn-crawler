Compiled from "RoundRobinDnsAddressResolverGroup.java"
public class io.netty.resolver.dns.RoundRobinDnsAddressResolverGroup extends io.netty.resolver.dns.DnsAddressResolverGroup {
  public io.netty.resolver.dns.RoundRobinDnsAddressResolverGroup(java.lang.Class<? extends io.netty.channel.socket.DatagramChannel>, io.netty.resolver.dns.DnsServerAddressStreamProvider);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method io/netty/resolver/dns/DnsAddressResolverGroup."<init>":(Ljava/lang/Class;Lio/netty/resolver/dns/DnsServerAddressStreamProvider;)V
       6: return

  public io.netty.resolver.dns.RoundRobinDnsAddressResolverGroup(io.netty.channel.ChannelFactory<? extends io.netty.channel.socket.DatagramChannel>, io.netty.resolver.dns.DnsServerAddressStreamProvider);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method io/netty/resolver/dns/DnsAddressResolverGroup."<init>":(Lio/netty/channel/ChannelFactory;Lio/netty/resolver/dns/DnsServerAddressStreamProvider;)V
       6: return

  protected final io.netty.resolver.AddressResolver<java.net.InetSocketAddress> newAddressResolver(io.netty.channel.EventLoop, io.netty.resolver.NameResolver<java.net.InetAddress>) throws java.lang.Exception;
    Code:
       0: new           #3                  // class io/netty/resolver/RoundRobinInetAddressResolver
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #4                  // Method io/netty/resolver/RoundRobinInetAddressResolver."<init>":(Lio/netty/util/concurrent/EventExecutor;Lio/netty/resolver/NameResolver;)V
       9: invokevirtual #5                  // Method io/netty/resolver/RoundRobinInetAddressResolver.asAddressResolver:()Lio/netty/resolver/AddressResolver;
      12: areturn
}
