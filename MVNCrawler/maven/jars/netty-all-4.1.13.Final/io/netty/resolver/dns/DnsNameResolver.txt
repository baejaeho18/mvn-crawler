Compiled from "DnsNameResolver.java"
public class io.netty.resolver.dns.DnsNameResolver extends io.netty.resolver.InetNameResolver {
  private static final io.netty.util.internal.logging.InternalLogger logger;

  private static final java.lang.String LOCALHOST;

  private static final java.net.InetAddress LOCALHOST_ADDRESS;

  private static final io.netty.handler.codec.dns.DnsRecord[] EMPTY_ADDITIONALS;

  private static final io.netty.handler.codec.dns.DnsRecordType[] IPV4_ONLY_RESOLVED_RECORD_TYPES;

  private static final io.netty.channel.socket.InternetProtocolFamily[] IPV4_ONLY_RESOLVED_PROTOCOL_FAMILIES;

  private static final io.netty.handler.codec.dns.DnsRecordType[] IPV4_PREFERRED_RESOLVED_RECORD_TYPES;

  private static final io.netty.channel.socket.InternetProtocolFamily[] IPV4_PREFERRED_RESOLVED_PROTOCOL_FAMILIES;

  private static final io.netty.handler.codec.dns.DnsRecordType[] IPV6_ONLY_RESOLVED_RECORD_TYPES;

  private static final io.netty.channel.socket.InternetProtocolFamily[] IPV6_ONLY_RESOLVED_PROTOCOL_FAMILIES;

  private static final io.netty.handler.codec.dns.DnsRecordType[] IPV6_PREFERRED_RESOLVED_RECORD_TYPES;

  private static final io.netty.channel.socket.InternetProtocolFamily[] IPV6_PREFERRED_RESOLVED_PROTOCOL_FAMILIES;

  static final io.netty.resolver.ResolvedAddressTypes DEFAULT_RESOLVE_ADDRESS_TYPES;

  static final java.lang.String[] DEFAULT_SEARCH_DOMAINS;

  private static final int DEFAULT_NDOTS;

  private static final io.netty.handler.codec.dns.DatagramDnsResponseDecoder DECODER;

  private static final io.netty.handler.codec.dns.DatagramDnsQueryEncoder ENCODER;

  final io.netty.util.concurrent.Future<io.netty.channel.Channel> channelFuture;

  final io.netty.channel.socket.DatagramChannel ch;

  final io.netty.resolver.dns.DnsQueryContextManager queryContextManager;

  private final io.netty.resolver.dns.DnsCache resolveCache;

  private final io.netty.resolver.dns.DnsCache authoritativeDnsServerCache;

  private final io.netty.util.concurrent.FastThreadLocal<io.netty.resolver.dns.DnsServerAddressStream> nameServerAddrStream;

  private final long queryTimeoutMillis;

  private final int maxQueriesPerResolve;

  private final io.netty.resolver.ResolvedAddressTypes resolvedAddressTypes;

  private final io.netty.channel.socket.InternetProtocolFamily[] resolvedInternetProtocolFamilies;

  private final boolean recursionDesired;

  private final int maxPayloadSize;

  private final boolean optResourceEnabled;

  private final io.netty.resolver.HostsFileEntriesResolver hostsFileEntriesResolver;

  private final io.netty.resolver.dns.DnsServerAddressStreamProvider dnsServerAddressStreamProvider;

  private final java.lang.String[] searchDomains;

  private final int ndots;

  private final boolean supportsAAAARecords;

  private final boolean supportsARecords;

  private final io.netty.channel.socket.InternetProtocolFamily preferredAddressType;

  private final io.netty.handler.codec.dns.DnsRecordType[] resolveRecordTypes;

  private final boolean decodeIdn;

  private final io.netty.resolver.dns.DnsQueryLifecycleObserverFactory dnsQueryLifecycleObserverFactory;

  static final boolean $assertionsDisabled;

  public io.netty.resolver.dns.DnsNameResolver(io.netty.channel.EventLoop, io.netty.channel.ChannelFactory<? extends io.netty.channel.socket.DatagramChannel>, io.netty.resolver.dns.DnsCache, io.netty.resolver.dns.DnsCache, io.netty.resolver.dns.DnsQueryLifecycleObserverFactory, long, io.netty.resolver.ResolvedAddressTypes, boolean, int, boolean, int, boolean, io.netty.resolver.HostsFileEntriesResolver, io.netty.resolver.dns.DnsServerAddressStreamProvider, java.lang.String[], int, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #7                  // Method io/netty/resolver/InetNameResolver."<init>":(Lio/netty/util/concurrent/EventExecutor;)V
       5: aload_0
       6: new           #8                  // class io/netty/resolver/dns/DnsQueryContextManager
       9: dup
      10: invokespecial #9                  // Method io/netty/resolver/dns/DnsQueryContextManager."<init>":()V
      13: putfield      #10                 // Field queryContextManager:Lio/netty/resolver/dns/DnsQueryContextManager;
      16: aload_0
      17: new           #11                 // class io/netty/resolver/dns/DnsNameResolver$1
      20: dup
      21: aload_0
      22: invokespecial #12                 // Method io/netty/resolver/dns/DnsNameResolver$1."<init>":(Lio/netty/resolver/dns/DnsNameResolver;)V
      25: putfield      #13                 // Field nameServerAddrStream:Lio/netty/util/concurrent/FastThreadLocal;
      28: aload_0
      29: lload         6
      31: ldc           #14                 // String queryTimeoutMillis
      33: invokestatic  #15                 // Method io/netty/util/internal/ObjectUtil.checkPositive:(JLjava/lang/String;)J
      36: putfield      #16                 // Field queryTimeoutMillis:J
      39: aload_0
      40: aload         8
      42: ifnull        50
      45: aload         8
      47: goto          53
      50: getstatic     #17                 // Field DEFAULT_RESOLVE_ADDRESS_TYPES:Lio/netty/resolver/ResolvedAddressTypes;
      53: putfield      #18                 // Field resolvedAddressTypes:Lio/netty/resolver/ResolvedAddressTypes;
      56: aload_0
      57: iload         9
      59: putfield      #19                 // Field recursionDesired:Z
      62: aload_0
      63: iload         10
      65: ldc           #20                 // String maxQueriesPerResolve
      67: invokestatic  #21                 // Method io/netty/util/internal/ObjectUtil.checkPositive:(ILjava/lang/String;)I
      70: putfield      #22                 // Field maxQueriesPerResolve:I
      73: aload_0
      74: iload         12
      76: ldc           #23                 // String maxPayloadSize
      78: invokestatic  #21                 // Method io/netty/util/internal/ObjectUtil.checkPositive:(ILjava/lang/String;)I
      81: putfield      #24                 // Field maxPayloadSize:I
      84: aload_0
      85: iload         13
      87: putfield      #25                 // Field optResourceEnabled:Z
      90: aload_0
      91: aload         14
      93: ldc           #26                 // String hostsFileEntriesResolver
      95: invokestatic  #27                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      98: checkcast     #28                 // class io/netty/resolver/HostsFileEntriesResolver
     101: putfield      #29                 // Field hostsFileEntriesResolver:Lio/netty/resolver/HostsFileEntriesResolver;
     104: aload_0
     105: aload         15
     107: ldc           #30                 // String dnsServerAddressStreamProvider
     109: invokestatic  #27                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     112: checkcast     #31                 // class io/netty/resolver/dns/DnsServerAddressStreamProvider
     115: putfield      #6                  // Field dnsServerAddressStreamProvider:Lio/netty/resolver/dns/DnsServerAddressStreamProvider;
     118: aload_0
     119: aload_3
     120: ldc           #32                 // String resolveCache
     122: invokestatic  #27                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     125: checkcast     #33                 // class io/netty/resolver/dns/DnsCache
     128: putfield      #34                 // Field resolveCache:Lio/netty/resolver/dns/DnsCache;
     131: aload_0
     132: aload         4
     134: ldc           #35                 // String authoritativeDnsServerCache
     136: invokestatic  #27                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     139: checkcast     #33                 // class io/netty/resolver/dns/DnsCache
     142: putfield      #36                 // Field authoritativeDnsServerCache:Lio/netty/resolver/dns/DnsCache;
     145: aload_0
     146: iload         11
     148: ifeq          188
     151: aload         5
     153: instanceof    #37                 // class io/netty/resolver/dns/NoopDnsQueryLifecycleObserverFactory
     156: ifeq          169
     159: new           #38                 // class io/netty/resolver/dns/TraceDnsQueryLifeCycleObserverFactory
     162: dup
     163: invokespecial #39                 // Method io/netty/resolver/dns/TraceDnsQueryLifeCycleObserverFactory."<init>":()V
     166: goto          198
     169: new           #40                 // class io/netty/resolver/dns/BiDnsQueryLifecycleObserverFactory
     172: dup
     173: new           #38                 // class io/netty/resolver/dns/TraceDnsQueryLifeCycleObserverFactory
     176: dup
     177: invokespecial #39                 // Method io/netty/resolver/dns/TraceDnsQueryLifeCycleObserverFactory."<init>":()V
     180: aload         5
     182: invokespecial #41                 // Method io/netty/resolver/dns/BiDnsQueryLifecycleObserverFactory."<init>":(Lio/netty/resolver/dns/DnsQueryLifecycleObserverFactory;Lio/netty/resolver/dns/DnsQueryLifecycleObserverFactory;)V
     185: goto          198
     188: aload         5
     190: ldc           #42                 // String dnsQueryLifecycleObserverFactory
     192: invokestatic  #27                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     195: checkcast     #43                 // class io/netty/resolver/dns/DnsQueryLifecycleObserverFactory
     198: putfield      #44                 // Field dnsQueryLifecycleObserverFactory:Lio/netty/resolver/dns/DnsQueryLifecycleObserverFactory;
     201: aload_0
     202: aload         16
     204: ifnull        218
     207: aload         16
     209: invokevirtual #45                 // Method "[Ljava/lang/String;".clone:()Ljava/lang/Object;
     212: checkcast     #46                 // class "[Ljava/lang/String;"
     215: goto          221
     218: getstatic     #47                 // Field DEFAULT_SEARCH_DOMAINS:[Ljava/lang/String;
     221: putfield      #48                 // Field searchDomains:[Ljava/lang/String;
     224: aload_0
     225: iload         17
     227: iflt          235
     230: iload         17
     232: goto          238
     235: getstatic     #49                 // Field DEFAULT_NDOTS:I
     238: putfield      #50                 // Field ndots:I
     241: aload_0
     242: iload         18
     244: putfield      #51                 // Field decodeIdn:Z
     247: getstatic     #52                 // Field io/netty/resolver/dns/DnsNameResolver$4.$SwitchMap$io$netty$resolver$ResolvedAddressTypes:[I
     250: aload_0
     251: getfield      #18                 // Field resolvedAddressTypes:Lio/netty/resolver/ResolvedAddressTypes;
     254: invokevirtual #53                 // Method io/netty/resolver/ResolvedAddressTypes.ordinal:()I
     257: iaload
     258: tableswitch   { // 1 to 4
                     1: 288
                     2: 322
                     3: 356
                     4: 390
               default: 424
          }
     288: aload_0
     289: iconst_0
     290: putfield      #54                 // Field supportsAAAARecords:Z
     293: aload_0
     294: iconst_1
     295: putfield      #55                 // Field supportsARecords:Z
     298: aload_0
     299: getstatic     #56                 // Field IPV4_ONLY_RESOLVED_RECORD_TYPES:[Lio/netty/handler/codec/dns/DnsRecordType;
     302: putfield      #57                 // Field resolveRecordTypes:[Lio/netty/handler/codec/dns/DnsRecordType;
     305: aload_0
     306: getstatic     #58                 // Field IPV4_ONLY_RESOLVED_PROTOCOL_FAMILIES:[Lio/netty/channel/socket/InternetProtocolFamily;
     309: putfield      #59                 // Field resolvedInternetProtocolFamilies:[Lio/netty/channel/socket/InternetProtocolFamily;
     312: aload_0
     313: getstatic     #60                 // Field io/netty/channel/socket/InternetProtocolFamily.IPv4:Lio/netty/channel/socket/InternetProtocolFamily;
     316: putfield      #61                 // Field preferredAddressType:Lio/netty/channel/socket/InternetProtocolFamily;
     319: goto          452
     322: aload_0
     323: iconst_1
     324: putfield      #54                 // Field supportsAAAARecords:Z
     327: aload_0
     328: iconst_1
     329: putfield      #55                 // Field supportsARecords:Z
     332: aload_0
     333: getstatic     #62                 // Field IPV4_PREFERRED_RESOLVED_RECORD_TYPES:[Lio/netty/handler/codec/dns/DnsRecordType;
     336: putfield      #57                 // Field resolveRecordTypes:[Lio/netty/handler/codec/dns/DnsRecordType;
     339: aload_0
     340: getstatic     #63                 // Field IPV4_PREFERRED_RESOLVED_PROTOCOL_FAMILIES:[Lio/netty/channel/socket/InternetProtocolFamily;
     343: putfield      #59                 // Field resolvedInternetProtocolFamilies:[Lio/netty/channel/socket/InternetProtocolFamily;
     346: aload_0
     347: getstatic     #60                 // Field io/netty/channel/socket/InternetProtocolFamily.IPv4:Lio/netty/channel/socket/InternetProtocolFamily;
     350: putfield      #61                 // Field preferredAddressType:Lio/netty/channel/socket/InternetProtocolFamily;
     353: goto          452
     356: aload_0
     357: iconst_1
     358: putfield      #54                 // Field supportsAAAARecords:Z
     361: aload_0
     362: iconst_0
     363: putfield      #55                 // Field supportsARecords:Z
     366: aload_0
     367: getstatic     #64                 // Field IPV6_ONLY_RESOLVED_RECORD_TYPES:[Lio/netty/handler/codec/dns/DnsRecordType;
     370: putfield      #57                 // Field resolveRecordTypes:[Lio/netty/handler/codec/dns/DnsRecordType;
     373: aload_0
     374: getstatic     #65                 // Field IPV6_ONLY_RESOLVED_PROTOCOL_FAMILIES:[Lio/netty/channel/socket/InternetProtocolFamily;
     377: putfield      #59                 // Field resolvedInternetProtocolFamilies:[Lio/netty/channel/socket/InternetProtocolFamily;
     380: aload_0
     381: getstatic     #66                 // Field io/netty/channel/socket/InternetProtocolFamily.IPv6:Lio/netty/channel/socket/InternetProtocolFamily;
     384: putfield      #61                 // Field preferredAddressType:Lio/netty/channel/socket/InternetProtocolFamily;
     387: goto          452
     390: aload_0
     391: iconst_1
     392: putfield      #54                 // Field supportsAAAARecords:Z
     395: aload_0
     396: iconst_1
     397: putfield      #55                 // Field supportsARecords:Z
     400: aload_0
     401: getstatic     #67                 // Field IPV6_PREFERRED_RESOLVED_RECORD_TYPES:[Lio/netty/handler/codec/dns/DnsRecordType;
     404: putfield      #57                 // Field resolveRecordTypes:[Lio/netty/handler/codec/dns/DnsRecordType;
     407: aload_0
     408: getstatic     #68                 // Field IPV6_PREFERRED_RESOLVED_PROTOCOL_FAMILIES:[Lio/netty/channel/socket/InternetProtocolFamily;
     411: putfield      #59                 // Field resolvedInternetProtocolFamilies:[Lio/netty/channel/socket/InternetProtocolFamily;
     414: aload_0
     415: getstatic     #66                 // Field io/netty/channel/socket/InternetProtocolFamily.IPv6:Lio/netty/channel/socket/InternetProtocolFamily;
     418: putfield      #61                 // Field preferredAddressType:Lio/netty/channel/socket/InternetProtocolFamily;
     421: goto          452
     424: new           #69                 // class java/lang/IllegalArgumentException
     427: dup
     428: new           #70                 // class java/lang/StringBuilder
     431: dup
     432: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
     435: ldc           #72                 // String Unknown ResolvedAddressTypes
     437: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     440: aload         8
     442: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     445: invokevirtual #75                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     448: invokespecial #76                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     451: athrow
     452: new           #77                 // class io/netty/bootstrap/Bootstrap
     455: dup
     456: invokespecial #78                 // Method io/netty/bootstrap/Bootstrap."<init>":()V
     459: astore        19
     461: aload         19
     463: aload_0
     464: invokevirtual #79                 // Method executor:()Lio/netty/channel/EventLoop;
     467: invokevirtual #80                 // Method io/netty/bootstrap/Bootstrap.group:(Lio/netty/channel/EventLoopGroup;)Lio/netty/bootstrap/AbstractBootstrap;
     470: pop
     471: aload         19
     473: aload_2
     474: invokevirtual #81                 // Method io/netty/bootstrap/Bootstrap.channelFactory:(Lio/netty/channel/ChannelFactory;)Lio/netty/bootstrap/AbstractBootstrap;
     477: pop
     478: aload         19
     480: getstatic     #82                 // Field io/netty/channel/ChannelOption.DATAGRAM_CHANNEL_ACTIVE_ON_REGISTRATION:Lio/netty/channel/ChannelOption;
     483: iconst_1
     484: invokestatic  #83                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     487: invokevirtual #84                 // Method io/netty/bootstrap/Bootstrap.option:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)Lio/netty/bootstrap/AbstractBootstrap;
     490: pop
     491: new           #85                 // class io/netty/resolver/dns/DnsNameResolver$DnsResponseHandler
     494: dup
     495: aload_0
     496: aload_0
     497: invokevirtual #79                 // Method executor:()Lio/netty/channel/EventLoop;
     500: invokeinterface #86,  1           // InterfaceMethod io/netty/channel/EventLoop.newPromise:()Lio/netty/util/concurrent/Promise;
     505: invokespecial #87                 // Method io/netty/resolver/dns/DnsNameResolver$DnsResponseHandler."<init>":(Lio/netty/resolver/dns/DnsNameResolver;Lio/netty/util/concurrent/Promise;)V
     508: astore        20
     510: aload         19
     512: new           #88                 // class io/netty/resolver/dns/DnsNameResolver$2
     515: dup
     516: aload_0
     517: aload         20
     519: invokespecial #89                 // Method io/netty/resolver/dns/DnsNameResolver$2."<init>":(Lio/netty/resolver/dns/DnsNameResolver;Lio/netty/resolver/dns/DnsNameResolver$DnsResponseHandler;)V
     522: invokevirtual #90                 // Method io/netty/bootstrap/Bootstrap.handler:(Lio/netty/channel/ChannelHandler;)Lio/netty/bootstrap/AbstractBootstrap;
     525: pop
     526: aload_0
     527: aload         20
     529: invokestatic  #91                 // Method io/netty/resolver/dns/DnsNameResolver$DnsResponseHandler.access$300:(Lio/netty/resolver/dns/DnsNameResolver$DnsResponseHandler;)Lio/netty/util/concurrent/Promise;
     532: putfield      #92                 // Field channelFuture:Lio/netty/util/concurrent/Future;
     535: aload_0
     536: aload         19
     538: invokevirtual #93                 // Method io/netty/bootstrap/Bootstrap.register:()Lio/netty/channel/ChannelFuture;
     541: invokeinterface #94,  1           // InterfaceMethod io/netty/channel/ChannelFuture.channel:()Lio/netty/channel/Channel;
     546: checkcast     #95                 // class io/netty/channel/socket/DatagramChannel
     549: putfield      #96                 // Field ch:Lio/netty/channel/socket/DatagramChannel;
     552: aload_0
     553: getfield      #96                 // Field ch:Lio/netty/channel/socket/DatagramChannel;
     556: invokeinterface #97,  1           // InterfaceMethod io/netty/channel/socket/DatagramChannel.config:()Lio/netty/channel/socket/DatagramChannelConfig;
     561: new           #98                 // class io/netty/channel/FixedRecvByteBufAllocator
     564: dup
     565: iload         12
     567: invokespecial #99                 // Method io/netty/channel/FixedRecvByteBufAllocator."<init>":(I)V
     570: invokeinterface #100,  2          // InterfaceMethod io/netty/channel/socket/DatagramChannelConfig.setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/socket/DatagramChannelConfig;
     575: pop
     576: aload_0
     577: getfield      #96                 // Field ch:Lio/netty/channel/socket/DatagramChannel;
     580: invokeinterface #101,  1          // InterfaceMethod io/netty/channel/socket/DatagramChannel.closeFuture:()Lio/netty/channel/ChannelFuture;
     585: new           #102                // class io/netty/resolver/dns/DnsNameResolver$3
     588: dup
     589: aload_0
     590: aload_3
     591: invokespecial #103                // Method io/netty/resolver/dns/DnsNameResolver$3."<init>":(Lio/netty/resolver/dns/DnsNameResolver;Lio/netty/resolver/dns/DnsCache;)V
     594: invokeinterface #104,  2          // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
     599: pop
     600: return

  int dnsRedirectPort(java.net.InetAddress);
    Code:
       0: bipush        53
       2: ireturn

  final io.netty.resolver.dns.DnsQueryLifecycleObserverFactory dnsQueryLifecycleObserverFactory();
    Code:
       0: aload_0
       1: getfield      #44                 // Field dnsQueryLifecycleObserverFactory:Lio/netty/resolver/dns/DnsQueryLifecycleObserverFactory;
       4: areturn

  protected io.netty.resolver.dns.DnsServerAddressStream uncachedRedirectDnsServerStream(java.util.List<java.net.InetSocketAddress>);
    Code:
       0: aload_1
       1: invokestatic  #105                // Method io/netty/resolver/dns/DnsServerAddresses.sequential:(Ljava/lang/Iterable;)Lio/netty/resolver/dns/DnsServerAddresses;
       4: invokevirtual #106                // Method io/netty/resolver/dns/DnsServerAddresses.stream:()Lio/netty/resolver/dns/DnsServerAddressStream;
       7: areturn

  public io.netty.resolver.dns.DnsCache resolveCache();
    Code:
       0: aload_0
       1: getfield      #34                 // Field resolveCache:Lio/netty/resolver/dns/DnsCache;
       4: areturn

  public io.netty.resolver.dns.DnsCache authoritativeDnsServerCache();
    Code:
       0: aload_0
       1: getfield      #36                 // Field authoritativeDnsServerCache:Lio/netty/resolver/dns/DnsCache;
       4: areturn

  public long queryTimeoutMillis();
    Code:
       0: aload_0
       1: getfield      #16                 // Field queryTimeoutMillis:J
       4: lreturn

  public io.netty.resolver.ResolvedAddressTypes resolvedAddressTypes();
    Code:
       0: aload_0
       1: getfield      #18                 // Field resolvedAddressTypes:Lio/netty/resolver/ResolvedAddressTypes;
       4: areturn

  io.netty.channel.socket.InternetProtocolFamily[] resolvedInternetProtocolFamiliesUnsafe();
    Code:
       0: aload_0
       1: getfield      #59                 // Field resolvedInternetProtocolFamilies:[Lio/netty/channel/socket/InternetProtocolFamily;
       4: areturn

  final java.lang.String[] searchDomains();
    Code:
       0: aload_0
       1: getfield      #48                 // Field searchDomains:[Ljava/lang/String;
       4: areturn

  final int ndots();
    Code:
       0: aload_0
       1: getfield      #50                 // Field ndots:I
       4: ireturn

  final boolean supportsAAAARecords();
    Code:
       0: aload_0
       1: getfield      #54                 // Field supportsAAAARecords:Z
       4: ireturn

  final boolean supportsARecords();
    Code:
       0: aload_0
       1: getfield      #55                 // Field supportsARecords:Z
       4: ireturn

  final io.netty.channel.socket.InternetProtocolFamily preferredAddressType();
    Code:
       0: aload_0
       1: getfield      #61                 // Field preferredAddressType:Lio/netty/channel/socket/InternetProtocolFamily;
       4: areturn

  final io.netty.handler.codec.dns.DnsRecordType[] resolveRecordTypes();
    Code:
       0: aload_0
       1: getfield      #57                 // Field resolveRecordTypes:[Lio/netty/handler/codec/dns/DnsRecordType;
       4: areturn

  final boolean isDecodeIdn();
    Code:
       0: aload_0
       1: getfield      #51                 // Field decodeIdn:Z
       4: ireturn

  public boolean isRecursionDesired();
    Code:
       0: aload_0
       1: getfield      #19                 // Field recursionDesired:Z
       4: ireturn

  public int maxQueriesPerResolve();
    Code:
       0: aload_0
       1: getfield      #22                 // Field maxQueriesPerResolve:I
       4: ireturn

  public int maxPayloadSize();
    Code:
       0: aload_0
       1: getfield      #24                 // Field maxPayloadSize:I
       4: ireturn

  public boolean isOptResourceEnabled();
    Code:
       0: aload_0
       1: getfield      #25                 // Field optResourceEnabled:Z
       4: ireturn

  public io.netty.resolver.HostsFileEntriesResolver hostsFileEntriesResolver();
    Code:
       0: aload_0
       1: getfield      #29                 // Field hostsFileEntriesResolver:Lio/netty/resolver/HostsFileEntriesResolver;
       4: areturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #96                 // Field ch:Lio/netty/channel/socket/DatagramChannel;
       4: invokeinterface #107,  1          // InterfaceMethod io/netty/channel/socket/DatagramChannel.isOpen:()Z
       9: ifeq          22
      12: aload_0
      13: getfield      #96                 // Field ch:Lio/netty/channel/socket/DatagramChannel;
      16: invokeinterface #108,  1          // InterfaceMethod io/netty/channel/socket/DatagramChannel.close:()Lio/netty/channel/ChannelFuture;
      21: pop
      22: return

  protected io.netty.channel.EventLoop executor();
    Code:
       0: aload_0
       1: invokespecial #109                // Method io/netty/resolver/InetNameResolver.executor:()Lio/netty/util/concurrent/EventExecutor;
       4: checkcast     #110                // class io/netty/channel/EventLoop
       7: areturn

  private java.net.InetAddress resolveHostsFileEntry(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #29                 // Field hostsFileEntriesResolver:Lio/netty/resolver/HostsFileEntriesResolver;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #29                 // Field hostsFileEntriesResolver:Lio/netty/resolver/HostsFileEntriesResolver;
      13: aload_1
      14: aload_0
      15: getfield      #18                 // Field resolvedAddressTypes:Lio/netty/resolver/ResolvedAddressTypes;
      18: invokeinterface #111,  3          // InterfaceMethod io/netty/resolver/HostsFileEntriesResolver.address:(Ljava/lang/String;Lio/netty/resolver/ResolvedAddressTypes;)Ljava/net/InetAddress;
      23: astore_2
      24: aload_2
      25: ifnonnull     47
      28: invokestatic  #112                // Method io/netty/util/internal/PlatformDependent.isWindows:()Z
      31: ifeq          47
      34: ldc           #114                // String localhost
      36: aload_1
      37: invokevirtual #115                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      40: ifeq          47
      43: getstatic     #116                // Field LOCALHOST_ADDRESS:Ljava/net/InetAddress;
      46: areturn
      47: aload_2
      48: areturn

  public final io.netty.util.concurrent.Future<java.net.InetAddress> resolve(java.lang.String, java.lang.Iterable<io.netty.handler.codec.dns.DnsRecord>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_0
       4: invokevirtual #79                 // Method executor:()Lio/netty/channel/EventLoop;
       7: invokeinterface #86,  1           // InterfaceMethod io/netty/channel/EventLoop.newPromise:()Lio/netty/util/concurrent/Promise;
      12: invokevirtual #117                // Method resolve:(Ljava/lang/String;Ljava/lang/Iterable;Lio/netty/util/concurrent/Promise;)Lio/netty/util/concurrent/Future;
      15: areturn

  public final io.netty.util.concurrent.Future<java.net.InetAddress> resolve(java.lang.String, java.lang.Iterable<io.netty.handler.codec.dns.DnsRecord>, io.netty.util.concurrent.Promise<java.net.InetAddress>);
    Code:
       0: aload_3
       1: ldc           #118                // String promise
       3: invokestatic  #27                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_2
       8: iconst_1
       9: invokestatic  #119                // Method toArray:(Ljava/lang/Iterable;Z)[Lio/netty/handler/codec/dns/DnsRecord;
      12: astore        4
      14: aload_0
      15: aload_1
      16: aload         4
      18: aload_3
      19: aload_0
      20: getfield      #34                 // Field resolveCache:Lio/netty/resolver/dns/DnsCache;
      23: invokevirtual #120                // Method doResolve:(Ljava/lang/String;[Lio/netty/handler/codec/dns/DnsRecord;Lio/netty/util/concurrent/Promise;Lio/netty/resolver/dns/DnsCache;)V
      26: aload_3
      27: areturn
      28: astore        5
      30: aload_3
      31: aload         5
      33: invokeinterface #122,  2          // InterfaceMethod io/netty/util/concurrent/Promise.setFailure:(Ljava/lang/Throwable;)Lio/netty/util/concurrent/Promise;
      38: areturn
    Exception table:
       from    to  target type
          14    27    28   Class java/lang/Exception

  public final io.netty.util.concurrent.Future<java.util.List<java.net.InetAddress>> resolveAll(java.lang.String, java.lang.Iterable<io.netty.handler.codec.dns.DnsRecord>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_0
       4: invokevirtual #79                 // Method executor:()Lio/netty/channel/EventLoop;
       7: invokeinterface #86,  1           // InterfaceMethod io/netty/channel/EventLoop.newPromise:()Lio/netty/util/concurrent/Promise;
      12: invokevirtual #123                // Method resolveAll:(Ljava/lang/String;Ljava/lang/Iterable;Lio/netty/util/concurrent/Promise;)Lio/netty/util/concurrent/Future;
      15: areturn

  public final io.netty.util.concurrent.Future<java.util.List<java.net.InetAddress>> resolveAll(java.lang.String, java.lang.Iterable<io.netty.handler.codec.dns.DnsRecord>, io.netty.util.concurrent.Promise<java.util.List<java.net.InetAddress>>);
    Code:
       0: aload_3
       1: ldc           #118                // String promise
       3: invokestatic  #27                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_2
       8: iconst_1
       9: invokestatic  #119                // Method toArray:(Ljava/lang/Iterable;Z)[Lio/netty/handler/codec/dns/DnsRecord;
      12: astore        4
      14: aload_0
      15: aload_1
      16: aload         4
      18: aload_3
      19: aload_0
      20: getfield      #34                 // Field resolveCache:Lio/netty/resolver/dns/DnsCache;
      23: invokevirtual #124                // Method doResolveAll:(Ljava/lang/String;[Lio/netty/handler/codec/dns/DnsRecord;Lio/netty/util/concurrent/Promise;Lio/netty/resolver/dns/DnsCache;)V
      26: aload_3
      27: areturn
      28: astore        5
      30: aload_3
      31: aload         5
      33: invokeinterface #122,  2          // InterfaceMethod io/netty/util/concurrent/Promise.setFailure:(Ljava/lang/Throwable;)Lio/netty/util/concurrent/Promise;
      38: areturn
    Exception table:
       from    to  target type
          14    27    28   Class java/lang/Exception

  protected void doResolve(java.lang.String, io.netty.util.concurrent.Promise<java.net.InetAddress>) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #125                // Field EMPTY_ADDITIONALS:[Lio/netty/handler/codec/dns/DnsRecord;
       5: aload_2
       6: aload_0
       7: getfield      #34                 // Field resolveCache:Lio/netty/resolver/dns/DnsCache;
      10: invokevirtual #120                // Method doResolve:(Ljava/lang/String;[Lio/netty/handler/codec/dns/DnsRecord;Lio/netty/util/concurrent/Promise;Lio/netty/resolver/dns/DnsCache;)V
      13: return

  private static io.netty.handler.codec.dns.DnsRecord[] toArray(java.lang.Iterable<io.netty.handler.codec.dns.DnsRecord>, boolean);
    Code:
       0: aload_0
       1: ldc           #126                // String additionals
       3: invokestatic  #27                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: instanceof    #127                // class java/util/Collection
      11: ifeq          74
      14: aload_0
      15: checkcast     #127                // class java/util/Collection
      18: astore_2
      19: aload_0
      20: invokeinterface #128,  1          // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      25: astore_3
      26: aload_3
      27: invokeinterface #129,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          55
      35: aload_3
      36: invokeinterface #130,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #131                // class io/netty/handler/codec/dns/DnsRecord
      44: astore        4
      46: aload         4
      48: iload_1
      49: invokestatic  #132                // Method validateAdditional:(Lio/netty/handler/codec/dns/DnsRecord;Z)V
      52: goto          26
      55: aload_2
      56: aload_2
      57: invokeinterface #133,  1          // InterfaceMethod java/util/Collection.size:()I
      62: anewarray     #131                // class io/netty/handler/codec/dns/DnsRecord
      65: invokeinterface #134,  2          // InterfaceMethod java/util/Collection.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      70: checkcast     #135                // class "[Lio/netty/handler/codec/dns/DnsRecord;"
      73: areturn
      74: aload_0
      75: invokeinterface #128,  1          // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      80: astore_2
      81: aload_2
      82: invokeinterface #129,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      87: ifne          94
      90: getstatic     #125                // Field EMPTY_ADDITIONALS:[Lio/netty/handler/codec/dns/DnsRecord;
      93: areturn
      94: new           #136                // class java/util/ArrayList
      97: dup
      98: invokespecial #137                // Method java/util/ArrayList."<init>":()V
     101: astore_3
     102: aload_2
     103: invokeinterface #130,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     108: checkcast     #131                // class io/netty/handler/codec/dns/DnsRecord
     111: astore        4
     113: aload         4
     115: iload_1
     116: invokestatic  #132                // Method validateAdditional:(Lio/netty/handler/codec/dns/DnsRecord;Z)V
     119: aload_3
     120: aload         4
     122: invokeinterface #138,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     127: pop
     128: aload_2
     129: invokeinterface #129,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     134: ifne          102
     137: aload_3
     138: aload_3
     139: invokeinterface #139,  1          // InterfaceMethod java/util/List.size:()I
     144: anewarray     #131                // class io/netty/handler/codec/dns/DnsRecord
     147: invokeinterface #140,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     152: checkcast     #135                // class "[Lio/netty/handler/codec/dns/DnsRecord;"
     155: areturn

  private static void validateAdditional(io.netty.handler.codec.dns.DnsRecord, boolean);
    Code:
       0: aload_0
       1: ldc           #141                // String record
       3: invokestatic  #27                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: iload_1
       8: ifeq          45
      11: aload_0
      12: instanceof    #142                // class io/netty/handler/codec/dns/DnsRawRecord
      15: ifeq          45
      18: new           #69                 // class java/lang/IllegalArgumentException
      21: dup
      22: new           #70                 // class java/lang/StringBuilder
      25: dup
      26: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
      29: ldc           #143                // String DnsRawRecord implementations not allowed:
      31: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_0
      35: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      38: invokevirtual #75                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: invokespecial #76                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: return

  private java.net.InetAddress loopbackAddress();
    Code:
       0: aload_0
       1: invokevirtual #144                // Method preferredAddressType:()Lio/netty/channel/socket/InternetProtocolFamily;
       4: invokevirtual #145                // Method io/netty/channel/socket/InternetProtocolFamily.localhost:()Ljava/net/InetAddress;
       7: areturn

  protected void doResolve(java.lang.String, io.netty.handler.codec.dns.DnsRecord[], io.netty.util.concurrent.Promise<java.net.InetAddress>, io.netty.resolver.dns.DnsCache) throws java.lang.Exception;
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #146                // Method java/lang/String.isEmpty:()Z
       8: ifeq          23
      11: aload_3
      12: aload_0
      13: invokespecial #147                // Method loopbackAddress:()Ljava/net/InetAddress;
      16: invokeinterface #148,  2          // InterfaceMethod io/netty/util/concurrent/Promise.setSuccess:(Ljava/lang/Object;)Lio/netty/util/concurrent/Promise;
      21: pop
      22: return
      23: aload_1
      24: invokestatic  #149                // Method io/netty/util/NetUtil.createByteArrayFromIpAddressString:(Ljava/lang/String;)[B
      27: astore        5
      29: aload         5
      31: ifnull        47
      34: aload_3
      35: aload         5
      37: invokestatic  #150                // Method java/net/InetAddress.getByAddress:([B)Ljava/net/InetAddress;
      40: invokeinterface #148,  2          // InterfaceMethod io/netty/util/concurrent/Promise.setSuccess:(Ljava/lang/Object;)Lio/netty/util/concurrent/Promise;
      45: pop
      46: return
      47: aload_1
      48: invokestatic  #151                // Method hostname:(Ljava/lang/String;)Ljava/lang/String;
      51: astore        6
      53: aload_0
      54: aload         6
      56: invokespecial #152                // Method resolveHostsFileEntry:(Ljava/lang/String;)Ljava/net/InetAddress;
      59: astore        7
      61: aload         7
      63: ifnull        76
      66: aload_3
      67: aload         7
      69: invokeinterface #148,  2          // InterfaceMethod io/netty/util/concurrent/Promise.setSuccess:(Ljava/lang/Object;)Lio/netty/util/concurrent/Promise;
      74: pop
      75: return
      76: aload_0
      77: aload         6
      79: aload_2
      80: aload_3
      81: aload         4
      83: invokespecial #153                // Method doResolveCached:(Ljava/lang/String;[Lio/netty/handler/codec/dns/DnsRecord;Lio/netty/util/concurrent/Promise;Lio/netty/resolver/dns/DnsCache;)Z
      86: ifne          99
      89: aload_0
      90: aload         6
      92: aload_2
      93: aload_3
      94: aload         4
      96: invokespecial #154                // Method doResolveUncached:(Ljava/lang/String;[Lio/netty/handler/codec/dns/DnsRecord;Lio/netty/util/concurrent/Promise;Lio/netty/resolver/dns/DnsCache;)V
      99: return

  private boolean doResolveCached(java.lang.String, io.netty.handler.codec.dns.DnsRecord[], io.netty.util.concurrent.Promise<java.net.InetAddress>, io.netty.resolver.dns.DnsCache);
    Code:
       0: aload         4
       2: aload_1
       3: aload_2
       4: invokeinterface #155,  3          // InterfaceMethod io/netty/resolver/dns/DnsCache.get:(Ljava/lang/String;[Lio/netty/handler/codec/dns/DnsRecord;)Ljava/util/List;
       9: astore        5
      11: aload         5
      13: ifnull        26
      16: aload         5
      18: invokeinterface #156,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      23: ifeq          28
      26: iconst_0
      27: ireturn
      28: aconst_null
      29: astore        6
      31: aconst_null
      32: astore        7
      34: aload         5
      36: dup
      37: astore        8
      39: monitorenter
      40: aload         5
      42: invokeinterface #139,  1          // InterfaceMethod java/util/List.size:()I
      47: istore        9
      49: getstatic     #157                // Field $assertionsDisabled:Z
      52: ifne          68
      55: iload         9
      57: ifgt          68
      60: new           #158                // class java/lang/AssertionError
      63: dup
      64: invokespecial #159                // Method java/lang/AssertionError."<init>":()V
      67: athrow
      68: aload         5
      70: iconst_0
      71: invokeinterface #160,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      76: checkcast     #161                // class io/netty/resolver/dns/DnsCacheEntry
      79: invokevirtual #162                // Method io/netty/resolver/dns/DnsCacheEntry.cause:()Ljava/lang/Throwable;
      82: ifnull        104
      85: aload         5
      87: iconst_0
      88: invokeinterface #160,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      93: checkcast     #161                // class io/netty/resolver/dns/DnsCacheEntry
      96: invokevirtual #162                // Method io/netty/resolver/dns/DnsCacheEntry.cause:()Ljava/lang/Throwable;
      99: astore        7
     101: goto          194
     104: aload_0
     105: getfield      #59                 // Field resolvedInternetProtocolFamilies:[Lio/netty/channel/socket/InternetProtocolFamily;
     108: astore        10
     110: aload         10
     112: arraylength
     113: istore        11
     115: iconst_0
     116: istore        12
     118: iload         12
     120: iload         11
     122: if_icmpge     194
     125: aload         10
     127: iload         12
     129: aaload
     130: astore        13
     132: iconst_0
     133: istore        14
     135: iload         14
     137: iload         9
     139: if_icmpge     188
     142: aload         5
     144: iload         14
     146: invokeinterface #160,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     151: checkcast     #161                // class io/netty/resolver/dns/DnsCacheEntry
     154: astore        15
     156: aload         13
     158: invokevirtual #163                // Method io/netty/channel/socket/InternetProtocolFamily.addressType:()Ljava/lang/Class;
     161: aload         15
     163: invokevirtual #164                // Method io/netty/resolver/dns/DnsCacheEntry.address:()Ljava/net/InetAddress;
     166: invokevirtual #165                // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
     169: ifeq          182
     172: aload         15
     174: invokevirtual #164                // Method io/netty/resolver/dns/DnsCacheEntry.address:()Ljava/net/InetAddress;
     177: astore        6
     179: goto          188
     182: iinc          14, 1
     185: goto          135
     188: iinc          12, 1
     191: goto          118
     194: aload         8
     196: monitorexit
     197: goto          208
     200: astore        16
     202: aload         8
     204: monitorexit
     205: aload         16
     207: athrow
     208: aload         6
     210: ifnull        221
     213: aload_3
     214: aload         6
     216: invokestatic  #3                  // Method trySuccess:(Lio/netty/util/concurrent/Promise;Ljava/lang/Object;)V
     219: iconst_1
     220: ireturn
     221: aload         7
     223: ifnull        234
     226: aload_3
     227: aload         7
     229: invokestatic  #166                // Method tryFailure:(Lio/netty/util/concurrent/Promise;Ljava/lang/Throwable;)V
     232: iconst_1
     233: ireturn
     234: iconst_0
     235: ireturn
    Exception table:
       from    to  target type
          40   197   200   any
         200   205   200   any

  private static <T> void trySuccess(io.netty.util.concurrent.Promise<T>, T);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #167,  2          // InterfaceMethod io/netty/util/concurrent/Promise.trySuccess:(Ljava/lang/Object;)Z
       7: ifne          22
      10: getstatic     #2                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      13: ldc           #168                // String Failed to notify success ({}) to a promise: {}
      15: aload_1
      16: aload_0
      17: invokeinterface #169,  4          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      22: return

  private static void tryFailure(io.netty.util.concurrent.Promise<?>, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #170,  2          // InterfaceMethod io/netty/util/concurrent/Promise.tryFailure:(Ljava/lang/Throwable;)Z
       7: ifne          22
      10: getstatic     #2                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      13: ldc           #171                // String Failed to notify failure to a promise: {}
      15: aload_0
      16: aload_1
      17: invokeinterface #169,  4          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      22: return

  private void doResolveUncached(java.lang.String, io.netty.handler.codec.dns.DnsRecord[], io.netty.util.concurrent.Promise<java.net.InetAddress>, io.netty.resolver.dns.DnsCache);
    Code:
       0: new           #172                // class io/netty/resolver/dns/DnsNameResolver$SingleResolverContext
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload         4
       9: aload_0
      10: getfield      #6                  // Field dnsServerAddressStreamProvider:Lio/netty/resolver/dns/DnsServerAddressStreamProvider;
      13: aload_1
      14: invokeinterface #173,  2          // InterfaceMethod io/netty/resolver/dns/DnsServerAddressStreamProvider.nameServerAddressStream:(Ljava/lang/String;)Lio/netty/resolver/dns/DnsServerAddressStream;
      19: invokespecial #174                // Method io/netty/resolver/dns/DnsNameResolver$SingleResolverContext."<init>":(Lio/netty/resolver/dns/DnsNameResolver;Ljava/lang/String;[Lio/netty/handler/codec/dns/DnsRecord;Lio/netty/resolver/dns/DnsCache;Lio/netty/resolver/dns/DnsServerAddressStream;)V
      22: aload_3
      23: invokevirtual #175                // Method io/netty/resolver/dns/DnsNameResolver$SingleResolverContext.resolve:(Lio/netty/util/concurrent/Promise;)V
      26: return

  protected void doResolveAll(java.lang.String, io.netty.util.concurrent.Promise<java.util.List<java.net.InetAddress>>) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #125                // Field EMPTY_ADDITIONALS:[Lio/netty/handler/codec/dns/DnsRecord;
       5: aload_2
       6: aload_0
       7: getfield      #34                 // Field resolveCache:Lio/netty/resolver/dns/DnsCache;
      10: invokevirtual #124                // Method doResolveAll:(Ljava/lang/String;[Lio/netty/handler/codec/dns/DnsRecord;Lio/netty/util/concurrent/Promise;Lio/netty/resolver/dns/DnsCache;)V
      13: return

  protected void doResolveAll(java.lang.String, io.netty.handler.codec.dns.DnsRecord[], io.netty.util.concurrent.Promise<java.util.List<java.net.InetAddress>>, io.netty.resolver.dns.DnsCache) throws java.lang.Exception;
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #146                // Method java/lang/String.isEmpty:()Z
       8: ifeq          26
      11: aload_3
      12: aload_0
      13: invokespecial #147                // Method loopbackAddress:()Ljava/net/InetAddress;
      16: invokestatic  #176                // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
      19: invokeinterface #148,  2          // InterfaceMethod io/netty/util/concurrent/Promise.setSuccess:(Ljava/lang/Object;)Lio/netty/util/concurrent/Promise;
      24: pop
      25: return
      26: aload_1
      27: invokestatic  #149                // Method io/netty/util/NetUtil.createByteArrayFromIpAddressString:(Ljava/lang/String;)[B
      30: astore        5
      32: aload         5
      34: ifnull        53
      37: aload_3
      38: aload         5
      40: invokestatic  #150                // Method java/net/InetAddress.getByAddress:([B)Ljava/net/InetAddress;
      43: invokestatic  #176                // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
      46: invokeinterface #148,  2          // InterfaceMethod io/netty/util/concurrent/Promise.setSuccess:(Ljava/lang/Object;)Lio/netty/util/concurrent/Promise;
      51: pop
      52: return
      53: aload_1
      54: invokestatic  #151                // Method hostname:(Ljava/lang/String;)Ljava/lang/String;
      57: astore        6
      59: aload_0
      60: aload         6
      62: invokespecial #152                // Method resolveHostsFileEntry:(Ljava/lang/String;)Ljava/net/InetAddress;
      65: astore        7
      67: aload         7
      69: ifnull        85
      72: aload_3
      73: aload         7
      75: invokestatic  #176                // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
      78: invokeinterface #148,  2          // InterfaceMethod io/netty/util/concurrent/Promise.setSuccess:(Ljava/lang/Object;)Lio/netty/util/concurrent/Promise;
      83: pop
      84: return
      85: aload_0
      86: aload         6
      88: aload_2
      89: aload_3
      90: aload         4
      92: invokespecial #177                // Method doResolveAllCached:(Ljava/lang/String;[Lio/netty/handler/codec/dns/DnsRecord;Lio/netty/util/concurrent/Promise;Lio/netty/resolver/dns/DnsCache;)Z
      95: ifne          108
      98: aload_0
      99: aload         6
     101: aload_2
     102: aload_3
     103: aload         4
     105: invokespecial #178                // Method doResolveAllUncached:(Ljava/lang/String;[Lio/netty/handler/codec/dns/DnsRecord;Lio/netty/util/concurrent/Promise;Lio/netty/resolver/dns/DnsCache;)V
     108: return

  private boolean doResolveAllCached(java.lang.String, io.netty.handler.codec.dns.DnsRecord[], io.netty.util.concurrent.Promise<java.util.List<java.net.InetAddress>>, io.netty.resolver.dns.DnsCache);
    Code:
       0: aload         4
       2: aload_1
       3: aload_2
       4: invokeinterface #155,  3          // InterfaceMethod io/netty/resolver/dns/DnsCache.get:(Ljava/lang/String;[Lio/netty/handler/codec/dns/DnsRecord;)Ljava/util/List;
       9: astore        5
      11: aload         5
      13: ifnull        26
      16: aload         5
      18: invokeinterface #156,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      23: ifeq          28
      26: iconst_0
      27: ireturn
      28: aconst_null
      29: astore        6
      31: aconst_null
      32: astore        7
      34: aload         5
      36: dup
      37: astore        8
      39: monitorenter
      40: aload         5
      42: invokeinterface #139,  1          // InterfaceMethod java/util/List.size:()I
      47: istore        9
      49: getstatic     #157                // Field $assertionsDisabled:Z
      52: ifne          68
      55: iload         9
      57: ifgt          68
      60: new           #158                // class java/lang/AssertionError
      63: dup
      64: invokespecial #159                // Method java/lang/AssertionError."<init>":()V
      67: athrow
      68: aload         5
      70: iconst_0
      71: invokeinterface #160,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      76: checkcast     #161                // class io/netty/resolver/dns/DnsCacheEntry
      79: invokevirtual #162                // Method io/netty/resolver/dns/DnsCacheEntry.cause:()Ljava/lang/Throwable;
      82: ifnull        104
      85: aload         5
      87: iconst_0
      88: invokeinterface #160,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      93: checkcast     #161                // class io/netty/resolver/dns/DnsCacheEntry
      96: invokevirtual #162                // Method io/netty/resolver/dns/DnsCacheEntry.cause:()Ljava/lang/Throwable;
      99: astore        7
     101: goto          213
     104: aload_0
     105: getfield      #59                 // Field resolvedInternetProtocolFamilies:[Lio/netty/channel/socket/InternetProtocolFamily;
     108: astore        10
     110: aload         10
     112: arraylength
     113: istore        11
     115: iconst_0
     116: istore        12
     118: iload         12
     120: iload         11
     122: if_icmpge     213
     125: aload         10
     127: iload         12
     129: aaload
     130: astore        13
     132: iconst_0
     133: istore        14
     135: iload         14
     137: iload         9
     139: if_icmpge     207
     142: aload         5
     144: iload         14
     146: invokeinterface #160,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     151: checkcast     #161                // class io/netty/resolver/dns/DnsCacheEntry
     154: astore        15
     156: aload         13
     158: invokevirtual #163                // Method io/netty/channel/socket/InternetProtocolFamily.addressType:()Ljava/lang/Class;
     161: aload         15
     163: invokevirtual #164                // Method io/netty/resolver/dns/DnsCacheEntry.address:()Ljava/net/InetAddress;
     166: invokevirtual #165                // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
     169: ifeq          201
     172: aload         6
     174: ifnonnull     188
     177: new           #136                // class java/util/ArrayList
     180: dup
     181: iload         9
     183: invokespecial #179                // Method java/util/ArrayList."<init>":(I)V
     186: astore        6
     188: aload         6
     190: aload         15
     192: invokevirtual #164                // Method io/netty/resolver/dns/DnsCacheEntry.address:()Ljava/net/InetAddress;
     195: invokeinterface #138,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     200: pop
     201: iinc          14, 1
     204: goto          135
     207: iinc          12, 1
     210: goto          118
     213: aload         8
     215: monitorexit
     216: goto          227
     219: astore        16
     221: aload         8
     223: monitorexit
     224: aload         16
     226: athrow
     227: aload         6
     229: ifnull        240
     232: aload_3
     233: aload         6
     235: invokestatic  #3                  // Method trySuccess:(Lio/netty/util/concurrent/Promise;Ljava/lang/Object;)V
     238: iconst_1
     239: ireturn
     240: aload         7
     242: ifnull        253
     245: aload_3
     246: aload         7
     248: invokestatic  #166                // Method tryFailure:(Lio/netty/util/concurrent/Promise;Ljava/lang/Throwable;)V
     251: iconst_1
     252: ireturn
     253: iconst_0
     254: ireturn
    Exception table:
       from    to  target type
          40   216   219   any
         219   224   219   any

  private void doResolveAllUncached(java.lang.String, io.netty.handler.codec.dns.DnsRecord[], io.netty.util.concurrent.Promise<java.util.List<java.net.InetAddress>>, io.netty.resolver.dns.DnsCache);
    Code:
       0: new           #180                // class io/netty/resolver/dns/DnsNameResolver$ListResolverContext
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload         4
       9: aload_0
      10: getfield      #6                  // Field dnsServerAddressStreamProvider:Lio/netty/resolver/dns/DnsServerAddressStreamProvider;
      13: aload_1
      14: invokeinterface #173,  2          // InterfaceMethod io/netty/resolver/dns/DnsServerAddressStreamProvider.nameServerAddressStream:(Ljava/lang/String;)Lio/netty/resolver/dns/DnsServerAddressStream;
      19: invokespecial #181                // Method io/netty/resolver/dns/DnsNameResolver$ListResolverContext."<init>":(Lio/netty/resolver/dns/DnsNameResolver;Ljava/lang/String;[Lio/netty/handler/codec/dns/DnsRecord;Lio/netty/resolver/dns/DnsCache;Lio/netty/resolver/dns/DnsServerAddressStream;)V
      22: aload_3
      23: invokevirtual #182                // Method io/netty/resolver/dns/DnsNameResolver$ListResolverContext.resolve:(Lio/netty/util/concurrent/Promise;)V
      26: return

  private static java.lang.String hostname(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #183                // Method java/net/IDN.toASCII:(Ljava/lang/String;)Ljava/lang/String;
       4: astore_1
       5: aload_0
       6: bipush        46
       8: invokestatic  #184                // Method io/netty/util/internal/StringUtil.endsWith:(Ljava/lang/CharSequence;C)Z
      11: ifeq          43
      14: aload_1
      15: bipush        46
      17: invokestatic  #184                // Method io/netty/util/internal/StringUtil.endsWith:(Ljava/lang/CharSequence;C)Z
      20: ifne          43
      23: new           #70                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
      30: aload_1
      31: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: ldc           #185                // String .
      36: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #75                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: astore_1
      43: aload_1
      44: areturn

  public io.netty.util.concurrent.Future<io.netty.channel.AddressedEnvelope<io.netty.handler.codec.dns.DnsResponse, java.net.InetSocketAddress>> query(io.netty.handler.codec.dns.DnsQuestion);
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #186                // Method nextNameServerAddress:()Ljava/net/InetSocketAddress;
       5: aload_1
       6: invokevirtual #187                // Method query:(Ljava/net/InetSocketAddress;Lio/netty/handler/codec/dns/DnsQuestion;)Lio/netty/util/concurrent/Future;
       9: areturn

  public io.netty.util.concurrent.Future<io.netty.channel.AddressedEnvelope<io.netty.handler.codec.dns.DnsResponse, java.net.InetSocketAddress>> query(io.netty.handler.codec.dns.DnsQuestion, java.lang.Iterable<io.netty.handler.codec.dns.DnsRecord>);
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #186                // Method nextNameServerAddress:()Ljava/net/InetSocketAddress;
       5: aload_1
       6: aload_2
       7: invokevirtual #188                // Method query:(Ljava/net/InetSocketAddress;Lio/netty/handler/codec/dns/DnsQuestion;Ljava/lang/Iterable;)Lio/netty/util/concurrent/Future;
      10: areturn

  public io.netty.util.concurrent.Future<io.netty.channel.AddressedEnvelope<io.netty.handler.codec.dns.DnsResponse, java.net.InetSocketAddress>> query(io.netty.handler.codec.dns.DnsQuestion, io.netty.util.concurrent.Promise<io.netty.channel.AddressedEnvelope<? extends io.netty.handler.codec.dns.DnsResponse, java.net.InetSocketAddress>>);
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #186                // Method nextNameServerAddress:()Ljava/net/InetSocketAddress;
       5: aload_1
       6: invokestatic  #189                // Method java/util/Collections.emptyList:()Ljava/util/List;
       9: aload_2
      10: invokevirtual #190                // Method query:(Ljava/net/InetSocketAddress;Lio/netty/handler/codec/dns/DnsQuestion;Ljava/lang/Iterable;Lio/netty/util/concurrent/Promise;)Lio/netty/util/concurrent/Future;
      13: areturn

  private java.net.InetSocketAddress nextNameServerAddress();
    Code:
       0: aload_0
       1: getfield      #13                 // Field nameServerAddrStream:Lio/netty/util/concurrent/FastThreadLocal;
       4: invokevirtual #191                // Method io/netty/util/concurrent/FastThreadLocal.get:()Ljava/lang/Object;
       7: checkcast     #192                // class io/netty/resolver/dns/DnsServerAddressStream
      10: invokeinterface #193,  1          // InterfaceMethod io/netty/resolver/dns/DnsServerAddressStream.next:()Ljava/net/InetSocketAddress;
      15: areturn

  public io.netty.util.concurrent.Future<io.netty.channel.AddressedEnvelope<io.netty.handler.codec.dns.DnsResponse, java.net.InetSocketAddress>> query(java.net.InetSocketAddress, io.netty.handler.codec.dns.DnsQuestion);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #125                // Field EMPTY_ADDITIONALS:[Lio/netty/handler/codec/dns/DnsRecord;
       6: aload_0
       7: getfield      #96                 // Field ch:Lio/netty/channel/socket/DatagramChannel;
      10: invokeinterface #194,  1          // InterfaceMethod io/netty/channel/socket/DatagramChannel.eventLoop:()Lio/netty/channel/EventLoop;
      15: invokeinterface #86,  1           // InterfaceMethod io/netty/channel/EventLoop.newPromise:()Lio/netty/util/concurrent/Promise;
      20: invokevirtual #195                // Method query0:(Ljava/net/InetSocketAddress;Lio/netty/handler/codec/dns/DnsQuestion;[Lio/netty/handler/codec/dns/DnsRecord;Lio/netty/util/concurrent/Promise;)Lio/netty/util/concurrent/Future;
      23: areturn

  public io.netty.util.concurrent.Future<io.netty.channel.AddressedEnvelope<io.netty.handler.codec.dns.DnsResponse, java.net.InetSocketAddress>> query(java.net.InetSocketAddress, io.netty.handler.codec.dns.DnsQuestion, java.lang.Iterable<io.netty.handler.codec.dns.DnsRecord>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iconst_0
       5: invokestatic  #119                // Method toArray:(Ljava/lang/Iterable;Z)[Lio/netty/handler/codec/dns/DnsRecord;
       8: aload_0
       9: getfield      #96                 // Field ch:Lio/netty/channel/socket/DatagramChannel;
      12: invokeinterface #194,  1          // InterfaceMethod io/netty/channel/socket/DatagramChannel.eventLoop:()Lio/netty/channel/EventLoop;
      17: invokeinterface #86,  1           // InterfaceMethod io/netty/channel/EventLoop.newPromise:()Lio/netty/util/concurrent/Promise;
      22: invokevirtual #195                // Method query0:(Ljava/net/InetSocketAddress;Lio/netty/handler/codec/dns/DnsQuestion;[Lio/netty/handler/codec/dns/DnsRecord;Lio/netty/util/concurrent/Promise;)Lio/netty/util/concurrent/Future;
      25: areturn

  public io.netty.util.concurrent.Future<io.netty.channel.AddressedEnvelope<io.netty.handler.codec.dns.DnsResponse, java.net.InetSocketAddress>> query(java.net.InetSocketAddress, io.netty.handler.codec.dns.DnsQuestion, io.netty.util.concurrent.Promise<io.netty.channel.AddressedEnvelope<? extends io.netty.handler.codec.dns.DnsResponse, java.net.InetSocketAddress>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #125                // Field EMPTY_ADDITIONALS:[Lio/netty/handler/codec/dns/DnsRecord;
       6: aload_3
       7: invokevirtual #195                // Method query0:(Ljava/net/InetSocketAddress;Lio/netty/handler/codec/dns/DnsQuestion;[Lio/netty/handler/codec/dns/DnsRecord;Lio/netty/util/concurrent/Promise;)Lio/netty/util/concurrent/Future;
      10: areturn

  public io.netty.util.concurrent.Future<io.netty.channel.AddressedEnvelope<io.netty.handler.codec.dns.DnsResponse, java.net.InetSocketAddress>> query(java.net.InetSocketAddress, io.netty.handler.codec.dns.DnsQuestion, java.lang.Iterable<io.netty.handler.codec.dns.DnsRecord>, io.netty.util.concurrent.Promise<io.netty.channel.AddressedEnvelope<? extends io.netty.handler.codec.dns.DnsResponse, java.net.InetSocketAddress>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iconst_0
       5: invokestatic  #119                // Method toArray:(Ljava/lang/Iterable;Z)[Lio/netty/handler/codec/dns/DnsRecord;
       8: aload         4
      10: invokevirtual #195                // Method query0:(Ljava/net/InetSocketAddress;Lio/netty/handler/codec/dns/DnsQuestion;[Lio/netty/handler/codec/dns/DnsRecord;Lio/netty/util/concurrent/Promise;)Lio/netty/util/concurrent/Future;
      13: areturn

  final io.netty.util.concurrent.Future<io.netty.channel.AddressedEnvelope<io.netty.handler.codec.dns.DnsResponse, java.net.InetSocketAddress>> query0(java.net.InetSocketAddress, io.netty.handler.codec.dns.DnsQuestion, io.netty.handler.codec.dns.DnsRecord[], io.netty.util.concurrent.Promise<io.netty.channel.AddressedEnvelope<? extends io.netty.handler.codec.dns.DnsResponse, java.net.InetSocketAddress>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload_0
       5: getfield      #96                 // Field ch:Lio/netty/channel/socket/DatagramChannel;
       8: invokeinterface #196,  1          // InterfaceMethod io/netty/channel/socket/DatagramChannel.newPromise:()Lio/netty/channel/ChannelPromise;
      13: aload         4
      15: invokevirtual #197                // Method query0:(Ljava/net/InetSocketAddress;Lio/netty/handler/codec/dns/DnsQuestion;[Lio/netty/handler/codec/dns/DnsRecord;Lio/netty/channel/ChannelPromise;Lio/netty/util/concurrent/Promise;)Lio/netty/util/concurrent/Future;
      18: areturn

  final io.netty.util.concurrent.Future<io.netty.channel.AddressedEnvelope<io.netty.handler.codec.dns.DnsResponse, java.net.InetSocketAddress>> query0(java.net.InetSocketAddress, io.netty.handler.codec.dns.DnsQuestion, io.netty.handler.codec.dns.DnsRecord[], io.netty.channel.ChannelPromise, io.netty.util.concurrent.Promise<io.netty.channel.AddressedEnvelope<? extends io.netty.handler.codec.dns.DnsResponse, java.net.InetSocketAddress>>);
    Code:
       0: getstatic     #157                // Field $assertionsDisabled:Z
       3: ifne          24
       6: aload         4
       8: invokeinterface #198,  1          // InterfaceMethod io/netty/channel/ChannelPromise.isVoid:()Z
      13: ifeq          24
      16: new           #158                // class java/lang/AssertionError
      19: dup
      20: invokespecial #159                // Method java/lang/AssertionError."<init>":()V
      23: athrow
      24: aload         5
      26: ldc           #118                // String promise
      28: invokestatic  #27                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      31: checkcast     #199                // class io/netty/util/concurrent/Promise
      34: invokestatic  #200                // Method cast:(Lio/netty/util/concurrent/Promise;)Lio/netty/util/concurrent/Promise;
      37: astore        6
      39: new           #201                // class io/netty/resolver/dns/DnsQueryContext
      42: dup
      43: aload_0
      44: aload_1
      45: aload_2
      46: aload_3
      47: aload         6
      49: invokespecial #202                // Method io/netty/resolver/dns/DnsQueryContext."<init>":(Lio/netty/resolver/dns/DnsNameResolver;Ljava/net/InetSocketAddress;Lio/netty/handler/codec/dns/DnsQuestion;[Lio/netty/handler/codec/dns/DnsRecord;Lio/netty/util/concurrent/Promise;)V
      52: aload         4
      54: invokevirtual #203                // Method io/netty/resolver/dns/DnsQueryContext.query:(Lio/netty/channel/ChannelPromise;)V
      57: aload         6
      59: areturn
      60: astore        7
      62: aload         6
      64: aload         7
      66: invokeinterface #122,  2          // InterfaceMethod io/netty/util/concurrent/Promise.setFailure:(Ljava/lang/Throwable;)Lio/netty/util/concurrent/Promise;
      71: areturn
    Exception table:
       from    to  target type
          39    59    60   Class java/lang/Exception

  private static io.netty.util.concurrent.Promise<io.netty.channel.AddressedEnvelope<io.netty.handler.codec.dns.DnsResponse, java.net.InetSocketAddress>> cast(io.netty.util.concurrent.Promise<?>);
    Code:
       0: aload_0
       1: areturn

  protected io.netty.util.concurrent.EventExecutor executor();
    Code:
       0: aload_0
       1: invokevirtual #79                 // Method executor:()Lio/netty/channel/EventLoop;
       4: areturn

  static io.netty.resolver.dns.DnsServerAddressStreamProvider access$000(io.netty.resolver.dns.DnsNameResolver);
    Code:
       0: aload_0
       1: getfield      #6                  // Field dnsServerAddressStreamProvider:Lio/netty/resolver/dns/DnsServerAddressStreamProvider;
       4: areturn

  static io.netty.handler.codec.dns.DatagramDnsResponseDecoder access$100();
    Code:
       0: getstatic     #5                  // Field DECODER:Lio/netty/handler/codec/dns/DatagramDnsResponseDecoder;
       3: areturn

  static io.netty.handler.codec.dns.DatagramDnsQueryEncoder access$200();
    Code:
       0: getstatic     #4                  // Field ENCODER:Lio/netty/handler/codec/dns/DatagramDnsQueryEncoder;
       3: areturn

  static void access$400(io.netty.util.concurrent.Promise, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #3                  // Method trySuccess:(Lio/netty/util/concurrent/Promise;Ljava/lang/Object;)V
       5: return

  static io.netty.util.internal.logging.InternalLogger access$500();
    Code:
       0: getstatic     #2                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       3: areturn

  static {};
    Code:
       0: ldc           #113                // class io/netty/resolver/dns/DnsNameResolver
       2: invokevirtual #204                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #157                // Field $assertionsDisabled:Z
      16: ldc           #113                // class io/netty/resolver/dns/DnsNameResolver
      18: invokestatic  #205                // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
      21: putstatic     #2                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      24: iconst_0
      25: anewarray     #131                // class io/netty/handler/codec/dns/DnsRecord
      28: putstatic     #125                // Field EMPTY_ADDITIONALS:[Lio/netty/handler/codec/dns/DnsRecord;
      31: iconst_1
      32: anewarray     #206                // class io/netty/handler/codec/dns/DnsRecordType
      35: dup
      36: iconst_0
      37: getstatic     #207                // Field io/netty/handler/codec/dns/DnsRecordType.A:Lio/netty/handler/codec/dns/DnsRecordType;
      40: aastore
      41: putstatic     #56                 // Field IPV4_ONLY_RESOLVED_RECORD_TYPES:[Lio/netty/handler/codec/dns/DnsRecordType;
      44: iconst_1
      45: anewarray     #208                // class io/netty/channel/socket/InternetProtocolFamily
      48: dup
      49: iconst_0
      50: getstatic     #60                 // Field io/netty/channel/socket/InternetProtocolFamily.IPv4:Lio/netty/channel/socket/InternetProtocolFamily;
      53: aastore
      54: putstatic     #58                 // Field IPV4_ONLY_RESOLVED_PROTOCOL_FAMILIES:[Lio/netty/channel/socket/InternetProtocolFamily;
      57: iconst_2
      58: anewarray     #206                // class io/netty/handler/codec/dns/DnsRecordType
      61: dup
      62: iconst_0
      63: getstatic     #207                // Field io/netty/handler/codec/dns/DnsRecordType.A:Lio/netty/handler/codec/dns/DnsRecordType;
      66: aastore
      67: dup
      68: iconst_1
      69: getstatic     #209                // Field io/netty/handler/codec/dns/DnsRecordType.AAAA:Lio/netty/handler/codec/dns/DnsRecordType;
      72: aastore
      73: putstatic     #62                 // Field IPV4_PREFERRED_RESOLVED_RECORD_TYPES:[Lio/netty/handler/codec/dns/DnsRecordType;
      76: iconst_2
      77: anewarray     #208                // class io/netty/channel/socket/InternetProtocolFamily
      80: dup
      81: iconst_0
      82: getstatic     #60                 // Field io/netty/channel/socket/InternetProtocolFamily.IPv4:Lio/netty/channel/socket/InternetProtocolFamily;
      85: aastore
      86: dup
      87: iconst_1
      88: getstatic     #66                 // Field io/netty/channel/socket/InternetProtocolFamily.IPv6:Lio/netty/channel/socket/InternetProtocolFamily;
      91: aastore
      92: putstatic     #63                 // Field IPV4_PREFERRED_RESOLVED_PROTOCOL_FAMILIES:[Lio/netty/channel/socket/InternetProtocolFamily;
      95: iconst_1
      96: anewarray     #206                // class io/netty/handler/codec/dns/DnsRecordType
      99: dup
     100: iconst_0
     101: getstatic     #209                // Field io/netty/handler/codec/dns/DnsRecordType.AAAA:Lio/netty/handler/codec/dns/DnsRecordType;
     104: aastore
     105: putstatic     #64                 // Field IPV6_ONLY_RESOLVED_RECORD_TYPES:[Lio/netty/handler/codec/dns/DnsRecordType;
     108: iconst_1
     109: anewarray     #208                // class io/netty/channel/socket/InternetProtocolFamily
     112: dup
     113: iconst_0
     114: getstatic     #66                 // Field io/netty/channel/socket/InternetProtocolFamily.IPv6:Lio/netty/channel/socket/InternetProtocolFamily;
     117: aastore
     118: putstatic     #65                 // Field IPV6_ONLY_RESOLVED_PROTOCOL_FAMILIES:[Lio/netty/channel/socket/InternetProtocolFamily;
     121: iconst_2
     122: anewarray     #206                // class io/netty/handler/codec/dns/DnsRecordType
     125: dup
     126: iconst_0
     127: getstatic     #209                // Field io/netty/handler/codec/dns/DnsRecordType.AAAA:Lio/netty/handler/codec/dns/DnsRecordType;
     130: aastore
     131: dup
     132: iconst_1
     133: getstatic     #207                // Field io/netty/handler/codec/dns/DnsRecordType.A:Lio/netty/handler/codec/dns/DnsRecordType;
     136: aastore
     137: putstatic     #67                 // Field IPV6_PREFERRED_RESOLVED_RECORD_TYPES:[Lio/netty/handler/codec/dns/DnsRecordType;
     140: iconst_2
     141: anewarray     #208                // class io/netty/channel/socket/InternetProtocolFamily
     144: dup
     145: iconst_0
     146: getstatic     #66                 // Field io/netty/channel/socket/InternetProtocolFamily.IPv6:Lio/netty/channel/socket/InternetProtocolFamily;
     149: aastore
     150: dup
     151: iconst_1
     152: getstatic     #60                 // Field io/netty/channel/socket/InternetProtocolFamily.IPv4:Lio/netty/channel/socket/InternetProtocolFamily;
     155: aastore
     156: putstatic     #68                 // Field IPV6_PREFERRED_RESOLVED_PROTOCOL_FAMILIES:[Lio/netty/channel/socket/InternetProtocolFamily;
     159: invokestatic  #210                // Method io/netty/util/NetUtil.isIpV4StackPreferred:()Z
     162: ifeq          180
     165: getstatic     #211                // Field io/netty/resolver/ResolvedAddressTypes.IPV4_ONLY:Lio/netty/resolver/ResolvedAddressTypes;
     168: putstatic     #17                 // Field DEFAULT_RESOLVE_ADDRESS_TYPES:Lio/netty/resolver/ResolvedAddressTypes;
     171: getstatic     #212                // Field io/netty/util/NetUtil.LOCALHOST4:Ljava/net/Inet4Address;
     174: putstatic     #116                // Field LOCALHOST_ADDRESS:Ljava/net/InetAddress;
     177: goto          213
     180: invokestatic  #213                // Method io/netty/util/NetUtil.isIpV6AddressesPreferred:()Z
     183: ifeq          201
     186: getstatic     #214                // Field io/netty/resolver/ResolvedAddressTypes.IPV6_PREFERRED:Lio/netty/resolver/ResolvedAddressTypes;
     189: putstatic     #17                 // Field DEFAULT_RESOLVE_ADDRESS_TYPES:Lio/netty/resolver/ResolvedAddressTypes;
     192: getstatic     #215                // Field io/netty/util/NetUtil.LOCALHOST6:Ljava/net/Inet6Address;
     195: putstatic     #116                // Field LOCALHOST_ADDRESS:Ljava/net/InetAddress;
     198: goto          213
     201: getstatic     #216                // Field io/netty/resolver/ResolvedAddressTypes.IPV4_PREFERRED:Lio/netty/resolver/ResolvedAddressTypes;
     204: putstatic     #17                 // Field DEFAULT_RESOLVE_ADDRESS_TYPES:Lio/netty/resolver/ResolvedAddressTypes;
     207: getstatic     #212                // Field io/netty/util/NetUtil.LOCALHOST4:Ljava/net/Inet4Address;
     210: putstatic     #116                // Field LOCALHOST_ADDRESS:Ljava/net/InetAddress;
     213: ldc           #217                // String sun.net.dns.ResolverConfiguration
     215: invokestatic  #218                // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
     218: astore_1
     219: aload_1
     220: ldc           #219                // String open
     222: iconst_0
     223: anewarray     #220                // class java/lang/Class
     226: invokevirtual #221                // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
     229: astore_2
     230: aload_1
     231: ldc           #222                // String searchlist
     233: iconst_0
     234: anewarray     #220                // class java/lang/Class
     237: invokevirtual #221                // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
     240: astore_3
     241: aload_2
     242: aconst_null
     243: iconst_0
     244: anewarray     #223                // class java/lang/Object
     247: invokevirtual #224                // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
     250: astore        4
     252: aload_3
     253: aload         4
     255: iconst_0
     256: anewarray     #223                // class java/lang/Object
     259: invokevirtual #224                // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
     262: checkcast     #225                // class java/util/List
     265: astore        5
     267: aload         5
     269: aload         5
     271: invokeinterface #139,  1          // InterfaceMethod java/util/List.size:()I
     276: anewarray     #226                // class java/lang/String
     279: invokeinterface #140,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     284: checkcast     #46                 // class "[Ljava/lang/String;"
     287: astore_0
     288: goto          296
     291: astore_1
     292: getstatic     #227                // Field io/netty/util/internal/EmptyArrays.EMPTY_STRINGS:[Ljava/lang/String;
     295: astore_0
     296: aload_0
     297: putstatic     #47                 // Field DEFAULT_SEARCH_DOMAINS:[Ljava/lang/String;
     300: invokestatic  #228                // Method io/netty/resolver/dns/UnixResolverDnsServerAddressStreamProvider.parseEtcResolverFirstNdots:()I
     303: istore_1
     304: goto          310
     307: astore_2
     308: iconst_1
     309: istore_1
     310: iload_1
     311: putstatic     #49                 // Field DEFAULT_NDOTS:I
     314: new           #230                // class io/netty/handler/codec/dns/DatagramDnsResponseDecoder
     317: dup
     318: invokespecial #231                // Method io/netty/handler/codec/dns/DatagramDnsResponseDecoder."<init>":()V
     321: putstatic     #5                  // Field DECODER:Lio/netty/handler/codec/dns/DatagramDnsResponseDecoder;
     324: new           #232                // class io/netty/handler/codec/dns/DatagramDnsQueryEncoder
     327: dup
     328: invokespecial #233                // Method io/netty/handler/codec/dns/DatagramDnsQueryEncoder."<init>":()V
     331: putstatic     #4                  // Field ENCODER:Lio/netty/handler/codec/dns/DatagramDnsQueryEncoder;
     334: return
    Exception table:
       from    to  target type
         213   288   291   Class java/lang/Exception
         300   304   307   Class java/lang/Exception
}
