Compiled from "DnsNameResolverContext.java"
class io.netty.resolver.dns.DnsNameResolverContext$DnsCacheIterable$1 implements java.util.Iterator<java.net.InetSocketAddress> {
  java.util.Iterator<io.netty.resolver.dns.DnsCacheEntry> entryIterator;

  final io.netty.resolver.dns.DnsNameResolverContext$DnsCacheIterable this$1;

  io.netty.resolver.dns.DnsNameResolverContext$DnsCacheIterable$1(io.netty.resolver.dns.DnsNameResolverContext$DnsCacheIterable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$1:Lio/netty/resolver/dns/DnsNameResolverContext$DnsCacheIterable;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_0
      11: getfield      #1                  // Field this$1:Lio/netty/resolver/dns/DnsNameResolverContext$DnsCacheIterable;
      14: invokestatic  #3                  // Method io/netty/resolver/dns/DnsNameResolverContext$DnsCacheIterable.access$300:(Lio/netty/resolver/dns/DnsNameResolverContext$DnsCacheIterable;)Ljava/util/List;
      17: invokeinterface #4,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      22: putfield      #5                  // Field entryIterator:Ljava/util/Iterator;
      25: return

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #5                  // Field entryIterator:Ljava/util/Iterator;
       4: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
       9: ireturn

  public java.net.InetSocketAddress next();
    Code:
       0: aload_0
       1: getfield      #5                  // Field entryIterator:Ljava/util/Iterator;
       4: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
       9: checkcast     #8                  // class io/netty/resolver/dns/DnsCacheEntry
      12: invokevirtual #9                  // Method io/netty/resolver/dns/DnsCacheEntry.address:()Ljava/net/InetAddress;
      15: astore_1
      16: new           #10                 // class java/net/InetSocketAddress
      19: dup
      20: aload_1
      21: aload_0
      22: getfield      #1                  // Field this$1:Lio/netty/resolver/dns/DnsNameResolverContext$DnsCacheIterable;
      25: getfield      #11                 // Field io/netty/resolver/dns/DnsNameResolverContext$DnsCacheIterable.this$0:Lio/netty/resolver/dns/DnsNameResolverContext;
      28: invokestatic  #12                 // Method io/netty/resolver/dns/DnsNameResolverContext.access$000:(Lio/netty/resolver/dns/DnsNameResolverContext;)Lio/netty/resolver/dns/DnsNameResolver;
      31: aload_1
      32: invokevirtual #13                 // Method io/netty/resolver/dns/DnsNameResolver.dnsRedirectPort:(Ljava/net/InetAddress;)I
      35: invokespecial #14                 // Method java/net/InetSocketAddress."<init>":(Ljava/net/InetAddress;I)V
      38: areturn

  public void remove();
    Code:
       0: aload_0
       1: getfield      #5                  // Field entryIterator:Ljava/util/Iterator;
       4: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.remove:()V
       9: return

  public java.lang.Object next();
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method next:()Ljava/net/InetSocketAddress;
       4: areturn
}
