Compiled from "DefaultDnsCache.java"
public class io.netty.resolver.dns.DefaultDnsCache implements io.netty.resolver.dns.DnsCache {
  private final java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<io.netty.resolver.dns.DnsCacheEntry>> resolveCache;

  private final int minTtl;

  private final int maxTtl;

  private final int negativeTtl;

  static final boolean $assertionsDisabled;

  public io.netty.resolver.dns.DefaultDnsCache();
    Code:
       0: aload_0
       1: iconst_0
       2: ldc           #3                  // int 2147483647
       4: iconst_0
       5: invokespecial #4                  // Method "<init>":(III)V
       8: return

  public io.netty.resolver.dns.DefaultDnsCache(int, int, int);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #6                  // Method io/netty/util/internal/PlatformDependent.newConcurrentHashMap:()Ljava/util/concurrent/ConcurrentMap;
       8: putfield      #1                  // Field resolveCache:Ljava/util/concurrent/ConcurrentMap;
      11: aload_0
      12: iload_1
      13: ldc           #7                  // String minTtl
      15: invokestatic  #8                  // Method io/netty/util/internal/ObjectUtil.checkPositiveOrZero:(ILjava/lang/String;)I
      18: putfield      #9                  // Field minTtl:I
      21: aload_0
      22: iload_2
      23: ldc           #10                 // String maxTtl
      25: invokestatic  #8                  // Method io/netty/util/internal/ObjectUtil.checkPositiveOrZero:(ILjava/lang/String;)I
      28: putfield      #11                 // Field maxTtl:I
      31: iload_1
      32: iload_2
      33: if_icmple     77
      36: new           #12                 // class java/lang/IllegalArgumentException
      39: dup
      40: new           #13                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      47: ldc           #15                 // String minTtl:
      49: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: iload_1
      53: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      56: ldc           #18                 // String , maxTtl:
      58: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: iload_2
      62: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      65: ldc           #19                 // String  (expected: 0 <= minTtl <= maxTtl)
      67: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: invokespecial #21                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      76: athrow
      77: aload_0
      78: iload_3
      79: ldc           #22                 // String negativeTtl
      81: invokestatic  #8                  // Method io/netty/util/internal/ObjectUtil.checkPositiveOrZero:(ILjava/lang/String;)I
      84: putfield      #23                 // Field negativeTtl:I
      87: return

  public int minTtl();
    Code:
       0: aload_0
       1: getfield      #9                  // Field minTtl:I
       4: ireturn

  public int maxTtl();
    Code:
       0: aload_0
       1: getfield      #11                 // Field maxTtl:I
       4: ireturn

  public int negativeTtl();
    Code:
       0: aload_0
       1: getfield      #23                 // Field negativeTtl:I
       4: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #1                  // Field resolveCache:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #24,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
       9: invokeinterface #25,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          55
      24: aload_1
      25: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #28                 // class java/util/Map$Entry
      33: astore_2
      34: aload_1
      35: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.remove:()V
      40: aload_2
      41: invokeinterface #30,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      46: checkcast     #31                 // class java/util/List
      49: invokestatic  #32                 // Method cancelExpiration:(Ljava/util/List;)V
      52: goto          15
      55: return

  public boolean clear(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #33                 // String hostname
       3: invokestatic  #34                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: iconst_0
       8: istore_2
       9: aload_0
      10: getfield      #1                  // Field resolveCache:Ljava/util/concurrent/ConcurrentMap;
      13: invokeinterface #24,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
      18: invokeinterface #25,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      23: astore_3
      24: aload_3
      25: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          85
      33: aload_3
      34: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #28                 // class java/util/Map$Entry
      42: astore        4
      44: aload         4
      46: invokeinterface #35,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      51: checkcast     #36                 // class java/lang/String
      54: aload_1
      55: invokevirtual #37                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      58: ifeq          82
      61: aload_3
      62: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.remove:()V
      67: aload         4
      69: invokeinterface #30,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      74: checkcast     #31                 // class java/util/List
      77: invokestatic  #32                 // Method cancelExpiration:(Ljava/util/List;)V
      80: iconst_1
      81: istore_2
      82: goto          24
      85: iload_2
      86: ireturn

  private static boolean emptyAdditionals(io.netty.handler.codec.dns.DnsRecord[]);
    Code:
       0: aload_0
       1: ifnull        9
       4: aload_0
       5: arraylength
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public java.util.List<io.netty.resolver.dns.DnsCacheEntry> get(java.lang.String, io.netty.handler.codec.dns.DnsRecord[]);
    Code:
       0: aload_1
       1: ldc           #33                 // String hostname
       3: invokestatic  #34                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_2
       8: invokestatic  #38                 // Method emptyAdditionals:([Lio/netty/handler/codec/dns/DnsRecord;)Z
      11: ifne          16
      14: aconst_null
      15: areturn
      16: aload_0
      17: getfield      #1                  // Field resolveCache:Ljava/util/concurrent/ConcurrentMap;
      20: aload_1
      21: invokeinterface #39,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #31                 // class java/util/List
      29: areturn

  private java.util.List<io.netty.resolver.dns.DnsCacheEntry> cachedEntries(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #1                  // Field resolveCache:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #39,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #31                 // class java/util/List
      13: astore_2
      14: aload_2
      15: ifnonnull     59
      18: new           #40                 // class java/util/ArrayList
      21: dup
      22: bipush        8
      24: invokespecial #41                 // Method java/util/ArrayList."<init>":(I)V
      27: astore        4
      29: aload_0
      30: getfield      #1                  // Field resolveCache:Ljava/util/concurrent/ConcurrentMap;
      33: aload_1
      34: aload         4
      36: invokeinterface #42,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      41: checkcast     #31                 // class java/util/List
      44: astore_2
      45: aload_2
      46: ifnull        53
      49: aload_2
      50: goto          55
      53: aload         4
      55: astore_3
      56: goto          61
      59: aload_2
      60: astore_3
      61: aload_3
      62: areturn

  public void cache(java.lang.String, io.netty.handler.codec.dns.DnsRecord[], java.net.InetAddress, long, io.netty.channel.EventLoop);
    Code:
       0: aload_1
       1: ldc           #33                 // String hostname
       3: invokestatic  #34                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_3
       8: ldc           #43                 // String address
      10: invokestatic  #34                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: aload         6
      16: ldc           #44                 // String loop
      18: invokestatic  #34                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      21: pop
      22: aload_0
      23: getfield      #11                 // Field maxTtl:I
      26: ifeq          36
      29: aload_2
      30: invokestatic  #38                 // Method emptyAdditionals:([Lio/netty/handler/codec/dns/DnsRecord;)Z
      33: ifne          37
      36: return
      37: aload_0
      38: getfield      #9                  // Field minTtl:I
      41: aload_0
      42: getfield      #11                 // Field maxTtl:I
      45: i2l
      46: lload         4
      48: invokestatic  #45                 // Method java/lang/Math.min:(JJ)J
      51: l2i
      52: invokestatic  #46                 // Method java/lang/Math.max:(II)I
      55: istore        7
      57: aload_0
      58: aload_1
      59: invokespecial #47                 // Method cachedEntries:(Ljava/lang/String;)Ljava/util/List;
      62: astore        8
      64: new           #48                 // class io/netty/resolver/dns/DnsCacheEntry
      67: dup
      68: aload_1
      69: aload_3
      70: invokespecial #49                 // Method io/netty/resolver/dns/DnsCacheEntry."<init>":(Ljava/lang/String;Ljava/net/InetAddress;)V
      73: astore        9
      75: aload         8
      77: dup
      78: astore        10
      80: monitorenter
      81: aload         8
      83: invokeinterface #50,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      88: ifne          149
      91: aload         8
      93: iconst_0
      94: invokeinterface #51,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      99: checkcast     #48                 // class io/netty/resolver/dns/DnsCacheEntry
     102: astore        11
     104: aload         11
     106: invokevirtual #52                 // Method io/netty/resolver/dns/DnsCacheEntry.cause:()Ljava/lang/Throwable;
     109: ifnull        149
     112: getstatic     #53                 // Field $assertionsDisabled:Z
     115: ifne          137
     118: aload         8
     120: invokeinterface #54,  1           // InterfaceMethod java/util/List.size:()I
     125: iconst_1
     126: if_icmpeq     137
     129: new           #55                 // class java/lang/AssertionError
     132: dup
     133: invokespecial #56                 // Method java/lang/AssertionError."<init>":()V
     136: athrow
     137: aload         11
     139: invokevirtual #57                 // Method io/netty/resolver/dns/DnsCacheEntry.cancelExpiration:()V
     142: aload         8
     144: invokeinterface #58,  1           // InterfaceMethod java/util/List.clear:()V
     149: aload         8
     151: aload         9
     153: invokeinterface #59,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     158: pop
     159: aload         10
     161: monitorexit
     162: goto          173
     165: astore        12
     167: aload         10
     169: monitorexit
     170: aload         12
     172: athrow
     173: aload_0
     174: aload         8
     176: aload         9
     178: iload         7
     180: aload         6
     182: invokespecial #60                 // Method scheduleCacheExpiration:(Ljava/util/List;Lio/netty/resolver/dns/DnsCacheEntry;ILio/netty/channel/EventLoop;)V
     185: return
    Exception table:
       from    to  target type
          81   162   165   any
         165   170   165   any

  public void cache(java.lang.String, io.netty.handler.codec.dns.DnsRecord[], java.lang.Throwable, io.netty.channel.EventLoop);
    Code:
       0: aload_1
       1: ldc           #33                 // String hostname
       3: invokestatic  #34                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_3
       8: ldc           #61                 // String cause
      10: invokestatic  #34                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: aload         4
      16: ldc           #44                 // String loop
      18: invokestatic  #34                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      21: pop
      22: aload_0
      23: getfield      #23                 // Field negativeTtl:I
      26: ifeq          36
      29: aload_2
      30: invokestatic  #38                 // Method emptyAdditionals:([Lio/netty/handler/codec/dns/DnsRecord;)Z
      33: ifne          37
      36: return
      37: aload_0
      38: aload_1
      39: invokespecial #47                 // Method cachedEntries:(Ljava/lang/String;)Ljava/util/List;
      42: astore        5
      44: new           #48                 // class io/netty/resolver/dns/DnsCacheEntry
      47: dup
      48: aload_1
      49: aload_3
      50: invokespecial #62                 // Method io/netty/resolver/dns/DnsCacheEntry."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      53: astore        6
      55: aload         5
      57: dup
      58: astore        7
      60: monitorenter
      61: aload         5
      63: invokeinterface #54,  1           // InterfaceMethod java/util/List.size:()I
      68: istore        8
      70: iconst_0
      71: istore        9
      73: iload         9
      75: iload         8
      77: if_icmpge     101
      80: aload         5
      82: iload         9
      84: invokeinterface #51,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      89: checkcast     #48                 // class io/netty/resolver/dns/DnsCacheEntry
      92: invokevirtual #57                 // Method io/netty/resolver/dns/DnsCacheEntry.cancelExpiration:()V
      95: iinc          9, 1
      98: goto          73
     101: aload         5
     103: invokeinterface #58,  1           // InterfaceMethod java/util/List.clear:()V
     108: aload         5
     110: aload         6
     112: invokeinterface #59,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     117: pop
     118: aload         7
     120: monitorexit
     121: goto          132
     124: astore        10
     126: aload         7
     128: monitorexit
     129: aload         10
     131: athrow
     132: aload_0
     133: aload         5
     135: aload         6
     137: aload_0
     138: getfield      #23                 // Field negativeTtl:I
     141: aload         4
     143: invokespecial #60                 // Method scheduleCacheExpiration:(Ljava/util/List;Lio/netty/resolver/dns/DnsCacheEntry;ILio/netty/channel/EventLoop;)V
     146: return
    Exception table:
       from    to  target type
          61   121   124   any
         124   129   124   any

  private static void cancelExpiration(java.util.List<io.netty.resolver.dns.DnsCacheEntry>);
    Code:
       0: aload_0
       1: invokeinterface #54,  1           // InterfaceMethod java/util/List.size:()I
       6: istore_1
       7: iconst_0
       8: istore_2
       9: iload_2
      10: iload_1
      11: if_icmpge     33
      14: aload_0
      15: iload_2
      16: invokeinterface #51,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      21: checkcast     #48                 // class io/netty/resolver/dns/DnsCacheEntry
      24: invokevirtual #57                 // Method io/netty/resolver/dns/DnsCacheEntry.cancelExpiration:()V
      27: iinc          2, 1
      30: goto          9
      33: return

  private void scheduleCacheExpiration(java.util.List<io.netty.resolver.dns.DnsCacheEntry>, io.netty.resolver.dns.DnsCacheEntry, int, io.netty.channel.EventLoop);
    Code:
       0: aload_2
       1: aload         4
       3: new           #63                 // class io/netty/resolver/dns/DefaultDnsCache$1
       6: dup
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokespecial #64                 // Method io/netty/resolver/dns/DefaultDnsCache$1."<init>":(Lio/netty/resolver/dns/DefaultDnsCache;Ljava/util/List;Lio/netty/resolver/dns/DnsCacheEntry;)V
      13: iload_3
      14: i2l
      15: getstatic     #65                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      18: invokevirtual #66                 // Method io/netty/resolver/dns/DnsCacheEntry.scheduleExpiration:(Lio/netty/channel/EventLoop;Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)V
      21: return

  public java.lang.String toString();
    Code:
       0: new           #13                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #67                 // String DefaultDnsCache(minTtl=
       9: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #9                  // Field minTtl:I
      16: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      19: ldc           #68                 // String , maxTtl=
      21: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #11                 // Field maxTtl:I
      28: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: ldc           #69                 // String , negativeTtl=
      33: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #23                 // Field negativeTtl:I
      40: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      43: ldc           #70                 // String , cached resolved hostname=
      45: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #1                  // Field resolveCache:Ljava/util/concurrent/ConcurrentMap;
      52: invokeinterface #71,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.size:()I
      57: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      60: ldc           #72                 // String )
      62: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: areturn

  static java.util.concurrent.ConcurrentMap access$000(io.netty.resolver.dns.DefaultDnsCache);
    Code:
       0: aload_0
       1: getfield      #1                  // Field resolveCache:Ljava/util/concurrent/ConcurrentMap;
       4: areturn

  static {};
    Code:
       0: ldc           #73                 // class io/netty/resolver/dns/DefaultDnsCache
       2: invokevirtual #74                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #53                 // Field $assertionsDisabled:Z
      16: return
}
