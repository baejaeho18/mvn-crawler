Compiled from "DnsQueryContext.java"
final class io.netty.resolver.dns.DnsQueryContext {
  private static final io.netty.util.internal.logging.InternalLogger logger;

  private final io.netty.resolver.dns.DnsNameResolver parent;

  private final io.netty.util.concurrent.Promise<io.netty.channel.AddressedEnvelope<io.netty.handler.codec.dns.DnsResponse, java.net.InetSocketAddress>> promise;

  private final int id;

  private final io.netty.handler.codec.dns.DnsQuestion question;

  private final io.netty.handler.codec.dns.DnsRecord[] additionals;

  private final io.netty.handler.codec.dns.DnsRecord optResource;

  private final java.net.InetSocketAddress nameServerAddr;

  private final boolean recursionDesired;

  private volatile io.netty.util.concurrent.ScheduledFuture<?> timeoutFuture;

  io.netty.resolver.dns.DnsQueryContext(io.netty.resolver.dns.DnsNameResolver, java.net.InetSocketAddress, io.netty.handler.codec.dns.DnsQuestion, io.netty.handler.codec.dns.DnsRecord[], io.netty.util.concurrent.Promise<io.netty.channel.AddressedEnvelope<io.netty.handler.codec.dns.DnsResponse, java.net.InetSocketAddress>>);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #6                  // String parent
       8: invokestatic  #7                  // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #8                  // class io/netty/resolver/dns/DnsNameResolver
      14: putfield      #9                  // Field parent:Lio/netty/resolver/dns/DnsNameResolver;
      17: aload_0
      18: aload_2
      19: ldc           #10                 // String nameServerAddr
      21: invokestatic  #7                  // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      24: checkcast     #11                 // class java/net/InetSocketAddress
      27: putfield      #12                 // Field nameServerAddr:Ljava/net/InetSocketAddress;
      30: aload_0
      31: aload_3
      32: ldc           #13                 // String question
      34: invokestatic  #7                  // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      37: checkcast     #14                 // class io/netty/handler/codec/dns/DnsQuestion
      40: putfield      #15                 // Field question:Lio/netty/handler/codec/dns/DnsQuestion;
      43: aload_0
      44: aload         4
      46: ldc           #16                 // String additionals
      48: invokestatic  #7                  // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      51: checkcast     #17                 // class "[Lio/netty/handler/codec/dns/DnsRecord;"
      54: putfield      #18                 // Field additionals:[Lio/netty/handler/codec/dns/DnsRecord;
      57: aload_0
      58: aload         5
      60: ldc           #19                 // String promise
      62: invokestatic  #7                  // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      65: checkcast     #20                 // class io/netty/util/concurrent/Promise
      68: putfield      #3                  // Field promise:Lio/netty/util/concurrent/Promise;
      71: aload_0
      72: aload_1
      73: invokevirtual #21                 // Method io/netty/resolver/dns/DnsNameResolver.isRecursionDesired:()Z
      76: putfield      #22                 // Field recursionDesired:Z
      79: aload_0
      80: aload_1
      81: getfield      #23                 // Field io/netty/resolver/dns/DnsNameResolver.queryContextManager:Lio/netty/resolver/dns/DnsQueryContextManager;
      84: aload_0
      85: invokevirtual #24                 // Method io/netty/resolver/dns/DnsQueryContextManager.add:(Lio/netty/resolver/dns/DnsQueryContext;)I
      88: putfield      #25                 // Field id:I
      91: aload_1
      92: invokevirtual #26                 // Method io/netty/resolver/dns/DnsNameResolver.isOptResourceEnabled:()Z
      95: ifeq          119
      98: aload_0
      99: new           #27                 // class io/netty/resolver/dns/DnsQueryContext$1
     102: dup
     103: aload_0
     104: aload_1
     105: invokevirtual #28                 // Method io/netty/resolver/dns/DnsNameResolver.maxPayloadSize:()I
     108: iconst_0
     109: iconst_0
     110: invokespecial #29                 // Method io/netty/resolver/dns/DnsQueryContext$1."<init>":(Lio/netty/resolver/dns/DnsQueryContext;III)V
     113: putfield      #30                 // Field optResource:Lio/netty/handler/codec/dns/DnsRecord;
     116: goto          124
     119: aload_0
     120: aconst_null
     121: putfield      #30                 // Field optResource:Lio/netty/handler/codec/dns/DnsRecord;
     124: return

  java.net.InetSocketAddress nameServerAddr();
    Code:
       0: aload_0
       1: getfield      #12                 // Field nameServerAddr:Ljava/net/InetSocketAddress;
       4: areturn

  io.netty.handler.codec.dns.DnsQuestion question();
    Code:
       0: aload_0
       1: getfield      #15                 // Field question:Lio/netty/handler/codec/dns/DnsQuestion;
       4: areturn

  void query(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method question:()Lio/netty/handler/codec/dns/DnsQuestion;
       4: astore_2
       5: aload_0
       6: invokevirtual #32                 // Method nameServerAddr:()Ljava/net/InetSocketAddress;
       9: astore_3
      10: new           #33                 // class io/netty/handler/codec/dns/DatagramDnsQuery
      13: dup
      14: aconst_null
      15: aload_3
      16: aload_0
      17: getfield      #25                 // Field id:I
      20: invokespecial #34                 // Method io/netty/handler/codec/dns/DatagramDnsQuery."<init>":(Ljava/net/InetSocketAddress;Ljava/net/InetSocketAddress;I)V
      23: astore        4
      25: aload         4
      27: aload_0
      28: getfield      #22                 // Field recursionDesired:Z
      31: invokevirtual #35                 // Method io/netty/handler/codec/dns/DatagramDnsQuery.setRecursionDesired:(Z)Lio/netty/handler/codec/dns/DatagramDnsQuery;
      34: pop
      35: aload         4
      37: getstatic     #36                 // Field io/netty/handler/codec/dns/DnsSection.QUESTION:Lio/netty/handler/codec/dns/DnsSection;
      40: aload_2
      41: invokevirtual #37                 // Method io/netty/handler/codec/dns/DatagramDnsQuery.addRecord:(Lio/netty/handler/codec/dns/DnsSection;Lio/netty/handler/codec/dns/DnsRecord;)Lio/netty/handler/codec/dns/DatagramDnsQuery;
      44: pop
      45: aload_0
      46: getfield      #18                 // Field additionals:[Lio/netty/handler/codec/dns/DnsRecord;
      49: astore        5
      51: aload         5
      53: arraylength
      54: istore        6
      56: iconst_0
      57: istore        7
      59: iload         7
      61: iload         6
      63: if_icmpge     90
      66: aload         5
      68: iload         7
      70: aaload
      71: astore        8
      73: aload         4
      75: getstatic     #38                 // Field io/netty/handler/codec/dns/DnsSection.ADDITIONAL:Lio/netty/handler/codec/dns/DnsSection;
      78: aload         8
      80: invokevirtual #37                 // Method io/netty/handler/codec/dns/DatagramDnsQuery.addRecord:(Lio/netty/handler/codec/dns/DnsSection;Lio/netty/handler/codec/dns/DnsRecord;)Lio/netty/handler/codec/dns/DatagramDnsQuery;
      83: pop
      84: iinc          7, 1
      87: goto          59
      90: aload_0
      91: getfield      #30                 // Field optResource:Lio/netty/handler/codec/dns/DnsRecord;
      94: ifnull        110
      97: aload         4
      99: getstatic     #38                 // Field io/netty/handler/codec/dns/DnsSection.ADDITIONAL:Lio/netty/handler/codec/dns/DnsSection;
     102: aload_0
     103: getfield      #30                 // Field optResource:Lio/netty/handler/codec/dns/DnsRecord;
     106: invokevirtual #37                 // Method io/netty/handler/codec/dns/DatagramDnsQuery.addRecord:(Lio/netty/handler/codec/dns/DnsSection;Lio/netty/handler/codec/dns/DnsRecord;)Lio/netty/handler/codec/dns/DatagramDnsQuery;
     109: pop
     110: getstatic     #39                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
     113: invokeinterface #40,  1           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isDebugEnabled:()Z
     118: ifeq          163
     121: getstatic     #39                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
     124: ldc           #41                 // String {} WRITE: [{}: {}], {}
     126: iconst_4
     127: anewarray     #42                 // class java/lang/Object
     130: dup
     131: iconst_0
     132: aload_0
     133: getfield      #9                  // Field parent:Lio/netty/resolver/dns/DnsNameResolver;
     136: getfield      #43                 // Field io/netty/resolver/dns/DnsNameResolver.ch:Lio/netty/channel/socket/DatagramChannel;
     139: aastore
     140: dup
     141: iconst_1
     142: aload_0
     143: getfield      #25                 // Field id:I
     146: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     149: aastore
     150: dup
     151: iconst_2
     152: aload_3
     153: aastore
     154: dup
     155: iconst_3
     156: aload_2
     157: aastore
     158: invokeinterface #45,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     163: aload_0
     164: aload         4
     166: aload_1
     167: invokespecial #46                 // Method sendQuery:(Lio/netty/handler/codec/dns/DnsQuery;Lio/netty/channel/ChannelPromise;)V
     170: return

  private void sendQuery(io.netty.handler.codec.dns.DnsQuery, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #9                  // Field parent:Lio/netty/resolver/dns/DnsNameResolver;
       4: getfield      #47                 // Field io/netty/resolver/dns/DnsNameResolver.channelFuture:Lio/netty/util/concurrent/Future;
       7: invokeinterface #48,  1           // InterfaceMethod io/netty/util/concurrent/Future.isDone:()Z
      12: ifeq          24
      15: aload_0
      16: aload_1
      17: aload_2
      18: invokespecial #4                  // Method writeQuery:(Lio/netty/handler/codec/dns/DnsQuery;Lio/netty/channel/ChannelPromise;)V
      21: goto          47
      24: aload_0
      25: getfield      #9                  // Field parent:Lio/netty/resolver/dns/DnsNameResolver;
      28: getfield      #47                 // Field io/netty/resolver/dns/DnsNameResolver.channelFuture:Lio/netty/util/concurrent/Future;
      31: new           #49                 // class io/netty/resolver/dns/DnsQueryContext$2
      34: dup
      35: aload_0
      36: aload_1
      37: aload_2
      38: invokespecial #50                 // Method io/netty/resolver/dns/DnsQueryContext$2."<init>":(Lio/netty/resolver/dns/DnsQueryContext;Lio/netty/handler/codec/dns/DnsQuery;Lio/netty/channel/ChannelPromise;)V
      41: invokeinterface #51,  2           // InterfaceMethod io/netty/util/concurrent/Future.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/util/concurrent/Future;
      46: pop
      47: return

  private void writeQuery(io.netty.handler.codec.dns.DnsQuery, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #9                  // Field parent:Lio/netty/resolver/dns/DnsNameResolver;
       4: getfield      #43                 // Field io/netty/resolver/dns/DnsNameResolver.ch:Lio/netty/channel/socket/DatagramChannel;
       7: aload_1
       8: aload_2
       9: invokeinterface #52,  3           // InterfaceMethod io/netty/channel/socket/DatagramChannel.writeAndFlush:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      14: astore_3
      15: aload_3
      16: invokeinterface #53,  1           // InterfaceMethod io/netty/channel/ChannelFuture.isDone:()Z
      21: ifeq          32
      24: aload_0
      25: aload_3
      26: invokespecial #2                  // Method onQueryWriteCompletion:(Lio/netty/channel/ChannelFuture;)V
      29: goto          48
      32: aload_3
      33: new           #54                 // class io/netty/resolver/dns/DnsQueryContext$3
      36: dup
      37: aload_0
      38: aload_3
      39: invokespecial #55                 // Method io/netty/resolver/dns/DnsQueryContext$3."<init>":(Lio/netty/resolver/dns/DnsQueryContext;Lio/netty/channel/ChannelFuture;)V
      42: invokeinterface #56,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
      47: pop
      48: return

  private void onQueryWriteCompletion(io.netty.channel.ChannelFuture);
    Code:
       0: aload_1
       1: invokeinterface #57,  1           // InterfaceMethod io/netty/channel/ChannelFuture.isSuccess:()Z
       6: ifne          22
       9: aload_0
      10: ldc           #58                 // String failed to send a query
      12: aload_1
      13: invokeinterface #59,  1           // InterfaceMethod io/netty/channel/ChannelFuture.cause:()Ljava/lang/Throwable;
      18: invokespecial #1                  // Method setFailure:(Ljava/lang/String;Ljava/lang/Throwable;)V
      21: return
      22: aload_0
      23: getfield      #9                  // Field parent:Lio/netty/resolver/dns/DnsNameResolver;
      26: invokevirtual #60                 // Method io/netty/resolver/dns/DnsNameResolver.queryTimeoutMillis:()J
      29: lstore_2
      30: lload_2
      31: lconst_0
      32: lcmp
      33: ifle          70
      36: aload_0
      37: aload_0
      38: getfield      #9                  // Field parent:Lio/netty/resolver/dns/DnsNameResolver;
      41: getfield      #43                 // Field io/netty/resolver/dns/DnsNameResolver.ch:Lio/netty/channel/socket/DatagramChannel;
      44: invokeinterface #61,  1           // InterfaceMethod io/netty/channel/socket/DatagramChannel.eventLoop:()Lio/netty/channel/EventLoop;
      49: new           #62                 // class io/netty/resolver/dns/DnsQueryContext$4
      52: dup
      53: aload_0
      54: lload_2
      55: invokespecial #63                 // Method io/netty/resolver/dns/DnsQueryContext$4."<init>":(Lio/netty/resolver/dns/DnsQueryContext;J)V
      58: lload_2
      59: getstatic     #64                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      62: invokeinterface #65,  5           // InterfaceMethod io/netty/channel/EventLoop.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/netty/util/concurrent/ScheduledFuture;
      67: putfield      #66                 // Field timeoutFuture:Lio/netty/util/concurrent/ScheduledFuture;
      70: return

  void finish(io.netty.channel.AddressedEnvelope<? extends io.netty.handler.codec.dns.DnsResponse, java.net.InetSocketAddress>);
    Code:
       0: aload_1
       1: invokeinterface #67,  1           // InterfaceMethod io/netty/channel/AddressedEnvelope.content:()Ljava/lang/Object;
       6: checkcast     #68                 // class io/netty/handler/codec/dns/DnsResponse
       9: astore_2
      10: aload_2
      11: getstatic     #36                 // Field io/netty/handler/codec/dns/DnsSection.QUESTION:Lio/netty/handler/codec/dns/DnsSection;
      14: invokeinterface #69,  2           // InterfaceMethod io/netty/handler/codec/dns/DnsResponse.count:(Lio/netty/handler/codec/dns/DnsSection;)I
      19: iconst_1
      20: if_icmpeq     35
      23: getstatic     #39                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      26: ldc           #70                 // String Received a DNS response with invalid number of questions: {}
      28: aload_1
      29: invokeinterface #71,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      34: return
      35: aload_0
      36: invokevirtual #31                 // Method question:()Lio/netty/handler/codec/dns/DnsQuestion;
      39: aload_2
      40: getstatic     #36                 // Field io/netty/handler/codec/dns/DnsSection.QUESTION:Lio/netty/handler/codec/dns/DnsSection;
      43: invokeinterface #72,  2           // InterfaceMethod io/netty/handler/codec/dns/DnsResponse.recordAt:(Lio/netty/handler/codec/dns/DnsSection;)Lio/netty/handler/codec/dns/DnsRecord;
      48: invokevirtual #73                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      51: ifne          66
      54: getstatic     #39                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      57: ldc           #74                 // String Received a mismatching DNS response: {}
      59: aload_1
      60: invokeinterface #71,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      65: return
      66: aload_0
      67: aload_1
      68: invokespecial #75                 // Method setSuccess:(Lio/netty/channel/AddressedEnvelope;)V
      71: return

  private void setSuccess(io.netty.channel.AddressedEnvelope<? extends io.netty.handler.codec.dns.DnsResponse, java.net.InetSocketAddress>);
    Code:
       0: aload_0
       1: getfield      #9                  // Field parent:Lio/netty/resolver/dns/DnsNameResolver;
       4: getfield      #23                 // Field io/netty/resolver/dns/DnsNameResolver.queryContextManager:Lio/netty/resolver/dns/DnsQueryContextManager;
       7: aload_0
       8: invokevirtual #32                 // Method nameServerAddr:()Ljava/net/InetSocketAddress;
      11: aload_0
      12: getfield      #25                 // Field id:I
      15: invokevirtual #76                 // Method io/netty/resolver/dns/DnsQueryContextManager.remove:(Ljava/net/InetSocketAddress;I)Lio/netty/resolver/dns/DnsQueryContext;
      18: pop
      19: aload_0
      20: getfield      #66                 // Field timeoutFuture:Lio/netty/util/concurrent/ScheduledFuture;
      23: astore_2
      24: aload_2
      25: ifnull        36
      28: aload_2
      29: iconst_0
      30: invokeinterface #77,  2           // InterfaceMethod io/netty/util/concurrent/ScheduledFuture.cancel:(Z)Z
      35: pop
      36: aload_0
      37: getfield      #3                  // Field promise:Lio/netty/util/concurrent/Promise;
      40: astore_3
      41: aload_3
      42: invokeinterface #78,  1           // InterfaceMethod io/netty/util/concurrent/Promise.setUncancellable:()Z
      47: ifeq          76
      50: aload_1
      51: invokeinterface #79,  1           // InterfaceMethod io/netty/channel/AddressedEnvelope.retain:()Lio/netty/channel/AddressedEnvelope;
      56: astore        4
      58: aload_3
      59: aload         4
      61: invokeinterface #80,  2           // InterfaceMethod io/netty/util/concurrent/Promise.trySuccess:(Ljava/lang/Object;)Z
      66: ifne          76
      69: aload_1
      70: invokeinterface #81,  1           // InterfaceMethod io/netty/channel/AddressedEnvelope.release:()Z
      75: pop
      76: return

  private void setFailure(java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method nameServerAddr:()Ljava/net/InetSocketAddress;
       4: astore_3
       5: aload_0
       6: getfield      #9                  // Field parent:Lio/netty/resolver/dns/DnsNameResolver;
       9: getfield      #23                 // Field io/netty/resolver/dns/DnsNameResolver.queryContextManager:Lio/netty/resolver/dns/DnsQueryContextManager;
      12: aload_3
      13: aload_0
      14: getfield      #25                 // Field id:I
      17: invokevirtual #76                 // Method io/netty/resolver/dns/DnsQueryContextManager.remove:(Ljava/net/InetSocketAddress;I)Lio/netty/resolver/dns/DnsQueryContext;
      20: pop
      21: new           #82                 // class java/lang/StringBuilder
      24: dup
      25: aload_1
      26: invokevirtual #83                 // Method java/lang/String.length:()I
      29: bipush        64
      31: iadd
      32: invokespecial #84                 // Method java/lang/StringBuilder."<init>":(I)V
      35: astore        4
      37: aload         4
      39: bipush        91
      41: invokevirtual #85                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      44: aload_3
      45: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      48: ldc           #87                 // String ]
      50: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_1
      54: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: ldc           #89                 // String  (no stack trace available)
      59: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: pop
      63: aload_2
      64: ifnull        90
      67: new           #90                 // class io/netty/resolver/dns/DnsNameResolverException
      70: dup
      71: aload_3
      72: aload_0
      73: invokevirtual #31                 // Method question:()Lio/netty/handler/codec/dns/DnsQuestion;
      76: aload         4
      78: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      81: aload_2
      82: invokespecial #92                 // Method io/netty/resolver/dns/DnsNameResolverException."<init>":(Ljava/net/InetSocketAddress;Lio/netty/handler/codec/dns/DnsQuestion;Ljava/lang/String;Ljava/lang/Throwable;)V
      85: astore        5
      87: goto          109
      90: new           #90                 // class io/netty/resolver/dns/DnsNameResolverException
      93: dup
      94: aload_3
      95: aload_0
      96: invokevirtual #31                 // Method question:()Lio/netty/handler/codec/dns/DnsQuestion;
      99: aload         4
     101: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     104: invokespecial #93                 // Method io/netty/resolver/dns/DnsNameResolverException."<init>":(Ljava/net/InetSocketAddress;Lio/netty/handler/codec/dns/DnsQuestion;Ljava/lang/String;)V
     107: astore        5
     109: aload_0
     110: getfield      #3                  // Field promise:Lio/netty/util/concurrent/Promise;
     113: aload         5
     115: invokeinterface #94,  2           // InterfaceMethod io/netty/util/concurrent/Promise.tryFailure:(Ljava/lang/Throwable;)Z
     120: pop
     121: return

  static void access$000(io.netty.resolver.dns.DnsQueryContext, io.netty.handler.codec.dns.DnsQuery, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #4                  // Method writeQuery:(Lio/netty/handler/codec/dns/DnsQuery;Lio/netty/channel/ChannelPromise;)V
       6: return

  static io.netty.util.concurrent.Promise access$100(io.netty.resolver.dns.DnsQueryContext);
    Code:
       0: aload_0
       1: getfield      #3                  // Field promise:Lio/netty/util/concurrent/Promise;
       4: areturn

  static void access$200(io.netty.resolver.dns.DnsQueryContext, io.netty.channel.ChannelFuture);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method onQueryWriteCompletion:(Lio/netty/channel/ChannelFuture;)V
       5: return

  static void access$300(io.netty.resolver.dns.DnsQueryContext, java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method setFailure:(Ljava/lang/String;Ljava/lang/Throwable;)V
       6: return

  static {};
    Code:
       0: ldc           #95                 // class io/netty/resolver/dns/DnsQueryContext
       2: invokestatic  #96                 // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
       5: putstatic     #39                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       8: return
}
