Compiled from "UnpooledDirectByteBuf.java"
public class io.netty.buffer.UnpooledDirectByteBuf extends io.netty.buffer.AbstractReferenceCountedByteBuf {
  private final io.netty.buffer.ByteBufAllocator alloc;

  private java.nio.ByteBuffer buffer;

  private java.nio.ByteBuffer tmpNioBuf;

  private int capacity;

  private boolean doNotFree;

  protected io.netty.buffer.UnpooledDirectByteBuf(io.netty.buffer.ByteBufAllocator, int, int);
    Code:
       0: aload_0
       1: iload_3
       2: invokespecial #1                  // Method io/netty/buffer/AbstractReferenceCountedByteBuf."<init>":(I)V
       5: aload_1
       6: ifnonnull     19
       9: new           #2                  // class java/lang/NullPointerException
      12: dup
      13: ldc           #3                  // String alloc
      15: invokespecial #4                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: iload_2
      20: ifge          50
      23: new           #5                  // class java/lang/IllegalArgumentException
      26: dup
      27: new           #6                  // class java/lang/StringBuilder
      30: dup
      31: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      34: ldc           #8                  // String initialCapacity:
      36: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: iload_2
      40: invokevirtual #10                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      43: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: iload_3
      51: ifge          81
      54: new           #5                  // class java/lang/IllegalArgumentException
      57: dup
      58: new           #6                  // class java/lang/StringBuilder
      61: dup
      62: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      65: ldc           #13                 // String maxCapacity:
      67: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: iload_3
      71: invokevirtual #10                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      74: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      77: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      80: athrow
      81: iload_2
      82: iload_3
      83: if_icmple     117
      86: new           #5                  // class java/lang/IllegalArgumentException
      89: dup
      90: ldc           #14                 // String initialCapacity(%d) > maxCapacity(%d)
      92: iconst_2
      93: anewarray     #15                 // class java/lang/Object
      96: dup
      97: iconst_0
      98: iload_2
      99: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     102: aastore
     103: dup
     104: iconst_1
     105: iload_3
     106: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     109: aastore
     110: invokestatic  #17                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     113: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     116: athrow
     117: aload_0
     118: aload_1
     119: putfield      #18                 // Field alloc:Lio/netty/buffer/ByteBufAllocator;
     122: aload_0
     123: iload_2
     124: invokestatic  #19                 // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
     127: invokespecial #20                 // Method setByteBuffer:(Ljava/nio/ByteBuffer;)V
     130: return

  protected io.netty.buffer.UnpooledDirectByteBuf(io.netty.buffer.ByteBufAllocator, java.nio.ByteBuffer, int);
    Code:
       0: aload_0
       1: iload_3
       2: invokespecial #1                  // Method io/netty/buffer/AbstractReferenceCountedByteBuf."<init>":(I)V
       5: aload_1
       6: ifnonnull     19
       9: new           #2                  // class java/lang/NullPointerException
      12: dup
      13: ldc           #3                  // String alloc
      15: invokespecial #4                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_2
      20: ifnonnull     33
      23: new           #2                  // class java/lang/NullPointerException
      26: dup
      27: ldc           #21                 // String initialBuffer
      29: invokespecial #4                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: aload_2
      34: invokevirtual #22                 // Method java/nio/ByteBuffer.isDirect:()Z
      37: ifne          50
      40: new           #5                  // class java/lang/IllegalArgumentException
      43: dup
      44: ldc           #23                 // String initialBuffer is not a direct buffer.
      46: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: aload_2
      51: invokevirtual #24                 // Method java/nio/ByteBuffer.isReadOnly:()Z
      54: ifeq          67
      57: new           #5                  // class java/lang/IllegalArgumentException
      60: dup
      61: ldc           #25                 // String initialBuffer is a read-only buffer.
      63: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      66: athrow
      67: aload_2
      68: invokevirtual #26                 // Method java/nio/ByteBuffer.remaining:()I
      71: istore        4
      73: iload         4
      75: iload_3
      76: if_icmple     111
      79: new           #5                  // class java/lang/IllegalArgumentException
      82: dup
      83: ldc           #14                 // String initialCapacity(%d) > maxCapacity(%d)
      85: iconst_2
      86: anewarray     #15                 // class java/lang/Object
      89: dup
      90: iconst_0
      91: iload         4
      93: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      96: aastore
      97: dup
      98: iconst_1
      99: iload_3
     100: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     103: aastore
     104: invokestatic  #17                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     107: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     110: athrow
     111: aload_0
     112: aload_1
     113: putfield      #18                 // Field alloc:Lio/netty/buffer/ByteBufAllocator;
     116: aload_0
     117: iconst_1
     118: putfield      #27                 // Field doNotFree:Z
     121: aload_0
     122: aload_2
     123: invokevirtual #28                 // Method java/nio/ByteBuffer.slice:()Ljava/nio/ByteBuffer;
     126: getstatic     #29                 // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
     129: invokevirtual #30                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
     132: invokespecial #20                 // Method setByteBuffer:(Ljava/nio/ByteBuffer;)V
     135: aload_0
     136: iload         4
     138: invokevirtual #31                 // Method writerIndex:(I)Lio/netty/buffer/ByteBuf;
     141: pop
     142: return

  protected java.nio.ByteBuffer allocateDirect(int);
    Code:
       0: iload_1
       1: invokestatic  #19                 // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
       4: areturn

  protected void freeDirect(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: invokestatic  #32                 // Method io/netty/util/internal/PlatformDependent.freeDirectBuffer:(Ljava/nio/ByteBuffer;)V
       4: return

  private void setByteBuffer(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: getfield      #33                 // Field buffer:Ljava/nio/ByteBuffer;
       4: astore_2
       5: aload_2
       6: ifnull        29
       9: aload_0
      10: getfield      #27                 // Field doNotFree:Z
      13: ifeq          24
      16: aload_0
      17: iconst_0
      18: putfield      #27                 // Field doNotFree:Z
      21: goto          29
      24: aload_0
      25: aload_2
      26: invokevirtual #34                 // Method freeDirect:(Ljava/nio/ByteBuffer;)V
      29: aload_0
      30: aload_1
      31: putfield      #33                 // Field buffer:Ljava/nio/ByteBuffer;
      34: aload_0
      35: aconst_null
      36: putfield      #35                 // Field tmpNioBuf:Ljava/nio/ByteBuffer;
      39: aload_0
      40: aload_1
      41: invokevirtual #26                 // Method java/nio/ByteBuffer.remaining:()I
      44: putfield      #36                 // Field capacity:I
      47: return

  public boolean isDirect();
    Code:
       0: iconst_1
       1: ireturn

  public int capacity();
    Code:
       0: aload_0
       1: getfield      #36                 // Field capacity:I
       4: ireturn

  public io.netty.buffer.ByteBuf capacity(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #37                 // Method checkNewCapacity:(I)V
       5: aload_0
       6: invokevirtual #38                 // Method readerIndex:()I
       9: istore_2
      10: aload_0
      11: invokevirtual #39                 // Method writerIndex:()I
      14: istore_3
      15: aload_0
      16: getfield      #36                 // Field capacity:I
      19: istore        4
      21: iload_1
      22: iload         4
      24: if_icmple     93
      27: aload_0
      28: getfield      #33                 // Field buffer:Ljava/nio/ByteBuffer;
      31: astore        5
      33: aload_0
      34: iload_1
      35: invokevirtual #40                 // Method allocateDirect:(I)Ljava/nio/ByteBuffer;
      38: astore        6
      40: aload         5
      42: iconst_0
      43: invokevirtual #41                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      46: aload         5
      48: invokevirtual #42                 // Method java/nio/ByteBuffer.capacity:()I
      51: invokevirtual #43                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      54: pop
      55: aload         6
      57: iconst_0
      58: invokevirtual #41                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      61: aload         5
      63: invokevirtual #42                 // Method java/nio/ByteBuffer.capacity:()I
      66: invokevirtual #43                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      69: pop
      70: aload         6
      72: aload         5
      74: invokevirtual #44                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      77: pop
      78: aload         6
      80: invokevirtual #45                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      83: pop
      84: aload_0
      85: aload         6
      87: invokespecial #20                 // Method setByteBuffer:(Ljava/nio/ByteBuffer;)V
      90: goto          182
      93: iload_1
      94: iload         4
      96: if_icmpge     182
      99: aload_0
     100: getfield      #33                 // Field buffer:Ljava/nio/ByteBuffer;
     103: astore        5
     105: aload_0
     106: iload_1
     107: invokevirtual #40                 // Method allocateDirect:(I)Ljava/nio/ByteBuffer;
     110: astore        6
     112: iload_2
     113: iload_1
     114: if_icmpge     169
     117: iload_3
     118: iload_1
     119: if_icmple     130
     122: aload_0
     123: iload_1
     124: dup
     125: istore_3
     126: invokevirtual #31                 // Method writerIndex:(I)Lio/netty/buffer/ByteBuf;
     129: pop
     130: aload         5
     132: iload_2
     133: invokevirtual #41                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     136: iload_3
     137: invokevirtual #43                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
     140: pop
     141: aload         6
     143: iload_2
     144: invokevirtual #41                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     147: iload_3
     148: invokevirtual #43                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
     151: pop
     152: aload         6
     154: aload         5
     156: invokevirtual #44                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
     159: pop
     160: aload         6
     162: invokevirtual #45                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     165: pop
     166: goto          176
     169: aload_0
     170: iload_1
     171: iload_1
     172: invokevirtual #46                 // Method setIndex:(II)Lio/netty/buffer/ByteBuf;
     175: pop
     176: aload_0
     177: aload         6
     179: invokespecial #20                 // Method setByteBuffer:(Ljava/nio/ByteBuffer;)V
     182: aload_0
     183: areturn

  public io.netty.buffer.ByteBufAllocator alloc();
    Code:
       0: aload_0
       1: getfield      #18                 // Field alloc:Lio/netty/buffer/ByteBufAllocator;
       4: areturn

  public java.nio.ByteOrder order();
    Code:
       0: getstatic     #29                 // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
       3: areturn

  public boolean hasArray();
    Code:
       0: iconst_0
       1: ireturn

  public byte[] array();
    Code:
       0: new           #47                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #48                 // String direct buffer
       6: invokespecial #49                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public int arrayOffset();
    Code:
       0: new           #47                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #48                 // String direct buffer
       6: invokespecial #49                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public boolean hasMemoryAddress();
    Code:
       0: iconst_0
       1: ireturn

  public long memoryAddress();
    Code:
       0: new           #47                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #50                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public byte getByte(int);
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method ensureAccessible:()V
       4: aload_0
       5: iload_1
       6: invokevirtual #52                 // Method _getByte:(I)B
       9: ireturn

  protected byte _getByte(int);
    Code:
       0: aload_0
       1: getfield      #33                 // Field buffer:Ljava/nio/ByteBuffer;
       4: iload_1
       5: invokevirtual #53                 // Method java/nio/ByteBuffer.get:(I)B
       8: ireturn

  public short getShort(int);
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method ensureAccessible:()V
       4: aload_0
       5: iload_1
       6: invokevirtual #54                 // Method _getShort:(I)S
       9: ireturn

  protected short _getShort(int);
    Code:
       0: aload_0
       1: getfield      #33                 // Field buffer:Ljava/nio/ByteBuffer;
       4: iload_1
       5: invokevirtual #55                 // Method java/nio/ByteBuffer.getShort:(I)S
       8: ireturn

  protected short _getShortLE(int);
    Code:
       0: aload_0
       1: getfield      #33                 // Field buffer:Ljava/nio/ByteBuffer;
       4: iload_1
       5: invokevirtual #55                 // Method java/nio/ByteBuffer.getShort:(I)S
       8: invokestatic  #56                 // Method io/netty/buffer/ByteBufUtil.swapShort:(S)S
      11: ireturn

  public int getUnsignedMedium(int);
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method ensureAccessible:()V
       4: aload_0
       5: iload_1
       6: invokevirtual #57                 // Method _getUnsignedMedium:(I)I
       9: ireturn

  protected int _getUnsignedMedium(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #58                 // Method getByte:(I)B
       5: sipush        255
       8: iand
       9: bipush        16
      11: ishl
      12: aload_0
      13: iload_1
      14: iconst_1
      15: iadd
      16: invokevirtual #58                 // Method getByte:(I)B
      19: sipush        255
      22: iand
      23: bipush        8
      25: ishl
      26: ior
      27: aload_0
      28: iload_1
      29: iconst_2
      30: iadd
      31: invokevirtual #58                 // Method getByte:(I)B
      34: sipush        255
      37: iand
      38: ior
      39: ireturn

  protected int _getUnsignedMediumLE(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #58                 // Method getByte:(I)B
       5: sipush        255
       8: iand
       9: aload_0
      10: iload_1
      11: iconst_1
      12: iadd
      13: invokevirtual #58                 // Method getByte:(I)B
      16: sipush        255
      19: iand
      20: bipush        8
      22: ishl
      23: ior
      24: aload_0
      25: iload_1
      26: iconst_2
      27: iadd
      28: invokevirtual #58                 // Method getByte:(I)B
      31: sipush        255
      34: iand
      35: bipush        16
      37: ishl
      38: ior
      39: ireturn

  public int getInt(int);
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method ensureAccessible:()V
       4: aload_0
       5: iload_1
       6: invokevirtual #59                 // Method _getInt:(I)I
       9: ireturn

  protected int _getInt(int);
    Code:
       0: aload_0
       1: getfield      #33                 // Field buffer:Ljava/nio/ByteBuffer;
       4: iload_1
       5: invokevirtual #60                 // Method java/nio/ByteBuffer.getInt:(I)I
       8: ireturn

  protected int _getIntLE(int);
    Code:
       0: aload_0
       1: getfield      #33                 // Field buffer:Ljava/nio/ByteBuffer;
       4: iload_1
       5: invokevirtual #60                 // Method java/nio/ByteBuffer.getInt:(I)I
       8: invokestatic  #61                 // Method io/netty/buffer/ByteBufUtil.swapInt:(I)I
      11: ireturn

  public long getLong(int);
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method ensureAccessible:()V
       4: aload_0
       5: iload_1
       6: invokevirtual #62                 // Method _getLong:(I)J
       9: lreturn

  protected long _getLong(int);
    Code:
       0: aload_0
       1: getfield      #33                 // Field buffer:Ljava/nio/ByteBuffer;
       4: iload_1
       5: invokevirtual #63                 // Method java/nio/ByteBuffer.getLong:(I)J
       8: lreturn

  protected long _getLongLE(int);
    Code:
       0: aload_0
       1: getfield      #33                 // Field buffer:Ljava/nio/ByteBuffer;
       4: iload_1
       5: invokevirtual #63                 // Method java/nio/ByteBuffer.getLong:(I)J
       8: invokestatic  #64                 // Method io/netty/buffer/ByteBufUtil.swapLong:(J)J
      11: lreturn

  public io.netty.buffer.ByteBuf getBytes(int, io.netty.buffer.ByteBuf, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload         4
       4: iload_3
       5: aload_2
       6: invokevirtual #65                 // Method io/netty/buffer/ByteBuf.capacity:()I
       9: invokevirtual #66                 // Method checkDstIndex:(IIII)V
      12: aload_2
      13: invokevirtual #67                 // Method io/netty/buffer/ByteBuf.hasArray:()Z
      16: ifeq          40
      19: aload_0
      20: iload_1
      21: aload_2
      22: invokevirtual #68                 // Method io/netty/buffer/ByteBuf.array:()[B
      25: aload_2
      26: invokevirtual #69                 // Method io/netty/buffer/ByteBuf.arrayOffset:()I
      29: iload_3
      30: iadd
      31: iload         4
      33: invokevirtual #70                 // Method getBytes:(I[BII)Lio/netty/buffer/ByteBuf;
      36: pop
      37: goto          117
      40: aload_2
      41: invokevirtual #71                 // Method io/netty/buffer/ByteBuf.nioBufferCount:()I
      44: ifle          107
      47: aload_2
      48: iload_3
      49: iload         4
      51: invokevirtual #72                 // Method io/netty/buffer/ByteBuf.nioBuffers:(II)[Ljava/nio/ByteBuffer;
      54: astore        5
      56: aload         5
      58: arraylength
      59: istore        6
      61: iconst_0
      62: istore        7
      64: iload         7
      66: iload         6
      68: if_icmpge     104
      71: aload         5
      73: iload         7
      75: aaload
      76: astore        8
      78: aload         8
      80: invokevirtual #26                 // Method java/nio/ByteBuffer.remaining:()I
      83: istore        9
      85: aload_0
      86: iload_1
      87: aload         8
      89: invokevirtual #73                 // Method getBytes:(ILjava/nio/ByteBuffer;)Lio/netty/buffer/ByteBuf;
      92: pop
      93: iload_1
      94: iload         9
      96: iadd
      97: istore_1
      98: iinc          7, 1
     101: goto          64
     104: goto          117
     107: aload_2
     108: iload_3
     109: aload_0
     110: iload_1
     111: iload         4
     113: invokevirtual #74                 // Method io/netty/buffer/ByteBuf.setBytes:(ILio/netty/buffer/ByteBuf;II)Lio/netty/buffer/ByteBuf;
     116: pop
     117: aload_0
     118: areturn

  public io.netty.buffer.ByteBuf getBytes(int, byte[], int, int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: iload         4
       6: iconst_0
       7: invokespecial #75                 // Method getBytes:(I[BIIZ)V
      10: aload_0
      11: areturn

  private void getBytes(int, byte[], int, int, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: iload         4
       4: iload_3
       5: aload_2
       6: arraylength
       7: invokevirtual #66                 // Method checkDstIndex:(IIII)V
      10: iload         5
      12: ifeq          24
      15: aload_0
      16: invokespecial #76                 // Method internalNioBuffer:()Ljava/nio/ByteBuffer;
      19: astore        6
      21: goto          33
      24: aload_0
      25: getfield      #33                 // Field buffer:Ljava/nio/ByteBuffer;
      28: invokevirtual #77                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      31: astore        6
      33: aload         6
      35: invokevirtual #45                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      38: iload_1
      39: invokevirtual #78                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      42: iload_1
      43: iload         4
      45: iadd
      46: invokevirtual #43                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      49: pop
      50: aload         6
      52: aload_2
      53: iload_3
      54: iload         4
      56: invokevirtual #79                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
      59: pop
      60: return

  public io.netty.buffer.ByteBuf readBytes(byte[], int, int);
    Code:
       0: aload_0
       1: iload_3
       2: invokevirtual #80                 // Method checkReadableBytes:(I)V
       5: aload_0
       6: aload_0
       7: getfield      #81                 // Field readerIndex:I
      10: aload_1
      11: iload_2
      12: iload_3
      13: iconst_1
      14: invokespecial #75                 // Method getBytes:(I[BIIZ)V
      17: aload_0
      18: dup
      19: getfield      #81                 // Field readerIndex:I
      22: iload_3
      23: iadd
      24: putfield      #81                 // Field readerIndex:I
      27: aload_0
      28: areturn

  public io.netty.buffer.ByteBuf getBytes(int, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iconst_0
       4: invokespecial #82                 // Method getBytes:(ILjava/nio/ByteBuffer;Z)V
       7: aload_0
       8: areturn

  private void getBytes(int, java.nio.ByteBuffer, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokevirtual #26                 // Method java/nio/ByteBuffer.remaining:()I
       6: invokevirtual #83                 // Method checkIndex:(II)V
       9: iload_3
      10: ifeq          22
      13: aload_0
      14: invokespecial #76                 // Method internalNioBuffer:()Ljava/nio/ByteBuffer;
      17: astore        4
      19: goto          31
      22: aload_0
      23: getfield      #33                 // Field buffer:Ljava/nio/ByteBuffer;
      26: invokevirtual #77                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      29: astore        4
      31: aload         4
      33: invokevirtual #45                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      36: iload_1
      37: invokevirtual #78                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      40: iload_1
      41: aload_2
      42: invokevirtual #26                 // Method java/nio/ByteBuffer.remaining:()I
      45: iadd
      46: invokevirtual #43                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      49: pop
      50: aload_2
      51: aload         4
      53: invokevirtual #44                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      56: pop
      57: return

  public io.netty.buffer.ByteBuf readBytes(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: invokevirtual #26                 // Method java/nio/ByteBuffer.remaining:()I
       4: istore_2
       5: aload_0
       6: iload_2
       7: invokevirtual #80                 // Method checkReadableBytes:(I)V
      10: aload_0
      11: aload_0
      12: getfield      #81                 // Field readerIndex:I
      15: aload_1
      16: iconst_1
      17: invokespecial #82                 // Method getBytes:(ILjava/nio/ByteBuffer;Z)V
      20: aload_0
      21: dup
      22: getfield      #81                 // Field readerIndex:I
      25: iload_2
      26: iadd
      27: putfield      #81                 // Field readerIndex:I
      30: aload_0
      31: areturn

  public io.netty.buffer.ByteBuf setByte(int, int);
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method ensureAccessible:()V
       4: aload_0
       5: iload_1
       6: iload_2
       7: invokevirtual #84                 // Method _setByte:(II)V
      10: aload_0
      11: areturn

  protected void _setByte(int, int);
    Code:
       0: aload_0
       1: getfield      #33                 // Field buffer:Ljava/nio/ByteBuffer;
       4: iload_1
       5: iload_2
       6: i2b
       7: invokevirtual #85                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
      10: pop
      11: return

  public io.netty.buffer.ByteBuf setShort(int, int);
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method ensureAccessible:()V
       4: aload_0
       5: iload_1
       6: iload_2
       7: invokevirtual #86                 // Method _setShort:(II)V
      10: aload_0
      11: areturn

  protected void _setShort(int, int);
    Code:
       0: aload_0
       1: getfield      #33                 // Field buffer:Ljava/nio/ByteBuffer;
       4: iload_1
       5: iload_2
       6: i2s
       7: invokevirtual #87                 // Method java/nio/ByteBuffer.putShort:(IS)Ljava/nio/ByteBuffer;
      10: pop
      11: return

  protected void _setShortLE(int, int);
    Code:
       0: aload_0
       1: getfield      #33                 // Field buffer:Ljava/nio/ByteBuffer;
       4: iload_1
       5: iload_2
       6: i2s
       7: invokestatic  #56                 // Method io/netty/buffer/ByteBufUtil.swapShort:(S)S
      10: invokevirtual #87                 // Method java/nio/ByteBuffer.putShort:(IS)Ljava/nio/ByteBuffer;
      13: pop
      14: return

  public io.netty.buffer.ByteBuf setMedium(int, int);
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method ensureAccessible:()V
       4: aload_0
       5: iload_1
       6: iload_2
       7: invokevirtual #88                 // Method _setMedium:(II)V
      10: aload_0
      11: areturn

  protected void _setMedium(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: bipush        16
       5: iushr
       6: i2b
       7: invokevirtual #89                 // Method setByte:(II)Lio/netty/buffer/ByteBuf;
      10: pop
      11: aload_0
      12: iload_1
      13: iconst_1
      14: iadd
      15: iload_2
      16: bipush        8
      18: iushr
      19: i2b
      20: invokevirtual #89                 // Method setByte:(II)Lio/netty/buffer/ByteBuf;
      23: pop
      24: aload_0
      25: iload_1
      26: iconst_2
      27: iadd
      28: iload_2
      29: i2b
      30: invokevirtual #89                 // Method setByte:(II)Lio/netty/buffer/ByteBuf;
      33: pop
      34: return

  protected void _setMediumLE(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: i2b
       4: invokevirtual #89                 // Method setByte:(II)Lio/netty/buffer/ByteBuf;
       7: pop
       8: aload_0
       9: iload_1
      10: iconst_1
      11: iadd
      12: iload_2
      13: bipush        8
      15: iushr
      16: i2b
      17: invokevirtual #89                 // Method setByte:(II)Lio/netty/buffer/ByteBuf;
      20: pop
      21: aload_0
      22: iload_1
      23: iconst_2
      24: iadd
      25: iload_2
      26: bipush        16
      28: iushr
      29: i2b
      30: invokevirtual #89                 // Method setByte:(II)Lio/netty/buffer/ByteBuf;
      33: pop
      34: return

  public io.netty.buffer.ByteBuf setInt(int, int);
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method ensureAccessible:()V
       4: aload_0
       5: iload_1
       6: iload_2
       7: invokevirtual #90                 // Method _setInt:(II)V
      10: aload_0
      11: areturn

  protected void _setInt(int, int);
    Code:
       0: aload_0
       1: getfield      #33                 // Field buffer:Ljava/nio/ByteBuffer;
       4: iload_1
       5: iload_2
       6: invokevirtual #91                 // Method java/nio/ByteBuffer.putInt:(II)Ljava/nio/ByteBuffer;
       9: pop
      10: return

  protected void _setIntLE(int, int);
    Code:
       0: aload_0
       1: getfield      #33                 // Field buffer:Ljava/nio/ByteBuffer;
       4: iload_1
       5: iload_2
       6: invokestatic  #61                 // Method io/netty/buffer/ByteBufUtil.swapInt:(I)I
       9: invokevirtual #91                 // Method java/nio/ByteBuffer.putInt:(II)Ljava/nio/ByteBuffer;
      12: pop
      13: return

  public io.netty.buffer.ByteBuf setLong(int, long);
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method ensureAccessible:()V
       4: aload_0
       5: iload_1
       6: lload_2
       7: invokevirtual #92                 // Method _setLong:(IJ)V
      10: aload_0
      11: areturn

  protected void _setLong(int, long);
    Code:
       0: aload_0
       1: getfield      #33                 // Field buffer:Ljava/nio/ByteBuffer;
       4: iload_1
       5: lload_2
       6: invokevirtual #93                 // Method java/nio/ByteBuffer.putLong:(IJ)Ljava/nio/ByteBuffer;
       9: pop
      10: return

  protected void _setLongLE(int, long);
    Code:
       0: aload_0
       1: getfield      #33                 // Field buffer:Ljava/nio/ByteBuffer;
       4: iload_1
       5: lload_2
       6: invokestatic  #64                 // Method io/netty/buffer/ByteBufUtil.swapLong:(J)J
       9: invokevirtual #93                 // Method java/nio/ByteBuffer.putLong:(IJ)Ljava/nio/ByteBuffer;
      12: pop
      13: return

  public io.netty.buffer.ByteBuf setBytes(int, io.netty.buffer.ByteBuf, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload         4
       4: iload_3
       5: aload_2
       6: invokevirtual #65                 // Method io/netty/buffer/ByteBuf.capacity:()I
       9: invokevirtual #94                 // Method checkSrcIndex:(IIII)V
      12: aload_2
      13: invokevirtual #71                 // Method io/netty/buffer/ByteBuf.nioBufferCount:()I
      16: ifle          79
      19: aload_2
      20: iload_3
      21: iload         4
      23: invokevirtual #72                 // Method io/netty/buffer/ByteBuf.nioBuffers:(II)[Ljava/nio/ByteBuffer;
      26: astore        5
      28: aload         5
      30: arraylength
      31: istore        6
      33: iconst_0
      34: istore        7
      36: iload         7
      38: iload         6
      40: if_icmpge     76
      43: aload         5
      45: iload         7
      47: aaload
      48: astore        8
      50: aload         8
      52: invokevirtual #26                 // Method java/nio/ByteBuffer.remaining:()I
      55: istore        9
      57: aload_0
      58: iload_1
      59: aload         8
      61: invokevirtual #95                 // Method setBytes:(ILjava/nio/ByteBuffer;)Lio/netty/buffer/ByteBuf;
      64: pop
      65: iload_1
      66: iload         9
      68: iadd
      69: istore_1
      70: iinc          7, 1
      73: goto          36
      76: goto          89
      79: aload_2
      80: iload_3
      81: aload_0
      82: iload_1
      83: iload         4
      85: invokevirtual #96                 // Method io/netty/buffer/ByteBuf.getBytes:(ILio/netty/buffer/ByteBuf;II)Lio/netty/buffer/ByteBuf;
      88: pop
      89: aload_0
      90: areturn

  public io.netty.buffer.ByteBuf setBytes(int, byte[], int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload         4
       4: iload_3
       5: aload_2
       6: arraylength
       7: invokevirtual #94                 // Method checkSrcIndex:(IIII)V
      10: aload_0
      11: invokespecial #76                 // Method internalNioBuffer:()Ljava/nio/ByteBuffer;
      14: astore        5
      16: aload         5
      18: invokevirtual #45                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      21: iload_1
      22: invokevirtual #78                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      25: iload_1
      26: iload         4
      28: iadd
      29: invokevirtual #43                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      32: pop
      33: aload         5
      35: aload_2
      36: iload_3
      37: iload         4
      39: invokevirtual #97                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      42: pop
      43: aload_0
      44: areturn

  public io.netty.buffer.ByteBuf setBytes(int, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method ensureAccessible:()V
       4: aload_0
       5: invokespecial #76                 // Method internalNioBuffer:()Ljava/nio/ByteBuffer;
       8: astore_3
       9: aload_2
      10: aload_3
      11: if_acmpne     19
      14: aload_2
      15: invokevirtual #77                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      18: astore_2
      19: aload_3
      20: invokevirtual #45                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      23: iload_1
      24: invokevirtual #78                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      27: iload_1
      28: aload_2
      29: invokevirtual #26                 // Method java/nio/ByteBuffer.remaining:()I
      32: iadd
      33: invokevirtual #43                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      36: pop
      37: aload_3
      38: aload_2
      39: invokevirtual #44                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      42: pop
      43: aload_0
      44: areturn

  public io.netty.buffer.ByteBuf getBytes(int, java.io.OutputStream, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: iconst_0
       5: invokespecial #98                 // Method getBytes:(ILjava/io/OutputStream;IZ)V
       8: aload_0
       9: areturn

  private void getBytes(int, java.io.OutputStream, int, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method ensureAccessible:()V
       4: iload_3
       5: ifne          9
       8: return
       9: aload_0
      10: getfield      #33                 // Field buffer:Ljava/nio/ByteBuffer;
      13: invokevirtual #99                 // Method java/nio/ByteBuffer.hasArray:()Z
      16: ifeq          43
      19: aload_2
      20: aload_0
      21: getfield      #33                 // Field buffer:Ljava/nio/ByteBuffer;
      24: invokevirtual #100                // Method java/nio/ByteBuffer.array:()[B
      27: iload_1
      28: aload_0
      29: getfield      #33                 // Field buffer:Ljava/nio/ByteBuffer;
      32: invokevirtual #101                // Method java/nio/ByteBuffer.arrayOffset:()I
      35: iadd
      36: iload_3
      37: invokevirtual #102                // Method java/io/OutputStream.write:([BII)V
      40: goto          95
      43: iload_3
      44: newarray       byte
      46: astore        5
      48: iload         4
      50: ifeq          62
      53: aload_0
      54: invokespecial #76                 // Method internalNioBuffer:()Ljava/nio/ByteBuffer;
      57: astore        6
      59: goto          71
      62: aload_0
      63: getfield      #33                 // Field buffer:Ljava/nio/ByteBuffer;
      66: invokevirtual #77                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      69: astore        6
      71: aload         6
      73: invokevirtual #45                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      76: iload_1
      77: invokevirtual #78                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      80: pop
      81: aload         6
      83: aload         5
      85: invokevirtual #103                // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
      88: pop
      89: aload_2
      90: aload         5
      92: invokevirtual #104                // Method java/io/OutputStream.write:([B)V
      95: return

  public io.netty.buffer.ByteBuf readBytes(java.io.OutputStream, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_2
       2: invokevirtual #80                 // Method checkReadableBytes:(I)V
       5: aload_0
       6: aload_0
       7: getfield      #81                 // Field readerIndex:I
      10: aload_1
      11: iload_2
      12: iconst_1
      13: invokespecial #98                 // Method getBytes:(ILjava/io/OutputStream;IZ)V
      16: aload_0
      17: dup
      18: getfield      #81                 // Field readerIndex:I
      21: iload_2
      22: iadd
      23: putfield      #81                 // Field readerIndex:I
      26: aload_0
      27: areturn

  public int getBytes(int, java.nio.channels.GatheringByteChannel, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: iconst_0
       5: invokespecial #105                // Method getBytes:(ILjava/nio/channels/GatheringByteChannel;IZ)I
       8: ireturn

  private int getBytes(int, java.nio.channels.GatheringByteChannel, int, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method ensureAccessible:()V
       4: iload_3
       5: ifne          10
       8: iconst_0
       9: ireturn
      10: iload         4
      12: ifeq          24
      15: aload_0
      16: invokespecial #76                 // Method internalNioBuffer:()Ljava/nio/ByteBuffer;
      19: astore        5
      21: goto          33
      24: aload_0
      25: getfield      #33                 // Field buffer:Ljava/nio/ByteBuffer;
      28: invokevirtual #77                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      31: astore        5
      33: aload         5
      35: invokevirtual #45                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      38: iload_1
      39: invokevirtual #78                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      42: iload_1
      43: iload_3
      44: iadd
      45: invokevirtual #43                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      48: pop
      49: aload_2
      50: aload         5
      52: invokeinterface #106,  2          // InterfaceMethod java/nio/channels/GatheringByteChannel.write:(Ljava/nio/ByteBuffer;)I
      57: ireturn

  public int getBytes(int, java.nio.channels.FileChannel, long, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: lload_3
       4: iload         5
       6: iconst_0
       7: invokespecial #107                // Method getBytes:(ILjava/nio/channels/FileChannel;JIZ)I
      10: ireturn

  private int getBytes(int, java.nio.channels.FileChannel, long, int, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method ensureAccessible:()V
       4: iload         5
       6: ifne          11
       9: iconst_0
      10: ireturn
      11: iload         6
      13: ifeq          23
      16: aload_0
      17: invokespecial #76                 // Method internalNioBuffer:()Ljava/nio/ByteBuffer;
      20: goto          30
      23: aload_0
      24: getfield      #33                 // Field buffer:Ljava/nio/ByteBuffer;
      27: invokevirtual #77                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      30: astore        7
      32: aload         7
      34: invokevirtual #45                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      37: iload_1
      38: invokevirtual #78                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      41: iload_1
      42: iload         5
      44: iadd
      45: invokevirtual #43                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      48: pop
      49: aload_2
      50: aload         7
      52: lload_3
      53: invokevirtual #108                // Method java/nio/channels/FileChannel.write:(Ljava/nio/ByteBuffer;J)I
      56: ireturn

  public int readBytes(java.nio.channels.GatheringByteChannel, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_2
       2: invokevirtual #80                 // Method checkReadableBytes:(I)V
       5: aload_0
       6: aload_0
       7: getfield      #81                 // Field readerIndex:I
      10: aload_1
      11: iload_2
      12: iconst_1
      13: invokespecial #105                // Method getBytes:(ILjava/nio/channels/GatheringByteChannel;IZ)I
      16: istore_3
      17: aload_0
      18: dup
      19: getfield      #81                 // Field readerIndex:I
      22: iload_3
      23: iadd
      24: putfield      #81                 // Field readerIndex:I
      27: iload_3
      28: ireturn

  public int readBytes(java.nio.channels.FileChannel, long, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload         4
       3: invokevirtual #80                 // Method checkReadableBytes:(I)V
       6: aload_0
       7: aload_0
       8: getfield      #81                 // Field readerIndex:I
      11: aload_1
      12: lload_2
      13: iload         4
      15: iconst_1
      16: invokespecial #107                // Method getBytes:(ILjava/nio/channels/FileChannel;JIZ)I
      19: istore        5
      21: aload_0
      22: dup
      23: getfield      #81                 // Field readerIndex:I
      26: iload         5
      28: iadd
      29: putfield      #81                 // Field readerIndex:I
      32: iload         5
      34: ireturn

  public int setBytes(int, java.io.InputStream, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method ensureAccessible:()V
       4: aload_0
       5: getfield      #33                 // Field buffer:Ljava/nio/ByteBuffer;
       8: invokevirtual #99                 // Method java/nio/ByteBuffer.hasArray:()Z
      11: ifeq          36
      14: aload_2
      15: aload_0
      16: getfield      #33                 // Field buffer:Ljava/nio/ByteBuffer;
      19: invokevirtual #100                // Method java/nio/ByteBuffer.array:()[B
      22: aload_0
      23: getfield      #33                 // Field buffer:Ljava/nio/ByteBuffer;
      26: invokevirtual #101                // Method java/nio/ByteBuffer.arrayOffset:()I
      29: iload_1
      30: iadd
      31: iload_3
      32: invokevirtual #109                // Method java/io/InputStream.read:([BII)I
      35: ireturn
      36: iload_3
      37: newarray       byte
      39: astore        4
      41: aload_2
      42: aload         4
      44: invokevirtual #110                // Method java/io/InputStream.read:([B)I
      47: istore        5
      49: iload         5
      51: ifgt          57
      54: iload         5
      56: ireturn
      57: aload_0
      58: invokespecial #76                 // Method internalNioBuffer:()Ljava/nio/ByteBuffer;
      61: astore        6
      63: aload         6
      65: invokevirtual #45                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      68: iload_1
      69: invokevirtual #78                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      72: pop
      73: aload         6
      75: aload         4
      77: iconst_0
      78: iload         5
      80: invokevirtual #97                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      83: pop
      84: iload         5
      86: ireturn

  public int setBytes(int, java.nio.channels.ScatteringByteChannel, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method ensureAccessible:()V
       4: aload_0
       5: invokespecial #76                 // Method internalNioBuffer:()Ljava/nio/ByteBuffer;
       8: astore        4
      10: aload         4
      12: invokevirtual #45                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      15: iload_1
      16: invokevirtual #78                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      19: iload_1
      20: iload_3
      21: iadd
      22: invokevirtual #43                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      25: pop
      26: aload_2
      27: aload_0
      28: getfield      #35                 // Field tmpNioBuf:Ljava/nio/ByteBuffer;
      31: invokeinterface #111,  2          // InterfaceMethod java/nio/channels/ScatteringByteChannel.read:(Ljava/nio/ByteBuffer;)I
      36: ireturn
      37: astore        5
      39: iconst_m1
      40: ireturn
    Exception table:
       from    to  target type
          26    36    37   Class java/nio/channels/ClosedChannelException

  public int setBytes(int, java.nio.channels.FileChannel, long, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method ensureAccessible:()V
       4: aload_0
       5: invokespecial #76                 // Method internalNioBuffer:()Ljava/nio/ByteBuffer;
       8: astore        6
      10: aload         6
      12: invokevirtual #45                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      15: iload_1
      16: invokevirtual #78                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      19: iload_1
      20: iload         5
      22: iadd
      23: invokevirtual #43                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      26: pop
      27: aload_2
      28: aload_0
      29: getfield      #35                 // Field tmpNioBuf:Ljava/nio/ByteBuffer;
      32: lload_3
      33: invokevirtual #113                // Method java/nio/channels/FileChannel.read:(Ljava/nio/ByteBuffer;J)I
      36: ireturn
      37: astore        7
      39: iconst_m1
      40: ireturn
    Exception table:
       from    to  target type
          27    36    37   Class java/nio/channels/ClosedChannelException

  public int nioBufferCount();
    Code:
       0: iconst_1
       1: ireturn

  public java.nio.ByteBuffer[] nioBuffers(int, int);
    Code:
       0: iconst_1
       1: anewarray     #114                // class java/nio/ByteBuffer
       4: dup
       5: iconst_0
       6: aload_0
       7: iload_1
       8: iload_2
       9: invokevirtual #115                // Method nioBuffer:(II)Ljava/nio/ByteBuffer;
      12: aastore
      13: areturn

  public io.netty.buffer.ByteBuf copy(int, int);
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method ensureAccessible:()V
       4: aload_0
       5: getfield      #33                 // Field buffer:Ljava/nio/ByteBuffer;
       8: invokevirtual #77                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      11: invokevirtual #45                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      14: iload_1
      15: invokevirtual #78                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      18: iload_1
      19: iload_2
      20: iadd
      21: invokevirtual #43                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      24: checkcast     #114                // class java/nio/ByteBuffer
      27: astore_3
      28: goto          62
      31: astore        4
      33: new           #116                // class java/lang/IndexOutOfBoundsException
      36: dup
      37: new           #6                  // class java/lang/StringBuilder
      40: dup
      41: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      44: ldc           #117                // String Too many bytes to read - Need
      46: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: iload_1
      50: iload_2
      51: iadd
      52: invokevirtual #10                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      55: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      58: invokespecial #118                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      61: athrow
      62: aload_0
      63: invokevirtual #119                // Method alloc:()Lio/netty/buffer/ByteBufAllocator;
      66: iload_2
      67: aload_0
      68: invokevirtual #120                // Method maxCapacity:()I
      71: invokeinterface #121,  3          // InterfaceMethod io/netty/buffer/ByteBufAllocator.directBuffer:(II)Lio/netty/buffer/ByteBuf;
      76: aload_3
      77: invokevirtual #122                // Method io/netty/buffer/ByteBuf.writeBytes:(Ljava/nio/ByteBuffer;)Lio/netty/buffer/ByteBuf;
      80: areturn
    Exception table:
       from    to  target type
           4    28    31   Class java/lang/IllegalArgumentException

  public java.nio.ByteBuffer internalNioBuffer(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #83                 // Method checkIndex:(II)V
       6: aload_0
       7: invokespecial #76                 // Method internalNioBuffer:()Ljava/nio/ByteBuffer;
      10: invokevirtual #45                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      13: iload_1
      14: invokevirtual #78                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      17: iload_1
      18: iload_2
      19: iadd
      20: invokevirtual #43                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      23: checkcast     #114                // class java/nio/ByteBuffer
      26: areturn

  private java.nio.ByteBuffer internalNioBuffer();
    Code:
       0: aload_0
       1: getfield      #35                 // Field tmpNioBuf:Ljava/nio/ByteBuffer;
       4: astore_1
       5: aload_1
       6: ifnonnull     22
       9: aload_0
      10: aload_0
      11: getfield      #33                 // Field buffer:Ljava/nio/ByteBuffer;
      14: invokevirtual #77                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      17: dup
      18: astore_1
      19: putfield      #35                 // Field tmpNioBuf:Ljava/nio/ByteBuffer;
      22: aload_1
      23: areturn

  public java.nio.ByteBuffer nioBuffer(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #83                 // Method checkIndex:(II)V
       6: aload_0
       7: getfield      #33                 // Field buffer:Ljava/nio/ByteBuffer;
      10: invokevirtual #77                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      13: iload_1
      14: invokevirtual #41                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      17: iload_1
      18: iload_2
      19: iadd
      20: invokevirtual #43                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      23: checkcast     #114                // class java/nio/ByteBuffer
      26: invokevirtual #28                 // Method java/nio/ByteBuffer.slice:()Ljava/nio/ByteBuffer;
      29: areturn

  protected void deallocate();
    Code:
       0: aload_0
       1: getfield      #33                 // Field buffer:Ljava/nio/ByteBuffer;
       4: astore_1
       5: aload_1
       6: ifnonnull     10
       9: return
      10: aload_0
      11: aconst_null
      12: putfield      #33                 // Field buffer:Ljava/nio/ByteBuffer;
      15: aload_0
      16: getfield      #27                 // Field doNotFree:Z
      19: ifne          27
      22: aload_0
      23: aload_1
      24: invokevirtual #34                 // Method freeDirect:(Ljava/nio/ByteBuffer;)V
      27: return

  public io.netty.buffer.ByteBuf unwrap();
    Code:
       0: aconst_null
       1: areturn
}
