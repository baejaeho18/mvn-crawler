Compiled from "ByteBufInputStream.java"
public class io.netty.buffer.ByteBufInputStream extends java.io.InputStream implements java.io.DataInput {
  private final io.netty.buffer.ByteBuf buffer;

  private final int startIndex;

  private final int endIndex;

  private boolean closed;

  private final boolean releaseOnClose;

  private final java.lang.StringBuilder lineBuf;

  public io.netty.buffer.ByteBufInputStream(io.netty.buffer.ByteBuf);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokevirtual #1                  // Method io/netty/buffer/ByteBuf.readableBytes:()I
       6: invokespecial #2                  // Method "<init>":(Lio/netty/buffer/ByteBuf;I)V
       9: return

  public io.netty.buffer.ByteBufInputStream(io.netty.buffer.ByteBuf, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iconst_0
       4: invokespecial #3                  // Method "<init>":(Lio/netty/buffer/ByteBuf;IZ)V
       7: return

  public io.netty.buffer.ByteBufInputStream(io.netty.buffer.ByteBuf, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokevirtual #1                  // Method io/netty/buffer/ByteBuf.readableBytes:()I
       6: iload_2
       7: invokespecial #3                  // Method "<init>":(Lio/netty/buffer/ByteBuf;IZ)V
      10: return

  public io.netty.buffer.ByteBufInputStream(io.netty.buffer.ByteBuf, int, boolean);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: new           #5                  // class java/lang/StringBuilder
       8: dup
       9: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      12: putfield      #7                  // Field lineBuf:Ljava/lang/StringBuilder;
      15: aload_1
      16: ifnonnull     29
      19: new           #8                  // class java/lang/NullPointerException
      22: dup
      23: ldc           #9                  // String buffer
      25: invokespecial #10                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: iload_2
      30: ifge          69
      33: iload_3
      34: ifeq          42
      37: aload_1
      38: invokevirtual #11                 // Method io/netty/buffer/ByteBuf.release:()Z
      41: pop
      42: new           #12                 // class java/lang/IllegalArgumentException
      45: dup
      46: new           #5                  // class java/lang/StringBuilder
      49: dup
      50: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      53: ldc           #13                 // String length:
      55: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: iload_2
      59: invokevirtual #15                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      62: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      68: athrow
      69: iload_2
      70: aload_1
      71: invokevirtual #1                  // Method io/netty/buffer/ByteBuf.readableBytes:()I
      74: if_icmple     125
      77: iload_3
      78: ifeq          86
      81: aload_1
      82: invokevirtual #11                 // Method io/netty/buffer/ByteBuf.release:()Z
      85: pop
      86: new           #18                 // class java/lang/IndexOutOfBoundsException
      89: dup
      90: new           #5                  // class java/lang/StringBuilder
      93: dup
      94: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      97: ldc           #19                 // String Too many bytes to be read - Needs
      99: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: iload_2
     103: invokevirtual #15                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     106: ldc           #20                 // String , maximum is
     108: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: aload_1
     112: invokevirtual #1                  // Method io/netty/buffer/ByteBuf.readableBytes:()I
     115: invokevirtual #15                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     118: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     121: invokespecial #21                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
     124: athrow
     125: aload_0
     126: iload_3
     127: putfield      #22                 // Field releaseOnClose:Z
     130: aload_0
     131: aload_1
     132: putfield      #23                 // Field buffer:Lio/netty/buffer/ByteBuf;
     135: aload_0
     136: aload_1
     137: invokevirtual #24                 // Method io/netty/buffer/ByteBuf.readerIndex:()I
     140: putfield      #25                 // Field startIndex:I
     143: aload_0
     144: aload_0
     145: getfield      #25                 // Field startIndex:I
     148: iload_2
     149: iadd
     150: putfield      #26                 // Field endIndex:I
     153: aload_1
     154: invokevirtual #27                 // Method io/netty/buffer/ByteBuf.markReaderIndex:()Lio/netty/buffer/ByteBuf;
     157: pop
     158: return

  public int readBytes();
    Code:
       0: aload_0
       1: getfield      #23                 // Field buffer:Lio/netty/buffer/ByteBuf;
       4: invokevirtual #24                 // Method io/netty/buffer/ByteBuf.readerIndex:()I
       7: aload_0
       8: getfield      #25                 // Field startIndex:I
      11: isub
      12: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #28                 // Method java/io/InputStream.close:()V
       4: aload_0
       5: getfield      #22                 // Field releaseOnClose:Z
       8: ifeq          64
      11: aload_0
      12: getfield      #29                 // Field closed:Z
      15: ifne          64
      18: aload_0
      19: iconst_1
      20: putfield      #29                 // Field closed:Z
      23: aload_0
      24: getfield      #23                 // Field buffer:Lio/netty/buffer/ByteBuf;
      27: invokevirtual #11                 // Method io/netty/buffer/ByteBuf.release:()Z
      30: pop
      31: goto          64
      34: astore_1
      35: aload_0
      36: getfield      #22                 // Field releaseOnClose:Z
      39: ifeq          62
      42: aload_0
      43: getfield      #29                 // Field closed:Z
      46: ifne          62
      49: aload_0
      50: iconst_1
      51: putfield      #29                 // Field closed:Z
      54: aload_0
      55: getfield      #23                 // Field buffer:Lio/netty/buffer/ByteBuf;
      58: invokevirtual #11                 // Method io/netty/buffer/ByteBuf.release:()Z
      61: pop
      62: aload_1
      63: athrow
      64: return
    Exception table:
       from    to  target type
           0     4    34   any

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #26                 // Field endIndex:I
       4: aload_0
       5: getfield      #23                 // Field buffer:Lio/netty/buffer/ByteBuf;
       8: invokevirtual #24                 // Method io/netty/buffer/ByteBuf.readerIndex:()I
      11: isub
      12: ireturn

  public void mark(int);
    Code:
       0: aload_0
       1: getfield      #23                 // Field buffer:Lio/netty/buffer/ByteBuf;
       4: invokevirtual #27                 // Method io/netty/buffer/ByteBuf.markReaderIndex:()Lio/netty/buffer/ByteBuf;
       7: pop
       8: return

  public boolean markSupported();
    Code:
       0: iconst_1
       1: ireturn

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field buffer:Lio/netty/buffer/ByteBuf;
       4: invokevirtual #30                 // Method io/netty/buffer/ByteBuf.isReadable:()Z
       7: ifne          12
      10: iconst_m1
      11: ireturn
      12: aload_0
      13: getfield      #23                 // Field buffer:Lio/netty/buffer/ByteBuf;
      16: invokevirtual #31                 // Method io/netty/buffer/ByteBuf.readByte:()B
      19: sipush        255
      22: iand
      23: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method available:()I
       4: istore        4
       6: iload         4
       8: ifne          13
      11: iconst_m1
      12: ireturn
      13: iload         4
      15: iload_3
      16: invokestatic  #33                 // Method java/lang/Math.min:(II)I
      19: istore_3
      20: aload_0
      21: getfield      #23                 // Field buffer:Lio/netty/buffer/ByteBuf;
      24: aload_1
      25: iload_2
      26: iload_3
      27: invokevirtual #34                 // Method io/netty/buffer/ByteBuf.readBytes:([BII)Lio/netty/buffer/ByteBuf;
      30: pop
      31: iload_3
      32: ireturn

  public void reset() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field buffer:Lio/netty/buffer/ByteBuf;
       4: invokevirtual #35                 // Method io/netty/buffer/ByteBuf.resetReaderIndex:()Lio/netty/buffer/ByteBuf;
       7: pop
       8: return

  public long skip(long) throws java.io.IOException;
    Code:
       0: lload_1
       1: ldc2_w        #37                 // long 2147483647l
       4: lcmp
       5: ifle          16
       8: aload_0
       9: ldc           #39                 // int 2147483647
      11: invokevirtual #40                 // Method skipBytes:(I)I
      14: i2l
      15: lreturn
      16: aload_0
      17: lload_1
      18: l2i
      19: invokevirtual #40                 // Method skipBytes:(I)I
      22: i2l
      23: lreturn

  public boolean readBoolean() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #41                 // Method checkAvailable:(I)V
       5: aload_0
       6: invokevirtual #42                 // Method read:()I
       9: ifeq          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public byte readByte() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field buffer:Lio/netty/buffer/ByteBuf;
       4: invokevirtual #30                 // Method io/netty/buffer/ByteBuf.isReadable:()Z
       7: ifne          18
      10: new           #43                 // class java/io/EOFException
      13: dup
      14: invokespecial #44                 // Method java/io/EOFException."<init>":()V
      17: athrow
      18: aload_0
      19: getfield      #23                 // Field buffer:Lio/netty/buffer/ByteBuf;
      22: invokevirtual #31                 // Method io/netty/buffer/ByteBuf.readByte:()B
      25: ireturn

  public char readChar() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method readShort:()S
       4: i2c
       5: ireturn

  public double readDouble() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method readLong:()J
       4: invokestatic  #47                 // Method java/lang/Double.longBitsToDouble:(J)D
       7: dreturn

  public float readFloat() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method readInt:()I
       4: invokestatic  #49                 // Method java/lang/Float.intBitsToFloat:(I)F
       7: freturn

  public void readFully(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #50                 // Method readFully:([BII)V
       8: return

  public void readFully(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_3
       2: invokespecial #41                 // Method checkAvailable:(I)V
       5: aload_0
       6: getfield      #23                 // Field buffer:Lio/netty/buffer/ByteBuf;
       9: aload_1
      10: iload_2
      11: iload_3
      12: invokevirtual #34                 // Method io/netty/buffer/ByteBuf.readBytes:([BII)Lio/netty/buffer/ByteBuf;
      15: pop
      16: return

  public int readInt() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_4
       2: invokespecial #41                 // Method checkAvailable:(I)V
       5: aload_0
       6: getfield      #23                 // Field buffer:Lio/netty/buffer/ByteBuf;
       9: invokevirtual #51                 // Method io/netty/buffer/ByteBuf.readInt:()I
      12: ireturn

  public java.lang.String readLine() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field lineBuf:Ljava/lang/StringBuilder;
       4: iconst_0
       5: invokevirtual #52                 // Method java/lang/StringBuilder.setLength:(I)V
       8: aload_0
       9: getfield      #23                 // Field buffer:Lio/netty/buffer/ByteBuf;
      12: invokevirtual #30                 // Method io/netty/buffer/ByteBuf.isReadable:()Z
      15: ifne          40
      18: aload_0
      19: getfield      #7                  // Field lineBuf:Ljava/lang/StringBuilder;
      22: invokevirtual #53                 // Method java/lang/StringBuilder.length:()I
      25: ifle          38
      28: aload_0
      29: getfield      #7                  // Field lineBuf:Ljava/lang/StringBuilder;
      32: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: goto          39
      38: aconst_null
      39: areturn
      40: aload_0
      41: getfield      #23                 // Field buffer:Lio/netty/buffer/ByteBuf;
      44: invokevirtual #54                 // Method io/netty/buffer/ByteBuf.readUnsignedByte:()S
      47: istore_1
      48: iload_1
      49: lookupswitch  { // 2
                    10: 76
                    13: 79
               default: 121
          }
      76: goto          134
      79: aload_0
      80: getfield      #23                 // Field buffer:Lio/netty/buffer/ByteBuf;
      83: invokevirtual #30                 // Method io/netty/buffer/ByteBuf.isReadable:()Z
      86: ifeq          134
      89: aload_0
      90: getfield      #23                 // Field buffer:Lio/netty/buffer/ByteBuf;
      93: aload_0
      94: getfield      #23                 // Field buffer:Lio/netty/buffer/ByteBuf;
      97: invokevirtual #24                 // Method io/netty/buffer/ByteBuf.readerIndex:()I
     100: invokevirtual #55                 // Method io/netty/buffer/ByteBuf.getUnsignedByte:(I)S
     103: i2c
     104: bipush        10
     106: if_icmpne     134
     109: aload_0
     110: getfield      #23                 // Field buffer:Lio/netty/buffer/ByteBuf;
     113: iconst_1
     114: invokevirtual #56                 // Method io/netty/buffer/ByteBuf.skipBytes:(I)Lio/netty/buffer/ByteBuf;
     117: pop
     118: goto          134
     121: aload_0
     122: getfield      #7                  // Field lineBuf:Ljava/lang/StringBuilder;
     125: iload_1
     126: i2c
     127: invokevirtual #57                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     130: pop
     131: goto          8
     134: aload_0
     135: getfield      #7                  // Field lineBuf:Ljava/lang/StringBuilder;
     138: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     141: areturn

  public long readLong() throws java.io.IOException;
    Code:
       0: aload_0
       1: bipush        8
       3: invokespecial #41                 // Method checkAvailable:(I)V
       6: aload_0
       7: getfield      #23                 // Field buffer:Lio/netty/buffer/ByteBuf;
      10: invokevirtual #58                 // Method io/netty/buffer/ByteBuf.readLong:()J
      13: lreturn

  public short readShort() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_2
       2: invokespecial #41                 // Method checkAvailable:(I)V
       5: aload_0
       6: getfield      #23                 // Field buffer:Lio/netty/buffer/ByteBuf;
       9: invokevirtual #59                 // Method io/netty/buffer/ByteBuf.readShort:()S
      12: ireturn

  public java.lang.String readUTF() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #60                 // Method java/io/DataInputStream.readUTF:(Ljava/io/DataInput;)Ljava/lang/String;
       4: areturn

  public int readUnsignedByte() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #61                 // Method readByte:()B
       4: sipush        255
       7: iand
       8: ireturn

  public int readUnsignedShort() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method readShort:()S
       4: ldc           #62                 // int 65535
       6: iand
       7: ireturn

  public int skipBytes(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method available:()I
       4: iload_1
       5: invokestatic  #33                 // Method java/lang/Math.min:(II)I
       8: istore_2
       9: aload_0
      10: getfield      #23                 // Field buffer:Lio/netty/buffer/ByteBuf;
      13: iload_2
      14: invokevirtual #56                 // Method io/netty/buffer/ByteBuf.skipBytes:(I)Lio/netty/buffer/ByteBuf;
      17: pop
      18: iload_2
      19: ireturn

  private void checkAvailable(int) throws java.io.IOException;
    Code:
       0: iload_1
       1: ifge          14
       4: new           #18                 // class java/lang/IndexOutOfBoundsException
       7: dup
       8: ldc           #63                 // String fieldSize cannot be a negative number
      10: invokespecial #21                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: iload_1
      15: aload_0
      16: invokevirtual #32                 // Method available:()I
      19: if_icmple     61
      22: new           #43                 // class java/io/EOFException
      25: dup
      26: new           #5                  // class java/lang/StringBuilder
      29: dup
      30: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #64                 // String fieldSize is too long! Length is
      35: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: iload_1
      39: invokevirtual #15                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      42: ldc           #65                 // String , but maximum is
      44: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: aload_0
      48: invokevirtual #32                 // Method available:()I
      51: invokevirtual #15                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      54: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: invokespecial #66                 // Method java/io/EOFException."<init>":(Ljava/lang/String;)V
      60: athrow
      61: return
}
