Compiled from "PooledByteBuf.java"
abstract class io.netty.buffer.PooledByteBuf<T> extends io.netty.buffer.AbstractReferenceCountedByteBuf {
  private final io.netty.util.Recycler$Handle<io.netty.buffer.PooledByteBuf<T>> recyclerHandle;

  protected io.netty.buffer.PoolChunk<T> chunk;

  protected long handle;

  protected T memory;

  protected int offset;

  protected int length;

  int maxLength;

  io.netty.buffer.PoolThreadCache cache;

  private java.nio.ByteBuffer tmpNioBuf;

  private io.netty.buffer.ByteBufAllocator allocator;

  static final boolean $assertionsDisabled;

  protected io.netty.buffer.PooledByteBuf(io.netty.util.Recycler$Handle<? extends io.netty.buffer.PooledByteBuf<T>>, int);
    Code:
       0: aload_0
       1: iload_2
       2: invokespecial #1                  // Method io/netty/buffer/AbstractReferenceCountedByteBuf."<init>":(I)V
       5: aload_0
       6: aload_1
       7: putfield      #2                  // Field recyclerHandle:Lio/netty/util/Recycler$Handle;
      10: return

  void init(io.netty.buffer.PoolChunk<T>, long, int, int, int, io.netty.buffer.PoolThreadCache);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: iload         4
       5: iload         5
       7: iload         6
       9: aload         7
      11: invokespecial #3                  // Method init0:(Lio/netty/buffer/PoolChunk;JIIILio/netty/buffer/PoolThreadCache;)V
      14: return

  void initUnpooled(io.netty.buffer.PoolChunk<T>, int);
    Code:
       0: aload_0
       1: aload_1
       2: lconst_0
       3: aload_1
       4: getfield      #4                  // Field io/netty/buffer/PoolChunk.offset:I
       7: iload_2
       8: iload_2
       9: aconst_null
      10: invokespecial #3                  // Method init0:(Lio/netty/buffer/PoolChunk;JIIILio/netty/buffer/PoolThreadCache;)V
      13: return

  private void init0(io.netty.buffer.PoolChunk<T>, long, int, int, int, io.netty.buffer.PoolThreadCache);
    Code:
       0: getstatic     #5                  // Field $assertionsDisabled:Z
       3: ifne          20
       6: lload_2
       7: lconst_0
       8: lcmp
       9: ifge          20
      12: new           #6                  // class java/lang/AssertionError
      15: dup
      16: invokespecial #7                  // Method java/lang/AssertionError."<init>":()V
      19: athrow
      20: getstatic     #5                  // Field $assertionsDisabled:Z
      23: ifne          38
      26: aload_1
      27: ifnonnull     38
      30: new           #6                  // class java/lang/AssertionError
      33: dup
      34: invokespecial #7                  // Method java/lang/AssertionError."<init>":()V
      37: athrow
      38: aload_0
      39: aload_1
      40: putfield      #8                  // Field chunk:Lio/netty/buffer/PoolChunk;
      43: aload_0
      44: aload_1
      45: getfield      #9                  // Field io/netty/buffer/PoolChunk.memory:Ljava/lang/Object;
      48: putfield      #10                 // Field memory:Ljava/lang/Object;
      51: aload_0
      52: aload_1
      53: getfield      #11                 // Field io/netty/buffer/PoolChunk.arena:Lio/netty/buffer/PoolArena;
      56: getfield      #12                 // Field io/netty/buffer/PoolArena.parent:Lio/netty/buffer/PooledByteBufAllocator;
      59: putfield      #13                 // Field allocator:Lio/netty/buffer/ByteBufAllocator;
      62: aload_0
      63: aload         7
      65: putfield      #14                 // Field cache:Lio/netty/buffer/PoolThreadCache;
      68: aload_0
      69: lload_2
      70: putfield      #15                 // Field handle:J
      73: aload_0
      74: iload         4
      76: putfield      #16                 // Field offset:I
      79: aload_0
      80: iload         5
      82: putfield      #17                 // Field length:I
      85: aload_0
      86: iload         6
      88: putfield      #18                 // Field maxLength:I
      91: aload_0
      92: aconst_null
      93: putfield      #19                 // Field tmpNioBuf:Ljava/nio/ByteBuffer;
      96: return

  final void reuse(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #20                 // Method maxCapacity:(I)V
       5: aload_0
       6: iconst_1
       7: invokevirtual #21                 // Method setRefCnt:(I)V
      10: aload_0
      11: iconst_0
      12: iconst_0
      13: invokevirtual #22                 // Method setIndex0:(II)V
      16: aload_0
      17: invokevirtual #23                 // Method discardMarks:()V
      20: return

  public final int capacity();
    Code:
       0: aload_0
       1: getfield      #17                 // Field length:I
       4: ireturn

  public final io.netty.buffer.ByteBuf capacity(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #24                 // Method checkNewCapacity:(I)V
       5: aload_0
       6: getfield      #8                  // Field chunk:Lio/netty/buffer/PoolChunk;
       9: getfield      #25                 // Field io/netty/buffer/PoolChunk.unpooled:Z
      12: ifeq          25
      15: iload_1
      16: aload_0
      17: getfield      #17                 // Field length:I
      20: if_icmpne     145
      23: aload_0
      24: areturn
      25: iload_1
      26: aload_0
      27: getfield      #17                 // Field length:I
      30: if_icmple     48
      33: iload_1
      34: aload_0
      35: getfield      #18                 // Field maxLength:I
      38: if_icmpgt     145
      41: aload_0
      42: iload_1
      43: putfield      #17                 // Field length:I
      46: aload_0
      47: areturn
      48: iload_1
      49: aload_0
      50: getfield      #17                 // Field length:I
      53: if_icmpge     143
      56: iload_1
      57: aload_0
      58: getfield      #18                 // Field maxLength:I
      61: iconst_1
      62: iushr
      63: if_icmple     145
      66: aload_0
      67: getfield      #18                 // Field maxLength:I
      70: sipush        512
      73: if_icmpgt     115
      76: iload_1
      77: aload_0
      78: getfield      #18                 // Field maxLength:I
      81: bipush        16
      83: isub
      84: if_icmple     145
      87: aload_0
      88: iload_1
      89: putfield      #17                 // Field length:I
      92: aload_0
      93: aload_0
      94: invokevirtual #26                 // Method readerIndex:()I
      97: iload_1
      98: invokestatic  #27                 // Method java/lang/Math.min:(II)I
     101: aload_0
     102: invokevirtual #28                 // Method writerIndex:()I
     105: iload_1
     106: invokestatic  #27                 // Method java/lang/Math.min:(II)I
     109: invokevirtual #29                 // Method setIndex:(II)Lio/netty/buffer/ByteBuf;
     112: pop
     113: aload_0
     114: areturn
     115: aload_0
     116: iload_1
     117: putfield      #17                 // Field length:I
     120: aload_0
     121: aload_0
     122: invokevirtual #26                 // Method readerIndex:()I
     125: iload_1
     126: invokestatic  #27                 // Method java/lang/Math.min:(II)I
     129: aload_0
     130: invokevirtual #28                 // Method writerIndex:()I
     133: iload_1
     134: invokestatic  #27                 // Method java/lang/Math.min:(II)I
     137: invokevirtual #29                 // Method setIndex:(II)Lio/netty/buffer/ByteBuf;
     140: pop
     141: aload_0
     142: areturn
     143: aload_0
     144: areturn
     145: aload_0
     146: getfield      #8                  // Field chunk:Lio/netty/buffer/PoolChunk;
     149: getfield      #11                 // Field io/netty/buffer/PoolChunk.arena:Lio/netty/buffer/PoolArena;
     152: aload_0
     153: iload_1
     154: iconst_1
     155: invokevirtual #30                 // Method io/netty/buffer/PoolArena.reallocate:(Lio/netty/buffer/PooledByteBuf;IZ)V
     158: aload_0
     159: areturn

  public final io.netty.buffer.ByteBufAllocator alloc();
    Code:
       0: aload_0
       1: getfield      #13                 // Field allocator:Lio/netty/buffer/ByteBufAllocator;
       4: areturn

  public final java.nio.ByteOrder order();
    Code:
       0: getstatic     #31                 // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
       3: areturn

  public final io.netty.buffer.ByteBuf unwrap();
    Code:
       0: aconst_null
       1: areturn

  public final io.netty.buffer.ByteBuf retainedDuplicate();
    Code:
       0: aload_0
       1: aload_0
       2: aload_0
       3: invokevirtual #26                 // Method readerIndex:()I
       6: aload_0
       7: invokevirtual #28                 // Method writerIndex:()I
      10: invokestatic  #32                 // Method io/netty/buffer/PooledDuplicatedByteBuf.newInstance:(Lio/netty/buffer/AbstractByteBuf;Lio/netty/buffer/ByteBuf;II)Lio/netty/buffer/PooledDuplicatedByteBuf;
      13: areturn

  public final io.netty.buffer.ByteBuf retainedSlice();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method readerIndex:()I
       4: istore_1
       5: aload_0
       6: iload_1
       7: aload_0
       8: invokevirtual #28                 // Method writerIndex:()I
      11: iload_1
      12: isub
      13: invokevirtual #33                 // Method retainedSlice:(II)Lio/netty/buffer/ByteBuf;
      16: areturn

  public final io.netty.buffer.ByteBuf retainedSlice(int, int);
    Code:
       0: aload_0
       1: aload_0
       2: iload_1
       3: iload_2
       4: invokestatic  #34                 // Method io/netty/buffer/PooledSlicedByteBuf.newInstance:(Lio/netty/buffer/AbstractByteBuf;Lio/netty/buffer/ByteBuf;II)Lio/netty/buffer/PooledSlicedByteBuf;
       7: areturn

  protected final java.nio.ByteBuffer internalNioBuffer();
    Code:
       0: aload_0
       1: getfield      #19                 // Field tmpNioBuf:Ljava/nio/ByteBuffer;
       4: astore_1
       5: aload_1
       6: ifnonnull     23
       9: aload_0
      10: aload_0
      11: aload_0
      12: getfield      #10                 // Field memory:Ljava/lang/Object;
      15: invokevirtual #35                 // Method newInternalNioBuffer:(Ljava/lang/Object;)Ljava/nio/ByteBuffer;
      18: dup
      19: astore_1
      20: putfield      #19                 // Field tmpNioBuf:Ljava/nio/ByteBuffer;
      23: aload_1
      24: areturn

  protected abstract java.nio.ByteBuffer newInternalNioBuffer(T);

  protected final void deallocate();
    Code:
       0: aload_0
       1: getfield      #15                 // Field handle:J
       4: lconst_0
       5: lcmp
       6: iflt          63
       9: aload_0
      10: getfield      #15                 // Field handle:J
      13: lstore_1
      14: aload_0
      15: ldc2_w        #36                 // long -1l
      18: putfield      #15                 // Field handle:J
      21: aload_0
      22: aconst_null
      23: putfield      #10                 // Field memory:Ljava/lang/Object;
      26: aload_0
      27: aconst_null
      28: putfield      #19                 // Field tmpNioBuf:Ljava/nio/ByteBuffer;
      31: aload_0
      32: getfield      #8                  // Field chunk:Lio/netty/buffer/PoolChunk;
      35: getfield      #11                 // Field io/netty/buffer/PoolChunk.arena:Lio/netty/buffer/PoolArena;
      38: aload_0
      39: getfield      #8                  // Field chunk:Lio/netty/buffer/PoolChunk;
      42: lload_1
      43: aload_0
      44: getfield      #18                 // Field maxLength:I
      47: aload_0
      48: getfield      #14                 // Field cache:Lio/netty/buffer/PoolThreadCache;
      51: invokevirtual #38                 // Method io/netty/buffer/PoolArena.free:(Lio/netty/buffer/PoolChunk;JILio/netty/buffer/PoolThreadCache;)V
      54: aload_0
      55: aconst_null
      56: putfield      #8                  // Field chunk:Lio/netty/buffer/PoolChunk;
      59: aload_0
      60: invokespecial #39                 // Method recycle:()V
      63: return

  private void recycle();
    Code:
       0: aload_0
       1: getfield      #2                  // Field recyclerHandle:Lio/netty/util/Recycler$Handle;
       4: aload_0
       5: invokeinterface #40,  2           // InterfaceMethod io/netty/util/Recycler$Handle.recycle:(Ljava/lang/Object;)V
      10: return

  protected final int idx(int);
    Code:
       0: aload_0
       1: getfield      #16                 // Field offset:I
       4: iload_1
       5: iadd
       6: ireturn

  static {};
    Code:
       0: ldc           #41                 // class io/netty/buffer/PooledByteBuf
       2: invokevirtual #42                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #5                  // Field $assertionsDisabled:Z
      16: return
}
