Compiled from "AbstractPooledDerivedByteBuf.java"
abstract class io.netty.buffer.AbstractPooledDerivedByteBuf extends io.netty.buffer.AbstractReferenceCountedByteBuf {
  private final io.netty.util.Recycler$Handle<io.netty.buffer.AbstractPooledDerivedByteBuf> recyclerHandle;

  private io.netty.buffer.AbstractByteBuf rootParent;

  private io.netty.buffer.ByteBuf parent;

  static final boolean $assertionsDisabled;

  io.netty.buffer.AbstractPooledDerivedByteBuf(io.netty.util.Recycler$Handle<? extends io.netty.buffer.AbstractPooledDerivedByteBuf>);
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #1                  // Method io/netty/buffer/AbstractReferenceCountedByteBuf."<init>":(I)V
       5: aload_0
       6: aload_1
       7: putfield      #2                  // Field recyclerHandle:Lio/netty/util/Recycler$Handle;
      10: return

  final void parent(io.netty.buffer.ByteBuf);
    Code:
       0: getstatic     #3                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_1
       7: instanceof    #4                  // class io/netty/buffer/SimpleLeakAwareByteBuf
      10: ifne          21
      13: new           #5                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #6                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_1
      23: putfield      #7                  // Field parent:Lio/netty/buffer/ByteBuf;
      26: return

  public final io.netty.buffer.AbstractByteBuf unwrap();
    Code:
       0: aload_0
       1: getfield      #8                  // Field rootParent:Lio/netty/buffer/AbstractByteBuf;
       4: areturn

  final <U extends io.netty.buffer.AbstractPooledDerivedByteBuf> U init(io.netty.buffer.AbstractByteBuf, io.netty.buffer.ByteBuf, int, int, int);
    Code:
       0: aload_2
       1: invokevirtual #9                  // Method io/netty/buffer/ByteBuf.retain:()Lio/netty/buffer/ByteBuf;
       4: pop
       5: aload_0
       6: aload_2
       7: putfield      #7                  // Field parent:Lio/netty/buffer/ByteBuf;
      10: aload_0
      11: aload_1
      12: putfield      #8                  // Field rootParent:Lio/netty/buffer/AbstractByteBuf;
      15: aload_0
      16: iload         5
      18: invokevirtual #10                 // Method maxCapacity:(I)V
      21: aload_0
      22: iload_3
      23: iload         4
      25: invokevirtual #11                 // Method setIndex0:(II)V
      28: aload_0
      29: iconst_1
      30: invokevirtual #12                 // Method setRefCnt:(I)V
      33: aload_0
      34: astore        6
      36: aconst_null
      37: astore_2
      38: aload         6
      40: astore        7
      42: aload_2
      43: ifnull        61
      46: aload_0
      47: aload_0
      48: aconst_null
      49: dup_x1
      50: putfield      #8                  // Field rootParent:Lio/netty/buffer/AbstractByteBuf;
      53: putfield      #7                  // Field parent:Lio/netty/buffer/ByteBuf;
      56: aload_2
      57: invokevirtual #13                 // Method io/netty/buffer/ByteBuf.release:()Z
      60: pop
      61: aload         7
      63: areturn
      64: astore        8
      66: aload_2
      67: ifnull        85
      70: aload_0
      71: aload_0
      72: aconst_null
      73: dup_x1
      74: putfield      #8                  // Field rootParent:Lio/netty/buffer/AbstractByteBuf;
      77: putfield      #7                  // Field parent:Lio/netty/buffer/ByteBuf;
      80: aload_2
      81: invokevirtual #13                 // Method io/netty/buffer/ByteBuf.release:()Z
      84: pop
      85: aload         8
      87: athrow
    Exception table:
       from    to  target type
          15    42    64   any
          64    66    64   any

  protected final void deallocate();
    Code:
       0: aload_0
       1: getfield      #7                  // Field parent:Lio/netty/buffer/ByteBuf;
       4: astore_1
       5: aload_0
       6: getfield      #2                  // Field recyclerHandle:Lio/netty/util/Recycler$Handle;
       9: aload_0
      10: invokeinterface #14,  2           // InterfaceMethod io/netty/util/Recycler$Handle.recycle:(Ljava/lang/Object;)V
      15: aload_1
      16: invokevirtual #13                 // Method io/netty/buffer/ByteBuf.release:()Z
      19: pop
      20: return

  public final io.netty.buffer.ByteBufAllocator alloc();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method unwrap:()Lio/netty/buffer/AbstractByteBuf;
       4: invokevirtual #16                 // Method io/netty/buffer/AbstractByteBuf.alloc:()Lio/netty/buffer/ByteBufAllocator;
       7: areturn

  public final java.nio.ByteOrder order();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method unwrap:()Lio/netty/buffer/AbstractByteBuf;
       4: invokevirtual #17                 // Method io/netty/buffer/AbstractByteBuf.order:()Ljava/nio/ByteOrder;
       7: areturn

  public boolean isReadOnly();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method unwrap:()Lio/netty/buffer/AbstractByteBuf;
       4: invokevirtual #18                 // Method io/netty/buffer/AbstractByteBuf.isReadOnly:()Z
       7: ireturn

  public final boolean isDirect();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method unwrap:()Lio/netty/buffer/AbstractByteBuf;
       4: invokevirtual #19                 // Method io/netty/buffer/AbstractByteBuf.isDirect:()Z
       7: ireturn

  public boolean hasArray();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method unwrap:()Lio/netty/buffer/AbstractByteBuf;
       4: invokevirtual #20                 // Method io/netty/buffer/AbstractByteBuf.hasArray:()Z
       7: ireturn

  public byte[] array();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method unwrap:()Lio/netty/buffer/AbstractByteBuf;
       4: invokevirtual #21                 // Method io/netty/buffer/AbstractByteBuf.array:()[B
       7: areturn

  public boolean hasMemoryAddress();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method unwrap:()Lio/netty/buffer/AbstractByteBuf;
       4: invokevirtual #22                 // Method io/netty/buffer/AbstractByteBuf.hasMemoryAddress:()Z
       7: ireturn

  public final int nioBufferCount();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method unwrap:()Lio/netty/buffer/AbstractByteBuf;
       4: invokevirtual #23                 // Method io/netty/buffer/AbstractByteBuf.nioBufferCount:()I
       7: ireturn

  public final java.nio.ByteBuffer internalNioBuffer(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #24                 // Method nioBuffer:(II)Ljava/nio/ByteBuffer;
       6: areturn

  public final io.netty.buffer.ByteBuf retainedSlice();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method readerIndex:()I
       4: istore_1
       5: aload_0
       6: iload_1
       7: aload_0
       8: invokevirtual #26                 // Method writerIndex:()I
      11: iload_1
      12: isub
      13: invokevirtual #27                 // Method retainedSlice:(II)Lio/netty/buffer/ByteBuf;
      16: areturn

  public io.netty.buffer.ByteBuf slice(int, int);
    Code:
       0: new           #28                 // class io/netty/buffer/AbstractPooledDerivedByteBuf$PooledNonRetainedSlicedByteBuf
       3: dup
       4: aload_0
       5: aload_0
       6: invokevirtual #15                 // Method unwrap:()Lio/netty/buffer/AbstractByteBuf;
       9: iload_1
      10: iload_2
      11: invokespecial #29                 // Method io/netty/buffer/AbstractPooledDerivedByteBuf$PooledNonRetainedSlicedByteBuf."<init>":(Lio/netty/util/ReferenceCounted;Lio/netty/buffer/AbstractByteBuf;II)V
      14: areturn

  final io.netty.buffer.ByteBuf duplicate0();
    Code:
       0: new           #30                 // class io/netty/buffer/AbstractPooledDerivedByteBuf$PooledNonRetainedDuplicateByteBuf
       3: dup
       4: aload_0
       5: aload_0
       6: invokevirtual #15                 // Method unwrap:()Lio/netty/buffer/AbstractByteBuf;
       9: invokespecial #31                 // Method io/netty/buffer/AbstractPooledDerivedByteBuf$PooledNonRetainedDuplicateByteBuf."<init>":(Lio/netty/util/ReferenceCounted;Lio/netty/buffer/AbstractByteBuf;)V
      12: areturn

  public io.netty.buffer.ByteBuf unwrap();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method unwrap:()Lio/netty/buffer/AbstractByteBuf;
       4: areturn

  static {};
    Code:
       0: ldc           #32                 // class io/netty/buffer/AbstractPooledDerivedByteBuf
       2: invokevirtual #33                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #3                  // Field $assertionsDisabled:Z
      16: return
}
