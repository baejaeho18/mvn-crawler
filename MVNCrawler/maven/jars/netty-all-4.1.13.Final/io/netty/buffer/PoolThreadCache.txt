Compiled from "PoolThreadCache.java"
final class io.netty.buffer.PoolThreadCache {
  private static final io.netty.util.internal.logging.InternalLogger logger;

  final io.netty.buffer.PoolArena<byte[]> heapArena;

  final io.netty.buffer.PoolArena<java.nio.ByteBuffer> directArena;

  private final io.netty.buffer.PoolThreadCache$MemoryRegionCache<byte[]>[] tinySubPageHeapCaches;

  private final io.netty.buffer.PoolThreadCache$MemoryRegionCache<byte[]>[] smallSubPageHeapCaches;

  private final io.netty.buffer.PoolThreadCache$MemoryRegionCache<java.nio.ByteBuffer>[] tinySubPageDirectCaches;

  private final io.netty.buffer.PoolThreadCache$MemoryRegionCache<java.nio.ByteBuffer>[] smallSubPageDirectCaches;

  private final io.netty.buffer.PoolThreadCache$MemoryRegionCache<byte[]>[] normalHeapCaches;

  private final io.netty.buffer.PoolThreadCache$MemoryRegionCache<java.nio.ByteBuffer>[] normalDirectCaches;

  private final int numShiftsNormalDirect;

  private final int numShiftsNormalHeap;

  private final int freeSweepAllocationThreshold;

  private final java.lang.Thread deathWatchThread;

  private final java.lang.Runnable freeTask;

  private int allocations;

  static final boolean $assertionsDisabled;

  io.netty.buffer.PoolThreadCache(io.netty.buffer.PoolArena<byte[]>, io.netty.buffer.PoolArena<java.nio.ByteBuffer>, int, int, int, int, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: iload         6
       6: ifge          42
       9: new           #3                  // class java/lang/IllegalArgumentException
      12: dup
      13: new           #4                  // class java/lang/StringBuilder
      16: dup
      17: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #6                  // String maxCachedBufferCapacity:
      22: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: iload         6
      27: invokevirtual #8                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      30: ldc           #9                  // String  (expected: >= 0)
      32: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: iload         7
      44: iconst_1
      45: if_icmpge     81
      48: new           #3                  // class java/lang/IllegalArgumentException
      51: dup
      52: new           #4                  // class java/lang/StringBuilder
      55: dup
      56: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      59: ldc           #12                 // String freeSweepAllocationThreshold:
      61: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: iload         7
      66: invokevirtual #8                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      69: ldc           #13                 // String  (expected: > 0)
      71: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      77: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      80: athrow
      81: aload_0
      82: iload         7
      84: putfield      #14                 // Field freeSweepAllocationThreshold:I
      87: aload_0
      88: aload_1
      89: putfield      #15                 // Field heapArena:Lio/netty/buffer/PoolArena;
      92: aload_0
      93: aload_2
      94: putfield      #16                 // Field directArena:Lio/netty/buffer/PoolArena;
      97: aload_2
      98: ifnull        164
     101: aload_0
     102: iload_3
     103: bipush        32
     105: getstatic     #18                 // Field io/netty/buffer/PoolArena$SizeClass.Tiny:Lio/netty/buffer/PoolArena$SizeClass;
     108: invokestatic  #19                 // Method createSubPageCaches:(IILio/netty/buffer/PoolArena$SizeClass;)[Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
     111: putfield      #20                 // Field tinySubPageDirectCaches:[Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
     114: aload_0
     115: iload         4
     117: aload_2
     118: getfield      #21                 // Field io/netty/buffer/PoolArena.numSmallSubpagePools:I
     121: getstatic     #22                 // Field io/netty/buffer/PoolArena$SizeClass.Small:Lio/netty/buffer/PoolArena$SizeClass;
     124: invokestatic  #19                 // Method createSubPageCaches:(IILio/netty/buffer/PoolArena$SizeClass;)[Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
     127: putfield      #23                 // Field smallSubPageDirectCaches:[Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
     130: aload_0
     131: aload_2
     132: getfield      #24                 // Field io/netty/buffer/PoolArena.pageSize:I
     135: invokestatic  #25                 // Method log2:(I)I
     138: putfield      #26                 // Field numShiftsNormalDirect:I
     141: aload_0
     142: iload         5
     144: iload         6
     146: aload_2
     147: invokestatic  #27                 // Method createNormalCaches:(IILio/netty/buffer/PoolArena;)[Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
     150: putfield      #28                 // Field normalDirectCaches:[Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
     153: aload_2
     154: getfield      #29                 // Field io/netty/buffer/PoolArena.numThreadCaches:Ljava/util/concurrent/atomic/AtomicInteger;
     157: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
     160: pop
     161: goto          184
     164: aload_0
     165: aconst_null
     166: putfield      #20                 // Field tinySubPageDirectCaches:[Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
     169: aload_0
     170: aconst_null
     171: putfield      #23                 // Field smallSubPageDirectCaches:[Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
     174: aload_0
     175: aconst_null
     176: putfield      #28                 // Field normalDirectCaches:[Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
     179: aload_0
     180: iconst_m1
     181: putfield      #26                 // Field numShiftsNormalDirect:I
     184: aload_1
     185: ifnull        251
     188: aload_0
     189: iload_3
     190: bipush        32
     192: getstatic     #18                 // Field io/netty/buffer/PoolArena$SizeClass.Tiny:Lio/netty/buffer/PoolArena$SizeClass;
     195: invokestatic  #19                 // Method createSubPageCaches:(IILio/netty/buffer/PoolArena$SizeClass;)[Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
     198: putfield      #31                 // Field tinySubPageHeapCaches:[Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
     201: aload_0
     202: iload         4
     204: aload_1
     205: getfield      #21                 // Field io/netty/buffer/PoolArena.numSmallSubpagePools:I
     208: getstatic     #22                 // Field io/netty/buffer/PoolArena$SizeClass.Small:Lio/netty/buffer/PoolArena$SizeClass;
     211: invokestatic  #19                 // Method createSubPageCaches:(IILio/netty/buffer/PoolArena$SizeClass;)[Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
     214: putfield      #32                 // Field smallSubPageHeapCaches:[Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
     217: aload_0
     218: aload_1
     219: getfield      #24                 // Field io/netty/buffer/PoolArena.pageSize:I
     222: invokestatic  #25                 // Method log2:(I)I
     225: putfield      #33                 // Field numShiftsNormalHeap:I
     228: aload_0
     229: iload         5
     231: iload         6
     233: aload_1
     234: invokestatic  #27                 // Method createNormalCaches:(IILio/netty/buffer/PoolArena;)[Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
     237: putfield      #34                 // Field normalHeapCaches:[Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
     240: aload_1
     241: getfield      #29                 // Field io/netty/buffer/PoolArena.numThreadCaches:Ljava/util/concurrent/atomic/AtomicInteger;
     244: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
     247: pop
     248: goto          271
     251: aload_0
     252: aconst_null
     253: putfield      #31                 // Field tinySubPageHeapCaches:[Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
     256: aload_0
     257: aconst_null
     258: putfield      #32                 // Field smallSubPageHeapCaches:[Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
     261: aload_0
     262: aconst_null
     263: putfield      #34                 // Field normalHeapCaches:[Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
     266: aload_0
     267: iconst_m1
     268: putfield      #33                 // Field numShiftsNormalHeap:I
     271: aload_0
     272: getfield      #20                 // Field tinySubPageDirectCaches:[Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
     275: ifnonnull     313
     278: aload_0
     279: getfield      #23                 // Field smallSubPageDirectCaches:[Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
     282: ifnonnull     313
     285: aload_0
     286: getfield      #28                 // Field normalDirectCaches:[Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
     289: ifnonnull     313
     292: aload_0
     293: getfield      #31                 // Field tinySubPageHeapCaches:[Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
     296: ifnonnull     313
     299: aload_0
     300: getfield      #32                 // Field smallSubPageHeapCaches:[Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
     303: ifnonnull     313
     306: aload_0
     307: getfield      #34                 // Field normalHeapCaches:[Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
     310: ifnull        346
     313: aload_0
     314: new           #35                 // class io/netty/buffer/PoolThreadCache$1
     317: dup
     318: aload_0
     319: invokespecial #36                 // Method io/netty/buffer/PoolThreadCache$1."<init>":(Lio/netty/buffer/PoolThreadCache;)V
     322: putfield      #37                 // Field freeTask:Ljava/lang/Runnable;
     325: aload_0
     326: invokestatic  #38                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     329: putfield      #39                 // Field deathWatchThread:Ljava/lang/Thread;
     332: aload_0
     333: getfield      #39                 // Field deathWatchThread:Ljava/lang/Thread;
     336: aload_0
     337: getfield      #37                 // Field freeTask:Ljava/lang/Runnable;
     340: invokestatic  #40                 // Method io/netty/util/ThreadDeathWatcher.watch:(Ljava/lang/Thread;Ljava/lang/Runnable;)V
     343: goto          356
     346: aload_0
     347: aconst_null
     348: putfield      #37                 // Field freeTask:Ljava/lang/Runnable;
     351: aload_0
     352: aconst_null
     353: putfield      #39                 // Field deathWatchThread:Ljava/lang/Thread;
     356: return

  private static <T> io.netty.buffer.PoolThreadCache$MemoryRegionCache<T>[] createSubPageCaches(int, int, io.netty.buffer.PoolArena$SizeClass);
    Code:
       0: iload_0
       1: ifle          40
       4: iload_1
       5: anewarray     #41                 // class io/netty/buffer/PoolThreadCache$MemoryRegionCache
       8: astore_3
       9: iconst_0
      10: istore        4
      12: iload         4
      14: aload_3
      15: arraylength
      16: if_icmpge     38
      19: aload_3
      20: iload         4
      22: new           #42                 // class io/netty/buffer/PoolThreadCache$SubPageMemoryRegionCache
      25: dup
      26: iload_0
      27: aload_2
      28: invokespecial #43                 // Method io/netty/buffer/PoolThreadCache$SubPageMemoryRegionCache."<init>":(ILio/netty/buffer/PoolArena$SizeClass;)V
      31: aastore
      32: iinc          4, 1
      35: goto          12
      38: aload_3
      39: areturn
      40: aconst_null
      41: areturn

  private static <T> io.netty.buffer.PoolThreadCache$MemoryRegionCache<T>[] createNormalCaches(int, int, io.netty.buffer.PoolArena<T>);
    Code:
       0: iload_0
       1: ifle          70
       4: aload_2
       5: getfield      #44                 // Field io/netty/buffer/PoolArena.chunkSize:I
       8: iload_1
       9: invokestatic  #45                 // Method java/lang/Math.min:(II)I
      12: istore_3
      13: iconst_1
      14: iload_3
      15: aload_2
      16: getfield      #24                 // Field io/netty/buffer/PoolArena.pageSize:I
      19: idiv
      20: invokestatic  #25                 // Method log2:(I)I
      23: iconst_1
      24: iadd
      25: invokestatic  #46                 // Method java/lang/Math.max:(II)I
      28: istore        4
      30: iload         4
      32: anewarray     #41                 // class io/netty/buffer/PoolThreadCache$MemoryRegionCache
      35: astore        5
      37: iconst_0
      38: istore        6
      40: iload         6
      42: aload         5
      44: arraylength
      45: if_icmpge     67
      48: aload         5
      50: iload         6
      52: new           #47                 // class io/netty/buffer/PoolThreadCache$NormalMemoryRegionCache
      55: dup
      56: iload_0
      57: invokespecial #48                 // Method io/netty/buffer/PoolThreadCache$NormalMemoryRegionCache."<init>":(I)V
      60: aastore
      61: iinc          6, 1
      64: goto          40
      67: aload         5
      69: areturn
      70: aconst_null
      71: areturn

  private static int log2(int);
    Code:
       0: iconst_0
       1: istore_1
       2: iload_0
       3: iconst_1
       4: if_icmple     17
       7: iload_0
       8: iconst_1
       9: ishr
      10: istore_0
      11: iinc          1, 1
      14: goto          2
      17: iload_1
      18: ireturn

  boolean allocateTiny(io.netty.buffer.PoolArena<?>, io.netty.buffer.PooledByteBuf<?>, int, int);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: iload         4
       5: invokespecial #49                 // Method cacheForTiny:(Lio/netty/buffer/PoolArena;I)Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
       8: aload_2
       9: iload_3
      10: invokespecial #50                 // Method allocate:(Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;Lio/netty/buffer/PooledByteBuf;I)Z
      13: ireturn

  boolean allocateSmall(io.netty.buffer.PoolArena<?>, io.netty.buffer.PooledByteBuf<?>, int, int);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: iload         4
       5: invokespecial #51                 // Method cacheForSmall:(Lio/netty/buffer/PoolArena;I)Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
       8: aload_2
       9: iload_3
      10: invokespecial #50                 // Method allocate:(Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;Lio/netty/buffer/PooledByteBuf;I)Z
      13: ireturn

  boolean allocateNormal(io.netty.buffer.PoolArena<?>, io.netty.buffer.PooledByteBuf<?>, int, int);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: iload         4
       5: invokespecial #52                 // Method cacheForNormal:(Lio/netty/buffer/PoolArena;I)Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
       8: aload_2
       9: iload_3
      10: invokespecial #50                 // Method allocate:(Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;Lio/netty/buffer/PooledByteBuf;I)Z
      13: ireturn

  private boolean allocate(io.netty.buffer.PoolThreadCache$MemoryRegionCache<?>, io.netty.buffer.PooledByteBuf, int);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: aload_2
       8: iload_3
       9: invokevirtual #53                 // Method io/netty/buffer/PoolThreadCache$MemoryRegionCache.allocate:(Lio/netty/buffer/PooledByteBuf;I)Z
      12: istore        4
      14: aload_0
      15: dup
      16: getfield      #54                 // Field allocations:I
      19: iconst_1
      20: iadd
      21: dup_x1
      22: putfield      #54                 // Field allocations:I
      25: aload_0
      26: getfield      #14                 // Field freeSweepAllocationThreshold:I
      29: if_icmplt     41
      32: aload_0
      33: iconst_0
      34: putfield      #54                 // Field allocations:I
      37: aload_0
      38: invokevirtual #55                 // Method trim:()V
      41: iload         4
      43: ireturn

  boolean add(io.netty.buffer.PoolArena<?>, io.netty.buffer.PoolChunk, long, int, io.netty.buffer.PoolArena$SizeClass);
    Code:
       0: aload_0
       1: aload_1
       2: iload         5
       4: aload         6
       6: invokespecial #56                 // Method cache:(Lio/netty/buffer/PoolArena;ILio/netty/buffer/PoolArena$SizeClass;)Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
       9: astore        7
      11: aload         7
      13: ifnonnull     18
      16: iconst_0
      17: ireturn
      18: aload         7
      20: aload_2
      21: lload_3
      22: invokevirtual #57                 // Method io/netty/buffer/PoolThreadCache$MemoryRegionCache.add:(Lio/netty/buffer/PoolChunk;J)Z
      25: ireturn

  private io.netty.buffer.PoolThreadCache$MemoryRegionCache<?> cache(io.netty.buffer.PoolArena<?>, int, io.netty.buffer.PoolArena$SizeClass);
    Code:
       0: getstatic     #58                 // Field io/netty/buffer/PoolThreadCache$2.$SwitchMap$io$netty$buffer$PoolArena$SizeClass:[I
       3: aload_3
       4: invokevirtual #59                 // Method io/netty/buffer/PoolArena$SizeClass.ordinal:()I
       7: iaload
       8: tableswitch   { // 1 to 3
                     1: 36
                     2: 43
                     3: 50
               default: 57
          }
      36: aload_0
      37: aload_1
      38: iload_2
      39: invokespecial #52                 // Method cacheForNormal:(Lio/netty/buffer/PoolArena;I)Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
      42: areturn
      43: aload_0
      44: aload_1
      45: iload_2
      46: invokespecial #51                 // Method cacheForSmall:(Lio/netty/buffer/PoolArena;I)Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
      49: areturn
      50: aload_0
      51: aload_1
      52: iload_2
      53: invokespecial #49                 // Method cacheForTiny:(Lio/netty/buffer/PoolArena;I)Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
      56: areturn
      57: new           #60                 // class java/lang/Error
      60: dup
      61: invokespecial #61                 // Method java/lang/Error."<init>":()V
      64: athrow

  void free();
    Code:
       0: aload_0
       1: getfield      #37                 // Field freeTask:Ljava/lang/Runnable;
       4: ifnull        39
       7: getstatic     #62                 // Field $assertionsDisabled:Z
      10: ifne          28
      13: aload_0
      14: getfield      #39                 // Field deathWatchThread:Ljava/lang/Thread;
      17: ifnonnull     28
      20: new           #63                 // class java/lang/AssertionError
      23: dup
      24: invokespecial #64                 // Method java/lang/AssertionError."<init>":()V
      27: athrow
      28: aload_0
      29: getfield      #39                 // Field deathWatchThread:Ljava/lang/Thread;
      32: aload_0
      33: getfield      #37                 // Field freeTask:Ljava/lang/Runnable;
      36: invokestatic  #65                 // Method io/netty/util/ThreadDeathWatcher.unwatch:(Ljava/lang/Thread;Ljava/lang/Runnable;)V
      39: aload_0
      40: invokespecial #1                  // Method free0:()V
      43: return

  private void free0();
    Code:
       0: aload_0
       1: getfield      #20                 // Field tinySubPageDirectCaches:[Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
       4: invokestatic  #66                 // Method free:([Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;)I
       7: aload_0
       8: getfield      #23                 // Field smallSubPageDirectCaches:[Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
      11: invokestatic  #66                 // Method free:([Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;)I
      14: iadd
      15: aload_0
      16: getfield      #28                 // Field normalDirectCaches:[Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
      19: invokestatic  #66                 // Method free:([Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;)I
      22: iadd
      23: aload_0
      24: getfield      #31                 // Field tinySubPageHeapCaches:[Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
      27: invokestatic  #66                 // Method free:([Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;)I
      30: iadd
      31: aload_0
      32: getfield      #32                 // Field smallSubPageHeapCaches:[Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
      35: invokestatic  #66                 // Method free:([Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;)I
      38: iadd
      39: aload_0
      40: getfield      #34                 // Field normalHeapCaches:[Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
      43: invokestatic  #66                 // Method free:([Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;)I
      46: iadd
      47: istore_1
      48: iload_1
      49: ifle          83
      52: getstatic     #67                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      55: invokeinterface #68,  1           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isDebugEnabled:()Z
      60: ifeq          83
      63: getstatic     #67                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      66: ldc           #69                 // String Freed {} thread-local buffer(s) from thread: {}
      68: iload_1
      69: invokestatic  #70                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      72: invokestatic  #38                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      75: invokevirtual #71                 // Method java/lang/Thread.getName:()Ljava/lang/String;
      78: invokeinterface #72,  4           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      83: aload_0
      84: getfield      #16                 // Field directArena:Lio/netty/buffer/PoolArena;
      87: ifnull        101
      90: aload_0
      91: getfield      #16                 // Field directArena:Lio/netty/buffer/PoolArena;
      94: getfield      #29                 // Field io/netty/buffer/PoolArena.numThreadCaches:Ljava/util/concurrent/atomic/AtomicInteger;
      97: invokevirtual #73                 // Method java/util/concurrent/atomic/AtomicInteger.getAndDecrement:()I
     100: pop
     101: aload_0
     102: getfield      #15                 // Field heapArena:Lio/netty/buffer/PoolArena;
     105: ifnull        119
     108: aload_0
     109: getfield      #15                 // Field heapArena:Lio/netty/buffer/PoolArena;
     112: getfield      #29                 // Field io/netty/buffer/PoolArena.numThreadCaches:Ljava/util/concurrent/atomic/AtomicInteger;
     115: invokevirtual #73                 // Method java/util/concurrent/atomic/AtomicInteger.getAndDecrement:()I
     118: pop
     119: return

  private static int free(io.netty.buffer.PoolThreadCache$MemoryRegionCache<?>[]);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: iconst_0
       7: istore_1
       8: aload_0
       9: astore_2
      10: aload_2
      11: arraylength
      12: istore_3
      13: iconst_0
      14: istore        4
      16: iload         4
      18: iload_3
      19: if_icmpge     42
      22: aload_2
      23: iload         4
      25: aaload
      26: astore        5
      28: iload_1
      29: aload         5
      31: invokestatic  #74                 // Method free:(Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;)I
      34: iadd
      35: istore_1
      36: iinc          4, 1
      39: goto          16
      42: iload_1
      43: ireturn

  private static int free(io.netty.buffer.PoolThreadCache$MemoryRegionCache<?>);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: invokevirtual #75                 // Method io/netty/buffer/PoolThreadCache$MemoryRegionCache.free:()I
      10: ireturn

  void trim();
    Code:
       0: aload_0
       1: getfield      #20                 // Field tinySubPageDirectCaches:[Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
       4: invokestatic  #76                 // Method trim:([Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;)V
       7: aload_0
       8: getfield      #23                 // Field smallSubPageDirectCaches:[Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
      11: invokestatic  #76                 // Method trim:([Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;)V
      14: aload_0
      15: getfield      #28                 // Field normalDirectCaches:[Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
      18: invokestatic  #76                 // Method trim:([Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;)V
      21: aload_0
      22: getfield      #31                 // Field tinySubPageHeapCaches:[Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
      25: invokestatic  #76                 // Method trim:([Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;)V
      28: aload_0
      29: getfield      #32                 // Field smallSubPageHeapCaches:[Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
      32: invokestatic  #76                 // Method trim:([Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;)V
      35: aload_0
      36: getfield      #34                 // Field normalHeapCaches:[Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
      39: invokestatic  #76                 // Method trim:([Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;)V
      42: return

  private static void trim(io.netty.buffer.PoolThreadCache$MemoryRegionCache<?>[]);
    Code:
       0: aload_0
       1: ifnonnull     5
       4: return
       5: aload_0
       6: astore_1
       7: aload_1
       8: arraylength
       9: istore_2
      10: iconst_0
      11: istore_3
      12: iload_3
      13: iload_2
      14: if_icmpge     33
      17: aload_1
      18: iload_3
      19: aaload
      20: astore        4
      22: aload         4
      24: invokestatic  #77                 // Method trim:(Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;)V
      27: iinc          3, 1
      30: goto          12
      33: return

  private static void trim(io.netty.buffer.PoolThreadCache$MemoryRegionCache<?>);
    Code:
       0: aload_0
       1: ifnonnull     5
       4: return
       5: aload_0
       6: invokevirtual #78                 // Method io/netty/buffer/PoolThreadCache$MemoryRegionCache.trim:()V
       9: return

  private io.netty.buffer.PoolThreadCache$MemoryRegionCache<?> cacheForTiny(io.netty.buffer.PoolArena<?>, int);
    Code:
       0: iload_2
       1: invokestatic  #79                 // Method io/netty/buffer/PoolArena.tinyIdx:(I)I
       4: istore_3
       5: aload_1
       6: invokevirtual #80                 // Method io/netty/buffer/PoolArena.isDirect:()Z
       9: ifeq          21
      12: aload_0
      13: getfield      #20                 // Field tinySubPageDirectCaches:[Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
      16: iload_3
      17: invokestatic  #81                 // Method cache:([Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;I)Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
      20: areturn
      21: aload_0
      22: getfield      #31                 // Field tinySubPageHeapCaches:[Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
      25: iload_3
      26: invokestatic  #81                 // Method cache:([Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;I)Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
      29: areturn

  private io.netty.buffer.PoolThreadCache$MemoryRegionCache<?> cacheForSmall(io.netty.buffer.PoolArena<?>, int);
    Code:
       0: iload_2
       1: invokestatic  #82                 // Method io/netty/buffer/PoolArena.smallIdx:(I)I
       4: istore_3
       5: aload_1
       6: invokevirtual #80                 // Method io/netty/buffer/PoolArena.isDirect:()Z
       9: ifeq          21
      12: aload_0
      13: getfield      #23                 // Field smallSubPageDirectCaches:[Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
      16: iload_3
      17: invokestatic  #81                 // Method cache:([Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;I)Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
      20: areturn
      21: aload_0
      22: getfield      #32                 // Field smallSubPageHeapCaches:[Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
      25: iload_3
      26: invokestatic  #81                 // Method cache:([Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;I)Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
      29: areturn

  private io.netty.buffer.PoolThreadCache$MemoryRegionCache<?> cacheForNormal(io.netty.buffer.PoolArena<?>, int);
    Code:
       0: aload_1
       1: invokevirtual #80                 // Method io/netty/buffer/PoolArena.isDirect:()Z
       4: ifeq          26
       7: iload_2
       8: aload_0
       9: getfield      #26                 // Field numShiftsNormalDirect:I
      12: ishr
      13: invokestatic  #25                 // Method log2:(I)I
      16: istore_3
      17: aload_0
      18: getfield      #28                 // Field normalDirectCaches:[Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
      21: iload_3
      22: invokestatic  #81                 // Method cache:([Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;I)Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
      25: areturn
      26: iload_2
      27: aload_0
      28: getfield      #33                 // Field numShiftsNormalHeap:I
      31: ishr
      32: invokestatic  #25                 // Method log2:(I)I
      35: istore_3
      36: aload_0
      37: getfield      #34                 // Field normalHeapCaches:[Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
      40: iload_3
      41: invokestatic  #81                 // Method cache:([Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;I)Lio/netty/buffer/PoolThreadCache$MemoryRegionCache;
      44: areturn

  private static <T> io.netty.buffer.PoolThreadCache$MemoryRegionCache<T> cache(io.netty.buffer.PoolThreadCache$MemoryRegionCache<T>[], int);
    Code:
       0: aload_0
       1: ifnull        12
       4: iload_1
       5: aload_0
       6: arraylength
       7: iconst_1
       8: isub
       9: if_icmple     14
      12: aconst_null
      13: areturn
      14: aload_0
      15: iload_1
      16: aaload
      17: areturn

  static void access$000(io.netty.buffer.PoolThreadCache);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method free0:()V
       4: return

  static {};
    Code:
       0: ldc           #83                 // class io/netty/buffer/PoolThreadCache
       2: invokevirtual #84                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #62                 // Field $assertionsDisabled:Z
      16: ldc           #83                 // class io/netty/buffer/PoolThreadCache
      18: invokestatic  #85                 // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
      21: putstatic     #67                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      24: return
}
