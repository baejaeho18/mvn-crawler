Compiled from "PoolSubpage.java"
final class io.netty.buffer.PoolSubpage<T> implements io.netty.buffer.PoolSubpageMetric {
  final io.netty.buffer.PoolChunk<T> chunk;

  private final int memoryMapIdx;

  private final int runOffset;

  private final int pageSize;

  private final long[] bitmap;

  io.netty.buffer.PoolSubpage<T> prev;

  io.netty.buffer.PoolSubpage<T> next;

  boolean doNotDestroy;

  int elemSize;

  private int maxNumElems;

  private int bitmapLength;

  private int nextAvail;

  private int numAvail;

  static final boolean $assertionsDisabled;

  io.netty.buffer.PoolSubpage(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field chunk:Lio/netty/buffer/PoolChunk;
       9: aload_0
      10: iconst_m1
      11: putfield      #3                  // Field memoryMapIdx:I
      14: aload_0
      15: iconst_m1
      16: putfield      #4                  // Field runOffset:I
      19: aload_0
      20: iconst_m1
      21: putfield      #5                  // Field elemSize:I
      24: aload_0
      25: iload_1
      26: putfield      #6                  // Field pageSize:I
      29: aload_0
      30: aconst_null
      31: putfield      #7                  // Field bitmap:[J
      34: return

  io.netty.buffer.PoolSubpage(io.netty.buffer.PoolSubpage<T>, io.netty.buffer.PoolChunk<T>, int, int, int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_2
       6: putfield      #2                  // Field chunk:Lio/netty/buffer/PoolChunk;
       9: aload_0
      10: iload_3
      11: putfield      #3                  // Field memoryMapIdx:I
      14: aload_0
      15: iload         4
      17: putfield      #4                  // Field runOffset:I
      20: aload_0
      21: iload         5
      23: putfield      #6                  // Field pageSize:I
      26: aload_0
      27: iload         5
      29: bipush        10
      31: iushr
      32: newarray       long
      34: putfield      #7                  // Field bitmap:[J
      37: aload_0
      38: aload_1
      39: iload         6
      41: invokevirtual #8                  // Method init:(Lio/netty/buffer/PoolSubpage;I)V
      44: return

  void init(io.netty.buffer.PoolSubpage<T>, int);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #9                  // Field doNotDestroy:Z
       5: aload_0
       6: iload_2
       7: putfield      #5                  // Field elemSize:I
      10: iload_2
      11: ifeq          88
      14: aload_0
      15: aload_0
      16: aload_0
      17: getfield      #6                  // Field pageSize:I
      20: iload_2
      21: idiv
      22: dup_x1
      23: putfield      #10                 // Field numAvail:I
      26: putfield      #11                 // Field maxNumElems:I
      29: aload_0
      30: iconst_0
      31: putfield      #12                 // Field nextAvail:I
      34: aload_0
      35: aload_0
      36: getfield      #11                 // Field maxNumElems:I
      39: bipush        6
      41: iushr
      42: putfield      #13                 // Field bitmapLength:I
      45: aload_0
      46: getfield      #11                 // Field maxNumElems:I
      49: bipush        63
      51: iand
      52: ifeq          65
      55: aload_0
      56: dup
      57: getfield      #13                 // Field bitmapLength:I
      60: iconst_1
      61: iadd
      62: putfield      #13                 // Field bitmapLength:I
      65: iconst_0
      66: istore_3
      67: iload_3
      68: aload_0
      69: getfield      #13                 // Field bitmapLength:I
      72: if_icmpge     88
      75: aload_0
      76: getfield      #7                  // Field bitmap:[J
      79: iload_3
      80: lconst_0
      81: lastore
      82: iinc          3, 1
      85: goto          67
      88: aload_0
      89: aload_1
      90: invokespecial #14                 // Method addToPool:(Lio/netty/buffer/PoolSubpage;)V
      93: return

  long allocate();
    Code:
       0: aload_0
       1: getfield      #5                  // Field elemSize:I
       4: ifne          13
       7: aload_0
       8: iconst_0
       9: invokespecial #15                 // Method toHandle:(I)J
      12: lreturn
      13: aload_0
      14: getfield      #10                 // Field numAvail:I
      17: ifeq          27
      20: aload_0
      21: getfield      #9                  // Field doNotDestroy:Z
      24: ifne          31
      27: ldc2_w        #16                 // long -1l
      30: lreturn
      31: aload_0
      32: invokespecial #18                 // Method getNextAvail:()I
      35: istore_1
      36: iload_1
      37: bipush        6
      39: iushr
      40: istore_2
      41: iload_1
      42: bipush        63
      44: iand
      45: istore_3
      46: getstatic     #19                 // Field $assertionsDisabled:Z
      49: ifne          75
      52: aload_0
      53: getfield      #7                  // Field bitmap:[J
      56: iload_2
      57: laload
      58: iload_3
      59: lushr
      60: lconst_1
      61: land
      62: lconst_0
      63: lcmp
      64: ifeq          75
      67: new           #20                 // class java/lang/AssertionError
      70: dup
      71: invokespecial #21                 // Method java/lang/AssertionError."<init>":()V
      74: athrow
      75: aload_0
      76: getfield      #7                  // Field bitmap:[J
      79: iload_2
      80: dup2
      81: laload
      82: lconst_1
      83: iload_3
      84: lshl
      85: lor
      86: lastore
      87: aload_0
      88: dup
      89: getfield      #10                 // Field numAvail:I
      92: iconst_1
      93: isub
      94: dup_x1
      95: putfield      #10                 // Field numAvail:I
      98: ifne          105
     101: aload_0
     102: invokespecial #22                 // Method removeFromPool:()V
     105: aload_0
     106: iload_1
     107: invokespecial #15                 // Method toHandle:(I)J
     110: lreturn

  boolean free(io.netty.buffer.PoolSubpage<T>, int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field elemSize:I
       4: ifne          9
       7: iconst_1
       8: ireturn
       9: iload_2
      10: bipush        6
      12: iushr
      13: istore_3
      14: iload_2
      15: bipush        63
      17: iand
      18: istore        4
      20: getstatic     #19                 // Field $assertionsDisabled:Z
      23: ifne          50
      26: aload_0
      27: getfield      #7                  // Field bitmap:[J
      30: iload_3
      31: laload
      32: iload         4
      34: lushr
      35: lconst_1
      36: land
      37: lconst_0
      38: lcmp
      39: ifne          50
      42: new           #20                 // class java/lang/AssertionError
      45: dup
      46: invokespecial #21                 // Method java/lang/AssertionError."<init>":()V
      49: athrow
      50: aload_0
      51: getfield      #7                  // Field bitmap:[J
      54: iload_3
      55: dup2
      56: laload
      57: lconst_1
      58: iload         4
      60: lshl
      61: lxor
      62: lastore
      63: aload_0
      64: iload_2
      65: invokespecial #23                 // Method setNextAvail:(I)V
      68: aload_0
      69: dup
      70: getfield      #10                 // Field numAvail:I
      73: dup_x1
      74: iconst_1
      75: iadd
      76: putfield      #10                 // Field numAvail:I
      79: ifne          89
      82: aload_0
      83: aload_1
      84: invokespecial #14                 // Method addToPool:(Lio/netty/buffer/PoolSubpage;)V
      87: iconst_1
      88: ireturn
      89: aload_0
      90: getfield      #10                 // Field numAvail:I
      93: aload_0
      94: getfield      #11                 // Field maxNumElems:I
      97: if_icmpeq     102
     100: iconst_1
     101: ireturn
     102: aload_0
     103: getfield      #24                 // Field prev:Lio/netty/buffer/PoolSubpage;
     106: aload_0
     107: getfield      #25                 // Field next:Lio/netty/buffer/PoolSubpage;
     110: if_acmpne     115
     113: iconst_1
     114: ireturn
     115: aload_0
     116: iconst_0
     117: putfield      #9                  // Field doNotDestroy:Z
     120: aload_0
     121: invokespecial #22                 // Method removeFromPool:()V
     124: iconst_0
     125: ireturn

  private void addToPool(io.netty.buffer.PoolSubpage<T>);
    Code:
       0: getstatic     #19                 // Field $assertionsDisabled:Z
       3: ifne          28
       6: aload_0
       7: getfield      #24                 // Field prev:Lio/netty/buffer/PoolSubpage;
      10: ifnonnull     20
      13: aload_0
      14: getfield      #25                 // Field next:Lio/netty/buffer/PoolSubpage;
      17: ifnull        28
      20: new           #20                 // class java/lang/AssertionError
      23: dup
      24: invokespecial #21                 // Method java/lang/AssertionError."<init>":()V
      27: athrow
      28: aload_0
      29: aload_1
      30: putfield      #24                 // Field prev:Lio/netty/buffer/PoolSubpage;
      33: aload_0
      34: aload_1
      35: getfield      #25                 // Field next:Lio/netty/buffer/PoolSubpage;
      38: putfield      #25                 // Field next:Lio/netty/buffer/PoolSubpage;
      41: aload_0
      42: getfield      #25                 // Field next:Lio/netty/buffer/PoolSubpage;
      45: aload_0
      46: putfield      #24                 // Field prev:Lio/netty/buffer/PoolSubpage;
      49: aload_1
      50: aload_0
      51: putfield      #25                 // Field next:Lio/netty/buffer/PoolSubpage;
      54: return

  private void removeFromPool();
    Code:
       0: getstatic     #19                 // Field $assertionsDisabled:Z
       3: ifne          28
       6: aload_0
       7: getfield      #24                 // Field prev:Lio/netty/buffer/PoolSubpage;
      10: ifnull        20
      13: aload_0
      14: getfield      #25                 // Field next:Lio/netty/buffer/PoolSubpage;
      17: ifnonnull     28
      20: new           #20                 // class java/lang/AssertionError
      23: dup
      24: invokespecial #21                 // Method java/lang/AssertionError."<init>":()V
      27: athrow
      28: aload_0
      29: getfield      #24                 // Field prev:Lio/netty/buffer/PoolSubpage;
      32: aload_0
      33: getfield      #25                 // Field next:Lio/netty/buffer/PoolSubpage;
      36: putfield      #25                 // Field next:Lio/netty/buffer/PoolSubpage;
      39: aload_0
      40: getfield      #25                 // Field next:Lio/netty/buffer/PoolSubpage;
      43: aload_0
      44: getfield      #24                 // Field prev:Lio/netty/buffer/PoolSubpage;
      47: putfield      #24                 // Field prev:Lio/netty/buffer/PoolSubpage;
      50: aload_0
      51: aconst_null
      52: putfield      #25                 // Field next:Lio/netty/buffer/PoolSubpage;
      55: aload_0
      56: aconst_null
      57: putfield      #24                 // Field prev:Lio/netty/buffer/PoolSubpage;
      60: return

  private void setNextAvail(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field nextAvail:I
       5: return

  private int getNextAvail();
    Code:
       0: aload_0
       1: getfield      #12                 // Field nextAvail:I
       4: istore_1
       5: iload_1
       6: iflt          16
       9: aload_0
      10: iconst_m1
      11: putfield      #12                 // Field nextAvail:I
      14: iload_1
      15: ireturn
      16: aload_0
      17: invokespecial #26                 // Method findNextAvail:()I
      20: ireturn

  private int findNextAvail();
    Code:
       0: aload_0
       1: getfield      #7                  // Field bitmap:[J
       4: astore_1
       5: aload_0
       6: getfield      #13                 // Field bitmapLength:I
       9: istore_2
      10: iconst_0
      11: istore_3
      12: iload_3
      13: iload_2
      14: if_icmpge     47
      17: aload_1
      18: iload_3
      19: laload
      20: lstore        4
      22: lload         4
      24: ldc2_w        #16                 // long -1l
      27: lxor
      28: lconst_0
      29: lcmp
      30: ifeq          41
      33: aload_0
      34: iload_3
      35: lload         4
      37: invokespecial #27                 // Method findNextAvail0:(IJ)I
      40: ireturn
      41: iinc          3, 1
      44: goto          12
      47: iconst_m1
      48: ireturn

  private int findNextAvail0(int, long);
    Code:
       0: aload_0
       1: getfield      #11                 // Field maxNumElems:I
       4: istore        4
       6: iload_1
       7: bipush        6
       9: ishl
      10: istore        5
      12: iconst_0
      13: istore        6
      15: iload         6
      17: bipush        64
      19: if_icmpge     57
      22: lload_2
      23: lconst_1
      24: land
      25: lconst_0
      26: lcmp
      27: ifne          47
      30: iload         5
      32: iload         6
      34: ior
      35: istore        7
      37: iload         7
      39: iload         4
      41: if_icmpge     57
      44: iload         7
      46: ireturn
      47: lload_2
      48: iconst_1
      49: lushr
      50: lstore_2
      51: iinc          6, 1
      54: goto          15
      57: iconst_m1
      58: ireturn

  private long toHandle(int);
    Code:
       0: ldc2_w        #28                 // long 4611686018427387904l
       3: iload_1
       4: i2l
       5: bipush        32
       7: lshl
       8: lor
       9: aload_0
      10: getfield      #3                  // Field memoryMapIdx:I
      13: i2l
      14: lor
      15: lreturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field chunk:Lio/netty/buffer/PoolChunk;
       4: getfield      #30                 // Field io/netty/buffer/PoolChunk.arena:Lio/netty/buffer/PoolArena;
       7: dup
       8: astore        5
      10: monitorenter
      11: aload_0
      12: getfield      #9                  // Field doNotDestroy:Z
      15: ifne          30
      18: iconst_0
      19: istore_1
      20: iconst_m1
      21: dup
      22: istore        4
      24: dup
      25: istore_3
      26: istore_2
      27: goto          48
      30: iconst_1
      31: istore_1
      32: aload_0
      33: getfield      #11                 // Field maxNumElems:I
      36: istore_2
      37: aload_0
      38: getfield      #10                 // Field numAvail:I
      41: istore_3
      42: aload_0
      43: getfield      #5                  // Field elemSize:I
      46: istore        4
      48: aload         5
      50: monitorexit
      51: goto          62
      54: astore        6
      56: aload         5
      58: monitorexit
      59: aload         6
      61: athrow
      62: iload_1
      63: ifne          94
      66: new           #31                 // class java/lang/StringBuilder
      69: dup
      70: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      73: ldc           #33                 // String (
      75: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: aload_0
      79: getfield      #3                  // Field memoryMapIdx:I
      82: invokevirtual #35                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      85: ldc           #36                 // String : not in use)
      87: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      93: areturn
      94: new           #31                 // class java/lang/StringBuilder
      97: dup
      98: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
     101: ldc           #33                 // String (
     103: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: aload_0
     107: getfield      #3                  // Field memoryMapIdx:I
     110: invokevirtual #35                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     113: ldc           #38                 // String :
     115: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: iload_2
     119: iload_3
     120: isub
     121: invokevirtual #35                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     124: bipush        47
     126: invokevirtual #39                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     129: iload_2
     130: invokevirtual #35                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     133: ldc           #40                 // String , offset:
     135: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: aload_0
     139: getfield      #4                  // Field runOffset:I
     142: invokevirtual #35                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     145: ldc           #41                 // String , length:
     147: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     150: aload_0
     151: getfield      #6                  // Field pageSize:I
     154: invokevirtual #35                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     157: ldc           #42                 // String , elemSize:
     159: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     162: iload         4
     164: invokevirtual #35                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     167: bipush        41
     169: invokevirtual #39                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     172: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     175: areturn
    Exception table:
       from    to  target type
          11    51    54   any
          54    59    54   any

  public int maxNumElements();
    Code:
       0: aload_0
       1: getfield      #2                  // Field chunk:Lio/netty/buffer/PoolChunk;
       4: getfield      #30                 // Field io/netty/buffer/PoolChunk.arena:Lio/netty/buffer/PoolArena;
       7: dup
       8: astore_1
       9: monitorenter
      10: aload_0
      11: getfield      #11                 // Field maxNumElems:I
      14: aload_1
      15: monitorexit
      16: ireturn
      17: astore_2
      18: aload_1
      19: monitorexit
      20: aload_2
      21: athrow
    Exception table:
       from    to  target type
          10    16    17   any
          17    20    17   any

  public int numAvailable();
    Code:
       0: aload_0
       1: getfield      #2                  // Field chunk:Lio/netty/buffer/PoolChunk;
       4: getfield      #30                 // Field io/netty/buffer/PoolChunk.arena:Lio/netty/buffer/PoolArena;
       7: dup
       8: astore_1
       9: monitorenter
      10: aload_0
      11: getfield      #10                 // Field numAvail:I
      14: aload_1
      15: monitorexit
      16: ireturn
      17: astore_2
      18: aload_1
      19: monitorexit
      20: aload_2
      21: athrow
    Exception table:
       from    to  target type
          10    16    17   any
          17    20    17   any

  public int elementSize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field chunk:Lio/netty/buffer/PoolChunk;
       4: getfield      #30                 // Field io/netty/buffer/PoolChunk.arena:Lio/netty/buffer/PoolArena;
       7: dup
       8: astore_1
       9: monitorenter
      10: aload_0
      11: getfield      #5                  // Field elemSize:I
      14: aload_1
      15: monitorexit
      16: ireturn
      17: astore_2
      18: aload_1
      19: monitorexit
      20: aload_2
      21: athrow
    Exception table:
       from    to  target type
          10    16    17   any
          17    20    17   any

  public int pageSize();
    Code:
       0: aload_0
       1: getfield      #6                  // Field pageSize:I
       4: ireturn

  void destroy();
    Code:
       0: aload_0
       1: getfield      #2                  // Field chunk:Lio/netty/buffer/PoolChunk;
       4: ifnull        14
       7: aload_0
       8: getfield      #2                  // Field chunk:Lio/netty/buffer/PoolChunk;
      11: invokevirtual #43                 // Method io/netty/buffer/PoolChunk.destroy:()V
      14: return

  static {};
    Code:
       0: ldc           #44                 // class io/netty/buffer/PoolSubpage
       2: invokevirtual #45                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #19                 // Field $assertionsDisabled:Z
      16: return
}
