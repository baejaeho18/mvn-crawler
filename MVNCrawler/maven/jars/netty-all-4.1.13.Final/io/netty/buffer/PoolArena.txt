Compiled from "PoolArena.java"
abstract class io.netty.buffer.PoolArena<T> implements io.netty.buffer.PoolArenaMetric {
  static final boolean HAS_UNSAFE;

  static final int numTinySubpagePools;

  final io.netty.buffer.PooledByteBufAllocator parent;

  private final int maxOrder;

  final int pageSize;

  final int pageShifts;

  final int chunkSize;

  final int subpageOverflowMask;

  final int numSmallSubpagePools;

  final int directMemoryCacheAlignment;

  final int directMemoryCacheAlignmentMask;

  private final io.netty.buffer.PoolSubpage<T>[] tinySubpagePools;

  private final io.netty.buffer.PoolSubpage<T>[] smallSubpagePools;

  private final io.netty.buffer.PoolChunkList<T> q050;

  private final io.netty.buffer.PoolChunkList<T> q025;

  private final io.netty.buffer.PoolChunkList<T> q000;

  private final io.netty.buffer.PoolChunkList<T> qInit;

  private final io.netty.buffer.PoolChunkList<T> q075;

  private final io.netty.buffer.PoolChunkList<T> q100;

  private final java.util.List<io.netty.buffer.PoolChunkListMetric> chunkListMetrics;

  private long allocationsNormal;

  private final io.netty.util.internal.LongCounter allocationsTiny;

  private final io.netty.util.internal.LongCounter allocationsSmall;

  private final io.netty.util.internal.LongCounter allocationsHuge;

  private final io.netty.util.internal.LongCounter activeBytesHuge;

  private long deallocationsTiny;

  private long deallocationsSmall;

  private long deallocationsNormal;

  private final io.netty.util.internal.LongCounter deallocationsHuge;

  final java.util.concurrent.atomic.AtomicInteger numThreadCaches;

  static final boolean $assertionsDisabled;

  protected io.netty.buffer.PoolArena(io.netty.buffer.PooledByteBufAllocator, int, int, int, int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method io/netty/util/internal/PlatformDependent.newLongCounter:()Lio/netty/util/internal/LongCounter;
       8: putfield      #3                  // Field allocationsTiny:Lio/netty/util/internal/LongCounter;
      11: aload_0
      12: invokestatic  #2                  // Method io/netty/util/internal/PlatformDependent.newLongCounter:()Lio/netty/util/internal/LongCounter;
      15: putfield      #4                  // Field allocationsSmall:Lio/netty/util/internal/LongCounter;
      18: aload_0
      19: invokestatic  #2                  // Method io/netty/util/internal/PlatformDependent.newLongCounter:()Lio/netty/util/internal/LongCounter;
      22: putfield      #5                  // Field allocationsHuge:Lio/netty/util/internal/LongCounter;
      25: aload_0
      26: invokestatic  #2                  // Method io/netty/util/internal/PlatformDependent.newLongCounter:()Lio/netty/util/internal/LongCounter;
      29: putfield      #6                  // Field activeBytesHuge:Lio/netty/util/internal/LongCounter;
      32: aload_0
      33: invokestatic  #2                  // Method io/netty/util/internal/PlatformDependent.newLongCounter:()Lio/netty/util/internal/LongCounter;
      36: putfield      #7                  // Field deallocationsHuge:Lio/netty/util/internal/LongCounter;
      39: aload_0
      40: new           #8                  // class java/util/concurrent/atomic/AtomicInteger
      43: dup
      44: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      47: putfield      #10                 // Field numThreadCaches:Ljava/util/concurrent/atomic/AtomicInteger;
      50: aload_0
      51: aload_1
      52: putfield      #11                 // Field parent:Lio/netty/buffer/PooledByteBufAllocator;
      55: aload_0
      56: iload_2
      57: putfield      #12                 // Field pageSize:I
      60: aload_0
      61: iload_3
      62: putfield      #13                 // Field maxOrder:I
      65: aload_0
      66: iload         4
      68: putfield      #14                 // Field pageShifts:I
      71: aload_0
      72: iload         5
      74: putfield      #15                 // Field chunkSize:I
      77: aload_0
      78: iload         6
      80: putfield      #16                 // Field directMemoryCacheAlignment:I
      83: aload_0
      84: iload         6
      86: iconst_1
      87: isub
      88: putfield      #17                 // Field directMemoryCacheAlignmentMask:I
      91: aload_0
      92: iload_2
      93: iconst_1
      94: isub
      95: iconst_m1
      96: ixor
      97: putfield      #18                 // Field subpageOverflowMask:I
     100: aload_0
     101: aload_0
     102: bipush        32
     104: invokespecial #20                 // Method newSubpagePoolArray:(I)[Lio/netty/buffer/PoolSubpage;
     107: putfield      #21                 // Field tinySubpagePools:[Lio/netty/buffer/PoolSubpage;
     110: iconst_0
     111: istore        7
     113: iload         7
     115: aload_0
     116: getfield      #21                 // Field tinySubpagePools:[Lio/netty/buffer/PoolSubpage;
     119: arraylength
     120: if_icmpge     141
     123: aload_0
     124: getfield      #21                 // Field tinySubpagePools:[Lio/netty/buffer/PoolSubpage;
     127: iload         7
     129: aload_0
     130: iload_2
     131: invokespecial #22                 // Method newSubpagePoolHead:(I)Lio/netty/buffer/PoolSubpage;
     134: aastore
     135: iinc          7, 1
     138: goto          113
     141: aload_0
     142: iload         4
     144: bipush        9
     146: isub
     147: putfield      #23                 // Field numSmallSubpagePools:I
     150: aload_0
     151: aload_0
     152: aload_0
     153: getfield      #23                 // Field numSmallSubpagePools:I
     156: invokespecial #20                 // Method newSubpagePoolArray:(I)[Lio/netty/buffer/PoolSubpage;
     159: putfield      #24                 // Field smallSubpagePools:[Lio/netty/buffer/PoolSubpage;
     162: iconst_0
     163: istore        7
     165: iload         7
     167: aload_0
     168: getfield      #24                 // Field smallSubpagePools:[Lio/netty/buffer/PoolSubpage;
     171: arraylength
     172: if_icmpge     193
     175: aload_0
     176: getfield      #24                 // Field smallSubpagePools:[Lio/netty/buffer/PoolSubpage;
     179: iload         7
     181: aload_0
     182: iload_2
     183: invokespecial #22                 // Method newSubpagePoolHead:(I)Lio/netty/buffer/PoolSubpage;
     186: aastore
     187: iinc          7, 1
     190: goto          165
     193: aload_0
     194: new           #25                 // class io/netty/buffer/PoolChunkList
     197: dup
     198: aload_0
     199: aconst_null
     200: bipush        100
     202: ldc           #27                 // int 2147483647
     204: iload         5
     206: invokespecial #28                 // Method io/netty/buffer/PoolChunkList."<init>":(Lio/netty/buffer/PoolArena;Lio/netty/buffer/PoolChunkList;III)V
     209: putfield      #29                 // Field q100:Lio/netty/buffer/PoolChunkList;
     212: aload_0
     213: new           #25                 // class io/netty/buffer/PoolChunkList
     216: dup
     217: aload_0
     218: aload_0
     219: getfield      #29                 // Field q100:Lio/netty/buffer/PoolChunkList;
     222: bipush        75
     224: bipush        100
     226: iload         5
     228: invokespecial #28                 // Method io/netty/buffer/PoolChunkList."<init>":(Lio/netty/buffer/PoolArena;Lio/netty/buffer/PoolChunkList;III)V
     231: putfield      #30                 // Field q075:Lio/netty/buffer/PoolChunkList;
     234: aload_0
     235: new           #25                 // class io/netty/buffer/PoolChunkList
     238: dup
     239: aload_0
     240: aload_0
     241: getfield      #30                 // Field q075:Lio/netty/buffer/PoolChunkList;
     244: bipush        50
     246: bipush        100
     248: iload         5
     250: invokespecial #28                 // Method io/netty/buffer/PoolChunkList."<init>":(Lio/netty/buffer/PoolArena;Lio/netty/buffer/PoolChunkList;III)V
     253: putfield      #31                 // Field q050:Lio/netty/buffer/PoolChunkList;
     256: aload_0
     257: new           #25                 // class io/netty/buffer/PoolChunkList
     260: dup
     261: aload_0
     262: aload_0
     263: getfield      #31                 // Field q050:Lio/netty/buffer/PoolChunkList;
     266: bipush        25
     268: bipush        75
     270: iload         5
     272: invokespecial #28                 // Method io/netty/buffer/PoolChunkList."<init>":(Lio/netty/buffer/PoolArena;Lio/netty/buffer/PoolChunkList;III)V
     275: putfield      #32                 // Field q025:Lio/netty/buffer/PoolChunkList;
     278: aload_0
     279: new           #25                 // class io/netty/buffer/PoolChunkList
     282: dup
     283: aload_0
     284: aload_0
     285: getfield      #32                 // Field q025:Lio/netty/buffer/PoolChunkList;
     288: iconst_1
     289: bipush        50
     291: iload         5
     293: invokespecial #28                 // Method io/netty/buffer/PoolChunkList."<init>":(Lio/netty/buffer/PoolArena;Lio/netty/buffer/PoolChunkList;III)V
     296: putfield      #33                 // Field q000:Lio/netty/buffer/PoolChunkList;
     299: aload_0
     300: new           #25                 // class io/netty/buffer/PoolChunkList
     303: dup
     304: aload_0
     305: aload_0
     306: getfield      #33                 // Field q000:Lio/netty/buffer/PoolChunkList;
     309: ldc           #34                 // int -2147483648
     311: bipush        25
     313: iload         5
     315: invokespecial #28                 // Method io/netty/buffer/PoolChunkList."<init>":(Lio/netty/buffer/PoolArena;Lio/netty/buffer/PoolChunkList;III)V
     318: putfield      #35                 // Field qInit:Lio/netty/buffer/PoolChunkList;
     321: aload_0
     322: getfield      #29                 // Field q100:Lio/netty/buffer/PoolChunkList;
     325: aload_0
     326: getfield      #30                 // Field q075:Lio/netty/buffer/PoolChunkList;
     329: invokevirtual #36                 // Method io/netty/buffer/PoolChunkList.prevList:(Lio/netty/buffer/PoolChunkList;)V
     332: aload_0
     333: getfield      #30                 // Field q075:Lio/netty/buffer/PoolChunkList;
     336: aload_0
     337: getfield      #31                 // Field q050:Lio/netty/buffer/PoolChunkList;
     340: invokevirtual #36                 // Method io/netty/buffer/PoolChunkList.prevList:(Lio/netty/buffer/PoolChunkList;)V
     343: aload_0
     344: getfield      #31                 // Field q050:Lio/netty/buffer/PoolChunkList;
     347: aload_0
     348: getfield      #32                 // Field q025:Lio/netty/buffer/PoolChunkList;
     351: invokevirtual #36                 // Method io/netty/buffer/PoolChunkList.prevList:(Lio/netty/buffer/PoolChunkList;)V
     354: aload_0
     355: getfield      #32                 // Field q025:Lio/netty/buffer/PoolChunkList;
     358: aload_0
     359: getfield      #33                 // Field q000:Lio/netty/buffer/PoolChunkList;
     362: invokevirtual #36                 // Method io/netty/buffer/PoolChunkList.prevList:(Lio/netty/buffer/PoolChunkList;)V
     365: aload_0
     366: getfield      #33                 // Field q000:Lio/netty/buffer/PoolChunkList;
     369: aconst_null
     370: invokevirtual #36                 // Method io/netty/buffer/PoolChunkList.prevList:(Lio/netty/buffer/PoolChunkList;)V
     373: aload_0
     374: getfield      #35                 // Field qInit:Lio/netty/buffer/PoolChunkList;
     377: aload_0
     378: getfield      #35                 // Field qInit:Lio/netty/buffer/PoolChunkList;
     381: invokevirtual #36                 // Method io/netty/buffer/PoolChunkList.prevList:(Lio/netty/buffer/PoolChunkList;)V
     384: new           #37                 // class java/util/ArrayList
     387: dup
     388: bipush        6
     390: invokespecial #38                 // Method java/util/ArrayList."<init>":(I)V
     393: astore        7
     395: aload         7
     397: aload_0
     398: getfield      #35                 // Field qInit:Lio/netty/buffer/PoolChunkList;
     401: invokeinterface #39,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     406: pop
     407: aload         7
     409: aload_0
     410: getfield      #33                 // Field q000:Lio/netty/buffer/PoolChunkList;
     413: invokeinterface #39,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     418: pop
     419: aload         7
     421: aload_0
     422: getfield      #32                 // Field q025:Lio/netty/buffer/PoolChunkList;
     425: invokeinterface #39,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     430: pop
     431: aload         7
     433: aload_0
     434: getfield      #31                 // Field q050:Lio/netty/buffer/PoolChunkList;
     437: invokeinterface #39,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     442: pop
     443: aload         7
     445: aload_0
     446: getfield      #30                 // Field q075:Lio/netty/buffer/PoolChunkList;
     449: invokeinterface #39,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     454: pop
     455: aload         7
     457: aload_0
     458: getfield      #29                 // Field q100:Lio/netty/buffer/PoolChunkList;
     461: invokeinterface #39,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     466: pop
     467: aload_0
     468: aload         7
     470: invokestatic  #40                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
     473: putfield      #41                 // Field chunkListMetrics:Ljava/util/List;
     476: return

  private io.netty.buffer.PoolSubpage<T> newSubpagePoolHead(int);
    Code:
       0: new           #42                 // class io/netty/buffer/PoolSubpage
       3: dup
       4: iload_1
       5: invokespecial #43                 // Method io/netty/buffer/PoolSubpage."<init>":(I)V
       8: astore_2
       9: aload_2
      10: aload_2
      11: putfield      #44                 // Field io/netty/buffer/PoolSubpage.prev:Lio/netty/buffer/PoolSubpage;
      14: aload_2
      15: aload_2
      16: putfield      #45                 // Field io/netty/buffer/PoolSubpage.next:Lio/netty/buffer/PoolSubpage;
      19: aload_2
      20: areturn

  private io.netty.buffer.PoolSubpage<T>[] newSubpagePoolArray(int);
    Code:
       0: iload_1
       1: anewarray     #42                 // class io/netty/buffer/PoolSubpage
       4: areturn

  abstract boolean isDirect();

  io.netty.buffer.PooledByteBuf<T> allocate(io.netty.buffer.PoolThreadCache, int, int);
    Code:
       0: aload_0
       1: iload_3
       2: invokevirtual #46                 // Method newByteBuf:(I)Lio/netty/buffer/PooledByteBuf;
       5: astore        4
       7: aload_0
       8: aload_1
       9: aload         4
      11: iload_2
      12: invokespecial #47                 // Method allocate:(Lio/netty/buffer/PoolThreadCache;Lio/netty/buffer/PooledByteBuf;I)V
      15: aload         4
      17: areturn

  static int tinyIdx(int);
    Code:
       0: iload_0
       1: iconst_4
       2: iushr
       3: ireturn

  static int smallIdx(int);
    Code:
       0: iconst_0
       1: istore_1
       2: iload_0
       3: bipush        10
       5: iushr
       6: istore_2
       7: iload_2
       8: ifeq          21
      11: iload_2
      12: iconst_1
      13: iushr
      14: istore_2
      15: iinc          1, 1
      18: goto          7
      21: iload_1
      22: ireturn

  boolean isTinyOrSmall(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #18                 // Field subpageOverflowMask:I
       5: iand
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  static boolean isTiny(int);
    Code:
       0: iload_0
       1: sipush        -512
       4: iand
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  private void allocate(io.netty.buffer.PoolThreadCache, io.netty.buffer.PooledByteBuf<T>, int);
    Code:
       0: aload_0
       1: iload_3
       2: invokevirtual #48                 // Method normalizeCapacity:(I)I
       5: istore        4
       7: aload_0
       8: iload         4
      10: invokevirtual #49                 // Method isTinyOrSmall:(I)Z
      13: ifeq          240
      16: iload         4
      18: invokestatic  #50                 // Method isTiny:(I)Z
      21: istore        7
      23: iload         7
      25: ifeq          57
      28: aload_1
      29: aload_0
      30: aload_2
      31: iload_3
      32: iload         4
      34: invokevirtual #51                 // Method io/netty/buffer/PoolThreadCache.allocateTiny:(Lio/netty/buffer/PoolArena;Lio/netty/buffer/PooledByteBuf;II)Z
      37: ifeq          41
      40: return
      41: iload         4
      43: invokestatic  #52                 // Method tinyIdx:(I)I
      46: istore        5
      48: aload_0
      49: getfield      #21                 // Field tinySubpagePools:[Lio/netty/buffer/PoolSubpage;
      52: astore        6
      54: goto          83
      57: aload_1
      58: aload_0
      59: aload_2
      60: iload_3
      61: iload         4
      63: invokevirtual #53                 // Method io/netty/buffer/PoolThreadCache.allocateSmall:(Lio/netty/buffer/PoolArena;Lio/netty/buffer/PooledByteBuf;II)Z
      66: ifeq          70
      69: return
      70: iload         4
      72: invokestatic  #54                 // Method smallIdx:(I)I
      75: istore        5
      77: aload_0
      78: getfield      #24                 // Field smallSubpagePools:[Lio/netty/buffer/PoolSubpage;
      81: astore        6
      83: aload         6
      85: iload         5
      87: aaload
      88: astore        8
      90: aload         8
      92: dup
      93: astore        9
      95: monitorenter
      96: aload         8
      98: getfield      #45                 // Field io/netty/buffer/PoolSubpage.next:Lio/netty/buffer/PoolSubpage;
     101: astore        10
     103: aload         10
     105: aload         8
     107: if_acmpeq     192
     110: getstatic     #55                 // Field $assertionsDisabled:Z
     113: ifne          142
     116: aload         10
     118: getfield      #56                 // Field io/netty/buffer/PoolSubpage.doNotDestroy:Z
     121: ifeq          134
     124: aload         10
     126: getfield      #57                 // Field io/netty/buffer/PoolSubpage.elemSize:I
     129: iload         4
     131: if_icmpeq     142
     134: new           #58                 // class java/lang/AssertionError
     137: dup
     138: invokespecial #59                 // Method java/lang/AssertionError."<init>":()V
     141: athrow
     142: aload         10
     144: invokevirtual #60                 // Method io/netty/buffer/PoolSubpage.allocate:()J
     147: lstore        11
     149: getstatic     #55                 // Field $assertionsDisabled:Z
     152: ifne          170
     155: lload         11
     157: lconst_0
     158: lcmp
     159: ifge          170
     162: new           #58                 // class java/lang/AssertionError
     165: dup
     166: invokespecial #59                 // Method java/lang/AssertionError."<init>":()V
     169: athrow
     170: aload         10
     172: getfield      #61                 // Field io/netty/buffer/PoolSubpage.chunk:Lio/netty/buffer/PoolChunk;
     175: aload_2
     176: lload         11
     178: iload_3
     179: invokevirtual #62                 // Method io/netty/buffer/PoolChunk.initBufWithSubpage:(Lio/netty/buffer/PooledByteBuf;JI)V
     182: aload_0
     183: iload         7
     185: invokespecial #63                 // Method incTinySmallAllocation:(Z)V
     188: aload         9
     190: monitorexit
     191: return
     192: aload         9
     194: monitorexit
     195: goto          206
     198: astore        13
     200: aload         9
     202: monitorexit
     203: aload         13
     205: athrow
     206: aload_0
     207: dup
     208: astore        9
     210: monitorenter
     211: aload_0
     212: aload_2
     213: iload_3
     214: iload         4
     216: invokespecial #64                 // Method allocateNormal:(Lio/netty/buffer/PooledByteBuf;II)V
     219: aload         9
     221: monitorexit
     222: goto          233
     225: astore        14
     227: aload         9
     229: monitorexit
     230: aload         14
     232: athrow
     233: aload_0
     234: iload         7
     236: invokespecial #63                 // Method incTinySmallAllocation:(Z)V
     239: return
     240: iload         4
     242: aload_0
     243: getfield      #15                 // Field chunkSize:I
     246: if_icmpgt     302
     249: aload_1
     250: aload_0
     251: aload_2
     252: iload_3
     253: iload         4
     255: invokevirtual #65                 // Method io/netty/buffer/PoolThreadCache.allocateNormal:(Lio/netty/buffer/PoolArena;Lio/netty/buffer/PooledByteBuf;II)Z
     258: ifeq          262
     261: return
     262: aload_0
     263: dup
     264: astore        5
     266: monitorenter
     267: aload_0
     268: aload_2
     269: iload_3
     270: iload         4
     272: invokespecial #64                 // Method allocateNormal:(Lio/netty/buffer/PooledByteBuf;II)V
     275: aload_0
     276: dup
     277: getfield      #66                 // Field allocationsNormal:J
     280: lconst_1
     281: ladd
     282: putfield      #66                 // Field allocationsNormal:J
     285: aload         5
     287: monitorexit
     288: goto          299
     291: astore        15
     293: aload         5
     295: monitorexit
     296: aload         15
     298: athrow
     299: goto          308
     302: aload_0
     303: aload_2
     304: iload_3
     305: invokespecial #67                 // Method allocateHuge:(Lio/netty/buffer/PooledByteBuf;I)V
     308: return
    Exception table:
       from    to  target type
          96   191   198   any
         192   195   198   any
         198   203   198   any
         211   222   225   any
         225   230   225   any
         267   288   291   any
         291   296   291   any

  private void allocateNormal(io.netty.buffer.PooledByteBuf<T>, int, int);
    Code:
       0: aload_0
       1: getfield      #31                 // Field q050:Lio/netty/buffer/PoolChunkList;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #68                 // Method io/netty/buffer/PoolChunkList.allocate:(Lio/netty/buffer/PooledByteBuf;II)Z
      10: ifne          65
      13: aload_0
      14: getfield      #32                 // Field q025:Lio/netty/buffer/PoolChunkList;
      17: aload_1
      18: iload_2
      19: iload_3
      20: invokevirtual #68                 // Method io/netty/buffer/PoolChunkList.allocate:(Lio/netty/buffer/PooledByteBuf;II)Z
      23: ifne          65
      26: aload_0
      27: getfield      #33                 // Field q000:Lio/netty/buffer/PoolChunkList;
      30: aload_1
      31: iload_2
      32: iload_3
      33: invokevirtual #68                 // Method io/netty/buffer/PoolChunkList.allocate:(Lio/netty/buffer/PooledByteBuf;II)Z
      36: ifne          65
      39: aload_0
      40: getfield      #35                 // Field qInit:Lio/netty/buffer/PoolChunkList;
      43: aload_1
      44: iload_2
      45: iload_3
      46: invokevirtual #68                 // Method io/netty/buffer/PoolChunkList.allocate:(Lio/netty/buffer/PooledByteBuf;II)Z
      49: ifne          65
      52: aload_0
      53: getfield      #30                 // Field q075:Lio/netty/buffer/PoolChunkList;
      56: aload_1
      57: iload_2
      58: iload_3
      59: invokevirtual #68                 // Method io/netty/buffer/PoolChunkList.allocate:(Lio/netty/buffer/PooledByteBuf;II)Z
      62: ifeq          66
      65: return
      66: aload_0
      67: aload_0
      68: getfield      #12                 // Field pageSize:I
      71: aload_0
      72: getfield      #13                 // Field maxOrder:I
      75: aload_0
      76: getfield      #14                 // Field pageShifts:I
      79: aload_0
      80: getfield      #15                 // Field chunkSize:I
      83: invokevirtual #69                 // Method newChunk:(IIII)Lio/netty/buffer/PoolChunk;
      86: astore        4
      88: aload         4
      90: iload_3
      91: invokevirtual #70                 // Method io/netty/buffer/PoolChunk.allocate:(I)J
      94: lstore        5
      96: getstatic     #55                 // Field $assertionsDisabled:Z
      99: ifne          117
     102: lload         5
     104: lconst_0
     105: lcmp
     106: ifgt          117
     109: new           #58                 // class java/lang/AssertionError
     112: dup
     113: invokespecial #59                 // Method java/lang/AssertionError."<init>":()V
     116: athrow
     117: aload         4
     119: aload_1
     120: lload         5
     122: iload_2
     123: invokevirtual #71                 // Method io/netty/buffer/PoolChunk.initBuf:(Lio/netty/buffer/PooledByteBuf;JI)V
     126: aload_0
     127: getfield      #35                 // Field qInit:Lio/netty/buffer/PoolChunkList;
     130: aload         4
     132: invokevirtual #72                 // Method io/netty/buffer/PoolChunkList.add:(Lio/netty/buffer/PoolChunk;)V
     135: return

  private void incTinySmallAllocation(boolean);
    Code:
       0: iload_1
       1: ifeq          16
       4: aload_0
       5: getfield      #3                  // Field allocationsTiny:Lio/netty/util/internal/LongCounter;
       8: invokeinterface #73,  1           // InterfaceMethod io/netty/util/internal/LongCounter.increment:()V
      13: goto          25
      16: aload_0
      17: getfield      #4                  // Field allocationsSmall:Lio/netty/util/internal/LongCounter;
      20: invokeinterface #73,  1           // InterfaceMethod io/netty/util/internal/LongCounter.increment:()V
      25: return

  private void allocateHuge(io.netty.buffer.PooledByteBuf<T>, int);
    Code:
       0: aload_0
       1: iload_2
       2: invokevirtual #74                 // Method newUnpooledChunk:(I)Lio/netty/buffer/PoolChunk;
       5: astore_3
       6: aload_0
       7: getfield      #6                  // Field activeBytesHuge:Lio/netty/util/internal/LongCounter;
      10: aload_3
      11: invokevirtual #75                 // Method io/netty/buffer/PoolChunk.chunkSize:()I
      14: i2l
      15: invokeinterface #76,  3           // InterfaceMethod io/netty/util/internal/LongCounter.add:(J)V
      20: aload_1
      21: aload_3
      22: iload_2
      23: invokevirtual #77                 // Method io/netty/buffer/PooledByteBuf.initUnpooled:(Lio/netty/buffer/PoolChunk;I)V
      26: aload_0
      27: getfield      #5                  // Field allocationsHuge:Lio/netty/util/internal/LongCounter;
      30: invokeinterface #73,  1           // InterfaceMethod io/netty/util/internal/LongCounter.increment:()V
      35: return

  void free(io.netty.buffer.PoolChunk<T>, long, int, io.netty.buffer.PoolThreadCache);
    Code:
       0: aload_1
       1: getfield      #78                 // Field io/netty/buffer/PoolChunk.unpooled:Z
       4: ifeq          43
       7: aload_1
       8: invokevirtual #75                 // Method io/netty/buffer/PoolChunk.chunkSize:()I
      11: istore        6
      13: aload_0
      14: aload_1
      15: invokevirtual #79                 // Method destroyChunk:(Lio/netty/buffer/PoolChunk;)V
      18: aload_0
      19: getfield      #6                  // Field activeBytesHuge:Lio/netty/util/internal/LongCounter;
      22: iload         6
      24: ineg
      25: i2l
      26: invokeinterface #76,  3           // InterfaceMethod io/netty/util/internal/LongCounter.add:(J)V
      31: aload_0
      32: getfield      #7                  // Field deallocationsHuge:Lio/netty/util/internal/LongCounter;
      35: invokeinterface #73,  1           // InterfaceMethod io/netty/util/internal/LongCounter.increment:()V
      40: goto          80
      43: aload_0
      44: iload         4
      46: invokespecial #80                 // Method sizeClass:(I)Lio/netty/buffer/PoolArena$SizeClass;
      49: astore        6
      51: aload         5
      53: ifnull        72
      56: aload         5
      58: aload_0
      59: aload_1
      60: lload_2
      61: iload         4
      63: aload         6
      65: invokevirtual #81                 // Method io/netty/buffer/PoolThreadCache.add:(Lio/netty/buffer/PoolArena;Lio/netty/buffer/PoolChunk;JILio/netty/buffer/PoolArena$SizeClass;)Z
      68: ifeq          72
      71: return
      72: aload_0
      73: aload_1
      74: lload_2
      75: aload         6
      77: invokevirtual #82                 // Method freeChunk:(Lio/netty/buffer/PoolChunk;JLio/netty/buffer/PoolArena$SizeClass;)V
      80: return

  private io.netty.buffer.PoolArena$SizeClass sizeClass(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #49                 // Method isTinyOrSmall:(I)Z
       5: ifne          12
       8: getstatic     #83                 // Field io/netty/buffer/PoolArena$SizeClass.Normal:Lio/netty/buffer/PoolArena$SizeClass;
      11: areturn
      12: iload_1
      13: invokestatic  #50                 // Method isTiny:(I)Z
      16: ifeq          25
      19: getstatic     #84                 // Field io/netty/buffer/PoolArena$SizeClass.Tiny:Lio/netty/buffer/PoolArena$SizeClass;
      22: goto          28
      25: getstatic     #85                 // Field io/netty/buffer/PoolArena$SizeClass.Small:Lio/netty/buffer/PoolArena$SizeClass;
      28: areturn

  void freeChunk(io.netty.buffer.PoolChunk<T>, long, io.netty.buffer.PoolArena$SizeClass);
    Code:
       0: aload_0
       1: dup
       2: astore        6
       4: monitorenter
       5: getstatic     #86                 // Field io/netty/buffer/PoolArena$1.$SwitchMap$io$netty$buffer$PoolArena$SizeClass:[I
       8: aload         4
      10: invokevirtual #87                 // Method io/netty/buffer/PoolArena$SizeClass.ordinal:()I
      13: iaload
      14: tableswitch   { // 1 to 3
                     1: 40
                     2: 53
                     3: 66
               default: 79
          }
      40: aload_0
      41: dup
      42: getfield      #88                 // Field deallocationsNormal:J
      45: lconst_1
      46: ladd
      47: putfield      #88                 // Field deallocationsNormal:J
      50: goto          87
      53: aload_0
      54: dup
      55: getfield      #89                 // Field deallocationsSmall:J
      58: lconst_1
      59: ladd
      60: putfield      #89                 // Field deallocationsSmall:J
      63: goto          87
      66: aload_0
      67: dup
      68: getfield      #90                 // Field deallocationsTiny:J
      71: lconst_1
      72: ladd
      73: putfield      #90                 // Field deallocationsTiny:J
      76: goto          87
      79: new           #91                 // class java/lang/Error
      82: dup
      83: invokespecial #92                 // Method java/lang/Error."<init>":()V
      86: athrow
      87: aload_1
      88: getfield      #93                 // Field io/netty/buffer/PoolChunk.parent:Lio/netty/buffer/PoolChunkList;
      91: aload_1
      92: lload_2
      93: invokevirtual #94                 // Method io/netty/buffer/PoolChunkList.free:(Lio/netty/buffer/PoolChunk;J)Z
      96: ifne          103
      99: iconst_1
     100: goto          104
     103: iconst_0
     104: istore        5
     106: aload         6
     108: monitorexit
     109: goto          120
     112: astore        7
     114: aload         6
     116: monitorexit
     117: aload         7
     119: athrow
     120: iload         5
     122: ifeq          130
     125: aload_0
     126: aload_1
     127: invokevirtual #79                 // Method destroyChunk:(Lio/netty/buffer/PoolChunk;)V
     130: return
    Exception table:
       from    to  target type
           5   109   112   any
         112   117   112   any

  io.netty.buffer.PoolSubpage<T> findSubpagePoolHead(int);
    Code:
       0: iload_1
       1: invokestatic  #50                 // Method isTiny:(I)Z
       4: ifeq          19
       7: iload_1
       8: iconst_4
       9: iushr
      10: istore_2
      11: aload_0
      12: getfield      #21                 // Field tinySubpagePools:[Lio/netty/buffer/PoolSubpage;
      15: astore_3
      16: goto          45
      19: iconst_0
      20: istore_2
      21: iload_1
      22: bipush        10
      24: iushr
      25: istore_1
      26: iload_1
      27: ifeq          40
      30: iload_1
      31: iconst_1
      32: iushr
      33: istore_1
      34: iinc          2, 1
      37: goto          26
      40: aload_0
      41: getfield      #24                 // Field smallSubpagePools:[Lio/netty/buffer/PoolSubpage;
      44: astore_3
      45: aload_3
      46: iload_2
      47: aaload
      48: areturn

  int normalizeCapacity(int);
    Code:
       0: iload_1
       1: ifge          36
       4: new           #95                 // class java/lang/IllegalArgumentException
       7: dup
       8: new           #96                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #97                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #98                 // String capacity:
      17: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: iload_1
      21: invokevirtual #100                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      24: ldc           #101                // String  (expected: 0+)
      26: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokespecial #103                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: iload_1
      37: aload_0
      38: getfield      #15                 // Field chunkSize:I
      41: if_icmplt     61
      44: aload_0
      45: getfield      #16                 // Field directMemoryCacheAlignment:I
      48: ifne          55
      51: iload_1
      52: goto          60
      55: aload_0
      56: iload_1
      57: invokevirtual #104                // Method alignCapacity:(I)I
      60: ireturn
      61: iload_1
      62: invokestatic  #50                 // Method isTiny:(I)Z
      65: ifne          148
      68: iload_1
      69: istore_2
      70: iinc          2, -1
      73: iload_2
      74: iload_2
      75: iconst_1
      76: iushr
      77: ior
      78: istore_2
      79: iload_2
      80: iload_2
      81: iconst_2
      82: iushr
      83: ior
      84: istore_2
      85: iload_2
      86: iload_2
      87: iconst_4
      88: iushr
      89: ior
      90: istore_2
      91: iload_2
      92: iload_2
      93: bipush        8
      95: iushr
      96: ior
      97: istore_2
      98: iload_2
      99: iload_2
     100: bipush        16
     102: iushr
     103: ior
     104: istore_2
     105: iinc          2, 1
     108: iload_2
     109: ifge          116
     112: iload_2
     113: iconst_1
     114: iushr
     115: istore_2
     116: getstatic     #55                 // Field $assertionsDisabled:Z
     119: ifne          146
     122: aload_0
     123: getfield      #16                 // Field directMemoryCacheAlignment:I
     126: ifeq          146
     129: iload_2
     130: aload_0
     131: getfield      #17                 // Field directMemoryCacheAlignmentMask:I
     134: iand
     135: ifeq          146
     138: new           #58                 // class java/lang/AssertionError
     141: dup
     142: invokespecial #59                 // Method java/lang/AssertionError."<init>":()V
     145: athrow
     146: iload_2
     147: ireturn
     148: aload_0
     149: getfield      #16                 // Field directMemoryCacheAlignment:I
     152: ifle          161
     155: aload_0
     156: iload_1
     157: invokevirtual #104                // Method alignCapacity:(I)I
     160: ireturn
     161: iload_1
     162: bipush        15
     164: iand
     165: ifne          170
     168: iload_1
     169: ireturn
     170: iload_1
     171: bipush        -16
     173: iand
     174: bipush        16
     176: iadd
     177: ireturn

  int alignCapacity(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #17                 // Field directMemoryCacheAlignmentMask:I
       5: iand
       6: istore_2
       7: iload_2
       8: ifne          15
      11: iload_1
      12: goto          23
      15: iload_1
      16: aload_0
      17: getfield      #16                 // Field directMemoryCacheAlignment:I
      20: iadd
      21: iload_2
      22: isub
      23: ireturn

  void reallocate(io.netty.buffer.PooledByteBuf<T>, int, boolean);
    Code:
       0: iload_2
       1: iflt          12
       4: iload_2
       5: aload_1
       6: invokevirtual #105                // Method io/netty/buffer/PooledByteBuf.maxCapacity:()I
       9: if_icmple     39
      12: new           #95                 // class java/lang/IllegalArgumentException
      15: dup
      16: new           #96                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #97                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #106                // String newCapacity:
      25: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: iload_2
      29: invokevirtual #100                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      32: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokespecial #103                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_1
      40: getfield      #107                // Field io/netty/buffer/PooledByteBuf.length:I
      43: istore        4
      45: iload         4
      47: iload_2
      48: if_icmpne     52
      51: return
      52: aload_1
      53: getfield      #108                // Field io/netty/buffer/PooledByteBuf.chunk:Lio/netty/buffer/PoolChunk;
      56: astore        5
      58: aload_1
      59: getfield      #109                // Field io/netty/buffer/PooledByteBuf.handle:J
      62: lstore        6
      64: aload_1
      65: getfield      #110                // Field io/netty/buffer/PooledByteBuf.memory:Ljava/lang/Object;
      68: astore        8
      70: aload_1
      71: getfield      #111                // Field io/netty/buffer/PooledByteBuf.offset:I
      74: istore        9
      76: aload_1
      77: getfield      #112                // Field io/netty/buffer/PooledByteBuf.maxLength:I
      80: istore        10
      82: aload_1
      83: invokevirtual #113                // Method io/netty/buffer/PooledByteBuf.readerIndex:()I
      86: istore        11
      88: aload_1
      89: invokevirtual #114                // Method io/netty/buffer/PooledByteBuf.writerIndex:()I
      92: istore        12
      94: aload_0
      95: aload_0
      96: getfield      #11                 // Field parent:Lio/netty/buffer/PooledByteBufAllocator;
      99: invokevirtual #115                // Method io/netty/buffer/PooledByteBufAllocator.threadCache:()Lio/netty/buffer/PoolThreadCache;
     102: aload_1
     103: iload_2
     104: invokespecial #47                 // Method allocate:(Lio/netty/buffer/PoolThreadCache;Lio/netty/buffer/PooledByteBuf;I)V
     107: iload_2
     108: iload         4
     110: if_icmple     134
     113: aload_0
     114: aload         8
     116: iload         9
     118: aload_1
     119: getfield      #110                // Field io/netty/buffer/PooledByteBuf.memory:Ljava/lang/Object;
     122: aload_1
     123: getfield      #111                // Field io/netty/buffer/PooledByteBuf.offset:I
     126: iload         4
     128: invokevirtual #116                // Method memoryCopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     131: goto          191
     134: iload_2
     135: iload         4
     137: if_icmpge     191
     140: iload         11
     142: iload_2
     143: if_icmpge     185
     146: iload         12
     148: iload_2
     149: if_icmple     155
     152: iload_2
     153: istore        12
     155: aload_0
     156: aload         8
     158: iload         9
     160: iload         11
     162: iadd
     163: aload_1
     164: getfield      #110                // Field io/netty/buffer/PooledByteBuf.memory:Ljava/lang/Object;
     167: aload_1
     168: getfield      #111                // Field io/netty/buffer/PooledByteBuf.offset:I
     171: iload         11
     173: iadd
     174: iload         12
     176: iload         11
     178: isub
     179: invokevirtual #116                // Method memoryCopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     182: goto          191
     185: iload_2
     186: dup
     187: istore        12
     189: istore        11
     191: aload_1
     192: iload         11
     194: iload         12
     196: invokevirtual #117                // Method io/netty/buffer/PooledByteBuf.setIndex:(II)Lio/netty/buffer/ByteBuf;
     199: pop
     200: iload_3
     201: ifeq          218
     204: aload_0
     205: aload         5
     207: lload         6
     209: iload         10
     211: aload_1
     212: getfield      #118                // Field io/netty/buffer/PooledByteBuf.cache:Lio/netty/buffer/PoolThreadCache;
     215: invokevirtual #119                // Method free:(Lio/netty/buffer/PoolChunk;JILio/netty/buffer/PoolThreadCache;)V
     218: return

  public int numThreadCaches();
    Code:
       0: aload_0
       1: getfield      #10                 // Field numThreadCaches:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #120                // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public int numTinySubpages();
    Code:
       0: aload_0
       1: getfield      #21                 // Field tinySubpagePools:[Lio/netty/buffer/PoolSubpage;
       4: arraylength
       5: ireturn

  public int numSmallSubpages();
    Code:
       0: aload_0
       1: getfield      #24                 // Field smallSubpagePools:[Lio/netty/buffer/PoolSubpage;
       4: arraylength
       5: ireturn

  public int numChunkLists();
    Code:
       0: aload_0
       1: getfield      #41                 // Field chunkListMetrics:Ljava/util/List;
       4: invokeinterface #121,  1          // InterfaceMethod java/util/List.size:()I
       9: ireturn

  public java.util.List<io.netty.buffer.PoolSubpageMetric> tinySubpages();
    Code:
       0: aload_0
       1: getfield      #21                 // Field tinySubpagePools:[Lio/netty/buffer/PoolSubpage;
       4: invokestatic  #122                // Method subPageMetricList:([Lio/netty/buffer/PoolSubpage;)Ljava/util/List;
       7: areturn

  public java.util.List<io.netty.buffer.PoolSubpageMetric> smallSubpages();
    Code:
       0: aload_0
       1: getfield      #24                 // Field smallSubpagePools:[Lio/netty/buffer/PoolSubpage;
       4: invokestatic  #122                // Method subPageMetricList:([Lio/netty/buffer/PoolSubpage;)Ljava/util/List;
       7: areturn

  public java.util.List<io.netty.buffer.PoolChunkListMetric> chunkLists();
    Code:
       0: aload_0
       1: getfield      #41                 // Field chunkListMetrics:Ljava/util/List;
       4: areturn

  private static java.util.List<io.netty.buffer.PoolSubpageMetric> subPageMetricList(io.netty.buffer.PoolSubpage<?>[]);
    Code:
       0: new           #37                 // class java/util/ArrayList
       3: dup
       4: invokespecial #123                // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: astore_2
      10: aload_2
      11: arraylength
      12: istore_3
      13: iconst_0
      14: istore        4
      16: iload         4
      18: iload_3
      19: if_icmpge     80
      22: aload_2
      23: iload         4
      25: aaload
      26: astore        5
      28: aload         5
      30: getfield      #45                 // Field io/netty/buffer/PoolSubpage.next:Lio/netty/buffer/PoolSubpage;
      33: aload         5
      35: if_acmpne     41
      38: goto          74
      41: aload         5
      43: getfield      #45                 // Field io/netty/buffer/PoolSubpage.next:Lio/netty/buffer/PoolSubpage;
      46: astore        6
      48: aload_1
      49: aload         6
      51: invokeinterface #39,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      56: pop
      57: aload         6
      59: getfield      #45                 // Field io/netty/buffer/PoolSubpage.next:Lio/netty/buffer/PoolSubpage;
      62: astore        6
      64: aload         6
      66: aload         5
      68: if_acmpne     48
      71: goto          74
      74: iinc          4, 1
      77: goto          16
      80: aload_1
      81: areturn

  public long numAllocations();
    Code:
       0: aload_0
       1: dup
       2: astore_3
       3: monitorenter
       4: aload_0
       5: getfield      #66                 // Field allocationsNormal:J
       8: lstore_1
       9: aload_3
      10: monitorexit
      11: goto          21
      14: astore        4
      16: aload_3
      17: monitorexit
      18: aload         4
      20: athrow
      21: aload_0
      22: getfield      #3                  // Field allocationsTiny:Lio/netty/util/internal/LongCounter;
      25: invokeinterface #124,  1          // InterfaceMethod io/netty/util/internal/LongCounter.value:()J
      30: aload_0
      31: getfield      #4                  // Field allocationsSmall:Lio/netty/util/internal/LongCounter;
      34: invokeinterface #124,  1          // InterfaceMethod io/netty/util/internal/LongCounter.value:()J
      39: ladd
      40: lload_1
      41: ladd
      42: aload_0
      43: getfield      #5                  // Field allocationsHuge:Lio/netty/util/internal/LongCounter;
      46: invokeinterface #124,  1          // InterfaceMethod io/netty/util/internal/LongCounter.value:()J
      51: ladd
      52: lreturn
    Exception table:
       from    to  target type
           4    11    14   any
          14    18    14   any

  public long numTinyAllocations();
    Code:
       0: aload_0
       1: getfield      #3                  // Field allocationsTiny:Lio/netty/util/internal/LongCounter;
       4: invokeinterface #124,  1          // InterfaceMethod io/netty/util/internal/LongCounter.value:()J
       9: lreturn

  public long numSmallAllocations();
    Code:
       0: aload_0
       1: getfield      #4                  // Field allocationsSmall:Lio/netty/util/internal/LongCounter;
       4: invokeinterface #124,  1          // InterfaceMethod io/netty/util/internal/LongCounter.value:()J
       9: lreturn

  public synchronized long numNormalAllocations();
    Code:
       0: aload_0
       1: getfield      #66                 // Field allocationsNormal:J
       4: lreturn

  public long numDeallocations();
    Code:
       0: aload_0
       1: dup
       2: astore_3
       3: monitorenter
       4: aload_0
       5: getfield      #90                 // Field deallocationsTiny:J
       8: aload_0
       9: getfield      #89                 // Field deallocationsSmall:J
      12: ladd
      13: aload_0
      14: getfield      #88                 // Field deallocationsNormal:J
      17: ladd
      18: lstore_1
      19: aload_3
      20: monitorexit
      21: goto          31
      24: astore        4
      26: aload_3
      27: monitorexit
      28: aload         4
      30: athrow
      31: lload_1
      32: aload_0
      33: getfield      #7                  // Field deallocationsHuge:Lio/netty/util/internal/LongCounter;
      36: invokeinterface #124,  1          // InterfaceMethod io/netty/util/internal/LongCounter.value:()J
      41: ladd
      42: lreturn
    Exception table:
       from    to  target type
           4    21    24   any
          24    28    24   any

  public synchronized long numTinyDeallocations();
    Code:
       0: aload_0
       1: getfield      #90                 // Field deallocationsTiny:J
       4: lreturn

  public synchronized long numSmallDeallocations();
    Code:
       0: aload_0
       1: getfield      #89                 // Field deallocationsSmall:J
       4: lreturn

  public synchronized long numNormalDeallocations();
    Code:
       0: aload_0
       1: getfield      #88                 // Field deallocationsNormal:J
       4: lreturn

  public long numHugeAllocations();
    Code:
       0: aload_0
       1: getfield      #5                  // Field allocationsHuge:Lio/netty/util/internal/LongCounter;
       4: invokeinterface #124,  1          // InterfaceMethod io/netty/util/internal/LongCounter.value:()J
       9: lreturn

  public long numHugeDeallocations();
    Code:
       0: aload_0
       1: getfield      #7                  // Field deallocationsHuge:Lio/netty/util/internal/LongCounter;
       4: invokeinterface #124,  1          // InterfaceMethod io/netty/util/internal/LongCounter.value:()J
       9: lreturn

  public long numActiveAllocations();
    Code:
       0: aload_0
       1: getfield      #3                  // Field allocationsTiny:Lio/netty/util/internal/LongCounter;
       4: invokeinterface #124,  1          // InterfaceMethod io/netty/util/internal/LongCounter.value:()J
       9: aload_0
      10: getfield      #4                  // Field allocationsSmall:Lio/netty/util/internal/LongCounter;
      13: invokeinterface #124,  1          // InterfaceMethod io/netty/util/internal/LongCounter.value:()J
      18: ladd
      19: aload_0
      20: getfield      #5                  // Field allocationsHuge:Lio/netty/util/internal/LongCounter;
      23: invokeinterface #124,  1          // InterfaceMethod io/netty/util/internal/LongCounter.value:()J
      28: ladd
      29: aload_0
      30: getfield      #7                  // Field deallocationsHuge:Lio/netty/util/internal/LongCounter;
      33: invokeinterface #124,  1          // InterfaceMethod io/netty/util/internal/LongCounter.value:()J
      38: lsub
      39: lstore_1
      40: aload_0
      41: dup
      42: astore_3
      43: monitorenter
      44: lload_1
      45: aload_0
      46: getfield      #66                 // Field allocationsNormal:J
      49: aload_0
      50: getfield      #90                 // Field deallocationsTiny:J
      53: aload_0
      54: getfield      #89                 // Field deallocationsSmall:J
      57: ladd
      58: aload_0
      59: getfield      #88                 // Field deallocationsNormal:J
      62: ladd
      63: lsub
      64: ladd
      65: lstore_1
      66: aload_3
      67: monitorexit
      68: goto          78
      71: astore        4
      73: aload_3
      74: monitorexit
      75: aload         4
      77: athrow
      78: lload_1
      79: lconst_0
      80: invokestatic  #125                // Method java/lang/Math.max:(JJ)J
      83: lreturn
    Exception table:
       from    to  target type
          44    68    71   any
          71    75    71   any

  public long numActiveTinyAllocations();
    Code:
       0: aload_0
       1: invokevirtual #126                // Method numTinyAllocations:()J
       4: aload_0
       5: invokevirtual #127                // Method numTinyDeallocations:()J
       8: lsub
       9: lconst_0
      10: invokestatic  #125                // Method java/lang/Math.max:(JJ)J
      13: lreturn

  public long numActiveSmallAllocations();
    Code:
       0: aload_0
       1: invokevirtual #128                // Method numSmallAllocations:()J
       4: aload_0
       5: invokevirtual #129                // Method numSmallDeallocations:()J
       8: lsub
       9: lconst_0
      10: invokestatic  #125                // Method java/lang/Math.max:(JJ)J
      13: lreturn

  public long numActiveNormalAllocations();
    Code:
       0: aload_0
       1: dup
       2: astore_3
       3: monitorenter
       4: aload_0
       5: getfield      #66                 // Field allocationsNormal:J
       8: aload_0
       9: getfield      #88                 // Field deallocationsNormal:J
      12: lsub
      13: lstore_1
      14: aload_3
      15: monitorexit
      16: goto          26
      19: astore        4
      21: aload_3
      22: monitorexit
      23: aload         4
      25: athrow
      26: lload_1
      27: lconst_0
      28: invokestatic  #125                // Method java/lang/Math.max:(JJ)J
      31: lreturn
    Exception table:
       from    to  target type
           4    16    19   any
          19    23    19   any

  public long numActiveHugeAllocations();
    Code:
       0: aload_0
       1: invokevirtual #130                // Method numHugeAllocations:()J
       4: aload_0
       5: invokevirtual #131                // Method numHugeDeallocations:()J
       8: lsub
       9: lconst_0
      10: invokestatic  #125                // Method java/lang/Math.max:(JJ)J
      13: lreturn

  public long numActiveBytes();
    Code:
       0: aload_0
       1: getfield      #6                  // Field activeBytesHuge:Lio/netty/util/internal/LongCounter;
       4: invokeinterface #124,  1          // InterfaceMethod io/netty/util/internal/LongCounter.value:()J
       9: lstore_1
      10: aload_0
      11: dup
      12: astore_3
      13: monitorenter
      14: iconst_0
      15: istore        4
      17: iload         4
      19: aload_0
      20: getfield      #41                 // Field chunkListMetrics:Ljava/util/List;
      23: invokeinterface #121,  1          // InterfaceMethod java/util/List.size:()I
      28: if_icmpge     94
      31: aload_0
      32: getfield      #41                 // Field chunkListMetrics:Ljava/util/List;
      35: iload         4
      37: invokeinterface #132,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      42: checkcast     #133                // class io/netty/buffer/PoolChunkListMetric
      45: invokeinterface #134,  1          // InterfaceMethod io/netty/buffer/PoolChunkListMetric.iterator:()Ljava/util/Iterator;
      50: astore        5
      52: aload         5
      54: invokeinterface #135,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      59: ifeq          88
      62: aload         5
      64: invokeinterface #136,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      69: checkcast     #137                // class io/netty/buffer/PoolChunkMetric
      72: astore        6
      74: lload_1
      75: aload         6
      77: invokeinterface #138,  1          // InterfaceMethod io/netty/buffer/PoolChunkMetric.chunkSize:()I
      82: i2l
      83: ladd
      84: lstore_1
      85: goto          52
      88: iinc          4, 1
      91: goto          17
      94: aload_3
      95: monitorexit
      96: goto          106
      99: astore        7
     101: aload_3
     102: monitorexit
     103: aload         7
     105: athrow
     106: lconst_0
     107: lload_1
     108: invokestatic  #125                // Method java/lang/Math.max:(JJ)J
     111: lreturn
    Exception table:
       from    to  target type
          14    96    99   any
          99   103    99   any

  protected abstract io.netty.buffer.PoolChunk<T> newChunk(int, int, int, int);

  protected abstract io.netty.buffer.PoolChunk<T> newUnpooledChunk(int);

  protected abstract io.netty.buffer.PooledByteBuf<T> newByteBuf(int);

  protected abstract void memoryCopy(T, int, T, int, int);

  protected abstract void destroyChunk(io.netty.buffer.PoolChunk<T>);

  public synchronized java.lang.String toString();
    Code:
       0: new           #96                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #97                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #139                // String Chunk(s) at 0~25%:
       9: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: getstatic     #140                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
      15: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: aload_0
      19: getfield      #35                 // Field qInit:Lio/netty/buffer/PoolChunkList;
      22: invokevirtual #141                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      25: getstatic     #140                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
      28: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #142                // String Chunk(s) at 0~50%:
      33: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: getstatic     #140                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
      39: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_0
      43: getfield      #33                 // Field q000:Lio/netty/buffer/PoolChunkList;
      46: invokevirtual #141                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      49: getstatic     #140                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
      52: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #143                // String Chunk(s) at 25~75%:
      57: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: getstatic     #140                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
      63: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: aload_0
      67: getfield      #32                 // Field q025:Lio/netty/buffer/PoolChunkList;
      70: invokevirtual #141                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      73: getstatic     #140                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
      76: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: ldc           #144                // String Chunk(s) at 50~100%:
      81: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: getstatic     #140                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
      87: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: aload_0
      91: getfield      #31                 // Field q050:Lio/netty/buffer/PoolChunkList;
      94: invokevirtual #141                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      97: getstatic     #140                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
     100: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: ldc           #145                // String Chunk(s) at 75~100%:
     105: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: getstatic     #140                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
     111: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: aload_0
     115: getfield      #30                 // Field q075:Lio/netty/buffer/PoolChunkList;
     118: invokevirtual #141                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     121: getstatic     #140                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
     124: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: ldc           #146                // String Chunk(s) at 100%:
     129: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: getstatic     #140                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
     135: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: aload_0
     139: getfield      #29                 // Field q100:Lio/netty/buffer/PoolChunkList;
     142: invokevirtual #141                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     145: getstatic     #140                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
     148: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     151: ldc           #147                // String tiny subpages:
     153: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     156: astore_1
     157: aload_1
     158: aload_0
     159: getfield      #21                 // Field tinySubpagePools:[Lio/netty/buffer/PoolSubpage;
     162: invokestatic  #148                // Method appendPoolSubPages:(Ljava/lang/StringBuilder;[Lio/netty/buffer/PoolSubpage;)V
     165: aload_1
     166: getstatic     #140                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
     169: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     172: ldc           #149                // String small subpages:
     174: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     177: pop
     178: aload_1
     179: aload_0
     180: getfield      #24                 // Field smallSubpagePools:[Lio/netty/buffer/PoolSubpage;
     183: invokestatic  #148                // Method appendPoolSubPages:(Ljava/lang/StringBuilder;[Lio/netty/buffer/PoolSubpage;)V
     186: aload_1
     187: getstatic     #140                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
     190: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     193: pop
     194: aload_1
     195: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     198: areturn

  private static void appendPoolSubPages(java.lang.StringBuilder, io.netty.buffer.PoolSubpage<?>[]);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_1
       4: arraylength
       5: if_icmpge     75
       8: aload_1
       9: iload_2
      10: aaload
      11: astore_3
      12: aload_3
      13: getfield      #45                 // Field io/netty/buffer/PoolSubpage.next:Lio/netty/buffer/PoolSubpage;
      16: aload_3
      17: if_acmpne     23
      20: goto          69
      23: aload_0
      24: getstatic     #140                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
      27: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: iload_2
      31: invokevirtual #100                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      34: ldc           #150                // String :
      36: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: pop
      40: aload_3
      41: getfield      #45                 // Field io/netty/buffer/PoolSubpage.next:Lio/netty/buffer/PoolSubpage;
      44: astore        4
      46: aload_0
      47: aload         4
      49: invokevirtual #141                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      52: pop
      53: aload         4
      55: getfield      #45                 // Field io/netty/buffer/PoolSubpage.next:Lio/netty/buffer/PoolSubpage;
      58: astore        4
      60: aload         4
      62: aload_3
      63: if_acmpne     46
      66: goto          69
      69: iinc          2, 1
      72: goto          2
      75: return

  protected final void finalize() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: invokespecial #151                // Method java/lang/Object.finalize:()V
       4: aload_0
       5: getfield      #24                 // Field smallSubpagePools:[Lio/netty/buffer/PoolSubpage;
       8: invokestatic  #152                // Method destroyPoolSubPages:([Lio/netty/buffer/PoolSubpage;)V
      11: aload_0
      12: getfield      #21                 // Field tinySubpagePools:[Lio/netty/buffer/PoolSubpage;
      15: invokestatic  #152                // Method destroyPoolSubPages:([Lio/netty/buffer/PoolSubpage;)V
      18: aload_0
      19: bipush        6
      21: anewarray     #25                 // class io/netty/buffer/PoolChunkList
      24: dup
      25: iconst_0
      26: aload_0
      27: getfield      #35                 // Field qInit:Lio/netty/buffer/PoolChunkList;
      30: aastore
      31: dup
      32: iconst_1
      33: aload_0
      34: getfield      #33                 // Field q000:Lio/netty/buffer/PoolChunkList;
      37: aastore
      38: dup
      39: iconst_2
      40: aload_0
      41: getfield      #32                 // Field q025:Lio/netty/buffer/PoolChunkList;
      44: aastore
      45: dup
      46: iconst_3
      47: aload_0
      48: getfield      #31                 // Field q050:Lio/netty/buffer/PoolChunkList;
      51: aastore
      52: dup
      53: iconst_4
      54: aload_0
      55: getfield      #30                 // Field q075:Lio/netty/buffer/PoolChunkList;
      58: aastore
      59: dup
      60: iconst_5
      61: aload_0
      62: getfield      #29                 // Field q100:Lio/netty/buffer/PoolChunkList;
      65: aastore
      66: invokespecial #153                // Method destroyPoolChunkLists:([Lio/netty/buffer/PoolChunkList;)V
      69: goto          140
      72: astore_1
      73: aload_0
      74: getfield      #24                 // Field smallSubpagePools:[Lio/netty/buffer/PoolSubpage;
      77: invokestatic  #152                // Method destroyPoolSubPages:([Lio/netty/buffer/PoolSubpage;)V
      80: aload_0
      81: getfield      #21                 // Field tinySubpagePools:[Lio/netty/buffer/PoolSubpage;
      84: invokestatic  #152                // Method destroyPoolSubPages:([Lio/netty/buffer/PoolSubpage;)V
      87: aload_0
      88: bipush        6
      90: anewarray     #25                 // class io/netty/buffer/PoolChunkList
      93: dup
      94: iconst_0
      95: aload_0
      96: getfield      #35                 // Field qInit:Lio/netty/buffer/PoolChunkList;
      99: aastore
     100: dup
     101: iconst_1
     102: aload_0
     103: getfield      #33                 // Field q000:Lio/netty/buffer/PoolChunkList;
     106: aastore
     107: dup
     108: iconst_2
     109: aload_0
     110: getfield      #32                 // Field q025:Lio/netty/buffer/PoolChunkList;
     113: aastore
     114: dup
     115: iconst_3
     116: aload_0
     117: getfield      #31                 // Field q050:Lio/netty/buffer/PoolChunkList;
     120: aastore
     121: dup
     122: iconst_4
     123: aload_0
     124: getfield      #30                 // Field q075:Lio/netty/buffer/PoolChunkList;
     127: aastore
     128: dup
     129: iconst_5
     130: aload_0
     131: getfield      #29                 // Field q100:Lio/netty/buffer/PoolChunkList;
     134: aastore
     135: invokespecial #153                // Method destroyPoolChunkLists:([Lio/netty/buffer/PoolChunkList;)V
     138: aload_1
     139: athrow
     140: return
    Exception table:
       from    to  target type
           0     4    72   any

  private static void destroyPoolSubPages(io.netty.buffer.PoolSubpage<?>[]);
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: arraylength
       4: istore_2
       5: iconst_0
       6: istore_3
       7: iload_3
       8: iload_2
       9: if_icmpge     28
      12: aload_1
      13: iload_3
      14: aaload
      15: astore        4
      17: aload         4
      19: invokevirtual #154                // Method io/netty/buffer/PoolSubpage.destroy:()V
      22: iinc          3, 1
      25: goto          7
      28: return

  private void destroyPoolChunkLists(io.netty.buffer.PoolChunkList<T>...);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     32
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: aload         5
      22: aload_0
      23: invokevirtual #155                // Method io/netty/buffer/PoolChunkList.destroy:(Lio/netty/buffer/PoolArena;)V
      26: iinc          4, 1
      29: goto          8
      32: return

  static {};
    Code:
       0: ldc           #19                 // class io/netty/buffer/PoolArena
       2: invokevirtual #156                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #55                 // Field $assertionsDisabled:Z
      16: invokestatic  #157                // Method io/netty/util/internal/PlatformDependent.hasUnsafe:()Z
      19: putstatic     #158                // Field HAS_UNSAFE:Z
      22: return
}
