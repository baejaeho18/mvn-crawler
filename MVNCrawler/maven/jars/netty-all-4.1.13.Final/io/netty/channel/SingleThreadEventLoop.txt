Compiled from "SingleThreadEventLoop.java"
public abstract class io.netty.channel.SingleThreadEventLoop extends io.netty.util.concurrent.SingleThreadEventExecutor implements io.netty.channel.EventLoop {
  protected static final int DEFAULT_MAX_PENDING_TASKS;

  private final java.util.Queue<java.lang.Runnable> tailTasks;

  protected io.netty.channel.SingleThreadEventLoop(io.netty.channel.EventLoopGroup, java.util.concurrent.ThreadFactory, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: getstatic     #1                  // Field DEFAULT_MAX_PENDING_TASKS:I
       7: invokestatic  #2                  // Method io/netty/util/concurrent/RejectedExecutionHandlers.reject:()Lio/netty/util/concurrent/RejectedExecutionHandler;
      10: invokespecial #3                  // Method "<init>":(Lio/netty/channel/EventLoopGroup;Ljava/util/concurrent/ThreadFactory;ZILio/netty/util/concurrent/RejectedExecutionHandler;)V
      13: return

  protected io.netty.channel.SingleThreadEventLoop(io.netty.channel.EventLoopGroup, java.util.concurrent.Executor, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: getstatic     #1                  // Field DEFAULT_MAX_PENDING_TASKS:I
       7: invokestatic  #2                  // Method io/netty/util/concurrent/RejectedExecutionHandlers.reject:()Lio/netty/util/concurrent/RejectedExecutionHandler;
      10: invokespecial #4                  // Method "<init>":(Lio/netty/channel/EventLoopGroup;Ljava/util/concurrent/Executor;ZILio/netty/util/concurrent/RejectedExecutionHandler;)V
      13: return

  protected io.netty.channel.SingleThreadEventLoop(io.netty.channel.EventLoopGroup, java.util.concurrent.ThreadFactory, boolean, int, io.netty.util.concurrent.RejectedExecutionHandler);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iload         4
       6: aload         5
       8: invokespecial #5                  // Method io/netty/util/concurrent/SingleThreadEventExecutor."<init>":(Lio/netty/util/concurrent/EventExecutorGroup;Ljava/util/concurrent/ThreadFactory;ZILio/netty/util/concurrent/RejectedExecutionHandler;)V
      11: aload_0
      12: aload_0
      13: iload         4
      15: invokevirtual #6                  // Method newTaskQueue:(I)Ljava/util/Queue;
      18: putfield      #7                  // Field tailTasks:Ljava/util/Queue;
      21: return

  protected io.netty.channel.SingleThreadEventLoop(io.netty.channel.EventLoopGroup, java.util.concurrent.Executor, boolean, int, io.netty.util.concurrent.RejectedExecutionHandler);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iload         4
       6: aload         5
       8: invokespecial #8                  // Method io/netty/util/concurrent/SingleThreadEventExecutor."<init>":(Lio/netty/util/concurrent/EventExecutorGroup;Ljava/util/concurrent/Executor;ZILio/netty/util/concurrent/RejectedExecutionHandler;)V
      11: aload_0
      12: aload_0
      13: iload         4
      15: invokevirtual #6                  // Method newTaskQueue:(I)Ljava/util/Queue;
      18: putfield      #7                  // Field tailTasks:Ljava/util/Queue;
      21: return

  public io.netty.channel.EventLoopGroup parent();
    Code:
       0: aload_0
       1: invokespecial #9                  // Method io/netty/util/concurrent/SingleThreadEventExecutor.parent:()Lio/netty/util/concurrent/EventExecutorGroup;
       4: checkcast     #10                 // class io/netty/channel/EventLoopGroup
       7: areturn

  public io.netty.channel.EventLoop next();
    Code:
       0: aload_0
       1: invokespecial #11                 // Method io/netty/util/concurrent/SingleThreadEventExecutor.next:()Lio/netty/util/concurrent/EventExecutor;
       4: checkcast     #12                 // class io/netty/channel/EventLoop
       7: areturn

  public io.netty.channel.ChannelFuture register(io.netty.channel.Channel);
    Code:
       0: aload_0
       1: new           #13                 // class io/netty/channel/DefaultChannelPromise
       4: dup
       5: aload_1
       6: aload_0
       7: invokespecial #14                 // Method io/netty/channel/DefaultChannelPromise."<init>":(Lio/netty/channel/Channel;Lio/netty/util/concurrent/EventExecutor;)V
      10: invokevirtual #15                 // Method register:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      13: areturn

  public io.netty.channel.ChannelFuture register(io.netty.channel.ChannelPromise);
    Code:
       0: aload_1
       1: ldc           #16                 // String promise
       3: invokestatic  #17                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_1
       8: invokeinterface #18,  1           // InterfaceMethod io/netty/channel/ChannelPromise.channel:()Lio/netty/channel/Channel;
      13: invokeinterface #19,  1           // InterfaceMethod io/netty/channel/Channel.unsafe:()Lio/netty/channel/Channel$Unsafe;
      18: aload_0
      19: aload_1
      20: invokeinterface #20,  3           // InterfaceMethod io/netty/channel/Channel$Unsafe.register:(Lio/netty/channel/EventLoop;Lio/netty/channel/ChannelPromise;)V
      25: aload_1
      26: areturn

  public io.netty.channel.ChannelFuture register(io.netty.channel.Channel, io.netty.channel.ChannelPromise);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #21                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #22                 // String channel
      10: invokespecial #23                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_2
      15: ifnonnull     28
      18: new           #21                 // class java/lang/NullPointerException
      21: dup
      22: ldc           #16                 // String promise
      24: invokespecial #23                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_1
      29: invokeinterface #19,  1           // InterfaceMethod io/netty/channel/Channel.unsafe:()Lio/netty/channel/Channel$Unsafe;
      34: aload_0
      35: aload_2
      36: invokeinterface #20,  3           // InterfaceMethod io/netty/channel/Channel$Unsafe.register:(Lio/netty/channel/EventLoop;Lio/netty/channel/ChannelPromise;)V
      41: aload_2
      42: areturn

  public final void executeAfterEventLoopIteration(java.lang.Runnable);
    Code:
       0: aload_1
       1: ldc           #24                 // String task
       3: invokestatic  #17                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: invokevirtual #25                 // Method isShutdown:()Z
      11: ifeq          17
      14: invokestatic  #26                 // Method reject:()V
      17: aload_0
      18: getfield      #7                  // Field tailTasks:Ljava/util/Queue;
      21: aload_1
      22: invokeinterface #27,  2           // InterfaceMethod java/util/Queue.offer:(Ljava/lang/Object;)Z
      27: ifne          35
      30: aload_0
      31: aload_1
      32: invokevirtual #28                 // Method reject:(Ljava/lang/Runnable;)V
      35: aload_0
      36: aload_1
      37: invokevirtual #29                 // Method wakesUpForTask:(Ljava/lang/Runnable;)Z
      40: ifeq          51
      43: aload_0
      44: aload_0
      45: invokevirtual #30                 // Method inEventLoop:()Z
      48: invokevirtual #31                 // Method wakeup:(Z)V
      51: return

  final boolean removeAfterEventLoopIterationTask(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #7                  // Field tailTasks:Ljava/util/Queue;
       4: aload_1
       5: ldc           #24                 // String task
       7: invokestatic  #17                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      10: invokeinterface #32,  2           // InterfaceMethod java/util/Queue.remove:(Ljava/lang/Object;)Z
      15: ireturn

  protected boolean wakesUpForTask(java.lang.Runnable);
    Code:
       0: aload_1
       1: instanceof    #33                 // class io/netty/channel/SingleThreadEventLoop$NonWakeupRunnable
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  protected void afterRunningAllTasks();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #7                  // Field tailTasks:Ljava/util/Queue;
       5: invokevirtual #34                 // Method runAllTasksFrom:(Ljava/util/Queue;)Z
       8: pop
       9: return

  protected boolean hasTasks();
    Code:
       0: aload_0
       1: invokespecial #35                 // Method io/netty/util/concurrent/SingleThreadEventExecutor.hasTasks:()Z
       4: ifne          19
       7: aload_0
       8: getfield      #7                  // Field tailTasks:Ljava/util/Queue;
      11: invokeinterface #36,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public int pendingTasks();
    Code:
       0: aload_0
       1: invokespecial #37                 // Method io/netty/util/concurrent/SingleThreadEventExecutor.pendingTasks:()I
       4: aload_0
       5: getfield      #7                  // Field tailTasks:Ljava/util/Queue;
       8: invokeinterface #38,  1           // InterfaceMethod java/util/Queue.size:()I
      13: iadd
      14: ireturn

  public io.netty.util.concurrent.EventExecutorGroup parent();
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method parent:()Lio/netty/channel/EventLoopGroup;
       4: areturn

  public io.netty.util.concurrent.EventExecutor next();
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method next:()Lio/netty/channel/EventLoop;
       4: areturn

  static {};
    Code:
       0: bipush        16
       2: ldc           #41                 // String io.netty.eventLoop.maxPendingTasks
       4: ldc           #43                 // int 2147483647
       6: invokestatic  #44                 // Method io/netty/util/internal/SystemPropertyUtil.getInt:(Ljava/lang/String;I)I
       9: invokestatic  #45                 // Method java/lang/Math.max:(II)I
      12: putstatic     #1                  // Field DEFAULT_MAX_PENDING_TASKS:I
      15: return
}
