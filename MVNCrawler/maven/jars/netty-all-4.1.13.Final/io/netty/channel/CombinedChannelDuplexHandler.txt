Compiled from "CombinedChannelDuplexHandler.java"
public class io.netty.channel.CombinedChannelDuplexHandler<I extends io.netty.channel.ChannelInboundHandler, O extends io.netty.channel.ChannelOutboundHandler> extends io.netty.channel.ChannelDuplexHandler {
  private static final io.netty.util.internal.logging.InternalLogger logger;

  private io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext inboundCtx;

  private io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext outboundCtx;

  private volatile boolean handlerAdded;

  private I inboundHandler;

  private O outboundHandler;

  static final boolean $assertionsDisabled;

  protected io.netty.channel.CombinedChannelDuplexHandler();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method io/netty/channel/ChannelDuplexHandler."<init>":()V
       4: aload_0
       5: invokevirtual #5                  // Method ensureNotSharable:()V
       8: return

  public io.netty.channel.CombinedChannelDuplexHandler(I, O);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method io/netty/channel/ChannelDuplexHandler."<init>":()V
       4: aload_0
       5: invokevirtual #5                  // Method ensureNotSharable:()V
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokevirtual #6                  // Method init:(Lio/netty/channel/ChannelInboundHandler;Lio/netty/channel/ChannelOutboundHandler;)V
      14: return

  protected final void init(I, O);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #7                  // Method validate:(Lio/netty/channel/ChannelInboundHandler;Lio/netty/channel/ChannelOutboundHandler;)V
       6: aload_0
       7: aload_1
       8: putfield      #8                  // Field inboundHandler:Lio/netty/channel/ChannelInboundHandler;
      11: aload_0
      12: aload_2
      13: putfield      #2                  // Field outboundHandler:Lio/netty/channel/ChannelOutboundHandler;
      16: return

  private void validate(I, O);
    Code:
       0: aload_0
       1: getfield      #8                  // Field inboundHandler:Lio/netty/channel/ChannelInboundHandler;
       4: ifnull        43
       7: new           #9                  // class java/lang/IllegalStateException
      10: dup
      11: new           #10                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #12                 // String init() can not be invoked if
      20: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: ldc           #14                 // class io/netty/channel/CombinedChannelDuplexHandler
      25: invokevirtual #15                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      28: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #16                 // String  was constructed with non-default constructor.
      33: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: invokespecial #18                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_1
      44: ifnonnull     57
      47: new           #19                 // class java/lang/NullPointerException
      50: dup
      51: ldc           #20                 // String inboundHandler
      53: invokespecial #21                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: aload_2
      58: ifnonnull     71
      61: new           #19                 // class java/lang/NullPointerException
      64: dup
      65: ldc           #22                 // String outboundHandler
      67: invokespecial #21                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      70: athrow
      71: aload_1
      72: instanceof    #23                 // class io/netty/channel/ChannelOutboundHandler
      75: ifeq          114
      78: new           #24                 // class java/lang/IllegalArgumentException
      81: dup
      82: new           #10                 // class java/lang/StringBuilder
      85: dup
      86: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      89: ldc           #25                 // String inboundHandler must not implement
      91: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: ldc           #23                 // class io/netty/channel/ChannelOutboundHandler
      96: invokevirtual #15                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      99: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: ldc           #26                 // String  to get combined.
     104: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     110: invokespecial #27                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     113: athrow
     114: aload_2
     115: instanceof    #28                 // class io/netty/channel/ChannelInboundHandler
     118: ifeq          157
     121: new           #24                 // class java/lang/IllegalArgumentException
     124: dup
     125: new           #10                 // class java/lang/StringBuilder
     128: dup
     129: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
     132: ldc           #29                 // String outboundHandler must not implement
     134: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     137: ldc           #28                 // class io/netty/channel/ChannelInboundHandler
     139: invokevirtual #15                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
     142: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     145: ldc           #26                 // String  to get combined.
     147: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     150: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     153: invokespecial #27                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     156: athrow
     157: return

  protected final I inboundHandler();
    Code:
       0: aload_0
       1: getfield      #8                  // Field inboundHandler:Lio/netty/channel/ChannelInboundHandler;
       4: areturn

  protected final O outboundHandler();
    Code:
       0: aload_0
       1: getfield      #2                  // Field outboundHandler:Lio/netty/channel/ChannelOutboundHandler;
       4: areturn

  private void checkAdded();
    Code:
       0: aload_0
       1: getfield      #30                 // Field handlerAdded:Z
       4: ifne          17
       7: new           #9                  // class java/lang/IllegalStateException
      10: dup
      11: ldc           #31                 // String handler not added to pipeline yet
      13: invokespecial #18                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  public final void removeInboundHandler();
    Code:
       0: aload_0
       1: invokespecial #32                 // Method checkAdded:()V
       4: aload_0
       5: getfield      #33                 // Field inboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
       8: invokevirtual #34                 // Method io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.remove:()V
      11: return

  public final void removeOutboundHandler();
    Code:
       0: aload_0
       1: invokespecial #32                 // Method checkAdded:()V
       4: aload_0
       5: getfield      #3                  // Field outboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
       8: invokevirtual #34                 // Method io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.remove:()V
      11: return

  public void handlerAdded(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #8                  // Field inboundHandler:Lio/netty/channel/ChannelInboundHandler;
       4: ifnonnull     56
       7: new           #9                  // class java/lang/IllegalStateException
      10: dup
      11: new           #10                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #35                 // String init() must be invoked before being added to a
      20: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: ldc           #36                 // class io/netty/channel/ChannelPipeline
      25: invokevirtual #15                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      28: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #37                 // String  if
      33: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: ldc           #14                 // class io/netty/channel/CombinedChannelDuplexHandler
      38: invokevirtual #15                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      41: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: ldc           #38                 // String  was constructed with the default constructor.
      46: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokespecial #18                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: aload_0
      57: new           #39                 // class io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext
      60: dup
      61: aload_1
      62: aload_0
      63: getfield      #2                  // Field outboundHandler:Lio/netty/channel/ChannelOutboundHandler;
      66: invokespecial #40                 // Method io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext."<init>":(Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelHandler;)V
      69: putfield      #3                  // Field outboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      72: aload_0
      73: new           #41                 // class io/netty/channel/CombinedChannelDuplexHandler$1
      76: dup
      77: aload_0
      78: aload_1
      79: aload_0
      80: getfield      #8                  // Field inboundHandler:Lio/netty/channel/ChannelInboundHandler;
      83: invokespecial #42                 // Method io/netty/channel/CombinedChannelDuplexHandler$1."<init>":(Lio/netty/channel/CombinedChannelDuplexHandler;Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelHandler;)V
      86: putfield      #33                 // Field inboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      89: aload_0
      90: iconst_1
      91: putfield      #30                 // Field handlerAdded:Z
      94: aload_0
      95: getfield      #8                  // Field inboundHandler:Lio/netty/channel/ChannelInboundHandler;
      98: aload_0
      99: getfield      #33                 // Field inboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
     102: invokeinterface #43,  2           // InterfaceMethod io/netty/channel/ChannelInboundHandler.handlerAdded:(Lio/netty/channel/ChannelHandlerContext;)V
     107: aload_0
     108: getfield      #2                  // Field outboundHandler:Lio/netty/channel/ChannelOutboundHandler;
     111: aload_0
     112: getfield      #3                  // Field outboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
     115: invokeinterface #44,  2           // InterfaceMethod io/netty/channel/ChannelOutboundHandler.handlerAdded:(Lio/netty/channel/ChannelHandlerContext;)V
     120: goto          139
     123: astore_2
     124: aload_0
     125: getfield      #2                  // Field outboundHandler:Lio/netty/channel/ChannelOutboundHandler;
     128: aload_0
     129: getfield      #3                  // Field outboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
     132: invokeinterface #44,  2           // InterfaceMethod io/netty/channel/ChannelOutboundHandler.handlerAdded:(Lio/netty/channel/ChannelHandlerContext;)V
     137: aload_2
     138: athrow
     139: return
    Exception table:
       from    to  target type
          94   107   123   any

  public void handlerRemoved(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #33                 // Field inboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
       4: invokevirtual #34                 // Method io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.remove:()V
       7: aload_0
       8: getfield      #3                  // Field outboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      11: invokevirtual #34                 // Method io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.remove:()V
      14: goto          27
      17: astore_2
      18: aload_0
      19: getfield      #3                  // Field outboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      22: invokevirtual #34                 // Method io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.remove:()V
      25: aload_2
      26: athrow
      27: return
    Exception table:
       from    to  target type
           0     7    17   any

  public void channelRegistered(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: getstatic     #45                 // Field $assertionsDisabled:Z
       3: ifne          25
       6: aload_1
       7: aload_0
       8: getfield      #33                 // Field inboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      11: invokestatic  #46                 // Method io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.access$300:(Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;)Lio/netty/channel/ChannelHandlerContext;
      14: if_acmpeq     25
      17: new           #47                 // class java/lang/AssertionError
      20: dup
      21: invokespecial #48                 // Method java/lang/AssertionError."<init>":()V
      24: athrow
      25: aload_0
      26: getfield      #33                 // Field inboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      29: getfield      #49                 // Field io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.removed:Z
      32: ifne          51
      35: aload_0
      36: getfield      #8                  // Field inboundHandler:Lio/netty/channel/ChannelInboundHandler;
      39: aload_0
      40: getfield      #33                 // Field inboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      43: invokeinterface #50,  2           // InterfaceMethod io/netty/channel/ChannelInboundHandler.channelRegistered:(Lio/netty/channel/ChannelHandlerContext;)V
      48: goto          59
      51: aload_0
      52: getfield      #33                 // Field inboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      55: invokevirtual #51                 // Method io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRegistered:()Lio/netty/channel/ChannelHandlerContext;
      58: pop
      59: return

  public void channelUnregistered(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: getstatic     #45                 // Field $assertionsDisabled:Z
       3: ifne          25
       6: aload_1
       7: aload_0
       8: getfield      #33                 // Field inboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      11: invokestatic  #46                 // Method io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.access$300:(Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;)Lio/netty/channel/ChannelHandlerContext;
      14: if_acmpeq     25
      17: new           #47                 // class java/lang/AssertionError
      20: dup
      21: invokespecial #48                 // Method java/lang/AssertionError."<init>":()V
      24: athrow
      25: aload_0
      26: getfield      #33                 // Field inboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      29: getfield      #49                 // Field io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.removed:Z
      32: ifne          51
      35: aload_0
      36: getfield      #8                  // Field inboundHandler:Lio/netty/channel/ChannelInboundHandler;
      39: aload_0
      40: getfield      #33                 // Field inboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      43: invokeinterface #52,  2           // InterfaceMethod io/netty/channel/ChannelInboundHandler.channelUnregistered:(Lio/netty/channel/ChannelHandlerContext;)V
      48: goto          59
      51: aload_0
      52: getfield      #33                 // Field inboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      55: invokevirtual #53                 // Method io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelUnregistered:()Lio/netty/channel/ChannelHandlerContext;
      58: pop
      59: return

  public void channelActive(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: getstatic     #45                 // Field $assertionsDisabled:Z
       3: ifne          25
       6: aload_1
       7: aload_0
       8: getfield      #33                 // Field inboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      11: invokestatic  #46                 // Method io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.access$300:(Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;)Lio/netty/channel/ChannelHandlerContext;
      14: if_acmpeq     25
      17: new           #47                 // class java/lang/AssertionError
      20: dup
      21: invokespecial #48                 // Method java/lang/AssertionError."<init>":()V
      24: athrow
      25: aload_0
      26: getfield      #33                 // Field inboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      29: getfield      #49                 // Field io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.removed:Z
      32: ifne          51
      35: aload_0
      36: getfield      #8                  // Field inboundHandler:Lio/netty/channel/ChannelInboundHandler;
      39: aload_0
      40: getfield      #33                 // Field inboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      43: invokeinterface #54,  2           // InterfaceMethod io/netty/channel/ChannelInboundHandler.channelActive:(Lio/netty/channel/ChannelHandlerContext;)V
      48: goto          59
      51: aload_0
      52: getfield      #33                 // Field inboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      55: invokevirtual #55                 // Method io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelActive:()Lio/netty/channel/ChannelHandlerContext;
      58: pop
      59: return

  public void channelInactive(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: getstatic     #45                 // Field $assertionsDisabled:Z
       3: ifne          25
       6: aload_1
       7: aload_0
       8: getfield      #33                 // Field inboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      11: invokestatic  #46                 // Method io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.access$300:(Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;)Lio/netty/channel/ChannelHandlerContext;
      14: if_acmpeq     25
      17: new           #47                 // class java/lang/AssertionError
      20: dup
      21: invokespecial #48                 // Method java/lang/AssertionError."<init>":()V
      24: athrow
      25: aload_0
      26: getfield      #33                 // Field inboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      29: getfield      #49                 // Field io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.removed:Z
      32: ifne          51
      35: aload_0
      36: getfield      #8                  // Field inboundHandler:Lio/netty/channel/ChannelInboundHandler;
      39: aload_0
      40: getfield      #33                 // Field inboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      43: invokeinterface #56,  2           // InterfaceMethod io/netty/channel/ChannelInboundHandler.channelInactive:(Lio/netty/channel/ChannelHandlerContext;)V
      48: goto          59
      51: aload_0
      52: getfield      #33                 // Field inboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      55: invokevirtual #57                 // Method io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelInactive:()Lio/netty/channel/ChannelHandlerContext;
      58: pop
      59: return

  public void exceptionCaught(io.netty.channel.ChannelHandlerContext, java.lang.Throwable) throws java.lang.Exception;
    Code:
       0: getstatic     #45                 // Field $assertionsDisabled:Z
       3: ifne          25
       6: aload_1
       7: aload_0
       8: getfield      #33                 // Field inboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      11: invokestatic  #46                 // Method io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.access$300:(Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;)Lio/netty/channel/ChannelHandlerContext;
      14: if_acmpeq     25
      17: new           #47                 // class java/lang/AssertionError
      20: dup
      21: invokespecial #48                 // Method java/lang/AssertionError."<init>":()V
      24: athrow
      25: aload_0
      26: getfield      #33                 // Field inboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      29: getfield      #49                 // Field io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.removed:Z
      32: ifne          52
      35: aload_0
      36: getfield      #8                  // Field inboundHandler:Lio/netty/channel/ChannelInboundHandler;
      39: aload_0
      40: getfield      #33                 // Field inboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      43: aload_2
      44: invokeinterface #58,  3           // InterfaceMethod io/netty/channel/ChannelInboundHandler.exceptionCaught:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V
      49: goto          61
      52: aload_0
      53: getfield      #33                 // Field inboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      56: aload_2
      57: invokevirtual #59                 // Method io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelHandlerContext;
      60: pop
      61: return

  public void userEventTriggered(io.netty.channel.ChannelHandlerContext, java.lang.Object) throws java.lang.Exception;
    Code:
       0: getstatic     #45                 // Field $assertionsDisabled:Z
       3: ifne          25
       6: aload_1
       7: aload_0
       8: getfield      #33                 // Field inboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      11: invokestatic  #46                 // Method io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.access$300:(Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;)Lio/netty/channel/ChannelHandlerContext;
      14: if_acmpeq     25
      17: new           #47                 // class java/lang/AssertionError
      20: dup
      21: invokespecial #48                 // Method java/lang/AssertionError."<init>":()V
      24: athrow
      25: aload_0
      26: getfield      #33                 // Field inboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      29: getfield      #49                 // Field io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.removed:Z
      32: ifne          52
      35: aload_0
      36: getfield      #8                  // Field inboundHandler:Lio/netty/channel/ChannelInboundHandler;
      39: aload_0
      40: getfield      #33                 // Field inboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      43: aload_2
      44: invokeinterface #60,  3           // InterfaceMethod io/netty/channel/ChannelInboundHandler.userEventTriggered:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V
      49: goto          61
      52: aload_0
      53: getfield      #33                 // Field inboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      56: aload_2
      57: invokevirtual #61                 // Method io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireUserEventTriggered:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
      60: pop
      61: return

  public void channelRead(io.netty.channel.ChannelHandlerContext, java.lang.Object) throws java.lang.Exception;
    Code:
       0: getstatic     #45                 // Field $assertionsDisabled:Z
       3: ifne          25
       6: aload_1
       7: aload_0
       8: getfield      #33                 // Field inboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      11: invokestatic  #46                 // Method io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.access$300:(Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;)Lio/netty/channel/ChannelHandlerContext;
      14: if_acmpeq     25
      17: new           #47                 // class java/lang/AssertionError
      20: dup
      21: invokespecial #48                 // Method java/lang/AssertionError."<init>":()V
      24: athrow
      25: aload_0
      26: getfield      #33                 // Field inboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      29: getfield      #49                 // Field io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.removed:Z
      32: ifne          52
      35: aload_0
      36: getfield      #8                  // Field inboundHandler:Lio/netty/channel/ChannelInboundHandler;
      39: aload_0
      40: getfield      #33                 // Field inboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      43: aload_2
      44: invokeinterface #62,  3           // InterfaceMethod io/netty/channel/ChannelInboundHandler.channelRead:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V
      49: goto          61
      52: aload_0
      53: getfield      #33                 // Field inboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      56: aload_2
      57: invokevirtual #63                 // Method io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
      60: pop
      61: return

  public void channelReadComplete(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: getstatic     #45                 // Field $assertionsDisabled:Z
       3: ifne          25
       6: aload_1
       7: aload_0
       8: getfield      #33                 // Field inboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      11: invokestatic  #46                 // Method io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.access$300:(Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;)Lio/netty/channel/ChannelHandlerContext;
      14: if_acmpeq     25
      17: new           #47                 // class java/lang/AssertionError
      20: dup
      21: invokespecial #48                 // Method java/lang/AssertionError."<init>":()V
      24: athrow
      25: aload_0
      26: getfield      #33                 // Field inboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      29: getfield      #49                 // Field io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.removed:Z
      32: ifne          51
      35: aload_0
      36: getfield      #8                  // Field inboundHandler:Lio/netty/channel/ChannelInboundHandler;
      39: aload_0
      40: getfield      #33                 // Field inboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      43: invokeinterface #64,  2           // InterfaceMethod io/netty/channel/ChannelInboundHandler.channelReadComplete:(Lio/netty/channel/ChannelHandlerContext;)V
      48: goto          59
      51: aload_0
      52: getfield      #33                 // Field inboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      55: invokevirtual #65                 // Method io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelReadComplete:()Lio/netty/channel/ChannelHandlerContext;
      58: pop
      59: return

  public void channelWritabilityChanged(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: getstatic     #45                 // Field $assertionsDisabled:Z
       3: ifne          25
       6: aload_1
       7: aload_0
       8: getfield      #33                 // Field inboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      11: invokestatic  #46                 // Method io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.access$300:(Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;)Lio/netty/channel/ChannelHandlerContext;
      14: if_acmpeq     25
      17: new           #47                 // class java/lang/AssertionError
      20: dup
      21: invokespecial #48                 // Method java/lang/AssertionError."<init>":()V
      24: athrow
      25: aload_0
      26: getfield      #33                 // Field inboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      29: getfield      #49                 // Field io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.removed:Z
      32: ifne          51
      35: aload_0
      36: getfield      #8                  // Field inboundHandler:Lio/netty/channel/ChannelInboundHandler;
      39: aload_0
      40: getfield      #33                 // Field inboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      43: invokeinterface #66,  2           // InterfaceMethod io/netty/channel/ChannelInboundHandler.channelWritabilityChanged:(Lio/netty/channel/ChannelHandlerContext;)V
      48: goto          59
      51: aload_0
      52: getfield      #33                 // Field inboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      55: invokevirtual #67                 // Method io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelWritabilityChanged:()Lio/netty/channel/ChannelHandlerContext;
      58: pop
      59: return

  public void bind(io.netty.channel.ChannelHandlerContext, java.net.SocketAddress, io.netty.channel.ChannelPromise) throws java.lang.Exception;
    Code:
       0: getstatic     #45                 // Field $assertionsDisabled:Z
       3: ifne          25
       6: aload_1
       7: aload_0
       8: getfield      #3                  // Field outboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      11: invokestatic  #46                 // Method io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.access$300:(Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;)Lio/netty/channel/ChannelHandlerContext;
      14: if_acmpeq     25
      17: new           #47                 // class java/lang/AssertionError
      20: dup
      21: invokespecial #48                 // Method java/lang/AssertionError."<init>":()V
      24: athrow
      25: aload_0
      26: getfield      #3                  // Field outboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      29: getfield      #49                 // Field io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.removed:Z
      32: ifne          53
      35: aload_0
      36: getfield      #2                  // Field outboundHandler:Lio/netty/channel/ChannelOutboundHandler;
      39: aload_0
      40: getfield      #3                  // Field outboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      43: aload_2
      44: aload_3
      45: invokeinterface #68,  4           // InterfaceMethod io/netty/channel/ChannelOutboundHandler.bind:(Lio/netty/channel/ChannelHandlerContext;Ljava/net/SocketAddress;Lio/netty/channel/ChannelPromise;)V
      50: goto          63
      53: aload_0
      54: getfield      #3                  // Field outboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      57: aload_2
      58: aload_3
      59: invokevirtual #69                 // Method io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.bind:(Ljava/net/SocketAddress;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      62: pop
      63: return

  public void connect(io.netty.channel.ChannelHandlerContext, java.net.SocketAddress, java.net.SocketAddress, io.netty.channel.ChannelPromise) throws java.lang.Exception;
    Code:
       0: getstatic     #45                 // Field $assertionsDisabled:Z
       3: ifne          25
       6: aload_1
       7: aload_0
       8: getfield      #3                  // Field outboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      11: invokestatic  #46                 // Method io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.access$300:(Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;)Lio/netty/channel/ChannelHandlerContext;
      14: if_acmpeq     25
      17: new           #47                 // class java/lang/AssertionError
      20: dup
      21: invokespecial #48                 // Method java/lang/AssertionError."<init>":()V
      24: athrow
      25: aload_0
      26: getfield      #3                  // Field outboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      29: getfield      #49                 // Field io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.removed:Z
      32: ifne          55
      35: aload_0
      36: getfield      #2                  // Field outboundHandler:Lio/netty/channel/ChannelOutboundHandler;
      39: aload_0
      40: getfield      #3                  // Field outboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      43: aload_2
      44: aload_3
      45: aload         4
      47: invokeinterface #70,  5           // InterfaceMethod io/netty/channel/ChannelOutboundHandler.connect:(Lio/netty/channel/ChannelHandlerContext;Ljava/net/SocketAddress;Ljava/net/SocketAddress;Lio/netty/channel/ChannelPromise;)V
      52: goto          66
      55: aload_0
      56: getfield      #3                  // Field outboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      59: aload_3
      60: aload         4
      62: invokevirtual #71                 // Method io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.connect:(Ljava/net/SocketAddress;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      65: pop
      66: return

  public void disconnect(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise) throws java.lang.Exception;
    Code:
       0: getstatic     #45                 // Field $assertionsDisabled:Z
       3: ifne          25
       6: aload_1
       7: aload_0
       8: getfield      #3                  // Field outboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      11: invokestatic  #46                 // Method io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.access$300:(Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;)Lio/netty/channel/ChannelHandlerContext;
      14: if_acmpeq     25
      17: new           #47                 // class java/lang/AssertionError
      20: dup
      21: invokespecial #48                 // Method java/lang/AssertionError."<init>":()V
      24: athrow
      25: aload_0
      26: getfield      #3                  // Field outboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      29: getfield      #49                 // Field io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.removed:Z
      32: ifne          52
      35: aload_0
      36: getfield      #2                  // Field outboundHandler:Lio/netty/channel/ChannelOutboundHandler;
      39: aload_0
      40: getfield      #3                  // Field outboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      43: aload_2
      44: invokeinterface #72,  3           // InterfaceMethod io/netty/channel/ChannelOutboundHandler.disconnect:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelPromise;)V
      49: goto          61
      52: aload_0
      53: getfield      #3                  // Field outboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      56: aload_2
      57: invokevirtual #73                 // Method io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.disconnect:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      60: pop
      61: return

  public void close(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise) throws java.lang.Exception;
    Code:
       0: getstatic     #45                 // Field $assertionsDisabled:Z
       3: ifne          25
       6: aload_1
       7: aload_0
       8: getfield      #3                  // Field outboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      11: invokestatic  #46                 // Method io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.access$300:(Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;)Lio/netty/channel/ChannelHandlerContext;
      14: if_acmpeq     25
      17: new           #47                 // class java/lang/AssertionError
      20: dup
      21: invokespecial #48                 // Method java/lang/AssertionError."<init>":()V
      24: athrow
      25: aload_0
      26: getfield      #3                  // Field outboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      29: getfield      #49                 // Field io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.removed:Z
      32: ifne          52
      35: aload_0
      36: getfield      #2                  // Field outboundHandler:Lio/netty/channel/ChannelOutboundHandler;
      39: aload_0
      40: getfield      #3                  // Field outboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      43: aload_2
      44: invokeinterface #74,  3           // InterfaceMethod io/netty/channel/ChannelOutboundHandler.close:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelPromise;)V
      49: goto          61
      52: aload_0
      53: getfield      #3                  // Field outboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      56: aload_2
      57: invokevirtual #75                 // Method io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.close:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      60: pop
      61: return

  public void deregister(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise) throws java.lang.Exception;
    Code:
       0: getstatic     #45                 // Field $assertionsDisabled:Z
       3: ifne          25
       6: aload_1
       7: aload_0
       8: getfield      #3                  // Field outboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      11: invokestatic  #46                 // Method io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.access$300:(Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;)Lio/netty/channel/ChannelHandlerContext;
      14: if_acmpeq     25
      17: new           #47                 // class java/lang/AssertionError
      20: dup
      21: invokespecial #48                 // Method java/lang/AssertionError."<init>":()V
      24: athrow
      25: aload_0
      26: getfield      #3                  // Field outboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      29: getfield      #49                 // Field io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.removed:Z
      32: ifne          52
      35: aload_0
      36: getfield      #2                  // Field outboundHandler:Lio/netty/channel/ChannelOutboundHandler;
      39: aload_0
      40: getfield      #3                  // Field outboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      43: aload_2
      44: invokeinterface #76,  3           // InterfaceMethod io/netty/channel/ChannelOutboundHandler.deregister:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelPromise;)V
      49: goto          61
      52: aload_0
      53: getfield      #3                  // Field outboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      56: aload_2
      57: invokevirtual #77                 // Method io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.deregister:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      60: pop
      61: return

  public void read(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: getstatic     #45                 // Field $assertionsDisabled:Z
       3: ifne          25
       6: aload_1
       7: aload_0
       8: getfield      #3                  // Field outboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      11: invokestatic  #46                 // Method io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.access$300:(Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;)Lio/netty/channel/ChannelHandlerContext;
      14: if_acmpeq     25
      17: new           #47                 // class java/lang/AssertionError
      20: dup
      21: invokespecial #48                 // Method java/lang/AssertionError."<init>":()V
      24: athrow
      25: aload_0
      26: getfield      #3                  // Field outboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      29: getfield      #49                 // Field io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.removed:Z
      32: ifne          51
      35: aload_0
      36: getfield      #2                  // Field outboundHandler:Lio/netty/channel/ChannelOutboundHandler;
      39: aload_0
      40: getfield      #3                  // Field outboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      43: invokeinterface #78,  2           // InterfaceMethod io/netty/channel/ChannelOutboundHandler.read:(Lio/netty/channel/ChannelHandlerContext;)V
      48: goto          59
      51: aload_0
      52: getfield      #3                  // Field outboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      55: invokevirtual #79                 // Method io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.read:()Lio/netty/channel/ChannelHandlerContext;
      58: pop
      59: return

  public void write(io.netty.channel.ChannelHandlerContext, java.lang.Object, io.netty.channel.ChannelPromise) throws java.lang.Exception;
    Code:
       0: getstatic     #45                 // Field $assertionsDisabled:Z
       3: ifne          25
       6: aload_1
       7: aload_0
       8: getfield      #3                  // Field outboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      11: invokestatic  #46                 // Method io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.access$300:(Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;)Lio/netty/channel/ChannelHandlerContext;
      14: if_acmpeq     25
      17: new           #47                 // class java/lang/AssertionError
      20: dup
      21: invokespecial #48                 // Method java/lang/AssertionError."<init>":()V
      24: athrow
      25: aload_0
      26: getfield      #3                  // Field outboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      29: getfield      #49                 // Field io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.removed:Z
      32: ifne          53
      35: aload_0
      36: getfield      #2                  // Field outboundHandler:Lio/netty/channel/ChannelOutboundHandler;
      39: aload_0
      40: getfield      #3                  // Field outboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      43: aload_2
      44: aload_3
      45: invokeinterface #80,  4           // InterfaceMethod io/netty/channel/ChannelOutboundHandler.write:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)V
      50: goto          63
      53: aload_0
      54: getfield      #3                  // Field outboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      57: aload_2
      58: aload_3
      59: invokevirtual #81                 // Method io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.write:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      62: pop
      63: return

  public void flush(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: getstatic     #45                 // Field $assertionsDisabled:Z
       3: ifne          25
       6: aload_1
       7: aload_0
       8: getfield      #3                  // Field outboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      11: invokestatic  #46                 // Method io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.access$300:(Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;)Lio/netty/channel/ChannelHandlerContext;
      14: if_acmpeq     25
      17: new           #47                 // class java/lang/AssertionError
      20: dup
      21: invokespecial #48                 // Method java/lang/AssertionError."<init>":()V
      24: athrow
      25: aload_0
      26: getfield      #3                  // Field outboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      29: getfield      #49                 // Field io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.removed:Z
      32: ifne          51
      35: aload_0
      36: getfield      #2                  // Field outboundHandler:Lio/netty/channel/ChannelOutboundHandler;
      39: aload_0
      40: getfield      #3                  // Field outboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      43: invokeinterface #82,  2           // InterfaceMethod io/netty/channel/ChannelOutboundHandler.flush:(Lio/netty/channel/ChannelHandlerContext;)V
      48: goto          59
      51: aload_0
      52: getfield      #3                  // Field outboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
      55: invokevirtual #83                 // Method io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.flush:()Lio/netty/channel/ChannelHandlerContext;
      58: pop
      59: return

  static io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext access$000(io.netty.channel.CombinedChannelDuplexHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field outboundCtx:Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;
       4: areturn

  static io.netty.channel.ChannelOutboundHandler access$100(io.netty.channel.CombinedChannelDuplexHandler);
    Code:
       0: aload_0
       1: getfield      #2                  // Field outboundHandler:Lio/netty/channel/ChannelOutboundHandler;
       4: areturn

  static io.netty.util.internal.logging.InternalLogger access$200();
    Code:
       0: getstatic     #1                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       3: areturn

  static {};
    Code:
       0: ldc           #14                 // class io/netty/channel/CombinedChannelDuplexHandler
       2: invokevirtual #84                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #45                 // Field $assertionsDisabled:Z
      16: ldc           #14                 // class io/netty/channel/CombinedChannelDuplexHandler
      18: invokestatic  #85                 // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
      21: putstatic     #1                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      24: return
}
