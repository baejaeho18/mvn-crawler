Compiled from "DefaultServerSocketChannelConfig.java"
public class io.netty.channel.socket.DefaultServerSocketChannelConfig extends io.netty.channel.DefaultChannelConfig implements io.netty.channel.socket.ServerSocketChannelConfig {
  protected final java.net.ServerSocket javaSocket;

  private volatile int backlog;

  public io.netty.channel.socket.DefaultServerSocketChannelConfig(io.netty.channel.socket.ServerSocketChannel, java.net.ServerSocket);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method io/netty/channel/DefaultChannelConfig."<init>":(Lio/netty/channel/Channel;)V
       5: aload_0
       6: getstatic     #2                  // Field io/netty/util/NetUtil.SOMAXCONN:I
       9: putfield      #3                  // Field backlog:I
      12: aload_2
      13: ifnonnull     26
      16: new           #4                  // class java/lang/NullPointerException
      19: dup
      20: ldc           #5                  // String javaSocket
      22: invokespecial #6                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: aload_0
      27: aload_2
      28: putfield      #7                  // Field javaSocket:Ljava/net/ServerSocket;
      31: return

  public java.util.Map<io.netty.channel.ChannelOption<?>, java.lang.Object> getOptions();
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #8                  // Method io/netty/channel/DefaultChannelConfig.getOptions:()Ljava/util/Map;
       5: iconst_3
       6: anewarray     #9                  // class io/netty/channel/ChannelOption
       9: dup
      10: iconst_0
      11: getstatic     #10                 // Field io/netty/channel/ChannelOption.SO_RCVBUF:Lio/netty/channel/ChannelOption;
      14: aastore
      15: dup
      16: iconst_1
      17: getstatic     #11                 // Field io/netty/channel/ChannelOption.SO_REUSEADDR:Lio/netty/channel/ChannelOption;
      20: aastore
      21: dup
      22: iconst_2
      23: getstatic     #12                 // Field io/netty/channel/ChannelOption.SO_BACKLOG:Lio/netty/channel/ChannelOption;
      26: aastore
      27: invokevirtual #13                 // Method getOptions:(Ljava/util/Map;[Lio/netty/channel/ChannelOption;)Ljava/util/Map;
      30: areturn

  public <T> T getOption(io.netty.channel.ChannelOption<T>);
    Code:
       0: aload_1
       1: getstatic     #10                 // Field io/netty/channel/ChannelOption.SO_RCVBUF:Lio/netty/channel/ChannelOption;
       4: if_acmpne     15
       7: aload_0
       8: invokevirtual #14                 // Method getReceiveBufferSize:()I
      11: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      14: areturn
      15: aload_1
      16: getstatic     #11                 // Field io/netty/channel/ChannelOption.SO_REUSEADDR:Lio/netty/channel/ChannelOption;
      19: if_acmpne     30
      22: aload_0
      23: invokevirtual #16                 // Method isReuseAddress:()Z
      26: invokestatic  #17                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      29: areturn
      30: aload_1
      31: getstatic     #12                 // Field io/netty/channel/ChannelOption.SO_BACKLOG:Lio/netty/channel/ChannelOption;
      34: if_acmpne     45
      37: aload_0
      38: invokevirtual #18                 // Method getBacklog:()I
      41: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      44: areturn
      45: aload_0
      46: aload_1
      47: invokespecial #19                 // Method io/netty/channel/DefaultChannelConfig.getOption:(Lio/netty/channel/ChannelOption;)Ljava/lang/Object;
      50: areturn

  public <T> boolean setOption(io.netty.channel.ChannelOption<T>, T);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #20                 // Method validate:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)V
       6: aload_1
       7: getstatic     #10                 // Field io/netty/channel/ChannelOption.SO_RCVBUF:Lio/netty/channel/ChannelOption;
      10: if_acmpne     28
      13: aload_0
      14: aload_2
      15: checkcast     #21                 // class java/lang/Integer
      18: invokevirtual #22                 // Method java/lang/Integer.intValue:()I
      21: invokevirtual #23                 // Method setReceiveBufferSize:(I)Lio/netty/channel/socket/ServerSocketChannelConfig;
      24: pop
      25: goto          79
      28: aload_1
      29: getstatic     #11                 // Field io/netty/channel/ChannelOption.SO_REUSEADDR:Lio/netty/channel/ChannelOption;
      32: if_acmpne     50
      35: aload_0
      36: aload_2
      37: checkcast     #24                 // class java/lang/Boolean
      40: invokevirtual #25                 // Method java/lang/Boolean.booleanValue:()Z
      43: invokevirtual #26                 // Method setReuseAddress:(Z)Lio/netty/channel/socket/ServerSocketChannelConfig;
      46: pop
      47: goto          79
      50: aload_1
      51: getstatic     #12                 // Field io/netty/channel/ChannelOption.SO_BACKLOG:Lio/netty/channel/ChannelOption;
      54: if_acmpne     72
      57: aload_0
      58: aload_2
      59: checkcast     #21                 // class java/lang/Integer
      62: invokevirtual #22                 // Method java/lang/Integer.intValue:()I
      65: invokevirtual #27                 // Method setBacklog:(I)Lio/netty/channel/socket/ServerSocketChannelConfig;
      68: pop
      69: goto          79
      72: aload_0
      73: aload_1
      74: aload_2
      75: invokespecial #28                 // Method io/netty/channel/DefaultChannelConfig.setOption:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)Z
      78: ireturn
      79: iconst_1
      80: ireturn

  public boolean isReuseAddress();
    Code:
       0: aload_0
       1: getfield      #7                  // Field javaSocket:Ljava/net/ServerSocket;
       4: invokevirtual #29                 // Method java/net/ServerSocket.getReuseAddress:()Z
       7: ireturn
       8: astore_1
       9: new           #31                 // class io/netty/channel/ChannelException
      12: dup
      13: aload_1
      14: invokespecial #32                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      17: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/net/SocketException

  public io.netty.channel.socket.ServerSocketChannelConfig setReuseAddress(boolean);
    Code:
       0: aload_0
       1: getfield      #7                  // Field javaSocket:Ljava/net/ServerSocket;
       4: iload_1
       5: invokevirtual #33                 // Method java/net/ServerSocket.setReuseAddress:(Z)V
       8: goto          21
      11: astore_2
      12: new           #31                 // class io/netty/channel/ChannelException
      15: dup
      16: aload_2
      17: invokespecial #32                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      20: athrow
      21: aload_0
      22: areturn
    Exception table:
       from    to  target type
           0     8    11   Class java/net/SocketException

  public int getReceiveBufferSize();
    Code:
       0: aload_0
       1: getfield      #7                  // Field javaSocket:Ljava/net/ServerSocket;
       4: invokevirtual #34                 // Method java/net/ServerSocket.getReceiveBufferSize:()I
       7: ireturn
       8: astore_1
       9: new           #31                 // class io/netty/channel/ChannelException
      12: dup
      13: aload_1
      14: invokespecial #32                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      17: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/net/SocketException

  public io.netty.channel.socket.ServerSocketChannelConfig setReceiveBufferSize(int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field javaSocket:Ljava/net/ServerSocket;
       4: iload_1
       5: invokevirtual #35                 // Method java/net/ServerSocket.setReceiveBufferSize:(I)V
       8: goto          21
      11: astore_2
      12: new           #31                 // class io/netty/channel/ChannelException
      15: dup
      16: aload_2
      17: invokespecial #32                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      20: athrow
      21: aload_0
      22: areturn
    Exception table:
       from    to  target type
           0     8    11   Class java/net/SocketException

  public io.netty.channel.socket.ServerSocketChannelConfig setPerformancePreferences(int, int, int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field javaSocket:Ljava/net/ServerSocket;
       4: iload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #36                 // Method java/net/ServerSocket.setPerformancePreferences:(III)V
      10: aload_0
      11: areturn

  public int getBacklog();
    Code:
       0: aload_0
       1: getfield      #3                  // Field backlog:I
       4: ireturn

  public io.netty.channel.socket.ServerSocketChannelConfig setBacklog(int);
    Code:
       0: iload_1
       1: ifge          31
       4: new           #37                 // class java/lang/IllegalArgumentException
       7: dup
       8: new           #38                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #40                 // String backlog:
      17: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: iload_1
      21: invokevirtual #42                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      24: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: invokespecial #44                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_0
      32: iload_1
      33: putfield      #3                  // Field backlog:I
      36: aload_0
      37: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #45                 // Method io/netty/channel/DefaultChannelConfig.setConnectTimeoutMillis:(I)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #46                 // Method io/netty/channel/DefaultChannelConfig.setMaxMessagesPerRead:(I)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #47                 // Method io/netty/channel/DefaultChannelConfig.setWriteSpinCount:(I)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #48                 // Method io/netty/channel/DefaultChannelConfig.setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #49                 // Method io/netty/channel/DefaultChannelConfig.setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #50                 // Method io/netty/channel/DefaultChannelConfig.setAutoRead:(Z)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setWriteBufferHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #51                 // Method io/netty/channel/DefaultChannelConfig.setWriteBufferHighWaterMark:(I)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setWriteBufferLowWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #52                 // Method io/netty/channel/DefaultChannelConfig.setWriteBufferLowWaterMark:(I)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #53                 // Method io/netty/channel/DefaultChannelConfig.setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #54                 // Method io/netty/channel/DefaultChannelConfig.setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.ChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #55                 // Method setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/socket/ServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #56                 // Method setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/socket/ServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #57                 // Method setWriteBufferLowWaterMark:(I)Lio/netty/channel/socket/ServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #58                 // Method setWriteBufferHighWaterMark:(I)Lio/netty/channel/socket/ServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #59                 // Method setAutoRead:(Z)Lio/netty/channel/socket/ServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #60                 // Method setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/socket/ServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #61                 // Method setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/socket/ServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #62                 // Method setWriteSpinCount:(I)Lio/netty/channel/socket/ServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #63                 // Method setMaxMessagesPerRead:(I)Lio/netty/channel/socket/ServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #64                 // Method setConnectTimeoutMillis:(I)Lio/netty/channel/socket/ServerSocketChannelConfig;
       5: areturn
}
