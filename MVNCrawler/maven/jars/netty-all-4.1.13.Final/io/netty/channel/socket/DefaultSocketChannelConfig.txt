Compiled from "DefaultSocketChannelConfig.java"
public class io.netty.channel.socket.DefaultSocketChannelConfig extends io.netty.channel.DefaultChannelConfig implements io.netty.channel.socket.SocketChannelConfig {
  protected final java.net.Socket javaSocket;

  private volatile boolean allowHalfClosure;

  public io.netty.channel.socket.DefaultSocketChannelConfig(io.netty.channel.socket.SocketChannel, java.net.Socket);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method io/netty/channel/DefaultChannelConfig."<init>":(Lio/netty/channel/Channel;)V
       5: aload_2
       6: ifnonnull     19
       9: new           #2                  // class java/lang/NullPointerException
      12: dup
      13: ldc           #3                  // String javaSocket
      15: invokespecial #4                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: aload_2
      21: putfield      #5                  // Field javaSocket:Ljava/net/Socket;
      24: invokestatic  #6                  // Method io/netty/util/internal/PlatformDependent.canEnableTcpNoDelayByDefault:()Z
      27: ifeq          40
      30: aload_0
      31: iconst_1
      32: invokevirtual #7                  // Method setTcpNoDelay:(Z)Lio/netty/channel/socket/SocketChannelConfig;
      35: pop
      36: goto          40
      39: astore_3
      40: return
    Exception table:
       from    to  target type
          30    36    39   Class java/lang/Exception

  public java.util.Map<io.netty.channel.ChannelOption<?>, java.lang.Object> getOptions();
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #9                  // Method io/netty/channel/DefaultChannelConfig.getOptions:()Ljava/util/Map;
       5: bipush        8
       7: anewarray     #10                 // class io/netty/channel/ChannelOption
      10: dup
      11: iconst_0
      12: getstatic     #11                 // Field io/netty/channel/ChannelOption.SO_RCVBUF:Lio/netty/channel/ChannelOption;
      15: aastore
      16: dup
      17: iconst_1
      18: getstatic     #12                 // Field io/netty/channel/ChannelOption.SO_SNDBUF:Lio/netty/channel/ChannelOption;
      21: aastore
      22: dup
      23: iconst_2
      24: getstatic     #13                 // Field io/netty/channel/ChannelOption.TCP_NODELAY:Lio/netty/channel/ChannelOption;
      27: aastore
      28: dup
      29: iconst_3
      30: getstatic     #14                 // Field io/netty/channel/ChannelOption.SO_KEEPALIVE:Lio/netty/channel/ChannelOption;
      33: aastore
      34: dup
      35: iconst_4
      36: getstatic     #15                 // Field io/netty/channel/ChannelOption.SO_REUSEADDR:Lio/netty/channel/ChannelOption;
      39: aastore
      40: dup
      41: iconst_5
      42: getstatic     #16                 // Field io/netty/channel/ChannelOption.SO_LINGER:Lio/netty/channel/ChannelOption;
      45: aastore
      46: dup
      47: bipush        6
      49: getstatic     #17                 // Field io/netty/channel/ChannelOption.IP_TOS:Lio/netty/channel/ChannelOption;
      52: aastore
      53: dup
      54: bipush        7
      56: getstatic     #18                 // Field io/netty/channel/ChannelOption.ALLOW_HALF_CLOSURE:Lio/netty/channel/ChannelOption;
      59: aastore
      60: invokevirtual #19                 // Method getOptions:(Ljava/util/Map;[Lio/netty/channel/ChannelOption;)Ljava/util/Map;
      63: areturn

  public <T> T getOption(io.netty.channel.ChannelOption<T>);
    Code:
       0: aload_1
       1: getstatic     #11                 // Field io/netty/channel/ChannelOption.SO_RCVBUF:Lio/netty/channel/ChannelOption;
       4: if_acmpne     15
       7: aload_0
       8: invokevirtual #20                 // Method getReceiveBufferSize:()I
      11: invokestatic  #21                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      14: areturn
      15: aload_1
      16: getstatic     #12                 // Field io/netty/channel/ChannelOption.SO_SNDBUF:Lio/netty/channel/ChannelOption;
      19: if_acmpne     30
      22: aload_0
      23: invokevirtual #22                 // Method getSendBufferSize:()I
      26: invokestatic  #21                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      29: areturn
      30: aload_1
      31: getstatic     #13                 // Field io/netty/channel/ChannelOption.TCP_NODELAY:Lio/netty/channel/ChannelOption;
      34: if_acmpne     45
      37: aload_0
      38: invokevirtual #23                 // Method isTcpNoDelay:()Z
      41: invokestatic  #24                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      44: areturn
      45: aload_1
      46: getstatic     #14                 // Field io/netty/channel/ChannelOption.SO_KEEPALIVE:Lio/netty/channel/ChannelOption;
      49: if_acmpne     60
      52: aload_0
      53: invokevirtual #25                 // Method isKeepAlive:()Z
      56: invokestatic  #24                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      59: areturn
      60: aload_1
      61: getstatic     #15                 // Field io/netty/channel/ChannelOption.SO_REUSEADDR:Lio/netty/channel/ChannelOption;
      64: if_acmpne     75
      67: aload_0
      68: invokevirtual #26                 // Method isReuseAddress:()Z
      71: invokestatic  #24                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      74: areturn
      75: aload_1
      76: getstatic     #16                 // Field io/netty/channel/ChannelOption.SO_LINGER:Lio/netty/channel/ChannelOption;
      79: if_acmpne     90
      82: aload_0
      83: invokevirtual #27                 // Method getSoLinger:()I
      86: invokestatic  #21                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      89: areturn
      90: aload_1
      91: getstatic     #17                 // Field io/netty/channel/ChannelOption.IP_TOS:Lio/netty/channel/ChannelOption;
      94: if_acmpne     105
      97: aload_0
      98: invokevirtual #28                 // Method getTrafficClass:()I
     101: invokestatic  #21                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     104: areturn
     105: aload_1
     106: getstatic     #18                 // Field io/netty/channel/ChannelOption.ALLOW_HALF_CLOSURE:Lio/netty/channel/ChannelOption;
     109: if_acmpne     120
     112: aload_0
     113: invokevirtual #29                 // Method isAllowHalfClosure:()Z
     116: invokestatic  #24                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     119: areturn
     120: aload_0
     121: aload_1
     122: invokespecial #30                 // Method io/netty/channel/DefaultChannelConfig.getOption:(Lio/netty/channel/ChannelOption;)Ljava/lang/Object;
     125: areturn

  public <T> boolean setOption(io.netty.channel.ChannelOption<T>, T);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #31                 // Method validate:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)V
       6: aload_1
       7: getstatic     #11                 // Field io/netty/channel/ChannelOption.SO_RCVBUF:Lio/netty/channel/ChannelOption;
      10: if_acmpne     28
      13: aload_0
      14: aload_2
      15: checkcast     #32                 // class java/lang/Integer
      18: invokevirtual #33                 // Method java/lang/Integer.intValue:()I
      21: invokevirtual #34                 // Method setReceiveBufferSize:(I)Lio/netty/channel/socket/SocketChannelConfig;
      24: pop
      25: goto          189
      28: aload_1
      29: getstatic     #12                 // Field io/netty/channel/ChannelOption.SO_SNDBUF:Lio/netty/channel/ChannelOption;
      32: if_acmpne     50
      35: aload_0
      36: aload_2
      37: checkcast     #32                 // class java/lang/Integer
      40: invokevirtual #33                 // Method java/lang/Integer.intValue:()I
      43: invokevirtual #35                 // Method setSendBufferSize:(I)Lio/netty/channel/socket/SocketChannelConfig;
      46: pop
      47: goto          189
      50: aload_1
      51: getstatic     #13                 // Field io/netty/channel/ChannelOption.TCP_NODELAY:Lio/netty/channel/ChannelOption;
      54: if_acmpne     72
      57: aload_0
      58: aload_2
      59: checkcast     #36                 // class java/lang/Boolean
      62: invokevirtual #37                 // Method java/lang/Boolean.booleanValue:()Z
      65: invokevirtual #7                  // Method setTcpNoDelay:(Z)Lio/netty/channel/socket/SocketChannelConfig;
      68: pop
      69: goto          189
      72: aload_1
      73: getstatic     #14                 // Field io/netty/channel/ChannelOption.SO_KEEPALIVE:Lio/netty/channel/ChannelOption;
      76: if_acmpne     94
      79: aload_0
      80: aload_2
      81: checkcast     #36                 // class java/lang/Boolean
      84: invokevirtual #37                 // Method java/lang/Boolean.booleanValue:()Z
      87: invokevirtual #38                 // Method setKeepAlive:(Z)Lio/netty/channel/socket/SocketChannelConfig;
      90: pop
      91: goto          189
      94: aload_1
      95: getstatic     #15                 // Field io/netty/channel/ChannelOption.SO_REUSEADDR:Lio/netty/channel/ChannelOption;
      98: if_acmpne     116
     101: aload_0
     102: aload_2
     103: checkcast     #36                 // class java/lang/Boolean
     106: invokevirtual #37                 // Method java/lang/Boolean.booleanValue:()Z
     109: invokevirtual #39                 // Method setReuseAddress:(Z)Lio/netty/channel/socket/SocketChannelConfig;
     112: pop
     113: goto          189
     116: aload_1
     117: getstatic     #16                 // Field io/netty/channel/ChannelOption.SO_LINGER:Lio/netty/channel/ChannelOption;
     120: if_acmpne     138
     123: aload_0
     124: aload_2
     125: checkcast     #32                 // class java/lang/Integer
     128: invokevirtual #33                 // Method java/lang/Integer.intValue:()I
     131: invokevirtual #40                 // Method setSoLinger:(I)Lio/netty/channel/socket/SocketChannelConfig;
     134: pop
     135: goto          189
     138: aload_1
     139: getstatic     #17                 // Field io/netty/channel/ChannelOption.IP_TOS:Lio/netty/channel/ChannelOption;
     142: if_acmpne     160
     145: aload_0
     146: aload_2
     147: checkcast     #32                 // class java/lang/Integer
     150: invokevirtual #33                 // Method java/lang/Integer.intValue:()I
     153: invokevirtual #41                 // Method setTrafficClass:(I)Lio/netty/channel/socket/SocketChannelConfig;
     156: pop
     157: goto          189
     160: aload_1
     161: getstatic     #18                 // Field io/netty/channel/ChannelOption.ALLOW_HALF_CLOSURE:Lio/netty/channel/ChannelOption;
     164: if_acmpne     182
     167: aload_0
     168: aload_2
     169: checkcast     #36                 // class java/lang/Boolean
     172: invokevirtual #37                 // Method java/lang/Boolean.booleanValue:()Z
     175: invokevirtual #42                 // Method setAllowHalfClosure:(Z)Lio/netty/channel/socket/SocketChannelConfig;
     178: pop
     179: goto          189
     182: aload_0
     183: aload_1
     184: aload_2
     185: invokespecial #43                 // Method io/netty/channel/DefaultChannelConfig.setOption:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)Z
     188: ireturn
     189: iconst_1
     190: ireturn

  public int getReceiveBufferSize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field javaSocket:Ljava/net/Socket;
       4: invokevirtual #44                 // Method java/net/Socket.getReceiveBufferSize:()I
       7: ireturn
       8: astore_1
       9: new           #46                 // class io/netty/channel/ChannelException
      12: dup
      13: aload_1
      14: invokespecial #47                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      17: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/net/SocketException

  public int getSendBufferSize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field javaSocket:Ljava/net/Socket;
       4: invokevirtual #48                 // Method java/net/Socket.getSendBufferSize:()I
       7: ireturn
       8: astore_1
       9: new           #46                 // class io/netty/channel/ChannelException
      12: dup
      13: aload_1
      14: invokespecial #47                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      17: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/net/SocketException

  public int getSoLinger();
    Code:
       0: aload_0
       1: getfield      #5                  // Field javaSocket:Ljava/net/Socket;
       4: invokevirtual #49                 // Method java/net/Socket.getSoLinger:()I
       7: ireturn
       8: astore_1
       9: new           #46                 // class io/netty/channel/ChannelException
      12: dup
      13: aload_1
      14: invokespecial #47                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      17: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/net/SocketException

  public int getTrafficClass();
    Code:
       0: aload_0
       1: getfield      #5                  // Field javaSocket:Ljava/net/Socket;
       4: invokevirtual #50                 // Method java/net/Socket.getTrafficClass:()I
       7: ireturn
       8: astore_1
       9: new           #46                 // class io/netty/channel/ChannelException
      12: dup
      13: aload_1
      14: invokespecial #47                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      17: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/net/SocketException

  public boolean isKeepAlive();
    Code:
       0: aload_0
       1: getfield      #5                  // Field javaSocket:Ljava/net/Socket;
       4: invokevirtual #51                 // Method java/net/Socket.getKeepAlive:()Z
       7: ireturn
       8: astore_1
       9: new           #46                 // class io/netty/channel/ChannelException
      12: dup
      13: aload_1
      14: invokespecial #47                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      17: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/net/SocketException

  public boolean isReuseAddress();
    Code:
       0: aload_0
       1: getfield      #5                  // Field javaSocket:Ljava/net/Socket;
       4: invokevirtual #52                 // Method java/net/Socket.getReuseAddress:()Z
       7: ireturn
       8: astore_1
       9: new           #46                 // class io/netty/channel/ChannelException
      12: dup
      13: aload_1
      14: invokespecial #47                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      17: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/net/SocketException

  public boolean isTcpNoDelay();
    Code:
       0: aload_0
       1: getfield      #5                  // Field javaSocket:Ljava/net/Socket;
       4: invokevirtual #53                 // Method java/net/Socket.getTcpNoDelay:()Z
       7: ireturn
       8: astore_1
       9: new           #46                 // class io/netty/channel/ChannelException
      12: dup
      13: aload_1
      14: invokespecial #47                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      17: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/net/SocketException

  public io.netty.channel.socket.SocketChannelConfig setKeepAlive(boolean);
    Code:
       0: aload_0
       1: getfield      #5                  // Field javaSocket:Ljava/net/Socket;
       4: iload_1
       5: invokevirtual #54                 // Method java/net/Socket.setKeepAlive:(Z)V
       8: goto          21
      11: astore_2
      12: new           #46                 // class io/netty/channel/ChannelException
      15: dup
      16: aload_2
      17: invokespecial #47                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      20: athrow
      21: aload_0
      22: areturn
    Exception table:
       from    to  target type
           0     8    11   Class java/net/SocketException

  public io.netty.channel.socket.SocketChannelConfig setPerformancePreferences(int, int, int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field javaSocket:Ljava/net/Socket;
       4: iload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #55                 // Method java/net/Socket.setPerformancePreferences:(III)V
      10: aload_0
      11: areturn

  public io.netty.channel.socket.SocketChannelConfig setReceiveBufferSize(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field javaSocket:Ljava/net/Socket;
       4: iload_1
       5: invokevirtual #56                 // Method java/net/Socket.setReceiveBufferSize:(I)V
       8: goto          21
      11: astore_2
      12: new           #46                 // class io/netty/channel/ChannelException
      15: dup
      16: aload_2
      17: invokespecial #47                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      20: athrow
      21: aload_0
      22: areturn
    Exception table:
       from    to  target type
           0     8    11   Class java/net/SocketException

  public io.netty.channel.socket.SocketChannelConfig setReuseAddress(boolean);
    Code:
       0: aload_0
       1: getfield      #5                  // Field javaSocket:Ljava/net/Socket;
       4: iload_1
       5: invokevirtual #57                 // Method java/net/Socket.setReuseAddress:(Z)V
       8: goto          21
      11: astore_2
      12: new           #46                 // class io/netty/channel/ChannelException
      15: dup
      16: aload_2
      17: invokespecial #47                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      20: athrow
      21: aload_0
      22: areturn
    Exception table:
       from    to  target type
           0     8    11   Class java/net/SocketException

  public io.netty.channel.socket.SocketChannelConfig setSendBufferSize(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field javaSocket:Ljava/net/Socket;
       4: iload_1
       5: invokevirtual #58                 // Method java/net/Socket.setSendBufferSize:(I)V
       8: goto          21
      11: astore_2
      12: new           #46                 // class io/netty/channel/ChannelException
      15: dup
      16: aload_2
      17: invokespecial #47                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      20: athrow
      21: aload_0
      22: areturn
    Exception table:
       from    to  target type
           0     8    11   Class java/net/SocketException

  public io.netty.channel.socket.SocketChannelConfig setSoLinger(int);
    Code:
       0: iload_1
       1: ifge          16
       4: aload_0
       5: getfield      #5                  // Field javaSocket:Ljava/net/Socket;
       8: iconst_0
       9: iconst_0
      10: invokevirtual #59                 // Method java/net/Socket.setSoLinger:(ZI)V
      13: goto          25
      16: aload_0
      17: getfield      #5                  // Field javaSocket:Ljava/net/Socket;
      20: iconst_1
      21: iload_1
      22: invokevirtual #59                 // Method java/net/Socket.setSoLinger:(ZI)V
      25: goto          38
      28: astore_2
      29: new           #46                 // class io/netty/channel/ChannelException
      32: dup
      33: aload_2
      34: invokespecial #47                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      37: athrow
      38: aload_0
      39: areturn
    Exception table:
       from    to  target type
           0    25    28   Class java/net/SocketException

  public io.netty.channel.socket.SocketChannelConfig setTcpNoDelay(boolean);
    Code:
       0: aload_0
       1: getfield      #5                  // Field javaSocket:Ljava/net/Socket;
       4: iload_1
       5: invokevirtual #60                 // Method java/net/Socket.setTcpNoDelay:(Z)V
       8: goto          21
      11: astore_2
      12: new           #46                 // class io/netty/channel/ChannelException
      15: dup
      16: aload_2
      17: invokespecial #47                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      20: athrow
      21: aload_0
      22: areturn
    Exception table:
       from    to  target type
           0     8    11   Class java/net/SocketException

  public io.netty.channel.socket.SocketChannelConfig setTrafficClass(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field javaSocket:Ljava/net/Socket;
       4: iload_1
       5: invokevirtual #61                 // Method java/net/Socket.setTrafficClass:(I)V
       8: goto          21
      11: astore_2
      12: new           #46                 // class io/netty/channel/ChannelException
      15: dup
      16: aload_2
      17: invokespecial #47                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      20: athrow
      21: aload_0
      22: areturn
    Exception table:
       from    to  target type
           0     8    11   Class java/net/SocketException

  public boolean isAllowHalfClosure();
    Code:
       0: aload_0
       1: getfield      #62                 // Field allowHalfClosure:Z
       4: ireturn

  public io.netty.channel.socket.SocketChannelConfig setAllowHalfClosure(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #62                 // Field allowHalfClosure:Z
       5: aload_0
       6: areturn

  public io.netty.channel.socket.SocketChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #63                 // Method io/netty/channel/DefaultChannelConfig.setConnectTimeoutMillis:(I)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.socket.SocketChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #64                 // Method io/netty/channel/DefaultChannelConfig.setMaxMessagesPerRead:(I)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.socket.SocketChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #65                 // Method io/netty/channel/DefaultChannelConfig.setWriteSpinCount:(I)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.socket.SocketChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #66                 // Method io/netty/channel/DefaultChannelConfig.setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.socket.SocketChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #67                 // Method io/netty/channel/DefaultChannelConfig.setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.socket.SocketChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #68                 // Method io/netty/channel/DefaultChannelConfig.setAutoRead:(Z)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.socket.SocketChannelConfig setAutoClose(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #69                 // Method io/netty/channel/DefaultChannelConfig.setAutoClose:(Z)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.socket.SocketChannelConfig setWriteBufferHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #70                 // Method io/netty/channel/DefaultChannelConfig.setWriteBufferHighWaterMark:(I)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.socket.SocketChannelConfig setWriteBufferLowWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #71                 // Method io/netty/channel/DefaultChannelConfig.setWriteBufferLowWaterMark:(I)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.socket.SocketChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #72                 // Method io/netty/channel/DefaultChannelConfig.setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.socket.SocketChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #73                 // Method io/netty/channel/DefaultChannelConfig.setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.ChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #74                 // Method setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/socket/SocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #75                 // Method setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/socket/SocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #76                 // Method setWriteBufferLowWaterMark:(I)Lio/netty/channel/socket/SocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #77                 // Method setWriteBufferHighWaterMark:(I)Lio/netty/channel/socket/SocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setAutoClose(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #78                 // Method setAutoClose:(Z)Lio/netty/channel/socket/SocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #79                 // Method setAutoRead:(Z)Lio/netty/channel/socket/SocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #80                 // Method setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/socket/SocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #81                 // Method setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/socket/SocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #82                 // Method setWriteSpinCount:(I)Lio/netty/channel/socket/SocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #83                 // Method setMaxMessagesPerRead:(I)Lio/netty/channel/socket/SocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #84                 // Method setConnectTimeoutMillis:(I)Lio/netty/channel/socket/SocketChannelConfig;
       5: areturn
}
