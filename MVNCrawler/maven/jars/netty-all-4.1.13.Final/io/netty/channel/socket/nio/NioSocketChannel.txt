Compiled from "NioSocketChannel.java"
public class io.netty.channel.socket.nio.NioSocketChannel extends io.netty.channel.nio.AbstractNioByteChannel implements io.netty.channel.socket.SocketChannel {
  private static final io.netty.util.internal.logging.InternalLogger logger;

  private static final java.nio.channels.spi.SelectorProvider DEFAULT_SELECTOR_PROVIDER;

  private final io.netty.channel.socket.SocketChannelConfig config;

  private static java.nio.channels.SocketChannel newSocket(java.nio.channels.spi.SelectorProvider);
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method java/nio/channels/spi/SelectorProvider.openSocketChannel:()Ljava/nio/channels/SocketChannel;
       4: areturn
       5: astore_1
       6: new           #8                  // class io/netty/channel/ChannelException
       9: dup
      10: ldc           #9                  // String Failed to open a socket.
      12: aload_1
      13: invokespecial #10                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      16: athrow
    Exception table:
       from    to  target type
           0     4     5   Class java/io/IOException

  public io.netty.channel.socket.nio.NioSocketChannel();
    Code:
       0: aload_0
       1: getstatic     #11                 // Field DEFAULT_SELECTOR_PROVIDER:Ljava/nio/channels/spi/SelectorProvider;
       4: invokespecial #12                 // Method "<init>":(Ljava/nio/channels/spi/SelectorProvider;)V
       7: return

  public io.netty.channel.socket.nio.NioSocketChannel(java.nio.channels.spi.SelectorProvider);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #13                 // Method newSocket:(Ljava/nio/channels/spi/SelectorProvider;)Ljava/nio/channels/SocketChannel;
       5: invokespecial #14                 // Method "<init>":(Ljava/nio/channels/SocketChannel;)V
       8: return

  public io.netty.channel.socket.nio.NioSocketChannel(java.nio.channels.SocketChannel);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: invokespecial #15                 // Method "<init>":(Lio/netty/channel/Channel;Ljava/nio/channels/SocketChannel;)V
       6: return

  public io.netty.channel.socket.nio.NioSocketChannel(io.netty.channel.Channel, java.nio.channels.SocketChannel);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #16                 // Method io/netty/channel/nio/AbstractNioByteChannel."<init>":(Lio/netty/channel/Channel;Ljava/nio/channels/SelectableChannel;)V
       6: aload_0
       7: new           #17                 // class io/netty/channel/socket/nio/NioSocketChannel$NioSocketChannelConfig
      10: dup
      11: aload_0
      12: aload_0
      13: aload_2
      14: invokevirtual #18                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
      17: aconst_null
      18: invokespecial #19                 // Method io/netty/channel/socket/nio/NioSocketChannel$NioSocketChannelConfig."<init>":(Lio/netty/channel/socket/nio/NioSocketChannel;Lio/netty/channel/socket/nio/NioSocketChannel;Ljava/net/Socket;Lio/netty/channel/socket/nio/NioSocketChannel$1;)V
      21: putfield      #20                 // Field config:Lio/netty/channel/socket/SocketChannelConfig;
      24: return

  public io.netty.channel.socket.ServerSocketChannel parent();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method io/netty/channel/nio/AbstractNioByteChannel.parent:()Lio/netty/channel/Channel;
       4: checkcast     #22                 // class io/netty/channel/socket/ServerSocketChannel
       7: areturn

  public io.netty.channel.socket.SocketChannelConfig config();
    Code:
       0: aload_0
       1: getfield      #20                 // Field config:Lio/netty/channel/socket/SocketChannelConfig;
       4: areturn

  protected java.nio.channels.SocketChannel javaChannel();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method io/netty/channel/nio/AbstractNioByteChannel.javaChannel:()Ljava/nio/channels/SelectableChannel;
       4: checkcast     #24                 // class java/nio/channels/SocketChannel
       7: areturn

  public boolean isActive();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
       4: astore_1
       5: aload_1
       6: invokevirtual #26                 // Method java/nio/channels/SocketChannel.isOpen:()Z
       9: ifeq          23
      12: aload_1
      13: invokevirtual #27                 // Method java/nio/channels/SocketChannel.isConnected:()Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public boolean isOutputShutdown();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
       4: invokevirtual #18                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
       7: invokevirtual #28                 // Method java/net/Socket.isOutputShutdown:()Z
      10: ifne          20
      13: aload_0
      14: invokevirtual #29                 // Method isActive:()Z
      17: ifne          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public boolean isInputShutdown();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
       4: invokevirtual #18                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
       7: invokevirtual #30                 // Method java/net/Socket.isInputShutdown:()Z
      10: ifne          20
      13: aload_0
      14: invokevirtual #29                 // Method isActive:()Z
      17: ifne          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public boolean isShutdown();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
       4: invokevirtual #18                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
       7: astore_1
       8: aload_1
       9: invokevirtual #30                 // Method java/net/Socket.isInputShutdown:()Z
      12: ifeq          22
      15: aload_1
      16: invokevirtual #28                 // Method java/net/Socket.isOutputShutdown:()Z
      19: ifne          29
      22: aload_0
      23: invokevirtual #29                 // Method isActive:()Z
      26: ifne          33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: ireturn

  public java.net.InetSocketAddress localAddress();
    Code:
       0: aload_0
       1: invokespecial #31                 // Method io/netty/channel/nio/AbstractNioByteChannel.localAddress:()Ljava/net/SocketAddress;
       4: checkcast     #32                 // class java/net/InetSocketAddress
       7: areturn

  public java.net.InetSocketAddress remoteAddress();
    Code:
       0: aload_0
       1: invokespecial #33                 // Method io/netty/channel/nio/AbstractNioByteChannel.remoteAddress:()Ljava/net/SocketAddress;
       4: checkcast     #32                 // class java/net/InetSocketAddress
       7: areturn

  public io.netty.channel.ChannelFuture shutdownOutput();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #34                 // Method newPromise:()Lio/netty/channel/ChannelPromise;
       5: invokevirtual #35                 // Method shutdownOutput:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       8: areturn

  public io.netty.channel.ChannelFuture shutdownOutput(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method unsafe:()Lio/netty/channel/nio/AbstractNioChannel$NioUnsafe;
       4: checkcast     #37                 // class io/netty/channel/socket/nio/NioSocketChannel$NioSocketChannelUnsafe
       7: invokevirtual #38                 // Method io/netty/channel/socket/nio/NioSocketChannel$NioSocketChannelUnsafe.prepareToClose:()Ljava/util/concurrent/Executor;
      10: astore_2
      11: aload_2
      12: ifnull        33
      15: aload_2
      16: new           #39                 // class io/netty/channel/socket/nio/NioSocketChannel$1
      19: dup
      20: aload_0
      21: aload_1
      22: invokespecial #40                 // Method io/netty/channel/socket/nio/NioSocketChannel$1."<init>":(Lio/netty/channel/socket/nio/NioSocketChannel;Lio/netty/channel/ChannelPromise;)V
      25: invokeinterface #41,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      30: goto          70
      33: aload_0
      34: invokevirtual #42                 // Method eventLoop:()Lio/netty/channel/nio/NioEventLoop;
      37: astore_3
      38: aload_3
      39: invokeinterface #43,  1           // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
      44: ifeq          55
      47: aload_0
      48: aload_1
      49: invokespecial #5                  // Method shutdownOutput0:(Lio/netty/channel/ChannelPromise;)V
      52: goto          70
      55: aload_3
      56: new           #44                 // class io/netty/channel/socket/nio/NioSocketChannel$2
      59: dup
      60: aload_0
      61: aload_1
      62: invokespecial #45                 // Method io/netty/channel/socket/nio/NioSocketChannel$2."<init>":(Lio/netty/channel/socket/nio/NioSocketChannel;Lio/netty/channel/ChannelPromise;)V
      65: invokeinterface #46,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      70: aload_1
      71: areturn

  public io.netty.channel.ChannelFuture shutdownInput();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #34                 // Method newPromise:()Lio/netty/channel/ChannelPromise;
       5: invokevirtual #47                 // Method shutdownInput:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       8: areturn

  protected boolean isInputShutdown0();
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method isInputShutdown:()Z
       4: ireturn

  public io.netty.channel.ChannelFuture shutdownInput(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method unsafe:()Lio/netty/channel/nio/AbstractNioChannel$NioUnsafe;
       4: checkcast     #37                 // class io/netty/channel/socket/nio/NioSocketChannel$NioSocketChannelUnsafe
       7: invokevirtual #38                 // Method io/netty/channel/socket/nio/NioSocketChannel$NioSocketChannelUnsafe.prepareToClose:()Ljava/util/concurrent/Executor;
      10: astore_2
      11: aload_2
      12: ifnull        33
      15: aload_2
      16: new           #49                 // class io/netty/channel/socket/nio/NioSocketChannel$3
      19: dup
      20: aload_0
      21: aload_1
      22: invokespecial #50                 // Method io/netty/channel/socket/nio/NioSocketChannel$3."<init>":(Lio/netty/channel/socket/nio/NioSocketChannel;Lio/netty/channel/ChannelPromise;)V
      25: invokeinterface #41,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      30: goto          70
      33: aload_0
      34: invokevirtual #42                 // Method eventLoop:()Lio/netty/channel/nio/NioEventLoop;
      37: astore_3
      38: aload_3
      39: invokeinterface #43,  1           // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
      44: ifeq          55
      47: aload_0
      48: aload_1
      49: invokespecial #4                  // Method shutdownInput0:(Lio/netty/channel/ChannelPromise;)V
      52: goto          70
      55: aload_3
      56: new           #51                 // class io/netty/channel/socket/nio/NioSocketChannel$4
      59: dup
      60: aload_0
      61: aload_1
      62: invokespecial #52                 // Method io/netty/channel/socket/nio/NioSocketChannel$4."<init>":(Lio/netty/channel/socket/nio/NioSocketChannel;Lio/netty/channel/ChannelPromise;)V
      65: invokeinterface #46,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      70: aload_1
      71: areturn

  public io.netty.channel.ChannelFuture shutdown();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #34                 // Method newPromise:()Lio/netty/channel/ChannelPromise;
       5: invokevirtual #53                 // Method shutdown:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       8: areturn

  public io.netty.channel.ChannelFuture shutdown(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method unsafe:()Lio/netty/channel/nio/AbstractNioChannel$NioUnsafe;
       4: checkcast     #37                 // class io/netty/channel/socket/nio/NioSocketChannel$NioSocketChannelUnsafe
       7: invokevirtual #38                 // Method io/netty/channel/socket/nio/NioSocketChannel$NioSocketChannelUnsafe.prepareToClose:()Ljava/util/concurrent/Executor;
      10: astore_2
      11: aload_2
      12: ifnull        33
      15: aload_2
      16: new           #54                 // class io/netty/channel/socket/nio/NioSocketChannel$5
      19: dup
      20: aload_0
      21: aload_1
      22: invokespecial #55                 // Method io/netty/channel/socket/nio/NioSocketChannel$5."<init>":(Lio/netty/channel/socket/nio/NioSocketChannel;Lio/netty/channel/ChannelPromise;)V
      25: invokeinterface #41,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      30: goto          70
      33: aload_0
      34: invokevirtual #42                 // Method eventLoop:()Lio/netty/channel/nio/NioEventLoop;
      37: astore_3
      38: aload_3
      39: invokeinterface #43,  1           // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
      44: ifeq          55
      47: aload_0
      48: aload_1
      49: invokespecial #3                  // Method shutdown0:(Lio/netty/channel/ChannelPromise;)V
      52: goto          70
      55: aload_3
      56: new           #56                 // class io/netty/channel/socket/nio/NioSocketChannel$6
      59: dup
      60: aload_0
      61: aload_1
      62: invokespecial #57                 // Method io/netty/channel/socket/nio/NioSocketChannel$6."<init>":(Lio/netty/channel/socket/nio/NioSocketChannel;Lio/netty/channel/ChannelPromise;)V
      65: invokeinterface #46,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      70: aload_1
      71: areturn

  private void shutdownOutput0(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokespecial #58                 // Method shutdownOutput0:()V
       4: aload_1
       5: invokeinterface #59,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setSuccess:()Lio/netty/channel/ChannelPromise;
      10: pop
      11: goto          23
      14: astore_2
      15: aload_1
      16: aload_2
      17: invokeinterface #61,  2           // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
      22: pop
      23: return
    Exception table:
       from    to  target type
           0    11    14   Class java/lang/Throwable

  private void shutdownOutput0() throws java.lang.Exception;
    Code:
       0: invokestatic  #62                 // Method io/netty/util/internal/PlatformDependent.javaVersion:()I
       3: bipush        7
       5: if_icmplt     19
       8: aload_0
       9: invokevirtual #25                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
      12: invokevirtual #63                 // Method java/nio/channels/SocketChannel.shutdownOutput:()Ljava/nio/channels/SocketChannel;
      15: pop
      16: goto          29
      19: aload_0
      20: invokevirtual #25                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
      23: invokevirtual #18                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
      26: invokevirtual #64                 // Method java/net/Socket.shutdownOutput:()V
      29: return

  private void shutdownInput0(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokespecial #65                 // Method shutdownInput0:()V
       4: aload_1
       5: invokeinterface #59,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setSuccess:()Lio/netty/channel/ChannelPromise;
      10: pop
      11: goto          23
      14: astore_2
      15: aload_1
      16: aload_2
      17: invokeinterface #61,  2           // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
      22: pop
      23: return
    Exception table:
       from    to  target type
           0    11    14   Class java/lang/Throwable

  private void shutdownInput0() throws java.lang.Exception;
    Code:
       0: invokestatic  #62                 // Method io/netty/util/internal/PlatformDependent.javaVersion:()I
       3: bipush        7
       5: if_icmplt     19
       8: aload_0
       9: invokevirtual #25                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
      12: invokevirtual #66                 // Method java/nio/channels/SocketChannel.shutdownInput:()Ljava/nio/channels/SocketChannel;
      15: pop
      16: goto          29
      19: aload_0
      20: invokevirtual #25                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
      23: invokevirtual #18                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
      26: invokevirtual #67                 // Method java/net/Socket.shutdownInput:()V
      29: return

  private void shutdown0(io.netty.channel.ChannelPromise);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: invokespecial #58                 // Method shutdownOutput0:()V
       6: goto          12
       9: astore_3
      10: aload_3
      11: astore_2
      12: aload_0
      13: invokespecial #65                 // Method shutdownInput0:()V
      16: goto          55
      19: astore_3
      20: aload_2
      21: ifnonnull     35
      24: aload_1
      25: aload_3
      26: invokeinterface #61,  2           // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
      31: pop
      32: goto          54
      35: getstatic     #68                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      38: ldc           #69                 // String Exception suppressed because a previous exception occurred.
      40: aload_3
      41: invokeinterface #70,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      46: aload_1
      47: aload_2
      48: invokeinterface #61,  2           // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
      53: pop
      54: return
      55: aload_2
      56: ifnonnull     69
      59: aload_1
      60: invokeinterface #59,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setSuccess:()Lio/netty/channel/ChannelPromise;
      65: pop
      66: goto          77
      69: aload_1
      70: aload_2
      71: invokeinterface #61,  2           // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
      76: pop
      77: return
    Exception table:
       from    to  target type
           2     6     9   Class java/lang/Throwable
          12    16    19   Class java/lang/Throwable

  protected java.net.SocketAddress localAddress0();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
       4: invokevirtual #18                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
       7: invokevirtual #71                 // Method java/net/Socket.getLocalSocketAddress:()Ljava/net/SocketAddress;
      10: areturn

  protected java.net.SocketAddress remoteAddress0();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
       4: invokevirtual #18                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
       7: invokevirtual #72                 // Method java/net/Socket.getRemoteSocketAddress:()Ljava/net/SocketAddress;
      10: areturn

  protected void doBind(java.net.SocketAddress) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #73                 // Method doBind0:(Ljava/net/SocketAddress;)V
       5: return

  private void doBind0(java.net.SocketAddress) throws java.lang.Exception;
    Code:
       0: invokestatic  #62                 // Method io/netty/util/internal/PlatformDependent.javaVersion:()I
       3: bipush        7
       5: if_icmplt     19
       8: aload_0
       9: invokevirtual #25                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
      12: aload_1
      13: invokestatic  #74                 // Method io/netty/util/internal/SocketUtils.bind:(Ljava/nio/channels/SocketChannel;Ljava/net/SocketAddress;)V
      16: goto          30
      19: aload_0
      20: invokevirtual #25                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
      23: invokevirtual #18                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
      26: aload_1
      27: invokestatic  #75                 // Method io/netty/util/internal/SocketUtils.bind:(Ljava/net/Socket;Ljava/net/SocketAddress;)V
      30: return

  protected boolean doConnect(java.net.SocketAddress, java.net.SocketAddress) throws java.lang.Exception;
    Code:
       0: aload_2
       1: ifnull        9
       4: aload_0
       5: aload_2
       6: invokespecial #73                 // Method doBind0:(Ljava/net/SocketAddress;)V
       9: iconst_0
      10: istore_3
      11: aload_0
      12: invokevirtual #25                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
      15: aload_1
      16: invokestatic  #76                 // Method io/netty/util/internal/SocketUtils.connect:(Ljava/nio/channels/SocketChannel;Ljava/net/SocketAddress;)Z
      19: istore        4
      21: iload         4
      23: ifne          36
      26: aload_0
      27: invokevirtual #77                 // Method selectionKey:()Ljava/nio/channels/SelectionKey;
      30: bipush        8
      32: invokevirtual #79                 // Method java/nio/channels/SelectionKey.interestOps:(I)Ljava/nio/channels/SelectionKey;
      35: pop
      36: iconst_1
      37: istore_3
      38: iload         4
      40: istore        5
      42: iload_3
      43: ifne          50
      46: aload_0
      47: invokevirtual #80                 // Method doClose:()V
      50: iload         5
      52: ireturn
      53: astore        6
      55: iload_3
      56: ifne          63
      59: aload_0
      60: invokevirtual #80                 // Method doClose:()V
      63: aload         6
      65: athrow
    Exception table:
       from    to  target type
          11    42    53   any
          53    55    53   any

  protected void doFinishConnect() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
       4: invokevirtual #81                 // Method java/nio/channels/SocketChannel.finishConnect:()Z
       7: ifne          18
      10: new           #82                 // class java/lang/Error
      13: dup
      14: invokespecial #83                 // Method java/lang/Error."<init>":()V
      17: athrow
      18: return

  protected void doDisconnect() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method doClose:()V
       4: return

  protected void doClose() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #84                 // Method io/netty/channel/nio/AbstractNioByteChannel.doClose:()V
       4: aload_0
       5: invokevirtual #25                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
       8: invokevirtual #85                 // Method java/nio/channels/SocketChannel.close:()V
      11: return

  protected int doReadBytes(io.netty.buffer.ByteBuf) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method unsafe:()Lio/netty/channel/nio/AbstractNioChannel$NioUnsafe;
       4: invokeinterface #86,  1           // InterfaceMethod io/netty/channel/nio/AbstractNioChannel$NioUnsafe.recvBufAllocHandle:()Lio/netty/channel/RecvByteBufAllocator$Handle;
       9: astore_2
      10: aload_2
      11: aload_1
      12: invokevirtual #87                 // Method io/netty/buffer/ByteBuf.writableBytes:()I
      15: invokeinterface #88,  2           // InterfaceMethod io/netty/channel/RecvByteBufAllocator$Handle.attemptedBytesRead:(I)V
      20: aload_1
      21: aload_0
      22: invokevirtual #25                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
      25: aload_2
      26: invokeinterface #89,  1           // InterfaceMethod io/netty/channel/RecvByteBufAllocator$Handle.attemptedBytesRead:()I
      31: invokevirtual #90                 // Method io/netty/buffer/ByteBuf.writeBytes:(Ljava/nio/channels/ScatteringByteChannel;I)I
      34: ireturn

  protected int doWriteBytes(io.netty.buffer.ByteBuf) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #91                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
       4: istore_2
       5: aload_1
       6: aload_0
       7: invokevirtual #25                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
      10: iload_2
      11: invokevirtual #92                 // Method io/netty/buffer/ByteBuf.readBytes:(Ljava/nio/channels/GatheringByteChannel;I)I
      14: ireturn

  protected long doWriteFileRegion(io.netty.channel.FileRegion) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #93,  1           // InterfaceMethod io/netty/channel/FileRegion.transferred:()J
       6: lstore_2
       7: aload_1
       8: aload_0
       9: invokevirtual #25                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
      12: lload_2
      13: invokeinterface #94,  4           // InterfaceMethod io/netty/channel/FileRegion.transferTo:(Ljava/nio/channels/WritableByteChannel;J)J
      18: lreturn

  protected void doWrite(io.netty.channel.ChannelOutboundBuffer) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #95                 // Method io/netty/channel/ChannelOutboundBuffer.size:()I
       4: istore_2
       5: iload_2
       6: ifne          16
       9: aload_0
      10: invokevirtual #96                 // Method clearOpWrite:()V
      13: goto          258
      16: lconst_0
      17: lstore_3
      18: iconst_0
      19: istore        5
      21: iconst_0
      22: istore        6
      24: aload_1
      25: invokevirtual #97                 // Method io/netty/channel/ChannelOutboundBuffer.nioBuffers:()[Ljava/nio/ByteBuffer;
      28: astore        7
      30: aload_1
      31: invokevirtual #98                 // Method io/netty/channel/ChannelOutboundBuffer.nioBufferCount:()I
      34: istore        8
      36: aload_1
      37: invokevirtual #99                 // Method io/netty/channel/ChannelOutboundBuffer.nioBufferSize:()J
      40: lstore        9
      42: aload_0
      43: invokevirtual #25                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
      46: astore        11
      48: iload         8
      50: lookupswitch  { // 2
                     0: 76
                     1: 82
               default: 162
          }
      76: aload_0
      77: aload_1
      78: invokespecial #100                // Method io/netty/channel/nio/AbstractNioByteChannel.doWrite:(Lio/netty/channel/ChannelOutboundBuffer;)V
      81: return
      82: aload         7
      84: iconst_0
      85: aaload
      86: astore        12
      88: aload_0
      89: invokevirtual #101                // Method config:()Lio/netty/channel/socket/SocketChannelConfig;
      92: invokeinterface #102,  1          // InterfaceMethod io/netty/channel/socket/SocketChannelConfig.getWriteSpinCount:()I
      97: iconst_1
      98: isub
      99: istore        13
     101: iload         13
     103: iflt          159
     106: aload         11
     108: aload         12
     110: invokevirtual #103                // Method java/nio/channels/SocketChannel.write:(Ljava/nio/ByteBuffer;)I
     113: istore        14
     115: iload         14
     117: ifne          126
     120: iconst_1
     121: istore        6
     123: goto          159
     126: lload         9
     128: iload         14
     130: i2l
     131: lsub
     132: lstore        9
     134: lload_3
     135: iload         14
     137: i2l
     138: ladd
     139: lstore_3
     140: lload         9
     142: lconst_0
     143: lcmp
     144: ifne          153
     147: iconst_1
     148: istore        5
     150: goto          159
     153: iinc          13, -1
     156: goto          101
     159: goto          236
     162: aload_0
     163: invokevirtual #101                // Method config:()Lio/netty/channel/socket/SocketChannelConfig;
     166: invokeinterface #102,  1          // InterfaceMethod io/netty/channel/socket/SocketChannelConfig.getWriteSpinCount:()I
     171: iconst_1
     172: isub
     173: istore        13
     175: iload         13
     177: iflt          236
     180: aload         11
     182: aload         7
     184: iconst_0
     185: iload         8
     187: invokevirtual #104                // Method java/nio/channels/SocketChannel.write:([Ljava/nio/ByteBuffer;II)J
     190: lstore        14
     192: lload         14
     194: lconst_0
     195: lcmp
     196: ifne          205
     199: iconst_1
     200: istore        6
     202: goto          236
     205: lload         9
     207: lload         14
     209: lsub
     210: lstore        9
     212: lload_3
     213: lload         14
     215: ladd
     216: lstore_3
     217: lload         9
     219: lconst_0
     220: lcmp
     221: ifne          230
     224: iconst_1
     225: istore        5
     227: goto          236
     230: iinc          13, -1
     233: goto          175
     236: aload_1
     237: lload_3
     238: invokevirtual #105                // Method io/netty/channel/ChannelOutboundBuffer.removeBytes:(J)V
     241: iload         5
     243: ifne          255
     246: aload_0
     247: iload         6
     249: invokevirtual #106                // Method incompleteWrite:(Z)V
     252: goto          258
     255: goto          0
     258: return

  protected io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe newUnsafe();
    Code:
       0: new           #37                 // class io/netty/channel/socket/nio/NioSocketChannel$NioSocketChannelUnsafe
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #107                // Method io/netty/channel/socket/nio/NioSocketChannel$NioSocketChannelUnsafe."<init>":(Lio/netty/channel/socket/nio/NioSocketChannel;Lio/netty/channel/socket/nio/NioSocketChannel$1;)V
       9: areturn

  protected java.nio.channels.SelectableChannel javaChannel();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
       4: areturn

  protected io.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe();
    Code:
       0: aload_0
       1: invokevirtual #108                // Method newUnsafe:()Lio/netty/channel/nio/AbstractNioChannel$AbstractNioUnsafe;
       4: areturn

  public java.net.SocketAddress remoteAddress();
    Code:
       0: aload_0
       1: invokevirtual #109                // Method remoteAddress:()Ljava/net/InetSocketAddress;
       4: areturn

  public java.net.SocketAddress localAddress();
    Code:
       0: aload_0
       1: invokevirtual #110                // Method localAddress:()Ljava/net/InetSocketAddress;
       4: areturn

  public io.netty.channel.Channel parent();
    Code:
       0: aload_0
       1: invokevirtual #111                // Method parent:()Lio/netty/channel/socket/ServerSocketChannel;
       4: areturn

  public io.netty.channel.ChannelConfig config();
    Code:
       0: aload_0
       1: invokevirtual #101                // Method config:()Lio/netty/channel/socket/SocketChannelConfig;
       4: areturn

  static void access$100(io.netty.channel.socket.nio.NioSocketChannel, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method shutdownOutput0:(Lio/netty/channel/ChannelPromise;)V
       5: return

  static void access$200(io.netty.channel.socket.nio.NioSocketChannel, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method shutdownInput0:(Lio/netty/channel/ChannelPromise;)V
       5: return

  static void access$300(io.netty.channel.socket.nio.NioSocketChannel, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method shutdown0:(Lio/netty/channel/ChannelPromise;)V
       5: return

  static void access$500(io.netty.channel.socket.nio.NioSocketChannel) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method doDeregister:()V
       4: return

  static void access$600(io.netty.channel.socket.nio.NioSocketChannel);
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method clearReadPending:()V
       4: return

  static {};
    Code:
       0: ldc           #112                // class io/netty/channel/socket/nio/NioSocketChannel
       2: invokestatic  #113                // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
       5: putstatic     #68                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       8: invokestatic  #114                // Method java/nio/channels/spi/SelectorProvider.provider:()Ljava/nio/channels/spi/SelectorProvider;
      11: putstatic     #11                 // Field DEFAULT_SELECTOR_PROVIDER:Ljava/nio/channels/spi/SelectorProvider;
      14: return
}
