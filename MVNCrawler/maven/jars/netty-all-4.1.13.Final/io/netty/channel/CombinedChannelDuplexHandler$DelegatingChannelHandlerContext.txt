Compiled from "CombinedChannelDuplexHandler.java"
class io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext implements io.netty.channel.ChannelHandlerContext {
  private final io.netty.channel.ChannelHandlerContext ctx;

  private final io.netty.channel.ChannelHandler handler;

  boolean removed;

  io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelHandler);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field handler:Lio/netty/channel/ChannelHandler;
      14: return

  public io.netty.channel.Channel channel();
    Code:
       0: aload_0
       1: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: invokeinterface #5,  1            // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
       9: areturn

  public io.netty.util.concurrent.EventExecutor executor();
    Code:
       0: aload_0
       1: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: invokeinterface #6,  1            // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
       9: areturn

  public java.lang.String name();
    Code:
       0: aload_0
       1: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: invokeinterface #7,  1            // InterfaceMethod io/netty/channel/ChannelHandlerContext.name:()Ljava/lang/String;
       9: areturn

  public io.netty.channel.ChannelHandler handler();
    Code:
       0: aload_0
       1: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: invokeinterface #8,  1            // InterfaceMethod io/netty/channel/ChannelHandlerContext.handler:()Lio/netty/channel/ChannelHandler;
       9: areturn

  public boolean isRemoved();
    Code:
       0: aload_0
       1: getfield      #9                  // Field removed:Z
       4: ifne          19
       7: aload_0
       8: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      11: invokeinterface #10,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.isRemoved:()Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public io.netty.channel.ChannelHandlerContext fireChannelRegistered();
    Code:
       0: aload_0
       1: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: invokeinterface #11,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelRegistered:()Lio/netty/channel/ChannelHandlerContext;
       9: pop
      10: aload_0
      11: areturn

  public io.netty.channel.ChannelHandlerContext fireChannelUnregistered();
    Code:
       0: aload_0
       1: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: invokeinterface #12,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelUnregistered:()Lio/netty/channel/ChannelHandlerContext;
       9: pop
      10: aload_0
      11: areturn

  public io.netty.channel.ChannelHandlerContext fireChannelActive();
    Code:
       0: aload_0
       1: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: invokeinterface #13,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelActive:()Lio/netty/channel/ChannelHandlerContext;
       9: pop
      10: aload_0
      11: areturn

  public io.netty.channel.ChannelHandlerContext fireChannelInactive();
    Code:
       0: aload_0
       1: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: invokeinterface #14,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelInactive:()Lio/netty/channel/ChannelHandlerContext;
       9: pop
      10: aload_0
      11: areturn

  public io.netty.channel.ChannelHandlerContext fireExceptionCaught(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: aload_1
       5: invokeinterface #15,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelHandlerContext;
      10: pop
      11: aload_0
      12: areturn

  public io.netty.channel.ChannelHandlerContext fireUserEventTriggered(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: aload_1
       5: invokeinterface #16,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireUserEventTriggered:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
      10: pop
      11: aload_0
      12: areturn

  public io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: aload_1
       5: invokeinterface #17,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
      10: pop
      11: aload_0
      12: areturn

  public io.netty.channel.ChannelHandlerContext fireChannelReadComplete();
    Code:
       0: aload_0
       1: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: invokeinterface #18,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelReadComplete:()Lio/netty/channel/ChannelHandlerContext;
       9: pop
      10: aload_0
      11: areturn

  public io.netty.channel.ChannelHandlerContext fireChannelWritabilityChanged();
    Code:
       0: aload_0
       1: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: invokeinterface #19,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelWritabilityChanged:()Lio/netty/channel/ChannelHandlerContext;
       9: pop
      10: aload_0
      11: areturn

  public io.netty.channel.ChannelFuture bind(java.net.SocketAddress);
    Code:
       0: aload_0
       1: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: aload_1
       5: invokeinterface #20,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.bind:(Ljava/net/SocketAddress;)Lio/netty/channel/ChannelFuture;
      10: areturn

  public io.netty.channel.ChannelFuture connect(java.net.SocketAddress);
    Code:
       0: aload_0
       1: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: aload_1
       5: invokeinterface #21,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.connect:(Ljava/net/SocketAddress;)Lio/netty/channel/ChannelFuture;
      10: areturn

  public io.netty.channel.ChannelFuture connect(java.net.SocketAddress, java.net.SocketAddress);
    Code:
       0: aload_0
       1: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: aload_1
       5: aload_2
       6: invokeinterface #22,  3           // InterfaceMethod io/netty/channel/ChannelHandlerContext.connect:(Ljava/net/SocketAddress;Ljava/net/SocketAddress;)Lio/netty/channel/ChannelFuture;
      11: areturn

  public io.netty.channel.ChannelFuture disconnect();
    Code:
       0: aload_0
       1: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: invokeinterface #23,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.disconnect:()Lio/netty/channel/ChannelFuture;
       9: areturn

  public io.netty.channel.ChannelFuture close();
    Code:
       0: aload_0
       1: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: invokeinterface #24,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.close:()Lio/netty/channel/ChannelFuture;
       9: areturn

  public io.netty.channel.ChannelFuture deregister();
    Code:
       0: aload_0
       1: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: invokeinterface #25,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.deregister:()Lio/netty/channel/ChannelFuture;
       9: areturn

  public io.netty.channel.ChannelFuture bind(java.net.SocketAddress, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: aload_1
       5: aload_2
       6: invokeinterface #26,  3           // InterfaceMethod io/netty/channel/ChannelHandlerContext.bind:(Ljava/net/SocketAddress;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      11: areturn

  public io.netty.channel.ChannelFuture connect(java.net.SocketAddress, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: aload_1
       5: aload_2
       6: invokeinterface #27,  3           // InterfaceMethod io/netty/channel/ChannelHandlerContext.connect:(Ljava/net/SocketAddress;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      11: areturn

  public io.netty.channel.ChannelFuture connect(java.net.SocketAddress, java.net.SocketAddress, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokeinterface #28,  4           // InterfaceMethod io/netty/channel/ChannelHandlerContext.connect:(Ljava/net/SocketAddress;Ljava/net/SocketAddress;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      12: areturn

  public io.netty.channel.ChannelFuture disconnect(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: aload_1
       5: invokeinterface #29,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.disconnect:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      10: areturn

  public io.netty.channel.ChannelFuture close(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: aload_1
       5: invokeinterface #30,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.close:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      10: areturn

  public io.netty.channel.ChannelFuture deregister(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: aload_1
       5: invokeinterface #31,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.deregister:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      10: areturn

  public io.netty.channel.ChannelHandlerContext read();
    Code:
       0: aload_0
       1: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: invokeinterface #32,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.read:()Lio/netty/channel/ChannelHandlerContext;
       9: pop
      10: aload_0
      11: areturn

  public io.netty.channel.ChannelFuture write(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: aload_1
       5: invokeinterface #33,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.write:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
      10: areturn

  public io.netty.channel.ChannelFuture write(java.lang.Object, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: aload_1
       5: aload_2
       6: invokeinterface #34,  3           // InterfaceMethod io/netty/channel/ChannelHandlerContext.write:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      11: areturn

  public io.netty.channel.ChannelHandlerContext flush();
    Code:
       0: aload_0
       1: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: invokeinterface #35,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.flush:()Lio/netty/channel/ChannelHandlerContext;
       9: pop
      10: aload_0
      11: areturn

  public io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: aload_1
       5: aload_2
       6: invokeinterface #36,  3           // InterfaceMethod io/netty/channel/ChannelHandlerContext.writeAndFlush:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      11: areturn

  public io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: aload_1
       5: invokeinterface #37,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.writeAndFlush:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
      10: areturn

  public io.netty.channel.ChannelPipeline pipeline();
    Code:
       0: aload_0
       1: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: invokeinterface #38,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.pipeline:()Lio/netty/channel/ChannelPipeline;
       9: areturn

  public io.netty.buffer.ByteBufAllocator alloc();
    Code:
       0: aload_0
       1: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: invokeinterface #39,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.alloc:()Lio/netty/buffer/ByteBufAllocator;
       9: areturn

  public io.netty.channel.ChannelPromise newPromise();
    Code:
       0: aload_0
       1: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: invokeinterface #40,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.newPromise:()Lio/netty/channel/ChannelPromise;
       9: areturn

  public io.netty.channel.ChannelProgressivePromise newProgressivePromise();
    Code:
       0: aload_0
       1: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: invokeinterface #41,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.newProgressivePromise:()Lio/netty/channel/ChannelProgressivePromise;
       9: areturn

  public io.netty.channel.ChannelFuture newSucceededFuture();
    Code:
       0: aload_0
       1: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: invokeinterface #42,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.newSucceededFuture:()Lio/netty/channel/ChannelFuture;
       9: areturn

  public io.netty.channel.ChannelFuture newFailedFuture(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: aload_1
       5: invokeinterface #43,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.newFailedFuture:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelFuture;
      10: areturn

  public io.netty.channel.ChannelPromise voidPromise();
    Code:
       0: aload_0
       1: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: invokeinterface #44,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.voidPromise:()Lio/netty/channel/ChannelPromise;
       9: areturn

  public <T> io.netty.util.Attribute<T> attr(io.netty.util.AttributeKey<T>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: aload_1
       5: invokeinterface #45,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.attr:(Lio/netty/util/AttributeKey;)Lio/netty/util/Attribute;
      10: areturn

  public <T> boolean hasAttr(io.netty.util.AttributeKey<T>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: aload_1
       5: invokeinterface #46,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.hasAttr:(Lio/netty/util/AttributeKey;)Z
      10: ireturn

  final void remove();
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method executor:()Lio/netty/util/concurrent/EventExecutor;
       4: astore_1
       5: aload_1
       6: invokeinterface #48,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      11: ifeq          21
      14: aload_0
      15: invokespecial #1                  // Method remove0:()V
      18: goto          35
      21: aload_1
      22: new           #49                 // class io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext$1
      25: dup
      26: aload_0
      27: invokespecial #50                 // Method io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext$1."<init>":(Lio/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext;)V
      30: invokeinterface #51,  2           // InterfaceMethod io/netty/util/concurrent/EventExecutor.execute:(Ljava/lang/Runnable;)V
      35: return

  private void remove0();
    Code:
       0: aload_0
       1: getfield      #9                  // Field removed:Z
       4: ifne          67
       7: aload_0
       8: iconst_1
       9: putfield      #9                  // Field removed:Z
      12: aload_0
      13: getfield      #4                  // Field handler:Lio/netty/channel/ChannelHandler;
      16: aload_0
      17: invokeinterface #52,  2           // InterfaceMethod io/netty/channel/ChannelHandler.handlerRemoved:(Lio/netty/channel/ChannelHandlerContext;)V
      22: goto          67
      25: astore_1
      26: aload_0
      27: new           #54                 // class io/netty/channel/ChannelPipelineException
      30: dup
      31: new           #55                 // class java/lang/StringBuilder
      34: dup
      35: invokespecial #56                 // Method java/lang/StringBuilder."<init>":()V
      38: aload_0
      39: getfield      #4                  // Field handler:Lio/netty/channel/ChannelHandler;
      42: invokevirtual #57                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      45: invokevirtual #58                 // Method java/lang/Class.getName:()Ljava/lang/String;
      48: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: ldc           #60                 // String .handlerRemoved() has thrown an exception.
      53: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: aload_1
      60: invokespecial #62                 // Method io/netty/channel/ChannelPipelineException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      63: invokevirtual #63                 // Method fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelHandlerContext;
      66: pop
      67: return
    Exception table:
       from    to  target type
          12    22    25   Class java/lang/Throwable

  public io.netty.channel.ChannelInboundInvoker fireChannelWritabilityChanged();
    Code:
       0: aload_0
       1: invokevirtual #64                 // Method fireChannelWritabilityChanged:()Lio/netty/channel/ChannelHandlerContext;
       4: areturn

  public io.netty.channel.ChannelInboundInvoker fireChannelReadComplete();
    Code:
       0: aload_0
       1: invokevirtual #65                 // Method fireChannelReadComplete:()Lio/netty/channel/ChannelHandlerContext;
       4: areturn

  public io.netty.channel.ChannelInboundInvoker fireChannelRead(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #66                 // Method fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
       5: areturn

  public io.netty.channel.ChannelInboundInvoker fireUserEventTriggered(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #67                 // Method fireUserEventTriggered:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
       5: areturn

  public io.netty.channel.ChannelInboundInvoker fireExceptionCaught(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #63                 // Method fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelHandlerContext;
       5: areturn

  public io.netty.channel.ChannelInboundInvoker fireChannelInactive();
    Code:
       0: aload_0
       1: invokevirtual #68                 // Method fireChannelInactive:()Lio/netty/channel/ChannelHandlerContext;
       4: areturn

  public io.netty.channel.ChannelInboundInvoker fireChannelActive();
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method fireChannelActive:()Lio/netty/channel/ChannelHandlerContext;
       4: areturn

  public io.netty.channel.ChannelInboundInvoker fireChannelUnregistered();
    Code:
       0: aload_0
       1: invokevirtual #70                 // Method fireChannelUnregistered:()Lio/netty/channel/ChannelHandlerContext;
       4: areturn

  public io.netty.channel.ChannelInboundInvoker fireChannelRegistered();
    Code:
       0: aload_0
       1: invokevirtual #71                 // Method fireChannelRegistered:()Lio/netty/channel/ChannelHandlerContext;
       4: areturn

  public io.netty.channel.ChannelOutboundInvoker flush();
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method flush:()Lio/netty/channel/ChannelHandlerContext;
       4: areturn

  public io.netty.channel.ChannelOutboundInvoker read();
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method read:()Lio/netty/channel/ChannelHandlerContext;
       4: areturn

  static io.netty.channel.ChannelHandlerContext access$300(io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext);
    Code:
       0: aload_0
       1: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: areturn

  static void access$400(io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method remove0:()V
       4: return
}
