Compiled from "PendingWriteQueue.java"
public final class io.netty.channel.PendingWriteQueue {
  private static final io.netty.util.internal.logging.InternalLogger logger;

  private static final int PENDING_WRITE_OVERHEAD;

  private final io.netty.channel.ChannelHandlerContext ctx;

  private final io.netty.channel.ChannelOutboundBuffer buffer;

  private final io.netty.channel.MessageSizeEstimator$Handle estimatorHandle;

  private io.netty.channel.PendingWriteQueue$PendingWrite head;

  private io.netty.channel.PendingWriteQueue$PendingWrite tail;

  private int size;

  private long bytes;

  static final boolean $assertionsDisabled;

  public io.netty.channel.PendingWriteQueue(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #2                  // class java/lang/NullPointerException
      11: dup
      12: ldc           #3                  // String ctx
      14: invokespecial #4                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: putfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      23: aload_0
      24: aload_1
      25: invokeinterface #6,  1            // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      30: invokeinterface #7,  1            // InterfaceMethod io/netty/channel/Channel.unsafe:()Lio/netty/channel/Channel$Unsafe;
      35: invokeinterface #8,  1            // InterfaceMethod io/netty/channel/Channel$Unsafe.outboundBuffer:()Lio/netty/channel/ChannelOutboundBuffer;
      40: putfield      #9                  // Field buffer:Lio/netty/channel/ChannelOutboundBuffer;
      43: aload_0
      44: aload_1
      45: invokeinterface #6,  1            // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      50: invokeinterface #10,  1           // InterfaceMethod io/netty/channel/Channel.config:()Lio/netty/channel/ChannelConfig;
      55: invokeinterface #11,  1           // InterfaceMethod io/netty/channel/ChannelConfig.getMessageSizeEstimator:()Lio/netty/channel/MessageSizeEstimator;
      60: invokeinterface #12,  1           // InterfaceMethod io/netty/channel/MessageSizeEstimator.newHandle:()Lio/netty/channel/MessageSizeEstimator$Handle;
      65: putfield      #13                 // Field estimatorHandle:Lio/netty/channel/MessageSizeEstimator$Handle;
      68: return

  public boolean isEmpty();
    Code:
       0: getstatic     #14                 // Field $assertionsDisabled:Z
       3: ifne          31
       6: aload_0
       7: getfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      10: invokeinterface #15,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      15: invokeinterface #16,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      20: ifne          31
      23: new           #17                 // class java/lang/AssertionError
      26: dup
      27: invokespecial #18                 // Method java/lang/AssertionError."<init>":()V
      30: athrow
      31: aload_0
      32: getfield      #19                 // Field head:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      35: ifnonnull     42
      38: iconst_1
      39: goto          43
      42: iconst_0
      43: ireturn

  public int size();
    Code:
       0: getstatic     #14                 // Field $assertionsDisabled:Z
       3: ifne          31
       6: aload_0
       7: getfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      10: invokeinterface #15,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      15: invokeinterface #16,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      20: ifne          31
      23: new           #17                 // class java/lang/AssertionError
      26: dup
      27: invokespecial #18                 // Method java/lang/AssertionError."<init>":()V
      30: athrow
      31: aload_0
      32: getfield      #20                 // Field size:I
      35: ireturn

  public long bytes();
    Code:
       0: getstatic     #14                 // Field $assertionsDisabled:Z
       3: ifne          31
       6: aload_0
       7: getfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      10: invokeinterface #15,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      15: invokeinterface #16,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      20: ifne          31
      23: new           #17                 // class java/lang/AssertionError
      26: dup
      27: invokespecial #18                 // Method java/lang/AssertionError."<init>":()V
      30: athrow
      31: aload_0
      32: getfield      #21                 // Field bytes:J
      35: lreturn

  private int size(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #13                 // Field estimatorHandle:Lio/netty/channel/MessageSizeEstimator$Handle;
       4: aload_1
       5: invokeinterface #22,  2           // InterfaceMethod io/netty/channel/MessageSizeEstimator$Handle.size:(Ljava/lang/Object;)I
      10: istore_2
      11: iload_2
      12: ifge          17
      15: iconst_0
      16: istore_2
      17: iload_2
      18: getstatic     #23                 // Field PENDING_WRITE_OVERHEAD:I
      21: iadd
      22: ireturn

  public void add(java.lang.Object, io.netty.channel.ChannelPromise);
    Code:
       0: getstatic     #14                 // Field $assertionsDisabled:Z
       3: ifne          31
       6: aload_0
       7: getfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      10: invokeinterface #15,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      15: invokeinterface #16,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      20: ifne          31
      23: new           #17                 // class java/lang/AssertionError
      26: dup
      27: invokespecial #18                 // Method java/lang/AssertionError."<init>":()V
      30: athrow
      31: aload_1
      32: ifnonnull     45
      35: new           #2                  // class java/lang/NullPointerException
      38: dup
      39: ldc           #24                 // String msg
      41: invokespecial #4                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: aload_2
      46: ifnonnull     59
      49: new           #2                  // class java/lang/NullPointerException
      52: dup
      53: ldc           #25                 // String promise
      55: invokespecial #4                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      58: athrow
      59: aload_0
      60: aload_1
      61: invokespecial #26                 // Method size:(Ljava/lang/Object;)I
      64: istore_3
      65: aload_1
      66: iload_3
      67: aload_2
      68: invokestatic  #27                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.newInstance:(Ljava/lang/Object;ILio/netty/channel/ChannelPromise;)Lio/netty/channel/PendingWriteQueue$PendingWrite;
      71: astore        4
      73: aload_0
      74: getfield      #28                 // Field tail:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      77: astore        5
      79: aload         5
      81: ifnonnull     98
      84: aload_0
      85: aload_0
      86: aload         4
      88: dup_x1
      89: putfield      #19                 // Field head:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      92: putfield      #28                 // Field tail:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      95: goto          112
      98: aload         5
     100: aload         4
     102: invokestatic  #29                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$002:(Lio/netty/channel/PendingWriteQueue$PendingWrite;Lio/netty/channel/PendingWriteQueue$PendingWrite;)Lio/netty/channel/PendingWriteQueue$PendingWrite;
     105: pop
     106: aload_0
     107: aload         4
     109: putfield      #28                 // Field tail:Lio/netty/channel/PendingWriteQueue$PendingWrite;
     112: aload_0
     113: dup
     114: getfield      #20                 // Field size:I
     117: iconst_1
     118: iadd
     119: putfield      #20                 // Field size:I
     122: aload_0
     123: dup
     124: getfield      #21                 // Field bytes:J
     127: iload_3
     128: i2l
     129: ladd
     130: putfield      #21                 // Field bytes:J
     133: aload_0
     134: getfield      #9                  // Field buffer:Lio/netty/channel/ChannelOutboundBuffer;
     137: ifnull        152
     140: aload_0
     141: getfield      #9                  // Field buffer:Lio/netty/channel/ChannelOutboundBuffer;
     144: aload         4
     146: invokestatic  #30                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$100:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)J
     149: invokevirtual #31                 // Method io/netty/channel/ChannelOutboundBuffer.incrementPendingOutboundBytes:(J)V
     152: return

  public io.netty.channel.ChannelFuture removeAndWriteAll();
    Code:
       0: getstatic     #14                 // Field $assertionsDisabled:Z
       3: ifne          31
       6: aload_0
       7: getfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      10: invokeinterface #15,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      15: invokeinterface #16,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      20: ifne          31
      23: new           #17                 // class java/lang/AssertionError
      26: dup
      27: invokespecial #18                 // Method java/lang/AssertionError."<init>":()V
      30: athrow
      31: aload_0
      32: invokevirtual #32                 // Method isEmpty:()Z
      35: ifeq          40
      38: aconst_null
      39: areturn
      40: aload_0
      41: getfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      44: invokeinterface #33,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.newPromise:()Lio/netty/channel/ChannelPromise;
      49: astore_1
      50: new           #34                 // class io/netty/util/concurrent/PromiseCombiner
      53: dup
      54: invokespecial #35                 // Method io/netty/util/concurrent/PromiseCombiner."<init>":()V
      57: astore_2
      58: aload_0
      59: getfield      #19                 // Field head:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      62: astore_3
      63: aload_3
      64: ifnull        149
      67: aload_0
      68: aload_0
      69: aconst_null
      70: dup_x1
      71: putfield      #28                 // Field tail:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      74: putfield      #19                 // Field head:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      77: aload_0
      78: iconst_0
      79: putfield      #20                 // Field size:I
      82: aload_0
      83: lconst_0
      84: putfield      #21                 // Field bytes:J
      87: aload_3
      88: ifnull        141
      91: aload_3
      92: invokestatic  #36                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$000:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)Lio/netty/channel/PendingWriteQueue$PendingWrite;
      95: astore        4
      97: aload_3
      98: invokestatic  #37                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$200:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)Ljava/lang/Object;
     101: astore        5
     103: aload_3
     104: invokestatic  #38                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$300:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)Lio/netty/channel/ChannelPromise;
     107: astore        6
     109: aload_0
     110: aload_3
     111: iconst_0
     112: invokespecial #39                 // Method recycle:(Lio/netty/channel/PendingWriteQueue$PendingWrite;Z)V
     115: aload_2
     116: aload         6
     118: invokevirtual #40                 // Method io/netty/util/concurrent/PromiseCombiner.add:(Lio/netty/util/concurrent/Promise;)V
     121: aload_0
     122: getfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
     125: aload         5
     127: aload         6
     129: invokeinterface #41,  3           // InterfaceMethod io/netty/channel/ChannelHandlerContext.write:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
     134: pop
     135: aload         4
     137: astore_3
     138: goto          87
     141: aload_0
     142: getfield      #19                 // Field head:Lio/netty/channel/PendingWriteQueue$PendingWrite;
     145: astore_3
     146: goto          63
     149: aload_2
     150: aload_1
     151: invokevirtual #42                 // Method io/netty/util/concurrent/PromiseCombiner.finish:(Lio/netty/util/concurrent/Promise;)V
     154: goto          166
     157: astore_3
     158: aload_1
     159: aload_3
     160: invokeinterface #44,  2           // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
     165: pop
     166: aload_0
     167: invokespecial #45                 // Method assertEmpty:()V
     170: aload_1
     171: areturn
    Exception table:
       from    to  target type
          58   154   157   Class java/lang/Throwable

  public void removeAndFailAll(java.lang.Throwable);
    Code:
       0: getstatic     #14                 // Field $assertionsDisabled:Z
       3: ifne          31
       6: aload_0
       7: getfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      10: invokeinterface #15,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      15: invokeinterface #16,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      20: ifne          31
      23: new           #17                 // class java/lang/AssertionError
      26: dup
      27: invokespecial #18                 // Method java/lang/AssertionError."<init>":()V
      30: athrow
      31: aload_1
      32: ifnonnull     45
      35: new           #2                  // class java/lang/NullPointerException
      38: dup
      39: ldc           #46                 // String cause
      41: invokespecial #4                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: aload_0
      46: getfield      #19                 // Field head:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      49: astore_2
      50: aload_2
      51: ifnull        121
      54: aload_0
      55: aload_0
      56: aconst_null
      57: dup_x1
      58: putfield      #28                 // Field tail:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      61: putfield      #19                 // Field head:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      64: aload_0
      65: iconst_0
      66: putfield      #20                 // Field size:I
      69: aload_0
      70: lconst_0
      71: putfield      #21                 // Field bytes:J
      74: aload_2
      75: ifnull        113
      78: aload_2
      79: invokestatic  #36                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$000:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)Lio/netty/channel/PendingWriteQueue$PendingWrite;
      82: astore_3
      83: aload_2
      84: invokestatic  #37                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$200:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)Ljava/lang/Object;
      87: invokestatic  #47                 // Method io/netty/util/ReferenceCountUtil.safeRelease:(Ljava/lang/Object;)V
      90: aload_2
      91: invokestatic  #38                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$300:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)Lio/netty/channel/ChannelPromise;
      94: astore        4
      96: aload_0
      97: aload_2
      98: iconst_0
      99: invokespecial #39                 // Method recycle:(Lio/netty/channel/PendingWriteQueue$PendingWrite;Z)V
     102: aload         4
     104: aload_1
     105: invokestatic  #48                 // Method safeFail:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;)V
     108: aload_3
     109: astore_2
     110: goto          74
     113: aload_0
     114: getfield      #19                 // Field head:Lio/netty/channel/PendingWriteQueue$PendingWrite;
     117: astore_2
     118: goto          50
     121: aload_0
     122: invokespecial #45                 // Method assertEmpty:()V
     125: return

  public void removeAndFail(java.lang.Throwable);
    Code:
       0: getstatic     #14                 // Field $assertionsDisabled:Z
       3: ifne          31
       6: aload_0
       7: getfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      10: invokeinterface #15,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      15: invokeinterface #16,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      20: ifne          31
      23: new           #17                 // class java/lang/AssertionError
      26: dup
      27: invokespecial #18                 // Method java/lang/AssertionError."<init>":()V
      30: athrow
      31: aload_1
      32: ifnonnull     45
      35: new           #2                  // class java/lang/NullPointerException
      38: dup
      39: ldc           #46                 // String cause
      41: invokespecial #4                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: aload_0
      46: getfield      #19                 // Field head:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      49: astore_2
      50: aload_2
      51: ifnonnull     55
      54: return
      55: aload_2
      56: invokestatic  #37                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$200:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)Ljava/lang/Object;
      59: invokestatic  #47                 // Method io/netty/util/ReferenceCountUtil.safeRelease:(Ljava/lang/Object;)V
      62: aload_2
      63: invokestatic  #38                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$300:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)Lio/netty/channel/ChannelPromise;
      66: astore_3
      67: aload_3
      68: aload_1
      69: invokestatic  #48                 // Method safeFail:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;)V
      72: aload_0
      73: aload_2
      74: iconst_1
      75: invokespecial #39                 // Method recycle:(Lio/netty/channel/PendingWriteQueue$PendingWrite;Z)V
      78: return

  private void assertEmpty();
    Code:
       0: getstatic     #14                 // Field $assertionsDisabled:Z
       3: ifne          35
       6: aload_0
       7: getfield      #28                 // Field tail:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      10: ifnonnull     27
      13: aload_0
      14: getfield      #19                 // Field head:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      17: ifnonnull     27
      20: aload_0
      21: getfield      #20                 // Field size:I
      24: ifeq          35
      27: new           #17                 // class java/lang/AssertionError
      30: dup
      31: invokespecial #18                 // Method java/lang/AssertionError."<init>":()V
      34: athrow
      35: return

  public io.netty.channel.ChannelFuture removeAndWrite();
    Code:
       0: getstatic     #14                 // Field $assertionsDisabled:Z
       3: ifne          31
       6: aload_0
       7: getfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      10: invokeinterface #15,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      15: invokeinterface #16,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      20: ifne          31
      23: new           #17                 // class java/lang/AssertionError
      26: dup
      27: invokespecial #18                 // Method java/lang/AssertionError."<init>":()V
      30: athrow
      31: aload_0
      32: getfield      #19                 // Field head:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      35: astore_1
      36: aload_1
      37: ifnonnull     42
      40: aconst_null
      41: areturn
      42: aload_1
      43: invokestatic  #37                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$200:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)Ljava/lang/Object;
      46: astore_2
      47: aload_1
      48: invokestatic  #38                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$300:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)Lio/netty/channel/ChannelPromise;
      51: astore_3
      52: aload_0
      53: aload_1
      54: iconst_1
      55: invokespecial #39                 // Method recycle:(Lio/netty/channel/PendingWriteQueue$PendingWrite;Z)V
      58: aload_0
      59: getfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      62: aload_2
      63: aload_3
      64: invokeinterface #41,  3           // InterfaceMethod io/netty/channel/ChannelHandlerContext.write:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      69: areturn

  public io.netty.channel.ChannelPromise remove();
    Code:
       0: getstatic     #14                 // Field $assertionsDisabled:Z
       3: ifne          31
       6: aload_0
       7: getfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      10: invokeinterface #15,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      15: invokeinterface #16,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      20: ifne          31
      23: new           #17                 // class java/lang/AssertionError
      26: dup
      27: invokespecial #18                 // Method java/lang/AssertionError."<init>":()V
      30: athrow
      31: aload_0
      32: getfield      #19                 // Field head:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      35: astore_1
      36: aload_1
      37: ifnonnull     42
      40: aconst_null
      41: areturn
      42: aload_1
      43: invokestatic  #38                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$300:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)Lio/netty/channel/ChannelPromise;
      46: astore_2
      47: aload_1
      48: invokestatic  #37                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$200:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)Ljava/lang/Object;
      51: invokestatic  #47                 // Method io/netty/util/ReferenceCountUtil.safeRelease:(Ljava/lang/Object;)V
      54: aload_0
      55: aload_1
      56: iconst_1
      57: invokespecial #39                 // Method recycle:(Lio/netty/channel/PendingWriteQueue$PendingWrite;Z)V
      60: aload_2
      61: areturn

  public java.lang.Object current();
    Code:
       0: getstatic     #14                 // Field $assertionsDisabled:Z
       3: ifne          31
       6: aload_0
       7: getfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      10: invokeinterface #15,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      15: invokeinterface #16,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      20: ifne          31
      23: new           #17                 // class java/lang/AssertionError
      26: dup
      27: invokespecial #18                 // Method java/lang/AssertionError."<init>":()V
      30: athrow
      31: aload_0
      32: getfield      #19                 // Field head:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      35: astore_1
      36: aload_1
      37: ifnonnull     42
      40: aconst_null
      41: areturn
      42: aload_1
      43: invokestatic  #37                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$200:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)Ljava/lang/Object;
      46: areturn

  private void recycle(io.netty.channel.PendingWriteQueue$PendingWrite, boolean);
    Code:
       0: aload_1
       1: invokestatic  #36                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$000:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)Lio/netty/channel/PendingWriteQueue$PendingWrite;
       4: astore_3
       5: aload_1
       6: invokestatic  #30                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$100:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)J
       9: lstore        4
      11: iload_2
      12: ifeq          98
      15: aload_3
      16: ifnonnull     42
      19: aload_0
      20: aload_0
      21: aconst_null
      22: dup_x1
      23: putfield      #28                 // Field tail:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      26: putfield      #19                 // Field head:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      29: aload_0
      30: iconst_0
      31: putfield      #20                 // Field size:I
      34: aload_0
      35: lconst_0
      36: putfield      #21                 // Field bytes:J
      39: goto          98
      42: aload_0
      43: aload_3
      44: putfield      #19                 // Field head:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      47: aload_0
      48: dup
      49: getfield      #20                 // Field size:I
      52: iconst_1
      53: isub
      54: putfield      #20                 // Field size:I
      57: aload_0
      58: dup
      59: getfield      #21                 // Field bytes:J
      62: lload         4
      64: lsub
      65: putfield      #21                 // Field bytes:J
      68: getstatic     #14                 // Field $assertionsDisabled:Z
      71: ifne          98
      74: aload_0
      75: getfield      #20                 // Field size:I
      78: ifle          90
      81: aload_0
      82: getfield      #21                 // Field bytes:J
      85: lconst_0
      86: lcmp
      87: ifge          98
      90: new           #17                 // class java/lang/AssertionError
      93: dup
      94: invokespecial #18                 // Method java/lang/AssertionError."<init>":()V
      97: athrow
      98: aload_1
      99: invokestatic  #49                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$400:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)V
     102: aload_0
     103: getfield      #9                  // Field buffer:Lio/netty/channel/ChannelOutboundBuffer;
     106: ifnull        118
     109: aload_0
     110: getfield      #9                  // Field buffer:Lio/netty/channel/ChannelOutboundBuffer;
     113: lload         4
     115: invokevirtual #50                 // Method io/netty/channel/ChannelOutboundBuffer.decrementPendingOutboundBytes:(J)V
     118: return

  private static void safeFail(io.netty.channel.ChannelPromise, java.lang.Throwable);
    Code:
       0: aload_0
       1: instanceof    #51                 // class io/netty/channel/VoidChannelPromise
       4: ifne          29
       7: aload_0
       8: aload_1
       9: invokeinterface #52,  2           // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
      14: ifne          29
      17: getstatic     #53                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      20: ldc           #54                 // String Failed to mark a promise as failure because it\'s done already: {}
      22: aload_0
      23: aload_1
      24: invokeinterface #55,  4           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      29: return

  static {};
    Code:
       0: ldc           #56                 // class io/netty/channel/PendingWriteQueue
       2: invokevirtual #57                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #14                 // Field $assertionsDisabled:Z
      16: ldc           #56                 // class io/netty/channel/PendingWriteQueue
      18: invokestatic  #58                 // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
      21: putstatic     #53                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      24: ldc           #59                 // String io.netty.transport.pendingWriteSizeOverhead
      26: bipush        64
      28: invokestatic  #60                 // Method io/netty/util/internal/SystemPropertyUtil.getInt:(Ljava/lang/String;I)I
      31: putstatic     #23                 // Field PENDING_WRITE_OVERHEAD:I
      34: return
}
