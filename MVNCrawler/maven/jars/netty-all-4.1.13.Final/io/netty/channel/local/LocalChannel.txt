Compiled from "LocalChannel.java"
public class io.netty.channel.local.LocalChannel extends io.netty.channel.AbstractChannel {
  private static final io.netty.util.internal.logging.InternalLogger logger;

  private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<io.netty.channel.local.LocalChannel, io.netty.util.concurrent.Future> FINISH_READ_FUTURE_UPDATER;

  private static final io.netty.channel.ChannelMetadata METADATA;

  private static final int MAX_READER_STACK_DEPTH;

  private static final java.nio.channels.ClosedChannelException DO_WRITE_CLOSED_CHANNEL_EXCEPTION;

  private static final java.nio.channels.ClosedChannelException DO_CLOSE_CLOSED_CHANNEL_EXCEPTION;

  private final io.netty.channel.ChannelConfig config;

  final java.util.Queue<java.lang.Object> inboundBuffer;

  private final java.lang.Runnable readTask;

  private final java.lang.Runnable shutdownHook;

  private volatile io.netty.channel.local.LocalChannel$State state;

  private volatile io.netty.channel.local.LocalChannel peer;

  private volatile io.netty.channel.local.LocalAddress localAddress;

  private volatile io.netty.channel.local.LocalAddress remoteAddress;

  private volatile io.netty.channel.ChannelPromise connectPromise;

  private volatile boolean readInProgress;

  private volatile boolean registerInProgress;

  private volatile boolean writeInProgress;

  private volatile io.netty.util.concurrent.Future<?> finishReadFuture;

  static final boolean $assertionsDisabled;

  public io.netty.channel.local.LocalChannel();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #7                  // Method io/netty/channel/AbstractChannel."<init>":(Lio/netty/channel/Channel;)V
       5: aload_0
       6: new           #8                  // class io/netty/channel/DefaultChannelConfig
       9: dup
      10: aload_0
      11: invokespecial #9                  // Method io/netty/channel/DefaultChannelConfig."<init>":(Lio/netty/channel/Channel;)V
      14: putfield      #10                 // Field config:Lio/netty/channel/ChannelConfig;
      17: aload_0
      18: invokestatic  #11                 // Method io/netty/util/internal/PlatformDependent.newSpscQueue:()Ljava/util/Queue;
      21: putfield      #12                 // Field inboundBuffer:Ljava/util/Queue;
      24: aload_0
      25: new           #13                 // class io/netty/channel/local/LocalChannel$1
      28: dup
      29: aload_0
      30: invokespecial #14                 // Method io/netty/channel/local/LocalChannel$1."<init>":(Lio/netty/channel/local/LocalChannel;)V
      33: putfield      #15                 // Field readTask:Ljava/lang/Runnable;
      36: aload_0
      37: new           #16                 // class io/netty/channel/local/LocalChannel$2
      40: dup
      41: aload_0
      42: invokespecial #17                 // Method io/netty/channel/local/LocalChannel$2."<init>":(Lio/netty/channel/local/LocalChannel;)V
      45: putfield      #18                 // Field shutdownHook:Ljava/lang/Runnable;
      48: aload_0
      49: invokevirtual #19                 // Method config:()Lio/netty/channel/ChannelConfig;
      52: new           #20                 // class io/netty/channel/local/PreferHeapByteBufAllocator
      55: dup
      56: aload_0
      57: getfield      #10                 // Field config:Lio/netty/channel/ChannelConfig;
      60: invokeinterface #21,  1           // InterfaceMethod io/netty/channel/ChannelConfig.getAllocator:()Lio/netty/buffer/ByteBufAllocator;
      65: invokespecial #22                 // Method io/netty/channel/local/PreferHeapByteBufAllocator."<init>":(Lio/netty/buffer/ByteBufAllocator;)V
      68: invokeinterface #23,  2           // InterfaceMethod io/netty/channel/ChannelConfig.setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/ChannelConfig;
      73: pop
      74: return

  protected io.netty.channel.local.LocalChannel(io.netty.channel.local.LocalServerChannel, io.netty.channel.local.LocalChannel);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #7                  // Method io/netty/channel/AbstractChannel."<init>":(Lio/netty/channel/Channel;)V
       5: aload_0
       6: new           #8                  // class io/netty/channel/DefaultChannelConfig
       9: dup
      10: aload_0
      11: invokespecial #9                  // Method io/netty/channel/DefaultChannelConfig."<init>":(Lio/netty/channel/Channel;)V
      14: putfield      #10                 // Field config:Lio/netty/channel/ChannelConfig;
      17: aload_0
      18: invokestatic  #11                 // Method io/netty/util/internal/PlatformDependent.newSpscQueue:()Ljava/util/Queue;
      21: putfield      #12                 // Field inboundBuffer:Ljava/util/Queue;
      24: aload_0
      25: new           #13                 // class io/netty/channel/local/LocalChannel$1
      28: dup
      29: aload_0
      30: invokespecial #14                 // Method io/netty/channel/local/LocalChannel$1."<init>":(Lio/netty/channel/local/LocalChannel;)V
      33: putfield      #15                 // Field readTask:Ljava/lang/Runnable;
      36: aload_0
      37: new           #16                 // class io/netty/channel/local/LocalChannel$2
      40: dup
      41: aload_0
      42: invokespecial #17                 // Method io/netty/channel/local/LocalChannel$2."<init>":(Lio/netty/channel/local/LocalChannel;)V
      45: putfield      #18                 // Field shutdownHook:Ljava/lang/Runnable;
      48: aload_0
      49: invokevirtual #19                 // Method config:()Lio/netty/channel/ChannelConfig;
      52: new           #20                 // class io/netty/channel/local/PreferHeapByteBufAllocator
      55: dup
      56: aload_0
      57: getfield      #10                 // Field config:Lio/netty/channel/ChannelConfig;
      60: invokeinterface #21,  1           // InterfaceMethod io/netty/channel/ChannelConfig.getAllocator:()Lio/netty/buffer/ByteBufAllocator;
      65: invokespecial #22                 // Method io/netty/channel/local/PreferHeapByteBufAllocator."<init>":(Lio/netty/buffer/ByteBufAllocator;)V
      68: invokeinterface #23,  2           // InterfaceMethod io/netty/channel/ChannelConfig.setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/ChannelConfig;
      73: pop
      74: aload_0
      75: aload_2
      76: putfield      #1                  // Field peer:Lio/netty/channel/local/LocalChannel;
      79: aload_0
      80: aload_1
      81: invokevirtual #24                 // Method io/netty/channel/local/LocalServerChannel.localAddress:()Lio/netty/channel/local/LocalAddress;
      84: putfield      #25                 // Field localAddress:Lio/netty/channel/local/LocalAddress;
      87: aload_0
      88: aload_2
      89: invokevirtual #26                 // Method localAddress:()Lio/netty/channel/local/LocalAddress;
      92: putfield      #27                 // Field remoteAddress:Lio/netty/channel/local/LocalAddress;
      95: return

  public io.netty.channel.ChannelMetadata metadata();
    Code:
       0: getstatic     #28                 // Field METADATA:Lio/netty/channel/ChannelMetadata;
       3: areturn

  public io.netty.channel.ChannelConfig config();
    Code:
       0: aload_0
       1: getfield      #10                 // Field config:Lio/netty/channel/ChannelConfig;
       4: areturn

  public io.netty.channel.local.LocalServerChannel parent();
    Code:
       0: aload_0
       1: invokespecial #29                 // Method io/netty/channel/AbstractChannel.parent:()Lio/netty/channel/Channel;
       4: checkcast     #30                 // class io/netty/channel/local/LocalServerChannel
       7: areturn

  public io.netty.channel.local.LocalAddress localAddress();
    Code:
       0: aload_0
       1: invokespecial #31                 // Method io/netty/channel/AbstractChannel.localAddress:()Ljava/net/SocketAddress;
       4: checkcast     #32                 // class io/netty/channel/local/LocalAddress
       7: areturn

  public io.netty.channel.local.LocalAddress remoteAddress();
    Code:
       0: aload_0
       1: invokespecial #33                 // Method io/netty/channel/AbstractChannel.remoteAddress:()Ljava/net/SocketAddress;
       4: checkcast     #32                 // class io/netty/channel/local/LocalAddress
       7: areturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:Lio/netty/channel/local/LocalChannel$State;
       4: getstatic     #34                 // Field io/netty/channel/local/LocalChannel$State.CLOSED:Lio/netty/channel/local/LocalChannel$State;
       7: if_acmpeq     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isActive();
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:Lio/netty/channel/local/LocalChannel$State;
       4: getstatic     #35                 // Field io/netty/channel/local/LocalChannel$State.CONNECTED:Lio/netty/channel/local/LocalChannel$State;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  protected io.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe();
    Code:
       0: new           #36                 // class io/netty/channel/local/LocalChannel$LocalUnsafe
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #37                 // Method io/netty/channel/local/LocalChannel$LocalUnsafe."<init>":(Lio/netty/channel/local/LocalChannel;Lio/netty/channel/local/LocalChannel$1;)V
       9: areturn

  protected boolean isCompatible(io.netty.channel.EventLoop);
    Code:
       0: aload_1
       1: instanceof    #38                 // class io/netty/channel/SingleThreadEventLoop
       4: ireturn

  protected java.net.SocketAddress localAddress0();
    Code:
       0: aload_0
       1: getfield      #25                 // Field localAddress:Lio/netty/channel/local/LocalAddress;
       4: areturn

  protected java.net.SocketAddress remoteAddress0();
    Code:
       0: aload_0
       1: getfield      #27                 // Field remoteAddress:Lio/netty/channel/local/LocalAddress;
       4: areturn

  protected void doRegister() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #1                  // Field peer:Lio/netty/channel/local/LocalChannel;
       4: ifnull        78
       7: aload_0
       8: invokevirtual #39                 // Method parent:()Lio/netty/channel/local/LocalServerChannel;
      11: ifnull        78
      14: aload_0
      15: getfield      #1                  // Field peer:Lio/netty/channel/local/LocalChannel;
      18: astore_1
      19: aload_0
      20: iconst_1
      21: putfield      #6                  // Field registerInProgress:Z
      24: aload_0
      25: getstatic     #35                 // Field io/netty/channel/local/LocalChannel$State.CONNECTED:Lio/netty/channel/local/LocalChannel$State;
      28: putfield      #2                  // Field state:Lio/netty/channel/local/LocalChannel$State;
      31: aload_1
      32: aload_0
      33: invokevirtual #39                 // Method parent:()Lio/netty/channel/local/LocalServerChannel;
      36: ifnonnull     43
      39: aconst_null
      40: goto          50
      43: aload_0
      44: invokevirtual #39                 // Method parent:()Lio/netty/channel/local/LocalServerChannel;
      47: invokevirtual #24                 // Method io/netty/channel/local/LocalServerChannel.localAddress:()Lio/netty/channel/local/LocalAddress;
      50: putfield      #27                 // Field remoteAddress:Lio/netty/channel/local/LocalAddress;
      53: aload_1
      54: getstatic     #35                 // Field io/netty/channel/local/LocalChannel$State.CONNECTED:Lio/netty/channel/local/LocalChannel$State;
      57: putfield      #2                  // Field state:Lio/netty/channel/local/LocalChannel$State;
      60: aload_1
      61: invokevirtual #40                 // Method eventLoop:()Lio/netty/channel/EventLoop;
      64: new           #41                 // class io/netty/channel/local/LocalChannel$3
      67: dup
      68: aload_0
      69: aload_1
      70: invokespecial #42                 // Method io/netty/channel/local/LocalChannel$3."<init>":(Lio/netty/channel/local/LocalChannel;Lio/netty/channel/local/LocalChannel;)V
      73: invokeinterface #43,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      78: aload_0
      79: invokevirtual #40                 // Method eventLoop:()Lio/netty/channel/EventLoop;
      82: checkcast     #44                 // class io/netty/util/concurrent/SingleThreadEventExecutor
      85: aload_0
      86: getfield      #18                 // Field shutdownHook:Ljava/lang/Runnable;
      89: invokevirtual #45                 // Method io/netty/util/concurrent/SingleThreadEventExecutor.addShutdownHook:(Ljava/lang/Runnable;)V
      92: return

  protected void doBind(java.net.SocketAddress) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_0
       2: aload_0
       3: getfield      #25                 // Field localAddress:Lio/netty/channel/local/LocalAddress;
       6: aload_1
       7: invokestatic  #46                 // Method io/netty/channel/local/LocalChannelRegistry.register:(Lio/netty/channel/Channel;Lio/netty/channel/local/LocalAddress;Ljava/net/SocketAddress;)Lio/netty/channel/local/LocalAddress;
      10: putfield      #25                 // Field localAddress:Lio/netty/channel/local/LocalAddress;
      13: aload_0
      14: getstatic     #47                 // Field io/netty/channel/local/LocalChannel$State.BOUND:Lio/netty/channel/local/LocalChannel$State;
      17: putfield      #2                  // Field state:Lio/netty/channel/local/LocalChannel$State;
      20: return

  protected void doDisconnect() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method doClose:()V
       4: return

  protected void doClose() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #1                  // Field peer:Lio/netty/channel/local/LocalChannel;
       4: astore_1
       5: aload_0
       6: getfield      #2                  // Field state:Lio/netty/channel/local/LocalChannel$State;
       9: astore_2
      10: aload_2
      11: getstatic     #34                 // Field io/netty/channel/local/LocalChannel$State.CLOSED:Lio/netty/channel/local/LocalChannel$State;
      14: if_acmpeq     79
      17: aload_0
      18: getfield      #25                 // Field localAddress:Lio/netty/channel/local/LocalAddress;
      21: ifnull        43
      24: aload_0
      25: invokevirtual #39                 // Method parent:()Lio/netty/channel/local/LocalServerChannel;
      28: ifnonnull     38
      31: aload_0
      32: getfield      #25                 // Field localAddress:Lio/netty/channel/local/LocalAddress;
      35: invokestatic  #49                 // Method io/netty/channel/local/LocalChannelRegistry.unregister:(Lio/netty/channel/local/LocalAddress;)V
      38: aload_0
      39: aconst_null
      40: putfield      #25                 // Field localAddress:Lio/netty/channel/local/LocalAddress;
      43: aload_0
      44: getstatic     #34                 // Field io/netty/channel/local/LocalChannel$State.CLOSED:Lio/netty/channel/local/LocalChannel$State;
      47: putfield      #2                  // Field state:Lio/netty/channel/local/LocalChannel$State;
      50: aload_0
      51: aload_0
      52: invokespecial #50                 // Method finishPeerRead:(Lio/netty/channel/local/LocalChannel;)V
      55: aload_0
      56: getfield      #5                  // Field connectPromise:Lio/netty/channel/ChannelPromise;
      59: astore_3
      60: aload_3
      61: ifnull        79
      64: aload_3
      65: getstatic     #51                 // Field DO_CLOSE_CLOSED_CHANNEL_EXCEPTION:Ljava/nio/channels/ClosedChannelException;
      68: invokeinterface #52,  2           // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
      73: pop
      74: aload_0
      75: aconst_null
      76: putfield      #5                  // Field connectPromise:Lio/netty/channel/ChannelPromise;
      79: aload_1
      80: ifnull        199
      83: aload_0
      84: aconst_null
      85: putfield      #1                  // Field peer:Lio/netty/channel/local/LocalChannel;
      88: aload_1
      89: invokevirtual #40                 // Method eventLoop:()Lio/netty/channel/EventLoop;
      92: astore_3
      93: aload_1
      94: invokevirtual #53                 // Method isActive:()Z
      97: istore        4
      99: aload_3
     100: invokeinterface #54,  1           // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
     105: ifeq          124
     108: aload_0
     109: getfield      #6                  // Field registerInProgress:Z
     112: ifne          124
     115: aload_1
     116: iload         4
     118: invokespecial #4                  // Method tryClose:(Z)V
     121: goto          199
     124: aload_3
     125: new           #55                 // class io/netty/channel/local/LocalChannel$4
     128: dup
     129: aload_0
     130: aload_1
     131: iload         4
     133: invokespecial #56                 // Method io/netty/channel/local/LocalChannel$4."<init>":(Lio/netty/channel/local/LocalChannel;Lio/netty/channel/local/LocalChannel;Z)V
     136: invokeinterface #43,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
     141: goto          199
     144: astore        5
     146: getstatic     #58                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
     149: ldc           #59                 // String Releasing Inbound Queues for channels {}-{} because exception occurred!
     151: iconst_3
     152: anewarray     #60                 // class java/lang/Object
     155: dup
     156: iconst_0
     157: aload_0
     158: aastore
     159: dup
     160: iconst_1
     161: aload_1
     162: aastore
     163: dup
     164: iconst_2
     165: aload         5
     167: aastore
     168: invokeinterface #61,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;[Ljava/lang/Object;)V
     173: aload_3
     174: invokeinterface #54,  1           // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
     179: ifeq          189
     182: aload_1
     183: invokespecial #62                 // Method releaseInboundBuffers:()V
     186: goto          194
     189: aload_1
     190: invokevirtual #63                 // Method close:()Lio/netty/channel/ChannelFuture;
     193: pop
     194: aload         5
     196: invokestatic  #64                 // Method io/netty/util/internal/PlatformDependent.throwException:(Ljava/lang/Throwable;)V
     199: aload_2
     200: ifnull        237
     203: aload_2
     204: getstatic     #34                 // Field io/netty/channel/local/LocalChannel$State.CLOSED:Lio/netty/channel/local/LocalChannel$State;
     207: if_acmpeq     237
     210: aload_0
     211: invokespecial #62                 // Method releaseInboundBuffers:()V
     214: goto          237
     217: astore        6
     219: aload_2
     220: ifnull        234
     223: aload_2
     224: getstatic     #34                 // Field io/netty/channel/local/LocalChannel$State.CLOSED:Lio/netty/channel/local/LocalChannel$State;
     227: if_acmpeq     234
     230: aload_0
     231: invokespecial #62                 // Method releaseInboundBuffers:()V
     234: aload         6
     236: athrow
     237: return
    Exception table:
       from    to  target type
         124   141   144   Class java/lang/Throwable
          10   199   217   any
         217   219   217   any

  private void tryClose(boolean);
    Code:
       0: iload_1
       1: ifeq          25
       4: aload_0
       5: invokevirtual #65                 // Method unsafe:()Lio/netty/channel/Channel$Unsafe;
       8: aload_0
       9: invokevirtual #65                 // Method unsafe:()Lio/netty/channel/Channel$Unsafe;
      12: invokeinterface #66,  1           // InterfaceMethod io/netty/channel/Channel$Unsafe.voidPromise:()Lio/netty/channel/ChannelPromise;
      17: invokeinterface #67,  2           // InterfaceMethod io/netty/channel/Channel$Unsafe.close:(Lio/netty/channel/ChannelPromise;)V
      22: goto          29
      25: aload_0
      26: invokespecial #62                 // Method releaseInboundBuffers:()V
      29: return

  protected void doDeregister() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method eventLoop:()Lio/netty/channel/EventLoop;
       4: checkcast     #44                 // class io/netty/util/concurrent/SingleThreadEventExecutor
       7: aload_0
       8: getfield      #18                 // Field shutdownHook:Ljava/lang/Runnable;
      11: invokevirtual #68                 // Method io/netty/util/concurrent/SingleThreadEventExecutor.removeShutdownHook:(Ljava/lang/Runnable;)V
      14: return

  protected void doBeginRead() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #69                 // Field readInProgress:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: invokevirtual #70                 // Method pipeline:()Lio/netty/channel/ChannelPipeline;
      12: astore_1
      13: aload_0
      14: getfield      #12                 // Field inboundBuffer:Ljava/util/Queue;
      17: astore_2
      18: aload_2
      19: invokeinterface #71,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
      24: ifeq          33
      27: aload_0
      28: iconst_1
      29: putfield      #69                 // Field readInProgress:Z
      32: return
      33: invokestatic  #72                 // Method io/netty/util/internal/InternalThreadLocalMap.get:()Lio/netty/util/internal/InternalThreadLocalMap;
      36: astore_3
      37: aload_3
      38: invokevirtual #73                 // Method io/netty/util/internal/InternalThreadLocalMap.localChannelReaderStackDepth:()I
      41: invokestatic  #74                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      44: astore        4
      46: aload         4
      48: invokevirtual #75                 // Method java/lang/Integer.intValue:()I
      51: bipush        8
      53: if_icmpge     131
      56: aload_3
      57: aload         4
      59: invokevirtual #75                 // Method java/lang/Integer.intValue:()I
      62: iconst_1
      63: iadd
      64: invokevirtual #77                 // Method io/netty/util/internal/InternalThreadLocalMap.setLocalChannelReaderStackDepth:(I)V
      67: aload_2
      68: invokeinterface #78,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      73: astore        5
      75: aload         5
      77: ifnonnull     83
      80: goto          95
      83: aload_1
      84: aload         5
      86: invokeinterface #79,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelPipeline;
      91: pop
      92: goto          67
      95: aload_1
      96: invokeinterface #80,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelReadComplete:()Lio/netty/channel/ChannelPipeline;
     101: pop
     102: aload_3
     103: aload         4
     105: invokevirtual #75                 // Method java/lang/Integer.intValue:()I
     108: invokevirtual #77                 // Method io/netty/util/internal/InternalThreadLocalMap.setLocalChannelReaderStackDepth:(I)V
     111: goto          128
     114: astore        6
     116: aload_3
     117: aload         4
     119: invokevirtual #75                 // Method java/lang/Integer.intValue:()I
     122: invokevirtual #77                 // Method io/netty/util/internal/InternalThreadLocalMap.setLocalChannelReaderStackDepth:(I)V
     125: aload         6
     127: athrow
     128: goto          197
     131: aload_0
     132: invokevirtual #40                 // Method eventLoop:()Lio/netty/channel/EventLoop;
     135: aload_0
     136: getfield      #15                 // Field readTask:Ljava/lang/Runnable;
     139: invokeinterface #43,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
     144: goto          197
     147: astore        5
     149: getstatic     #58                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
     152: ldc           #81                 // String Closing Local channels {}-{} because exception occurred!
     154: iconst_3
     155: anewarray     #60                 // class java/lang/Object
     158: dup
     159: iconst_0
     160: aload_0
     161: aastore
     162: dup
     163: iconst_1
     164: aload_0
     165: getfield      #1                  // Field peer:Lio/netty/channel/local/LocalChannel;
     168: aastore
     169: dup
     170: iconst_2
     171: aload         5
     173: aastore
     174: invokeinterface #61,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;[Ljava/lang/Object;)V
     179: aload_0
     180: invokevirtual #63                 // Method close:()Lio/netty/channel/ChannelFuture;
     183: pop
     184: aload_0
     185: getfield      #1                  // Field peer:Lio/netty/channel/local/LocalChannel;
     188: invokevirtual #63                 // Method close:()Lio/netty/channel/ChannelFuture;
     191: pop
     192: aload         5
     194: invokestatic  #64                 // Method io/netty/util/internal/PlatformDependent.throwException:(Ljava/lang/Throwable;)V
     197: return
    Exception table:
       from    to  target type
          67   102   114   any
         114   116   114   any
         131   144   147   Class java/lang/Throwable

  protected void doWrite(io.netty.channel.ChannelOutboundBuffer) throws java.lang.Exception;
    Code:
       0: getstatic     #82                 // Field io/netty/channel/local/LocalChannel$6.$SwitchMap$io$netty$channel$local$LocalChannel$State:[I
       3: aload_0
       4: getfield      #2                  // Field state:Lio/netty/channel/local/LocalChannel$State;
       7: invokevirtual #83                 // Method io/netty/channel/local/LocalChannel$State.ordinal:()I
      10: iaload
      11: tableswitch   { // 1 to 4
                     1: 40
                     2: 40
                     3: 48
                     4: 52
               default: 52
          }
      40: new           #84                 // class java/nio/channels/NotYetConnectedException
      43: dup
      44: invokespecial #85                 // Method java/nio/channels/NotYetConnectedException."<init>":()V
      47: athrow
      48: getstatic     #86                 // Field DO_WRITE_CLOSED_CHANNEL_EXCEPTION:Ljava/nio/channels/ClosedChannelException;
      51: athrow
      52: aload_0
      53: getfield      #1                  // Field peer:Lio/netty/channel/local/LocalChannel;
      56: astore_2
      57: aload_0
      58: iconst_1
      59: putfield      #87                 // Field writeInProgress:Z
      62: aload_1
      63: invokevirtual #88                 // Method io/netty/channel/ChannelOutboundBuffer.current:()Ljava/lang/Object;
      66: astore_3
      67: aload_3
      68: ifnonnull     74
      71: goto          129
      74: aload_2
      75: getfield      #2                  // Field state:Lio/netty/channel/local/LocalChannel$State;
      78: getstatic     #35                 // Field io/netty/channel/local/LocalChannel$State.CONNECTED:Lio/netty/channel/local/LocalChannel$State;
      81: if_acmpne     106
      84: aload_2
      85: getfield      #12                 // Field inboundBuffer:Ljava/util/Queue;
      88: aload_3
      89: invokestatic  #89                 // Method io/netty/util/ReferenceCountUtil.retain:(Ljava/lang/Object;)Ljava/lang/Object;
      92: invokeinterface #90,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
      97: pop
      98: aload_1
      99: invokevirtual #91                 // Method io/netty/channel/ChannelOutboundBuffer.remove:()Z
     102: pop
     103: goto          114
     106: aload_1
     107: getstatic     #86                 // Field DO_WRITE_CLOSED_CHANNEL_EXCEPTION:Ljava/nio/channels/ClosedChannelException;
     110: invokevirtual #92                 // Method io/netty/channel/ChannelOutboundBuffer.remove:(Ljava/lang/Throwable;)Z
     113: pop
     114: goto          126
     117: astore        4
     119: aload_1
     120: aload         4
     122: invokevirtual #92                 // Method io/netty/channel/ChannelOutboundBuffer.remove:(Ljava/lang/Throwable;)Z
     125: pop
     126: goto          62
     129: aload_0
     130: iconst_0
     131: putfield      #87                 // Field writeInProgress:Z
     134: goto          147
     137: astore        5
     139: aload_0
     140: iconst_0
     141: putfield      #87                 // Field writeInProgress:Z
     144: aload         5
     146: athrow
     147: aload_0
     148: aload_2
     149: invokespecial #50                 // Method finishPeerRead:(Lio/netty/channel/local/LocalChannel;)V
     152: return
    Exception table:
       from    to  target type
          74   114   117   Class java/lang/Throwable
          62   129   137   any
         137   139   137   any

  private void finishPeerRead(io.netty.channel.local.LocalChannel);
    Code:
       0: aload_1
       1: invokevirtual #40                 // Method eventLoop:()Lio/netty/channel/EventLoop;
       4: aload_0
       5: invokevirtual #40                 // Method eventLoop:()Lio/netty/channel/EventLoop;
       8: if_acmpne     26
      11: aload_1
      12: getfield      #87                 // Field writeInProgress:Z
      15: ifne          26
      18: aload_0
      19: aload_1
      20: invokespecial #3                  // Method finishPeerRead0:(Lio/netty/channel/local/LocalChannel;)V
      23: goto          31
      26: aload_0
      27: aload_1
      28: invokespecial #93                 // Method runFinishPeerReadTask:(Lio/netty/channel/local/LocalChannel;)V
      31: return

  private void runFinishPeerReadTask(io.netty.channel.local.LocalChannel);
    Code:
       0: new           #94                 // class io/netty/channel/local/LocalChannel$5
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #95                 // Method io/netty/channel/local/LocalChannel$5."<init>":(Lio/netty/channel/local/LocalChannel;Lio/netty/channel/local/LocalChannel;)V
       9: astore_2
      10: aload_1
      11: getfield      #87                 // Field writeInProgress:Z
      14: ifeq          34
      17: aload_1
      18: aload_1
      19: invokevirtual #40                 // Method eventLoop:()Lio/netty/channel/EventLoop;
      22: aload_2
      23: invokeinterface #96,  2           // InterfaceMethod io/netty/channel/EventLoop.submit:(Ljava/lang/Runnable;)Lio/netty/util/concurrent/Future;
      28: putfield      #97                 // Field finishReadFuture:Lio/netty/util/concurrent/Future;
      31: goto          44
      34: aload_1
      35: invokevirtual #40                 // Method eventLoop:()Lio/netty/channel/EventLoop;
      38: aload_2
      39: invokeinterface #43,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      44: goto          88
      47: astore_3
      48: getstatic     #58                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      51: ldc           #81                 // String Closing Local channels {}-{} because exception occurred!
      53: iconst_3
      54: anewarray     #60                 // class java/lang/Object
      57: dup
      58: iconst_0
      59: aload_0
      60: aastore
      61: dup
      62: iconst_1
      63: aload_1
      64: aastore
      65: dup
      66: iconst_2
      67: aload_3
      68: aastore
      69: invokeinterface #61,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;[Ljava/lang/Object;)V
      74: aload_0
      75: invokevirtual #63                 // Method close:()Lio/netty/channel/ChannelFuture;
      78: pop
      79: aload_1
      80: invokevirtual #63                 // Method close:()Lio/netty/channel/ChannelFuture;
      83: pop
      84: aload_3
      85: invokestatic  #64                 // Method io/netty/util/internal/PlatformDependent.throwException:(Ljava/lang/Throwable;)V
      88: return
    Exception table:
       from    to  target type
          10    44    47   Class java/lang/Throwable

  private void releaseInboundBuffers();
    Code:
       0: getstatic     #98                 // Field $assertionsDisabled:Z
       3: ifne          33
       6: aload_0
       7: invokevirtual #40                 // Method eventLoop:()Lio/netty/channel/EventLoop;
      10: ifnull        33
      13: aload_0
      14: invokevirtual #40                 // Method eventLoop:()Lio/netty/channel/EventLoop;
      17: invokeinterface #54,  1           // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
      22: ifne          33
      25: new           #99                 // class java/lang/AssertionError
      28: dup
      29: invokespecial #100                // Method java/lang/AssertionError."<init>":()V
      32: athrow
      33: aload_0
      34: iconst_0
      35: putfield      #69                 // Field readInProgress:Z
      38: aload_0
      39: getfield      #12                 // Field inboundBuffer:Ljava/util/Queue;
      42: astore_1
      43: aload_1
      44: invokeinterface #78,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      49: dup
      50: astore_2
      51: ifnull        62
      54: aload_2
      55: invokestatic  #101                // Method io/netty/util/ReferenceCountUtil.release:(Ljava/lang/Object;)Z
      58: pop
      59: goto          43
      62: return

  private void finishPeerRead0(io.netty.channel.local.LocalChannel);
    Code:
       0: aload_1
       1: getfield      #97                 // Field finishReadFuture:Lio/netty/util/concurrent/Future;
       4: astore_2
       5: aload_2
       6: ifnull        34
       9: aload_2
      10: invokeinterface #102,  1          // InterfaceMethod io/netty/util/concurrent/Future.isDone:()Z
      15: ifne          24
      18: aload_0
      19: aload_1
      20: invokespecial #93                 // Method runFinishPeerReadTask:(Lio/netty/channel/local/LocalChannel;)V
      23: return
      24: getstatic     #103                // Field FINISH_READ_FUTURE_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      27: aload_1
      28: aload_2
      29: aconst_null
      30: invokevirtual #104                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      33: pop
      34: aload_1
      35: invokevirtual #70                 // Method pipeline:()Lio/netty/channel/ChannelPipeline;
      38: astore_3
      39: aload_1
      40: getfield      #69                 // Field readInProgress:Z
      43: ifeq          89
      46: aload_1
      47: iconst_0
      48: putfield      #69                 // Field readInProgress:Z
      51: aload_1
      52: getfield      #12                 // Field inboundBuffer:Ljava/util/Queue;
      55: invokeinterface #78,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      60: astore        4
      62: aload         4
      64: ifnonnull     70
      67: goto          82
      70: aload_3
      71: aload         4
      73: invokeinterface #79,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelPipeline;
      78: pop
      79: goto          51
      82: aload_3
      83: invokeinterface #80,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelReadComplete:()Lio/netty/channel/ChannelPipeline;
      88: pop
      89: return

  public java.net.SocketAddress remoteAddress();
    Code:
       0: aload_0
       1: invokevirtual #105                // Method remoteAddress:()Lio/netty/channel/local/LocalAddress;
       4: areturn

  public java.net.SocketAddress localAddress();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method localAddress:()Lio/netty/channel/local/LocalAddress;
       4: areturn

  public io.netty.channel.Channel parent();
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method parent:()Lio/netty/channel/local/LocalServerChannel;
       4: areturn

  static boolean access$102(io.netty.channel.local.LocalChannel, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #6                  // Field registerInProgress:Z
       6: ireturn

  static io.netty.channel.ChannelPromise access$200(io.netty.channel.local.LocalChannel);
    Code:
       0: aload_0
       1: getfield      #5                  // Field connectPromise:Lio/netty/channel/ChannelPromise;
       4: areturn

  static void access$300(io.netty.channel.local.LocalChannel, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #4                  // Method tryClose:(Z)V
       5: return

  static void access$400(io.netty.channel.local.LocalChannel, io.netty.channel.local.LocalChannel);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method finishPeerRead0:(Lio/netty/channel/local/LocalChannel;)V
       5: return

  static io.netty.channel.local.LocalChannel$State access$500(io.netty.channel.local.LocalChannel);
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:Lio/netty/channel/local/LocalChannel$State;
       4: areturn

  static io.netty.channel.ChannelPromise access$202(io.netty.channel.local.LocalChannel, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #5                  // Field connectPromise:Lio/netty/channel/ChannelPromise;
       6: areturn

  static io.netty.channel.local.LocalChannel access$602(io.netty.channel.local.LocalChannel, io.netty.channel.local.LocalChannel);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #1                  // Field peer:Lio/netty/channel/local/LocalChannel;
       6: areturn

  static {};
    Code:
       0: ldc           #76                 // class io/netty/channel/local/LocalChannel
       2: invokevirtual #106                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #98                 // Field $assertionsDisabled:Z
      16: ldc           #76                 // class io/netty/channel/local/LocalChannel
      18: invokestatic  #107                // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
      21: putstatic     #58                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      24: ldc           #76                 // class io/netty/channel/local/LocalChannel
      26: ldc           #108                // class io/netty/util/concurrent/Future
      28: ldc           #109                // String finishReadFuture
      30: invokestatic  #110                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      33: putstatic     #103                // Field FINISH_READ_FUTURE_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      36: new           #111                // class io/netty/channel/ChannelMetadata
      39: dup
      40: iconst_0
      41: invokespecial #112                // Method io/netty/channel/ChannelMetadata."<init>":(Z)V
      44: putstatic     #28                 // Field METADATA:Lio/netty/channel/ChannelMetadata;
      47: new           #113                // class java/nio/channels/ClosedChannelException
      50: dup
      51: invokespecial #114                // Method java/nio/channels/ClosedChannelException."<init>":()V
      54: ldc           #76                 // class io/netty/channel/local/LocalChannel
      56: ldc           #115                // String doWrite(...)
      58: invokestatic  #116                // Method io/netty/util/internal/ThrowableUtil.unknownStackTrace:(Ljava/lang/Throwable;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Throwable;
      61: checkcast     #113                // class java/nio/channels/ClosedChannelException
      64: putstatic     #86                 // Field DO_WRITE_CLOSED_CHANNEL_EXCEPTION:Ljava/nio/channels/ClosedChannelException;
      67: new           #113                // class java/nio/channels/ClosedChannelException
      70: dup
      71: invokespecial #114                // Method java/nio/channels/ClosedChannelException."<init>":()V
      74: ldc           #76                 // class io/netty/channel/local/LocalChannel
      76: ldc           #117                // String doClose()
      78: invokestatic  #116                // Method io/netty/util/internal/ThrowableUtil.unknownStackTrace:(Ljava/lang/Throwable;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Throwable;
      81: checkcast     #113                // class java/nio/channels/ClosedChannelException
      84: putstatic     #51                 // Field DO_CLOSE_CLOSED_CHANNEL_EXCEPTION:Ljava/nio/channels/ClosedChannelException;
      87: return
}
