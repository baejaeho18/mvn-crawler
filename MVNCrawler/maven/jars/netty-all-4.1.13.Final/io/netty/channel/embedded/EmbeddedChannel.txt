Compiled from "EmbeddedChannel.java"
public class io.netty.channel.embedded.EmbeddedChannel extends io.netty.channel.AbstractChannel {
  private static final java.net.SocketAddress LOCAL_ADDRESS;

  private static final java.net.SocketAddress REMOTE_ADDRESS;

  private static final io.netty.channel.ChannelHandler[] EMPTY_HANDLERS;

  private static final io.netty.util.internal.logging.InternalLogger logger;

  private static final io.netty.channel.ChannelMetadata METADATA_NO_DISCONNECT;

  private static final io.netty.channel.ChannelMetadata METADATA_DISCONNECT;

  private final io.netty.channel.embedded.EmbeddedEventLoop loop;

  private final io.netty.channel.ChannelFutureListener recordExceptionListener;

  private final io.netty.channel.ChannelMetadata metadata;

  private final io.netty.channel.ChannelConfig config;

  private java.util.Queue<java.lang.Object> inboundMessages;

  private java.util.Queue<java.lang.Object> outboundMessages;

  private java.lang.Throwable lastException;

  private io.netty.channel.embedded.EmbeddedChannel$State state;

  static final boolean $assertionsDisabled;

  public io.netty.channel.embedded.EmbeddedChannel();
    Code:
       0: aload_0
       1: getstatic     #3                  // Field EMPTY_HANDLERS:[Lio/netty/channel/ChannelHandler;
       4: invokespecial #4                  // Method "<init>":([Lio/netty/channel/ChannelHandler;)V
       7: return

  public io.netty.channel.embedded.EmbeddedChannel(io.netty.channel.ChannelId);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #3                  // Field EMPTY_HANDLERS:[Lio/netty/channel/ChannelHandler;
       5: invokespecial #5                  // Method "<init>":(Lio/netty/channel/ChannelId;[Lio/netty/channel/ChannelHandler;)V
       8: return

  public io.netty.channel.embedded.EmbeddedChannel(io.netty.channel.ChannelHandler...);
    Code:
       0: aload_0
       1: getstatic     #6                  // Field io/netty/channel/embedded/EmbeddedChannelId.INSTANCE:Lio/netty/channel/ChannelId;
       4: aload_1
       5: invokespecial #5                  // Method "<init>":(Lio/netty/channel/ChannelId;[Lio/netty/channel/ChannelHandler;)V
       8: return

  public io.netty.channel.embedded.EmbeddedChannel(boolean, io.netty.channel.ChannelHandler...);
    Code:
       0: aload_0
       1: getstatic     #6                  // Field io/netty/channel/embedded/EmbeddedChannelId.INSTANCE:Lio/netty/channel/ChannelId;
       4: iload_1
       5: aload_2
       6: invokespecial #7                  // Method "<init>":(Lio/netty/channel/ChannelId;Z[Lio/netty/channel/ChannelHandler;)V
       9: return

  public io.netty.channel.embedded.EmbeddedChannel(io.netty.channel.ChannelId, io.netty.channel.ChannelHandler...);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_2
       4: invokespecial #7                  // Method "<init>":(Lio/netty/channel/ChannelId;Z[Lio/netty/channel/ChannelHandler;)V
       7: return

  public io.netty.channel.embedded.EmbeddedChannel(io.netty.channel.ChannelId, boolean, io.netty.channel.ChannelHandler...);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: invokespecial #8                  // Method io/netty/channel/AbstractChannel."<init>":(Lio/netty/channel/Channel;Lio/netty/channel/ChannelId;)V
       6: aload_0
       7: new           #9                  // class io/netty/channel/embedded/EmbeddedEventLoop
      10: dup
      11: invokespecial #10                 // Method io/netty/channel/embedded/EmbeddedEventLoop."<init>":()V
      14: putfield      #11                 // Field loop:Lio/netty/channel/embedded/EmbeddedEventLoop;
      17: aload_0
      18: new           #12                 // class io/netty/channel/embedded/EmbeddedChannel$1
      21: dup
      22: aload_0
      23: invokespecial #13                 // Method io/netty/channel/embedded/EmbeddedChannel$1."<init>":(Lio/netty/channel/embedded/EmbeddedChannel;)V
      26: putfield      #14                 // Field recordExceptionListener:Lio/netty/channel/ChannelFutureListener;
      29: aload_0
      30: iload_2
      31: invokestatic  #15                 // Method metadata:(Z)Lio/netty/channel/ChannelMetadata;
      34: putfield      #16                 // Field metadata:Lio/netty/channel/ChannelMetadata;
      37: aload_0
      38: new           #17                 // class io/netty/channel/DefaultChannelConfig
      41: dup
      42: aload_0
      43: invokespecial #18                 // Method io/netty/channel/DefaultChannelConfig."<init>":(Lio/netty/channel/Channel;)V
      46: putfield      #19                 // Field config:Lio/netty/channel/ChannelConfig;
      49: aload_0
      50: aload_3
      51: invokespecial #20                 // Method setup:([Lio/netty/channel/ChannelHandler;)V
      54: return

  public io.netty.channel.embedded.EmbeddedChannel(io.netty.channel.ChannelId, boolean, io.netty.channel.ChannelConfig, io.netty.channel.ChannelHandler...);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: invokespecial #8                  // Method io/netty/channel/AbstractChannel."<init>":(Lio/netty/channel/Channel;Lio/netty/channel/ChannelId;)V
       6: aload_0
       7: new           #9                  // class io/netty/channel/embedded/EmbeddedEventLoop
      10: dup
      11: invokespecial #10                 // Method io/netty/channel/embedded/EmbeddedEventLoop."<init>":()V
      14: putfield      #11                 // Field loop:Lio/netty/channel/embedded/EmbeddedEventLoop;
      17: aload_0
      18: new           #12                 // class io/netty/channel/embedded/EmbeddedChannel$1
      21: dup
      22: aload_0
      23: invokespecial #13                 // Method io/netty/channel/embedded/EmbeddedChannel$1."<init>":(Lio/netty/channel/embedded/EmbeddedChannel;)V
      26: putfield      #14                 // Field recordExceptionListener:Lio/netty/channel/ChannelFutureListener;
      29: aload_0
      30: iload_2
      31: invokestatic  #15                 // Method metadata:(Z)Lio/netty/channel/ChannelMetadata;
      34: putfield      #16                 // Field metadata:Lio/netty/channel/ChannelMetadata;
      37: aload_0
      38: aload_3
      39: ldc           #21                 // String config
      41: invokestatic  #22                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      44: checkcast     #23                 // class io/netty/channel/ChannelConfig
      47: putfield      #19                 // Field config:Lio/netty/channel/ChannelConfig;
      50: aload_0
      51: aload         4
      53: invokespecial #20                 // Method setup:([Lio/netty/channel/ChannelHandler;)V
      56: return

  private static io.netty.channel.ChannelMetadata metadata(boolean);
    Code:
       0: iload_0
       1: ifeq          10
       4: getstatic     #24                 // Field METADATA_DISCONNECT:Lio/netty/channel/ChannelMetadata;
       7: goto          13
      10: getstatic     #25                 // Field METADATA_NO_DISCONNECT:Lio/netty/channel/ChannelMetadata;
      13: areturn

  private void setup(io.netty.channel.ChannelHandler...);
    Code:
       0: aload_1
       1: ldc           #26                 // String handlers
       3: invokestatic  #22                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: invokevirtual #27                 // Method pipeline:()Lio/netty/channel/ChannelPipeline;
      11: astore_2
      12: aload_2
      13: iconst_1
      14: anewarray     #28                 // class io/netty/channel/ChannelHandler
      17: dup
      18: iconst_0
      19: new           #29                 // class io/netty/channel/embedded/EmbeddedChannel$2
      22: dup
      23: aload_0
      24: aload_1
      25: invokespecial #30                 // Method io/netty/channel/embedded/EmbeddedChannel$2."<init>":(Lio/netty/channel/embedded/EmbeddedChannel;[Lio/netty/channel/ChannelHandler;)V
      28: aastore
      29: invokeinterface #31,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:([Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      34: pop
      35: aload_0
      36: getfield      #11                 // Field loop:Lio/netty/channel/embedded/EmbeddedEventLoop;
      39: aload_0
      40: invokevirtual #32                 // Method io/netty/channel/embedded/EmbeddedEventLoop.register:(Lio/netty/channel/Channel;)Lio/netty/channel/ChannelFuture;
      43: astore_3
      44: getstatic     #33                 // Field $assertionsDisabled:Z
      47: ifne          67
      50: aload_3
      51: invokeinterface #34,  1           // InterfaceMethod io/netty/channel/ChannelFuture.isDone:()Z
      56: ifne          67
      59: new           #35                 // class java/lang/AssertionError
      62: dup
      63: invokespecial #36                 // Method java/lang/AssertionError."<init>":()V
      66: athrow
      67: return

  protected final io.netty.channel.DefaultChannelPipeline newChannelPipeline();
    Code:
       0: new           #37                 // class io/netty/channel/embedded/EmbeddedChannel$EmbeddedChannelPipeline
       3: dup
       4: aload_0
       5: aload_0
       6: invokespecial #38                 // Method io/netty/channel/embedded/EmbeddedChannel$EmbeddedChannelPipeline."<init>":(Lio/netty/channel/embedded/EmbeddedChannel;Lio/netty/channel/embedded/EmbeddedChannel;)V
       9: areturn

  public io.netty.channel.ChannelMetadata metadata();
    Code:
       0: aload_0
       1: getfield      #16                 // Field metadata:Lio/netty/channel/ChannelMetadata;
       4: areturn

  public io.netty.channel.ChannelConfig config();
    Code:
       0: aload_0
       1: getfield      #19                 // Field config:Lio/netty/channel/ChannelConfig;
       4: areturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #39                 // Field state:Lio/netty/channel/embedded/EmbeddedChannel$State;
       4: getstatic     #40                 // Field io/netty/channel/embedded/EmbeddedChannel$State.CLOSED:Lio/netty/channel/embedded/EmbeddedChannel$State;
       7: if_acmpeq     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isActive();
    Code:
       0: aload_0
       1: getfield      #39                 // Field state:Lio/netty/channel/embedded/EmbeddedChannel$State;
       4: getstatic     #41                 // Field io/netty/channel/embedded/EmbeddedChannel$State.ACTIVE:Lio/netty/channel/embedded/EmbeddedChannel$State;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public java.util.Queue<java.lang.Object> inboundMessages();
    Code:
       0: aload_0
       1: getfield      #42                 // Field inboundMessages:Ljava/util/Queue;
       4: ifnonnull     18
       7: aload_0
       8: new           #43                 // class java/util/ArrayDeque
      11: dup
      12: invokespecial #44                 // Method java/util/ArrayDeque."<init>":()V
      15: putfield      #42                 // Field inboundMessages:Ljava/util/Queue;
      18: aload_0
      19: getfield      #42                 // Field inboundMessages:Ljava/util/Queue;
      22: areturn

  public java.util.Queue<java.lang.Object> lastInboundBuffer();
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method inboundMessages:()Ljava/util/Queue;
       4: areturn

  public java.util.Queue<java.lang.Object> outboundMessages();
    Code:
       0: aload_0
       1: getfield      #46                 // Field outboundMessages:Ljava/util/Queue;
       4: ifnonnull     18
       7: aload_0
       8: new           #43                 // class java/util/ArrayDeque
      11: dup
      12: invokespecial #44                 // Method java/util/ArrayDeque."<init>":()V
      15: putfield      #46                 // Field outboundMessages:Ljava/util/Queue;
      18: aload_0
      19: getfield      #46                 // Field outboundMessages:Ljava/util/Queue;
      22: areturn

  public java.util.Queue<java.lang.Object> lastOutboundBuffer();
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method outboundMessages:()Ljava/util/Queue;
       4: areturn

  public <T> T readInbound();
    Code:
       0: aload_0
       1: getfield      #42                 // Field inboundMessages:Ljava/util/Queue;
       4: invokestatic  #48                 // Method poll:(Ljava/util/Queue;)Ljava/lang/Object;
       7: areturn

  public <T> T readOutbound();
    Code:
       0: aload_0
       1: getfield      #46                 // Field outboundMessages:Ljava/util/Queue;
       4: invokestatic  #48                 // Method poll:(Ljava/util/Queue;)Ljava/lang/Object;
       7: areturn

  public boolean writeInbound(java.lang.Object...);
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method ensureOpen:()V
       4: aload_1
       5: arraylength
       6: ifne          17
       9: aload_0
      10: getfield      #42                 // Field inboundMessages:Ljava/util/Queue;
      13: invokestatic  #50                 // Method isNotEmpty:(Ljava/util/Queue;)Z
      16: ireturn
      17: aload_0
      18: invokevirtual #27                 // Method pipeline:()Lio/netty/channel/ChannelPipeline;
      21: astore_2
      22: aload_1
      23: astore_3
      24: aload_3
      25: arraylength
      26: istore        4
      28: iconst_0
      29: istore        5
      31: iload         5
      33: iload         4
      35: if_icmpge     59
      38: aload_3
      39: iload         5
      41: aaload
      42: astore        6
      44: aload_2
      45: aload         6
      47: invokeinterface #51,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelPipeline;
      52: pop
      53: iinc          5, 1
      56: goto          31
      59: aload_0
      60: iconst_0
      61: aload_0
      62: invokevirtual #52                 // Method voidPromise:()Lio/netty/channel/ChannelPromise;
      65: invokespecial #53                 // Method flushInbound:(ZLio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      68: pop
      69: aload_0
      70: getfield      #42                 // Field inboundMessages:Ljava/util/Queue;
      73: invokestatic  #50                 // Method isNotEmpty:(Ljava/util/Queue;)Z
      76: ireturn

  public io.netty.channel.ChannelFuture writeOneInbound(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #54                 // Method newPromise:()Lio/netty/channel/ChannelPromise;
       6: invokevirtual #55                 // Method writeOneInbound:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       9: areturn

  public io.netty.channel.ChannelFuture writeOneInbound(java.lang.Object, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #56                 // Method checkOpen:(Z)Z
       5: ifeq          19
       8: aload_0
       9: invokevirtual #27                 // Method pipeline:()Lio/netty/channel/ChannelPipeline;
      12: aload_1
      13: invokeinterface #51,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelPipeline;
      18: pop
      19: aload_0
      20: aload_2
      21: invokespecial #57                 // Method checkException:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      24: areturn

  public io.netty.channel.embedded.EmbeddedChannel flushInbound();
    Code:
       0: aload_0
       1: iconst_1
       2: aload_0
       3: invokevirtual #52                 // Method voidPromise:()Lio/netty/channel/ChannelPromise;
       6: invokespecial #53                 // Method flushInbound:(ZLio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       9: pop
      10: aload_0
      11: areturn

  private io.netty.channel.ChannelFuture flushInbound(boolean, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #56                 // Method checkOpen:(Z)Z
       5: ifeq          22
       8: aload_0
       9: invokevirtual #27                 // Method pipeline:()Lio/netty/channel/ChannelPipeline;
      12: invokeinterface #58,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelReadComplete:()Lio/netty/channel/ChannelPipeline;
      17: pop
      18: aload_0
      19: invokevirtual #59                 // Method runPendingTasks:()V
      22: aload_0
      23: aload_2
      24: invokespecial #57                 // Method checkException:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      27: areturn

  public boolean writeOutbound(java.lang.Object...);
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method ensureOpen:()V
       4: aload_1
       5: arraylength
       6: ifne          17
       9: aload_0
      10: getfield      #46                 // Field outboundMessages:Ljava/util/Queue;
      13: invokestatic  #50                 // Method isNotEmpty:(Ljava/util/Queue;)Z
      16: ireturn
      17: aload_1
      18: arraylength
      19: invokestatic  #60                 // Method io/netty/util/internal/RecyclableArrayList.newInstance:(I)Lio/netty/util/internal/RecyclableArrayList;
      22: astore_2
      23: aload_1
      24: astore_3
      25: aload_3
      26: arraylength
      27: istore        4
      29: iconst_0
      30: istore        5
      32: iload         5
      34: iload         4
      36: if_icmpge     70
      39: aload_3
      40: iload         5
      42: aaload
      43: astore        6
      45: aload         6
      47: ifnonnull     53
      50: goto          70
      53: aload_2
      54: aload_0
      55: aload         6
      57: invokevirtual #61                 // Method write:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
      60: invokevirtual #62                 // Method io/netty/util/internal/RecyclableArrayList.add:(Ljava/lang/Object;)Z
      63: pop
      64: iinc          5, 1
      67: goto          32
      70: aload_0
      71: invokespecial #63                 // Method flushOutbound0:()V
      74: aload_2
      75: invokevirtual #64                 // Method io/netty/util/internal/RecyclableArrayList.size:()I
      78: istore_3
      79: iconst_0
      80: istore        4
      82: iload         4
      84: iload_3
      85: if_icmpge     136
      88: aload_2
      89: iload         4
      91: invokevirtual #65                 // Method io/netty/util/internal/RecyclableArrayList.get:(I)Ljava/lang/Object;
      94: checkcast     #66                 // class io/netty/channel/ChannelFuture
      97: astore        5
      99: aload         5
     101: invokeinterface #34,  1           // InterfaceMethod io/netty/channel/ChannelFuture.isDone:()Z
     106: ifeq          118
     109: aload_0
     110: aload         5
     112: invokespecial #2                  // Method recordException:(Lio/netty/channel/ChannelFuture;)V
     115: goto          130
     118: aload         5
     120: aload_0
     121: getfield      #14                 // Field recordExceptionListener:Lio/netty/channel/ChannelFutureListener;
     124: invokeinterface #67,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
     129: pop
     130: iinc          4, 1
     133: goto          82
     136: aload_0
     137: invokevirtual #68                 // Method checkException:()V
     140: aload_0
     141: getfield      #46                 // Field outboundMessages:Ljava/util/Queue;
     144: invokestatic  #50                 // Method isNotEmpty:(Ljava/util/Queue;)Z
     147: istore        4
     149: aload_2
     150: invokevirtual #69                 // Method io/netty/util/internal/RecyclableArrayList.recycle:()Z
     153: pop
     154: iload         4
     156: ireturn
     157: astore        7
     159: aload_2
     160: invokevirtual #69                 // Method io/netty/util/internal/RecyclableArrayList.recycle:()Z
     163: pop
     164: aload         7
     166: athrow
    Exception table:
       from    to  target type
          23   149   157   any
         157   159   157   any

  public io.netty.channel.ChannelFuture writeOneOutbound(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #54                 // Method newPromise:()Lio/netty/channel/ChannelPromise;
       6: invokevirtual #70                 // Method writeOneOutbound:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       9: areturn

  public io.netty.channel.ChannelFuture writeOneOutbound(java.lang.Object, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #56                 // Method checkOpen:(Z)Z
       5: ifeq          15
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokevirtual #71                 // Method write:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      14: areturn
      15: aload_0
      16: aload_2
      17: invokespecial #57                 // Method checkException:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      20: areturn

  public io.netty.channel.embedded.EmbeddedChannel flushOutbound();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #56                 // Method checkOpen:(Z)Z
       5: ifeq          12
       8: aload_0
       9: invokespecial #63                 // Method flushOutbound0:()V
      12: aload_0
      13: aload_0
      14: invokevirtual #52                 // Method voidPromise:()Lio/netty/channel/ChannelPromise;
      17: invokespecial #57                 // Method checkException:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      20: pop
      21: aload_0
      22: areturn

  private void flushOutbound0();
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method runPendingTasks:()V
       4: aload_0
       5: invokevirtual #72                 // Method flush:()Lio/netty/channel/Channel;
       8: pop
       9: return

  public boolean finish();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #73                 // Method finish:(Z)Z
       5: ireturn

  public boolean finishAndReleaseAll();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #73                 // Method finish:(Z)Z
       5: ireturn

  private boolean finish(boolean);
    Code:
       0: aload_0
       1: invokevirtual #74                 // Method close:()Lio/netty/channel/ChannelFuture;
       4: pop
       5: aload_0
       6: invokevirtual #68                 // Method checkException:()V
       9: aload_0
      10: getfield      #42                 // Field inboundMessages:Ljava/util/Queue;
      13: invokestatic  #50                 // Method isNotEmpty:(Ljava/util/Queue;)Z
      16: ifne          29
      19: aload_0
      20: getfield      #46                 // Field outboundMessages:Ljava/util/Queue;
      23: invokestatic  #50                 // Method isNotEmpty:(Ljava/util/Queue;)Z
      26: ifeq          33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: istore_2
      35: iload_1
      36: ifeq          55
      39: aload_0
      40: getfield      #42                 // Field inboundMessages:Ljava/util/Queue;
      43: invokestatic  #75                 // Method releaseAll:(Ljava/util/Queue;)Z
      46: pop
      47: aload_0
      48: getfield      #46                 // Field outboundMessages:Ljava/util/Queue;
      51: invokestatic  #75                 // Method releaseAll:(Ljava/util/Queue;)Z
      54: pop
      55: iload_2
      56: ireturn
      57: astore_3
      58: iload_1
      59: ifeq          78
      62: aload_0
      63: getfield      #42                 // Field inboundMessages:Ljava/util/Queue;
      66: invokestatic  #75                 // Method releaseAll:(Ljava/util/Queue;)Z
      69: pop
      70: aload_0
      71: getfield      #46                 // Field outboundMessages:Ljava/util/Queue;
      74: invokestatic  #75                 // Method releaseAll:(Ljava/util/Queue;)Z
      77: pop
      78: aload_3
      79: athrow
    Exception table:
       from    to  target type
           5    35    57   any

  public boolean releaseInbound();
    Code:
       0: aload_0
       1: getfield      #42                 // Field inboundMessages:Ljava/util/Queue;
       4: invokestatic  #75                 // Method releaseAll:(Ljava/util/Queue;)Z
       7: ireturn

  public boolean releaseOutbound();
    Code:
       0: aload_0
       1: getfield      #46                 // Field outboundMessages:Ljava/util/Queue;
       4: invokestatic  #75                 // Method releaseAll:(Ljava/util/Queue;)Z
       7: ireturn

  private static boolean releaseAll(java.util.Queue<java.lang.Object>);
    Code:
       0: aload_0
       1: invokestatic  #50                 // Method isNotEmpty:(Ljava/util/Queue;)Z
       4: ifeq          31
       7: aload_0
       8: invokeinterface #76,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      13: astore_1
      14: aload_1
      15: ifnonnull     21
      18: goto          29
      21: aload_1
      22: invokestatic  #77                 // Method io/netty/util/ReferenceCountUtil.release:(Ljava/lang/Object;)Z
      25: pop
      26: goto          7
      29: iconst_1
      30: ireturn
      31: iconst_0
      32: ireturn

  private void finishPendingTasks(boolean);
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method runPendingTasks:()V
       4: iload_1
       5: ifeq          15
       8: aload_0
       9: getfield      #11                 // Field loop:Lio/netty/channel/embedded/EmbeddedEventLoop;
      12: invokevirtual #78                 // Method io/netty/channel/embedded/EmbeddedEventLoop.cancelScheduledTasks:()V
      15: return

  public final io.netty.channel.ChannelFuture close();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #54                 // Method newPromise:()Lio/netty/channel/ChannelPromise;
       5: invokevirtual #79                 // Method close:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       8: areturn

  public final io.netty.channel.ChannelFuture disconnect();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #54                 // Method newPromise:()Lio/netty/channel/ChannelPromise;
       5: invokevirtual #80                 // Method disconnect:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       8: areturn

  public final io.netty.channel.ChannelFuture close(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method runPendingTasks:()V
       4: aload_0
       5: aload_1
       6: invokespecial #81                 // Method io/netty/channel/AbstractChannel.close:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       9: astore_2
      10: aload_0
      11: iconst_1
      12: invokespecial #82                 // Method finishPendingTasks:(Z)V
      15: aload_2
      16: areturn

  public final io.netty.channel.ChannelFuture disconnect(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #83                 // Method io/netty/channel/AbstractChannel.disconnect:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       5: astore_2
       6: aload_0
       7: aload_0
       8: getfield      #16                 // Field metadata:Lio/netty/channel/ChannelMetadata;
      11: invokevirtual #84                 // Method io/netty/channel/ChannelMetadata.hasDisconnect:()Z
      14: ifne          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: invokespecial #82                 // Method finishPendingTasks:(Z)V
      25: aload_2
      26: areturn

  private static boolean isNotEmpty(java.util.Queue<java.lang.Object>);
    Code:
       0: aload_0
       1: ifnull        17
       4: aload_0
       5: invokeinterface #85,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
      10: ifne          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  private static java.lang.Object poll(java.util.Queue<java.lang.Object>);
    Code:
       0: aload_0
       1: ifnull        13
       4: aload_0
       5: invokeinterface #76,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      10: goto          14
      13: aconst_null
      14: areturn

  public void runPendingTasks();
    Code:
       0: aload_0
       1: getfield      #11                 // Field loop:Lio/netty/channel/embedded/EmbeddedEventLoop;
       4: invokevirtual #86                 // Method io/netty/channel/embedded/EmbeddedEventLoop.runTasks:()V
       7: goto          16
      10: astore_1
      11: aload_0
      12: aload_1
      13: invokespecial #1                  // Method recordException:(Ljava/lang/Throwable;)V
      16: aload_0
      17: getfield      #11                 // Field loop:Lio/netty/channel/embedded/EmbeddedEventLoop;
      20: invokevirtual #88                 // Method io/netty/channel/embedded/EmbeddedEventLoop.runScheduledTasks:()J
      23: pop2
      24: goto          33
      27: astore_1
      28: aload_0
      29: aload_1
      30: invokespecial #1                  // Method recordException:(Ljava/lang/Throwable;)V
      33: return
    Exception table:
       from    to  target type
           0     7    10   Class java/lang/Exception
          16    24    27   Class java/lang/Exception

  public long runScheduledPendingTasks();
    Code:
       0: aload_0
       1: getfield      #11                 // Field loop:Lio/netty/channel/embedded/EmbeddedEventLoop;
       4: invokevirtual #88                 // Method io/netty/channel/embedded/EmbeddedEventLoop.runScheduledTasks:()J
       7: lreturn
       8: astore_1
       9: aload_0
      10: aload_1
      11: invokespecial #1                  // Method recordException:(Ljava/lang/Throwable;)V
      14: aload_0
      15: getfield      #11                 // Field loop:Lio/netty/channel/embedded/EmbeddedEventLoop;
      18: invokevirtual #89                 // Method io/netty/channel/embedded/EmbeddedEventLoop.nextScheduledTask:()J
      21: lreturn
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/Exception

  private void recordException(io.netty.channel.ChannelFuture);
    Code:
       0: aload_1
       1: invokeinterface #90,  1           // InterfaceMethod io/netty/channel/ChannelFuture.isSuccess:()Z
       6: ifne          19
       9: aload_0
      10: aload_1
      11: invokeinterface #91,  1           // InterfaceMethod io/netty/channel/ChannelFuture.cause:()Ljava/lang/Throwable;
      16: invokespecial #1                  // Method recordException:(Ljava/lang/Throwable;)V
      19: return

  private void recordException(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #92                 // Field lastException:Ljava/lang/Throwable;
       4: ifnonnull     15
       7: aload_0
       8: aload_1
       9: putfield      #92                 // Field lastException:Ljava/lang/Throwable;
      12: goto          26
      15: getstatic     #93                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      18: ldc           #94                 // String More than one exception was raised. Will report only the first one and log others.
      20: aload_1
      21: invokeinterface #95,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      26: return

  private io.netty.channel.ChannelFuture checkException(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #92                 // Field lastException:Ljava/lang/Throwable;
       4: astore_2
       5: aload_2
       6: ifnull        35
       9: aload_0
      10: aconst_null
      11: putfield      #92                 // Field lastException:Ljava/lang/Throwable;
      14: aload_1
      15: invokeinterface #96,  1           // InterfaceMethod io/netty/channel/ChannelPromise.isVoid:()Z
      20: ifeq          27
      23: aload_2
      24: invokestatic  #97                 // Method io/netty/util/internal/PlatformDependent.throwException:(Ljava/lang/Throwable;)V
      27: aload_1
      28: aload_2
      29: invokeinterface #98,  2           // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
      34: areturn
      35: aload_1
      36: invokeinterface #99,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setSuccess:()Lio/netty/channel/ChannelPromise;
      41: areturn

  public void checkException();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #52                 // Method voidPromise:()Lio/netty/channel/ChannelPromise;
       5: invokespecial #57                 // Method checkException:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       8: pop
       9: return

  private boolean checkOpen(boolean);
    Code:
       0: aload_0
       1: invokevirtual #100                // Method isOpen:()Z
       4: ifne          24
       7: iload_1
       8: ifeq          22
      11: aload_0
      12: new           #101                // class java/nio/channels/ClosedChannelException
      15: dup
      16: invokespecial #102                // Method java/nio/channels/ClosedChannelException."<init>":()V
      19: invokespecial #1                  // Method recordException:(Ljava/lang/Throwable;)V
      22: iconst_0
      23: ireturn
      24: iconst_1
      25: ireturn

  protected final void ensureOpen();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #56                 // Method checkOpen:(Z)Z
       5: ifne          12
       8: aload_0
       9: invokevirtual #68                 // Method checkException:()V
      12: return

  protected boolean isCompatible(io.netty.channel.EventLoop);
    Code:
       0: aload_1
       1: instanceof    #9                  // class io/netty/channel/embedded/EmbeddedEventLoop
       4: ireturn

  protected java.net.SocketAddress localAddress0();
    Code:
       0: aload_0
       1: invokevirtual #103                // Method isActive:()Z
       4: ifeq          13
       7: getstatic     #104                // Field LOCAL_ADDRESS:Ljava/net/SocketAddress;
      10: goto          14
      13: aconst_null
      14: areturn

  protected java.net.SocketAddress remoteAddress0();
    Code:
       0: aload_0
       1: invokevirtual #103                // Method isActive:()Z
       4: ifeq          13
       7: getstatic     #105                // Field REMOTE_ADDRESS:Ljava/net/SocketAddress;
      10: goto          14
      13: aconst_null
      14: areturn

  protected void doRegister() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getstatic     #41                 // Field io/netty/channel/embedded/EmbeddedChannel$State.ACTIVE:Lio/netty/channel/embedded/EmbeddedChannel$State;
       4: putfield      #39                 // Field state:Lio/netty/channel/embedded/EmbeddedChannel$State;
       7: return

  protected void doBind(java.net.SocketAddress) throws java.lang.Exception;
    Code:
       0: return

  protected void doDisconnect() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #16                 // Field metadata:Lio/netty/channel/ChannelMetadata;
       4: invokevirtual #84                 // Method io/netty/channel/ChannelMetadata.hasDisconnect:()Z
       7: ifne          14
      10: aload_0
      11: invokevirtual #106                // Method doClose:()V
      14: return

  protected void doClose() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getstatic     #40                 // Field io/netty/channel/embedded/EmbeddedChannel$State.CLOSED:Lio/netty/channel/embedded/EmbeddedChannel$State;
       4: putfield      #39                 // Field state:Lio/netty/channel/embedded/EmbeddedChannel$State;
       7: return

  protected void doBeginRead() throws java.lang.Exception;
    Code:
       0: return

  protected io.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe();
    Code:
       0: new           #107                // class io/netty/channel/embedded/EmbeddedChannel$DefaultUnsafe
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #108                // Method io/netty/channel/embedded/EmbeddedChannel$DefaultUnsafe."<init>":(Lio/netty/channel/embedded/EmbeddedChannel;Lio/netty/channel/embedded/EmbeddedChannel$1;)V
       9: areturn

  protected void doWrite(io.netty.channel.ChannelOutboundBuffer) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #109                // Method io/netty/channel/ChannelOutboundBuffer.current:()Ljava/lang/Object;
       4: astore_2
       5: aload_2
       6: ifnonnull     12
       9: goto          30
      12: aload_2
      13: invokestatic  #110                // Method io/netty/util/ReferenceCountUtil.retain:(Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: aload_0
      18: aload_2
      19: invokevirtual #111                // Method handleOutboundMessage:(Ljava/lang/Object;)V
      22: aload_1
      23: invokevirtual #112                // Method io/netty/channel/ChannelOutboundBuffer.remove:()Z
      26: pop
      27: goto          0
      30: return

  protected void handleOutboundMessage(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method outboundMessages:()Ljava/util/Queue;
       4: aload_1
       5: invokeinterface #113,  2          // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  protected void handleInboundMessage(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method inboundMessages:()Ljava/util/Queue;
       4: aload_1
       5: invokeinterface #113,  2          // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  static void access$000(io.netty.channel.embedded.EmbeddedChannel, io.netty.channel.ChannelFuture);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method recordException:(Lio/netty/channel/ChannelFuture;)V
       5: return

  static void access$200(io.netty.channel.embedded.EmbeddedChannel, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method recordException:(Ljava/lang/Throwable;)V
       5: return

  static {};
    Code:
       0: ldc           #114                // class io/netty/channel/embedded/EmbeddedChannel
       2: invokevirtual #115                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #33                 // Field $assertionsDisabled:Z
      16: new           #116                // class io/netty/channel/embedded/EmbeddedSocketAddress
      19: dup
      20: invokespecial #117                // Method io/netty/channel/embedded/EmbeddedSocketAddress."<init>":()V
      23: putstatic     #104                // Field LOCAL_ADDRESS:Ljava/net/SocketAddress;
      26: new           #116                // class io/netty/channel/embedded/EmbeddedSocketAddress
      29: dup
      30: invokespecial #117                // Method io/netty/channel/embedded/EmbeddedSocketAddress."<init>":()V
      33: putstatic     #105                // Field REMOTE_ADDRESS:Ljava/net/SocketAddress;
      36: iconst_0
      37: anewarray     #28                 // class io/netty/channel/ChannelHandler
      40: putstatic     #3                  // Field EMPTY_HANDLERS:[Lio/netty/channel/ChannelHandler;
      43: ldc           #114                // class io/netty/channel/embedded/EmbeddedChannel
      45: invokestatic  #118                // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
      48: putstatic     #93                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      51: new           #119                // class io/netty/channel/ChannelMetadata
      54: dup
      55: iconst_0
      56: invokespecial #120                // Method io/netty/channel/ChannelMetadata."<init>":(Z)V
      59: putstatic     #25                 // Field METADATA_NO_DISCONNECT:Lio/netty/channel/ChannelMetadata;
      62: new           #119                // class io/netty/channel/ChannelMetadata
      65: dup
      66: iconst_1
      67: invokespecial #120                // Method io/netty/channel/ChannelMetadata."<init>":(Z)V
      70: putstatic     #24                 // Field METADATA_DISCONNECT:Lio/netty/channel/ChannelMetadata;
      73: return
}
