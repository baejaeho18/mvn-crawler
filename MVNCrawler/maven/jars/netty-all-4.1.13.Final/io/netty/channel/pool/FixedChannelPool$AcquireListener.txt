Compiled from "FixedChannelPool.java"
class io.netty.channel.pool.FixedChannelPool$AcquireListener implements io.netty.util.concurrent.FutureListener<io.netty.channel.Channel> {
  private final io.netty.util.concurrent.Promise<io.netty.channel.Channel> originalPromise;

  protected boolean acquired;

  static final boolean $assertionsDisabled;

  final io.netty.channel.pool.FixedChannelPool this$0;

  io.netty.channel.pool.FixedChannelPool$AcquireListener(io.netty.util.concurrent.Promise<io.netty.channel.Channel>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/netty/channel/pool/FixedChannelPool;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field originalPromise:Lio/netty/util/concurrent/Promise;
      14: return

  public void operationComplete(io.netty.util.concurrent.Future<io.netty.channel.Channel>) throws java.lang.Exception;
    Code:
       0: getstatic     #4                  // Field $assertionsDisabled:Z
       3: ifne          29
       6: aload_0
       7: getfield      #1                  // Field this$0:Lio/netty/channel/pool/FixedChannelPool;
      10: invokestatic  #5                  // Method io/netty/channel/pool/FixedChannelPool.access$400:(Lio/netty/channel/pool/FixedChannelPool;)Lio/netty/util/concurrent/EventExecutor;
      13: invokeinterface #6,  1            // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      18: ifne          29
      21: new           #7                  // class java/lang/AssertionError
      24: dup
      25: invokespecial #8                  // Method java/lang/AssertionError."<init>":()V
      28: athrow
      29: aload_0
      30: getfield      #1                  // Field this$0:Lio/netty/channel/pool/FixedChannelPool;
      33: invokestatic  #9                  // Method io/netty/channel/pool/FixedChannelPool.access$500:(Lio/netty/channel/pool/FixedChannelPool;)Z
      36: ifeq          77
      39: aload_1
      40: invokeinterface #10,  1           // InterfaceMethod io/netty/util/concurrent/Future.isSuccess:()Z
      45: ifeq          63
      48: aload_1
      49: invokeinterface #11,  1           // InterfaceMethod io/netty/util/concurrent/Future.getNow:()Ljava/lang/Object;
      54: checkcast     #12                 // class io/netty/channel/Channel
      57: invokeinterface #13,  1           // InterfaceMethod io/netty/channel/Channel.close:()Lio/netty/channel/ChannelFuture;
      62: pop
      63: aload_0
      64: getfield      #3                  // Field originalPromise:Lio/netty/util/concurrent/Promise;
      67: getstatic     #14                 // Field io/netty/channel/pool/FixedChannelPool.POOL_CLOSED_ON_ACQUIRE_EXCEPTION:Ljava/lang/IllegalStateException;
      70: invokeinterface #15,  2           // InterfaceMethod io/netty/util/concurrent/Promise.setFailure:(Ljava/lang/Throwable;)Lio/netty/util/concurrent/Promise;
      75: pop
      76: return
      77: aload_1
      78: invokeinterface #10,  1           // InterfaceMethod io/netty/util/concurrent/Future.isSuccess:()Z
      83: ifeq          105
      86: aload_0
      87: getfield      #3                  // Field originalPromise:Lio/netty/util/concurrent/Promise;
      90: aload_1
      91: invokeinterface #11,  1           // InterfaceMethod io/netty/util/concurrent/Future.getNow:()Ljava/lang/Object;
      96: invokeinterface #16,  2           // InterfaceMethod io/netty/util/concurrent/Promise.setSuccess:(Ljava/lang/Object;)Lio/netty/util/concurrent/Promise;
     101: pop
     102: goto          145
     105: aload_0
     106: getfield      #17                 // Field acquired:Z
     109: ifeq          122
     112: aload_0
     113: getfield      #1                  // Field this$0:Lio/netty/channel/pool/FixedChannelPool;
     116: invokestatic  #18                 // Method io/netty/channel/pool/FixedChannelPool.access$600:(Lio/netty/channel/pool/FixedChannelPool;)V
     119: goto          129
     122: aload_0
     123: getfield      #1                  // Field this$0:Lio/netty/channel/pool/FixedChannelPool;
     126: invokestatic  #19                 // Method io/netty/channel/pool/FixedChannelPool.access$1000:(Lio/netty/channel/pool/FixedChannelPool;)V
     129: aload_0
     130: getfield      #3                  // Field originalPromise:Lio/netty/util/concurrent/Promise;
     133: aload_1
     134: invokeinterface #20,  1           // InterfaceMethod io/netty/util/concurrent/Future.cause:()Ljava/lang/Throwable;
     139: invokeinterface #15,  2           // InterfaceMethod io/netty/util/concurrent/Promise.setFailure:(Ljava/lang/Throwable;)Lio/netty/util/concurrent/Promise;
     144: pop
     145: return

  public void acquired();
    Code:
       0: aload_0
       1: getfield      #17                 // Field acquired:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #1                  // Field this$0:Lio/netty/channel/pool/FixedChannelPool;
      12: invokestatic  #21                 // Method io/netty/channel/pool/FixedChannelPool.access$1108:(Lio/netty/channel/pool/FixedChannelPool;)I
      15: pop
      16: aload_0
      17: iconst_1
      18: putfield      #17                 // Field acquired:Z
      21: return

  static {};
    Code:
       0: ldc           #22                 // class io/netty/channel/pool/FixedChannelPool
       2: invokevirtual #23                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #4                  // Field $assertionsDisabled:Z
      16: return
}
