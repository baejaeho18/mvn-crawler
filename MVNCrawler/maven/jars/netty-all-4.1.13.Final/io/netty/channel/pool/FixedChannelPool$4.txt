Compiled from "FixedChannelPool.java"
class io.netty.channel.pool.FixedChannelPool$4 implements io.netty.util.concurrent.FutureListener<java.lang.Void> {
  static final boolean $assertionsDisabled;

  final io.netty.channel.Channel val$channel;

  final io.netty.util.concurrent.Promise val$promise;

  final io.netty.channel.pool.FixedChannelPool this$0;

  io.netty.channel.pool.FixedChannelPool$4(io.netty.channel.pool.FixedChannelPool, io.netty.channel.Channel, io.netty.util.concurrent.Promise);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/netty/channel/pool/FixedChannelPool;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$channel:Lio/netty/channel/Channel;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$promise:Lio/netty/util/concurrent/Promise;
      15: aload_0
      16: invokespecial #4                  // Method java/lang/Object."<init>":()V
      19: return

  public void operationComplete(io.netty.util.concurrent.Future<java.lang.Void>) throws java.lang.Exception;
    Code:
       0: getstatic     #5                  // Field $assertionsDisabled:Z
       3: ifne          29
       6: aload_0
       7: getfield      #1                  // Field this$0:Lio/netty/channel/pool/FixedChannelPool;
      10: invokestatic  #6                  // Method io/netty/channel/pool/FixedChannelPool.access$400:(Lio/netty/channel/pool/FixedChannelPool;)Lio/netty/util/concurrent/EventExecutor;
      13: invokeinterface #7,  1            // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      18: ifne          29
      21: new           #8                  // class java/lang/AssertionError
      24: dup
      25: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      28: athrow
      29: aload_0
      30: getfield      #1                  // Field this$0:Lio/netty/channel/pool/FixedChannelPool;
      33: invokestatic  #10                 // Method io/netty/channel/pool/FixedChannelPool.access$500:(Lio/netty/channel/pool/FixedChannelPool;)Z
      36: ifeq          63
      39: aload_0
      40: getfield      #2                  // Field val$channel:Lio/netty/channel/Channel;
      43: invokeinterface #11,  1           // InterfaceMethod io/netty/channel/Channel.close:()Lio/netty/channel/ChannelFuture;
      48: pop
      49: aload_0
      50: getfield      #3                  // Field val$promise:Lio/netty/util/concurrent/Promise;
      53: getstatic     #12                 // Field io/netty/channel/pool/FixedChannelPool.POOL_CLOSED_ON_RELEASE_EXCEPTION:Ljava/lang/IllegalStateException;
      56: invokeinterface #13,  2           // InterfaceMethod io/netty/util/concurrent/Promise.setFailure:(Ljava/lang/Throwable;)Lio/netty/util/concurrent/Promise;
      61: pop
      62: return
      63: aload_1
      64: invokeinterface #14,  1           // InterfaceMethod io/netty/util/concurrent/Future.isSuccess:()Z
      69: ifeq          93
      72: aload_0
      73: getfield      #1                  // Field this$0:Lio/netty/channel/pool/FixedChannelPool;
      76: invokestatic  #15                 // Method io/netty/channel/pool/FixedChannelPool.access$600:(Lio/netty/channel/pool/FixedChannelPool;)V
      79: aload_0
      80: getfield      #3                  // Field val$promise:Lio/netty/util/concurrent/Promise;
      83: aconst_null
      84: invokeinterface #16,  2           // InterfaceMethod io/netty/util/concurrent/Promise.setSuccess:(Ljava/lang/Object;)Lio/netty/util/concurrent/Promise;
      89: pop
      90: goto          130
      93: aload_1
      94: invokeinterface #17,  1           // InterfaceMethod io/netty/util/concurrent/Future.cause:()Ljava/lang/Throwable;
      99: astore_2
     100: aload_2
     101: instanceof    #18                 // class java/lang/IllegalArgumentException
     104: ifne          114
     107: aload_0
     108: getfield      #1                  // Field this$0:Lio/netty/channel/pool/FixedChannelPool;
     111: invokestatic  #15                 // Method io/netty/channel/pool/FixedChannelPool.access$600:(Lio/netty/channel/pool/FixedChannelPool;)V
     114: aload_0
     115: getfield      #3                  // Field val$promise:Lio/netty/util/concurrent/Promise;
     118: aload_1
     119: invokeinterface #17,  1           // InterfaceMethod io/netty/util/concurrent/Future.cause:()Ljava/lang/Throwable;
     124: invokeinterface #13,  2           // InterfaceMethod io/netty/util/concurrent/Promise.setFailure:(Ljava/lang/Throwable;)Lio/netty/util/concurrent/Promise;
     129: pop
     130: return

  static {};
    Code:
       0: ldc           #19                 // class io/netty/channel/pool/FixedChannelPool
       2: invokevirtual #20                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #5                  // Field $assertionsDisabled:Z
      16: return
}
