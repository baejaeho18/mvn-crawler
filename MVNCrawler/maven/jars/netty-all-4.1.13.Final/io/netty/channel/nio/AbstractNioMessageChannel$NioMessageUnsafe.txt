Compiled from "AbstractNioMessageChannel.java"
final class io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe extends io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe {
  private final java.util.List<java.lang.Object> readBuf;

  static final boolean $assertionsDisabled;

  final io.netty.channel.nio.AbstractNioMessageChannel this$0;

  private io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe(io.netty.channel.nio.AbstractNioMessageChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lio/netty/channel/nio/AbstractNioMessageChannel;
       5: aload_0
       6: aload_1
       7: invokespecial #3                  // Method io/netty/channel/nio/AbstractNioChannel$AbstractNioUnsafe."<init>":(Lio/netty/channel/nio/AbstractNioChannel;)V
      10: aload_0
      11: new           #4                  // class java/util/ArrayList
      14: dup
      15: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      18: putfield      #6                  // Field readBuf:Ljava/util/List;
      21: return

  public void read();
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          27
       6: aload_0
       7: getfield      #2                  // Field this$0:Lio/netty/channel/nio/AbstractNioMessageChannel;
      10: invokevirtual #8                  // Method io/netty/channel/nio/AbstractNioMessageChannel.eventLoop:()Lio/netty/channel/nio/NioEventLoop;
      13: invokevirtual #9                  // Method io/netty/channel/nio/NioEventLoop.inEventLoop:()Z
      16: ifne          27
      19: new           #10                 // class java/lang/AssertionError
      22: dup
      23: invokespecial #11                 // Method java/lang/AssertionError."<init>":()V
      26: athrow
      27: aload_0
      28: getfield      #2                  // Field this$0:Lio/netty/channel/nio/AbstractNioMessageChannel;
      31: invokevirtual #12                 // Method io/netty/channel/nio/AbstractNioMessageChannel.config:()Lio/netty/channel/ChannelConfig;
      34: astore_1
      35: aload_0
      36: getfield      #2                  // Field this$0:Lio/netty/channel/nio/AbstractNioMessageChannel;
      39: invokevirtual #13                 // Method io/netty/channel/nio/AbstractNioMessageChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
      42: astore_2
      43: aload_0
      44: getfield      #2                  // Field this$0:Lio/netty/channel/nio/AbstractNioMessageChannel;
      47: invokevirtual #14                 // Method io/netty/channel/nio/AbstractNioMessageChannel.unsafe:()Lio/netty/channel/nio/AbstractNioChannel$NioUnsafe;
      50: invokeinterface #15,  1           // InterfaceMethod io/netty/channel/nio/AbstractNioChannel$NioUnsafe.recvBufAllocHandle:()Lio/netty/channel/RecvByteBufAllocator$Handle;
      55: astore_3
      56: aload_3
      57: aload_1
      58: invokeinterface #16,  2           // InterfaceMethod io/netty/channel/RecvByteBufAllocator$Handle.reset:(Lio/netty/channel/ChannelConfig;)V
      63: iconst_0
      64: istore        4
      66: aconst_null
      67: astore        5
      69: aload_0
      70: getfield      #2                  // Field this$0:Lio/netty/channel/nio/AbstractNioMessageChannel;
      73: aload_0
      74: getfield      #6                  // Field readBuf:Ljava/util/List;
      77: invokevirtual #17                 // Method io/netty/channel/nio/AbstractNioMessageChannel.doReadMessages:(Ljava/util/List;)I
      80: istore        6
      82: iload         6
      84: ifne          90
      87: goto          118
      90: iload         6
      92: ifge          101
      95: iconst_1
      96: istore        4
      98: goto          118
     101: aload_3
     102: iload         6
     104: invokeinterface #18,  2           // InterfaceMethod io/netty/channel/RecvByteBufAllocator$Handle.incMessagesRead:(I)V
     109: aload_3
     110: invokeinterface #19,  1           // InterfaceMethod io/netty/channel/RecvByteBufAllocator$Handle.continueReading:()Z
     115: ifne          69
     118: goto          127
     121: astore        6
     123: aload         6
     125: astore        5
     127: aload_0
     128: getfield      #6                  // Field readBuf:Ljava/util/List;
     131: invokeinterface #21,  1           // InterfaceMethod java/util/List.size:()I
     136: istore        6
     138: iconst_0
     139: istore        7
     141: iload         7
     143: iload         6
     145: if_icmpge     180
     148: aload_0
     149: getfield      #2                  // Field this$0:Lio/netty/channel/nio/AbstractNioMessageChannel;
     152: iconst_0
     153: putfield      #22                 // Field io/netty/channel/nio/AbstractNioMessageChannel.readPending:Z
     156: aload_2
     157: aload_0
     158: getfield      #6                  // Field readBuf:Ljava/util/List;
     161: iload         7
     163: invokeinterface #23,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     168: invokeinterface #24,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelPipeline;
     173: pop
     174: iinc          7, 1
     177: goto          141
     180: aload_0
     181: getfield      #6                  // Field readBuf:Ljava/util/List;
     184: invokeinterface #25,  1           // InterfaceMethod java/util/List.clear:()V
     189: aload_3
     190: invokeinterface #26,  1           // InterfaceMethod io/netty/channel/RecvByteBufAllocator$Handle.readComplete:()V
     195: aload_2
     196: invokeinterface #27,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelReadComplete:()Lio/netty/channel/ChannelPipeline;
     201: pop
     202: aload         5
     204: ifnull        227
     207: aload_0
     208: getfield      #2                  // Field this$0:Lio/netty/channel/nio/AbstractNioMessageChannel;
     211: aload         5
     213: invokevirtual #28                 // Method io/netty/channel/nio/AbstractNioMessageChannel.closeOnReadError:(Ljava/lang/Throwable;)Z
     216: istore        4
     218: aload_2
     219: aload         5
     221: invokeinterface #29,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPipeline;
     226: pop
     227: iload         4
     229: ifeq          258
     232: aload_0
     233: getfield      #2                  // Field this$0:Lio/netty/channel/nio/AbstractNioMessageChannel;
     236: iconst_1
     237: putfield      #30                 // Field io/netty/channel/nio/AbstractNioMessageChannel.inputShutdown:Z
     240: aload_0
     241: getfield      #2                  // Field this$0:Lio/netty/channel/nio/AbstractNioMessageChannel;
     244: invokevirtual #31                 // Method io/netty/channel/nio/AbstractNioMessageChannel.isOpen:()Z
     247: ifeq          258
     250: aload_0
     251: aload_0
     252: invokevirtual #32                 // Method voidPromise:()Lio/netty/channel/ChannelPromise;
     255: invokevirtual #33                 // Method close:(Lio/netty/channel/ChannelPromise;)V
     258: aload_0
     259: getfield      #2                  // Field this$0:Lio/netty/channel/nio/AbstractNioMessageChannel;
     262: getfield      #22                 // Field io/netty/channel/nio/AbstractNioMessageChannel.readPending:Z
     265: ifne          312
     268: aload_1
     269: invokeinterface #34,  1           // InterfaceMethod io/netty/channel/ChannelConfig.isAutoRead:()Z
     274: ifne          312
     277: aload_0
     278: invokevirtual #35                 // Method removeReadOp:()V
     281: goto          312
     284: astore        8
     286: aload_0
     287: getfield      #2                  // Field this$0:Lio/netty/channel/nio/AbstractNioMessageChannel;
     290: getfield      #22                 // Field io/netty/channel/nio/AbstractNioMessageChannel.readPending:Z
     293: ifne          309
     296: aload_1
     297: invokeinterface #34,  1           // InterfaceMethod io/netty/channel/ChannelConfig.isAutoRead:()Z
     302: ifne          309
     305: aload_0
     306: invokevirtual #35                 // Method removeReadOp:()V
     309: aload         8
     311: athrow
     312: return
    Exception table:
       from    to  target type
          69   118   121   Class java/lang/Throwable
          69   258   284   any
         284   286   284   any

  io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe(io.netty.channel.nio.AbstractNioMessageChannel, io.netty.channel.nio.AbstractNioMessageChannel$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lio/netty/channel/nio/AbstractNioMessageChannel;)V
       5: return

  static {};
    Code:
       0: ldc           #36                 // class io/netty/channel/nio/AbstractNioMessageChannel
       2: invokevirtual #37                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #7                  // Field $assertionsDisabled:Z
      16: return
}
