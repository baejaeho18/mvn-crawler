Compiled from "AbstractNioByteChannel.java"
public class io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe extends io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe {
  final io.netty.channel.nio.AbstractNioByteChannel this$0;

  protected io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe(io.netty.channel.nio.AbstractNioByteChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/netty/channel/nio/AbstractNioByteChannel;
       5: aload_0
       6: aload_1
       7: invokespecial #2                  // Method io/netty/channel/nio/AbstractNioChannel$AbstractNioUnsafe."<init>":(Lio/netty/channel/nio/AbstractNioChannel;)V
      10: return

  private void closeOnRead(io.netty.channel.ChannelPipeline);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/netty/channel/nio/AbstractNioByteChannel;
       4: invokevirtual #3                  // Method io/netty/channel/nio/AbstractNioByteChannel.isInputShutdown0:()Z
       7: ifne          66
      10: getstatic     #4                  // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      13: aload_0
      14: getfield      #1                  // Field this$0:Lio/netty/channel/nio/AbstractNioByteChannel;
      17: invokevirtual #5                  // Method io/netty/channel/nio/AbstractNioByteChannel.config:()Lio/netty/channel/ChannelConfig;
      20: getstatic     #6                  // Field io/netty/channel/ChannelOption.ALLOW_HALF_CLOSURE:Lio/netty/channel/ChannelOption;
      23: invokeinterface #7,  2            // InterfaceMethod io/netty/channel/ChannelConfig.getOption:(Lio/netty/channel/ChannelOption;)Ljava/lang/Object;
      28: invokevirtual #8                  // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
      31: ifeq          55
      34: aload_0
      35: getfield      #1                  // Field this$0:Lio/netty/channel/nio/AbstractNioByteChannel;
      38: invokevirtual #9                  // Method io/netty/channel/nio/AbstractNioByteChannel.shutdownInput:()Lio/netty/channel/ChannelFuture;
      41: pop
      42: aload_1
      43: getstatic     #10                 // Field io/netty/channel/socket/ChannelInputShutdownEvent.INSTANCE:Lio/netty/channel/socket/ChannelInputShutdownEvent;
      46: invokeinterface #11,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireUserEventTriggered:(Ljava/lang/Object;)Lio/netty/channel/ChannelPipeline;
      51: pop
      52: goto          76
      55: aload_0
      56: aload_0
      57: invokevirtual #12                 // Method voidPromise:()Lio/netty/channel/ChannelPromise;
      60: invokevirtual #13                 // Method close:(Lio/netty/channel/ChannelPromise;)V
      63: goto          76
      66: aload_1
      67: getstatic     #14                 // Field io/netty/channel/socket/ChannelInputShutdownReadComplete.INSTANCE:Lio/netty/channel/socket/ChannelInputShutdownReadComplete;
      70: invokeinterface #11,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireUserEventTriggered:(Ljava/lang/Object;)Lio/netty/channel/ChannelPipeline;
      75: pop
      76: return

  private void handleReadException(io.netty.channel.ChannelPipeline, io.netty.buffer.ByteBuf, java.lang.Throwable, boolean, io.netty.channel.RecvByteBufAllocator$Handle);
    Code:
       0: aload_2
       1: ifnull        35
       4: aload_2
       5: invokevirtual #15                 // Method io/netty/buffer/ByteBuf.isReadable:()Z
       8: ifeq          30
      11: aload_0
      12: getfield      #1                  // Field this$0:Lio/netty/channel/nio/AbstractNioByteChannel;
      15: iconst_0
      16: putfield      #16                 // Field io/netty/channel/nio/AbstractNioByteChannel.readPending:Z
      19: aload_1
      20: aload_2
      21: invokeinterface #17,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelPipeline;
      26: pop
      27: goto          35
      30: aload_2
      31: invokevirtual #18                 // Method io/netty/buffer/ByteBuf.release:()Z
      34: pop
      35: aload         5
      37: invokeinterface #19,  1           // InterfaceMethod io/netty/channel/RecvByteBufAllocator$Handle.readComplete:()V
      42: aload_1
      43: invokeinterface #20,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelReadComplete:()Lio/netty/channel/ChannelPipeline;
      48: pop
      49: aload_1
      50: aload_3
      51: invokeinterface #21,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPipeline;
      56: pop
      57: iload         4
      59: ifne          69
      62: aload_3
      63: instanceof    #22                 // class java/io/IOException
      66: ifeq          74
      69: aload_0
      70: aload_1
      71: invokespecial #23                 // Method closeOnRead:(Lio/netty/channel/ChannelPipeline;)V
      74: return

  public final void read();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/netty/channel/nio/AbstractNioByteChannel;
       4: invokevirtual #5                  // Method io/netty/channel/nio/AbstractNioByteChannel.config:()Lio/netty/channel/ChannelConfig;
       7: astore_1
       8: aload_0
       9: getfield      #1                  // Field this$0:Lio/netty/channel/nio/AbstractNioByteChannel;
      12: invokevirtual #24                 // Method io/netty/channel/nio/AbstractNioByteChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
      15: astore_2
      16: aload_1
      17: invokeinterface #25,  1           // InterfaceMethod io/netty/channel/ChannelConfig.getAllocator:()Lio/netty/buffer/ByteBufAllocator;
      22: astore_3
      23: aload_0
      24: invokevirtual #26                 // Method recvBufAllocHandle:()Lio/netty/channel/RecvByteBufAllocator$Handle;
      27: astore        4
      29: aload         4
      31: aload_1
      32: invokeinterface #27,  2           // InterfaceMethod io/netty/channel/RecvByteBufAllocator$Handle.reset:(Lio/netty/channel/ChannelConfig;)V
      37: aconst_null
      38: astore        5
      40: iconst_0
      41: istore        6
      43: aload         4
      45: aload_3
      46: invokeinterface #28,  2           // InterfaceMethod io/netty/channel/RecvByteBufAllocator$Handle.allocate:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/buffer/ByteBuf;
      51: astore        5
      53: aload         4
      55: aload_0
      56: getfield      #1                  // Field this$0:Lio/netty/channel/nio/AbstractNioByteChannel;
      59: aload         5
      61: invokevirtual #29                 // Method io/netty/channel/nio/AbstractNioByteChannel.doReadBytes:(Lio/netty/buffer/ByteBuf;)I
      64: invokeinterface #30,  2           // InterfaceMethod io/netty/channel/RecvByteBufAllocator$Handle.lastBytesRead:(I)V
      69: aload         4
      71: invokeinterface #31,  1           // InterfaceMethod io/netty/channel/RecvByteBufAllocator$Handle.lastBytesRead:()I
      76: ifgt          108
      79: aload         5
      81: invokevirtual #18                 // Method io/netty/buffer/ByteBuf.release:()Z
      84: pop
      85: aconst_null
      86: astore        5
      88: aload         4
      90: invokeinterface #31,  1           // InterfaceMethod io/netty/channel/RecvByteBufAllocator$Handle.lastBytesRead:()I
      95: ifge          102
      98: iconst_1
      99: goto          103
     102: iconst_0
     103: istore        6
     105: goto          146
     108: aload         4
     110: iconst_1
     111: invokeinterface #32,  2           // InterfaceMethod io/netty/channel/RecvByteBufAllocator$Handle.incMessagesRead:(I)V
     116: aload_0
     117: getfield      #1                  // Field this$0:Lio/netty/channel/nio/AbstractNioByteChannel;
     120: iconst_0
     121: putfield      #16                 // Field io/netty/channel/nio/AbstractNioByteChannel.readPending:Z
     124: aload_2
     125: aload         5
     127: invokeinterface #17,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelPipeline;
     132: pop
     133: aconst_null
     134: astore        5
     136: aload         4
     138: invokeinterface #33,  1           // InterfaceMethod io/netty/channel/RecvByteBufAllocator$Handle.continueReading:()Z
     143: ifne          43
     146: aload         4
     148: invokeinterface #19,  1           // InterfaceMethod io/netty/channel/RecvByteBufAllocator$Handle.readComplete:()V
     153: aload_2
     154: invokeinterface #20,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelReadComplete:()Lio/netty/channel/ChannelPipeline;
     159: pop
     160: iload         6
     162: ifeq          170
     165: aload_0
     166: aload_2
     167: invokespecial #23                 // Method closeOnRead:(Lio/netty/channel/ChannelPipeline;)V
     170: aload_0
     171: getfield      #1                  // Field this$0:Lio/netty/channel/nio/AbstractNioByteChannel;
     174: getfield      #16                 // Field io/netty/channel/nio/AbstractNioByteChannel.readPending:Z
     177: ifne          265
     180: aload_1
     181: invokeinterface #34,  1           // InterfaceMethod io/netty/channel/ChannelConfig.isAutoRead:()Z
     186: ifne          265
     189: aload_0
     190: invokevirtual #35                 // Method removeReadOp:()V
     193: goto          265
     196: astore        7
     198: aload_0
     199: aload_2
     200: aload         5
     202: aload         7
     204: iload         6
     206: aload         4
     208: invokespecial #37                 // Method handleReadException:(Lio/netty/channel/ChannelPipeline;Lio/netty/buffer/ByteBuf;Ljava/lang/Throwable;ZLio/netty/channel/RecvByteBufAllocator$Handle;)V
     211: aload_0
     212: getfield      #1                  // Field this$0:Lio/netty/channel/nio/AbstractNioByteChannel;
     215: getfield      #16                 // Field io/netty/channel/nio/AbstractNioByteChannel.readPending:Z
     218: ifne          265
     221: aload_1
     222: invokeinterface #34,  1           // InterfaceMethod io/netty/channel/ChannelConfig.isAutoRead:()Z
     227: ifne          265
     230: aload_0
     231: invokevirtual #35                 // Method removeReadOp:()V
     234: goto          265
     237: astore        8
     239: aload_0
     240: getfield      #1                  // Field this$0:Lio/netty/channel/nio/AbstractNioByteChannel;
     243: getfield      #16                 // Field io/netty/channel/nio/AbstractNioByteChannel.readPending:Z
     246: ifne          262
     249: aload_1
     250: invokeinterface #34,  1           // InterfaceMethod io/netty/channel/ChannelConfig.isAutoRead:()Z
     255: ifne          262
     258: aload_0
     259: invokevirtual #35                 // Method removeReadOp:()V
     262: aload         8
     264: athrow
     265: return
    Exception table:
       from    to  target type
          43   170   196   Class java/lang/Throwable
          43   170   237   any
         196   211   237   any
         237   239   237   any
}
