Compiled from "DefaultChannelGroup.java"
public class io.netty.channel.group.DefaultChannelGroup extends java.util.AbstractSet<io.netty.channel.Channel> implements io.netty.channel.group.ChannelGroup {
  private static final java.util.concurrent.atomic.AtomicInteger nextId;

  private final java.lang.String name;

  private final io.netty.util.concurrent.EventExecutor executor;

  private final java.util.concurrent.ConcurrentMap<io.netty.channel.ChannelId, io.netty.channel.Channel> serverChannels;

  private final java.util.concurrent.ConcurrentMap<io.netty.channel.ChannelId, io.netty.channel.Channel> nonServerChannels;

  private final io.netty.channel.ChannelFutureListener remover;

  private final io.netty.channel.group.VoidChannelGroupFuture voidFuture;

  private final boolean stayClosed;

  private volatile boolean closed;

  public io.netty.channel.group.DefaultChannelGroup(io.netty.util.concurrent.EventExecutor);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #1                  // Method "<init>":(Lio/netty/util/concurrent/EventExecutor;Z)V
       6: return

  public io.netty.channel.group.DefaultChannelGroup(java.lang.String, io.netty.util.concurrent.EventExecutor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokespecial #2                  // Method "<init>":(Ljava/lang/String;Lio/netty/util/concurrent/EventExecutor;Z)V
       7: return

  public io.netty.channel.group.DefaultChannelGroup(io.netty.util.concurrent.EventExecutor, boolean);
    Code:
       0: aload_0
       1: new           #3                  // class java/lang/StringBuilder
       4: dup
       5: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
       8: ldc           #5                  // String group-0x
      10: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: getstatic     #7                  // Field nextId:Ljava/util/concurrent/atomic/AtomicInteger;
      16: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      19: invokestatic  #9                  // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      22: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: aload_1
      29: iload_2
      30: invokespecial #2                  // Method "<init>":(Ljava/lang/String;Lio/netty/util/concurrent/EventExecutor;Z)V
      33: return

  public io.netty.channel.group.DefaultChannelGroup(java.lang.String, io.netty.util.concurrent.EventExecutor, boolean);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method java/util/AbstractSet."<init>":()V
       4: aload_0
       5: invokestatic  #12                 // Method io/netty/util/internal/PlatformDependent.newConcurrentHashMap:()Ljava/util/concurrent/ConcurrentMap;
       8: putfield      #13                 // Field serverChannels:Ljava/util/concurrent/ConcurrentMap;
      11: aload_0
      12: invokestatic  #12                 // Method io/netty/util/internal/PlatformDependent.newConcurrentHashMap:()Ljava/util/concurrent/ConcurrentMap;
      15: putfield      #14                 // Field nonServerChannels:Ljava/util/concurrent/ConcurrentMap;
      18: aload_0
      19: new           #15                 // class io/netty/channel/group/DefaultChannelGroup$1
      22: dup
      23: aload_0
      24: invokespecial #16                 // Method io/netty/channel/group/DefaultChannelGroup$1."<init>":(Lio/netty/channel/group/DefaultChannelGroup;)V
      27: putfield      #17                 // Field remover:Lio/netty/channel/ChannelFutureListener;
      30: aload_0
      31: new           #18                 // class io/netty/channel/group/VoidChannelGroupFuture
      34: dup
      35: aload_0
      36: invokespecial #19                 // Method io/netty/channel/group/VoidChannelGroupFuture."<init>":(Lio/netty/channel/group/ChannelGroup;)V
      39: putfield      #20                 // Field voidFuture:Lio/netty/channel/group/VoidChannelGroupFuture;
      42: aload_1
      43: ifnonnull     56
      46: new           #21                 // class java/lang/NullPointerException
      49: dup
      50: ldc           #22                 // String name
      52: invokespecial #23                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: aload_0
      57: aload_1
      58: putfield      #24                 // Field name:Ljava/lang/String;
      61: aload_0
      62: aload_2
      63: putfield      #25                 // Field executor:Lio/netty/util/concurrent/EventExecutor;
      66: aload_0
      67: iload_3
      68: putfield      #26                 // Field stayClosed:Z
      71: return

  public java.lang.String name();
    Code:
       0: aload_0
       1: getfield      #24                 // Field name:Ljava/lang/String;
       4: areturn

  public io.netty.channel.Channel find(io.netty.channel.ChannelId);
    Code:
       0: aload_0
       1: getfield      #14                 // Field nonServerChannels:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #27,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #28                 // class io/netty/channel/Channel
      13: astore_2
      14: aload_2
      15: ifnull        20
      18: aload_2
      19: areturn
      20: aload_0
      21: getfield      #13                 // Field serverChannels:Ljava/util/concurrent/ConcurrentMap;
      24: aload_1
      25: invokeinterface #27,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      30: checkcast     #28                 // class io/netty/channel/Channel
      33: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #14                 // Field nonServerChannels:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #29,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.isEmpty:()Z
       9: ifeq          28
      12: aload_0
      13: getfield      #13                 // Field serverChannels:Ljava/util/concurrent/ConcurrentMap;
      16: invokeinterface #29,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.isEmpty:()Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #14                 // Field nonServerChannels:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #30,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.size:()I
       9: aload_0
      10: getfield      #13                 // Field serverChannels:Ljava/util/concurrent/ConcurrentMap;
      13: invokeinterface #30,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.size:()I
      18: iadd
      19: ireturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #28                 // class io/netty/channel/Channel
       4: ifeq          41
       7: aload_1
       8: checkcast     #28                 // class io/netty/channel/Channel
      11: astore_2
      12: aload_1
      13: instanceof    #31                 // class io/netty/channel/ServerChannel
      16: ifeq          30
      19: aload_0
      20: getfield      #13                 // Field serverChannels:Ljava/util/concurrent/ConcurrentMap;
      23: aload_2
      24: invokeinterface #32,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.containsValue:(Ljava/lang/Object;)Z
      29: ireturn
      30: aload_0
      31: getfield      #14                 // Field nonServerChannels:Ljava/util/concurrent/ConcurrentMap;
      34: aload_2
      35: invokeinterface #32,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.containsValue:(Ljava/lang/Object;)Z
      40: ireturn
      41: iconst_0
      42: ireturn

  public boolean add(io.netty.channel.Channel);
    Code:
       0: aload_1
       1: instanceof    #31                 // class io/netty/channel/ServerChannel
       4: ifeq          14
       7: aload_0
       8: getfield      #13                 // Field serverChannels:Ljava/util/concurrent/ConcurrentMap;
      11: goto          18
      14: aload_0
      15: getfield      #14                 // Field nonServerChannels:Ljava/util/concurrent/ConcurrentMap;
      18: astore_2
      19: aload_2
      20: aload_1
      21: invokeinterface #33,  1           // InterfaceMethod io/netty/channel/Channel.id:()Lio/netty/channel/ChannelId;
      26: aload_1
      27: invokeinterface #34,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      32: ifnonnull     39
      35: iconst_1
      36: goto          40
      39: iconst_0
      40: istore_3
      41: iload_3
      42: ifeq          61
      45: aload_1
      46: invokeinterface #35,  1           // InterfaceMethod io/netty/channel/Channel.closeFuture:()Lio/netty/channel/ChannelFuture;
      51: aload_0
      52: getfield      #17                 // Field remover:Lio/netty/channel/ChannelFutureListener;
      55: invokeinterface #36,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
      60: pop
      61: aload_0
      62: getfield      #26                 // Field stayClosed:Z
      65: ifeq          82
      68: aload_0
      69: getfield      #37                 // Field closed:Z
      72: ifeq          82
      75: aload_1
      76: invokeinterface #38,  1           // InterfaceMethod io/netty/channel/Channel.close:()Lio/netty/channel/ChannelFuture;
      81: pop
      82: iload_3
      83: ireturn

  public boolean remove(java.lang.Object);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_1
       3: instanceof    #39                 // class io/netty/channel/ChannelId
       6: ifeq          44
       9: aload_0
      10: getfield      #14                 // Field nonServerChannels:Ljava/util/concurrent/ConcurrentMap;
      13: aload_1
      14: invokeinterface #40,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #28                 // class io/netty/channel/Channel
      22: astore_2
      23: aload_2
      24: ifnonnull     104
      27: aload_0
      28: getfield      #13                 // Field serverChannels:Ljava/util/concurrent/ConcurrentMap;
      31: aload_1
      32: invokeinterface #40,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      37: checkcast     #28                 // class io/netty/channel/Channel
      40: astore_2
      41: goto          104
      44: aload_1
      45: instanceof    #28                 // class io/netty/channel/Channel
      48: ifeq          104
      51: aload_1
      52: checkcast     #28                 // class io/netty/channel/Channel
      55: astore_2
      56: aload_2
      57: instanceof    #31                 // class io/netty/channel/ServerChannel
      60: ifeq          85
      63: aload_0
      64: getfield      #13                 // Field serverChannels:Ljava/util/concurrent/ConcurrentMap;
      67: aload_2
      68: invokeinterface #33,  1           // InterfaceMethod io/netty/channel/Channel.id:()Lio/netty/channel/ChannelId;
      73: invokeinterface #40,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      78: checkcast     #28                 // class io/netty/channel/Channel
      81: astore_2
      82: goto          104
      85: aload_0
      86: getfield      #14                 // Field nonServerChannels:Ljava/util/concurrent/ConcurrentMap;
      89: aload_2
      90: invokeinterface #33,  1           // InterfaceMethod io/netty/channel/Channel.id:()Lio/netty/channel/ChannelId;
      95: invokeinterface #40,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     100: checkcast     #28                 // class io/netty/channel/Channel
     103: astore_2
     104: aload_2
     105: ifnonnull     110
     108: iconst_0
     109: ireturn
     110: aload_2
     111: invokeinterface #35,  1           // InterfaceMethod io/netty/channel/Channel.closeFuture:()Lio/netty/channel/ChannelFuture;
     116: aload_0
     117: getfield      #17                 // Field remover:Lio/netty/channel/ChannelFutureListener;
     120: invokeinterface #41,  2           // InterfaceMethod io/netty/channel/ChannelFuture.removeListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
     125: pop
     126: iconst_1
     127: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #14                 // Field nonServerChannels:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #42,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
       9: aload_0
      10: getfield      #13                 // Field serverChannels:Ljava/util/concurrent/ConcurrentMap;
      13: invokeinterface #42,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
      18: return

  public java.util.Iterator<io.netty.channel.Channel> iterator();
    Code:
       0: new           #43                 // class io/netty/channel/group/CombinedIterator
       3: dup
       4: aload_0
       5: getfield      #13                 // Field serverChannels:Ljava/util/concurrent/ConcurrentMap;
       8: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      13: invokeinterface #45,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      18: aload_0
      19: getfield      #14                 // Field nonServerChannels:Ljava/util/concurrent/ConcurrentMap;
      22: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      27: invokeinterface #45,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      32: invokespecial #46                 // Method io/netty/channel/group/CombinedIterator."<init>":(Ljava/util/Iterator;Ljava/util/Iterator;)V
      35: areturn

  public java.lang.Object[] toArray();
    Code:
       0: new           #47                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: invokevirtual #48                 // Method size:()I
       8: invokespecial #49                 // Method java/util/ArrayList."<init>":(I)V
      11: astore_1
      12: aload_1
      13: aload_0
      14: getfield      #13                 // Field serverChannels:Ljava/util/concurrent/ConcurrentMap;
      17: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      22: invokeinterface #50,  2           // InterfaceMethod java/util/Collection.addAll:(Ljava/util/Collection;)Z
      27: pop
      28: aload_1
      29: aload_0
      30: getfield      #14                 // Field nonServerChannels:Ljava/util/concurrent/ConcurrentMap;
      33: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      38: invokeinterface #50,  2           // InterfaceMethod java/util/Collection.addAll:(Ljava/util/Collection;)Z
      43: pop
      44: aload_1
      45: invokeinterface #51,  1           // InterfaceMethod java/util/Collection.toArray:()[Ljava/lang/Object;
      50: areturn

  public <T> T[] toArray(T[]);
    Code:
       0: new           #47                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: invokevirtual #48                 // Method size:()I
       8: invokespecial #49                 // Method java/util/ArrayList."<init>":(I)V
      11: astore_2
      12: aload_2
      13: aload_0
      14: getfield      #13                 // Field serverChannels:Ljava/util/concurrent/ConcurrentMap;
      17: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      22: invokeinterface #50,  2           // InterfaceMethod java/util/Collection.addAll:(Ljava/util/Collection;)Z
      27: pop
      28: aload_2
      29: aload_0
      30: getfield      #14                 // Field nonServerChannels:Ljava/util/concurrent/ConcurrentMap;
      33: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      38: invokeinterface #50,  2           // InterfaceMethod java/util/Collection.addAll:(Ljava/util/Collection;)Z
      43: pop
      44: aload_2
      45: aload_1
      46: invokeinterface #52,  2           // InterfaceMethod java/util/Collection.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      51: areturn

  public io.netty.channel.group.ChannelGroupFuture close();
    Code:
       0: aload_0
       1: invokestatic  #53                 // Method io/netty/channel/group/ChannelMatchers.all:()Lio/netty/channel/group/ChannelMatcher;
       4: invokevirtual #54                 // Method close:(Lio/netty/channel/group/ChannelMatcher;)Lio/netty/channel/group/ChannelGroupFuture;
       7: areturn

  public io.netty.channel.group.ChannelGroupFuture disconnect();
    Code:
       0: aload_0
       1: invokestatic  #53                 // Method io/netty/channel/group/ChannelMatchers.all:()Lio/netty/channel/group/ChannelMatcher;
       4: invokevirtual #55                 // Method disconnect:(Lio/netty/channel/group/ChannelMatcher;)Lio/netty/channel/group/ChannelGroupFuture;
       7: areturn

  public io.netty.channel.group.ChannelGroupFuture deregister();
    Code:
       0: aload_0
       1: invokestatic  #53                 // Method io/netty/channel/group/ChannelMatchers.all:()Lio/netty/channel/group/ChannelMatcher;
       4: invokevirtual #56                 // Method deregister:(Lio/netty/channel/group/ChannelMatcher;)Lio/netty/channel/group/ChannelGroupFuture;
       7: areturn

  public io.netty.channel.group.ChannelGroupFuture write(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #53                 // Method io/netty/channel/group/ChannelMatchers.all:()Lio/netty/channel/group/ChannelMatcher;
       5: invokevirtual #57                 // Method write:(Ljava/lang/Object;Lio/netty/channel/group/ChannelMatcher;)Lio/netty/channel/group/ChannelGroupFuture;
       8: areturn

  private static java.lang.Object safeDuplicate(java.lang.Object);
    Code:
       0: aload_0
       1: instanceof    #58                 // class io/netty/buffer/ByteBuf
       4: ifeq          15
       7: aload_0
       8: checkcast     #58                 // class io/netty/buffer/ByteBuf
      11: invokevirtual #59                 // Method io/netty/buffer/ByteBuf.retainedDuplicate:()Lio/netty/buffer/ByteBuf;
      14: areturn
      15: aload_0
      16: instanceof    #60                 // class io/netty/buffer/ByteBufHolder
      19: ifeq          32
      22: aload_0
      23: checkcast     #60                 // class io/netty/buffer/ByteBufHolder
      26: invokeinterface #61,  1           // InterfaceMethod io/netty/buffer/ByteBufHolder.retainedDuplicate:()Lio/netty/buffer/ByteBufHolder;
      31: areturn
      32: aload_0
      33: invokestatic  #62                 // Method io/netty/util/ReferenceCountUtil.retain:(Ljava/lang/Object;)Ljava/lang/Object;
      36: areturn

  public io.netty.channel.group.ChannelGroupFuture write(java.lang.Object, io.netty.channel.group.ChannelMatcher);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokevirtual #63                 // Method write:(Ljava/lang/Object;Lio/netty/channel/group/ChannelMatcher;Z)Lio/netty/channel/group/ChannelGroupFuture;
       7: areturn

  public io.netty.channel.group.ChannelGroupFuture write(java.lang.Object, io.netty.channel.group.ChannelMatcher, boolean);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #21                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #64                 // String message
      10: invokespecial #23                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_2
      15: ifnonnull     28
      18: new           #21                 // class java/lang/NullPointerException
      21: dup
      22: ldc           #65                 // String matcher
      24: invokespecial #23                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: iload_3
      29: ifeq          112
      32: aload_0
      33: getfield      #14                 // Field nonServerChannels:Ljava/util/concurrent/ConcurrentMap;
      36: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      41: invokeinterface #45,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      46: astore        5
      48: aload         5
      50: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      55: ifeq          103
      58: aload         5
      60: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      65: checkcast     #28                 // class io/netty/channel/Channel
      68: astore        6
      70: aload_2
      71: aload         6
      73: invokeinterface #68,  2           // InterfaceMethod io/netty/channel/group/ChannelMatcher.matches:(Lio/netty/channel/Channel;)Z
      78: ifeq          100
      81: aload         6
      83: aload_1
      84: invokestatic  #69                 // Method safeDuplicate:(Ljava/lang/Object;)Ljava/lang/Object;
      87: aload         6
      89: invokeinterface #70,  1           // InterfaceMethod io/netty/channel/Channel.voidPromise:()Lio/netty/channel/ChannelPromise;
      94: invokeinterface #71,  3           // InterfaceMethod io/netty/channel/Channel.write:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      99: pop
     100: goto          48
     103: aload_0
     104: getfield      #20                 // Field voidFuture:Lio/netty/channel/group/VoidChannelGroupFuture;
     107: astore        4
     109: goto          214
     112: new           #72                 // class java/util/LinkedHashMap
     115: dup
     116: aload_0
     117: invokevirtual #48                 // Method size:()I
     120: invokespecial #73                 // Method java/util/LinkedHashMap."<init>":(I)V
     123: astore        5
     125: aload_0
     126: getfield      #14                 // Field nonServerChannels:Ljava/util/concurrent/ConcurrentMap;
     129: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
     134: invokeinterface #45,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     139: astore        6
     141: aload         6
     143: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     148: ifeq          198
     151: aload         6
     153: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     158: checkcast     #28                 // class io/netty/channel/Channel
     161: astore        7
     163: aload_2
     164: aload         7
     166: invokeinterface #68,  2           // InterfaceMethod io/netty/channel/group/ChannelMatcher.matches:(Lio/netty/channel/Channel;)Z
     171: ifeq          195
     174: aload         5
     176: aload         7
     178: aload         7
     180: aload_1
     181: invokestatic  #69                 // Method safeDuplicate:(Ljava/lang/Object;)Ljava/lang/Object;
     184: invokeinterface #74,  2           // InterfaceMethod io/netty/channel/Channel.write:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
     189: invokeinterface #75,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     194: pop
     195: goto          141
     198: new           #76                 // class io/netty/channel/group/DefaultChannelGroupFuture
     201: dup
     202: aload_0
     203: aload         5
     205: aload_0
     206: getfield      #25                 // Field executor:Lio/netty/util/concurrent/EventExecutor;
     209: invokespecial #77                 // Method io/netty/channel/group/DefaultChannelGroupFuture."<init>":(Lio/netty/channel/group/ChannelGroup;Ljava/util/Map;Lio/netty/util/concurrent/EventExecutor;)V
     212: astore        4
     214: aload_1
     215: invokestatic  #78                 // Method io/netty/util/ReferenceCountUtil.release:(Ljava/lang/Object;)Z
     218: pop
     219: aload         4
     221: areturn

  public io.netty.channel.group.ChannelGroup flush();
    Code:
       0: aload_0
       1: invokestatic  #53                 // Method io/netty/channel/group/ChannelMatchers.all:()Lio/netty/channel/group/ChannelMatcher;
       4: invokevirtual #79                 // Method flush:(Lio/netty/channel/group/ChannelMatcher;)Lio/netty/channel/group/ChannelGroup;
       7: areturn

  public io.netty.channel.group.ChannelGroupFuture flushAndWrite(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #80                 // Method writeAndFlush:(Ljava/lang/Object;)Lio/netty/channel/group/ChannelGroupFuture;
       5: areturn

  public io.netty.channel.group.ChannelGroupFuture writeAndFlush(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #53                 // Method io/netty/channel/group/ChannelMatchers.all:()Lio/netty/channel/group/ChannelMatcher;
       5: invokevirtual #81                 // Method writeAndFlush:(Ljava/lang/Object;Lio/netty/channel/group/ChannelMatcher;)Lio/netty/channel/group/ChannelGroupFuture;
       8: areturn

  public io.netty.channel.group.ChannelGroupFuture disconnect(io.netty.channel.group.ChannelMatcher);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #21                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #65                 // String matcher
      10: invokespecial #23                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: new           #72                 // class java/util/LinkedHashMap
      17: dup
      18: aload_0
      19: invokevirtual #48                 // Method size:()I
      22: invokespecial #73                 // Method java/util/LinkedHashMap."<init>":(I)V
      25: astore_2
      26: aload_0
      27: getfield      #13                 // Field serverChannels:Ljava/util/concurrent/ConcurrentMap;
      30: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      35: invokeinterface #45,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      40: astore_3
      41: aload_3
      42: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      47: ifeq          91
      50: aload_3
      51: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      56: checkcast     #28                 // class io/netty/channel/Channel
      59: astore        4
      61: aload_1
      62: aload         4
      64: invokeinterface #68,  2           // InterfaceMethod io/netty/channel/group/ChannelMatcher.matches:(Lio/netty/channel/Channel;)Z
      69: ifeq          88
      72: aload_2
      73: aload         4
      75: aload         4
      77: invokeinterface #82,  1           // InterfaceMethod io/netty/channel/Channel.disconnect:()Lio/netty/channel/ChannelFuture;
      82: invokeinterface #75,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      87: pop
      88: goto          41
      91: aload_0
      92: getfield      #14                 // Field nonServerChannels:Ljava/util/concurrent/ConcurrentMap;
      95: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
     100: invokeinterface #45,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     105: astore_3
     106: aload_3
     107: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     112: ifeq          156
     115: aload_3
     116: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     121: checkcast     #28                 // class io/netty/channel/Channel
     124: astore        4
     126: aload_1
     127: aload         4
     129: invokeinterface #68,  2           // InterfaceMethod io/netty/channel/group/ChannelMatcher.matches:(Lio/netty/channel/Channel;)Z
     134: ifeq          153
     137: aload_2
     138: aload         4
     140: aload         4
     142: invokeinterface #82,  1           // InterfaceMethod io/netty/channel/Channel.disconnect:()Lio/netty/channel/ChannelFuture;
     147: invokeinterface #75,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     152: pop
     153: goto          106
     156: new           #76                 // class io/netty/channel/group/DefaultChannelGroupFuture
     159: dup
     160: aload_0
     161: aload_2
     162: aload_0
     163: getfield      #25                 // Field executor:Lio/netty/util/concurrent/EventExecutor;
     166: invokespecial #77                 // Method io/netty/channel/group/DefaultChannelGroupFuture."<init>":(Lio/netty/channel/group/ChannelGroup;Ljava/util/Map;Lio/netty/util/concurrent/EventExecutor;)V
     169: areturn

  public io.netty.channel.group.ChannelGroupFuture close(io.netty.channel.group.ChannelMatcher);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #21                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #65                 // String matcher
      10: invokespecial #23                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: new           #72                 // class java/util/LinkedHashMap
      17: dup
      18: aload_0
      19: invokevirtual #48                 // Method size:()I
      22: invokespecial #73                 // Method java/util/LinkedHashMap."<init>":(I)V
      25: astore_2
      26: aload_0
      27: getfield      #26                 // Field stayClosed:Z
      30: ifeq          38
      33: aload_0
      34: iconst_1
      35: putfield      #37                 // Field closed:Z
      38: aload_0
      39: getfield      #13                 // Field serverChannels:Ljava/util/concurrent/ConcurrentMap;
      42: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      47: invokeinterface #45,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      52: astore_3
      53: aload_3
      54: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      59: ifeq          103
      62: aload_3
      63: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      68: checkcast     #28                 // class io/netty/channel/Channel
      71: astore        4
      73: aload_1
      74: aload         4
      76: invokeinterface #68,  2           // InterfaceMethod io/netty/channel/group/ChannelMatcher.matches:(Lio/netty/channel/Channel;)Z
      81: ifeq          100
      84: aload_2
      85: aload         4
      87: aload         4
      89: invokeinterface #38,  1           // InterfaceMethod io/netty/channel/Channel.close:()Lio/netty/channel/ChannelFuture;
      94: invokeinterface #75,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      99: pop
     100: goto          53
     103: aload_0
     104: getfield      #14                 // Field nonServerChannels:Ljava/util/concurrent/ConcurrentMap;
     107: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
     112: invokeinterface #45,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     117: astore_3
     118: aload_3
     119: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     124: ifeq          168
     127: aload_3
     128: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     133: checkcast     #28                 // class io/netty/channel/Channel
     136: astore        4
     138: aload_1
     139: aload         4
     141: invokeinterface #68,  2           // InterfaceMethod io/netty/channel/group/ChannelMatcher.matches:(Lio/netty/channel/Channel;)Z
     146: ifeq          165
     149: aload_2
     150: aload         4
     152: aload         4
     154: invokeinterface #38,  1           // InterfaceMethod io/netty/channel/Channel.close:()Lio/netty/channel/ChannelFuture;
     159: invokeinterface #75,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     164: pop
     165: goto          118
     168: new           #76                 // class io/netty/channel/group/DefaultChannelGroupFuture
     171: dup
     172: aload_0
     173: aload_2
     174: aload_0
     175: getfield      #25                 // Field executor:Lio/netty/util/concurrent/EventExecutor;
     178: invokespecial #77                 // Method io/netty/channel/group/DefaultChannelGroupFuture."<init>":(Lio/netty/channel/group/ChannelGroup;Ljava/util/Map;Lio/netty/util/concurrent/EventExecutor;)V
     181: areturn

  public io.netty.channel.group.ChannelGroupFuture deregister(io.netty.channel.group.ChannelMatcher);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #21                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #65                 // String matcher
      10: invokespecial #23                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: new           #72                 // class java/util/LinkedHashMap
      17: dup
      18: aload_0
      19: invokevirtual #48                 // Method size:()I
      22: invokespecial #73                 // Method java/util/LinkedHashMap."<init>":(I)V
      25: astore_2
      26: aload_0
      27: getfield      #13                 // Field serverChannels:Ljava/util/concurrent/ConcurrentMap;
      30: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      35: invokeinterface #45,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      40: astore_3
      41: aload_3
      42: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      47: ifeq          91
      50: aload_3
      51: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      56: checkcast     #28                 // class io/netty/channel/Channel
      59: astore        4
      61: aload_1
      62: aload         4
      64: invokeinterface #68,  2           // InterfaceMethod io/netty/channel/group/ChannelMatcher.matches:(Lio/netty/channel/Channel;)Z
      69: ifeq          88
      72: aload_2
      73: aload         4
      75: aload         4
      77: invokeinterface #83,  1           // InterfaceMethod io/netty/channel/Channel.deregister:()Lio/netty/channel/ChannelFuture;
      82: invokeinterface #75,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      87: pop
      88: goto          41
      91: aload_0
      92: getfield      #14                 // Field nonServerChannels:Ljava/util/concurrent/ConcurrentMap;
      95: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
     100: invokeinterface #45,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     105: astore_3
     106: aload_3
     107: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     112: ifeq          156
     115: aload_3
     116: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     121: checkcast     #28                 // class io/netty/channel/Channel
     124: astore        4
     126: aload_1
     127: aload         4
     129: invokeinterface #68,  2           // InterfaceMethod io/netty/channel/group/ChannelMatcher.matches:(Lio/netty/channel/Channel;)Z
     134: ifeq          153
     137: aload_2
     138: aload         4
     140: aload         4
     142: invokeinterface #83,  1           // InterfaceMethod io/netty/channel/Channel.deregister:()Lio/netty/channel/ChannelFuture;
     147: invokeinterface #75,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     152: pop
     153: goto          106
     156: new           #76                 // class io/netty/channel/group/DefaultChannelGroupFuture
     159: dup
     160: aload_0
     161: aload_2
     162: aload_0
     163: getfield      #25                 // Field executor:Lio/netty/util/concurrent/EventExecutor;
     166: invokespecial #77                 // Method io/netty/channel/group/DefaultChannelGroupFuture."<init>":(Lio/netty/channel/group/ChannelGroup;Ljava/util/Map;Lio/netty/util/concurrent/EventExecutor;)V
     169: areturn

  public io.netty.channel.group.ChannelGroup flush(io.netty.channel.group.ChannelMatcher);
    Code:
       0: aload_0
       1: getfield      #14                 // Field nonServerChannels:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
       9: invokeinterface #45,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          54
      24: aload_2
      25: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #28                 // class io/netty/channel/Channel
      33: astore_3
      34: aload_1
      35: aload_3
      36: invokeinterface #68,  2           // InterfaceMethod io/netty/channel/group/ChannelMatcher.matches:(Lio/netty/channel/Channel;)Z
      41: ifeq          51
      44: aload_3
      45: invokeinterface #84,  1           // InterfaceMethod io/netty/channel/Channel.flush:()Lio/netty/channel/Channel;
      50: pop
      51: goto          15
      54: aload_0
      55: areturn

  public io.netty.channel.group.ChannelGroupFuture flushAndWrite(java.lang.Object, io.netty.channel.group.ChannelMatcher);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #81                 // Method writeAndFlush:(Ljava/lang/Object;Lio/netty/channel/group/ChannelMatcher;)Lio/netty/channel/group/ChannelGroupFuture;
       6: areturn

  public io.netty.channel.group.ChannelGroupFuture writeAndFlush(java.lang.Object, io.netty.channel.group.ChannelMatcher);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokevirtual #85                 // Method writeAndFlush:(Ljava/lang/Object;Lio/netty/channel/group/ChannelMatcher;Z)Lio/netty/channel/group/ChannelGroupFuture;
       7: areturn

  public io.netty.channel.group.ChannelGroupFuture writeAndFlush(java.lang.Object, io.netty.channel.group.ChannelMatcher, boolean);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #21                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #64                 // String message
      10: invokespecial #23                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: iload_3
      15: ifeq          98
      18: aload_0
      19: getfield      #14                 // Field nonServerChannels:Ljava/util/concurrent/ConcurrentMap;
      22: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      27: invokeinterface #45,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      32: astore        5
      34: aload         5
      36: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      41: ifeq          89
      44: aload         5
      46: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      51: checkcast     #28                 // class io/netty/channel/Channel
      54: astore        6
      56: aload_2
      57: aload         6
      59: invokeinterface #68,  2           // InterfaceMethod io/netty/channel/group/ChannelMatcher.matches:(Lio/netty/channel/Channel;)Z
      64: ifeq          86
      67: aload         6
      69: aload_1
      70: invokestatic  #69                 // Method safeDuplicate:(Ljava/lang/Object;)Ljava/lang/Object;
      73: aload         6
      75: invokeinterface #70,  1           // InterfaceMethod io/netty/channel/Channel.voidPromise:()Lio/netty/channel/ChannelPromise;
      80: invokeinterface #86,  3           // InterfaceMethod io/netty/channel/Channel.writeAndFlush:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      85: pop
      86: goto          34
      89: aload_0
      90: getfield      #20                 // Field voidFuture:Lio/netty/channel/group/VoidChannelGroupFuture;
      93: astore        4
      95: goto          200
      98: new           #72                 // class java/util/LinkedHashMap
     101: dup
     102: aload_0
     103: invokevirtual #48                 // Method size:()I
     106: invokespecial #73                 // Method java/util/LinkedHashMap."<init>":(I)V
     109: astore        5
     111: aload_0
     112: getfield      #14                 // Field nonServerChannels:Ljava/util/concurrent/ConcurrentMap;
     115: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
     120: invokeinterface #45,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     125: astore        6
     127: aload         6
     129: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     134: ifeq          184
     137: aload         6
     139: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     144: checkcast     #28                 // class io/netty/channel/Channel
     147: astore        7
     149: aload_2
     150: aload         7
     152: invokeinterface #68,  2           // InterfaceMethod io/netty/channel/group/ChannelMatcher.matches:(Lio/netty/channel/Channel;)Z
     157: ifeq          181
     160: aload         5
     162: aload         7
     164: aload         7
     166: aload_1
     167: invokestatic  #69                 // Method safeDuplicate:(Ljava/lang/Object;)Ljava/lang/Object;
     170: invokeinterface #87,  2           // InterfaceMethod io/netty/channel/Channel.writeAndFlush:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
     175: invokeinterface #75,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     180: pop
     181: goto          127
     184: new           #76                 // class io/netty/channel/group/DefaultChannelGroupFuture
     187: dup
     188: aload_0
     189: aload         5
     191: aload_0
     192: getfield      #25                 // Field executor:Lio/netty/util/concurrent/EventExecutor;
     195: invokespecial #77                 // Method io/netty/channel/group/DefaultChannelGroupFuture."<init>":(Lio/netty/channel/group/ChannelGroup;Ljava/util/Map;Lio/netty/util/concurrent/EventExecutor;)V
     198: astore        4
     200: aload_1
     201: invokestatic  #78                 // Method io/netty/util/ReferenceCountUtil.release:(Ljava/lang/Object;)Z
     204: pop
     205: aload         4
     207: areturn

  public io.netty.channel.group.ChannelGroupFuture newCloseFuture();
    Code:
       0: aload_0
       1: invokestatic  #53                 // Method io/netty/channel/group/ChannelMatchers.all:()Lio/netty/channel/group/ChannelMatcher;
       4: invokevirtual #88                 // Method newCloseFuture:(Lio/netty/channel/group/ChannelMatcher;)Lio/netty/channel/group/ChannelGroupFuture;
       7: areturn

  public io.netty.channel.group.ChannelGroupFuture newCloseFuture(io.netty.channel.group.ChannelMatcher);
    Code:
       0: new           #72                 // class java/util/LinkedHashMap
       3: dup
       4: aload_0
       5: invokevirtual #48                 // Method size:()I
       8: invokespecial #73                 // Method java/util/LinkedHashMap."<init>":(I)V
      11: astore_2
      12: aload_0
      13: getfield      #13                 // Field serverChannels:Ljava/util/concurrent/ConcurrentMap;
      16: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      21: invokeinterface #45,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      26: astore_3
      27: aload_3
      28: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          77
      36: aload_3
      37: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #28                 // class io/netty/channel/Channel
      45: astore        4
      47: aload_1
      48: aload         4
      50: invokeinterface #68,  2           // InterfaceMethod io/netty/channel/group/ChannelMatcher.matches:(Lio/netty/channel/Channel;)Z
      55: ifeq          74
      58: aload_2
      59: aload         4
      61: aload         4
      63: invokeinterface #35,  1           // InterfaceMethod io/netty/channel/Channel.closeFuture:()Lio/netty/channel/ChannelFuture;
      68: invokeinterface #75,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      73: pop
      74: goto          27
      77: aload_0
      78: getfield      #14                 // Field nonServerChannels:Ljava/util/concurrent/ConcurrentMap;
      81: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      86: invokeinterface #45,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      91: astore_3
      92: aload_3
      93: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      98: ifeq          142
     101: aload_3
     102: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     107: checkcast     #28                 // class io/netty/channel/Channel
     110: astore        4
     112: aload_1
     113: aload         4
     115: invokeinterface #68,  2           // InterfaceMethod io/netty/channel/group/ChannelMatcher.matches:(Lio/netty/channel/Channel;)Z
     120: ifeq          139
     123: aload_2
     124: aload         4
     126: aload         4
     128: invokeinterface #35,  1           // InterfaceMethod io/netty/channel/Channel.closeFuture:()Lio/netty/channel/ChannelFuture;
     133: invokeinterface #75,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     138: pop
     139: goto          92
     142: new           #76                 // class io/netty/channel/group/DefaultChannelGroupFuture
     145: dup
     146: aload_0
     147: aload_2
     148: aload_0
     149: getfield      #25                 // Field executor:Lio/netty/util/concurrent/EventExecutor;
     152: invokespecial #77                 // Method io/netty/channel/group/DefaultChannelGroupFuture."<init>":(Lio/netty/channel/group/ChannelGroup;Ljava/util/Map;Lio/netty/util/concurrent/EventExecutor;)V
     155: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokestatic  #89                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
       4: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: ireturn

  public int compareTo(io.netty.channel.group.ChannelGroup);
    Code:
       0: aload_0
       1: invokevirtual #90                 // Method name:()Ljava/lang/String;
       4: aload_1
       5: invokeinterface #91,  1           // InterfaceMethod io/netty/channel/group/ChannelGroup.name:()Ljava/lang/String;
      10: invokevirtual #92                 // Method java/lang/String.compareTo:(Ljava/lang/String;)I
      13: istore_2
      14: iload_2
      15: ifeq          20
      18: iload_2
      19: ireturn
      20: aload_0
      21: invokestatic  #89                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
      24: aload_1
      25: invokestatic  #89                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
      28: isub
      29: ireturn

  public java.lang.String toString();
    Code:
       0: new           #3                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokestatic  #93                 // Method io/netty/util/internal/StringUtil.simpleClassName:(Ljava/lang/Object;)Ljava/lang/String;
      11: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #94                 // String (name:
      16: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: invokevirtual #90                 // Method name:()Ljava/lang/String;
      23: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc           #95                 // String , size:
      28: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: invokevirtual #48                 // Method size:()I
      35: invokevirtual #96                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      38: bipush        41
      40: invokevirtual #97                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      43: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: areturn

  public boolean add(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #28                 // class io/netty/channel/Channel
       5: invokevirtual #98                 // Method add:(Lio/netty/channel/Channel;)Z
       8: ireturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #99                 // class io/netty/channel/group/ChannelGroup
       5: invokevirtual #100                // Method compareTo:(Lio/netty/channel/group/ChannelGroup;)I
       8: ireturn

  static {};
    Code:
       0: new           #101                // class java/util/concurrent/atomic/AtomicInteger
       3: dup
       4: invokespecial #102                // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
       7: putstatic     #7                  // Field nextId:Ljava/util/concurrent/atomic/AtomicInteger;
      10: return
}
