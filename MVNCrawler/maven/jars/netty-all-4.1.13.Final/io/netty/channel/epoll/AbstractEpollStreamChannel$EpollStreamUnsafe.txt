Compiled from "AbstractEpollStreamChannel.java"
class io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe extends io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe {
  static final boolean $assertionsDisabled;

  final io.netty.channel.epoll.AbstractEpollStreamChannel this$0;

  io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe(io.netty.channel.epoll.AbstractEpollStreamChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
       5: aload_0
       6: aload_1
       7: invokespecial #2                  // Method io/netty/channel/epoll/AbstractEpollChannel$AbstractEpollUnsafe."<init>":(Lio/netty/channel/epoll/AbstractEpollChannel;)V
      10: return

  protected java.util.concurrent.Executor prepareToClose();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method io/netty/channel/epoll/AbstractEpollChannel$AbstractEpollUnsafe.prepareToClose:()Ljava/util/concurrent/Executor;
       4: areturn

  private void handleReadException(io.netty.channel.ChannelPipeline, io.netty.buffer.ByteBuf, java.lang.Throwable, boolean, io.netty.channel.epoll.EpollRecvByteAllocatorHandle);
    Code:
       0: aload_2
       1: ifnull        32
       4: aload_2
       5: invokevirtual #4                  // Method io/netty/buffer/ByteBuf.isReadable:()Z
       8: ifeq          27
      11: aload_0
      12: iconst_0
      13: putfield      #5                  // Field readPending:Z
      16: aload_1
      17: aload_2
      18: invokeinterface #6,  2            // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelPipeline;
      23: pop
      24: goto          32
      27: aload_2
      28: invokevirtual #7                  // Method io/netty/buffer/ByteBuf.release:()Z
      31: pop
      32: aload         5
      34: invokevirtual #8                  // Method io/netty/channel/epoll/EpollRecvByteAllocatorHandle.readComplete:()V
      37: aload_1
      38: invokeinterface #9,  1            // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelReadComplete:()Lio/netty/channel/ChannelPipeline;
      43: pop
      44: aload_1
      45: aload_3
      46: invokeinterface #10,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPipeline;
      51: pop
      52: iload         4
      54: ifne          64
      57: aload_3
      58: instanceof    #11                 // class java/io/IOException
      61: ifeq          69
      64: aload_0
      65: iconst_0
      66: invokevirtual #12                 // Method shutdownInput:(Z)V
      69: return

  public void connect(java.net.SocketAddress, java.net.SocketAddress, io.netty.channel.ChannelPromise);
    Code:
       0: aload_3
       1: invokeinterface #13,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setUncancellable:()Z
       6: ifeq          17
       9: aload_0
      10: aload_3
      11: invokevirtual #14                 // Method ensureOpen:(Lio/netty/channel/ChannelPromise;)Z
      14: ifne          18
      17: return
      18: aload_0
      19: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
      22: invokestatic  #15                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$400:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;)Lio/netty/channel/ChannelPromise;
      25: ifnull        36
      28: new           #16                 // class java/nio/channels/ConnectionPendingException
      31: dup
      32: invokespecial #17                 // Method java/nio/channels/ConnectionPendingException."<init>":()V
      35: athrow
      36: aload_0
      37: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
      40: invokevirtual #18                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.isActive:()Z
      43: istore        4
      45: aload_0
      46: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
      49: aload_1
      50: aload_2
      51: invokevirtual #19                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.doConnect:(Ljava/net/SocketAddress;Ljava/net/SocketAddress;)Z
      54: ifeq          67
      57: aload_0
      58: aload_3
      59: iload         4
      61: invokespecial #20                 // Method fulfillConnectPromise:(Lio/netty/channel/ChannelPromise;Z)V
      64: goto          152
      67: aload_0
      68: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
      71: aload_3
      72: invokestatic  #21                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$402:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelPromise;
      75: pop
      76: aload_0
      77: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
      80: aload_1
      81: invokestatic  #22                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$502:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;Ljava/net/SocketAddress;)Ljava/net/SocketAddress;
      84: pop
      85: aload_0
      86: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
      89: invokevirtual #23                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.config:()Lio/netty/channel/epoll/EpollChannelConfig;
      92: invokevirtual #24                 // Method io/netty/channel/epoll/EpollChannelConfig.getConnectTimeoutMillis:()I
      95: istore        5
      97: iload         5
      99: ifle          137
     102: aload_0
     103: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
     106: aload_0
     107: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
     110: invokevirtual #25                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.eventLoop:()Lio/netty/channel/EventLoop;
     113: new           #26                 // class io/netty/channel/epoll/AbstractEpollStreamChannel$EpollStreamUnsafe$1
     116: dup
     117: aload_0
     118: aload_1
     119: invokespecial #27                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel$EpollStreamUnsafe$1."<init>":(Lio/netty/channel/epoll/AbstractEpollStreamChannel$EpollStreamUnsafe;Ljava/net/SocketAddress;)V
     122: iload         5
     124: i2l
     125: getstatic     #28                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     128: invokeinterface #29,  5           // InterfaceMethod io/netty/channel/EventLoop.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/netty/util/concurrent/ScheduledFuture;
     133: invokestatic  #30                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$602:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;Ljava/util/concurrent/ScheduledFuture;)Ljava/util/concurrent/ScheduledFuture;
     136: pop
     137: aload_3
     138: new           #31                 // class io/netty/channel/epoll/AbstractEpollStreamChannel$EpollStreamUnsafe$2
     141: dup
     142: aload_0
     143: invokespecial #32                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel$EpollStreamUnsafe$2."<init>":(Lio/netty/channel/epoll/AbstractEpollStreamChannel$EpollStreamUnsafe;)V
     146: invokeinterface #33,  2           // InterfaceMethod io/netty/channel/ChannelPromise.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelPromise;
     151: pop
     152: goto          175
     155: astore        4
     157: aload_0
     158: invokevirtual #35                 // Method closeIfClosed:()V
     161: aload_3
     162: aload_0
     163: aload         4
     165: aload_1
     166: invokevirtual #36                 // Method annotateConnectException:(Ljava/lang/Throwable;Ljava/net/SocketAddress;)Ljava/lang/Throwable;
     169: invokeinterface #37,  2           // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
     174: pop
     175: return
    Exception table:
       from    to  target type
          18   152   155   Class java/lang/Throwable

  private void fulfillConnectPromise(io.netty.channel.ChannelPromise, boolean);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
       9: iconst_1
      10: putfield      #38                 // Field io/netty/channel/epoll/AbstractEpollStreamChannel.active:Z
      13: aload_0
      14: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
      17: invokevirtual #18                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.isActive:()Z
      20: istore_3
      21: aload_1
      22: invokeinterface #39,  1           // InterfaceMethod io/netty/channel/ChannelPromise.trySuccess:()Z
      27: istore        4
      29: iload_2
      30: ifne          50
      33: iload_3
      34: ifeq          50
      37: aload_0
      38: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
      41: invokevirtual #40                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
      44: invokeinterface #41,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelActive:()Lio/netty/channel/ChannelPipeline;
      49: pop
      50: iload         4
      52: ifne          63
      55: aload_0
      56: aload_0
      57: invokevirtual #42                 // Method voidPromise:()Lio/netty/channel/ChannelPromise;
      60: invokevirtual #43                 // Method close:(Lio/netty/channel/ChannelPromise;)V
      63: return

  private void fulfillConnectPromise(io.netty.channel.ChannelPromise, java.lang.Throwable);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_1
       6: aload_2
       7: invokeinterface #37,  2           // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
      12: pop
      13: aload_0
      14: invokevirtual #35                 // Method closeIfClosed:()V
      17: return

  private void finishConnect();
    Code:
       0: getstatic     #44                 // Field $assertionsDisabled:Z
       3: ifne          29
       6: aload_0
       7: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
      10: invokevirtual #25                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.eventLoop:()Lio/netty/channel/EventLoop;
      13: invokeinterface #45,  1           // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
      18: ifne          29
      21: new           #46                 // class java/lang/AssertionError
      24: dup
      25: invokespecial #47                 // Method java/lang/AssertionError."<init>":()V
      28: athrow
      29: iconst_0
      30: istore_1
      31: aload_0
      32: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
      35: invokevirtual #18                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.isActive:()Z
      38: istore_2
      39: aload_0
      40: invokevirtual #48                 // Method doFinishConnect:()Z
      43: ifne          86
      46: iconst_1
      47: istore_1
      48: iload_1
      49: ifne          85
      52: aload_0
      53: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
      56: invokestatic  #49                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$600:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;)Ljava/util/concurrent/ScheduledFuture;
      59: ifnull        76
      62: aload_0
      63: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
      66: invokestatic  #49                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$600:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;)Ljava/util/concurrent/ScheduledFuture;
      69: iconst_0
      70: invokeinterface #50,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      75: pop
      76: aload_0
      77: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
      80: aconst_null
      81: invokestatic  #21                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$402:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelPromise;
      84: pop
      85: return
      86: aload_0
      87: aload_0
      88: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
      91: invokestatic  #15                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$400:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;)Lio/netty/channel/ChannelPromise;
      94: iload_2
      95: invokespecial #20                 // Method fulfillConnectPromise:(Lio/netty/channel/ChannelPromise;Z)V
      98: iload_1
      99: ifne          242
     102: aload_0
     103: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
     106: invokestatic  #49                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$600:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;)Ljava/util/concurrent/ScheduledFuture;
     109: ifnull        126
     112: aload_0
     113: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
     116: invokestatic  #49                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$600:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;)Ljava/util/concurrent/ScheduledFuture;
     119: iconst_0
     120: invokeinterface #50,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
     125: pop
     126: aload_0
     127: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
     130: aconst_null
     131: invokestatic  #21                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$402:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelPromise;
     134: pop
     135: goto          242
     138: astore_2
     139: aload_0
     140: aload_0
     141: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
     144: invokestatic  #15                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$400:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;)Lio/netty/channel/ChannelPromise;
     147: aload_0
     148: aload_2
     149: aload_0
     150: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
     153: invokestatic  #51                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$500:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;)Ljava/net/SocketAddress;
     156: invokevirtual #36                 // Method annotateConnectException:(Ljava/lang/Throwable;Ljava/net/SocketAddress;)Ljava/lang/Throwable;
     159: invokespecial #52                 // Method fulfillConnectPromise:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;)V
     162: iload_1
     163: ifne          242
     166: aload_0
     167: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
     170: invokestatic  #49                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$600:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;)Ljava/util/concurrent/ScheduledFuture;
     173: ifnull        190
     176: aload_0
     177: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
     180: invokestatic  #49                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$600:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;)Ljava/util/concurrent/ScheduledFuture;
     183: iconst_0
     184: invokeinterface #50,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
     189: pop
     190: aload_0
     191: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
     194: aconst_null
     195: invokestatic  #21                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$402:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelPromise;
     198: pop
     199: goto          242
     202: astore_3
     203: iload_1
     204: ifne          240
     207: aload_0
     208: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
     211: invokestatic  #49                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$600:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;)Ljava/util/concurrent/ScheduledFuture;
     214: ifnull        231
     217: aload_0
     218: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
     221: invokestatic  #49                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$600:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;)Ljava/util/concurrent/ScheduledFuture;
     224: iconst_0
     225: invokeinterface #50,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
     230: pop
     231: aload_0
     232: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
     235: aconst_null
     236: invokestatic  #21                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$402:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelPromise;
     239: pop
     240: aload_3
     241: athrow
     242: return
    Exception table:
       from    to  target type
          31    48   138   Class java/lang/Throwable
          86    98   138   Class java/lang/Throwable
          31    48   202   any
          86    98   202   any
         138   162   202   any

  void epollOutReady();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
       4: invokestatic  #15                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$400:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;)Lio/netty/channel/ChannelPromise;
       7: ifnull        17
      10: aload_0
      11: invokespecial #53                 // Method finishConnect:()V
      14: goto          21
      17: aload_0
      18: invokespecial #54                 // Method io/netty/channel/epoll/AbstractEpollChannel$AbstractEpollUnsafe.epollOutReady:()V
      21: return

  boolean doFinishConnect() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
       4: getfield      #55                 // Field io/netty/channel/epoll/AbstractEpollStreamChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
       7: invokevirtual #56                 // Method io/netty/channel/epoll/LinuxSocket.finishConnect:()Z
      10: ifeq          25
      13: aload_0
      14: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
      17: getstatic     #57                 // Field io/netty/channel/epoll/Native.EPOLLOUT:I
      20: invokevirtual #58                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.clearFlag:(I)V
      23: iconst_1
      24: ireturn
      25: aload_0
      26: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
      29: getstatic     #57                 // Field io/netty/channel/epoll/Native.EPOLLOUT:I
      32: invokevirtual #59                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.setFlag:(I)V
      35: iconst_0
      36: ireturn

  io.netty.channel.epoll.EpollRecvByteAllocatorHandle newEpollHandle(io.netty.channel.RecvByteBufAllocator$ExtendedHandle);
    Code:
       0: new           #60                 // class io/netty/channel/epoll/EpollRecvByteAllocatorStreamingHandle
       3: dup
       4: aload_1
       5: invokespecial #61                 // Method io/netty/channel/epoll/EpollRecvByteAllocatorStreamingHandle."<init>":(Lio/netty/channel/RecvByteBufAllocator$ExtendedHandle;)V
       8: areturn

  void epollInReady();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
       4: invokevirtual #23                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.config:()Lio/netty/channel/epoll/EpollChannelConfig;
       7: astore_1
       8: aload_0
       9: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
      12: aload_1
      13: invokevirtual #62                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.shouldBreakEpollInReady:(Lio/netty/channel/ChannelConfig;)Z
      16: ifeq          24
      19: aload_0
      20: invokevirtual #63                 // Method clearEpollIn0:()V
      23: return
      24: aload_0
      25: invokevirtual #64                 // Method recvBufAllocHandle:()Lio/netty/channel/epoll/EpollRecvByteAllocatorHandle;
      28: astore_2
      29: aload_2
      30: aload_0
      31: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
      34: getstatic     #65                 // Field io/netty/channel/epoll/Native.EPOLLET:I
      37: invokevirtual #66                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.isFlagSet:(I)Z
      40: invokevirtual #67                 // Method io/netty/channel/epoll/EpollRecvByteAllocatorHandle.edgeTriggered:(Z)V
      43: aload_0
      44: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
      47: invokevirtual #40                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
      50: astore_3
      51: aload_1
      52: invokeinterface #68,  1           // InterfaceMethod io/netty/channel/ChannelConfig.getAllocator:()Lio/netty/buffer/ByteBufAllocator;
      57: astore        4
      59: aload_2
      60: aload_1
      61: invokevirtual #69                 // Method io/netty/channel/epoll/EpollRecvByteAllocatorHandle.reset:(Lio/netty/channel/ChannelConfig;)V
      64: aload_0
      65: invokevirtual #70                 // Method epollInBefore:()V
      68: aconst_null
      69: astore        5
      71: iconst_0
      72: istore        6
      74: aload_0
      75: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
      78: invokestatic  #71                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$700:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;)Ljava/util/Queue;
      81: ifnull        141
      84: aload_0
      85: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
      88: invokestatic  #71                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$700:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;)Ljava/util/Queue;
      91: invokeinterface #72,  1           // InterfaceMethod java/util/Queue.peek:()Ljava/lang/Object;
      96: checkcast     #73                 // class io/netty/channel/epoll/AbstractEpollStreamChannel$SpliceInTask
      99: astore        7
     101: aload         7
     103: ifnull        141
     106: aload         7
     108: aload_2
     109: invokevirtual #74                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel$SpliceInTask.spliceIn:(Lio/netty/channel/RecvByteBufAllocator$Handle;)Z
     112: ifeq          238
     115: aload_0
     116: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
     119: invokevirtual #18                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.isActive:()Z
     122: ifeq          231
     125: aload_0
     126: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
     129: invokestatic  #71                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$700:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;)Ljava/util/Queue;
     132: invokeinterface #75,  1           // InterfaceMethod java/util/Queue.remove:()Ljava/lang/Object;
     137: pop
     138: goto          231
     141: aload_2
     142: aload         4
     144: invokevirtual #76                 // Method io/netty/channel/epoll/EpollRecvByteAllocatorHandle.allocate:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/buffer/ByteBuf;
     147: astore        5
     149: aload_2
     150: aload_0
     151: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
     154: aload         5
     156: invokevirtual #77                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.doReadBytes:(Lio/netty/buffer/ByteBuf;)I
     159: invokevirtual #78                 // Method io/netty/channel/epoll/EpollRecvByteAllocatorHandle.lastBytesRead:(I)V
     162: aload_2
     163: invokevirtual #79                 // Method io/netty/channel/epoll/EpollRecvByteAllocatorHandle.lastBytesRead:()I
     166: ifgt          195
     169: aload         5
     171: invokevirtual #7                  // Method io/netty/buffer/ByteBuf.release:()Z
     174: pop
     175: aconst_null
     176: astore        5
     178: aload_2
     179: invokevirtual #79                 // Method io/netty/channel/epoll/EpollRecvByteAllocatorHandle.lastBytesRead:()I
     182: ifge          189
     185: iconst_1
     186: goto          190
     189: iconst_0
     190: istore        6
     192: goto          238
     195: aload_2
     196: iconst_1
     197: invokevirtual #80                 // Method io/netty/channel/epoll/EpollRecvByteAllocatorHandle.incMessagesRead:(I)V
     200: aload_0
     201: iconst_0
     202: putfield      #5                  // Field readPending:Z
     205: aload_3
     206: aload         5
     208: invokeinterface #6,  2            // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelPipeline;
     213: pop
     214: aconst_null
     215: astore        5
     217: aload_0
     218: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
     221: aload_1
     222: invokevirtual #62                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.shouldBreakEpollInReady:(Lio/netty/channel/ChannelConfig;)Z
     225: ifeq          231
     228: goto          238
     231: aload_2
     232: invokevirtual #81                 // Method io/netty/channel/epoll/EpollRecvByteAllocatorHandle.continueReading:()Z
     235: ifne          74
     238: aload_2
     239: invokevirtual #8                  // Method io/netty/channel/epoll/EpollRecvByteAllocatorHandle.readComplete:()V
     242: aload_3
     243: invokeinterface #9,  1            // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelReadComplete:()Lio/netty/channel/ChannelPipeline;
     248: pop
     249: iload         6
     251: ifeq          259
     254: aload_0
     255: iconst_0
     256: invokevirtual #12                 // Method shutdownInput:(Z)V
     259: aload_0
     260: aload_1
     261: invokevirtual #82                 // Method epollInFinally:(Lio/netty/channel/ChannelConfig;)V
     264: goto          299
     267: astore        7
     269: aload_0
     270: aload_3
     271: aload         5
     273: aload         7
     275: iload         6
     277: aload_2
     278: invokespecial #83                 // Method handleReadException:(Lio/netty/channel/ChannelPipeline;Lio/netty/buffer/ByteBuf;Ljava/lang/Throwable;ZLio/netty/channel/epoll/EpollRecvByteAllocatorHandle;)V
     281: aload_0
     282: aload_1
     283: invokevirtual #82                 // Method epollInFinally:(Lio/netty/channel/ChannelConfig;)V
     286: goto          299
     289: astore        8
     291: aload_0
     292: aload_1
     293: invokevirtual #82                 // Method epollInFinally:(Lio/netty/channel/ChannelConfig;)V
     296: aload         8
     298: athrow
     299: return
    Exception table:
       from    to  target type
          74   259   267   Class java/lang/Throwable
          74   259   289   any
         267   281   289   any
         289   291   289   any

  static {};
    Code:
       0: ldc           #84                 // class io/netty/channel/epoll/AbstractEpollStreamChannel
       2: invokevirtual #85                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #44                 // Field $assertionsDisabled:Z
      16: return
}
