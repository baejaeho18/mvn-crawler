Compiled from "EpollDatagramChannel.java"
final class io.netty.channel.epoll.EpollDatagramChannel$EpollDatagramChannelUnsafe extends io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe {
  static final boolean $assertionsDisabled;

  final io.netty.channel.epoll.EpollDatagramChannel this$0;

  io.netty.channel.epoll.EpollDatagramChannel$EpollDatagramChannelUnsafe(io.netty.channel.epoll.EpollDatagramChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/netty/channel/epoll/EpollDatagramChannel;
       5: aload_0
       6: aload_1
       7: invokespecial #2                  // Method io/netty/channel/epoll/AbstractEpollChannel$AbstractEpollUnsafe."<init>":(Lio/netty/channel/epoll/AbstractEpollChannel;)V
      10: return

  public void connect(java.net.SocketAddress, java.net.SocketAddress, io.netty.channel.ChannelPromise);
    Code:
       0: iconst_0
       1: istore        4
       3: aload_0
       4: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/EpollDatagramChannel;
       7: invokevirtual #3                  // Method io/netty/channel/epoll/EpollDatagramChannel.isActive:()Z
      10: istore        5
      12: aload_1
      13: checkcast     #4                  // class java/net/InetSocketAddress
      16: astore        6
      18: aload_2
      19: ifnull        37
      22: aload_2
      23: checkcast     #4                  // class java/net/InetSocketAddress
      26: astore        7
      28: aload_0
      29: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/EpollDatagramChannel;
      32: aload         7
      34: invokevirtual #5                  // Method io/netty/channel/epoll/EpollDatagramChannel.doBind:(Ljava/net/SocketAddress;)V
      37: aload         6
      39: invokestatic  #6                  // Method io/netty/channel/epoll/AbstractEpollChannel.checkResolvable:(Ljava/net/InetSocketAddress;)V
      42: aload_0
      43: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/EpollDatagramChannel;
      46: aload         6
      48: invokestatic  #7                  // Method io/netty/channel/epoll/EpollDatagramChannel.access$002:(Lio/netty/channel/epoll/EpollDatagramChannel;Ljava/net/InetSocketAddress;)Ljava/net/InetSocketAddress;
      51: pop
      52: aload_0
      53: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/EpollDatagramChannel;
      56: aload_0
      57: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/EpollDatagramChannel;
      60: getfield      #8                  // Field io/netty/channel/epoll/EpollDatagramChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      63: invokevirtual #9                  // Method io/netty/channel/epoll/LinuxSocket.localAddress:()Ljava/net/InetSocketAddress;
      66: invokestatic  #10                 // Method io/netty/channel/epoll/EpollDatagramChannel.access$102:(Lio/netty/channel/epoll/EpollDatagramChannel;Ljava/net/InetSocketAddress;)Ljava/net/InetSocketAddress;
      69: pop
      70: iconst_1
      71: istore        4
      73: aload_3
      74: invokeinterface #11,  1           // InterfaceMethod io/netty/channel/ChannelPromise.trySuccess:()Z
      79: pop
      80: iload         5
      82: ifne          108
      85: aload_0
      86: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/EpollDatagramChannel;
      89: invokevirtual #3                  // Method io/netty/channel/epoll/EpollDatagramChannel.isActive:()Z
      92: ifeq          108
      95: aload_0
      96: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/EpollDatagramChannel;
      99: invokevirtual #12                 // Method io/netty/channel/epoll/EpollDatagramChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
     102: invokeinterface #13,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelActive:()Lio/netty/channel/ChannelPipeline;
     107: pop
     108: iload         4
     110: ifne          123
     113: aload_0
     114: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/EpollDatagramChannel;
     117: invokevirtual #14                 // Method io/netty/channel/epoll/EpollDatagramChannel.doClose:()V
     120: goto          164
     123: aload_0
     124: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/EpollDatagramChannel;
     127: iconst_1
     128: invokestatic  #15                 // Method io/netty/channel/epoll/EpollDatagramChannel.access$202:(Lio/netty/channel/epoll/EpollDatagramChannel;Z)Z
     131: pop
     132: goto          164
     135: astore        8
     137: iload         4
     139: ifne          152
     142: aload_0
     143: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/EpollDatagramChannel;
     146: invokevirtual #14                 // Method io/netty/channel/epoll/EpollDatagramChannel.doClose:()V
     149: goto          161
     152: aload_0
     153: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/EpollDatagramChannel;
     156: iconst_1
     157: invokestatic  #15                 // Method io/netty/channel/epoll/EpollDatagramChannel.access$202:(Lio/netty/channel/epoll/EpollDatagramChannel;Z)Z
     160: pop
     161: aload         8
     163: athrow
     164: goto          178
     167: astore        5
     169: aload_3
     170: aload         5
     172: invokeinterface #17,  2           // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
     177: pop
     178: return
    Exception table:
       from    to  target type
           3   108   135   any
         135   137   135   any
           3   164   167   Class java/lang/Throwable

  void epollInReady();
    Code:
       0: getstatic     #18                 // Field $assertionsDisabled:Z
       3: ifne          29
       6: aload_0
       7: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/EpollDatagramChannel;
      10: invokevirtual #19                 // Method io/netty/channel/epoll/EpollDatagramChannel.eventLoop:()Lio/netty/channel/EventLoop;
      13: invokeinterface #20,  1           // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
      18: ifne          29
      21: new           #21                 // class java/lang/AssertionError
      24: dup
      25: invokespecial #22                 // Method java/lang/AssertionError."<init>":()V
      28: athrow
      29: aload_0
      30: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/EpollDatagramChannel;
      33: invokevirtual #23                 // Method io/netty/channel/epoll/EpollDatagramChannel.config:()Lio/netty/channel/epoll/EpollDatagramChannelConfig;
      36: astore_1
      37: aload_0
      38: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/EpollDatagramChannel;
      41: aload_1
      42: invokevirtual #24                 // Method io/netty/channel/epoll/EpollDatagramChannel.shouldBreakEpollInReady:(Lio/netty/channel/ChannelConfig;)Z
      45: ifeq          53
      48: aload_0
      49: invokevirtual #25                 // Method clearEpollIn0:()V
      52: return
      53: aload_0
      54: invokevirtual #26                 // Method recvBufAllocHandle:()Lio/netty/channel/epoll/EpollRecvByteAllocatorHandle;
      57: astore_2
      58: aload_2
      59: aload_0
      60: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/EpollDatagramChannel;
      63: getstatic     #27                 // Field io/netty/channel/epoll/Native.EPOLLET:I
      66: invokevirtual #28                 // Method io/netty/channel/epoll/EpollDatagramChannel.isFlagSet:(I)Z
      69: invokevirtual #29                 // Method io/netty/channel/epoll/EpollRecvByteAllocatorHandle.edgeTriggered:(Z)V
      72: aload_0
      73: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/EpollDatagramChannel;
      76: invokevirtual #12                 // Method io/netty/channel/epoll/EpollDatagramChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
      79: astore_3
      80: aload_1
      81: invokeinterface #30,  1           // InterfaceMethod io/netty/channel/socket/DatagramChannelConfig.getAllocator:()Lio/netty/buffer/ByteBufAllocator;
      86: astore        4
      88: aload_2
      89: aload_1
      90: invokevirtual #31                 // Method io/netty/channel/epoll/EpollRecvByteAllocatorHandle.reset:(Lio/netty/channel/ChannelConfig;)V
      93: aload_0
      94: invokevirtual #32                 // Method epollInBefore:()V
      97: aconst_null
      98: astore        5
     100: aconst_null
     101: astore        6
     103: aload_2
     104: aload         4
     106: invokevirtual #33                 // Method io/netty/channel/epoll/EpollRecvByteAllocatorHandle.allocate:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/buffer/ByteBuf;
     109: astore        6
     111: aload_2
     112: aload         6
     114: invokevirtual #34                 // Method io/netty/buffer/ByteBuf.writableBytes:()I
     117: invokevirtual #35                 // Method io/netty/channel/epoll/EpollRecvByteAllocatorHandle.attemptedBytesRead:(I)V
     120: aload         6
     122: invokevirtual #36                 // Method io/netty/buffer/ByteBuf.hasMemoryAddress:()Z
     125: ifeq          158
     128: aload_0
     129: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/EpollDatagramChannel;
     132: getfield      #8                  // Field io/netty/channel/epoll/EpollDatagramChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
     135: aload         6
     137: invokevirtual #37                 // Method io/netty/buffer/ByteBuf.memoryAddress:()J
     140: aload         6
     142: invokevirtual #38                 // Method io/netty/buffer/ByteBuf.writerIndex:()I
     145: aload         6
     147: invokevirtual #39                 // Method io/netty/buffer/ByteBuf.capacity:()I
     150: invokevirtual #40                 // Method io/netty/channel/epoll/LinuxSocket.recvFromAddress:(JII)Lio/netty/channel/unix/DatagramSocketAddress;
     153: astore        7
     155: goto          199
     158: aload         6
     160: aload         6
     162: invokevirtual #38                 // Method io/netty/buffer/ByteBuf.writerIndex:()I
     165: aload         6
     167: invokevirtual #34                 // Method io/netty/buffer/ByteBuf.writableBytes:()I
     170: invokevirtual #41                 // Method io/netty/buffer/ByteBuf.internalNioBuffer:(II)Ljava/nio/ByteBuffer;
     173: astore        8
     175: aload_0
     176: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/EpollDatagramChannel;
     179: getfield      #8                  // Field io/netty/channel/epoll/EpollDatagramChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
     182: aload         8
     184: aload         8
     186: invokevirtual #42                 // Method java/nio/ByteBuffer.position:()I
     189: aload         8
     191: invokevirtual #43                 // Method java/nio/ByteBuffer.limit:()I
     194: invokevirtual #44                 // Method io/netty/channel/epoll/LinuxSocket.recvFrom:(Ljava/nio/ByteBuffer;II)Lio/netty/channel/unix/DatagramSocketAddress;
     197: astore        7
     199: aload         7
     201: ifnonnull     221
     204: aload_2
     205: iconst_m1
     206: invokevirtual #45                 // Method io/netty/channel/epoll/EpollRecvByteAllocatorHandle.lastBytesRead:(I)V
     209: aload         6
     211: invokevirtual #46                 // Method io/netty/buffer/ByteBuf.release:()Z
     214: pop
     215: aconst_null
     216: astore        6
     218: goto          291
     221: aload_2
     222: iconst_1
     223: invokevirtual #47                 // Method io/netty/channel/epoll/EpollRecvByteAllocatorHandle.incMessagesRead:(I)V
     226: aload_2
     227: aload         7
     229: invokevirtual #48                 // Method io/netty/channel/unix/DatagramSocketAddress.receivedAmount:()I
     232: invokevirtual #45                 // Method io/netty/channel/epoll/EpollRecvByteAllocatorHandle.lastBytesRead:(I)V
     235: aload         6
     237: aload         6
     239: invokevirtual #38                 // Method io/netty/buffer/ByteBuf.writerIndex:()I
     242: aload_2
     243: invokevirtual #49                 // Method io/netty/channel/epoll/EpollRecvByteAllocatorHandle.lastBytesRead:()I
     246: iadd
     247: invokevirtual #50                 // Method io/netty/buffer/ByteBuf.writerIndex:(I)Lio/netty/buffer/ByteBuf;
     250: pop
     251: aload_0
     252: iconst_0
     253: putfield      #51                 // Field readPending:Z
     256: aload_3
     257: new           #52                 // class io/netty/channel/socket/DatagramPacket
     260: dup
     261: aload         6
     263: aload_0
     264: invokevirtual #53                 // Method localAddress:()Ljava/net/SocketAddress;
     267: checkcast     #4                  // class java/net/InetSocketAddress
     270: aload         7
     272: invokespecial #54                 // Method io/netty/channel/socket/DatagramPacket."<init>":(Lio/netty/buffer/ByteBuf;Ljava/net/InetSocketAddress;Ljava/net/InetSocketAddress;)V
     275: invokeinterface #55,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelPipeline;
     280: pop
     281: aconst_null
     282: astore        6
     284: aload_2
     285: invokevirtual #56                 // Method io/netty/channel/epoll/EpollRecvByteAllocatorHandle.continueReading:()Z
     288: ifne          103
     291: goto          311
     294: astore        7
     296: aload         6
     298: ifnull        307
     301: aload         6
     303: invokevirtual #46                 // Method io/netty/buffer/ByteBuf.release:()Z
     306: pop
     307: aload         7
     309: astore        5
     311: aload_2
     312: invokevirtual #57                 // Method io/netty/channel/epoll/EpollRecvByteAllocatorHandle.readComplete:()V
     315: aload_3
     316: invokeinterface #58,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelReadComplete:()Lio/netty/channel/ChannelPipeline;
     321: pop
     322: aload         5
     324: ifnull        336
     327: aload_3
     328: aload         5
     330: invokeinterface #59,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPipeline;
     335: pop
     336: aload_0
     337: aload_1
     338: invokevirtual #60                 // Method epollInFinally:(Lio/netty/channel/ChannelConfig;)V
     341: goto          354
     344: astore        9
     346: aload_0
     347: aload_1
     348: invokevirtual #60                 // Method epollInFinally:(Lio/netty/channel/ChannelConfig;)V
     351: aload         9
     353: athrow
     354: return
    Exception table:
       from    to  target type
         103   291   294   Class java/lang/Throwable
         100   336   344   any
         344   346   344   any

  static {};
    Code:
       0: ldc           #61                 // class io/netty/channel/epoll/EpollDatagramChannel
       2: invokevirtual #62                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #18                 // Field $assertionsDisabled:Z
      16: return
}
