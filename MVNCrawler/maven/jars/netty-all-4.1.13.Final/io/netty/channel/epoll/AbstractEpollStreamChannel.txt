Compiled from "AbstractEpollStreamChannel.java"
public abstract class io.netty.channel.epoll.AbstractEpollStreamChannel extends io.netty.channel.epoll.AbstractEpollChannel implements io.netty.channel.socket.DuplexChannel {
  private static final io.netty.channel.ChannelMetadata METADATA;

  private static final java.lang.String EXPECTED_TYPES;

  private static final io.netty.util.internal.logging.InternalLogger logger;

  private static final java.nio.channels.ClosedChannelException DO_CLOSE_CLOSED_CHANNEL_EXCEPTION;

  private static final java.nio.channels.ClosedChannelException CLEAR_SPLICE_QUEUE_CLOSED_CHANNEL_EXCEPTION;

  private static final java.nio.channels.ClosedChannelException SPLICE_TO_CLOSED_CHANNEL_EXCEPTION;

  private static final java.nio.channels.ClosedChannelException FAIL_SPLICE_IF_CLOSED_CLOSED_CHANNEL_EXCEPTION;

  private io.netty.channel.ChannelPromise connectPromise;

  private java.util.concurrent.ScheduledFuture<?> connectTimeoutFuture;

  private java.net.SocketAddress requestedRemoteAddress;

  private java.util.Queue<io.netty.channel.epoll.AbstractEpollStreamChannel$SpliceInTask> spliceQueue;

  private io.netty.channel.unix.FileDescriptor pipeIn;

  private io.netty.channel.unix.FileDescriptor pipeOut;

  private java.nio.channels.WritableByteChannel byteChannel;

  static final boolean $assertionsDisabled;

  protected io.netty.channel.epoll.AbstractEpollStreamChannel(io.netty.channel.Channel, int);
    Code:
       0: aload_0
       1: aload_1
       2: new           #13                 // class io/netty/channel/epoll/LinuxSocket
       5: dup
       6: iload_2
       7: invokespecial #14                 // Method io/netty/channel/epoll/LinuxSocket."<init>":(I)V
      10: invokespecial #15                 // Method "<init>":(Lio/netty/channel/Channel;Lio/netty/channel/epoll/LinuxSocket;)V
      13: return

  protected io.netty.channel.epoll.AbstractEpollStreamChannel(int);
    Code:
       0: aload_0
       1: new           #13                 // class io/netty/channel/epoll/LinuxSocket
       4: dup
       5: iload_1
       6: invokespecial #14                 // Method io/netty/channel/epoll/LinuxSocket."<init>":(I)V
       9: invokespecial #16                 // Method "<init>":(Lio/netty/channel/epoll/LinuxSocket;)V
      12: return

  io.netty.channel.epoll.AbstractEpollStreamChannel(io.netty.channel.epoll.LinuxSocket);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokestatic  #17                 // Method isSoErrorZero:(Lio/netty/channel/unix/Socket;)Z
       6: invokespecial #18                 // Method "<init>":(Lio/netty/channel/epoll/LinuxSocket;Z)V
       9: return

  io.netty.channel.epoll.AbstractEpollStreamChannel(io.netty.channel.Channel, io.netty.channel.epoll.LinuxSocket);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #19                 // Field io/netty/channel/epoll/Native.EPOLLIN:I
       6: iconst_1
       7: invokespecial #20                 // Method io/netty/channel/epoll/AbstractEpollChannel."<init>":(Lio/netty/channel/Channel;Lio/netty/channel/epoll/LinuxSocket;IZ)V
      10: aload_0
      11: dup
      12: getfield      #21                 // Field flags:I
      15: getstatic     #22                 // Field io/netty/channel/epoll/Native.EPOLLRDHUP:I
      18: ior
      19: putfield      #21                 // Field flags:I
      22: return

  protected io.netty.channel.epoll.AbstractEpollStreamChannel(io.netty.channel.epoll.LinuxSocket, boolean);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: getstatic     #19                 // Field io/netty/channel/epoll/Native.EPOLLIN:I
       6: iload_2
       7: invokespecial #20                 // Method io/netty/channel/epoll/AbstractEpollChannel."<init>":(Lio/netty/channel/Channel;Lio/netty/channel/epoll/LinuxSocket;IZ)V
      10: aload_0
      11: dup
      12: getfield      #21                 // Field flags:I
      15: getstatic     #22                 // Field io/netty/channel/epoll/Native.EPOLLRDHUP:I
      18: ior
      19: putfield      #21                 // Field flags:I
      22: return

  protected io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe newUnsafe();
    Code:
       0: new           #23                 // class io/netty/channel/epoll/AbstractEpollStreamChannel$EpollStreamUnsafe
       3: dup
       4: aload_0
       5: invokespecial #24                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel$EpollStreamUnsafe."<init>":(Lio/netty/channel/epoll/AbstractEpollStreamChannel;)V
       8: areturn

  public io.netty.channel.ChannelMetadata metadata();
    Code:
       0: getstatic     #25                 // Field METADATA:Lio/netty/channel/ChannelMetadata;
       3: areturn

  public final io.netty.channel.ChannelFuture spliceTo(io.netty.channel.epoll.AbstractEpollStreamChannel, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_0
       4: invokevirtual #26                 // Method newPromise:()Lio/netty/channel/ChannelPromise;
       7: invokevirtual #27                 // Method spliceTo:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;ILio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      10: areturn

  public final io.netty.channel.ChannelFuture spliceTo(io.netty.channel.epoll.AbstractEpollStreamChannel, int, io.netty.channel.ChannelPromise);
    Code:
       0: aload_1
       1: invokevirtual #28                 // Method eventLoop:()Lio/netty/channel/EventLoop;
       4: aload_0
       5: invokevirtual #28                 // Method eventLoop:()Lio/netty/channel/EventLoop;
       8: if_acmpeq     21
      11: new           #29                 // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #30                 // String EventLoops are not the same.
      17: invokespecial #31                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: iload_2
      22: ifge          57
      25: new           #29                 // class java/lang/IllegalArgumentException
      28: dup
      29: new           #32                 // class java/lang/StringBuilder
      32: dup
      33: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #34                 // String len:
      38: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: iload_2
      42: invokevirtual #36                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      45: ldc           #37                 // String  (expected: >= 0)
      47: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokespecial #31                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: aload_1
      58: invokevirtual #39                 // Method config:()Lio/netty/channel/epoll/EpollChannelConfig;
      61: invokevirtual #40                 // Method io/netty/channel/epoll/EpollChannelConfig.getEpollMode:()Lio/netty/channel/epoll/EpollMode;
      64: getstatic     #41                 // Field io/netty/channel/epoll/EpollMode.LEVEL_TRIGGERED:Lio/netty/channel/epoll/EpollMode;
      67: if_acmpne     83
      70: aload_0
      71: invokevirtual #39                 // Method config:()Lio/netty/channel/epoll/EpollChannelConfig;
      74: invokevirtual #40                 // Method io/netty/channel/epoll/EpollChannelConfig.getEpollMode:()Lio/netty/channel/epoll/EpollMode;
      77: getstatic     #41                 // Field io/netty/channel/epoll/EpollMode.LEVEL_TRIGGERED:Lio/netty/channel/epoll/EpollMode;
      80: if_acmpeq     112
      83: new           #42                 // class java/lang/IllegalStateException
      86: dup
      87: new           #32                 // class java/lang/StringBuilder
      90: dup
      91: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      94: ldc           #43                 // String spliceTo() supported only when using
      96: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: getstatic     #41                 // Field io/netty/channel/epoll/EpollMode.LEVEL_TRIGGERED:Lio/netty/channel/epoll/EpollMode;
     102: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     105: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     108: invokespecial #45                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     111: athrow
     112: aload_3
     113: ldc           #46                 // String promise
     115: invokestatic  #47                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     118: pop
     119: aload_0
     120: invokevirtual #48                 // Method isOpen:()Z
     123: ifne          139
     126: aload_3
     127: getstatic     #49                 // Field SPLICE_TO_CLOSED_CHANNEL_EXCEPTION:Ljava/nio/channels/ClosedChannelException;
     130: invokeinterface #50,  2           // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
     135: pop
     136: goto          159
     139: aload_0
     140: new           #51                 // class io/netty/channel/epoll/AbstractEpollStreamChannel$SpliceInChannelTask
     143: dup
     144: aload_0
     145: aload_1
     146: iload_2
     147: aload_3
     148: invokespecial #52                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel$SpliceInChannelTask."<init>":(Lio/netty/channel/epoll/AbstractEpollStreamChannel;Lio/netty/channel/epoll/AbstractEpollStreamChannel;ILio/netty/channel/ChannelPromise;)V
     151: invokespecial #53                 // Method addToSpliceQueue:(Lio/netty/channel/epoll/AbstractEpollStreamChannel$SpliceInTask;)V
     154: aload_0
     155: aload_3
     156: invokespecial #54                 // Method failSpliceIfClosed:(Lio/netty/channel/ChannelPromise;)V
     159: aload_3
     160: areturn

  public final io.netty.channel.ChannelFuture spliceTo(io.netty.channel.unix.FileDescriptor, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: aload_0
       5: invokevirtual #26                 // Method newPromise:()Lio/netty/channel/ChannelPromise;
       8: invokevirtual #55                 // Method spliceTo:(Lio/netty/channel/unix/FileDescriptor;IILio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      11: areturn

  public final io.netty.channel.ChannelFuture spliceTo(io.netty.channel.unix.FileDescriptor, int, int, io.netty.channel.ChannelPromise);
    Code:
       0: iload_3
       1: ifge          36
       4: new           #29                 // class java/lang/IllegalArgumentException
       7: dup
       8: new           #32                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #34                 // String len:
      17: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: iload_3
      21: invokevirtual #36                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      24: ldc           #37                 // String  (expected: >= 0)
      26: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokespecial #31                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: iload_2
      37: ifge          67
      40: new           #29                 // class java/lang/IllegalArgumentException
      43: dup
      44: new           #32                 // class java/lang/StringBuilder
      47: dup
      48: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      51: ldc           #56                 // String offset must be >= 0 but was
      53: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: iload_2
      57: invokevirtual #36                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      60: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokespecial #31                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      66: athrow
      67: aload_0
      68: invokevirtual #39                 // Method config:()Lio/netty/channel/epoll/EpollChannelConfig;
      71: invokevirtual #40                 // Method io/netty/channel/epoll/EpollChannelConfig.getEpollMode:()Lio/netty/channel/epoll/EpollMode;
      74: getstatic     #41                 // Field io/netty/channel/epoll/EpollMode.LEVEL_TRIGGERED:Lio/netty/channel/epoll/EpollMode;
      77: if_acmpeq     109
      80: new           #42                 // class java/lang/IllegalStateException
      83: dup
      84: new           #32                 // class java/lang/StringBuilder
      87: dup
      88: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      91: ldc           #43                 // String spliceTo() supported only when using
      93: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: getstatic     #41                 // Field io/netty/channel/epoll/EpollMode.LEVEL_TRIGGERED:Lio/netty/channel/epoll/EpollMode;
      99: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     102: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     105: invokespecial #45                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     108: athrow
     109: aload         4
     111: ldc           #46                 // String promise
     113: invokestatic  #47                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     116: pop
     117: aload_0
     118: invokevirtual #48                 // Method isOpen:()Z
     121: ifne          138
     124: aload         4
     126: getstatic     #49                 // Field SPLICE_TO_CLOSED_CHANNEL_EXCEPTION:Ljava/nio/channels/ClosedChannelException;
     129: invokeinterface #50,  2           // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
     134: pop
     135: goto          161
     138: aload_0
     139: new           #57                 // class io/netty/channel/epoll/AbstractEpollStreamChannel$SpliceFdTask
     142: dup
     143: aload_0
     144: aload_1
     145: iload_2
     146: iload_3
     147: aload         4
     149: invokespecial #58                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel$SpliceFdTask."<init>":(Lio/netty/channel/epoll/AbstractEpollStreamChannel;Lio/netty/channel/unix/FileDescriptor;IILio/netty/channel/ChannelPromise;)V
     152: invokespecial #53                 // Method addToSpliceQueue:(Lio/netty/channel/epoll/AbstractEpollStreamChannel$SpliceInTask;)V
     155: aload_0
     156: aload         4
     158: invokespecial #54                 // Method failSpliceIfClosed:(Lio/netty/channel/ChannelPromise;)V
     161: aload         4
     163: areturn

  private void failSpliceIfClosed(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method isOpen:()Z
       4: ifne          36
       7: aload_1
       8: getstatic     #59                 // Field FAIL_SPLICE_IF_CLOSED_CLOSED_CHANNEL_EXCEPTION:Ljava/nio/channels/ClosedChannelException;
      11: invokeinterface #50,  2           // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
      16: ifeq          36
      19: aload_0
      20: invokevirtual #28                 // Method eventLoop:()Lio/netty/channel/EventLoop;
      23: new           #60                 // class io/netty/channel/epoll/AbstractEpollStreamChannel$1
      26: dup
      27: aload_0
      28: invokespecial #61                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel$1."<init>":(Lio/netty/channel/epoll/AbstractEpollStreamChannel;)V
      31: invokeinterface #62,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      36: return

  private boolean writeBytes(io.netty.channel.ChannelOutboundBuffer, io.netty.buffer.ByteBuf, int) throws java.lang.Exception;
    Code:
       0: aload_2
       1: invokevirtual #63                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
       4: istore        4
       6: iload         4
       8: ifne          18
      11: aload_1
      12: invokevirtual #64                 // Method io/netty/channel/ChannelOutboundBuffer.remove:()Z
      15: pop
      16: iconst_1
      17: ireturn
      18: aload_2
      19: invokevirtual #65                 // Method io/netty/buffer/ByteBuf.hasMemoryAddress:()Z
      22: ifne          33
      25: aload_2
      26: invokevirtual #66                 // Method io/netty/buffer/ByteBuf.nioBufferCount:()I
      29: iconst_1
      30: if_icmpne     61
      33: aload_0
      34: aload_2
      35: iload_3
      36: invokevirtual #67                 // Method doWriteBytes:(Lio/netty/buffer/ByteBuf;I)I
      39: istore        5
      41: aload_1
      42: iload         5
      44: i2l
      45: invokevirtual #68                 // Method io/netty/channel/ChannelOutboundBuffer.removeBytes:(J)V
      48: iload         5
      50: iload         4
      52: if_icmpne     59
      55: iconst_1
      56: goto          60
      59: iconst_0
      60: ireturn
      61: aload_2
      62: invokevirtual #69                 // Method io/netty/buffer/ByteBuf.nioBuffers:()[Ljava/nio/ByteBuffer;
      65: astore        5
      67: aload_0
      68: aload_1
      69: aload         5
      71: aload         5
      73: arraylength
      74: iload         4
      76: i2l
      77: iload_3
      78: invokespecial #70                 // Method writeBytesMultiple:(Lio/netty/channel/ChannelOutboundBuffer;[Ljava/nio/ByteBuffer;IJI)Z
      81: ireturn

  private boolean writeBytesMultiple(io.netty.channel.ChannelOutboundBuffer, io.netty.channel.unix.IovArray, int) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokevirtual #71                 // Method io/netty/channel/unix/IovArray.size:()J
       4: lstore        4
       6: lload         4
       8: lstore        6
      10: aload_2
      11: invokevirtual #72                 // Method io/netty/channel/unix/IovArray.count:()I
      14: istore        8
      16: getstatic     #73                 // Field $assertionsDisabled:Z
      19: ifne          37
      22: lload         4
      24: lconst_0
      25: lcmp
      26: ifne          37
      29: new           #74                 // class java/lang/AssertionError
      32: dup
      33: invokespecial #75                 // Method java/lang/AssertionError."<init>":()V
      36: athrow
      37: getstatic     #73                 // Field $assertionsDisabled:Z
      40: ifne          56
      43: iload         8
      45: ifne          56
      48: new           #74                 // class java/lang/AssertionError
      51: dup
      52: invokespecial #75                 // Method java/lang/AssertionError."<init>":()V
      55: athrow
      56: iconst_0
      57: istore        9
      59: iconst_0
      60: istore        10
      62: iload         10
      64: iload         8
      66: iadd
      67: istore        11
      69: iload_3
      70: istore        12
      72: iload         12
      74: ifle          179
      77: aload_0
      78: getfield      #76                 // Field socket:Lio/netty/channel/epoll/LinuxSocket;
      81: aload_2
      82: iload         10
      84: invokevirtual #77                 // Method io/netty/channel/unix/IovArray.memoryAddress:(I)J
      87: iload         8
      89: invokevirtual #78                 // Method io/netty/channel/epoll/LinuxSocket.writevAddresses:(JI)J
      92: lstore        13
      94: lload         13
      96: lconst_0
      97: lcmp
      98: ifne          104
     101: goto          179
     104: lload         4
     106: lload         13
     108: lsub
     109: lstore        4
     111: lload         4
     113: lconst_0
     114: lcmp
     115: ifne          124
     118: iconst_1
     119: istore        9
     121: goto          179
     124: aload_2
     125: iload         10
     127: lload         13
     129: invokevirtual #79                 // Method io/netty/channel/unix/IovArray.processWritten:(IJ)J
     132: lstore        15
     134: lload         15
     136: ldc2_w        #80                 // long -1l
     139: lcmp
     140: ifne          146
     143: goto          173
     146: iinc          10, 1
     149: iinc          8, -1
     152: lload         13
     154: lload         15
     156: lsub
     157: lstore        13
     159: iload         10
     161: iload         11
     163: if_icmpge     173
     166: lload         13
     168: lconst_0
     169: lcmp
     170: ifgt          124
     173: iinc          12, -1
     176: goto          72
     179: aload_1
     180: lload         6
     182: lload         4
     184: lsub
     185: invokevirtual #68                 // Method io/netty/channel/ChannelOutboundBuffer.removeBytes:(J)V
     188: iload         9
     190: ireturn

  private boolean writeBytesMultiple(io.netty.channel.ChannelOutboundBuffer, java.nio.ByteBuffer[], int, long, int) throws java.io.IOException;
    Code:
       0: getstatic     #73                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: lload         4
       8: lconst_0
       9: lcmp
      10: ifne          21
      13: new           #74                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #75                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: lload         4
      23: lstore        7
      25: iconst_0
      26: istore        9
      28: iconst_0
      29: istore        10
      31: iload         10
      33: iload_3
      34: iadd
      35: istore        11
      37: iload         6
      39: istore        12
      41: iload         12
      43: ifle          170
      46: aload_0
      47: getfield      #76                 // Field socket:Lio/netty/channel/epoll/LinuxSocket;
      50: aload_2
      51: iload         10
      53: iload_3
      54: invokevirtual #82                 // Method io/netty/channel/epoll/LinuxSocket.writev:([Ljava/nio/ByteBuffer;II)J
      57: lstore        13
      59: lload         13
      61: lconst_0
      62: lcmp
      63: ifne          69
      66: goto          170
      69: lload         4
      71: lload         13
      73: lsub
      74: lstore        4
      76: lload         4
      78: lconst_0
      79: lcmp
      80: ifne          89
      83: iconst_1
      84: istore        9
      86: goto          170
      89: aload_2
      90: iload         10
      92: aaload
      93: astore        15
      95: aload         15
      97: invokevirtual #83                 // Method java/nio/ByteBuffer.position:()I
     100: istore        16
     102: aload         15
     104: invokevirtual #84                 // Method java/nio/ByteBuffer.limit:()I
     107: iload         16
     109: isub
     110: istore        17
     112: iload         17
     114: i2l
     115: lload         13
     117: lcmp
     118: ifle          136
     121: aload         15
     123: iload         16
     125: lload         13
     127: l2i
     128: iadd
     129: invokevirtual #85                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     132: pop
     133: goto          164
     136: iinc          10, 1
     139: iinc          3, -1
     142: lload         13
     144: iload         17
     146: i2l
     147: lsub
     148: lstore        13
     150: iload         10
     152: iload         11
     154: if_icmpge     164
     157: lload         13
     159: lconst_0
     160: lcmp
     161: ifgt          89
     164: iinc          12, -1
     167: goto          41
     170: aload_1
     171: lload         7
     173: lload         4
     175: lsub
     176: invokevirtual #68                 // Method io/netty/channel/ChannelOutboundBuffer.removeBytes:(J)V
     179: iload         9
     181: ireturn

  private boolean writeDefaultFileRegion(io.netty.channel.ChannelOutboundBuffer, io.netty.channel.DefaultFileRegion, int) throws java.lang.Exception;
    Code:
       0: aload_2
       1: invokevirtual #86                 // Method io/netty/channel/DefaultFileRegion.count:()J
       4: lstore        4
       6: aload_2
       7: invokevirtual #87                 // Method io/netty/channel/DefaultFileRegion.transferred:()J
      10: lload         4
      12: lcmp
      13: iflt          23
      16: aload_1
      17: invokevirtual #64                 // Method io/netty/channel/ChannelOutboundBuffer.remove:()Z
      20: pop
      21: iconst_1
      22: ireturn
      23: aload_2
      24: invokevirtual #88                 // Method io/netty/channel/DefaultFileRegion.position:()J
      27: lstore        6
      29: iconst_0
      30: istore        8
      32: lconst_0
      33: lstore        9
      35: iload_3
      36: istore        11
      38: iload         11
      40: ifle          110
      43: aload_2
      44: invokevirtual #87                 // Method io/netty/channel/DefaultFileRegion.transferred:()J
      47: lstore        12
      49: aload_0
      50: getfield      #76                 // Field socket:Lio/netty/channel/epoll/LinuxSocket;
      53: invokevirtual #89                 // Method io/netty/channel/epoll/LinuxSocket.intValue:()I
      56: aload_2
      57: lload         6
      59: lload         12
      61: lload         4
      63: lload         12
      65: lsub
      66: invokestatic  #90                 // Method io/netty/channel/epoll/Native.sendfile:(ILio/netty/channel/DefaultFileRegion;JJJ)J
      69: lstore        14
      71: lload         14
      73: lconst_0
      74: lcmp
      75: ifne          81
      78: goto          110
      81: lload         9
      83: lload         14
      85: ladd
      86: lstore        9
      88: aload_2
      89: invokevirtual #87                 // Method io/netty/channel/DefaultFileRegion.transferred:()J
      92: lload         4
      94: lcmp
      95: iflt          104
      98: iconst_1
      99: istore        8
     101: goto          110
     104: iinc          11, -1
     107: goto          38
     110: lload         9
     112: lconst_0
     113: lcmp
     114: ifle          123
     117: aload_1
     118: lload         9
     120: invokevirtual #91                 // Method io/netty/channel/ChannelOutboundBuffer.progress:(J)V
     123: iload         8
     125: ifeq          133
     128: aload_1
     129: invokevirtual #64                 // Method io/netty/channel/ChannelOutboundBuffer.remove:()Z
     132: pop
     133: iload         8
     135: ireturn

  private boolean writeFileRegion(io.netty.channel.ChannelOutboundBuffer, io.netty.channel.FileRegion, int) throws java.lang.Exception;
    Code:
       0: aload_2
       1: invokeinterface #92,  1           // InterfaceMethod io/netty/channel/FileRegion.transferred:()J
       6: aload_2
       7: invokeinterface #93,  1           // InterfaceMethod io/netty/channel/FileRegion.count:()J
      12: lcmp
      13: iflt          23
      16: aload_1
      17: invokevirtual #64                 // Method io/netty/channel/ChannelOutboundBuffer.remove:()Z
      20: pop
      21: iconst_1
      22: ireturn
      23: iconst_0
      24: istore        4
      26: lconst_0
      27: lstore        5
      29: aload_0
      30: getfield      #94                 // Field byteChannel:Ljava/nio/channels/WritableByteChannel;
      33: ifnonnull     48
      36: aload_0
      37: new           #95                 // class io/netty/channel/epoll/AbstractEpollStreamChannel$EpollSocketWritableByteChannel
      40: dup
      41: aload_0
      42: invokespecial #96                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel$EpollSocketWritableByteChannel."<init>":(Lio/netty/channel/epoll/AbstractEpollStreamChannel;)V
      45: putfield      #94                 // Field byteChannel:Ljava/nio/channels/WritableByteChannel;
      48: iload_3
      49: istore        7
      51: iload         7
      53: ifle          119
      56: aload_2
      57: aload_0
      58: getfield      #94                 // Field byteChannel:Ljava/nio/channels/WritableByteChannel;
      61: aload_2
      62: invokeinterface #92,  1           // InterfaceMethod io/netty/channel/FileRegion.transferred:()J
      67: invokeinterface #97,  4           // InterfaceMethod io/netty/channel/FileRegion.transferTo:(Ljava/nio/channels/WritableByteChannel;J)J
      72: lstore        8
      74: lload         8
      76: lconst_0
      77: lcmp
      78: ifne          84
      81: goto          119
      84: lload         5
      86: lload         8
      88: ladd
      89: lstore        5
      91: aload_2
      92: invokeinterface #92,  1           // InterfaceMethod io/netty/channel/FileRegion.transferred:()J
      97: aload_2
      98: invokeinterface #93,  1           // InterfaceMethod io/netty/channel/FileRegion.count:()J
     103: lcmp
     104: iflt          113
     107: iconst_1
     108: istore        4
     110: goto          119
     113: iinc          7, -1
     116: goto          51
     119: lload         5
     121: lconst_0
     122: lcmp
     123: ifle          132
     126: aload_1
     127: lload         5
     129: invokevirtual #91                 // Method io/netty/channel/ChannelOutboundBuffer.progress:(J)V
     132: iload         4
     134: ifeq          142
     137: aload_1
     138: invokevirtual #64                 // Method io/netty/channel/ChannelOutboundBuffer.remove:()Z
     141: pop
     142: iload         4
     144: ireturn

  protected void doWrite(io.netty.channel.ChannelOutboundBuffer) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method config:()Lio/netty/channel/epoll/EpollChannelConfig;
       4: invokevirtual #98                 // Method io/netty/channel/epoll/EpollChannelConfig.getWriteSpinCount:()I
       7: istore_2
       8: aload_1
       9: invokevirtual #99                 // Method io/netty/channel/ChannelOutboundBuffer.size:()I
      12: istore_3
      13: iload_3
      14: ifne          25
      17: aload_0
      18: getstatic     #100                // Field io/netty/channel/epoll/Native.EPOLLOUT:I
      21: invokevirtual #101                // Method clearFlag:(I)V
      24: return
      25: iload_3
      26: iconst_1
      27: if_icmple     52
      30: aload_1
      31: invokevirtual #102                // Method io/netty/channel/ChannelOutboundBuffer.current:()Ljava/lang/Object;
      34: instanceof    #103                // class io/netty/buffer/ByteBuf
      37: ifeq          52
      40: aload_0
      41: aload_1
      42: iload_2
      43: invokespecial #104                // Method doWriteMultiple:(Lio/netty/channel/ChannelOutboundBuffer;I)Z
      46: ifne          64
      49: goto          67
      52: aload_0
      53: aload_1
      54: iload_2
      55: invokevirtual #105                // Method doWriteSingle:(Lio/netty/channel/ChannelOutboundBuffer;I)Z
      58: ifne          64
      61: goto          67
      64: goto          8
      67: aload_0
      68: getstatic     #100                // Field io/netty/channel/epoll/Native.EPOLLOUT:I
      71: invokevirtual #106                // Method setFlag:(I)V
      74: return

  protected boolean doWriteSingle(io.netty.channel.ChannelOutboundBuffer, int) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #102                // Method io/netty/channel/ChannelOutboundBuffer.current:()Ljava/lang/Object;
       4: astore_3
       5: aload_3
       6: instanceof    #103                // class io/netty/buffer/ByteBuf
       9: ifeq          27
      12: aload_0
      13: aload_1
      14: aload_3
      15: checkcast     #103                // class io/netty/buffer/ByteBuf
      18: iload_2
      19: invokespecial #107                // Method writeBytes:(Lio/netty/channel/ChannelOutboundBuffer;Lio/netty/buffer/ByteBuf;I)Z
      22: ifne          106
      25: iconst_0
      26: ireturn
      27: aload_3
      28: instanceof    #108                // class io/netty/channel/DefaultFileRegion
      31: ifeq          49
      34: aload_0
      35: aload_1
      36: aload_3
      37: checkcast     #108                // class io/netty/channel/DefaultFileRegion
      40: iload_2
      41: invokespecial #109                // Method writeDefaultFileRegion:(Lio/netty/channel/ChannelOutboundBuffer;Lio/netty/channel/DefaultFileRegion;I)Z
      44: ifne          106
      47: iconst_0
      48: ireturn
      49: aload_3
      50: instanceof    #110                // class io/netty/channel/FileRegion
      53: ifeq          71
      56: aload_0
      57: aload_1
      58: aload_3
      59: checkcast     #110                // class io/netty/channel/FileRegion
      62: iload_2
      63: invokespecial #111                // Method writeFileRegion:(Lio/netty/channel/ChannelOutboundBuffer;Lio/netty/channel/FileRegion;I)Z
      66: ifne          106
      69: iconst_0
      70: ireturn
      71: aload_3
      72: instanceof    #112                // class io/netty/channel/epoll/AbstractEpollStreamChannel$SpliceOutTask
      75: ifeq          98
      78: aload_3
      79: checkcast     #112                // class io/netty/channel/epoll/AbstractEpollStreamChannel$SpliceOutTask
      82: invokevirtual #113                // Method io/netty/channel/epoll/AbstractEpollStreamChannel$SpliceOutTask.spliceOut:()Z
      85: ifne          90
      88: iconst_0
      89: ireturn
      90: aload_1
      91: invokevirtual #64                 // Method io/netty/channel/ChannelOutboundBuffer.remove:()Z
      94: pop
      95: goto          106
      98: new           #114                // class java/lang/Error
     101: dup
     102: invokespecial #115                // Method java/lang/Error."<init>":()V
     105: athrow
     106: iconst_1
     107: ireturn

  private boolean doWriteMultiple(io.netty.channel.ChannelOutboundBuffer, int) throws java.lang.Exception;
    Code:
       0: invokestatic  #116                // Method io/netty/util/internal/PlatformDependent.hasUnsafe:()Z
       3: ifeq          54
       6: aload_0
       7: invokevirtual #28                 // Method eventLoop:()Lio/netty/channel/EventLoop;
      10: checkcast     #117                // class io/netty/channel/epoll/EpollEventLoop
      13: invokevirtual #118                // Method io/netty/channel/epoll/EpollEventLoop.cleanArray:()Lio/netty/channel/unix/IovArray;
      16: astore_3
      17: aload_1
      18: aload_3
      19: invokevirtual #119                // Method io/netty/channel/ChannelOutboundBuffer.forEachFlushedMessage:(Lio/netty/channel/ChannelOutboundBuffer$MessageProcessor;)V
      22: aload_3
      23: invokevirtual #72                 // Method io/netty/channel/unix/IovArray.count:()I
      26: istore        4
      28: iload         4
      30: iconst_1
      31: if_icmplt     46
      34: aload_0
      35: aload_1
      36: aload_3
      37: iload_2
      38: invokespecial #120                // Method writeBytesMultiple:(Lio/netty/channel/ChannelOutboundBuffer;Lio/netty/channel/unix/IovArray;I)Z
      41: ifne          51
      44: iconst_0
      45: ireturn
      46: aload_1
      47: lconst_0
      48: invokevirtual #68                 // Method io/netty/channel/ChannelOutboundBuffer.removeBytes:(J)V
      51: goto          94
      54: aload_1
      55: invokevirtual #121                // Method io/netty/channel/ChannelOutboundBuffer.nioBuffers:()[Ljava/nio/ByteBuffer;
      58: astore_3
      59: aload_1
      60: invokevirtual #122                // Method io/netty/channel/ChannelOutboundBuffer.nioBufferCount:()I
      63: istore        4
      65: iload         4
      67: iconst_1
      68: if_icmplt     89
      71: aload_0
      72: aload_1
      73: aload_3
      74: iload         4
      76: aload_1
      77: invokevirtual #123                // Method io/netty/channel/ChannelOutboundBuffer.nioBufferSize:()J
      80: iload_2
      81: invokespecial #70                 // Method writeBytesMultiple:(Lio/netty/channel/ChannelOutboundBuffer;[Ljava/nio/ByteBuffer;IJI)Z
      84: ifne          94
      87: iconst_0
      88: ireturn
      89: aload_1
      90: lconst_0
      91: invokevirtual #68                 // Method io/netty/channel/ChannelOutboundBuffer.removeBytes:(J)V
      94: iconst_1
      95: ireturn

  protected java.lang.Object filterOutboundMessage(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #103                // class io/netty/buffer/ByteBuf
       4: ifeq          29
       7: aload_1
       8: checkcast     #103                // class io/netty/buffer/ByteBuf
      11: astore_2
      12: aload_2
      13: invokestatic  #124                // Method io/netty/channel/unix/UnixChannelUtil.isBufferCopyNeededForWrite:(Lio/netty/buffer/ByteBuf;)Z
      16: ifeq          27
      19: aload_0
      20: aload_2
      21: invokevirtual #125                // Method newDirectBuffer:(Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;
      24: goto          28
      27: aload_2
      28: areturn
      29: aload_1
      30: instanceof    #110                // class io/netty/channel/FileRegion
      33: ifne          43
      36: aload_1
      37: instanceof    #112                // class io/netty/channel/epoll/AbstractEpollStreamChannel$SpliceOutTask
      40: ifeq          45
      43: aload_1
      44: areturn
      45: new           #126                // class java/lang/UnsupportedOperationException
      48: dup
      49: new           #32                 // class java/lang/StringBuilder
      52: dup
      53: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      56: ldc           #127                // String unsupported message type:
      58: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload_1
      62: invokestatic  #128                // Method io/netty/util/internal/StringUtil.simpleClassName:(Ljava/lang/Object;)Ljava/lang/String;
      65: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: getstatic     #129                // Field EXPECTED_TYPES:Ljava/lang/String;
      71: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      77: invokespecial #130                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      80: athrow

  private void shutdownOutput0(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #76                 // Field socket:Lio/netty/channel/epoll/LinuxSocket;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #131                // Method io/netty/channel/epoll/LinuxSocket.shutdown:(ZZ)V
       9: aload_1
      10: invokeinterface #132,  1          // InterfaceMethod io/netty/channel/ChannelPromise.setSuccess:()Lio/netty/channel/ChannelPromise;
      15: pop
      16: goto          28
      19: astore_2
      20: aload_1
      21: aload_2
      22: invokeinterface #134,  2          // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
      27: pop
      28: return
    Exception table:
       from    to  target type
           0    16    19   Class java/lang/Throwable

  private void shutdownInput0(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #76                 // Field socket:Lio/netty/channel/epoll/LinuxSocket;
       4: iconst_1
       5: iconst_0
       6: invokevirtual #131                // Method io/netty/channel/epoll/LinuxSocket.shutdown:(ZZ)V
       9: aload_1
      10: invokeinterface #132,  1          // InterfaceMethod io/netty/channel/ChannelPromise.setSuccess:()Lio/netty/channel/ChannelPromise;
      15: pop
      16: goto          28
      19: astore_2
      20: aload_1
      21: aload_2
      22: invokeinterface #134,  2          // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
      27: pop
      28: return
    Exception table:
       from    to  target type
           0    16    19   Class java/lang/Throwable

  private void shutdown0(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #76                 // Field socket:Lio/netty/channel/epoll/LinuxSocket;
       4: iconst_1
       5: iconst_1
       6: invokevirtual #131                // Method io/netty/channel/epoll/LinuxSocket.shutdown:(ZZ)V
       9: aload_1
      10: invokeinterface #132,  1          // InterfaceMethod io/netty/channel/ChannelPromise.setSuccess:()Lio/netty/channel/ChannelPromise;
      15: pop
      16: goto          28
      19: astore_2
      20: aload_1
      21: aload_2
      22: invokeinterface #134,  2          // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
      27: pop
      28: return
    Exception table:
       from    to  target type
           0    16    19   Class java/lang/Throwable

  public boolean isOutputShutdown();
    Code:
       0: aload_0
       1: getfield      #76                 // Field socket:Lio/netty/channel/epoll/LinuxSocket;
       4: invokevirtual #135                // Method io/netty/channel/epoll/LinuxSocket.isOutputShutdown:()Z
       7: ireturn

  public boolean isInputShutdown();
    Code:
       0: aload_0
       1: getfield      #76                 // Field socket:Lio/netty/channel/epoll/LinuxSocket;
       4: invokevirtual #136                // Method io/netty/channel/epoll/LinuxSocket.isInputShutdown:()Z
       7: ireturn

  public boolean isShutdown();
    Code:
       0: aload_0
       1: getfield      #76                 // Field socket:Lio/netty/channel/epoll/LinuxSocket;
       4: invokevirtual #137                // Method io/netty/channel/epoll/LinuxSocket.isShutdown:()Z
       7: ireturn

  public io.netty.channel.ChannelFuture shutdownOutput();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #26                 // Method newPromise:()Lio/netty/channel/ChannelPromise;
       5: invokevirtual #138                // Method shutdownOutput:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       8: areturn

  public io.netty.channel.ChannelFuture shutdownOutput(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokevirtual #139                // Method unsafe:()Lio/netty/channel/Channel$Unsafe;
       4: checkcast     #23                 // class io/netty/channel/epoll/AbstractEpollStreamChannel$EpollStreamUnsafe
       7: invokevirtual #140                // Method io/netty/channel/epoll/AbstractEpollStreamChannel$EpollStreamUnsafe.prepareToClose:()Ljava/util/concurrent/Executor;
      10: astore_2
      11: aload_2
      12: ifnull        33
      15: aload_2
      16: new           #141                // class io/netty/channel/epoll/AbstractEpollStreamChannel$2
      19: dup
      20: aload_0
      21: aload_1
      22: invokespecial #142                // Method io/netty/channel/epoll/AbstractEpollStreamChannel$2."<init>":(Lio/netty/channel/epoll/AbstractEpollStreamChannel;Lio/netty/channel/ChannelPromise;)V
      25: invokeinterface #143,  2          // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      30: goto          70
      33: aload_0
      34: invokevirtual #28                 // Method eventLoop:()Lio/netty/channel/EventLoop;
      37: astore_3
      38: aload_3
      39: invokeinterface #144,  1          // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
      44: ifeq          55
      47: aload_0
      48: aload_1
      49: invokespecial #11                 // Method shutdownOutput0:(Lio/netty/channel/ChannelPromise;)V
      52: goto          70
      55: aload_3
      56: new           #145                // class io/netty/channel/epoll/AbstractEpollStreamChannel$3
      59: dup
      60: aload_0
      61: aload_1
      62: invokespecial #146                // Method io/netty/channel/epoll/AbstractEpollStreamChannel$3."<init>":(Lio/netty/channel/epoll/AbstractEpollStreamChannel;Lio/netty/channel/ChannelPromise;)V
      65: invokeinterface #62,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      70: aload_1
      71: areturn

  public io.netty.channel.ChannelFuture shutdownInput();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #26                 // Method newPromise:()Lio/netty/channel/ChannelPromise;
       5: invokevirtual #147                // Method shutdownInput:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       8: areturn

  public io.netty.channel.ChannelFuture shutdownInput(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokevirtual #139                // Method unsafe:()Lio/netty/channel/Channel$Unsafe;
       4: checkcast     #23                 // class io/netty/channel/epoll/AbstractEpollStreamChannel$EpollStreamUnsafe
       7: invokevirtual #140                // Method io/netty/channel/epoll/AbstractEpollStreamChannel$EpollStreamUnsafe.prepareToClose:()Ljava/util/concurrent/Executor;
      10: astore_2
      11: aload_2
      12: ifnull        33
      15: aload_2
      16: new           #148                // class io/netty/channel/epoll/AbstractEpollStreamChannel$4
      19: dup
      20: aload_0
      21: aload_1
      22: invokespecial #149                // Method io/netty/channel/epoll/AbstractEpollStreamChannel$4."<init>":(Lio/netty/channel/epoll/AbstractEpollStreamChannel;Lio/netty/channel/ChannelPromise;)V
      25: invokeinterface #143,  2          // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      30: goto          70
      33: aload_0
      34: invokevirtual #28                 // Method eventLoop:()Lio/netty/channel/EventLoop;
      37: astore_3
      38: aload_3
      39: invokeinterface #144,  1          // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
      44: ifeq          55
      47: aload_0
      48: aload_1
      49: invokespecial #10                 // Method shutdownInput0:(Lio/netty/channel/ChannelPromise;)V
      52: goto          70
      55: aload_3
      56: new           #150                // class io/netty/channel/epoll/AbstractEpollStreamChannel$5
      59: dup
      60: aload_0
      61: aload_1
      62: invokespecial #151                // Method io/netty/channel/epoll/AbstractEpollStreamChannel$5."<init>":(Lio/netty/channel/epoll/AbstractEpollStreamChannel;Lio/netty/channel/ChannelPromise;)V
      65: invokeinterface #62,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      70: aload_1
      71: areturn

  public io.netty.channel.ChannelFuture shutdown();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #26                 // Method newPromise:()Lio/netty/channel/ChannelPromise;
       5: invokevirtual #152                // Method shutdown:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       8: areturn

  public io.netty.channel.ChannelFuture shutdown(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokevirtual #139                // Method unsafe:()Lio/netty/channel/Channel$Unsafe;
       4: checkcast     #23                 // class io/netty/channel/epoll/AbstractEpollStreamChannel$EpollStreamUnsafe
       7: invokevirtual #140                // Method io/netty/channel/epoll/AbstractEpollStreamChannel$EpollStreamUnsafe.prepareToClose:()Ljava/util/concurrent/Executor;
      10: astore_2
      11: aload_2
      12: ifnull        33
      15: aload_2
      16: new           #153                // class io/netty/channel/epoll/AbstractEpollStreamChannel$6
      19: dup
      20: aload_0
      21: aload_1
      22: invokespecial #154                // Method io/netty/channel/epoll/AbstractEpollStreamChannel$6."<init>":(Lio/netty/channel/epoll/AbstractEpollStreamChannel;Lio/netty/channel/ChannelPromise;)V
      25: invokeinterface #143,  2          // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      30: goto          70
      33: aload_0
      34: invokevirtual #28                 // Method eventLoop:()Lio/netty/channel/EventLoop;
      37: astore_3
      38: aload_3
      39: invokeinterface #144,  1          // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
      44: ifeq          55
      47: aload_0
      48: aload_1
      49: invokespecial #9                  // Method shutdown0:(Lio/netty/channel/ChannelPromise;)V
      52: goto          70
      55: aload_3
      56: new           #155                // class io/netty/channel/epoll/AbstractEpollStreamChannel$7
      59: dup
      60: aload_0
      61: aload_1
      62: invokespecial #156                // Method io/netty/channel/epoll/AbstractEpollStreamChannel$7."<init>":(Lio/netty/channel/epoll/AbstractEpollStreamChannel;Lio/netty/channel/ChannelPromise;)V
      65: invokeinterface #62,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      70: aload_1
      71: areturn

  protected void doClose() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #8                  // Field connectPromise:Lio/netty/channel/ChannelPromise;
       4: astore_1
       5: aload_1
       6: ifnull        24
       9: aload_1
      10: getstatic     #157                // Field DO_CLOSE_CLOSED_CHANNEL_EXCEPTION:Ljava/nio/channels/ClosedChannelException;
      13: invokeinterface #50,  2           // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
      18: pop
      19: aload_0
      20: aconst_null
      21: putfield      #8                  // Field connectPromise:Lio/netty/channel/ChannelPromise;
      24: aload_0
      25: getfield      #6                  // Field connectTimeoutFuture:Ljava/util/concurrent/ScheduledFuture;
      28: astore_2
      29: aload_2
      30: ifnull        46
      33: aload_2
      34: iconst_0
      35: invokeinterface #158,  2          // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      40: pop
      41: aload_0
      42: aconst_null
      43: putfield      #6                  // Field connectTimeoutFuture:Ljava/util/concurrent/ScheduledFuture;
      46: aload_0
      47: invokespecial #159                // Method io/netty/channel/epoll/AbstractEpollChannel.doClose:()V
      50: aload_0
      51: getfield      #2                  // Field pipeIn:Lio/netty/channel/unix/FileDescriptor;
      54: invokestatic  #1                  // Method safeClosePipe:(Lio/netty/channel/unix/FileDescriptor;)V
      57: aload_0
      58: getfield      #3                  // Field pipeOut:Lio/netty/channel/unix/FileDescriptor;
      61: invokestatic  #1                  // Method safeClosePipe:(Lio/netty/channel/unix/FileDescriptor;)V
      64: aload_0
      65: invokespecial #12                 // Method clearSpliceQueue:()V
      68: goto          92
      71: astore_3
      72: aload_0
      73: getfield      #2                  // Field pipeIn:Lio/netty/channel/unix/FileDescriptor;
      76: invokestatic  #1                  // Method safeClosePipe:(Lio/netty/channel/unix/FileDescriptor;)V
      79: aload_0
      80: getfield      #3                  // Field pipeOut:Lio/netty/channel/unix/FileDescriptor;
      83: invokestatic  #1                  // Method safeClosePipe:(Lio/netty/channel/unix/FileDescriptor;)V
      86: aload_0
      87: invokespecial #12                 // Method clearSpliceQueue:()V
      90: aload_3
      91: athrow
      92: return
    Exception table:
       from    to  target type
           0    50    71   any

  private void clearSpliceQueue();
    Code:
       0: aload_0
       1: getfield      #5                  // Field spliceQueue:Ljava/util/Queue;
       4: ifnonnull     8
       7: return
       8: aload_0
       9: getfield      #5                  // Field spliceQueue:Ljava/util/Queue;
      12: invokeinterface #160,  1          // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      17: checkcast     #161                // class io/netty/channel/epoll/AbstractEpollStreamChannel$SpliceInTask
      20: astore_1
      21: aload_1
      22: ifnonnull     28
      25: goto          44
      28: aload_1
      29: getfield      #162                // Field io/netty/channel/epoll/AbstractEpollStreamChannel$SpliceInTask.promise:Lio/netty/channel/ChannelPromise;
      32: getstatic     #163                // Field CLEAR_SPLICE_QUEUE_CLOSED_CHANNEL_EXCEPTION:Ljava/nio/channels/ClosedChannelException;
      35: invokeinterface #50,  2           // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
      40: pop
      41: goto          8
      44: return

  protected boolean doConnect(java.net.SocketAddress, java.net.SocketAddress) throws java.lang.Exception;
    Code:
       0: aload_2
       1: ifnull        12
       4: aload_0
       5: getfield      #76                 // Field socket:Lio/netty/channel/epoll/LinuxSocket;
       8: aload_2
       9: invokevirtual #164                // Method io/netty/channel/epoll/LinuxSocket.bind:(Ljava/net/SocketAddress;)V
      12: iconst_0
      13: istore_3
      14: aload_0
      15: getfield      #76                 // Field socket:Lio/netty/channel/epoll/LinuxSocket;
      18: aload_1
      19: invokevirtual #165                // Method io/netty/channel/epoll/LinuxSocket.connect:(Ljava/net/SocketAddress;)Z
      22: istore        4
      24: iload         4
      26: ifne          36
      29: aload_0
      30: getstatic     #100                // Field io/netty/channel/epoll/Native.EPOLLOUT:I
      33: invokevirtual #106                // Method setFlag:(I)V
      36: iconst_1
      37: istore_3
      38: iload         4
      40: istore        5
      42: iload_3
      43: ifne          50
      46: aload_0
      47: invokevirtual #166                // Method doClose:()V
      50: iload         5
      52: ireturn
      53: astore        6
      55: iload_3
      56: ifne          63
      59: aload_0
      60: invokevirtual #166                // Method doClose:()V
      63: aload         6
      65: athrow
    Exception table:
       from    to  target type
          14    42    53   any
          53    55    53   any

  private static void safeClosePipe(io.netty.channel.unix.FileDescriptor);
    Code:
       0: aload_0
       1: ifnull        34
       4: aload_0
       5: invokevirtual #167                // Method io/netty/channel/unix/FileDescriptor.close:()V
       8: goto          34
      11: astore_1
      12: getstatic     #169                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      15: invokeinterface #170,  1          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isWarnEnabled:()Z
      20: ifeq          34
      23: getstatic     #169                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      26: ldc           #171                // String Error while closing a pipe
      28: aload_1
      29: invokeinterface #172,  3          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      34: return
    Exception table:
       from    to  target type
           4     8    11   Class java/io/IOException

  private void addToSpliceQueue(io.netty.channel.epoll.AbstractEpollStreamChannel$SpliceInTask);
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method eventLoop:()Lio/netty/channel/EventLoop;
       4: astore_2
       5: aload_2
       6: invokeinterface #144,  1          // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
      11: ifeq          22
      14: aload_0
      15: aload_1
      16: invokespecial #4                  // Method addToSpliceQueue0:(Lio/netty/channel/epoll/AbstractEpollStreamChannel$SpliceInTask;)V
      19: goto          37
      22: aload_2
      23: new           #173                // class io/netty/channel/epoll/AbstractEpollStreamChannel$8
      26: dup
      27: aload_0
      28: aload_1
      29: invokespecial #174                // Method io/netty/channel/epoll/AbstractEpollStreamChannel$8."<init>":(Lio/netty/channel/epoll/AbstractEpollStreamChannel;Lio/netty/channel/epoll/AbstractEpollStreamChannel$SpliceInTask;)V
      32: invokeinterface #62,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      37: return

  private void addToSpliceQueue0(io.netty.channel.epoll.AbstractEpollStreamChannel$SpliceInTask);
    Code:
       0: aload_0
       1: getfield      #5                  // Field spliceQueue:Ljava/util/Queue;
       4: ifnonnull     14
       7: aload_0
       8: invokestatic  #175                // Method io/netty/util/internal/PlatformDependent.newMpscQueue:()Ljava/util/Queue;
      11: putfield      #5                  // Field spliceQueue:Ljava/util/Queue;
      14: aload_0
      15: getfield      #5                  // Field spliceQueue:Ljava/util/Queue;
      18: aload_1
      19: invokeinterface #176,  2          // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
      24: pop
      25: return

  public boolean isOpen();
    Code:
       0: aload_0
       1: invokespecial #177                // Method io/netty/channel/epoll/AbstractEpollChannel.isOpen:()Z
       4: ireturn

  public boolean isActive();
    Code:
       0: aload_0
       1: invokespecial #178                // Method io/netty/channel/epoll/AbstractEpollChannel.isActive:()Z
       4: ireturn

  protected io.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe();
    Code:
       0: aload_0
       1: invokevirtual #179                // Method newUnsafe:()Lio/netty/channel/epoll/AbstractEpollChannel$AbstractEpollUnsafe;
       4: areturn

  static void access$000(io.netty.channel.epoll.AbstractEpollStreamChannel);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method clearSpliceQueue:()V
       4: return

  static void access$100(io.netty.channel.epoll.AbstractEpollStreamChannel, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #11                 // Method shutdownOutput0:(Lio/netty/channel/ChannelPromise;)V
       5: return

  static void access$200(io.netty.channel.epoll.AbstractEpollStreamChannel, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #10                 // Method shutdownInput0:(Lio/netty/channel/ChannelPromise;)V
       5: return

  static void access$300(io.netty.channel.epoll.AbstractEpollStreamChannel, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method shutdown0:(Lio/netty/channel/ChannelPromise;)V
       5: return

  static io.netty.channel.ChannelPromise access$400(io.netty.channel.epoll.AbstractEpollStreamChannel);
    Code:
       0: aload_0
       1: getfield      #8                  // Field connectPromise:Lio/netty/channel/ChannelPromise;
       4: areturn

  static io.netty.channel.ChannelPromise access$402(io.netty.channel.epoll.AbstractEpollStreamChannel, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #8                  // Field connectPromise:Lio/netty/channel/ChannelPromise;
       6: areturn

  static java.net.SocketAddress access$502(io.netty.channel.epoll.AbstractEpollStreamChannel, java.net.SocketAddress);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #7                  // Field requestedRemoteAddress:Ljava/net/SocketAddress;
       6: areturn

  static java.util.concurrent.ScheduledFuture access$602(io.netty.channel.epoll.AbstractEpollStreamChannel, java.util.concurrent.ScheduledFuture);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #6                  // Field connectTimeoutFuture:Ljava/util/concurrent/ScheduledFuture;
       6: areturn

  static java.util.concurrent.ScheduledFuture access$600(io.netty.channel.epoll.AbstractEpollStreamChannel);
    Code:
       0: aload_0
       1: getfield      #6                  // Field connectTimeoutFuture:Ljava/util/concurrent/ScheduledFuture;
       4: areturn

  static java.net.SocketAddress access$500(io.netty.channel.epoll.AbstractEpollStreamChannel);
    Code:
       0: aload_0
       1: getfield      #7                  // Field requestedRemoteAddress:Ljava/net/SocketAddress;
       4: areturn

  static java.util.Queue access$700(io.netty.channel.epoll.AbstractEpollStreamChannel);
    Code:
       0: aload_0
       1: getfield      #5                  // Field spliceQueue:Ljava/util/Queue;
       4: areturn

  static void access$800(io.netty.channel.epoll.AbstractEpollStreamChannel, io.netty.channel.epoll.AbstractEpollStreamChannel$SpliceInTask);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method addToSpliceQueue0:(Lio/netty/channel/epoll/AbstractEpollStreamChannel$SpliceInTask;)V
       5: return

  static io.netty.channel.unix.FileDescriptor access$900(io.netty.channel.epoll.AbstractEpollStreamChannel);
    Code:
       0: aload_0
       1: getfield      #3                  // Field pipeOut:Lio/netty/channel/unix/FileDescriptor;
       4: areturn

  static io.netty.channel.unix.FileDescriptor access$1002(io.netty.channel.epoll.AbstractEpollStreamChannel, io.netty.channel.unix.FileDescriptor);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #2                  // Field pipeIn:Lio/netty/channel/unix/FileDescriptor;
       6: areturn

  static io.netty.channel.unix.FileDescriptor access$902(io.netty.channel.epoll.AbstractEpollStreamChannel, io.netty.channel.unix.FileDescriptor);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #3                  // Field pipeOut:Lio/netty/channel/unix/FileDescriptor;
       6: areturn

  static io.netty.channel.unix.FileDescriptor access$1000(io.netty.channel.epoll.AbstractEpollStreamChannel);
    Code:
       0: aload_0
       1: getfield      #2                  // Field pipeIn:Lio/netty/channel/unix/FileDescriptor;
       4: areturn

  static void access$1100(io.netty.channel.unix.FileDescriptor);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method safeClosePipe:(Lio/netty/channel/unix/FileDescriptor;)V
       4: return

  static {};
    Code:
       0: ldc           #180                // class io/netty/channel/epoll/AbstractEpollStreamChannel
       2: invokevirtual #181                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #73                 // Field $assertionsDisabled:Z
      16: new           #182                // class io/netty/channel/ChannelMetadata
      19: dup
      20: iconst_0
      21: bipush        16
      23: invokespecial #183                // Method io/netty/channel/ChannelMetadata."<init>":(ZI)V
      26: putstatic     #25                 // Field METADATA:Lio/netty/channel/ChannelMetadata;
      29: new           #32                 // class java/lang/StringBuilder
      32: dup
      33: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #184                // String  (expected:
      38: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: ldc           #103                // class io/netty/buffer/ByteBuf
      43: invokestatic  #185                // Method io/netty/util/internal/StringUtil.simpleClassName:(Ljava/lang/Class;)Ljava/lang/String;
      46: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: ldc           #186                // String ,
      51: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: ldc           #108                // class io/netty/channel/DefaultFileRegion
      56: invokestatic  #185                // Method io/netty/util/internal/StringUtil.simpleClassName:(Ljava/lang/Class;)Ljava/lang/String;
      59: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: bipush        41
      64: invokevirtual #187                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      67: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: putstatic     #129                // Field EXPECTED_TYPES:Ljava/lang/String;
      73: ldc           #180                // class io/netty/channel/epoll/AbstractEpollStreamChannel
      75: invokestatic  #188                // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
      78: putstatic     #169                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      81: new           #189                // class java/nio/channels/ClosedChannelException
      84: dup
      85: invokespecial #190                // Method java/nio/channels/ClosedChannelException."<init>":()V
      88: ldc           #180                // class io/netty/channel/epoll/AbstractEpollStreamChannel
      90: ldc           #191                // String doClose()
      92: invokestatic  #192                // Method io/netty/util/internal/ThrowableUtil.unknownStackTrace:(Ljava/lang/Throwable;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Throwable;
      95: checkcast     #189                // class java/nio/channels/ClosedChannelException
      98: putstatic     #157                // Field DO_CLOSE_CLOSED_CHANNEL_EXCEPTION:Ljava/nio/channels/ClosedChannelException;
     101: new           #189                // class java/nio/channels/ClosedChannelException
     104: dup
     105: invokespecial #190                // Method java/nio/channels/ClosedChannelException."<init>":()V
     108: ldc           #180                // class io/netty/channel/epoll/AbstractEpollStreamChannel
     110: ldc           #193                // String clearSpliceQueue()
     112: invokestatic  #192                // Method io/netty/util/internal/ThrowableUtil.unknownStackTrace:(Ljava/lang/Throwable;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Throwable;
     115: checkcast     #189                // class java/nio/channels/ClosedChannelException
     118: putstatic     #163                // Field CLEAR_SPLICE_QUEUE_CLOSED_CHANNEL_EXCEPTION:Ljava/nio/channels/ClosedChannelException;
     121: new           #189                // class java/nio/channels/ClosedChannelException
     124: dup
     125: invokespecial #190                // Method java/nio/channels/ClosedChannelException."<init>":()V
     128: ldc           #180                // class io/netty/channel/epoll/AbstractEpollStreamChannel
     130: ldc           #194                // String spliceTo(...)
     132: invokestatic  #192                // Method io/netty/util/internal/ThrowableUtil.unknownStackTrace:(Ljava/lang/Throwable;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Throwable;
     135: checkcast     #189                // class java/nio/channels/ClosedChannelException
     138: putstatic     #49                 // Field SPLICE_TO_CLOSED_CHANNEL_EXCEPTION:Ljava/nio/channels/ClosedChannelException;
     141: new           #189                // class java/nio/channels/ClosedChannelException
     144: dup
     145: invokespecial #190                // Method java/nio/channels/ClosedChannelException."<init>":()V
     148: ldc           #180                // class io/netty/channel/epoll/AbstractEpollStreamChannel
     150: ldc           #195                // String failSpliceIfClosed(...)
     152: invokestatic  #192                // Method io/netty/util/internal/ThrowableUtil.unknownStackTrace:(Ljava/lang/Throwable;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Throwable;
     155: checkcast     #189                // class java/nio/channels/ClosedChannelException
     158: putstatic     #59                 // Field FAIL_SPLICE_IF_CLOSED_CLOSED_CHANNEL_EXCEPTION:Ljava/nio/channels/ClosedChannelException;
     161: return
}
