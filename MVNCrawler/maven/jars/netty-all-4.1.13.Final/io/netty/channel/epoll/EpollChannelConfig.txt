Compiled from "EpollChannelConfig.java"
public class io.netty.channel.epoll.EpollChannelConfig extends io.netty.channel.DefaultChannelConfig {
  final io.netty.channel.epoll.AbstractEpollChannel channel;

  io.netty.channel.epoll.EpollChannelConfig(io.netty.channel.epoll.AbstractEpollChannel);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method io/netty/channel/DefaultChannelConfig."<init>":(Lio/netty/channel/Channel;)V
       5: aload_0
       6: aload_1
       7: putfield      #2                  // Field channel:Lio/netty/channel/epoll/AbstractEpollChannel;
      10: return

  public java.util.Map<io.netty.channel.ChannelOption<?>, java.lang.Object> getOptions();
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #3                  // Method io/netty/channel/DefaultChannelConfig.getOptions:()Ljava/util/Map;
       5: iconst_1
       6: anewarray     #4                  // class io/netty/channel/ChannelOption
       9: dup
      10: iconst_0
      11: getstatic     #5                  // Field io/netty/channel/epoll/EpollChannelOption.EPOLL_MODE:Lio/netty/channel/ChannelOption;
      14: aastore
      15: invokevirtual #6                  // Method getOptions:(Ljava/util/Map;[Lio/netty/channel/ChannelOption;)Ljava/util/Map;
      18: areturn

  public <T> T getOption(io.netty.channel.ChannelOption<T>);
    Code:
       0: aload_1
       1: getstatic     #5                  // Field io/netty/channel/epoll/EpollChannelOption.EPOLL_MODE:Lio/netty/channel/ChannelOption;
       4: if_acmpne     12
       7: aload_0
       8: invokevirtual #7                  // Method getEpollMode:()Lio/netty/channel/epoll/EpollMode;
      11: areturn
      12: aload_0
      13: aload_1
      14: invokespecial #8                  // Method io/netty/channel/DefaultChannelConfig.getOption:(Lio/netty/channel/ChannelOption;)Ljava/lang/Object;
      17: areturn

  public <T> boolean setOption(io.netty.channel.ChannelOption<T>, T);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #9                  // Method validate:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)V
       6: aload_1
       7: getstatic     #5                  // Field io/netty/channel/epoll/EpollChannelOption.EPOLL_MODE:Lio/netty/channel/ChannelOption;
      10: if_acmpne     25
      13: aload_0
      14: aload_2
      15: checkcast     #10                 // class io/netty/channel/epoll/EpollMode
      18: invokevirtual #11                 // Method setEpollMode:(Lio/netty/channel/epoll/EpollMode;)Lio/netty/channel/epoll/EpollChannelConfig;
      21: pop
      22: goto          32
      25: aload_0
      26: aload_1
      27: aload_2
      28: invokespecial #12                 // Method io/netty/channel/DefaultChannelConfig.setOption:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)Z
      31: ireturn
      32: iconst_1
      33: ireturn

  public io.netty.channel.epoll.EpollChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #13                 // Method io/netty/channel/DefaultChannelConfig.setConnectTimeoutMillis:(I)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #14                 // Method io/netty/channel/DefaultChannelConfig.setMaxMessagesPerRead:(I)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #15                 // Method io/netty/channel/DefaultChannelConfig.setWriteSpinCount:(I)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #16                 // Method io/netty/channel/DefaultChannelConfig.setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_1
       1: invokeinterface #17,  1           // InterfaceMethod io/netty/channel/RecvByteBufAllocator.newHandle:()Lio/netty/channel/RecvByteBufAllocator$Handle;
       6: instanceof    #18                 // class io/netty/channel/RecvByteBufAllocator$ExtendedHandle
       9: ifne          40
      12: new           #19                 // class java/lang/IllegalArgumentException
      15: dup
      16: new           #20                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #22                 // String allocator.newHandle() must return an object of type:
      25: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: ldc           #18                 // class io/netty/channel/RecvByteBufAllocator$ExtendedHandle
      30: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      33: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokespecial #26                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_0
      41: aload_1
      42: invokespecial #27                 // Method io/netty/channel/DefaultChannelConfig.setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/ChannelConfig;
      45: pop
      46: aload_0
      47: areturn

  public io.netty.channel.epoll.EpollChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #28                 // Method io/netty/channel/DefaultChannelConfig.setAutoRead:(Z)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollChannelConfig setWriteBufferHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #29                 // Method io/netty/channel/DefaultChannelConfig.setWriteBufferHighWaterMark:(I)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollChannelConfig setWriteBufferLowWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #30                 // Method io/netty/channel/DefaultChannelConfig.setWriteBufferLowWaterMark:(I)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #31                 // Method io/netty/channel/DefaultChannelConfig.setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #32                 // Method io/netty/channel/DefaultChannelConfig.setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollMode getEpollMode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field channel:Lio/netty/channel/epoll/AbstractEpollChannel;
       4: getstatic     #33                 // Field io/netty/channel/epoll/Native.EPOLLET:I
       7: invokevirtual #34                 // Method io/netty/channel/epoll/AbstractEpollChannel.isFlagSet:(I)Z
      10: ifeq          19
      13: getstatic     #35                 // Field io/netty/channel/epoll/EpollMode.EDGE_TRIGGERED:Lio/netty/channel/epoll/EpollMode;
      16: goto          22
      19: getstatic     #36                 // Field io/netty/channel/epoll/EpollMode.LEVEL_TRIGGERED:Lio/netty/channel/epoll/EpollMode;
      22: areturn

  public io.netty.channel.epoll.EpollChannelConfig setEpollMode(io.netty.channel.epoll.EpollMode);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #37                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #38                 // String mode
      10: invokespecial #39                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: getstatic     #40                 // Field io/netty/channel/epoll/EpollChannelConfig$1.$SwitchMap$io$netty$channel$epoll$EpollMode:[I
      17: aload_1
      18: invokevirtual #41                 // Method io/netty/channel/epoll/EpollMode.ordinal:()I
      21: iaload
      22: lookupswitch  { // 2
                     1: 48
                     2: 65
               default: 82
          }
      48: aload_0
      49: invokespecial #42                 // Method checkChannelNotRegistered:()V
      52: aload_0
      53: getfield      #2                  // Field channel:Lio/netty/channel/epoll/AbstractEpollChannel;
      56: getstatic     #33                 // Field io/netty/channel/epoll/Native.EPOLLET:I
      59: invokevirtual #43                 // Method io/netty/channel/epoll/AbstractEpollChannel.setFlag:(I)V
      62: goto          90
      65: aload_0
      66: invokespecial #42                 // Method checkChannelNotRegistered:()V
      69: aload_0
      70: getfield      #2                  // Field channel:Lio/netty/channel/epoll/AbstractEpollChannel;
      73: getstatic     #33                 // Field io/netty/channel/epoll/Native.EPOLLET:I
      76: invokevirtual #44                 // Method io/netty/channel/epoll/AbstractEpollChannel.clearFlag:(I)V
      79: goto          90
      82: new           #45                 // class java/lang/Error
      85: dup
      86: invokespecial #46                 // Method java/lang/Error."<init>":()V
      89: athrow
      90: goto          103
      93: astore_2
      94: new           #48                 // class io/netty/channel/ChannelException
      97: dup
      98: aload_2
      99: invokespecial #49                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
     102: athrow
     103: aload_0
     104: areturn
    Exception table:
       from    to  target type
          14    90    93   Class java/io/IOException

  private void checkChannelNotRegistered();
    Code:
       0: aload_0
       1: getfield      #2                  // Field channel:Lio/netty/channel/epoll/AbstractEpollChannel;
       4: invokevirtual #50                 // Method io/netty/channel/epoll/AbstractEpollChannel.isRegistered:()Z
       7: ifeq          20
      10: new           #51                 // class java/lang/IllegalStateException
      13: dup
      14: ldc           #52                 // String EpollMode can only be changed before channel is registered
      16: invokespecial #53                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: return

  protected final void autoReadCleared();
    Code:
       0: aload_0
       1: getfield      #2                  // Field channel:Lio/netty/channel/epoll/AbstractEpollChannel;
       4: invokevirtual #54                 // Method io/netty/channel/epoll/AbstractEpollChannel.clearEpollIn:()V
       7: return

  public io.netty.channel.ChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #55                 // Method setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/epoll/EpollChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #56                 // Method setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/epoll/EpollChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #57                 // Method setWriteBufferLowWaterMark:(I)Lio/netty/channel/epoll/EpollChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #58                 // Method setWriteBufferHighWaterMark:(I)Lio/netty/channel/epoll/EpollChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #59                 // Method setAutoRead:(Z)Lio/netty/channel/epoll/EpollChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #60                 // Method setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/epoll/EpollChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #61                 // Method setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/epoll/EpollChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #62                 // Method setWriteSpinCount:(I)Lio/netty/channel/epoll/EpollChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #63                 // Method setMaxMessagesPerRead:(I)Lio/netty/channel/epoll/EpollChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #64                 // Method setConnectTimeoutMillis:(I)Lio/netty/channel/epoll/EpollChannelConfig;
       5: areturn
}
