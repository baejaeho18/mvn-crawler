Compiled from "AbstractChannel.java"
public abstract class io.netty.channel.AbstractChannel extends io.netty.util.DefaultAttributeMap implements io.netty.channel.Channel {
  private static final io.netty.util.internal.logging.InternalLogger logger;

  private static final java.nio.channels.ClosedChannelException FLUSH0_CLOSED_CHANNEL_EXCEPTION;

  private static final java.nio.channels.ClosedChannelException ENSURE_OPEN_CLOSED_CHANNEL_EXCEPTION;

  private static final java.nio.channels.ClosedChannelException CLOSE_CLOSED_CHANNEL_EXCEPTION;

  private static final java.nio.channels.ClosedChannelException WRITE_CLOSED_CHANNEL_EXCEPTION;

  private static final java.nio.channels.NotYetConnectedException FLUSH0_NOT_YET_CONNECTED_EXCEPTION;

  private final io.netty.channel.Channel parent;

  private final io.netty.channel.ChannelId id;

  private final io.netty.channel.Channel$Unsafe unsafe;

  private final io.netty.channel.DefaultChannelPipeline pipeline;

  private final io.netty.channel.VoidChannelPromise unsafeVoidPromise;

  private final io.netty.channel.AbstractChannel$CloseFuture closeFuture;

  private volatile java.net.SocketAddress localAddress;

  private volatile java.net.SocketAddress remoteAddress;

  private volatile io.netty.channel.EventLoop eventLoop;

  private volatile boolean registered;

  private boolean strValActive;

  private java.lang.String strVal;

  protected io.netty.channel.AbstractChannel(io.netty.channel.Channel);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method io/netty/util/DefaultAttributeMap."<init>":()V
       4: aload_0
       5: new           #13                 // class io/netty/channel/VoidChannelPromise
       8: dup
       9: aload_0
      10: iconst_0
      11: invokespecial #14                 // Method io/netty/channel/VoidChannelPromise."<init>":(Lio/netty/channel/Channel;Z)V
      14: putfield      #2                  // Field unsafeVoidPromise:Lio/netty/channel/VoidChannelPromise;
      17: aload_0
      18: new           #15                 // class io/netty/channel/AbstractChannel$CloseFuture
      21: dup
      22: aload_0
      23: invokespecial #16                 // Method io/netty/channel/AbstractChannel$CloseFuture."<init>":(Lio/netty/channel/AbstractChannel;)V
      26: putfield      #8                  // Field closeFuture:Lio/netty/channel/AbstractChannel$CloseFuture;
      29: aload_0
      30: aload_1
      31: putfield      #17                 // Field parent:Lio/netty/channel/Channel;
      34: aload_0
      35: aload_0
      36: invokevirtual #18                 // Method newId:()Lio/netty/channel/ChannelId;
      39: putfield      #19                 // Field id:Lio/netty/channel/ChannelId;
      42: aload_0
      43: aload_0
      44: invokevirtual #20                 // Method newUnsafe:()Lio/netty/channel/AbstractChannel$AbstractUnsafe;
      47: putfield      #21                 // Field unsafe:Lio/netty/channel/Channel$Unsafe;
      50: aload_0
      51: aload_0
      52: invokevirtual #22                 // Method newChannelPipeline:()Lio/netty/channel/DefaultChannelPipeline;
      55: putfield      #7                  // Field pipeline:Lio/netty/channel/DefaultChannelPipeline;
      58: return

  protected io.netty.channel.AbstractChannel(io.netty.channel.Channel, io.netty.channel.ChannelId);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method io/netty/util/DefaultAttributeMap."<init>":()V
       4: aload_0
       5: new           #13                 // class io/netty/channel/VoidChannelPromise
       8: dup
       9: aload_0
      10: iconst_0
      11: invokespecial #14                 // Method io/netty/channel/VoidChannelPromise."<init>":(Lio/netty/channel/Channel;Z)V
      14: putfield      #2                  // Field unsafeVoidPromise:Lio/netty/channel/VoidChannelPromise;
      17: aload_0
      18: new           #15                 // class io/netty/channel/AbstractChannel$CloseFuture
      21: dup
      22: aload_0
      23: invokespecial #16                 // Method io/netty/channel/AbstractChannel$CloseFuture."<init>":(Lio/netty/channel/AbstractChannel;)V
      26: putfield      #8                  // Field closeFuture:Lio/netty/channel/AbstractChannel$CloseFuture;
      29: aload_0
      30: aload_1
      31: putfield      #17                 // Field parent:Lio/netty/channel/Channel;
      34: aload_0
      35: aload_2
      36: putfield      #19                 // Field id:Lio/netty/channel/ChannelId;
      39: aload_0
      40: aload_0
      41: invokevirtual #20                 // Method newUnsafe:()Lio/netty/channel/AbstractChannel$AbstractUnsafe;
      44: putfield      #21                 // Field unsafe:Lio/netty/channel/Channel$Unsafe;
      47: aload_0
      48: aload_0
      49: invokevirtual #22                 // Method newChannelPipeline:()Lio/netty/channel/DefaultChannelPipeline;
      52: putfield      #7                  // Field pipeline:Lio/netty/channel/DefaultChannelPipeline;
      55: return

  public final io.netty.channel.ChannelId id();
    Code:
       0: aload_0
       1: getfield      #19                 // Field id:Lio/netty/channel/ChannelId;
       4: areturn

  protected io.netty.channel.ChannelId newId();
    Code:
       0: invokestatic  #23                 // Method io/netty/channel/DefaultChannelId.newInstance:()Lio/netty/channel/DefaultChannelId;
       3: areturn

  protected io.netty.channel.DefaultChannelPipeline newChannelPipeline();
    Code:
       0: new           #24                 // class io/netty/channel/DefaultChannelPipeline
       3: dup
       4: aload_0
       5: invokespecial #25                 // Method io/netty/channel/DefaultChannelPipeline."<init>":(Lio/netty/channel/Channel;)V
       8: areturn

  public boolean isWritable();
    Code:
       0: aload_0
       1: getfield      #21                 // Field unsafe:Lio/netty/channel/Channel$Unsafe;
       4: invokeinterface #26,  1           // InterfaceMethod io/netty/channel/Channel$Unsafe.outboundBuffer:()Lio/netty/channel/ChannelOutboundBuffer;
       9: astore_1
      10: aload_1
      11: ifnull        25
      14: aload_1
      15: invokevirtual #27                 // Method io/netty/channel/ChannelOutboundBuffer.isWritable:()Z
      18: ifeq          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  public long bytesBeforeUnwritable();
    Code:
       0: aload_0
       1: getfield      #21                 // Field unsafe:Lio/netty/channel/Channel$Unsafe;
       4: invokeinterface #26,  1           // InterfaceMethod io/netty/channel/Channel$Unsafe.outboundBuffer:()Lio/netty/channel/ChannelOutboundBuffer;
       9: astore_1
      10: aload_1
      11: ifnull        21
      14: aload_1
      15: invokevirtual #28                 // Method io/netty/channel/ChannelOutboundBuffer.bytesBeforeUnwritable:()J
      18: goto          22
      21: lconst_0
      22: lreturn

  public long bytesBeforeWritable();
    Code:
       0: aload_0
       1: getfield      #21                 // Field unsafe:Lio/netty/channel/Channel$Unsafe;
       4: invokeinterface #26,  1           // InterfaceMethod io/netty/channel/Channel$Unsafe.outboundBuffer:()Lio/netty/channel/ChannelOutboundBuffer;
       9: astore_1
      10: aload_1
      11: ifnull        21
      14: aload_1
      15: invokevirtual #29                 // Method io/netty/channel/ChannelOutboundBuffer.bytesBeforeWritable:()J
      18: goto          24
      21: ldc2_w        #31                 // long 9223372036854775807l
      24: lreturn

  public io.netty.channel.Channel parent();
    Code:
       0: aload_0
       1: getfield      #17                 // Field parent:Lio/netty/channel/Channel;
       4: areturn

  public io.netty.channel.ChannelPipeline pipeline();
    Code:
       0: aload_0
       1: getfield      #7                  // Field pipeline:Lio/netty/channel/DefaultChannelPipeline;
       4: areturn

  public io.netty.buffer.ByteBufAllocator alloc();
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method config:()Lio/netty/channel/ChannelConfig;
       4: invokeinterface #34,  1           // InterfaceMethod io/netty/channel/ChannelConfig.getAllocator:()Lio/netty/buffer/ByteBufAllocator;
       9: areturn

  public io.netty.channel.EventLoop eventLoop();
    Code:
       0: aload_0
       1: getfield      #10                 // Field eventLoop:Lio/netty/channel/EventLoop;
       4: astore_1
       5: aload_1
       6: ifnonnull     19
       9: new           #35                 // class java/lang/IllegalStateException
      12: dup
      13: ldc           #36                 // String channel not registered to an event loop
      15: invokespecial #37                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_1
      20: areturn

  public java.net.SocketAddress localAddress();
    Code:
       0: aload_0
       1: getfield      #38                 // Field localAddress:Ljava/net/SocketAddress;
       4: astore_1
       5: aload_1
       6: ifnonnull     30
       9: aload_0
      10: aload_0
      11: invokevirtual #39                 // Method unsafe:()Lio/netty/channel/Channel$Unsafe;
      14: invokeinterface #40,  1           // InterfaceMethod io/netty/channel/Channel$Unsafe.localAddress:()Ljava/net/SocketAddress;
      19: dup
      20: astore_1
      21: putfield      #38                 // Field localAddress:Ljava/net/SocketAddress;
      24: goto          30
      27: astore_2
      28: aconst_null
      29: areturn
      30: aload_1
      31: areturn
    Exception table:
       from    to  target type
           9    24    27   Class java/lang/Throwable

  protected void invalidateLocalAddress();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #38                 // Field localAddress:Ljava/net/SocketAddress;
       5: return

  public java.net.SocketAddress remoteAddress();
    Code:
       0: aload_0
       1: getfield      #42                 // Field remoteAddress:Ljava/net/SocketAddress;
       4: astore_1
       5: aload_1
       6: ifnonnull     30
       9: aload_0
      10: aload_0
      11: invokevirtual #39                 // Method unsafe:()Lio/netty/channel/Channel$Unsafe;
      14: invokeinterface #43,  1           // InterfaceMethod io/netty/channel/Channel$Unsafe.remoteAddress:()Ljava/net/SocketAddress;
      19: dup
      20: astore_1
      21: putfield      #42                 // Field remoteAddress:Ljava/net/SocketAddress;
      24: goto          30
      27: astore_2
      28: aconst_null
      29: areturn
      30: aload_1
      31: areturn
    Exception table:
       from    to  target type
           9    24    27   Class java/lang/Throwable

  protected void invalidateRemoteAddress();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #42                 // Field remoteAddress:Ljava/net/SocketAddress;
       5: return

  public boolean isRegistered();
    Code:
       0: aload_0
       1: getfield      #11                 // Field registered:Z
       4: ireturn

  public io.netty.channel.ChannelFuture bind(java.net.SocketAddress);
    Code:
       0: aload_0
       1: getfield      #7                  // Field pipeline:Lio/netty/channel/DefaultChannelPipeline;
       4: aload_1
       5: invokevirtual #44                 // Method io/netty/channel/DefaultChannelPipeline.bind:(Ljava/net/SocketAddress;)Lio/netty/channel/ChannelFuture;
       8: areturn

  public io.netty.channel.ChannelFuture connect(java.net.SocketAddress);
    Code:
       0: aload_0
       1: getfield      #7                  // Field pipeline:Lio/netty/channel/DefaultChannelPipeline;
       4: aload_1
       5: invokevirtual #45                 // Method io/netty/channel/DefaultChannelPipeline.connect:(Ljava/net/SocketAddress;)Lio/netty/channel/ChannelFuture;
       8: areturn

  public io.netty.channel.ChannelFuture connect(java.net.SocketAddress, java.net.SocketAddress);
    Code:
       0: aload_0
       1: getfield      #7                  // Field pipeline:Lio/netty/channel/DefaultChannelPipeline;
       4: aload_1
       5: aload_2
       6: invokevirtual #46                 // Method io/netty/channel/DefaultChannelPipeline.connect:(Ljava/net/SocketAddress;Ljava/net/SocketAddress;)Lio/netty/channel/ChannelFuture;
       9: areturn

  public io.netty.channel.ChannelFuture disconnect();
    Code:
       0: aload_0
       1: getfield      #7                  // Field pipeline:Lio/netty/channel/DefaultChannelPipeline;
       4: invokevirtual #47                 // Method io/netty/channel/DefaultChannelPipeline.disconnect:()Lio/netty/channel/ChannelFuture;
       7: areturn

  public io.netty.channel.ChannelFuture close();
    Code:
       0: aload_0
       1: getfield      #7                  // Field pipeline:Lio/netty/channel/DefaultChannelPipeline;
       4: invokevirtual #48                 // Method io/netty/channel/DefaultChannelPipeline.close:()Lio/netty/channel/ChannelFuture;
       7: areturn

  public io.netty.channel.ChannelFuture deregister();
    Code:
       0: aload_0
       1: getfield      #7                  // Field pipeline:Lio/netty/channel/DefaultChannelPipeline;
       4: invokevirtual #49                 // Method io/netty/channel/DefaultChannelPipeline.deregister:()Lio/netty/channel/ChannelFuture;
       7: areturn

  public io.netty.channel.Channel flush();
    Code:
       0: aload_0
       1: getfield      #7                  // Field pipeline:Lio/netty/channel/DefaultChannelPipeline;
       4: invokevirtual #50                 // Method io/netty/channel/DefaultChannelPipeline.flush:()Lio/netty/channel/ChannelPipeline;
       7: pop
       8: aload_0
       9: areturn

  public io.netty.channel.ChannelFuture bind(java.net.SocketAddress, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #7                  // Field pipeline:Lio/netty/channel/DefaultChannelPipeline;
       4: aload_1
       5: aload_2
       6: invokevirtual #51                 // Method io/netty/channel/DefaultChannelPipeline.bind:(Ljava/net/SocketAddress;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       9: areturn

  public io.netty.channel.ChannelFuture connect(java.net.SocketAddress, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #7                  // Field pipeline:Lio/netty/channel/DefaultChannelPipeline;
       4: aload_1
       5: aload_2
       6: invokevirtual #52                 // Method io/netty/channel/DefaultChannelPipeline.connect:(Ljava/net/SocketAddress;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       9: areturn

  public io.netty.channel.ChannelFuture connect(java.net.SocketAddress, java.net.SocketAddress, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #7                  // Field pipeline:Lio/netty/channel/DefaultChannelPipeline;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #53                 // Method io/netty/channel/DefaultChannelPipeline.connect:(Ljava/net/SocketAddress;Ljava/net/SocketAddress;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      10: areturn

  public io.netty.channel.ChannelFuture disconnect(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #7                  // Field pipeline:Lio/netty/channel/DefaultChannelPipeline;
       4: aload_1
       5: invokevirtual #54                 // Method io/netty/channel/DefaultChannelPipeline.disconnect:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       8: areturn

  public io.netty.channel.ChannelFuture close(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #7                  // Field pipeline:Lio/netty/channel/DefaultChannelPipeline;
       4: aload_1
       5: invokevirtual #55                 // Method io/netty/channel/DefaultChannelPipeline.close:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       8: areturn

  public io.netty.channel.ChannelFuture deregister(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #7                  // Field pipeline:Lio/netty/channel/DefaultChannelPipeline;
       4: aload_1
       5: invokevirtual #56                 // Method io/netty/channel/DefaultChannelPipeline.deregister:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       8: areturn

  public io.netty.channel.Channel read();
    Code:
       0: aload_0
       1: getfield      #7                  // Field pipeline:Lio/netty/channel/DefaultChannelPipeline;
       4: invokevirtual #57                 // Method io/netty/channel/DefaultChannelPipeline.read:()Lio/netty/channel/ChannelPipeline;
       7: pop
       8: aload_0
       9: areturn

  public io.netty.channel.ChannelFuture write(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #7                  // Field pipeline:Lio/netty/channel/DefaultChannelPipeline;
       4: aload_1
       5: invokevirtual #58                 // Method io/netty/channel/DefaultChannelPipeline.write:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
       8: areturn

  public io.netty.channel.ChannelFuture write(java.lang.Object, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #7                  // Field pipeline:Lio/netty/channel/DefaultChannelPipeline;
       4: aload_1
       5: aload_2
       6: invokevirtual #59                 // Method io/netty/channel/DefaultChannelPipeline.write:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       9: areturn

  public io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #7                  // Field pipeline:Lio/netty/channel/DefaultChannelPipeline;
       4: aload_1
       5: invokevirtual #60                 // Method io/netty/channel/DefaultChannelPipeline.writeAndFlush:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
       8: areturn

  public io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #7                  // Field pipeline:Lio/netty/channel/DefaultChannelPipeline;
       4: aload_1
       5: aload_2
       6: invokevirtual #61                 // Method io/netty/channel/DefaultChannelPipeline.writeAndFlush:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       9: areturn

  public io.netty.channel.ChannelPromise newPromise();
    Code:
       0: aload_0
       1: getfield      #7                  // Field pipeline:Lio/netty/channel/DefaultChannelPipeline;
       4: invokevirtual #62                 // Method io/netty/channel/DefaultChannelPipeline.newPromise:()Lio/netty/channel/ChannelPromise;
       7: areturn

  public io.netty.channel.ChannelProgressivePromise newProgressivePromise();
    Code:
       0: aload_0
       1: getfield      #7                  // Field pipeline:Lio/netty/channel/DefaultChannelPipeline;
       4: invokevirtual #63                 // Method io/netty/channel/DefaultChannelPipeline.newProgressivePromise:()Lio/netty/channel/ChannelProgressivePromise;
       7: areturn

  public io.netty.channel.ChannelFuture newSucceededFuture();
    Code:
       0: aload_0
       1: getfield      #7                  // Field pipeline:Lio/netty/channel/DefaultChannelPipeline;
       4: invokevirtual #64                 // Method io/netty/channel/DefaultChannelPipeline.newSucceededFuture:()Lio/netty/channel/ChannelFuture;
       7: areturn

  public io.netty.channel.ChannelFuture newFailedFuture(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #7                  // Field pipeline:Lio/netty/channel/DefaultChannelPipeline;
       4: aload_1
       5: invokevirtual #65                 // Method io/netty/channel/DefaultChannelPipeline.newFailedFuture:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelFuture;
       8: areturn

  public io.netty.channel.ChannelFuture closeFuture();
    Code:
       0: aload_0
       1: getfield      #8                  // Field closeFuture:Lio/netty/channel/AbstractChannel$CloseFuture;
       4: areturn

  public io.netty.channel.Channel$Unsafe unsafe();
    Code:
       0: aload_0
       1: getfield      #21                 // Field unsafe:Lio/netty/channel/Channel$Unsafe;
       4: areturn

  protected abstract io.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe();

  public final int hashCode();
    Code:
       0: aload_0
       1: getfield      #19                 // Field id:Lio/netty/channel/ChannelId;
       4: invokevirtual #66                 // Method java/lang/Object.hashCode:()I
       7: ireturn

  public final boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: ireturn

  public final int compareTo(io.netty.channel.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_0
       6: ireturn
       7: aload_0
       8: invokevirtual #67                 // Method id:()Lio/netty/channel/ChannelId;
      11: aload_1
      12: invokeinterface #68,  1           // InterfaceMethod io/netty/channel/Channel.id:()Lio/netty/channel/ChannelId;
      17: invokeinterface #69,  2           // InterfaceMethod io/netty/channel/ChannelId.compareTo:(Ljava/lang/Object;)I
      22: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #70                 // Method isActive:()Z
       4: istore_1
       5: aload_0
       6: getfield      #71                 // Field strValActive:Z
       9: iload_1
      10: if_icmpne     25
      13: aload_0
      14: getfield      #72                 // Field strVal:Ljava/lang/String;
      17: ifnull        25
      20: aload_0
      21: getfield      #72                 // Field strVal:Ljava/lang/String;
      24: areturn
      25: aload_0
      26: invokevirtual #73                 // Method remoteAddress:()Ljava/net/SocketAddress;
      29: astore_2
      30: aload_0
      31: invokevirtual #74                 // Method localAddress:()Ljava/net/SocketAddress;
      34: astore_3
      35: aload_2
      36: ifnull        116
      39: new           #75                 // class java/lang/StringBuilder
      42: dup
      43: bipush        96
      45: invokespecial #76                 // Method java/lang/StringBuilder."<init>":(I)V
      48: ldc           #77                 // String [id: 0x
      50: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_0
      54: getfield      #19                 // Field id:Lio/netty/channel/ChannelId;
      57: invokeinterface #79,  1           // InterfaceMethod io/netty/channel/ChannelId.asShortText:()Ljava/lang/String;
      62: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: ldc           #80                 // String , L:
      67: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: aload_3
      71: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      74: iload_1
      75: ifeq          83
      78: ldc           #82                 // String  -
      80: goto          85
      83: ldc           #83                 // String  !
      85: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: ldc           #84                 // String R:
      90: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: aload_2
      94: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      97: bipush        93
      99: invokevirtual #85                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     102: astore        4
     104: aload_0
     105: aload         4
     107: invokevirtual #86                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     110: putfield      #72                 // Field strVal:Ljava/lang/String;
     113: goto          216
     116: aload_3
     117: ifnull        174
     120: new           #75                 // class java/lang/StringBuilder
     123: dup
     124: bipush        64
     126: invokespecial #76                 // Method java/lang/StringBuilder."<init>":(I)V
     129: ldc           #77                 // String [id: 0x
     131: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: aload_0
     135: getfield      #19                 // Field id:Lio/netty/channel/ChannelId;
     138: invokeinterface #79,  1           // InterfaceMethod io/netty/channel/ChannelId.asShortText:()Ljava/lang/String;
     143: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     146: ldc           #80                 // String , L:
     148: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     151: aload_3
     152: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     155: bipush        93
     157: invokevirtual #85                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     160: astore        4
     162: aload_0
     163: aload         4
     165: invokevirtual #86                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     168: putfield      #72                 // Field strVal:Ljava/lang/String;
     171: goto          216
     174: new           #75                 // class java/lang/StringBuilder
     177: dup
     178: bipush        16
     180: invokespecial #76                 // Method java/lang/StringBuilder."<init>":(I)V
     183: ldc           #77                 // String [id: 0x
     185: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     188: aload_0
     189: getfield      #19                 // Field id:Lio/netty/channel/ChannelId;
     192: invokeinterface #79,  1           // InterfaceMethod io/netty/channel/ChannelId.asShortText:()Ljava/lang/String;
     197: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     200: bipush        93
     202: invokevirtual #85                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     205: astore        4
     207: aload_0
     208: aload         4
     210: invokevirtual #86                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     213: putfield      #72                 // Field strVal:Ljava/lang/String;
     216: aload_0
     217: iload_1
     218: putfield      #71                 // Field strValActive:Z
     221: aload_0
     222: getfield      #72                 // Field strVal:Ljava/lang/String;
     225: areturn

  public final io.netty.channel.ChannelPromise voidPromise();
    Code:
       0: aload_0
       1: getfield      #7                  // Field pipeline:Lio/netty/channel/DefaultChannelPipeline;
       4: invokevirtual #87                 // Method io/netty/channel/DefaultChannelPipeline.voidPromise:()Lio/netty/channel/ChannelPromise;
       7: areturn

  protected abstract boolean isCompatible(io.netty.channel.EventLoop);

  protected abstract java.net.SocketAddress localAddress0();

  protected abstract java.net.SocketAddress remoteAddress0();

  protected void doRegister() throws java.lang.Exception;
    Code:
       0: return

  protected abstract void doBind(java.net.SocketAddress) throws java.lang.Exception;

  protected abstract void doDisconnect() throws java.lang.Exception;

  protected abstract void doClose() throws java.lang.Exception;

  protected void doDeregister() throws java.lang.Exception;
    Code:
       0: return

  protected abstract void doBeginRead() throws java.lang.Exception;

  protected abstract void doWrite(io.netty.channel.ChannelOutboundBuffer) throws java.lang.Exception;

  protected java.lang.Object filterOutboundMessage(java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_1
       1: areturn

  public io.netty.channel.ChannelOutboundInvoker flush();
    Code:
       0: aload_0
       1: invokevirtual #88                 // Method flush:()Lio/netty/channel/Channel;
       4: areturn

  public io.netty.channel.ChannelOutboundInvoker read();
    Code:
       0: aload_0
       1: invokevirtual #89                 // Method read:()Lio/netty/channel/Channel;
       4: areturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #90                 // class io/netty/channel/Channel
       5: invokevirtual #91                 // Method compareTo:(Lio/netty/channel/Channel;)I
       8: ireturn

  static boolean access$000(io.netty.channel.AbstractChannel);
    Code:
       0: aload_0
       1: getfield      #11                 // Field registered:Z
       4: ireturn

  static io.netty.channel.EventLoop access$100(io.netty.channel.AbstractChannel);
    Code:
       0: aload_0
       1: getfield      #10                 // Field eventLoop:Lio/netty/channel/EventLoop;
       4: areturn

  static io.netty.channel.EventLoop access$102(io.netty.channel.AbstractChannel, io.netty.channel.EventLoop);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #10                 // Field eventLoop:Lio/netty/channel/EventLoop;
       6: areturn

  static io.netty.util.internal.logging.InternalLogger access$300();
    Code:
       0: getstatic     #9                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       3: areturn

  static io.netty.channel.AbstractChannel$CloseFuture access$400(io.netty.channel.AbstractChannel);
    Code:
       0: aload_0
       1: getfield      #8                  // Field closeFuture:Lio/netty/channel/AbstractChannel$CloseFuture;
       4: areturn

  static boolean access$002(io.netty.channel.AbstractChannel, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #11                 // Field registered:Z
       6: ireturn

  static io.netty.channel.DefaultChannelPipeline access$500(io.netty.channel.AbstractChannel);
    Code:
       0: aload_0
       1: getfield      #7                  // Field pipeline:Lio/netty/channel/DefaultChannelPipeline;
       4: areturn

  static java.nio.channels.ClosedChannelException access$600();
    Code:
       0: getstatic     #6                  // Field CLOSE_CLOSED_CHANNEL_EXCEPTION:Ljava/nio/channels/ClosedChannelException;
       3: areturn

  static java.nio.channels.ClosedChannelException access$1000();
    Code:
       0: getstatic     #5                  // Field WRITE_CLOSED_CHANNEL_EXCEPTION:Ljava/nio/channels/ClosedChannelException;
       3: areturn

  static java.nio.channels.NotYetConnectedException access$1100();
    Code:
       0: getstatic     #4                  // Field FLUSH0_NOT_YET_CONNECTED_EXCEPTION:Ljava/nio/channels/NotYetConnectedException;
       3: areturn

  static java.nio.channels.ClosedChannelException access$1200();
    Code:
       0: getstatic     #3                  // Field FLUSH0_CLOSED_CHANNEL_EXCEPTION:Ljava/nio/channels/ClosedChannelException;
       3: areturn

  static io.netty.channel.VoidChannelPromise access$1300(io.netty.channel.AbstractChannel);
    Code:
       0: aload_0
       1: getfield      #2                  // Field unsafeVoidPromise:Lio/netty/channel/VoidChannelPromise;
       4: areturn

  static java.nio.channels.ClosedChannelException access$1400();
    Code:
       0: getstatic     #1                  // Field ENSURE_OPEN_CLOSED_CHANNEL_EXCEPTION:Ljava/nio/channels/ClosedChannelException;
       3: areturn

  static {};
    Code:
       0: ldc           #92                 // class io/netty/channel/AbstractChannel
       2: invokestatic  #93                 // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
       5: putstatic     #9                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       8: new           #94                 // class java/nio/channels/ClosedChannelException
      11: dup
      12: invokespecial #95                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      15: ldc           #96                 // class io/netty/channel/AbstractChannel$AbstractUnsafe
      17: ldc           #97                 // String flush0()
      19: invokestatic  #98                 // Method io/netty/util/internal/ThrowableUtil.unknownStackTrace:(Ljava/lang/Throwable;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Throwable;
      22: checkcast     #94                 // class java/nio/channels/ClosedChannelException
      25: putstatic     #3                  // Field FLUSH0_CLOSED_CHANNEL_EXCEPTION:Ljava/nio/channels/ClosedChannelException;
      28: new           #94                 // class java/nio/channels/ClosedChannelException
      31: dup
      32: invokespecial #95                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      35: ldc           #96                 // class io/netty/channel/AbstractChannel$AbstractUnsafe
      37: ldc           #99                 // String ensureOpen(...)
      39: invokestatic  #98                 // Method io/netty/util/internal/ThrowableUtil.unknownStackTrace:(Ljava/lang/Throwable;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Throwable;
      42: checkcast     #94                 // class java/nio/channels/ClosedChannelException
      45: putstatic     #1                  // Field ENSURE_OPEN_CLOSED_CHANNEL_EXCEPTION:Ljava/nio/channels/ClosedChannelException;
      48: new           #94                 // class java/nio/channels/ClosedChannelException
      51: dup
      52: invokespecial #95                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      55: ldc           #96                 // class io/netty/channel/AbstractChannel$AbstractUnsafe
      57: ldc           #100                // String close(...)
      59: invokestatic  #98                 // Method io/netty/util/internal/ThrowableUtil.unknownStackTrace:(Ljava/lang/Throwable;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Throwable;
      62: checkcast     #94                 // class java/nio/channels/ClosedChannelException
      65: putstatic     #6                  // Field CLOSE_CLOSED_CHANNEL_EXCEPTION:Ljava/nio/channels/ClosedChannelException;
      68: new           #94                 // class java/nio/channels/ClosedChannelException
      71: dup
      72: invokespecial #95                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      75: ldc           #96                 // class io/netty/channel/AbstractChannel$AbstractUnsafe
      77: ldc           #101                // String write(...)
      79: invokestatic  #98                 // Method io/netty/util/internal/ThrowableUtil.unknownStackTrace:(Ljava/lang/Throwable;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Throwable;
      82: checkcast     #94                 // class java/nio/channels/ClosedChannelException
      85: putstatic     #5                  // Field WRITE_CLOSED_CHANNEL_EXCEPTION:Ljava/nio/channels/ClosedChannelException;
      88: new           #102                // class java/nio/channels/NotYetConnectedException
      91: dup
      92: invokespecial #103                // Method java/nio/channels/NotYetConnectedException."<init>":()V
      95: ldc           #96                 // class io/netty/channel/AbstractChannel$AbstractUnsafe
      97: ldc           #97                 // String flush0()
      99: invokestatic  #98                 // Method io/netty/util/internal/ThrowableUtil.unknownStackTrace:(Ljava/lang/Throwable;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Throwable;
     102: checkcast     #102                // class java/nio/channels/NotYetConnectedException
     105: putstatic     #4                  // Field FLUSH0_NOT_YET_CONNECTED_EXCEPTION:Ljava/nio/channels/NotYetConnectedException;
     108: return
}
