Compiled from "AbstractOioByteChannel.java"
public abstract class io.netty.channel.oio.AbstractOioByteChannel extends io.netty.channel.oio.AbstractOioChannel {
  private static final io.netty.channel.ChannelMetadata METADATA;

  private static final java.lang.String EXPECTED_TYPES;

  protected io.netty.channel.oio.AbstractOioByteChannel(io.netty.channel.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method io/netty/channel/oio/AbstractOioChannel."<init>":(Lio/netty/channel/Channel;)V
       5: return

  public io.netty.channel.ChannelMetadata metadata();
    Code:
       0: getstatic     #2                  // Field METADATA:Lio/netty/channel/ChannelMetadata;
       3: areturn

  protected abstract boolean isInputShutdown();

  protected abstract io.netty.channel.ChannelFuture shutdownInput();

  private void closeOnRead(io.netty.channel.ChannelPipeline);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method isOpen:()Z
       4: ifeq          64
       7: getstatic     #4                  // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      10: aload_0
      11: invokevirtual #5                  // Method config:()Lio/netty/channel/ChannelConfig;
      14: getstatic     #6                  // Field io/netty/channel/ChannelOption.ALLOW_HALF_CLOSURE:Lio/netty/channel/ChannelOption;
      17: invokeinterface #7,  2            // InterfaceMethod io/netty/channel/ChannelConfig.getOption:(Lio/netty/channel/ChannelOption;)Ljava/lang/Object;
      22: invokevirtual #8                  // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
      25: ifeq          46
      28: aload_0
      29: invokevirtual #9                  // Method shutdownInput:()Lio/netty/channel/ChannelFuture;
      32: pop
      33: aload_1
      34: getstatic     #10                 // Field io/netty/channel/socket/ChannelInputShutdownEvent.INSTANCE:Lio/netty/channel/socket/ChannelInputShutdownEvent;
      37: invokeinterface #11,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireUserEventTriggered:(Ljava/lang/Object;)Lio/netty/channel/ChannelPipeline;
      42: pop
      43: goto          64
      46: aload_0
      47: invokevirtual #12                 // Method unsafe:()Lio/netty/channel/Channel$Unsafe;
      50: aload_0
      51: invokevirtual #12                 // Method unsafe:()Lio/netty/channel/Channel$Unsafe;
      54: invokeinterface #13,  1           // InterfaceMethod io/netty/channel/Channel$Unsafe.voidPromise:()Lio/netty/channel/ChannelPromise;
      59: invokeinterface #14,  2           // InterfaceMethod io/netty/channel/Channel$Unsafe.close:(Lio/netty/channel/ChannelPromise;)V
      64: return

  private void handleReadException(io.netty.channel.ChannelPipeline, io.netty.buffer.ByteBuf, java.lang.Throwable, boolean, io.netty.channel.RecvByteBufAllocator$Handle);
    Code:
       0: aload_2
       1: ifnull        32
       4: aload_2
       5: invokevirtual #15                 // Method io/netty/buffer/ByteBuf.isReadable:()Z
       8: ifeq          27
      11: aload_0
      12: iconst_0
      13: putfield      #16                 // Field readPending:Z
      16: aload_1
      17: aload_2
      18: invokeinterface #17,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelPipeline;
      23: pop
      24: goto          32
      27: aload_2
      28: invokevirtual #18                 // Method io/netty/buffer/ByteBuf.release:()Z
      31: pop
      32: aload         5
      34: invokeinterface #19,  1           // InterfaceMethod io/netty/channel/RecvByteBufAllocator$Handle.readComplete:()V
      39: aload_1
      40: invokeinterface #20,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelReadComplete:()Lio/netty/channel/ChannelPipeline;
      45: pop
      46: aload_1
      47: aload_3
      48: invokeinterface #21,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPipeline;
      53: pop
      54: iload         4
      56: ifne          66
      59: aload_3
      60: instanceof    #22                 // class java/io/IOException
      63: ifeq          71
      66: aload_0
      67: aload_1
      68: invokespecial #23                 // Method closeOnRead:(Lio/netty/channel/ChannelPipeline;)V
      71: return

  protected void doRead();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method config:()Lio/netty/channel/ChannelConfig;
       4: astore_1
       5: aload_0
       6: invokevirtual #24                 // Method isInputShutdown:()Z
       9: ifne          19
      12: aload_0
      13: getfield      #16                 // Field readPending:Z
      16: ifne          20
      19: return
      20: aload_0
      21: iconst_0
      22: putfield      #16                 // Field readPending:Z
      25: aload_0
      26: invokevirtual #25                 // Method pipeline:()Lio/netty/channel/ChannelPipeline;
      29: astore_2
      30: aload_1
      31: invokeinterface #26,  1           // InterfaceMethod io/netty/channel/ChannelConfig.getAllocator:()Lio/netty/buffer/ByteBufAllocator;
      36: astore_3
      37: aload_0
      38: invokevirtual #12                 // Method unsafe:()Lio/netty/channel/Channel$Unsafe;
      41: invokeinterface #27,  1           // InterfaceMethod io/netty/channel/Channel$Unsafe.recvBufAllocHandle:()Lio/netty/channel/RecvByteBufAllocator$Handle;
      46: astore        4
      48: aload         4
      50: aload_1
      51: invokeinterface #28,  2           // InterfaceMethod io/netty/channel/RecvByteBufAllocator$Handle.reset:(Lio/netty/channel/ChannelConfig;)V
      56: aconst_null
      57: astore        5
      59: iconst_0
      60: istore        6
      62: iconst_0
      63: istore        7
      65: aload         4
      67: aload_3
      68: invokeinterface #29,  2           // InterfaceMethod io/netty/channel/RecvByteBufAllocator$Handle.allocate:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/buffer/ByteBuf;
      73: astore        5
      75: aload         4
      77: aload_0
      78: aload         5
      80: invokevirtual #30                 // Method doReadBytes:(Lio/netty/buffer/ByteBuf;)I
      83: invokeinterface #31,  2           // InterfaceMethod io/netty/channel/RecvByteBufAllocator$Handle.lastBytesRead:(I)V
      88: aload         4
      90: invokeinterface #32,  1           // InterfaceMethod io/netty/channel/RecvByteBufAllocator$Handle.lastBytesRead:()I
      95: ifgt          135
      98: aload         5
     100: invokevirtual #15                 // Method io/netty/buffer/ByteBuf.isReadable:()Z
     103: ifne          262
     106: aload         5
     108: invokevirtual #18                 // Method io/netty/buffer/ByteBuf.release:()Z
     111: pop
     112: aconst_null
     113: astore        5
     115: aload         4
     117: invokeinterface #32,  1           // InterfaceMethod io/netty/channel/RecvByteBufAllocator$Handle.lastBytesRead:()I
     122: ifge          129
     125: iconst_1
     126: goto          130
     129: iconst_0
     130: istore        6
     132: goto          262
     135: iconst_1
     136: istore        7
     138: aload_0
     139: invokevirtual #33                 // Method available:()I
     142: istore        8
     144: iload         8
     146: ifgt          152
     149: goto          262
     152: aload         5
     154: invokevirtual #34                 // Method io/netty/buffer/ByteBuf.isWritable:()Z
     157: ifne          252
     160: aload         5
     162: invokevirtual #35                 // Method io/netty/buffer/ByteBuf.capacity:()I
     165: istore        9
     167: aload         5
     169: invokevirtual #36                 // Method io/netty/buffer/ByteBuf.maxCapacity:()I
     172: istore        10
     174: iload         9
     176: iload         10
     178: if_icmpne     216
     181: aload         4
     183: iconst_1
     184: invokeinterface #37,  2           // InterfaceMethod io/netty/channel/RecvByteBufAllocator$Handle.incMessagesRead:(I)V
     189: aload_0
     190: iconst_0
     191: putfield      #16                 // Field readPending:Z
     194: aload_2
     195: aload         5
     197: invokeinterface #17,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelPipeline;
     202: pop
     203: aload         4
     205: aload_3
     206: invokeinterface #29,  2           // InterfaceMethod io/netty/channel/RecvByteBufAllocator$Handle.allocate:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/buffer/ByteBuf;
     211: astore        5
     213: goto          252
     216: aload         5
     218: invokevirtual #38                 // Method io/netty/buffer/ByteBuf.writerIndex:()I
     221: istore        11
     223: iload         11
     225: iload         8
     227: iadd
     228: iload         10
     230: if_icmple     244
     233: aload         5
     235: iload         10
     237: invokevirtual #39                 // Method io/netty/buffer/ByteBuf.capacity:(I)Lio/netty/buffer/ByteBuf;
     240: pop
     241: goto          252
     244: aload         5
     246: iload         8
     248: invokevirtual #40                 // Method io/netty/buffer/ByteBuf.ensureWritable:(I)Lio/netty/buffer/ByteBuf;
     251: pop
     252: aload         4
     254: invokeinterface #41,  1           // InterfaceMethod io/netty/channel/RecvByteBufAllocator$Handle.continueReading:()Z
     259: ifne          75
     262: aload         5
     264: ifnull        301
     267: aload         5
     269: invokevirtual #15                 // Method io/netty/buffer/ByteBuf.isReadable:()Z
     272: ifeq          292
     275: aload_0
     276: iconst_0
     277: putfield      #16                 // Field readPending:Z
     280: aload_2
     281: aload         5
     283: invokeinterface #17,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelPipeline;
     288: pop
     289: goto          298
     292: aload         5
     294: invokevirtual #18                 // Method io/netty/buffer/ByteBuf.release:()Z
     297: pop
     298: aconst_null
     299: astore        5
     301: iload         7
     303: ifeq          320
     306: aload         4
     308: invokeinterface #19,  1           // InterfaceMethod io/netty/channel/RecvByteBufAllocator$Handle.readComplete:()V
     313: aload_2
     314: invokeinterface #20,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelReadComplete:()Lio/netty/channel/ChannelPipeline;
     319: pop
     320: iload         6
     322: ifeq          330
     325: aload_0
     326: aload_2
     327: invokespecial #23                 // Method closeOnRead:(Lio/netty/channel/ChannelPipeline;)V
     330: aload_0
     331: getfield      #16                 // Field readPending:Z
     334: ifne          358
     337: aload_1
     338: invokeinterface #42,  1           // InterfaceMethod io/netty/channel/ChannelConfig.isAutoRead:()Z
     343: ifne          358
     346: iload         7
     348: ifne          455
     351: aload_0
     352: invokevirtual #43                 // Method isActive:()Z
     355: ifeq          455
     358: aload_0
     359: invokevirtual #44                 // Method read:()Lio/netty/channel/Channel;
     362: pop
     363: goto          455
     366: astore        8
     368: aload_0
     369: aload_2
     370: aload         5
     372: aload         8
     374: iload         6
     376: aload         4
     378: invokespecial #46                 // Method handleReadException:(Lio/netty/channel/ChannelPipeline;Lio/netty/buffer/ByteBuf;Ljava/lang/Throwable;ZLio/netty/channel/RecvByteBufAllocator$Handle;)V
     381: aload_0
     382: getfield      #16                 // Field readPending:Z
     385: ifne          409
     388: aload_1
     389: invokeinterface #42,  1           // InterfaceMethod io/netty/channel/ChannelConfig.isAutoRead:()Z
     394: ifne          409
     397: iload         7
     399: ifne          455
     402: aload_0
     403: invokevirtual #43                 // Method isActive:()Z
     406: ifeq          455
     409: aload_0
     410: invokevirtual #44                 // Method read:()Lio/netty/channel/Channel;
     413: pop
     414: goto          455
     417: astore        12
     419: aload_0
     420: getfield      #16                 // Field readPending:Z
     423: ifne          447
     426: aload_1
     427: invokeinterface #42,  1           // InterfaceMethod io/netty/channel/ChannelConfig.isAutoRead:()Z
     432: ifne          447
     435: iload         7
     437: ifne          452
     440: aload_0
     441: invokevirtual #43                 // Method isActive:()Z
     444: ifeq          452
     447: aload_0
     448: invokevirtual #44                 // Method read:()Lio/netty/channel/Channel;
     451: pop
     452: aload         12
     454: athrow
     455: return
    Exception table:
       from    to  target type
          65   330   366   Class java/lang/Throwable
          65   330   417   any
         366   381   417   any
         417   419   417   any

  protected void doWrite(io.netty.channel.ChannelOutboundBuffer) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #47                 // Method io/netty/channel/ChannelOutboundBuffer.current:()Ljava/lang/Object;
       4: astore_2
       5: aload_2
       6: ifnonnull     12
       9: goto          154
      12: aload_2
      13: instanceof    #48                 // class io/netty/buffer/ByteBuf
      16: ifeq          71
      19: aload_2
      20: checkcast     #48                 // class io/netty/buffer/ByteBuf
      23: astore_3
      24: aload_3
      25: invokevirtual #49                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
      28: istore        4
      30: iload         4
      32: ifle          63
      35: aload_0
      36: aload_3
      37: invokevirtual #50                 // Method doWriteBytes:(Lio/netty/buffer/ByteBuf;)V
      40: aload_3
      41: invokevirtual #49                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
      44: istore        5
      46: aload_1
      47: iload         4
      49: iload         5
      51: isub
      52: i2l
      53: invokevirtual #51                 // Method io/netty/channel/ChannelOutboundBuffer.progress:(J)V
      56: iload         5
      58: istore        4
      60: goto          30
      63: aload_1
      64: invokevirtual #52                 // Method io/netty/channel/ChannelOutboundBuffer.remove:()Z
      67: pop
      68: goto          151
      71: aload_2
      72: instanceof    #53                 // class io/netty/channel/FileRegion
      75: ifeq          117
      78: aload_2
      79: checkcast     #53                 // class io/netty/channel/FileRegion
      82: astore_3
      83: aload_3
      84: invokeinterface #54,  1           // InterfaceMethod io/netty/channel/FileRegion.transferred:()J
      89: lstore        4
      91: aload_0
      92: aload_3
      93: invokevirtual #55                 // Method doWriteFileRegion:(Lio/netty/channel/FileRegion;)V
      96: aload_1
      97: aload_3
      98: invokeinterface #54,  1           // InterfaceMethod io/netty/channel/FileRegion.transferred:()J
     103: lload         4
     105: lsub
     106: invokevirtual #51                 // Method io/netty/channel/ChannelOutboundBuffer.progress:(J)V
     109: aload_1
     110: invokevirtual #52                 // Method io/netty/channel/ChannelOutboundBuffer.remove:()Z
     113: pop
     114: goto          151
     117: aload_1
     118: new           #56                 // class java/lang/UnsupportedOperationException
     121: dup
     122: new           #57                 // class java/lang/StringBuilder
     125: dup
     126: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
     129: ldc           #59                 // String unsupported message type:
     131: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: aload_2
     135: invokestatic  #61                 // Method io/netty/util/internal/StringUtil.simpleClassName:(Ljava/lang/Object;)Ljava/lang/String;
     138: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: invokevirtual #62                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     144: invokespecial #63                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
     147: invokevirtual #64                 // Method io/netty/channel/ChannelOutboundBuffer.remove:(Ljava/lang/Throwable;)Z
     150: pop
     151: goto          0
     154: return

  protected final java.lang.Object filterOutboundMessage(java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_1
       1: instanceof    #48                 // class io/netty/buffer/ByteBuf
       4: ifne          14
       7: aload_1
       8: instanceof    #53                 // class io/netty/channel/FileRegion
      11: ifeq          16
      14: aload_1
      15: areturn
      16: new           #56                 // class java/lang/UnsupportedOperationException
      19: dup
      20: new           #57                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
      27: ldc           #59                 // String unsupported message type:
      29: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_1
      33: invokestatic  #61                 // Method io/netty/util/internal/StringUtil.simpleClassName:(Ljava/lang/Object;)Ljava/lang/String;
      36: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: getstatic     #65                 // Field EXPECTED_TYPES:Ljava/lang/String;
      42: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: invokevirtual #62                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: invokespecial #63                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      51: athrow

  protected abstract int available();

  protected abstract int doReadBytes(io.netty.buffer.ByteBuf) throws java.lang.Exception;

  protected abstract void doWriteBytes(io.netty.buffer.ByteBuf) throws java.lang.Exception;

  protected abstract void doWriteFileRegion(io.netty.channel.FileRegion) throws java.lang.Exception;

  static {};
    Code:
       0: new           #66                 // class io/netty/channel/ChannelMetadata
       3: dup
       4: iconst_0
       5: invokespecial #67                 // Method io/netty/channel/ChannelMetadata."<init>":(Z)V
       8: putstatic     #2                  // Field METADATA:Lio/netty/channel/ChannelMetadata;
      11: new           #57                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #68                 // String  (expected:
      20: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: ldc           #48                 // class io/netty/buffer/ByteBuf
      25: invokestatic  #69                 // Method io/netty/util/internal/StringUtil.simpleClassName:(Ljava/lang/Class;)Ljava/lang/String;
      28: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #70                 // String ,
      33: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: ldc           #53                 // class io/netty/channel/FileRegion
      38: invokestatic  #69                 // Method io/netty/util/internal/StringUtil.simpleClassName:(Ljava/lang/Class;)Ljava/lang/String;
      41: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: bipush        41
      46: invokevirtual #71                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      49: invokevirtual #62                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: putstatic     #65                 // Field EXPECTED_TYPES:Ljava/lang/String;
      55: return
}
