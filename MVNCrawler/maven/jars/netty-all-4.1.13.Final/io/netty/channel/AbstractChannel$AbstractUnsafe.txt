Compiled from "AbstractChannel.java"
public abstract class io.netty.channel.AbstractChannel$AbstractUnsafe implements io.netty.channel.Channel$Unsafe {
  private volatile io.netty.channel.ChannelOutboundBuffer outboundBuffer;

  private io.netty.channel.RecvByteBufAllocator$Handle recvHandle;

  private boolean inFlush0;

  private boolean neverRegistered;

  static final boolean $assertionsDisabled;

  final io.netty.channel.AbstractChannel this$0;

  protected io.netty.channel.AbstractChannel$AbstractUnsafe(io.netty.channel.AbstractChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
       5: aload_0
       6: invokespecial #6                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #7                  // class io/netty/channel/ChannelOutboundBuffer
      13: dup
      14: aload_0
      15: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      18: invokespecial #8                  // Method io/netty/channel/ChannelOutboundBuffer."<init>":(Lio/netty/channel/AbstractChannel;)V
      21: putfield      #9                  // Field outboundBuffer:Lio/netty/channel/ChannelOutboundBuffer;
      24: aload_0
      25: iconst_1
      26: putfield      #10                 // Field neverRegistered:Z
      29: return

  private void assertEventLoop();
    Code:
       0: getstatic     #11                 // Field $assertionsDisabled:Z
       3: ifne          39
       6: aload_0
       7: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      10: invokestatic  #12                 // Method io/netty/channel/AbstractChannel.access$000:(Lio/netty/channel/AbstractChannel;)Z
      13: ifeq          39
      16: aload_0
      17: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      20: invokestatic  #13                 // Method io/netty/channel/AbstractChannel.access$100:(Lio/netty/channel/AbstractChannel;)Lio/netty/channel/EventLoop;
      23: invokeinterface #14,  1           // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
      28: ifne          39
      31: new           #15                 // class java/lang/AssertionError
      34: dup
      35: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
      38: athrow
      39: return

  public io.netty.channel.RecvByteBufAllocator$Handle recvBufAllocHandle();
    Code:
       0: aload_0
       1: getfield      #17                 // Field recvHandle:Lio/netty/channel/RecvByteBufAllocator$Handle;
       4: ifnonnull     28
       7: aload_0
       8: aload_0
       9: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      12: invokevirtual #18                 // Method io/netty/channel/AbstractChannel.config:()Lio/netty/channel/ChannelConfig;
      15: invokeinterface #19,  1           // InterfaceMethod io/netty/channel/ChannelConfig.getRecvByteBufAllocator:()Lio/netty/channel/RecvByteBufAllocator;
      20: invokeinterface #20,  1           // InterfaceMethod io/netty/channel/RecvByteBufAllocator.newHandle:()Lio/netty/channel/RecvByteBufAllocator$Handle;
      25: putfield      #17                 // Field recvHandle:Lio/netty/channel/RecvByteBufAllocator$Handle;
      28: aload_0
      29: getfield      #17                 // Field recvHandle:Lio/netty/channel/RecvByteBufAllocator$Handle;
      32: areturn

  public final io.netty.channel.ChannelOutboundBuffer outboundBuffer();
    Code:
       0: aload_0
       1: getfield      #9                  // Field outboundBuffer:Lio/netty/channel/ChannelOutboundBuffer;
       4: areturn

  public final java.net.SocketAddress localAddress();
    Code:
       0: aload_0
       1: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
       4: invokevirtual #21                 // Method io/netty/channel/AbstractChannel.localAddress0:()Ljava/net/SocketAddress;
       7: areturn

  public final java.net.SocketAddress remoteAddress();
    Code:
       0: aload_0
       1: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
       4: invokevirtual #22                 // Method io/netty/channel/AbstractChannel.remoteAddress0:()Ljava/net/SocketAddress;
       7: areturn

  public final void register(io.netty.channel.EventLoop, io.netty.channel.ChannelPromise);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #23                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #24                 // String eventLoop
      10: invokespecial #25                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      18: invokevirtual #26                 // Method io/netty/channel/AbstractChannel.isRegistered:()Z
      21: ifeq          41
      24: aload_2
      25: new           #27                 // class java/lang/IllegalStateException
      28: dup
      29: ldc           #28                 // String registered to an event loop already
      31: invokespecial #29                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      34: invokeinterface #30,  2           // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
      39: pop
      40: return
      41: aload_0
      42: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      45: aload_1
      46: invokevirtual #31                 // Method io/netty/channel/AbstractChannel.isCompatible:(Lio/netty/channel/EventLoop;)Z
      49: ifne          92
      52: aload_2
      53: new           #27                 // class java/lang/IllegalStateException
      56: dup
      57: new           #32                 // class java/lang/StringBuilder
      60: dup
      61: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      64: ldc           #34                 // String incompatible event loop type:
      66: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: aload_1
      70: invokevirtual #36                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      73: invokevirtual #37                 // Method java/lang/Class.getName:()Ljava/lang/String;
      76: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      82: invokespecial #29                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      85: invokeinterface #30,  2           // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
      90: pop
      91: return
      92: aload_0
      93: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      96: aload_1
      97: invokestatic  #39                 // Method io/netty/channel/AbstractChannel.access$102:(Lio/netty/channel/AbstractChannel;Lio/netty/channel/EventLoop;)Lio/netty/channel/EventLoop;
     100: pop
     101: aload_1
     102: invokeinterface #14,  1           // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
     107: ifeq          118
     110: aload_0
     111: aload_2
     112: invokespecial #4                  // Method register0:(Lio/netty/channel/ChannelPromise;)V
     115: goto          173
     118: aload_1
     119: new           #40                 // class io/netty/channel/AbstractChannel$AbstractUnsafe$1
     122: dup
     123: aload_0
     124: aload_2
     125: invokespecial #41                 // Method io/netty/channel/AbstractChannel$AbstractUnsafe$1."<init>":(Lio/netty/channel/AbstractChannel$AbstractUnsafe;Lio/netty/channel/ChannelPromise;)V
     128: invokeinterface #42,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
     133: goto          173
     136: astore_3
     137: invokestatic  #44                 // Method io/netty/channel/AbstractChannel.access$300:()Lio/netty/util/internal/logging/InternalLogger;
     140: ldc           #45                 // String Force-closing a channel whose registration task was not accepted by an event loop: {}
     142: aload_0
     143: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
     146: aload_3
     147: invokeinterface #46,  4           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     152: aload_0
     153: invokevirtual #47                 // Method closeForcibly:()V
     156: aload_0
     157: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
     160: invokestatic  #48                 // Method io/netty/channel/AbstractChannel.access$400:(Lio/netty/channel/AbstractChannel;)Lio/netty/channel/AbstractChannel$CloseFuture;
     163: invokevirtual #49                 // Method io/netty/channel/AbstractChannel$CloseFuture.setClosed:()Z
     166: pop
     167: aload_0
     168: aload_2
     169: aload_3
     170: invokevirtual #50                 // Method safeSetFailure:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;)V
     173: return
    Exception table:
       from    to  target type
         118   133   136   Class java/lang/Throwable

  private void register0(io.netty.channel.ChannelPromise);
    Code:
       0: aload_1
       1: invokeinterface #51,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setUncancellable:()Z
       6: ifeq          17
       9: aload_0
      10: aload_1
      11: invokevirtual #52                 // Method ensureOpen:(Lio/netty/channel/ChannelPromise;)Z
      14: ifne          18
      17: return
      18: aload_0
      19: getfield      #10                 // Field neverRegistered:Z
      22: istore_2
      23: aload_0
      24: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      27: invokevirtual #53                 // Method io/netty/channel/AbstractChannel.doRegister:()V
      30: aload_0
      31: iconst_0
      32: putfield      #10                 // Field neverRegistered:Z
      35: aload_0
      36: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      39: iconst_1
      40: invokestatic  #54                 // Method io/netty/channel/AbstractChannel.access$002:(Lio/netty/channel/AbstractChannel;Z)Z
      43: pop
      44: aload_0
      45: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      48: invokestatic  #55                 // Method io/netty/channel/AbstractChannel.access$500:(Lio/netty/channel/AbstractChannel;)Lio/netty/channel/DefaultChannelPipeline;
      51: invokevirtual #56                 // Method io/netty/channel/DefaultChannelPipeline.invokeHandlerAddedIfNeeded:()V
      54: aload_0
      55: aload_1
      56: invokevirtual #57                 // Method safeSetSuccess:(Lio/netty/channel/ChannelPromise;)V
      59: aload_0
      60: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      63: invokestatic  #55                 // Method io/netty/channel/AbstractChannel.access$500:(Lio/netty/channel/AbstractChannel;)Lio/netty/channel/DefaultChannelPipeline;
      66: invokevirtual #58                 // Method io/netty/channel/DefaultChannelPipeline.fireChannelRegistered:()Lio/netty/channel/ChannelPipeline;
      69: pop
      70: aload_0
      71: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      74: invokevirtual #59                 // Method io/netty/channel/AbstractChannel.isActive:()Z
      77: ifeq          117
      80: iload_2
      81: ifeq          98
      84: aload_0
      85: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      88: invokestatic  #55                 // Method io/netty/channel/AbstractChannel.access$500:(Lio/netty/channel/AbstractChannel;)Lio/netty/channel/DefaultChannelPipeline;
      91: invokevirtual #60                 // Method io/netty/channel/DefaultChannelPipeline.fireChannelActive:()Lio/netty/channel/ChannelPipeline;
      94: pop
      95: goto          117
      98: aload_0
      99: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
     102: invokevirtual #18                 // Method io/netty/channel/AbstractChannel.config:()Lio/netty/channel/ChannelConfig;
     105: invokeinterface #61,  1           // InterfaceMethod io/netty/channel/ChannelConfig.isAutoRead:()Z
     110: ifeq          117
     113: aload_0
     114: invokevirtual #62                 // Method beginRead:()V
     117: goto          142
     120: astore_2
     121: aload_0
     122: invokevirtual #47                 // Method closeForcibly:()V
     125: aload_0
     126: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
     129: invokestatic  #48                 // Method io/netty/channel/AbstractChannel.access$400:(Lio/netty/channel/AbstractChannel;)Lio/netty/channel/AbstractChannel$CloseFuture;
     132: invokevirtual #49                 // Method io/netty/channel/AbstractChannel$CloseFuture.setClosed:()Z
     135: pop
     136: aload_0
     137: aload_1
     138: aload_2
     139: invokevirtual #50                 // Method safeSetFailure:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;)V
     142: return
    Exception table:
       from    to  target type
           0    17   120   Class java/lang/Throwable
          18   117   120   Class java/lang/Throwable

  public final void bind(java.net.SocketAddress, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokespecial #63                 // Method assertEventLoop:()V
       4: aload_2
       5: invokeinterface #51,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setUncancellable:()Z
      10: ifeq          21
      13: aload_0
      14: aload_2
      15: invokevirtual #52                 // Method ensureOpen:(Lio/netty/channel/ChannelPromise;)Z
      18: ifne          22
      21: return
      22: getstatic     #64                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      25: aload_0
      26: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      29: invokevirtual #18                 // Method io/netty/channel/AbstractChannel.config:()Lio/netty/channel/ChannelConfig;
      32: getstatic     #65                 // Field io/netty/channel/ChannelOption.SO_BROADCAST:Lio/netty/channel/ChannelOption;
      35: invokeinterface #66,  2           // InterfaceMethod io/netty/channel/ChannelConfig.getOption:(Lio/netty/channel/ChannelOption;)Ljava/lang/Object;
      40: invokevirtual #67                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
      43: ifeq          110
      46: aload_1
      47: instanceof    #68                 // class java/net/InetSocketAddress
      50: ifeq          110
      53: aload_1
      54: checkcast     #68                 // class java/net/InetSocketAddress
      57: invokevirtual #69                 // Method java/net/InetSocketAddress.getAddress:()Ljava/net/InetAddress;
      60: invokevirtual #70                 // Method java/net/InetAddress.isAnyLocalAddress:()Z
      63: ifne          110
      66: invokestatic  #71                 // Method io/netty/util/internal/PlatformDependent.isWindows:()Z
      69: ifne          110
      72: invokestatic  #72                 // Method io/netty/util/internal/PlatformDependent.maybeSuperUser:()Z
      75: ifne          110
      78: invokestatic  #44                 // Method io/netty/channel/AbstractChannel.access$300:()Lio/netty/util/internal/logging/InternalLogger;
      81: new           #32                 // class java/lang/StringBuilder
      84: dup
      85: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      88: ldc           #73                 // String A non-root user can\'t receive a broadcast packet if the socket is not bound to a wildcard address; binding to a non-wildcard address (
      90: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: aload_1
      94: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      97: ldc           #75                 // String ) anyway as requested.
      99: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     105: invokeinterface #76,  2           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;)V
     110: aload_0
     111: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
     114: invokevirtual #59                 // Method io/netty/channel/AbstractChannel.isActive:()Z
     117: istore_3
     118: aload_0
     119: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
     122: aload_1
     123: invokevirtual #77                 // Method io/netty/channel/AbstractChannel.doBind:(Ljava/net/SocketAddress;)V
     126: goto          143
     129: astore        4
     131: aload_0
     132: aload_2
     133: aload         4
     135: invokevirtual #50                 // Method safeSetFailure:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;)V
     138: aload_0
     139: invokevirtual #78                 // Method closeIfClosed:()V
     142: return
     143: iload_3
     144: ifne          169
     147: aload_0
     148: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
     151: invokevirtual #59                 // Method io/netty/channel/AbstractChannel.isActive:()Z
     154: ifeq          169
     157: aload_0
     158: new           #79                 // class io/netty/channel/AbstractChannel$AbstractUnsafe$2
     161: dup
     162: aload_0
     163: invokespecial #80                 // Method io/netty/channel/AbstractChannel$AbstractUnsafe$2."<init>":(Lio/netty/channel/AbstractChannel$AbstractUnsafe;)V
     166: invokespecial #1                  // Method invokeLater:(Ljava/lang/Runnable;)V
     169: aload_0
     170: aload_2
     171: invokevirtual #57                 // Method safeSetSuccess:(Lio/netty/channel/ChannelPromise;)V
     174: return
    Exception table:
       from    to  target type
         118   126   129   Class java/lang/Throwable

  public final void disconnect(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokespecial #63                 // Method assertEventLoop:()V
       4: aload_1
       5: invokeinterface #51,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setUncancellable:()Z
      10: ifne          14
      13: return
      14: aload_0
      15: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      18: invokevirtual #59                 // Method io/netty/channel/AbstractChannel.isActive:()Z
      21: istore_2
      22: aload_0
      23: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      26: invokevirtual #81                 // Method io/netty/channel/AbstractChannel.doDisconnect:()V
      29: goto          44
      32: astore_3
      33: aload_0
      34: aload_1
      35: aload_3
      36: invokevirtual #50                 // Method safeSetFailure:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;)V
      39: aload_0
      40: invokevirtual #78                 // Method closeIfClosed:()V
      43: return
      44: iload_2
      45: ifeq          70
      48: aload_0
      49: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      52: invokevirtual #59                 // Method io/netty/channel/AbstractChannel.isActive:()Z
      55: ifne          70
      58: aload_0
      59: new           #82                 // class io/netty/channel/AbstractChannel$AbstractUnsafe$3
      62: dup
      63: aload_0
      64: invokespecial #83                 // Method io/netty/channel/AbstractChannel$AbstractUnsafe$3."<init>":(Lio/netty/channel/AbstractChannel$AbstractUnsafe;)V
      67: invokespecial #1                  // Method invokeLater:(Ljava/lang/Runnable;)V
      70: aload_0
      71: aload_1
      72: invokevirtual #57                 // Method safeSetSuccess:(Lio/netty/channel/ChannelPromise;)V
      75: aload_0
      76: invokevirtual #78                 // Method closeIfClosed:()V
      79: return
    Exception table:
       from    to  target type
          22    29    32   Class java/lang/Throwable

  public final void close(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokespecial #63                 // Method assertEventLoop:()V
       4: aload_0
       5: aload_1
       6: invokestatic  #84                 // Method io/netty/channel/AbstractChannel.access$600:()Ljava/nio/channels/ClosedChannelException;
       9: invokestatic  #84                 // Method io/netty/channel/AbstractChannel.access$600:()Ljava/nio/channels/ClosedChannelException;
      12: iconst_0
      13: invokespecial #85                 // Method close:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;Ljava/nio/channels/ClosedChannelException;Z)V
      16: return

  private void close(io.netty.channel.ChannelPromise, java.lang.Throwable, java.nio.channels.ClosedChannelException, boolean);
    Code:
       0: aload_1
       1: invokeinterface #51,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setUncancellable:()Z
       6: ifne          10
       9: return
      10: aload_0
      11: getfield      #9                  // Field outboundBuffer:Lio/netty/channel/ChannelOutboundBuffer;
      14: astore        5
      16: aload         5
      18: ifnonnull     49
      21: aload_1
      22: instanceof    #86                 // class io/netty/channel/VoidChannelPromise
      25: ifne          48
      28: aload_0
      29: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      32: invokestatic  #48                 // Method io/netty/channel/AbstractChannel.access$400:(Lio/netty/channel/AbstractChannel;)Lio/netty/channel/AbstractChannel$CloseFuture;
      35: new           #87                 // class io/netty/channel/AbstractChannel$AbstractUnsafe$4
      38: dup
      39: aload_0
      40: aload_1
      41: invokespecial #88                 // Method io/netty/channel/AbstractChannel$AbstractUnsafe$4."<init>":(Lio/netty/channel/AbstractChannel$AbstractUnsafe;Lio/netty/channel/ChannelPromise;)V
      44: invokevirtual #89                 // Method io/netty/channel/AbstractChannel$CloseFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelPromise;
      47: pop
      48: return
      49: aload_0
      50: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      53: invokestatic  #48                 // Method io/netty/channel/AbstractChannel.access$400:(Lio/netty/channel/AbstractChannel;)Lio/netty/channel/AbstractChannel$CloseFuture;
      56: invokevirtual #90                 // Method io/netty/channel/AbstractChannel$CloseFuture.isDone:()Z
      59: ifeq          68
      62: aload_0
      63: aload_1
      64: invokevirtual #57                 // Method safeSetSuccess:(Lio/netty/channel/ChannelPromise;)V
      67: return
      68: aload_0
      69: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      72: invokevirtual #59                 // Method io/netty/channel/AbstractChannel.isActive:()Z
      75: istore        6
      77: aload_0
      78: aconst_null
      79: putfield      #9                  // Field outboundBuffer:Lio/netty/channel/ChannelOutboundBuffer;
      82: aload_0
      83: invokevirtual #91                 // Method prepareToClose:()Ljava/util/concurrent/Executor;
      86: astore        7
      88: aload         7
      90: ifnull        120
      93: aload         7
      95: new           #92                 // class io/netty/channel/AbstractChannel$AbstractUnsafe$5
      98: dup
      99: aload_0
     100: aload_1
     101: aload         5
     103: aload_2
     104: iload         4
     106: aload_3
     107: iload         6
     109: invokespecial #93                 // Method io/netty/channel/AbstractChannel$AbstractUnsafe$5."<init>":(Lio/netty/channel/AbstractChannel$AbstractUnsafe;Lio/netty/channel/ChannelPromise;Lio/netty/channel/ChannelOutboundBuffer;Ljava/lang/Throwable;ZLjava/nio/channels/ClosedChannelException;Z)V
     112: invokeinterface #94,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
     117: goto          191
     120: aload_0
     121: aload_1
     122: invokespecial #3                  // Method doClose0:(Lio/netty/channel/ChannelPromise;)V
     125: aload         5
     127: aload_2
     128: iload         4
     130: invokevirtual #95                 // Method io/netty/channel/ChannelOutboundBuffer.failFlushed:(Ljava/lang/Throwable;Z)V
     133: aload         5
     135: aload_3
     136: invokevirtual #96                 // Method io/netty/channel/ChannelOutboundBuffer.close:(Ljava/nio/channels/ClosedChannelException;)V
     139: goto          161
     142: astore        8
     144: aload         5
     146: aload_2
     147: iload         4
     149: invokevirtual #95                 // Method io/netty/channel/ChannelOutboundBuffer.failFlushed:(Ljava/lang/Throwable;Z)V
     152: aload         5
     154: aload_3
     155: invokevirtual #96                 // Method io/netty/channel/ChannelOutboundBuffer.close:(Ljava/nio/channels/ClosedChannelException;)V
     158: aload         8
     160: athrow
     161: aload_0
     162: getfield      #97                 // Field inFlush0:Z
     165: ifeq          185
     168: aload_0
     169: new           #98                 // class io/netty/channel/AbstractChannel$AbstractUnsafe$6
     172: dup
     173: aload_0
     174: iload         6
     176: invokespecial #99                 // Method io/netty/channel/AbstractChannel$AbstractUnsafe$6."<init>":(Lio/netty/channel/AbstractChannel$AbstractUnsafe;Z)V
     179: invokespecial #1                  // Method invokeLater:(Ljava/lang/Runnable;)V
     182: goto          191
     185: aload_0
     186: iload         6
     188: invokespecial #2                  // Method fireChannelInactiveAndDeregister:(Z)V
     191: return
    Exception table:
       from    to  target type
         120   125   142   any
         142   144   142   any

  private void doClose0(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
       4: invokevirtual #100                // Method io/netty/channel/AbstractChannel.doClose:()V
       7: aload_0
       8: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      11: invokestatic  #48                 // Method io/netty/channel/AbstractChannel.access$400:(Lio/netty/channel/AbstractChannel;)Lio/netty/channel/AbstractChannel$CloseFuture;
      14: invokevirtual #49                 // Method io/netty/channel/AbstractChannel$CloseFuture.setClosed:()Z
      17: pop
      18: aload_0
      19: aload_1
      20: invokevirtual #57                 // Method safeSetSuccess:(Lio/netty/channel/ChannelPromise;)V
      23: goto          44
      26: astore_2
      27: aload_0
      28: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      31: invokestatic  #48                 // Method io/netty/channel/AbstractChannel.access$400:(Lio/netty/channel/AbstractChannel;)Lio/netty/channel/AbstractChannel$CloseFuture;
      34: invokevirtual #49                 // Method io/netty/channel/AbstractChannel$CloseFuture.setClosed:()Z
      37: pop
      38: aload_0
      39: aload_1
      40: aload_2
      41: invokevirtual #50                 // Method safeSetFailure:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;)V
      44: return
    Exception table:
       from    to  target type
           0    23    26   Class java/lang/Throwable

  private void fireChannelInactiveAndDeregister(boolean);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #101                // Method voidPromise:()Lio/netty/channel/ChannelPromise;
       5: iload_1
       6: ifeq          23
       9: aload_0
      10: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      13: invokevirtual #59                 // Method io/netty/channel/AbstractChannel.isActive:()Z
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: invokespecial #102                // Method deregister:(Lio/netty/channel/ChannelPromise;Z)V
      27: return

  public final void closeForcibly();
    Code:
       0: aload_0
       1: invokespecial #63                 // Method assertEventLoop:()V
       4: aload_0
       5: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
       8: invokevirtual #100                // Method io/netty/channel/AbstractChannel.doClose:()V
      11: goto          26
      14: astore_1
      15: invokestatic  #44                 // Method io/netty/channel/AbstractChannel.access$300:()Lio/netty/util/internal/logging/InternalLogger;
      18: ldc           #104                // String Failed to close a channel.
      20: aload_1
      21: invokeinterface #105,  3          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      26: return
    Exception table:
       from    to  target type
           4    11    14   Class java/lang/Exception

  public final void deregister(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokespecial #63                 // Method assertEventLoop:()V
       4: aload_0
       5: aload_1
       6: iconst_0
       7: invokespecial #102                // Method deregister:(Lio/netty/channel/ChannelPromise;Z)V
      10: return

  private void deregister(io.netty.channel.ChannelPromise, boolean);
    Code:
       0: aload_1
       1: invokeinterface #51,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setUncancellable:()Z
       6: ifne          10
       9: return
      10: aload_0
      11: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      14: invokestatic  #12                 // Method io/netty/channel/AbstractChannel.access$000:(Lio/netty/channel/AbstractChannel;)Z
      17: ifne          26
      20: aload_0
      21: aload_1
      22: invokevirtual #57                 // Method safeSetSuccess:(Lio/netty/channel/ChannelPromise;)V
      25: return
      26: aload_0
      27: new           #106                // class io/netty/channel/AbstractChannel$AbstractUnsafe$7
      30: dup
      31: aload_0
      32: iload_2
      33: aload_1
      34: invokespecial #107                // Method io/netty/channel/AbstractChannel$AbstractUnsafe$7."<init>":(Lio/netty/channel/AbstractChannel$AbstractUnsafe;ZLio/netty/channel/ChannelPromise;)V
      37: invokespecial #1                  // Method invokeLater:(Ljava/lang/Runnable;)V
      40: return

  public final void beginRead();
    Code:
       0: aload_0
       1: invokespecial #63                 // Method assertEventLoop:()V
       4: aload_0
       5: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
       8: invokevirtual #59                 // Method io/netty/channel/AbstractChannel.isActive:()Z
      11: ifne          15
      14: return
      15: aload_0
      16: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      19: invokevirtual #108                // Method io/netty/channel/AbstractChannel.doBeginRead:()V
      22: goto          47
      25: astore_1
      26: aload_0
      27: new           #109                // class io/netty/channel/AbstractChannel$AbstractUnsafe$8
      30: dup
      31: aload_0
      32: aload_1
      33: invokespecial #110                // Method io/netty/channel/AbstractChannel$AbstractUnsafe$8."<init>":(Lio/netty/channel/AbstractChannel$AbstractUnsafe;Ljava/lang/Exception;)V
      36: invokespecial #1                  // Method invokeLater:(Ljava/lang/Runnable;)V
      39: aload_0
      40: aload_0
      41: invokevirtual #101                // Method voidPromise:()Lio/netty/channel/ChannelPromise;
      44: invokevirtual #111                // Method close:(Lio/netty/channel/ChannelPromise;)V
      47: return
    Exception table:
       from    to  target type
          15    22    25   Class java/lang/Exception

  public final void write(java.lang.Object, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokespecial #63                 // Method assertEventLoop:()V
       4: aload_0
       5: getfield      #9                  // Field outboundBuffer:Lio/netty/channel/ChannelOutboundBuffer;
       8: astore_3
       9: aload_3
      10: ifnonnull     27
      13: aload_0
      14: aload_2
      15: invokestatic  #112                // Method io/netty/channel/AbstractChannel.access$1000:()Ljava/nio/channels/ClosedChannelException;
      18: invokevirtual #50                 // Method safeSetFailure:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;)V
      21: aload_1
      22: invokestatic  #113                // Method io/netty/util/ReferenceCountUtil.release:(Ljava/lang/Object;)Z
      25: pop
      26: return
      27: aload_0
      28: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      31: aload_1
      32: invokevirtual #114                // Method io/netty/channel/AbstractChannel.filterOutboundMessage:(Ljava/lang/Object;)Ljava/lang/Object;
      35: astore_1
      36: aload_0
      37: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      40: invokestatic  #55                 // Method io/netty/channel/AbstractChannel.access$500:(Lio/netty/channel/AbstractChannel;)Lio/netty/channel/DefaultChannelPipeline;
      43: invokevirtual #115                // Method io/netty/channel/DefaultChannelPipeline.estimatorHandle:()Lio/netty/channel/MessageSizeEstimator$Handle;
      46: aload_1
      47: invokeinterface #116,  2          // InterfaceMethod io/netty/channel/MessageSizeEstimator$Handle.size:(Ljava/lang/Object;)I
      52: istore        4
      54: iload         4
      56: ifge          62
      59: iconst_0
      60: istore        4
      62: goto          80
      65: astore        5
      67: aload_0
      68: aload_2
      69: aload         5
      71: invokevirtual #50                 // Method safeSetFailure:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;)V
      74: aload_1
      75: invokestatic  #113                // Method io/netty/util/ReferenceCountUtil.release:(Ljava/lang/Object;)Z
      78: pop
      79: return
      80: aload_3
      81: aload_1
      82: iload         4
      84: aload_2
      85: invokevirtual #117                // Method io/netty/channel/ChannelOutboundBuffer.addMessage:(Ljava/lang/Object;ILio/netty/channel/ChannelPromise;)V
      88: return
    Exception table:
       from    to  target type
          27    62    65   Class java/lang/Throwable

  public final void flush();
    Code:
       0: aload_0
       1: invokespecial #63                 // Method assertEventLoop:()V
       4: aload_0
       5: getfield      #9                  // Field outboundBuffer:Lio/netty/channel/ChannelOutboundBuffer;
       8: astore_1
       9: aload_1
      10: ifnonnull     14
      13: return
      14: aload_1
      15: invokevirtual #118                // Method io/netty/channel/ChannelOutboundBuffer.addFlush:()V
      18: aload_0
      19: invokevirtual #119                // Method flush0:()V
      22: return

  protected void flush0();
    Code:
       0: aload_0
       1: getfield      #97                 // Field inFlush0:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #9                  // Field outboundBuffer:Lio/netty/channel/ChannelOutboundBuffer;
      12: astore_1
      13: aload_1
      14: ifnull        24
      17: aload_1
      18: invokevirtual #120                // Method io/netty/channel/ChannelOutboundBuffer.isEmpty:()Z
      21: ifeq          25
      24: return
      25: aload_0
      26: iconst_1
      27: putfield      #97                 // Field inFlush0:Z
      30: aload_0
      31: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      34: invokevirtual #59                 // Method io/netty/channel/AbstractChannel.isActive:()Z
      37: ifne          86
      40: aload_0
      41: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      44: invokevirtual #121                // Method io/netty/channel/AbstractChannel.isOpen:()Z
      47: ifeq          61
      50: aload_1
      51: invokestatic  #122                // Method io/netty/channel/AbstractChannel.access$1100:()Ljava/nio/channels/NotYetConnectedException;
      54: iconst_1
      55: invokevirtual #95                 // Method io/netty/channel/ChannelOutboundBuffer.failFlushed:(Ljava/lang/Throwable;Z)V
      58: goto          69
      61: aload_1
      62: invokestatic  #123                // Method io/netty/channel/AbstractChannel.access$1200:()Ljava/nio/channels/ClosedChannelException;
      65: iconst_0
      66: invokevirtual #95                 // Method io/netty/channel/ChannelOutboundBuffer.failFlushed:(Ljava/lang/Throwable;Z)V
      69: aload_0
      70: iconst_0
      71: putfield      #97                 // Field inFlush0:Z
      74: goto          85
      77: astore_2
      78: aload_0
      79: iconst_0
      80: putfield      #97                 // Field inFlush0:Z
      83: aload_2
      84: athrow
      85: return
      86: aload_0
      87: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      90: aload_1
      91: invokevirtual #124                // Method io/netty/channel/AbstractChannel.doWrite:(Lio/netty/channel/ChannelOutboundBuffer;)V
      94: aload_0
      95: iconst_0
      96: putfield      #97                 // Field inFlush0:Z
      99: goto          163
     102: astore_2
     103: aload_2
     104: instanceof    #125                // class java/io/IOException
     107: ifeq          141
     110: aload_0
     111: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
     114: invokevirtual #18                 // Method io/netty/channel/AbstractChannel.config:()Lio/netty/channel/ChannelConfig;
     117: invokeinterface #126,  1          // InterfaceMethod io/netty/channel/ChannelConfig.isAutoClose:()Z
     122: ifeq          141
     125: aload_0
     126: aload_0
     127: invokevirtual #101                // Method voidPromise:()Lio/netty/channel/ChannelPromise;
     130: aload_2
     131: invokestatic  #123                // Method io/netty/channel/AbstractChannel.access$1200:()Ljava/nio/channels/ClosedChannelException;
     134: iconst_0
     135: invokespecial #85                 // Method close:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;Ljava/nio/channels/ClosedChannelException;Z)V
     138: goto          147
     141: aload_1
     142: aload_2
     143: iconst_1
     144: invokevirtual #95                 // Method io/netty/channel/ChannelOutboundBuffer.failFlushed:(Ljava/lang/Throwable;Z)V
     147: aload_0
     148: iconst_0
     149: putfield      #97                 // Field inFlush0:Z
     152: goto          163
     155: astore_3
     156: aload_0
     157: iconst_0
     158: putfield      #97                 // Field inFlush0:Z
     161: aload_3
     162: athrow
     163: return
    Exception table:
       from    to  target type
          40    69    77   any
          86    94   102   Class java/lang/Throwable
          86    94   155   any
         102   147   155   any

  public final io.netty.channel.ChannelPromise voidPromise();
    Code:
       0: aload_0
       1: invokespecial #63                 // Method assertEventLoop:()V
       4: aload_0
       5: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
       8: invokestatic  #127                // Method io/netty/channel/AbstractChannel.access$1300:(Lio/netty/channel/AbstractChannel;)Lio/netty/channel/VoidChannelPromise;
      11: areturn

  protected final boolean ensureOpen(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
       4: invokevirtual #121                // Method io/netty/channel/AbstractChannel.isOpen:()Z
       7: ifeq          12
      10: iconst_1
      11: ireturn
      12: aload_0
      13: aload_1
      14: invokestatic  #128                // Method io/netty/channel/AbstractChannel.access$1400:()Ljava/nio/channels/ClosedChannelException;
      17: invokevirtual #50                 // Method safeSetFailure:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;)V
      20: iconst_0
      21: ireturn

  protected final void safeSetSuccess(io.netty.channel.ChannelPromise);
    Code:
       0: aload_1
       1: instanceof    #86                 // class io/netty/channel/VoidChannelPromise
       4: ifne          27
       7: aload_1
       8: invokeinterface #129,  1          // InterfaceMethod io/netty/channel/ChannelPromise.trySuccess:()Z
      13: ifne          27
      16: invokestatic  #44                 // Method io/netty/channel/AbstractChannel.access$300:()Lio/netty/util/internal/logging/InternalLogger;
      19: ldc           #130                // String Failed to mark a promise as success because it is done already: {}
      21: aload_1
      22: invokeinterface #131,  3          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      27: return

  protected final void safeSetFailure(io.netty.channel.ChannelPromise, java.lang.Throwable);
    Code:
       0: aload_1
       1: instanceof    #86                 // class io/netty/channel/VoidChannelPromise
       4: ifne          29
       7: aload_1
       8: aload_2
       9: invokeinterface #132,  2          // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
      14: ifne          29
      17: invokestatic  #44                 // Method io/netty/channel/AbstractChannel.access$300:()Lio/netty/util/internal/logging/InternalLogger;
      20: ldc           #133                // String Failed to mark a promise as failure because it\'s done already: {}
      22: aload_1
      23: aload_2
      24: invokeinterface #46,  4           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      29: return

  protected final void closeIfClosed();
    Code:
       0: aload_0
       1: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
       4: invokevirtual #121                // Method io/netty/channel/AbstractChannel.isOpen:()Z
       7: ifeq          11
      10: return
      11: aload_0
      12: aload_0
      13: invokevirtual #101                // Method voidPromise:()Lio/netty/channel/ChannelPromise;
      16: invokevirtual #111                // Method close:(Lio/netty/channel/ChannelPromise;)V
      19: return

  private void invokeLater(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
       4: invokevirtual #134                // Method io/netty/channel/AbstractChannel.eventLoop:()Lio/netty/channel/EventLoop;
       7: aload_1
       8: invokeinterface #42,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      13: goto          28
      16: astore_2
      17: invokestatic  #44                 // Method io/netty/channel/AbstractChannel.access$300:()Lio/netty/util/internal/logging/InternalLogger;
      20: ldc           #136                // String Can\'t invoke task later as EventLoop rejected it
      22: aload_2
      23: invokeinterface #105,  3          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      28: return
    Exception table:
       from    to  target type
           0    13    16   Class java/util/concurrent/RejectedExecutionException

  protected final java.lang.Throwable annotateConnectException(java.lang.Throwable, java.net.SocketAddress);
    Code:
       0: aload_1
       1: instanceof    #137                // class java/net/ConnectException
       4: ifeq          20
       7: new           #138                // class io/netty/channel/AbstractChannel$AnnotatedConnectException
      10: dup
      11: aload_1
      12: checkcast     #137                // class java/net/ConnectException
      15: aload_2
      16: invokespecial #139                // Method io/netty/channel/AbstractChannel$AnnotatedConnectException."<init>":(Ljava/net/ConnectException;Ljava/net/SocketAddress;)V
      19: areturn
      20: aload_1
      21: instanceof    #140                // class java/net/NoRouteToHostException
      24: ifeq          40
      27: new           #141                // class io/netty/channel/AbstractChannel$AnnotatedNoRouteToHostException
      30: dup
      31: aload_1
      32: checkcast     #140                // class java/net/NoRouteToHostException
      35: aload_2
      36: invokespecial #142                // Method io/netty/channel/AbstractChannel$AnnotatedNoRouteToHostException."<init>":(Ljava/net/NoRouteToHostException;Ljava/net/SocketAddress;)V
      39: areturn
      40: aload_1
      41: instanceof    #143                // class java/net/SocketException
      44: ifeq          60
      47: new           #144                // class io/netty/channel/AbstractChannel$AnnotatedSocketException
      50: dup
      51: aload_1
      52: checkcast     #143                // class java/net/SocketException
      55: aload_2
      56: invokespecial #145                // Method io/netty/channel/AbstractChannel$AnnotatedSocketException."<init>":(Ljava/net/SocketException;Ljava/net/SocketAddress;)V
      59: areturn
      60: aload_1
      61: areturn

  protected java.util.concurrent.Executor prepareToClose();
    Code:
       0: aconst_null
       1: areturn

  static void access$200(io.netty.channel.AbstractChannel$AbstractUnsafe, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method register0:(Lio/netty/channel/ChannelPromise;)V
       5: return

  static void access$700(io.netty.channel.AbstractChannel$AbstractUnsafe, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method doClose0:(Lio/netty/channel/ChannelPromise;)V
       5: return

  static void access$800(io.netty.channel.AbstractChannel$AbstractUnsafe, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #2                  // Method fireChannelInactiveAndDeregister:(Z)V
       5: return

  static void access$900(io.netty.channel.AbstractChannel$AbstractUnsafe, java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method invokeLater:(Ljava/lang/Runnable;)V
       5: return

  static {};
    Code:
       0: ldc           #146                // class io/netty/channel/AbstractChannel
       2: invokevirtual #147                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #11                 // Field $assertionsDisabled:Z
      16: return
}
