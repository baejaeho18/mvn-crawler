Compiled from "KQueueDatagramChannel.java"
final class io.netty.channel.kqueue.KQueueDatagramChannel$KQueueDatagramChannelUnsafe extends io.netty.channel.kqueue.AbstractKQueueChannel$AbstractKQueueUnsafe {
  static final boolean $assertionsDisabled;

  final io.netty.channel.kqueue.KQueueDatagramChannel this$0;

  io.netty.channel.kqueue.KQueueDatagramChannel$KQueueDatagramChannelUnsafe(io.netty.channel.kqueue.KQueueDatagramChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/netty/channel/kqueue/KQueueDatagramChannel;
       5: aload_0
       6: aload_1
       7: invokespecial #2                  // Method io/netty/channel/kqueue/AbstractKQueueChannel$AbstractKQueueUnsafe."<init>":(Lio/netty/channel/kqueue/AbstractKQueueChannel;)V
      10: return

  public void connect(java.net.SocketAddress, java.net.SocketAddress, io.netty.channel.ChannelPromise);
    Code:
       0: iconst_0
       1: istore        4
       3: aload_0
       4: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/KQueueDatagramChannel;
       7: invokevirtual #3                  // Method io/netty/channel/kqueue/KQueueDatagramChannel.isActive:()Z
      10: istore        5
      12: aload_1
      13: checkcast     #4                  // class java/net/InetSocketAddress
      16: astore        6
      18: aload_2
      19: ifnull        37
      22: aload_2
      23: checkcast     #4                  // class java/net/InetSocketAddress
      26: astore        7
      28: aload_0
      29: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/KQueueDatagramChannel;
      32: aload         7
      34: invokevirtual #5                  // Method io/netty/channel/kqueue/KQueueDatagramChannel.doBind:(Ljava/net/SocketAddress;)V
      37: aload         6
      39: invokestatic  #6                  // Method io/netty/channel/kqueue/AbstractKQueueChannel.checkResolvable:(Ljava/net/InetSocketAddress;)V
      42: aload_0
      43: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/KQueueDatagramChannel;
      46: aload         6
      48: invokestatic  #7                  // Method io/netty/channel/kqueue/KQueueDatagramChannel.access$002:(Lio/netty/channel/kqueue/KQueueDatagramChannel;Ljava/net/InetSocketAddress;)Ljava/net/InetSocketAddress;
      51: pop
      52: aload_0
      53: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/KQueueDatagramChannel;
      56: aload_0
      57: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/KQueueDatagramChannel;
      60: getfield      #8                  // Field io/netty/channel/kqueue/KQueueDatagramChannel.socket:Lio/netty/channel/kqueue/BsdSocket;
      63: invokevirtual #9                  // Method io/netty/channel/kqueue/BsdSocket.localAddress:()Ljava/net/InetSocketAddress;
      66: invokestatic  #10                 // Method io/netty/channel/kqueue/KQueueDatagramChannel.access$102:(Lio/netty/channel/kqueue/KQueueDatagramChannel;Ljava/net/InetSocketAddress;)Ljava/net/InetSocketAddress;
      69: pop
      70: iconst_1
      71: istore        4
      73: aload_3
      74: invokeinterface #11,  1           // InterfaceMethod io/netty/channel/ChannelPromise.trySuccess:()Z
      79: pop
      80: iload         5
      82: ifne          108
      85: aload_0
      86: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/KQueueDatagramChannel;
      89: invokevirtual #3                  // Method io/netty/channel/kqueue/KQueueDatagramChannel.isActive:()Z
      92: ifeq          108
      95: aload_0
      96: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/KQueueDatagramChannel;
      99: invokevirtual #12                 // Method io/netty/channel/kqueue/KQueueDatagramChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
     102: invokeinterface #13,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelActive:()Lio/netty/channel/ChannelPipeline;
     107: pop
     108: iload         4
     110: ifne          123
     113: aload_0
     114: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/KQueueDatagramChannel;
     117: invokevirtual #14                 // Method io/netty/channel/kqueue/KQueueDatagramChannel.doClose:()V
     120: goto          164
     123: aload_0
     124: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/KQueueDatagramChannel;
     127: iconst_1
     128: invokestatic  #15                 // Method io/netty/channel/kqueue/KQueueDatagramChannel.access$202:(Lio/netty/channel/kqueue/KQueueDatagramChannel;Z)Z
     131: pop
     132: goto          164
     135: astore        8
     137: iload         4
     139: ifne          152
     142: aload_0
     143: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/KQueueDatagramChannel;
     146: invokevirtual #14                 // Method io/netty/channel/kqueue/KQueueDatagramChannel.doClose:()V
     149: goto          161
     152: aload_0
     153: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/KQueueDatagramChannel;
     156: iconst_1
     157: invokestatic  #15                 // Method io/netty/channel/kqueue/KQueueDatagramChannel.access$202:(Lio/netty/channel/kqueue/KQueueDatagramChannel;Z)Z
     160: pop
     161: aload         8
     163: athrow
     164: goto          178
     167: astore        5
     169: aload_3
     170: aload         5
     172: invokeinterface #17,  2           // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
     177: pop
     178: return
    Exception table:
       from    to  target type
           3   108   135   any
         135   137   135   any
           3   164   167   Class java/lang/Throwable

  void readReady(io.netty.channel.kqueue.KQueueRecvByteAllocatorHandle);
    Code:
       0: getstatic     #18                 // Field $assertionsDisabled:Z
       3: ifne          29
       6: aload_0
       7: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/KQueueDatagramChannel;
      10: invokevirtual #19                 // Method io/netty/channel/kqueue/KQueueDatagramChannel.eventLoop:()Lio/netty/channel/EventLoop;
      13: invokeinterface #20,  1           // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
      18: ifne          29
      21: new           #21                 // class java/lang/AssertionError
      24: dup
      25: invokespecial #22                 // Method java/lang/AssertionError."<init>":()V
      28: athrow
      29: aload_0
      30: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/KQueueDatagramChannel;
      33: invokevirtual #23                 // Method io/netty/channel/kqueue/KQueueDatagramChannel.config:()Lio/netty/channel/kqueue/KQueueDatagramChannelConfig;
      36: astore_2
      37: aload_0
      38: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/KQueueDatagramChannel;
      41: aload_2
      42: invokevirtual #24                 // Method io/netty/channel/kqueue/KQueueDatagramChannel.shouldBreakReadReady:(Lio/netty/channel/ChannelConfig;)Z
      45: ifeq          53
      48: aload_0
      49: invokevirtual #25                 // Method clearReadFilter0:()V
      52: return
      53: aload_0
      54: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/KQueueDatagramChannel;
      57: invokevirtual #12                 // Method io/netty/channel/kqueue/KQueueDatagramChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
      60: astore_3
      61: aload_2
      62: invokeinterface #26,  1           // InterfaceMethod io/netty/channel/socket/DatagramChannelConfig.getAllocator:()Lio/netty/buffer/ByteBufAllocator;
      67: astore        4
      69: aload_1
      70: aload_2
      71: invokevirtual #27                 // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.reset:(Lio/netty/channel/ChannelConfig;)V
      74: aload_0
      75: invokevirtual #28                 // Method readReadyBefore:()V
      78: aconst_null
      79: astore        5
      81: aconst_null
      82: astore        6
      84: aload_1
      85: aload         4
      87: invokevirtual #29                 // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.allocate:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/buffer/ByteBuf;
      90: astore        6
      92: aload_1
      93: aload         6
      95: invokevirtual #30                 // Method io/netty/buffer/ByteBuf.writableBytes:()I
      98: invokevirtual #31                 // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.attemptedBytesRead:(I)V
     101: aload         6
     103: invokevirtual #32                 // Method io/netty/buffer/ByteBuf.hasMemoryAddress:()Z
     106: ifeq          139
     109: aload_0
     110: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/KQueueDatagramChannel;
     113: getfield      #8                  // Field io/netty/channel/kqueue/KQueueDatagramChannel.socket:Lio/netty/channel/kqueue/BsdSocket;
     116: aload         6
     118: invokevirtual #33                 // Method io/netty/buffer/ByteBuf.memoryAddress:()J
     121: aload         6
     123: invokevirtual #34                 // Method io/netty/buffer/ByteBuf.writerIndex:()I
     126: aload         6
     128: invokevirtual #35                 // Method io/netty/buffer/ByteBuf.capacity:()I
     131: invokevirtual #36                 // Method io/netty/channel/kqueue/BsdSocket.recvFromAddress:(JII)Lio/netty/channel/unix/DatagramSocketAddress;
     134: astore        7
     136: goto          180
     139: aload         6
     141: aload         6
     143: invokevirtual #34                 // Method io/netty/buffer/ByteBuf.writerIndex:()I
     146: aload         6
     148: invokevirtual #30                 // Method io/netty/buffer/ByteBuf.writableBytes:()I
     151: invokevirtual #37                 // Method io/netty/buffer/ByteBuf.internalNioBuffer:(II)Ljava/nio/ByteBuffer;
     154: astore        8
     156: aload_0
     157: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/KQueueDatagramChannel;
     160: getfield      #8                  // Field io/netty/channel/kqueue/KQueueDatagramChannel.socket:Lio/netty/channel/kqueue/BsdSocket;
     163: aload         8
     165: aload         8
     167: invokevirtual #38                 // Method java/nio/ByteBuffer.position:()I
     170: aload         8
     172: invokevirtual #39                 // Method java/nio/ByteBuffer.limit:()I
     175: invokevirtual #40                 // Method io/netty/channel/kqueue/BsdSocket.recvFrom:(Ljava/nio/ByteBuffer;II)Lio/netty/channel/unix/DatagramSocketAddress;
     178: astore        7
     180: aload         7
     182: ifnonnull     202
     185: aload_1
     186: iconst_m1
     187: invokevirtual #41                 // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.lastBytesRead:(I)V
     190: aload         6
     192: invokevirtual #42                 // Method io/netty/buffer/ByteBuf.release:()Z
     195: pop
     196: aconst_null
     197: astore        6
     199: goto          272
     202: aload_1
     203: iconst_1
     204: invokevirtual #43                 // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.incMessagesRead:(I)V
     207: aload_1
     208: aload         7
     210: invokevirtual #44                 // Method io/netty/channel/unix/DatagramSocketAddress.receivedAmount:()I
     213: invokevirtual #41                 // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.lastBytesRead:(I)V
     216: aload         6
     218: aload         6
     220: invokevirtual #34                 // Method io/netty/buffer/ByteBuf.writerIndex:()I
     223: aload_1
     224: invokevirtual #45                 // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.lastBytesRead:()I
     227: iadd
     228: invokevirtual #46                 // Method io/netty/buffer/ByteBuf.writerIndex:(I)Lio/netty/buffer/ByteBuf;
     231: pop
     232: aload_0
     233: iconst_0
     234: putfield      #47                 // Field readPending:Z
     237: aload_3
     238: new           #48                 // class io/netty/channel/socket/DatagramPacket
     241: dup
     242: aload         6
     244: aload_0
     245: invokevirtual #49                 // Method localAddress:()Ljava/net/SocketAddress;
     248: checkcast     #4                  // class java/net/InetSocketAddress
     251: aload         7
     253: invokespecial #50                 // Method io/netty/channel/socket/DatagramPacket."<init>":(Lio/netty/buffer/ByteBuf;Ljava/net/InetSocketAddress;Ljava/net/InetSocketAddress;)V
     256: invokeinterface #51,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelPipeline;
     261: pop
     262: aconst_null
     263: astore        6
     265: aload_1
     266: invokevirtual #52                 // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.continueReading:()Z
     269: ifne          84
     272: goto          292
     275: astore        7
     277: aload         6
     279: ifnull        288
     282: aload         6
     284: invokevirtual #42                 // Method io/netty/buffer/ByteBuf.release:()Z
     287: pop
     288: aload         7
     290: astore        5
     292: aload_1
     293: invokevirtual #53                 // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.readComplete:()V
     296: aload_3
     297: invokeinterface #54,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelReadComplete:()Lio/netty/channel/ChannelPipeline;
     302: pop
     303: aload         5
     305: ifnull        317
     308: aload_3
     309: aload         5
     311: invokeinterface #55,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPipeline;
     316: pop
     317: aload_0
     318: aload_2
     319: invokevirtual #56                 // Method readReadyFinally:(Lio/netty/channel/ChannelConfig;)V
     322: goto          335
     325: astore        9
     327: aload_0
     328: aload_2
     329: invokevirtual #56                 // Method readReadyFinally:(Lio/netty/channel/ChannelConfig;)V
     332: aload         9
     334: athrow
     335: return
    Exception table:
       from    to  target type
          84   272   275   Class java/lang/Throwable
          81   317   325   any
         325   327   325   any

  static {};
    Code:
       0: ldc           #57                 // class io/netty/channel/kqueue/KQueueDatagramChannel
       2: invokevirtual #58                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #18                 // Field $assertionsDisabled:Z
      16: return
}
