Compiled from "KQueueServerChannelConfig.java"
public class io.netty.channel.kqueue.KQueueServerChannelConfig extends io.netty.channel.kqueue.KQueueChannelConfig implements io.netty.channel.socket.ServerSocketChannelConfig {
  protected final io.netty.channel.kqueue.AbstractKQueueChannel channel;

  private volatile int backlog;

  io.netty.channel.kqueue.KQueueServerChannelConfig(io.netty.channel.kqueue.AbstractKQueueChannel);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method io/netty/channel/kqueue/KQueueChannelConfig."<init>":(Lio/netty/channel/kqueue/AbstractKQueueChannel;)V
       5: aload_0
       6: getstatic     #2                  // Field io/netty/util/NetUtil.SOMAXCONN:I
       9: putfield      #3                  // Field backlog:I
      12: aload_0
      13: aload_1
      14: putfield      #4                  // Field channel:Lio/netty/channel/kqueue/AbstractKQueueChannel;
      17: return

  public java.util.Map<io.netty.channel.ChannelOption<?>, java.lang.Object> getOptions();
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #5                  // Method io/netty/channel/kqueue/KQueueChannelConfig.getOptions:()Ljava/util/Map;
       5: iconst_3
       6: anewarray     #6                  // class io/netty/channel/ChannelOption
       9: dup
      10: iconst_0
      11: getstatic     #7                  // Field io/netty/channel/ChannelOption.SO_RCVBUF:Lio/netty/channel/ChannelOption;
      14: aastore
      15: dup
      16: iconst_1
      17: getstatic     #8                  // Field io/netty/channel/ChannelOption.SO_REUSEADDR:Lio/netty/channel/ChannelOption;
      20: aastore
      21: dup
      22: iconst_2
      23: getstatic     #9                  // Field io/netty/channel/ChannelOption.SO_BACKLOG:Lio/netty/channel/ChannelOption;
      26: aastore
      27: invokevirtual #10                 // Method getOptions:(Ljava/util/Map;[Lio/netty/channel/ChannelOption;)Ljava/util/Map;
      30: areturn

  public <T> T getOption(io.netty.channel.ChannelOption<T>);
    Code:
       0: aload_1
       1: getstatic     #7                  // Field io/netty/channel/ChannelOption.SO_RCVBUF:Lio/netty/channel/ChannelOption;
       4: if_acmpne     15
       7: aload_0
       8: invokevirtual #11                 // Method getReceiveBufferSize:()I
      11: invokestatic  #12                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      14: areturn
      15: aload_1
      16: getstatic     #8                  // Field io/netty/channel/ChannelOption.SO_REUSEADDR:Lio/netty/channel/ChannelOption;
      19: if_acmpne     30
      22: aload_0
      23: invokevirtual #13                 // Method isReuseAddress:()Z
      26: invokestatic  #14                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      29: areturn
      30: aload_1
      31: getstatic     #9                  // Field io/netty/channel/ChannelOption.SO_BACKLOG:Lio/netty/channel/ChannelOption;
      34: if_acmpne     45
      37: aload_0
      38: invokevirtual #15                 // Method getBacklog:()I
      41: invokestatic  #12                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      44: areturn
      45: aload_0
      46: aload_1
      47: invokespecial #16                 // Method io/netty/channel/kqueue/KQueueChannelConfig.getOption:(Lio/netty/channel/ChannelOption;)Ljava/lang/Object;
      50: areturn

  public <T> boolean setOption(io.netty.channel.ChannelOption<T>, T);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #17                 // Method validate:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)V
       6: aload_1
       7: getstatic     #7                  // Field io/netty/channel/ChannelOption.SO_RCVBUF:Lio/netty/channel/ChannelOption;
      10: if_acmpne     28
      13: aload_0
      14: aload_2
      15: checkcast     #18                 // class java/lang/Integer
      18: invokevirtual #19                 // Method java/lang/Integer.intValue:()I
      21: invokevirtual #20                 // Method setReceiveBufferSize:(I)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
      24: pop
      25: goto          79
      28: aload_1
      29: getstatic     #8                  // Field io/netty/channel/ChannelOption.SO_REUSEADDR:Lio/netty/channel/ChannelOption;
      32: if_acmpne     50
      35: aload_0
      36: aload_2
      37: checkcast     #21                 // class java/lang/Boolean
      40: invokevirtual #22                 // Method java/lang/Boolean.booleanValue:()Z
      43: invokevirtual #23                 // Method setReuseAddress:(Z)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
      46: pop
      47: goto          79
      50: aload_1
      51: getstatic     #9                  // Field io/netty/channel/ChannelOption.SO_BACKLOG:Lio/netty/channel/ChannelOption;
      54: if_acmpne     72
      57: aload_0
      58: aload_2
      59: checkcast     #18                 // class java/lang/Integer
      62: invokevirtual #19                 // Method java/lang/Integer.intValue:()I
      65: invokevirtual #24                 // Method setBacklog:(I)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
      68: pop
      69: goto          79
      72: aload_0
      73: aload_1
      74: aload_2
      75: invokespecial #25                 // Method io/netty/channel/kqueue/KQueueChannelConfig.setOption:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)Z
      78: ireturn
      79: iconst_1
      80: ireturn

  public boolean isReuseAddress();
    Code:
       0: aload_0
       1: getfield      #4                  // Field channel:Lio/netty/channel/kqueue/AbstractKQueueChannel;
       4: getfield      #26                 // Field io/netty/channel/kqueue/AbstractKQueueChannel.socket:Lio/netty/channel/kqueue/BsdSocket;
       7: invokevirtual #27                 // Method io/netty/channel/kqueue/BsdSocket.isReuseAddress:()Z
      10: ireturn
      11: astore_1
      12: new           #29                 // class io/netty/channel/ChannelException
      15: dup
      16: aload_1
      17: invokespecial #30                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      20: athrow
    Exception table:
       from    to  target type
           0    10    11   Class java/io/IOException

  public io.netty.channel.kqueue.KQueueServerChannelConfig setReuseAddress(boolean);
    Code:
       0: aload_0
       1: getfield      #4                  // Field channel:Lio/netty/channel/kqueue/AbstractKQueueChannel;
       4: getfield      #26                 // Field io/netty/channel/kqueue/AbstractKQueueChannel.socket:Lio/netty/channel/kqueue/BsdSocket;
       7: iload_1
       8: invokevirtual #31                 // Method io/netty/channel/kqueue/BsdSocket.setReuseAddress:(Z)V
      11: aload_0
      12: areturn
      13: astore_2
      14: new           #29                 // class io/netty/channel/ChannelException
      17: dup
      18: aload_2
      19: invokespecial #30                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      22: athrow
    Exception table:
       from    to  target type
           0    12    13   Class java/io/IOException

  public int getReceiveBufferSize();
    Code:
       0: aload_0
       1: getfield      #4                  // Field channel:Lio/netty/channel/kqueue/AbstractKQueueChannel;
       4: getfield      #26                 // Field io/netty/channel/kqueue/AbstractKQueueChannel.socket:Lio/netty/channel/kqueue/BsdSocket;
       7: invokevirtual #32                 // Method io/netty/channel/kqueue/BsdSocket.getReceiveBufferSize:()I
      10: ireturn
      11: astore_1
      12: new           #29                 // class io/netty/channel/ChannelException
      15: dup
      16: aload_1
      17: invokespecial #30                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      20: athrow
    Exception table:
       from    to  target type
           0    10    11   Class java/io/IOException

  public io.netty.channel.kqueue.KQueueServerChannelConfig setReceiveBufferSize(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field channel:Lio/netty/channel/kqueue/AbstractKQueueChannel;
       4: getfield      #26                 // Field io/netty/channel/kqueue/AbstractKQueueChannel.socket:Lio/netty/channel/kqueue/BsdSocket;
       7: iload_1
       8: invokevirtual #33                 // Method io/netty/channel/kqueue/BsdSocket.setReceiveBufferSize:(I)V
      11: aload_0
      12: areturn
      13: astore_2
      14: new           #29                 // class io/netty/channel/ChannelException
      17: dup
      18: aload_2
      19: invokespecial #30                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      22: athrow
    Exception table:
       from    to  target type
           0    12    13   Class java/io/IOException

  public int getBacklog();
    Code:
       0: aload_0
       1: getfield      #3                  // Field backlog:I
       4: ireturn

  public io.netty.channel.kqueue.KQueueServerChannelConfig setBacklog(int);
    Code:
       0: iload_1
       1: ifge          31
       4: new           #34                 // class java/lang/IllegalArgumentException
       7: dup
       8: new           #35                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #37                 // String backlog:
      17: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: iload_1
      21: invokevirtual #39                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      24: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_0
      32: iload_1
      33: putfield      #3                  // Field backlog:I
      36: aload_0
      37: areturn

  public io.netty.channel.kqueue.KQueueServerChannelConfig setRcvAllocTransportProvidesGuess(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #42                 // Method io/netty/channel/kqueue/KQueueChannelConfig.setRcvAllocTransportProvidesGuess:(Z)Lio/netty/channel/kqueue/KQueueChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.kqueue.KQueueServerChannelConfig setPerformancePreferences(int, int, int);
    Code:
       0: aload_0
       1: areturn

  public io.netty.channel.kqueue.KQueueServerChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #43                 // Method io/netty/channel/kqueue/KQueueChannelConfig.setConnectTimeoutMillis:(I)Lio/netty/channel/kqueue/KQueueChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.kqueue.KQueueServerChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #44                 // Method io/netty/channel/kqueue/KQueueChannelConfig.setMaxMessagesPerRead:(I)Lio/netty/channel/kqueue/KQueueChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.kqueue.KQueueServerChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #45                 // Method io/netty/channel/kqueue/KQueueChannelConfig.setWriteSpinCount:(I)Lio/netty/channel/kqueue/KQueueChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.kqueue.KQueueServerChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #46                 // Method io/netty/channel/kqueue/KQueueChannelConfig.setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/kqueue/KQueueChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.kqueue.KQueueServerChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #47                 // Method io/netty/channel/kqueue/KQueueChannelConfig.setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/kqueue/KQueueChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.kqueue.KQueueServerChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #48                 // Method io/netty/channel/kqueue/KQueueChannelConfig.setAutoRead:(Z)Lio/netty/channel/kqueue/KQueueChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.kqueue.KQueueServerChannelConfig setWriteBufferHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #49                 // Method io/netty/channel/kqueue/KQueueChannelConfig.setWriteBufferHighWaterMark:(I)Lio/netty/channel/kqueue/KQueueChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.kqueue.KQueueServerChannelConfig setWriteBufferLowWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #50                 // Method io/netty/channel/kqueue/KQueueChannelConfig.setWriteBufferLowWaterMark:(I)Lio/netty/channel/kqueue/KQueueChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.kqueue.KQueueServerChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #51                 // Method io/netty/channel/kqueue/KQueueChannelConfig.setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/kqueue/KQueueChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.kqueue.KQueueServerChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #52                 // Method io/netty/channel/kqueue/KQueueChannelConfig.setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/kqueue/KQueueChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.kqueue.KQueueChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #53                 // Method setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: areturn

  public io.netty.channel.kqueue.KQueueChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #54                 // Method setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: areturn

  public io.netty.channel.kqueue.KQueueChannelConfig setWriteBufferLowWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #55                 // Method setWriteBufferLowWaterMark:(I)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: areturn

  public io.netty.channel.kqueue.KQueueChannelConfig setWriteBufferHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #56                 // Method setWriteBufferHighWaterMark:(I)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: areturn

  public io.netty.channel.kqueue.KQueueChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #57                 // Method setAutoRead:(Z)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: areturn

  public io.netty.channel.kqueue.KQueueChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #58                 // Method setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: areturn

  public io.netty.channel.kqueue.KQueueChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #59                 // Method setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: areturn

  public io.netty.channel.kqueue.KQueueChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #60                 // Method setWriteSpinCount:(I)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: areturn

  public io.netty.channel.kqueue.KQueueChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #61                 // Method setMaxMessagesPerRead:(I)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: areturn

  public io.netty.channel.kqueue.KQueueChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #62                 // Method setConnectTimeoutMillis:(I)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: areturn

  public io.netty.channel.kqueue.KQueueChannelConfig setRcvAllocTransportProvidesGuess(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #63                 // Method setRcvAllocTransportProvidesGuess:(Z)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #53                 // Method setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #54                 // Method setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #55                 // Method setWriteBufferLowWaterMark:(I)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #56                 // Method setWriteBufferHighWaterMark:(I)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #57                 // Method setAutoRead:(Z)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #58                 // Method setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #59                 // Method setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #60                 // Method setWriteSpinCount:(I)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #61                 // Method setMaxMessagesPerRead:(I)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #62                 // Method setConnectTimeoutMillis:(I)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #54                 // Method setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setWriteBufferLowWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #55                 // Method setWriteBufferLowWaterMark:(I)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setWriteBufferHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #56                 // Method setWriteBufferHighWaterMark:(I)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #53                 // Method setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #57                 // Method setAutoRead:(Z)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #58                 // Method setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #59                 // Method setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #60                 // Method setWriteSpinCount:(I)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #61                 // Method setMaxMessagesPerRead:(I)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #62                 // Method setConnectTimeoutMillis:(I)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setPerformancePreferences(int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #64                 // Method setPerformancePreferences:(III)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       7: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setReceiveBufferSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #20                 // Method setReceiveBufferSize:(I)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setReuseAddress(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #23                 // Method setReuseAddress:(Z)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setBacklog(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #24                 // Method setBacklog:(I)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: areturn
}
