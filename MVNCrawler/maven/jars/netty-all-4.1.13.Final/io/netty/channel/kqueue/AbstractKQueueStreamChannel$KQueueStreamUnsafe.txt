Compiled from "AbstractKQueueStreamChannel.java"
class io.netty.channel.kqueue.AbstractKQueueStreamChannel$KQueueStreamUnsafe extends io.netty.channel.kqueue.AbstractKQueueChannel$AbstractKQueueUnsafe {
  static final boolean $assertionsDisabled;

  final io.netty.channel.kqueue.AbstractKQueueStreamChannel this$0;

  io.netty.channel.kqueue.AbstractKQueueStreamChannel$KQueueStreamUnsafe(io.netty.channel.kqueue.AbstractKQueueStreamChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;
       5: aload_0
       6: aload_1
       7: invokespecial #2                  // Method io/netty/channel/kqueue/AbstractKQueueChannel$AbstractKQueueUnsafe."<init>":(Lio/netty/channel/kqueue/AbstractKQueueChannel;)V
      10: return

  protected java.util.concurrent.Executor prepareToClose();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method io/netty/channel/kqueue/AbstractKQueueChannel$AbstractKQueueUnsafe.prepareToClose:()Ljava/util/concurrent/Executor;
       4: areturn

  void readReady(io.netty.channel.kqueue.KQueueRecvByteAllocatorHandle);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;
       4: invokevirtual #4                  // Method io/netty/channel/kqueue/AbstractKQueueStreamChannel.config:()Lio/netty/channel/kqueue/KQueueChannelConfig;
       7: astore_2
       8: aload_0
       9: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;
      12: aload_2
      13: invokevirtual #5                  // Method io/netty/channel/kqueue/AbstractKQueueStreamChannel.shouldBreakReadReady:(Lio/netty/channel/ChannelConfig;)Z
      16: ifeq          24
      19: aload_0
      20: invokevirtual #6                  // Method clearReadFilter0:()V
      23: return
      24: aload_0
      25: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;
      28: invokevirtual #7                  // Method io/netty/channel/kqueue/AbstractKQueueStreamChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
      31: astore_3
      32: aload_2
      33: invokeinterface #8,  1            // InterfaceMethod io/netty/channel/ChannelConfig.getAllocator:()Lio/netty/buffer/ByteBufAllocator;
      38: astore        4
      40: aload_1
      41: aload_2
      42: invokevirtual #9                  // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.reset:(Lio/netty/channel/ChannelConfig;)V
      45: aload_0
      46: invokevirtual #10                 // Method readReadyBefore:()V
      49: aconst_null
      50: astore        5
      52: iconst_0
      53: istore        6
      55: aload_1
      56: aload         4
      58: invokevirtual #11                 // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.allocate:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/buffer/ByteBuf;
      61: astore        5
      63: aload_1
      64: aload_0
      65: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;
      68: aload         5
      70: invokevirtual #12                 // Method io/netty/channel/kqueue/AbstractKQueueStreamChannel.doReadBytes:(Lio/netty/buffer/ByteBuf;)I
      73: invokevirtual #13                 // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.lastBytesRead:(I)V
      76: aload_1
      77: invokevirtual #14                 // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.lastBytesRead:()I
      80: ifgt          109
      83: aload         5
      85: invokevirtual #15                 // Method io/netty/buffer/ByteBuf.release:()Z
      88: pop
      89: aconst_null
      90: astore        5
      92: aload_1
      93: invokevirtual #14                 // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.lastBytesRead:()I
      96: ifge          103
      99: iconst_1
     100: goto          104
     103: iconst_0
     104: istore        6
     106: goto          152
     109: aload_1
     110: iconst_1
     111: invokevirtual #16                 // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.incMessagesRead:(I)V
     114: aload_0
     115: iconst_0
     116: putfield      #17                 // Field readPending:Z
     119: aload_3
     120: aload         5
     122: invokeinterface #18,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelPipeline;
     127: pop
     128: aconst_null
     129: astore        5
     131: aload_0
     132: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;
     135: aload_2
     136: invokevirtual #5                  // Method io/netty/channel/kqueue/AbstractKQueueStreamChannel.shouldBreakReadReady:(Lio/netty/channel/ChannelConfig;)Z
     139: ifeq          145
     142: goto          152
     145: aload_1
     146: invokevirtual #19                 // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.continueReading:()Z
     149: ifne          55
     152: aload_1
     153: invokevirtual #20                 // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.readComplete:()V
     156: aload_3
     157: invokeinterface #21,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelReadComplete:()Lio/netty/channel/ChannelPipeline;
     162: pop
     163: iload         6
     165: ifeq          173
     168: aload_0
     169: iconst_0
     170: invokevirtual #22                 // Method shutdownInput:(Z)V
     173: aload_0
     174: aload_2
     175: invokevirtual #23                 // Method readReadyFinally:(Lio/netty/channel/ChannelConfig;)V
     178: goto          213
     181: astore        7
     183: aload_0
     184: aload_3
     185: aload         5
     187: aload         7
     189: iload         6
     191: aload_1
     192: invokespecial #25                 // Method handleReadException:(Lio/netty/channel/ChannelPipeline;Lio/netty/buffer/ByteBuf;Ljava/lang/Throwable;ZLio/netty/channel/kqueue/KQueueRecvByteAllocatorHandle;)V
     195: aload_0
     196: aload_2
     197: invokevirtual #23                 // Method readReadyFinally:(Lio/netty/channel/ChannelConfig;)V
     200: goto          213
     203: astore        8
     205: aload_0
     206: aload_2
     207: invokevirtual #23                 // Method readReadyFinally:(Lio/netty/channel/ChannelConfig;)V
     210: aload         8
     212: athrow
     213: return
    Exception table:
       from    to  target type
          55   173   181   Class java/lang/Throwable
          55   173   203   any
         181   195   203   any
         203   205   203   any

  void writeReady();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;
       4: invokestatic  #26                 // Method io/netty/channel/kqueue/AbstractKQueueStreamChannel.access$300:(Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;)Lio/netty/channel/ChannelPromise;
       7: ifnull        17
      10: aload_0
      11: invokespecial #27                 // Method finishConnect:()V
      14: goto          21
      17: aload_0
      18: invokespecial #28                 // Method io/netty/channel/kqueue/AbstractKQueueChannel$AbstractKQueueUnsafe.writeReady:()V
      21: return

  public void connect(java.net.SocketAddress, java.net.SocketAddress, io.netty.channel.ChannelPromise);
    Code:
       0: aload_3
       1: invokeinterface #29,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setUncancellable:()Z
       6: ifeq          17
       9: aload_0
      10: aload_3
      11: invokevirtual #30                 // Method ensureOpen:(Lio/netty/channel/ChannelPromise;)Z
      14: ifne          18
      17: return
      18: aload_0
      19: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;
      22: invokestatic  #26                 // Method io/netty/channel/kqueue/AbstractKQueueStreamChannel.access$300:(Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;)Lio/netty/channel/ChannelPromise;
      25: ifnull        36
      28: new           #31                 // class java/nio/channels/ConnectionPendingException
      31: dup
      32: invokespecial #32                 // Method java/nio/channels/ConnectionPendingException."<init>":()V
      35: athrow
      36: aload_0
      37: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;
      40: invokevirtual #33                 // Method io/netty/channel/kqueue/AbstractKQueueStreamChannel.isActive:()Z
      43: istore        4
      45: aload_0
      46: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;
      49: aload_1
      50: aload_2
      51: invokevirtual #34                 // Method io/netty/channel/kqueue/AbstractKQueueStreamChannel.doConnect:(Ljava/net/SocketAddress;Ljava/net/SocketAddress;)Z
      54: ifeq          67
      57: aload_0
      58: aload_3
      59: iload         4
      61: invokespecial #35                 // Method fulfillConnectPromise:(Lio/netty/channel/ChannelPromise;Z)V
      64: goto          152
      67: aload_0
      68: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;
      71: aload_3
      72: invokestatic  #36                 // Method io/netty/channel/kqueue/AbstractKQueueStreamChannel.access$302:(Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelPromise;
      75: pop
      76: aload_0
      77: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;
      80: aload_1
      81: invokestatic  #37                 // Method io/netty/channel/kqueue/AbstractKQueueStreamChannel.access$402:(Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;Ljava/net/SocketAddress;)Ljava/net/SocketAddress;
      84: pop
      85: aload_0
      86: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;
      89: invokevirtual #4                  // Method io/netty/channel/kqueue/AbstractKQueueStreamChannel.config:()Lio/netty/channel/kqueue/KQueueChannelConfig;
      92: invokevirtual #38                 // Method io/netty/channel/kqueue/KQueueChannelConfig.getConnectTimeoutMillis:()I
      95: istore        5
      97: iload         5
      99: ifle          137
     102: aload_0
     103: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;
     106: aload_0
     107: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;
     110: invokevirtual #39                 // Method io/netty/channel/kqueue/AbstractKQueueStreamChannel.eventLoop:()Lio/netty/channel/EventLoop;
     113: new           #40                 // class io/netty/channel/kqueue/AbstractKQueueStreamChannel$KQueueStreamUnsafe$1
     116: dup
     117: aload_0
     118: aload_1
     119: invokespecial #41                 // Method io/netty/channel/kqueue/AbstractKQueueStreamChannel$KQueueStreamUnsafe$1."<init>":(Lio/netty/channel/kqueue/AbstractKQueueStreamChannel$KQueueStreamUnsafe;Ljava/net/SocketAddress;)V
     122: iload         5
     124: i2l
     125: getstatic     #42                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     128: invokeinterface #43,  5           // InterfaceMethod io/netty/channel/EventLoop.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/netty/util/concurrent/ScheduledFuture;
     133: invokestatic  #44                 // Method io/netty/channel/kqueue/AbstractKQueueStreamChannel.access$502:(Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;Ljava/util/concurrent/ScheduledFuture;)Ljava/util/concurrent/ScheduledFuture;
     136: pop
     137: aload_3
     138: new           #45                 // class io/netty/channel/kqueue/AbstractKQueueStreamChannel$KQueueStreamUnsafe$2
     141: dup
     142: aload_0
     143: invokespecial #46                 // Method io/netty/channel/kqueue/AbstractKQueueStreamChannel$KQueueStreamUnsafe$2."<init>":(Lio/netty/channel/kqueue/AbstractKQueueStreamChannel$KQueueStreamUnsafe;)V
     146: invokeinterface #47,  2           // InterfaceMethod io/netty/channel/ChannelPromise.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelPromise;
     151: pop
     152: goto          175
     155: astore        4
     157: aload_0
     158: invokevirtual #48                 // Method closeIfClosed:()V
     161: aload_3
     162: aload_0
     163: aload         4
     165: aload_1
     166: invokevirtual #49                 // Method annotateConnectException:(Ljava/lang/Throwable;Ljava/net/SocketAddress;)Ljava/lang/Throwable;
     169: invokeinterface #50,  2           // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
     174: pop
     175: return
    Exception table:
       from    to  target type
          18   152   155   Class java/lang/Throwable

  private void fulfillConnectPromise(io.netty.channel.ChannelPromise, boolean);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;
       9: iconst_1
      10: putfield      #51                 // Field io/netty/channel/kqueue/AbstractKQueueStreamChannel.active:Z
      13: aload_0
      14: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;
      17: invokevirtual #33                 // Method io/netty/channel/kqueue/AbstractKQueueStreamChannel.isActive:()Z
      20: istore_3
      21: aload_1
      22: invokeinterface #52,  1           // InterfaceMethod io/netty/channel/ChannelPromise.trySuccess:()Z
      27: istore        4
      29: iload_2
      30: ifne          50
      33: iload_3
      34: ifeq          50
      37: aload_0
      38: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;
      41: invokevirtual #7                  // Method io/netty/channel/kqueue/AbstractKQueueStreamChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
      44: invokeinterface #53,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelActive:()Lio/netty/channel/ChannelPipeline;
      49: pop
      50: iload         4
      52: ifne          63
      55: aload_0
      56: aload_0
      57: invokevirtual #54                 // Method voidPromise:()Lio/netty/channel/ChannelPromise;
      60: invokevirtual #55                 // Method close:(Lio/netty/channel/ChannelPromise;)V
      63: return

  private void fulfillConnectPromise(io.netty.channel.ChannelPromise, java.lang.Throwable);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_1
       6: aload_2
       7: invokeinterface #50,  2           // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
      12: pop
      13: aload_0
      14: invokevirtual #48                 // Method closeIfClosed:()V
      17: return

  private void finishConnect();
    Code:
       0: getstatic     #56                 // Field $assertionsDisabled:Z
       3: ifne          29
       6: aload_0
       7: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;
      10: invokevirtual #39                 // Method io/netty/channel/kqueue/AbstractKQueueStreamChannel.eventLoop:()Lio/netty/channel/EventLoop;
      13: invokeinterface #57,  1           // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
      18: ifne          29
      21: new           #58                 // class java/lang/AssertionError
      24: dup
      25: invokespecial #59                 // Method java/lang/AssertionError."<init>":()V
      28: athrow
      29: iconst_0
      30: istore_1
      31: aload_0
      32: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;
      35: invokevirtual #33                 // Method io/netty/channel/kqueue/AbstractKQueueStreamChannel.isActive:()Z
      38: istore_2
      39: aload_0
      40: invokevirtual #60                 // Method doFinishConnect:()Z
      43: ifne          86
      46: iconst_1
      47: istore_1
      48: iload_1
      49: ifne          85
      52: aload_0
      53: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;
      56: invokestatic  #61                 // Method io/netty/channel/kqueue/AbstractKQueueStreamChannel.access$500:(Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;)Ljava/util/concurrent/ScheduledFuture;
      59: ifnull        76
      62: aload_0
      63: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;
      66: invokestatic  #61                 // Method io/netty/channel/kqueue/AbstractKQueueStreamChannel.access$500:(Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;)Ljava/util/concurrent/ScheduledFuture;
      69: iconst_0
      70: invokeinterface #62,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      75: pop
      76: aload_0
      77: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;
      80: aconst_null
      81: invokestatic  #36                 // Method io/netty/channel/kqueue/AbstractKQueueStreamChannel.access$302:(Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelPromise;
      84: pop
      85: return
      86: aload_0
      87: aload_0
      88: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;
      91: invokestatic  #26                 // Method io/netty/channel/kqueue/AbstractKQueueStreamChannel.access$300:(Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;)Lio/netty/channel/ChannelPromise;
      94: iload_2
      95: invokespecial #35                 // Method fulfillConnectPromise:(Lio/netty/channel/ChannelPromise;Z)V
      98: iload_1
      99: ifne          242
     102: aload_0
     103: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;
     106: invokestatic  #61                 // Method io/netty/channel/kqueue/AbstractKQueueStreamChannel.access$500:(Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;)Ljava/util/concurrent/ScheduledFuture;
     109: ifnull        126
     112: aload_0
     113: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;
     116: invokestatic  #61                 // Method io/netty/channel/kqueue/AbstractKQueueStreamChannel.access$500:(Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;)Ljava/util/concurrent/ScheduledFuture;
     119: iconst_0
     120: invokeinterface #62,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
     125: pop
     126: aload_0
     127: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;
     130: aconst_null
     131: invokestatic  #36                 // Method io/netty/channel/kqueue/AbstractKQueueStreamChannel.access$302:(Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelPromise;
     134: pop
     135: goto          242
     138: astore_2
     139: aload_0
     140: aload_0
     141: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;
     144: invokestatic  #26                 // Method io/netty/channel/kqueue/AbstractKQueueStreamChannel.access$300:(Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;)Lio/netty/channel/ChannelPromise;
     147: aload_0
     148: aload_2
     149: aload_0
     150: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;
     153: invokestatic  #63                 // Method io/netty/channel/kqueue/AbstractKQueueStreamChannel.access$400:(Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;)Ljava/net/SocketAddress;
     156: invokevirtual #49                 // Method annotateConnectException:(Ljava/lang/Throwable;Ljava/net/SocketAddress;)Ljava/lang/Throwable;
     159: invokespecial #64                 // Method fulfillConnectPromise:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;)V
     162: iload_1
     163: ifne          242
     166: aload_0
     167: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;
     170: invokestatic  #61                 // Method io/netty/channel/kqueue/AbstractKQueueStreamChannel.access$500:(Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;)Ljava/util/concurrent/ScheduledFuture;
     173: ifnull        190
     176: aload_0
     177: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;
     180: invokestatic  #61                 // Method io/netty/channel/kqueue/AbstractKQueueStreamChannel.access$500:(Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;)Ljava/util/concurrent/ScheduledFuture;
     183: iconst_0
     184: invokeinterface #62,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
     189: pop
     190: aload_0
     191: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;
     194: aconst_null
     195: invokestatic  #36                 // Method io/netty/channel/kqueue/AbstractKQueueStreamChannel.access$302:(Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelPromise;
     198: pop
     199: goto          242
     202: astore_3
     203: iload_1
     204: ifne          240
     207: aload_0
     208: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;
     211: invokestatic  #61                 // Method io/netty/channel/kqueue/AbstractKQueueStreamChannel.access$500:(Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;)Ljava/util/concurrent/ScheduledFuture;
     214: ifnull        231
     217: aload_0
     218: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;
     221: invokestatic  #61                 // Method io/netty/channel/kqueue/AbstractKQueueStreamChannel.access$500:(Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;)Ljava/util/concurrent/ScheduledFuture;
     224: iconst_0
     225: invokeinterface #62,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
     230: pop
     231: aload_0
     232: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;
     235: aconst_null
     236: invokestatic  #36                 // Method io/netty/channel/kqueue/AbstractKQueueStreamChannel.access$302:(Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelPromise;
     239: pop
     240: aload_3
     241: athrow
     242: return
    Exception table:
       from    to  target type
          31    48   138   Class java/lang/Throwable
          86    98   138   Class java/lang/Throwable
          31    48   202   any
          86    98   202   any
         138   162   202   any

  boolean doFinishConnect() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;
       4: getfield      #65                 // Field io/netty/channel/kqueue/AbstractKQueueStreamChannel.socket:Lio/netty/channel/kqueue/BsdSocket;
       7: invokevirtual #66                 // Method io/netty/channel/kqueue/BsdSocket.finishConnect:()Z
      10: ifeq          23
      13: aload_0
      14: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;
      17: iconst_0
      18: invokevirtual #67                 // Method io/netty/channel/kqueue/AbstractKQueueStreamChannel.writeFilter:(Z)V
      21: iconst_1
      22: ireturn
      23: aload_0
      24: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;
      27: iconst_1
      28: invokevirtual #67                 // Method io/netty/channel/kqueue/AbstractKQueueStreamChannel.writeFilter:(Z)V
      31: iconst_0
      32: ireturn

  private void handleReadException(io.netty.channel.ChannelPipeline, io.netty.buffer.ByteBuf, java.lang.Throwable, boolean, io.netty.channel.kqueue.KQueueRecvByteAllocatorHandle);
    Code:
       0: aload_2
       1: ifnull        32
       4: aload_2
       5: invokevirtual #68                 // Method io/netty/buffer/ByteBuf.isReadable:()Z
       8: ifeq          27
      11: aload_0
      12: iconst_0
      13: putfield      #17                 // Field readPending:Z
      16: aload_1
      17: aload_2
      18: invokeinterface #18,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelPipeline;
      23: pop
      24: goto          32
      27: aload_2
      28: invokevirtual #15                 // Method io/netty/buffer/ByteBuf.release:()Z
      31: pop
      32: aload         5
      34: invokevirtual #20                 // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.readComplete:()V
      37: aload_1
      38: invokeinterface #21,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelReadComplete:()Lio/netty/channel/ChannelPipeline;
      43: pop
      44: aload_1
      45: aload_3
      46: invokeinterface #69,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPipeline;
      51: pop
      52: iload         4
      54: ifne          64
      57: aload_3
      58: instanceof    #70                 // class java/io/IOException
      61: ifeq          69
      64: aload_0
      65: iconst_0
      66: invokevirtual #22                 // Method shutdownInput:(Z)V
      69: return

  static {};
    Code:
       0: ldc           #71                 // class io/netty/channel/kqueue/AbstractKQueueStreamChannel
       2: invokevirtual #72                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #56                 // Field $assertionsDisabled:Z
      16: return
}
