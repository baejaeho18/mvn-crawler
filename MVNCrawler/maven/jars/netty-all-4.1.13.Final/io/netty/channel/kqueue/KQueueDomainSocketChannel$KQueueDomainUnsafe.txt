Compiled from "KQueueDomainSocketChannel.java"
final class io.netty.channel.kqueue.KQueueDomainSocketChannel$KQueueDomainUnsafe extends io.netty.channel.kqueue.AbstractKQueueStreamChannel$KQueueStreamUnsafe {
  final io.netty.channel.kqueue.KQueueDomainSocketChannel this$0;

  private io.netty.channel.kqueue.KQueueDomainSocketChannel$KQueueDomainUnsafe(io.netty.channel.kqueue.KQueueDomainSocketChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lio/netty/channel/kqueue/KQueueDomainSocketChannel;
       5: aload_0
       6: aload_1
       7: invokespecial #3                  // Method io/netty/channel/kqueue/AbstractKQueueStreamChannel$KQueueStreamUnsafe."<init>":(Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;)V
      10: return

  void readReady(io.netty.channel.kqueue.KQueueRecvByteAllocatorHandle);
    Code:
       0: getstatic     #4                  // Field io/netty/channel/kqueue/KQueueDomainSocketChannel$1.$SwitchMap$io$netty$channel$unix$DomainSocketReadMode:[I
       3: aload_0
       4: getfield      #2                  // Field this$0:Lio/netty/channel/kqueue/KQueueDomainSocketChannel;
       7: invokevirtual #5                  // Method io/netty/channel/kqueue/KQueueDomainSocketChannel.config:()Lio/netty/channel/kqueue/KQueueDomainSocketChannelConfig;
      10: invokevirtual #6                  // Method io/netty/channel/kqueue/KQueueDomainSocketChannelConfig.getReadMode:()Lio/netty/channel/unix/DomainSocketReadMode;
      13: invokevirtual #7                  // Method io/netty/channel/unix/DomainSocketReadMode.ordinal:()I
      16: iaload
      17: lookupswitch  { // 2
                     1: 44
                     2: 52
               default: 59
          }
      44: aload_0
      45: aload_1
      46: invokespecial #8                  // Method io/netty/channel/kqueue/AbstractKQueueStreamChannel$KQueueStreamUnsafe.readReady:(Lio/netty/channel/kqueue/KQueueRecvByteAllocatorHandle;)V
      49: goto          67
      52: aload_0
      53: invokespecial #9                  // Method readReadyFd:()V
      56: goto          67
      59: new           #10                 // class java/lang/Error
      62: dup
      63: invokespecial #11                 // Method java/lang/Error."<init>":()V
      66: athrow
      67: return

  private void readReadyFd();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lio/netty/channel/kqueue/KQueueDomainSocketChannel;
       4: getfield      #12                 // Field io/netty/channel/kqueue/KQueueDomainSocketChannel.socket:Lio/netty/channel/kqueue/BsdSocket;
       7: invokevirtual #13                 // Method io/netty/channel/kqueue/BsdSocket.isInputShutdown:()Z
      10: ifeq          18
      13: aload_0
      14: invokespecial #14                 // Method io/netty/channel/kqueue/AbstractKQueueStreamChannel$KQueueStreamUnsafe.clearReadFilter0:()V
      17: return
      18: aload_0
      19: getfield      #2                  // Field this$0:Lio/netty/channel/kqueue/KQueueDomainSocketChannel;
      22: invokevirtual #5                  // Method io/netty/channel/kqueue/KQueueDomainSocketChannel.config:()Lio/netty/channel/kqueue/KQueueDomainSocketChannelConfig;
      25: astore_1
      26: aload_0
      27: invokevirtual #15                 // Method recvBufAllocHandle:()Lio/netty/channel/kqueue/KQueueRecvByteAllocatorHandle;
      30: astore_2
      31: aload_0
      32: getfield      #2                  // Field this$0:Lio/netty/channel/kqueue/KQueueDomainSocketChannel;
      35: invokevirtual #16                 // Method io/netty/channel/kqueue/KQueueDomainSocketChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
      38: astore_3
      39: aload_2
      40: aload_1
      41: invokevirtual #17                 // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.reset:(Lio/netty/channel/ChannelConfig;)V
      44: aload_0
      45: invokevirtual #18                 // Method readReadyBefore:()V
      48: aload_0
      49: getfield      #2                  // Field this$0:Lio/netty/channel/kqueue/KQueueDomainSocketChannel;
      52: getfield      #12                 // Field io/netty/channel/kqueue/KQueueDomainSocketChannel.socket:Lio/netty/channel/kqueue/BsdSocket;
      55: invokevirtual #19                 // Method io/netty/channel/kqueue/BsdSocket.recvFd:()I
      58: istore        4
      60: iload         4
      62: lookupswitch  { // 2
                    -1: 96
                     0: 88
               default: 115
          }
      88: aload_2
      89: iconst_0
      90: invokevirtual #20                 // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.lastBytesRead:(I)V
      93: goto          153
      96: aload_2
      97: iconst_m1
      98: invokevirtual #20                 // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.lastBytesRead:(I)V
     101: aload_0
     102: aload_0
     103: invokevirtual #21                 // Method voidPromise:()Lio/netty/channel/ChannelPromise;
     106: invokevirtual #22                 // Method close:(Lio/netty/channel/ChannelPromise;)V
     109: aload_0
     110: aload_1
     111: invokevirtual #23                 // Method readReadyFinally:(Lio/netty/channel/ChannelConfig;)V
     114: return
     115: aload_2
     116: iconst_1
     117: invokevirtual #20                 // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.lastBytesRead:(I)V
     120: aload_2
     121: iconst_1
     122: invokevirtual #24                 // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.incMessagesRead:(I)V
     125: aload_0
     126: iconst_0
     127: putfield      #25                 // Field readPending:Z
     130: aload_3
     131: new           #26                 // class io/netty/channel/unix/FileDescriptor
     134: dup
     135: iload         4
     137: invokespecial #27                 // Method io/netty/channel/unix/FileDescriptor."<init>":(I)V
     140: invokeinterface #28,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelPipeline;
     145: pop
     146: aload_2
     147: invokevirtual #29                 // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.continueReading:()Z
     150: ifne          48
     153: aload_2
     154: invokevirtual #30                 // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.readComplete:()V
     157: aload_3
     158: invokeinterface #31,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelReadComplete:()Lio/netty/channel/ChannelPipeline;
     163: pop
     164: aload_0
     165: aload_1
     166: invokevirtual #23                 // Method readReadyFinally:(Lio/netty/channel/ChannelConfig;)V
     169: goto          212
     172: astore        4
     174: aload_2
     175: invokevirtual #30                 // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.readComplete:()V
     178: aload_3
     179: invokeinterface #31,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelReadComplete:()Lio/netty/channel/ChannelPipeline;
     184: pop
     185: aload_3
     186: aload         4
     188: invokeinterface #33,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPipeline;
     193: pop
     194: aload_0
     195: aload_1
     196: invokevirtual #23                 // Method readReadyFinally:(Lio/netty/channel/ChannelConfig;)V
     199: goto          212
     202: astore        5
     204: aload_0
     205: aload_1
     206: invokevirtual #23                 // Method readReadyFinally:(Lio/netty/channel/ChannelConfig;)V
     209: aload         5
     211: athrow
     212: return
    Exception table:
       from    to  target type
          48   109   172   Class java/lang/Throwable
         115   164   172   Class java/lang/Throwable
          48   109   202   any
         115   164   202   any
         172   194   202   any
         202   204   202   any

  io.netty.channel.kqueue.KQueueDomainSocketChannel$KQueueDomainUnsafe(io.netty.channel.kqueue.KQueueDomainSocketChannel, io.netty.channel.kqueue.KQueueDomainSocketChannel$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lio/netty/channel/kqueue/KQueueDomainSocketChannel;)V
       5: return
}
