Compiled from "DefaultHttp2FrameReader.java"
public class io.netty.handler.codec.http2.DefaultHttp2FrameReader implements io.netty.handler.codec.http2.Http2FrameReader,io.netty.handler.codec.http2.Http2FrameSizePolicy,io.netty.handler.codec.http2.Http2FrameReader$Configuration {
  private final io.netty.handler.codec.http2.Http2HeadersDecoder headersDecoder;

  private boolean readingHeaders;

  private boolean readError;

  private byte frameType;

  private int streamId;

  private io.netty.handler.codec.http2.Http2Flags flags;

  private int payloadLength;

  private io.netty.handler.codec.http2.DefaultHttp2FrameReader$HeadersContinuation headersContinuation;

  private int maxFrameSize;

  public io.netty.handler.codec.http2.DefaultHttp2FrameReader();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #6                  // Method "<init>":(Z)V
       5: return

  public io.netty.handler.codec.http2.DefaultHttp2FrameReader(boolean);
    Code:
       0: aload_0
       1: new           #7                  // class io/netty/handler/codec/http2/DefaultHttp2HeadersDecoder
       4: dup
       5: iload_1
       6: invokespecial #8                  // Method io/netty/handler/codec/http2/DefaultHttp2HeadersDecoder."<init>":(Z)V
       9: invokespecial #9                  // Method "<init>":(Lio/netty/handler/codec/http2/Http2HeadersDecoder;)V
      12: return

  public io.netty.handler.codec.http2.DefaultHttp2FrameReader(io.netty.handler.codec.http2.Http2HeadersDecoder);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #11                 // Field readingHeaders:Z
       9: aload_0
      10: aload_1
      11: putfield      #5                  // Field headersDecoder:Lio/netty/handler/codec/http2/Http2HeadersDecoder;
      14: aload_0
      15: sipush        16384
      18: putfield      #12                 // Field maxFrameSize:I
      21: return

  public io.netty.handler.codec.http2.Http2HeadersDecoder$Configuration headersConfiguration();
    Code:
       0: aload_0
       1: getfield      #5                  // Field headersDecoder:Lio/netty/handler/codec/http2/Http2HeadersDecoder;
       4: invokeinterface #13,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2HeadersDecoder.configuration:()Lio/netty/handler/codec/http2/Http2HeadersDecoder$Configuration;
       9: areturn

  public io.netty.handler.codec.http2.Http2FrameReader$Configuration configuration();
    Code:
       0: aload_0
       1: areturn

  public io.netty.handler.codec.http2.Http2FrameSizePolicy frameSizePolicy();
    Code:
       0: aload_0
       1: areturn

  public void maxFrameSize(int) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: iload_1
       1: invokestatic  #14                 // Method io/netty/handler/codec/http2/Http2CodecUtil.isMaxFrameSizeValid:(I)Z
       4: ifne          31
       7: aload_0
       8: getfield      #4                  // Field streamId:I
      11: getstatic     #15                 // Field io/netty/handler/codec/http2/Http2Error.FRAME_SIZE_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      14: ldc           #16                 // String Invalid MAX_FRAME_SIZE specified in sent settings: %d
      16: iconst_1
      17: anewarray     #17                 // class java/lang/Object
      20: dup
      21: iconst_0
      22: iload_1
      23: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      26: aastore
      27: invokestatic  #19                 // Method io/netty/handler/codec/http2/Http2Exception.streamError:(ILio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      30: athrow
      31: aload_0
      32: iload_1
      33: putfield      #12                 // Field maxFrameSize:I
      36: return

  public int maxFrameSize();
    Code:
       0: aload_0
       1: getfield      #12                 // Field maxFrameSize:I
       4: ireturn

  public void close();
    Code:
       0: aload_0
       1: invokespecial #20                 // Method closeHeadersContinuation:()V
       4: return

  private void closeHeadersContinuation();
    Code:
       0: aload_0
       1: getfield      #3                  // Field headersContinuation:Lio/netty/handler/codec/http2/DefaultHttp2FrameReader$HeadersContinuation;
       4: ifnull        19
       7: aload_0
       8: getfield      #3                  // Field headersContinuation:Lio/netty/handler/codec/http2/DefaultHttp2FrameReader$HeadersContinuation;
      11: invokevirtual #21                 // Method io/netty/handler/codec/http2/DefaultHttp2FrameReader$HeadersContinuation.close:()V
      14: aload_0
      15: aconst_null
      16: putfield      #3                  // Field headersContinuation:Lio/netty/handler/codec/http2/DefaultHttp2FrameReader$HeadersContinuation;
      19: return

  public void readFrame(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, io.netty.handler.codec.http2.Http2FrameListener) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: getfield      #22                 // Field readError:Z
       4: ifeq          17
       7: aload_2
       8: aload_2
       9: invokevirtual #23                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
      12: invokevirtual #24                 // Method io/netty/buffer/ByteBuf.skipBytes:(I)Lio/netty/buffer/ByteBuf;
      15: pop
      16: return
      17: aload_0
      18: getfield      #11                 // Field readingHeaders:Z
      21: ifeq          37
      24: aload_0
      25: aload_2
      26: invokespecial #25                 // Method processHeaderState:(Lio/netty/buffer/ByteBuf;)V
      29: aload_0
      30: getfield      #11                 // Field readingHeaders:Z
      33: ifeq          37
      36: return
      37: aload_0
      38: aload_1
      39: aload_2
      40: aload_3
      41: invokespecial #26                 // Method processPayloadState:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/handler/codec/http2/Http2FrameListener;)V
      44: aload_0
      45: getfield      #11                 // Field readingHeaders:Z
      48: ifne          52
      51: return
      52: aload_2
      53: invokevirtual #27                 // Method io/netty/buffer/ByteBuf.isReadable:()Z
      56: ifne          17
      59: goto          106
      62: astore        4
      64: aload_0
      65: aload         4
      67: invokestatic  #29                 // Method io/netty/handler/codec/http2/Http2Exception.isStreamError:(Lio/netty/handler/codec/http2/Http2Exception;)Z
      70: ifne          77
      73: iconst_1
      74: goto          78
      77: iconst_0
      78: putfield      #22                 // Field readError:Z
      81: aload         4
      83: athrow
      84: astore        4
      86: aload_0
      87: iconst_1
      88: putfield      #22                 // Field readError:Z
      91: aload         4
      93: athrow
      94: astore        4
      96: aload_0
      97: iconst_1
      98: putfield      #22                 // Field readError:Z
     101: aload         4
     103: invokestatic  #32                 // Method io/netty/util/internal/PlatformDependent.throwException:(Ljava/lang/Throwable;)V
     106: return
    Exception table:
       from    to  target type
          17    36    62   Class io/netty/handler/codec/http2/Http2Exception
          37    51    62   Class io/netty/handler/codec/http2/Http2Exception
          52    59    62   Class io/netty/handler/codec/http2/Http2Exception
          17    36    84   Class java/lang/RuntimeException
          37    51    84   Class java/lang/RuntimeException
          52    59    84   Class java/lang/RuntimeException
          17    36    94   Class java/lang/Throwable
          37    51    94   Class java/lang/Throwable
          52    59    94   Class java/lang/Throwable

  private void processHeaderState(io.netty.buffer.ByteBuf) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_1
       1: invokevirtual #23                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
       4: bipush        9
       6: if_icmpge     10
       9: return
      10: aload_0
      11: aload_1
      12: invokevirtual #33                 // Method io/netty/buffer/ByteBuf.readUnsignedMedium:()I
      15: putfield      #34                 // Field payloadLength:I
      18: aload_0
      19: getfield      #34                 // Field payloadLength:I
      22: aload_0
      23: getfield      #12                 // Field maxFrameSize:I
      26: if_icmple     62
      29: getstatic     #15                 // Field io/netty/handler/codec/http2/Http2Error.FRAME_SIZE_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      32: ldc           #35                 // String Frame length: %d exceeds maximum: %d
      34: iconst_2
      35: anewarray     #17                 // class java/lang/Object
      38: dup
      39: iconst_0
      40: aload_0
      41: getfield      #34                 // Field payloadLength:I
      44: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      47: aastore
      48: dup
      49: iconst_1
      50: aload_0
      51: getfield      #12                 // Field maxFrameSize:I
      54: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      57: aastore
      58: invokestatic  #36                 // Method io/netty/handler/codec/http2/Http2Exception.connectionError:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      61: athrow
      62: aload_0
      63: aload_1
      64: invokevirtual #37                 // Method io/netty/buffer/ByteBuf.readByte:()B
      67: putfield      #38                 // Field frameType:B
      70: aload_0
      71: new           #39                 // class io/netty/handler/codec/http2/Http2Flags
      74: dup
      75: aload_1
      76: invokevirtual #40                 // Method io/netty/buffer/ByteBuf.readUnsignedByte:()S
      79: invokespecial #41                 // Method io/netty/handler/codec/http2/Http2Flags."<init>":(S)V
      82: putfield      #42                 // Field flags:Lio/netty/handler/codec/http2/Http2Flags;
      85: aload_0
      86: aload_1
      87: invokestatic  #43                 // Method io/netty/handler/codec/http2/Http2CodecUtil.readUnsignedInt:(Lio/netty/buffer/ByteBuf;)I
      90: putfield      #4                  // Field streamId:I
      93: aload_0
      94: iconst_0
      95: putfield      #11                 // Field readingHeaders:Z
      98: aload_0
      99: getfield      #38                 // Field frameType:B
     102: tableswitch   { // 0 to 9
                     0: 156
                     1: 163
                     2: 170
                     3: 177
                     4: 184
                     5: 191
                     6: 198
                     7: 205
                     8: 212
                     9: 219
               default: 226
          }
     156: aload_0
     157: invokespecial #44                 // Method verifyDataFrame:()V
     160: goto          230
     163: aload_0
     164: invokespecial #45                 // Method verifyHeadersFrame:()V
     167: goto          230
     170: aload_0
     171: invokespecial #46                 // Method verifyPriorityFrame:()V
     174: goto          230
     177: aload_0
     178: invokespecial #47                 // Method verifyRstStreamFrame:()V
     181: goto          230
     184: aload_0
     185: invokespecial #48                 // Method verifySettingsFrame:()V
     188: goto          230
     191: aload_0
     192: invokespecial #49                 // Method verifyPushPromiseFrame:()V
     195: goto          230
     198: aload_0
     199: invokespecial #50                 // Method verifyPingFrame:()V
     202: goto          230
     205: aload_0
     206: invokespecial #51                 // Method verifyGoAwayFrame:()V
     209: goto          230
     212: aload_0
     213: invokespecial #52                 // Method verifyWindowUpdateFrame:()V
     216: goto          230
     219: aload_0
     220: invokespecial #53                 // Method verifyContinuationFrame:()V
     223: goto          230
     226: aload_0
     227: invokespecial #54                 // Method verifyUnknownFrame:()V
     230: return

  private void processPayloadState(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, io.netty.handler.codec.http2.Http2FrameListener) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_2
       1: invokevirtual #23                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
       4: aload_0
       5: getfield      #34                 // Field payloadLength:I
       8: if_icmpge     12
      11: return
      12: aload_2
      13: aload_0
      14: getfield      #34                 // Field payloadLength:I
      17: invokevirtual #55                 // Method io/netty/buffer/ByteBuf.readSlice:(I)Lio/netty/buffer/ByteBuf;
      20: astore        4
      22: aload_0
      23: iconst_1
      24: putfield      #11                 // Field readingHeaders:Z
      27: aload_0
      28: getfield      #38                 // Field frameType:B
      31: tableswitch   { // 0 to 9
                     0: 84
                     1: 95
                     2: 106
                     3: 117
                     4: 128
                     5: 139
                     6: 150
                     7: 161
                     8: 171
                     9: 182
               default: 192
          }
      84: aload_0
      85: aload_1
      86: aload         4
      88: aload_3
      89: invokespecial #56                 // Method readDataFrame:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/handler/codec/http2/Http2FrameListener;)V
      92: goto          200
      95: aload_0
      96: aload_1
      97: aload         4
      99: aload_3
     100: invokespecial #57                 // Method readHeadersFrame:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/handler/codec/http2/Http2FrameListener;)V
     103: goto          200
     106: aload_0
     107: aload_1
     108: aload         4
     110: aload_3
     111: invokespecial #58                 // Method readPriorityFrame:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/handler/codec/http2/Http2FrameListener;)V
     114: goto          200
     117: aload_0
     118: aload_1
     119: aload         4
     121: aload_3
     122: invokespecial #59                 // Method readRstStreamFrame:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/handler/codec/http2/Http2FrameListener;)V
     125: goto          200
     128: aload_0
     129: aload_1
     130: aload         4
     132: aload_3
     133: invokespecial #60                 // Method readSettingsFrame:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/handler/codec/http2/Http2FrameListener;)V
     136: goto          200
     139: aload_0
     140: aload_1
     141: aload         4
     143: aload_3
     144: invokespecial #61                 // Method readPushPromiseFrame:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/handler/codec/http2/Http2FrameListener;)V
     147: goto          200
     150: aload_0
     151: aload_1
     152: aload         4
     154: aload_3
     155: invokespecial #62                 // Method readPingFrame:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/handler/codec/http2/Http2FrameListener;)V
     158: goto          200
     161: aload_1
     162: aload         4
     164: aload_3
     165: invokestatic  #63                 // Method readGoAwayFrame:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/handler/codec/http2/Http2FrameListener;)V
     168: goto          200
     171: aload_0
     172: aload_1
     173: aload         4
     175: aload_3
     176: invokespecial #64                 // Method readWindowUpdateFrame:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/handler/codec/http2/Http2FrameListener;)V
     179: goto          200
     182: aload_0
     183: aload         4
     185: aload_3
     186: invokespecial #65                 // Method readContinuationFrame:(Lio/netty/buffer/ByteBuf;Lio/netty/handler/codec/http2/Http2FrameListener;)V
     189: goto          200
     192: aload_0
     193: aload_1
     194: aload         4
     196: aload_3
     197: invokespecial #66                 // Method readUnknownFrame:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/handler/codec/http2/Http2FrameListener;)V
     200: return

  private void verifyDataFrame() throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: invokespecial #67                 // Method verifyAssociatedWithAStream:()V
       4: aload_0
       5: invokespecial #68                 // Method verifyNotProcessingHeaders:()V
       8: aload_0
       9: aload_0
      10: getfield      #34                 // Field payloadLength:I
      13: invokespecial #69                 // Method verifyPayloadLength:(I)V
      16: aload_0
      17: getfield      #34                 // Field payloadLength:I
      20: aload_0
      21: getfield      #42                 // Field flags:Lio/netty/handler/codec/http2/Http2Flags;
      24: invokevirtual #70                 // Method io/netty/handler/codec/http2/Http2Flags.getPaddingPresenceFieldLength:()I
      27: if_icmpge     57
      30: aload_0
      31: getfield      #4                  // Field streamId:I
      34: getstatic     #15                 // Field io/netty/handler/codec/http2/Http2Error.FRAME_SIZE_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      37: ldc           #71                 // String Frame length %d too small.
      39: iconst_1
      40: anewarray     #17                 // class java/lang/Object
      43: dup
      44: iconst_0
      45: aload_0
      46: getfield      #34                 // Field payloadLength:I
      49: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      52: aastore
      53: invokestatic  #19                 // Method io/netty/handler/codec/http2/Http2Exception.streamError:(ILio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      56: athrow
      57: return

  private void verifyHeadersFrame() throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: invokespecial #67                 // Method verifyAssociatedWithAStream:()V
       4: aload_0
       5: invokespecial #68                 // Method verifyNotProcessingHeaders:()V
       8: aload_0
       9: aload_0
      10: getfield      #34                 // Field payloadLength:I
      13: invokespecial #69                 // Method verifyPayloadLength:(I)V
      16: aload_0
      17: getfield      #42                 // Field flags:Lio/netty/handler/codec/http2/Http2Flags;
      20: invokevirtual #70                 // Method io/netty/handler/codec/http2/Http2Flags.getPaddingPresenceFieldLength:()I
      23: aload_0
      24: getfield      #42                 // Field flags:Lio/netty/handler/codec/http2/Http2Flags;
      27: invokevirtual #72                 // Method io/netty/handler/codec/http2/Http2Flags.getNumPriorityBytes:()I
      30: iadd
      31: istore_1
      32: aload_0
      33: getfield      #34                 // Field payloadLength:I
      36: iload_1
      37: if_icmpge     77
      40: aload_0
      41: getfield      #4                  // Field streamId:I
      44: getstatic     #15                 // Field io/netty/handler/codec/http2/Http2Error.FRAME_SIZE_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      47: new           #73                 // class java/lang/StringBuilder
      50: dup
      51: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
      54: ldc           #75                 // String Frame length too small.
      56: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: aload_0
      60: getfield      #34                 // Field payloadLength:I
      63: invokevirtual #77                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      66: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      69: iconst_0
      70: anewarray     #17                 // class java/lang/Object
      73: invokestatic  #19                 // Method io/netty/handler/codec/http2/Http2Exception.streamError:(ILio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      76: athrow
      77: return

  private void verifyPriorityFrame() throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: invokespecial #67                 // Method verifyAssociatedWithAStream:()V
       4: aload_0
       5: invokespecial #68                 // Method verifyNotProcessingHeaders:()V
       8: aload_0
       9: getfield      #34                 // Field payloadLength:I
      12: iconst_5
      13: if_icmpeq     43
      16: aload_0
      17: getfield      #4                  // Field streamId:I
      20: getstatic     #15                 // Field io/netty/handler/codec/http2/Http2Error.FRAME_SIZE_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      23: ldc           #79                 // String Invalid frame length %d.
      25: iconst_1
      26: anewarray     #17                 // class java/lang/Object
      29: dup
      30: iconst_0
      31: aload_0
      32: getfield      #34                 // Field payloadLength:I
      35: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      38: aastore
      39: invokestatic  #19                 // Method io/netty/handler/codec/http2/Http2Exception.streamError:(ILio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      42: athrow
      43: return

  private void verifyRstStreamFrame() throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: invokespecial #67                 // Method verifyAssociatedWithAStream:()V
       4: aload_0
       5: invokespecial #68                 // Method verifyNotProcessingHeaders:()V
       8: aload_0
       9: getfield      #34                 // Field payloadLength:I
      12: iconst_4
      13: if_icmpeq     39
      16: getstatic     #15                 // Field io/netty/handler/codec/http2/Http2Error.FRAME_SIZE_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      19: ldc           #79                 // String Invalid frame length %d.
      21: iconst_1
      22: anewarray     #17                 // class java/lang/Object
      25: dup
      26: iconst_0
      27: aload_0
      28: getfield      #34                 // Field payloadLength:I
      31: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      34: aastore
      35: invokestatic  #36                 // Method io/netty/handler/codec/http2/Http2Exception.connectionError:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      38: athrow
      39: return

  private void verifySettingsFrame() throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: invokespecial #68                 // Method verifyNotProcessingHeaders:()V
       4: aload_0
       5: aload_0
       6: getfield      #34                 // Field payloadLength:I
       9: invokespecial #69                 // Method verifyPayloadLength:(I)V
      12: aload_0
      13: getfield      #4                  // Field streamId:I
      16: ifeq          32
      19: getstatic     #80                 // Field io/netty/handler/codec/http2/Http2Error.PROTOCOL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      22: ldc           #81                 // String A stream ID must be zero.
      24: iconst_0
      25: anewarray     #17                 // class java/lang/Object
      28: invokestatic  #36                 // Method io/netty/handler/codec/http2/Http2Exception.connectionError:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      31: athrow
      32: aload_0
      33: getfield      #42                 // Field flags:Lio/netty/handler/codec/http2/Http2Flags;
      36: invokevirtual #82                 // Method io/netty/handler/codec/http2/Http2Flags.ack:()Z
      39: ifeq          62
      42: aload_0
      43: getfield      #34                 // Field payloadLength:I
      46: ifle          62
      49: getstatic     #15                 // Field io/netty/handler/codec/http2/Http2Error.FRAME_SIZE_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      52: ldc           #83                 // String Ack settings frame must have an empty payload.
      54: iconst_0
      55: anewarray     #17                 // class java/lang/Object
      58: invokestatic  #36                 // Method io/netty/handler/codec/http2/Http2Exception.connectionError:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      61: athrow
      62: aload_0
      63: getfield      #34                 // Field payloadLength:I
      66: bipush        6
      68: irem
      69: ifle          95
      72: getstatic     #15                 // Field io/netty/handler/codec/http2/Http2Error.FRAME_SIZE_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      75: ldc           #84                 // String Frame length %d invalid.
      77: iconst_1
      78: anewarray     #17                 // class java/lang/Object
      81: dup
      82: iconst_0
      83: aload_0
      84: getfield      #34                 // Field payloadLength:I
      87: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      90: aastore
      91: invokestatic  #36                 // Method io/netty/handler/codec/http2/Http2Exception.connectionError:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      94: athrow
      95: return

  private void verifyPushPromiseFrame() throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: invokespecial #68                 // Method verifyNotProcessingHeaders:()V
       4: aload_0
       5: aload_0
       6: getfield      #34                 // Field payloadLength:I
       9: invokespecial #69                 // Method verifyPayloadLength:(I)V
      12: aload_0
      13: getfield      #42                 // Field flags:Lio/netty/handler/codec/http2/Http2Flags;
      16: invokevirtual #70                 // Method io/netty/handler/codec/http2/Http2Flags.getPaddingPresenceFieldLength:()I
      19: iconst_4
      20: iadd
      21: istore_1
      22: aload_0
      23: getfield      #34                 // Field payloadLength:I
      26: iload_1
      27: if_icmpge     57
      30: aload_0
      31: getfield      #4                  // Field streamId:I
      34: getstatic     #15                 // Field io/netty/handler/codec/http2/Http2Error.FRAME_SIZE_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      37: ldc           #71                 // String Frame length %d too small.
      39: iconst_1
      40: anewarray     #17                 // class java/lang/Object
      43: dup
      44: iconst_0
      45: aload_0
      46: getfield      #34                 // Field payloadLength:I
      49: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      52: aastore
      53: invokestatic  #19                 // Method io/netty/handler/codec/http2/Http2Exception.streamError:(ILio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      56: athrow
      57: return

  private void verifyPingFrame() throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: invokespecial #68                 // Method verifyNotProcessingHeaders:()V
       4: aload_0
       5: getfield      #4                  // Field streamId:I
       8: ifeq          24
      11: getstatic     #80                 // Field io/netty/handler/codec/http2/Http2Error.PROTOCOL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      14: ldc           #81                 // String A stream ID must be zero.
      16: iconst_0
      17: anewarray     #17                 // class java/lang/Object
      20: invokestatic  #36                 // Method io/netty/handler/codec/http2/Http2Exception.connectionError:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      23: athrow
      24: aload_0
      25: getfield      #34                 // Field payloadLength:I
      28: bipush        8
      30: if_icmpeq     56
      33: getstatic     #15                 // Field io/netty/handler/codec/http2/Http2Error.FRAME_SIZE_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      36: ldc           #85                 // String Frame length %d incorrect size for ping.
      38: iconst_1
      39: anewarray     #17                 // class java/lang/Object
      42: dup
      43: iconst_0
      44: aload_0
      45: getfield      #34                 // Field payloadLength:I
      48: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      51: aastore
      52: invokestatic  #36                 // Method io/netty/handler/codec/http2/Http2Exception.connectionError:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      55: athrow
      56: return

  private void verifyGoAwayFrame() throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: invokespecial #68                 // Method verifyNotProcessingHeaders:()V
       4: aload_0
       5: aload_0
       6: getfield      #34                 // Field payloadLength:I
       9: invokespecial #69                 // Method verifyPayloadLength:(I)V
      12: aload_0
      13: getfield      #4                  // Field streamId:I
      16: ifeq          32
      19: getstatic     #80                 // Field io/netty/handler/codec/http2/Http2Error.PROTOCOL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      22: ldc           #81                 // String A stream ID must be zero.
      24: iconst_0
      25: anewarray     #17                 // class java/lang/Object
      28: invokestatic  #36                 // Method io/netty/handler/codec/http2/Http2Exception.connectionError:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      31: athrow
      32: aload_0
      33: getfield      #34                 // Field payloadLength:I
      36: bipush        8
      38: if_icmpge     64
      41: getstatic     #15                 // Field io/netty/handler/codec/http2/Http2Error.FRAME_SIZE_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      44: ldc           #71                 // String Frame length %d too small.
      46: iconst_1
      47: anewarray     #17                 // class java/lang/Object
      50: dup
      51: iconst_0
      52: aload_0
      53: getfield      #34                 // Field payloadLength:I
      56: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      59: aastore
      60: invokestatic  #36                 // Method io/netty/handler/codec/http2/Http2Exception.connectionError:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      63: athrow
      64: return

  private void verifyWindowUpdateFrame() throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: invokespecial #68                 // Method verifyNotProcessingHeaders:()V
       4: aload_0
       5: getfield      #4                  // Field streamId:I
       8: ldc           #86                 // String Stream ID
      10: invokestatic  #87                 // Method verifyStreamOrConnectionId:(ILjava/lang/String;)V
      13: aload_0
      14: getfield      #34                 // Field payloadLength:I
      17: iconst_4
      18: if_icmpeq     44
      21: getstatic     #15                 // Field io/netty/handler/codec/http2/Http2Error.FRAME_SIZE_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      24: ldc           #79                 // String Invalid frame length %d.
      26: iconst_1
      27: anewarray     #17                 // class java/lang/Object
      30: dup
      31: iconst_0
      32: aload_0
      33: getfield      #34                 // Field payloadLength:I
      36: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      39: aastore
      40: invokestatic  #36                 // Method io/netty/handler/codec/http2/Http2Exception.connectionError:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      43: athrow
      44: return

  private void verifyContinuationFrame() throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: invokespecial #67                 // Method verifyAssociatedWithAStream:()V
       4: aload_0
       5: aload_0
       6: getfield      #34                 // Field payloadLength:I
       9: invokespecial #69                 // Method verifyPayloadLength:(I)V
      12: aload_0
      13: getfield      #3                  // Field headersContinuation:Lio/netty/handler/codec/http2/DefaultHttp2FrameReader$HeadersContinuation;
      16: ifnonnull     42
      19: getstatic     #80                 // Field io/netty/handler/codec/http2/Http2Error.PROTOCOL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      22: ldc           #88                 // String Received %s frame but not currently processing headers.
      24: iconst_1
      25: anewarray     #17                 // class java/lang/Object
      28: dup
      29: iconst_0
      30: aload_0
      31: getfield      #38                 // Field frameType:B
      34: invokestatic  #89                 // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
      37: aastore
      38: invokestatic  #36                 // Method io/netty/handler/codec/http2/Http2Exception.connectionError:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      41: athrow
      42: aload_0
      43: getfield      #4                  // Field streamId:I
      46: aload_0
      47: getfield      #3                  // Field headersContinuation:Lio/netty/handler/codec/http2/DefaultHttp2FrameReader$HeadersContinuation;
      50: invokevirtual #90                 // Method io/netty/handler/codec/http2/DefaultHttp2FrameReader$HeadersContinuation.getStreamId:()I
      53: if_icmpeq     92
      56: getstatic     #80                 // Field io/netty/handler/codec/http2/Http2Error.PROTOCOL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      59: ldc           #91                 // String Continuation stream ID does not match pending headers. Expected %d, but received %d.
      61: iconst_2
      62: anewarray     #17                 // class java/lang/Object
      65: dup
      66: iconst_0
      67: aload_0
      68: getfield      #3                  // Field headersContinuation:Lio/netty/handler/codec/http2/DefaultHttp2FrameReader$HeadersContinuation;
      71: invokevirtual #90                 // Method io/netty/handler/codec/http2/DefaultHttp2FrameReader$HeadersContinuation.getStreamId:()I
      74: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      77: aastore
      78: dup
      79: iconst_1
      80: aload_0
      81: getfield      #4                  // Field streamId:I
      84: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      87: aastore
      88: invokestatic  #36                 // Method io/netty/handler/codec/http2/Http2Exception.connectionError:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      91: athrow
      92: aload_0
      93: getfield      #34                 // Field payloadLength:I
      96: aload_0
      97: getfield      #42                 // Field flags:Lio/netty/handler/codec/http2/Http2Flags;
     100: invokevirtual #70                 // Method io/netty/handler/codec/http2/Http2Flags.getPaddingPresenceFieldLength:()I
     103: if_icmpge     133
     106: aload_0
     107: getfield      #4                  // Field streamId:I
     110: getstatic     #15                 // Field io/netty/handler/codec/http2/Http2Error.FRAME_SIZE_ERROR:Lio/netty/handler/codec/http2/Http2Error;
     113: ldc           #92                 // String Frame length %d too small for padding.
     115: iconst_1
     116: anewarray     #17                 // class java/lang/Object
     119: dup
     120: iconst_0
     121: aload_0
     122: getfield      #34                 // Field payloadLength:I
     125: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     128: aastore
     129: invokestatic  #19                 // Method io/netty/handler/codec/http2/Http2Exception.streamError:(ILio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
     132: athrow
     133: return

  private void verifyUnknownFrame() throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: invokespecial #68                 // Method verifyNotProcessingHeaders:()V
       4: return

  private void readDataFrame(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, io.netty.handler.codec.http2.Http2FrameListener) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #93                 // Method readPadding:(Lio/netty/buffer/ByteBuf;)I
       5: istore        4
       7: aload_0
       8: iload         4
      10: invokespecial #94                 // Method verifyPadding:(I)V
      13: aload_2
      14: invokevirtual #23                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
      17: iload         4
      19: invokestatic  #95                 // Method lengthWithoutTrailingPadding:(II)I
      22: istore        5
      24: aload_2
      25: iload         5
      27: invokevirtual #55                 // Method io/netty/buffer/ByteBuf.readSlice:(I)Lio/netty/buffer/ByteBuf;
      30: astore        6
      32: aload_3
      33: aload_1
      34: aload_0
      35: getfield      #4                  // Field streamId:I
      38: aload         6
      40: iload         4
      42: aload_0
      43: getfield      #42                 // Field flags:Lio/netty/handler/codec/http2/Http2Flags;
      46: invokevirtual #96                 // Method io/netty/handler/codec/http2/Http2Flags.endOfStream:()Z
      49: invokeinterface #97,  6           // InterfaceMethod io/netty/handler/codec/http2/Http2FrameListener.onDataRead:(Lio/netty/channel/ChannelHandlerContext;ILio/netty/buffer/ByteBuf;IZ)I
      54: pop
      55: aload_2
      56: aload_2
      57: invokevirtual #23                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
      60: invokevirtual #24                 // Method io/netty/buffer/ByteBuf.skipBytes:(I)Lio/netty/buffer/ByteBuf;
      63: pop
      64: return

  private void readHeadersFrame(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, io.netty.handler.codec.http2.Http2FrameListener) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: getfield      #4                  // Field streamId:I
       4: istore        4
       6: aload_0
       7: getfield      #42                 // Field flags:Lio/netty/handler/codec/http2/Http2Flags;
      10: astore        5
      12: aload_0
      13: aload_2
      14: invokespecial #93                 // Method readPadding:(Lio/netty/buffer/ByteBuf;)I
      17: istore        6
      19: aload_0
      20: iload         6
      22: invokespecial #94                 // Method verifyPadding:(I)V
      25: aload_0
      26: getfield      #42                 // Field flags:Lio/netty/handler/codec/http2/Http2Flags;
      29: invokevirtual #98                 // Method io/netty/handler/codec/http2/Http2Flags.priorityPresent:()Z
      32: ifeq          172
      35: aload_2
      36: invokevirtual #99                 // Method io/netty/buffer/ByteBuf.readUnsignedInt:()J
      39: lstore        7
      41: lload         7
      43: ldc2_w        #100                // long 2147483648l
      46: land
      47: lconst_0
      48: lcmp
      49: ifeq          56
      52: iconst_1
      53: goto          57
      56: iconst_0
      57: istore        9
      59: lload         7
      61: ldc2_w        #102                // long 2147483647l
      64: land
      65: l2i
      66: istore        10
      68: iload         10
      70: aload_0
      71: getfield      #4                  // Field streamId:I
      74: if_icmpne     94
      77: aload_0
      78: getfield      #4                  // Field streamId:I
      81: getstatic     #80                 // Field io/netty/handler/codec/http2/Http2Error.PROTOCOL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      84: ldc           #104                // String A stream cannot depend on itself.
      86: iconst_0
      87: anewarray     #17                 // class java/lang/Object
      90: invokestatic  #19                 // Method io/netty/handler/codec/http2/Http2Exception.streamError:(ILio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      93: athrow
      94: aload_2
      95: invokevirtual #40                 // Method io/netty/buffer/ByteBuf.readUnsignedByte:()S
      98: iconst_1
      99: iadd
     100: i2s
     101: istore        11
     103: aload_2
     104: aload_2
     105: invokevirtual #23                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
     108: iload         6
     110: invokestatic  #95                 // Method lengthWithoutTrailingPadding:(II)I
     113: invokevirtual #55                 // Method io/netty/buffer/ByteBuf.readSlice:(I)Lio/netty/buffer/ByteBuf;
     116: astore        12
     118: aload_0
     119: new           #105                // class io/netty/handler/codec/http2/DefaultHttp2FrameReader$1
     122: dup
     123: aload_0
     124: iload         4
     126: aload_1
     127: iload         10
     129: iload         11
     131: iload         9
     133: iload         6
     135: aload         5
     137: invokespecial #106                // Method io/netty/handler/codec/http2/DefaultHttp2FrameReader$1."<init>":(Lio/netty/handler/codec/http2/DefaultHttp2FrameReader;ILio/netty/channel/ChannelHandlerContext;ISZILio/netty/handler/codec/http2/Http2Flags;)V
     140: putfield      #3                  // Field headersContinuation:Lio/netty/handler/codec/http2/DefaultHttp2FrameReader$HeadersContinuation;
     143: aload_0
     144: getfield      #3                  // Field headersContinuation:Lio/netty/handler/codec/http2/DefaultHttp2FrameReader$HeadersContinuation;
     147: aload_0
     148: getfield      #42                 // Field flags:Lio/netty/handler/codec/http2/Http2Flags;
     151: invokevirtual #107                // Method io/netty/handler/codec/http2/Http2Flags.endOfHeaders:()Z
     154: aload         12
     156: aload_3
     157: invokevirtual #108                // Method io/netty/handler/codec/http2/DefaultHttp2FrameReader$HeadersContinuation.processFragment:(ZLio/netty/buffer/ByteBuf;Lio/netty/handler/codec/http2/Http2FrameListener;)V
     160: aload_0
     161: aload_0
     162: getfield      #42                 // Field flags:Lio/netty/handler/codec/http2/Http2Flags;
     165: invokevirtual #107                // Method io/netty/handler/codec/http2/Http2Flags.endOfHeaders:()Z
     168: invokespecial #109                // Method resetHeadersContinuationIfEnd:(Z)V
     171: return
     172: aload_0
     173: new           #110                // class io/netty/handler/codec/http2/DefaultHttp2FrameReader$2
     176: dup
     177: aload_0
     178: iload         4
     180: aload_1
     181: iload         6
     183: aload         5
     185: invokespecial #111                // Method io/netty/handler/codec/http2/DefaultHttp2FrameReader$2."<init>":(Lio/netty/handler/codec/http2/DefaultHttp2FrameReader;ILio/netty/channel/ChannelHandlerContext;ILio/netty/handler/codec/http2/Http2Flags;)V
     188: putfield      #3                  // Field headersContinuation:Lio/netty/handler/codec/http2/DefaultHttp2FrameReader$HeadersContinuation;
     191: aload_2
     192: aload_2
     193: invokevirtual #23                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
     196: iload         6
     198: invokestatic  #95                 // Method lengthWithoutTrailingPadding:(II)I
     201: invokevirtual #55                 // Method io/netty/buffer/ByteBuf.readSlice:(I)Lio/netty/buffer/ByteBuf;
     204: astore        7
     206: aload_0
     207: getfield      #3                  // Field headersContinuation:Lio/netty/handler/codec/http2/DefaultHttp2FrameReader$HeadersContinuation;
     210: aload_0
     211: getfield      #42                 // Field flags:Lio/netty/handler/codec/http2/Http2Flags;
     214: invokevirtual #107                // Method io/netty/handler/codec/http2/Http2Flags.endOfHeaders:()Z
     217: aload         7
     219: aload_3
     220: invokevirtual #108                // Method io/netty/handler/codec/http2/DefaultHttp2FrameReader$HeadersContinuation.processFragment:(ZLio/netty/buffer/ByteBuf;Lio/netty/handler/codec/http2/Http2FrameListener;)V
     223: aload_0
     224: aload_0
     225: getfield      #42                 // Field flags:Lio/netty/handler/codec/http2/Http2Flags;
     228: invokevirtual #107                // Method io/netty/handler/codec/http2/Http2Flags.endOfHeaders:()Z
     231: invokespecial #109                // Method resetHeadersContinuationIfEnd:(Z)V
     234: return

  private void resetHeadersContinuationIfEnd(boolean);
    Code:
       0: iload_1
       1: ifeq          8
       4: aload_0
       5: invokespecial #20                 // Method closeHeadersContinuation:()V
       8: return

  private void readPriorityFrame(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, io.netty.handler.codec.http2.Http2FrameListener) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_2
       1: invokevirtual #99                 // Method io/netty/buffer/ByteBuf.readUnsignedInt:()J
       4: lstore        4
       6: lload         4
       8: ldc2_w        #100                // long 2147483648l
      11: land
      12: lconst_0
      13: lcmp
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: istore        6
      24: lload         4
      26: ldc2_w        #102                // long 2147483647l
      29: land
      30: l2i
      31: istore        7
      33: iload         7
      35: aload_0
      36: getfield      #4                  // Field streamId:I
      39: if_icmpne     59
      42: aload_0
      43: getfield      #4                  // Field streamId:I
      46: getstatic     #80                 // Field io/netty/handler/codec/http2/Http2Error.PROTOCOL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      49: ldc           #104                // String A stream cannot depend on itself.
      51: iconst_0
      52: anewarray     #17                 // class java/lang/Object
      55: invokestatic  #19                 // Method io/netty/handler/codec/http2/Http2Exception.streamError:(ILio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      58: athrow
      59: aload_2
      60: invokevirtual #40                 // Method io/netty/buffer/ByteBuf.readUnsignedByte:()S
      63: iconst_1
      64: iadd
      65: i2s
      66: istore        8
      68: aload_3
      69: aload_1
      70: aload_0
      71: getfield      #4                  // Field streamId:I
      74: iload         7
      76: iload         8
      78: iload         6
      80: invokeinterface #112,  6          // InterfaceMethod io/netty/handler/codec/http2/Http2FrameListener.onPriorityRead:(Lio/netty/channel/ChannelHandlerContext;IISZ)V
      85: return

  private void readRstStreamFrame(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, io.netty.handler.codec.http2.Http2FrameListener) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_2
       1: invokevirtual #99                 // Method io/netty/buffer/ByteBuf.readUnsignedInt:()J
       4: lstore        4
       6: aload_3
       7: aload_1
       8: aload_0
       9: getfield      #4                  // Field streamId:I
      12: lload         4
      14: invokeinterface #113,  5          // InterfaceMethod io/netty/handler/codec/http2/Http2FrameListener.onRstStreamRead:(Lio/netty/channel/ChannelHandlerContext;IJ)V
      19: return

  private void readSettingsFrame(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, io.netty.handler.codec.http2.Http2FrameListener) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: getfield      #42                 // Field flags:Lio/netty/handler/codec/http2/Http2Flags;
       4: invokevirtual #82                 // Method io/netty/handler/codec/http2/Http2Flags.ack:()Z
       7: ifeq          20
      10: aload_3
      11: aload_1
      12: invokeinterface #114,  2          // InterfaceMethod io/netty/handler/codec/http2/Http2FrameListener.onSettingsAckRead:(Lio/netty/channel/ChannelHandlerContext;)V
      17: goto          177
      20: aload_0
      21: getfield      #34                 // Field payloadLength:I
      24: bipush        6
      26: idiv
      27: istore        4
      29: new           #115                // class io/netty/handler/codec/http2/Http2Settings
      32: dup
      33: invokespecial #116                // Method io/netty/handler/codec/http2/Http2Settings."<init>":()V
      36: astore        5
      38: iconst_0
      39: istore        6
      41: iload         6
      43: iload         4
      45: if_icmpge     168
      48: aload_2
      49: invokevirtual #117                // Method io/netty/buffer/ByteBuf.readUnsignedShort:()I
      52: i2c
      53: istore        7
      55: aload_2
      56: invokevirtual #99                 // Method io/netty/buffer/ByteBuf.readUnsignedInt:()J
      59: lstore        8
      61: aload         5
      63: iload         7
      65: lload         8
      67: invokestatic  #118                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      70: invokevirtual #119                // Method io/netty/handler/codec/http2/Http2Settings.put:(CLjava/lang/Long;)Ljava/lang/Long;
      73: pop
      74: goto          162
      77: astore        10
      79: iload         7
      81: lookupswitch  { // 2
                     4: 126
                     5: 108
               default: 144
          }
     108: getstatic     #80                 // Field io/netty/handler/codec/http2/Http2Error.PROTOCOL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
     111: aload         10
     113: aload         10
     115: invokevirtual #121                // Method java/lang/IllegalArgumentException.getMessage:()Ljava/lang/String;
     118: iconst_0
     119: anewarray     #17                 // class java/lang/Object
     122: invokestatic  #122                // Method io/netty/handler/codec/http2/Http2Exception.connectionError:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
     125: athrow
     126: getstatic     #123                // Field io/netty/handler/codec/http2/Http2Error.FLOW_CONTROL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
     129: aload         10
     131: aload         10
     133: invokevirtual #121                // Method java/lang/IllegalArgumentException.getMessage:()Ljava/lang/String;
     136: iconst_0
     137: anewarray     #17                 // class java/lang/Object
     140: invokestatic  #122                // Method io/netty/handler/codec/http2/Http2Exception.connectionError:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
     143: athrow
     144: getstatic     #80                 // Field io/netty/handler/codec/http2/Http2Error.PROTOCOL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
     147: aload         10
     149: aload         10
     151: invokevirtual #121                // Method java/lang/IllegalArgumentException.getMessage:()Ljava/lang/String;
     154: iconst_0
     155: anewarray     #17                 // class java/lang/Object
     158: invokestatic  #122                // Method io/netty/handler/codec/http2/Http2Exception.connectionError:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
     161: athrow
     162: iinc          6, 1
     165: goto          41
     168: aload_3
     169: aload_1
     170: aload         5
     172: invokeinterface #124,  3          // InterfaceMethod io/netty/handler/codec/http2/Http2FrameListener.onSettingsRead:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/handler/codec/http2/Http2Settings;)V
     177: return
    Exception table:
       from    to  target type
          61    74    77   Class java/lang/IllegalArgumentException

  private void readPushPromiseFrame(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, io.netty.handler.codec.http2.Http2FrameListener) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: getfield      #4                  // Field streamId:I
       4: istore        4
       6: aload_0
       7: aload_2
       8: invokespecial #93                 // Method readPadding:(Lio/netty/buffer/ByteBuf;)I
      11: istore        5
      13: aload_0
      14: iload         5
      16: invokespecial #94                 // Method verifyPadding:(I)V
      19: aload_2
      20: invokestatic  #43                 // Method io/netty/handler/codec/http2/Http2CodecUtil.readUnsignedInt:(Lio/netty/buffer/ByteBuf;)I
      23: istore        6
      25: aload_0
      26: new           #125                // class io/netty/handler/codec/http2/DefaultHttp2FrameReader$3
      29: dup
      30: aload_0
      31: iload         4
      33: aload_1
      34: iload         6
      36: iload         5
      38: invokespecial #126                // Method io/netty/handler/codec/http2/DefaultHttp2FrameReader$3."<init>":(Lio/netty/handler/codec/http2/DefaultHttp2FrameReader;ILio/netty/channel/ChannelHandlerContext;II)V
      41: putfield      #3                  // Field headersContinuation:Lio/netty/handler/codec/http2/DefaultHttp2FrameReader$HeadersContinuation;
      44: aload_2
      45: aload_2
      46: invokevirtual #23                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
      49: iload         5
      51: invokestatic  #95                 // Method lengthWithoutTrailingPadding:(II)I
      54: invokevirtual #55                 // Method io/netty/buffer/ByteBuf.readSlice:(I)Lio/netty/buffer/ByteBuf;
      57: astore        7
      59: aload_0
      60: getfield      #3                  // Field headersContinuation:Lio/netty/handler/codec/http2/DefaultHttp2FrameReader$HeadersContinuation;
      63: aload_0
      64: getfield      #42                 // Field flags:Lio/netty/handler/codec/http2/Http2Flags;
      67: invokevirtual #107                // Method io/netty/handler/codec/http2/Http2Flags.endOfHeaders:()Z
      70: aload         7
      72: aload_3
      73: invokevirtual #108                // Method io/netty/handler/codec/http2/DefaultHttp2FrameReader$HeadersContinuation.processFragment:(ZLio/netty/buffer/ByteBuf;Lio/netty/handler/codec/http2/Http2FrameListener;)V
      76: aload_0
      77: aload_0
      78: getfield      #42                 // Field flags:Lio/netty/handler/codec/http2/Http2Flags;
      81: invokevirtual #107                // Method io/netty/handler/codec/http2/Http2Flags.endOfHeaders:()Z
      84: invokespecial #109                // Method resetHeadersContinuationIfEnd:(Z)V
      87: return

  private void readPingFrame(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, io.netty.handler.codec.http2.Http2FrameListener) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_2
       1: aload_2
       2: invokevirtual #23                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
       5: invokevirtual #55                 // Method io/netty/buffer/ByteBuf.readSlice:(I)Lio/netty/buffer/ByteBuf;
       8: astore        4
      10: aload_0
      11: getfield      #42                 // Field flags:Lio/netty/handler/codec/http2/Http2Flags;
      14: invokevirtual #82                 // Method io/netty/handler/codec/http2/Http2Flags.ack:()Z
      17: ifeq          32
      20: aload_3
      21: aload_1
      22: aload         4
      24: invokeinterface #127,  3          // InterfaceMethod io/netty/handler/codec/http2/Http2FrameListener.onPingAckRead:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)V
      29: goto          41
      32: aload_3
      33: aload_1
      34: aload         4
      36: invokeinterface #128,  3          // InterfaceMethod io/netty/handler/codec/http2/Http2FrameListener.onPingRead:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)V
      41: return

  private static void readGoAwayFrame(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, io.netty.handler.codec.http2.Http2FrameListener) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_1
       1: invokestatic  #43                 // Method io/netty/handler/codec/http2/Http2CodecUtil.readUnsignedInt:(Lio/netty/buffer/ByteBuf;)I
       4: istore_3
       5: aload_1
       6: invokevirtual #99                 // Method io/netty/buffer/ByteBuf.readUnsignedInt:()J
       9: lstore        4
      11: aload_1
      12: aload_1
      13: invokevirtual #23                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
      16: invokevirtual #55                 // Method io/netty/buffer/ByteBuf.readSlice:(I)Lio/netty/buffer/ByteBuf;
      19: astore        6
      21: aload_2
      22: aload_0
      23: iload_3
      24: lload         4
      26: aload         6
      28: invokeinterface #129,  6          // InterfaceMethod io/netty/handler/codec/http2/Http2FrameListener.onGoAwayRead:(Lio/netty/channel/ChannelHandlerContext;IJLio/netty/buffer/ByteBuf;)V
      33: return

  private void readWindowUpdateFrame(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, io.netty.handler.codec.http2.Http2FrameListener) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_2
       1: invokestatic  #43                 // Method io/netty/handler/codec/http2/Http2CodecUtil.readUnsignedInt:(Lio/netty/buffer/ByteBuf;)I
       4: istore        4
       6: iload         4
       8: ifne          38
      11: aload_0
      12: getfield      #4                  // Field streamId:I
      15: getstatic     #80                 // Field io/netty/handler/codec/http2/Http2Error.PROTOCOL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      18: ldc           #130                // String Received WINDOW_UPDATE with delta 0 for stream: %d
      20: iconst_1
      21: anewarray     #17                 // class java/lang/Object
      24: dup
      25: iconst_0
      26: aload_0
      27: getfield      #4                  // Field streamId:I
      30: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      33: aastore
      34: invokestatic  #19                 // Method io/netty/handler/codec/http2/Http2Exception.streamError:(ILio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      37: athrow
      38: aload_3
      39: aload_1
      40: aload_0
      41: getfield      #4                  // Field streamId:I
      44: iload         4
      46: invokeinterface #131,  4          // InterfaceMethod io/netty/handler/codec/http2/Http2FrameListener.onWindowUpdateRead:(Lio/netty/channel/ChannelHandlerContext;II)V
      51: return

  private void readContinuationFrame(io.netty.buffer.ByteBuf, io.netty.handler.codec.http2.Http2FrameListener) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_1
       1: aload_1
       2: invokevirtual #23                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
       5: invokevirtual #55                 // Method io/netty/buffer/ByteBuf.readSlice:(I)Lio/netty/buffer/ByteBuf;
       8: astore_3
       9: aload_0
      10: getfield      #3                  // Field headersContinuation:Lio/netty/handler/codec/http2/DefaultHttp2FrameReader$HeadersContinuation;
      13: aload_0
      14: getfield      #42                 // Field flags:Lio/netty/handler/codec/http2/Http2Flags;
      17: invokevirtual #107                // Method io/netty/handler/codec/http2/Http2Flags.endOfHeaders:()Z
      20: aload_3
      21: aload_2
      22: invokevirtual #108                // Method io/netty/handler/codec/http2/DefaultHttp2FrameReader$HeadersContinuation.processFragment:(ZLio/netty/buffer/ByteBuf;Lio/netty/handler/codec/http2/Http2FrameListener;)V
      25: aload_0
      26: aload_0
      27: getfield      #42                 // Field flags:Lio/netty/handler/codec/http2/Http2Flags;
      30: invokevirtual #107                // Method io/netty/handler/codec/http2/Http2Flags.endOfHeaders:()Z
      33: invokespecial #109                // Method resetHeadersContinuationIfEnd:(Z)V
      36: return

  private void readUnknownFrame(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, io.netty.handler.codec.http2.Http2FrameListener) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_2
       1: aload_2
       2: invokevirtual #23                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
       5: invokevirtual #55                 // Method io/netty/buffer/ByteBuf.readSlice:(I)Lio/netty/buffer/ByteBuf;
       8: astore_2
       9: aload_3
      10: aload_1
      11: aload_0
      12: getfield      #38                 // Field frameType:B
      15: aload_0
      16: getfield      #4                  // Field streamId:I
      19: aload_0
      20: getfield      #42                 // Field flags:Lio/netty/handler/codec/http2/Http2Flags;
      23: aload_2
      24: invokeinterface #132,  6          // InterfaceMethod io/netty/handler/codec/http2/Http2FrameListener.onUnknownFrame:(Lio/netty/channel/ChannelHandlerContext;BILio/netty/handler/codec/http2/Http2Flags;Lio/netty/buffer/ByteBuf;)V
      29: return

  private int readPadding(io.netty.buffer.ByteBuf);
    Code:
       0: aload_0
       1: getfield      #42                 // Field flags:Lio/netty/handler/codec/http2/Http2Flags;
       4: invokevirtual #133                // Method io/netty/handler/codec/http2/Http2Flags.paddingPresent:()Z
       7: ifne          12
      10: iconst_0
      11: ireturn
      12: aload_1
      13: invokevirtual #40                 // Method io/netty/buffer/ByteBuf.readUnsignedByte:()S
      16: iconst_1
      17: iadd
      18: ireturn

  private void verifyPadding(int) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: getfield      #34                 // Field payloadLength:I
       4: iload_1
       5: invokestatic  #95                 // Method lengthWithoutTrailingPadding:(II)I
       8: istore_2
       9: iload_2
      10: ifge          26
      13: getstatic     #80                 // Field io/netty/handler/codec/http2/Http2Error.PROTOCOL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      16: ldc           #134                // String Frame payload too small for padding.
      18: iconst_0
      19: anewarray     #17                 // class java/lang/Object
      22: invokestatic  #36                 // Method io/netty/handler/codec/http2/Http2Exception.connectionError:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      25: athrow
      26: return

  private static int lengthWithoutTrailingPadding(int, int);
    Code:
       0: iload_1
       1: ifne          8
       4: iload_0
       5: goto          13
       8: iload_0
       9: iload_1
      10: iconst_1
      11: isub
      12: isub
      13: ireturn

  private void verifyNotProcessingHeaders() throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: getfield      #3                  // Field headersContinuation:Lio/netty/handler/codec/http2/DefaultHttp2FrameReader$HeadersContinuation;
       4: ifnull        43
       7: getstatic     #80                 // Field io/netty/handler/codec/http2/Http2Error.PROTOCOL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      10: ldc           #135                // String Received frame of type %s while processing headers on stream %d.
      12: iconst_2
      13: anewarray     #17                 // class java/lang/Object
      16: dup
      17: iconst_0
      18: aload_0
      19: getfield      #38                 // Field frameType:B
      22: invokestatic  #89                 // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
      25: aastore
      26: dup
      27: iconst_1
      28: aload_0
      29: getfield      #3                  // Field headersContinuation:Lio/netty/handler/codec/http2/DefaultHttp2FrameReader$HeadersContinuation;
      32: invokevirtual #90                 // Method io/netty/handler/codec/http2/DefaultHttp2FrameReader$HeadersContinuation.getStreamId:()I
      35: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      38: aastore
      39: invokestatic  #36                 // Method io/netty/handler/codec/http2/Http2Exception.connectionError:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      42: athrow
      43: return

  private void verifyPayloadLength(int) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #12                 // Field maxFrameSize:I
       5: if_icmple     28
       8: getstatic     #80                 // Field io/netty/handler/codec/http2/Http2Error.PROTOCOL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      11: ldc           #136                // String Total payload length %d exceeds max frame length.
      13: iconst_1
      14: anewarray     #17                 // class java/lang/Object
      17: dup
      18: iconst_0
      19: iload_1
      20: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      23: aastore
      24: invokestatic  #36                 // Method io/netty/handler/codec/http2/Http2Exception.connectionError:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      27: athrow
      28: return

  private void verifyAssociatedWithAStream() throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: getfield      #4                  // Field streamId:I
       4: ifne          30
       7: getstatic     #80                 // Field io/netty/handler/codec/http2/Http2Error.PROTOCOL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      10: ldc           #137                // String Frame of type %s must be associated with a stream.
      12: iconst_1
      13: anewarray     #17                 // class java/lang/Object
      16: dup
      17: iconst_0
      18: aload_0
      19: getfield      #38                 // Field frameType:B
      22: invokestatic  #89                 // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
      25: aastore
      26: invokestatic  #36                 // Method io/netty/handler/codec/http2/Http2Exception.connectionError:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      29: athrow
      30: return

  private static void verifyStreamOrConnectionId(int, java.lang.String) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: iload_0
       1: ifge          21
       4: getstatic     #80                 // Field io/netty/handler/codec/http2/Http2Error.PROTOCOL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
       7: ldc           #138                // String %s must be >= 0
       9: iconst_1
      10: anewarray     #17                 // class java/lang/Object
      13: dup
      14: iconst_0
      15: aload_1
      16: aastore
      17: invokestatic  #36                 // Method io/netty/handler/codec/http2/Http2Exception.connectionError:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      20: athrow
      21: return

  static io.netty.handler.codec.http2.Http2HeadersDecoder access$100(io.netty.handler.codec.http2.DefaultHttp2FrameReader);
    Code:
       0: aload_0
       1: getfield      #5                  // Field headersDecoder:Lio/netty/handler/codec/http2/Http2HeadersDecoder;
       4: areturn

  static int access$200(io.netty.handler.codec.http2.DefaultHttp2FrameReader);
    Code:
       0: aload_0
       1: getfield      #4                  // Field streamId:I
       4: ireturn

  static io.netty.handler.codec.http2.DefaultHttp2FrameReader$HeadersContinuation access$302(io.netty.handler.codec.http2.DefaultHttp2FrameReader, io.netty.handler.codec.http2.DefaultHttp2FrameReader$HeadersContinuation);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #3                  // Field headersContinuation:Lio/netty/handler/codec/http2/DefaultHttp2FrameReader$HeadersContinuation;
       6: areturn
}
