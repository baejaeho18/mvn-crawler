Compiled from "AbstractBinaryMemcacheEncoder.java"
public abstract class io.netty.handler.codec.memcache.binary.AbstractBinaryMemcacheEncoder<M extends io.netty.handler.codec.memcache.binary.BinaryMemcacheMessage> extends io.netty.handler.codec.memcache.AbstractMemcacheObjectEncoder<M> {
  private static final int MINIMUM_HEADER_SIZE;

  public io.netty.handler.codec.memcache.binary.AbstractBinaryMemcacheEncoder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/netty/handler/codec/memcache/AbstractMemcacheObjectEncoder."<init>":()V
       4: return

  protected io.netty.buffer.ByteBuf encodeMessage(io.netty.channel.ChannelHandlerContext, M);
    Code:
       0: aload_1
       1: invokeinterface #2,  1            // InterfaceMethod io/netty/channel/ChannelHandlerContext.alloc:()Lio/netty/buffer/ByteBufAllocator;
       6: bipush        24
       8: aload_2
       9: invokeinterface #4,  1            // InterfaceMethod io/netty/handler/codec/memcache/binary/BinaryMemcacheMessage.extrasLength:()B
      14: iadd
      15: aload_2
      16: invokeinterface #5,  1            // InterfaceMethod io/netty/handler/codec/memcache/binary/BinaryMemcacheMessage.keyLength:()S
      21: iadd
      22: invokeinterface #6,  2            // InterfaceMethod io/netty/buffer/ByteBufAllocator.buffer:(I)Lio/netty/buffer/ByteBuf;
      27: astore_3
      28: aload_0
      29: aload_3
      30: aload_2
      31: invokevirtual #7                  // Method encodeHeader:(Lio/netty/buffer/ByteBuf;Lio/netty/handler/codec/memcache/binary/BinaryMemcacheMessage;)V
      34: aload_3
      35: aload_2
      36: invokeinterface #8,  1            // InterfaceMethod io/netty/handler/codec/memcache/binary/BinaryMemcacheMessage.extras:()Lio/netty/buffer/ByteBuf;
      41: invokestatic  #9                  // Method encodeExtras:(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V
      44: aload_3
      45: aload_2
      46: invokeinterface #10,  1           // InterfaceMethod io/netty/handler/codec/memcache/binary/BinaryMemcacheMessage.key:()Lio/netty/buffer/ByteBuf;
      51: invokestatic  #11                 // Method encodeKey:(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V
      54: aload_3
      55: areturn

  private static void encodeExtras(io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #12                 // Method io/netty/buffer/ByteBuf.isReadable:()Z
       8: ifne          12
      11: return
      12: aload_0
      13: aload_1
      14: invokevirtual #13                 // Method io/netty/buffer/ByteBuf.writeBytes:(Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;
      17: pop
      18: return

  private static void encodeKey(io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #12                 // Method io/netty/buffer/ByteBuf.isReadable:()Z
       8: ifne          12
      11: return
      12: aload_0
      13: aload_1
      14: invokevirtual #13                 // Method io/netty/buffer/ByteBuf.writeBytes:(Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;
      17: pop
      18: return

  protected abstract void encodeHeader(io.netty.buffer.ByteBuf, M);

  protected io.netty.buffer.ByteBuf encodeMessage(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.memcache.MemcacheMessage);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #14                 // class io/netty/handler/codec/memcache/binary/BinaryMemcacheMessage
       6: invokevirtual #15                 // Method encodeMessage:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/handler/codec/memcache/binary/BinaryMemcacheMessage;)Lio/netty/buffer/ByteBuf;
       9: areturn
}
