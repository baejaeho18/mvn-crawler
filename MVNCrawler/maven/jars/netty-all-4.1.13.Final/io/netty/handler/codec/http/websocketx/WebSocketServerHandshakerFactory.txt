Compiled from "WebSocketServerHandshakerFactory.java"
public class io.netty.handler.codec.http.websocketx.WebSocketServerHandshakerFactory {
  private final java.lang.String webSocketURL;

  private final java.lang.String subprotocols;

  private final boolean allowExtensions;

  private final int maxFramePayloadLength;

  private final boolean allowMaskMismatch;

  public io.netty.handler.codec.http.websocketx.WebSocketServerHandshakerFactory(java.lang.String, java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: ldc           #1                  // int 65536
       6: invokespecial #2                  // Method "<init>":(Ljava/lang/String;Ljava/lang/String;ZI)V
       9: return

  public io.netty.handler.codec.http.websocketx.WebSocketServerHandshakerFactory(java.lang.String, java.lang.String, boolean, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iload         4
       6: iconst_0
       7: invokespecial #3                  // Method "<init>":(Ljava/lang/String;Ljava/lang/String;ZIZ)V
      10: return

  public io.netty.handler.codec.http.websocketx.WebSocketServerHandshakerFactory(java.lang.String, java.lang.String, boolean, int, boolean);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #5                  // Field webSocketURL:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #6                  // Field subprotocols:Ljava/lang/String;
      14: aload_0
      15: iload_3
      16: putfield      #7                  // Field allowExtensions:Z
      19: aload_0
      20: iload         4
      22: putfield      #8                  // Field maxFramePayloadLength:I
      25: aload_0
      26: iload         5
      28: putfield      #9                  // Field allowMaskMismatch:Z
      31: return

  public io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker newHandshaker(io.netty.handler.codec.http.HttpRequest);
    Code:
       0: aload_1
       1: invokeinterface #10,  1           // InterfaceMethod io/netty/handler/codec/http/HttpRequest.headers:()Lio/netty/handler/codec/http/HttpHeaders;
       6: getstatic     #11                 // Field io/netty/handler/codec/http/HttpHeaderNames.SEC_WEBSOCKET_VERSION:Lio/netty/util/AsciiString;
       9: invokevirtual #12                 // Method io/netty/handler/codec/http/HttpHeaders.get:(Ljava/lang/CharSequence;)Ljava/lang/String;
      12: astore_2
      13: aload_2
      14: ifnull        142
      17: aload_2
      18: getstatic     #13                 // Field io/netty/handler/codec/http/websocketx/WebSocketVersion.V13:Lio/netty/handler/codec/http/websocketx/WebSocketVersion;
      21: invokevirtual #14                 // Method io/netty/handler/codec/http/websocketx/WebSocketVersion.toHttpHeaderValue:()Ljava/lang/String;
      24: invokevirtual #15                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      27: ifeq          58
      30: new           #16                 // class io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker13
      33: dup
      34: aload_0
      35: getfield      #5                  // Field webSocketURL:Ljava/lang/String;
      38: aload_0
      39: getfield      #6                  // Field subprotocols:Ljava/lang/String;
      42: aload_0
      43: getfield      #7                  // Field allowExtensions:Z
      46: aload_0
      47: getfield      #8                  // Field maxFramePayloadLength:I
      50: aload_0
      51: getfield      #9                  // Field allowMaskMismatch:Z
      54: invokespecial #17                 // Method io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker13."<init>":(Ljava/lang/String;Ljava/lang/String;ZIZ)V
      57: areturn
      58: aload_2
      59: getstatic     #18                 // Field io/netty/handler/codec/http/websocketx/WebSocketVersion.V08:Lio/netty/handler/codec/http/websocketx/WebSocketVersion;
      62: invokevirtual #14                 // Method io/netty/handler/codec/http/websocketx/WebSocketVersion.toHttpHeaderValue:()Ljava/lang/String;
      65: invokevirtual #15                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      68: ifeq          99
      71: new           #19                 // class io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker08
      74: dup
      75: aload_0
      76: getfield      #5                  // Field webSocketURL:Ljava/lang/String;
      79: aload_0
      80: getfield      #6                  // Field subprotocols:Ljava/lang/String;
      83: aload_0
      84: getfield      #7                  // Field allowExtensions:Z
      87: aload_0
      88: getfield      #8                  // Field maxFramePayloadLength:I
      91: aload_0
      92: getfield      #9                  // Field allowMaskMismatch:Z
      95: invokespecial #20                 // Method io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker08."<init>":(Ljava/lang/String;Ljava/lang/String;ZIZ)V
      98: areturn
      99: aload_2
     100: getstatic     #21                 // Field io/netty/handler/codec/http/websocketx/WebSocketVersion.V07:Lio/netty/handler/codec/http/websocketx/WebSocketVersion;
     103: invokevirtual #14                 // Method io/netty/handler/codec/http/websocketx/WebSocketVersion.toHttpHeaderValue:()Ljava/lang/String;
     106: invokevirtual #15                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     109: ifeq          140
     112: new           #22                 // class io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker07
     115: dup
     116: aload_0
     117: getfield      #5                  // Field webSocketURL:Ljava/lang/String;
     120: aload_0
     121: getfield      #6                  // Field subprotocols:Ljava/lang/String;
     124: aload_0
     125: getfield      #7                  // Field allowExtensions:Z
     128: aload_0
     129: getfield      #8                  // Field maxFramePayloadLength:I
     132: aload_0
     133: getfield      #9                  // Field allowMaskMismatch:Z
     136: invokespecial #23                 // Method io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker07."<init>":(Ljava/lang/String;Ljava/lang/String;ZIZ)V
     139: areturn
     140: aconst_null
     141: areturn
     142: new           #24                 // class io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker00
     145: dup
     146: aload_0
     147: getfield      #5                  // Field webSocketURL:Ljava/lang/String;
     150: aload_0
     151: getfield      #6                  // Field subprotocols:Ljava/lang/String;
     154: aload_0
     155: getfield      #8                  // Field maxFramePayloadLength:I
     158: invokespecial #25                 // Method io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker00."<init>":(Ljava/lang/String;Ljava/lang/String;I)V
     161: areturn

  public static void sendUnsupportedWebSocketVersionResponse(io.netty.channel.Channel);
    Code:
       0: aload_0
       1: invokestatic  #26                 // Method sendUnsupportedVersionResponse:(Lio/netty/channel/Channel;)Lio/netty/channel/ChannelFuture;
       4: pop
       5: return

  public static io.netty.channel.ChannelFuture sendUnsupportedVersionResponse(io.netty.channel.Channel);
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #27,  1           // InterfaceMethod io/netty/channel/Channel.newPromise:()Lio/netty/channel/ChannelPromise;
       7: invokestatic  #28                 // Method sendUnsupportedVersionResponse:(Lio/netty/channel/Channel;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      10: areturn

  public static io.netty.channel.ChannelFuture sendUnsupportedVersionResponse(io.netty.channel.Channel, io.netty.channel.ChannelPromise);
    Code:
       0: new           #29                 // class io/netty/handler/codec/http/DefaultFullHttpResponse
       3: dup
       4: getstatic     #30                 // Field io/netty/handler/codec/http/HttpVersion.HTTP_1_1:Lio/netty/handler/codec/http/HttpVersion;
       7: getstatic     #31                 // Field io/netty/handler/codec/http/HttpResponseStatus.UPGRADE_REQUIRED:Lio/netty/handler/codec/http/HttpResponseStatus;
      10: invokespecial #32                 // Method io/netty/handler/codec/http/DefaultFullHttpResponse."<init>":(Lio/netty/handler/codec/http/HttpVersion;Lio/netty/handler/codec/http/HttpResponseStatus;)V
      13: astore_2
      14: aload_2
      15: invokeinterface #33,  1           // InterfaceMethod io/netty/handler/codec/http/HttpResponse.headers:()Lio/netty/handler/codec/http/HttpHeaders;
      20: getstatic     #11                 // Field io/netty/handler/codec/http/HttpHeaderNames.SEC_WEBSOCKET_VERSION:Lio/netty/util/AsciiString;
      23: getstatic     #13                 // Field io/netty/handler/codec/http/websocketx/WebSocketVersion.V13:Lio/netty/handler/codec/http/websocketx/WebSocketVersion;
      26: invokevirtual #14                 // Method io/netty/handler/codec/http/websocketx/WebSocketVersion.toHttpHeaderValue:()Ljava/lang/String;
      29: invokevirtual #34                 // Method io/netty/handler/codec/http/HttpHeaders.set:(Ljava/lang/CharSequence;Ljava/lang/Object;)Lio/netty/handler/codec/http/HttpHeaders;
      32: pop
      33: aload_2
      34: lconst_0
      35: invokestatic  #35                 // Method io/netty/handler/codec/http/HttpUtil.setContentLength:(Lio/netty/handler/codec/http/HttpMessage;J)V
      38: aload_0
      39: aload_2
      40: aload_1
      41: invokeinterface #36,  3           // InterfaceMethod io/netty/channel/Channel.writeAndFlush:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      46: areturn
}
