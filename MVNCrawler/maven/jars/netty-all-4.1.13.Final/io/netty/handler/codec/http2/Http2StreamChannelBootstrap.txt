Compiled from "Http2StreamChannelBootstrap.java"
public class io.netty.handler.codec.http2.Http2StreamChannelBootstrap {
  private volatile io.netty.handler.codec.http2.Http2StreamChannelBootstrap$ParentChannelAndMultiplexCodec channelAndCodec;

  private volatile io.netty.channel.ChannelHandler handler;

  private volatile io.netty.channel.EventLoopGroup group;

  private final java.util.Map<io.netty.channel.ChannelOption<?>, java.lang.Object> options;

  private final java.util.Map<io.netty.util.AttributeKey<?>, java.lang.Object> attributes;

  public io.netty.handler.codec.http2.Http2StreamChannelBootstrap();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/LinkedHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/LinkedHashMap."<init>":()V
      12: invokestatic  #4                  // Method java/util/Collections.synchronizedMap:(Ljava/util/Map;)Ljava/util/Map;
      15: putfield      #5                  // Field options:Ljava/util/Map;
      18: aload_0
      19: new           #2                  // class java/util/LinkedHashMap
      22: dup
      23: invokespecial #3                  // Method java/util/LinkedHashMap."<init>":()V
      26: invokestatic  #4                  // Method java/util/Collections.synchronizedMap:(Ljava/util/Map;)Ljava/util/Map;
      29: putfield      #6                  // Field attributes:Ljava/util/Map;
      32: return

  io.netty.handler.codec.http2.Http2StreamChannelBootstrap(io.netty.handler.codec.http2.Http2StreamChannelBootstrap);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #7                  // String bootstrap must not be null
       7: invokestatic  #8                  // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      10: pop
      11: aload_0
      12: aload_1
      13: getfield      #9                  // Field channelAndCodec:Lio/netty/handler/codec/http2/Http2StreamChannelBootstrap$ParentChannelAndMultiplexCodec;
      16: putfield      #9                  // Field channelAndCodec:Lio/netty/handler/codec/http2/Http2StreamChannelBootstrap$ParentChannelAndMultiplexCodec;
      19: aload_0
      20: aload_1
      21: getfield      #10                 // Field handler:Lio/netty/channel/ChannelHandler;
      24: putfield      #10                 // Field handler:Lio/netty/channel/ChannelHandler;
      27: aload_0
      28: aload_1
      29: getfield      #11                 // Field group:Lio/netty/channel/EventLoopGroup;
      32: putfield      #11                 // Field group:Lio/netty/channel/EventLoopGroup;
      35: aload_0
      36: new           #2                  // class java/util/LinkedHashMap
      39: dup
      40: aload_1
      41: getfield      #5                  // Field options:Ljava/util/Map;
      44: invokespecial #12                 // Method java/util/LinkedHashMap."<init>":(Ljava/util/Map;)V
      47: invokestatic  #4                  // Method java/util/Collections.synchronizedMap:(Ljava/util/Map;)Ljava/util/Map;
      50: putfield      #5                  // Field options:Ljava/util/Map;
      53: aload_0
      54: new           #2                  // class java/util/LinkedHashMap
      57: dup
      58: aload_1
      59: getfield      #6                  // Field attributes:Ljava/util/Map;
      62: invokespecial #12                 // Method java/util/LinkedHashMap."<init>":(Ljava/util/Map;)V
      65: invokestatic  #4                  // Method java/util/Collections.synchronizedMap:(Ljava/util/Map;)Ljava/util/Map;
      68: putfield      #6                  // Field attributes:Ljava/util/Map;
      71: return

  public io.netty.channel.ChannelFuture connect();
    Code:
       0: aload_0
       1: iconst_m1
       2: invokevirtual #13                 // Method connect:(I)Lio/netty/channel/ChannelFuture;
       5: areturn

  io.netty.channel.ChannelFuture connect(int);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method validateState:()V
       4: aload_0
       5: getfield      #9                  // Field channelAndCodec:Lio/netty/handler/codec/http2/Http2StreamChannelBootstrap$ParentChannelAndMultiplexCodec;
       8: astore_2
       9: aload_2
      10: getfield      #15                 // Field io/netty/handler/codec/http2/Http2StreamChannelBootstrap$ParentChannelAndMultiplexCodec.parentChannel:Lio/netty/channel/Channel;
      13: astore_3
      14: aload_2
      15: getfield      #16                 // Field io/netty/handler/codec/http2/Http2StreamChannelBootstrap$ParentChannelAndMultiplexCodec.multiplexCodec:Lio/netty/handler/codec/http2/Http2MultiplexCodec;
      18: astore        4
      20: aload_0
      21: getfield      #11                 // Field group:Lio/netty/channel/EventLoopGroup;
      24: astore        5
      26: aload         5
      28: ifnonnull     40
      31: aload_3
      32: invokeinterface #17,  1           // InterfaceMethod io/netty/channel/Channel.eventLoop:()Lio/netty/channel/EventLoop;
      37: goto          42
      40: aload         5
      42: astore        5
      44: aload         4
      46: aload_3
      47: aload         5
      49: aload_0
      50: getfield      #10                 // Field handler:Lio/netty/channel/ChannelHandler;
      53: aload_0
      54: getfield      #5                  // Field options:Ljava/util/Map;
      57: aload_0
      58: getfield      #6                  // Field attributes:Ljava/util/Map;
      61: iload_1
      62: invokevirtual #18                 // Method io/netty/handler/codec/http2/Http2MultiplexCodec.createStreamChannel:(Lio/netty/channel/Channel;Lio/netty/channel/EventLoopGroup;Lio/netty/channel/ChannelHandler;Ljava/util/Map;Ljava/util/Map;I)Lio/netty/channel/ChannelFuture;
      65: areturn

  public io.netty.handler.codec.http2.Http2StreamChannelBootstrap parentChannel(io.netty.channel.Channel);
    Code:
       0: aload_0
       1: new           #19                 // class io/netty/handler/codec/http2/Http2StreamChannelBootstrap$ParentChannelAndMultiplexCodec
       4: dup
       5: aload_1
       6: invokespecial #20                 // Method io/netty/handler/codec/http2/Http2StreamChannelBootstrap$ParentChannelAndMultiplexCodec."<init>":(Lio/netty/channel/Channel;)V
       9: putfield      #9                  // Field channelAndCodec:Lio/netty/handler/codec/http2/Http2StreamChannelBootstrap$ParentChannelAndMultiplexCodec;
      12: aload_0
      13: areturn

  public io.netty.handler.codec.http2.Http2StreamChannelBootstrap handler(io.netty.channel.ChannelHandler);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #21                 // String handler
       4: invokestatic  #8                  // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: checkcast     #22                 // class io/netty/channel/ChannelHandler
      10: invokestatic  #23                 // Method checkSharable:(Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelHandler;
      13: putfield      #10                 // Field handler:Lio/netty/channel/ChannelHandler;
      16: aload_0
      17: areturn

  public io.netty.handler.codec.http2.Http2StreamChannelBootstrap group(io.netty.channel.EventLoopGroup);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field group:Lio/netty/channel/EventLoopGroup;
       5: aload_0
       6: areturn

  public <T> io.netty.handler.codec.http2.Http2StreamChannelBootstrap option(io.netty.channel.ChannelOption<T>, T);
    Code:
       0: aload_1
       1: ldc           #24                 // String option must not be null
       3: invokestatic  #8                  // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_2
       8: ifnonnull     25
      11: aload_0
      12: getfield      #5                  // Field options:Ljava/util/Map;
      15: aload_1
      16: invokeinterface #25,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      21: pop
      22: goto          37
      25: aload_0
      26: getfield      #5                  // Field options:Ljava/util/Map;
      29: aload_1
      30: aload_2
      31: invokeinterface #26,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      36: pop
      37: aload_0
      38: areturn

  public <T> io.netty.handler.codec.http2.Http2StreamChannelBootstrap attr(io.netty.util.AttributeKey<T>, T);
    Code:
       0: aload_1
       1: ldc           #27                 // String key must not be null
       3: invokestatic  #8                  // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_2
       8: ifnonnull     25
      11: aload_0
      12: getfield      #6                  // Field attributes:Ljava/util/Map;
      15: aload_1
      16: invokeinterface #25,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      21: pop
      22: goto          37
      25: aload_0
      26: getfield      #6                  // Field attributes:Ljava/util/Map;
      29: aload_1
      30: aload_2
      31: invokeinterface #26,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      36: pop
      37: aload_0
      38: areturn

  public io.netty.channel.Channel parentChannel();
    Code:
       0: aload_0
       1: getfield      #9                  // Field channelAndCodec:Lio/netty/handler/codec/http2/Http2StreamChannelBootstrap$ParentChannelAndMultiplexCodec;
       4: astore_1
       5: aload_1
       6: ifnull        14
       9: aload_1
      10: getfield      #15                 // Field io/netty/handler/codec/http2/Http2StreamChannelBootstrap$ParentChannelAndMultiplexCodec.parentChannel:Lio/netty/channel/Channel;
      13: areturn
      14: aconst_null
      15: areturn

  public io.netty.channel.ChannelHandler handler();
    Code:
       0: aload_0
       1: getfield      #10                 // Field handler:Lio/netty/channel/ChannelHandler;
       4: areturn

  public io.netty.channel.EventLoopGroup group();
    Code:
       0: aload_0
       1: getfield      #11                 // Field group:Lio/netty/channel/EventLoopGroup;
       4: areturn

  public java.util.Map<io.netty.channel.ChannelOption<?>, java.lang.Object> options();
    Code:
       0: new           #2                  // class java/util/LinkedHashMap
       3: dup
       4: aload_0
       5: getfield      #5                  // Field options:Ljava/util/Map;
       8: invokespecial #12                 // Method java/util/LinkedHashMap."<init>":(Ljava/util/Map;)V
      11: invokestatic  #28                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      14: areturn

  public java.util.Map<io.netty.util.AttributeKey<?>, java.lang.Object> attributes();
    Code:
       0: new           #2                  // class java/util/LinkedHashMap
       3: dup
       4: aload_0
       5: getfield      #6                  // Field attributes:Ljava/util/Map;
       8: invokespecial #12                 // Method java/util/LinkedHashMap."<init>":(Ljava/util/Map;)V
      11: invokestatic  #28                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      14: areturn

  private void validateState();
    Code:
       0: aload_0
       1: getfield      #10                 // Field handler:Lio/netty/channel/ChannelHandler;
       4: ldc           #29                 // String handler must be set
       6: invokestatic  #8                  // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: getfield      #9                  // Field channelAndCodec:Lio/netty/handler/codec/http2/Http2StreamChannelBootstrap$ParentChannelAndMultiplexCodec;
      14: ldc           #30                 // String parent channel must be set
      16: invokestatic  #8                  // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      19: pop
      20: return

  private static io.netty.channel.ChannelHandler checkSharable(io.netty.channel.ChannelHandler);
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc           #32                 // class io/netty/channel/ChannelHandler$Sharable
       6: invokevirtual #33                 // Method java/lang/Class.isAnnotationPresent:(Ljava/lang/Class;)Z
       9: ifne          22
      12: new           #34                 // class java/lang/IllegalArgumentException
      15: dup
      16: ldc           #35                 // String The handler must be Sharable
      18: invokespecial #36                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: aload_0
      23: areturn
}
