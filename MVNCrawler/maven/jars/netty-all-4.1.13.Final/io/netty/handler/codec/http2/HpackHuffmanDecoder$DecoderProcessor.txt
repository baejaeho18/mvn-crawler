Compiled from "HpackHuffmanDecoder.java"
final class io.netty.handler.codec.http2.HpackHuffmanDecoder$DecoderProcessor implements io.netty.util.ByteProcessor {
  private final int initialCapacity;

  private byte[] bytes;

  private int index;

  private io.netty.handler.codec.http2.HpackHuffmanDecoder$Node node;

  private int current;

  private int currentBits;

  private int symbolBits;

  io.netty.handler.codec.http2.HpackHuffmanDecoder$DecoderProcessor(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: ldc           #2                  // String initialCapacity
       8: invokestatic  #3                  // Method io/netty/util/internal/ObjectUtil.checkPositive:(ILjava/lang/String;)I
      11: putfield      #4                  // Field initialCapacity:I
      14: return

  void reset();
    Code:
       0: aload_0
       1: invokestatic  #5                  // Method io/netty/handler/codec/http2/HpackHuffmanDecoder.access$200:()Lio/netty/handler/codec/http2/HpackHuffmanDecoder$Node;
       4: putfield      #6                  // Field node:Lio/netty/handler/codec/http2/HpackHuffmanDecoder$Node;
       7: aload_0
       8: iconst_0
       9: putfield      #7                  // Field current:I
      12: aload_0
      13: iconst_0
      14: putfield      #8                  // Field currentBits:I
      17: aload_0
      18: iconst_0
      19: putfield      #9                  // Field symbolBits:I
      22: aload_0
      23: aload_0
      24: getfield      #4                  // Field initialCapacity:I
      27: newarray       byte
      29: putfield      #10                 // Field bytes:[B
      32: aload_0
      33: iconst_0
      34: putfield      #11                 // Field index:I
      37: return

  public boolean process(byte) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #7                  // Field current:I
       5: bipush        8
       7: ishl
       8: iload_1
       9: sipush        255
      12: iand
      13: ior
      14: putfield      #7                  // Field current:I
      17: aload_0
      18: dup
      19: getfield      #8                  // Field currentBits:I
      22: bipush        8
      24: iadd
      25: putfield      #8                  // Field currentBits:I
      28: aload_0
      29: dup
      30: getfield      #9                  // Field symbolBits:I
      33: bipush        8
      35: iadd
      36: putfield      #9                  // Field symbolBits:I
      39: aload_0
      40: aload_0
      41: getfield      #6                  // Field node:Lio/netty/handler/codec/http2/HpackHuffmanDecoder$Node;
      44: invokestatic  #12                 // Method io/netty/handler/codec/http2/HpackHuffmanDecoder$Node.access$100:(Lio/netty/handler/codec/http2/HpackHuffmanDecoder$Node;)[Lio/netty/handler/codec/http2/HpackHuffmanDecoder$Node;
      47: aload_0
      48: getfield      #7                  // Field current:I
      51: aload_0
      52: getfield      #8                  // Field currentBits:I
      55: bipush        8
      57: isub
      58: iushr
      59: sipush        255
      62: iand
      63: aaload
      64: putfield      #6                  // Field node:Lio/netty/handler/codec/http2/HpackHuffmanDecoder$Node;
      67: aload_0
      68: dup
      69: getfield      #8                  // Field currentBits:I
      72: aload_0
      73: getfield      #6                  // Field node:Lio/netty/handler/codec/http2/HpackHuffmanDecoder$Node;
      76: invokestatic  #13                 // Method io/netty/handler/codec/http2/HpackHuffmanDecoder$Node.access$300:(Lio/netty/handler/codec/http2/HpackHuffmanDecoder$Node;)I
      79: isub
      80: putfield      #8                  // Field currentBits:I
      83: aload_0
      84: getfield      #6                  // Field node:Lio/netty/handler/codec/http2/HpackHuffmanDecoder$Node;
      87: invokestatic  #14                 // Method io/netty/handler/codec/http2/HpackHuffmanDecoder$Node.access$000:(Lio/netty/handler/codec/http2/HpackHuffmanDecoder$Node;)Z
      90: ifeq          136
      93: aload_0
      94: getfield      #6                  // Field node:Lio/netty/handler/codec/http2/HpackHuffmanDecoder$Node;
      97: invokestatic  #15                 // Method io/netty/handler/codec/http2/HpackHuffmanDecoder$Node.access$400:(Lio/netty/handler/codec/http2/HpackHuffmanDecoder$Node;)I
     100: sipush        256
     103: if_icmpne     110
     106: invokestatic  #17                 // Method io/netty/handler/codec/http2/HpackHuffmanDecoder.access$500:()Lio/netty/handler/codec/http2/Http2Exception;
     109: athrow
     110: aload_0
     111: aload_0
     112: getfield      #6                  // Field node:Lio/netty/handler/codec/http2/HpackHuffmanDecoder$Node;
     115: invokestatic  #15                 // Method io/netty/handler/codec/http2/HpackHuffmanDecoder$Node.access$400:(Lio/netty/handler/codec/http2/HpackHuffmanDecoder$Node;)I
     118: invokespecial #18                 // Method append:(I)V
     121: aload_0
     122: invokestatic  #5                  // Method io/netty/handler/codec/http2/HpackHuffmanDecoder.access$200:()Lio/netty/handler/codec/http2/HpackHuffmanDecoder$Node;
     125: putfield      #6                  // Field node:Lio/netty/handler/codec/http2/HpackHuffmanDecoder$Node;
     128: aload_0
     129: aload_0
     130: getfield      #8                  // Field currentBits:I
     133: putfield      #9                  // Field symbolBits:I
     136: aload_0
     137: getfield      #8                  // Field currentBits:I
     140: bipush        8
     142: if_icmpge     39
     145: iconst_1
     146: ireturn

  io.netty.util.AsciiString end() throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: getfield      #8                  // Field currentBits:I
       4: ifle          121
       7: aload_0
       8: aload_0
       9: getfield      #6                  // Field node:Lio/netty/handler/codec/http2/HpackHuffmanDecoder$Node;
      12: invokestatic  #12                 // Method io/netty/handler/codec/http2/HpackHuffmanDecoder$Node.access$100:(Lio/netty/handler/codec/http2/HpackHuffmanDecoder$Node;)[Lio/netty/handler/codec/http2/HpackHuffmanDecoder$Node;
      15: aload_0
      16: getfield      #7                  // Field current:I
      19: bipush        8
      21: aload_0
      22: getfield      #8                  // Field currentBits:I
      25: isub
      26: ishl
      27: sipush        255
      30: iand
      31: aaload
      32: putfield      #6                  // Field node:Lio/netty/handler/codec/http2/HpackHuffmanDecoder$Node;
      35: aload_0
      36: getfield      #6                  // Field node:Lio/netty/handler/codec/http2/HpackHuffmanDecoder$Node;
      39: invokestatic  #14                 // Method io/netty/handler/codec/http2/HpackHuffmanDecoder$Node.access$000:(Lio/netty/handler/codec/http2/HpackHuffmanDecoder$Node;)Z
      42: ifeq          121
      45: aload_0
      46: getfield      #6                  // Field node:Lio/netty/handler/codec/http2/HpackHuffmanDecoder$Node;
      49: invokestatic  #13                 // Method io/netty/handler/codec/http2/HpackHuffmanDecoder$Node.access$300:(Lio/netty/handler/codec/http2/HpackHuffmanDecoder$Node;)I
      52: aload_0
      53: getfield      #8                  // Field currentBits:I
      56: if_icmpgt     121
      59: aload_0
      60: getfield      #6                  // Field node:Lio/netty/handler/codec/http2/HpackHuffmanDecoder$Node;
      63: invokestatic  #15                 // Method io/netty/handler/codec/http2/HpackHuffmanDecoder$Node.access$400:(Lio/netty/handler/codec/http2/HpackHuffmanDecoder$Node;)I
      66: sipush        256
      69: if_icmpne     76
      72: invokestatic  #17                 // Method io/netty/handler/codec/http2/HpackHuffmanDecoder.access$500:()Lio/netty/handler/codec/http2/Http2Exception;
      75: athrow
      76: aload_0
      77: dup
      78: getfield      #8                  // Field currentBits:I
      81: aload_0
      82: getfield      #6                  // Field node:Lio/netty/handler/codec/http2/HpackHuffmanDecoder$Node;
      85: invokestatic  #13                 // Method io/netty/handler/codec/http2/HpackHuffmanDecoder$Node.access$300:(Lio/netty/handler/codec/http2/HpackHuffmanDecoder$Node;)I
      88: isub
      89: putfield      #8                  // Field currentBits:I
      92: aload_0
      93: aload_0
      94: getfield      #6                  // Field node:Lio/netty/handler/codec/http2/HpackHuffmanDecoder$Node;
      97: invokestatic  #15                 // Method io/netty/handler/codec/http2/HpackHuffmanDecoder$Node.access$400:(Lio/netty/handler/codec/http2/HpackHuffmanDecoder$Node;)I
     100: invokespecial #18                 // Method append:(I)V
     103: aload_0
     104: invokestatic  #5                  // Method io/netty/handler/codec/http2/HpackHuffmanDecoder.access$200:()Lio/netty/handler/codec/http2/HpackHuffmanDecoder$Node;
     107: putfield      #6                  // Field node:Lio/netty/handler/codec/http2/HpackHuffmanDecoder$Node;
     110: aload_0
     111: aload_0
     112: getfield      #8                  // Field currentBits:I
     115: putfield      #9                  // Field symbolBits:I
     118: goto          0
     121: iconst_1
     122: aload_0
     123: getfield      #9                  // Field symbolBits:I
     126: ishl
     127: iconst_1
     128: isub
     129: istore_1
     130: aload_0
     131: getfield      #9                  // Field symbolBits:I
     134: bipush        7
     136: if_icmpgt     149
     139: aload_0
     140: getfield      #7                  // Field current:I
     143: iload_1
     144: iand
     145: iload_1
     146: if_icmpeq     153
     149: invokestatic  #19                 // Method io/netty/handler/codec/http2/HpackHuffmanDecoder.access$600:()Lio/netty/handler/codec/http2/Http2Exception;
     152: athrow
     153: new           #20                 // class io/netty/util/AsciiString
     156: dup
     157: aload_0
     158: getfield      #10                 // Field bytes:[B
     161: iconst_0
     162: aload_0
     163: getfield      #11                 // Field index:I
     166: iconst_0
     167: invokespecial #21                 // Method io/netty/util/AsciiString."<init>":([BIIZ)V
     170: areturn

  private void append(int);
    Code:
       0: aload_0
       1: getfield      #10                 // Field bytes:[B
       4: arraylength
       5: aload_0
       6: getfield      #11                 // Field index:I
       9: if_icmpne     68
      12: aload_0
      13: getfield      #10                 // Field bytes:[B
      16: arraylength
      17: sipush        1024
      20: if_icmplt     36
      23: aload_0
      24: getfield      #10                 // Field bytes:[B
      27: arraylength
      28: aload_0
      29: getfield      #4                  // Field initialCapacity:I
      32: iadd
      33: goto          43
      36: aload_0
      37: getfield      #10                 // Field bytes:[B
      40: arraylength
      41: iconst_1
      42: ishl
      43: istore_2
      44: iload_2
      45: newarray       byte
      47: astore_3
      48: aload_0
      49: getfield      #10                 // Field bytes:[B
      52: iconst_0
      53: aload_3
      54: iconst_0
      55: aload_0
      56: getfield      #10                 // Field bytes:[B
      59: arraylength
      60: invokestatic  #22                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      63: aload_0
      64: aload_3
      65: putfield      #10                 // Field bytes:[B
      68: aload_0
      69: getfield      #10                 // Field bytes:[B
      72: aload_0
      73: dup
      74: getfield      #11                 // Field index:I
      77: dup_x1
      78: iconst_1
      79: iadd
      80: putfield      #11                 // Field index:I
      83: iload_1
      84: i2b
      85: bastore
      86: return
}
