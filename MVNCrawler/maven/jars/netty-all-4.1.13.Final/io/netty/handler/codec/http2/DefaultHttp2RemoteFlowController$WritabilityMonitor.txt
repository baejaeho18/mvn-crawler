Compiled from "DefaultHttp2RemoteFlowController.java"
class io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor {
  private boolean inWritePendingBytes;

  private long totalPendingBytes;

  private final io.netty.handler.codec.http2.StreamByteDistributor$Writer writer;

  final io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController this$0;

  private io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #4                  // class io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$WritabilityMonitor$1
      13: dup
      14: aload_0
      15: invokespecial #5                  // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$WritabilityMonitor$1."<init>":(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$WritabilityMonitor;)V
      18: putfield      #6                  // Field writer:Lio/netty/handler/codec/http2/StreamByteDistributor$Writer;
      21: return

  void channelWritabilityChange() throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: return

  void stateCancelled(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState);
    Code:
       0: return

  void windowSize(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState, int);
    Code:
       0: aload_1
       1: iload_2
       2: invokevirtual #7                  // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$FlowState.windowSize:(I)V
       5: return

  void incrementWindowSize(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState, int) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_1
       1: iload_2
       2: invokevirtual #8                  // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$FlowState.incrementStreamWindow:(I)I
       5: pop
       6: return

  void enqueueFrame(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState, io.netty.handler.codec.http2.Http2RemoteFlowController$FlowControlled) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #9                  // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$FlowState.enqueueFrame:(Lio/netty/handler/codec/http2/Http2RemoteFlowController$FlowControlled;)V
       5: return

  final void incrementPendingBytes(int);
    Code:
       0: aload_0
       1: dup
       2: getfield      #10                 // Field totalPendingBytes:J
       5: iload_1
       6: i2l
       7: ladd
       8: putfield      #10                 // Field totalPendingBytes:J
      11: return

  final boolean isWritable(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState);
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method isWritableConnection:()Z
       4: ifeq          18
       7: aload_1
       8: invokevirtual #12                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$FlowState.isWritable:()Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  final void writePendingBytes() throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: getfield      #13                 // Field inWritePendingBytes:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #13                 // Field inWritePendingBytes:Z
      13: aload_0
      14: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;
      17: invokestatic  #14                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.access$900:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;)I
      20: istore_1
      21: aload_0
      22: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;
      25: invokestatic  #15                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.access$600:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;)Lio/netty/handler/codec/http2/StreamByteDistributor;
      28: iload_1
      29: aload_0
      30: getfield      #6                  // Field writer:Lio/netty/handler/codec/http2/StreamByteDistributor$Writer;
      33: invokeinterface #16,  3           // InterfaceMethod io/netty/handler/codec/http2/StreamByteDistributor.distribute:(ILio/netty/handler/codec/http2/StreamByteDistributor$Writer;)Z
      38: ifeq          66
      41: aload_0
      42: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;
      45: invokestatic  #14                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.access$900:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;)I
      48: dup
      49: istore_1
      50: ifle          66
      53: aload_0
      54: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;
      57: invokestatic  #17                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.access$1000:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;)Z
      60: ifne          21
      63: goto          66
      66: aload_0
      67: iconst_0
      68: putfield      #13                 // Field inWritePendingBytes:Z
      71: goto          82
      74: astore_2
      75: aload_0
      76: iconst_0
      77: putfield      #13                 // Field inWritePendingBytes:Z
      80: aload_2
      81: athrow
      82: return
    Exception table:
       from    to  target type
          13    66    74   any

  void initialWindowSize(int) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: iload_1
       1: ifge          31
       4: new           #18                 // class java/lang/IllegalArgumentException
       7: dup
       8: new           #19                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #21                 // String Invalid initial window size:
      17: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: iload_1
      21: invokevirtual #23                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      24: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: invokespecial #25                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: iload_1
      32: aload_0
      33: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;
      36: invokestatic  #26                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.access$200:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;)I
      39: isub
      40: istore_2
      41: aload_0
      42: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;
      45: iload_1
      46: invokestatic  #27                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.access$202:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;I)I
      49: pop
      50: aload_0
      51: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;
      54: invokestatic  #28                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.access$1100:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;)Lio/netty/handler/codec/http2/Http2Connection;
      57: new           #29                 // class io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$WritabilityMonitor$2
      60: dup
      61: aload_0
      62: iload_2
      63: invokespecial #30                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$WritabilityMonitor$2."<init>":(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$WritabilityMonitor;I)V
      66: invokeinterface #31,  2           // InterfaceMethod io/netty/handler/codec/http2/Http2Connection.forEachActiveStream:(Lio/netty/handler/codec/http2/Http2StreamVisitor;)Lio/netty/handler/codec/http2/Http2Stream;
      71: pop
      72: iload_2
      73: ifle          90
      76: aload_0
      77: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;
      80: invokestatic  #32                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.access$1200:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;)Z
      83: ifeq          90
      86: aload_0
      87: invokevirtual #33                 // Method writePendingBytes:()V
      90: return

  final boolean isWritableConnection();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;
       4: invokestatic  #34                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.access$800:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;)Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$FlowState;
       7: invokevirtual #35                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$FlowState.windowSize:()I
      10: i2l
      11: aload_0
      12: getfield      #10                 // Field totalPendingBytes:J
      15: lsub
      16: lconst_0
      17: lcmp
      18: ifle          35
      21: aload_0
      22: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;
      25: invokestatic  #32                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.access$1200:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;)Z
      28: ifeq          35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: ireturn

  io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController, io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;)V
       5: return
}
