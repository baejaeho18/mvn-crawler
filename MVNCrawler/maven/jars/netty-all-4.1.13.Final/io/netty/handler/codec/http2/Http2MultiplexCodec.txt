Compiled from "Http2MultiplexCodec.java"
public final class io.netty.handler.codec.http2.Http2MultiplexCodec extends io.netty.channel.ChannelDuplexHandler {
  private static final io.netty.util.internal.logging.InternalLogger logger;

  private final io.netty.handler.codec.http2.Http2StreamChannelBootstrap bootstrap;

  private final java.util.List<io.netty.handler.codec.http2.Http2MultiplexCodec$Http2StreamChannel> channelsToFireChildReadComplete;

  private final boolean server;

  private io.netty.channel.ChannelHandlerContext ctx;

  private volatile java.lang.Runnable flushTask;

  private final io.netty.util.collection.IntObjectMap<io.netty.handler.codec.http2.Http2MultiplexCodec$Http2StreamChannel> childChannels;

  static final boolean $assertionsDisabled;

  public io.netty.handler.codec.http2.Http2MultiplexCodec(boolean, io.netty.handler.codec.http2.Http2StreamChannelBootstrap);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method io/netty/channel/ChannelDuplexHandler."<init>":()V
       4: aload_0
       5: new           #5                  // class java/util/ArrayList
       8: dup
       9: invokespecial #6                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #7                  // Field channelsToFireChildReadComplete:Ljava/util/List;
      15: aload_0
      16: new           #8                  // class io/netty/util/collection/IntObjectHashMap
      19: dup
      20: invokespecial #9                  // Method io/netty/util/collection/IntObjectHashMap."<init>":()V
      23: putfield      #10                 // Field childChannels:Lio/netty/util/collection/IntObjectMap;
      26: aload_2
      27: invokevirtual #11                 // Method io/netty/handler/codec/http2/Http2StreamChannelBootstrap.parentChannel:()Lio/netty/channel/Channel;
      30: ifnull        43
      33: new           #12                 // class java/lang/IllegalStateException
      36: dup
      37: ldc           #13                 // String The parent channel must not be set on the bootstrap.
      39: invokespecial #14                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_0
      44: iload_1
      45: putfield      #15                 // Field server:Z
      48: aload_0
      49: new           #16                 // class io/netty/handler/codec/http2/Http2StreamChannelBootstrap
      52: dup
      53: aload_2
      54: invokespecial #17                 // Method io/netty/handler/codec/http2/Http2StreamChannelBootstrap."<init>":(Lio/netty/handler/codec/http2/Http2StreamChannelBootstrap;)V
      57: putfield      #18                 // Field bootstrap:Lio/netty/handler/codec/http2/Http2StreamChannelBootstrap;
      60: return

  public void handlerAdded(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       5: aload_0
       6: getfield      #18                 // Field bootstrap:Lio/netty/handler/codec/http2/Http2StreamChannelBootstrap;
       9: aload_1
      10: invokeinterface #19,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      15: invokevirtual #20                 // Method io/netty/handler/codec/http2/Http2StreamChannelBootstrap.parentChannel:(Lio/netty/channel/Channel;)Lio/netty/handler/codec/http2/Http2StreamChannelBootstrap;
      18: pop
      19: return

  public void exceptionCaught(io.netty.channel.ChannelHandlerContext, java.lang.Throwable);
    Code:
       0: aload_2
       1: instanceof    #21                 // class io/netty/handler/codec/http2/Http2Exception$StreamException
       4: ifne          16
       7: aload_1
       8: aload_2
       9: invokeinterface #22,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelHandlerContext;
      14: pop
      15: return
      16: aload_2
      17: checkcast     #21                 // class io/netty/handler/codec/http2/Http2Exception$StreamException
      20: astore_3
      21: aload_0
      22: getfield      #10                 // Field childChannels:Lio/netty/util/collection/IntObjectMap;
      25: aload_3
      26: invokevirtual #23                 // Method io/netty/handler/codec/http2/Http2Exception$StreamException.streamId:()I
      29: invokeinterface #24,  2           // InterfaceMethod io/netty/util/collection/IntObjectMap.get:(I)Ljava/lang/Object;
      34: checkcast     #25                 // class io/netty/handler/codec/http2/Http2MultiplexCodec$Http2StreamChannel
      37: astore        4
      39: aload         4
      41: ifnull        59
      44: aload         4
      46: invokevirtual #26                 // Method io/netty/handler/codec/http2/Http2MultiplexCodec$Http2StreamChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
      49: aload_3
      50: invokeinterface #27,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPipeline;
      55: pop
      56: goto          87
      59: getstatic     #28                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      62: ldc           #29                 // String Exception caught for unknown HTTP/2 stream \'%d\'
      64: iconst_1
      65: anewarray     #30                 // class java/lang/Object
      68: dup
      69: iconst_0
      70: aload_3
      71: invokevirtual #23                 // Method io/netty/handler/codec/http2/Http2Exception$StreamException.streamId:()I
      74: invokestatic  #31                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      77: aastore
      78: invokestatic  #32                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      81: aload_3
      82: invokeinterface #33,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      87: aload_0
      88: aload_3
      89: invokevirtual #23                 // Method io/netty/handler/codec/http2/Http2Exception$StreamException.streamId:()I
      92: invokespecial #34                 // Method onStreamClosed:(I)V
      95: goto          111
      98: astore        5
     100: aload_0
     101: aload_3
     102: invokevirtual #23                 // Method io/netty/handler/codec/http2/Http2Exception$StreamException.streamId:()I
     105: invokespecial #34                 // Method onStreamClosed:(I)V
     108: aload         5
     110: athrow
     111: return
    Exception table:
       from    to  target type
          21    87    98   any
          98   100    98   any

  public void flush(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_1
       1: invokeinterface #35,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.flush:()Lio/netty/channel/ChannelHandlerContext;
       6: pop
       7: return

  public void channelRead(io.netty.channel.ChannelHandlerContext, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_2
       1: instanceof    #36                 // class io/netty/handler/codec/http2/Http2Frame
       4: ifne          16
       7: aload_1
       8: aload_2
       9: invokeinterface #37,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
      14: pop
      15: return
      16: aload_2
      17: instanceof    #38                 // class io/netty/handler/codec/http2/Http2StreamFrame
      20: ifeq          111
      23: aload_2
      24: checkcast     #38                 // class io/netty/handler/codec/http2/Http2StreamFrame
      27: astore_3
      28: aload_3
      29: invokeinterface #39,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2StreamFrame.streamId:()I
      34: istore        4
      36: aload_0
      37: getfield      #10                 // Field childChannels:Lio/netty/util/collection/IntObjectMap;
      40: iload         4
      42: invokeinterface #24,  2           // InterfaceMethod io/netty/util/collection/IntObjectMap.get:(I)Ljava/lang/Object;
      47: checkcast     #25                 // class io/netty/handler/codec/http2/Http2MultiplexCodec$Http2StreamChannel
      50: astore        5
      52: aload         5
      54: ifnonnull     101
      57: aload_2
      58: invokestatic  #40                 // Method io/netty/util/ReferenceCountUtil.release:(Ljava/lang/Object;)Z
      61: pop
      62: new           #21                 // class io/netty/handler/codec/http2/Http2Exception$StreamException
      65: dup
      66: iload         4
      68: getstatic     #41                 // Field io/netty/handler/codec/http2/Http2Error.STREAM_CLOSED:Lio/netty/handler/codec/http2/Http2Error;
      71: ldc           #42                 // String Received %s frame for an unknown stream %d
      73: iconst_2
      74: anewarray     #30                 // class java/lang/Object
      77: dup
      78: iconst_0
      79: aload_3
      80: invokeinterface #43,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2StreamFrame.name:()Ljava/lang/String;
      85: aastore
      86: dup
      87: iconst_1
      88: iload         4
      90: invokestatic  #31                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      93: aastore
      94: invokestatic  #32                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      97: invokespecial #44                 // Method io/netty/handler/codec/http2/Http2Exception$StreamException."<init>":(ILio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;)V
     100: athrow
     101: aload_0
     102: aload         5
     104: aload_3
     105: invokespecial #45                 // Method fireChildReadAndRegister:(Lio/netty/handler/codec/http2/Http2MultiplexCodec$Http2StreamChannel;Lio/netty/handler/codec/http2/Http2StreamFrame;)V
     108: goto          253
     111: aload_2
     112: instanceof    #46                 // class io/netty/handler/codec/http2/Http2GoAwayFrame
     115: ifeq          235
     118: aload_2
     119: checkcast     #46                 // class io/netty/handler/codec/http2/Http2GoAwayFrame
     122: astore_3
     123: aload_0
     124: getfield      #10                 // Field childChannels:Lio/netty/util/collection/IntObjectMap;
     127: invokeinterface #47,  1           // InterfaceMethod io/netty/util/collection/IntObjectMap.entries:()Ljava/lang/Iterable;
     132: invokeinterface #48,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
     137: astore        4
     139: aload         4
     141: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     146: ifeq          225
     149: aload         4
     151: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     156: checkcast     #51                 // class io/netty/util/collection/IntObjectMap$PrimitiveEntry
     159: astore        5
     161: aload         5
     163: invokeinterface #52,  1           // InterfaceMethod io/netty/util/collection/IntObjectMap$PrimitiveEntry.value:()Ljava/lang/Object;
     168: checkcast     #25                 // class io/netty/handler/codec/http2/Http2MultiplexCodec$Http2StreamChannel
     171: astore        6
     173: aload         5
     175: invokeinterface #53,  1           // InterfaceMethod io/netty/util/collection/IntObjectMap$PrimitiveEntry.key:()I
     180: istore        7
     182: iload         7
     184: aload_3
     185: invokeinterface #54,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2GoAwayFrame.lastStreamId:()I
     190: if_icmple     222
     193: aload_0
     194: getfield      #15                 // Field server:Z
     197: iload         7
     199: invokestatic  #55                 // Method io/netty/handler/codec/http2/Http2CodecUtil.isOutboundStream:(ZI)Z
     202: ifeq          222
     205: aload         6
     207: invokevirtual #26                 // Method io/netty/handler/codec/http2/Http2MultiplexCodec$Http2StreamChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
     210: aload_3
     211: invokeinterface #56,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2GoAwayFrame.retainedDuplicate:()Lio/netty/handler/codec/http2/Http2GoAwayFrame;
     216: invokeinterface #57,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireUserEventTriggered:(Ljava/lang/Object;)Lio/netty/channel/ChannelPipeline;
     221: pop
     222: goto          139
     225: aload_3
     226: invokeinterface #58,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2GoAwayFrame.release:()Z
     231: pop
     232: goto          253
     235: aload_2
     236: invokestatic  #40                 // Method io/netty/util/ReferenceCountUtil.release:(Ljava/lang/Object;)Z
     239: pop
     240: new           #59                 // class io/netty/handler/codec/UnsupportedMessageTypeException
     243: dup
     244: aload_2
     245: iconst_0
     246: anewarray     #60                 // class java/lang/Class
     249: invokespecial #61                 // Method io/netty/handler/codec/UnsupportedMessageTypeException."<init>":(Ljava/lang/Object;[Ljava/lang/Class;)V
     252: athrow
     253: return

  private void fireChildReadAndRegister(io.netty.handler.codec.http2.Http2MultiplexCodec$Http2StreamChannel, io.netty.handler.codec.http2.Http2StreamFrame);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #62                 // Method io/netty/handler/codec/http2/Http2MultiplexCodec$Http2StreamChannel.fireChildRead:(Ljava/lang/Object;)V
       5: aload_1
       6: getfield      #63                 // Field io/netty/handler/codec/http2/Http2MultiplexCodec$Http2StreamChannel.inStreamsToFireChildReadComplete:Z
       9: ifne          28
      12: aload_0
      13: getfield      #7                  // Field channelsToFireChildReadComplete:Ljava/util/List;
      16: aload_1
      17: invokeinterface #64,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      22: pop
      23: aload_1
      24: iconst_1
      25: putfield      #63                 // Field io/netty/handler/codec/http2/Http2MultiplexCodec$Http2StreamChannel.inStreamsToFireChildReadComplete:Z
      28: return

  public void userEventTriggered(io.netty.channel.ChannelHandlerContext, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_2
       1: instanceof    #65                 // class io/netty/handler/codec/http2/Http2StreamActiveEvent
       4: ifeq          27
       7: aload_2
       8: checkcast     #65                 // class io/netty/handler/codec/http2/Http2StreamActiveEvent
      11: astore_3
      12: aload_0
      13: aload_3
      14: invokevirtual #66                 // Method io/netty/handler/codec/http2/Http2StreamActiveEvent.streamId:()I
      17: aload_3
      18: invokevirtual #67                 // Method io/netty/handler/codec/http2/Http2StreamActiveEvent.headers:()Lio/netty/handler/codec/http2/Http2HeadersFrame;
      21: invokespecial #68                 // Method onStreamActive:(ILio/netty/handler/codec/http2/Http2HeadersFrame;)V
      24: goto          56
      27: aload_2
      28: instanceof    #69                 // class io/netty/handler/codec/http2/Http2StreamClosedEvent
      31: ifeq          48
      34: aload_0
      35: aload_2
      36: checkcast     #69                 // class io/netty/handler/codec/http2/Http2StreamClosedEvent
      39: invokevirtual #70                 // Method io/netty/handler/codec/http2/Http2StreamClosedEvent.streamId:()I
      42: invokespecial #34                 // Method onStreamClosed:(I)V
      45: goto          56
      48: aload_1
      49: aload_2
      50: invokeinterface #71,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireUserEventTriggered:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
      55: pop
      56: return

  private void onStreamActive(int, io.netty.handler.codec.http2.Http2HeadersFrame);
    Code:
       0: aload_0
       1: getfield      #15                 // Field server:Z
       4: iload_1
       5: invokestatic  #55                 // Method io/netty/handler/codec/http2/Http2CodecUtil.isOutboundStream:(ZI)Z
       8: ifeq          44
      11: aload_2
      12: instanceof    #72                 // class io/netty/handler/codec/http2/Http2MultiplexCodec$ChannelCarryingHeadersFrame
      15: ifne          28
      18: new           #73                 // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #74                 // String needs to be wrapped
      24: invokespecial #75                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_2
      29: checkcast     #72                 // class io/netty/handler/codec/http2/Http2MultiplexCodec$ChannelCarryingHeadersFrame
      32: invokevirtual #76                 // Method io/netty/handler/codec/http2/Http2MultiplexCodec$ChannelCarryingHeadersFrame.channel:()Lio/netty/handler/codec/http2/Http2MultiplexCodec$Http2StreamChannel;
      35: astore_3
      36: aload_3
      37: iload_1
      38: invokevirtual #77                 // Method io/netty/handler/codec/http2/Http2MultiplexCodec$Http2StreamChannel.streamId:(I)V
      41: goto          65
      44: aload_0
      45: getfield      #18                 // Field bootstrap:Lio/netty/handler/codec/http2/Http2StreamChannelBootstrap;
      48: iload_1
      49: invokevirtual #78                 // Method io/netty/handler/codec/http2/Http2StreamChannelBootstrap.connect:(I)Lio/netty/channel/ChannelFuture;
      52: astore        4
      54: aload         4
      56: invokeinterface #79,  1           // InterfaceMethod io/netty/channel/ChannelFuture.channel:()Lio/netty/channel/Channel;
      61: checkcast     #25                 // class io/netty/handler/codec/http2/Http2MultiplexCodec$Http2StreamChannel
      64: astore_3
      65: aload_0
      66: getfield      #10                 // Field childChannels:Lio/netty/util/collection/IntObjectMap;
      69: iload_1
      70: aload_3
      71: invokeinterface #80,  3           // InterfaceMethod io/netty/util/collection/IntObjectMap.put:(ILjava/lang/Object;)Ljava/lang/Object;
      76: checkcast     #25                 // class io/netty/handler/codec/http2/Http2MultiplexCodec$Http2StreamChannel
      79: astore        4
      81: getstatic     #81                 // Field $assertionsDisabled:Z
      84: ifne          100
      87: aload         4
      89: ifnull        100
      92: new           #82                 // class java/lang/AssertionError
      95: dup
      96: invokespecial #83                 // Method java/lang/AssertionError."<init>":()V
      99: athrow
     100: return

  private void onStreamClosed(int);
    Code:
       0: aload_0
       1: getfield      #10                 // Field childChannels:Lio/netty/util/collection/IntObjectMap;
       4: iload_1
       5: invokeinterface #84,  2           // InterfaceMethod io/netty/util/collection/IntObjectMap.remove:(I)Ljava/lang/Object;
      10: checkcast     #25                 // class io/netty/handler/codec/http2/Http2MultiplexCodec$Http2StreamChannel
      13: astore_2
      14: aload_2
      15: ifnull        55
      18: aload_2
      19: invokevirtual #85                 // Method io/netty/handler/codec/http2/Http2MultiplexCodec$Http2StreamChannel.eventLoop:()Lio/netty/channel/EventLoop;
      22: astore_3
      23: aload_3
      24: invokeinterface #86,  1           // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
      29: ifeq          40
      32: aload_0
      33: aload_2
      34: invokespecial #3                  // Method onStreamClosed0:(Lio/netty/handler/codec/http2/Http2MultiplexCodec$Http2StreamChannel;)V
      37: goto          55
      40: aload_3
      41: new           #87                 // class io/netty/handler/codec/http2/Http2MultiplexCodec$1
      44: dup
      45: aload_0
      46: aload_2
      47: invokespecial #88                 // Method io/netty/handler/codec/http2/Http2MultiplexCodec$1."<init>":(Lio/netty/handler/codec/http2/Http2MultiplexCodec;Lio/netty/handler/codec/http2/Http2MultiplexCodec$Http2StreamChannel;)V
      50: invokeinterface #89,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      55: return

  private void onStreamClosed0(io.netty.handler.codec.http2.Http2MultiplexCodec$Http2StreamChannel);
    Code:
       0: getstatic     #81                 // Field $assertionsDisabled:Z
       3: ifne          26
       6: aload_1
       7: invokevirtual #85                 // Method io/netty/handler/codec/http2/Http2MultiplexCodec$Http2StreamChannel.eventLoop:()Lio/netty/channel/EventLoop;
      10: invokeinterface #86,  1           // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
      15: ifne          26
      18: new           #82                 // class java/lang/AssertionError
      21: dup
      22: invokespecial #83                 // Method java/lang/AssertionError."<init>":()V
      25: athrow
      26: aload_1
      27: iconst_1
      28: putfield      #90                 // Field io/netty/handler/codec/http2/Http2MultiplexCodec$Http2StreamChannel.onStreamClosedFired:Z
      31: aload_1
      32: getstatic     #91                 // Field io/netty/handler/codec/http2/AbstractHttp2StreamChannel.CLOSE_MESSAGE:Ljava/lang/Object;
      35: invokevirtual #62                 // Method io/netty/handler/codec/http2/Http2MultiplexCodec$Http2StreamChannel.fireChildRead:(Ljava/lang/Object;)V
      38: return

  void flushFromStreamChannel();
    Code:
       0: aload_0
       1: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: invokeinterface #92,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
       9: astore_1
      10: aload_1
      11: invokeinterface #93,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      16: ifeq          30
      19: aload_0
      20: aload_0
      21: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      24: invokevirtual #94                 // Method flush:(Lio/netty/channel/ChannelHandlerContext;)V
      27: goto          60
      30: aload_0
      31: getfield      #95                 // Field flushTask:Ljava/lang/Runnable;
      34: astore_2
      35: aload_2
      36: ifnonnull     53
      39: aload_0
      40: new           #96                 // class io/netty/handler/codec/http2/Http2MultiplexCodec$2
      43: dup
      44: aload_0
      45: invokespecial #97                 // Method io/netty/handler/codec/http2/Http2MultiplexCodec$2."<init>":(Lio/netty/handler/codec/http2/Http2MultiplexCodec;)V
      48: dup_x1
      49: putfield      #95                 // Field flushTask:Ljava/lang/Runnable;
      52: astore_2
      53: aload_1
      54: aload_2
      55: invokeinterface #98,  2           // InterfaceMethod io/netty/util/concurrent/EventExecutor.execute:(Ljava/lang/Runnable;)V
      60: return

  void writeFromStreamChannel(java.lang.Object, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       6: invokeinterface #99,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.newPromise:()Lio/netty/channel/ChannelPromise;
      11: iload_2
      12: invokevirtual #100                // Method writeFromStreamChannel:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;Z)V
      15: return

  void writeFromStreamChannel(java.lang.Object, io.netty.channel.ChannelPromise, boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: invokeinterface #92,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
       9: astore        4
      11: aload         4
      13: invokeinterface #93,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      18: ifeq          31
      21: aload_0
      22: aload_1
      23: iload_3
      24: aload_2
      25: invokespecial #1                  // Method writeFromStreamChannel0:(Ljava/lang/Object;ZLio/netty/channel/ChannelPromise;)V
      28: goto          63
      31: aload         4
      33: new           #101                // class io/netty/handler/codec/http2/Http2MultiplexCodec$3
      36: dup
      37: aload_0
      38: aload_1
      39: iload_3
      40: aload_2
      41: invokespecial #102                // Method io/netty/handler/codec/http2/Http2MultiplexCodec$3."<init>":(Lio/netty/handler/codec/http2/Http2MultiplexCodec;Ljava/lang/Object;ZLio/netty/channel/ChannelPromise;)V
      44: invokeinterface #98,  2           // InterfaceMethod io/netty/util/concurrent/EventExecutor.execute:(Ljava/lang/Runnable;)V
      49: goto          63
      52: astore        5
      54: aload_2
      55: aload         5
      57: invokeinterface #104,  2          // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
      62: pop
      63: return
    Exception table:
       from    to  target type
          31    49    52   Class java/lang/Throwable

  private void writeFromStreamChannel0(java.lang.Object, boolean, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       5: aload_1
       6: aload_3
       7: invokevirtual #105                // Method write:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)V
      10: goto          24
      13: astore        4
      15: aload_3
      16: aload         4
      18: invokeinterface #106,  2          // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
      23: pop
      24: iload_2
      25: ifeq          36
      28: aload_0
      29: aload_0
      30: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      33: invokevirtual #94                 // Method flush:(Lio/netty/channel/ChannelHandlerContext;)V
      36: return
    Exception table:
       from    to  target type
           0    10    13   Class java/lang/Throwable

  public void channelReadComplete(io.netty.channel.ChannelHandlerContext);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_0
       4: getfield      #7                  // Field channelsToFireChildReadComplete:Ljava/util/List;
       7: invokeinterface #107,  1          // InterfaceMethod java/util/List.size:()I
      12: if_icmpge     44
      15: aload_0
      16: getfield      #7                  // Field channelsToFireChildReadComplete:Ljava/util/List;
      19: iload_2
      20: invokeinterface #108,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      25: checkcast     #25                 // class io/netty/handler/codec/http2/Http2MultiplexCodec$Http2StreamChannel
      28: astore_3
      29: aload_3
      30: iconst_0
      31: putfield      #63                 // Field io/netty/handler/codec/http2/Http2MultiplexCodec$Http2StreamChannel.inStreamsToFireChildReadComplete:Z
      34: aload_3
      35: invokevirtual #109                // Method io/netty/handler/codec/http2/Http2MultiplexCodec$Http2StreamChannel.fireChildReadComplete:()V
      38: iinc          2, 1
      41: goto          2
      44: aload_0
      45: getfield      #7                  // Field channelsToFireChildReadComplete:Ljava/util/List;
      48: invokeinterface #110,  1          // InterfaceMethod java/util/List.clear:()V
      53: return

  io.netty.channel.ChannelFuture createStreamChannel(io.netty.channel.Channel, io.netty.channel.EventLoopGroup, io.netty.channel.ChannelHandler, java.util.Map<io.netty.channel.ChannelOption<?>, java.lang.Object>, java.util.Map<io.netty.util.AttributeKey<?>, java.lang.Object>, int);
    Code:
       0: new           #25                 // class io/netty/handler/codec/http2/Http2MultiplexCodec$Http2StreamChannel
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #111                // Method io/netty/handler/codec/http2/Http2MultiplexCodec$Http2StreamChannel."<init>":(Lio/netty/handler/codec/http2/Http2MultiplexCodec;Lio/netty/channel/Channel;)V
       9: astore        7
      11: iload         6
      13: invokestatic  #112                // Method io/netty/handler/codec/http2/Http2CodecUtil.isStreamIdValid:(I)Z
      16: ifeq          88
      19: getstatic     #81                 // Field $assertionsDisabled:Z
      22: ifne          45
      25: aload_0
      26: getfield      #15                 // Field server:Z
      29: iload         6
      31: invokestatic  #55                 // Method io/netty/handler/codec/http2/Http2CodecUtil.isOutboundStream:(ZI)Z
      34: ifeq          45
      37: new           #82                 // class java/lang/AssertionError
      40: dup
      41: invokespecial #83                 // Method java/lang/AssertionError."<init>":()V
      44: athrow
      45: getstatic     #81                 // Field $assertionsDisabled:Z
      48: ifne          81
      51: aload_0
      52: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      55: invokeinterface #19,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      60: invokeinterface #113,  1          // InterfaceMethod io/netty/channel/Channel.eventLoop:()Lio/netty/channel/EventLoop;
      65: invokeinterface #86,  1           // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
      70: ifne          81
      73: new           #82                 // class java/lang/AssertionError
      76: dup
      77: invokespecial #83                 // Method java/lang/AssertionError."<init>":()V
      80: athrow
      81: aload         7
      83: iload         6
      85: invokevirtual #77                 // Method io/netty/handler/codec/http2/Http2MultiplexCodec$Http2StreamChannel.streamId:(I)V
      88: aload         7
      90: invokevirtual #26                 // Method io/netty/handler/codec/http2/Http2MultiplexCodec$Http2StreamChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
      93: iconst_1
      94: anewarray     #114                // class io/netty/channel/ChannelHandler
      97: dup
      98: iconst_0
      99: aload_3
     100: aastore
     101: invokeinterface #115,  2          // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:([Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
     106: pop
     107: aload         7
     109: aload         4
     111: invokestatic  #116                // Method initOpts:(Lio/netty/channel/Channel;Ljava/util/Map;)V
     114: aload         7
     116: aload         5
     118: invokestatic  #117                // Method initAttrs:(Lio/netty/channel/Channel;Ljava/util/Map;)V
     121: aload_2
     122: aload         7
     124: invokeinterface #118,  2          // InterfaceMethod io/netty/channel/EventLoopGroup.register:(Lio/netty/channel/Channel;)Lio/netty/channel/ChannelFuture;
     129: astore        8
     131: aload         8
     133: invokeinterface #119,  1          // InterfaceMethod io/netty/channel/ChannelFuture.cause:()Ljava/lang/Throwable;
     138: ifnull        168
     141: aload         7
     143: invokevirtual #120                // Method io/netty/handler/codec/http2/Http2MultiplexCodec$Http2StreamChannel.isRegistered:()Z
     146: ifeq          158
     149: aload         7
     151: invokevirtual #121                // Method io/netty/handler/codec/http2/Http2MultiplexCodec$Http2StreamChannel.close:()Lio/netty/channel/ChannelFuture;
     154: pop
     155: goto          168
     158: aload         7
     160: invokevirtual #122                // Method io/netty/handler/codec/http2/Http2MultiplexCodec$Http2StreamChannel.unsafe:()Lio/netty/channel/Channel$Unsafe;
     163: invokeinterface #123,  1          // InterfaceMethod io/netty/channel/Channel$Unsafe.closeForcibly:()V
     168: aload         8
     170: areturn

  private static void initOpts(io.netty.channel.Channel, java.util.Map<io.netty.channel.ChannelOption<?>, java.lang.Object>);
    Code:
       0: aload_1
       1: ifnull        128
       4: aload_1
       5: invokeinterface #124,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      10: invokeinterface #125,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      15: astore_2
      16: aload_2
      17: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          128
      25: aload_2
      26: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #126                // class java/util/Map$Entry
      34: astore_3
      35: aload_0
      36: invokeinterface #127,  1          // InterfaceMethod io/netty/channel/Channel.config:()Lio/netty/channel/ChannelConfig;
      41: aload_3
      42: invokeinterface #128,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      47: checkcast     #129                // class io/netty/channel/ChannelOption
      50: aload_3
      51: invokeinterface #130,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      56: invokeinterface #131,  3          // InterfaceMethod io/netty/channel/ChannelConfig.setOption:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)Z
      61: ifne          91
      64: getstatic     #28                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      67: new           #132                // class java/lang/StringBuilder
      70: dup
      71: invokespecial #133                // Method java/lang/StringBuilder."<init>":()V
      74: ldc           #134                // String Unknown channel option:
      76: invokevirtual #135                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: aload_3
      80: invokevirtual #136                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      83: invokevirtual #137                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      86: invokeinterface #138,  2          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;)V
      91: goto          125
      94: astore        4
      96: getstatic     #28                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      99: new           #132                // class java/lang/StringBuilder
     102: dup
     103: invokespecial #133                // Method java/lang/StringBuilder."<init>":()V
     106: ldc           #139                // String Failed to set a channel option:
     108: invokevirtual #135                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: aload_0
     112: invokevirtual #136                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     115: invokevirtual #137                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     118: aload         4
     120: invokeinterface #33,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     125: goto          16
     128: return
    Exception table:
       from    to  target type
          35    91    94   Class java/lang/Throwable

  private static void initAttrs(io.netty.channel.Channel, java.util.Map<io.netty.util.AttributeKey<?>, java.lang.Object>);
    Code:
       0: aload_1
       1: ifnull        64
       4: aload_1
       5: invokeinterface #124,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      10: invokeinterface #125,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      15: astore_2
      16: aload_2
      17: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          64
      25: aload_2
      26: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #126                // class java/util/Map$Entry
      34: astore_3
      35: aload_0
      36: aload_3
      37: invokeinterface #128,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      42: checkcast     #140                // class io/netty/util/AttributeKey
      45: invokeinterface #141,  2          // InterfaceMethod io/netty/channel/Channel.attr:(Lio/netty/util/AttributeKey;)Lio/netty/util/Attribute;
      50: aload_3
      51: invokeinterface #130,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      56: invokeinterface #142,  2          // InterfaceMethod io/netty/util/Attribute.set:(Ljava/lang/Object;)V
      61: goto          16
      64: return

  static void access$000(io.netty.handler.codec.http2.Http2MultiplexCodec, io.netty.handler.codec.http2.Http2MultiplexCodec$Http2StreamChannel);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method onStreamClosed0:(Lio/netty/handler/codec/http2/Http2MultiplexCodec$Http2StreamChannel;)V
       5: return

  static io.netty.channel.ChannelHandlerContext access$100(io.netty.handler.codec.http2.Http2MultiplexCodec);
    Code:
       0: aload_0
       1: getfield      #2                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: areturn

  static void access$200(io.netty.handler.codec.http2.Http2MultiplexCodec, java.lang.Object, boolean, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: invokespecial #1                  // Method writeFromStreamChannel0:(Ljava/lang/Object;ZLio/netty/channel/ChannelPromise;)V
       7: return

  static {};
    Code:
       0: ldc           #143                // class io/netty/handler/codec/http2/Http2MultiplexCodec
       2: invokevirtual #144                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #81                 // Field $assertionsDisabled:Z
      16: ldc           #143                // class io/netty/handler/codec/http2/Http2MultiplexCodec
      18: invokestatic  #145                // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
      21: putstatic     #28                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      24: return
}
