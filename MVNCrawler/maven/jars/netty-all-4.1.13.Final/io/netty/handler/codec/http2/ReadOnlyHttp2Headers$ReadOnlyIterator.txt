Compiled from "ReadOnlyHttp2Headers.java"
final class io.netty.handler.codec.http2.ReadOnlyHttp2Headers$ReadOnlyIterator implements java.util.Map$Entry<java.lang.CharSequence, java.lang.CharSequence>, java.util.Iterator<java.util.Map$Entry<java.lang.CharSequence, java.lang.CharSequence>> {
  private int i;

  private io.netty.util.AsciiString[] current;

  private io.netty.util.AsciiString key;

  private io.netty.util.AsciiString value;

  final io.netty.handler.codec.http2.ReadOnlyHttp2Headers this$0;

  private io.netty.handler.codec.http2.ReadOnlyHttp2Headers$ReadOnlyIterator(io.netty.handler.codec.http2.ReadOnlyHttp2Headers);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/ReadOnlyHttp2Headers;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_0
      11: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/ReadOnlyHttp2Headers;
      14: invokestatic  #4                  // Method io/netty/handler/codec/http2/ReadOnlyHttp2Headers.access$100:(Lio/netty/handler/codec/http2/ReadOnlyHttp2Headers;)[Lio/netty/util/AsciiString;
      17: arraylength
      18: ifeq          31
      21: aload_0
      22: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/ReadOnlyHttp2Headers;
      25: invokestatic  #4                  // Method io/netty/handler/codec/http2/ReadOnlyHttp2Headers.access$100:(Lio/netty/handler/codec/http2/ReadOnlyHttp2Headers;)[Lio/netty/util/AsciiString;
      28: goto          38
      31: aload_0
      32: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/ReadOnlyHttp2Headers;
      35: invokestatic  #5                  // Method io/netty/handler/codec/http2/ReadOnlyHttp2Headers.access$200:(Lio/netty/handler/codec/http2/ReadOnlyHttp2Headers;)[Lio/netty/util/AsciiString;
      38: putfield      #6                  // Field current:[Lio/netty/util/AsciiString;
      41: return

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #7                  // Field i:I
       4: aload_0
       5: getfield      #6                  // Field current:[Lio/netty/util/AsciiString;
       8: arraylength
       9: if_icmpeq     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public java.util.Map$Entry<java.lang.CharSequence, java.lang.CharSequence> next();
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method hasNext:()Z
       4: ifne          15
       7: new           #9                  // class java/util/NoSuchElementException
      10: dup
      11: invokespecial #10                 // Method java/util/NoSuchElementException."<init>":()V
      14: athrow
      15: aload_0
      16: aload_0
      17: getfield      #6                  // Field current:[Lio/netty/util/AsciiString;
      20: aload_0
      21: getfield      #7                  // Field i:I
      24: aaload
      25: putfield      #11                 // Field key:Lio/netty/util/AsciiString;
      28: aload_0
      29: aload_0
      30: getfield      #6                  // Field current:[Lio/netty/util/AsciiString;
      33: aload_0
      34: getfield      #7                  // Field i:I
      37: iconst_1
      38: iadd
      39: aaload
      40: putfield      #12                 // Field value:Lio/netty/util/AsciiString;
      43: aload_0
      44: dup
      45: getfield      #7                  // Field i:I
      48: iconst_2
      49: iadd
      50: putfield      #7                  // Field i:I
      53: aload_0
      54: getfield      #7                  // Field i:I
      57: aload_0
      58: getfield      #6                  // Field current:[Lio/netty/util/AsciiString;
      61: arraylength
      62: if_icmpne     95
      65: aload_0
      66: getfield      #6                  // Field current:[Lio/netty/util/AsciiString;
      69: aload_0
      70: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/ReadOnlyHttp2Headers;
      73: invokestatic  #4                  // Method io/netty/handler/codec/http2/ReadOnlyHttp2Headers.access$100:(Lio/netty/handler/codec/http2/ReadOnlyHttp2Headers;)[Lio/netty/util/AsciiString;
      76: if_acmpne     95
      79: aload_0
      80: aload_0
      81: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/ReadOnlyHttp2Headers;
      84: invokestatic  #5                  // Method io/netty/handler/codec/http2/ReadOnlyHttp2Headers.access$200:(Lio/netty/handler/codec/http2/ReadOnlyHttp2Headers;)[Lio/netty/util/AsciiString;
      87: putfield      #6                  // Field current:[Lio/netty/util/AsciiString;
      90: aload_0
      91: iconst_0
      92: putfield      #7                  // Field i:I
      95: aload_0
      96: areturn

  public java.lang.CharSequence getKey();
    Code:
       0: aload_0
       1: getfield      #11                 // Field key:Lio/netty/util/AsciiString;
       4: areturn

  public java.lang.CharSequence getValue();
    Code:
       0: aload_0
       1: getfield      #12                 // Field value:Lio/netty/util/AsciiString;
       4: areturn

  public java.lang.CharSequence setValue(java.lang.CharSequence);
    Code:
       0: new           #13                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #14                 // String read only
       6: invokespecial #15                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void remove();
    Code:
       0: new           #13                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #14                 // String read only
       6: invokespecial #15                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.lang.String toString();
    Code:
       0: new           #16                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #11                 // Field key:Lio/netty/util/AsciiString;
      11: invokevirtual #18                 // Method io/netty/util/AsciiString.toString:()Ljava/lang/String;
      14: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: bipush        61
      19: invokevirtual #20                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      22: aload_0
      23: getfield      #12                 // Field value:Lio/netty/util/AsciiString;
      26: invokevirtual #18                 // Method io/netty/util/AsciiString.toString:()Ljava/lang/String;
      29: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: areturn

  public java.lang.Object setValue(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #22                 // class java/lang/CharSequence
       5: invokevirtual #23                 // Method setValue:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;
       8: areturn

  public java.lang.Object getValue();
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method getValue:()Ljava/lang/CharSequence;
       4: areturn

  public java.lang.Object getKey();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method getKey:()Ljava/lang/CharSequence;
       4: areturn

  public java.lang.Object next();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method next:()Ljava/util/Map$Entry;
       4: areturn

  io.netty.handler.codec.http2.ReadOnlyHttp2Headers$ReadOnlyIterator(io.netty.handler.codec.http2.ReadOnlyHttp2Headers, io.netty.handler.codec.http2.ReadOnlyHttp2Headers$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lio/netty/handler/codec/http2/ReadOnlyHttp2Headers;)V
       5: return
}
