Compiled from "DefaultHttp2FrameReader.java"
public class io.netty.handler.codec.http2.DefaultHttp2FrameReader$HeadersBlockBuilder {
  private io.netty.buffer.ByteBuf headerBlock;

  final io.netty.handler.codec.http2.DefaultHttp2FrameReader this$0;

  protected io.netty.handler.codec.http2.DefaultHttp2FrameReader$HeadersBlockBuilder(io.netty.handler.codec.http2.DefaultHttp2FrameReader);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2FrameReader;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  private void headerSizeExceeded() throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method close:()V
       4: aload_0
       5: getfield      #1                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2FrameReader;
       8: invokestatic  #4                  // Method io/netty/handler/codec/http2/DefaultHttp2FrameReader.access$100:(Lio/netty/handler/codec/http2/DefaultHttp2FrameReader;)Lio/netty/handler/codec/http2/Http2HeadersDecoder;
      11: invokeinterface #5,  1            // InterfaceMethod io/netty/handler/codec/http2/Http2HeadersDecoder.configuration:()Lio/netty/handler/codec/http2/Http2HeadersDecoder$Configuration;
      16: invokeinterface #6,  1            // InterfaceMethod io/netty/handler/codec/http2/Http2HeadersDecoder$Configuration.maxHeaderListSizeGoAway:()J
      21: invokestatic  #7                  // Method io/netty/handler/codec/http2/Http2CodecUtil.headerListSizeExceeded:(J)V
      24: return

  final void addFragment(io.netty.buffer.ByteBuf, io.netty.buffer.ByteBufAllocator, boolean) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: getfield      #8                  // Field headerBlock:Lio/netty/buffer/ByteBuf;
       4: ifnonnull     76
       7: aload_1
       8: invokevirtual #9                  // Method io/netty/buffer/ByteBuf.readableBytes:()I
      11: i2l
      12: aload_0
      13: getfield      #1                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2FrameReader;
      16: invokestatic  #4                  // Method io/netty/handler/codec/http2/DefaultHttp2FrameReader.access$100:(Lio/netty/handler/codec/http2/DefaultHttp2FrameReader;)Lio/netty/handler/codec/http2/Http2HeadersDecoder;
      19: invokeinterface #5,  1            // InterfaceMethod io/netty/handler/codec/http2/Http2HeadersDecoder.configuration:()Lio/netty/handler/codec/http2/Http2HeadersDecoder$Configuration;
      24: invokeinterface #6,  1            // InterfaceMethod io/netty/handler/codec/http2/Http2HeadersDecoder$Configuration.maxHeaderListSizeGoAway:()J
      29: lcmp
      30: ifle          37
      33: aload_0
      34: invokespecial #10                 // Method headerSizeExceeded:()V
      37: iload_3
      38: ifeq          52
      41: aload_0
      42: aload_1
      43: invokevirtual #11                 // Method io/netty/buffer/ByteBuf.retain:()Lio/netty/buffer/ByteBuf;
      46: putfield      #8                  // Field headerBlock:Lio/netty/buffer/ByteBuf;
      49: goto          75
      52: aload_0
      53: aload_2
      54: aload_1
      55: invokevirtual #9                  // Method io/netty/buffer/ByteBuf.readableBytes:()I
      58: invokeinterface #12,  2           // InterfaceMethod io/netty/buffer/ByteBufAllocator.buffer:(I)Lio/netty/buffer/ByteBuf;
      63: putfield      #8                  // Field headerBlock:Lio/netty/buffer/ByteBuf;
      66: aload_0
      67: getfield      #8                  // Field headerBlock:Lio/netty/buffer/ByteBuf;
      70: aload_1
      71: invokevirtual #13                 // Method io/netty/buffer/ByteBuf.writeBytes:(Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;
      74: pop
      75: return
      76: aload_0
      77: getfield      #1                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2FrameReader;
      80: invokestatic  #4                  // Method io/netty/handler/codec/http2/DefaultHttp2FrameReader.access$100:(Lio/netty/handler/codec/http2/DefaultHttp2FrameReader;)Lio/netty/handler/codec/http2/Http2HeadersDecoder;
      83: invokeinterface #5,  1            // InterfaceMethod io/netty/handler/codec/http2/Http2HeadersDecoder.configuration:()Lio/netty/handler/codec/http2/Http2HeadersDecoder$Configuration;
      88: invokeinterface #6,  1            // InterfaceMethod io/netty/handler/codec/http2/Http2HeadersDecoder$Configuration.maxHeaderListSizeGoAway:()J
      93: aload_1
      94: invokevirtual #9                  // Method io/netty/buffer/ByteBuf.readableBytes:()I
      97: i2l
      98: lsub
      99: aload_0
     100: getfield      #8                  // Field headerBlock:Lio/netty/buffer/ByteBuf;
     103: invokevirtual #9                  // Method io/netty/buffer/ByteBuf.readableBytes:()I
     106: i2l
     107: lcmp
     108: ifge          115
     111: aload_0
     112: invokespecial #10                 // Method headerSizeExceeded:()V
     115: aload_0
     116: getfield      #8                  // Field headerBlock:Lio/netty/buffer/ByteBuf;
     119: aload_1
     120: invokevirtual #9                  // Method io/netty/buffer/ByteBuf.readableBytes:()I
     123: invokevirtual #14                 // Method io/netty/buffer/ByteBuf.isWritable:(I)Z
     126: ifeq          141
     129: aload_0
     130: getfield      #8                  // Field headerBlock:Lio/netty/buffer/ByteBuf;
     133: aload_1
     134: invokevirtual #13                 // Method io/netty/buffer/ByteBuf.writeBytes:(Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;
     137: pop
     138: goto          192
     141: aload_2
     142: aload_0
     143: getfield      #8                  // Field headerBlock:Lio/netty/buffer/ByteBuf;
     146: invokevirtual #9                  // Method io/netty/buffer/ByteBuf.readableBytes:()I
     149: aload_1
     150: invokevirtual #9                  // Method io/netty/buffer/ByteBuf.readableBytes:()I
     153: iadd
     154: invokeinterface #12,  2           // InterfaceMethod io/netty/buffer/ByteBufAllocator.buffer:(I)Lio/netty/buffer/ByteBuf;
     159: astore        4
     161: aload         4
     163: aload_0
     164: getfield      #8                  // Field headerBlock:Lio/netty/buffer/ByteBuf;
     167: invokevirtual #13                 // Method io/netty/buffer/ByteBuf.writeBytes:(Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;
     170: pop
     171: aload         4
     173: aload_1
     174: invokevirtual #13                 // Method io/netty/buffer/ByteBuf.writeBytes:(Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;
     177: pop
     178: aload_0
     179: getfield      #8                  // Field headerBlock:Lio/netty/buffer/ByteBuf;
     182: invokevirtual #15                 // Method io/netty/buffer/ByteBuf.release:()Z
     185: pop
     186: aload_0
     187: aload         4
     189: putfield      #8                  // Field headerBlock:Lio/netty/buffer/ByteBuf;
     192: return

  io.netty.handler.codec.http2.Http2Headers headers() throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2FrameReader;
       4: invokestatic  #4                  // Method io/netty/handler/codec/http2/DefaultHttp2FrameReader.access$100:(Lio/netty/handler/codec/http2/DefaultHttp2FrameReader;)Lio/netty/handler/codec/http2/Http2HeadersDecoder;
       7: aload_0
       8: getfield      #1                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2FrameReader;
      11: invokestatic  #16                 // Method io/netty/handler/codec/http2/DefaultHttp2FrameReader.access$200:(Lio/netty/handler/codec/http2/DefaultHttp2FrameReader;)I
      14: aload_0
      15: getfield      #8                  // Field headerBlock:Lio/netty/buffer/ByteBuf;
      18: invokeinterface #17,  3           // InterfaceMethod io/netty/handler/codec/http2/Http2HeadersDecoder.decodeHeaders:(ILio/netty/buffer/ByteBuf;)Lio/netty/handler/codec/http2/Http2Headers;
      23: astore_1
      24: aload_0
      25: invokevirtual #3                  // Method close:()V
      28: aload_1
      29: areturn
      30: astore_2
      31: aload_0
      32: invokevirtual #3                  // Method close:()V
      35: aload_2
      36: athrow
    Exception table:
       from    to  target type
           0    24    30   any

  void close();
    Code:
       0: aload_0
       1: getfield      #8                  // Field headerBlock:Lio/netty/buffer/ByteBuf;
       4: ifnull        20
       7: aload_0
       8: getfield      #8                  // Field headerBlock:Lio/netty/buffer/ByteBuf;
      11: invokevirtual #15                 // Method io/netty/buffer/ByteBuf.release:()Z
      14: pop
      15: aload_0
      16: aconst_null
      17: putfield      #8                  // Field headerBlock:Lio/netty/buffer/ByteBuf;
      20: aload_0
      21: getfield      #1                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2FrameReader;
      24: aconst_null
      25: invokestatic  #18                 // Method io/netty/handler/codec/http2/DefaultHttp2FrameReader.access$302:(Lio/netty/handler/codec/http2/DefaultHttp2FrameReader;Lio/netty/handler/codec/http2/DefaultHttp2FrameReader$HeadersContinuation;)Lio/netty/handler/codec/http2/DefaultHttp2FrameReader$HeadersContinuation;
      28: pop
      29: return
}
