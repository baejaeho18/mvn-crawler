Compiled from "WebSocketServerProtocolHandshakeHandler.java"
class io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler extends io.netty.channel.ChannelInboundHandlerAdapter {
  private final java.lang.String websocketPath;

  private final java.lang.String subprotocols;

  private final boolean allowExtensions;

  private final int maxFramePayloadSize;

  private final boolean allowMaskMismatch;

  private final boolean checkStartsWith;

  io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler(java.lang.String, java.lang.String, boolean, int, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iload         4
       6: iload         5
       8: iconst_0
       9: invokespecial #1                  // Method "<init>":(Ljava/lang/String;Ljava/lang/String;ZIZZ)V
      12: return

  io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler(java.lang.String, java.lang.String, boolean, int, boolean, boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method io/netty/channel/ChannelInboundHandlerAdapter."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field websocketPath:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field subprotocols:Ljava/lang/String;
      14: aload_0
      15: iload_3
      16: putfield      #5                  // Field allowExtensions:Z
      19: aload_0
      20: iload         4
      22: putfield      #6                  // Field maxFramePayloadSize:I
      25: aload_0
      26: iload         5
      28: putfield      #7                  // Field allowMaskMismatch:Z
      31: aload_0
      32: iload         6
      34: putfield      #8                  // Field checkStartsWith:Z
      37: return

  public void channelRead(io.netty.channel.ChannelHandlerContext, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_2
       1: checkcast     #9                  // class io/netty/handler/codec/http/FullHttpRequest
       4: astore_3
       5: aload_0
       6: aload_3
       7: invokespecial #10                 // Method isNotWebSocketPath:(Lio/netty/handler/codec/http/FullHttpRequest;)Z
      10: ifeq          22
      13: aload_1
      14: aload_2
      15: invokeinterface #11,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
      20: pop
      21: return
      22: aload_3
      23: invokeinterface #12,  1           // InterfaceMethod io/netty/handler/codec/http/FullHttpRequest.method:()Lio/netty/handler/codec/http/HttpMethod;
      28: getstatic     #13                 // Field io/netty/handler/codec/http/HttpMethod.GET:Lio/netty/handler/codec/http/HttpMethod;
      31: if_acmpeq     60
      34: aload_1
      35: aload_3
      36: new           #14                 // class io/netty/handler/codec/http/DefaultFullHttpResponse
      39: dup
      40: getstatic     #15                 // Field io/netty/handler/codec/http/HttpVersion.HTTP_1_1:Lio/netty/handler/codec/http/HttpVersion;
      43: getstatic     #16                 // Field io/netty/handler/codec/http/HttpResponseStatus.FORBIDDEN:Lio/netty/handler/codec/http/HttpResponseStatus;
      46: invokespecial #17                 // Method io/netty/handler/codec/http/DefaultFullHttpResponse."<init>":(Lio/netty/handler/codec/http/HttpVersion;Lio/netty/handler/codec/http/HttpResponseStatus;)V
      49: invokestatic  #18                 // Method sendHttpResponse:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/handler/codec/http/HttpRequest;Lio/netty/handler/codec/http/HttpResponse;)V
      52: aload_3
      53: invokeinterface #19,  1           // InterfaceMethod io/netty/handler/codec/http/FullHttpRequest.release:()Z
      58: pop
      59: return
      60: new           #20                 // class io/netty/handler/codec/http/websocketx/WebSocketServerHandshakerFactory
      63: dup
      64: aload_1
      65: invokeinterface #21,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.pipeline:()Lio/netty/channel/ChannelPipeline;
      70: aload_3
      71: aload_0
      72: getfield      #3                  // Field websocketPath:Ljava/lang/String;
      75: invokestatic  #22                 // Method getWebSocketLocation:(Lio/netty/channel/ChannelPipeline;Lio/netty/handler/codec/http/HttpRequest;Ljava/lang/String;)Ljava/lang/String;
      78: aload_0
      79: getfield      #4                  // Field subprotocols:Ljava/lang/String;
      82: aload_0
      83: getfield      #5                  // Field allowExtensions:Z
      86: aload_0
      87: getfield      #6                  // Field maxFramePayloadSize:I
      90: aload_0
      91: getfield      #7                  // Field allowMaskMismatch:Z
      94: invokespecial #23                 // Method io/netty/handler/codec/http/websocketx/WebSocketServerHandshakerFactory."<init>":(Ljava/lang/String;Ljava/lang/String;ZIZ)V
      97: astore        4
      99: aload         4
     101: aload_3
     102: invokevirtual #24                 // Method io/netty/handler/codec/http/websocketx/WebSocketServerHandshakerFactory.newHandshaker:(Lio/netty/handler/codec/http/HttpRequest;)Lio/netty/handler/codec/http/websocketx/WebSocketServerHandshaker;
     105: astore        5
     107: aload         5
     109: ifnonnull     125
     112: aload_1
     113: invokeinterface #25,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
     118: invokestatic  #26                 // Method io/netty/handler/codec/http/websocketx/WebSocketServerHandshakerFactory.sendUnsupportedVersionResponse:(Lio/netty/channel/Channel;)Lio/netty/channel/ChannelFuture;
     121: pop
     122: goto          188
     125: aload         5
     127: aload_1
     128: invokeinterface #25,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
     133: aload_3
     134: invokevirtual #27                 // Method io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker.handshake:(Lio/netty/channel/Channel;Lio/netty/handler/codec/http/FullHttpRequest;)Lio/netty/channel/ChannelFuture;
     137: astore        6
     139: aload         6
     141: new           #28                 // class io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandshakeHandler$1
     144: dup
     145: aload_0
     146: aload_1
     147: aload_3
     148: aload         5
     150: invokespecial #29                 // Method io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandshakeHandler$1."<init>":(Lio/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandshakeHandler;Lio/netty/channel/ChannelHandlerContext;Lio/netty/handler/codec/http/FullHttpRequest;Lio/netty/handler/codec/http/websocketx/WebSocketServerHandshaker;)V
     153: invokeinterface #30,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
     158: pop
     159: aload_1
     160: invokeinterface #25,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
     165: aload         5
     167: invokestatic  #31                 // Method io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandler.setHandshaker:(Lio/netty/channel/Channel;Lio/netty/handler/codec/http/websocketx/WebSocketServerHandshaker;)V
     170: aload_1
     171: invokeinterface #21,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.pipeline:()Lio/netty/channel/ChannelPipeline;
     176: aload_0
     177: ldc           #32                 // String WS403Responder
     179: invokestatic  #33                 // Method io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandler.forbiddenHttpRequestResponder:()Lio/netty/channel/ChannelHandler;
     182: invokeinterface #34,  4           // InterfaceMethod io/netty/channel/ChannelPipeline.replace:(Lio/netty/channel/ChannelHandler;Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
     187: pop
     188: aload_3
     189: invokeinterface #19,  1           // InterfaceMethod io/netty/handler/codec/http/FullHttpRequest.release:()Z
     194: pop
     195: goto          210
     198: astore        7
     200: aload_3
     201: invokeinterface #19,  1           // InterfaceMethod io/netty/handler/codec/http/FullHttpRequest.release:()Z
     206: pop
     207: aload         7
     209: athrow
     210: return
    Exception table:
       from    to  target type
          22    52   198   any
          60   188   198   any
         198   200   198   any

  private boolean isNotWebSocketPath(io.netty.handler.codec.http.FullHttpRequest);
    Code:
       0: aload_0
       1: getfield      #8                  // Field checkStartsWith:Z
       4: ifeq          31
       7: aload_1
       8: invokeinterface #35,  1           // InterfaceMethod io/netty/handler/codec/http/FullHttpRequest.uri:()Ljava/lang/String;
      13: aload_0
      14: getfield      #3                  // Field websocketPath:Ljava/lang/String;
      17: invokevirtual #36                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      20: ifne          27
      23: iconst_1
      24: goto          52
      27: iconst_0
      28: goto          52
      31: aload_1
      32: invokeinterface #35,  1           // InterfaceMethod io/netty/handler/codec/http/FullHttpRequest.uri:()Ljava/lang/String;
      37: aload_0
      38: getfield      #3                  // Field websocketPath:Ljava/lang/String;
      41: invokevirtual #37                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      44: ifne          51
      47: iconst_1
      48: goto          52
      51: iconst_0
      52: ireturn

  private static void sendHttpResponse(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http.HttpRequest, io.netty.handler.codec.http.HttpResponse);
    Code:
       0: aload_0
       1: invokeinterface #25,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
       6: aload_2
       7: invokeinterface #38,  2           // InterfaceMethod io/netty/channel/Channel.writeAndFlush:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
      12: astore_3
      13: aload_1
      14: invokestatic  #39                 // Method io/netty/handler/codec/http/HttpUtil.isKeepAlive:(Lio/netty/handler/codec/http/HttpMessage;)Z
      17: ifeq          35
      20: aload_2
      21: invokeinterface #40,  1           // InterfaceMethod io/netty/handler/codec/http/HttpResponse.status:()Lio/netty/handler/codec/http/HttpResponseStatus;
      26: invokevirtual #41                 // Method io/netty/handler/codec/http/HttpResponseStatus.code:()I
      29: sipush        200
      32: if_icmpeq     45
      35: aload_3
      36: getstatic     #42                 // Field io/netty/channel/ChannelFutureListener.CLOSE:Lio/netty/channel/ChannelFutureListener;
      39: invokeinterface #30,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
      44: pop
      45: return

  private static java.lang.String getWebSocketLocation(io.netty.channel.ChannelPipeline, io.netty.handler.codec.http.HttpRequest, java.lang.String);
    Code:
       0: ldc           #43                 // String ws
       2: astore_3
       3: aload_0
       4: ldc           #44                 // class io/netty/handler/ssl/SslHandler
       6: invokeinterface #45,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.get:(Ljava/lang/Class;)Lio/netty/channel/ChannelHandler;
      11: ifnull        17
      14: ldc           #46                 // String wss
      16: astore_3
      17: aload_1
      18: invokeinterface #47,  1           // InterfaceMethod io/netty/handler/codec/http/HttpRequest.headers:()Lio/netty/handler/codec/http/HttpHeaders;
      23: getstatic     #48                 // Field io/netty/handler/codec/http/HttpHeaderNames.HOST:Lio/netty/util/AsciiString;
      26: invokevirtual #49                 // Method io/netty/handler/codec/http/HttpHeaders.get:(Ljava/lang/CharSequence;)Ljava/lang/String;
      29: astore        4
      31: new           #50                 // class java/lang/StringBuilder
      34: dup
      35: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
      38: aload_3
      39: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #53                 // String ://
      44: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: aload         4
      49: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_2
      53: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: areturn
}
