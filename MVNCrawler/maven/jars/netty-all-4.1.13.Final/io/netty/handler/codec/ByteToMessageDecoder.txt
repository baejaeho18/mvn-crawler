Compiled from "ByteToMessageDecoder.java"
public abstract class io.netty.handler.codec.ByteToMessageDecoder extends io.netty.channel.ChannelInboundHandlerAdapter {
  public static final io.netty.handler.codec.ByteToMessageDecoder$Cumulator MERGE_CUMULATOR;

  public static final io.netty.handler.codec.ByteToMessageDecoder$Cumulator COMPOSITE_CUMULATOR;

  private static final byte STATE_INIT;

  private static final byte STATE_CALLING_CHILD_DECODE;

  private static final byte STATE_HANDLER_REMOVED_PENDING;

  io.netty.buffer.ByteBuf cumulation;

  private io.netty.handler.codec.ByteToMessageDecoder$Cumulator cumulator;

  private boolean singleDecode;

  private boolean decodeWasNull;

  private boolean first;

  private byte decodeState;

  private int discardAfterReads;

  private int numReads;

  protected io.netty.handler.codec.ByteToMessageDecoder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/netty/channel/ChannelInboundHandlerAdapter."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field MERGE_CUMULATOR:Lio/netty/handler/codec/ByteToMessageDecoder$Cumulator;
       8: putfield      #3                  // Field cumulator:Lio/netty/handler/codec/ByteToMessageDecoder$Cumulator;
      11: aload_0
      12: iconst_0
      13: putfield      #5                  // Field decodeState:B
      16: aload_0
      17: bipush        16
      19: putfield      #6                  // Field discardAfterReads:I
      22: aload_0
      23: invokevirtual #7                  // Method ensureNotSharable:()V
      26: return

  public void setSingleDecode(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field singleDecode:Z
       5: return

  public boolean isSingleDecode();
    Code:
       0: aload_0
       1: getfield      #8                  // Field singleDecode:Z
       4: ireturn

  public void setCumulator(io.netty.handler.codec.ByteToMessageDecoder$Cumulator);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #9                  // class java/lang/NullPointerException
       7: dup
       8: ldc           #10                 // String cumulator
      10: invokespecial #11                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: putfield      #3                  // Field cumulator:Lio/netty/handler/codec/ByteToMessageDecoder$Cumulator;
      19: return

  public void setDiscardAfterReads(int);
    Code:
       0: iload_1
       1: ifgt          14
       4: new           #12                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #13                 // String discardAfterReads must be > 0
      10: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: iload_1
      16: putfield      #6                  // Field discardAfterReads:I
      19: return

  protected int actualReadableBytes();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method internalBuffer:()Lio/netty/buffer/ByteBuf;
       4: invokevirtual #16                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
       7: ireturn

  protected io.netty.buffer.ByteBuf internalBuffer();
    Code:
       0: aload_0
       1: getfield      #17                 // Field cumulation:Lio/netty/buffer/ByteBuf;
       4: ifnull        12
       7: aload_0
       8: getfield      #17                 // Field cumulation:Lio/netty/buffer/ByteBuf;
      11: areturn
      12: getstatic     #18                 // Field io/netty/buffer/Unpooled.EMPTY_BUFFER:Lio/netty/buffer/ByteBuf;
      15: areturn

  public final void handlerRemoved(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #5                  // Field decodeState:B
       4: iconst_1
       5: if_icmpne     14
       8: aload_0
       9: iconst_2
      10: putfield      #5                  // Field decodeState:B
      13: return
      14: aload_0
      15: getfield      #17                 // Field cumulation:Lio/netty/buffer/ByteBuf;
      18: astore_2
      19: aload_2
      20: ifnull        78
      23: aload_0
      24: aconst_null
      25: putfield      #17                 // Field cumulation:Lio/netty/buffer/ByteBuf;
      28: aload_2
      29: invokevirtual #16                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
      32: istore_3
      33: iload_3
      34: ifle          61
      37: aload_2
      38: iload_3
      39: invokevirtual #19                 // Method io/netty/buffer/ByteBuf.readBytes:(I)Lio/netty/buffer/ByteBuf;
      42: astore        4
      44: aload_2
      45: invokevirtual #20                 // Method io/netty/buffer/ByteBuf.release:()Z
      48: pop
      49: aload_1
      50: aload         4
      52: invokeinterface #21,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
      57: pop
      58: goto          66
      61: aload_2
      62: invokevirtual #20                 // Method io/netty/buffer/ByteBuf.release:()Z
      65: pop
      66: aload_0
      67: iconst_0
      68: putfield      #22                 // Field numReads:I
      71: aload_1
      72: invokeinterface #23,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelReadComplete:()Lio/netty/channel/ChannelHandlerContext;
      77: pop
      78: aload_0
      79: aload_1
      80: invokevirtual #24                 // Method handlerRemoved0:(Lio/netty/channel/ChannelHandlerContext;)V
      83: return

  protected void handlerRemoved0(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: return

  public void channelRead(io.netty.channel.ChannelHandlerContext, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_2
       1: instanceof    #25                 // class io/netty/buffer/ByteBuf
       4: ifeq          308
       7: invokestatic  #26                 // Method io/netty/handler/codec/CodecOutputList.newInstance:()Lio/netty/handler/codec/CodecOutputList;
      10: astore_3
      11: aload_2
      12: checkcast     #25                 // class io/netty/buffer/ByteBuf
      15: astore        4
      17: aload_0
      18: aload_0
      19: getfield      #17                 // Field cumulation:Lio/netty/buffer/ByteBuf;
      22: ifnonnull     29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: putfield      #27                 // Field first:Z
      33: aload_0
      34: getfield      #27                 // Field first:Z
      37: ifeq          49
      40: aload_0
      41: aload         4
      43: putfield      #17                 // Field cumulation:Lio/netty/buffer/ByteBuf;
      46: goto          74
      49: aload_0
      50: aload_0
      51: getfield      #3                  // Field cumulator:Lio/netty/handler/codec/ByteToMessageDecoder$Cumulator;
      54: aload_1
      55: invokeinterface #28,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.alloc:()Lio/netty/buffer/ByteBufAllocator;
      60: aload_0
      61: getfield      #17                 // Field cumulation:Lio/netty/buffer/ByteBuf;
      64: aload         4
      66: invokeinterface #29,  4           // InterfaceMethod io/netty/handler/codec/ByteToMessageDecoder$Cumulator.cumulate:(Lio/netty/buffer/ByteBufAllocator;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;
      71: putfield      #17                 // Field cumulation:Lio/netty/buffer/ByteBuf;
      74: aload_0
      75: aload_1
      76: aload_0
      77: getfield      #17                 // Field cumulation:Lio/netty/buffer/ByteBuf;
      80: aload_3
      81: invokevirtual #30                 // Method callDecode:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V
      84: aload_0
      85: getfield      #17                 // Field cumulation:Lio/netty/buffer/ByteBuf;
      88: ifnull        122
      91: aload_0
      92: getfield      #17                 // Field cumulation:Lio/netty/buffer/ByteBuf;
      95: invokevirtual #31                 // Method io/netty/buffer/ByteBuf.isReadable:()Z
      98: ifne          122
     101: aload_0
     102: iconst_0
     103: putfield      #22                 // Field numReads:I
     106: aload_0
     107: getfield      #17                 // Field cumulation:Lio/netty/buffer/ByteBuf;
     110: invokevirtual #20                 // Method io/netty/buffer/ByteBuf.release:()Z
     113: pop
     114: aload_0
     115: aconst_null
     116: putfield      #17                 // Field cumulation:Lio/netty/buffer/ByteBuf;
     119: goto          149
     122: aload_0
     123: dup
     124: getfield      #22                 // Field numReads:I
     127: iconst_1
     128: iadd
     129: dup_x1
     130: putfield      #22                 // Field numReads:I
     133: aload_0
     134: getfield      #6                  // Field discardAfterReads:I
     137: if_icmplt     149
     140: aload_0
     141: iconst_0
     142: putfield      #22                 // Field numReads:I
     145: aload_0
     146: invokevirtual #32                 // Method discardSomeReadBytes:()V
     149: aload_3
     150: invokevirtual #33                 // Method io/netty/handler/codec/CodecOutputList.size:()I
     153: istore        4
     155: aload_0
     156: aload_3
     157: invokevirtual #34                 // Method io/netty/handler/codec/CodecOutputList.insertSinceRecycled:()Z
     160: ifne          167
     163: iconst_1
     164: goto          168
     167: iconst_0
     168: putfield      #35                 // Field decodeWasNull:Z
     171: aload_1
     172: aload_3
     173: iload         4
     175: invokestatic  #36                 // Method fireChannelRead:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/handler/codec/CodecOutputList;I)V
     178: aload_3
     179: invokevirtual #37                 // Method io/netty/handler/codec/CodecOutputList.recycle:()V
     182: goto          305
     185: astore        4
     187: aload         4
     189: athrow
     190: astore        4
     192: new           #38                 // class io/netty/handler/codec/DecoderException
     195: dup
     196: aload         4
     198: invokespecial #40                 // Method io/netty/handler/codec/DecoderException."<init>":(Ljava/lang/Throwable;)V
     201: athrow
     202: astore        5
     204: aload_0
     205: getfield      #17                 // Field cumulation:Lio/netty/buffer/ByteBuf;
     208: ifnull        242
     211: aload_0
     212: getfield      #17                 // Field cumulation:Lio/netty/buffer/ByteBuf;
     215: invokevirtual #31                 // Method io/netty/buffer/ByteBuf.isReadable:()Z
     218: ifne          242
     221: aload_0
     222: iconst_0
     223: putfield      #22                 // Field numReads:I
     226: aload_0
     227: getfield      #17                 // Field cumulation:Lio/netty/buffer/ByteBuf;
     230: invokevirtual #20                 // Method io/netty/buffer/ByteBuf.release:()Z
     233: pop
     234: aload_0
     235: aconst_null
     236: putfield      #17                 // Field cumulation:Lio/netty/buffer/ByteBuf;
     239: goto          269
     242: aload_0
     243: dup
     244: getfield      #22                 // Field numReads:I
     247: iconst_1
     248: iadd
     249: dup_x1
     250: putfield      #22                 // Field numReads:I
     253: aload_0
     254: getfield      #6                  // Field discardAfterReads:I
     257: if_icmplt     269
     260: aload_0
     261: iconst_0
     262: putfield      #22                 // Field numReads:I
     265: aload_0
     266: invokevirtual #32                 // Method discardSomeReadBytes:()V
     269: aload_3
     270: invokevirtual #33                 // Method io/netty/handler/codec/CodecOutputList.size:()I
     273: istore        6
     275: aload_0
     276: aload_3
     277: invokevirtual #34                 // Method io/netty/handler/codec/CodecOutputList.insertSinceRecycled:()Z
     280: ifne          287
     283: iconst_1
     284: goto          288
     287: iconst_0
     288: putfield      #35                 // Field decodeWasNull:Z
     291: aload_1
     292: aload_3
     293: iload         6
     295: invokestatic  #36                 // Method fireChannelRead:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/handler/codec/CodecOutputList;I)V
     298: aload_3
     299: invokevirtual #37                 // Method io/netty/handler/codec/CodecOutputList.recycle:()V
     302: aload         5
     304: athrow
     305: goto          316
     308: aload_1
     309: aload_2
     310: invokeinterface #21,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
     315: pop
     316: return
    Exception table:
       from    to  target type
          11    84   185   Class io/netty/handler/codec/DecoderException
          11    84   190   Class java/lang/Throwable
          11    84   202   any
         185   204   202   any

  static void fireChannelRead(io.netty.channel.ChannelHandlerContext, java.util.List<java.lang.Object>, int);
    Code:
       0: aload_1
       1: instanceof    #41                 // class io/netty/handler/codec/CodecOutputList
       4: ifeq          19
       7: aload_0
       8: aload_1
       9: checkcast     #41                 // class io/netty/handler/codec/CodecOutputList
      12: iload_2
      13: invokestatic  #36                 // Method fireChannelRead:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/handler/codec/CodecOutputList;I)V
      16: goto          46
      19: iconst_0
      20: istore_3
      21: iload_3
      22: iload_2
      23: if_icmpge     46
      26: aload_0
      27: aload_1
      28: iload_3
      29: invokeinterface #42,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      34: invokeinterface #21,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
      39: pop
      40: iinc          3, 1
      43: goto          21
      46: return

  static void fireChannelRead(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.CodecOutputList, int);
    Code:
       0: iconst_0
       1: istore_3
       2: iload_3
       3: iload_2
       4: if_icmpge     25
       7: aload_0
       8: aload_1
       9: iload_3
      10: invokevirtual #43                 // Method io/netty/handler/codec/CodecOutputList.getUnsafe:(I)Ljava/lang/Object;
      13: invokeinterface #21,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
      18: pop
      19: iinc          3, 1
      22: goto          2
      25: return

  public void channelReadComplete(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #22                 // Field numReads:I
       5: aload_0
       6: invokevirtual #32                 // Method discardSomeReadBytes:()V
       9: aload_0
      10: getfield      #35                 // Field decodeWasNull:Z
      13: ifeq          47
      16: aload_0
      17: iconst_0
      18: putfield      #35                 // Field decodeWasNull:Z
      21: aload_1
      22: invokeinterface #44,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      27: invokeinterface #45,  1           // InterfaceMethod io/netty/channel/Channel.config:()Lio/netty/channel/ChannelConfig;
      32: invokeinterface #46,  1           // InterfaceMethod io/netty/channel/ChannelConfig.isAutoRead:()Z
      37: ifne          47
      40: aload_1
      41: invokeinterface #47,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.read:()Lio/netty/channel/ChannelHandlerContext;
      46: pop
      47: aload_1
      48: invokeinterface #23,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelReadComplete:()Lio/netty/channel/ChannelHandlerContext;
      53: pop
      54: return

  protected final void discardSomeReadBytes();
    Code:
       0: aload_0
       1: getfield      #17                 // Field cumulation:Lio/netty/buffer/ByteBuf;
       4: ifnull        33
       7: aload_0
       8: getfield      #27                 // Field first:Z
      11: ifne          33
      14: aload_0
      15: getfield      #17                 // Field cumulation:Lio/netty/buffer/ByteBuf;
      18: invokevirtual #48                 // Method io/netty/buffer/ByteBuf.refCnt:()I
      21: iconst_1
      22: if_icmpne     33
      25: aload_0
      26: getfield      #17                 // Field cumulation:Lio/netty/buffer/ByteBuf;
      29: invokevirtual #49                 // Method io/netty/buffer/ByteBuf.discardSomeReadBytes:()Lio/netty/buffer/ByteBuf;
      32: pop
      33: return

  public void channelInactive(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #50                 // Method channelInputClosed:(Lio/netty/channel/ChannelHandlerContext;Z)V
       6: return

  public void userEventTriggered(io.netty.channel.ChannelHandlerContext, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_2
       1: instanceof    #51                 // class io/netty/channel/socket/ChannelInputShutdownEvent
       4: ifeq          13
       7: aload_0
       8: aload_1
       9: iconst_0
      10: invokespecial #50                 // Method channelInputClosed:(Lio/netty/channel/ChannelHandlerContext;Z)V
      13: aload_0
      14: aload_1
      15: aload_2
      16: invokespecial #52                 // Method io/netty/channel/ChannelInboundHandlerAdapter.userEventTriggered:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V
      19: return

  private void channelInputClosed(io.netty.channel.ChannelHandlerContext, boolean) throws java.lang.Exception;
    Code:
       0: invokestatic  #26                 // Method io/netty/handler/codec/CodecOutputList.newInstance:()Lio/netty/handler/codec/CodecOutputList;
       3: astore_3
       4: aload_0
       5: aload_1
       6: aload_3
       7: invokevirtual #53                 // Method channelInputClosed:(Lio/netty/channel/ChannelHandlerContext;Ljava/util/List;)V
      10: aload_0
      11: getfield      #17                 // Field cumulation:Lio/netty/buffer/ByteBuf;
      14: ifnull        30
      17: aload_0
      18: getfield      #17                 // Field cumulation:Lio/netty/buffer/ByteBuf;
      21: invokevirtual #20                 // Method io/netty/buffer/ByteBuf.release:()Z
      24: pop
      25: aload_0
      26: aconst_null
      27: putfield      #17                 // Field cumulation:Lio/netty/buffer/ByteBuf;
      30: aload_3
      31: invokevirtual #33                 // Method io/netty/handler/codec/CodecOutputList.size:()I
      34: istore        4
      36: aload_1
      37: aload_3
      38: iload         4
      40: invokestatic  #36                 // Method fireChannelRead:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/handler/codec/CodecOutputList;I)V
      43: iload         4
      45: ifle          55
      48: aload_1
      49: invokeinterface #23,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelReadComplete:()Lio/netty/channel/ChannelHandlerContext;
      54: pop
      55: iload_2
      56: ifeq          66
      59: aload_1
      60: invokeinterface #54,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelInactive:()Lio/netty/channel/ChannelHandlerContext;
      65: pop
      66: aload_3
      67: invokevirtual #37                 // Method io/netty/handler/codec/CodecOutputList.recycle:()V
      70: goto          82
      73: astore        5
      75: aload_3
      76: invokevirtual #37                 // Method io/netty/handler/codec/CodecOutputList.recycle:()V
      79: aload         5
      81: athrow
      82: goto          179
      85: astore        4
      87: aload         4
      89: athrow
      90: astore        4
      92: new           #38                 // class io/netty/handler/codec/DecoderException
      95: dup
      96: aload         4
      98: invokespecial #40                 // Method io/netty/handler/codec/DecoderException."<init>":(Ljava/lang/Throwable;)V
     101: athrow
     102: astore        6
     104: aload_0
     105: getfield      #17                 // Field cumulation:Lio/netty/buffer/ByteBuf;
     108: ifnull        124
     111: aload_0
     112: getfield      #17                 // Field cumulation:Lio/netty/buffer/ByteBuf;
     115: invokevirtual #20                 // Method io/netty/buffer/ByteBuf.release:()Z
     118: pop
     119: aload_0
     120: aconst_null
     121: putfield      #17                 // Field cumulation:Lio/netty/buffer/ByteBuf;
     124: aload_3
     125: invokevirtual #33                 // Method io/netty/handler/codec/CodecOutputList.size:()I
     128: istore        7
     130: aload_1
     131: aload_3
     132: iload         7
     134: invokestatic  #36                 // Method fireChannelRead:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/handler/codec/CodecOutputList;I)V
     137: iload         7
     139: ifle          149
     142: aload_1
     143: invokeinterface #23,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelReadComplete:()Lio/netty/channel/ChannelHandlerContext;
     148: pop
     149: iload_2
     150: ifeq          160
     153: aload_1
     154: invokeinterface #54,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelInactive:()Lio/netty/channel/ChannelHandlerContext;
     159: pop
     160: aload_3
     161: invokevirtual #37                 // Method io/netty/handler/codec/CodecOutputList.recycle:()V
     164: goto          176
     167: astore        8
     169: aload_3
     170: invokevirtual #37                 // Method io/netty/handler/codec/CodecOutputList.recycle:()V
     173: aload         8
     175: athrow
     176: aload         6
     178: athrow
     179: return
    Exception table:
       from    to  target type
          10    66    73   any
          73    75    73   any
           4    10    85   Class io/netty/handler/codec/DecoderException
           4    10    90   Class java/lang/Exception
           4    10   102   any
         104   160   167   any
         167   169   167   any
          85   104   102   any

  void channelInputClosed(io.netty.channel.ChannelHandlerContext, java.util.List<java.lang.Object>) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #17                 // Field cumulation:Lio/netty/buffer/ByteBuf;
       4: ifnull        30
       7: aload_0
       8: aload_1
       9: aload_0
      10: getfield      #17                 // Field cumulation:Lio/netty/buffer/ByteBuf;
      13: aload_2
      14: invokevirtual #30                 // Method callDecode:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V
      17: aload_0
      18: aload_1
      19: aload_0
      20: getfield      #17                 // Field cumulation:Lio/netty/buffer/ByteBuf;
      23: aload_2
      24: invokevirtual #56                 // Method decodeLast:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V
      27: goto          39
      30: aload_0
      31: aload_1
      32: getstatic     #18                 // Field io/netty/buffer/Unpooled.EMPTY_BUFFER:Lio/netty/buffer/ByteBuf;
      35: aload_2
      36: invokevirtual #56                 // Method decodeLast:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V
      39: return

  protected void callDecode(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, java.util.List<java.lang.Object>);
    Code:
       0: aload_2
       1: invokevirtual #31                 // Method io/netty/buffer/ByteBuf.isReadable:()Z
       4: ifeq          151
       7: aload_3
       8: invokeinterface #57,  1           // InterfaceMethod java/util/List.size:()I
      13: istore        4
      15: iload         4
      17: ifle          48
      20: aload_1
      21: aload_3
      22: iload         4
      24: invokestatic  #58                 // Method fireChannelRead:(Lio/netty/channel/ChannelHandlerContext;Ljava/util/List;I)V
      27: aload_3
      28: invokeinterface #59,  1           // InterfaceMethod java/util/List.clear:()V
      33: aload_1
      34: invokeinterface #60,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.isRemoved:()Z
      39: ifeq          45
      42: goto          151
      45: iconst_0
      46: istore        4
      48: aload_2
      49: invokevirtual #16                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
      52: istore        5
      54: aload_0
      55: aload_1
      56: aload_2
      57: aload_3
      58: invokevirtual #61                 // Method decodeRemovalReentryProtection:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V
      61: aload_1
      62: invokeinterface #60,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.isRemoved:()Z
      67: ifeq          73
      70: goto          151
      73: iload         4
      75: aload_3
      76: invokeinterface #57,  1           // InterfaceMethod java/util/List.size:()I
      81: if_icmpne     96
      84: iload         5
      86: aload_2
      87: invokevirtual #16                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
      90: if_icmpne     0
      93: goto          151
      96: iload         5
      98: aload_2
      99: invokevirtual #16                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
     102: if_icmpne     138
     105: new           #38                 // class io/netty/handler/codec/DecoderException
     108: dup
     109: new           #62                 // class java/lang/StringBuilder
     112: dup
     113: invokespecial #63                 // Method java/lang/StringBuilder."<init>":()V
     116: aload_0
     117: invokevirtual #64                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     120: invokestatic  #65                 // Method io/netty/util/internal/StringUtil.simpleClassName:(Ljava/lang/Class;)Ljava/lang/String;
     123: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: ldc           #67                 // String .decode() did not read anything but decoded a message.
     128: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     134: invokespecial #69                 // Method io/netty/handler/codec/DecoderException."<init>":(Ljava/lang/String;)V
     137: athrow
     138: aload_0
     139: invokevirtual #70                 // Method isSingleDecode:()Z
     142: ifeq          148
     145: goto          151
     148: goto          0
     151: goto          171
     154: astore        4
     156: aload         4
     158: athrow
     159: astore        4
     161: new           #38                 // class io/netty/handler/codec/DecoderException
     164: dup
     165: aload         4
     167: invokespecial #40                 // Method io/netty/handler/codec/DecoderException."<init>":(Ljava/lang/Throwable;)V
     170: athrow
     171: return
    Exception table:
       from    to  target type
           0   151   154   Class io/netty/handler/codec/DecoderException
           0   151   159   Class java/lang/Throwable

  protected abstract void decode(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, java.util.List<java.lang.Object>) throws java.lang.Exception;

  final void decodeRemovalReentryProtection(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, java.util.List<java.lang.Object>) throws java.lang.Exception;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #5                  // Field decodeState:B
       5: aload_0
       6: aload_1
       7: aload_2
       8: aload_3
       9: invokevirtual #71                 // Method decode:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V
      12: aload_0
      13: getfield      #5                  // Field decodeState:B
      16: iconst_2
      17: if_icmpne     24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: istore        4
      27: aload_0
      28: iconst_0
      29: putfield      #5                  // Field decodeState:B
      32: iload         4
      34: ifeq          42
      37: aload_0
      38: aload_1
      39: invokevirtual #72                 // Method handlerRemoved:(Lio/netty/channel/ChannelHandlerContext;)V
      42: goto          80
      45: astore        5
      47: aload_0
      48: getfield      #5                  // Field decodeState:B
      51: iconst_2
      52: if_icmpne     59
      55: iconst_1
      56: goto          60
      59: iconst_0
      60: istore        6
      62: aload_0
      63: iconst_0
      64: putfield      #5                  // Field decodeState:B
      67: iload         6
      69: ifeq          77
      72: aload_0
      73: aload_1
      74: invokevirtual #72                 // Method handlerRemoved:(Lio/netty/channel/ChannelHandlerContext;)V
      77: aload         5
      79: athrow
      80: return
    Exception table:
       from    to  target type
           5    12    45   any
          45    47    45   any

  protected void decodeLast(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, java.util.List<java.lang.Object>) throws java.lang.Exception;
    Code:
       0: aload_2
       1: invokevirtual #31                 // Method io/netty/buffer/ByteBuf.isReadable:()Z
       4: ifeq          14
       7: aload_0
       8: aload_1
       9: aload_2
      10: aload_3
      11: invokevirtual #61                 // Method decodeRemovalReentryProtection:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V
      14: return

  static io.netty.buffer.ByteBuf expandCumulation(io.netty.buffer.ByteBufAllocator, io.netty.buffer.ByteBuf, int);
    Code:
       0: aload_1
       1: astore_3
       2: aload_0
       3: aload_3
       4: invokevirtual #16                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
       7: iload_2
       8: iadd
       9: invokeinterface #73,  2           // InterfaceMethod io/netty/buffer/ByteBufAllocator.buffer:(I)Lio/netty/buffer/ByteBuf;
      14: astore_1
      15: aload_1
      16: aload_3
      17: invokevirtual #74                 // Method io/netty/buffer/ByteBuf.writeBytes:(Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;
      20: pop
      21: aload_3
      22: invokevirtual #20                 // Method io/netty/buffer/ByteBuf.release:()Z
      25: pop
      26: aload_1
      27: areturn

  static {};
    Code:
       0: new           #75                 // class io/netty/handler/codec/ByteToMessageDecoder$1
       3: dup
       4: invokespecial #76                 // Method io/netty/handler/codec/ByteToMessageDecoder$1."<init>":()V
       7: putstatic     #2                  // Field MERGE_CUMULATOR:Lio/netty/handler/codec/ByteToMessageDecoder$Cumulator;
      10: new           #77                 // class io/netty/handler/codec/ByteToMessageDecoder$2
      13: dup
      14: invokespecial #78                 // Method io/netty/handler/codec/ByteToMessageDecoder$2."<init>":()V
      17: putstatic     #79                 // Field COMPOSITE_CUMULATOR:Lio/netty/handler/codec/ByteToMessageDecoder$Cumulator;
      20: return
}
