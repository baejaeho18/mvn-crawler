Compiled from "Bzip2BlockDecompressor.java"
final class io.netty.handler.codec.compression.Bzip2BlockDecompressor {
  private final io.netty.handler.codec.compression.Bzip2BitReader reader;

  private final io.netty.handler.codec.compression.Crc32 crc;

  private final int blockCRC;

  private final boolean blockRandomised;

  int huffmanEndOfBlockSymbol;

  int huffmanInUse16;

  final byte[] huffmanSymbolMap;

  private final int[] bwtByteCounts;

  private final byte[] bwtBlock;

  private final int bwtStartPointer;

  private int[] bwtMergedPointers;

  private int bwtCurrentMergedPointer;

  private int bwtBlockLength;

  private int bwtBytesDecoded;

  private int rleLastDecodedByte;

  private int rleAccumulator;

  private int rleRepeat;

  private int randomIndex;

  private int randomCount;

  private final io.netty.handler.codec.compression.Bzip2MoveToFrontTable symbolMTF;

  private int repeatCount;

  private int repeatIncrement;

  private int mtfValue;

  io.netty.handler.codec.compression.Bzip2BlockDecompressor(int, int, boolean, int, io.netty.handler.codec.compression.Bzip2BitReader);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class io/netty/handler/codec/compression/Crc32
       8: dup
       9: invokespecial #4                  // Method io/netty/handler/codec/compression/Crc32."<init>":()V
      12: putfield      #5                  // Field crc:Lio/netty/handler/codec/compression/Crc32;
      15: aload_0
      16: sipush        256
      19: newarray       byte
      21: putfield      #6                  // Field huffmanSymbolMap:[B
      24: aload_0
      25: sipush        256
      28: newarray       int
      30: putfield      #7                  // Field bwtByteCounts:[I
      33: aload_0
      34: iconst_m1
      35: putfield      #8                  // Field rleLastDecodedByte:I
      38: aload_0
      39: iconst_0
      40: invokestatic  #9                  // Method io/netty/handler/codec/compression/Bzip2Rand.rNums:(I)I
      43: iconst_1
      44: isub
      45: putfield      #10                 // Field randomCount:I
      48: aload_0
      49: new           #11                 // class io/netty/handler/codec/compression/Bzip2MoveToFrontTable
      52: dup
      53: invokespecial #12                 // Method io/netty/handler/codec/compression/Bzip2MoveToFrontTable."<init>":()V
      56: putfield      #13                 // Field symbolMTF:Lio/netty/handler/codec/compression/Bzip2MoveToFrontTable;
      59: aload_0
      60: iconst_1
      61: putfield      #14                 // Field repeatIncrement:I
      64: aload_0
      65: iload_1
      66: newarray       byte
      68: putfield      #15                 // Field bwtBlock:[B
      71: aload_0
      72: iload_2
      73: putfield      #16                 // Field blockCRC:I
      76: aload_0
      77: iload_3
      78: putfield      #17                 // Field blockRandomised:Z
      81: aload_0
      82: iload         4
      84: putfield      #18                 // Field bwtStartPointer:I
      87: aload_0
      88: aload         5
      90: putfield      #19                 // Field reader:Lio/netty/handler/codec/compression/Bzip2BitReader;
      93: return

  boolean decodeHuffmanData(io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder);
    Code:
       0: aload_0
       1: getfield      #19                 // Field reader:Lio/netty/handler/codec/compression/Bzip2BitReader;
       4: astore_2
       5: aload_0
       6: getfield      #15                 // Field bwtBlock:[B
       9: astore_3
      10: aload_0
      11: getfield      #6                  // Field huffmanSymbolMap:[B
      14: astore        4
      16: aload_0
      17: getfield      #15                 // Field bwtBlock:[B
      20: arraylength
      21: istore        5
      23: aload_0
      24: getfield      #20                 // Field huffmanEndOfBlockSymbol:I
      27: istore        6
      29: aload_0
      30: getfield      #7                  // Field bwtByteCounts:[I
      33: astore        7
      35: aload_0
      36: getfield      #13                 // Field symbolMTF:Lio/netty/handler/codec/compression/Bzip2MoveToFrontTable;
      39: astore        8
      41: aload_0
      42: getfield      #21                 // Field bwtBlockLength:I
      45: istore        9
      47: aload_0
      48: getfield      #22                 // Field repeatCount:I
      51: istore        10
      53: aload_0
      54: getfield      #14                 // Field repeatIncrement:I
      57: istore        11
      59: aload_0
      60: getfield      #23                 // Field mtfValue:I
      63: istore        12
      65: aload_2
      66: bipush        23
      68: invokevirtual #24                 // Method io/netty/handler/codec/compression/Bzip2BitReader.hasReadableBits:(I)Z
      71: ifne          100
      74: aload_0
      75: iload         9
      77: putfield      #21                 // Field bwtBlockLength:I
      80: aload_0
      81: iload         10
      83: putfield      #22                 // Field repeatCount:I
      86: aload_0
      87: iload         11
      89: putfield      #14                 // Field repeatIncrement:I
      92: aload_0
      93: iload         12
      95: putfield      #23                 // Field mtfValue:I
      98: iconst_0
      99: ireturn
     100: aload_1
     101: invokevirtual #25                 // Method io/netty/handler/codec/compression/Bzip2HuffmanStageDecoder.nextSymbol:()I
     104: istore        13
     106: iload         13
     108: ifne          127
     111: iload         10
     113: iload         11
     115: iadd
     116: istore        10
     118: iload         11
     120: iconst_1
     121: ishl
     122: istore        11
     124: goto          294
     127: iload         13
     129: iconst_1
     130: if_icmpne     151
     133: iload         10
     135: iload         11
     137: iconst_1
     138: ishl
     139: iadd
     140: istore        10
     142: iload         11
     144: iconst_1
     145: ishl
     146: istore        11
     148: goto          294
     151: iload         10
     153: ifle          223
     156: iload         9
     158: iload         10
     160: iadd
     161: iload         5
     163: if_icmple     176
     166: new           #26                 // class io/netty/handler/codec/compression/DecompressionException
     169: dup
     170: ldc           #27                 // String block exceeds declared block size
     172: invokespecial #28                 // Method io/netty/handler/codec/compression/DecompressionException."<init>":(Ljava/lang/String;)V
     175: athrow
     176: aload         4
     178: iload         12
     180: baload
     181: istore        14
     183: aload         7
     185: iload         14
     187: sipush        255
     190: iand
     191: dup2
     192: iaload
     193: iload         10
     195: iadd
     196: iastore
     197: iinc          10, -1
     200: iload         10
     202: iflt          217
     205: aload_3
     206: iload         9
     208: iinc          9, 1
     211: iload         14
     213: bastore
     214: goto          197
     217: iconst_0
     218: istore        10
     220: iconst_1
     221: istore        11
     223: iload         13
     225: iload         6
     227: if_icmpne     233
     230: goto          297
     233: iload         9
     235: iload         5
     237: if_icmplt     250
     240: new           #26                 // class io/netty/handler/codec/compression/DecompressionException
     243: dup
     244: ldc           #27                 // String block exceeds declared block size
     246: invokespecial #28                 // Method io/netty/handler/codec/compression/DecompressionException."<init>":(Ljava/lang/String;)V
     249: athrow
     250: aload         8
     252: iload         13
     254: iconst_1
     255: isub
     256: invokevirtual #29                 // Method io/netty/handler/codec/compression/Bzip2MoveToFrontTable.indexToFront:(I)B
     259: sipush        255
     262: iand
     263: istore        12
     265: aload         4
     267: iload         12
     269: baload
     270: istore        14
     272: aload         7
     274: iload         14
     276: sipush        255
     279: iand
     280: dup2
     281: iaload
     282: iconst_1
     283: iadd
     284: iastore
     285: aload_3
     286: iload         9
     288: iinc          9, 1
     291: iload         14
     293: bastore
     294: goto          65
     297: aload_0
     298: iload         9
     300: putfield      #21                 // Field bwtBlockLength:I
     303: aload_0
     304: invokespecial #30                 // Method initialiseInverseBWT:()V
     307: iconst_1
     308: ireturn

  private void initialiseInverseBWT();
    Code:
       0: aload_0
       1: getfield      #18                 // Field bwtStartPointer:I
       4: istore_1
       5: aload_0
       6: getfield      #15                 // Field bwtBlock:[B
       9: astore_2
      10: aload_0
      11: getfield      #21                 // Field bwtBlockLength:I
      14: newarray       int
      16: astore_3
      17: sipush        256
      20: newarray       int
      22: astore        4
      24: iload_1
      25: iflt          36
      28: iload_1
      29: aload_0
      30: getfield      #21                 // Field bwtBlockLength:I
      33: if_icmplt     46
      36: new           #26                 // class io/netty/handler/codec/compression/DecompressionException
      39: dup
      40: ldc           #31                 // String start pointer invalid
      42: invokespecial #28                 // Method io/netty/handler/codec/compression/DecompressionException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: aload_0
      47: getfield      #7                  // Field bwtByteCounts:[I
      50: iconst_0
      51: aload         4
      53: iconst_1
      54: sipush        255
      57: invokestatic  #32                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      60: iconst_2
      61: istore        5
      63: iload         5
      65: sipush        255
      68: if_icmpgt     92
      71: aload         4
      73: iload         5
      75: dup2
      76: iaload
      77: aload         4
      79: iload         5
      81: iconst_1
      82: isub
      83: iaload
      84: iadd
      85: iastore
      86: iinc          5, 1
      89: goto          63
      92: iconst_0
      93: istore        5
      95: iload         5
      97: aload_0
      98: getfield      #21                 // Field bwtBlockLength:I
     101: if_icmpge     140
     104: aload_2
     105: iload         5
     107: baload
     108: sipush        255
     111: iand
     112: istore        6
     114: aload_3
     115: aload         4
     117: iload         6
     119: dup2
     120: iaload
     121: dup_x2
     122: iconst_1
     123: iadd
     124: iastore
     125: iload         5
     127: bipush        8
     129: ishl
     130: iload         6
     132: iadd
     133: iastore
     134: iinc          5, 1
     137: goto          95
     140: aload_0
     141: aload_3
     142: putfield      #33                 // Field bwtMergedPointers:[I
     145: aload_0
     146: aload_3
     147: iload_1
     148: iaload
     149: putfield      #34                 // Field bwtCurrentMergedPointer:I
     152: return

  public int read();
    Code:
       0: aload_0
       1: getfield      #35                 // Field rleRepeat:I
       4: iconst_1
       5: if_icmpge     120
       8: aload_0
       9: getfield      #36                 // Field bwtBytesDecoded:I
      12: aload_0
      13: getfield      #21                 // Field bwtBlockLength:I
      16: if_icmpne     21
      19: iconst_m1
      20: ireturn
      21: aload_0
      22: invokespecial #37                 // Method decodeNextBWTByte:()I
      25: istore_1
      26: iload_1
      27: aload_0
      28: getfield      #8                  // Field rleLastDecodedByte:I
      31: if_icmpeq     60
      34: aload_0
      35: iload_1
      36: putfield      #8                  // Field rleLastDecodedByte:I
      39: aload_0
      40: iconst_1
      41: putfield      #35                 // Field rleRepeat:I
      44: aload_0
      45: iconst_1
      46: putfield      #38                 // Field rleAccumulator:I
      49: aload_0
      50: getfield      #5                  // Field crc:Lio/netty/handler/codec/compression/Crc32;
      53: iload_1
      54: invokevirtual #39                 // Method io/netty/handler/codec/compression/Crc32.updateCRC:(I)V
      57: goto          117
      60: aload_0
      61: dup
      62: getfield      #38                 // Field rleAccumulator:I
      65: iconst_1
      66: iadd
      67: dup_x1
      68: putfield      #38                 // Field rleAccumulator:I
      71: iconst_4
      72: if_icmpne     104
      75: aload_0
      76: invokespecial #37                 // Method decodeNextBWTByte:()I
      79: iconst_1
      80: iadd
      81: istore_2
      82: aload_0
      83: iload_2
      84: putfield      #35                 // Field rleRepeat:I
      87: aload_0
      88: iconst_0
      89: putfield      #38                 // Field rleAccumulator:I
      92: aload_0
      93: getfield      #5                  // Field crc:Lio/netty/handler/codec/compression/Crc32;
      96: iload_1
      97: iload_2
      98: invokevirtual #40                 // Method io/netty/handler/codec/compression/Crc32.updateCRC:(II)V
     101: goto          117
     104: aload_0
     105: iconst_1
     106: putfield      #35                 // Field rleRepeat:I
     109: aload_0
     110: getfield      #5                  // Field crc:Lio/netty/handler/codec/compression/Crc32;
     113: iload_1
     114: invokevirtual #39                 // Method io/netty/handler/codec/compression/Crc32.updateCRC:(I)V
     117: goto          0
     120: aload_0
     121: dup
     122: getfield      #35                 // Field rleRepeat:I
     125: iconst_1
     126: isub
     127: putfield      #35                 // Field rleRepeat:I
     130: aload_0
     131: getfield      #8                  // Field rleLastDecodedByte:I
     134: ireturn

  private int decodeNextBWTByte();
    Code:
       0: aload_0
       1: getfield      #34                 // Field bwtCurrentMergedPointer:I
       4: istore_1
       5: iload_1
       6: sipush        255
       9: iand
      10: istore_2
      11: aload_0
      12: aload_0
      13: getfield      #33                 // Field bwtMergedPointers:[I
      16: iload_1
      17: bipush        8
      19: iushr
      20: iaload
      21: putfield      #34                 // Field bwtCurrentMergedPointer:I
      24: aload_0
      25: getfield      #17                 // Field blockRandomised:Z
      28: ifeq          74
      31: aload_0
      32: dup
      33: getfield      #10                 // Field randomCount:I
      36: iconst_1
      37: isub
      38: dup_x1
      39: putfield      #10                 // Field randomCount:I
      42: ifne          74
      45: iload_2
      46: iconst_1
      47: ixor
      48: istore_2
      49: aload_0
      50: aload_0
      51: getfield      #41                 // Field randomIndex:I
      54: iconst_1
      55: iadd
      56: sipush        512
      59: irem
      60: putfield      #41                 // Field randomIndex:I
      63: aload_0
      64: aload_0
      65: getfield      #41                 // Field randomIndex:I
      68: invokestatic  #9                  // Method io/netty/handler/codec/compression/Bzip2Rand.rNums:(I)I
      71: putfield      #10                 // Field randomCount:I
      74: aload_0
      75: dup
      76: getfield      #36                 // Field bwtBytesDecoded:I
      79: iconst_1
      80: iadd
      81: putfield      #36                 // Field bwtBytesDecoded:I
      84: iload_2
      85: ireturn

  public int blockLength();
    Code:
       0: aload_0
       1: getfield      #21                 // Field bwtBlockLength:I
       4: ireturn

  int checkCRC();
    Code:
       0: aload_0
       1: getfield      #5                  // Field crc:Lio/netty/handler/codec/compression/Crc32;
       4: invokevirtual #42                 // Method io/netty/handler/codec/compression/Crc32.getCRC:()I
       7: istore_1
       8: aload_0
       9: getfield      #16                 // Field blockCRC:I
      12: iload_1
      13: if_icmpeq     26
      16: new           #26                 // class io/netty/handler/codec/compression/DecompressionException
      19: dup
      20: ldc           #43                 // String block CRC error
      22: invokespecial #28                 // Method io/netty/handler/codec/compression/DecompressionException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: iload_1
      27: ireturn
}
