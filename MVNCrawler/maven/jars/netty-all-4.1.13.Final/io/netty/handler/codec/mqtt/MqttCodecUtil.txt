Compiled from "MqttCodecUtil.java"
final class io.netty.handler.codec.mqtt.MqttCodecUtil {
  private static final char[] TOPIC_WILDCARDS;

  private static final int MIN_CLIENT_ID_LENGTH;

  private static final int MAX_CLIENT_ID_LENGTH;

  static boolean isValidPublishTopicName(java.lang.String);
    Code:
       0: getstatic     #1                  // Field TOPIC_WILDCARDS:[C
       3: astore_1
       4: aload_1
       5: arraylength
       6: istore_2
       7: iconst_0
       8: istore_3
       9: iload_3
      10: iload_2
      11: if_icmpge     36
      14: aload_1
      15: iload_3
      16: caload
      17: istore        4
      19: aload_0
      20: iload         4
      22: invokevirtual #2                  // Method java/lang/String.indexOf:(I)I
      25: iflt          30
      28: iconst_0
      29: ireturn
      30: iinc          3, 1
      33: goto          9
      36: iconst_1
      37: ireturn

  static boolean isValidMessageId(int);
    Code:
       0: iload_0
       1: ifeq          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ireturn

  static boolean isValidClientId(io.netty.handler.codec.mqtt.MqttVersion, java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #3                  // Field io/netty/handler/codec/mqtt/MqttVersion.MQTT_3_1:Lio/netty/handler/codec/mqtt/MqttVersion;
       4: if_acmpne     34
       7: aload_1
       8: ifnull        32
      11: aload_1
      12: invokevirtual #4                  // Method java/lang/String.length:()I
      15: iconst_1
      16: if_icmplt     32
      19: aload_1
      20: invokevirtual #4                  // Method java/lang/String.length:()I
      23: bipush        23
      25: if_icmpgt     32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn
      34: aload_0
      35: getstatic     #6                  // Field io/netty/handler/codec/mqtt/MqttVersion.MQTT_3_1_1:Lio/netty/handler/codec/mqtt/MqttVersion;
      38: if_acmpne     51
      41: aload_1
      42: ifnull        49
      45: iconst_1
      46: goto          50
      49: iconst_0
      50: ireturn
      51: new           #7                  // class java/lang/IllegalArgumentException
      54: dup
      55: new           #8                  // class java/lang/StringBuilder
      58: dup
      59: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      62: aload_0
      63: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      66: ldc           #11                 // String  is unknown mqtt version
      68: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      74: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      77: athrow

  static io.netty.handler.codec.mqtt.MqttFixedHeader validateFixedHeader(io.netty.handler.codec.mqtt.MqttFixedHeader);
    Code:
       0: getstatic     #15                 // Field io/netty/handler/codec/mqtt/MqttCodecUtil$1.$SwitchMap$io$netty$handler$codec$mqtt$MqttMessageType:[I
       3: aload_0
       4: invokevirtual #16                 // Method io/netty/handler/codec/mqtt/MqttFixedHeader.messageType:()Lio/netty/handler/codec/mqtt/MqttMessageType;
       7: invokevirtual #17                 // Method io/netty/handler/codec/mqtt/MqttMessageType.ordinal:()I
      10: iaload
      11: tableswitch   { // 1 to 3
                     1: 36
                     2: 36
                     3: 36
               default: 79
          }
      36: aload_0
      37: invokevirtual #18                 // Method io/netty/handler/codec/mqtt/MqttFixedHeader.qosLevel:()Lio/netty/handler/codec/mqtt/MqttQoS;
      40: getstatic     #19                 // Field io/netty/handler/codec/mqtt/MqttQoS.AT_LEAST_ONCE:Lio/netty/handler/codec/mqtt/MqttQoS;
      43: if_acmpeq     79
      46: new           #20                 // class io/netty/handler/codec/DecoderException
      49: dup
      50: new           #8                  // class java/lang/StringBuilder
      53: dup
      54: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      57: aload_0
      58: invokevirtual #16                 // Method io/netty/handler/codec/mqtt/MqttFixedHeader.messageType:()Lio/netty/handler/codec/mqtt/MqttMessageType;
      61: invokevirtual #21                 // Method io/netty/handler/codec/mqtt/MqttMessageType.name:()Ljava/lang/String;
      64: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: ldc           #22                 // String  message must have QoS 1
      69: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: invokespecial #23                 // Method io/netty/handler/codec/DecoderException."<init>":(Ljava/lang/String;)V
      78: athrow
      79: aload_0
      80: areturn

  static io.netty.handler.codec.mqtt.MqttFixedHeader resetUnusedFields(io.netty.handler.codec.mqtt.MqttFixedHeader);
    Code:
       0: getstatic     #15                 // Field io/netty/handler/codec/mqtt/MqttCodecUtil$1.$SwitchMap$io$netty$handler$codec$mqtt$MqttMessageType:[I
       3: aload_0
       4: invokevirtual #16                 // Method io/netty/handler/codec/mqtt/MqttFixedHeader.messageType:()Lio/netty/handler/codec/mqtt/MqttMessageType;
       7: invokevirtual #17                 // Method io/netty/handler/codec/mqtt/MqttMessageType.ordinal:()I
      10: iaload
      11: tableswitch   { // 1 to 13
                     1: 123
                     2: 123
                     3: 123
                     4: 76
                     5: 76
                     6: 76
                     7: 76
                     8: 76
                     9: 76
                    10: 76
                    11: 76
                    12: 76
                    13: 76
               default: 157
          }
      76: aload_0
      77: invokevirtual #24                 // Method io/netty/handler/codec/mqtt/MqttFixedHeader.isDup:()Z
      80: ifne          100
      83: aload_0
      84: invokevirtual #18                 // Method io/netty/handler/codec/mqtt/MqttFixedHeader.qosLevel:()Lio/netty/handler/codec/mqtt/MqttQoS;
      87: getstatic     #25                 // Field io/netty/handler/codec/mqtt/MqttQoS.AT_MOST_ONCE:Lio/netty/handler/codec/mqtt/MqttQoS;
      90: if_acmpne     100
      93: aload_0
      94: invokevirtual #26                 // Method io/netty/handler/codec/mqtt/MqttFixedHeader.isRetain:()Z
      97: ifeq          121
     100: new           #27                 // class io/netty/handler/codec/mqtt/MqttFixedHeader
     103: dup
     104: aload_0
     105: invokevirtual #16                 // Method io/netty/handler/codec/mqtt/MqttFixedHeader.messageType:()Lio/netty/handler/codec/mqtt/MqttMessageType;
     108: iconst_0
     109: getstatic     #25                 // Field io/netty/handler/codec/mqtt/MqttQoS.AT_MOST_ONCE:Lio/netty/handler/codec/mqtt/MqttQoS;
     112: iconst_0
     113: aload_0
     114: invokevirtual #28                 // Method io/netty/handler/codec/mqtt/MqttFixedHeader.remainingLength:()I
     117: invokespecial #29                 // Method io/netty/handler/codec/mqtt/MqttFixedHeader."<init>":(Lio/netty/handler/codec/mqtt/MqttMessageType;ZLio/netty/handler/codec/mqtt/MqttQoS;ZI)V
     120: areturn
     121: aload_0
     122: areturn
     123: aload_0
     124: invokevirtual #26                 // Method io/netty/handler/codec/mqtt/MqttFixedHeader.isRetain:()Z
     127: ifeq          155
     130: new           #27                 // class io/netty/handler/codec/mqtt/MqttFixedHeader
     133: dup
     134: aload_0
     135: invokevirtual #16                 // Method io/netty/handler/codec/mqtt/MqttFixedHeader.messageType:()Lio/netty/handler/codec/mqtt/MqttMessageType;
     138: aload_0
     139: invokevirtual #24                 // Method io/netty/handler/codec/mqtt/MqttFixedHeader.isDup:()Z
     142: aload_0
     143: invokevirtual #18                 // Method io/netty/handler/codec/mqtt/MqttFixedHeader.qosLevel:()Lio/netty/handler/codec/mqtt/MqttQoS;
     146: iconst_0
     147: aload_0
     148: invokevirtual #28                 // Method io/netty/handler/codec/mqtt/MqttFixedHeader.remainingLength:()I
     151: invokespecial #29                 // Method io/netty/handler/codec/mqtt/MqttFixedHeader."<init>":(Lio/netty/handler/codec/mqtt/MqttMessageType;ZLio/netty/handler/codec/mqtt/MqttQoS;ZI)V
     154: areturn
     155: aload_0
     156: areturn
     157: aload_0
     158: areturn

  private io.netty.handler.codec.mqtt.MqttCodecUtil();
    Code:
       0: aload_0
       1: invokespecial #30                 // Method java/lang/Object."<init>":()V
       4: return

  static {};
    Code:
       0: iconst_2
       1: newarray       char
       3: dup
       4: iconst_0
       5: bipush        35
       7: castore
       8: dup
       9: iconst_1
      10: bipush        43
      12: castore
      13: putstatic     #1                  // Field TOPIC_WILDCARDS:[C
      16: return
}
