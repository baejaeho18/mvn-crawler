Compiled from "WebSocketExtensionUtil.java"
public final class io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionUtil {
  private static final java.lang.String EXTENSION_SEPARATOR;

  private static final java.lang.String PARAMETER_SEPARATOR;

  private static final char PARAMETER_EQUAL;

  private static final java.util.regex.Pattern PARAMETER;

  static boolean isWebsocketUpgrade(io.netty.handler.codec.http.HttpHeaders);
    Code:
       0: aload_0
       1: getstatic     #1                  // Field io/netty/handler/codec/http/HttpHeaderNames.CONNECTION:Lio/netty/util/AsciiString;
       4: getstatic     #2                  // Field io/netty/handler/codec/http/HttpHeaderValues.UPGRADE:Lio/netty/util/AsciiString;
       7: iconst_1
       8: invokevirtual #3                  // Method io/netty/handler/codec/http/HttpHeaders.containsValue:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Z)Z
      11: ifeq          32
      14: aload_0
      15: getstatic     #4                  // Field io/netty/handler/codec/http/HttpHeaderNames.UPGRADE:Lio/netty/util/AsciiString;
      18: getstatic     #5                  // Field io/netty/handler/codec/http/HttpHeaderValues.WEBSOCKET:Lio/netty/util/AsciiString;
      21: iconst_1
      22: invokevirtual #6                  // Method io/netty/handler/codec/http/HttpHeaders.contains:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Z)Z
      25: ifeq          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  public static java.util.List<io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionData> extractExtensions(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #8                  // String ,
       3: invokevirtual #9                  // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: arraylength
       9: ifle          191
      12: new           #10                 // class java/util/ArrayList
      15: dup
      16: aload_1
      17: arraylength
      18: invokespecial #11                 // Method java/util/ArrayList."<init>":(I)V
      21: astore_2
      22: aload_1
      23: astore_3
      24: aload_3
      25: arraylength
      26: istore        4
      28: iconst_0
      29: istore        5
      31: iload         5
      33: iload         4
      35: if_icmpge     189
      38: aload_3
      39: iload         5
      41: aaload
      42: astore        6
      44: aload         6
      46: ldc           #12                 // String ;
      48: invokevirtual #9                  // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      51: astore        7
      53: aload         7
      55: iconst_0
      56: aaload
      57: invokevirtual #13                 // Method java/lang/String.trim:()Ljava/lang/String;
      60: astore        8
      62: aload         7
      64: arraylength
      65: iconst_1
      66: if_icmple     160
      69: new           #14                 // class java/util/HashMap
      72: dup
      73: aload         7
      75: arraylength
      76: iconst_1
      77: isub
      78: invokespecial #15                 // Method java/util/HashMap."<init>":(I)V
      81: astore        9
      83: iconst_1
      84: istore        10
      86: iload         10
      88: aload         7
      90: arraylength
      91: if_icmpge     157
      94: aload         7
      96: iload         10
      98: aaload
      99: invokevirtual #13                 // Method java/lang/String.trim:()Ljava/lang/String;
     102: astore        11
     104: getstatic     #16                 // Field PARAMETER:Ljava/util/regex/Pattern;
     107: aload         11
     109: invokevirtual #17                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
     112: astore        12
     114: aload         12
     116: invokevirtual #18                 // Method java/util/regex/Matcher.matches:()Z
     119: ifeq          151
     122: aload         12
     124: iconst_1
     125: invokevirtual #19                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
     128: ifnull        151
     131: aload         9
     133: aload         12
     135: iconst_1
     136: invokevirtual #19                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
     139: aload         12
     141: iconst_3
     142: invokevirtual #19                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
     145: invokeinterface #20,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     150: pop
     151: iinc          10, 1
     154: goto          86
     157: goto          165
     160: invokestatic  #21                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
     163: astore        9
     165: aload_2
     166: new           #22                 // class io/netty/handler/codec/http/websocketx/extensions/WebSocketExtensionData
     169: dup
     170: aload         8
     172: aload         9
     174: invokespecial #23                 // Method io/netty/handler/codec/http/websocketx/extensions/WebSocketExtensionData."<init>":(Ljava/lang/String;Ljava/util/Map;)V
     177: invokeinterface #24,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     182: pop
     183: iinc          5, 1
     186: goto          31
     189: aload_2
     190: areturn
     191: invokestatic  #25                 // Method java/util/Collections.emptyList:()Ljava/util/List;
     194: areturn

  static java.lang.String appendExtension(java.lang.String, java.lang.String, java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: new           #26                 // class java/lang/StringBuilder
       3: dup
       4: aload_0
       5: ifnull        15
       8: aload_0
       9: invokevirtual #27                 // Method java/lang/String.length:()I
      12: goto          21
      15: aload_1
      16: invokevirtual #27                 // Method java/lang/String.length:()I
      19: iconst_1
      20: iadd
      21: invokespecial #28                 // Method java/lang/StringBuilder."<init>":(I)V
      24: astore_3
      25: aload_0
      26: ifnull        52
      29: aload_0
      30: invokevirtual #13                 // Method java/lang/String.trim:()Ljava/lang/String;
      33: invokevirtual #29                 // Method java/lang/String.isEmpty:()Z
      36: ifne          52
      39: aload_3
      40: aload_0
      41: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: pop
      45: aload_3
      46: ldc           #8                  // String ,
      48: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: pop
      52: aload_3
      53: aload_1
      54: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: pop
      58: aload_2
      59: invokeinterface #31,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      64: invokeinterface #32,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      69: astore        4
      71: aload         4
      73: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      78: ifeq          150
      81: aload         4
      83: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      88: checkcast     #35                 // class java/util/Map$Entry
      91: astore        5
      93: aload_3
      94: ldc           #12                 // String ;
      96: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: pop
     100: aload_3
     101: aload         5
     103: invokeinterface #36,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     108: checkcast     #37                 // class java/lang/String
     111: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: pop
     115: aload         5
     117: invokeinterface #38,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     122: ifnull        147
     125: aload_3
     126: bipush        61
     128: invokevirtual #39                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     131: pop
     132: aload_3
     133: aload         5
     135: invokeinterface #38,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     140: checkcast     #37                 // class java/lang/String
     143: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     146: pop
     147: goto          71
     150: aload_3
     151: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     154: areturn

  private io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionUtil();
    Code:
       0: aload_0
       1: invokespecial #41                 // Method java/lang/Object."<init>":()V
       4: return

  static {};
    Code:
       0: ldc           #42                 // String ^([^=]+)(=[\\\"]?([^\\\"]+)[\\\"]?)?$
       2: invokestatic  #43                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: putstatic     #16                 // Field PARAMETER:Ljava/util/regex/Pattern;
       8: return
}
