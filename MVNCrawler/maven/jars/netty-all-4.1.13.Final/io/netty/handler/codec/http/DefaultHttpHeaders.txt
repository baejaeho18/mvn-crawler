Compiled from "DefaultHttpHeaders.java"
public class io.netty.handler.codec.http.DefaultHttpHeaders extends io.netty.handler.codec.http.HttpHeaders {
  private static final int HIGHEST_INVALID_VALUE_CHAR_MASK;

  private static final io.netty.util.ByteProcessor HEADER_NAME_VALIDATOR;

  static final io.netty.handler.codec.DefaultHeaders$NameValidator<java.lang.CharSequence> HttpNameValidator;

  private final io.netty.handler.codec.DefaultHeaders<java.lang.CharSequence, java.lang.CharSequence, ?> headers;

  public io.netty.handler.codec.http.DefaultHttpHeaders();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #4                  // Method "<init>":(Z)V
       5: return

  public io.netty.handler.codec.http.DefaultHttpHeaders(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: iload_1
       3: invokestatic  #5                  // Method nameValidator:(Z)Lio/netty/handler/codec/DefaultHeaders$NameValidator;
       6: invokespecial #6                  // Method "<init>":(ZLio/netty/handler/codec/DefaultHeaders$NameValidator;)V
       9: return

  protected io.netty.handler.codec.http.DefaultHttpHeaders(boolean, io.netty.handler.codec.DefaultHeaders$NameValidator<java.lang.CharSequence>);
    Code:
       0: aload_0
       1: new           #7                  // class io/netty/handler/codec/DefaultHeadersImpl
       4: dup
       5: getstatic     #8                  // Field io/netty/util/AsciiString.CASE_INSENSITIVE_HASHER:Lio/netty/util/HashingStrategy;
       8: iload_1
       9: invokestatic  #9                  // Method valueConverter:(Z)Lio/netty/handler/codec/ValueConverter;
      12: aload_2
      13: invokespecial #10                 // Method io/netty/handler/codec/DefaultHeadersImpl."<init>":(Lio/netty/util/HashingStrategy;Lio/netty/handler/codec/ValueConverter;Lio/netty/handler/codec/DefaultHeaders$NameValidator;)V
      16: invokespecial #11                 // Method "<init>":(Lio/netty/handler/codec/DefaultHeaders;)V
      19: return

  protected io.netty.handler.codec.http.DefaultHttpHeaders(io.netty.handler.codec.DefaultHeaders<java.lang.CharSequence, java.lang.CharSequence, ?>);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method io/netty/handler/codec/http/HttpHeaders."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #13                 // Field headers:Lio/netty/handler/codec/DefaultHeaders;
       9: return

  public io.netty.handler.codec.http.HttpHeaders add(io.netty.handler.codec.http.HttpHeaders);
    Code:
       0: aload_1
       1: instanceof    #14                 // class io/netty/handler/codec/http/DefaultHttpHeaders
       4: ifeq          24
       7: aload_0
       8: getfield      #13                 // Field headers:Lio/netty/handler/codec/DefaultHeaders;
      11: aload_1
      12: checkcast     #14                 // class io/netty/handler/codec/http/DefaultHttpHeaders
      15: getfield      #13                 // Field headers:Lio/netty/handler/codec/DefaultHeaders;
      18: invokevirtual #15                 // Method io/netty/handler/codec/DefaultHeaders.add:(Lio/netty/handler/codec/Headers;)Lio/netty/handler/codec/Headers;
      21: pop
      22: aload_0
      23: areturn
      24: aload_0
      25: aload_1
      26: invokespecial #16                 // Method io/netty/handler/codec/http/HttpHeaders.add:(Lio/netty/handler/codec/http/HttpHeaders;)Lio/netty/handler/codec/http/HttpHeaders;
      29: areturn

  public io.netty.handler.codec.http.HttpHeaders set(io.netty.handler.codec.http.HttpHeaders);
    Code:
       0: aload_1
       1: instanceof    #14                 // class io/netty/handler/codec/http/DefaultHttpHeaders
       4: ifeq          24
       7: aload_0
       8: getfield      #13                 // Field headers:Lio/netty/handler/codec/DefaultHeaders;
      11: aload_1
      12: checkcast     #14                 // class io/netty/handler/codec/http/DefaultHttpHeaders
      15: getfield      #13                 // Field headers:Lio/netty/handler/codec/DefaultHeaders;
      18: invokevirtual #17                 // Method io/netty/handler/codec/DefaultHeaders.set:(Lio/netty/handler/codec/Headers;)Lio/netty/handler/codec/Headers;
      21: pop
      22: aload_0
      23: areturn
      24: aload_0
      25: aload_1
      26: invokespecial #18                 // Method io/netty/handler/codec/http/HttpHeaders.set:(Lio/netty/handler/codec/http/HttpHeaders;)Lio/netty/handler/codec/http/HttpHeaders;
      29: areturn

  public io.netty.handler.codec.http.HttpHeaders add(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #13                 // Field headers:Lio/netty/handler/codec/DefaultHeaders;
       4: aload_1
       5: aload_2
       6: invokevirtual #19                 // Method io/netty/handler/codec/DefaultHeaders.addObject:(Ljava/lang/Object;Ljava/lang/Object;)Lio/netty/handler/codec/Headers;
       9: pop
      10: aload_0
      11: areturn

  public io.netty.handler.codec.http.HttpHeaders add(java.lang.CharSequence, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #13                 // Field headers:Lio/netty/handler/codec/DefaultHeaders;
       4: aload_1
       5: aload_2
       6: invokevirtual #19                 // Method io/netty/handler/codec/DefaultHeaders.addObject:(Ljava/lang/Object;Ljava/lang/Object;)Lio/netty/handler/codec/Headers;
       9: pop
      10: aload_0
      11: areturn

  public io.netty.handler.codec.http.HttpHeaders add(java.lang.String, java.lang.Iterable<?>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field headers:Lio/netty/handler/codec/DefaultHeaders;
       4: aload_1
       5: aload_2
       6: invokevirtual #20                 // Method io/netty/handler/codec/DefaultHeaders.addObject:(Ljava/lang/Object;Ljava/lang/Iterable;)Lio/netty/handler/codec/Headers;
       9: pop
      10: aload_0
      11: areturn

  public io.netty.handler.codec.http.HttpHeaders add(java.lang.CharSequence, java.lang.Iterable<?>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field headers:Lio/netty/handler/codec/DefaultHeaders;
       4: aload_1
       5: aload_2
       6: invokevirtual #20                 // Method io/netty/handler/codec/DefaultHeaders.addObject:(Ljava/lang/Object;Ljava/lang/Iterable;)Lio/netty/handler/codec/Headers;
       9: pop
      10: aload_0
      11: areturn

  public io.netty.handler.codec.http.HttpHeaders addInt(java.lang.CharSequence, int);
    Code:
       0: aload_0
       1: getfield      #13                 // Field headers:Lio/netty/handler/codec/DefaultHeaders;
       4: aload_1
       5: iload_2
       6: invokevirtual #21                 // Method io/netty/handler/codec/DefaultHeaders.addInt:(Ljava/lang/Object;I)Lio/netty/handler/codec/Headers;
       9: pop
      10: aload_0
      11: areturn

  public io.netty.handler.codec.http.HttpHeaders addShort(java.lang.CharSequence, short);
    Code:
       0: aload_0
       1: getfield      #13                 // Field headers:Lio/netty/handler/codec/DefaultHeaders;
       4: aload_1
       5: iload_2
       6: invokevirtual #22                 // Method io/netty/handler/codec/DefaultHeaders.addShort:(Ljava/lang/Object;S)Lio/netty/handler/codec/Headers;
       9: pop
      10: aload_0
      11: areturn

  public io.netty.handler.codec.http.HttpHeaders remove(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #13                 // Field headers:Lio/netty/handler/codec/DefaultHeaders;
       4: aload_1
       5: invokevirtual #23                 // Method io/netty/handler/codec/DefaultHeaders.remove:(Ljava/lang/Object;)Z
       8: pop
       9: aload_0
      10: areturn

  public io.netty.handler.codec.http.HttpHeaders remove(java.lang.CharSequence);
    Code:
       0: aload_0
       1: getfield      #13                 // Field headers:Lio/netty/handler/codec/DefaultHeaders;
       4: aload_1
       5: invokevirtual #23                 // Method io/netty/handler/codec/DefaultHeaders.remove:(Ljava/lang/Object;)Z
       8: pop
       9: aload_0
      10: areturn

  public io.netty.handler.codec.http.HttpHeaders set(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #13                 // Field headers:Lio/netty/handler/codec/DefaultHeaders;
       4: aload_1
       5: aload_2
       6: invokevirtual #24                 // Method io/netty/handler/codec/DefaultHeaders.setObject:(Ljava/lang/Object;Ljava/lang/Object;)Lio/netty/handler/codec/Headers;
       9: pop
      10: aload_0
      11: areturn

  public io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #13                 // Field headers:Lio/netty/handler/codec/DefaultHeaders;
       4: aload_1
       5: aload_2
       6: invokevirtual #24                 // Method io/netty/handler/codec/DefaultHeaders.setObject:(Ljava/lang/Object;Ljava/lang/Object;)Lio/netty/handler/codec/Headers;
       9: pop
      10: aload_0
      11: areturn

  public io.netty.handler.codec.http.HttpHeaders set(java.lang.String, java.lang.Iterable<?>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field headers:Lio/netty/handler/codec/DefaultHeaders;
       4: aload_1
       5: aload_2
       6: invokevirtual #25                 // Method io/netty/handler/codec/DefaultHeaders.setObject:(Ljava/lang/Object;Ljava/lang/Iterable;)Lio/netty/handler/codec/Headers;
       9: pop
      10: aload_0
      11: areturn

  public io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence, java.lang.Iterable<?>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field headers:Lio/netty/handler/codec/DefaultHeaders;
       4: aload_1
       5: aload_2
       6: invokevirtual #25                 // Method io/netty/handler/codec/DefaultHeaders.setObject:(Ljava/lang/Object;Ljava/lang/Iterable;)Lio/netty/handler/codec/Headers;
       9: pop
      10: aload_0
      11: areturn

  public io.netty.handler.codec.http.HttpHeaders setInt(java.lang.CharSequence, int);
    Code:
       0: aload_0
       1: getfield      #13                 // Field headers:Lio/netty/handler/codec/DefaultHeaders;
       4: aload_1
       5: iload_2
       6: invokevirtual #26                 // Method io/netty/handler/codec/DefaultHeaders.setInt:(Ljava/lang/Object;I)Lio/netty/handler/codec/Headers;
       9: pop
      10: aload_0
      11: areturn

  public io.netty.handler.codec.http.HttpHeaders setShort(java.lang.CharSequence, short);
    Code:
       0: aload_0
       1: getfield      #13                 // Field headers:Lio/netty/handler/codec/DefaultHeaders;
       4: aload_1
       5: iload_2
       6: invokevirtual #27                 // Method io/netty/handler/codec/DefaultHeaders.setShort:(Ljava/lang/Object;S)Lio/netty/handler/codec/Headers;
       9: pop
      10: aload_0
      11: areturn

  public io.netty.handler.codec.http.HttpHeaders clear();
    Code:
       0: aload_0
       1: getfield      #13                 // Field headers:Lio/netty/handler/codec/DefaultHeaders;
       4: invokevirtual #28                 // Method io/netty/handler/codec/DefaultHeaders.clear:()Lio/netty/handler/codec/Headers;
       7: pop
       8: aload_0
       9: areturn

  public java.lang.String get(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #29                 // Method get:(Ljava/lang/CharSequence;)Ljava/lang/String;
       5: areturn

  public java.lang.String get(java.lang.CharSequence);
    Code:
       0: aload_0
       1: getfield      #13                 // Field headers:Lio/netty/handler/codec/DefaultHeaders;
       4: aload_1
       5: invokestatic  #30                 // Method io/netty/handler/codec/HeadersUtils.getAsString:(Lio/netty/handler/codec/Headers;Ljava/lang/Object;)Ljava/lang/String;
       8: areturn

  public java.lang.Integer getInt(java.lang.CharSequence);
    Code:
       0: aload_0
       1: getfield      #13                 // Field headers:Lio/netty/handler/codec/DefaultHeaders;
       4: aload_1
       5: invokevirtual #31                 // Method io/netty/handler/codec/DefaultHeaders.getInt:(Ljava/lang/Object;)Ljava/lang/Integer;
       8: areturn

  public int getInt(java.lang.CharSequence, int);
    Code:
       0: aload_0
       1: getfield      #13                 // Field headers:Lio/netty/handler/codec/DefaultHeaders;
       4: aload_1
       5: iload_2
       6: invokevirtual #32                 // Method io/netty/handler/codec/DefaultHeaders.getInt:(Ljava/lang/Object;I)I
       9: ireturn

  public java.lang.Short getShort(java.lang.CharSequence);
    Code:
       0: aload_0
       1: getfield      #13                 // Field headers:Lio/netty/handler/codec/DefaultHeaders;
       4: aload_1
       5: invokevirtual #33                 // Method io/netty/handler/codec/DefaultHeaders.getShort:(Ljava/lang/Object;)Ljava/lang/Short;
       8: areturn

  public short getShort(java.lang.CharSequence, short);
    Code:
       0: aload_0
       1: getfield      #13                 // Field headers:Lio/netty/handler/codec/DefaultHeaders;
       4: aload_1
       5: iload_2
       6: invokevirtual #34                 // Method io/netty/handler/codec/DefaultHeaders.getShort:(Ljava/lang/Object;S)S
       9: ireturn

  public java.lang.Long getTimeMillis(java.lang.CharSequence);
    Code:
       0: aload_0
       1: getfield      #13                 // Field headers:Lio/netty/handler/codec/DefaultHeaders;
       4: aload_1
       5: invokevirtual #35                 // Method io/netty/handler/codec/DefaultHeaders.getTimeMillis:(Ljava/lang/Object;)Ljava/lang/Long;
       8: areturn

  public long getTimeMillis(java.lang.CharSequence, long);
    Code:
       0: aload_0
       1: getfield      #13                 // Field headers:Lio/netty/handler/codec/DefaultHeaders;
       4: aload_1
       5: lload_2
       6: invokevirtual #36                 // Method io/netty/handler/codec/DefaultHeaders.getTimeMillis:(Ljava/lang/Object;J)J
       9: lreturn

  public java.util.List<java.lang.String> getAll(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #37                 // Method getAll:(Ljava/lang/CharSequence;)Ljava/util/List;
       5: areturn

  public java.util.List<java.lang.String> getAll(java.lang.CharSequence);
    Code:
       0: aload_0
       1: getfield      #13                 // Field headers:Lio/netty/handler/codec/DefaultHeaders;
       4: aload_1
       5: invokestatic  #38                 // Method io/netty/handler/codec/HeadersUtils.getAllAsString:(Lio/netty/handler/codec/Headers;Ljava/lang/Object;)Ljava/util/List;
       8: areturn

  public java.util.List<java.util.Map$Entry<java.lang.String, java.lang.String>> entries();
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method isEmpty:()Z
       4: ifeq          11
       7: invokestatic  #40                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      10: areturn
      11: new           #41                 // class java/util/ArrayList
      14: dup
      15: aload_0
      16: getfield      #13                 // Field headers:Lio/netty/handler/codec/DefaultHeaders;
      19: invokevirtual #42                 // Method io/netty/handler/codec/DefaultHeaders.size:()I
      22: invokespecial #43                 // Method java/util/ArrayList."<init>":(I)V
      25: astore_1
      26: aload_0
      27: invokevirtual #44                 // Method iterator:()Ljava/util/Iterator;
      30: astore_2
      31: aload_2
      32: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ifeq          61
      40: aload_2
      41: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      46: checkcast     #47                 // class java/util/Map$Entry
      49: astore_3
      50: aload_1
      51: aload_3
      52: invokeinterface #48,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      57: pop
      58: goto          31
      61: aload_1
      62: areturn

  public java.util.Iterator<java.util.Map$Entry<java.lang.String, java.lang.String>> iterator();
    Code:
       0: aload_0
       1: getfield      #13                 // Field headers:Lio/netty/handler/codec/DefaultHeaders;
       4: invokestatic  #49                 // Method io/netty/handler/codec/HeadersUtils.iteratorAsString:(Ljava/lang/Iterable;)Ljava/util/Iterator;
       7: areturn

  public java.util.Iterator<java.util.Map$Entry<java.lang.CharSequence, java.lang.CharSequence>> iteratorCharSequence();
    Code:
       0: aload_0
       1: getfield      #13                 // Field headers:Lio/netty/handler/codec/DefaultHeaders;
       4: invokevirtual #50                 // Method io/netty/handler/codec/DefaultHeaders.iterator:()Ljava/util/Iterator;
       7: areturn

  public boolean contains(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #51                 // Method contains:(Ljava/lang/CharSequence;)Z
       5: ireturn

  public boolean contains(java.lang.CharSequence);
    Code:
       0: aload_0
       1: getfield      #13                 // Field headers:Lio/netty/handler/codec/DefaultHeaders;
       4: aload_1
       5: invokevirtual #52                 // Method io/netty/handler/codec/DefaultHeaders.contains:(Ljava/lang/Object;)Z
       8: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #13                 // Field headers:Lio/netty/handler/codec/DefaultHeaders;
       4: invokevirtual #53                 // Method io/netty/handler/codec/DefaultHeaders.isEmpty:()Z
       7: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #13                 // Field headers:Lio/netty/handler/codec/DefaultHeaders;
       4: invokevirtual #42                 // Method io/netty/handler/codec/DefaultHeaders.size:()I
       7: ireturn

  public boolean contains(java.lang.String, java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokevirtual #54                 // Method contains:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Z)Z
       7: ireturn

  public boolean contains(java.lang.CharSequence, java.lang.CharSequence, boolean);
    Code:
       0: aload_0
       1: getfield      #13                 // Field headers:Lio/netty/handler/codec/DefaultHeaders;
       4: aload_1
       5: aload_2
       6: iload_3
       7: ifeq          16
      10: getstatic     #8                  // Field io/netty/util/AsciiString.CASE_INSENSITIVE_HASHER:Lio/netty/util/HashingStrategy;
      13: goto          19
      16: getstatic     #55                 // Field io/netty/util/AsciiString.CASE_SENSITIVE_HASHER:Lio/netty/util/HashingStrategy;
      19: invokevirtual #56                 // Method io/netty/handler/codec/DefaultHeaders.contains:(Ljava/lang/Object;Ljava/lang/Object;Lio/netty/util/HashingStrategy;)Z
      22: ireturn

  public java.util.Set<java.lang.String> names();
    Code:
       0: aload_0
       1: getfield      #13                 // Field headers:Lio/netty/handler/codec/DefaultHeaders;
       4: invokestatic  #57                 // Method io/netty/handler/codec/HeadersUtils.namesAsString:(Lio/netty/handler/codec/Headers;)Ljava/util/Set;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #14                 // class io/netty/handler/codec/http/DefaultHttpHeaders
       4: ifeq          31
       7: aload_0
       8: getfield      #13                 // Field headers:Lio/netty/handler/codec/DefaultHeaders;
      11: aload_1
      12: checkcast     #14                 // class io/netty/handler/codec/http/DefaultHttpHeaders
      15: getfield      #13                 // Field headers:Lio/netty/handler/codec/DefaultHeaders;
      18: getstatic     #55                 // Field io/netty/util/AsciiString.CASE_SENSITIVE_HASHER:Lio/netty/util/HashingStrategy;
      21: invokevirtual #58                 // Method io/netty/handler/codec/DefaultHeaders.equals:(Lio/netty/handler/codec/Headers;Lio/netty/util/HashingStrategy;)Z
      24: ifeq          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #13                 // Field headers:Lio/netty/handler/codec/DefaultHeaders;
       4: getstatic     #55                 // Field io/netty/util/AsciiString.CASE_SENSITIVE_HASHER:Lio/netty/util/HashingStrategy;
       7: invokevirtual #59                 // Method io/netty/handler/codec/DefaultHeaders.hashCode:(Lio/netty/util/HashingStrategy;)I
      10: ireturn

  private static void validateHeaderNameElement(byte);
    Code:
       0: iload_0
       1: lookupswitch  { // 11
                     0: 100
                     9: 100
                    10: 100
                    11: 100
                    12: 100
                    13: 100
                    32: 100
                    44: 100
                    58: 100
                    59: 100
                    61: 100
               default: 127
          }
     100: new           #60                 // class java/lang/IllegalArgumentException
     103: dup
     104: new           #61                 // class java/lang/StringBuilder
     107: dup
     108: invokespecial #62                 // Method java/lang/StringBuilder."<init>":()V
     111: ldc           #63                 // String a header name cannot contain the following prohibited characters: =,;: \\t\\r\\n\\v\\f:
     113: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: iload_0
     117: invokevirtual #65                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     120: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     123: invokespecial #67                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     126: athrow
     127: iload_0
     128: ifge          158
     131: new           #60                 // class java/lang/IllegalArgumentException
     134: dup
     135: new           #61                 // class java/lang/StringBuilder
     138: dup
     139: invokespecial #62                 // Method java/lang/StringBuilder."<init>":()V
     142: ldc           #68                 // String a header name cannot contain non-ASCII character:
     144: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     147: iload_0
     148: invokevirtual #65                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     151: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     154: invokespecial #67                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     157: athrow
     158: return

  private static void validateHeaderNameElement(char);
    Code:
       0: iload_0
       1: lookupswitch  { // 11
                     0: 100
                     9: 100
                    10: 100
                    11: 100
                    12: 100
                    13: 100
                    32: 100
                    44: 100
                    58: 100
                    59: 100
                    61: 100
               default: 127
          }
     100: new           #60                 // class java/lang/IllegalArgumentException
     103: dup
     104: new           #61                 // class java/lang/StringBuilder
     107: dup
     108: invokespecial #62                 // Method java/lang/StringBuilder."<init>":()V
     111: ldc           #63                 // String a header name cannot contain the following prohibited characters: =,;: \\t\\r\\n\\v\\f:
     113: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: iload_0
     117: invokevirtual #69                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     120: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     123: invokespecial #67                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     126: athrow
     127: iload_0
     128: bipush        127
     130: if_icmple     160
     133: new           #60                 // class java/lang/IllegalArgumentException
     136: dup
     137: new           #61                 // class java/lang/StringBuilder
     140: dup
     141: invokespecial #62                 // Method java/lang/StringBuilder."<init>":()V
     144: ldc           #68                 // String a header name cannot contain non-ASCII character:
     146: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     149: iload_0
     150: invokevirtual #69                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     153: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     156: invokespecial #67                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     159: athrow
     160: return

  static io.netty.handler.codec.ValueConverter<java.lang.CharSequence> valueConverter(boolean);
    Code:
       0: iload_0
       1: ifeq          10
       4: getstatic     #70                 // Field io/netty/handler/codec/http/DefaultHttpHeaders$HeaderValueConverterAndValidator.INSTANCE:Lio/netty/handler/codec/http/DefaultHttpHeaders$HeaderValueConverterAndValidator;
       7: goto          13
      10: getstatic     #71                 // Field io/netty/handler/codec/http/DefaultHttpHeaders$HeaderValueConverter.INSTANCE:Lio/netty/handler/codec/http/DefaultHttpHeaders$HeaderValueConverter;
      13: areturn

  static io.netty.handler.codec.DefaultHeaders$NameValidator<java.lang.CharSequence> nameValidator(boolean);
    Code:
       0: iload_0
       1: ifeq          10
       4: getstatic     #72                 // Field HttpNameValidator:Lio/netty/handler/codec/DefaultHeaders$NameValidator;
       7: goto          13
      10: getstatic     #73                 // Field io/netty/handler/codec/DefaultHeaders$NameValidator.NOT_NULL:Lio/netty/handler/codec/DefaultHeaders$NameValidator;
      13: areturn

  static void access$000(byte);
    Code:
       0: iload_0
       1: invokestatic  #3                  // Method validateHeaderNameElement:(B)V
       4: return

  static io.netty.util.ByteProcessor access$100();
    Code:
       0: getstatic     #2                  // Field HEADER_NAME_VALIDATOR:Lio/netty/util/ByteProcessor;
       3: areturn

  static void access$200(char);
    Code:
       0: iload_0
       1: invokestatic  #1                  // Method validateHeaderNameElement:(C)V
       4: return

  static {};
    Code:
       0: new           #74                 // class io/netty/handler/codec/http/DefaultHttpHeaders$1
       3: dup
       4: invokespecial #75                 // Method io/netty/handler/codec/http/DefaultHttpHeaders$1."<init>":()V
       7: putstatic     #2                  // Field HEADER_NAME_VALIDATOR:Lio/netty/util/ByteProcessor;
      10: new           #76                 // class io/netty/handler/codec/http/DefaultHttpHeaders$2
      13: dup
      14: invokespecial #77                 // Method io/netty/handler/codec/http/DefaultHttpHeaders$2."<init>":()V
      17: putstatic     #72                 // Field HttpNameValidator:Lio/netty/handler/codec/DefaultHeaders$NameValidator;
      20: return
}
