Compiled from "MqttMessageBuilders.java"
public final class io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder {
  private io.netty.handler.codec.mqtt.MqttVersion version;

  private java.lang.String clientId;

  private boolean cleanSession;

  private boolean hasUser;

  private boolean hasPassword;

  private int keepAliveSecs;

  private boolean willFlag;

  private boolean willRetain;

  private io.netty.handler.codec.mqtt.MqttQoS willQos;

  private java.lang.String willTopic;

  private byte[] willMessage;

  private java.lang.String username;

  private byte[] password;

  io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field io/netty/handler/codec/mqtt/MqttVersion.MQTT_3_1_1:Lio/netty/handler/codec/mqtt/MqttVersion;
       8: putfield      #3                  // Field version:Lio/netty/handler/codec/mqtt/MqttVersion;
      11: aload_0
      12: getstatic     #4                  // Field io/netty/handler/codec/mqtt/MqttQoS.AT_MOST_ONCE:Lio/netty/handler/codec/mqtt/MqttQoS;
      15: putfield      #5                  // Field willQos:Lio/netty/handler/codec/mqtt/MqttQoS;
      18: return

  public io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder protocolVersion(io.netty.handler.codec.mqtt.MqttVersion);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field version:Lio/netty/handler/codec/mqtt/MqttVersion;
       5: aload_0
       6: areturn

  public io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder clientId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field clientId:Ljava/lang/String;
       5: aload_0
       6: areturn

  public io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder cleanSession(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field cleanSession:Z
       5: aload_0
       6: areturn

  public io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder keepAlive(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field keepAliveSecs:I
       5: aload_0
       6: areturn

  public io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder willFlag(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field willFlag:Z
       5: aload_0
       6: areturn

  public io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder willQoS(io.netty.handler.codec.mqtt.MqttQoS);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field willQos:Lio/netty/handler/codec/mqtt/MqttQoS;
       5: aload_0
       6: areturn

  public io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder willTopic(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field willTopic:Ljava/lang/String;
       5: aload_0
       6: areturn

  public io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder willMessage(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #11                 // Field io/netty/util/CharsetUtil.UTF_8:Ljava/nio/charset/Charset;
       5: invokevirtual #12                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
       8: invokevirtual #13                 // Method willMessage:([B)Lio/netty/handler/codec/mqtt/MqttMessageBuilders$ConnectBuilder;
      11: pop
      12: aload_0
      13: areturn

  public io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder willMessage(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field willMessage:[B
       5: aload_0
       6: areturn

  public io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder willRetain(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #15                 // Field willRetain:Z
       5: aload_0
       6: areturn

  public io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder hasUser(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #16                 // Field hasUser:Z
       5: aload_0
       6: areturn

  public io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder hasPassword(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #17                 // Field hasPassword:Z
       5: aload_0
       6: areturn

  public io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder username(java.lang.String);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #16                 // Field hasUser:Z
       5: aload_0
       6: aload_1
       7: putfield      #18                 // Field username:Ljava/lang/String;
      10: aload_0
      11: areturn

  public io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder password(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #11                 // Field io/netty/util/CharsetUtil.UTF_8:Ljava/nio/charset/Charset;
       5: invokevirtual #12                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
       8: invokevirtual #19                 // Method password:([B)Lio/netty/handler/codec/mqtt/MqttMessageBuilders$ConnectBuilder;
      11: pop
      12: aload_0
      13: areturn

  public io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder password(byte[]);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #17                 // Field hasPassword:Z
       5: aload_0
       6: aload_1
       7: putfield      #20                 // Field password:[B
      10: aload_0
      11: areturn

  public io.netty.handler.codec.mqtt.MqttConnectMessage build();
    Code:
       0: new           #21                 // class io/netty/handler/codec/mqtt/MqttFixedHeader
       3: dup
       4: getstatic     #22                 // Field io/netty/handler/codec/mqtt/MqttMessageType.CONNECT:Lio/netty/handler/codec/mqtt/MqttMessageType;
       7: iconst_0
       8: getstatic     #4                  // Field io/netty/handler/codec/mqtt/MqttQoS.AT_MOST_ONCE:Lio/netty/handler/codec/mqtt/MqttQoS;
      11: iconst_0
      12: iconst_0
      13: invokespecial #23                 // Method io/netty/handler/codec/mqtt/MqttFixedHeader."<init>":(Lio/netty/handler/codec/mqtt/MqttMessageType;ZLio/netty/handler/codec/mqtt/MqttQoS;ZI)V
      16: astore_1
      17: new           #24                 // class io/netty/handler/codec/mqtt/MqttConnectVariableHeader
      20: dup
      21: aload_0
      22: getfield      #3                  // Field version:Lio/netty/handler/codec/mqtt/MqttVersion;
      25: invokevirtual #25                 // Method io/netty/handler/codec/mqtt/MqttVersion.protocolName:()Ljava/lang/String;
      28: aload_0
      29: getfield      #3                  // Field version:Lio/netty/handler/codec/mqtt/MqttVersion;
      32: invokevirtual #26                 // Method io/netty/handler/codec/mqtt/MqttVersion.protocolLevel:()B
      35: aload_0
      36: getfield      #16                 // Field hasUser:Z
      39: aload_0
      40: getfield      #17                 // Field hasPassword:Z
      43: aload_0
      44: getfield      #15                 // Field willRetain:Z
      47: aload_0
      48: getfield      #5                  // Field willQos:Lio/netty/handler/codec/mqtt/MqttQoS;
      51: invokevirtual #27                 // Method io/netty/handler/codec/mqtt/MqttQoS.value:()I
      54: aload_0
      55: getfield      #9                  // Field willFlag:Z
      58: aload_0
      59: getfield      #7                  // Field cleanSession:Z
      62: aload_0
      63: getfield      #8                  // Field keepAliveSecs:I
      66: invokespecial #28                 // Method io/netty/handler/codec/mqtt/MqttConnectVariableHeader."<init>":(Ljava/lang/String;IZZZIZZI)V
      69: astore_2
      70: new           #29                 // class io/netty/handler/codec/mqtt/MqttConnectPayload
      73: dup
      74: aload_0
      75: getfield      #6                  // Field clientId:Ljava/lang/String;
      78: aload_0
      79: getfield      #10                 // Field willTopic:Ljava/lang/String;
      82: aload_0
      83: getfield      #14                 // Field willMessage:[B
      86: aload_0
      87: getfield      #18                 // Field username:Ljava/lang/String;
      90: aload_0
      91: getfield      #20                 // Field password:[B
      94: invokespecial #30                 // Method io/netty/handler/codec/mqtt/MqttConnectPayload."<init>":(Ljava/lang/String;Ljava/lang/String;[BLjava/lang/String;[B)V
      97: astore_3
      98: new           #31                 // class io/netty/handler/codec/mqtt/MqttConnectMessage
     101: dup
     102: aload_1
     103: aload_2
     104: aload_3
     105: invokespecial #32                 // Method io/netty/handler/codec/mqtt/MqttConnectMessage."<init>":(Lio/netty/handler/codec/mqtt/MqttFixedHeader;Lio/netty/handler/codec/mqtt/MqttConnectVariableHeader;Lio/netty/handler/codec/mqtt/MqttConnectPayload;)V
     108: areturn
}
