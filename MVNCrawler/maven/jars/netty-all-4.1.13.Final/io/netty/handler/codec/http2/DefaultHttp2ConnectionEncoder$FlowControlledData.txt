Compiled from "DefaultHttp2ConnectionEncoder.java"
final class io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData extends io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledBase {
  private final io.netty.channel.CoalescingBufferQueue queue;

  private int dataSize;

  final io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder this$0;

  io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData(io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder, io.netty.handler.codec.http2.Http2Stream, io.netty.buffer.ByteBuf, int, boolean, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2ConnectionEncoder;
       5: aload_0
       6: aload_1
       7: aload_2
       8: iload         4
      10: iload         5
      12: aload         6
      14: invokespecial #3                  // Method io/netty/handler/codec/http2/DefaultHttp2ConnectionEncoder$FlowControlledBase."<init>":(Lio/netty/handler/codec/http2/DefaultHttp2ConnectionEncoder;Lio/netty/handler/codec/http2/Http2Stream;IZLio/netty/channel/ChannelPromise;)V
      17: aload_0
      18: new           #4                  // class io/netty/channel/CoalescingBufferQueue
      21: dup
      22: aload         6
      24: invokeinterface #5,  1            // InterfaceMethod io/netty/channel/ChannelPromise.channel:()Lio/netty/channel/Channel;
      29: invokespecial #6                  // Method io/netty/channel/CoalescingBufferQueue."<init>":(Lio/netty/channel/Channel;)V
      32: putfield      #7                  // Field queue:Lio/netty/channel/CoalescingBufferQueue;
      35: aload_0
      36: getfield      #7                  // Field queue:Lio/netty/channel/CoalescingBufferQueue;
      39: aload_3
      40: aload         6
      42: invokevirtual #8                  // Method io/netty/channel/CoalescingBufferQueue.add:(Lio/netty/buffer/ByteBuf;Lio/netty/channel/ChannelPromise;)V
      45: aload_0
      46: aload_0
      47: getfield      #7                  // Field queue:Lio/netty/channel/CoalescingBufferQueue;
      50: invokevirtual #9                  // Method io/netty/channel/CoalescingBufferQueue.readableBytes:()I
      53: putfield      #10                 // Field dataSize:I
      56: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #10                 // Field dataSize:I
       4: aload_0
       5: getfield      #11                 // Field padding:I
       8: iadd
       9: ireturn

  public void error(io.netty.channel.ChannelHandlerContext, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #7                  // Field queue:Lio/netty/channel/CoalescingBufferQueue;
       4: aload_2
       5: invokevirtual #12                 // Method io/netty/channel/CoalescingBufferQueue.releaseAndFailAll:(Ljava/lang/Throwable;)V
       8: aload_0
       9: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2ConnectionEncoder;
      12: invokestatic  #13                 // Method io/netty/handler/codec/http2/DefaultHttp2ConnectionEncoder.access$000:(Lio/netty/handler/codec/http2/DefaultHttp2ConnectionEncoder;)Lio/netty/handler/codec/http2/Http2LifecycleManager;
      15: aload_1
      16: aload_2
      17: invokeinterface #14,  3           // InterfaceMethod io/netty/handler/codec/http2/Http2LifecycleManager.onError:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V
      22: return

  public void write(io.netty.channel.ChannelHandlerContext, int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field queue:Lio/netty/channel/CoalescingBufferQueue;
       4: invokevirtual #9                  // Method io/netty/channel/CoalescingBufferQueue.readableBytes:()I
       7: istore_3
       8: aload_0
       9: getfield      #15                 // Field endOfStream:Z
      12: ifne          65
      15: iload_3
      16: ifne          60
      19: aload_1
      20: invokeinterface #16,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.newPromise:()Lio/netty/channel/ChannelPromise;
      25: aload_0
      26: invokeinterface #17,  2           // InterfaceMethod io/netty/channel/ChannelPromise.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelPromise;
      31: astore        4
      33: aload_0
      34: getfield      #7                  // Field queue:Lio/netty/channel/CoalescingBufferQueue;
      37: iconst_0
      38: aload         4
      40: invokevirtual #18                 // Method io/netty/channel/CoalescingBufferQueue.remove:(ILio/netty/channel/ChannelPromise;)Lio/netty/buffer/ByteBuf;
      43: invokevirtual #19                 // Method io/netty/buffer/ByteBuf.release:()Z
      46: pop
      47: aload_1
      48: getstatic     #20                 // Field io/netty/buffer/Unpooled.EMPTY_BUFFER:Lio/netty/buffer/ByteBuf;
      51: aload         4
      53: invokeinterface #21,  3           // InterfaceMethod io/netty/channel/ChannelHandlerContext.write:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      58: pop
      59: return
      60: iload_2
      61: ifne          65
      64: return
      65: iload_3
      66: iload_2
      67: invokestatic  #22                 // Method java/lang/Math.min:(II)I
      70: istore        4
      72: aload_1
      73: invokeinterface #16,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.newPromise:()Lio/netty/channel/ChannelPromise;
      78: aload_0
      79: invokeinterface #17,  2           // InterfaceMethod io/netty/channel/ChannelPromise.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelPromise;
      84: astore        5
      86: aload_0
      87: getfield      #7                  // Field queue:Lio/netty/channel/CoalescingBufferQueue;
      90: iload         4
      92: aload         5
      94: invokevirtual #18                 // Method io/netty/channel/CoalescingBufferQueue.remove:(ILio/netty/channel/ChannelPromise;)Lio/netty/buffer/ByteBuf;
      97: astore        6
      99: aload_0
     100: aload_0
     101: getfield      #7                  // Field queue:Lio/netty/channel/CoalescingBufferQueue;
     104: invokevirtual #9                  // Method io/netty/channel/CoalescingBufferQueue.readableBytes:()I
     107: putfield      #10                 // Field dataSize:I
     110: iload_2
     111: iload         4
     113: isub
     114: aload_0
     115: getfield      #11                 // Field padding:I
     118: invokestatic  #22                 // Method java/lang/Math.min:(II)I
     121: istore        7
     123: aload_0
     124: dup
     125: getfield      #11                 // Field padding:I
     128: iload         7
     130: isub
     131: putfield      #11                 // Field padding:I
     134: aload_0
     135: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2ConnectionEncoder;
     138: invokevirtual #23                 // Method io/netty/handler/codec/http2/DefaultHttp2ConnectionEncoder.frameWriter:()Lio/netty/handler/codec/http2/Http2FrameWriter;
     141: aload_1
     142: aload_0
     143: getfield      #24                 // Field stream:Lio/netty/handler/codec/http2/Http2Stream;
     146: invokeinterface #25,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2Stream.id:()I
     151: aload         6
     153: iload         7
     155: aload_0
     156: getfield      #15                 // Field endOfStream:Z
     159: ifeq          173
     162: aload_0
     163: invokevirtual #26                 // Method size:()I
     166: ifne          173
     169: iconst_1
     170: goto          174
     173: iconst_0
     174: aload         5
     176: invokeinterface #27,  7           // InterfaceMethod io/netty/handler/codec/http2/Http2FrameWriter.writeData:(Lio/netty/channel/ChannelHandlerContext;ILio/netty/buffer/ByteBuf;IZLio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
     181: pop
     182: return

  public boolean merge(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http2.Http2RemoteFlowController$FlowControlled);
    Code:
       0: ldc           #28                 // class io/netty/handler/codec/http2/DefaultHttp2ConnectionEncoder$FlowControlledData
       2: aload_2
       3: invokevirtual #29                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       6: if_acmpne     28
       9: ldc           #30                 // int 2147483647
      11: aload_2
      12: checkcast     #28                 // class io/netty/handler/codec/http2/DefaultHttp2ConnectionEncoder$FlowControlledData
      15: dup
      16: astore_3
      17: invokevirtual #26                 // Method size:()I
      20: isub
      21: aload_0
      22: invokevirtual #26                 // Method size:()I
      25: if_icmpge     30
      28: iconst_0
      29: ireturn
      30: aload_3
      31: getfield      #7                  // Field queue:Lio/netty/channel/CoalescingBufferQueue;
      34: aload_0
      35: getfield      #7                  // Field queue:Lio/netty/channel/CoalescingBufferQueue;
      38: invokevirtual #31                 // Method io/netty/channel/CoalescingBufferQueue.copyTo:(Lio/netty/channel/CoalescingBufferQueue;)V
      41: aload_0
      42: aload_0
      43: getfield      #7                  // Field queue:Lio/netty/channel/CoalescingBufferQueue;
      46: invokevirtual #9                  // Method io/netty/channel/CoalescingBufferQueue.readableBytes:()I
      49: putfield      #10                 // Field dataSize:I
      52: aload_0
      53: aload_0
      54: getfield      #11                 // Field padding:I
      57: aload_3
      58: getfield      #11                 // Field padding:I
      61: invokestatic  #32                 // Method java/lang/Math.max:(II)I
      64: putfield      #11                 // Field padding:I
      67: aload_0
      68: aload_3
      69: getfield      #15                 // Field endOfStream:Z
      72: putfield      #15                 // Field endOfStream:Z
      75: iconst_1
      76: ireturn
}
