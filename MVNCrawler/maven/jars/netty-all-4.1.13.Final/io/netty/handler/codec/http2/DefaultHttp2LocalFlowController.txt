Compiled from "DefaultHttp2LocalFlowController.java"
public class io.netty.handler.codec.http2.DefaultHttp2LocalFlowController implements io.netty.handler.codec.http2.Http2LocalFlowController {
  public static final float DEFAULT_WINDOW_UPDATE_RATIO;

  private final io.netty.handler.codec.http2.Http2Connection connection;

  private final io.netty.handler.codec.http2.Http2Connection$PropertyKey stateKey;

  private io.netty.handler.codec.http2.Http2FrameWriter frameWriter;

  private io.netty.channel.ChannelHandlerContext ctx;

  private float windowUpdateRatio;

  private int initialWindowSize;

  private static final io.netty.handler.codec.http2.DefaultHttp2LocalFlowController$FlowState REDUCED_FLOW_STATE;

  static final boolean $assertionsDisabled;

  public io.netty.handler.codec.http2.DefaultHttp2LocalFlowController(io.netty.handler.codec.http2.Http2Connection);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #11                 // float 0.5f
       4: iconst_0
       5: invokespecial #12                 // Method "<init>":(Lio/netty/handler/codec/http2/Http2Connection;FZ)V
       8: return

  public io.netty.handler.codec.http2.DefaultHttp2LocalFlowController(io.netty.handler.codec.http2.Http2Connection, float, boolean);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #14                 // int 65535
       7: putfield      #7                  // Field initialWindowSize:I
      10: aload_0
      11: aload_1
      12: ldc           #15                 // String connection
      14: invokestatic  #16                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      17: checkcast     #17                 // class io/netty/handler/codec/http2/Http2Connection
      20: putfield      #18                 // Field connection:Lio/netty/handler/codec/http2/Http2Connection;
      23: aload_0
      24: fload_2
      25: invokevirtual #19                 // Method windowUpdateRatio:(F)V
      28: aload_0
      29: aload_1
      30: invokeinterface #20,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2Connection.newKey:()Lio/netty/handler/codec/http2/Http2Connection$PropertyKey;
      35: putfield      #9                  // Field stateKey:Lio/netty/handler/codec/http2/Http2Connection$PropertyKey;
      38: iload_3
      39: ifeq          63
      42: new           #21                 // class io/netty/handler/codec/http2/DefaultHttp2LocalFlowController$AutoRefillState
      45: dup
      46: aload_0
      47: aload_1
      48: invokeinterface #22,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2Connection.connectionStream:()Lio/netty/handler/codec/http2/Http2Stream;
      53: aload_0
      54: getfield      #7                  // Field initialWindowSize:I
      57: invokespecial #23                 // Method io/netty/handler/codec/http2/DefaultHttp2LocalFlowController$AutoRefillState."<init>":(Lio/netty/handler/codec/http2/DefaultHttp2LocalFlowController;Lio/netty/handler/codec/http2/Http2Stream;I)V
      60: goto          81
      63: new           #24                 // class io/netty/handler/codec/http2/DefaultHttp2LocalFlowController$DefaultState
      66: dup
      67: aload_0
      68: aload_1
      69: invokeinterface #22,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2Connection.connectionStream:()Lio/netty/handler/codec/http2/Http2Stream;
      74: aload_0
      75: getfield      #7                  // Field initialWindowSize:I
      78: invokespecial #25                 // Method io/netty/handler/codec/http2/DefaultHttp2LocalFlowController$DefaultState."<init>":(Lio/netty/handler/codec/http2/DefaultHttp2LocalFlowController;Lio/netty/handler/codec/http2/Http2Stream;I)V
      81: astore        4
      83: aload_1
      84: invokeinterface #22,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2Connection.connectionStream:()Lio/netty/handler/codec/http2/Http2Stream;
      89: aload_0
      90: getfield      #9                  // Field stateKey:Lio/netty/handler/codec/http2/Http2Connection$PropertyKey;
      93: aload         4
      95: invokeinterface #26,  3           // InterfaceMethod io/netty/handler/codec/http2/Http2Stream.setProperty:(Lio/netty/handler/codec/http2/Http2Connection$PropertyKey;Ljava/lang/Object;)Ljava/lang/Object;
     100: pop
     101: aload_1
     102: new           #27                 // class io/netty/handler/codec/http2/DefaultHttp2LocalFlowController$1
     105: dup
     106: aload_0
     107: invokespecial #28                 // Method io/netty/handler/codec/http2/DefaultHttp2LocalFlowController$1."<init>":(Lio/netty/handler/codec/http2/DefaultHttp2LocalFlowController;)V
     110: invokeinterface #29,  2           // InterfaceMethod io/netty/handler/codec/http2/Http2Connection.addListener:(Lio/netty/handler/codec/http2/Http2Connection$Listener;)V
     115: return

  public io.netty.handler.codec.http2.DefaultHttp2LocalFlowController frameWriter(io.netty.handler.codec.http2.Http2FrameWriter);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #30                 // String frameWriter
       4: invokestatic  #16                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: checkcast     #31                 // class io/netty/handler/codec/http2/Http2FrameWriter
      10: putfield      #2                  // Field frameWriter:Lio/netty/handler/codec/http2/Http2FrameWriter;
      13: aload_0
      14: areturn

  public void channelHandlerContext(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #32                 // String ctx
       4: invokestatic  #16                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: checkcast     #33                 // class io/netty/channel/ChannelHandlerContext
      10: putfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      13: return

  public void initialWindowSize(int) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: getstatic     #34                 // Field $assertionsDisabled:Z
       3: ifne          38
       6: aload_0
       7: getfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      10: ifnull        38
      13: aload_0
      14: getfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      17: invokeinterface #35,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      22: invokeinterface #36,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      27: ifne          38
      30: new           #37                 // class java/lang/AssertionError
      33: dup
      34: invokespecial #38                 // Method java/lang/AssertionError."<init>":()V
      37: athrow
      38: iload_1
      39: aload_0
      40: getfield      #7                  // Field initialWindowSize:I
      43: isub
      44: istore_2
      45: aload_0
      46: iload_1
      47: putfield      #7                  // Field initialWindowSize:I
      50: new           #39                 // class io/netty/handler/codec/http2/DefaultHttp2LocalFlowController$WindowUpdateVisitor
      53: dup
      54: aload_0
      55: iload_2
      56: invokespecial #40                 // Method io/netty/handler/codec/http2/DefaultHttp2LocalFlowController$WindowUpdateVisitor."<init>":(Lio/netty/handler/codec/http2/DefaultHttp2LocalFlowController;I)V
      59: astore_3
      60: aload_0
      61: getfield      #18                 // Field connection:Lio/netty/handler/codec/http2/Http2Connection;
      64: aload_3
      65: invokeinterface #41,  2           // InterfaceMethod io/netty/handler/codec/http2/Http2Connection.forEachActiveStream:(Lio/netty/handler/codec/http2/Http2StreamVisitor;)Lio/netty/handler/codec/http2/Http2Stream;
      70: pop
      71: aload_3
      72: invokevirtual #42                 // Method io/netty/handler/codec/http2/DefaultHttp2LocalFlowController$WindowUpdateVisitor.throwIfError:()V
      75: return

  public int initialWindowSize();
    Code:
       0: aload_0
       1: getfield      #7                  // Field initialWindowSize:I
       4: ireturn

  public int windowSize(io.netty.handler.codec.http2.Http2Stream);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method state:(Lio/netty/handler/codec/http2/Http2Stream;)Lio/netty/handler/codec/http2/DefaultHttp2LocalFlowController$FlowState;
       5: invokeinterface #43,  1           // InterfaceMethod io/netty/handler/codec/http2/DefaultHttp2LocalFlowController$FlowState.windowSize:()I
      10: ireturn

  public int initialWindowSize(io.netty.handler.codec.http2.Http2Stream);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method state:(Lio/netty/handler/codec/http2/Http2Stream;)Lio/netty/handler/codec/http2/DefaultHttp2LocalFlowController$FlowState;
       5: invokeinterface #44,  1           // InterfaceMethod io/netty/handler/codec/http2/DefaultHttp2LocalFlowController$FlowState.initialWindowSize:()I
      10: ireturn

  public void incrementWindowSize(io.netty.handler.codec.http2.Http2Stream, int) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: getstatic     #34                 // Field $assertionsDisabled:Z
       3: ifne          38
       6: aload_0
       7: getfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      10: ifnull        30
      13: aload_0
      14: getfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      17: invokeinterface #35,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      22: invokeinterface #36,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      27: ifne          38
      30: new           #37                 // class java/lang/AssertionError
      33: dup
      34: invokespecial #38                 // Method java/lang/AssertionError."<init>":()V
      37: athrow
      38: aload_0
      39: aload_1
      40: invokespecial #6                  // Method state:(Lio/netty/handler/codec/http2/Http2Stream;)Lio/netty/handler/codec/http2/DefaultHttp2LocalFlowController$FlowState;
      43: astore_3
      44: aload_3
      45: iload_2
      46: invokeinterface #45,  2           // InterfaceMethod io/netty/handler/codec/http2/DefaultHttp2LocalFlowController$FlowState.incrementInitialStreamWindow:(I)V
      51: aload_3
      52: invokeinterface #46,  1           // InterfaceMethod io/netty/handler/codec/http2/DefaultHttp2LocalFlowController$FlowState.writeWindowUpdateIfNeeded:()Z
      57: pop
      58: return

  public boolean consumeBytes(io.netty.handler.codec.http2.Http2Stream, int) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: getstatic     #34                 // Field $assertionsDisabled:Z
       3: ifne          38
       6: aload_0
       7: getfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      10: ifnull        30
      13: aload_0
      14: getfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      17: invokeinterface #35,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      22: invokeinterface #36,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      27: ifne          38
      30: new           #37                 // class java/lang/AssertionError
      33: dup
      34: invokespecial #38                 // Method java/lang/AssertionError."<init>":()V
      37: athrow
      38: iload_2
      39: ifge          52
      42: new           #47                 // class java/lang/IllegalArgumentException
      45: dup
      46: ldc           #48                 // String numBytes must not be negative
      48: invokespecial #49                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: iload_2
      53: ifne          58
      56: iconst_0
      57: ireturn
      58: aload_1
      59: ifnull        115
      62: aload_1
      63: invokestatic  #50                 // Method isClosed:(Lio/netty/handler/codec/http2/Http2Stream;)Z
      66: ifne          115
      69: aload_1
      70: invokeinterface #51,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2Stream.id:()I
      75: ifne          88
      78: new           #52                 // class java/lang/UnsupportedOperationException
      81: dup
      82: ldc           #53                 // String Returning bytes for the connection window is not supported
      84: invokespecial #54                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      87: athrow
      88: aload_0
      89: invokespecial #4                  // Method connectionState:()Lio/netty/handler/codec/http2/DefaultHttp2LocalFlowController$FlowState;
      92: iload_2
      93: invokeinterface #55,  2           // InterfaceMethod io/netty/handler/codec/http2/DefaultHttp2LocalFlowController$FlowState.consumeBytes:(I)Z
      98: istore_3
      99: iload_3
     100: aload_0
     101: aload_1
     102: invokespecial #6                  // Method state:(Lio/netty/handler/codec/http2/Http2Stream;)Lio/netty/handler/codec/http2/DefaultHttp2LocalFlowController$FlowState;
     105: iload_2
     106: invokeinterface #55,  2           // InterfaceMethod io/netty/handler/codec/http2/DefaultHttp2LocalFlowController$FlowState.consumeBytes:(I)Z
     111: ior
     112: istore_3
     113: iload_3
     114: ireturn
     115: iconst_0
     116: ireturn

  public int unconsumedBytes(io.netty.handler.codec.http2.Http2Stream);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method state:(Lio/netty/handler/codec/http2/Http2Stream;)Lio/netty/handler/codec/http2/DefaultHttp2LocalFlowController$FlowState;
       5: invokeinterface #56,  1           // InterfaceMethod io/netty/handler/codec/http2/DefaultHttp2LocalFlowController$FlowState.unconsumedBytes:()I
      10: ireturn

  private static void checkValidRatio(float);
    Code:
       0: fload_0
       1: f2d
       2: dconst_0
       3: invokestatic  #57                 // Method java/lang/Double.compare:(DD)I
       6: ifle          18
       9: fload_0
      10: f2d
      11: dconst_1
      12: invokestatic  #57                 // Method java/lang/Double.compare:(DD)I
      15: iflt          45
      18: new           #47                 // class java/lang/IllegalArgumentException
      21: dup
      22: new           #58                 // class java/lang/StringBuilder
      25: dup
      26: invokespecial #59                 // Method java/lang/StringBuilder."<init>":()V
      29: ldc           #60                 // String Invalid ratio:
      31: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: fload_0
      35: invokevirtual #62                 // Method java/lang/StringBuilder.append:(F)Ljava/lang/StringBuilder;
      38: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: invokespecial #49                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: return

  public void windowUpdateRatio(float);
    Code:
       0: getstatic     #34                 // Field $assertionsDisabled:Z
       3: ifne          38
       6: aload_0
       7: getfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      10: ifnull        38
      13: aload_0
      14: getfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      17: invokeinterface #35,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      22: invokeinterface #36,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      27: ifne          38
      30: new           #37                 // class java/lang/AssertionError
      33: dup
      34: invokespecial #38                 // Method java/lang/AssertionError."<init>":()V
      37: athrow
      38: fload_1
      39: invokestatic  #64                 // Method checkValidRatio:(F)V
      42: aload_0
      43: fload_1
      44: putfield      #3                  // Field windowUpdateRatio:F
      47: return

  public float windowUpdateRatio();
    Code:
       0: aload_0
       1: getfield      #3                  // Field windowUpdateRatio:F
       4: freturn

  public void windowUpdateRatio(io.netty.handler.codec.http2.Http2Stream, float) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: getstatic     #34                 // Field $assertionsDisabled:Z
       3: ifne          38
       6: aload_0
       7: getfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      10: ifnull        30
      13: aload_0
      14: getfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      17: invokeinterface #35,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      22: invokeinterface #36,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      27: ifne          38
      30: new           #37                 // class java/lang/AssertionError
      33: dup
      34: invokespecial #38                 // Method java/lang/AssertionError."<init>":()V
      37: athrow
      38: fload_2
      39: invokestatic  #64                 // Method checkValidRatio:(F)V
      42: aload_0
      43: aload_1
      44: invokespecial #6                  // Method state:(Lio/netty/handler/codec/http2/Http2Stream;)Lio/netty/handler/codec/http2/DefaultHttp2LocalFlowController$FlowState;
      47: astore_3
      48: aload_3
      49: fload_2
      50: invokeinterface #65,  2           // InterfaceMethod io/netty/handler/codec/http2/DefaultHttp2LocalFlowController$FlowState.windowUpdateRatio:(F)V
      55: aload_3
      56: invokeinterface #46,  1           // InterfaceMethod io/netty/handler/codec/http2/DefaultHttp2LocalFlowController$FlowState.writeWindowUpdateIfNeeded:()Z
      61: pop
      62: return

  public float windowUpdateRatio(io.netty.handler.codec.http2.Http2Stream) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method state:(Lio/netty/handler/codec/http2/Http2Stream;)Lio/netty/handler/codec/http2/DefaultHttp2LocalFlowController$FlowState;
       5: invokeinterface #66,  1           // InterfaceMethod io/netty/handler/codec/http2/DefaultHttp2LocalFlowController$FlowState.windowUpdateRatio:()F
      10: freturn

  public void receiveFlowControlledFrame(io.netty.handler.codec.http2.Http2Stream, io.netty.buffer.ByteBuf, int, boolean) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: getstatic     #34                 // Field $assertionsDisabled:Z
       3: ifne          38
       6: aload_0
       7: getfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      10: ifnull        30
      13: aload_0
      14: getfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      17: invokeinterface #35,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      22: invokeinterface #36,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      27: ifne          38
      30: new           #37                 // class java/lang/AssertionError
      33: dup
      34: invokespecial #38                 // Method java/lang/AssertionError."<init>":()V
      37: athrow
      38: aload_2
      39: invokevirtual #67                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
      42: iload_3
      43: iadd
      44: istore        5
      46: aload_0
      47: invokespecial #4                  // Method connectionState:()Lio/netty/handler/codec/http2/DefaultHttp2LocalFlowController$FlowState;
      50: astore        6
      52: aload         6
      54: iload         5
      56: invokeinterface #68,  2           // InterfaceMethod io/netty/handler/codec/http2/DefaultHttp2LocalFlowController$FlowState.receiveFlowControlledFrame:(I)V
      61: aload_1
      62: ifnull        100
      65: aload_1
      66: invokestatic  #50                 // Method isClosed:(Lio/netty/handler/codec/http2/Http2Stream;)Z
      69: ifne          100
      72: aload_0
      73: aload_1
      74: invokespecial #6                  // Method state:(Lio/netty/handler/codec/http2/Http2Stream;)Lio/netty/handler/codec/http2/DefaultHttp2LocalFlowController$FlowState;
      77: astore        7
      79: aload         7
      81: iload         4
      83: invokeinterface #69,  2           // InterfaceMethod io/netty/handler/codec/http2/DefaultHttp2LocalFlowController$FlowState.endOfStream:(Z)V
      88: aload         7
      90: iload         5
      92: invokeinterface #68,  2           // InterfaceMethod io/netty/handler/codec/http2/DefaultHttp2LocalFlowController$FlowState.receiveFlowControlledFrame:(I)V
      97: goto          115
     100: iload         5
     102: ifle          115
     105: aload         6
     107: iload         5
     109: invokeinterface #55,  2           // InterfaceMethod io/netty/handler/codec/http2/DefaultHttp2LocalFlowController$FlowState.consumeBytes:(I)Z
     114: pop
     115: return

  private io.netty.handler.codec.http2.DefaultHttp2LocalFlowController$FlowState connectionState();
    Code:
       0: aload_0
       1: getfield      #18                 // Field connection:Lio/netty/handler/codec/http2/Http2Connection;
       4: invokeinterface #22,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2Connection.connectionStream:()Lio/netty/handler/codec/http2/Http2Stream;
       9: aload_0
      10: getfield      #9                  // Field stateKey:Lio/netty/handler/codec/http2/Http2Connection$PropertyKey;
      13: invokeinterface #70,  2           // InterfaceMethod io/netty/handler/codec/http2/Http2Stream.getProperty:(Lio/netty/handler/codec/http2/Http2Connection$PropertyKey;)Ljava/lang/Object;
      18: checkcast     #71                 // class io/netty/handler/codec/http2/DefaultHttp2LocalFlowController$FlowState
      21: areturn

  private io.netty.handler.codec.http2.DefaultHttp2LocalFlowController$FlowState state(io.netty.handler.codec.http2.Http2Stream);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #9                  // Field stateKey:Lio/netty/handler/codec/http2/Http2Connection$PropertyKey;
       5: invokeinterface #70,  2           // InterfaceMethod io/netty/handler/codec/http2/Http2Stream.getProperty:(Lio/netty/handler/codec/http2/Http2Connection$PropertyKey;)Ljava/lang/Object;
      10: checkcast     #71                 // class io/netty/handler/codec/http2/DefaultHttp2LocalFlowController$FlowState
      13: areturn

  private static boolean isClosed(io.netty.handler.codec.http2.Http2Stream);
    Code:
       0: aload_0
       1: invokeinterface #72,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2Stream.state:()Lio/netty/handler/codec/http2/Http2Stream$State;
       6: getstatic     #73                 // Field io/netty/handler/codec/http2/Http2Stream$State.CLOSED:Lio/netty/handler/codec/http2/Http2Stream$State;
       9: if_acmpne     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public io.netty.handler.codec.http2.Http2LocalFlowController frameWriter(io.netty.handler.codec.http2.Http2FrameWriter);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #74                 // Method frameWriter:(Lio/netty/handler/codec/http2/Http2FrameWriter;)Lio/netty/handler/codec/http2/DefaultHttp2LocalFlowController;
       5: areturn

  static io.netty.handler.codec.http2.Http2Connection$PropertyKey access$000(io.netty.handler.codec.http2.DefaultHttp2LocalFlowController);
    Code:
       0: aload_0
       1: getfield      #9                  // Field stateKey:Lio/netty/handler/codec/http2/Http2Connection$PropertyKey;
       4: areturn

  static io.netty.handler.codec.http2.DefaultHttp2LocalFlowController$FlowState access$100();
    Code:
       0: getstatic     #8                  // Field REDUCED_FLOW_STATE:Lio/netty/handler/codec/http2/DefaultHttp2LocalFlowController$FlowState;
       3: areturn

  static int access$200(io.netty.handler.codec.http2.DefaultHttp2LocalFlowController);
    Code:
       0: aload_0
       1: getfield      #7                  // Field initialWindowSize:I
       4: ireturn

  static io.netty.handler.codec.http2.DefaultHttp2LocalFlowController$FlowState access$300(io.netty.handler.codec.http2.DefaultHttp2LocalFlowController, io.netty.handler.codec.http2.Http2Stream);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method state:(Lio/netty/handler/codec/http2/Http2Stream;)Lio/netty/handler/codec/http2/DefaultHttp2LocalFlowController$FlowState;
       5: areturn

  static io.netty.channel.ChannelHandlerContext access$400(io.netty.handler.codec.http2.DefaultHttp2LocalFlowController);
    Code:
       0: aload_0
       1: getfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: areturn

  static io.netty.handler.codec.http2.DefaultHttp2LocalFlowController$FlowState access$500(io.netty.handler.codec.http2.DefaultHttp2LocalFlowController);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method connectionState:()Lio/netty/handler/codec/http2/DefaultHttp2LocalFlowController$FlowState;
       4: areturn

  static float access$600(io.netty.handler.codec.http2.DefaultHttp2LocalFlowController);
    Code:
       0: aload_0
       1: getfield      #3                  // Field windowUpdateRatio:F
       4: freturn

  static io.netty.handler.codec.http2.Http2FrameWriter access$700(io.netty.handler.codec.http2.DefaultHttp2LocalFlowController);
    Code:
       0: aload_0
       1: getfield      #2                  // Field frameWriter:Lio/netty/handler/codec/http2/Http2FrameWriter;
       4: areturn

  static {};
    Code:
       0: ldc           #10                 // class io/netty/handler/codec/http2/DefaultHttp2LocalFlowController
       2: invokevirtual #75                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #34                 // Field $assertionsDisabled:Z
      16: new           #76                 // class io/netty/handler/codec/http2/DefaultHttp2LocalFlowController$2
      19: dup
      20: invokespecial #77                 // Method io/netty/handler/codec/http2/DefaultHttp2LocalFlowController$2."<init>":()V
      23: putstatic     #8                  // Field REDUCED_FLOW_STATE:Lio/netty/handler/codec/http2/DefaultHttp2LocalFlowController$FlowState;
      26: return
}
