Compiled from "SctpInboundByteStreamHandler.java"
public class io.netty.handler.codec.sctp.SctpInboundByteStreamHandler extends io.netty.handler.codec.MessageToMessageDecoder<io.netty.channel.sctp.SctpMessage> {
  private final int protocolIdentifier;

  private final int streamIdentifier;

  public io.netty.handler.codec.sctp.SctpInboundByteStreamHandler(int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/netty/handler/codec/MessageToMessageDecoder."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field protocolIdentifier:I
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field streamIdentifier:I
      14: return

  public final boolean acceptInboundMessage(java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method io/netty/handler/codec/MessageToMessageDecoder.acceptInboundMessage:(Ljava/lang/Object;)Z
       5: ifeq          17
       8: aload_0
       9: aload_1
      10: checkcast     #5                  // class io/netty/channel/sctp/SctpMessage
      13: invokevirtual #6                  // Method acceptInboundMessage:(Lio/netty/channel/sctp/SctpMessage;)Z
      16: ireturn
      17: iconst_0
      18: ireturn

  protected boolean acceptInboundMessage(io.netty.channel.sctp.SctpMessage);
    Code:
       0: aload_1
       1: invokevirtual #7                  // Method io/netty/channel/sctp/SctpMessage.protocolIdentifier:()I
       4: aload_0
       5: getfield      #2                  // Field protocolIdentifier:I
       8: if_icmpne     26
      11: aload_1
      12: invokevirtual #8                  // Method io/netty/channel/sctp/SctpMessage.streamIdentifier:()I
      15: aload_0
      16: getfield      #3                  // Field streamIdentifier:I
      19: if_icmpne     26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  protected void decode(io.netty.channel.ChannelHandlerContext, io.netty.channel.sctp.SctpMessage, java.util.List<java.lang.Object>) throws java.lang.Exception;
    Code:
       0: aload_2
       1: invokevirtual #9                  // Method io/netty/channel/sctp/SctpMessage.isComplete:()Z
       4: ifne          32
       7: new           #10                 // class io/netty/handler/codec/CodecException
      10: dup
      11: ldc           #11                 // String Received SctpMessage is not complete, please add %s in the pipeline before this handler
      13: iconst_1
      14: anewarray     #12                 // class java/lang/Object
      17: dup
      18: iconst_0
      19: ldc           #13                 // class io/netty/handler/codec/sctp/SctpMessageCompletionHandler
      21: invokevirtual #14                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      24: aastore
      25: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      28: invokespecial #16                 // Method io/netty/handler/codec/CodecException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: aload_3
      33: aload_2
      34: invokevirtual #17                 // Method io/netty/channel/sctp/SctpMessage.content:()Lio/netty/buffer/ByteBuf;
      37: invokevirtual #18                 // Method io/netty/buffer/ByteBuf.retain:()Lio/netty/buffer/ByteBuf;
      40: invokeinterface #19,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      45: pop
      46: return

  protected void decode(io.netty.channel.ChannelHandlerContext, java.lang.Object, java.util.List) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #5                  // class io/netty/channel/sctp/SctpMessage
       6: aload_3
       7: invokevirtual #20                 // Method decode:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/sctp/SctpMessage;Ljava/util/List;)V
      10: return
}
