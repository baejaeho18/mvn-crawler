Compiled from "Http2Connection.java"
public interface io.netty.handler.codec.http2.Http2Connection {
  public abstract io.netty.util.concurrent.Future<java.lang.Void> close(io.netty.util.concurrent.Promise<java.lang.Void>);

  public abstract io.netty.handler.codec.http2.Http2Connection$PropertyKey newKey();

  public abstract void addListener(io.netty.handler.codec.http2.Http2Connection$Listener);

  public abstract void removeListener(io.netty.handler.codec.http2.Http2Connection$Listener);

  public abstract io.netty.handler.codec.http2.Http2Stream stream(int);

  public abstract boolean streamMayHaveExisted(int);

  public abstract io.netty.handler.codec.http2.Http2Stream connectionStream();

  public abstract int numActiveStreams();

  public abstract io.netty.handler.codec.http2.Http2Stream forEachActiveStream(io.netty.handler.codec.http2.Http2StreamVisitor) throws io.netty.handler.codec.http2.Http2Exception;

  public abstract boolean isServer();

  public abstract io.netty.handler.codec.http2.Http2Connection$Endpoint<io.netty.handler.codec.http2.Http2LocalFlowController> local();

  public abstract io.netty.handler.codec.http2.Http2Connection$Endpoint<io.netty.handler.codec.http2.Http2RemoteFlowController> remote();

  public abstract boolean goAwayReceived();

  public abstract void goAwayReceived(int, long, io.netty.buffer.ByteBuf);

  public abstract boolean goAwaySent();

  public abstract void goAwaySent(int, long, io.netty.buffer.ByteBuf);
}
