Compiled from "PerMessageDeflateClientExtensionHandshaker.java"
public final class io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker implements io.netty.handler.codec.http.websocketx.extensions.WebSocketClientExtensionHandshaker {
  private final int compressionLevel;

  private final boolean allowClientWindowSize;

  private final int requestedServerWindowSize;

  private final boolean allowClientNoContext;

  private final boolean requestedServerNoContext;

  public io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker();
    Code:
       0: aload_0
       1: bipush        6
       3: invokestatic  #3                  // Method io/netty/handler/codec/compression/ZlibCodecFactory.isSupportingWindowSizeAndMemLevel:()Z
       6: bipush        15
       8: iconst_0
       9: iconst_0
      10: invokespecial #4                  // Method "<init>":(IZIZZ)V
      13: return

  public io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker(int, boolean, int, boolean, boolean);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: iload_3
       5: bipush        15
       7: if_icmpgt     16
      10: iload_3
      11: bipush        8
      13: if_icmpge     48
      16: new           #6                  // class java/lang/IllegalArgumentException
      19: dup
      20: new           #7                  // class java/lang/StringBuilder
      23: dup
      24: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      27: ldc           #9                  // String requestedServerWindowSize:
      29: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: iload_3
      33: invokevirtual #11                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      36: ldc           #12                 // String  (expected: 8-15)
      38: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: iload_1
      49: iflt          58
      52: iload_1
      53: bipush        9
      55: if_icmple     90
      58: new           #6                  // class java/lang/IllegalArgumentException
      61: dup
      62: new           #7                  // class java/lang/StringBuilder
      65: dup
      66: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      69: ldc           #15                 // String compressionLevel:
      71: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: iload_1
      75: invokevirtual #11                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      78: ldc           #16                 // String  (expected: 0-9)
      80: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      86: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      89: athrow
      90: aload_0
      91: iload_1
      92: putfield      #2                  // Field compressionLevel:I
      95: aload_0
      96: iload_2
      97: putfield      #17                 // Field allowClientWindowSize:Z
     100: aload_0
     101: iload_3
     102: putfield      #18                 // Field requestedServerWindowSize:I
     105: aload_0
     106: iload         4
     108: putfield      #19                 // Field allowClientNoContext:Z
     111: aload_0
     112: iload         5
     114: putfield      #20                 // Field requestedServerNoContext:Z
     117: return

  public io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionData newRequestData();
    Code:
       0: new           #21                 // class java/util/HashMap
       3: dup
       4: iconst_4
       5: invokespecial #22                 // Method java/util/HashMap."<init>":(I)V
       8: astore_1
       9: aload_0
      10: getfield      #18                 // Field requestedServerWindowSize:I
      13: bipush        15
      15: if_icmpeq     26
      18: aload_1
      19: ldc           #23                 // String server_no_context_takeover
      21: aconst_null
      22: invokevirtual #24                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      25: pop
      26: aload_0
      27: getfield      #19                 // Field allowClientNoContext:Z
      30: ifeq          41
      33: aload_1
      34: ldc           #25                 // String client_no_context_takeover
      36: aconst_null
      37: invokevirtual #24                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      40: pop
      41: aload_0
      42: getfield      #18                 // Field requestedServerWindowSize:I
      45: bipush        15
      47: if_icmpeq     64
      50: aload_1
      51: ldc           #26                 // String server_max_window_bits
      53: aload_0
      54: getfield      #18                 // Field requestedServerWindowSize:I
      57: invokestatic  #27                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      60: invokevirtual #24                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      63: pop
      64: aload_0
      65: getfield      #17                 // Field allowClientWindowSize:Z
      68: ifeq          79
      71: aload_1
      72: ldc           #28                 // String client_max_window_bits
      74: aconst_null
      75: invokevirtual #24                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      78: pop
      79: new           #29                 // class io/netty/handler/codec/http/websocketx/extensions/WebSocketExtensionData
      82: dup
      83: ldc           #30                 // String permessage-deflate
      85: aload_1
      86: invokespecial #31                 // Method io/netty/handler/codec/http/websocketx/extensions/WebSocketExtensionData."<init>":(Ljava/lang/String;Ljava/util/Map;)V
      89: areturn

  public io.netty.handler.codec.http.websocketx.extensions.WebSocketClientExtension handshakeExtension(io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionData);
    Code:
       0: ldc           #30                 // String permessage-deflate
       2: aload_1
       3: invokevirtual #32                 // Method io/netty/handler/codec/http/websocketx/extensions/WebSocketExtensionData.name:()Ljava/lang/String;
       6: invokevirtual #33                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       9: ifne          14
      12: aconst_null
      13: areturn
      14: iconst_1
      15: istore_2
      16: bipush        15
      18: istore_3
      19: bipush        15
      21: istore        4
      23: iconst_0
      24: istore        5
      26: iconst_0
      27: istore        6
      29: aload_1
      30: invokevirtual #34                 // Method io/netty/handler/codec/http/websocketx/extensions/WebSocketExtensionData.parameters:()Ljava/util/Map;
      33: invokeinterface #35,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      38: invokeinterface #36,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      43: astore        7
      45: iload_2
      46: ifeq          245
      49: aload         7
      51: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      56: ifeq          245
      59: aload         7
      61: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      66: checkcast     #39                 // class java/util/Map$Entry
      69: astore        8
      71: ldc           #28                 // String client_max_window_bits
      73: aload         8
      75: invokeinterface #40,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      80: checkcast     #41                 // class java/lang/String
      83: invokevirtual #42                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      86: ifeq          118
      89: aload_0
      90: getfield      #17                 // Field allowClientWindowSize:Z
      93: ifeq          113
      96: aload         8
      98: invokeinterface #43,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     103: checkcast     #41                 // class java/lang/String
     106: invokestatic  #44                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     109: istore_3
     110: goto          242
     113: iconst_0
     114: istore_2
     115: goto          242
     118: ldc           #26                 // String server_max_window_bits
     120: aload         8
     122: invokeinterface #40,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     127: checkcast     #41                 // class java/lang/String
     130: invokevirtual #42                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     133: ifeq          168
     136: aload         8
     138: invokeinterface #43,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     143: checkcast     #41                 // class java/lang/String
     146: invokestatic  #44                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     149: istore        4
     151: iload_3
     152: bipush        15
     154: if_icmpgt     163
     157: iload_3
     158: bipush        8
     160: if_icmpge     242
     163: iconst_0
     164: istore_2
     165: goto          242
     168: ldc           #25                 // String client_no_context_takeover
     170: aload         8
     172: invokeinterface #40,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     177: checkcast     #41                 // class java/lang/String
     180: invokevirtual #42                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     183: ifeq          204
     186: aload_0
     187: getfield      #19                 // Field allowClientNoContext:Z
     190: ifeq          199
     193: iconst_1
     194: istore        6
     196: goto          242
     199: iconst_0
     200: istore_2
     201: goto          242
     204: ldc           #23                 // String server_no_context_takeover
     206: aload         8
     208: invokeinterface #40,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     213: checkcast     #41                 // class java/lang/String
     216: invokevirtual #42                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     219: ifeq          240
     222: aload_0
     223: getfield      #20                 // Field requestedServerNoContext:Z
     226: ifeq          235
     229: iconst_1
     230: istore        5
     232: goto          242
     235: iconst_0
     236: istore_2
     237: goto          242
     240: iconst_0
     241: istore_2
     242: goto          45
     245: aload_0
     246: getfield      #20                 // Field requestedServerNoContext:Z
     249: ifeq          257
     252: iload         5
     254: ifeq          266
     257: aload_0
     258: getfield      #18                 // Field requestedServerWindowSize:I
     261: iload         4
     263: if_icmpeq     268
     266: iconst_0
     267: istore_2
     268: iload_2
     269: ifeq          288
     272: new           #45                 // class io/netty/handler/codec/http/websocketx/extensions/compression/PerMessageDeflateClientExtensionHandshaker$PermessageDeflateExtension
     275: dup
     276: aload_0
     277: iload         5
     279: iload         4
     281: iload         6
     283: iload_3
     284: invokespecial #46                 // Method io/netty/handler/codec/http/websocketx/extensions/compression/PerMessageDeflateClientExtensionHandshaker$PermessageDeflateExtension."<init>":(Lio/netty/handler/codec/http/websocketx/extensions/compression/PerMessageDeflateClientExtensionHandshaker;ZIZI)V
     287: areturn
     288: aconst_null
     289: areturn

  static int access$000(io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker);
    Code:
       0: aload_0
       1: getfield      #2                  // Field compressionLevel:I
       4: ireturn
}
