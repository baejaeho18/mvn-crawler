Compiled from "SslUtils.java"
final class io.netty.handler.ssl.SslUtils {
  static final int SSL_CONTENT_TYPE_CHANGE_CIPHER_SPEC;

  static final int SSL_CONTENT_TYPE_ALERT;

  static final int SSL_CONTENT_TYPE_HANDSHAKE;

  static final int SSL_CONTENT_TYPE_APPLICATION_DATA;

  static final int SSL_CONTENT_TYPE_EXTENSION_HEARTBEAT;

  static final int SSL_RECORD_HEADER_LENGTH;

  static final int NOT_ENOUGH_DATA;

  static final int NOT_ENCRYPTED;

  static javax.net.ssl.SSLHandshakeException toSSLHandshakeException(java.lang.Throwable);
    Code:
       0: aload_0
       1: instanceof    #1                  // class javax/net/ssl/SSLHandshakeException
       4: ifeq          12
       7: aload_0
       8: checkcast     #1                  // class javax/net/ssl/SSLHandshakeException
      11: areturn
      12: new           #1                  // class javax/net/ssl/SSLHandshakeException
      15: dup
      16: aload_0
      17: invokevirtual #2                  // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      20: invokespecial #3                  // Method javax/net/ssl/SSLHandshakeException."<init>":(Ljava/lang/String;)V
      23: aload_0
      24: invokevirtual #4                  // Method javax/net/ssl/SSLHandshakeException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      27: checkcast     #1                  // class javax/net/ssl/SSLHandshakeException
      30: areturn

  static int getEncryptedPacketLength(io.netty.buffer.ByteBuf, int);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: iload_1
       4: invokevirtual #5                  // Method io/netty/buffer/ByteBuf.getUnsignedByte:(I)S
       7: tableswitch   { // 20 to 24
                    20: 40
                    21: 40
                    22: 40
                    23: 40
                    24: 40
               default: 45
          }
      40: iconst_1
      41: istore_3
      42: goto          47
      45: iconst_0
      46: istore_3
      47: iload_3
      48: ifeq          88
      51: aload_0
      52: iload_1
      53: iconst_1
      54: iadd
      55: invokevirtual #5                  // Method io/netty/buffer/ByteBuf.getUnsignedByte:(I)S
      58: istore        4
      60: iload         4
      62: iconst_3
      63: if_icmpne     86
      66: aload_0
      67: iload_1
      68: iconst_3
      69: iadd
      70: invokestatic  #6                  // Method unsignedShortBE:(Lio/netty/buffer/ByteBuf;I)I
      73: iconst_5
      74: iadd
      75: istore_2
      76: iload_2
      77: iconst_5
      78: if_icmpgt     88
      81: iconst_0
      82: istore_3
      83: goto          88
      86: iconst_0
      87: istore_3
      88: iload_3
      89: ifne          178
      92: aload_0
      93: iload_1
      94: invokevirtual #5                  // Method io/netty/buffer/ByteBuf.getUnsignedByte:(I)S
      97: sipush        128
     100: iand
     101: ifeq          108
     104: iconst_2
     105: goto          109
     108: iconst_3
     109: istore        4
     111: aload_0
     112: iload_1
     113: iload         4
     115: iadd
     116: iconst_1
     117: iadd
     118: invokevirtual #5                  // Method io/netty/buffer/ByteBuf.getUnsignedByte:(I)S
     121: istore        5
     123: iload         5
     125: iconst_2
     126: if_icmpeq     135
     129: iload         5
     131: iconst_3
     132: if_icmpne     175
     135: iload         4
     137: iconst_2
     138: if_icmpne     155
     141: aload_0
     142: iload_1
     143: invokestatic  #8                  // Method shortBE:(Lio/netty/buffer/ByteBuf;I)S
     146: sipush        32767
     149: iand
     150: iconst_2
     151: iadd
     152: goto          166
     155: aload_0
     156: iload_1
     157: invokestatic  #8                  // Method shortBE:(Lio/netty/buffer/ByteBuf;I)S
     160: sipush        16383
     163: iand
     164: iconst_3
     165: iadd
     166: istore_2
     167: iload_2
     168: iload         4
     170: if_icmpgt     178
     173: iconst_m1
     174: ireturn
     175: bipush        -2
     177: ireturn
     178: iload_2
     179: ireturn

  private static int unsignedShortBE(io.netty.buffer.ByteBuf, int);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method io/netty/buffer/ByteBuf.order:()Ljava/nio/ByteOrder;
       4: getstatic     #10                 // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
       7: if_acmpne     18
      10: aload_0
      11: iload_1
      12: invokevirtual #11                 // Method io/netty/buffer/ByteBuf.getUnsignedShort:(I)I
      15: goto          23
      18: aload_0
      19: iload_1
      20: invokevirtual #12                 // Method io/netty/buffer/ByteBuf.getUnsignedShortLE:(I)I
      23: ireturn

  private static short shortBE(io.netty.buffer.ByteBuf, int);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method io/netty/buffer/ByteBuf.order:()Ljava/nio/ByteOrder;
       4: getstatic     #10                 // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
       7: if_acmpne     18
      10: aload_0
      11: iload_1
      12: invokevirtual #13                 // Method io/netty/buffer/ByteBuf.getShort:(I)S
      15: goto          23
      18: aload_0
      19: iload_1
      20: invokevirtual #14                 // Method io/netty/buffer/ByteBuf.getShortLE:(I)S
      23: ireturn

  private static short unsignedByte(byte);
    Code:
       0: iload_0
       1: sipush        255
       4: iand
       5: i2s
       6: ireturn

  private static int unsignedShortBE(java.nio.ByteBuffer, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #15                 // Method shortBE:(Ljava/nio/ByteBuffer;I)S
       5: ldc           #16                 // int 65535
       7: iand
       8: ireturn

  private static short shortBE(java.nio.ByteBuffer, int);
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method java/nio/ByteBuffer.order:()Ljava/nio/ByteOrder;
       4: getstatic     #10                 // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
       7: if_acmpne     18
      10: aload_0
      11: iload_1
      12: invokevirtual #18                 // Method java/nio/ByteBuffer.getShort:(I)S
      15: goto          26
      18: aload_0
      19: iload_1
      20: invokevirtual #18                 // Method java/nio/ByteBuffer.getShort:(I)S
      23: invokestatic  #19                 // Method io/netty/buffer/ByteBufUtil.swapShort:(S)S
      26: ireturn

  static int getEncryptedPacketLength(java.nio.ByteBuffer[], int);
    Code:
       0: aload_0
       1: iload_1
       2: aaload
       3: astore_2
       4: aload_2
       5: invokevirtual #20                 // Method java/nio/ByteBuffer.remaining:()I
       8: iconst_5
       9: if_icmplt     17
      12: aload_2
      13: invokestatic  #21                 // Method getEncryptedPacketLength:(Ljava/nio/ByteBuffer;)I
      16: ireturn
      17: iconst_5
      18: invokestatic  #22                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      21: astore_3
      22: aload_0
      23: iload_1
      24: iinc          1, 1
      27: aaload
      28: invokevirtual #23                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      31: astore_2
      32: aload_2
      33: invokevirtual #20                 // Method java/nio/ByteBuffer.remaining:()I
      36: aload_3
      37: invokevirtual #20                 // Method java/nio/ByteBuffer.remaining:()I
      40: if_icmple     57
      43: aload_2
      44: aload_2
      45: invokevirtual #24                 // Method java/nio/ByteBuffer.position:()I
      48: aload_3
      49: invokevirtual #20                 // Method java/nio/ByteBuffer.remaining:()I
      52: iadd
      53: invokevirtual #25                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      56: pop
      57: aload_3
      58: aload_2
      59: invokevirtual #26                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      62: pop
      63: aload_3
      64: invokevirtual #27                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      67: ifne          22
      70: aload_3
      71: invokevirtual #28                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      74: pop
      75: aload_3
      76: invokestatic  #21                 // Method getEncryptedPacketLength:(Ljava/nio/ByteBuffer;)I
      79: ireturn

  private static int getEncryptedPacketLength(java.nio.ByteBuffer);
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: invokevirtual #24                 // Method java/nio/ByteBuffer.position:()I
       6: istore_2
       7: aload_0
       8: iload_2
       9: invokevirtual #29                 // Method java/nio/ByteBuffer.get:(I)B
      12: invokestatic  #30                 // Method unsignedByte:(B)S
      15: tableswitch   { // 20 to 24
                    20: 48
                    21: 48
                    22: 48
                    23: 48
                    24: 48
               default: 53
          }
      48: iconst_1
      49: istore_3
      50: goto          55
      53: iconst_0
      54: istore_3
      55: iload_3
      56: ifeq          99
      59: aload_0
      60: iload_2
      61: iconst_1
      62: iadd
      63: invokevirtual #29                 // Method java/nio/ByteBuffer.get:(I)B
      66: invokestatic  #30                 // Method unsignedByte:(B)S
      69: istore        4
      71: iload         4
      73: iconst_3
      74: if_icmpne     97
      77: aload_0
      78: iload_2
      79: iconst_3
      80: iadd
      81: invokestatic  #31                 // Method unsignedShortBE:(Ljava/nio/ByteBuffer;I)I
      84: iconst_5
      85: iadd
      86: istore_1
      87: iload_1
      88: iconst_5
      89: if_icmpgt     99
      92: iconst_0
      93: istore_3
      94: goto          99
      97: iconst_0
      98: istore_3
      99: iload_3
     100: ifne          195
     103: aload_0
     104: iload_2
     105: invokevirtual #29                 // Method java/nio/ByteBuffer.get:(I)B
     108: invokestatic  #30                 // Method unsignedByte:(B)S
     111: sipush        128
     114: iand
     115: ifeq          122
     118: iconst_2
     119: goto          123
     122: iconst_3
     123: istore        4
     125: aload_0
     126: iload_2
     127: iload         4
     129: iadd
     130: iconst_1
     131: iadd
     132: invokevirtual #29                 // Method java/nio/ByteBuffer.get:(I)B
     135: invokestatic  #30                 // Method unsignedByte:(B)S
     138: istore        5
     140: iload         5
     142: iconst_2
     143: if_icmpeq     152
     146: iload         5
     148: iconst_3
     149: if_icmpne     192
     152: iload         4
     154: iconst_2
     155: if_icmpne     172
     158: aload_0
     159: iload_2
     160: invokestatic  #15                 // Method shortBE:(Ljava/nio/ByteBuffer;I)S
     163: sipush        32767
     166: iand
     167: iconst_2
     168: iadd
     169: goto          183
     172: aload_0
     173: iload_2
     174: invokestatic  #15                 // Method shortBE:(Ljava/nio/ByteBuffer;I)S
     177: sipush        16383
     180: iand
     181: iconst_3
     182: iadd
     183: istore_1
     184: iload_1
     185: iload         4
     187: if_icmpgt     195
     190: iconst_m1
     191: ireturn
     192: bipush        -2
     194: ireturn
     195: iload_1
     196: ireturn

  static void notifyHandshakeFailure(io.netty.channel.ChannelHandlerContext, java.lang.Throwable);
    Code:
       0: aload_0
       1: invokeinterface #32,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.flush:()Lio/netty/channel/ChannelHandlerContext;
       6: pop
       7: aload_0
       8: new           #33                 // class io/netty/handler/ssl/SslHandshakeCompletionEvent
      11: dup
      12: aload_1
      13: invokespecial #34                 // Method io/netty/handler/ssl/SslHandshakeCompletionEvent."<init>":(Ljava/lang/Throwable;)V
      16: invokeinterface #35,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireUserEventTriggered:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
      21: pop
      22: aload_0
      23: invokeinterface #36,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.close:()Lio/netty/channel/ChannelFuture;
      28: pop
      29: return

  static void zeroout(io.netty.buffer.ByteBuf);
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method io/netty/buffer/ByteBuf.isReadOnly:()Z
       4: ifne          17
       7: aload_0
       8: iconst_0
       9: aload_0
      10: invokevirtual #38                 // Method io/netty/buffer/ByteBuf.capacity:()I
      13: invokevirtual #39                 // Method io/netty/buffer/ByteBuf.setZero:(II)Lio/netty/buffer/ByteBuf;
      16: pop
      17: return

  static void zerooutAndRelease(io.netty.buffer.ByteBuf);
    Code:
       0: aload_0
       1: invokestatic  #40                 // Method zeroout:(Lio/netty/buffer/ByteBuf;)V
       4: aload_0
       5: invokevirtual #41                 // Method io/netty/buffer/ByteBuf.release:()Z
       8: pop
       9: return

  static io.netty.buffer.ByteBuf toBase64(io.netty.buffer.ByteBufAllocator, io.netty.buffer.ByteBuf);
    Code:
       0: aload_1
       1: aload_1
       2: invokevirtual #42                 // Method io/netty/buffer/ByteBuf.readerIndex:()I
       5: aload_1
       6: invokevirtual #43                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
       9: iconst_1
      10: getstatic     #44                 // Field io/netty/handler/codec/base64/Base64Dialect.STANDARD:Lio/netty/handler/codec/base64/Base64Dialect;
      13: aload_0
      14: invokestatic  #45                 // Method io/netty/handler/codec/base64/Base64.encode:(Lio/netty/buffer/ByteBuf;IIZLio/netty/handler/codec/base64/Base64Dialect;Lio/netty/buffer/ByteBufAllocator;)Lio/netty/buffer/ByteBuf;
      17: astore_2
      18: aload_1
      19: aload_1
      20: invokevirtual #46                 // Method io/netty/buffer/ByteBuf.writerIndex:()I
      23: invokevirtual #47                 // Method io/netty/buffer/ByteBuf.readerIndex:(I)Lio/netty/buffer/ByteBuf;
      26: pop
      27: aload_2
      28: areturn

  private io.netty.handler.ssl.SslUtils();
    Code:
       0: aload_0
       1: invokespecial #48                 // Method java/lang/Object."<init>":()V
       4: return
}
