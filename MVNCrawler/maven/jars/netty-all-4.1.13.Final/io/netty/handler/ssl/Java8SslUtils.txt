Compiled from "Java8SslUtils.java"
final class io.netty.handler.ssl.Java8SslUtils {
  private io.netty.handler.ssl.Java8SslUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  static java.util.List<java.lang.String> getSniHostNames(javax.net.ssl.SSLParameters);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method javax/net/ssl/SSLParameters.getServerNames:()Ljava/util/List;
       4: astore_1
       5: aload_1
       6: ifnull        18
       9: aload_1
      10: invokeinterface #3,  1            // InterfaceMethod java/util/List.isEmpty:()Z
      15: ifeq          22
      18: invokestatic  #4                  // Method java/util/Collections.emptyList:()Ljava/util/List;
      21: areturn
      22: new           #5                  // class java/util/ArrayList
      25: dup
      26: aload_1
      27: invokeinterface #6,  1            // InterfaceMethod java/util/List.size:()I
      32: invokespecial #7                  // Method java/util/ArrayList."<init>":(I)V
      35: astore_2
      36: aload_1
      37: invokeinterface #8,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      42: astore_3
      43: aload_3
      44: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      49: ifeq          133
      52: aload_3
      53: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      58: checkcast     #11                 // class javax/net/ssl/SNIServerName
      61: astore        4
      63: aload         4
      65: instanceof    #12                 // class javax/net/ssl/SNIHostName
      68: ifeq          89
      71: aload_2
      72: aload         4
      74: checkcast     #12                 // class javax/net/ssl/SNIHostName
      77: invokevirtual #13                 // Method javax/net/ssl/SNIHostName.getAsciiName:()Ljava/lang/String;
      80: invokeinterface #14,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      85: pop
      86: goto          130
      89: new           #15                 // class java/lang/IllegalArgumentException
      92: dup
      93: new           #16                 // class java/lang/StringBuilder
      96: dup
      97: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
     100: ldc           #18                 // String Only
     102: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: ldc           #12                 // class javax/net/ssl/SNIHostName
     107: invokevirtual #20                 // Method java/lang/Class.getName:()Ljava/lang/String;
     110: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: ldc           #21                 // String  instances are supported, but found:
     115: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: aload         4
     120: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     123: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     126: invokespecial #24                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     129: athrow
     130: goto          43
     133: aload_2
     134: areturn

  static void setSniHostNames(javax.net.ssl.SSLParameters, java.util.List<java.lang.String>);
    Code:
       0: new           #5                  // class java/util/ArrayList
       3: dup
       4: aload_1
       5: invokeinterface #6,  1            // InterfaceMethod java/util/List.size:()I
      10: invokespecial #7                  // Method java/util/ArrayList."<init>":(I)V
      13: astore_2
      14: aload_1
      15: invokeinterface #8,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      20: astore_3
      21: aload_3
      22: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          60
      30: aload_3
      31: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #25                 // class java/lang/String
      39: astore        4
      41: aload_2
      42: new           #12                 // class javax/net/ssl/SNIHostName
      45: dup
      46: aload         4
      48: invokespecial #26                 // Method javax/net/ssl/SNIHostName."<init>":(Ljava/lang/String;)V
      51: invokeinterface #14,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      56: pop
      57: goto          21
      60: aload_0
      61: aload_2
      62: invokevirtual #27                 // Method javax/net/ssl/SSLParameters.setServerNames:(Ljava/util/List;)V
      65: return

  static boolean getUseCipherSuitesOrder(javax.net.ssl.SSLParameters);
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method javax/net/ssl/SSLParameters.getUseCipherSuitesOrder:()Z
       4: ireturn

  static void setUseCipherSuitesOrder(javax.net.ssl.SSLParameters, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #29                 // Method javax/net/ssl/SSLParameters.setUseCipherSuitesOrder:(Z)V
       5: return

  static void setSNIMatchers(javax.net.ssl.SSLParameters, java.util.Collection<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #30                 // Method javax/net/ssl/SSLParameters.setSNIMatchers:(Ljava/util/Collection;)V
       5: return

  static boolean checkSniHostnameMatch(java.util.Collection<?>, java.lang.String);
    Code:
       0: aload_0
       1: ifnull        73
       4: aload_0
       5: invokeinterface #31,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      10: ifne          73
      13: new           #12                 // class javax/net/ssl/SNIHostName
      16: dup
      17: aload_1
      18: invokespecial #26                 // Method javax/net/ssl/SNIHostName."<init>":(Ljava/lang/String;)V
      21: astore_2
      22: aload_0
      23: invokeinterface #32,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      28: astore_3
      29: aload_3
      30: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      35: ifeq          71
      38: aload_3
      39: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #33                 // class javax/net/ssl/SNIMatcher
      47: astore        4
      49: aload         4
      51: invokevirtual #34                 // Method javax/net/ssl/SNIMatcher.getType:()I
      54: ifne          68
      57: aload         4
      59: aload_2
      60: invokevirtual #35                 // Method javax/net/ssl/SNIMatcher.matches:(Ljavax/net/ssl/SNIServerName;)Z
      63: ifeq          68
      66: iconst_1
      67: ireturn
      68: goto          29
      71: iconst_0
      72: ireturn
      73: iconst_1
      74: ireturn
}
