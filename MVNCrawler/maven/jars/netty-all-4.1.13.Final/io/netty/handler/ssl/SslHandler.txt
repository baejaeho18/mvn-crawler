Compiled from "SslHandler.java"
public class io.netty.handler.ssl.SslHandler extends io.netty.handler.codec.ByteToMessageDecoder implements io.netty.channel.ChannelOutboundHandler {
  private static final io.netty.util.internal.logging.InternalLogger logger;

  private static final java.util.regex.Pattern IGNORABLE_CLASS_IN_STACK;

  private static final java.util.regex.Pattern IGNORABLE_ERROR_MESSAGE;

  private static final javax.net.ssl.SSLException SSLENGINE_CLOSED;

  private static final javax.net.ssl.SSLException HANDSHAKE_TIMED_OUT;

  private static final java.nio.channels.ClosedChannelException CHANNEL_CLOSED;

  private volatile io.netty.channel.ChannelHandlerContext ctx;

  private final javax.net.ssl.SSLEngine engine;

  private final io.netty.handler.ssl.SslHandler$SslEngineType engineType;

  private final int maxPacketBufferSize;

  private final java.util.concurrent.Executor delegatedTaskExecutor;

  private final java.nio.ByteBuffer[] singleBuffer;

  private final boolean startTls;

  private boolean sentFirstMessage;

  private boolean flushedBeforeHandshake;

  private boolean readDuringHandshake;

  private io.netty.channel.PendingWriteQueue pendingUnencryptedWrites;

  private io.netty.util.concurrent.Promise<io.netty.channel.Channel> handshakePromise;

  private final io.netty.handler.ssl.SslHandler$LazyChannelPromise sslClosePromise;

  private boolean needsFlush;

  private boolean outboundClosed;

  private int packetLength;

  private boolean firedChannelRead;

  private volatile long handshakeTimeoutMillis;

  private volatile long closeNotifyFlushTimeoutMillis;

  private volatile long closeNotifyReadTimeoutMillis;

  static final boolean $assertionsDisabled;

  public io.netty.handler.ssl.SslHandler(javax.net.ssl.SSLEngine);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #15                 // Method "<init>":(Ljavax/net/ssl/SSLEngine;Z)V
       6: return

  public io.netty.handler.ssl.SslHandler(javax.net.ssl.SSLEngine, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: getstatic     #16                 // Field io/netty/util/concurrent/ImmediateExecutor.INSTANCE:Lio/netty/util/concurrent/ImmediateExecutor;
       6: invokespecial #17                 // Method "<init>":(Ljavax/net/ssl/SSLEngine;ZLjava/util/concurrent/Executor;)V
       9: return

  public io.netty.handler.ssl.SslHandler(javax.net.ssl.SSLEngine, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_2
       4: invokespecial #17                 // Method "<init>":(Ljavax/net/ssl/SSLEngine;ZLjava/util/concurrent/Executor;)V
       7: return

  public io.netty.handler.ssl.SslHandler(javax.net.ssl.SSLEngine, boolean, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: invokespecial #18                 // Method io/netty/handler/codec/ByteToMessageDecoder."<init>":()V
       4: aload_0
       5: iconst_1
       6: anewarray     #19                 // class java/nio/ByteBuffer
       9: putfield      #13                 // Field singleBuffer:[Ljava/nio/ByteBuffer;
      12: aload_0
      13: new           #20                 // class io/netty/handler/ssl/SslHandler$LazyChannelPromise
      16: dup
      17: aload_0
      18: aconst_null
      19: invokespecial #21                 // Method io/netty/handler/ssl/SslHandler$LazyChannelPromise."<init>":(Lio/netty/handler/ssl/SslHandler;Lio/netty/handler/ssl/SslHandler$1;)V
      22: putfield      #22                 // Field handshakePromise:Lio/netty/util/concurrent/Promise;
      25: aload_0
      26: new           #20                 // class io/netty/handler/ssl/SslHandler$LazyChannelPromise
      29: dup
      30: aload_0
      31: aconst_null
      32: invokespecial #21                 // Method io/netty/handler/ssl/SslHandler$LazyChannelPromise."<init>":(Lio/netty/handler/ssl/SslHandler;Lio/netty/handler/ssl/SslHandler$1;)V
      35: putfield      #1                  // Field sslClosePromise:Lio/netty/handler/ssl/SslHandler$LazyChannelPromise;
      38: aload_0
      39: ldc2_w        #23                 // long 10000l
      42: putfield      #25                 // Field handshakeTimeoutMillis:J
      45: aload_0
      46: ldc2_w        #26                 // long 3000l
      49: putfield      #28                 // Field closeNotifyFlushTimeoutMillis:J
      52: aload_1
      53: ifnonnull     66
      56: new           #29                 // class java/lang/NullPointerException
      59: dup
      60: ldc           #30                 // String engine
      62: invokespecial #31                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      65: athrow
      66: aload_3
      67: ifnonnull     80
      70: new           #29                 // class java/lang/NullPointerException
      73: dup
      74: ldc           #32                 // String delegatedTaskExecutor
      76: invokespecial #31                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      79: athrow
      80: aload_0
      81: aload_1
      82: putfield      #14                 // Field engine:Ljavax/net/ssl/SSLEngine;
      85: aload_0
      86: aload_1
      87: invokestatic  #33                 // Method io/netty/handler/ssl/SslHandler$SslEngineType.forEngine:(Ljavax/net/ssl/SSLEngine;)Lio/netty/handler/ssl/SslHandler$SslEngineType;
      90: putfield      #34                 // Field engineType:Lio/netty/handler/ssl/SslHandler$SslEngineType;
      93: aload_0
      94: aload_3
      95: putfield      #35                 // Field delegatedTaskExecutor:Ljava/util/concurrent/Executor;
      98: aload_0
      99: iload_2
     100: putfield      #36                 // Field startTls:Z
     103: aload_0
     104: aload_1
     105: invokevirtual #37                 // Method javax/net/ssl/SSLEngine.getSession:()Ljavax/net/ssl/SSLSession;
     108: invokeinterface #38,  1           // InterfaceMethod javax/net/ssl/SSLSession.getPacketBufferSize:()I
     113: putfield      #11                 // Field maxPacketBufferSize:I
     116: aload_0
     117: aload_0
     118: getfield      #34                 // Field engineType:Lio/netty/handler/ssl/SslHandler$SslEngineType;
     121: getfield      #39                 // Field io/netty/handler/ssl/SslHandler$SslEngineType.cumulator:Lio/netty/handler/codec/ByteToMessageDecoder$Cumulator;
     124: invokevirtual #40                 // Method setCumulator:(Lio/netty/handler/codec/ByteToMessageDecoder$Cumulator;)V
     127: return

  public long getHandshakeTimeoutMillis();
    Code:
       0: aload_0
       1: getfield      #25                 // Field handshakeTimeoutMillis:J
       4: lreturn

  public void setHandshakeTimeout(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_3
       1: ifnonnull     14
       4: new           #29                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #41                 // String unit
      10: invokespecial #31                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_3
      16: lload_1
      17: invokevirtual #42                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      20: invokevirtual #43                 // Method setHandshakeTimeoutMillis:(J)V
      23: return

  public void setHandshakeTimeoutMillis(long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifge          38
       6: new           #44                 // class java/lang/IllegalArgumentException
       9: dup
      10: new           #45                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #47                 // String handshakeTimeoutMillis:
      19: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: lload_1
      23: invokevirtual #49                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      26: ldc           #50                 // String  (expected: >= 0)
      28: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #52                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: lload_1
      40: putfield      #25                 // Field handshakeTimeoutMillis:J
      43: return

  public long getCloseNotifyTimeoutMillis();
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method getCloseNotifyFlushTimeoutMillis:()J
       4: lreturn

  public void setCloseNotifyTimeout(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: invokevirtual #54                 // Method setCloseNotifyFlushTimeout:(JLjava/util/concurrent/TimeUnit;)V
       6: return

  public void setCloseNotifyTimeoutMillis(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #55                 // Method setCloseNotifyFlushTimeoutMillis:(J)V
       5: return

  public final long getCloseNotifyFlushTimeoutMillis();
    Code:
       0: aload_0
       1: getfield      #28                 // Field closeNotifyFlushTimeoutMillis:J
       4: lreturn

  public final void setCloseNotifyFlushTimeout(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: aload_3
       2: lload_1
       3: invokevirtual #42                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
       6: invokevirtual #55                 // Method setCloseNotifyFlushTimeoutMillis:(J)V
       9: return

  public final void setCloseNotifyFlushTimeoutMillis(long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifge          38
       6: new           #44                 // class java/lang/IllegalArgumentException
       9: dup
      10: new           #45                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #56                 // String closeNotifyFlushTimeoutMillis:
      19: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: lload_1
      23: invokevirtual #49                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      26: ldc           #50                 // String  (expected: >= 0)
      28: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #52                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: lload_1
      40: putfield      #28                 // Field closeNotifyFlushTimeoutMillis:J
      43: return

  public final long getCloseNotifyReadTimeoutMillis();
    Code:
       0: aload_0
       1: getfield      #2                  // Field closeNotifyReadTimeoutMillis:J
       4: lreturn

  public final void setCloseNotifyReadTimeout(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: aload_3
       2: lload_1
       3: invokevirtual #42                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
       6: invokevirtual #57                 // Method setCloseNotifyReadTimeoutMillis:(J)V
       9: return

  public final void setCloseNotifyReadTimeoutMillis(long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifge          38
       6: new           #44                 // class java/lang/IllegalArgumentException
       9: dup
      10: new           #45                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #58                 // String closeNotifyReadTimeoutMillis:
      19: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: lload_1
      23: invokevirtual #49                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      26: ldc           #50                 // String  (expected: >= 0)
      28: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #52                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: lload_1
      40: putfield      #2                  // Field closeNotifyReadTimeoutMillis:J
      43: return

  public javax.net.ssl.SSLEngine engine();
    Code:
       0: aload_0
       1: getfield      #14                 // Field engine:Ljavax/net/ssl/SSLEngine;
       4: areturn

  public java.lang.String applicationProtocol();
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method engine:()Ljavax/net/ssl/SSLEngine;
       4: invokevirtual #37                 // Method javax/net/ssl/SSLEngine.getSession:()Ljavax/net/ssl/SSLSession;
       7: astore_1
       8: aload_1
       9: instanceof    #60                 // class io/netty/handler/ssl/ApplicationProtocolAccessor
      12: ifne          17
      15: aconst_null
      16: areturn
      17: aload_1
      18: checkcast     #60                 // class io/netty/handler/ssl/ApplicationProtocolAccessor
      21: invokeinterface #61,  1           // InterfaceMethod io/netty/handler/ssl/ApplicationProtocolAccessor.getApplicationProtocol:()Ljava/lang/String;
      26: areturn

  public io.netty.util.concurrent.Future<io.netty.channel.Channel> handshakeFuture();
    Code:
       0: aload_0
       1: getfield      #22                 // Field handshakePromise:Lio/netty/util/concurrent/Promise;
       4: areturn

  public io.netty.channel.ChannelFuture close();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #7                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       5: invokeinterface #62,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.newPromise:()Lio/netty/channel/ChannelPromise;
      10: invokevirtual #63                 // Method close:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      13: areturn

  public io.netty.channel.ChannelFuture close(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #7                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: astore_2
       5: aload_2
       6: invokeinterface #64,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      11: new           #65                 // class io/netty/handler/ssl/SslHandler$1
      14: dup
      15: aload_0
      16: aload_2
      17: aload_1
      18: invokespecial #66                 // Method io/netty/handler/ssl/SslHandler$1."<init>":(Lio/netty/handler/ssl/SslHandler;Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelPromise;)V
      21: invokeinterface #67,  2           // InterfaceMethod io/netty/util/concurrent/EventExecutor.execute:(Ljava/lang/Runnable;)V
      26: aload_1
      27: areturn

  public io.netty.util.concurrent.Future<io.netty.channel.Channel> sslCloseFuture();
    Code:
       0: aload_0
       1: getfield      #1                  // Field sslClosePromise:Lio/netty/handler/ssl/SslHandler$LazyChannelPromise;
       4: areturn

  public void handlerRemoved0(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #68                 // Field pendingUnencryptedWrites:Lio/netty/channel/PendingWriteQueue;
       4: invokevirtual #69                 // Method io/netty/channel/PendingWriteQueue.isEmpty:()Z
       7: ifne          26
      10: aload_0
      11: getfield      #68                 // Field pendingUnencryptedWrites:Lio/netty/channel/PendingWriteQueue;
      14: new           #70                 // class io/netty/channel/ChannelException
      17: dup
      18: ldc           #71                 // String Pending write on removal of SslHandler
      20: invokespecial #72                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/String;)V
      23: invokevirtual #73                 // Method io/netty/channel/PendingWriteQueue.removeAndFailAll:(Ljava/lang/Throwable;)V
      26: aload_0
      27: getfield      #14                 // Field engine:Ljavax/net/ssl/SSLEngine;
      30: instanceof    #74                 // class io/netty/util/ReferenceCounted
      33: ifeq          49
      36: aload_0
      37: getfield      #14                 // Field engine:Ljavax/net/ssl/SSLEngine;
      40: checkcast     #74                 // class io/netty/util/ReferenceCounted
      43: invokeinterface #75,  1           // InterfaceMethod io/netty/util/ReferenceCounted.release:()Z
      48: pop
      49: return

  public void bind(io.netty.channel.ChannelHandlerContext, java.net.SocketAddress, io.netty.channel.ChannelPromise) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: invokeinterface #76,  3           // InterfaceMethod io/netty/channel/ChannelHandlerContext.bind:(Ljava/net/SocketAddress;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       8: pop
       9: return

  public void connect(io.netty.channel.ChannelHandlerContext, java.net.SocketAddress, java.net.SocketAddress, io.netty.channel.ChannelPromise) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: aload         4
       5: invokeinterface #77,  4           // InterfaceMethod io/netty/channel/ChannelHandlerContext.connect:(Ljava/net/SocketAddress;Ljava/net/SocketAddress;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      10: pop
      11: return

  public void deregister(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #78,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.deregister:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       7: pop
       8: return

  public void disconnect(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokespecial #79                 // Method closeOutboundAndChannel:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelPromise;Z)V
       7: return

  public void close(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokespecial #79                 // Method closeOutboundAndChannel:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelPromise;Z)V
       7: return

  public void read(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #22                 // Field handshakePromise:Lio/netty/util/concurrent/Promise;
       4: invokeinterface #80,  1           // InterfaceMethod io/netty/util/concurrent/Promise.isDone:()Z
       9: ifne          17
      12: aload_0
      13: iconst_1
      14: putfield      #81                 // Field readDuringHandshake:Z
      17: aload_1
      18: invokeinterface #82,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.read:()Lio/netty/channel/ChannelHandlerContext;
      23: pop
      24: return

  public void write(io.netty.channel.ChannelHandlerContext, java.lang.Object, io.netty.channel.ChannelPromise) throws java.lang.Exception;
    Code:
       0: aload_2
       1: instanceof    #83                 // class io/netty/buffer/ByteBuf
       4: ifne          32
       7: aload_3
       8: new           #84                 // class io/netty/handler/codec/UnsupportedMessageTypeException
      11: dup
      12: aload_2
      13: iconst_1
      14: anewarray     #85                 // class java/lang/Class
      17: dup
      18: iconst_0
      19: ldc           #83                 // class io/netty/buffer/ByteBuf
      21: aastore
      22: invokespecial #86                 // Method io/netty/handler/codec/UnsupportedMessageTypeException."<init>":(Ljava/lang/Object;[Ljava/lang/Class;)V
      25: invokeinterface #87,  2           // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
      30: pop
      31: return
      32: aload_0
      33: getfield      #68                 // Field pendingUnencryptedWrites:Lio/netty/channel/PendingWriteQueue;
      36: aload_2
      37: aload_3
      38: invokevirtual #88                 // Method io/netty/channel/PendingWriteQueue.add:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)V
      41: return

  public void flush(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #36                 // Field startTls:Z
       4: ifeq          33
       7: aload_0
       8: getfield      #89                 // Field sentFirstMessage:Z
      11: ifne          33
      14: aload_0
      15: iconst_1
      16: putfield      #89                 // Field sentFirstMessage:Z
      19: aload_0
      20: getfield      #68                 // Field pendingUnencryptedWrites:Lio/netty/channel/PendingWriteQueue;
      23: invokevirtual #90                 // Method io/netty/channel/PendingWriteQueue.removeAndWriteAll:()Lio/netty/channel/ChannelFuture;
      26: pop
      27: aload_0
      28: aload_1
      29: invokespecial #91                 // Method forceFlush:(Lio/netty/channel/ChannelHandlerContext;)V
      32: return
      33: aload_0
      34: aload_1
      35: invokespecial #92                 // Method wrapAndFlush:(Lio/netty/channel/ChannelHandlerContext;)V
      38: goto          52
      41: astore_2
      42: aload_0
      43: aload_1
      44: aload_2
      45: invokespecial #94                 // Method setHandshakeFailure:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V
      48: aload_2
      49: invokestatic  #95                 // Method io/netty/util/internal/PlatformDependent.throwException:(Ljava/lang/Throwable;)V
      52: return
    Exception table:
       from    to  target type
          33    38    41   Class java/lang/Throwable

  private void wrapAndFlush(io.netty.channel.ChannelHandlerContext) throws javax.net.ssl.SSLException;
    Code:
       0: aload_0
       1: getfield      #68                 // Field pendingUnencryptedWrites:Lio/netty/channel/PendingWriteQueue;
       4: invokevirtual #69                 // Method io/netty/channel/PendingWriteQueue.isEmpty:()Z
       7: ifeq          26
      10: aload_0
      11: getfield      #68                 // Field pendingUnencryptedWrites:Lio/netty/channel/PendingWriteQueue;
      14: getstatic     #96                 // Field io/netty/buffer/Unpooled.EMPTY_BUFFER:Lio/netty/buffer/ByteBuf;
      17: aload_1
      18: invokeinterface #62,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.newPromise:()Lio/netty/channel/ChannelPromise;
      23: invokevirtual #88                 // Method io/netty/channel/PendingWriteQueue.add:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)V
      26: aload_0
      27: getfield      #22                 // Field handshakePromise:Lio/netty/util/concurrent/Promise;
      30: invokeinterface #80,  1           // InterfaceMethod io/netty/util/concurrent/Promise.isDone:()Z
      35: ifne          43
      38: aload_0
      39: iconst_1
      40: putfield      #97                 // Field flushedBeforeHandshake:Z
      43: aload_0
      44: aload_1
      45: iconst_0
      46: invokespecial #98                 // Method wrap:(Lio/netty/channel/ChannelHandlerContext;Z)V
      49: aload_0
      50: aload_1
      51: invokespecial #91                 // Method forceFlush:(Lio/netty/channel/ChannelHandlerContext;)V
      54: goto          65
      57: astore_2
      58: aload_0
      59: aload_1
      60: invokespecial #91                 // Method forceFlush:(Lio/netty/channel/ChannelHandlerContext;)V
      63: aload_2
      64: athrow
      65: return
    Exception table:
       from    to  target type
          43    49    57   any

  private void wrap(io.netty.channel.ChannelHandlerContext, boolean) throws javax.net.ssl.SSLException;
    Code:
       0: aconst_null
       1: astore_3
       2: aconst_null
       3: astore        4
       5: aload_1
       6: invokeinterface #99,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.alloc:()Lio/netty/buffer/ByteBufAllocator;
      11: astore        5
      13: iconst_0
      14: istore        6
      16: aload_1
      17: invokeinterface #100,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.isRemoved:()Z
      22: ifne          271
      25: aload_0
      26: getfield      #68                 // Field pendingUnencryptedWrites:Lio/netty/channel/PendingWriteQueue;
      29: invokevirtual #101                // Method io/netty/channel/PendingWriteQueue.current:()Ljava/lang/Object;
      32: astore        7
      34: aload         7
      36: ifnonnull     42
      39: goto          271
      42: aload         7
      44: checkcast     #83                 // class io/netty/buffer/ByteBuf
      47: astore        8
      49: aload_3
      50: ifnonnull     69
      53: aload_0
      54: aload_1
      55: aload         8
      57: invokevirtual #102                // Method io/netty/buffer/ByteBuf.readableBytes:()I
      60: aload         8
      62: invokevirtual #103                // Method io/netty/buffer/ByteBuf.nioBufferCount:()I
      65: invokespecial #104                // Method allocateOutNetBuf:(Lio/netty/channel/ChannelHandlerContext;II)Lio/netty/buffer/ByteBuf;
      68: astore_3
      69: aload_0
      70: aload         5
      72: aload_0
      73: getfield      #14                 // Field engine:Ljavax/net/ssl/SSLEngine;
      76: aload         8
      78: aload_3
      79: invokespecial #105                // Method wrap:(Lio/netty/buffer/ByteBufAllocator;Ljavax/net/ssl/SSLEngine;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)Ljavax/net/ssl/SSLEngineResult;
      82: astore        9
      84: aload         9
      86: invokevirtual #106                // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
      89: getstatic     #107                // Field javax/net/ssl/SSLEngineResult$Status.CLOSED:Ljavax/net/ssl/SSLEngineResult$Status;
      92: if_acmpne     117
      95: aload_0
      96: getfield      #68                 // Field pendingUnencryptedWrites:Lio/netty/channel/PendingWriteQueue;
      99: getstatic     #108                // Field SSLENGINE_CLOSED:Ljavax/net/ssl/SSLException;
     102: invokevirtual #73                 // Method io/netty/channel/PendingWriteQueue.removeAndFailAll:(Ljava/lang/Throwable;)V
     105: aload_0
     106: aload_1
     107: aload_3
     108: aload         4
     110: iload_2
     111: iload         6
     113: invokespecial #109                // Method finishWrap:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/channel/ChannelPromise;ZZ)V
     116: return
     117: aload         8
     119: invokevirtual #110                // Method io/netty/buffer/ByteBuf.isReadable:()Z
     122: ifne          137
     125: aload_0
     126: getfield      #68                 // Field pendingUnencryptedWrites:Lio/netty/channel/PendingWriteQueue;
     129: invokevirtual #111                // Method io/netty/channel/PendingWriteQueue.remove:()Lio/netty/channel/ChannelPromise;
     132: astore        4
     134: goto          140
     137: aconst_null
     138: astore        4
     140: getstatic     #112                // Field io/netty/handler/ssl/SslHandler$9.$SwitchMap$javax$net$ssl$SSLEngineResult$HandshakeStatus:[I
     143: aload         9
     145: invokevirtual #113                // Method javax/net/ssl/SSLEngineResult.getHandshakeStatus:()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
     148: invokevirtual #114                // Method javax/net/ssl/SSLEngineResult$HandshakeStatus.ordinal:()I
     151: iaload
     152: tableswitch   { // 1 to 5
                     1: 188
                     2: 195
                     3: 199
                     4: 204
                     5: 222
               default: 237
          }
     188: aload_0
     189: invokespecial #115                // Method runDelegatedTasks:()V
     192: goto          268
     195: aload_0
     196: invokespecial #116                // Method setHandshakeSuccess:()V
     199: aload_0
     200: invokespecial #117                // Method setHandshakeSuccessIfStillHandshaking:()Z
     203: pop
     204: aload_0
     205: aload_1
     206: aload_3
     207: aload         4
     209: iload_2
     210: iconst_0
     211: invokespecial #109                // Method finishWrap:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/channel/ChannelPromise;ZZ)V
     214: aconst_null
     215: astore        4
     217: aconst_null
     218: astore_3
     219: goto          268
     222: iconst_1
     223: istore        6
     225: aload_0
     226: aload_1
     227: aload_3
     228: aload         4
     230: iload_2
     231: iload         6
     233: invokespecial #109                // Method finishWrap:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/channel/ChannelPromise;ZZ)V
     236: return
     237: new           #118                // class java/lang/IllegalStateException
     240: dup
     241: new           #45                 // class java/lang/StringBuilder
     244: dup
     245: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
     248: ldc           #119                // String Unknown handshake status:
     250: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     253: aload         9
     255: invokevirtual #113                // Method javax/net/ssl/SSLEngineResult.getHandshakeStatus:()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
     258: invokevirtual #120                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     261: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     264: invokespecial #121                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     267: athrow
     268: goto          16
     271: aload_0
     272: aload_1
     273: aload_3
     274: aload         4
     276: iload_2
     277: iload         6
     279: invokespecial #109                // Method finishWrap:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/channel/ChannelPromise;ZZ)V
     282: goto          301
     285: astore        10
     287: aload_0
     288: aload_1
     289: aload_3
     290: aload         4
     292: iload_2
     293: iload         6
     295: invokespecial #109                // Method finishWrap:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/channel/ChannelPromise;ZZ)V
     298: aload         10
     300: athrow
     301: return
    Exception table:
       from    to  target type
          16   105   285   any
         117   225   285   any
         237   271   285   any
         285   287   285   any

  private void finishWrap(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, io.netty.channel.ChannelPromise, boolean, boolean);
    Code:
       0: aload_2
       1: ifnonnull     11
       4: getstatic     #96                 // Field io/netty/buffer/Unpooled.EMPTY_BUFFER:Lio/netty/buffer/ByteBuf;
       7: astore_2
       8: goto          27
      11: aload_2
      12: invokevirtual #110                // Method io/netty/buffer/ByteBuf.isReadable:()Z
      15: ifne          27
      18: aload_2
      19: invokevirtual #122                // Method io/netty/buffer/ByteBuf.release:()Z
      22: pop
      23: getstatic     #96                 // Field io/netty/buffer/Unpooled.EMPTY_BUFFER:Lio/netty/buffer/ByteBuf;
      26: astore_2
      27: aload_3
      28: ifnull        43
      31: aload_1
      32: aload_2
      33: aload_3
      34: invokeinterface #123,  3          // InterfaceMethod io/netty/channel/ChannelHandlerContext.write:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      39: pop
      40: goto          51
      43: aload_1
      44: aload_2
      45: invokeinterface #124,  2          // InterfaceMethod io/netty/channel/ChannelHandlerContext.write:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
      50: pop
      51: iload         4
      53: ifeq          61
      56: aload_0
      57: iconst_1
      58: putfield      #125                // Field needsFlush:Z
      61: iload         5
      63: ifeq          71
      66: aload_0
      67: aload_1
      68: invokespecial #126                // Method readIfNeeded:(Lio/netty/channel/ChannelHandlerContext;)V
      71: return

  private void wrapNonAppData(io.netty.channel.ChannelHandlerContext, boolean) throws javax.net.ssl.SSLException;
    Code:
       0: aconst_null
       1: astore_3
       2: aload_1
       3: invokeinterface #99,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.alloc:()Lio/netty/buffer/ByteBufAllocator;
       8: astore        4
      10: aload_1
      11: invokeinterface #100,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.isRemoved:()Z
      16: ifne          247
      19: aload_3
      20: ifnonnull     33
      23: aload_0
      24: aload_1
      25: sipush        2048
      28: iconst_1
      29: invokespecial #104                // Method allocateOutNetBuf:(Lio/netty/channel/ChannelHandlerContext;II)Lio/netty/buffer/ByteBuf;
      32: astore_3
      33: aload_0
      34: aload         4
      36: aload_0
      37: getfield      #14                 // Field engine:Ljavax/net/ssl/SSLEngine;
      40: getstatic     #96                 // Field io/netty/buffer/Unpooled.EMPTY_BUFFER:Lio/netty/buffer/ByteBuf;
      43: aload_3
      44: invokespecial #105                // Method wrap:(Lio/netty/buffer/ByteBufAllocator;Ljavax/net/ssl/SSLEngine;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)Ljavax/net/ssl/SSLEngineResult;
      47: astore        5
      49: aload         5
      51: invokevirtual #127                // Method javax/net/ssl/SSLEngineResult.bytesProduced:()I
      54: ifle          76
      57: aload_1
      58: aload_3
      59: invokeinterface #124,  2          // InterfaceMethod io/netty/channel/ChannelHandlerContext.write:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
      64: pop
      65: iload_2
      66: ifeq          74
      69: aload_0
      70: iconst_1
      71: putfield      #125                // Field needsFlush:Z
      74: aconst_null
      75: astore_3
      76: getstatic     #112                // Field io/netty/handler/ssl/SslHandler$9.$SwitchMap$javax$net$ssl$SSLEngineResult$HandshakeStatus:[I
      79: aload         5
      81: invokevirtual #113                // Method javax/net/ssl/SSLEngineResult.getHandshakeStatus:()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
      84: invokevirtual #114                // Method javax/net/ssl/SSLEngineResult$HandshakeStatus.ordinal:()I
      87: iaload
      88: tableswitch   { // 1 to 5
                     1: 131
                     2: 124
                     3: 163
                     4: 160
                     5: 138
               default: 180
          }
     124: aload_0
     125: invokespecial #116                // Method setHandshakeSuccess:()V
     128: goto          211
     131: aload_0
     132: invokespecial #115                // Method runDelegatedTasks:()V
     135: goto          211
     138: iload_2
     139: ifeq          152
     142: aload_3
     143: ifnull        151
     146: aload_3
     147: invokevirtual #122                // Method io/netty/buffer/ByteBuf.release:()Z
     150: pop
     151: return
     152: aload_0
     153: aload_1
     154: invokespecial #128                // Method unwrapNonAppData:(Lio/netty/channel/ChannelHandlerContext;)V
     157: goto          211
     160: goto          211
     163: aload_0
     164: invokespecial #117                // Method setHandshakeSuccessIfStillHandshaking:()Z
     167: pop
     168: iload_2
     169: ifne          211
     172: aload_0
     173: aload_1
     174: invokespecial #128                // Method unwrapNonAppData:(Lio/netty/channel/ChannelHandlerContext;)V
     177: goto          211
     180: new           #118                // class java/lang/IllegalStateException
     183: dup
     184: new           #45                 // class java/lang/StringBuilder
     187: dup
     188: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
     191: ldc           #119                // String Unknown handshake status:
     193: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     196: aload         5
     198: invokevirtual #113                // Method javax/net/ssl/SSLEngineResult.getHandshakeStatus:()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
     201: invokevirtual #120                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     204: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     207: invokespecial #121                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     210: athrow
     211: aload         5
     213: invokevirtual #127                // Method javax/net/ssl/SSLEngineResult.bytesProduced:()I
     216: ifne          222
     219: goto          247
     222: aload         5
     224: invokevirtual #129                // Method javax/net/ssl/SSLEngineResult.bytesConsumed:()I
     227: ifne          244
     230: aload         5
     232: invokevirtual #113                // Method javax/net/ssl/SSLEngineResult.getHandshakeStatus:()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
     235: getstatic     #130                // Field javax/net/ssl/SSLEngineResult$HandshakeStatus.NOT_HANDSHAKING:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
     238: if_acmpne     244
     241: goto          247
     244: goto          10
     247: aload_3
     248: ifnull        273
     251: aload_3
     252: invokevirtual #122                // Method io/netty/buffer/ByteBuf.release:()Z
     255: pop
     256: goto          273
     259: astore        6
     261: aload_3
     262: ifnull        270
     265: aload_3
     266: invokevirtual #122                // Method io/netty/buffer/ByteBuf.release:()Z
     269: pop
     270: aload         6
     272: athrow
     273: return
    Exception table:
       from    to  target type
          10   142   259   any
         152   247   259   any
         259   261   259   any

  private javax.net.ssl.SSLEngineResult wrap(io.netty.buffer.ByteBufAllocator, javax.net.ssl.SSLEngine, io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf) throws javax.net.ssl.SSLException;
    Code:
       0: aconst_null
       1: astore        5
       3: aload_3
       4: invokevirtual #131                // Method io/netty/buffer/ByteBuf.readerIndex:()I
       7: istore        6
       9: aload_3
      10: invokevirtual #102                // Method io/netty/buffer/ByteBuf.readableBytes:()I
      13: istore        7
      15: aload_3
      16: invokevirtual #132                // Method io/netty/buffer/ByteBuf.isDirect:()Z
      19: ifne          32
      22: aload_0
      23: getfield      #34                 // Field engineType:Lio/netty/handler/ssl/SslHandler$SslEngineType;
      26: getfield      #133                // Field io/netty/handler/ssl/SslHandler$SslEngineType.wantsDirectBuffer:Z
      29: ifne          77
      32: aload_3
      33: instanceof    #134                // class io/netty/buffer/CompositeByteBuf
      36: ifne          68
      39: aload_3
      40: invokevirtual #103                // Method io/netty/buffer/ByteBuf.nioBufferCount:()I
      43: iconst_1
      44: if_icmpne     68
      47: aload_0
      48: getfield      #13                 // Field singleBuffer:[Ljava/nio/ByteBuffer;
      51: astore        8
      53: aload         8
      55: iconst_0
      56: aload_3
      57: iload         6
      59: iload         7
      61: invokevirtual #135                // Method io/netty/buffer/ByteBuf.internalNioBuffer:(II)Ljava/nio/ByteBuffer;
      64: aastore
      65: goto          120
      68: aload_3
      69: invokevirtual #136                // Method io/netty/buffer/ByteBuf.nioBuffers:()[Ljava/nio/ByteBuffer;
      72: astore        8
      74: goto          120
      77: aload_1
      78: iload         7
      80: invokeinterface #137,  2          // InterfaceMethod io/netty/buffer/ByteBufAllocator.directBuffer:(I)Lio/netty/buffer/ByteBuf;
      85: astore        5
      87: aload         5
      89: aload_3
      90: iload         6
      92: iload         7
      94: invokevirtual #138                // Method io/netty/buffer/ByteBuf.writeBytes:(Lio/netty/buffer/ByteBuf;II)Lio/netty/buffer/ByteBuf;
      97: pop
      98: aload_0
      99: getfield      #13                 // Field singleBuffer:[Ljava/nio/ByteBuffer;
     102: astore        8
     104: aload         8
     106: iconst_0
     107: aload         5
     109: aload         5
     111: invokevirtual #131                // Method io/netty/buffer/ByteBuf.readerIndex:()I
     114: iload         7
     116: invokevirtual #135                // Method io/netty/buffer/ByteBuf.internalNioBuffer:(II)Ljava/nio/ByteBuffer;
     119: aastore
     120: aload         4
     122: aload         4
     124: invokevirtual #139                // Method io/netty/buffer/ByteBuf.writerIndex:()I
     127: aload         4
     129: invokevirtual #140                // Method io/netty/buffer/ByteBuf.writableBytes:()I
     132: invokevirtual #141                // Method io/netty/buffer/ByteBuf.nioBuffer:(II)Ljava/nio/ByteBuffer;
     135: astore        9
     137: aload_2
     138: aload         8
     140: aload         9
     142: invokevirtual #142                // Method javax/net/ssl/SSLEngine.wrap:([Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;
     145: astore        10
     147: aload_3
     148: aload         10
     150: invokevirtual #129                // Method javax/net/ssl/SSLEngineResult.bytesConsumed:()I
     153: invokevirtual #143                // Method io/netty/buffer/ByteBuf.skipBytes:(I)Lio/netty/buffer/ByteBuf;
     156: pop
     157: aload         4
     159: aload         4
     161: invokevirtual #139                // Method io/netty/buffer/ByteBuf.writerIndex:()I
     164: aload         10
     166: invokevirtual #127                // Method javax/net/ssl/SSLEngineResult.bytesProduced:()I
     169: iadd
     170: invokevirtual #144                // Method io/netty/buffer/ByteBuf.writerIndex:(I)Lio/netty/buffer/ByteBuf;
     173: pop
     174: getstatic     #145                // Field io/netty/handler/ssl/SslHandler$9.$SwitchMap$javax$net$ssl$SSLEngineResult$Status:[I
     177: aload         10
     179: invokevirtual #106                // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
     182: invokevirtual #146                // Method javax/net/ssl/SSLEngineResult$Status.ordinal:()I
     185: iaload
     186: lookupswitch  { // 1
                     1: 204
               default: 217
          }
     204: aload         4
     206: aload_0
     207: getfield      #11                 // Field maxPacketBufferSize:I
     210: invokevirtual #147                // Method io/netty/buffer/ByteBuf.ensureWritable:(I)Lio/netty/buffer/ByteBuf;
     213: pop
     214: goto          242
     217: aload         10
     219: astore        11
     221: aload_0
     222: getfield      #13                 // Field singleBuffer:[Ljava/nio/ByteBuffer;
     225: iconst_0
     226: aconst_null
     227: aastore
     228: aload         5
     230: ifnull        239
     233: aload         5
     235: invokevirtual #122                // Method io/netty/buffer/ByteBuf.release:()Z
     238: pop
     239: aload         11
     241: areturn
     242: goto          120
     245: astore        12
     247: aload_0
     248: getfield      #13                 // Field singleBuffer:[Ljava/nio/ByteBuffer;
     251: iconst_0
     252: aconst_null
     253: aastore
     254: aload         5
     256: ifnull        265
     259: aload         5
     261: invokevirtual #122                // Method io/netty/buffer/ByteBuf.release:()Z
     264: pop
     265: aload         12
     267: athrow
    Exception table:
       from    to  target type
           3   221   245   any
         242   247   245   any

  public void channelInactive(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #148                // Field CHANNEL_CLOSED:Ljava/nio/channels/ClosedChannelException;
       5: aload_0
       6: getfield      #10                 // Field outboundClosed:Z
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: invokespecial #149                // Method setHandshakeFailure:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;Z)V
      20: aload_0
      21: getstatic     #148                // Field CHANNEL_CLOSED:Ljava/nio/channels/ClosedChannelException;
      24: invokespecial #150                // Method notifyClosePromise:(Ljava/lang/Throwable;)V
      27: aload_0
      28: aload_1
      29: invokespecial #151                // Method io/netty/handler/codec/ByteToMessageDecoder.channelInactive:(Lio/netty/channel/ChannelHandlerContext;)V
      32: return

  public void exceptionCaught(io.netty.channel.ChannelHandlerContext, java.lang.Throwable) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #152                // Method ignoreException:(Ljava/lang/Throwable;)Z
       5: ifeq          60
       8: getstatic     #8                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      11: invokeinterface #153,  1          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isDebugEnabled:()Z
      16: ifeq          36
      19: getstatic     #8                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      22: ldc           #154                // String {} Swallowing a harmless \'connection reset by peer / broken pipe\' error that occurred while writing close_notify in response to the peer\'s close_notify
      24: aload_1
      25: invokeinterface #155,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      30: aload_2
      31: invokeinterface #156,  4          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      36: aload_1
      37: invokeinterface #155,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      42: invokeinterface #157,  1          // InterfaceMethod io/netty/channel/Channel.isActive:()Z
      47: ifeq          68
      50: aload_1
      51: invokeinterface #158,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.close:()Lio/netty/channel/ChannelFuture;
      56: pop
      57: goto          68
      60: aload_1
      61: aload_2
      62: invokeinterface #159,  2          // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelHandlerContext;
      67: pop
      68: return

  private boolean ignoreException(java.lang.Throwable);
    Code:
       0: aload_1
       1: instanceof    #160                // class javax/net/ssl/SSLException
       4: ifne          238
       7: aload_1
       8: instanceof    #161                // class java/io/IOException
      11: ifeq          238
      14: aload_0
      15: getfield      #1                  // Field sslClosePromise:Lio/netty/handler/ssl/SslHandler$LazyChannelPromise;
      18: invokevirtual #162                // Method io/netty/handler/ssl/SslHandler$LazyChannelPromise.isDone:()Z
      21: ifeq          238
      24: aload_1
      25: invokevirtual #163                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      28: astore_2
      29: aload_2
      30: ifnull        48
      33: getstatic     #164                // Field IGNORABLE_ERROR_MESSAGE:Ljava/util/regex/Pattern;
      36: aload_2
      37: invokevirtual #165                // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      40: invokevirtual #166                // Method java/util/regex/Matcher.matches:()Z
      43: ifeq          48
      46: iconst_1
      47: ireturn
      48: aload_1
      49: invokevirtual #167                // Method java/lang/Throwable.getStackTrace:()[Ljava/lang/StackTraceElement;
      52: astore_3
      53: aload_3
      54: astore        4
      56: aload         4
      58: arraylength
      59: istore        5
      61: iconst_0
      62: istore        6
      64: iload         6
      66: iload         5
      68: if_icmpge     238
      71: aload         4
      73: iload         6
      75: aaload
      76: astore        7
      78: aload         7
      80: invokevirtual #168                // Method java/lang/StackTraceElement.getClassName:()Ljava/lang/String;
      83: astore        8
      85: aload         7
      87: invokevirtual #169                // Method java/lang/StackTraceElement.getMethodName:()Ljava/lang/String;
      90: astore        9
      92: aload         8
      94: ldc           #170                // String io.netty.
      96: invokevirtual #171                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      99: ifeq          105
     102: goto          232
     105: ldc           #172                // String read
     107: aload         9
     109: invokevirtual #173                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     112: ifne          118
     115: goto          232
     118: getstatic     #174                // Field IGNORABLE_CLASS_IN_STACK:Ljava/util/regex/Pattern;
     121: aload         8
     123: invokevirtual #165                // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
     126: invokevirtual #166                // Method java/util/regex/Matcher.matches:()Z
     129: ifeq          134
     132: iconst_1
     133: ireturn
     134: aload_0
     135: invokevirtual #175                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     138: invokestatic  #176                // Method io/netty/util/internal/PlatformDependent.getClassLoader:(Ljava/lang/Class;)Ljava/lang/ClassLoader;
     141: aload         8
     143: invokevirtual #177                // Method java/lang/ClassLoader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
     146: astore        10
     148: ldc           #178                // class java/nio/channels/SocketChannel
     150: aload         10
     152: invokevirtual #179                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     155: ifne          168
     158: ldc           #180                // class java/nio/channels/DatagramChannel
     160: aload         10
     162: invokevirtual #179                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     165: ifeq          170
     168: iconst_1
     169: ireturn
     170: invokestatic  #181                // Method io/netty/util/internal/PlatformDependent.javaVersion:()I
     173: bipush        7
     175: if_icmplt     196
     178: ldc           #182                // String com.sun.nio.sctp.SctpChannel
     180: aload         10
     182: invokevirtual #183                // Method java/lang/Class.getSuperclass:()Ljava/lang/Class;
     185: invokevirtual #184                // Method java/lang/Class.getName:()Ljava/lang/String;
     188: invokevirtual #173                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     191: ifeq          196
     194: iconst_1
     195: ireturn
     196: goto          232
     199: astore        10
     201: getstatic     #8                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
     204: ldc           #185                // String Unexpected exception while loading class {} classname {}
     206: iconst_3
     207: anewarray     #186                // class java/lang/Object
     210: dup
     211: iconst_0
     212: aload_0
     213: invokevirtual #175                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     216: aastore
     217: dup
     218: iconst_1
     219: aload         8
     221: aastore
     222: dup
     223: iconst_2
     224: aload         10
     226: aastore
     227: invokeinterface #187,  3          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     232: iinc          6, 1
     235: goto          64
     238: iconst_0
     239: ireturn
    Exception table:
       from    to  target type
         134   169   199   Class java/lang/Throwable
         170   195   199   Class java/lang/Throwable

  public static boolean isEncrypted(io.netty.buffer.ByteBuf);
    Code:
       0: aload_0
       1: invokevirtual #102                // Method io/netty/buffer/ByteBuf.readableBytes:()I
       4: iconst_5
       5: if_icmpge     18
       8: new           #44                 // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #189                // String buffer must have at least 5 readable bytes
      14: invokespecial #52                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_0
      20: invokevirtual #131                // Method io/netty/buffer/ByteBuf.readerIndex:()I
      23: invokestatic  #190                // Method io/netty/handler/ssl/SslUtils.getEncryptedPacketLength:(Lio/netty/buffer/ByteBuf;I)I
      26: bipush        -2
      28: if_icmpeq     35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: ireturn

  protected void decode(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, java.util.List<java.lang.Object>) throws javax.net.ssl.SSLException;
    Code:
       0: aload_2
       1: invokevirtual #131                // Method io/netty/buffer/ByteBuf.readerIndex:()I
       4: istore        4
       6: aload_2
       7: invokevirtual #139                // Method io/netty/buffer/ByteBuf.writerIndex:()I
      10: istore        5
      12: iload         4
      14: istore        6
      16: iconst_0
      17: istore        7
      19: aload_0
      20: getfield      #191                // Field packetLength:I
      23: ifle          59
      26: iload         5
      28: iload         4
      30: isub
      31: aload_0
      32: getfield      #191                // Field packetLength:I
      35: if_icmpge     39
      38: return
      39: iload         6
      41: aload_0
      42: getfield      #191                // Field packetLength:I
      45: iadd
      46: istore        6
      48: aload_0
      49: getfield      #191                // Field packetLength:I
      52: istore        7
      54: aload_0
      55: iconst_0
      56: putfield      #191                // Field packetLength:I
      59: iconst_0
      60: istore        8
      62: iload         7
      64: sipush        16474
      67: if_icmpge     174
      70: iload         5
      72: iload         6
      74: isub
      75: istore        9
      77: iload         9
      79: iconst_5
      80: if_icmpge     86
      83: goto          174
      86: aload_2
      87: iload         6
      89: invokestatic  #190                // Method io/netty/handler/ssl/SslUtils.getEncryptedPacketLength:(Lio/netty/buffer/ByteBuf;I)I
      92: istore        10
      94: iload         10
      96: bipush        -2
      98: if_icmpne     107
     101: iconst_1
     102: istore        8
     104: goto          174
     107: getstatic     #193                // Field $assertionsDisabled:Z
     110: ifne          126
     113: iload         10
     115: ifgt          126
     118: new           #194                // class java/lang/AssertionError
     121: dup
     122: invokespecial #195                // Method java/lang/AssertionError."<init>":()V
     125: athrow
     126: iload         10
     128: iload         9
     130: if_icmple     142
     133: aload_0
     134: iload         10
     136: putfield      #191                // Field packetLength:I
     139: goto          174
     142: iload         7
     144: iload         10
     146: iadd
     147: istore        11
     149: iload         11
     151: sipush        16474
     154: if_icmple     160
     157: goto          174
     160: iload         6
     162: iload         10
     164: iadd
     165: istore        6
     167: iload         11
     169: istore        7
     171: goto          62
     174: iload         7
     176: ifle          276
     179: aload_2
     180: iload         7
     182: invokevirtual #143                // Method io/netty/buffer/ByteBuf.skipBytes:(I)Lio/netty/buffer/ByteBuf;
     185: pop
     186: aload_0
     187: aload_0
     188: aload_1
     189: aload_2
     190: iload         4
     192: iload         7
     194: invokespecial #196                // Method unwrap:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;II)Z
     197: ifne          207
     200: aload_0
     201: getfield      #197                // Field firedChannelRead:Z
     204: ifeq          211
     207: iconst_1
     208: goto          212
     211: iconst_0
     212: putfield      #197                // Field firedChannelRead:Z
     215: goto          276
     218: astore        9
     220: aload_0
     221: aload_1
     222: invokespecial #92                 // Method wrapAndFlush:(Lio/netty/channel/ChannelHandlerContext;)V
     225: aload_0
     226: aload_1
     227: aload         9
     229: invokespecial #94                 // Method setHandshakeFailure:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V
     232: goto          271
     235: astore        10
     237: getstatic     #8                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
     240: ldc           #198                // String SSLException during trying to call SSLEngine.wrap(...) because of an previous SSLException, ignoring...
     242: aload         10
     244: invokeinterface #199,  3          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
     249: aload_0
     250: aload_1
     251: aload         9
     253: invokespecial #94                 // Method setHandshakeFailure:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V
     256: goto          271
     259: astore        12
     261: aload_0
     262: aload_1
     263: aload         9
     265: invokespecial #94                 // Method setHandshakeFailure:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V
     268: aload         12
     270: athrow
     271: aload         9
     273: invokestatic  #95                 // Method io/netty/util/internal/PlatformDependent.throwException:(Ljava/lang/Throwable;)V
     276: iload         8
     278: ifeq          331
     281: new           #200                // class io/netty/handler/ssl/NotSslRecordException
     284: dup
     285: new           #45                 // class java/lang/StringBuilder
     288: dup
     289: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
     292: ldc           #201                // String not an SSL/TLS record:
     294: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     297: aload_2
     298: invokestatic  #202                // Method io/netty/buffer/ByteBufUtil.hexDump:(Lio/netty/buffer/ByteBuf;)Ljava/lang/String;
     301: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     304: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     307: invokespecial #203                // Method io/netty/handler/ssl/NotSslRecordException."<init>":(Ljava/lang/String;)V
     310: astore        9
     312: aload_2
     313: aload_2
     314: invokevirtual #102                // Method io/netty/buffer/ByteBuf.readableBytes:()I
     317: invokevirtual #143                // Method io/netty/buffer/ByteBuf.skipBytes:(I)Lio/netty/buffer/ByteBuf;
     320: pop
     321: aload_0
     322: aload_1
     323: aload         9
     325: invokespecial #94                 // Method setHandshakeFailure:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V
     328: aload         9
     330: athrow
     331: return
    Exception table:
       from    to  target type
         186   215   218   Class java/lang/Throwable
         220   225   235   Class javax/net/ssl/SSLException
         220   225   259   any
         235   249   259   any
         259   261   259   any

  public void channelReadComplete(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #204                // Method discardSomeReadBytes:()V
       4: aload_0
       5: aload_1
       6: invokespecial #205                // Method flushIfNeeded:(Lio/netty/channel/ChannelHandlerContext;)V
       9: aload_0
      10: aload_1
      11: invokespecial #126                // Method readIfNeeded:(Lio/netty/channel/ChannelHandlerContext;)V
      14: aload_0
      15: iconst_0
      16: putfield      #197                // Field firedChannelRead:Z
      19: aload_1
      20: invokeinterface #206,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelReadComplete:()Lio/netty/channel/ChannelHandlerContext;
      25: pop
      26: return

  private void readIfNeeded(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_1
       1: invokeinterface #155,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
       6: invokeinterface #207,  1          // InterfaceMethod io/netty/channel/Channel.config:()Lio/netty/channel/ChannelConfig;
      11: invokeinterface #208,  1          // InterfaceMethod io/netty/channel/ChannelConfig.isAutoRead:()Z
      16: ifne          45
      19: aload_0
      20: getfield      #197                // Field firedChannelRead:Z
      23: ifeq          38
      26: aload_0
      27: getfield      #22                 // Field handshakePromise:Lio/netty/util/concurrent/Promise;
      30: invokeinterface #80,  1           // InterfaceMethod io/netty/util/concurrent/Promise.isDone:()Z
      35: ifne          45
      38: aload_1
      39: invokeinterface #82,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.read:()Lio/netty/channel/ChannelHandlerContext;
      44: pop
      45: return

  private void flushIfNeeded(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_0
       1: getfield      #125                // Field needsFlush:Z
       4: ifeq          12
       7: aload_0
       8: aload_1
       9: invokespecial #91                 // Method forceFlush:(Lio/netty/channel/ChannelHandlerContext;)V
      12: return

  private void unwrapNonAppData(io.netty.channel.ChannelHandlerContext) throws javax.net.ssl.SSLException;
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #96                 // Field io/netty/buffer/Unpooled.EMPTY_BUFFER:Lio/netty/buffer/ByteBuf;
       5: iconst_0
       6: iconst_0
       7: invokespecial #196                // Method unwrap:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;II)Z
      10: pop
      11: return

  private boolean unwrap(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, int, int) throws javax.net.ssl.SSLException;
    Code:
       0: iconst_0
       1: istore        5
       3: iconst_0
       4: istore        6
       6: iconst_0
       7: istore        7
       9: aload_0
      10: aload_1
      11: iload         4
      13: invokespecial #209                // Method allocate:(Lio/netty/channel/ChannelHandlerContext;I)Lio/netty/buffer/ByteBuf;
      16: astore        8
      18: aload_1
      19: invokeinterface #100,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.isRemoved:()Z
      24: ifne          381
      27: aload_0
      28: getfield      #34                 // Field engineType:Lio/netty/handler/ssl/SslHandler$SslEngineType;
      31: aload_0
      32: aload_2
      33: iload_3
      34: iload         4
      36: aload         8
      38: invokevirtual #210                // Method io/netty/handler/ssl/SslHandler$SslEngineType.unwrap:(Lio/netty/handler/ssl/SslHandler;Lio/netty/buffer/ByteBuf;IILio/netty/buffer/ByteBuf;)Ljavax/net/ssl/SSLEngineResult;
      41: astore        9
      43: aload         9
      45: invokevirtual #106                // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
      48: astore        10
      50: aload         9
      52: invokevirtual #113                // Method javax/net/ssl/SSLEngineResult.getHandshakeStatus:()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
      55: astore        11
      57: aload         9
      59: invokevirtual #127                // Method javax/net/ssl/SSLEngineResult.bytesProduced:()I
      62: istore        12
      64: aload         9
      66: invokevirtual #129                // Method javax/net/ssl/SSLEngineResult.bytesConsumed:()I
      69: istore        13
      71: iload_3
      72: iload         13
      74: iadd
      75: istore_3
      76: iload         4
      78: iload         13
      80: isub
      81: istore        4
      83: getstatic     #145                // Field io/netty/handler/ssl/SslHandler$9.$SwitchMap$javax$net$ssl$SSLEngineResult$Status:[I
      86: aload         10
      88: invokevirtual #146                // Method javax/net/ssl/SSLEngineResult$Status.ordinal:()I
      91: iaload
      92: lookupswitch  { // 2
                     1: 120
                     2: 207
               default: 213
          }
     120: aload         8
     122: invokevirtual #102                // Method io/netty/buffer/ByteBuf.readableBytes:()I
     125: istore        14
     127: aload_0
     128: getfield      #14                 // Field engine:Ljavax/net/ssl/SSLEngine;
     131: invokevirtual #37                 // Method javax/net/ssl/SSLEngine.getSession:()Ljavax/net/ssl/SSLSession;
     134: invokeinterface #211,  1          // InterfaceMethod javax/net/ssl/SSLSession.getApplicationBufferSize:()I
     139: iload         14
     141: isub
     142: istore        15
     144: iload         14
     146: ifle          186
     149: iconst_1
     150: istore        5
     152: aload_1
     153: aload         8
     155: invokeinterface #212,  2          // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
     160: pop
     161: aconst_null
     162: astore        8
     164: iload         15
     166: ifgt          195
     169: aload_0
     170: getfield      #14                 // Field engine:Ljavax/net/ssl/SSLEngine;
     173: invokevirtual #37                 // Method javax/net/ssl/SSLEngine.getSession:()Ljavax/net/ssl/SSLSession;
     176: invokeinterface #211,  1          // InterfaceMethod javax/net/ssl/SSLSession.getApplicationBufferSize:()I
     181: istore        15
     183: goto          195
     186: aload         8
     188: invokevirtual #122                // Method io/netty/buffer/ByteBuf.release:()Z
     191: pop
     192: aconst_null
     193: astore        8
     195: aload_0
     196: aload_1
     197: iload         15
     199: invokespecial #209                // Method allocate:(Lio/netty/channel/ChannelHandlerContext;I)Lio/netty/buffer/ByteBuf;
     202: astore        8
     204: goto          18
     207: iconst_1
     208: istore        7
     210: goto          213
     213: getstatic     #112                // Field io/netty/handler/ssl/SslHandler$9.$SwitchMap$javax$net$ssl$SSLEngineResult$HandshakeStatus:[I
     216: aload         11
     218: invokevirtual #114                // Method javax/net/ssl/SSLEngineResult$HandshakeStatus.ordinal:()I
     221: iaload
     222: tableswitch   { // 1 to 5
                     1: 268
                     2: 275
                     3: 285
                     4: 259
                     5: 256
               default: 316
          }
     256: goto          344
     259: aload_0
     260: aload_1
     261: iconst_1
     262: invokespecial #213                // Method wrapNonAppData:(Lio/netty/channel/ChannelHandlerContext;Z)V
     265: goto          344
     268: aload_0
     269: invokespecial #115                // Method runDelegatedTasks:()V
     272: goto          344
     275: aload_0
     276: invokespecial #116                // Method setHandshakeSuccess:()V
     279: iconst_1
     280: istore        6
     282: goto          344
     285: aload_0
     286: invokespecial #117                // Method setHandshakeSuccessIfStillHandshaking:()Z
     289: ifeq          298
     292: iconst_1
     293: istore        6
     295: goto          18
     298: aload_0
     299: getfield      #97                 // Field flushedBeforeHandshake:Z
     302: ifeq          344
     305: aload_0
     306: iconst_0
     307: putfield      #97                 // Field flushedBeforeHandshake:Z
     310: iconst_1
     311: istore        6
     313: goto          344
     316: new           #118                // class java/lang/IllegalStateException
     319: dup
     320: new           #45                 // class java/lang/StringBuilder
     323: dup
     324: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
     327: ldc           #214                // String unknown handshake status:
     329: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     332: aload         11
     334: invokevirtual #120                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     337: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     340: invokespecial #121                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     343: athrow
     344: aload         10
     346: getstatic     #215                // Field javax/net/ssl/SSLEngineResult$Status.BUFFER_UNDERFLOW:Ljavax/net/ssl/SSLEngineResult$Status;
     349: if_acmpeq     362
     352: iload         13
     354: ifne          378
     357: iload         12
     359: ifne          378
     362: aload         11
     364: getstatic     #216                // Field javax/net/ssl/SSLEngineResult$HandshakeStatus.NEED_UNWRAP:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
     367: if_acmpne     381
     370: aload_0
     371: aload_1
     372: invokespecial #126                // Method readIfNeeded:(Lio/netty/channel/ChannelHandlerContext;)V
     375: goto          381
     378: goto          18
     381: iload         6
     383: ifeq          392
     386: aload_0
     387: aload_1
     388: iconst_1
     389: invokespecial #98                 // Method wrap:(Lio/netty/channel/ChannelHandlerContext;Z)V
     392: iload         7
     394: ifeq          402
     397: aload_0
     398: aconst_null
     399: invokespecial #150                // Method notifyClosePromise:(Ljava/lang/Throwable;)V
     402: aload         8
     404: ifnull        478
     407: aload         8
     409: invokevirtual #110                // Method io/netty/buffer/ByteBuf.isReadable:()Z
     412: ifeq          430
     415: iconst_1
     416: istore        5
     418: aload_1
     419: aload         8
     421: invokeinterface #212,  2          // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
     426: pop
     427: goto          478
     430: aload         8
     432: invokevirtual #122                // Method io/netty/buffer/ByteBuf.release:()Z
     435: pop
     436: goto          478
     439: astore        16
     441: aload         8
     443: ifnull        475
     446: aload         8
     448: invokevirtual #110                // Method io/netty/buffer/ByteBuf.isReadable:()Z
     451: ifeq          469
     454: iconst_1
     455: istore        5
     457: aload_1
     458: aload         8
     460: invokeinterface #212,  2          // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
     465: pop
     466: goto          475
     469: aload         8
     471: invokevirtual #122                // Method io/netty/buffer/ByteBuf.release:()Z
     474: pop
     475: aload         16
     477: athrow
     478: iload         5
     480: ireturn
    Exception table:
       from    to  target type
          18   402   439   any
         439   441   439   any

  private static java.nio.ByteBuffer toByteBuffer(io.netty.buffer.ByteBuf, int, int);
    Code:
       0: aload_0
       1: invokevirtual #103                // Method io/netty/buffer/ByteBuf.nioBufferCount:()I
       4: iconst_1
       5: if_icmpne     17
       8: aload_0
       9: iload_1
      10: iload_2
      11: invokevirtual #135                // Method io/netty/buffer/ByteBuf.internalNioBuffer:(II)Ljava/nio/ByteBuffer;
      14: goto          23
      17: aload_0
      18: iload_1
      19: iload_2
      20: invokevirtual #141                // Method io/netty/buffer/ByteBuf.nioBuffer:(II)Ljava/nio/ByteBuffer;
      23: areturn

  private void runDelegatedTasks();
    Code:
       0: aload_0
       1: getfield      #35                 // Field delegatedTaskExecutor:Ljava/util/concurrent/Executor;
       4: getstatic     #16                 // Field io/netty/util/concurrent/ImmediateExecutor.INSTANCE:Lio/netty/util/concurrent/ImmediateExecutor;
       7: if_acmpne     34
      10: aload_0
      11: getfield      #14                 // Field engine:Ljavax/net/ssl/SSLEngine;
      14: invokevirtual #217                // Method javax/net/ssl/SSLEngine.getDelegatedTask:()Ljava/lang/Runnable;
      17: astore_1
      18: aload_1
      19: ifnonnull     25
      22: goto          142
      25: aload_1
      26: invokeinterface #218,  1          // InterfaceMethod java/lang/Runnable.run:()V
      31: goto          10
      34: new           #219                // class java/util/ArrayList
      37: dup
      38: iconst_2
      39: invokespecial #220                // Method java/util/ArrayList."<init>":(I)V
      42: astore_1
      43: aload_0
      44: getfield      #14                 // Field engine:Ljavax/net/ssl/SSLEngine;
      47: invokevirtual #217                // Method javax/net/ssl/SSLEngine.getDelegatedTask:()Ljava/lang/Runnable;
      50: astore_2
      51: aload_2
      52: ifnonnull     58
      55: goto          69
      58: aload_1
      59: aload_2
      60: invokeinterface #221,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      65: pop
      66: goto          43
      69: aload_1
      70: invokeinterface #222,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      75: ifeq          79
      78: return
      79: new           #223                // class java/util/concurrent/CountDownLatch
      82: dup
      83: iconst_1
      84: invokespecial #224                // Method java/util/concurrent/CountDownLatch."<init>":(I)V
      87: astore_2
      88: aload_0
      89: getfield      #35                 // Field delegatedTaskExecutor:Ljava/util/concurrent/Executor;
      92: new           #225                // class io/netty/handler/ssl/SslHandler$2
      95: dup
      96: aload_0
      97: aload_1
      98: aload_2
      99: invokespecial #226                // Method io/netty/handler/ssl/SslHandler$2."<init>":(Lio/netty/handler/ssl/SslHandler;Ljava/util/List;Ljava/util/concurrent/CountDownLatch;)V
     102: invokeinterface #227,  2          // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
     107: iconst_0
     108: istore_3
     109: aload_2
     110: invokevirtual #228                // Method java/util/concurrent/CountDownLatch.getCount:()J
     113: lconst_0
     114: lcmp
     115: ifeq          132
     118: aload_2
     119: invokevirtual #229                // Method java/util/concurrent/CountDownLatch.await:()V
     122: goto          109
     125: astore        4
     127: iconst_1
     128: istore_3
     129: goto          109
     132: iload_3
     133: ifeq          142
     136: invokestatic  #231                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     139: invokevirtual #232                // Method java/lang/Thread.interrupt:()V
     142: return
    Exception table:
       from    to  target type
         118   122   125   Class java/lang/InterruptedException

  private boolean setHandshakeSuccessIfStillHandshaking();
    Code:
       0: aload_0
       1: getfield      #22                 // Field handshakePromise:Lio/netty/util/concurrent/Promise;
       4: invokeinterface #80,  1           // InterfaceMethod io/netty/util/concurrent/Promise.isDone:()Z
       9: ifne          18
      12: aload_0
      13: invokespecial #116                // Method setHandshakeSuccess:()V
      16: iconst_1
      17: ireturn
      18: iconst_0
      19: ireturn

  private void setHandshakeSuccess();
    Code:
       0: aload_0
       1: getfield      #22                 // Field handshakePromise:Lio/netty/util/concurrent/Promise;
       4: aload_0
       5: getfield      #7                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       8: invokeinterface #155,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      13: invokeinterface #233,  2          // InterfaceMethod io/netty/util/concurrent/Promise.trySuccess:(Ljava/lang/Object;)Z
      18: pop
      19: getstatic     #8                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      22: invokeinterface #153,  1          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isDebugEnabled:()Z
      27: ifeq          61
      30: getstatic     #8                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      33: ldc           #234                // String {} HANDSHAKEN: {}
      35: aload_0
      36: getfield      #7                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      39: invokeinterface #155,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      44: aload_0
      45: getfield      #14                 // Field engine:Ljavax/net/ssl/SSLEngine;
      48: invokevirtual #37                 // Method javax/net/ssl/SSLEngine.getSession:()Ljavax/net/ssl/SSLSession;
      51: invokeinterface #235,  1          // InterfaceMethod javax/net/ssl/SSLSession.getCipherSuite:()Ljava/lang/String;
      56: invokeinterface #156,  4          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      61: aload_0
      62: getfield      #7                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      65: getstatic     #236                // Field io/netty/handler/ssl/SslHandshakeCompletionEvent.SUCCESS:Lio/netty/handler/ssl/SslHandshakeCompletionEvent;
      68: invokeinterface #237,  2          // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireUserEventTriggered:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
      73: pop
      74: aload_0
      75: getfield      #81                 // Field readDuringHandshake:Z
      78: ifeq          118
      81: aload_0
      82: getfield      #7                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      85: invokeinterface #155,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      90: invokeinterface #207,  1          // InterfaceMethod io/netty/channel/Channel.config:()Lio/netty/channel/ChannelConfig;
      95: invokeinterface #208,  1          // InterfaceMethod io/netty/channel/ChannelConfig.isAutoRead:()Z
     100: ifne          118
     103: aload_0
     104: iconst_0
     105: putfield      #81                 // Field readDuringHandshake:Z
     108: aload_0
     109: getfield      #7                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
     112: invokeinterface #82,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.read:()Lio/netty/channel/ChannelHandlerContext;
     117: pop
     118: return

  private void setHandshakeFailure(io.netty.channel.ChannelHandlerContext, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokespecial #149                // Method setHandshakeFailure:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;Z)V
       7: return

  private void setHandshakeFailure(io.netty.channel.ChannelHandlerContext, java.lang.Throwable, boolean);
    Code:
       0: aload_0
       1: getfield      #14                 // Field engine:Ljavax/net/ssl/SSLEngine;
       4: invokevirtual #238                // Method javax/net/ssl/SSLEngine.closeOutbound:()V
       7: iload_3
       8: ifeq          63
      11: aload_0
      12: getfield      #14                 // Field engine:Ljavax/net/ssl/SSLEngine;
      15: invokevirtual #239                // Method javax/net/ssl/SSLEngine.closeInbound:()V
      18: goto          63
      21: astore        4
      23: aload         4
      25: invokevirtual #240                // Method javax/net/ssl/SSLException.getMessage:()Ljava/lang/String;
      28: astore        5
      30: aload         5
      32: ifnull        45
      35: aload         5
      37: ldc           #241                // String possible truncation attack
      39: invokevirtual #242                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      42: ifne          63
      45: getstatic     #8                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      48: ldc           #243                // String {} SSLEngine.closeInbound() raised an exception.
      50: aload_1
      51: invokeinterface #155,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      56: aload         4
      58: invokeinterface #156,  4          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      63: aload_0
      64: aload_2
      65: invokespecial #4                  // Method notifyHandshakeFailure:(Ljava/lang/Throwable;)V
      68: aload_0
      69: getfield      #68                 // Field pendingUnencryptedWrites:Lio/netty/channel/PendingWriteQueue;
      72: aload_2
      73: invokevirtual #73                 // Method io/netty/channel/PendingWriteQueue.removeAndFailAll:(Ljava/lang/Throwable;)V
      76: goto          92
      79: astore        6
      81: aload_0
      82: getfield      #68                 // Field pendingUnencryptedWrites:Lio/netty/channel/PendingWriteQueue;
      85: aload_2
      86: invokevirtual #73                 // Method io/netty/channel/PendingWriteQueue.removeAndFailAll:(Ljava/lang/Throwable;)V
      89: aload         6
      91: athrow
      92: return
    Exception table:
       from    to  target type
          11    18    21   Class javax/net/ssl/SSLException
           0    68    79   any
          79    81    79   any

  private void notifyHandshakeFailure(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #22                 // Field handshakePromise:Lio/netty/util/concurrent/Promise;
       4: aload_1
       5: invokeinterface #244,  2          // InterfaceMethod io/netty/util/concurrent/Promise.tryFailure:(Ljava/lang/Throwable;)Z
      10: ifeq          21
      13: aload_0
      14: getfield      #7                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      17: aload_1
      18: invokestatic  #245                // Method io/netty/handler/ssl/SslUtils.notifyHandshakeFailure:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V
      21: return

  private void notifyClosePromise(java.lang.Throwable);
    Code:
       0: aload_1
       1: ifnonnull     39
       4: aload_0
       5: getfield      #1                  // Field sslClosePromise:Lio/netty/handler/ssl/SslHandler$LazyChannelPromise;
       8: aload_0
       9: getfield      #7                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      12: invokeinterface #155,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      17: invokevirtual #246                // Method io/netty/handler/ssl/SslHandler$LazyChannelPromise.trySuccess:(Ljava/lang/Object;)Z
      20: ifeq          68
      23: aload_0
      24: getfield      #7                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      27: getstatic     #247                // Field io/netty/handler/ssl/SslCloseCompletionEvent.SUCCESS:Lio/netty/handler/ssl/SslCloseCompletionEvent;
      30: invokeinterface #237,  2          // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireUserEventTriggered:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
      35: pop
      36: goto          68
      39: aload_0
      40: getfield      #1                  // Field sslClosePromise:Lio/netty/handler/ssl/SslHandler$LazyChannelPromise;
      43: aload_1
      44: invokevirtual #248                // Method io/netty/handler/ssl/SslHandler$LazyChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
      47: ifeq          68
      50: aload_0
      51: getfield      #7                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      54: new           #249                // class io/netty/handler/ssl/SslCloseCompletionEvent
      57: dup
      58: aload_1
      59: invokespecial #250                // Method io/netty/handler/ssl/SslCloseCompletionEvent."<init>":(Ljava/lang/Throwable;)V
      62: invokeinterface #237,  2          // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireUserEventTriggered:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
      67: pop
      68: return

  private void closeOutboundAndChannel(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise, boolean) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #155,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
       6: invokeinterface #157,  1          // InterfaceMethod io/netty/channel/Channel.isActive:()Z
      11: ifne          38
      14: iload_3
      15: ifeq          29
      18: aload_1
      19: aload_2
      20: invokeinterface #251,  2          // InterfaceMethod io/netty/channel/ChannelHandlerContext.disconnect:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      25: pop
      26: goto          37
      29: aload_1
      30: aload_2
      31: invokeinterface #252,  2          // InterfaceMethod io/netty/channel/ChannelHandlerContext.close:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      36: pop
      37: return
      38: aload_0
      39: iconst_1
      40: putfield      #10                 // Field outboundClosed:Z
      43: aload_0
      44: getfield      #14                 // Field engine:Ljavax/net/ssl/SSLEngine;
      47: invokevirtual #238                // Method javax/net/ssl/SSLEngine.closeOutbound:()V
      50: aload_1
      51: invokeinterface #62,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.newPromise:()Lio/netty/channel/ChannelPromise;
      56: astore        4
      58: aload_0
      59: aload_1
      60: aload         4
      62: invokespecial #9                  // Method flush:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelPromise;)V
      65: aload_0
      66: aload_1
      67: aload         4
      69: aload_1
      70: invokeinterface #62,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.newPromise:()Lio/netty/channel/ChannelPromise;
      75: new           #253                // class io/netty/channel/ChannelPromiseNotifier
      78: dup
      79: iconst_0
      80: iconst_1
      81: anewarray     #254                // class io/netty/channel/ChannelPromise
      84: dup
      85: iconst_0
      86: aload_2
      87: aastore
      88: invokespecial #255                // Method io/netty/channel/ChannelPromiseNotifier."<init>":(Z[Lio/netty/channel/ChannelPromise;)V
      91: invokeinterface #256,  2          // InterfaceMethod io/netty/channel/ChannelPromise.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelPromise;
      96: invokespecial #257                // Method safeClose:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelFuture;Lio/netty/channel/ChannelPromise;)V
      99: goto          141
     102: astore        5
     104: aload_0
     105: aload_1
     106: aload         4
     108: aload_1
     109: invokeinterface #62,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.newPromise:()Lio/netty/channel/ChannelPromise;
     114: new           #253                // class io/netty/channel/ChannelPromiseNotifier
     117: dup
     118: iconst_0
     119: iconst_1
     120: anewarray     #254                // class io/netty/channel/ChannelPromise
     123: dup
     124: iconst_0
     125: aload_2
     126: aastore
     127: invokespecial #255                // Method io/netty/channel/ChannelPromiseNotifier."<init>":(Z[Lio/netty/channel/ChannelPromise;)V
     130: invokeinterface #256,  2          // InterfaceMethod io/netty/channel/ChannelPromise.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelPromise;
     135: invokespecial #257                // Method safeClose:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelFuture;Lio/netty/channel/ChannelPromise;)V
     138: aload         5
     140: athrow
     141: return
    Exception table:
       from    to  target type
          58    65   102   any
         102   104   102   any

  private void flush(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #68                 // Field pendingUnencryptedWrites:Lio/netty/channel/PendingWriteQueue;
       4: getstatic     #96                 // Field io/netty/buffer/Unpooled.EMPTY_BUFFER:Lio/netty/buffer/ByteBuf;
       7: aload_2
       8: invokevirtual #88                 // Method io/netty/channel/PendingWriteQueue.add:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)V
      11: aload_0
      12: aload_1
      13: invokevirtual #258                // Method flush:(Lio/netty/channel/ChannelHandlerContext;)V
      16: return

  public void handlerAdded(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       5: aload_0
       6: new           #259                // class io/netty/channel/PendingWriteQueue
       9: dup
      10: aload_1
      11: invokespecial #260                // Method io/netty/channel/PendingWriteQueue."<init>":(Lio/netty/channel/ChannelHandlerContext;)V
      14: putfield      #68                 // Field pendingUnencryptedWrites:Lio/netty/channel/PendingWriteQueue;
      17: aload_1
      18: invokeinterface #155,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      23: invokeinterface #157,  1          // InterfaceMethod io/netty/channel/Channel.isActive:()Z
      28: ifeq          46
      31: aload_0
      32: getfield      #14                 // Field engine:Ljavax/net/ssl/SSLEngine;
      35: invokevirtual #261                // Method javax/net/ssl/SSLEngine.getUseClientMode:()Z
      38: ifeq          46
      41: aload_0
      42: aconst_null
      43: invokespecial #6                  // Method handshake:(Lio/netty/util/concurrent/Promise;)V
      46: return

  public io.netty.util.concurrent.Future<io.netty.channel.Channel> renegotiate();
    Code:
       0: aload_0
       1: getfield      #7                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: astore_1
       5: aload_1
       6: ifnonnull     17
       9: new           #118                // class java/lang/IllegalStateException
      12: dup
      13: invokespecial #262                // Method java/lang/IllegalStateException."<init>":()V
      16: athrow
      17: aload_0
      18: aload_1
      19: invokeinterface #64,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      24: invokeinterface #263,  1          // InterfaceMethod io/netty/util/concurrent/EventExecutor.newPromise:()Lio/netty/util/concurrent/Promise;
      29: invokevirtual #264                // Method renegotiate:(Lio/netty/util/concurrent/Promise;)Lio/netty/util/concurrent/Future;
      32: areturn

  public io.netty.util.concurrent.Future<io.netty.channel.Channel> renegotiate(io.netty.util.concurrent.Promise<io.netty.channel.Channel>);
    Code:
       0: aload_1
       1: ifnonnull     15
       4: new           #29                 // class java/lang/NullPointerException
       7: dup
       8: ldc_w         #265                // String promise
      11: invokespecial #31                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: aload_0
      16: getfield      #7                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      19: astore_2
      20: aload_2
      21: ifnonnull     32
      24: new           #118                // class java/lang/IllegalStateException
      27: dup
      28: invokespecial #262                // Method java/lang/IllegalStateException."<init>":()V
      31: athrow
      32: aload_2
      33: invokeinterface #64,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      38: astore_3
      39: aload_3
      40: invokeinterface #266,  1          // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      45: ifne          65
      48: aload_3
      49: new           #267                // class io/netty/handler/ssl/SslHandler$3
      52: dup
      53: aload_0
      54: aload_1
      55: invokespecial #268                // Method io/netty/handler/ssl/SslHandler$3."<init>":(Lio/netty/handler/ssl/SslHandler;Lio/netty/util/concurrent/Promise;)V
      58: invokeinterface #67,  2           // InterfaceMethod io/netty/util/concurrent/EventExecutor.execute:(Ljava/lang/Runnable;)V
      63: aload_1
      64: areturn
      65: aload_0
      66: aload_1
      67: invokespecial #6                  // Method handshake:(Lio/netty/util/concurrent/Promise;)V
      70: aload_1
      71: areturn

  private void handshake(io.netty.util.concurrent.Promise<io.netty.channel.Channel>);
    Code:
       0: aload_1
       1: ifnull        45
       4: aload_0
       5: getfield      #22                 // Field handshakePromise:Lio/netty/util/concurrent/Promise;
       8: astore_3
       9: aload_3
      10: invokeinterface #80,  1           // InterfaceMethod io/netty/util/concurrent/Promise.isDone:()Z
      15: ifne          35
      18: aload_3
      19: new           #269                // class io/netty/handler/ssl/SslHandler$4
      22: dup
      23: aload_0
      24: aload_1
      25: invokespecial #270                // Method io/netty/handler/ssl/SslHandler$4."<init>":(Lio/netty/handler/ssl/SslHandler;Lio/netty/util/concurrent/Promise;)V
      28: invokeinterface #271,  2          // InterfaceMethod io/netty/util/concurrent/Promise.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/util/concurrent/Promise;
      33: pop
      34: return
      35: aload_0
      36: aload_1
      37: dup
      38: astore_2
      39: putfield      #22                 // Field handshakePromise:Lio/netty/util/concurrent/Promise;
      42: goto          87
      45: aload_0
      46: getfield      #14                 // Field engine:Ljavax/net/ssl/SSLEngine;
      49: invokevirtual #272                // Method javax/net/ssl/SSLEngine.getHandshakeStatus:()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
      52: getstatic     #130                // Field javax/net/ssl/SSLEngineResult$HandshakeStatus.NOT_HANDSHAKING:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
      55: if_acmpeq     59
      58: return
      59: aload_0
      60: getfield      #22                 // Field handshakePromise:Lio/netty/util/concurrent/Promise;
      63: astore_2
      64: getstatic     #193                // Field $assertionsDisabled:Z
      67: ifne          87
      70: aload_2
      71: invokeinterface #80,  1           // InterfaceMethod io/netty/util/concurrent/Promise.isDone:()Z
      76: ifeq          87
      79: new           #194                // class java/lang/AssertionError
      82: dup
      83: invokespecial #195                // Method java/lang/AssertionError."<init>":()V
      86: athrow
      87: aload_0
      88: getfield      #7                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      91: astore_3
      92: aload_0
      93: getfield      #14                 // Field engine:Ljavax/net/ssl/SSLEngine;
      96: invokevirtual #273                // Method javax/net/ssl/SSLEngine.beginHandshake:()V
      99: aload_0
     100: aload_3
     101: iconst_0
     102: invokespecial #213                // Method wrapNonAppData:(Lio/netty/channel/ChannelHandlerContext;Z)V
     105: aload_0
     106: aload_3
     107: invokespecial #91                 // Method forceFlush:(Lio/netty/channel/ChannelHandlerContext;)V
     110: goto          140
     113: astore        4
     115: aload_0
     116: aload_3
     117: aload         4
     119: invokespecial #94                 // Method setHandshakeFailure:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V
     122: aload_0
     123: aload_3
     124: invokespecial #91                 // Method forceFlush:(Lio/netty/channel/ChannelHandlerContext;)V
     127: goto          140
     130: astore        5
     132: aload_0
     133: aload_3
     134: invokespecial #91                 // Method forceFlush:(Lio/netty/channel/ChannelHandlerContext;)V
     137: aload         5
     139: athrow
     140: aload_0
     141: getfield      #25                 // Field handshakeTimeoutMillis:J
     144: lstore        4
     146: lload         4
     148: lconst_0
     149: lcmp
     150: ifle          162
     153: aload_2
     154: invokeinterface #80,  1           // InterfaceMethod io/netty/util/concurrent/Promise.isDone:()Z
     159: ifeq          163
     162: return
     163: aload_3
     164: invokeinterface #64,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
     169: new           #274                // class io/netty/handler/ssl/SslHandler$5
     172: dup
     173: aload_0
     174: aload_2
     175: invokespecial #275                // Method io/netty/handler/ssl/SslHandler$5."<init>":(Lio/netty/handler/ssl/SslHandler;Lio/netty/util/concurrent/Promise;)V
     178: lload         4
     180: getstatic     #276                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     183: invokeinterface #277,  5          // InterfaceMethod io/netty/util/concurrent/EventExecutor.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/netty/util/concurrent/ScheduledFuture;
     188: astore        6
     190: aload_2
     191: new           #278                // class io/netty/handler/ssl/SslHandler$6
     194: dup
     195: aload_0
     196: aload         6
     198: invokespecial #279                // Method io/netty/handler/ssl/SslHandler$6."<init>":(Lio/netty/handler/ssl/SslHandler;Ljava/util/concurrent/ScheduledFuture;)V
     201: invokeinterface #271,  2          // InterfaceMethod io/netty/util/concurrent/Promise.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/util/concurrent/Promise;
     206: pop
     207: return
    Exception table:
       from    to  target type
          92   105   113   Class java/lang/Throwable
          92   105   130   any
         113   122   130   any
         130   132   130   any

  private void forceFlush(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #125                // Field needsFlush:Z
       5: aload_1
       6: invokeinterface #280,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.flush:()Lio/netty/channel/ChannelHandlerContext;
      11: pop
      12: return

  public void channelActive(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #36                 // Field startTls:Z
       4: ifne          22
       7: aload_0
       8: getfield      #14                 // Field engine:Ljavax/net/ssl/SSLEngine;
      11: invokevirtual #261                // Method javax/net/ssl/SSLEngine.getUseClientMode:()Z
      14: ifeq          22
      17: aload_0
      18: aconst_null
      19: invokespecial #6                  // Method handshake:(Lio/netty/util/concurrent/Promise;)V
      22: aload_1
      23: invokeinterface #281,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelActive:()Lio/netty/channel/ChannelHandlerContext;
      28: pop
      29: return

  private void safeClose(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelFuture, io.netty.channel.ChannelPromise);
    Code:
       0: aload_1
       1: invokeinterface #155,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
       6: invokeinterface #157,  1          // InterfaceMethod io/netty/channel/Channel.isActive:()Z
      11: ifne          23
      14: aload_1
      15: aload_3
      16: invokeinterface #252,  2          // InterfaceMethod io/netty/channel/ChannelHandlerContext.close:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      21: pop
      22: return
      23: aload_2
      24: invokeinterface #282,  1          // InterfaceMethod io/netty/channel/ChannelFuture.isDone:()Z
      29: ifne          83
      32: aload_0
      33: getfield      #28                 // Field closeNotifyFlushTimeoutMillis:J
      36: lstore        5
      38: lload         5
      40: lconst_0
      41: lcmp
      42: ifle          77
      45: aload_1
      46: invokeinterface #64,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      51: new           #283                // class io/netty/handler/ssl/SslHandler$7
      54: dup
      55: aload_0
      56: aload_2
      57: aload_1
      58: aload_3
      59: invokespecial #284                // Method io/netty/handler/ssl/SslHandler$7."<init>":(Lio/netty/handler/ssl/SslHandler;Lio/netty/channel/ChannelFuture;Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelPromise;)V
      62: lload         5
      64: getstatic     #276                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      67: invokeinterface #277,  5          // InterfaceMethod io/netty/util/concurrent/EventExecutor.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/netty/util/concurrent/ScheduledFuture;
      72: astore        4
      74: goto          80
      77: aconst_null
      78: astore        4
      80: goto          86
      83: aconst_null
      84: astore        4
      86: aload_2
      87: new           #285                // class io/netty/handler/ssl/SslHandler$8
      90: dup
      91: aload_0
      92: aload         4
      94: aload_1
      95: aload_3
      96: invokespecial #286                // Method io/netty/handler/ssl/SslHandler$8."<init>":(Lio/netty/handler/ssl/SslHandler;Ljava/util/concurrent/ScheduledFuture;Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelPromise;)V
      99: invokeinterface #287,  2          // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
     104: pop
     105: return

  private static void addCloseListener(io.netty.channel.ChannelFuture, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: new           #253                // class io/netty/channel/ChannelPromiseNotifier
       4: dup
       5: iconst_0
       6: iconst_1
       7: anewarray     #254                // class io/netty/channel/ChannelPromise
      10: dup
      11: iconst_0
      12: aload_1
      13: aastore
      14: invokespecial #255                // Method io/netty/channel/ChannelPromiseNotifier."<init>":(Z[Lio/netty/channel/ChannelPromise;)V
      17: invokeinterface #287,  2          // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
      22: pop
      23: return

  private io.netty.buffer.ByteBuf allocate(io.netty.channel.ChannelHandlerContext, int);
    Code:
       0: aload_1
       1: invokeinterface #99,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.alloc:()Lio/netty/buffer/ByteBufAllocator;
       6: astore_3
       7: aload_0
       8: getfield      #34                 // Field engineType:Lio/netty/handler/ssl/SslHandler$SslEngineType;
      11: getfield      #133                // Field io/netty/handler/ssl/SslHandler$SslEngineType.wantsDirectBuffer:Z
      14: ifeq          25
      17: aload_3
      18: iload_2
      19: invokeinterface #137,  2          // InterfaceMethod io/netty/buffer/ByteBufAllocator.directBuffer:(I)Lio/netty/buffer/ByteBuf;
      24: areturn
      25: aload_3
      26: iload_2
      27: invokeinterface #288,  2          // InterfaceMethod io/netty/buffer/ByteBufAllocator.buffer:(I)Lio/netty/buffer/ByteBuf;
      32: areturn

  private io.netty.buffer.ByteBuf allocateOutNetBuf(io.netty.channel.ChannelHandlerContext, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #34                 // Field engineType:Lio/netty/handler/ssl/SslHandler$SslEngineType;
       6: aload_0
       7: iload_2
       8: iload_3
       9: invokevirtual #289                // Method io/netty/handler/ssl/SslHandler$SslEngineType.calculateWrapBufferCapacity:(Lio/netty/handler/ssl/SslHandler;II)I
      12: invokespecial #209                // Method allocate:(Lio/netty/channel/ChannelHandlerContext;I)Lio/netty/buffer/ByteBuf;
      15: areturn

  static javax.net.ssl.SSLEngine access$100(io.netty.handler.ssl.SslHandler);
    Code:
       0: aload_0
       1: getfield      #14                 // Field engine:Ljavax/net/ssl/SSLEngine;
       4: areturn

  static java.nio.ByteBuffer[] access$200(io.netty.handler.ssl.SslHandler);
    Code:
       0: aload_0
       1: getfield      #13                 // Field singleBuffer:[Ljava/nio/ByteBuffer;
       4: areturn

  static java.nio.ByteBuffer access$300(io.netty.buffer.ByteBuf, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #12                 // Method toByteBuffer:(Lio/netty/buffer/ByteBuf;II)Ljava/nio/ByteBuffer;
       6: areturn

  static int access$400(io.netty.handler.ssl.SslHandler);
    Code:
       0: aload_0
       1: getfield      #11                 // Field maxPacketBufferSize:I
       4: ireturn

  static boolean access$602(io.netty.handler.ssl.SslHandler, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #10                 // Field outboundClosed:Z
       6: ireturn

  static void access$700(io.netty.handler.ssl.SslHandler, io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #9                  // Method flush:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelPromise;)V
       6: return

  static io.netty.util.internal.logging.InternalLogger access$800();
    Code:
       0: getstatic     #8                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       3: areturn

  static io.netty.channel.ChannelHandlerContext access$900(io.netty.handler.ssl.SslHandler);
    Code:
       0: aload_0
       1: getfield      #7                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: areturn

  static void access$1000(io.netty.handler.ssl.SslHandler, io.netty.util.concurrent.Promise);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method handshake:(Lio/netty/util/concurrent/Promise;)V
       5: return

  static javax.net.ssl.SSLException access$1100();
    Code:
       0: getstatic     #5                  // Field HANDSHAKE_TIMED_OUT:Ljavax/net/ssl/SSLException;
       3: areturn

  static void access$1200(io.netty.handler.ssl.SslHandler, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method notifyHandshakeFailure:(Ljava/lang/Throwable;)V
       5: return

  static void access$1300(io.netty.channel.ChannelFuture, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #3                  // Method addCloseListener:(Lio/netty/channel/ChannelFuture;Lio/netty/channel/ChannelPromise;)V
       5: return

  static long access$1400(io.netty.handler.ssl.SslHandler);
    Code:
       0: aload_0
       1: getfield      #2                  // Field closeNotifyReadTimeoutMillis:J
       4: lreturn

  static io.netty.handler.ssl.SslHandler$LazyChannelPromise access$1500(io.netty.handler.ssl.SslHandler);
    Code:
       0: aload_0
       1: getfield      #1                  // Field sslClosePromise:Lio/netty/handler/ssl/SslHandler$LazyChannelPromise;
       4: areturn

  static {};
    Code:
       0: ldc_w         #290                // class io/netty/handler/ssl/SslHandler
       3: invokevirtual #291                // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #193                // Field $assertionsDisabled:Z
      17: ldc_w         #290                // class io/netty/handler/ssl/SslHandler
      20: invokestatic  #292                // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
      23: putstatic     #8                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      26: ldc_w         #293                // String ^.*(?:Socket|Datagram|Sctp|Udt)Channel.*$
      29: invokestatic  #294                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      32: putstatic     #174                // Field IGNORABLE_CLASS_IN_STACK:Ljava/util/regex/Pattern;
      35: ldc_w         #295                // String ^.*(?:connection.*(?:reset|closed|abort|broken)|broken.*pipe).*$
      38: iconst_2
      39: invokestatic  #297                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;
      42: putstatic     #164                // Field IGNORABLE_ERROR_MESSAGE:Ljava/util/regex/Pattern;
      45: new           #160                // class javax/net/ssl/SSLException
      48: dup
      49: ldc_w         #298                // String SSLEngine closed already
      52: invokespecial #299                // Method javax/net/ssl/SSLException."<init>":(Ljava/lang/String;)V
      55: ldc_w         #290                // class io/netty/handler/ssl/SslHandler
      58: ldc_w         #300                // String wrap(...)
      61: invokestatic  #301                // Method io/netty/util/internal/ThrowableUtil.unknownStackTrace:(Ljava/lang/Throwable;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Throwable;
      64: checkcast     #160                // class javax/net/ssl/SSLException
      67: putstatic     #108                // Field SSLENGINE_CLOSED:Ljavax/net/ssl/SSLException;
      70: new           #160                // class javax/net/ssl/SSLException
      73: dup
      74: ldc_w         #302                // String handshake timed out
      77: invokespecial #299                // Method javax/net/ssl/SSLException."<init>":(Ljava/lang/String;)V
      80: ldc_w         #290                // class io/netty/handler/ssl/SslHandler
      83: ldc_w         #303                // String handshake(...)
      86: invokestatic  #301                // Method io/netty/util/internal/ThrowableUtil.unknownStackTrace:(Ljava/lang/Throwable;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Throwable;
      89: checkcast     #160                // class javax/net/ssl/SSLException
      92: putstatic     #5                  // Field HANDSHAKE_TIMED_OUT:Ljavax/net/ssl/SSLException;
      95: new           #304                // class java/nio/channels/ClosedChannelException
      98: dup
      99: invokespecial #305                // Method java/nio/channels/ClosedChannelException."<init>":()V
     102: ldc_w         #290                // class io/netty/handler/ssl/SslHandler
     105: ldc_w         #306                // String channelInactive(...)
     108: invokestatic  #301                // Method io/netty/util/internal/ThrowableUtil.unknownStackTrace:(Ljava/lang/Throwable;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Throwable;
     111: checkcast     #304                // class java/nio/channels/ClosedChannelException
     114: putstatic     #148                // Field CHANNEL_CLOSED:Ljava/nio/channels/ClosedChannelException;
     117: return
}
