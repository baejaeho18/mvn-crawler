Compiled from "ReferenceCountedOpenSslContext.java"
class io.netty.handler.ssl.ReferenceCountedOpenSslContext$3 extends io.netty.util.AbstractReferenceCounted {
  static final boolean $assertionsDisabled;

  final io.netty.handler.ssl.ReferenceCountedOpenSslContext this$0;

  io.netty.handler.ssl.ReferenceCountedOpenSslContext$3(io.netty.handler.ssl.ReferenceCountedOpenSslContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/netty/handler/ssl/ReferenceCountedOpenSslContext;
       5: aload_0
       6: invokespecial #2                  // Method io/netty/util/AbstractReferenceCounted."<init>":()V
       9: return

  public io.netty.util.ReferenceCounted touch(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/netty/handler/ssl/ReferenceCountedOpenSslContext;
       4: invokestatic  #3                  // Method io/netty/handler/ssl/ReferenceCountedOpenSslContext.access$000:(Lio/netty/handler/ssl/ReferenceCountedOpenSslContext;)Lio/netty/util/ResourceLeakTracker;
       7: ifnull        23
      10: aload_0
      11: getfield      #1                  // Field this$0:Lio/netty/handler/ssl/ReferenceCountedOpenSslContext;
      14: invokestatic  #3                  // Method io/netty/handler/ssl/ReferenceCountedOpenSslContext.access$000:(Lio/netty/handler/ssl/ReferenceCountedOpenSslContext;)Lio/netty/util/ResourceLeakTracker;
      17: aload_1
      18: invokeinterface #4,  2            // InterfaceMethod io/netty/util/ResourceLeakTracker.record:(Ljava/lang/Object;)V
      23: aload_0
      24: getfield      #1                  // Field this$0:Lio/netty/handler/ssl/ReferenceCountedOpenSslContext;
      27: areturn

  protected void deallocate();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/netty/handler/ssl/ReferenceCountedOpenSslContext;
       4: invokestatic  #5                  // Method io/netty/handler/ssl/ReferenceCountedOpenSslContext.access$100:(Lio/netty/handler/ssl/ReferenceCountedOpenSslContext;)V
       7: aload_0
       8: getfield      #1                  // Field this$0:Lio/netty/handler/ssl/ReferenceCountedOpenSslContext;
      11: invokestatic  #3                  // Method io/netty/handler/ssl/ReferenceCountedOpenSslContext.access$000:(Lio/netty/handler/ssl/ReferenceCountedOpenSslContext;)Lio/netty/util/ResourceLeakTracker;
      14: ifnull        52
      17: aload_0
      18: getfield      #1                  // Field this$0:Lio/netty/handler/ssl/ReferenceCountedOpenSslContext;
      21: invokestatic  #3                  // Method io/netty/handler/ssl/ReferenceCountedOpenSslContext.access$000:(Lio/netty/handler/ssl/ReferenceCountedOpenSslContext;)Lio/netty/util/ResourceLeakTracker;
      24: aload_0
      25: getfield      #1                  // Field this$0:Lio/netty/handler/ssl/ReferenceCountedOpenSslContext;
      28: invokeinterface #6,  2            // InterfaceMethod io/netty/util/ResourceLeakTracker.close:(Ljava/lang/Object;)Z
      33: istore_1
      34: getstatic     #7                  // Field $assertionsDisabled:Z
      37: ifne          52
      40: iload_1
      41: ifne          52
      44: new           #8                  // class java/lang/AssertionError
      47: dup
      48: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      51: athrow
      52: return

  static {};
    Code:
       0: ldc           #10                 // class io/netty/handler/ssl/ReferenceCountedOpenSslContext
       2: invokevirtual #11                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #7                  // Field $assertionsDisabled:Z
      16: return
}
