Compiled from "SslHandler.java"
class io.netty.handler.ssl.SslHandler$8$2 implements io.netty.util.concurrent.FutureListener<io.netty.channel.Channel> {
  final java.util.concurrent.ScheduledFuture val$closeNotifyReadTimeoutFuture;

  final io.netty.handler.ssl.SslHandler$8 this$1;

  io.netty.handler.ssl.SslHandler$8$2(io.netty.handler.ssl.SslHandler$8, java.util.concurrent.ScheduledFuture);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$1:Lio/netty/handler/ssl/SslHandler$8;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$closeNotifyReadTimeoutFuture:Ljava/util/concurrent/ScheduledFuture;
      10: aload_0
      11: invokespecial #3                  // Method java/lang/Object."<init>":()V
      14: return

  public void operationComplete(io.netty.util.concurrent.Future<io.netty.channel.Channel>) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$closeNotifyReadTimeoutFuture:Ljava/util/concurrent/ScheduledFuture;
       4: ifnull        18
       7: aload_0
       8: getfield      #2                  // Field val$closeNotifyReadTimeoutFuture:Ljava/util/concurrent/ScheduledFuture;
      11: iconst_0
      12: invokeinterface #4,  2            // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      17: pop
      18: aload_0
      19: getfield      #1                  // Field this$1:Lio/netty/handler/ssl/SslHandler$8;
      22: getfield      #5                  // Field io/netty/handler/ssl/SslHandler$8.val$ctx:Lio/netty/channel/ChannelHandlerContext;
      25: aload_0
      26: getfield      #1                  // Field this$1:Lio/netty/handler/ssl/SslHandler$8;
      29: getfield      #5                  // Field io/netty/handler/ssl/SslHandler$8.val$ctx:Lio/netty/channel/ChannelHandlerContext;
      32: invokeinterface #6,  1            // InterfaceMethod io/netty/channel/ChannelHandlerContext.newPromise:()Lio/netty/channel/ChannelPromise;
      37: invokeinterface #7,  2            // InterfaceMethod io/netty/channel/ChannelHandlerContext.close:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      42: aload_0
      43: getfield      #1                  // Field this$1:Lio/netty/handler/ssl/SslHandler$8;
      46: getfield      #8                  // Field io/netty/handler/ssl/SslHandler$8.val$promise:Lio/netty/channel/ChannelPromise;
      49: invokestatic  #9                  // Method io/netty/handler/ssl/SslHandler.access$1300:(Lio/netty/channel/ChannelFuture;Lio/netty/channel/ChannelPromise;)V
      52: return
}
