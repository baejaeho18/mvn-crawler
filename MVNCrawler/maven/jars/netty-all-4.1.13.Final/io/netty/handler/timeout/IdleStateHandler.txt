Compiled from "IdleStateHandler.java"
public class io.netty.handler.timeout.IdleStateHandler extends io.netty.channel.ChannelDuplexHandler {
  private static final long MIN_TIMEOUT_NANOS;

  private final io.netty.channel.ChannelFutureListener writeListener;

  private final boolean observeOutput;

  private final long readerIdleTimeNanos;

  private final long writerIdleTimeNanos;

  private final long allIdleTimeNanos;

  private java.util.concurrent.ScheduledFuture<?> readerIdleTimeout;

  private long lastReadTime;

  private boolean firstReaderIdleEvent;

  private java.util.concurrent.ScheduledFuture<?> writerIdleTimeout;

  private long lastWriteTime;

  private boolean firstWriterIdleEvent;

  private java.util.concurrent.ScheduledFuture<?> allIdleTimeout;

  private boolean firstAllIdleEvent;

  private byte state;

  private boolean reading;

  private long lastChangeCheckTimeStamp;

  private int lastMessageHashCode;

  private long lastPendingWriteBytes;

  public io.netty.handler.timeout.IdleStateHandler(int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: i2l
       3: iload_2
       4: i2l
       5: iload_3
       6: i2l
       7: getstatic     #14                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      10: invokespecial #15                 // Method "<init>":(JJJLjava/util/concurrent/TimeUnit;)V
      13: return

  public io.netty.handler.timeout.IdleStateHandler(long, long, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: iconst_0
       2: lload_1
       3: lload_3
       4: lload         5
       6: aload         7
       8: invokespecial #16                 // Method "<init>":(ZJJJLjava/util/concurrent/TimeUnit;)V
      11: return

  public io.netty.handler.timeout.IdleStateHandler(boolean, long, long, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokespecial #17                 // Method io/netty/channel/ChannelDuplexHandler."<init>":()V
       4: aload_0
       5: new           #18                 // class io/netty/handler/timeout/IdleStateHandler$1
       8: dup
       9: aload_0
      10: invokespecial #19                 // Method io/netty/handler/timeout/IdleStateHandler$1."<init>":(Lio/netty/handler/timeout/IdleStateHandler;)V
      13: putfield      #20                 // Field writeListener:Lio/netty/channel/ChannelFutureListener;
      16: aload_0
      17: iconst_1
      18: putfield      #6                  // Field firstReaderIdleEvent:Z
      21: aload_0
      22: iconst_1
      23: putfield      #12                 // Field firstWriterIdleEvent:Z
      26: aload_0
      27: iconst_1
      28: putfield      #11                 // Field firstAllIdleEvent:Z
      31: aload         8
      33: ifnonnull     46
      36: new           #21                 // class java/lang/NullPointerException
      39: dup
      40: ldc           #22                 // String unit
      42: invokespecial #23                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: aload_0
      47: iload_1
      48: putfield      #24                 // Field observeOutput:Z
      51: lload_2
      52: lconst_0
      53: lcmp
      54: ifgt          65
      57: aload_0
      58: lconst_0
      59: putfield      #10                 // Field readerIdleTimeNanos:J
      62: goto          81
      65: aload_0
      66: aload         8
      68: lload_2
      69: invokevirtual #25                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      72: getstatic     #26                 // Field MIN_TIMEOUT_NANOS:J
      75: invokestatic  #27                 // Method java/lang/Math.max:(JJ)J
      78: putfield      #10                 // Field readerIdleTimeNanos:J
      81: lload         4
      83: lconst_0
      84: lcmp
      85: ifgt          96
      88: aload_0
      89: lconst_0
      90: putfield      #5                  // Field writerIdleTimeNanos:J
      93: goto          113
      96: aload_0
      97: aload         8
      99: lload         4
     101: invokevirtual #25                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
     104: getstatic     #26                 // Field MIN_TIMEOUT_NANOS:J
     107: invokestatic  #27                 // Method java/lang/Math.max:(JJ)J
     110: putfield      #5                  // Field writerIdleTimeNanos:J
     113: lload         6
     115: lconst_0
     116: lcmp
     117: ifgt          128
     120: aload_0
     121: lconst_0
     122: putfield      #2                  // Field allIdleTimeNanos:J
     125: goto          145
     128: aload_0
     129: aload         8
     131: lload         6
     133: invokevirtual #25                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
     136: getstatic     #26                 // Field MIN_TIMEOUT_NANOS:J
     139: invokestatic  #27                 // Method java/lang/Math.max:(JJ)J
     142: putfield      #2                  // Field allIdleTimeNanos:J
     145: return

  public long getReaderIdleTimeInMillis();
    Code:
       0: getstatic     #28                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
       3: aload_0
       4: getfield      #10                 // Field readerIdleTimeNanos:J
       7: invokevirtual #29                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      10: lreturn

  public long getWriterIdleTimeInMillis();
    Code:
       0: getstatic     #28                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
       3: aload_0
       4: getfield      #5                  // Field writerIdleTimeNanos:J
       7: invokevirtual #29                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      10: lreturn

  public long getAllIdleTimeInMillis();
    Code:
       0: getstatic     #28                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
       3: aload_0
       4: getfield      #2                  // Field allIdleTimeNanos:J
       7: invokevirtual #29                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      10: lreturn

  public void handlerAdded(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #30,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
       6: invokeinterface #31,  1           // InterfaceMethod io/netty/channel/Channel.isActive:()Z
      11: ifeq          33
      14: aload_1
      15: invokeinterface #30,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      20: invokeinterface #32,  1           // InterfaceMethod io/netty/channel/Channel.isRegistered:()Z
      25: ifeq          33
      28: aload_0
      29: aload_1
      30: invokespecial #33                 // Method initialize:(Lio/netty/channel/ChannelHandlerContext;)V
      33: return

  public void handlerRemoved(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #34                 // Method destroy:()V
       4: return

  public void channelRegistered(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #30,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
       6: invokeinterface #31,  1           // InterfaceMethod io/netty/channel/Channel.isActive:()Z
      11: ifeq          19
      14: aload_0
      15: aload_1
      16: invokespecial #33                 // Method initialize:(Lio/netty/channel/ChannelHandlerContext;)V
      19: aload_0
      20: aload_1
      21: invokespecial #35                 // Method io/netty/channel/ChannelDuplexHandler.channelRegistered:(Lio/netty/channel/ChannelHandlerContext;)V
      24: return

  public void channelActive(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #33                 // Method initialize:(Lio/netty/channel/ChannelHandlerContext;)V
       5: aload_0
       6: aload_1
       7: invokespecial #36                 // Method io/netty/channel/ChannelDuplexHandler.channelActive:(Lio/netty/channel/ChannelHandlerContext;)V
      10: return

  public void channelInactive(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #34                 // Method destroy:()V
       4: aload_0
       5: aload_1
       6: invokespecial #37                 // Method io/netty/channel/ChannelDuplexHandler.channelInactive:(Lio/netty/channel/ChannelHandlerContext;)V
       9: return

  public void channelRead(io.netty.channel.ChannelHandlerContext, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #10                 // Field readerIdleTimeNanos:J
       4: lconst_0
       5: lcmp
       6: ifgt          18
       9: aload_0
      10: getfield      #2                  // Field allIdleTimeNanos:J
      13: lconst_0
      14: lcmp
      15: ifle          33
      18: aload_0
      19: iconst_1
      20: putfield      #9                  // Field reading:Z
      23: aload_0
      24: aload_0
      25: iconst_1
      26: dup_x1
      27: putfield      #11                 // Field firstAllIdleEvent:Z
      30: putfield      #6                  // Field firstReaderIdleEvent:Z
      33: aload_1
      34: aload_2
      35: invokeinterface #38,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
      40: pop
      41: return

  public void channelReadComplete(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #10                 // Field readerIdleTimeNanos:J
       4: lconst_0
       5: lcmp
       6: ifgt          18
       9: aload_0
      10: getfield      #2                  // Field allIdleTimeNanos:J
      13: lconst_0
      14: lcmp
      15: ifle          38
      18: aload_0
      19: getfield      #9                  // Field reading:Z
      22: ifeq          38
      25: aload_0
      26: aload_0
      27: invokevirtual #39                 // Method ticksInNanos:()J
      30: putfield      #8                  // Field lastReadTime:J
      33: aload_0
      34: iconst_0
      35: putfield      #9                  // Field reading:Z
      38: aload_1
      39: invokeinterface #40,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelReadComplete:()Lio/netty/channel/ChannelHandlerContext;
      44: pop
      45: return

  public void write(io.netty.channel.ChannelHandlerContext, java.lang.Object, io.netty.channel.ChannelPromise) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #5                  // Field writerIdleTimeNanos:J
       4: lconst_0
       5: lcmp
       6: ifgt          18
       9: aload_0
      10: getfield      #2                  // Field allIdleTimeNanos:J
      13: lconst_0
      14: lcmp
      15: ifle          44
      18: aload_1
      19: aload_2
      20: aload_3
      21: invokeinterface #41,  1           // InterfaceMethod io/netty/channel/ChannelPromise.unvoid:()Lio/netty/channel/ChannelPromise;
      26: invokeinterface #42,  3           // InterfaceMethod io/netty/channel/ChannelHandlerContext.write:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      31: aload_0
      32: getfield      #20                 // Field writeListener:Lio/netty/channel/ChannelFutureListener;
      35: invokeinterface #43,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
      40: pop
      41: goto          53
      44: aload_1
      45: aload_2
      46: aload_3
      47: invokeinterface #42,  3           // InterfaceMethod io/netty/channel/ChannelHandlerContext.write:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      52: pop
      53: return

  private void initialize(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_0
       1: getfield      #44                 // Field state:B
       4: lookupswitch  { // 2
                     1: 32
                     2: 32
               default: 33
          }
      32: return
      33: aload_0
      34: iconst_1
      35: putfield      #44                 // Field state:B
      38: aload_0
      39: aload_1
      40: invokespecial #45                 // Method initOutputChanged:(Lio/netty/channel/ChannelHandlerContext;)V
      43: aload_0
      44: aload_0
      45: aload_0
      46: invokevirtual #39                 // Method ticksInNanos:()J
      49: dup2_x1
      50: putfield      #13                 // Field lastWriteTime:J
      53: putfield      #8                  // Field lastReadTime:J
      56: aload_0
      57: getfield      #10                 // Field readerIdleTimeNanos:J
      60: lconst_0
      61: lcmp
      62: ifle          90
      65: aload_0
      66: aload_0
      67: aload_1
      68: new           #46                 // class io/netty/handler/timeout/IdleStateHandler$ReaderIdleTimeoutTask
      71: dup
      72: aload_0
      73: aload_1
      74: invokespecial #47                 // Method io/netty/handler/timeout/IdleStateHandler$ReaderIdleTimeoutTask."<init>":(Lio/netty/handler/timeout/IdleStateHandler;Lio/netty/channel/ChannelHandlerContext;)V
      77: aload_0
      78: getfield      #10                 // Field readerIdleTimeNanos:J
      81: getstatic     #28                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      84: invokevirtual #48                 // Method schedule:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      87: putfield      #7                  // Field readerIdleTimeout:Ljava/util/concurrent/ScheduledFuture;
      90: aload_0
      91: getfield      #5                  // Field writerIdleTimeNanos:J
      94: lconst_0
      95: lcmp
      96: ifle          124
      99: aload_0
     100: aload_0
     101: aload_1
     102: new           #49                 // class io/netty/handler/timeout/IdleStateHandler$WriterIdleTimeoutTask
     105: dup
     106: aload_0
     107: aload_1
     108: invokespecial #50                 // Method io/netty/handler/timeout/IdleStateHandler$WriterIdleTimeoutTask."<init>":(Lio/netty/handler/timeout/IdleStateHandler;Lio/netty/channel/ChannelHandlerContext;)V
     111: aload_0
     112: getfield      #5                  // Field writerIdleTimeNanos:J
     115: getstatic     #28                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
     118: invokevirtual #48                 // Method schedule:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
     121: putfield      #4                  // Field writerIdleTimeout:Ljava/util/concurrent/ScheduledFuture;
     124: aload_0
     125: getfield      #2                  // Field allIdleTimeNanos:J
     128: lconst_0
     129: lcmp
     130: ifle          158
     133: aload_0
     134: aload_0
     135: aload_1
     136: new           #51                 // class io/netty/handler/timeout/IdleStateHandler$AllIdleTimeoutTask
     139: dup
     140: aload_0
     141: aload_1
     142: invokespecial #52                 // Method io/netty/handler/timeout/IdleStateHandler$AllIdleTimeoutTask."<init>":(Lio/netty/handler/timeout/IdleStateHandler;Lio/netty/channel/ChannelHandlerContext;)V
     145: aload_0
     146: getfield      #2                  // Field allIdleTimeNanos:J
     149: getstatic     #28                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
     152: invokevirtual #48                 // Method schedule:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
     155: putfield      #1                  // Field allIdleTimeout:Ljava/util/concurrent/ScheduledFuture;
     158: return

  long ticksInNanos();
    Code:
       0: invokestatic  #53                 // Method java/lang/System.nanoTime:()J
       3: lreturn

  java.util.concurrent.ScheduledFuture<?> schedule(io.netty.channel.ChannelHandlerContext, java.lang.Runnable, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_1
       1: invokeinterface #54,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
       6: aload_2
       7: lload_3
       8: aload         5
      10: invokeinterface #55,  5           // InterfaceMethod io/netty/util/concurrent/EventExecutor.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/netty/util/concurrent/ScheduledFuture;
      15: areturn

  private void destroy();
    Code:
       0: aload_0
       1: iconst_2
       2: putfield      #44                 // Field state:B
       5: aload_0
       6: getfield      #7                  // Field readerIdleTimeout:Ljava/util/concurrent/ScheduledFuture;
       9: ifnull        28
      12: aload_0
      13: getfield      #7                  // Field readerIdleTimeout:Ljava/util/concurrent/ScheduledFuture;
      16: iconst_0
      17: invokeinterface #56,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      22: pop
      23: aload_0
      24: aconst_null
      25: putfield      #7                  // Field readerIdleTimeout:Ljava/util/concurrent/ScheduledFuture;
      28: aload_0
      29: getfield      #4                  // Field writerIdleTimeout:Ljava/util/concurrent/ScheduledFuture;
      32: ifnull        51
      35: aload_0
      36: getfield      #4                  // Field writerIdleTimeout:Ljava/util/concurrent/ScheduledFuture;
      39: iconst_0
      40: invokeinterface #56,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      45: pop
      46: aload_0
      47: aconst_null
      48: putfield      #4                  // Field writerIdleTimeout:Ljava/util/concurrent/ScheduledFuture;
      51: aload_0
      52: getfield      #1                  // Field allIdleTimeout:Ljava/util/concurrent/ScheduledFuture;
      55: ifnull        74
      58: aload_0
      59: getfield      #1                  // Field allIdleTimeout:Ljava/util/concurrent/ScheduledFuture;
      62: iconst_0
      63: invokeinterface #56,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      68: pop
      69: aload_0
      70: aconst_null
      71: putfield      #1                  // Field allIdleTimeout:Ljava/util/concurrent/ScheduledFuture;
      74: return

  protected void channelIdle(io.netty.channel.ChannelHandlerContext, io.netty.handler.timeout.IdleStateEvent) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #57,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireUserEventTriggered:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
       7: pop
       8: return

  protected io.netty.handler.timeout.IdleStateEvent newIdleStateEvent(io.netty.handler.timeout.IdleState, boolean);
    Code:
       0: getstatic     #58                 // Field io/netty/handler/timeout/IdleStateHandler$2.$SwitchMap$io$netty$handler$timeout$IdleState:[I
       3: aload_1
       4: invokevirtual #59                 // Method io/netty/handler/timeout/IdleState.ordinal:()I
       7: iaload
       8: tableswitch   { // 1 to 3
                     1: 36
                     2: 50
                     3: 64
               default: 78
          }
      36: iload_2
      37: ifeq          46
      40: getstatic     #60                 // Field io/netty/handler/timeout/IdleStateEvent.FIRST_ALL_IDLE_STATE_EVENT:Lio/netty/handler/timeout/IdleStateEvent;
      43: goto          49
      46: getstatic     #61                 // Field io/netty/handler/timeout/IdleStateEvent.ALL_IDLE_STATE_EVENT:Lio/netty/handler/timeout/IdleStateEvent;
      49: areturn
      50: iload_2
      51: ifeq          60
      54: getstatic     #62                 // Field io/netty/handler/timeout/IdleStateEvent.FIRST_READER_IDLE_STATE_EVENT:Lio/netty/handler/timeout/IdleStateEvent;
      57: goto          63
      60: getstatic     #63                 // Field io/netty/handler/timeout/IdleStateEvent.READER_IDLE_STATE_EVENT:Lio/netty/handler/timeout/IdleStateEvent;
      63: areturn
      64: iload_2
      65: ifeq          74
      68: getstatic     #64                 // Field io/netty/handler/timeout/IdleStateEvent.FIRST_WRITER_IDLE_STATE_EVENT:Lio/netty/handler/timeout/IdleStateEvent;
      71: goto          77
      74: getstatic     #65                 // Field io/netty/handler/timeout/IdleStateEvent.WRITER_IDLE_STATE_EVENT:Lio/netty/handler/timeout/IdleStateEvent;
      77: areturn
      78: new           #66                 // class java/lang/IllegalArgumentException
      81: dup
      82: new           #67                 // class java/lang/StringBuilder
      85: dup
      86: invokespecial #68                 // Method java/lang/StringBuilder."<init>":()V
      89: ldc           #69                 // String Unhandled: state=
      91: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: aload_1
      95: invokevirtual #71                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      98: ldc           #72                 // String , first=
     100: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: iload_2
     104: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     107: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     110: invokespecial #75                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     113: athrow

  private void initOutputChanged(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_0
       1: getfield      #24                 // Field observeOutput:Z
       4: ifeq          55
       7: aload_1
       8: invokeinterface #30,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      13: astore_2
      14: aload_2
      15: invokeinterface #76,  1           // InterfaceMethod io/netty/channel/Channel.unsafe:()Lio/netty/channel/Channel$Unsafe;
      20: astore_3
      21: aload_3
      22: invokeinterface #77,  1           // InterfaceMethod io/netty/channel/Channel$Unsafe.outboundBuffer:()Lio/netty/channel/ChannelOutboundBuffer;
      27: astore        4
      29: aload         4
      31: ifnull        55
      34: aload_0
      35: aload         4
      37: invokevirtual #78                 // Method io/netty/channel/ChannelOutboundBuffer.current:()Ljava/lang/Object;
      40: invokestatic  #79                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
      43: putfield      #80                 // Field lastMessageHashCode:I
      46: aload_0
      47: aload         4
      49: invokevirtual #81                 // Method io/netty/channel/ChannelOutboundBuffer.totalPendingWriteBytes:()J
      52: putfield      #82                 // Field lastPendingWriteBytes:J
      55: return

  private boolean hasOutputChanged(io.netty.channel.ChannelHandlerContext, boolean);
    Code:
       0: aload_0
       1: getfield      #24                 // Field observeOutput:Z
       4: ifeq          116
       7: aload_0
       8: getfield      #83                 // Field lastChangeCheckTimeStamp:J
      11: aload_0
      12: getfield      #13                 // Field lastWriteTime:J
      15: lcmp
      16: ifeq          33
      19: aload_0
      20: aload_0
      21: getfield      #13                 // Field lastWriteTime:J
      24: putfield      #83                 // Field lastChangeCheckTimeStamp:J
      27: iload_2
      28: ifne          33
      31: iconst_1
      32: ireturn
      33: aload_1
      34: invokeinterface #30,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      39: astore_3
      40: aload_3
      41: invokeinterface #76,  1           // InterfaceMethod io/netty/channel/Channel.unsafe:()Lio/netty/channel/Channel$Unsafe;
      46: astore        4
      48: aload         4
      50: invokeinterface #77,  1           // InterfaceMethod io/netty/channel/Channel$Unsafe.outboundBuffer:()Lio/netty/channel/ChannelOutboundBuffer;
      55: astore        5
      57: aload         5
      59: ifnull        116
      62: aload         5
      64: invokevirtual #78                 // Method io/netty/channel/ChannelOutboundBuffer.current:()Ljava/lang/Object;
      67: invokestatic  #79                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
      70: istore        6
      72: aload         5
      74: invokevirtual #81                 // Method io/netty/channel/ChannelOutboundBuffer.totalPendingWriteBytes:()J
      77: lstore        7
      79: iload         6
      81: aload_0
      82: getfield      #80                 // Field lastMessageHashCode:I
      85: if_icmpne     98
      88: lload         7
      90: aload_0
      91: getfield      #82                 // Field lastPendingWriteBytes:J
      94: lcmp
      95: ifeq          116
      98: aload_0
      99: iload         6
     101: putfield      #80                 // Field lastMessageHashCode:I
     104: aload_0
     105: lload         7
     107: putfield      #82                 // Field lastPendingWriteBytes:J
     110: iload_2
     111: ifne          116
     114: iconst_1
     115: ireturn
     116: iconst_0
     117: ireturn

  static long access$002(io.netty.handler.timeout.IdleStateHandler, long);
    Code:
       0: aload_0
       1: lload_1
       2: dup2_x1
       3: putfield      #13                 // Field lastWriteTime:J
       6: lreturn

  static boolean access$102(io.netty.handler.timeout.IdleStateHandler, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #12                 // Field firstWriterIdleEvent:Z
       6: ireturn

  static boolean access$202(io.netty.handler.timeout.IdleStateHandler, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #11                 // Field firstAllIdleEvent:Z
       6: ireturn

  static long access$300(io.netty.handler.timeout.IdleStateHandler);
    Code:
       0: aload_0
       1: getfield      #10                 // Field readerIdleTimeNanos:J
       4: lreturn

  static boolean access$400(io.netty.handler.timeout.IdleStateHandler);
    Code:
       0: aload_0
       1: getfield      #9                  // Field reading:Z
       4: ireturn

  static long access$500(io.netty.handler.timeout.IdleStateHandler);
    Code:
       0: aload_0
       1: getfield      #8                  // Field lastReadTime:J
       4: lreturn

  static java.util.concurrent.ScheduledFuture access$602(io.netty.handler.timeout.IdleStateHandler, java.util.concurrent.ScheduledFuture);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #7                  // Field readerIdleTimeout:Ljava/util/concurrent/ScheduledFuture;
       6: areturn

  static boolean access$700(io.netty.handler.timeout.IdleStateHandler);
    Code:
       0: aload_0
       1: getfield      #6                  // Field firstReaderIdleEvent:Z
       4: ireturn

  static boolean access$702(io.netty.handler.timeout.IdleStateHandler, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #6                  // Field firstReaderIdleEvent:Z
       6: ireturn

  static long access$000(io.netty.handler.timeout.IdleStateHandler);
    Code:
       0: aload_0
       1: getfield      #13                 // Field lastWriteTime:J
       4: lreturn

  static long access$800(io.netty.handler.timeout.IdleStateHandler);
    Code:
       0: aload_0
       1: getfield      #5                  // Field writerIdleTimeNanos:J
       4: lreturn

  static java.util.concurrent.ScheduledFuture access$902(io.netty.handler.timeout.IdleStateHandler, java.util.concurrent.ScheduledFuture);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #4                  // Field writerIdleTimeout:Ljava/util/concurrent/ScheduledFuture;
       6: areturn

  static boolean access$100(io.netty.handler.timeout.IdleStateHandler);
    Code:
       0: aload_0
       1: getfield      #12                 // Field firstWriterIdleEvent:Z
       4: ireturn

  static boolean access$1000(io.netty.handler.timeout.IdleStateHandler, io.netty.channel.ChannelHandlerContext, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #3                  // Method hasOutputChanged:(Lio/netty/channel/ChannelHandlerContext;Z)Z
       6: ireturn

  static long access$1100(io.netty.handler.timeout.IdleStateHandler);
    Code:
       0: aload_0
       1: getfield      #2                  // Field allIdleTimeNanos:J
       4: lreturn

  static java.util.concurrent.ScheduledFuture access$1202(io.netty.handler.timeout.IdleStateHandler, java.util.concurrent.ScheduledFuture);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #1                  // Field allIdleTimeout:Ljava/util/concurrent/ScheduledFuture;
       6: areturn

  static boolean access$200(io.netty.handler.timeout.IdleStateHandler);
    Code:
       0: aload_0
       1: getfield      #11                 // Field firstAllIdleEvent:Z
       4: ireturn

  static {};
    Code:
       0: getstatic     #84                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       3: lconst_1
       4: invokevirtual #25                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
       7: putstatic     #26                 // Field MIN_TIMEOUT_NANOS:J
      10: return
}
