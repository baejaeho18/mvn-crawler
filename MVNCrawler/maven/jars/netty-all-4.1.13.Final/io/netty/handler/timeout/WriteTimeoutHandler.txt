Compiled from "WriteTimeoutHandler.java"
public class io.netty.handler.timeout.WriteTimeoutHandler extends io.netty.channel.ChannelOutboundHandlerAdapter {
  private static final long MIN_TIMEOUT_NANOS;

  private final long timeoutNanos;

  private io.netty.handler.timeout.WriteTimeoutHandler$WriteTimeoutTask lastTask;

  private boolean closed;

  static final boolean $assertionsDisabled;

  public io.netty.handler.timeout.WriteTimeoutHandler(int);
    Code:
       0: aload_0
       1: iload_1
       2: i2l
       3: getstatic     #2                  // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
       6: invokespecial #3                  // Method "<init>":(JLjava/util/concurrent/TimeUnit;)V
       9: return

  public io.netty.handler.timeout.WriteTimeoutHandler(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method io/netty/channel/ChannelOutboundHandlerAdapter."<init>":()V
       4: aload_3
       5: ifnonnull     18
       8: new           #5                  // class java/lang/NullPointerException
      11: dup
      12: ldc           #6                  // String unit
      14: invokespecial #7                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: lload_1
      19: lconst_0
      20: lcmp
      21: ifgt          32
      24: aload_0
      25: lconst_0
      26: putfield      #8                  // Field timeoutNanos:J
      29: goto          47
      32: aload_0
      33: aload_3
      34: lload_1
      35: invokevirtual #9                  // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      38: getstatic     #10                 // Field MIN_TIMEOUT_NANOS:J
      41: invokestatic  #11                 // Method java/lang/Math.max:(JJ)J
      44: putfield      #8                  // Field timeoutNanos:J
      47: return

  public void write(io.netty.channel.ChannelHandlerContext, java.lang.Object, io.netty.channel.ChannelPromise) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #8                  // Field timeoutNanos:J
       4: lconst_0
       5: lcmp
       6: ifle          22
       9: aload_3
      10: invokeinterface #12,  1           // InterfaceMethod io/netty/channel/ChannelPromise.unvoid:()Lio/netty/channel/ChannelPromise;
      15: astore_3
      16: aload_0
      17: aload_1
      18: aload_3
      19: invokespecial #13                 // Method scheduleTimeout:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelPromise;)V
      22: aload_1
      23: aload_2
      24: aload_3
      25: invokeinterface #14,  3           // InterfaceMethod io/netty/channel/ChannelHandlerContext.write:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      30: pop
      31: return

  public void handlerRemoved(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #15                 // Field lastTask:Lio/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask;
       4: astore_2
       5: aload_0
       6: aconst_null
       7: putfield      #15                 // Field lastTask:Lio/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask;
      10: aload_2
      11: ifnull        45
      14: aload_2
      15: getfield      #16                 // Field io/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask.scheduledFuture:Ljava/util/concurrent/ScheduledFuture;
      18: iconst_0
      19: invokeinterface #17,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      24: pop
      25: aload_2
      26: getfield      #18                 // Field io/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask.prev:Lio/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask;
      29: astore_3
      30: aload_2
      31: aconst_null
      32: putfield      #18                 // Field io/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask.prev:Lio/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask;
      35: aload_2
      36: aconst_null
      37: putfield      #19                 // Field io/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask.next:Lio/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask;
      40: aload_3
      41: astore_2
      42: goto          10
      45: return

  private void scheduleTimeout(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise);
    Code:
       0: new           #20                 // class io/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #21                 // Method io/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask."<init>":(Lio/netty/handler/timeout/WriteTimeoutHandler;Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelPromise;)V
      10: astore_3
      11: aload_3
      12: aload_1
      13: invokeinterface #22,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      18: aload_3
      19: aload_0
      20: getfield      #8                  // Field timeoutNanos:J
      23: getstatic     #23                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      26: invokeinterface #24,  5           // InterfaceMethod io/netty/util/concurrent/EventExecutor.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/netty/util/concurrent/ScheduledFuture;
      31: putfield      #16                 // Field io/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask.scheduledFuture:Ljava/util/concurrent/ScheduledFuture;
      34: aload_3
      35: getfield      #16                 // Field io/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask.scheduledFuture:Ljava/util/concurrent/ScheduledFuture;
      38: invokeinterface #25,  1           // InterfaceMethod java/util/concurrent/ScheduledFuture.isDone:()Z
      43: ifne          59
      46: aload_0
      47: aload_3
      48: invokespecial #26                 // Method addWriteTimeoutTask:(Lio/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask;)V
      51: aload_2
      52: aload_3
      53: invokeinterface #27,  2           // InterfaceMethod io/netty/channel/ChannelPromise.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelPromise;
      58: pop
      59: return

  private void addWriteTimeoutTask(io.netty.handler.timeout.WriteTimeoutHandler$WriteTimeoutTask);
    Code:
       0: aload_0
       1: getfield      #15                 // Field lastTask:Lio/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask;
       4: ifnonnull     15
       7: aload_0
       8: aload_1
       9: putfield      #15                 // Field lastTask:Lio/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask;
      12: goto          36
      15: aload_0
      16: getfield      #15                 // Field lastTask:Lio/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask;
      19: aload_1
      20: putfield      #19                 // Field io/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask.next:Lio/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask;
      23: aload_1
      24: aload_0
      25: getfield      #15                 // Field lastTask:Lio/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask;
      28: putfield      #18                 // Field io/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask.prev:Lio/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask;
      31: aload_0
      32: aload_1
      33: putfield      #15                 // Field lastTask:Lio/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask;
      36: return

  private void removeWriteTimeoutTask(io.netty.handler.timeout.WriteTimeoutHandler$WriteTimeoutTask);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #15                 // Field lastTask:Lio/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask;
       5: if_acmpne     58
       8: getstatic     #28                 // Field $assertionsDisabled:Z
      11: ifne          29
      14: aload_1
      15: getfield      #19                 // Field io/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask.next:Lio/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask;
      18: ifnull        29
      21: new           #29                 // class java/lang/AssertionError
      24: dup
      25: invokespecial #30                 // Method java/lang/AssertionError."<init>":()V
      28: athrow
      29: aload_0
      30: aload_0
      31: getfield      #15                 // Field lastTask:Lio/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask;
      34: getfield      #18                 // Field io/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask.prev:Lio/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask;
      37: putfield      #15                 // Field lastTask:Lio/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask;
      40: aload_0
      41: getfield      #15                 // Field lastTask:Lio/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask;
      44: ifnull        113
      47: aload_0
      48: getfield      #15                 // Field lastTask:Lio/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask;
      51: aconst_null
      52: putfield      #19                 // Field io/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask.next:Lio/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask;
      55: goto          113
      58: aload_1
      59: getfield      #18                 // Field io/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask.prev:Lio/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask;
      62: ifnonnull     73
      65: aload_1
      66: getfield      #19                 // Field io/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask.next:Lio/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask;
      69: ifnonnull     73
      72: return
      73: aload_1
      74: getfield      #18                 // Field io/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask.prev:Lio/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask;
      77: ifnonnull     91
      80: aload_1
      81: getfield      #19                 // Field io/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask.next:Lio/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask;
      84: aconst_null
      85: putfield      #18                 // Field io/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask.prev:Lio/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask;
      88: goto          113
      91: aload_1
      92: getfield      #18                 // Field io/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask.prev:Lio/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask;
      95: aload_1
      96: getfield      #19                 // Field io/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask.next:Lio/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask;
      99: putfield      #19                 // Field io/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask.next:Lio/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask;
     102: aload_1
     103: getfield      #19                 // Field io/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask.next:Lio/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask;
     106: aload_1
     107: getfield      #18                 // Field io/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask.prev:Lio/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask;
     110: putfield      #18                 // Field io/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask.prev:Lio/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask;
     113: aload_1
     114: aconst_null
     115: putfield      #18                 // Field io/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask.prev:Lio/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask;
     118: aload_1
     119: aconst_null
     120: putfield      #19                 // Field io/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask.next:Lio/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask;
     123: return

  protected void writeTimedOut(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #31                 // Field closed:Z
       4: ifne          29
       7: aload_1
       8: getstatic     #32                 // Field io/netty/handler/timeout/WriteTimeoutException.INSTANCE:Lio/netty/handler/timeout/WriteTimeoutException;
      11: invokeinterface #33,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelHandlerContext;
      16: pop
      17: aload_1
      18: invokeinterface #34,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.close:()Lio/netty/channel/ChannelFuture;
      23: pop
      24: aload_0
      25: iconst_1
      26: putfield      #31                 // Field closed:Z
      29: return

  static void access$000(io.netty.handler.timeout.WriteTimeoutHandler, io.netty.handler.timeout.WriteTimeoutHandler$WriteTimeoutTask);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method removeWriteTimeoutTask:(Lio/netty/handler/timeout/WriteTimeoutHandler$WriteTimeoutTask;)V
       5: return

  static {};
    Code:
       0: ldc           #35                 // class io/netty/handler/timeout/WriteTimeoutHandler
       2: invokevirtual #36                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #28                 // Field $assertionsDisabled:Z
      16: getstatic     #37                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      19: lconst_1
      20: invokevirtual #9                  // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      23: putstatic     #10                 // Field MIN_TIMEOUT_NANOS:J
      26: return
}
