Compiled from "ChannelTrafficShapingHandler.java"
public class io.netty.handler.traffic.ChannelTrafficShapingHandler extends io.netty.handler.traffic.AbstractTrafficShapingHandler {
  private final java.util.ArrayDeque<io.netty.handler.traffic.ChannelTrafficShapingHandler$ToSend> messagesQueue;

  private long queueSize;

  public io.netty.handler.traffic.ChannelTrafficShapingHandler(long, long, long, long);
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: lload         5
       5: lload         7
       7: invokespecial #2                  // Method io/netty/handler/traffic/AbstractTrafficShapingHandler."<init>":(JJJJ)V
      10: aload_0
      11: new           #3                  // class java/util/ArrayDeque
      14: dup
      15: invokespecial #4                  // Method java/util/ArrayDeque."<init>":()V
      18: putfield      #5                  // Field messagesQueue:Ljava/util/ArrayDeque;
      21: return

  public io.netty.handler.traffic.ChannelTrafficShapingHandler(long, long, long);
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: lload         5
       5: invokespecial #6                  // Method io/netty/handler/traffic/AbstractTrafficShapingHandler."<init>":(JJJ)V
       8: aload_0
       9: new           #3                  // class java/util/ArrayDeque
      12: dup
      13: invokespecial #4                  // Method java/util/ArrayDeque."<init>":()V
      16: putfield      #5                  // Field messagesQueue:Ljava/util/ArrayDeque;
      19: return

  public io.netty.handler.traffic.ChannelTrafficShapingHandler(long, long);
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: invokespecial #7                  // Method io/netty/handler/traffic/AbstractTrafficShapingHandler."<init>":(JJ)V
       6: aload_0
       7: new           #3                  // class java/util/ArrayDeque
      10: dup
      11: invokespecial #4                  // Method java/util/ArrayDeque."<init>":()V
      14: putfield      #5                  // Field messagesQueue:Ljava/util/ArrayDeque;
      17: return

  public io.netty.handler.traffic.ChannelTrafficShapingHandler(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #8                  // Method io/netty/handler/traffic/AbstractTrafficShapingHandler."<init>":(J)V
       5: aload_0
       6: new           #3                  // class java/util/ArrayDeque
       9: dup
      10: invokespecial #4                  // Method java/util/ArrayDeque."<init>":()V
      13: putfield      #5                  // Field messagesQueue:Ljava/util/ArrayDeque;
      16: return

  public void handlerAdded(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: new           #9                  // class io/netty/handler/traffic/TrafficCounter
       3: dup
       4: aload_0
       5: aload_1
       6: invokeinterface #10,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      11: new           #11                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #13                 // String ChannelTC
      20: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_1
      24: invokeinterface #15,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      29: invokevirtual #16                 // Method java/lang/Object.hashCode:()I
      32: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      35: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: aload_0
      39: getfield      #19                 // Field checkInterval:J
      42: invokespecial #20                 // Method io/netty/handler/traffic/TrafficCounter."<init>":(Lio/netty/handler/traffic/AbstractTrafficShapingHandler;Ljava/util/concurrent/ScheduledExecutorService;Ljava/lang/String;J)V
      45: astore_2
      46: aload_0
      47: aload_2
      48: invokevirtual #21                 // Method setTrafficCounter:(Lio/netty/handler/traffic/TrafficCounter;)V
      51: aload_2
      52: invokevirtual #22                 // Method io/netty/handler/traffic/TrafficCounter.start:()V
      55: aload_0
      56: aload_1
      57: invokespecial #23                 // Method io/netty/handler/traffic/AbstractTrafficShapingHandler.handlerAdded:(Lio/netty/channel/ChannelHandlerContext;)V
      60: return

  public void handlerRemoved(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #24                 // Field trafficCounter:Lio/netty/handler/traffic/TrafficCounter;
       4: invokevirtual #25                 // Method io/netty/handler/traffic/TrafficCounter.stop:()V
       7: aload_0
       8: dup
       9: astore_2
      10: monitorenter
      11: aload_1
      12: invokeinterface #15,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      17: invokeinterface #26,  1           // InterfaceMethod io/netty/channel/Channel.isActive:()Z
      22: ifeq          107
      25: aload_0
      26: getfield      #5                  // Field messagesQueue:Ljava/util/ArrayDeque;
      29: invokevirtual #27                 // Method java/util/ArrayDeque.iterator:()Ljava/util/Iterator;
      32: astore_3
      33: aload_3
      34: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      39: ifeq          104
      42: aload_3
      43: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      48: checkcast     #30                 // class io/netty/handler/traffic/ChannelTrafficShapingHandler$ToSend
      51: astore        4
      53: aload_0
      54: aload         4
      56: getfield      #31                 // Field io/netty/handler/traffic/ChannelTrafficShapingHandler$ToSend.toSend:Ljava/lang/Object;
      59: invokevirtual #32                 // Method calculateSize:(Ljava/lang/Object;)J
      62: lstore        5
      64: aload_0
      65: getfield      #24                 // Field trafficCounter:Lio/netty/handler/traffic/TrafficCounter;
      68: lload         5
      70: invokevirtual #33                 // Method io/netty/handler/traffic/TrafficCounter.bytesRealWriteFlowControl:(J)V
      73: aload_0
      74: dup
      75: getfield      #34                 // Field queueSize:J
      78: lload         5
      80: lsub
      81: putfield      #34                 // Field queueSize:J
      84: aload_1
      85: aload         4
      87: getfield      #31                 // Field io/netty/handler/traffic/ChannelTrafficShapingHandler$ToSend.toSend:Ljava/lang/Object;
      90: aload         4
      92: getfield      #35                 // Field io/netty/handler/traffic/ChannelTrafficShapingHandler$ToSend.promise:Lio/netty/channel/ChannelPromise;
      95: invokeinterface #36,  3           // InterfaceMethod io/netty/channel/ChannelHandlerContext.write:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
     100: pop
     101: goto          33
     104: goto          161
     107: aload_0
     108: getfield      #5                  // Field messagesQueue:Ljava/util/ArrayDeque;
     111: invokevirtual #27                 // Method java/util/ArrayDeque.iterator:()Ljava/util/Iterator;
     114: astore_3
     115: aload_3
     116: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     121: ifeq          161
     124: aload_3
     125: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     130: checkcast     #30                 // class io/netty/handler/traffic/ChannelTrafficShapingHandler$ToSend
     133: astore        4
     135: aload         4
     137: getfield      #31                 // Field io/netty/handler/traffic/ChannelTrafficShapingHandler$ToSend.toSend:Ljava/lang/Object;
     140: instanceof    #37                 // class io/netty/buffer/ByteBuf
     143: ifeq          158
     146: aload         4
     148: getfield      #31                 // Field io/netty/handler/traffic/ChannelTrafficShapingHandler$ToSend.toSend:Ljava/lang/Object;
     151: checkcast     #37                 // class io/netty/buffer/ByteBuf
     154: invokevirtual #38                 // Method io/netty/buffer/ByteBuf.release:()Z
     157: pop
     158: goto          115
     161: aload_0
     162: getfield      #5                  // Field messagesQueue:Ljava/util/ArrayDeque;
     165: invokevirtual #39                 // Method java/util/ArrayDeque.clear:()V
     168: aload_2
     169: monitorexit
     170: goto          180
     173: astore        7
     175: aload_2
     176: monitorexit
     177: aload         7
     179: athrow
     180: aload_0
     181: aload_1
     182: invokevirtual #40                 // Method releaseWriteSuspended:(Lio/netty/channel/ChannelHandlerContext;)V
     185: aload_0
     186: aload_1
     187: invokevirtual #41                 // Method releaseReadSuspended:(Lio/netty/channel/ChannelHandlerContext;)V
     190: aload_0
     191: aload_1
     192: invokespecial #42                 // Method io/netty/handler/traffic/AbstractTrafficShapingHandler.handlerRemoved:(Lio/netty/channel/ChannelHandlerContext;)V
     195: return
    Exception table:
       from    to  target type
          11   170   173   any
         173   177   173   any

  void submitWrite(io.netty.channel.ChannelHandlerContext, java.lang.Object, long, long, long, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: dup
       2: astore        11
       4: monitorenter
       5: lload         5
       7: lconst_0
       8: lcmp
       9: ifne          44
      12: aload_0
      13: getfield      #5                  // Field messagesQueue:Ljava/util/ArrayDeque;
      16: invokevirtual #43                 // Method java/util/ArrayDeque.isEmpty:()Z
      19: ifeq          44
      22: aload_0
      23: getfield      #24                 // Field trafficCounter:Lio/netty/handler/traffic/TrafficCounter;
      26: lload_3
      27: invokevirtual #33                 // Method io/netty/handler/traffic/TrafficCounter.bytesRealWriteFlowControl:(J)V
      30: aload_1
      31: aload_2
      32: aload         9
      34: invokeinterface #36,  3           // InterfaceMethod io/netty/channel/ChannelHandlerContext.write:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      39: pop
      40: aload         11
      42: monitorexit
      43: return
      44: new           #30                 // class io/netty/handler/traffic/ChannelTrafficShapingHandler$ToSend
      47: dup
      48: lload         5
      50: lload         7
      52: ladd
      53: aload_2
      54: aload         9
      56: aconst_null
      57: invokespecial #44                 // Method io/netty/handler/traffic/ChannelTrafficShapingHandler$ToSend."<init>":(JLjava/lang/Object;Lio/netty/channel/ChannelPromise;Lio/netty/handler/traffic/ChannelTrafficShapingHandler$1;)V
      60: astore        10
      62: aload_0
      63: getfield      #5                  // Field messagesQueue:Ljava/util/ArrayDeque;
      66: aload         10
      68: invokevirtual #45                 // Method java/util/ArrayDeque.addLast:(Ljava/lang/Object;)V
      71: aload_0
      72: dup
      73: getfield      #34                 // Field queueSize:J
      76: lload_3
      77: ladd
      78: putfield      #34                 // Field queueSize:J
      81: aload_0
      82: aload_1
      83: lload         5
      85: aload_0
      86: getfield      #34                 // Field queueSize:J
      89: invokevirtual #46                 // Method checkWriteSuspend:(Lio/netty/channel/ChannelHandlerContext;JJ)V
      92: aload         11
      94: monitorexit
      95: goto          106
      98: astore        12
     100: aload         11
     102: monitorexit
     103: aload         12
     105: athrow
     106: aload         10
     108: getfield      #47                 // Field io/netty/handler/traffic/ChannelTrafficShapingHandler$ToSend.relativeTimeAction:J
     111: lstore        11
     113: aload_1
     114: invokeinterface #10,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
     119: new           #48                 // class io/netty/handler/traffic/ChannelTrafficShapingHandler$1
     122: dup
     123: aload_0
     124: aload_1
     125: lload         11
     127: invokespecial #49                 // Method io/netty/handler/traffic/ChannelTrafficShapingHandler$1."<init>":(Lio/netty/handler/traffic/ChannelTrafficShapingHandler;Lio/netty/channel/ChannelHandlerContext;J)V
     130: lload         5
     132: getstatic     #50                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     135: invokeinterface #51,  5           // InterfaceMethod io/netty/util/concurrent/EventExecutor.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/netty/util/concurrent/ScheduledFuture;
     140: pop
     141: return
    Exception table:
       from    to  target type
           5    43    98   any
          44    95    98   any
          98   103    98   any

  private void sendAllValid(io.netty.channel.ChannelHandlerContext, long);
    Code:
       0: aload_0
       1: dup
       2: astore        4
       4: monitorenter
       5: aload_0
       6: getfield      #5                  // Field messagesQueue:Ljava/util/ArrayDeque;
       9: invokevirtual #52                 // Method java/util/ArrayDeque.pollFirst:()Ljava/lang/Object;
      12: checkcast     #30                 // class io/netty/handler/traffic/ChannelTrafficShapingHandler$ToSend
      15: astore        5
      17: aload         5
      19: ifnull        110
      22: aload         5
      24: getfield      #47                 // Field io/netty/handler/traffic/ChannelTrafficShapingHandler$ToSend.relativeTimeAction:J
      27: lload_2
      28: lcmp
      29: ifgt          83
      32: aload_0
      33: aload         5
      35: getfield      #31                 // Field io/netty/handler/traffic/ChannelTrafficShapingHandler$ToSend.toSend:Ljava/lang/Object;
      38: invokevirtual #32                 // Method calculateSize:(Ljava/lang/Object;)J
      41: lstore        6
      43: aload_0
      44: getfield      #24                 // Field trafficCounter:Lio/netty/handler/traffic/TrafficCounter;
      47: lload         6
      49: invokevirtual #33                 // Method io/netty/handler/traffic/TrafficCounter.bytesRealWriteFlowControl:(J)V
      52: aload_0
      53: dup
      54: getfield      #34                 // Field queueSize:J
      57: lload         6
      59: lsub
      60: putfield      #34                 // Field queueSize:J
      63: aload_1
      64: aload         5
      66: getfield      #31                 // Field io/netty/handler/traffic/ChannelTrafficShapingHandler$ToSend.toSend:Ljava/lang/Object;
      69: aload         5
      71: getfield      #35                 // Field io/netty/handler/traffic/ChannelTrafficShapingHandler$ToSend.promise:Lio/netty/channel/ChannelPromise;
      74: invokeinterface #36,  3           // InterfaceMethod io/netty/channel/ChannelHandlerContext.write:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      79: pop
      80: goto          95
      83: aload_0
      84: getfield      #5                  // Field messagesQueue:Ljava/util/ArrayDeque;
      87: aload         5
      89: invokevirtual #53                 // Method java/util/ArrayDeque.addFirst:(Ljava/lang/Object;)V
      92: goto          110
      95: aload_0
      96: getfield      #5                  // Field messagesQueue:Ljava/util/ArrayDeque;
      99: invokevirtual #52                 // Method java/util/ArrayDeque.pollFirst:()Ljava/lang/Object;
     102: checkcast     #30                 // class io/netty/handler/traffic/ChannelTrafficShapingHandler$ToSend
     105: astore        5
     107: goto          17
     110: aload_0
     111: getfield      #5                  // Field messagesQueue:Ljava/util/ArrayDeque;
     114: invokevirtual #43                 // Method java/util/ArrayDeque.isEmpty:()Z
     117: ifeq          125
     120: aload_0
     121: aload_1
     122: invokevirtual #40                 // Method releaseWriteSuspended:(Lio/netty/channel/ChannelHandlerContext;)V
     125: aload         4
     127: monitorexit
     128: goto          139
     131: astore        8
     133: aload         4
     135: monitorexit
     136: aload         8
     138: athrow
     139: aload_1
     140: invokeinterface #54,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.flush:()Lio/netty/channel/ChannelHandlerContext;
     145: pop
     146: return
    Exception table:
       from    to  target type
           5   128   131   any
         131   136   131   any

  public long queueSize();
    Code:
       0: aload_0
       1: getfield      #34                 // Field queueSize:J
       4: lreturn

  static void access$100(io.netty.handler.traffic.ChannelTrafficShapingHandler, io.netty.channel.ChannelHandlerContext, long);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: invokespecial #1                  // Method sendAllValid:(Lio/netty/channel/ChannelHandlerContext;J)V
       6: return
}
