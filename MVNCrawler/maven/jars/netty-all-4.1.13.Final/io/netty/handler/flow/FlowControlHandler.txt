Compiled from "FlowControlHandler.java"
public class io.netty.handler.flow.FlowControlHandler extends io.netty.channel.ChannelDuplexHandler {
  private static final io.netty.util.internal.logging.InternalLogger logger;

  private final boolean releaseMessages;

  private io.netty.handler.flow.FlowControlHandler$RecyclableArrayDeque queue;

  private io.netty.channel.ChannelConfig config;

  private boolean shouldConsume;

  public io.netty.handler.flow.FlowControlHandler();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #1                  // Method "<init>":(Z)V
       5: return

  public io.netty.handler.flow.FlowControlHandler(boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method io/netty/channel/ChannelDuplexHandler."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #3                  // Field releaseMessages:Z
       9: return

  boolean isQueueEmpty();
    Code:
       0: aload_0
       1: getfield      #4                  // Field queue:Lio/netty/handler/flow/FlowControlHandler$RecyclableArrayDeque;
       4: invokevirtual #5                  // Method io/netty/handler/flow/FlowControlHandler$RecyclableArrayDeque.isEmpty:()Z
       7: ireturn

  private void destroy();
    Code:
       0: aload_0
       1: getfield      #4                  // Field queue:Lio/netty/handler/flow/FlowControlHandler$RecyclableArrayDeque;
       4: ifnull        69
       7: aload_0
       8: getfield      #4                  // Field queue:Lio/netty/handler/flow/FlowControlHandler$RecyclableArrayDeque;
      11: invokevirtual #5                  // Method io/netty/handler/flow/FlowControlHandler$RecyclableArrayDeque.isEmpty:()Z
      14: ifne          57
      17: getstatic     #6                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      20: ldc           #7                  // String Non-empty queue: {}
      22: aload_0
      23: getfield      #4                  // Field queue:Lio/netty/handler/flow/FlowControlHandler$RecyclableArrayDeque;
      26: invokeinterface #8,  3            // InterfaceMethod io/netty/util/internal/logging/InternalLogger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
      31: aload_0
      32: getfield      #3                  // Field releaseMessages:Z
      35: ifeq          57
      38: aload_0
      39: getfield      #4                  // Field queue:Lio/netty/handler/flow/FlowControlHandler$RecyclableArrayDeque;
      42: invokevirtual #9                  // Method io/netty/handler/flow/FlowControlHandler$RecyclableArrayDeque.poll:()Ljava/lang/Object;
      45: dup
      46: astore_1
      47: ifnull        57
      50: aload_1
      51: invokestatic  #10                 // Method io/netty/util/ReferenceCountUtil.safeRelease:(Ljava/lang/Object;)V
      54: goto          38
      57: aload_0
      58: getfield      #4                  // Field queue:Lio/netty/handler/flow/FlowControlHandler$RecyclableArrayDeque;
      61: invokevirtual #11                 // Method io/netty/handler/flow/FlowControlHandler$RecyclableArrayDeque.recycle:()V
      64: aload_0
      65: aconst_null
      66: putfield      #4                  // Field queue:Lio/netty/handler/flow/FlowControlHandler$RecyclableArrayDeque;
      69: return

  public void handlerAdded(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #12,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
       7: invokeinterface #13,  1           // InterfaceMethod io/netty/channel/Channel.config:()Lio/netty/channel/ChannelConfig;
      12: putfield      #14                 // Field config:Lio/netty/channel/ChannelConfig;
      15: return

  public void channelInactive(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #15                 // Method destroy:()V
       4: aload_1
       5: invokeinterface #16,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelInactive:()Lio/netty/channel/ChannelHandlerContext;
      10: pop
      11: return

  public void read(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #17                 // Method dequeue:(Lio/netty/channel/ChannelHandlerContext;I)I
       6: ifne          21
       9: aload_0
      10: iconst_1
      11: putfield      #18                 // Field shouldConsume:Z
      14: aload_1
      15: invokeinterface #19,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.read:()Lio/netty/channel/ChannelHandlerContext;
      20: pop
      21: return

  public void channelRead(io.netty.channel.ChannelHandlerContext, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #4                  // Field queue:Lio/netty/handler/flow/FlowControlHandler$RecyclableArrayDeque;
       4: ifnonnull     14
       7: aload_0
       8: invokestatic  #20                 // Method io/netty/handler/flow/FlowControlHandler$RecyclableArrayDeque.newInstance:()Lio/netty/handler/flow/FlowControlHandler$RecyclableArrayDeque;
      11: putfield      #4                  // Field queue:Lio/netty/handler/flow/FlowControlHandler$RecyclableArrayDeque;
      14: aload_0
      15: getfield      #4                  // Field queue:Lio/netty/handler/flow/FlowControlHandler$RecyclableArrayDeque;
      18: aload_2
      19: invokevirtual #21                 // Method io/netty/handler/flow/FlowControlHandler$RecyclableArrayDeque.offer:(Ljava/lang/Object;)Z
      22: pop
      23: aload_0
      24: getfield      #18                 // Field shouldConsume:Z
      27: ifeq          34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: istore_3
      36: aload_0
      37: iconst_0
      38: putfield      #18                 // Field shouldConsume:Z
      41: aload_0
      42: aload_1
      43: iload_3
      44: invokespecial #17                 // Method dequeue:(Lio/netty/channel/ChannelHandlerContext;I)I
      47: pop
      48: return

  public void channelReadComplete(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: return

  private int dequeue(io.netty.channel.ChannelHandlerContext, int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field queue:Lio/netty/handler/flow/FlowControlHandler$RecyclableArrayDeque;
       4: ifnull        81
       7: iconst_0
       8: istore_3
       9: iload_3
      10: iload_2
      11: if_icmplt     26
      14: aload_0
      15: getfield      #14                 // Field config:Lio/netty/channel/ChannelConfig;
      18: invokeinterface #22,  1           // InterfaceMethod io/netty/channel/ChannelConfig.isAutoRead:()Z
      23: ifeq          58
      26: aload_0
      27: getfield      #4                  // Field queue:Lio/netty/handler/flow/FlowControlHandler$RecyclableArrayDeque;
      30: invokevirtual #9                  // Method io/netty/handler/flow/FlowControlHandler$RecyclableArrayDeque.poll:()Ljava/lang/Object;
      33: astore        4
      35: aload         4
      37: ifnonnull     43
      40: goto          58
      43: iinc          3, 1
      46: aload_1
      47: aload         4
      49: invokeinterface #23,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
      54: pop
      55: goto          9
      58: aload_0
      59: getfield      #4                  // Field queue:Lio/netty/handler/flow/FlowControlHandler$RecyclableArrayDeque;
      62: invokevirtual #5                  // Method io/netty/handler/flow/FlowControlHandler$RecyclableArrayDeque.isEmpty:()Z
      65: ifeq          79
      68: iload_3
      69: ifle          79
      72: aload_1
      73: invokeinterface #24,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelReadComplete:()Lio/netty/channel/ChannelHandlerContext;
      78: pop
      79: iload_3
      80: ireturn
      81: iconst_0
      82: ireturn

  static {};
    Code:
       0: ldc           #25                 // class io/netty/handler/flow/FlowControlHandler
       2: invokestatic  #26                 // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
       5: putstatic     #6                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       8: return
}
