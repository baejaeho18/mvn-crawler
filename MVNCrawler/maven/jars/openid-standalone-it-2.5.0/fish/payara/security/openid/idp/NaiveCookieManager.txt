Compiled from "NaiveCookieManager.java"
public class fish.payara.security.openid.idp.NaiveCookieManager implements javax.ws.rs.client.ClientRequestFilter,javax.ws.rs.client.ClientResponseFilter {
  private static java.util.Map<java.lang.String, javax.ws.rs.core.Cookie> cookies;

  public fish.payara.security.openid.idp.NaiveCookieManager();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void filter(javax.ws.rs.client.ClientRequestContext) throws java.io.IOException;
    Code:
       0: getstatic     #2                  // Field cookies:Ljava/util/Map;
       3: invokeinterface #3,  1            // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       8: invokeinterface #4,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      13: astore_2
      14: aload_2
      15: invokeinterface #5,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          67
      23: aload_2
      24: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #7                  // class javax/ws/rs/core/Cookie
      32: astore_3
      33: aload_0
      34: aload_1
      35: invokeinterface #8,  1            // InterfaceMethod javax/ws/rs/client/ClientRequestContext.getUri:()Ljava/net/URI;
      40: aload_3
      41: invokespecial #9                  // Method matchesDomain:(Ljava/net/URI;Ljavax/ws/rs/core/Cookie;)Z
      44: ifeq          64
      47: aload_1
      48: invokeinterface #10,  1           // InterfaceMethod javax/ws/rs/client/ClientRequestContext.getHeaders:()Ljavax/ws/rs/core/MultivaluedMap;
      53: ldc           #11                 // String Cookie
      55: aload_3
      56: invokevirtual #12                 // Method javax/ws/rs/core/Cookie.toString:()Ljava/lang/String;
      59: invokeinterface #13,  3           // InterfaceMethod javax/ws/rs/core/MultivaluedMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
      64: goto          14
      67: return

  private boolean matchesDomain(java.net.URI, javax.ws.rs.core.Cookie);
    Code:
       0: aload_1
       1: invokevirtual #14                 // Method java/net/URI.getPath:()Ljava/lang/String;
       4: aload_2
       5: invokevirtual #15                 // Method javax/ws/rs/core/Cookie.getPath:()Ljava/lang/String;
       8: invokevirtual #16                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      11: ireturn

  public void filter(javax.ws.rs.client.ClientRequestContext, javax.ws.rs.client.ClientResponseContext) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokeinterface #17,  1           // InterfaceMethod javax/ws/rs/client/ClientResponseContext.getCookies:()Ljava/util/Map;
       6: invokeinterface #3,  1            // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      11: invokeinterface #4,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      16: astore_3
      17: aload_3
      18: invokeinterface #5,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          116
      26: aload_3
      27: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #18                 // class javax/ws/rs/core/NewCookie
      35: astore        4
      37: new           #7                  // class javax/ws/rs/core/Cookie
      40: dup
      41: aload         4
      43: invokevirtual #19                 // Method javax/ws/rs/core/NewCookie.getName:()Ljava/lang/String;
      46: aload         4
      48: invokevirtual #20                 // Method javax/ws/rs/core/NewCookie.getValue:()Ljava/lang/String;
      51: aload         4
      53: invokevirtual #21                 // Method javax/ws/rs/core/NewCookie.getPath:()Ljava/lang/String;
      56: aload         4
      58: invokevirtual #22                 // Method javax/ws/rs/core/NewCookie.getDomain:()Ljava/lang/String;
      61: aload         4
      63: invokevirtual #23                 // Method javax/ws/rs/core/NewCookie.getVersion:()I
      66: invokespecial #24                 // Method javax/ws/rs/core/Cookie."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
      69: astore        5
      71: getstatic     #2                  // Field cookies:Ljava/util/Map;
      74: new           #25                 // class java/lang/StringBuilder
      77: dup
      78: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      81: aload         5
      83: invokevirtual #27                 // Method javax/ws/rs/core/Cookie.getDomain:()Ljava/lang/String;
      86: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: ldc           #29                 // String /
      91: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: aload         5
      96: invokevirtual #30                 // Method javax/ws/rs/core/Cookie.getName:()Ljava/lang/String;
      99: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     105: aload         5
     107: invokeinterface #32,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     112: pop
     113: goto          17
     116: return

  static {};
    Code:
       0: new           #33                 // class java/util/concurrent/ConcurrentHashMap
       3: dup
       4: invokespecial #34                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
       7: putstatic     #2                  // Field cookies:Ljava/util/Map;
      10: return
}
