Compiled from "SelectColumn.scala"
public interface zio.aws.timestreamquery.model.SelectColumn$ReadOnly {
  public static zio.aws.timestreamquery.model.SelectColumn asEditable$(zio.aws.timestreamquery.model.SelectColumn$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #24                 // InterfaceMethod asEditable:()Lzio/aws/timestreamquery/model/SelectColumn;
       4: areturn

  public default zio.aws.timestreamquery.model.SelectColumn asEditable();
    Code:
       0: new           #12                 // class zio/aws/timestreamquery/model/SelectColumn
       3: dup
       4: aload_0
       5: invokeinterface #29,  1           // InterfaceMethod name:()Lzio/prelude/data/Optional;
      10: invokedynamic #52,  0             // InvokeDynamic #0:apply:()Lscala/Function1;
      15: invokeinterface #58,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
      20: aload_0
      21: invokeinterface #61,  1           // InterfaceMethod type:()Lzio/prelude/data/Optional;
      26: invokedynamic #68,  0             // InvokeDynamic #1:apply:()Lscala/Function1;
      31: invokeinterface #58,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
      36: aload_0
      37: invokeinterface #71,  1           // InterfaceMethod databaseName:()Lzio/prelude/data/Optional;
      42: invokedynamic #76,  0             // InvokeDynamic #2:apply:()Lscala/Function1;
      47: invokeinterface #58,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
      52: aload_0
      53: invokeinterface #79,  1           // InterfaceMethod tableName:()Lzio/prelude/data/Optional;
      58: invokedynamic #84,  0             // InvokeDynamic #3:apply:()Lscala/Function1;
      63: invokeinterface #58,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
      68: aload_0
      69: invokeinterface #87,  1           // InterfaceMethod aliased:()Lzio/prelude/data/Optional;
      74: invokedynamic #93,  0             // InvokeDynamic #4:apply:()Lscala/Function1;
      79: invokeinterface #58,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
      84: invokespecial #97                 // Method zio/aws/timestreamquery/model/SelectColumn."<init>":(Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;)V
      87: areturn

  public abstract zio.prelude.data.Optional<java.lang.String> name();

  public abstract zio.prelude.data.Optional<zio.aws.timestreamquery.model.Type$ReadOnly> type();

  public abstract zio.prelude.data.Optional<java.lang.String> databaseName();

  public abstract zio.prelude.data.Optional<java.lang.String> tableName();

  public abstract zio.prelude.data.Optional<java.lang.Object> aliased();

  public static zio.ZIO getName$(zio.aws.timestreamquery.model.SelectColumn$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #107                // InterfaceMethod getName:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.String> getName();
    Code:
       0: getstatic     #114                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #115                // String name
       5: aload_0
       6: invokedynamic #126,  0            // InvokeDynamic #5:apply:(Lzio/aws/timestreamquery/model/SelectColumn$ReadOnly;)Lscala/Function0;
      11: invokevirtual #130                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getType$(zio.aws.timestreamquery.model.SelectColumn$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #134                // InterfaceMethod getType:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.timestreamquery.model.Type$ReadOnly> getType();
    Code:
       0: getstatic     #114                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #136                // String type
       5: aload_0
       6: invokedynamic #141,  0            // InvokeDynamic #6:apply:(Lzio/aws/timestreamquery/model/SelectColumn$ReadOnly;)Lscala/Function0;
      11: invokevirtual #130                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getDatabaseName$(zio.aws.timestreamquery.model.SelectColumn$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #145                // InterfaceMethod getDatabaseName:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.String> getDatabaseName();
    Code:
       0: getstatic     #114                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #146                // String databaseName
       5: aload_0
       6: invokedynamic #151,  0            // InvokeDynamic #7:apply:(Lzio/aws/timestreamquery/model/SelectColumn$ReadOnly;)Lscala/Function0;
      11: invokevirtual #130                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getTableName$(zio.aws.timestreamquery.model.SelectColumn$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #155                // InterfaceMethod getTableName:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.String> getTableName();
    Code:
       0: getstatic     #114                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #156                // String tableName
       5: aload_0
       6: invokedynamic #161,  0            // InvokeDynamic #8:apply:(Lzio/aws/timestreamquery/model/SelectColumn$ReadOnly;)Lscala/Function0;
      11: invokevirtual #130                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getAliased$(zio.aws.timestreamquery.model.SelectColumn$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #165                // InterfaceMethod getAliased:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.Object> getAliased();
    Code:
       0: getstatic     #114                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #167                // String aliased
       5: aload_0
       6: invokedynamic #172,  0            // InvokeDynamic #9:apply:(Lzio/aws/timestreamquery/model/SelectColumn$ReadOnly;)Lscala/Function0;
      11: invokevirtual #130                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static java.lang.String $anonfun$asEditable$1(java.lang.String);
    Code:
       0: aload_0
       1: areturn

  public static zio.aws.timestreamquery.model.Type $anonfun$asEditable$2(zio.aws.timestreamquery.model.Type$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #177,  1          // InterfaceMethod zio/aws/timestreamquery/model/Type$ReadOnly.asEditable:()Lzio/aws/timestreamquery/model/Type;
       6: areturn

  public static java.lang.String $anonfun$asEditable$3(java.lang.String);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.String $anonfun$asEditable$4(java.lang.String);
    Code:
       0: aload_0
       1: areturn

  public static boolean $anonfun$asEditable$5(boolean);
    Code:
       0: iload_0
       1: ireturn

  public static zio.prelude.data.Optional $anonfun$getName$1(zio.aws.timestreamquery.model.SelectColumn$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #29,  1           // InterfaceMethod name:()Lzio/prelude/data/Optional;
       6: areturn

  public static zio.prelude.data.Optional $anonfun$getType$1(zio.aws.timestreamquery.model.SelectColumn$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #61,  1           // InterfaceMethod type:()Lzio/prelude/data/Optional;
       6: areturn

  public static zio.prelude.data.Optional $anonfun$getDatabaseName$1(zio.aws.timestreamquery.model.SelectColumn$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #71,  1           // InterfaceMethod databaseName:()Lzio/prelude/data/Optional;
       6: areturn

  public static zio.prelude.data.Optional $anonfun$getTableName$1(zio.aws.timestreamquery.model.SelectColumn$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #79,  1           // InterfaceMethod tableName:()Lzio/prelude/data/Optional;
       6: areturn

  public static zio.prelude.data.Optional $anonfun$getAliased$1(zio.aws.timestreamquery.model.SelectColumn$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #87,  1           // InterfaceMethod aliased:()Lzio/prelude/data/Optional;
       6: areturn

  public static void $init$(zio.aws.timestreamquery.model.SelectColumn$ReadOnly);
    Code:
       0: return

  public static java.lang.Object $anonfun$asEditable$5$adapted(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #189                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       4: invokestatic  #191                // InterfaceMethod $anonfun$asEditable$5:(Z)Z
       7: invokestatic  #195                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      10: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #208,  0            // InvokeDynamic #10:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
