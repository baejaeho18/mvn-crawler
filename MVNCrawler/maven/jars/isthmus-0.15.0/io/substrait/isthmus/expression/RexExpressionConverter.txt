Compiled from "RexExpressionConverter.java"
public class io.substrait.isthmus.expression.RexExpressionConverter implements org.apache.calcite.rex.RexVisitor<io.substrait.expression.Expression> {
  static final org.slf4j.Logger logger;

  private final java.util.List<io.substrait.isthmus.CallConverter> callConverters;

  private final io.substrait.isthmus.SubstraitRelVisitor relVisitor;

  private final io.substrait.isthmus.TypeConverter typeConverter;

  private io.substrait.isthmus.expression.WindowFunctionConverter windowFunctionConverter;

  private org.apache.calcite.rel.RelNode inputRel;

  private io.substrait.type.Type$Struct inputType;

  public io.substrait.isthmus.expression.RexExpressionConverter(io.substrait.isthmus.SubstraitRelVisitor, io.substrait.isthmus.CallConverter...);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       6: aconst_null
       7: getstatic     #7                  // Field io/substrait/isthmus/TypeConverter.DEFAULT:Lio/substrait/isthmus/TypeConverter;
      10: invokespecial #13                 // Method "<init>":(Lio/substrait/isthmus/SubstraitRelVisitor;Ljava/util/List;Lio/substrait/isthmus/expression/WindowFunctionConverter;Lio/substrait/isthmus/TypeConverter;)V
      13: return

  public io.substrait.isthmus.expression.RexExpressionConverter(io.substrait.isthmus.CallConverter...);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: invokestatic  #1                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       6: aconst_null
       7: getstatic     #7                  // Field io/substrait/isthmus/TypeConverter.DEFAULT:Lio/substrait/isthmus/TypeConverter;
      10: invokespecial #13                 // Method "<init>":(Lio/substrait/isthmus/SubstraitRelVisitor;Ljava/util/List;Lio/substrait/isthmus/expression/WindowFunctionConverter;Lio/substrait/isthmus/TypeConverter;)V
      13: return

  public io.substrait.isthmus.expression.RexExpressionConverter(io.substrait.isthmus.SubstraitRelVisitor, java.util.List<io.substrait.isthmus.CallConverter>, io.substrait.isthmus.expression.WindowFunctionConverter, io.substrait.isthmus.TypeConverter);
    Code:
       0: aload_0
       1: invokespecial #19                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_2
       6: putfield      #24                 // Field callConverters:Ljava/util/List;
       9: aload_0
      10: aload_1
      11: putfield      #28                 // Field relVisitor:Lio/substrait/isthmus/SubstraitRelVisitor;
      14: aload_0
      15: aload_3
      16: putfield      #32                 // Field windowFunctionConverter:Lio/substrait/isthmus/expression/WindowFunctionConverter;
      19: aload_0
      20: aload         4
      22: putfield      #36                 // Field typeConverter:Lio/substrait/isthmus/TypeConverter;
      25: return

  public io.substrait.isthmus.expression.RexExpressionConverter();
    Code:
       0: aload_0
       1: aconst_null
       2: getstatic     #7                  // Field io/substrait/isthmus/TypeConverter.DEFAULT:Lio/substrait/isthmus/TypeConverter;
       5: invokestatic  #39                 // Method io/substrait/isthmus/expression/CallConverters.defaults:(Lio/substrait/isthmus/TypeConverter;)Ljava/util/List;
       8: aconst_null
       9: getstatic     #7                  // Field io/substrait/isthmus/TypeConverter.DEFAULT:Lio/substrait/isthmus/TypeConverter;
      12: invokespecial #13                 // Method "<init>":(Lio/substrait/isthmus/SubstraitRelVisitor;Ljava/util/List;Lio/substrait/isthmus/expression/WindowFunctionConverter;Lio/substrait/isthmus/TypeConverter;)V
      15: return

  public io.substrait.expression.Expression visitInputRef(org.apache.calcite.rex.RexInputRef);
    Code:
       0: aload_1
       1: invokevirtual #45                 // Method org/apache/calcite/rex/RexInputRef.getIndex:()I
       4: aload_0
       5: getfield      #36                 // Field typeConverter:Lio/substrait/isthmus/TypeConverter;
       8: aload_1
       9: invokevirtual #51                 // Method org/apache/calcite/rex/RexInputRef.getType:()Lorg/apache/calcite/rel/type/RelDataType;
      12: invokevirtual #55                 // Method io/substrait/isthmus/TypeConverter.toSubstrait:(Lorg/apache/calcite/rel/type/RelDataType;)Lio/substrait/type/Type;
      15: invokestatic  #59                 // Method io/substrait/expression/FieldReference.newRootStructReference:(ILio/substrait/type/Type;)Lio/substrait/expression/FieldReference;
      18: areturn

  public io.substrait.expression.Expression visitCall(org.apache.calcite.rex.RexCall);
    Code:
       0: aload_0
       1: getfield      #24                 // Field callConverters:Ljava/util/List;
       4: invokeinterface #65,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          64
      19: aload_2
      20: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #81                 // class io/substrait/isthmus/CallConverter
      28: astore_3
      29: aload_3
      30: aload_1
      31: aload_0
      32: invokedynamic #83,  0             // InvokeDynamic #0:apply:(Lio/substrait/isthmus/expression/RexExpressionConverter;)Ljava/util/function/Function;
      37: invokeinterface #87,  3           // InterfaceMethod io/substrait/isthmus/CallConverter.convert:(Lorg/apache/calcite/rex/RexCall;Ljava/util/function/Function;)Ljava/util/Optional;
      42: astore        4
      44: aload         4
      46: invokevirtual #91                 // Method java/util/Optional.isPresent:()Z
      49: ifeq          61
      52: aload         4
      54: invokevirtual #96                 // Method java/util/Optional.get:()Ljava/lang/Object;
      57: checkcast     #99                 // class io/substrait/expression/Expression
      60: areturn
      61: goto          10
      64: ldc           #101                // String Unable to convert call %s(%s).
      66: iconst_2
      67: anewarray     #20                 // class java/lang/Object
      70: dup
      71: iconst_0
      72: aload_1
      73: invokevirtual #103                // Method org/apache/calcite/rex/RexCall.getOperator:()Lorg/apache/calcite/sql/SqlOperator;
      76: invokevirtual #109                // Method org/apache/calcite/sql/SqlOperator.getName:()Ljava/lang/String;
      79: aastore
      80: dup
      81: iconst_1
      82: aload_1
      83: invokevirtual #115                // Method org/apache/calcite/rex/RexCall.getOperands:()Ljava/util/List;
      86: invokeinterface #119,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      91: aload_0
      92: invokedynamic #123,  0            // InvokeDynamic #1:apply:(Lio/substrait/isthmus/expression/RexExpressionConverter;)Ljava/util/function/Function;
      97: invokeinterface #124,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
     102: ldc           #130                // String ,
     104: invokestatic  #132                // Method java/util/stream/Collectors.joining:(Ljava/lang/CharSequence;)Ljava/util/stream/Collector;
     107: invokeinterface #138,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
     112: aastore
     113: invokestatic  #142                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     116: astore_2
     117: new           #148                // class java/lang/IllegalArgumentException
     120: dup
     121: aload_2
     122: invokespecial #150                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     125: athrow

  public io.substrait.expression.Expression visitLiteral(org.apache.calcite.rex.RexLiteral);
    Code:
       0: new           #153                // class io/substrait/isthmus/expression/LiteralConverter
       3: dup
       4: aload_0
       5: getfield      #36                 // Field typeConverter:Lio/substrait/isthmus/TypeConverter;
       8: invokespecial #155                // Method io/substrait/isthmus/expression/LiteralConverter."<init>":(Lio/substrait/isthmus/TypeConverter;)V
      11: aload_1
      12: invokevirtual #158                // Method io/substrait/isthmus/expression/LiteralConverter.convert:(Lorg/apache/calcite/rex/RexLiteral;)Lio/substrait/expression/Expression$Literal;
      15: areturn

  public io.substrait.expression.Expression visitOver(org.apache.calcite.rex.RexOver);
    Code:
       0: aload_0
       1: getfield      #32                 // Field windowFunctionConverter:Lio/substrait/isthmus/expression/WindowFunctionConverter;
       4: aload_0
       5: getfield      #161                // Field inputRel:Lorg/apache/calcite/rel/RelNode;
       8: aload_0
       9: getfield      #165                // Field inputType:Lio/substrait/type/Type$Struct;
      12: aload_1
      13: aload_0
      14: invokedynamic #169,  0            // InvokeDynamic #2:apply:(Lio/substrait/isthmus/expression/RexExpressionConverter;)Ljava/util/function/Function;
      19: aload_0
      20: invokevirtual #170                // Method io/substrait/isthmus/expression/WindowFunctionConverter.convert:(Lorg/apache/calcite/rel/RelNode;Lio/substrait/type/Type$Struct;Lorg/apache/calcite/rex/RexOver;Ljava/util/function/Function;Lio/substrait/isthmus/expression/RexExpressionConverter;)Lio/substrait/expression/Expression$Window;
      23: astore_2
      24: aload_2
      25: areturn

  public io.substrait.expression.Expression visitCorrelVariable(org.apache.calcite.rex.RexCorrelVariable);
    Code:
       0: new           #175                // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #177                // String RexCorrelVariable not supported
       6: invokespecial #179                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public io.substrait.expression.Expression visitDynamicParam(org.apache.calcite.rex.RexDynamicParam);
    Code:
       0: new           #175                // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #180                // String RexDynamicParam not supported
       6: invokespecial #179                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public io.substrait.expression.Expression visitRangeRef(org.apache.calcite.rex.RexRangeRef);
    Code:
       0: new           #175                // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #182                // String RexRangeRef not supported
       6: invokespecial #179                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public io.substrait.expression.Expression visitFieldAccess(org.apache.calcite.rex.RexFieldAccess);
    Code:
       0: aload_1
       1: invokevirtual #184                // Method org/apache/calcite/rex/RexFieldAccess.getReferenceExpr:()Lorg/apache/calcite/rex/RexNode;
       4: invokevirtual #190                // Method org/apache/calcite/rex/RexNode.getKind:()Lorg/apache/calcite/sql/SqlKind;
       7: astore_2
       8: getstatic     #196                // Field io/substrait/isthmus/expression/RexExpressionConverter$1.$SwitchMap$org$apache$calcite$sql$SqlKind:[I
      11: aload_2
      12: invokevirtual #202                // Method org/apache/calcite/sql/SqlKind.ordinal:()I
      15: iaload
      16: tableswitch   { // 1 to 4
                     1: 48
                     2: 85
                     3: 85
                     4: 85
               default: 139
          }
      48: aload_0
      49: getfield      #28                 // Field relVisitor:Lio/substrait/isthmus/SubstraitRelVisitor;
      52: aload_1
      53: invokevirtual #207                // Method io/substrait/isthmus/SubstraitRelVisitor.getFieldAccessDepth:(Lorg/apache/calcite/rex/RexFieldAccess;)Ljava/lang/Integer;
      56: invokevirtual #213                // Method java/lang/Integer.intValue:()I
      59: istore_3
      60: aload_1
      61: invokevirtual #218                // Method org/apache/calcite/rex/RexFieldAccess.getField:()Lorg/apache/calcite/rel/type/RelDataTypeField;
      64: invokeinterface #222,  1          // InterfaceMethod org/apache/calcite/rel/type/RelDataTypeField.getIndex:()I
      69: aload_0
      70: getfield      #36                 // Field typeConverter:Lio/substrait/isthmus/TypeConverter;
      73: aload_1
      74: invokevirtual #225                // Method org/apache/calcite/rex/RexFieldAccess.getType:()Lorg/apache/calcite/rel/type/RelDataType;
      77: invokevirtual #55                 // Method io/substrait/isthmus/TypeConverter.toSubstrait:(Lorg/apache/calcite/rel/type/RelDataType;)Lio/substrait/type/Type;
      80: iload_3
      81: invokestatic  #226                // Method io/substrait/expression/FieldReference.newRootStructOuterReference:(ILio/substrait/type/Type;I)Lio/substrait/expression/FieldReference;
      84: areturn
      85: aload_1
      86: invokevirtual #184                // Method org/apache/calcite/rex/RexFieldAccess.getReferenceExpr:()Lorg/apache/calcite/rex/RexNode;
      89: aload_0
      90: invokevirtual #230                // Method org/apache/calcite/rex/RexNode.accept:(Lorg/apache/calcite/rex/RexVisitor;)Ljava/lang/Object;
      93: checkcast     #99                 // class io/substrait/expression/Expression
      96: astore_3
      97: aload_3
      98: instanceof    #60                 // class io/substrait/expression/FieldReference
     101: ifeq          125
     104: aload_3
     105: checkcast     #60                 // class io/substrait/expression/FieldReference
     108: astore        4
     110: aload         4
     112: aload_1
     113: invokevirtual #218                // Method org/apache/calcite/rex/RexFieldAccess.getField:()Lorg/apache/calcite/rel/type/RelDataTypeField;
     116: invokeinterface #222,  1          // InterfaceMethod org/apache/calcite/rel/type/RelDataTypeField.getIndex:()I
     121: invokevirtual #234                // Method io/substrait/expression/FieldReference.dereferenceStruct:(I)Lio/substrait/expression/FieldReference;
     124: areturn
     125: aload_1
     126: invokevirtual #218                // Method org/apache/calcite/rex/RexFieldAccess.getField:()Lorg/apache/calcite/rel/type/RelDataTypeField;
     129: invokeinterface #222,  1          // InterfaceMethod org/apache/calcite/rel/type/RelDataTypeField.getIndex:()I
     134: aload_3
     135: invokestatic  #238                // Method io/substrait/expression/FieldReference.newStructReference:(ILio/substrait/expression/Expression;)Lio/substrait/expression/FieldReference;
     138: areturn
     139: new           #175                // class java/lang/UnsupportedOperationException
     142: dup
     143: ldc           #242                // String RexFieldAccess for SqlKind %s not supported
     145: iconst_1
     146: anewarray     #20                 // class java/lang/Object
     149: dup
     150: iconst_0
     151: aload_2
     152: aastore
     153: invokestatic  #142                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     156: invokespecial #179                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
     159: athrow

  public io.substrait.expression.Expression visitSubQuery(org.apache.calcite.rex.RexSubQuery);
    Code:
       0: aload_0
       1: getfield      #28                 // Field relVisitor:Lio/substrait/isthmus/SubstraitRelVisitor;
       4: aload_1
       5: getfield      #244                // Field org/apache/calcite/rex/RexSubQuery.rel:Lorg/apache/calcite/rel/RelNode;
       8: invokevirtual #249                // Method io/substrait/isthmus/SubstraitRelVisitor.apply:(Lorg/apache/calcite/rel/RelNode;)Lio/substrait/relation/Rel;
      11: astore_2
      12: aload_1
      13: invokevirtual #252                // Method org/apache/calcite/rex/RexSubQuery.getOperator:()Lorg/apache/calcite/sql/SqlOperator;
      16: getstatic     #253                // Field org/apache/calcite/sql/fun/SqlStdOperatorTable.EXISTS:Lorg/apache/calcite/sql/SqlPrefixOperator;
      19: if_acmpne     39
      22: invokestatic  #259                // Method io/substrait/expression/Expression$SetPredicate.builder:()Lio/substrait/expression/ImmutableExpression$SetPredicate$Builder;
      25: getstatic     #265                // Field io/substrait/expression/Expression$PredicateOp.PREDICATE_OP_EXISTS:Lio/substrait/expression/Expression$PredicateOp;
      28: invokevirtual #271                // Method io/substrait/expression/ImmutableExpression$SetPredicate$Builder.predicateOp:(Lio/substrait/expression/Expression$PredicateOp;)Lio/substrait/expression/ImmutableExpression$SetPredicate$Builder;
      31: aload_2
      32: invokevirtual #277                // Method io/substrait/expression/ImmutableExpression$SetPredicate$Builder.tuples:(Lio/substrait/relation/Rel;)Lio/substrait/expression/ImmutableExpression$SetPredicate$Builder;
      35: invokevirtual #281                // Method io/substrait/expression/ImmutableExpression$SetPredicate$Builder.build:()Lio/substrait/expression/ImmutableExpression$SetPredicate;
      38: areturn
      39: aload_1
      40: invokevirtual #252                // Method org/apache/calcite/rex/RexSubQuery.getOperator:()Lorg/apache/calcite/sql/SqlOperator;
      43: getstatic     #285                // Field org/apache/calcite/sql/fun/SqlStdOperatorTable.UNIQUE:Lorg/apache/calcite/sql/SqlPrefixOperator;
      46: if_acmpne     66
      49: invokestatic  #259                // Method io/substrait/expression/Expression$SetPredicate.builder:()Lio/substrait/expression/ImmutableExpression$SetPredicate$Builder;
      52: getstatic     #288                // Field io/substrait/expression/Expression$PredicateOp.PREDICATE_OP_UNIQUE:Lio/substrait/expression/Expression$PredicateOp;
      55: invokevirtual #271                // Method io/substrait/expression/ImmutableExpression$SetPredicate$Builder.predicateOp:(Lio/substrait/expression/Expression$PredicateOp;)Lio/substrait/expression/ImmutableExpression$SetPredicate$Builder;
      58: aload_2
      59: invokevirtual #277                // Method io/substrait/expression/ImmutableExpression$SetPredicate$Builder.tuples:(Lio/substrait/relation/Rel;)Lio/substrait/expression/ImmutableExpression$SetPredicate$Builder;
      62: invokevirtual #281                // Method io/substrait/expression/ImmutableExpression$SetPredicate$Builder.build:()Lio/substrait/expression/ImmutableExpression$SetPredicate;
      65: areturn
      66: aload_1
      67: invokevirtual #252                // Method org/apache/calcite/rex/RexSubQuery.getOperator:()Lorg/apache/calcite/sql/SqlOperator;
      70: getstatic     #291                // Field org/apache/calcite/sql/fun/SqlStdOperatorTable.SCALAR_QUERY:Lorg/apache/calcite/sql/SqlInternalOperator;
      73: if_acmpne     101
      76: invokestatic  #295                // Method io/substrait/expression/Expression$ScalarSubquery.builder:()Lio/substrait/expression/ImmutableExpression$ScalarSubquery$Builder;
      79: aload_2
      80: invokevirtual #300                // Method io/substrait/expression/ImmutableExpression$ScalarSubquery$Builder.input:(Lio/substrait/relation/Rel;)Lio/substrait/expression/ImmutableExpression$ScalarSubquery$Builder;
      83: aload_0
      84: getfield      #36                 // Field typeConverter:Lio/substrait/isthmus/TypeConverter;
      87: aload_1
      88: invokevirtual #306                // Method org/apache/calcite/rex/RexSubQuery.getType:()Lorg/apache/calcite/rel/type/RelDataType;
      91: invokevirtual #55                 // Method io/substrait/isthmus/TypeConverter.toSubstrait:(Lorg/apache/calcite/rel/type/RelDataType;)Lio/substrait/type/Type;
      94: invokevirtual #307                // Method io/substrait/expression/ImmutableExpression$ScalarSubquery$Builder.type:(Lio/substrait/type/Type;)Lio/substrait/expression/ImmutableExpression$ScalarSubquery$Builder;
      97: invokevirtual #311                // Method io/substrait/expression/ImmutableExpression$ScalarSubquery$Builder.build:()Lio/substrait/expression/ImmutableExpression$ScalarSubquery;
     100: areturn
     101: aload_1
     102: invokevirtual #252                // Method org/apache/calcite/rex/RexSubQuery.getOperator:()Lorg/apache/calcite/sql/SqlOperator;
     105: getstatic     #314                // Field org/apache/calcite/sql/fun/SqlStdOperatorTable.IN:Lorg/apache/calcite/sql/SqlBinaryOperator;
     108: if_acmpne     186
     111: new           #318                // class java/util/ArrayList
     114: dup
     115: invokespecial #320                // Method java/util/ArrayList."<init>":()V
     118: astore_3
     119: aload_1
     120: invokevirtual #321                // Method org/apache/calcite/rex/RexSubQuery.getOperands:()Ljava/util/List;
     123: invokeinterface #65,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     128: astore        4
     130: aload         4
     132: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     137: ifeq          171
     140: aload         4
     142: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     147: checkcast     #191                // class org/apache/calcite/rex/RexNode
     150: astore        5
     152: aload_3
     153: aload         5
     155: aload_0
     156: invokevirtual #230                // Method org/apache/calcite/rex/RexNode.accept:(Lorg/apache/calcite/rex/RexVisitor;)Ljava/lang/Object;
     159: checkcast     #99                 // class io/substrait/expression/Expression
     162: invokeinterface #322,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     167: pop
     168: goto          130
     171: invokestatic  #326                // Method io/substrait/expression/Expression$InPredicate.builder:()Lio/substrait/expression/ImmutableExpression$InPredicate$Builder;
     174: aload_3
     175: invokevirtual #331                // Method io/substrait/expression/ImmutableExpression$InPredicate$Builder.needles:(Ljava/lang/Iterable;)Lio/substrait/expression/ImmutableExpression$InPredicate$Builder;
     178: aload_2
     179: invokevirtual #337                // Method io/substrait/expression/ImmutableExpression$InPredicate$Builder.haystack:(Lio/substrait/relation/Rel;)Lio/substrait/expression/ImmutableExpression$InPredicate$Builder;
     182: invokevirtual #341                // Method io/substrait/expression/ImmutableExpression$InPredicate$Builder.build:()Lio/substrait/expression/ImmutableExpression$InPredicate;
     185: areturn
     186: new           #175                // class java/lang/UnsupportedOperationException
     189: dup
     190: ldc_w         #344                // String RexSubQuery not supported
     193: invokespecial #179                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
     196: athrow

  public io.substrait.expression.Expression visitTableInputRef(org.apache.calcite.rex.RexTableInputRef);
    Code:
       0: new           #175                // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc_w         #346                // String RexTableInputRef not supported
       7: invokespecial #179                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      10: athrow

  public io.substrait.expression.Expression visitLocalRef(org.apache.calcite.rex.RexLocalRef);
    Code:
       0: new           #175                // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc_w         #348                // String RexLocalRef not supported
       7: invokespecial #179                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      10: athrow

  public io.substrait.expression.Expression visitPatternFieldRef(org.apache.calcite.rex.RexPatternFieldRef);
    Code:
       0: new           #175                // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc_w         #350                // String RexPatternFieldRef not supported
       7: invokespecial #179                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      10: athrow

  public void setInputRel(org.apache.calcite.rel.RelNode);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #161                // Field inputRel:Lorg/apache/calcite/rel/RelNode;
       5: return

  public void setInputType(io.substrait.type.Type$Struct);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #165                // Field inputType:Lio/substrait/type/Type$Struct;
       5: return

  public java.lang.Object visitPatternFieldRef(org.apache.calcite.rex.RexPatternFieldRef);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #352                // Method visitPatternFieldRef:(Lorg/apache/calcite/rex/RexPatternFieldRef;)Lio/substrait/expression/Expression;
       5: areturn

  public java.lang.Object visitTableInputRef(org.apache.calcite.rex.RexTableInputRef);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #356                // Method visitTableInputRef:(Lorg/apache/calcite/rex/RexTableInputRef;)Lio/substrait/expression/Expression;
       5: areturn

  public java.lang.Object visitSubQuery(org.apache.calcite.rex.RexSubQuery);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #360                // Method visitSubQuery:(Lorg/apache/calcite/rex/RexSubQuery;)Lio/substrait/expression/Expression;
       5: areturn

  public java.lang.Object visitFieldAccess(org.apache.calcite.rex.RexFieldAccess);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #364                // Method visitFieldAccess:(Lorg/apache/calcite/rex/RexFieldAccess;)Lio/substrait/expression/Expression;
       5: areturn

  public java.lang.Object visitRangeRef(org.apache.calcite.rex.RexRangeRef);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #368                // Method visitRangeRef:(Lorg/apache/calcite/rex/RexRangeRef;)Lio/substrait/expression/Expression;
       5: areturn

  public java.lang.Object visitDynamicParam(org.apache.calcite.rex.RexDynamicParam);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #372                // Method visitDynamicParam:(Lorg/apache/calcite/rex/RexDynamicParam;)Lio/substrait/expression/Expression;
       5: areturn

  public java.lang.Object visitCorrelVariable(org.apache.calcite.rex.RexCorrelVariable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #376                // Method visitCorrelVariable:(Lorg/apache/calcite/rex/RexCorrelVariable;)Lio/substrait/expression/Expression;
       5: areturn

  public java.lang.Object visitOver(org.apache.calcite.rex.RexOver);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #380                // Method visitOver:(Lorg/apache/calcite/rex/RexOver;)Lio/substrait/expression/Expression;
       5: areturn

  public java.lang.Object visitCall(org.apache.calcite.rex.RexCall);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #384                // Method visitCall:(Lorg/apache/calcite/rex/RexCall;)Lio/substrait/expression/Expression;
       5: areturn

  public java.lang.Object visitLiteral(org.apache.calcite.rex.RexLiteral);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #388                // Method visitLiteral:(Lorg/apache/calcite/rex/RexLiteral;)Lio/substrait/expression/Expression;
       5: areturn

  public java.lang.Object visitLocalRef(org.apache.calcite.rex.RexLocalRef);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #392                // Method visitLocalRef:(Lorg/apache/calcite/rex/RexLocalRef;)Lio/substrait/expression/Expression;
       5: areturn

  public java.lang.Object visitInputRef(org.apache.calcite.rex.RexInputRef);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #396                // Method visitInputRef:(Lorg/apache/calcite/rex/RexInputRef;)Lio/substrait/expression/Expression;
       5: areturn

  private io.substrait.expression.Expression lambda$visitOver$2(org.apache.calcite.rex.RexNode);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: aload_0
       4: invokevirtual #230                // Method org/apache/calcite/rex/RexNode.accept:(Lorg/apache/calcite/rex/RexVisitor;)Ljava/lang/Object;
       7: checkcast     #99                 // class io/substrait/expression/Expression
      10: areturn

  private java.lang.String lambda$visitCall$1(org.apache.calcite.rex.RexNode);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #230                // Method org/apache/calcite/rex/RexNode.accept:(Lorg/apache/calcite/rex/RexVisitor;)Ljava/lang/Object;
       5: checkcast     #99                 // class io/substrait/expression/Expression
       8: invokeinterface #400,  1          // InterfaceMethod io/substrait/expression/Expression.getType:()Lio/substrait/type/Type;
      13: new           #403                // class io/substrait/type/StringTypeVisitor
      16: dup
      17: invokespecial #405                // Method io/substrait/type/StringTypeVisitor."<init>":()V
      20: invokeinterface #406,  2          // InterfaceMethod io/substrait/type/Type.accept:(Lio/substrait/type/TypeVisitor;)Ljava/lang/Object;
      25: checkcast     #143                // class java/lang/String
      28: areturn

  private io.substrait.expression.Expression lambda$visitCall$0(org.apache.calcite.rex.RexNode);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #230                // Method org/apache/calcite/rex/RexNode.accept:(Lorg/apache/calcite/rex/RexVisitor;)Ljava/lang/Object;
       5: checkcast     #99                 // class io/substrait/expression/Expression
       8: areturn

  static {};
    Code:
       0: ldc           #14                 // class io/substrait/isthmus/expression/RexExpressionConverter
       2: invokestatic  #411                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #417                // Field logger:Lorg/slf4j/Logger;
       8: return
}
