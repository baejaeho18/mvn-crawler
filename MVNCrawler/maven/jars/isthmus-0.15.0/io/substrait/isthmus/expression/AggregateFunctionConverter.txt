Compiled from "AggregateFunctionConverter.java"
public class io.substrait.isthmus.expression.AggregateFunctionConverter extends io.substrait.isthmus.expression.FunctionConverter<io.substrait.extension.SimpleExtension$AggregateFunctionVariant, io.substrait.expression.AggregateFunctionInvocation, io.substrait.isthmus.expression.AggregateFunctionConverter$WrappedAggregateCall> {
  protected com.google.common.collect.ImmutableList<io.substrait.isthmus.expression.FunctionMappings$Sig> getSigs();
    Code:
       0: getstatic     #1                  // Field io/substrait/isthmus/expression/FunctionMappings.AGGREGATE_SIGS:Lcom/google/common/collect/ImmutableList;
       3: areturn

  public io.substrait.isthmus.expression.AggregateFunctionConverter(java.util.List<io.substrait.extension.SimpleExtension$AggregateFunctionVariant>, org.apache.calcite.rel.type.RelDataTypeFactory);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #7                  // Method io/substrait/isthmus/expression/FunctionConverter."<init>":(Ljava/util/List;Lorg/apache/calcite/rel/type/RelDataTypeFactory;)V
       6: return

  public io.substrait.isthmus.expression.AggregateFunctionConverter(java.util.List<io.substrait.extension.SimpleExtension$AggregateFunctionVariant>, java.util.List<io.substrait.isthmus.expression.FunctionMappings$Sig>, org.apache.calcite.rel.type.RelDataTypeFactory, io.substrait.isthmus.TypeConverter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #13                 // Method io/substrait/isthmus/expression/FunctionConverter."<init>":(Ljava/util/List;Ljava/util/List;Lorg/apache/calcite/rel/type/RelDataTypeFactory;Lio/substrait/isthmus/TypeConverter;)V
       9: return

  protected io.substrait.expression.AggregateFunctionInvocation generateBinding(io.substrait.isthmus.expression.AggregateFunctionConverter$WrappedAggregateCall, io.substrait.extension.SimpleExtension$AggregateFunctionVariant, java.util.List<io.substrait.expression.FunctionArg>, io.substrait.type.Type);
    Code:
       0: aload_1
       1: invokevirtual #16                 // Method io/substrait/isthmus/expression/AggregateFunctionConverter$WrappedAggregateCall.getUnderlying:()Lorg/apache/calcite/rel/core/AggregateCall;
       4: astore        5
       6: aload         5
       8: invokevirtual #22                 // Method org/apache/calcite/rel/core/AggregateCall.getCollation:()Lorg/apache/calcite/rel/RelCollation;
      11: ifnull        54
      14: aload         5
      16: invokevirtual #22                 // Method org/apache/calcite/rel/core/AggregateCall.getCollation:()Lorg/apache/calcite/rel/RelCollation;
      19: invokeinterface #28,  1           // InterfaceMethod org/apache/calcite/rel/RelCollation.getFieldCollations:()Ljava/util/List;
      24: invokeinterface #34,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      29: aload_1
      30: invokedynamic #40,  0             // InvokeDynamic #0:apply:(Lio/substrait/isthmus/expression/AggregateFunctionConverter$WrappedAggregateCall;)Ljava/util/function/Function;
      35: invokeinterface #44,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      40: invokestatic  #50                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      43: invokeinterface #56,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      48: checkcast     #35                 // class java/util/List
      51: goto          57
      54: invokestatic  #60                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      57: astore        6
      59: aload         5
      61: invokevirtual #65                 // Method org/apache/calcite/rel/core/AggregateCall.isDistinct:()Z
      64: ifeq          73
      67: getstatic     #69                 // Field io/substrait/expression/Expression$AggregationInvocation.DISTINCT:Lio/substrait/expression/Expression$AggregationInvocation;
      70: goto          76
      73: getstatic     #75                 // Field io/substrait/expression/Expression$AggregationInvocation.ALL:Lio/substrait/expression/Expression$AggregationInvocation;
      76: astore        7
      78: aload_2
      79: aload         4
      81: getstatic     #78                 // Field io/substrait/expression/Expression$AggregationPhase.INITIAL_TO_RESULT:Lio/substrait/expression/Expression$AggregationPhase;
      84: aload         6
      86: aload         7
      88: aload_3
      89: invokestatic  #84                 // Method io/substrait/expression/ExpressionCreator.aggregateFunction:(Lio/substrait/extension/SimpleExtension$AggregateFunctionVariant;Lio/substrait/type/Type;Lio/substrait/expression/Expression$AggregationPhase;Ljava/util/List;Lio/substrait/expression/Expression$AggregationInvocation;Ljava/lang/Iterable;)Lio/substrait/expression/AggregateFunctionInvocation;
      92: areturn

  public java.util.Optional<io.substrait.expression.AggregateFunctionInvocation> convert(org.apache.calcite.rel.RelNode, io.substrait.type.Type$Struct, org.apache.calcite.rel.core.AggregateCall, java.util.function.Function<org.apache.calcite.rex.RexNode, io.substrait.expression.Expression>);
    Code:
       0: aload_3
       1: invokevirtual #90                 // Method org/apache/calcite/rel/core/AggregateCall.getAggregation:()Lorg/apache/calcite/sql/SqlAggFunction;
       4: astore        5
       6: aload         5
       8: getstatic     #94                 // Field org/apache/calcite/sql/fun/SqlStdOperatorTable.COUNT:Lorg/apache/calcite/sql/SqlAggFunction;
      11: if_acmpne     33
      14: aload_3
      15: invokevirtual #65                 // Method org/apache/calcite/rel/core/AggregateCall.isDistinct:()Z
      18: ifeq          33
      21: aload_3
      22: invokevirtual #100                // Method org/apache/calcite/rel/core/AggregateCall.isApproximate:()Z
      25: ifeq          33
      28: getstatic     #103                // Field org/apache/calcite/sql/fun/SqlStdOperatorTable.APPROX_COUNT_DISTINCT:Lorg/apache/calcite/sql/SqlAggFunction;
      31: astore        5
      33: aload_0
      34: getfield      #106                // Field signatures:Ljava/util/Map;
      37: aload         5
      39: invokeinterface #112,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      44: checkcast     #118                // class io/substrait/isthmus/expression/FunctionConverter$FunctionFinder
      47: astore        6
      49: aload         6
      51: ifnonnull     58
      54: invokestatic  #120                // Method java/util/Optional.empty:()Ljava/util/Optional;
      57: areturn
      58: aload         6
      60: aload_3
      61: invokevirtual #126                // Method org/apache/calcite/rel/core/AggregateCall.getArgList:()Ljava/util/List;
      64: invokeinterface #129,  1          // InterfaceMethod java/util/List.size:()I
      69: invokevirtual #133                // Method io/substrait/isthmus/expression/FunctionConverter$FunctionFinder.allowedArgCount:(I)Z
      72: ifne          79
      75: invokestatic  #120                // Method java/util/Optional.empty:()Ljava/util/Optional;
      78: areturn
      79: new           #17                 // class io/substrait/isthmus/expression/AggregateFunctionConverter$WrappedAggregateCall
      82: dup
      83: aload_3
      84: aload_1
      85: aload_0
      86: getfield      #137                // Field rexBuilder:Lorg/apache/calcite/rex/RexBuilder;
      89: aload_2
      90: invokespecial #141                // Method io/substrait/isthmus/expression/AggregateFunctionConverter$WrappedAggregateCall."<init>":(Lorg/apache/calcite/rel/core/AggregateCall;Lorg/apache/calcite/rel/RelNode;Lorg/apache/calcite/rex/RexBuilder;Lio/substrait/type/Type$Struct;)V
      93: astore        7
      95: aload         6
      97: aload         7
      99: aload         4
     101: invokevirtual #144                // Method io/substrait/isthmus/expression/FunctionConverter$FunctionFinder.attemptMatch:(Lio/substrait/isthmus/expression/FunctionConverter$GenericCall;Ljava/util/function/Function;)Ljava/util/Optional;
     104: areturn

  protected java.lang.Object generateBinding(io.substrait.isthmus.expression.FunctionConverter$GenericCall, io.substrait.extension.SimpleExtension$Function, java.util.List, io.substrait.type.Type);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #17                 // class io/substrait/isthmus/expression/AggregateFunctionConverter$WrappedAggregateCall
       5: aload_2
       6: checkcast     #148                // class io/substrait/extension/SimpleExtension$AggregateFunctionVariant
       9: aload_3
      10: aload         4
      12: invokevirtual #150                // Method generateBinding:(Lio/substrait/isthmus/expression/AggregateFunctionConverter$WrappedAggregateCall;Lio/substrait/extension/SimpleExtension$AggregateFunctionVariant;Ljava/util/List;Lio/substrait/type/Type;)Lio/substrait/expression/AggregateFunctionInvocation;
      15: areturn

  private static io.substrait.expression.Expression$SortField lambda$generateBinding$0(io.substrait.isthmus.expression.AggregateFunctionConverter$WrappedAggregateCall, org.apache.calcite.rel.RelFieldCollation);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #154                // Field io/substrait/isthmus/expression/AggregateFunctionConverter$WrappedAggregateCall.inputType:Lio/substrait/type/Type$Struct;
       5: invokestatic  #158                // Method io/substrait/isthmus/SubstraitRelVisitor.toSortField:(Lorg/apache/calcite/rel/RelFieldCollation;Lio/substrait/type/Type$Struct;)Lio/substrait/expression/Expression$SortField;
       8: areturn
}
