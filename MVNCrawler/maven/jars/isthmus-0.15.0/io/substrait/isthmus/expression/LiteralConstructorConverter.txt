Compiled from "LiteralConstructorConverter.java"
public class io.substrait.isthmus.expression.LiteralConstructorConverter implements io.substrait.isthmus.CallConverter {
  static final org.slf4j.Logger logger;

  static final boolean $assertionsDisabled;

  public io.substrait.isthmus.expression.LiteralConstructorConverter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public java.util.Optional<io.substrait.expression.Expression> convert(org.apache.calcite.rex.RexCall, java.util.function.Function<org.apache.calcite.rex.RexNode, io.substrait.expression.Expression>);
    Code:
       0: aload_1
       1: invokevirtual #7                  // Method org/apache/calcite/rex/RexCall.getOperator:()Lorg/apache/calcite/sql/SqlOperator;
       4: astore_3
       5: aload_3
       6: instanceof    #13                 // class org/apache/calcite/sql/fun/SqlArrayValueConstructor
       9: ifeq          49
      12: iconst_0
      13: aload_1
      14: getfield      #15                 // Field org/apache/calcite/rex/RexCall.operands:Lcom/google/common/collect/ImmutableList;
      17: invokevirtual #19                 // Method com/google/common/collect/ImmutableList.stream:()Ljava/util/stream/Stream;
      20: aload_2
      21: invokedynamic #25,  0             // InvokeDynamic #0:apply:(Ljava/util/function/Function;)Ljava/util/function/Function;
      26: invokeinterface #29,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      31: invokestatic  #35                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      34: invokeinterface #41,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      39: checkcast     #45                 // class java/lang/Iterable
      42: invokestatic  #47                 // Method io/substrait/expression/ExpressionCreator.list:(ZLjava/lang/Iterable;)Lio/substrait/expression/Expression$ListLiteral;
      45: invokestatic  #53                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      48: areturn
      49: aload_3
      50: instanceof    #59                 // class org/apache/calcite/sql/fun/SqlMapValueConstructor
      53: ifeq          187
      56: aload_1
      57: getfield      #15                 // Field org/apache/calcite/rex/RexCall.operands:Lcom/google/common/collect/ImmutableList;
      60: invokevirtual #19                 // Method com/google/common/collect/ImmutableList.stream:()Ljava/util/stream/Stream;
      63: aload_2
      64: invokedynamic #61,  0             // InvokeDynamic #1:apply:(Ljava/util/function/Function;)Ljava/util/function/Function;
      69: invokeinterface #29,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      74: invokestatic  #35                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      77: invokeinterface #41,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      82: checkcast     #62                 // class java/util/List
      85: astore        4
      87: new           #64                 // class java/util/HashMap
      90: dup
      91: invokespecial #66                 // Method java/util/HashMap."<init>":()V
      94: astore        5
      96: getstatic     #67                 // Field $assertionsDisabled:Z
      99: ifne          122
     102: aload         4
     104: invokeinterface #73,  1           // InterfaceMethod java/util/List.size:()I
     109: iconst_2
     110: irem
     111: ifeq          122
     114: new           #77                 // class java/lang/AssertionError
     117: dup
     118: invokespecial #79                 // Method java/lang/AssertionError."<init>":()V
     121: athrow
     122: iconst_0
     123: istore        6
     125: iload         6
     127: aload         4
     129: invokeinterface #73,  1           // InterfaceMethod java/util/List.size:()I
     134: if_icmpge     177
     137: aload         5
     139: aload         4
     141: iload         6
     143: invokeinterface #80,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     148: checkcast     #84                 // class io/substrait/expression/Expression$Literal
     151: aload         4
     153: iload         6
     155: iconst_1
     156: iadd
     157: invokeinterface #80,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     162: checkcast     #84                 // class io/substrait/expression/Expression$Literal
     165: invokeinterface #86,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     170: pop
     171: iinc          6, 2
     174: goto          125
     177: iconst_0
     178: aload         5
     180: invokestatic  #92                 // Method io/substrait/expression/ExpressionCreator.map:(ZLjava/util/Map;)Lio/substrait/expression/Expression$MapLiteral;
     183: invokestatic  #53                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
     186: areturn
     187: invokestatic  #95                 // Method java/util/Optional.empty:()Ljava/util/Optional;
     190: areturn

  private static io.substrait.expression.Expression$Literal lambda$convert$1(java.util.function.Function, org.apache.calcite.rex.RexNode);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #99,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #84                 // class io/substrait/expression/Expression$Literal
      10: areturn

  private static io.substrait.expression.Expression$Literal lambda$convert$0(java.util.function.Function, org.apache.calcite.rex.RexNode);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #99,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #84                 // class io/substrait/expression/Expression$Literal
      10: areturn

  static {};
    Code:
       0: ldc           #68                 // class io/substrait/isthmus/expression/LiteralConstructorConverter
       2: invokevirtual #104                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #67                 // Field $assertionsDisabled:Z
      16: ldc           #68                 // class io/substrait/isthmus/expression/LiteralConstructorConverter
      18: invokestatic  #110                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      21: putstatic     #116                // Field logger:Lorg/slf4j/Logger;
      24: return
}
