Compiled from "AggregateFunctionConverter.java"
class io.substrait.isthmus.expression.AggregateFunctionConverter$WrappedAggregateCall implements io.substrait.isthmus.expression.FunctionConverter$GenericCall {
  private final org.apache.calcite.rel.core.AggregateCall call;

  private final org.apache.calcite.rel.RelNode input;

  private final org.apache.calcite.rex.RexBuilder rexBuilder;

  private final io.substrait.type.Type$Struct inputType;

  private io.substrait.isthmus.expression.AggregateFunctionConverter$WrappedAggregateCall(org.apache.calcite.rel.core.AggregateCall, org.apache.calcite.rel.RelNode, org.apache.calcite.rex.RexBuilder, io.substrait.type.Type$Struct);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #7                  // Field call:Lorg/apache/calcite/rel/core/AggregateCall;
       9: aload_0
      10: aload_2
      11: putfield      #13                 // Field input:Lorg/apache/calcite/rel/RelNode;
      14: aload_0
      15: aload_3
      16: putfield      #17                 // Field rexBuilder:Lorg/apache/calcite/rex/RexBuilder;
      19: aload_0
      20: aload         4
      22: putfield      #21                 // Field inputType:Lio/substrait/type/Type$Struct;
      25: return

  public java.util.stream.Stream<org.apache.calcite.rex.RexNode> getOperands();
    Code:
       0: aload_0
       1: getfield      #7                  // Field call:Lorg/apache/calcite/rel/core/AggregateCall;
       4: invokevirtual #25                 // Method org/apache/calcite/rel/core/AggregateCall.getArgList:()Ljava/util/List;
       7: invokeinterface #31,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      12: aload_0
      13: invokedynamic #37,  0             // InvokeDynamic #0:apply:(Lio/substrait/isthmus/expression/AggregateFunctionConverter$WrappedAggregateCall;)Ljava/util/function/Function;
      18: invokeinterface #41,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      23: areturn

  public org.apache.calcite.rel.core.AggregateCall getUnderlying();
    Code:
       0: aload_0
       1: getfield      #7                  // Field call:Lorg/apache/calcite/rel/core/AggregateCall;
       4: areturn

  public org.apache.calcite.rel.type.RelDataType getType();
    Code:
       0: aload_0
       1: getfield      #7                  // Field call:Lorg/apache/calcite/rel/core/AggregateCall;
       4: invokevirtual #47                 // Method org/apache/calcite/rel/core/AggregateCall.getType:()Lorg/apache/calcite/rel/type/RelDataType;
       7: areturn

  private org.apache.calcite.rex.RexNode lambda$getOperands$0(java.lang.Integer);
    Code:
       0: aload_0
       1: getfield      #17                 // Field rexBuilder:Lorg/apache/calcite/rex/RexBuilder;
       4: aload_0
       5: getfield      #13                 // Field input:Lorg/apache/calcite/rel/RelNode;
       8: aload_1
       9: invokevirtual #51                 // Method java/lang/Integer.intValue:()I
      12: invokevirtual #57                 // Method org/apache/calcite/rex/RexBuilder.makeInputRef:(Lorg/apache/calcite/rel/RelNode;I)Lorg/apache/calcite/rex/RexInputRef;
      15: areturn
}
