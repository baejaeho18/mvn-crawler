Compiled from "EnumConverter.java"
public class io.substrait.isthmus.expression.EnumConverter {
  private static final com.google.common.collect.BiMap<java.lang.Class<? extends java.lang.Enum>, io.substrait.isthmus.expression.EnumConverter$ArgAnchor> calciteEnumMap;

  public io.substrait.isthmus.expression.EnumConverter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  private static java.util.Optional<java.lang.Enum> constructValue(java.lang.Class<? extends java.lang.Enum>, java.util.function.Supplier<java.util.Optional<java.lang.String>>);
    Code:
       0: aload_0
       1: ldc           #7                  // class org/apache/calcite/avatica/util/TimeUnitRange
       3: invokevirtual #9                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       6: ifeq          27
       9: aload_1
      10: invokeinterface #15,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      15: checkcast     #21                 // class java/util/Optional
      18: invokedynamic #23,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      23: invokevirtual #27                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      26: areturn
      27: invokestatic  #31                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      30: areturn

  static java.util.Optional<org.apache.calcite.rex.RexLiteral> toRex(org.apache.calcite.rex.RexBuilder, io.substrait.extension.SimpleExtension$Function, int, io.substrait.expression.EnumArg);
    Code:
       0: aload_1
       1: iload_2
       2: invokestatic  #35                 // Method argAnchor:(Lio/substrait/extension/SimpleExtension$Function;I)Lio/substrait/isthmus/expression/EnumConverter$ArgAnchor;
       5: astore        4
       7: getstatic     #41                 // Field calciteEnumMap:Lcom/google/common/collect/BiMap;
      10: invokeinterface #45,  1           // InterfaceMethod com/google/common/collect/BiMap.inverse:()Lcom/google/common/collect/BiMap;
      15: aload         4
      17: aconst_null
      18: invokeinterface #51,  3           // InterfaceMethod com/google/common/collect/BiMap.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #10                 // class java/lang/Class
      26: invokestatic  #55                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      29: astore        5
      31: aload_3
      32: aload_1
      33: aload         4
      35: invokedynamic #59,  0             // InvokeDynamic #1:get:(Lio/substrait/expression/EnumArg;Lio/substrait/extension/SimpleExtension$Function;Lio/substrait/isthmus/expression/EnumConverter$ArgAnchor;)Ljava/util/function/Supplier;
      40: astore        6
      42: aload         5
      44: aload         6
      46: invokedynamic #62,  0             // InvokeDynamic #2:apply:(Ljava/util/function/Supplier;)Ljava/util/function/Function;
      51: invokevirtual #65                 // Method java/util/Optional.flatMap:(Ljava/util/function/Function;)Ljava/util/Optional;
      54: aload_0
      55: invokedynamic #68,  0             // InvokeDynamic #3:apply:(Lorg/apache/calcite/rex/RexBuilder;)Ljava/util/function/Function;
      60: invokevirtual #27                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      63: areturn

  private static java.util.Optional<io.substrait.extension.SimpleExtension$EnumArgument> findEnumArg(io.substrait.extension.SimpleExtension$Function, io.substrait.isthmus.expression.EnumConverter$ArgAnchor);
    Code:
       0: aload_1
       1: getfield      #71                 // Field io/substrait/isthmus/expression/EnumConverter$ArgAnchor.fn:Lio/substrait/extension/SimpleExtension$FunctionAnchor;
       4: aload_0
       5: invokevirtual #77                 // Method io/substrait/extension/SimpleExtension$Function.getAnchor:()Lio/substrait/extension/SimpleExtension$FunctionAnchor;
       8: if_acmpne     15
      11: invokestatic  #31                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      14: areturn
      15: aload_0
      16: invokevirtual #83                 // Method io/substrait/extension/SimpleExtension$Function.args:()Ljava/util/List;
      19: astore_2
      20: aload_2
      21: invokeinterface #87,  1           // InterfaceMethod java/util/List.size:()I
      26: aload_1
      27: getfield      #93                 // Field io/substrait/isthmus/expression/EnumConverter$ArgAnchor.argIdx:I
      30: if_icmpgt     37
      33: invokestatic  #31                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      36: areturn
      37: aload_2
      38: aload_1
      39: getfield      #93                 // Field io/substrait/isthmus/expression/EnumConverter$ArgAnchor.argIdx:I
      42: invokeinterface #97,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      47: checkcast     #100                // class io/substrait/extension/SimpleExtension$Argument
      50: astore_3
      51: aload_3
      52: instanceof    #102                // class io/substrait/extension/SimpleExtension$EnumArgument
      55: ifeq          70
      58: aload_3
      59: checkcast     #102                // class io/substrait/extension/SimpleExtension$EnumArgument
      62: astore        4
      64: aload         4
      66: invokestatic  #104                // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      69: areturn
      70: invokestatic  #31                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      73: areturn

  static java.util.Optional<io.substrait.expression.EnumArg> fromRex(io.substrait.extension.SimpleExtension$Function, org.apache.calcite.rex.RexLiteral);
    Code:
       0: getstatic     #107                // Field io/substrait/isthmus/expression/EnumConverter$1.$SwitchMap$org$apache$calcite$sql$type$SqlTypeName:[I
       3: aload_1
       4: invokevirtual #113                // Method org/apache/calcite/rex/RexLiteral.getType:()Lorg/apache/calcite/rel/type/RelDataType;
       7: invokeinterface #119,  1          // InterfaceMethod org/apache/calcite/rel/type/RelDataType.getSqlTypeName:()Lorg/apache/calcite/sql/type/SqlTypeName;
      12: invokevirtual #125                // Method org/apache/calcite/sql/type/SqlTypeName.ordinal:()I
      15: iaload
      16: lookupswitch  { // 1
                     1: 36
               default: 110
          }
      36: aload_1
      37: invokevirtual #130                // Method org/apache/calcite/rex/RexLiteral.getValue:()Ljava/lang/Comparable;
      40: astore_2
      41: aload_1
      42: invokevirtual #134                // Method org/apache/calcite/rex/RexLiteral.isNull:()Z
      45: ifne          104
      48: aload_2
      49: instanceof    #138                // class java/lang/Enum
      52: ifeq          104
      55: aload_2
      56: checkcast     #138                // class java/lang/Enum
      59: astore_3
      60: getstatic     #41                 // Field calciteEnumMap:Lcom/google/common/collect/BiMap;
      63: aload_3
      64: invokevirtual #140                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      67: aconst_null
      68: invokeinterface #51,  3           // InterfaceMethod com/google/common/collect/BiMap.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      73: checkcast     #72                 // class io/substrait/isthmus/expression/EnumConverter$ArgAnchor
      76: invokestatic  #55                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      79: astore        4
      81: aload         4
      83: aload_0
      84: invokedynamic #144,  0            // InvokeDynamic #4:apply:(Lio/substrait/extension/SimpleExtension$Function;)Ljava/util/function/Function;
      89: invokevirtual #65                 // Method java/util/Optional.flatMap:(Ljava/util/function/Function;)Ljava/util/Optional;
      92: aload_3
      93: invokedynamic #147,  0            // InvokeDynamic #5:apply:(Ljava/lang/Enum;)Ljava/util/function/Function;
      98: invokevirtual #27                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
     101: goto          113
     104: invokestatic  #31                 // Method java/util/Optional.empty:()Ljava/util/Optional;
     107: goto          113
     110: invokestatic  #31                 // Method java/util/Optional.empty:()Ljava/util/Optional;
     113: areturn

  static boolean canConvert(java.lang.Enum);
    Code:
       0: aload_0
       1: ifnull        23
       4: getstatic     #41                 // Field calciteEnumMap:Lcom/google/common/collect/BiMap;
       7: aload_0
       8: invokevirtual #140                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: invokeinterface #150,  2          // InterfaceMethod com/google/common/collect/BiMap.containsKey:(Ljava/lang/Object;)Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  static boolean isEnumValue(org.apache.calcite.rex.RexNode);
    Code:
       0: aload_0
       1: ifnull        30
       4: aload_0
       5: instanceof    #114                // class org/apache/calcite/rex/RexLiteral
       8: ifeq          30
      11: aload_0
      12: invokevirtual #154                // Method org/apache/calcite/rex/RexNode.getType:()Lorg/apache/calcite/rel/type/RelDataType;
      15: invokeinterface #119,  1          // InterfaceMethod org/apache/calcite/rel/type/RelDataType.getSqlTypeName:()Lorg/apache/calcite/sql/type/SqlTypeName;
      20: getstatic     #157                // Field org/apache/calcite/sql/type/SqlTypeName.SYMBOL:Lorg/apache/calcite/sql/type/SqlTypeName;
      23: if_acmpne     30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  private static io.substrait.isthmus.expression.EnumConverter$ArgAnchor argAnchor(java.lang.String, java.lang.String, int);
    Code:
       0: new           #72                 // class io/substrait/isthmus/expression/EnumConverter$ArgAnchor
       3: dup
       4: aload_0
       5: aload_1
       6: invokestatic  #161                // InterfaceMethod io/substrait/extension/SimpleExtension$FunctionAnchor.of:(Ljava/lang/String;Ljava/lang/String;)Lio/substrait/extension/SimpleExtension$FunctionAnchor;
       9: iload_2
      10: invokespecial #166                // Method io/substrait/isthmus/expression/EnumConverter$ArgAnchor."<init>":(Lio/substrait/extension/SimpleExtension$FunctionAnchor;I)V
      13: areturn

  private static io.substrait.isthmus.expression.EnumConverter$ArgAnchor argAnchor(io.substrait.extension.SimpleExtension$Function, int);
    Code:
       0: new           #72                 // class io/substrait/isthmus/expression/EnumConverter$ArgAnchor
       3: dup
       4: aload_0
       5: invokevirtual #77                 // Method io/substrait/extension/SimpleExtension$Function.getAnchor:()Lio/substrait/extension/SimpleExtension$FunctionAnchor;
       8: invokeinterface #169,  1          // InterfaceMethod io/substrait/extension/SimpleExtension$FunctionAnchor.namespace:()Ljava/lang/String;
      13: aload_0
      14: invokevirtual #77                 // Method io/substrait/extension/SimpleExtension$Function.getAnchor:()Lio/substrait/extension/SimpleExtension$FunctionAnchor;
      17: invokeinterface #173,  1          // InterfaceMethod io/substrait/extension/SimpleExtension$FunctionAnchor.key:()Ljava/lang/String;
      22: invokestatic  #161                // InterfaceMethod io/substrait/extension/SimpleExtension$FunctionAnchor.of:(Ljava/lang/String;Ljava/lang/String;)Lio/substrait/extension/SimpleExtension$FunctionAnchor;
      25: iload_1
      26: invokespecial #166                // Method io/substrait/isthmus/expression/EnumConverter$ArgAnchor."<init>":(Lio/substrait/extension/SimpleExtension$FunctionAnchor;I)V
      29: areturn

  private static io.substrait.expression.EnumArg lambda$fromRex$5(java.lang.Enum, io.substrait.extension.SimpleExtension$EnumArgument);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #176                // Method java/lang/Enum.name:()Ljava/lang/String;
       5: invokestatic  #179                // InterfaceMethod io/substrait/expression/EnumArg.of:(Lio/substrait/extension/SimpleExtension$EnumArgument;Ljava/lang/String;)Lio/substrait/expression/EnumArg;
       8: areturn

  private static java.util.Optional lambda$fromRex$4(io.substrait.extension.SimpleExtension$Function, io.substrait.isthmus.expression.EnumConverter$ArgAnchor);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #184                // Method findEnumArg:(Lio/substrait/extension/SimpleExtension$Function;Lio/substrait/isthmus/expression/EnumConverter$ArgAnchor;)Ljava/util/Optional;
       5: areturn

  private static org.apache.calcite.rex.RexLiteral lambda$toRex$3(org.apache.calcite.rex.RexBuilder, java.lang.Enum);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #188                // Method org/apache/calcite/rex/RexBuilder.makeFlag:(Ljava/lang/Enum;)Lorg/apache/calcite/rex/RexLiteral;
       5: areturn

  private static java.util.Optional lambda$toRex$2(java.util.function.Supplier, java.lang.Class);
    Code:
       0: aload_1
       1: aload_0
       2: invokestatic  #194                // Method constructValue:(Ljava/lang/Class;Ljava/util/function/Supplier;)Ljava/util/Optional;
       5: areturn

  private static java.util.Optional lambda$toRex$1(io.substrait.expression.EnumArg, io.substrait.extension.SimpleExtension$Function, io.substrait.isthmus.expression.EnumConverter$ArgAnchor);
    Code:
       0: aload_0
       1: invokeinterface #198,  1          // InterfaceMethod io/substrait/expression/EnumArg.value:()Ljava/util/Optional;
       6: invokevirtual #201                // Method java/util/Optional.isPresent:()Z
       9: ifeq          28
      12: aload_0
      13: invokeinterface #198,  1          // InterfaceMethod io/substrait/expression/EnumArg.value:()Ljava/util/Optional;
      18: invokevirtual #204                // Method java/util/Optional.get:()Ljava/lang/Object;
      21: checkcast     #205                // class java/lang/String
      24: invokestatic  #104                // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      27: areturn
      28: aload_1
      29: aload_2
      30: invokestatic  #184                // Method findEnumArg:(Lio/substrait/extension/SimpleExtension$Function;Lio/substrait/isthmus/expression/EnumConverter$ArgAnchor;)Ljava/util/Optional;
      33: invokedynamic #207,  0            // InvokeDynamic #6:apply:()Ljava/util/function/Function;
      38: invokevirtual #27                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      41: areturn

  private static java.lang.String lambda$toRex$0(io.substrait.extension.SimpleExtension$EnumArgument);
    Code:
       0: aload_0
       1: invokevirtual #208                // Method io/substrait/extension/SimpleExtension$EnumArgument.options:()Ljava/util/List;
       4: iconst_0
       5: invokeinterface #97,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #205                // class java/lang/String
      13: areturn

  static {};
    Code:
       0: invokestatic  #211                // Method com/google/common/collect/HashBiMap.create:()Lcom/google/common/collect/HashBiMap;
       3: putstatic     #41                 // Field calciteEnumMap:Lcom/google/common/collect/BiMap;
       6: getstatic     #41                 // Field calciteEnumMap:Lcom/google/common/collect/BiMap;
       9: ldc           #7                  // class org/apache/calcite/avatica/util/TimeUnitRange
      11: ldc           #217                // String /functions_datetime.yaml
      13: ldc           #219                // String extract:req_ts
      15: iconst_0
      16: invokestatic  #221                // Method argAnchor:(Ljava/lang/String;Ljava/lang/String;I)Lio/substrait/isthmus/expression/EnumConverter$ArgAnchor;
      19: invokeinterface #224,  3          // InterfaceMethod com/google/common/collect/BiMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      24: pop
      25: return
}
