Compiled from "ScalarFunctionConverter.java"
class io.substrait.isthmus.expression.ScalarFunctionConverter$WrappedScalarCall implements io.substrait.isthmus.expression.FunctionConverter$GenericCall {
  private final org.apache.calcite.rex.RexCall delegate;

  private io.substrait.isthmus.expression.ScalarFunctionConverter$WrappedScalarCall(org.apache.calcite.rex.RexCall);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #7                  // Field delegate:Lorg/apache/calcite/rex/RexCall;
       9: return

  public java.util.stream.Stream<org.apache.calcite.rex.RexNode> getOperands();
    Code:
       0: aload_0
       1: getfield      #7                  // Field delegate:Lorg/apache/calcite/rex/RexCall;
       4: invokevirtual #13                 // Method org/apache/calcite/rex/RexCall.getOperands:()Ljava/util/List;
       7: invokeinterface #19,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      12: areturn

  public org.apache.calcite.rel.type.RelDataType getType();
    Code:
       0: aload_0
       1: getfield      #7                  // Field delegate:Lorg/apache/calcite/rex/RexCall;
       4: invokevirtual #25                 // Method org/apache/calcite/rex/RexCall.getType:()Lorg/apache/calcite/rel/type/RelDataType;
       7: areturn
}
