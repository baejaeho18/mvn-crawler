Compiled from "TypeConverter.java"
class io.substrait.isthmus.TypeConverter$ToRelDataType extends io.substrait.type.TypeVisitor$TypeThrowsVisitor<org.apache.calcite.rel.type.RelDataType, java.lang.RuntimeException> {
  private final org.apache.calcite.rel.type.RelDataTypeFactory typeFactory;

  private final io.substrait.isthmus.UserTypeMapper userTypeMapper;

  private final java.util.List<java.lang.String> fieldNames;

  private int fieldNamePosition;

  private boolean withinStruct;

  public io.substrait.isthmus.TypeConverter$ToRelDataType(org.apache.calcite.rel.type.RelDataTypeFactory, io.substrait.isthmus.UserTypeMapper, java.util.List<java.lang.String>, int);
    Code:
       0: aload_0
       1: ldc           #1                  // String Unknown expression type.
       3: invokespecial #3                  // Method io/substrait/type/TypeVisitor$TypeThrowsVisitor."<init>":(Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #9                  // Field typeFactory:Lorg/apache/calcite/rel/type/RelDataTypeFactory;
      11: aload_0
      12: aload_2
      13: putfield      #15                 // Field userTypeMapper:Lio/substrait/isthmus/UserTypeMapper;
      16: aload_0
      17: aload_3
      18: putfield      #19                 // Field fieldNames:Ljava/util/List;
      21: aload_0
      22: iload         4
      24: putfield      #23                 // Field fieldNamePosition:I
      27: return

  public org.apache.calcite.rel.type.RelDataType visit(io.substrait.type.Type$Bool);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #27                 // Method n:(Lio/substrait/function/NullableType;)Z
       6: getstatic     #31                 // Field org/apache/calcite/sql/type/SqlTypeName.BOOLEAN:Lorg/apache/calcite/sql/type/SqlTypeName;
       9: iconst_0
      10: anewarray     #37                 // class java/lang/Integer
      13: invokevirtual #39                 // Method t:(ZLorg/apache/calcite/sql/type/SqlTypeName;[Ljava/lang/Integer;)Lorg/apache/calcite/rel/type/RelDataType;
      16: areturn

  public org.apache.calcite.rel.type.RelDataType visit(io.substrait.type.Type$I8);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #27                 // Method n:(Lio/substrait/function/NullableType;)Z
       6: getstatic     #43                 // Field org/apache/calcite/sql/type/SqlTypeName.TINYINT:Lorg/apache/calcite/sql/type/SqlTypeName;
       9: iconst_0
      10: anewarray     #37                 // class java/lang/Integer
      13: invokevirtual #39                 // Method t:(ZLorg/apache/calcite/sql/type/SqlTypeName;[Ljava/lang/Integer;)Lorg/apache/calcite/rel/type/RelDataType;
      16: areturn

  public org.apache.calcite.rel.type.RelDataType visit(io.substrait.type.Type$I16);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #27                 // Method n:(Lio/substrait/function/NullableType;)Z
       6: getstatic     #46                 // Field org/apache/calcite/sql/type/SqlTypeName.SMALLINT:Lorg/apache/calcite/sql/type/SqlTypeName;
       9: iconst_0
      10: anewarray     #37                 // class java/lang/Integer
      13: invokevirtual #39                 // Method t:(ZLorg/apache/calcite/sql/type/SqlTypeName;[Ljava/lang/Integer;)Lorg/apache/calcite/rel/type/RelDataType;
      16: areturn

  public org.apache.calcite.rel.type.RelDataType visit(io.substrait.type.Type$I32);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #27                 // Method n:(Lio/substrait/function/NullableType;)Z
       6: getstatic     #49                 // Field org/apache/calcite/sql/type/SqlTypeName.INTEGER:Lorg/apache/calcite/sql/type/SqlTypeName;
       9: iconst_0
      10: anewarray     #37                 // class java/lang/Integer
      13: invokevirtual #39                 // Method t:(ZLorg/apache/calcite/sql/type/SqlTypeName;[Ljava/lang/Integer;)Lorg/apache/calcite/rel/type/RelDataType;
      16: areturn

  public org.apache.calcite.rel.type.RelDataType visit(io.substrait.type.Type$I64);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #27                 // Method n:(Lio/substrait/function/NullableType;)Z
       6: getstatic     #52                 // Field org/apache/calcite/sql/type/SqlTypeName.BIGINT:Lorg/apache/calcite/sql/type/SqlTypeName;
       9: iconst_0
      10: anewarray     #37                 // class java/lang/Integer
      13: invokevirtual #39                 // Method t:(ZLorg/apache/calcite/sql/type/SqlTypeName;[Ljava/lang/Integer;)Lorg/apache/calcite/rel/type/RelDataType;
      16: areturn

  public org.apache.calcite.rel.type.RelDataType visit(io.substrait.type.Type$FP32);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #27                 // Method n:(Lio/substrait/function/NullableType;)Z
       6: getstatic     #55                 // Field org/apache/calcite/sql/type/SqlTypeName.FLOAT:Lorg/apache/calcite/sql/type/SqlTypeName;
       9: iconst_0
      10: anewarray     #37                 // class java/lang/Integer
      13: invokevirtual #39                 // Method t:(ZLorg/apache/calcite/sql/type/SqlTypeName;[Ljava/lang/Integer;)Lorg/apache/calcite/rel/type/RelDataType;
      16: areturn

  public org.apache.calcite.rel.type.RelDataType visit(io.substrait.type.Type$FP64);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #27                 // Method n:(Lio/substrait/function/NullableType;)Z
       6: getstatic     #58                 // Field org/apache/calcite/sql/type/SqlTypeName.DOUBLE:Lorg/apache/calcite/sql/type/SqlTypeName;
       9: iconst_0
      10: anewarray     #37                 // class java/lang/Integer
      13: invokevirtual #39                 // Method t:(ZLorg/apache/calcite/sql/type/SqlTypeName;[Ljava/lang/Integer;)Lorg/apache/calcite/rel/type/RelDataType;
      16: areturn

  public org.apache.calcite.rel.type.RelDataType visit(io.substrait.type.Type$Str);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #27                 // Method n:(Lio/substrait/function/NullableType;)Z
       6: getstatic     #61                 // Field org/apache/calcite/sql/type/SqlTypeName.VARCHAR:Lorg/apache/calcite/sql/type/SqlTypeName;
       9: iconst_0
      10: anewarray     #37                 // class java/lang/Integer
      13: invokevirtual #39                 // Method t:(ZLorg/apache/calcite/sql/type/SqlTypeName;[Ljava/lang/Integer;)Lorg/apache/calcite/rel/type/RelDataType;
      16: areturn

  public org.apache.calcite.rel.type.RelDataType visit(io.substrait.type.Type$Binary);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #27                 // Method n:(Lio/substrait/function/NullableType;)Z
       6: getstatic     #64                 // Field org/apache/calcite/sql/type/SqlTypeName.VARBINARY:Lorg/apache/calcite/sql/type/SqlTypeName;
       9: iconst_0
      10: anewarray     #37                 // class java/lang/Integer
      13: invokevirtual #39                 // Method t:(ZLorg/apache/calcite/sql/type/SqlTypeName;[Ljava/lang/Integer;)Lorg/apache/calcite/rel/type/RelDataType;
      16: areturn

  public org.apache.calcite.rel.type.RelDataType visit(io.substrait.type.Type$Date);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #27                 // Method n:(Lio/substrait/function/NullableType;)Z
       6: getstatic     #67                 // Field org/apache/calcite/sql/type/SqlTypeName.DATE:Lorg/apache/calcite/sql/type/SqlTypeName;
       9: iconst_0
      10: anewarray     #37                 // class java/lang/Integer
      13: invokevirtual #39                 // Method t:(ZLorg/apache/calcite/sql/type/SqlTypeName;[Ljava/lang/Integer;)Lorg/apache/calcite/rel/type/RelDataType;
      16: areturn

  public org.apache.calcite.rel.type.RelDataType visit(io.substrait.type.Type$Time);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #27                 // Method n:(Lio/substrait/function/NullableType;)Z
       6: getstatic     #70                 // Field org/apache/calcite/sql/type/SqlTypeName.TIME:Lorg/apache/calcite/sql/type/SqlTypeName;
       9: iconst_1
      10: anewarray     #37                 // class java/lang/Integer
      13: dup
      14: iconst_0
      15: bipush        6
      17: invokestatic  #73                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      20: aastore
      21: invokevirtual #39                 // Method t:(ZLorg/apache/calcite/sql/type/SqlTypeName;[Ljava/lang/Integer;)Lorg/apache/calcite/rel/type/RelDataType;
      24: areturn

  public org.apache.calcite.rel.type.RelDataType visit(io.substrait.type.Type$TimestampTZ);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #27                 // Method n:(Lio/substrait/function/NullableType;)Z
       6: getstatic     #77                 // Field org/apache/calcite/sql/type/SqlTypeName.TIMESTAMP_WITH_LOCAL_TIME_ZONE:Lorg/apache/calcite/sql/type/SqlTypeName;
       9: iconst_1
      10: anewarray     #37                 // class java/lang/Integer
      13: dup
      14: iconst_0
      15: bipush        6
      17: invokestatic  #73                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      20: aastore
      21: invokevirtual #39                 // Method t:(ZLorg/apache/calcite/sql/type/SqlTypeName;[Ljava/lang/Integer;)Lorg/apache/calcite/rel/type/RelDataType;
      24: areturn

  public org.apache.calcite.rel.type.RelDataType visit(io.substrait.type.Type$Timestamp);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #27                 // Method n:(Lio/substrait/function/NullableType;)Z
       6: getstatic     #80                 // Field org/apache/calcite/sql/type/SqlTypeName.TIMESTAMP:Lorg/apache/calcite/sql/type/SqlTypeName;
       9: iconst_1
      10: anewarray     #37                 // class java/lang/Integer
      13: dup
      14: iconst_0
      15: bipush        6
      17: invokestatic  #73                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      20: aastore
      21: invokevirtual #39                 // Method t:(ZLorg/apache/calcite/sql/type/SqlTypeName;[Ljava/lang/Integer;)Lorg/apache/calcite/rel/type/RelDataType;
      24: areturn

  public org.apache.calcite.rel.type.RelDataType visit(io.substrait.type.Type$IntervalYear);
    Code:
       0: aload_0
       1: getfield      #9                  // Field typeFactory:Lorg/apache/calcite/rel/type/RelDataTypeFactory;
       4: aload_0
       5: getfield      #9                  // Field typeFactory:Lorg/apache/calcite/rel/type/RelDataTypeFactory;
       8: getstatic     #83                 // Field io/substrait/isthmus/SubstraitTypeSystem.YEAR_MONTH_INTERVAL:Lorg/apache/calcite/sql/SqlIntervalQualifier;
      11: invokeinterface #89,  2           // InterfaceMethod org/apache/calcite/rel/type/RelDataTypeFactory.createSqlIntervalType:(Lorg/apache/calcite/sql/SqlIntervalQualifier;)Lorg/apache/calcite/rel/type/RelDataType;
      16: aload_0
      17: aload_1
      18: invokevirtual #27                 // Method n:(Lio/substrait/function/NullableType;)Z
      21: invokeinterface #95,  3           // InterfaceMethod org/apache/calcite/rel/type/RelDataTypeFactory.createTypeWithNullability:(Lorg/apache/calcite/rel/type/RelDataType;Z)Lorg/apache/calcite/rel/type/RelDataType;
      26: areturn

  public org.apache.calcite.rel.type.RelDataType visit(io.substrait.type.Type$IntervalDay);
    Code:
       0: aload_0
       1: getfield      #9                  // Field typeFactory:Lorg/apache/calcite/rel/type/RelDataTypeFactory;
       4: aload_0
       5: getfield      #9                  // Field typeFactory:Lorg/apache/calcite/rel/type/RelDataTypeFactory;
       8: getstatic     #99                 // Field io/substrait/isthmus/SubstraitTypeSystem.DAY_SECOND_INTERVAL:Lorg/apache/calcite/sql/SqlIntervalQualifier;
      11: invokeinterface #89,  2           // InterfaceMethod org/apache/calcite/rel/type/RelDataTypeFactory.createSqlIntervalType:(Lorg/apache/calcite/sql/SqlIntervalQualifier;)Lorg/apache/calcite/rel/type/RelDataType;
      16: aload_0
      17: aload_1
      18: invokevirtual #27                 // Method n:(Lio/substrait/function/NullableType;)Z
      21: invokeinterface #95,  3           // InterfaceMethod org/apache/calcite/rel/type/RelDataTypeFactory.createTypeWithNullability:(Lorg/apache/calcite/rel/type/RelDataType;Z)Lorg/apache/calcite/rel/type/RelDataType;
      26: areturn

  public org.apache.calcite.rel.type.RelDataType visit(io.substrait.type.Type$FixedChar);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #27                 // Method n:(Lio/substrait/function/NullableType;)Z
       6: getstatic     #102                // Field org/apache/calcite/sql/type/SqlTypeName.CHAR:Lorg/apache/calcite/sql/type/SqlTypeName;
       9: iconst_1
      10: anewarray     #37                 // class java/lang/Integer
      13: dup
      14: iconst_0
      15: aload_1
      16: invokevirtual #105                // Method io/substrait/type/Type$FixedChar.length:()I
      19: invokestatic  #73                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      22: aastore
      23: invokevirtual #39                 // Method t:(ZLorg/apache/calcite/sql/type/SqlTypeName;[Ljava/lang/Integer;)Lorg/apache/calcite/rel/type/RelDataType;
      26: areturn

  public org.apache.calcite.rel.type.RelDataType visit(io.substrait.type.Type$VarChar);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #27                 // Method n:(Lio/substrait/function/NullableType;)Z
       6: getstatic     #61                 // Field org/apache/calcite/sql/type/SqlTypeName.VARCHAR:Lorg/apache/calcite/sql/type/SqlTypeName;
       9: iconst_1
      10: anewarray     #37                 // class java/lang/Integer
      13: dup
      14: iconst_0
      15: aload_1
      16: invokevirtual #111                // Method io/substrait/type/Type$VarChar.length:()I
      19: invokestatic  #73                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      22: aastore
      23: invokevirtual #39                 // Method t:(ZLorg/apache/calcite/sql/type/SqlTypeName;[Ljava/lang/Integer;)Lorg/apache/calcite/rel/type/RelDataType;
      26: areturn

  public org.apache.calcite.rel.type.RelDataType visit(io.substrait.type.Type$FixedBinary);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #27                 // Method n:(Lio/substrait/function/NullableType;)Z
       6: getstatic     #114                // Field org/apache/calcite/sql/type/SqlTypeName.BINARY:Lorg/apache/calcite/sql/type/SqlTypeName;
       9: iconst_1
      10: anewarray     #37                 // class java/lang/Integer
      13: dup
      14: iconst_0
      15: aload_1
      16: invokevirtual #117                // Method io/substrait/type/Type$FixedBinary.length:()I
      19: invokestatic  #73                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      22: aastore
      23: invokevirtual #39                 // Method t:(ZLorg/apache/calcite/sql/type/SqlTypeName;[Ljava/lang/Integer;)Lorg/apache/calcite/rel/type/RelDataType;
      26: areturn

  public org.apache.calcite.rel.type.RelDataType visit(io.substrait.type.Type$Decimal);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #27                 // Method n:(Lio/substrait/function/NullableType;)Z
       6: getstatic     #120                // Field org/apache/calcite/sql/type/SqlTypeName.DECIMAL:Lorg/apache/calcite/sql/type/SqlTypeName;
       9: iconst_2
      10: anewarray     #37                 // class java/lang/Integer
      13: dup
      14: iconst_0
      15: aload_1
      16: invokevirtual #123                // Method io/substrait/type/Type$Decimal.precision:()I
      19: invokestatic  #73                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      22: aastore
      23: dup
      24: iconst_1
      25: aload_1
      26: invokevirtual #128                // Method io/substrait/type/Type$Decimal.scale:()I
      29: invokestatic  #73                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      32: aastore
      33: invokevirtual #39                 // Method t:(ZLorg/apache/calcite/sql/type/SqlTypeName;[Ljava/lang/Integer;)Lorg/apache/calcite/rel/type/RelDataType;
      36: areturn

  public org.apache.calcite.rel.type.RelDataType visit(io.substrait.type.Type$Struct);
    Code:
       0: aload_0
       1: getfield      #131                // Field withinStruct:Z
       4: ifeq          17
       7: new           #135                // class java/lang/IllegalStateException
      10: dup
      11: ldc           #137                // String Visitor can\'t be re-used for nested structs.
      13: invokespecial #139                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: iconst_1
      19: putfield      #131                // Field withinStruct:Z
      22: new           #140                // class java/util/ArrayList
      25: dup
      26: invokespecial #142                // Method java/util/ArrayList."<init>":()V
      29: astore_2
      30: new           #140                // class java/util/ArrayList
      33: dup
      34: invokespecial #142                // Method java/util/ArrayList."<init>":()V
      37: astore_3
      38: aload_1
      39: invokevirtual #145                // Method io/substrait/type/Type$Struct.fields:()Ljava/util/List;
      42: invokeinterface #151,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      47: astore        4
      49: aload         4
      51: invokeinterface #157,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      56: ifeq          179
      59: aload         4
      61: invokeinterface #163,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      66: checkcast     #167                // class io/substrait/function/TypeExpression
      69: astore        5
      71: aload_3
      72: aload_0
      73: getfield      #19                 // Field fieldNames:Ljava/util/List;
      76: ifnonnull     91
      79: aload_0
      80: getfield      #23                 // Field fieldNamePosition:I
      83: invokedynamic #169,  0            // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      88: goto          107
      91: aload_0
      92: getfield      #19                 // Field fieldNames:Ljava/util/List;
      95: aload_0
      96: getfield      #23                 // Field fieldNamePosition:I
      99: invokeinterface #173,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     104: checkcast     #177                // class java/lang/String
     107: invokeinterface #179,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     112: pop
     113: aload_0
     114: dup
     115: getfield      #23                 // Field fieldNamePosition:I
     118: iconst_1
     119: iadd
     120: putfield      #23                 // Field fieldNamePosition:I
     123: new           #10                 // class io/substrait/isthmus/TypeConverter$ToRelDataType
     126: dup
     127: aload_0
     128: getfield      #9                  // Field typeFactory:Lorg/apache/calcite/rel/type/RelDataTypeFactory;
     131: aload_0
     132: getfield      #15                 // Field userTypeMapper:Lio/substrait/isthmus/UserTypeMapper;
     135: aload_0
     136: getfield      #19                 // Field fieldNames:Ljava/util/List;
     139: aload_0
     140: getfield      #23                 // Field fieldNamePosition:I
     143: invokespecial #183                // Method "<init>":(Lorg/apache/calcite/rel/type/RelDataTypeFactory;Lio/substrait/isthmus/UserTypeMapper;Ljava/util/List;I)V
     146: astore        6
     148: aload_2
     149: aload         5
     151: aload         6
     153: invokeinterface #186,  2          // InterfaceMethod io/substrait/function/TypeExpression.accept:(Lio/substrait/type/TypeVisitor;)Ljava/lang/Object;
     158: checkcast     #190                // class org/apache/calcite/rel/type/RelDataType
     161: invokeinterface #179,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     166: pop
     167: aload_0
     168: aload         6
     170: getfield      #23                 // Field fieldNamePosition:I
     173: putfield      #23                 // Field fieldNamePosition:I
     176: goto          49
     179: aload_0
     180: aload_1
     181: aload_0
     182: getfield      #9                  // Field typeFactory:Lorg/apache/calcite/rel/type/RelDataTypeFactory;
     185: aload_2
     186: aload_3
     187: invokeinterface #192,  3          // InterfaceMethod org/apache/calcite/rel/type/RelDataTypeFactory.createStructType:(Ljava/util/List;Ljava/util/List;)Lorg/apache/calcite/rel/type/RelDataType;
     192: invokevirtual #196                // Method n:(Lio/substrait/type/Type;Lorg/apache/calcite/rel/type/RelDataType;)Lorg/apache/calcite/rel/type/RelDataType;
     195: astore        4
     197: aload_0
     198: iconst_0
     199: putfield      #131                // Field withinStruct:Z
     202: aload         4
     204: areturn
     205: astore        7
     207: aload_0
     208: iconst_0
     209: putfield      #131                // Field withinStruct:Z
     212: aload         7
     214: athrow
    Exception table:
       from    to  target type
          22   197   205   any
         205   207   205   any

  public org.apache.calcite.rel.type.RelDataType visit(io.substrait.type.Type$ListType);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #9                  // Field typeFactory:Lorg/apache/calcite/rel/type/RelDataTypeFactory;
       6: aload_1
       7: invokevirtual #199                // Method io/substrait/type/Type$ListType.elementType:()Lio/substrait/type/Type;
      10: aload_0
      11: invokeinterface #205,  2          // InterfaceMethod io/substrait/type/Type.accept:(Lio/substrait/type/TypeVisitor;)Ljava/lang/Object;
      16: checkcast     #190                // class org/apache/calcite/rel/type/RelDataType
      19: ldc2_w        #208                // long -1l
      22: invokeinterface #210,  4          // InterfaceMethod org/apache/calcite/rel/type/RelDataTypeFactory.createArrayType:(Lorg/apache/calcite/rel/type/RelDataType;J)Lorg/apache/calcite/rel/type/RelDataType;
      27: invokevirtual #196                // Method n:(Lio/substrait/type/Type;Lorg/apache/calcite/rel/type/RelDataType;)Lorg/apache/calcite/rel/type/RelDataType;
      30: areturn

  public org.apache.calcite.rel.type.RelDataType visit(io.substrait.type.Type$Map);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #9                  // Field typeFactory:Lorg/apache/calcite/rel/type/RelDataTypeFactory;
       6: aload_1
       7: invokevirtual #214                // Method io/substrait/type/Type$Map.key:()Lio/substrait/type/Type;
      10: aload_0
      11: invokeinterface #205,  2          // InterfaceMethod io/substrait/type/Type.accept:(Lio/substrait/type/TypeVisitor;)Ljava/lang/Object;
      16: checkcast     #190                // class org/apache/calcite/rel/type/RelDataType
      19: aload_1
      20: invokevirtual #219                // Method io/substrait/type/Type$Map.value:()Lio/substrait/type/Type;
      23: aload_0
      24: invokeinterface #205,  2          // InterfaceMethod io/substrait/type/Type.accept:(Lio/substrait/type/TypeVisitor;)Ljava/lang/Object;
      29: checkcast     #190                // class org/apache/calcite/rel/type/RelDataType
      32: invokeinterface #222,  3          // InterfaceMethod org/apache/calcite/rel/type/RelDataTypeFactory.createMapType:(Lorg/apache/calcite/rel/type/RelDataType;Lorg/apache/calcite/rel/type/RelDataType;)Lorg/apache/calcite/rel/type/RelDataType;
      37: invokevirtual #196                // Method n:(Lio/substrait/type/Type;Lorg/apache/calcite/rel/type/RelDataType;)Lorg/apache/calcite/rel/type/RelDataType;
      40: areturn

  public org.apache.calcite.rel.type.RelDataType visit(io.substrait.type.Type$UserDefined) throws java.lang.RuntimeException;
    Code:
       0: aload_0
       1: getfield      #15                 // Field userTypeMapper:Lio/substrait/isthmus/UserTypeMapper;
       4: aload_1
       5: invokeinterface #226,  2          // InterfaceMethod io/substrait/isthmus/UserTypeMapper.toCalcite:(Lio/substrait/type/Type$UserDefined;)Lorg/apache/calcite/rel/type/RelDataType;
      10: astore_2
      11: aload_2
      12: ifnull        17
      15: aload_2
      16: areturn
      17: new           #232                // class java/lang/UnsupportedOperationException
      20: dup
      21: ldc           #234                // String Unable to map user-defined type: %s
      23: iconst_1
      24: anewarray     #236                // class java/lang/Object
      27: dup
      28: iconst_0
      29: aload_1
      30: aastore
      31: invokestatic  #238                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      34: invokespecial #242                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      37: athrow

  private boolean n(io.substrait.function.NullableType);
    Code:
       0: aload_1
       1: invokeinterface #243,  1          // InterfaceMethod io/substrait/function/NullableType.nullable:()Z
       6: ireturn

  private org.apache.calcite.rel.type.RelDataType t(boolean, org.apache.calcite.sql.type.SqlTypeName, java.lang.Integer...);
    Code:
       0: aload_3
       1: arraylength
       2: tableswitch   { // 0 to 2
                     0: 28
                     1: 41
                     2: 60
               default: 85
          }
      28: aload_0
      29: getfield      #9                  // Field typeFactory:Lorg/apache/calcite/rel/type/RelDataTypeFactory;
      32: aload_2
      33: invokeinterface #248,  2          // InterfaceMethod org/apache/calcite/rel/type/RelDataTypeFactory.createSqlType:(Lorg/apache/calcite/sql/type/SqlTypeName;)Lorg/apache/calcite/rel/type/RelDataType;
      38: goto          93
      41: aload_0
      42: getfield      #9                  // Field typeFactory:Lorg/apache/calcite/rel/type/RelDataTypeFactory;
      45: aload_2
      46: aload_3
      47: iconst_0
      48: aaload
      49: invokevirtual #252                // Method java/lang/Integer.intValue:()I
      52: invokeinterface #255,  3          // InterfaceMethod org/apache/calcite/rel/type/RelDataTypeFactory.createSqlType:(Lorg/apache/calcite/sql/type/SqlTypeName;I)Lorg/apache/calcite/rel/type/RelDataType;
      57: goto          93
      60: aload_0
      61: getfield      #9                  // Field typeFactory:Lorg/apache/calcite/rel/type/RelDataTypeFactory;
      64: aload_2
      65: aload_3
      66: iconst_0
      67: aaload
      68: invokevirtual #252                // Method java/lang/Integer.intValue:()I
      71: aload_3
      72: iconst_1
      73: aaload
      74: invokevirtual #252                // Method java/lang/Integer.intValue:()I
      77: invokeinterface #258,  4          // InterfaceMethod org/apache/calcite/rel/type/RelDataTypeFactory.createSqlType:(Lorg/apache/calcite/sql/type/SqlTypeName;II)Lorg/apache/calcite/rel/type/RelDataType;
      82: goto          93
      85: new           #261                // class java/lang/IllegalArgumentException
      88: dup
      89: invokespecial #263                // Method java/lang/IllegalArgumentException."<init>":()V
      92: athrow
      93: astore        4
      95: aload_0
      96: getfield      #9                  // Field typeFactory:Lorg/apache/calcite/rel/type/RelDataTypeFactory;
      99: aload         4
     101: iload_1
     102: invokeinterface #95,  3           // InterfaceMethod org/apache/calcite/rel/type/RelDataTypeFactory.createTypeWithNullability:(Lorg/apache/calcite/rel/type/RelDataType;Z)Lorg/apache/calcite/rel/type/RelDataType;
     107: areturn

  private org.apache.calcite.rel.type.RelDataType n(io.substrait.type.Type, org.apache.calcite.rel.type.RelDataType);
    Code:
       0: aload_0
       1: getfield      #9                  // Field typeFactory:Lorg/apache/calcite/rel/type/RelDataTypeFactory;
       4: aload_2
       5: aload_0
       6: aload_1
       7: invokevirtual #27                 // Method n:(Lio/substrait/function/NullableType;)Z
      10: invokeinterface #95,  3           // InterfaceMethod org/apache/calcite/rel/type/RelDataTypeFactory.createTypeWithNullability:(Lorg/apache/calcite/rel/type/RelDataType;Z)Lorg/apache/calcite/rel/type/RelDataType;
      15: areturn

  public java.lang.Object visit(io.substrait.type.Type$UserDefined) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #264                // Method visit:(Lio/substrait/type/Type$UserDefined;)Lorg/apache/calcite/rel/type/RelDataType;
       5: areturn

  public java.lang.Object visit(io.substrait.type.Type$Map) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #267                // Method visit:(Lio/substrait/type/Type$Map;)Lorg/apache/calcite/rel/type/RelDataType;
       5: areturn

  public java.lang.Object visit(io.substrait.type.Type$ListType) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #270                // Method visit:(Lio/substrait/type/Type$ListType;)Lorg/apache/calcite/rel/type/RelDataType;
       5: areturn

  public java.lang.Object visit(io.substrait.type.Type$Struct) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #273                // Method visit:(Lio/substrait/type/Type$Struct;)Lorg/apache/calcite/rel/type/RelDataType;
       5: areturn

  public java.lang.Object visit(io.substrait.type.Type$Decimal) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #276                // Method visit:(Lio/substrait/type/Type$Decimal;)Lorg/apache/calcite/rel/type/RelDataType;
       5: areturn

  public java.lang.Object visit(io.substrait.type.Type$FixedBinary) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #279                // Method visit:(Lio/substrait/type/Type$FixedBinary;)Lorg/apache/calcite/rel/type/RelDataType;
       5: areturn

  public java.lang.Object visit(io.substrait.type.Type$VarChar) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #282                // Method visit:(Lio/substrait/type/Type$VarChar;)Lorg/apache/calcite/rel/type/RelDataType;
       5: areturn

  public java.lang.Object visit(io.substrait.type.Type$FixedChar) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #285                // Method visit:(Lio/substrait/type/Type$FixedChar;)Lorg/apache/calcite/rel/type/RelDataType;
       5: areturn

  public java.lang.Object visit(io.substrait.type.Type$IntervalDay) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #288                // Method visit:(Lio/substrait/type/Type$IntervalDay;)Lorg/apache/calcite/rel/type/RelDataType;
       5: areturn

  public java.lang.Object visit(io.substrait.type.Type$IntervalYear) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #291                // Method visit:(Lio/substrait/type/Type$IntervalYear;)Lorg/apache/calcite/rel/type/RelDataType;
       5: areturn

  public java.lang.Object visit(io.substrait.type.Type$Timestamp) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #294                // Method visit:(Lio/substrait/type/Type$Timestamp;)Lorg/apache/calcite/rel/type/RelDataType;
       5: areturn

  public java.lang.Object visit(io.substrait.type.Type$TimestampTZ) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #297                // Method visit:(Lio/substrait/type/Type$TimestampTZ;)Lorg/apache/calcite/rel/type/RelDataType;
       5: areturn

  public java.lang.Object visit(io.substrait.type.Type$Time) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #300                // Method visit:(Lio/substrait/type/Type$Time;)Lorg/apache/calcite/rel/type/RelDataType;
       5: areturn

  public java.lang.Object visit(io.substrait.type.Type$Date) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #303                // Method visit:(Lio/substrait/type/Type$Date;)Lorg/apache/calcite/rel/type/RelDataType;
       5: areturn

  public java.lang.Object visit(io.substrait.type.Type$Binary) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #306                // Method visit:(Lio/substrait/type/Type$Binary;)Lorg/apache/calcite/rel/type/RelDataType;
       5: areturn

  public java.lang.Object visit(io.substrait.type.Type$Str) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #309                // Method visit:(Lio/substrait/type/Type$Str;)Lorg/apache/calcite/rel/type/RelDataType;
       5: areturn

  public java.lang.Object visit(io.substrait.type.Type$FP64) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #312                // Method visit:(Lio/substrait/type/Type$FP64;)Lorg/apache/calcite/rel/type/RelDataType;
       5: areturn

  public java.lang.Object visit(io.substrait.type.Type$FP32) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #315                // Method visit:(Lio/substrait/type/Type$FP32;)Lorg/apache/calcite/rel/type/RelDataType;
       5: areturn

  public java.lang.Object visit(io.substrait.type.Type$I64) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #318                // Method visit:(Lio/substrait/type/Type$I64;)Lorg/apache/calcite/rel/type/RelDataType;
       5: areturn

  public java.lang.Object visit(io.substrait.type.Type$I32) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #321                // Method visit:(Lio/substrait/type/Type$I32;)Lorg/apache/calcite/rel/type/RelDataType;
       5: areturn

  public java.lang.Object visit(io.substrait.type.Type$I16) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #324                // Method visit:(Lio/substrait/type/Type$I16;)Lorg/apache/calcite/rel/type/RelDataType;
       5: areturn

  public java.lang.Object visit(io.substrait.type.Type$I8) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #327                // Method visit:(Lio/substrait/type/Type$I8;)Lorg/apache/calcite/rel/type/RelDataType;
       5: areturn

  public java.lang.Object visit(io.substrait.type.Type$Bool) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #330                // Method visit:(Lio/substrait/type/Type$Bool;)Lorg/apache/calcite/rel/type/RelDataType;
       5: areturn
}
