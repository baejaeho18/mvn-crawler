Compiled from "SqlConverterBase.java"
class io.substrait.isthmus.SqlConverterBase {
  final org.apache.calcite.rel.type.RelDataTypeFactory factory;

  final org.apache.calcite.plan.RelOptCluster relOptCluster;

  final org.apache.calcite.config.CalciteConnectionConfig config;

  final org.apache.calcite.sql2rel.SqlToRelConverter$Config converterConfig;

  final org.apache.calcite.sql.parser.SqlParser$Config parserConfig;

  protected static final io.substrait.isthmus.FeatureBoard FEATURES_DEFAULT;

  final io.substrait.isthmus.FeatureBoard featureBoard;

  protected static final io.substrait.extension.SimpleExtension$ExtensionCollection EXTENSION_COLLECTION;

  protected io.substrait.isthmus.SqlConverterBase(io.substrait.isthmus.FeatureBoard);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class org/apache/calcite/jdbc/JavaTypeFactoryImpl
       8: dup
       9: invokespecial #9                  // Method org/apache/calcite/jdbc/JavaTypeFactoryImpl."<init>":()V
      12: putfield      #10                 // Field factory:Lorg/apache/calcite/rel/type/RelDataTypeFactory;
      15: aload_0
      16: getstatic     #16                 // Field org/apache/calcite/config/CalciteConnectionConfig.DEFAULT:Lorg/apache/calcite/config/CalciteConnectionConfigImpl;
      19: getstatic     #22                 // Field org/apache/calcite/config/CalciteConnectionProperty.CASE_SENSITIVE:Lorg/apache/calcite/config/CalciteConnectionProperty;
      22: ldc           #28                 // String false
      24: invokevirtual #30                 // Method org/apache/calcite/config/CalciteConnectionConfigImpl.set:(Lorg/apache/calcite/config/CalciteConnectionProperty;Ljava/lang/String;)Lorg/apache/calcite/config/CalciteConnectionConfigImpl;
      27: putfield      #36                 // Field config:Lorg/apache/calcite/config/CalciteConnectionConfig;
      30: aload_0
      31: invokestatic  #40                 // Method org/apache/calcite/sql2rel/SqlToRelConverter.config:()Lorg/apache/calcite/sql2rel/SqlToRelConverter$Config;
      34: iconst_1
      35: invokeinterface #45,  2           // InterfaceMethod org/apache/calcite/sql2rel/SqlToRelConverter$Config.withTrimUnusedFields:(Z)Lorg/apache/calcite/sql2rel/SqlToRelConverter$Config;
      40: iconst_0
      41: invokeinterface #51,  2           // InterfaceMethod org/apache/calcite/sql2rel/SqlToRelConverter$Config.withExpand:(Z)Lorg/apache/calcite/sql2rel/SqlToRelConverter$Config;
      46: putfield      #54                 // Field converterConfig:Lorg/apache/calcite/sql2rel/SqlToRelConverter$Config;
      49: new           #58                 // class org/apache/calcite/plan/volcano/VolcanoPlanner
      52: dup
      53: getstatic     #60                 // Field org/apache/calcite/plan/RelOptCostImpl.FACTORY:Lorg/apache/calcite/plan/RelOptCostFactory;
      56: ldc           #66                 // String hello
      58: invokestatic  #68                 // Method org/apache/calcite/plan/Contexts.of:(Ljava/lang/Object;)Lorg/apache/calcite/plan/Context;
      61: invokespecial #74                 // Method org/apache/calcite/plan/volcano/VolcanoPlanner."<init>":(Lorg/apache/calcite/plan/RelOptCostFactory;Lorg/apache/calcite/plan/Context;)V
      64: astore_2
      65: aload_0
      66: aload_2
      67: new           #77                 // class org/apache/calcite/rex/RexBuilder
      70: dup
      71: aload_0
      72: getfield      #10                 // Field factory:Lorg/apache/calcite/rel/type/RelDataTypeFactory;
      75: invokespecial #79                 // Method org/apache/calcite/rex/RexBuilder."<init>":(Lorg/apache/calcite/rel/type/RelDataTypeFactory;)V
      78: invokestatic  #82                 // Method org/apache/calcite/plan/RelOptCluster.create:(Lorg/apache/calcite/plan/RelOptPlanner;Lorg/apache/calcite/rex/RexBuilder;)Lorg/apache/calcite/plan/RelOptCluster;
      81: putfield      #88                 // Field relOptCluster:Lorg/apache/calcite/plan/RelOptCluster;
      84: aload_0
      85: getfield      #88                 // Field relOptCluster:Lorg/apache/calcite/plan/RelOptCluster;
      88: invokedynamic #92,  0             // InvokeDynamic #0:get:()Ljava/util/function/Supplier;
      93: invokevirtual #96                 // Method org/apache/calcite/plan/RelOptCluster.setMetadataQuerySupplier:(Ljava/util/function/Supplier;)V
      96: aload_0
      97: aload_1
      98: ifnonnull     107
     101: getstatic     #100                // Field FEATURES_DEFAULT:Lio/substrait/isthmus/FeatureBoard;
     104: goto          108
     107: aload_1
     108: putfield      #104                // Field featureBoard:Lio/substrait/isthmus/FeatureBoard;
     111: aload_0
     112: getstatic     #107                // Field org/apache/calcite/sql/parser/SqlParser$Config.DEFAULT:Lorg/apache/calcite/sql/parser/SqlParser$Config;
     115: getstatic     #112                // Field org/apache/calcite/sql/parser/ddl/SqlDdlParserImpl.FACTORY:Lorg/apache/calcite/sql/parser/SqlParserImplFactory;
     118: invokeinterface #117,  2          // InterfaceMethod org/apache/calcite/sql/parser/SqlParser$Config.withParserFactory:(Lorg/apache/calcite/sql/parser/SqlParserImplFactory;)Lorg/apache/calcite/sql/parser/SqlParser$Config;
     123: aload_0
     124: getfield      #104                // Field featureBoard:Lio/substrait/isthmus/FeatureBoard;
     127: invokevirtual #121                // Method io/substrait/isthmus/FeatureBoard.sqlConformanceMode:()Lorg/apache/calcite/sql/validate/SqlConformance;
     130: invokeinterface #127,  2          // InterfaceMethod org/apache/calcite/sql/parser/SqlParser$Config.withConformance:(Lorg/apache/calcite/sql/validate/SqlConformance;)Lorg/apache/calcite/sql/parser/SqlParser$Config;
     135: putfield      #131                // Field parserConfig:Lorg/apache/calcite/sql/parser/SqlParser$Config;
     138: return

  org.apache.calcite.util.Pair<org.apache.calcite.sql.validate.SqlValidator, org.apache.calcite.prepare.CalciteCatalogReader> registerCreateTables(java.util.List<java.lang.String>) throws org.apache.calcite.sql.parser.SqlParseException;
    Code:
       0: iconst_0
       1: invokestatic  #134                // Method org/apache/calcite/jdbc/CalciteSchema.createRootSchema:(Z)Lorg/apache/calcite/jdbc/CalciteSchema;
       4: astore_2
       5: new           #140                // class org/apache/calcite/prepare/CalciteCatalogReader
       8: dup
       9: aload_2
      10: invokestatic  #142                // InterfaceMethod java/util/List.of:()Ljava/util/List;
      13: aload_0
      14: getfield      #10                 // Field factory:Lorg/apache/calcite/rel/type/RelDataTypeFactory;
      17: aload_0
      18: getfield      #36                 // Field config:Lorg/apache/calcite/config/CalciteConnectionConfig;
      21: invokespecial #147                // Method org/apache/calcite/prepare/CalciteCatalogReader."<init>":(Lorg/apache/calcite/jdbc/CalciteSchema;Ljava/util/List;Lorg/apache/calcite/rel/type/RelDataTypeFactory;Lorg/apache/calcite/config/CalciteConnectionConfig;)V
      24: astore_3
      25: aload_0
      26: getfield      #10                 // Field factory:Lorg/apache/calcite/rel/type/RelDataTypeFactory;
      29: aload_3
      30: getstatic     #150                // Field org/apache/calcite/sql/validate/SqlValidator$Config.DEFAULT:Lorg/apache/calcite/sql/validate/SqlValidator$Config;
      33: invokestatic  #155                // Method io/substrait/isthmus/SqlConverterBase$Validator.create:(Lorg/apache/calcite/rel/type/RelDataTypeFactory;Lorg/apache/calcite/prepare/CalciteCatalogReader;Lorg/apache/calcite/sql/validate/SqlValidator$Config;)Lio/substrait/isthmus/SqlConverterBase$Validator;
      36: astore        4
      38: aload_1
      39: ifnull        135
      42: aload_1
      43: invokeinterface #160,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      48: astore        5
      50: aload         5
      52: invokeinterface #164,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      57: ifeq          135
      60: aload         5
      62: invokeinterface #170,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      67: checkcast     #174                // class java/lang/String
      70: astore        6
      72: aload_0
      73: aload_0
      74: getfield      #10                 // Field factory:Lorg/apache/calcite/rel/type/RelDataTypeFactory;
      77: aload         4
      79: aload         6
      81: invokevirtual #176                // Method parseCreateTable:(Lorg/apache/calcite/rel/type/RelDataTypeFactory;Lorg/apache/calcite/sql/validate/SqlValidator;Ljava/lang/String;)Ljava/util/List;
      84: astore        7
      86: aload         7
      88: invokeinterface #160,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      93: astore        8
      95: aload         8
      97: invokeinterface #164,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     102: ifeq          132
     105: aload         8
     107: invokeinterface #170,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     112: checkcast     #180                // class io/substrait/isthmus/SqlConverterBase$DefinedTable
     115: astore        9
     117: aload_2
     118: aload         9
     120: invokevirtual #182                // Method io/substrait/isthmus/SqlConverterBase$DefinedTable.getName:()Ljava/lang/String;
     123: aload         9
     125: invokevirtual #186                // Method org/apache/calcite/jdbc/CalciteSchema.add:(Ljava/lang/String;Lorg/apache/calcite/schema/Table;)Lorg/apache/calcite/jdbc/CalciteSchema$TableEntry;
     128: pop
     129: goto          95
     132: goto          50
     135: aload         4
     137: aload_3
     138: invokestatic  #190                // Method org/apache/calcite/util/Pair.of:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/calcite/util/Pair;
     141: areturn

  org.apache.calcite.util.Pair<org.apache.calcite.sql.validate.SqlValidator, org.apache.calcite.prepare.CalciteCatalogReader> registerCreateTables(java.util.function.Function<java.util.List<java.lang.String>, io.substrait.type.NamedStruct>) throws org.apache.calcite.sql.parser.SqlParseException;
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #195,  0            // InvokeDynamic #1:apply:(Lio/substrait/isthmus/SqlConverterBase;Ljava/util/function/Function;)Ljava/util/function/Function;
       7: astore_2
       8: aload_2
       9: invokestatic  #199                // Method org/apache/calcite/jdbc/LookupCalciteSchema.createRootSchema:(Ljava/util/function/Function;)Lorg/apache/calcite/jdbc/CalciteSchema;
      12: astore_3
      13: new           #140                // class org/apache/calcite/prepare/CalciteCatalogReader
      16: dup
      17: aload_3
      18: invokestatic  #142                // InterfaceMethod java/util/List.of:()Ljava/util/List;
      21: aload_0
      22: getfield      #10                 // Field factory:Lorg/apache/calcite/rel/type/RelDataTypeFactory;
      25: aload_0
      26: getfield      #36                 // Field config:Lorg/apache/calcite/config/CalciteConnectionConfig;
      29: invokespecial #147                // Method org/apache/calcite/prepare/CalciteCatalogReader."<init>":(Lorg/apache/calcite/jdbc/CalciteSchema;Ljava/util/List;Lorg/apache/calcite/rel/type/RelDataTypeFactory;Lorg/apache/calcite/config/CalciteConnectionConfig;)V
      32: astore        4
      34: aload_0
      35: getfield      #10                 // Field factory:Lorg/apache/calcite/rel/type/RelDataTypeFactory;
      38: aload         4
      40: getstatic     #150                // Field org/apache/calcite/sql/validate/SqlValidator$Config.DEFAULT:Lorg/apache/calcite/sql/validate/SqlValidator$Config;
      43: invokestatic  #155                // Method io/substrait/isthmus/SqlConverterBase$Validator.create:(Lorg/apache/calcite/rel/type/RelDataTypeFactory;Lorg/apache/calcite/prepare/CalciteCatalogReader;Lorg/apache/calcite/sql/validate/SqlValidator$Config;)Lio/substrait/isthmus/SqlConverterBase$Validator;
      46: astore        5
      48: aload         5
      50: aload         4
      52: invokestatic  #190                // Method org/apache/calcite/util/Pair.of:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/calcite/util/Pair;
      55: areturn

  org.apache.calcite.util.Pair<org.apache.calcite.sql.validate.SqlValidator, org.apache.calcite.prepare.CalciteCatalogReader> registerSchema(java.lang.String, org.apache.calcite.schema.Schema);
    Code:
       0: iconst_0
       1: invokestatic  #134                // Method org/apache/calcite/jdbc/CalciteSchema.createRootSchema:(Z)Lorg/apache/calcite/jdbc/CalciteSchema;
       4: astore_3
       5: aload_2
       6: ifnull        23
       9: aload_3
      10: aload_1
      11: aload_2
      12: invokevirtual #204                // Method org/apache/calcite/jdbc/CalciteSchema.add:(Ljava/lang/String;Lorg/apache/calcite/schema/Schema;)Lorg/apache/calcite/jdbc/CalciteSchema;
      15: pop
      16: aload_3
      17: aload_1
      18: iconst_0
      19: invokevirtual #207                // Method org/apache/calcite/jdbc/CalciteSchema.getSubSchema:(Ljava/lang/String;Z)Lorg/apache/calcite/jdbc/CalciteSchema;
      22: astore_3
      23: new           #140                // class org/apache/calcite/prepare/CalciteCatalogReader
      26: dup
      27: aload_3
      28: invokestatic  #142                // InterfaceMethod java/util/List.of:()Ljava/util/List;
      31: aload_0
      32: getfield      #10                 // Field factory:Lorg/apache/calcite/rel/type/RelDataTypeFactory;
      35: aload_0
      36: getfield      #36                 // Field config:Lorg/apache/calcite/config/CalciteConnectionConfig;
      39: invokespecial #147                // Method org/apache/calcite/prepare/CalciteCatalogReader."<init>":(Lorg/apache/calcite/jdbc/CalciteSchema;Ljava/util/List;Lorg/apache/calcite/rel/type/RelDataTypeFactory;Lorg/apache/calcite/config/CalciteConnectionConfig;)V
      42: astore        4
      44: aload_0
      45: getfield      #10                 // Field factory:Lorg/apache/calcite/rel/type/RelDataTypeFactory;
      48: aload         4
      50: getstatic     #150                // Field org/apache/calcite/sql/validate/SqlValidator$Config.DEFAULT:Lorg/apache/calcite/sql/validate/SqlValidator$Config;
      53: invokestatic  #155                // Method io/substrait/isthmus/SqlConverterBase$Validator.create:(Lorg/apache/calcite/rel/type/RelDataTypeFactory;Lorg/apache/calcite/prepare/CalciteCatalogReader;Lorg/apache/calcite/sql/validate/SqlValidator$Config;)Lio/substrait/isthmus/SqlConverterBase$Validator;
      56: astore        5
      58: aload         5
      60: aload         4
      62: invokestatic  #190                // Method org/apache/calcite/util/Pair.of:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/calcite/util/Pair;
      65: areturn

  protected java.util.List<io.substrait.isthmus.SqlConverterBase$DefinedTable> parseCreateTable(org.apache.calcite.rel.type.RelDataTypeFactory, org.apache.calcite.sql.validate.SqlValidator, java.lang.String) throws org.apache.calcite.sql.parser.SqlParseException;
    Code:
       0: aload_3
       1: aload_0
       2: getfield      #131                // Field parserConfig:Lorg/apache/calcite/sql/parser/SqlParser$Config;
       5: invokestatic  #211                // Method org/apache/calcite/sql/parser/SqlParser.create:(Ljava/lang/String;Lorg/apache/calcite/sql/parser/SqlParser$Config;)Lorg/apache/calcite/sql/parser/SqlParser;
       8: astore        4
      10: new           #216                // class java/util/ArrayList
      13: dup
      14: invokespecial #218                // Method java/util/ArrayList."<init>":()V
      17: astore        5
      19: aload         4
      21: invokevirtual #219                // Method org/apache/calcite/sql/parser/SqlParser.parseStmtList:()Lorg/apache/calcite/sql/SqlNodeList;
      24: astore        6
      26: aload         6
      28: invokevirtual #223                // Method org/apache/calcite/sql/SqlNodeList.iterator:()Ljava/util/Iterator;
      31: astore        7
      33: aload         7
      35: invokeinterface #164,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      40: ifeq          333
      43: aload         7
      45: invokeinterface #170,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      50: checkcast     #226                // class org/apache/calcite/sql/SqlNode
      53: astore        8
      55: aload         8
      57: instanceof    #228                // class org/apache/calcite/sql/ddl/SqlCreateTable
      60: ifne          69
      63: ldc           #230                // String Not a valid CREATE TABLE statement.
      65: invokestatic  #232                // Method fail:(Ljava/lang/String;)Lorg/apache/calcite/sql/parser/SqlParseException;
      68: pop
      69: aload         8
      71: checkcast     #228                // class org/apache/calcite/sql/ddl/SqlCreateTable
      74: astore        9
      76: aload         9
      78: getfield      #236                // Field org/apache/calcite/sql/ddl/SqlCreateTable.name:Lorg/apache/calcite/sql/SqlIdentifier;
      81: getfield      #240                // Field org/apache/calcite/sql/SqlIdentifier.names:Lcom/google/common/collect/ImmutableList;
      84: invokevirtual #246                // Method com/google/common/collect/ImmutableList.size:()I
      87: iconst_1
      88: if_icmple     105
      91: ldc           #252                // String Only simple table names are allowed.
      93: aload         9
      95: getfield      #236                // Field org/apache/calcite/sql/ddl/SqlCreateTable.name:Lorg/apache/calcite/sql/SqlIdentifier;
      98: invokevirtual #254                // Method org/apache/calcite/sql/SqlIdentifier.getParserPosition:()Lorg/apache/calcite/sql/parser/SqlParserPos;
     101: invokestatic  #258                // Method fail:(Ljava/lang/String;Lorg/apache/calcite/sql/parser/SqlParserPos;)Lorg/apache/calcite/sql/parser/SqlParseException;
     104: pop
     105: aload         9
     107: getfield      #261                // Field org/apache/calcite/sql/ddl/SqlCreateTable.query:Lorg/apache/calcite/sql/SqlNode;
     110: ifnull        128
     113: ldc_w         #265                // String CTAS not supported.
     116: aload         9
     118: getfield      #236                // Field org/apache/calcite/sql/ddl/SqlCreateTable.name:Lorg/apache/calcite/sql/SqlIdentifier;
     121: invokevirtual #254                // Method org/apache/calcite/sql/SqlIdentifier.getParserPosition:()Lorg/apache/calcite/sql/parser/SqlParserPos;
     124: invokestatic  #258                // Method fail:(Ljava/lang/String;Lorg/apache/calcite/sql/parser/SqlParserPos;)Lorg/apache/calcite/sql/parser/SqlParseException;
     127: pop
     128: new           #216                // class java/util/ArrayList
     131: dup
     132: invokespecial #218                // Method java/util/ArrayList."<init>":()V
     135: astore        10
     137: new           #216                // class java/util/ArrayList
     140: dup
     141: invokespecial #218                // Method java/util/ArrayList."<init>":()V
     144: astore        11
     146: aload         9
     148: getfield      #267                // Field org/apache/calcite/sql/ddl/SqlCreateTable.columnList:Lorg/apache/calcite/sql/SqlNodeList;
     151: invokevirtual #223                // Method org/apache/calcite/sql/SqlNodeList.iterator:()Ljava/util/Iterator;
     154: astore        12
     156: aload         12
     158: invokeinterface #164,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     163: ifeq          289
     166: aload         12
     168: invokeinterface #170,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     173: checkcast     #226                // class org/apache/calcite/sql/SqlNode
     176: astore        13
     178: aload         13
     180: instanceof    #271                // class org/apache/calcite/sql/ddl/SqlColumnDeclaration
     183: ifne          209
     186: aload         13
     188: instanceof    #273                // class org/apache/calcite/sql/ddl/SqlKeyConstraint
     191: ifeq          197
     194: goto          156
     197: ldc_w         #275                // String Unexpected column list construction.
     200: aload         13
     202: invokevirtual #277                // Method org/apache/calcite/sql/SqlNode.getParserPosition:()Lorg/apache/calcite/sql/parser/SqlParserPos;
     205: invokestatic  #258                // Method fail:(Ljava/lang/String;Lorg/apache/calcite/sql/parser/SqlParserPos;)Lorg/apache/calcite/sql/parser/SqlParseException;
     208: pop
     209: aload         13
     211: checkcast     #271                // class org/apache/calcite/sql/ddl/SqlColumnDeclaration
     214: astore        14
     216: aload         14
     218: getfield      #278                // Field org/apache/calcite/sql/ddl/SqlColumnDeclaration.name:Lorg/apache/calcite/sql/SqlIdentifier;
     221: getfield      #240                // Field org/apache/calcite/sql/SqlIdentifier.names:Lcom/google/common/collect/ImmutableList;
     224: invokevirtual #246                // Method com/google/common/collect/ImmutableList.size:()I
     227: iconst_1
     228: if_icmpeq     246
     231: ldc_w         #279                // String Expected simple column names.
     234: aload         14
     236: getfield      #278                // Field org/apache/calcite/sql/ddl/SqlColumnDeclaration.name:Lorg/apache/calcite/sql/SqlIdentifier;
     239: invokevirtual #254                // Method org/apache/calcite/sql/SqlIdentifier.getParserPosition:()Lorg/apache/calcite/sql/parser/SqlParserPos;
     242: invokestatic  #258                // Method fail:(Ljava/lang/String;Lorg/apache/calcite/sql/parser/SqlParserPos;)Lorg/apache/calcite/sql/parser/SqlParseException;
     245: pop
     246: aload         10
     248: aload         14
     250: getfield      #278                // Field org/apache/calcite/sql/ddl/SqlColumnDeclaration.name:Lorg/apache/calcite/sql/SqlIdentifier;
     253: getfield      #240                // Field org/apache/calcite/sql/SqlIdentifier.names:Lcom/google/common/collect/ImmutableList;
     256: iconst_0
     257: invokevirtual #281                // Method com/google/common/collect/ImmutableList.get:(I)Ljava/lang/Object;
     260: checkcast     #174                // class java/lang/String
     263: invokeinterface #284,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     268: pop
     269: aload         11
     271: aload         14
     273: getfield      #287                // Field org/apache/calcite/sql/ddl/SqlColumnDeclaration.dataType:Lorg/apache/calcite/sql/SqlDataTypeSpec;
     276: aload_2
     277: invokevirtual #291                // Method org/apache/calcite/sql/SqlDataTypeSpec.deriveType:(Lorg/apache/calcite/sql/validate/SqlValidator;)Lorg/apache/calcite/rel/type/RelDataType;
     280: invokeinterface #284,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     285: pop
     286: goto          156
     289: aload         5
     291: new           #180                // class io/substrait/isthmus/SqlConverterBase$DefinedTable
     294: dup
     295: aload         9
     297: getfield      #236                // Field org/apache/calcite/sql/ddl/SqlCreateTable.name:Lorg/apache/calcite/sql/SqlIdentifier;
     300: getfield      #240                // Field org/apache/calcite/sql/SqlIdentifier.names:Lcom/google/common/collect/ImmutableList;
     303: iconst_0
     304: invokevirtual #281                // Method com/google/common/collect/ImmutableList.get:(I)Ljava/lang/Object;
     307: checkcast     #174                // class java/lang/String
     310: aload_1
     311: aload_1
     312: aload         11
     314: aload         10
     316: invokeinterface #297,  3          // InterfaceMethod org/apache/calcite/rel/type/RelDataTypeFactory.createStructType:(Ljava/util/List;Ljava/util/List;)Lorg/apache/calcite/rel/type/RelDataType;
     321: invokespecial #303                // Method io/substrait/isthmus/SqlConverterBase$DefinedTable."<init>":(Ljava/lang/String;Lorg/apache/calcite/rel/type/RelDataTypeFactory;Lorg/apache/calcite/rel/type/RelDataType;)V
     324: invokeinterface #284,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     329: pop
     330: goto          33
     333: aload         5
     335: areturn

  protected static org.apache.calcite.sql.parser.SqlParseException fail(java.lang.String, org.apache.calcite.sql.parser.SqlParserPos);
    Code:
       0: new           #306                // class org/apache/calcite/sql/parser/SqlParseException
       3: dup
       4: aload_0
       5: aload_1
       6: aconst_null
       7: aconst_null
       8: new           #308                // class java/lang/RuntimeException
      11: dup
      12: ldc_w         #310                // String fake lineage
      15: invokespecial #312                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      18: invokespecial #315                // Method org/apache/calcite/sql/parser/SqlParseException."<init>":(Ljava/lang/String;Lorg/apache/calcite/sql/parser/SqlParserPos;[[I[Ljava/lang/String;Ljava/lang/Throwable;)V
      21: areturn

  protected static org.apache.calcite.sql.parser.SqlParseException fail(java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #318                // Field org/apache/calcite/sql/parser/SqlParserPos.ZERO:Lorg/apache/calcite/sql/parser/SqlParserPos;
       4: invokestatic  #258                // Method fail:(Ljava/lang/String;Lorg/apache/calcite/sql/parser/SqlParserPos;)Lorg/apache/calcite/sql/parser/SqlParseException;
       7: areturn

  private org.apache.calcite.schema.Table lambda$registerCreateTables$1(java.util.function.Function, java.util.List);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #324,  2          // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #329                // class io/substrait/type/NamedStruct
      10: astore_3
      11: aload_3
      12: ifnonnull     17
      15: aconst_null
      16: areturn
      17: new           #180                // class io/substrait/isthmus/SqlConverterBase$DefinedTable
      20: dup
      21: aload_2
      22: aload_2
      23: invokeinterface #331,  1          // InterfaceMethod java/util/List.size:()I
      28: iconst_1
      29: isub
      30: invokeinterface #332,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      35: checkcast     #174                // class java/lang/String
      38: aload_0
      39: getfield      #10                 // Field factory:Lorg/apache/calcite/rel/type/RelDataTypeFactory;
      42: getstatic     #333                // Field io/substrait/isthmus/TypeConverter.DEFAULT:Lio/substrait/isthmus/TypeConverter;
      45: aload_0
      46: getfield      #10                 // Field factory:Lorg/apache/calcite/rel/type/RelDataTypeFactory;
      49: aload_3
      50: invokeinterface #338,  1          // InterfaceMethod io/substrait/type/NamedStruct.struct:()Lio/substrait/type/Type$Struct;
      55: aload_3
      56: invokeinterface #342,  1          // InterfaceMethod io/substrait/type/NamedStruct.names:()Ljava/util/List;
      61: invokevirtual #344                // Method io/substrait/isthmus/TypeConverter.toCalcite:(Lorg/apache/calcite/rel/type/RelDataTypeFactory;Lio/substrait/function/TypeExpression;Ljava/util/List;)Lorg/apache/calcite/rel/type/RelDataType;
      64: invokespecial #303                // Method io/substrait/isthmus/SqlConverterBase$DefinedTable."<init>":(Ljava/lang/String;Lorg/apache/calcite/rel/type/RelDataTypeFactory;Lorg/apache/calcite/rel/type/RelDataType;)V
      67: areturn

  private static org.apache.calcite.rel.metadata.RelMetadataQuery lambda$new$0();
    Code:
       0: new           #348                // class org/apache/calcite/rel/metadata/ProxyingMetadataHandlerProvider
       3: dup
       4: getstatic     #350                // Field org/apache/calcite/rel/metadata/DefaultRelMetadataProvider.INSTANCE:Lorg/apache/calcite/rel/metadata/DefaultRelMetadataProvider;
       7: invokespecial #356                // Method org/apache/calcite/rel/metadata/ProxyingMetadataHandlerProvider."<init>":(Lorg/apache/calcite/rel/metadata/RelMetadataProvider;)V
      10: astore_0
      11: new           #359                // class org/apache/calcite/rel/metadata/RelMetadataQuery
      14: dup
      15: aload_0
      16: invokespecial #361                // Method org/apache/calcite/rel/metadata/RelMetadataQuery."<init>":(Lorg/apache/calcite/rel/metadata/MetadataHandlerProvider;)V
      19: areturn

  static {};
    Code:
       0: invokestatic  #364                // Method io/substrait/isthmus/ImmutableFeatureBoard.builder:()Lio/substrait/isthmus/ImmutableFeatureBoard$Builder;
       3: invokevirtual #370                // Method io/substrait/isthmus/ImmutableFeatureBoard$Builder.build:()Lio/substrait/isthmus/ImmutableFeatureBoard;
       6: putstatic     #100                // Field FEATURES_DEFAULT:Lio/substrait/isthmus/FeatureBoard;
       9: invokestatic  #376                // Method io/substrait/extension/SimpleExtension.loadDefaults:()Lio/substrait/extension/SimpleExtension$ExtensionCollection;
      12: astore_0
      13: goto          29
      16: astore_1
      17: new           #308                // class java/lang/RuntimeException
      20: dup
      21: ldc_w         #384                // String Failure while loading defaults.
      24: aload_1
      25: invokespecial #386                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      28: athrow
      29: aload_0
      30: putstatic     #389                // Field EXTENSION_COLLECTION:Lio/substrait/extension/SimpleExtension$ExtensionCollection;
      33: return
    Exception table:
       from    to  target type
           9    13    16   Class java/io/IOException
}
