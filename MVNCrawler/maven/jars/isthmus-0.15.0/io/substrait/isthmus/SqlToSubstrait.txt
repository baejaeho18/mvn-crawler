Compiled from "SqlToSubstrait.java"
public class io.substrait.isthmus.SqlToSubstrait extends io.substrait.isthmus.SqlConverterBase {
  public io.substrait.isthmus.SqlToSubstrait();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #1                  // Method "<init>":(Lio/substrait/isthmus/FeatureBoard;)V
       5: return

  public io.substrait.isthmus.SqlToSubstrait(io.substrait.isthmus.FeatureBoard);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #7                  // Method io/substrait/isthmus/SqlConverterBase."<init>":(Lio/substrait/isthmus/FeatureBoard;)V
       5: return

  public io.substrait.proto.Plan execute(java.lang.String, java.util.function.Function<java.util.List<java.lang.String>, io.substrait.type.NamedStruct>) throws org.apache.calcite.sql.parser.SqlParseException;
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #10                 // Method registerCreateTables:(Ljava/util/function/Function;)Lorg/apache/calcite/util/Pair;
       5: astore_3
       6: aload_0
       7: aload_1
       8: aload_0
       9: getfield      #14                 // Field factory:Lorg/apache/calcite/rel/type/RelDataTypeFactory;
      12: aload_3
      13: getfield      #18                 // Field org/apache/calcite/util/Pair.left:Ljava/lang/Object;
      16: checkcast     #24                 // class org/apache/calcite/sql/validate/SqlValidator
      19: aload_3
      20: getfield      #26                 // Field org/apache/calcite/util/Pair.right:Ljava/lang/Object;
      23: checkcast     #29                 // class org/apache/calcite/prepare/CalciteCatalogReader
      26: invokevirtual #31                 // Method executeInner:(Ljava/lang/String;Lorg/apache/calcite/rel/type/RelDataTypeFactory;Lorg/apache/calcite/sql/validate/SqlValidator;Lorg/apache/calcite/prepare/CalciteCatalogReader;)Lio/substrait/proto/Plan;
      29: areturn

  public io.substrait.proto.Plan execute(java.lang.String, java.util.List<java.lang.String>) throws org.apache.calcite.sql.parser.SqlParseException;
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #35                 // Method registerCreateTables:(Ljava/util/List;)Lorg/apache/calcite/util/Pair;
       5: astore_3
       6: aload_0
       7: aload_1
       8: aload_0
       9: getfield      #14                 // Field factory:Lorg/apache/calcite/rel/type/RelDataTypeFactory;
      12: aload_3
      13: getfield      #18                 // Field org/apache/calcite/util/Pair.left:Ljava/lang/Object;
      16: checkcast     #24                 // class org/apache/calcite/sql/validate/SqlValidator
      19: aload_3
      20: getfield      #26                 // Field org/apache/calcite/util/Pair.right:Ljava/lang/Object;
      23: checkcast     #29                 // class org/apache/calcite/prepare/CalciteCatalogReader
      26: invokevirtual #31                 // Method executeInner:(Ljava/lang/String;Lorg/apache/calcite/rel/type/RelDataTypeFactory;Lorg/apache/calcite/sql/validate/SqlValidator;Lorg/apache/calcite/prepare/CalciteCatalogReader;)Lio/substrait/proto/Plan;
      29: areturn

  public io.substrait.proto.Plan execute(java.lang.String, java.lang.String, org.apache.calcite.schema.Schema) throws org.apache.calcite.sql.parser.SqlParseException;
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: invokevirtual #38                 // Method registerSchema:(Ljava/lang/String;Lorg/apache/calcite/schema/Schema;)Lorg/apache/calcite/util/Pair;
       6: astore        4
       8: aload_0
       9: aload_1
      10: aload_0
      11: getfield      #14                 // Field factory:Lorg/apache/calcite/rel/type/RelDataTypeFactory;
      14: aload         4
      16: getfield      #18                 // Field org/apache/calcite/util/Pair.left:Ljava/lang/Object;
      19: checkcast     #24                 // class org/apache/calcite/sql/validate/SqlValidator
      22: aload         4
      24: getfield      #26                 // Field org/apache/calcite/util/Pair.right:Ljava/lang/Object;
      27: checkcast     #29                 // class org/apache/calcite/prepare/CalciteCatalogReader
      30: invokevirtual #31                 // Method executeInner:(Ljava/lang/String;Lorg/apache/calcite/rel/type/RelDataTypeFactory;Lorg/apache/calcite/sql/validate/SqlValidator;Lorg/apache/calcite/prepare/CalciteCatalogReader;)Lio/substrait/proto/Plan;
      33: areturn

  java.util.List<org.apache.calcite.rel.RelRoot> sqlToRelNode(java.lang.String, java.util.List<java.lang.String>) throws org.apache.calcite.sql.parser.SqlParseException;
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #35                 // Method registerCreateTables:(Ljava/util/List;)Lorg/apache/calcite/util/Pair;
       5: astore_3
       6: aload_0
       7: aload_1
       8: aload_3
       9: getfield      #18                 // Field org/apache/calcite/util/Pair.left:Ljava/lang/Object;
      12: checkcast     #24                 // class org/apache/calcite/sql/validate/SqlValidator
      15: aload_3
      16: getfield      #26                 // Field org/apache/calcite/util/Pair.right:Ljava/lang/Object;
      19: checkcast     #29                 // class org/apache/calcite/prepare/CalciteCatalogReader
      22: invokevirtual #42                 // Method sqlToRelNode:(Ljava/lang/String;Lorg/apache/calcite/sql/validate/SqlValidator;Lorg/apache/calcite/prepare/CalciteCatalogReader;)Ljava/util/List;
      25: areturn

  java.util.List<org.apache.calcite.rel.RelRoot> sqlToRelNode(java.lang.String, java.util.function.Function<java.util.List<java.lang.String>, io.substrait.type.NamedStruct>) throws org.apache.calcite.sql.parser.SqlParseException;
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #10                 // Method registerCreateTables:(Ljava/util/function/Function;)Lorg/apache/calcite/util/Pair;
       5: astore_3
       6: aload_0
       7: aload_1
       8: aload_3
       9: getfield      #18                 // Field org/apache/calcite/util/Pair.left:Ljava/lang/Object;
      12: checkcast     #24                 // class org/apache/calcite/sql/validate/SqlValidator
      15: aload_3
      16: getfield      #26                 // Field org/apache/calcite/util/Pair.right:Ljava/lang/Object;
      19: checkcast     #29                 // class org/apache/calcite/prepare/CalciteCatalogReader
      22: invokevirtual #42                 // Method sqlToRelNode:(Ljava/lang/String;Lorg/apache/calcite/sql/validate/SqlValidator;Lorg/apache/calcite/prepare/CalciteCatalogReader;)Ljava/util/List;
      25: areturn

  private io.substrait.proto.Plan executeInner(java.lang.String, org.apache.calcite.rel.type.RelDataTypeFactory, org.apache.calcite.sql.validate.SqlValidator, org.apache.calcite.prepare.CalciteCatalogReader) throws org.apache.calcite.sql.parser.SqlParseException;
    Code:
       0: invokestatic  #46                 // Method io/substrait/proto/Plan.newBuilder:()Lio/substrait/proto/Plan$Builder;
       3: astore        5
       5: new           #52                 // class io/substrait/extension/ExtensionCollector
       8: dup
       9: invokespecial #54                 // Method io/substrait/extension/ExtensionCollector."<init>":()V
      12: astore        6
      14: new           #57                 // class io/substrait/relation/RelProtoConverter
      17: dup
      18: aload         6
      20: invokespecial #59                 // Method io/substrait/relation/RelProtoConverter."<init>":(Lio/substrait/extension/ExtensionCollector;)V
      23: astore        7
      25: aload_0
      26: aload_1
      27: aload_3
      28: aload         4
      30: invokevirtual #42                 // Method sqlToRelNode:(Ljava/lang/String;Lorg/apache/calcite/sql/validate/SqlValidator;Lorg/apache/calcite/prepare/CalciteCatalogReader;)Ljava/util/List;
      33: aload_0
      34: aload         5
      36: aload         7
      38: invokedynamic #62,  0             // InvokeDynamic #0:accept:(Lio/substrait/isthmus/SqlToSubstrait;Lio/substrait/proto/Plan$Builder;Lio/substrait/relation/RelProtoConverter;)Ljava/util/function/Consumer;
      43: invokeinterface #66,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      48: aload         6
      50: aload         5
      52: invokevirtual #72                 // Method io/substrait/extension/ExtensionCollector.addExtensionsToPlan:(Lio/substrait/proto/Plan$Builder;)V
      55: aload         5
      57: invokevirtual #76                 // Method io/substrait/proto/Plan$Builder.build:()Lio/substrait/proto/Plan;
      60: areturn

  private java.util.List<org.apache.calcite.rel.RelRoot> sqlToRelNode(java.lang.String, org.apache.calcite.sql.validate.SqlValidator, org.apache.calcite.prepare.CalciteCatalogReader) throws org.apache.calcite.sql.parser.SqlParseException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #82                 // Field parserConfig:Lorg/apache/calcite/sql/parser/SqlParser$Config;
       5: invokestatic  #86                 // Method org/apache/calcite/sql/parser/SqlParser.create:(Ljava/lang/String;Lorg/apache/calcite/sql/parser/SqlParser$Config;)Lorg/apache/calcite/sql/parser/SqlParser;
       8: astore        4
      10: aload         4
      12: invokevirtual #92                 // Method org/apache/calcite/sql/parser/SqlParser.parseStmtList:()Lorg/apache/calcite/sql/SqlNodeList;
      15: astore        5
      17: aload_0
      18: getfield      #96                 // Field featureBoard:Lio/substrait/isthmus/FeatureBoard;
      21: invokevirtual #100                // Method io/substrait/isthmus/FeatureBoard.allowsSqlBatch:()Z
      24: ifne          50
      27: aload         5
      29: invokevirtual #106                // Method org/apache/calcite/sql/SqlNodeList.size:()I
      32: iconst_1
      33: if_icmple     50
      36: new           #112                // class java/lang/UnsupportedOperationException
      39: dup
      40: aload_1
      41: invokedynamic #114,  0            // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      46: invokespecial #118                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: aload_0
      51: aload_2
      52: aload_3
      53: invokevirtual #121                // Method createSqlToRelConverter:(Lorg/apache/calcite/sql/validate/SqlValidator;Lorg/apache/calcite/prepare/CalciteCatalogReader;)Lorg/apache/calcite/sql2rel/SqlToRelConverter;
      56: astore        6
      58: aload         5
      60: invokevirtual #125                // Method org/apache/calcite/sql/SqlNodeList.stream:()Ljava/util/stream/Stream;
      63: aload         6
      65: invokedynamic #129,  0            // InvokeDynamic #2:apply:(Lorg/apache/calcite/sql2rel/SqlToRelConverter;)Ljava/util/function/Function;
      70: invokeinterface #133,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      75: invokestatic  #139                // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      78: invokeinterface #145,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      83: checkcast     #67                 // class java/util/List
      86: astore        7
      88: aload         7
      90: areturn

  org.apache.calcite.sql2rel.SqlToRelConverter createSqlToRelConverter(org.apache.calcite.sql.validate.SqlValidator, org.apache.calcite.prepare.CalciteCatalogReader);
    Code:
       0: new           #149                // class org/apache/calcite/sql2rel/SqlToRelConverter
       3: dup
       4: aconst_null
       5: aload_1
       6: aload_2
       7: aload_0
       8: getfield      #151                // Field relOptCluster:Lorg/apache/calcite/plan/RelOptCluster;
      11: getstatic     #155                // Field org/apache/calcite/sql2rel/StandardConvertletTable.INSTANCE:Lorg/apache/calcite/sql2rel/StandardConvertletTable;
      14: aload_0
      15: getfield      #161                // Field converterConfig:Lorg/apache/calcite/sql2rel/SqlToRelConverter$Config;
      18: invokespecial #165                // Method org/apache/calcite/sql2rel/SqlToRelConverter."<init>":(Lorg/apache/calcite/plan/RelOptTable$ViewExpander;Lorg/apache/calcite/sql/validate/SqlValidator;Lorg/apache/calcite/prepare/Prepare$CatalogReader;Lorg/apache/calcite/plan/RelOptCluster;Lorg/apache/calcite/sql2rel/SqlRexConvertletTable;Lorg/apache/calcite/sql2rel/SqlToRelConverter$Config;)V
      21: astore_3
      22: aload_3
      23: areturn

  static org.apache.calcite.rel.RelRoot getBestExpRelRoot(org.apache.calcite.sql2rel.SqlToRelConverter, org.apache.calcite.sql.SqlNode);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: iconst_1
       4: invokevirtual #168                // Method org/apache/calcite/sql2rel/SqlToRelConverter.convertQuery:(Lorg/apache/calcite/sql/SqlNode;ZZ)Lorg/apache/calcite/rel/RelRoot;
       7: astore_2
       8: invokestatic  #172                // Method org/apache/calcite/plan/hep/HepProgram.builder:()Lorg/apache/calcite/plan/hep/HepProgramBuilder;
      11: invokevirtual #178                // Method org/apache/calcite/plan/hep/HepProgramBuilder.build:()Lorg/apache/calcite/plan/hep/HepProgram;
      14: astore_3
      15: new           #183                // class org/apache/calcite/plan/hep/HepPlanner
      18: dup
      19: aload_3
      20: invokespecial #185                // Method org/apache/calcite/plan/hep/HepPlanner."<init>":(Lorg/apache/calcite/plan/hep/HepProgram;)V
      23: astore        4
      25: aload         4
      27: aload_2
      28: getfield      #188                // Field org/apache/calcite/rel/RelRoot.rel:Lorg/apache/calcite/rel/RelNode;
      31: invokevirtual #194                // Method org/apache/calcite/plan/hep/HepPlanner.setRoot:(Lorg/apache/calcite/rel/RelNode;)V
      34: aload_2
      35: aload         4
      37: invokevirtual #198                // Method org/apache/calcite/plan/hep/HepPlanner.findBestExp:()Lorg/apache/calcite/rel/RelNode;
      40: invokevirtual #202                // Method org/apache/calcite/rel/RelRoot.withRel:(Lorg/apache/calcite/rel/RelNode;)Lorg/apache/calcite/rel/RelRoot;
      43: astore_2
      44: aload_2
      45: areturn

  private static org.apache.calcite.rel.RelRoot lambda$sqlToRelNode$1(org.apache.calcite.sql2rel.SqlToRelConverter, org.apache.calcite.sql.SqlNode);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #206                // Method getBestExpRelRoot:(Lorg/apache/calcite/sql2rel/SqlToRelConverter;Lorg/apache/calcite/sql/SqlNode;)Lorg/apache/calcite/rel/RelRoot;
       5: areturn

  private void lambda$executeInner$0(io.substrait.proto.Plan$Builder, io.substrait.relation.RelProtoConverter, org.apache.calcite.rel.RelRoot);
    Code:
       0: aload_1
       1: invokestatic  #210                // Method io/substrait/proto/PlanRel.newBuilder:()Lio/substrait/proto/PlanRel$Builder;
       4: invokestatic  #215                // Method io/substrait/proto/RelRoot.newBuilder:()Lio/substrait/proto/RelRoot$Builder;
       7: aload_3
       8: getstatic     #220                // Field EXTENSION_COLLECTION:Lio/substrait/extension/SimpleExtension$ExtensionCollection;
      11: aload_0
      12: getfield      #96                 // Field featureBoard:Lio/substrait/isthmus/FeatureBoard;
      15: invokestatic  #224                // Method io/substrait/isthmus/SubstraitRelVisitor.convert:(Lorg/apache/calcite/rel/RelRoot;Lio/substrait/extension/SimpleExtension$ExtensionCollection;Lio/substrait/isthmus/FeatureBoard;)Lio/substrait/relation/Rel;
      18: aload_2
      19: invokeinterface #230,  2          // InterfaceMethod io/substrait/relation/Rel.accept:(Lio/substrait/relation/RelVisitor;)Ljava/lang/Object;
      24: checkcast     #235                // class io/substrait/proto/Rel
      27: invokevirtual #237                // Method io/substrait/proto/RelRoot$Builder.setInput:(Lio/substrait/proto/Rel;)Lio/substrait/proto/RelRoot$Builder;
      30: getstatic     #243                // Field io/substrait/isthmus/TypeConverter.DEFAULT:Lio/substrait/isthmus/TypeConverter;
      33: aload_3
      34: getfield      #249                // Field org/apache/calcite/rel/RelRoot.validatedRowType:Lorg/apache/calcite/rel/type/RelDataType;
      37: invokevirtual #253                // Method io/substrait/isthmus/TypeConverter.toNamedStruct:(Lorg/apache/calcite/rel/type/RelDataType;)Lio/substrait/type/NamedStruct;
      40: invokeinterface #257,  1          // InterfaceMethod io/substrait/type/NamedStruct.names:()Ljava/util/List;
      45: invokevirtual #263                // Method io/substrait/proto/RelRoot$Builder.addAllNames:(Ljava/lang/Iterable;)Lio/substrait/proto/RelRoot$Builder;
      48: invokevirtual #267                // Method io/substrait/proto/PlanRel$Builder.setRoot:(Lio/substrait/proto/RelRoot$Builder;)Lio/substrait/proto/PlanRel$Builder;
      51: invokevirtual #272                // Method io/substrait/proto/Plan$Builder.addRelations:(Lio/substrait/proto/PlanRel$Builder;)Lio/substrait/proto/Plan$Builder;
      54: pop
      55: return
}
