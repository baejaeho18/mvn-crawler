Compiled from "ImmutableFeatureBoard.java"
final class io.substrait.isthmus.ImmutableFeatureBoard$InitShim {
  private byte allowsSqlBatchBuildStage;

  private boolean allowsSqlBatch;

  private byte sqlConformanceModeBuildStage;

  private org.apache.calcite.sql.validate.SqlConformance sqlConformanceMode;

  private byte crossJoinPolicyBuildStage;

  private io.substrait.isthmus.SubstraitRelVisitor$CrossJoinPolicy crossJoinPolicy;

  final io.substrait.isthmus.ImmutableFeatureBoard this$0;

  private io.substrait.isthmus.ImmutableFeatureBoard$InitShim(io.substrait.isthmus.ImmutableFeatureBoard);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field this$0:Lio/substrait/isthmus/ImmutableFeatureBoard;
       5: aload_0
       6: invokespecial #9                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: iconst_0
      11: putfield      #15                 // Field allowsSqlBatchBuildStage:B
      14: aload_0
      15: iconst_0
      16: putfield      #19                 // Field sqlConformanceModeBuildStage:B
      19: aload_0
      20: iconst_0
      21: putfield      #22                 // Field crossJoinPolicyBuildStage:B
      24: return

  boolean allowsSqlBatch();
    Code:
       0: aload_0
       1: getfield      #15                 // Field allowsSqlBatchBuildStage:B
       4: iconst_m1
       5: if_icmpne     20
       8: new           #25                 // class java/lang/IllegalStateException
      11: dup
      12: aload_0
      13: invokevirtual #27                 // Method formatInitCycleMessage:()Ljava/lang/String;
      16: invokespecial #31                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #15                 // Field allowsSqlBatchBuildStage:B
      24: ifne          48
      27: aload_0
      28: iconst_m1
      29: putfield      #15                 // Field allowsSqlBatchBuildStage:B
      32: aload_0
      33: aload_0
      34: getfield      #3                  // Field this$0:Lio/substrait/isthmus/ImmutableFeatureBoard;
      37: invokestatic  #34                 // Method io/substrait/isthmus/ImmutableFeatureBoard.access$001:(Lio/substrait/isthmus/ImmutableFeatureBoard;)Z
      40: putfield      #38                 // Field allowsSqlBatch:Z
      43: aload_0
      44: iconst_1
      45: putfield      #15                 // Field allowsSqlBatchBuildStage:B
      48: aload_0
      49: getfield      #38                 // Field allowsSqlBatch:Z
      52: ireturn

  void allowsSqlBatch(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #38                 // Field allowsSqlBatch:Z
       5: aload_0
       6: iconst_1
       7: putfield      #15                 // Field allowsSqlBatchBuildStage:B
      10: return

  org.apache.calcite.sql.validate.SqlConformance sqlConformanceMode();
    Code:
       0: aload_0
       1: getfield      #19                 // Field sqlConformanceModeBuildStage:B
       4: iconst_m1
       5: if_icmpne     20
       8: new           #25                 // class java/lang/IllegalStateException
      11: dup
      12: aload_0
      13: invokevirtual #27                 // Method formatInitCycleMessage:()Ljava/lang/String;
      16: invokespecial #31                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #19                 // Field sqlConformanceModeBuildStage:B
      24: ifne          56
      27: aload_0
      28: iconst_m1
      29: putfield      #19                 // Field sqlConformanceModeBuildStage:B
      32: aload_0
      33: aload_0
      34: getfield      #3                  // Field this$0:Lio/substrait/isthmus/ImmutableFeatureBoard;
      37: invokestatic  #42                 // Method io/substrait/isthmus/ImmutableFeatureBoard.access$101:(Lio/substrait/isthmus/ImmutableFeatureBoard;)Lorg/apache/calcite/sql/validate/SqlConformance;
      40: ldc           #46                 // String sqlConformanceMode
      42: invokestatic  #48                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      45: checkcast     #54                 // class org/apache/calcite/sql/validate/SqlConformance
      48: putfield      #56                 // Field sqlConformanceMode:Lorg/apache/calcite/sql/validate/SqlConformance;
      51: aload_0
      52: iconst_1
      53: putfield      #19                 // Field sqlConformanceModeBuildStage:B
      56: aload_0
      57: getfield      #56                 // Field sqlConformanceMode:Lorg/apache/calcite/sql/validate/SqlConformance;
      60: areturn

  void sqlConformanceMode(org.apache.calcite.sql.validate.SqlConformance);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #56                 // Field sqlConformanceMode:Lorg/apache/calcite/sql/validate/SqlConformance;
       5: aload_0
       6: iconst_1
       7: putfield      #19                 // Field sqlConformanceModeBuildStage:B
      10: return

  io.substrait.isthmus.SubstraitRelVisitor$CrossJoinPolicy crossJoinPolicy();
    Code:
       0: aload_0
       1: getfield      #22                 // Field crossJoinPolicyBuildStage:B
       4: iconst_m1
       5: if_icmpne     20
       8: new           #25                 // class java/lang/IllegalStateException
      11: dup
      12: aload_0
      13: invokevirtual #27                 // Method formatInitCycleMessage:()Ljava/lang/String;
      16: invokespecial #31                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #22                 // Field crossJoinPolicyBuildStage:B
      24: ifne          56
      27: aload_0
      28: iconst_m1
      29: putfield      #22                 // Field crossJoinPolicyBuildStage:B
      32: aload_0
      33: aload_0
      34: getfield      #3                  // Field this$0:Lio/substrait/isthmus/ImmutableFeatureBoard;
      37: invokestatic  #59                 // Method io/substrait/isthmus/ImmutableFeatureBoard.access$201:(Lio/substrait/isthmus/ImmutableFeatureBoard;)Lio/substrait/isthmus/SubstraitRelVisitor$CrossJoinPolicy;
      40: ldc           #63                 // String crossJoinPolicy
      42: invokestatic  #48                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      45: checkcast     #65                 // class io/substrait/isthmus/SubstraitRelVisitor$CrossJoinPolicy
      48: putfield      #67                 // Field crossJoinPolicy:Lio/substrait/isthmus/SubstraitRelVisitor$CrossJoinPolicy;
      51: aload_0
      52: iconst_1
      53: putfield      #22                 // Field crossJoinPolicyBuildStage:B
      56: aload_0
      57: getfield      #67                 // Field crossJoinPolicy:Lio/substrait/isthmus/SubstraitRelVisitor$CrossJoinPolicy;
      60: areturn

  void crossJoinPolicy(io.substrait.isthmus.SubstraitRelVisitor$CrossJoinPolicy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #67                 // Field crossJoinPolicy:Lio/substrait/isthmus/SubstraitRelVisitor$CrossJoinPolicy;
       5: aload_0
       6: iconst_1
       7: putfield      #22                 // Field crossJoinPolicyBuildStage:B
      10: return

  private java.lang.String formatInitCycleMessage();
    Code:
       0: new           #70                 // class java/util/ArrayList
       3: dup
       4: invokespecial #72                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #15                 // Field allowsSqlBatchBuildStage:B
      12: iconst_m1
      13: if_icmpne     25
      16: aload_1
      17: ldc           #73                 // String allowsSqlBatch
      19: invokeinterface #74,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      24: pop
      25: aload_0
      26: getfield      #19                 // Field sqlConformanceModeBuildStage:B
      29: iconst_m1
      30: if_icmpne     42
      33: aload_1
      34: ldc           #46                 // String sqlConformanceMode
      36: invokeinterface #74,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      41: pop
      42: aload_0
      43: getfield      #22                 // Field crossJoinPolicyBuildStage:B
      46: iconst_m1
      47: if_icmpne     59
      50: aload_1
      51: ldc           #63                 // String crossJoinPolicy
      53: invokeinterface #74,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      58: pop
      59: aload_1
      60: invokedynamic #80,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/util/List;)Ljava/lang/String;
      65: areturn
}
