Compiled from "Ack.scala"
public abstract class monix.execution.Ack implements scala.concurrent.Future<monix.execution.Ack>, scala.Serializable {
  public static scala.concurrent.Future AckExtensions(scala.concurrent.Future);
    Code:
       0: getstatic     #21                 // Field monix/execution/Ack$.MODULE$:Lmonix/execution/Ack$;
       3: aload_0
       4: invokevirtual #23                 // Method monix/execution/Ack$.AckExtensions:(Lscala/concurrent/Future;)Lscala/concurrent/Future;
       7: areturn

  public static monix.execution.Ack$Stop Cancel();
    Code:
       0: getstatic     #21                 // Field monix/execution/Ack$.MODULE$:Lmonix/execution/Ack$;
       3: invokevirtual #27                 // Method monix/execution/Ack$.Cancel:()Lmonix/execution/Ack$Stop;
       6: areturn

  public <U> void onSuccess(scala.PartialFunction<monix.execution.Ack, U>, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #34                 // Method scala/concurrent/Future$class.onSuccess:(Lscala/concurrent/Future;Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)V
       6: return

  public <U> void onFailure(scala.PartialFunction<java.lang.Throwable, U>, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #43                 // Method scala/concurrent/Future$class.onFailure:(Lscala/concurrent/Future;Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)V
       6: return

  public scala.concurrent.Future<java.lang.Throwable> failed();
    Code:
       0: aload_0
       1: invokestatic  #47                 // Method scala/concurrent/Future$class.failed:(Lscala/concurrent/Future;)Lscala/concurrent/Future;
       4: areturn

  public <U> void foreach(scala.Function1<monix.execution.Ack, U>, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #52                 // Method scala/concurrent/Future$class.foreach:(Lscala/concurrent/Future;Lscala/Function1;Lscala/concurrent/ExecutionContext;)V
       6: return

  public <S> scala.concurrent.Future<S> transform(scala.Function1<monix.execution.Ack, S>, scala.Function1<java.lang.Throwable, java.lang.Throwable>, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #59                 // Method scala/concurrent/Future$class.transform:(Lscala/concurrent/Future;Lscala/Function1;Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       7: areturn

  public <S> scala.concurrent.Future<S> map(scala.Function1<monix.execution.Ack, S>, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #65                 // Method scala/concurrent/Future$class.map:(Lscala/concurrent/Future;Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public <S> scala.concurrent.Future<S> flatMap(scala.Function1<monix.execution.Ack, scala.concurrent.Future<S>>, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #68                 // Method scala/concurrent/Future$class.flatMap:(Lscala/concurrent/Future;Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public scala.concurrent.Future<monix.execution.Ack> filter(scala.Function1<monix.execution.Ack, java.lang.Object>, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #71                 // Method scala/concurrent/Future$class.filter:(Lscala/concurrent/Future;Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public final scala.concurrent.Future<monix.execution.Ack> withFilter(scala.Function1<monix.execution.Ack, java.lang.Object>, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #75                 // Method scala/concurrent/Future$class.withFilter:(Lscala/concurrent/Future;Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public <S> scala.concurrent.Future<S> collect(scala.PartialFunction<monix.execution.Ack, S>, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #80                 // Method scala/concurrent/Future$class.collect:(Lscala/concurrent/Future;Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public <U> scala.concurrent.Future<U> recover(scala.PartialFunction<java.lang.Throwable, U>, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #83                 // Method scala/concurrent/Future$class.recover:(Lscala/concurrent/Future;Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public <U> scala.concurrent.Future<U> recoverWith(scala.PartialFunction<java.lang.Throwable, scala.concurrent.Future<U>>, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #86                 // Method scala/concurrent/Future$class.recoverWith:(Lscala/concurrent/Future;Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public <U> scala.concurrent.Future<scala.Tuple2<monix.execution.Ack, U>> zip(scala.concurrent.Future<U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #90                 // Method scala/concurrent/Future$class.zip:(Lscala/concurrent/Future;Lscala/concurrent/Future;)Lscala/concurrent/Future;
       5: areturn

  public <U> scala.concurrent.Future<U> fallbackTo(scala.concurrent.Future<U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #95                 // Method scala/concurrent/Future$class.fallbackTo:(Lscala/concurrent/Future;Lscala/concurrent/Future;)Lscala/concurrent/Future;
       5: areturn

  public <S> scala.concurrent.Future<S> mapTo(scala.reflect.ClassTag<S>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #100                // Method scala/concurrent/Future$class.mapTo:(Lscala/concurrent/Future;Lscala/reflect/ClassTag;)Lscala/concurrent/Future;
       5: areturn

  public <U> scala.concurrent.Future<monix.execution.Ack> andThen(scala.PartialFunction<scala.util.Try<monix.execution.Ack>, U>, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #105                // Method scala/concurrent/Future$class.andThen:(Lscala/concurrent/Future;Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public monix.execution.Ack();
    Code:
       0: aload_0
       1: invokespecial #109                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #113                // Method scala/concurrent/Future$class.$init$:(Lscala/concurrent/Future;)V
       8: return
}
