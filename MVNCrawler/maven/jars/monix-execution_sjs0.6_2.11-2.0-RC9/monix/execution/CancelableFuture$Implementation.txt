Compiled from "CancelableFuture.scala"
public final class monix.execution.CancelableFuture$Implementation<T> implements monix.execution.CancelableFuture<T> {
  private final scala.concurrent.Future<T> underlying;

  private final monix.execution.Cancelable cancelable;

  public scala.concurrent.Future monix$execution$CancelableFuture$$super$failed();
    Code:
       0: aload_0
       1: invokestatic  #21                 // Method scala/concurrent/Future$class.failed:(Lscala/concurrent/Future;)Lscala/concurrent/Future;
       4: areturn

  public scala.concurrent.Future monix$execution$CancelableFuture$$super$transform(scala.Function1, scala.Function1, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #29                 // Method scala/concurrent/Future$class.transform:(Lscala/concurrent/Future;Lscala/Function1;Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       7: areturn

  public scala.concurrent.Future monix$execution$CancelableFuture$$super$map(scala.Function1, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #40                 // Method scala/concurrent/Future$class.map:(Lscala/concurrent/Future;Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public scala.concurrent.Future monix$execution$CancelableFuture$$super$flatMap(scala.Function1, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #44                 // Method scala/concurrent/Future$class.flatMap:(Lscala/concurrent/Future;Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public scala.concurrent.Future monix$execution$CancelableFuture$$super$filter(scala.Function1, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #48                 // Method scala/concurrent/Future$class.filter:(Lscala/concurrent/Future;Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public scala.concurrent.Future monix$execution$CancelableFuture$$super$collect(scala.PartialFunction, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #55                 // Method scala/concurrent/Future$class.collect:(Lscala/concurrent/Future;Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public scala.concurrent.Future monix$execution$CancelableFuture$$super$recover(scala.PartialFunction, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #61                 // Method scala/concurrent/Future$class.recover:(Lscala/concurrent/Future;Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public scala.concurrent.Future monix$execution$CancelableFuture$$super$recoverWith(scala.PartialFunction, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #65                 // Method scala/concurrent/Future$class.recoverWith:(Lscala/concurrent/Future;Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public scala.concurrent.Future monix$execution$CancelableFuture$$super$zip(scala.concurrent.Future);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #70                 // Method scala/concurrent/Future$class.zip:(Lscala/concurrent/Future;Lscala/concurrent/Future;)Lscala/concurrent/Future;
       5: areturn

  public scala.concurrent.Future monix$execution$CancelableFuture$$super$fallbackTo(scala.concurrent.Future);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #75                 // Method scala/concurrent/Future$class.fallbackTo:(Lscala/concurrent/Future;Lscala/concurrent/Future;)Lscala/concurrent/Future;
       5: areturn

  public scala.concurrent.Future monix$execution$CancelableFuture$$super$mapTo(scala.reflect.ClassTag);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #81                 // Method scala/concurrent/Future$class.mapTo:(Lscala/concurrent/Future;Lscala/reflect/ClassTag;)Lscala/concurrent/Future;
       5: areturn

  public scala.concurrent.Future monix$execution$CancelableFuture$$super$andThen(scala.PartialFunction, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #87                 // Method scala/concurrent/Future$class.andThen:(Lscala/concurrent/Future;Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public <U> void onSuccess(scala.PartialFunction<T, U>, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #92                 // Method scala/concurrent/Future$class.onSuccess:(Lscala/concurrent/Future;Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)V
       6: return

  public <U> void onFailure(scala.PartialFunction<java.lang.Throwable, U>, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #95                 // Method scala/concurrent/Future$class.onFailure:(Lscala/concurrent/Future;Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)V
       6: return

  public <U> void foreach(scala.Function1<T, U>, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #100                // Method scala/concurrent/Future$class.foreach:(Lscala/concurrent/Future;Lscala/Function1;Lscala/concurrent/ExecutionContext;)V
       6: return

  public final scala.concurrent.Future<T> withFilter(scala.Function1<T, java.lang.Object>, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #103                // Method scala/concurrent/Future$class.withFilter:(Lscala/concurrent/Future;Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public <U> void onComplete(scala.Function1<scala.util.Try<T>, U>, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: getfield      #106                // Field underlying:Lscala/concurrent/Future;
       4: aload_1
       5: aload_2
       6: invokeinterface #110,  3          // InterfaceMethod scala/concurrent/Future.onComplete:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)V
      11: return

  public boolean isCompleted();
    Code:
       0: aload_0
       1: getfield      #106                // Field underlying:Lscala/concurrent/Future;
       4: invokeinterface #114,  1          // InterfaceMethod scala/concurrent/Future.isCompleted:()Z
       9: ireturn

  public scala.Option<scala.util.Try<T>> value();
    Code:
       0: aload_0
       1: getfield      #106                // Field underlying:Lscala/concurrent/Future;
       4: invokeinterface #118,  1          // InterfaceMethod scala/concurrent/Future.value:()Lscala/Option;
       9: areturn

  public T result(scala.concurrent.duration.Duration, scala.concurrent.CanAwait) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #106                // Field underlying:Lscala/concurrent/Future;
       4: aload_1
       5: aload_2
       6: invokeinterface #124,  3          // InterfaceMethod scala/concurrent/Future.result:(Lscala/concurrent/duration/Duration;Lscala/concurrent/CanAwait;)Ljava/lang/Object;
      11: areturn

  public monix.execution.CancelableFuture$Implementation<T> ready(scala.concurrent.duration.Duration, scala.concurrent.CanAwait) throws java.lang.InterruptedException, java.util.concurrent.TimeoutException;
    Code:
       0: aload_0
       1: getfield      #106                // Field underlying:Lscala/concurrent/Future;
       4: aload_1
       5: aload_2
       6: invokeinterface #137,  3          // InterfaceMethod scala/concurrent/Future.ready:(Lscala/concurrent/duration/Duration;Lscala/concurrent/CanAwait;)Lscala/concurrent/Awaitable;
      11: pop
      12: aload_0
      13: areturn

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #141                // Field cancelable:Lmonix/execution/Cancelable;
       4: invokeinterface #145,  1          // InterfaceMethod monix/execution/Cancelable.cancel:()V
       9: return

  public monix.execution.CancelableFuture<java.lang.Throwable> failed();
    Code:
       0: new           #2                  // class monix/execution/CancelableFuture$Implementation
       3: dup
       4: aload_0
       5: getfield      #106                // Field underlying:Lscala/concurrent/Future;
       8: invokeinterface #148,  1          // InterfaceMethod scala/concurrent/Future.failed:()Lscala/concurrent/Future;
      13: aload_0
      14: getfield      #141                // Field cancelable:Lmonix/execution/Cancelable;
      17: invokespecial #152                // Method "<init>":(Lscala/concurrent/Future;Lmonix/execution/Cancelable;)V
      20: areturn

  public <S> monix.execution.CancelableFuture<S> transform(scala.Function1<T, S>, scala.Function1<java.lang.Throwable, java.lang.Throwable>, scala.concurrent.ExecutionContext);
    Code:
       0: new           #2                  // class monix/execution/CancelableFuture$Implementation
       3: dup
       4: aload_0
       5: getfield      #106                // Field underlying:Lscala/concurrent/Future;
       8: aload_1
       9: aload_2
      10: aload_3
      11: invokeinterface #155,  4          // InterfaceMethod scala/concurrent/Future.transform:(Lscala/Function1;Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      16: aload_0
      17: getfield      #141                // Field cancelable:Lmonix/execution/Cancelable;
      20: invokespecial #152                // Method "<init>":(Lscala/concurrent/Future;Lmonix/execution/Cancelable;)V
      23: areturn

  public <S> monix.execution.CancelableFuture<S> map(scala.Function1<T, S>, scala.concurrent.ExecutionContext);
    Code:
       0: new           #2                  // class monix/execution/CancelableFuture$Implementation
       3: dup
       4: aload_0
       5: getfield      #106                // Field underlying:Lscala/concurrent/Future;
       8: aload_1
       9: aload_2
      10: invokeinterface #158,  3          // InterfaceMethod scala/concurrent/Future.map:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      15: aload_0
      16: getfield      #141                // Field cancelable:Lmonix/execution/Cancelable;
      19: invokespecial #152                // Method "<init>":(Lscala/concurrent/Future;Lmonix/execution/Cancelable;)V
      22: areturn

  public <S> monix.execution.CancelableFuture<S> flatMap(scala.Function1<T, scala.concurrent.Future<S>>, scala.concurrent.ExecutionContext);
    Code:
       0: new           #2                  // class monix/execution/CancelableFuture$Implementation
       3: dup
       4: aload_0
       5: getfield      #106                // Field underlying:Lscala/concurrent/Future;
       8: aload_1
       9: aload_2
      10: invokeinterface #160,  3          // InterfaceMethod scala/concurrent/Future.flatMap:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      15: aload_0
      16: getfield      #141                // Field cancelable:Lmonix/execution/Cancelable;
      19: invokespecial #152                // Method "<init>":(Lscala/concurrent/Future;Lmonix/execution/Cancelable;)V
      22: areturn

  public monix.execution.CancelableFuture<T> filter(scala.Function1<T, java.lang.Object>, scala.concurrent.ExecutionContext);
    Code:
       0: new           #2                  // class monix/execution/CancelableFuture$Implementation
       3: dup
       4: aload_0
       5: getfield      #106                // Field underlying:Lscala/concurrent/Future;
       8: aload_1
       9: aload_2
      10: invokeinterface #162,  3          // InterfaceMethod scala/concurrent/Future.filter:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      15: aload_0
      16: getfield      #141                // Field cancelable:Lmonix/execution/Cancelable;
      19: invokespecial #152                // Method "<init>":(Lscala/concurrent/Future;Lmonix/execution/Cancelable;)V
      22: areturn

  public <S> monix.execution.CancelableFuture<S> collect(scala.PartialFunction<T, S>, scala.concurrent.ExecutionContext);
    Code:
       0: new           #2                  // class monix/execution/CancelableFuture$Implementation
       3: dup
       4: aload_0
       5: getfield      #106                // Field underlying:Lscala/concurrent/Future;
       8: aload_1
       9: aload_2
      10: invokeinterface #165,  3          // InterfaceMethod scala/concurrent/Future.collect:(Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      15: aload_0
      16: getfield      #141                // Field cancelable:Lmonix/execution/Cancelable;
      19: invokespecial #152                // Method "<init>":(Lscala/concurrent/Future;Lmonix/execution/Cancelable;)V
      22: areturn

  public <U> monix.execution.CancelableFuture<U> recover(scala.PartialFunction<java.lang.Throwable, U>, scala.concurrent.ExecutionContext);
    Code:
       0: new           #2                  // class monix/execution/CancelableFuture$Implementation
       3: dup
       4: aload_0
       5: getfield      #106                // Field underlying:Lscala/concurrent/Future;
       8: aload_1
       9: aload_2
      10: invokeinterface #167,  3          // InterfaceMethod scala/concurrent/Future.recover:(Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      15: aload_0
      16: getfield      #141                // Field cancelable:Lmonix/execution/Cancelable;
      19: invokespecial #152                // Method "<init>":(Lscala/concurrent/Future;Lmonix/execution/Cancelable;)V
      22: areturn

  public <U> monix.execution.CancelableFuture<U> recoverWith(scala.PartialFunction<java.lang.Throwable, scala.concurrent.Future<U>>, scala.concurrent.ExecutionContext);
    Code:
       0: new           #2                  // class monix/execution/CancelableFuture$Implementation
       3: dup
       4: aload_0
       5: getfield      #106                // Field underlying:Lscala/concurrent/Future;
       8: aload_1
       9: aload_2
      10: invokeinterface #169,  3          // InterfaceMethod scala/concurrent/Future.recoverWith:(Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      15: aload_0
      16: getfield      #141                // Field cancelable:Lmonix/execution/Cancelable;
      19: invokespecial #152                // Method "<init>":(Lscala/concurrent/Future;Lmonix/execution/Cancelable;)V
      22: areturn

  public <U> monix.execution.CancelableFuture<scala.Tuple2<T, U>> zip(scala.concurrent.Future<U>);
    Code:
       0: new           #2                  // class monix/execution/CancelableFuture$Implementation
       3: dup
       4: aload_0
       5: getfield      #106                // Field underlying:Lscala/concurrent/Future;
       8: aload_1
       9: invokeinterface #172,  2          // InterfaceMethod scala/concurrent/Future.zip:(Lscala/concurrent/Future;)Lscala/concurrent/Future;
      14: aload_0
      15: getfield      #141                // Field cancelable:Lmonix/execution/Cancelable;
      18: invokespecial #152                // Method "<init>":(Lscala/concurrent/Future;Lmonix/execution/Cancelable;)V
      21: areturn

  public <U> monix.execution.CancelableFuture<U> fallbackTo(scala.concurrent.Future<U>);
    Code:
       0: new           #2                  // class monix/execution/CancelableFuture$Implementation
       3: dup
       4: aload_0
       5: getfield      #106                // Field underlying:Lscala/concurrent/Future;
       8: aload_1
       9: invokeinterface #174,  2          // InterfaceMethod scala/concurrent/Future.fallbackTo:(Lscala/concurrent/Future;)Lscala/concurrent/Future;
      14: aload_0
      15: getfield      #141                // Field cancelable:Lmonix/execution/Cancelable;
      18: invokespecial #152                // Method "<init>":(Lscala/concurrent/Future;Lmonix/execution/Cancelable;)V
      21: areturn

  public <S> monix.execution.CancelableFuture<S> mapTo(scala.reflect.ClassTag<S>);
    Code:
       0: new           #2                  // class monix/execution/CancelableFuture$Implementation
       3: dup
       4: aload_0
       5: getfield      #106                // Field underlying:Lscala/concurrent/Future;
       8: aload_1
       9: invokeinterface #177,  2          // InterfaceMethod scala/concurrent/Future.mapTo:(Lscala/reflect/ClassTag;)Lscala/concurrent/Future;
      14: aload_0
      15: getfield      #141                // Field cancelable:Lmonix/execution/Cancelable;
      18: invokespecial #152                // Method "<init>":(Lscala/concurrent/Future;Lmonix/execution/Cancelable;)V
      21: areturn

  public <U> monix.execution.CancelableFuture<T> andThen(scala.PartialFunction<scala.util.Try<T>, U>, scala.concurrent.ExecutionContext);
    Code:
       0: new           #2                  // class monix/execution/CancelableFuture$Implementation
       3: dup
       4: aload_0
       5: getfield      #106                // Field underlying:Lscala/concurrent/Future;
       8: aload_1
       9: aload_2
      10: invokeinterface #179,  3          // InterfaceMethod scala/concurrent/Future.andThen:(Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      15: aload_0
      16: getfield      #141                // Field cancelable:Lmonix/execution/Cancelable;
      19: invokespecial #152                // Method "<init>":(Lscala/concurrent/Future;Lmonix/execution/Cancelable;)V
      22: areturn

  public scala.concurrent.Future andThen(scala.PartialFunction, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #181                // Method andThen:(Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lmonix/execution/CancelableFuture;
       6: areturn

  public scala.concurrent.Future mapTo(scala.reflect.ClassTag);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #183                // Method mapTo:(Lscala/reflect/ClassTag;)Lmonix/execution/CancelableFuture;
       5: areturn

  public scala.concurrent.Future fallbackTo(scala.concurrent.Future);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #185                // Method fallbackTo:(Lscala/concurrent/Future;)Lmonix/execution/CancelableFuture;
       5: areturn

  public scala.concurrent.Future zip(scala.concurrent.Future);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #187                // Method zip:(Lscala/concurrent/Future;)Lmonix/execution/CancelableFuture;
       5: areturn

  public scala.concurrent.Future recoverWith(scala.PartialFunction, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #189                // Method recoverWith:(Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lmonix/execution/CancelableFuture;
       6: areturn

  public scala.concurrent.Future recover(scala.PartialFunction, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #191                // Method recover:(Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lmonix/execution/CancelableFuture;
       6: areturn

  public scala.concurrent.Future collect(scala.PartialFunction, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #193                // Method collect:(Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lmonix/execution/CancelableFuture;
       6: areturn

  public scala.concurrent.Future filter(scala.Function1, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #195                // Method filter:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lmonix/execution/CancelableFuture;
       6: areturn

  public scala.concurrent.Future flatMap(scala.Function1, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #197                // Method flatMap:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lmonix/execution/CancelableFuture;
       6: areturn

  public scala.concurrent.Future map(scala.Function1, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #199                // Method map:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lmonix/execution/CancelableFuture;
       6: areturn

  public scala.concurrent.Future transform(scala.Function1, scala.Function1, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #201                // Method transform:(Lscala/Function1;Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lmonix/execution/CancelableFuture;
       7: areturn

  public scala.concurrent.Future failed();
    Code:
       0: aload_0
       1: invokevirtual #203                // Method failed:()Lmonix/execution/CancelableFuture;
       4: areturn

  public scala.concurrent.Awaitable ready(scala.concurrent.duration.Duration, scala.concurrent.CanAwait);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #205                // Method ready:(Lscala/concurrent/duration/Duration;Lscala/concurrent/CanAwait;)Lmonix/execution/CancelableFuture$Implementation;
       6: areturn

  public monix.execution.CancelableFuture$Implementation(scala.concurrent.Future<T>, monix.execution.Cancelable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #106                // Field underlying:Lscala/concurrent/Future;
       5: aload_0
       6: aload_2
       7: putfield      #141                // Field cancelable:Lmonix/execution/Cancelable;
      10: aload_0
      11: invokespecial #207                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #211                // Method scala/concurrent/Future$class.$init$:(Lscala/concurrent/Future;)V
      18: aload_0
      19: invokestatic  #216                // Method monix/execution/CancelableFuture$class.$init$:(Lmonix/execution/CancelableFuture;)V
      22: return
}
