Compiled from "AtomicLong.scala"
public final class monix.execution.atomic.AtomicLong extends monix.execution.atomic.AtomicNumber<java.lang.Object> {
  private long ref;

  public static monix.execution.atomic.AtomicLong withPadding(long, monix.execution.atomic.PaddingStrategy);
    Code:
       0: getstatic     #17                 // Field monix/execution/atomic/AtomicLong$.MODULE$:Lmonix/execution/atomic/AtomicLong$;
       3: lload_0
       4: aload_2
       5: invokevirtual #19                 // Method monix/execution/atomic/AtomicLong$.withPadding:(JLmonix/execution/atomic/PaddingStrategy;)Lmonix/execution/atomic/AtomicLong;
       8: areturn

  public long getAndSet(long);
    Code:
       0: aload_0
       1: getfield      #25                 // Field ref:J
       4: lstore_3
       5: aload_0
       6: lload_1
       7: putfield      #25                 // Field ref:J
      10: lload_3
      11: lreturn

  public boolean compareAndSet(long, long);
    Code:
       0: aload_0
       1: getfield      #25                 // Field ref:J
       4: lload_1
       5: lcmp
       6: ifne          18
       9: aload_0
      10: lload_3
      11: putfield      #25                 // Field ref:J
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public void set(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #25                 // Field ref:J
       5: return

  public long get();
    Code:
       0: aload_0
       1: getfield      #25                 // Field ref:J
       4: lreturn

  public long getAndSubtract(long);
    Code:
       0: aload_0
       1: getfield      #25                 // Field ref:J
       4: lstore_3
       5: aload_0
       6: aload_0
       7: getfield      #25                 // Field ref:J
      10: lload_1
      11: lsub
      12: putfield      #25                 // Field ref:J
      15: lload_3
      16: lreturn

  public long subtractAndGet(long);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #25                 // Field ref:J
       5: lload_1
       6: lsub
       7: putfield      #25                 // Field ref:J
      10: aload_0
      11: getfield      #25                 // Field ref:J
      14: lreturn

  public void subtract(long);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #25                 // Field ref:J
       5: lload_1
       6: lsub
       7: putfield      #25                 // Field ref:J
      10: return

  public long getAndAdd(long);
    Code:
       0: aload_0
       1: getfield      #25                 // Field ref:J
       4: lstore_3
       5: aload_0
       6: aload_0
       7: getfield      #25                 // Field ref:J
      10: lload_1
      11: ladd
      12: putfield      #25                 // Field ref:J
      15: lload_3
      16: lreturn

  public long getAndIncrement(int);
    Code:
       0: aload_0
       1: getfield      #25                 // Field ref:J
       4: lstore_2
       5: aload_0
       6: aload_0
       7: getfield      #25                 // Field ref:J
      10: iload_1
      11: i2l
      12: ladd
      13: putfield      #25                 // Field ref:J
      16: lload_2
      17: lreturn

  public int getAndIncrement$default$1();
    Code:
       0: iconst_1
       1: ireturn

  public long addAndGet(long);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #25                 // Field ref:J
       5: lload_1
       6: ladd
       7: putfield      #25                 // Field ref:J
      10: aload_0
      11: getfield      #25                 // Field ref:J
      14: lreturn

  public long incrementAndGet(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #25                 // Field ref:J
       5: iload_1
       6: i2l
       7: ladd
       8: putfield      #25                 // Field ref:J
      11: aload_0
      12: getfield      #25                 // Field ref:J
      15: lreturn

  public void add(long);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #25                 // Field ref:J
       5: lload_1
       6: ladd
       7: putfield      #25                 // Field ref:J
      10: return

  public void increment(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #25                 // Field ref:J
       5: iload_1
       6: i2l
       7: ladd
       8: putfield      #25                 // Field ref:J
      11: return

  public int incrementAndGet$default$1();
    Code:
       0: iconst_1
       1: ireturn

  public int increment$default$1();
    Code:
       0: iconst_1
       1: ireturn

  public void decrement(int);
    Code:
       0: aload_0
       1: iload_1
       2: ineg
       3: invokevirtual #57                 // Method increment:(I)V
       6: return

  public int decrement$default$1();
    Code:
       0: iconst_1
       1: ireturn

  public long decrementAndGet(int);
    Code:
       0: aload_0
       1: iload_1
       2: ineg
       3: invokevirtual #61                 // Method incrementAndGet:(I)J
       6: lreturn

  public int decrementAndGet$default$1();
    Code:
       0: iconst_1
       1: ireturn

  public long getAndDecrement(int);
    Code:
       0: aload_0
       1: iload_1
       2: ineg
       3: invokevirtual #65                 // Method getAndIncrement:(I)J
       6: lreturn

  public int getAndDecrement$default$1();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.Object getAndDecrement(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #69                 // Method getAndDecrement:(I)J
       5: invokestatic  #75                 // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
       8: areturn

  public java.lang.Object decrementAndGet(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #77                 // Method decrementAndGet:(I)J
       5: invokestatic  #75                 // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
       8: areturn

  public void add(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #82                 // Method scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
       5: invokevirtual #84                 // Method add:(J)V
       8: return

  public java.lang.Object incrementAndGet(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #61                 // Method incrementAndGet:(I)J
       5: invokestatic  #75                 // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
       8: areturn

  public java.lang.Object addAndGet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #82                 // Method scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
       5: invokevirtual #88                 // Method addAndGet:(J)J
       8: invokestatic  #75                 // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
      11: areturn

  public java.lang.Object getAndIncrement(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #65                 // Method getAndIncrement:(I)J
       5: invokestatic  #75                 // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
       8: areturn

  public java.lang.Object getAndAdd(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #82                 // Method scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
       5: invokevirtual #90                 // Method getAndAdd:(J)J
       8: invokestatic  #75                 // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
      11: areturn

  public void subtract(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #82                 // Method scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
       5: invokevirtual #92                 // Method subtract:(J)V
       8: return

  public java.lang.Object subtractAndGet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #82                 // Method scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
       5: invokevirtual #94                 // Method subtractAndGet:(J)J
       8: invokestatic  #75                 // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
      11: areturn

  public java.lang.Object getAndSubtract(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #82                 // Method scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
       5: invokevirtual #96                 // Method getAndSubtract:(J)J
       8: invokestatic  #75                 // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
      11: areturn

  public java.lang.Object get();
    Code:
       0: aload_0
       1: invokevirtual #99                 // Method get:()J
       4: invokestatic  #75                 // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
       7: areturn

  public void set(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #82                 // Method scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
       5: invokevirtual #101                // Method set:(J)V
       8: return

  public boolean compareAndSet(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #82                 // Method scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
       5: aload_2
       6: invokestatic  #82                 // Method scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
       9: invokevirtual #104                // Method compareAndSet:(JJ)Z
      12: ireturn

  public java.lang.Object getAndSet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #82                 // Method scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
       5: invokevirtual #106                // Method getAndSet:(J)J
       8: invokestatic  #75                 // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
      11: areturn

  public monix.execution.atomic.AtomicLong(long);
    Code:
       0: aload_0
       1: invokespecial #110                // Method monix/execution/atomic/AtomicNumber."<init>":()V
       4: aload_0
       5: lload_1
       6: putfield      #25                 // Field ref:J
       9: return
}
