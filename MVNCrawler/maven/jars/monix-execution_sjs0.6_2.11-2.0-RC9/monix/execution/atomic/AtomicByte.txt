Compiled from "AtomicByte.scala"
public final class monix.execution.atomic.AtomicByte extends monix.execution.atomic.AtomicNumber<java.lang.Object> {
  private byte ref;

  private final int mask;

  public static monix.execution.atomic.AtomicByte withPadding(byte, monix.execution.atomic.PaddingStrategy);
    Code:
       0: getstatic     #17                 // Field monix/execution/atomic/AtomicByte$.MODULE$:Lmonix/execution/atomic/AtomicByte$;
       3: iload_0
       4: aload_1
       5: invokevirtual #19                 // Method monix/execution/atomic/AtomicByte$.withPadding:(BLmonix/execution/atomic/PaddingStrategy;)Lmonix/execution/atomic/AtomicByte;
       8: areturn

  public byte getAndSet(byte);
    Code:
       0: aload_0
       1: getfield      #27                 // Field ref:B
       4: istore_2
       5: aload_0
       6: iload_1
       7: putfield      #27                 // Field ref:B
      10: iload_2
      11: ireturn

  public boolean compareAndSet(byte, byte);
    Code:
       0: aload_0
       1: getfield      #27                 // Field ref:B
       4: iload_1
       5: if_icmpne     17
       8: aload_0
       9: iload_2
      10: putfield      #27                 // Field ref:B
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  public byte get();
    Code:
       0: aload_0
       1: getfield      #27                 // Field ref:B
       4: ireturn

  public void set(byte);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #27                 // Field ref:B
       5: return

  public byte getAndSubtract(byte);
    Code:
       0: aload_0
       1: getfield      #27                 // Field ref:B
       4: istore_2
       5: aload_0
       6: aload_0
       7: getfield      #27                 // Field ref:B
      10: iload_1
      11: isub
      12: aload_0
      13: getfield      #41                 // Field mask:I
      16: iand
      17: i2b
      18: putfield      #27                 // Field ref:B
      21: iload_2
      22: ireturn

  public byte subtractAndGet(byte);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #27                 // Field ref:B
       5: iload_1
       6: isub
       7: aload_0
       8: getfield      #41                 // Field mask:I
      11: iand
      12: i2b
      13: putfield      #27                 // Field ref:B
      16: aload_0
      17: getfield      #27                 // Field ref:B
      20: ireturn

  public void subtract(byte);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #27                 // Field ref:B
       5: iload_1
       6: isub
       7: aload_0
       8: getfield      #41                 // Field mask:I
      11: iand
      12: i2b
      13: putfield      #27                 // Field ref:B
      16: return

  public byte getAndAdd(byte);
    Code:
       0: aload_0
       1: getfield      #27                 // Field ref:B
       4: istore_2
       5: aload_0
       6: aload_0
       7: getfield      #27                 // Field ref:B
      10: iload_1
      11: iadd
      12: aload_0
      13: getfield      #41                 // Field mask:I
      16: iand
      17: i2b
      18: putfield      #27                 // Field ref:B
      21: iload_2
      22: ireturn

  public byte getAndIncrement(int);
    Code:
       0: aload_0
       1: getfield      #27                 // Field ref:B
       4: istore_2
       5: aload_0
       6: aload_0
       7: getfield      #27                 // Field ref:B
      10: iload_1
      11: iadd
      12: aload_0
      13: getfield      #41                 // Field mask:I
      16: iand
      17: i2b
      18: putfield      #27                 // Field ref:B
      21: iload_2
      22: ireturn

  public int getAndIncrement$default$1();
    Code:
       0: iconst_1
       1: ireturn

  public byte addAndGet(byte);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #27                 // Field ref:B
       5: iload_1
       6: iadd
       7: aload_0
       8: getfield      #41                 // Field mask:I
      11: iand
      12: i2b
      13: putfield      #27                 // Field ref:B
      16: aload_0
      17: getfield      #27                 // Field ref:B
      20: ireturn

  public byte incrementAndGet(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #27                 // Field ref:B
       5: iload_1
       6: iadd
       7: aload_0
       8: getfield      #41                 // Field mask:I
      11: iand
      12: i2b
      13: putfield      #27                 // Field ref:B
      16: aload_0
      17: getfield      #27                 // Field ref:B
      20: ireturn

  public void add(byte);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #27                 // Field ref:B
       5: iload_1
       6: iadd
       7: aload_0
       8: getfield      #41                 // Field mask:I
      11: iand
      12: i2b
      13: putfield      #27                 // Field ref:B
      16: return

  public void increment(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #27                 // Field ref:B
       5: iload_1
       6: iadd
       7: aload_0
       8: getfield      #41                 // Field mask:I
      11: iand
      12: i2b
      13: putfield      #27                 // Field ref:B
      16: return

  public int incrementAndGet$default$1();
    Code:
       0: iconst_1
       1: ireturn

  public int increment$default$1();
    Code:
       0: iconst_1
       1: ireturn

  public void decrement(int);
    Code:
       0: aload_0
       1: iload_1
       2: ineg
       3: invokevirtual #60                 // Method increment:(I)V
       6: return

  public int decrement$default$1();
    Code:
       0: iconst_1
       1: ireturn

  public byte decrementAndGet(int);
    Code:
       0: aload_0
       1: iload_1
       2: ineg
       3: invokevirtual #64                 // Method incrementAndGet:(I)B
       6: ireturn

  public int decrementAndGet$default$1();
    Code:
       0: iconst_1
       1: ireturn

  public byte getAndDecrement(int);
    Code:
       0: aload_0
       1: iload_1
       2: ineg
       3: invokevirtual #68                 // Method getAndIncrement:(I)B
       6: ireturn

  public int getAndDecrement$default$1();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.Object getAndDecrement(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #72                 // Method getAndDecrement:(I)B
       5: invokestatic  #78                 // Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
       8: areturn

  public java.lang.Object decrementAndGet(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #80                 // Method decrementAndGet:(I)B
       5: invokestatic  #78                 // Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
       8: areturn

  public void add(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #85                 // Method scala/runtime/BoxesRunTime.unboxToByte:(Ljava/lang/Object;)B
       5: invokevirtual #87                 // Method add:(B)V
       8: return

  public java.lang.Object incrementAndGet(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #64                 // Method incrementAndGet:(I)B
       5: invokestatic  #78                 // Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
       8: areturn

  public java.lang.Object addAndGet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #85                 // Method scala/runtime/BoxesRunTime.unboxToByte:(Ljava/lang/Object;)B
       5: invokevirtual #91                 // Method addAndGet:(B)B
       8: invokestatic  #78                 // Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
      11: areturn

  public java.lang.Object getAndIncrement(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #68                 // Method getAndIncrement:(I)B
       5: invokestatic  #78                 // Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
       8: areturn

  public java.lang.Object getAndAdd(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #85                 // Method scala/runtime/BoxesRunTime.unboxToByte:(Ljava/lang/Object;)B
       5: invokevirtual #93                 // Method getAndAdd:(B)B
       8: invokestatic  #78                 // Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
      11: areturn

  public void subtract(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #85                 // Method scala/runtime/BoxesRunTime.unboxToByte:(Ljava/lang/Object;)B
       5: invokevirtual #95                 // Method subtract:(B)V
       8: return

  public java.lang.Object subtractAndGet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #85                 // Method scala/runtime/BoxesRunTime.unboxToByte:(Ljava/lang/Object;)B
       5: invokevirtual #97                 // Method subtractAndGet:(B)B
       8: invokestatic  #78                 // Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
      11: areturn

  public java.lang.Object getAndSubtract(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #85                 // Method scala/runtime/BoxesRunTime.unboxToByte:(Ljava/lang/Object;)B
       5: invokevirtual #99                 // Method getAndSubtract:(B)B
       8: invokestatic  #78                 // Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
      11: areturn

  public void set(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #85                 // Method scala/runtime/BoxesRunTime.unboxToByte:(Ljava/lang/Object;)B
       5: invokevirtual #101                // Method set:(B)V
       8: return

  public java.lang.Object get();
    Code:
       0: aload_0
       1: invokevirtual #104                // Method get:()B
       4: invokestatic  #78                 // Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
       7: areturn

  public boolean compareAndSet(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #85                 // Method scala/runtime/BoxesRunTime.unboxToByte:(Ljava/lang/Object;)B
       5: aload_2
       6: invokestatic  #85                 // Method scala/runtime/BoxesRunTime.unboxToByte:(Ljava/lang/Object;)B
       9: invokevirtual #107                // Method compareAndSet:(BB)Z
      12: ireturn

  public java.lang.Object getAndSet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #85                 // Method scala/runtime/BoxesRunTime.unboxToByte:(Ljava/lang/Object;)B
       5: invokevirtual #109                // Method getAndSet:(B)B
       8: invokestatic  #78                 // Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
      11: areturn

  public monix.execution.atomic.AtomicByte(byte);
    Code:
       0: aload_0
       1: invokespecial #113                // Method monix/execution/atomic/AtomicNumber."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #27                 // Field ref:B
       9: aload_0
      10: sipush        255
      13: putfield      #41                 // Field mask:I
      16: return
}
