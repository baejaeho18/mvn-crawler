Compiled from "AtomicInt.scala"
public final class monix.execution.atomic.AtomicInt extends monix.execution.atomic.AtomicNumber<java.lang.Object> {
  private int ref;

  public static monix.execution.atomic.AtomicInt withPadding(int, monix.execution.atomic.PaddingStrategy);
    Code:
       0: getstatic     #17                 // Field monix/execution/atomic/AtomicInt$.MODULE$:Lmonix/execution/atomic/AtomicInt$;
       3: iload_0
       4: aload_1
       5: invokevirtual #19                 // Method monix/execution/atomic/AtomicInt$.withPadding:(ILmonix/execution/atomic/PaddingStrategy;)Lmonix/execution/atomic/AtomicInt;
       8: areturn

  public int getAndSet(int);
    Code:
       0: aload_0
       1: getfield      #25                 // Field ref:I
       4: istore_2
       5: aload_0
       6: iload_1
       7: putfield      #25                 // Field ref:I
      10: iload_2
      11: ireturn

  public boolean compareAndSet(int, int);
    Code:
       0: aload_0
       1: getfield      #25                 // Field ref:I
       4: iload_1
       5: if_icmpne     17
       8: aload_0
       9: iload_2
      10: putfield      #25                 // Field ref:I
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  public void set(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #25                 // Field ref:I
       5: return

  public int get();
    Code:
       0: aload_0
       1: getfield      #25                 // Field ref:I
       4: ireturn

  public int getAndSubtract(int);
    Code:
       0: aload_0
       1: getfield      #25                 // Field ref:I
       4: istore_2
       5: aload_0
       6: aload_0
       7: getfield      #25                 // Field ref:I
      10: iload_1
      11: isub
      12: putfield      #25                 // Field ref:I
      15: iload_2
      16: ireturn

  public int subtractAndGet(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #25                 // Field ref:I
       5: iload_1
       6: isub
       7: putfield      #25                 // Field ref:I
      10: aload_0
      11: getfield      #25                 // Field ref:I
      14: ireturn

  public void subtract(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #25                 // Field ref:I
       5: iload_1
       6: isub
       7: putfield      #25                 // Field ref:I
      10: return

  public int getAndAdd(int);
    Code:
       0: aload_0
       1: getfield      #25                 // Field ref:I
       4: istore_2
       5: aload_0
       6: aload_0
       7: getfield      #25                 // Field ref:I
      10: iload_1
      11: iadd
      12: putfield      #25                 // Field ref:I
      15: iload_2
      16: ireturn

  public int getAndIncrement(int);
    Code:
       0: aload_0
       1: getfield      #25                 // Field ref:I
       4: istore_2
       5: aload_0
       6: aload_0
       7: getfield      #25                 // Field ref:I
      10: iload_1
      11: iadd
      12: putfield      #25                 // Field ref:I
      15: iload_2
      16: ireturn

  public int getAndIncrement$default$1();
    Code:
       0: iconst_1
       1: ireturn

  public int addAndGet(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #25                 // Field ref:I
       5: iload_1
       6: iadd
       7: putfield      #25                 // Field ref:I
      10: aload_0
      11: getfield      #25                 // Field ref:I
      14: ireturn

  public int incrementAndGet(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #25                 // Field ref:I
       5: iload_1
       6: iadd
       7: putfield      #25                 // Field ref:I
      10: aload_0
      11: getfield      #25                 // Field ref:I
      14: ireturn

  public void add(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #25                 // Field ref:I
       5: iload_1
       6: iadd
       7: putfield      #25                 // Field ref:I
      10: return

  public void increment(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #25                 // Field ref:I
       5: iload_1
       6: iadd
       7: putfield      #25                 // Field ref:I
      10: return

  public int incrementAndGet$default$1();
    Code:
       0: iconst_1
       1: ireturn

  public int increment$default$1();
    Code:
       0: iconst_1
       1: ireturn

  public void decrement(int);
    Code:
       0: aload_0
       1: iload_1
       2: ineg
       3: invokevirtual #53                 // Method increment:(I)V
       6: return

  public int decrement$default$1();
    Code:
       0: iconst_1
       1: ireturn

  public int decrementAndGet(int);
    Code:
       0: aload_0
       1: iload_1
       2: ineg
       3: invokevirtual #57                 // Method incrementAndGet:(I)I
       6: ireturn

  public int decrementAndGet$default$1();
    Code:
       0: iconst_1
       1: ireturn

  public int getAndDecrement(int);
    Code:
       0: aload_0
       1: iload_1
       2: ineg
       3: invokevirtual #61                 // Method getAndIncrement:(I)I
       6: ireturn

  public int getAndDecrement$default$1();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.Object getAndDecrement(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #65                 // Method getAndDecrement:(I)I
       5: invokestatic  #71                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       8: areturn

  public java.lang.Object decrementAndGet(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #73                 // Method decrementAndGet:(I)I
       5: invokestatic  #71                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       8: areturn

  public void add(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #78                 // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       5: invokevirtual #80                 // Method add:(I)V
       8: return

  public java.lang.Object incrementAndGet(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #57                 // Method incrementAndGet:(I)I
       5: invokestatic  #71                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       8: areturn

  public java.lang.Object addAndGet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #78                 // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       5: invokevirtual #84                 // Method addAndGet:(I)I
       8: invokestatic  #71                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      11: areturn

  public java.lang.Object getAndIncrement(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #61                 // Method getAndIncrement:(I)I
       5: invokestatic  #71                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       8: areturn

  public java.lang.Object getAndAdd(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #78                 // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       5: invokevirtual #86                 // Method getAndAdd:(I)I
       8: invokestatic  #71                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      11: areturn

  public void subtract(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #78                 // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       5: invokevirtual #88                 // Method subtract:(I)V
       8: return

  public java.lang.Object subtractAndGet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #78                 // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       5: invokevirtual #90                 // Method subtractAndGet:(I)I
       8: invokestatic  #71                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      11: areturn

  public java.lang.Object getAndSubtract(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #78                 // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       5: invokevirtual #92                 // Method getAndSubtract:(I)I
       8: invokestatic  #71                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      11: areturn

  public java.lang.Object get();
    Code:
       0: aload_0
       1: invokevirtual #95                 // Method get:()I
       4: invokestatic  #71                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       7: areturn

  public void set(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #78                 // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       5: invokevirtual #97                 // Method set:(I)V
       8: return

  public boolean compareAndSet(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #78                 // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       5: aload_2
       6: invokestatic  #78                 // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       9: invokevirtual #100                // Method compareAndSet:(II)Z
      12: ireturn

  public java.lang.Object getAndSet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #78                 // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       5: invokevirtual #102                // Method getAndSet:(I)I
       8: invokestatic  #71                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      11: areturn

  public monix.execution.atomic.AtomicInt(int);
    Code:
       0: aload_0
       1: invokespecial #106                // Method monix/execution/atomic/AtomicNumber."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #25                 // Field ref:I
       9: return
}
