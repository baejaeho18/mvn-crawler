Compiled from "AtomicFloat.scala"
public final class monix.execution.atomic.AtomicFloat extends monix.execution.atomic.AtomicNumber<java.lang.Object> {
  private float ref;

  public static monix.execution.atomic.AtomicFloat withPadding(float, monix.execution.atomic.PaddingStrategy);
    Code:
       0: getstatic     #17                 // Field monix/execution/atomic/AtomicFloat$.MODULE$:Lmonix/execution/atomic/AtomicFloat$;
       3: fload_0
       4: aload_1
       5: invokevirtual #19                 // Method monix/execution/atomic/AtomicFloat$.withPadding:(FLmonix/execution/atomic/PaddingStrategy;)Lmonix/execution/atomic/AtomicFloat;
       8: areturn

  public float getAndSet(float);
    Code:
       0: aload_0
       1: getfield      #25                 // Field ref:F
       4: fstore_2
       5: aload_0
       6: fload_1
       7: putfield      #25                 // Field ref:F
      10: fload_2
      11: freturn

  public boolean compareAndSet(float, float);
    Code:
       0: aload_0
       1: getfield      #25                 // Field ref:F
       4: fload_1
       5: fcmpl
       6: ifne          18
       9: aload_0
      10: fload_2
      11: putfield      #25                 // Field ref:F
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public void set(float);
    Code:
       0: aload_0
       1: fload_1
       2: putfield      #25                 // Field ref:F
       5: return

  public float get();
    Code:
       0: aload_0
       1: getfield      #25                 // Field ref:F
       4: freturn

  public float getAndSubtract(float);
    Code:
       0: aload_0
       1: getfield      #25                 // Field ref:F
       4: fstore_2
       5: aload_0
       6: aload_0
       7: getfield      #25                 // Field ref:F
      10: fload_1
      11: fsub
      12: putfield      #25                 // Field ref:F
      15: fload_2
      16: freturn

  public float subtractAndGet(float);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #25                 // Field ref:F
       5: fload_1
       6: fsub
       7: putfield      #25                 // Field ref:F
      10: aload_0
      11: getfield      #25                 // Field ref:F
      14: freturn

  public void subtract(float);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #25                 // Field ref:F
       5: fload_1
       6: fsub
       7: putfield      #25                 // Field ref:F
      10: return

  public float getAndAdd(float);
    Code:
       0: aload_0
       1: getfield      #25                 // Field ref:F
       4: fstore_2
       5: aload_0
       6: aload_0
       7: getfield      #25                 // Field ref:F
      10: fload_1
      11: fadd
      12: putfield      #25                 // Field ref:F
      15: fload_2
      16: freturn

  public float getAndIncrement(int);
    Code:
       0: aload_0
       1: getfield      #25                 // Field ref:F
       4: fstore_2
       5: aload_0
       6: aload_0
       7: getfield      #25                 // Field ref:F
      10: iload_1
      11: i2f
      12: fadd
      13: putfield      #25                 // Field ref:F
      16: fload_2
      17: freturn

  public int getAndIncrement$default$1();
    Code:
       0: iconst_1
       1: ireturn

  public float addAndGet(float);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #25                 // Field ref:F
       5: fload_1
       6: fadd
       7: putfield      #25                 // Field ref:F
      10: aload_0
      11: getfield      #25                 // Field ref:F
      14: freturn

  public float incrementAndGet(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #25                 // Field ref:F
       5: iload_1
       6: i2f
       7: fadd
       8: putfield      #25                 // Field ref:F
      11: aload_0
      12: getfield      #25                 // Field ref:F
      15: freturn

  public void add(float);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #25                 // Field ref:F
       5: fload_1
       6: fadd
       7: putfield      #25                 // Field ref:F
      10: return

  public void increment(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #25                 // Field ref:F
       5: iload_1
       6: i2f
       7: fadd
       8: putfield      #25                 // Field ref:F
      11: return

  public int incrementAndGet$default$1();
    Code:
       0: iconst_1
       1: ireturn

  public int increment$default$1();
    Code:
       0: iconst_1
       1: ireturn

  public void decrement(int);
    Code:
       0: aload_0
       1: iload_1
       2: ineg
       3: invokevirtual #57                 // Method increment:(I)V
       6: return

  public int decrement$default$1();
    Code:
       0: iconst_1
       1: ireturn

  public float decrementAndGet(int);
    Code:
       0: aload_0
       1: iload_1
       2: ineg
       3: invokevirtual #61                 // Method incrementAndGet:(I)F
       6: freturn

  public int decrementAndGet$default$1();
    Code:
       0: iconst_1
       1: ireturn

  public float getAndDecrement(int);
    Code:
       0: aload_0
       1: iload_1
       2: ineg
       3: invokevirtual #65                 // Method getAndIncrement:(I)F
       6: freturn

  public int getAndDecrement$default$1();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.Object getAndDecrement(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #69                 // Method getAndDecrement:(I)F
       5: invokestatic  #75                 // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
       8: areturn

  public java.lang.Object decrementAndGet(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #77                 // Method decrementAndGet:(I)F
       5: invokestatic  #75                 // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
       8: areturn

  public void add(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #82                 // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
       5: invokevirtual #84                 // Method add:(F)V
       8: return

  public java.lang.Object incrementAndGet(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #61                 // Method incrementAndGet:(I)F
       5: invokestatic  #75                 // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
       8: areturn

  public java.lang.Object addAndGet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #82                 // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
       5: invokevirtual #88                 // Method addAndGet:(F)F
       8: invokestatic  #75                 // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
      11: areturn

  public java.lang.Object getAndIncrement(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #65                 // Method getAndIncrement:(I)F
       5: invokestatic  #75                 // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
       8: areturn

  public java.lang.Object getAndAdd(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #82                 // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
       5: invokevirtual #90                 // Method getAndAdd:(F)F
       8: invokestatic  #75                 // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
      11: areturn

  public void subtract(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #82                 // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
       5: invokevirtual #92                 // Method subtract:(F)V
       8: return

  public java.lang.Object subtractAndGet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #82                 // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
       5: invokevirtual #94                 // Method subtractAndGet:(F)F
       8: invokestatic  #75                 // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
      11: areturn

  public java.lang.Object getAndSubtract(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #82                 // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
       5: invokevirtual #96                 // Method getAndSubtract:(F)F
       8: invokestatic  #75                 // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
      11: areturn

  public java.lang.Object get();
    Code:
       0: aload_0
       1: invokevirtual #99                 // Method get:()F
       4: invokestatic  #75                 // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
       7: areturn

  public void set(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #82                 // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
       5: invokevirtual #101                // Method set:(F)V
       8: return

  public boolean compareAndSet(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #82                 // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
       5: aload_2
       6: invokestatic  #82                 // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
       9: invokevirtual #104                // Method compareAndSet:(FF)Z
      12: ireturn

  public java.lang.Object getAndSet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #82                 // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
       5: invokevirtual #106                // Method getAndSet:(F)F
       8: invokestatic  #75                 // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
      11: areturn

  public monix.execution.atomic.AtomicFloat(float);
    Code:
       0: aload_0
       1: invokespecial #110                // Method monix/execution/atomic/AtomicNumber."<init>":()V
       4: aload_0
       5: fload_1
       6: putfield      #25                 // Field ref:F
       9: return
}
