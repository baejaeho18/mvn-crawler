Compiled from "AtomicChar.scala"
public final class monix.execution.atomic.AtomicChar extends monix.execution.atomic.AtomicNumber<java.lang.Object> {
  private char ref;

  private final int mask;

  public static monix.execution.atomic.AtomicChar withPadding(char, monix.execution.atomic.PaddingStrategy);
    Code:
       0: getstatic     #17                 // Field monix/execution/atomic/AtomicChar$.MODULE$:Lmonix/execution/atomic/AtomicChar$;
       3: iload_0
       4: aload_1
       5: invokevirtual #19                 // Method monix/execution/atomic/AtomicChar$.withPadding:(CLmonix/execution/atomic/PaddingStrategy;)Lmonix/execution/atomic/AtomicChar;
       8: areturn

  public char getAndSet(char);
    Code:
       0: aload_0
       1: getfield      #27                 // Field ref:C
       4: istore_2
       5: aload_0
       6: iload_1
       7: putfield      #27                 // Field ref:C
      10: iload_2
      11: ireturn

  public boolean compareAndSet(char, char);
    Code:
       0: aload_0
       1: getfield      #27                 // Field ref:C
       4: iload_1
       5: if_icmpne     17
       8: aload_0
       9: iload_2
      10: putfield      #27                 // Field ref:C
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  public void set(char);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #27                 // Field ref:C
       5: return

  public char get();
    Code:
       0: aload_0
       1: getfield      #27                 // Field ref:C
       4: ireturn

  public char getAndSubtract(char);
    Code:
       0: aload_0
       1: getfield      #27                 // Field ref:C
       4: istore_2
       5: aload_0
       6: aload_0
       7: getfield      #27                 // Field ref:C
      10: iload_1
      11: isub
      12: aload_0
      13: getfield      #41                 // Field mask:I
      16: iand
      17: i2c
      18: putfield      #27                 // Field ref:C
      21: iload_2
      22: ireturn

  public char subtractAndGet(char);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #27                 // Field ref:C
       5: iload_1
       6: isub
       7: aload_0
       8: getfield      #41                 // Field mask:I
      11: iand
      12: i2c
      13: putfield      #27                 // Field ref:C
      16: aload_0
      17: getfield      #27                 // Field ref:C
      20: ireturn

  public void subtract(char);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #27                 // Field ref:C
       5: iload_1
       6: isub
       7: aload_0
       8: getfield      #41                 // Field mask:I
      11: iand
      12: i2c
      13: putfield      #27                 // Field ref:C
      16: return

  public char getAndAdd(char);
    Code:
       0: aload_0
       1: getfield      #27                 // Field ref:C
       4: istore_2
       5: aload_0
       6: aload_0
       7: getfield      #27                 // Field ref:C
      10: iload_1
      11: iadd
      12: aload_0
      13: getfield      #41                 // Field mask:I
      16: iand
      17: i2c
      18: putfield      #27                 // Field ref:C
      21: iload_2
      22: ireturn

  public char getAndIncrement(int);
    Code:
       0: aload_0
       1: getfield      #27                 // Field ref:C
       4: istore_2
       5: aload_0
       6: aload_0
       7: getfield      #27                 // Field ref:C
      10: iload_1
      11: iadd
      12: aload_0
      13: getfield      #41                 // Field mask:I
      16: iand
      17: i2c
      18: putfield      #27                 // Field ref:C
      21: iload_2
      22: ireturn

  public int getAndIncrement$default$1();
    Code:
       0: iconst_1
       1: ireturn

  public char addAndGet(char);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #27                 // Field ref:C
       5: iload_1
       6: iadd
       7: aload_0
       8: getfield      #41                 // Field mask:I
      11: iand
      12: i2c
      13: putfield      #27                 // Field ref:C
      16: aload_0
      17: getfield      #27                 // Field ref:C
      20: ireturn

  public char incrementAndGet(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #27                 // Field ref:C
       5: iload_1
       6: iadd
       7: aload_0
       8: getfield      #41                 // Field mask:I
      11: iand
      12: i2c
      13: putfield      #27                 // Field ref:C
      16: aload_0
      17: getfield      #27                 // Field ref:C
      20: ireturn

  public void add(char);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #27                 // Field ref:C
       5: iload_1
       6: iadd
       7: aload_0
       8: getfield      #41                 // Field mask:I
      11: iand
      12: i2c
      13: putfield      #27                 // Field ref:C
      16: return

  public void increment(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #27                 // Field ref:C
       5: iload_1
       6: iadd
       7: aload_0
       8: getfield      #41                 // Field mask:I
      11: iand
      12: i2c
      13: putfield      #27                 // Field ref:C
      16: return

  public int incrementAndGet$default$1();
    Code:
       0: iconst_1
       1: ireturn

  public int increment$default$1();
    Code:
       0: iconst_1
       1: ireturn

  public void decrement(int);
    Code:
       0: aload_0
       1: iload_1
       2: ineg
       3: invokevirtual #60                 // Method increment:(I)V
       6: return

  public int decrement$default$1();
    Code:
       0: iconst_1
       1: ireturn

  public char decrementAndGet(int);
    Code:
       0: aload_0
       1: iload_1
       2: ineg
       3: invokevirtual #64                 // Method incrementAndGet:(I)C
       6: ireturn

  public int decrementAndGet$default$1();
    Code:
       0: iconst_1
       1: ireturn

  public char getAndDecrement(int);
    Code:
       0: aload_0
       1: iload_1
       2: ineg
       3: invokevirtual #68                 // Method getAndIncrement:(I)C
       6: ireturn

  public int getAndDecrement$default$1();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.Object getAndDecrement(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #72                 // Method getAndDecrement:(I)C
       5: invokestatic  #78                 // Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
       8: areturn

  public java.lang.Object decrementAndGet(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #80                 // Method decrementAndGet:(I)C
       5: invokestatic  #78                 // Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
       8: areturn

  public void add(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #85                 // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
       5: invokevirtual #87                 // Method add:(C)V
       8: return

  public java.lang.Object incrementAndGet(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #64                 // Method incrementAndGet:(I)C
       5: invokestatic  #78                 // Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
       8: areturn

  public java.lang.Object addAndGet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #85                 // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
       5: invokevirtual #91                 // Method addAndGet:(C)C
       8: invokestatic  #78                 // Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
      11: areturn

  public java.lang.Object getAndIncrement(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #68                 // Method getAndIncrement:(I)C
       5: invokestatic  #78                 // Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
       8: areturn

  public java.lang.Object getAndAdd(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #85                 // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
       5: invokevirtual #93                 // Method getAndAdd:(C)C
       8: invokestatic  #78                 // Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
      11: areturn

  public void subtract(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #85                 // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
       5: invokevirtual #95                 // Method subtract:(C)V
       8: return

  public java.lang.Object subtractAndGet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #85                 // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
       5: invokevirtual #97                 // Method subtractAndGet:(C)C
       8: invokestatic  #78                 // Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
      11: areturn

  public java.lang.Object getAndSubtract(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #85                 // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
       5: invokevirtual #99                 // Method getAndSubtract:(C)C
       8: invokestatic  #78                 // Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
      11: areturn

  public java.lang.Object get();
    Code:
       0: aload_0
       1: invokevirtual #102                // Method get:()C
       4: invokestatic  #78                 // Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
       7: areturn

  public void set(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #85                 // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
       5: invokevirtual #104                // Method set:(C)V
       8: return

  public boolean compareAndSet(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #85                 // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
       5: aload_2
       6: invokestatic  #85                 // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
       9: invokevirtual #107                // Method compareAndSet:(CC)Z
      12: ireturn

  public java.lang.Object getAndSet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #85                 // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
       5: invokevirtual #109                // Method getAndSet:(C)C
       8: invokestatic  #78                 // Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
      11: areturn

  public monix.execution.atomic.AtomicChar(char);
    Code:
       0: aload_0
       1: invokespecial #113                // Method monix/execution/atomic/AtomicNumber."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #27                 // Field ref:C
       9: aload_0
      10: ldc           #114                // int 65535
      12: putfield      #41                 // Field mask:I
      15: return
}
