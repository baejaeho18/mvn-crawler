Compiled from "AtomicDouble.scala"
public final class monix.execution.atomic.AtomicDouble extends monix.execution.atomic.AtomicNumber<java.lang.Object> {
  private double ref;

  public static monix.execution.atomic.AtomicDouble withPadding(double, monix.execution.atomic.PaddingStrategy);
    Code:
       0: getstatic     #17                 // Field monix/execution/atomic/AtomicDouble$.MODULE$:Lmonix/execution/atomic/AtomicDouble$;
       3: dload_0
       4: aload_2
       5: invokevirtual #19                 // Method monix/execution/atomic/AtomicDouble$.withPadding:(DLmonix/execution/atomic/PaddingStrategy;)Lmonix/execution/atomic/AtomicDouble;
       8: areturn

  public double getAndSet(double);
    Code:
       0: aload_0
       1: getfield      #25                 // Field ref:D
       4: dstore_3
       5: aload_0
       6: dload_1
       7: putfield      #25                 // Field ref:D
      10: dload_3
      11: dreturn

  public boolean compareAndSet(double, double);
    Code:
       0: aload_0
       1: getfield      #25                 // Field ref:D
       4: dload_1
       5: dcmpl
       6: ifne          18
       9: aload_0
      10: dload_3
      11: putfield      #25                 // Field ref:D
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public void set(double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #25                 // Field ref:D
       5: return

  public double get();
    Code:
       0: aload_0
       1: getfield      #25                 // Field ref:D
       4: dreturn

  public double getAndSubtract(double);
    Code:
       0: aload_0
       1: getfield      #25                 // Field ref:D
       4: dstore_3
       5: aload_0
       6: aload_0
       7: getfield      #25                 // Field ref:D
      10: dload_1
      11: dsub
      12: putfield      #25                 // Field ref:D
      15: dload_3
      16: dreturn

  public double subtractAndGet(double);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #25                 // Field ref:D
       5: dload_1
       6: dsub
       7: putfield      #25                 // Field ref:D
      10: aload_0
      11: getfield      #25                 // Field ref:D
      14: dreturn

  public void subtract(double);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #25                 // Field ref:D
       5: dload_1
       6: dsub
       7: putfield      #25                 // Field ref:D
      10: return

  public double getAndAdd(double);
    Code:
       0: aload_0
       1: getfield      #25                 // Field ref:D
       4: dstore_3
       5: aload_0
       6: aload_0
       7: getfield      #25                 // Field ref:D
      10: dload_1
      11: dadd
      12: putfield      #25                 // Field ref:D
      15: dload_3
      16: dreturn

  public double getAndIncrement(int);
    Code:
       0: aload_0
       1: getfield      #25                 // Field ref:D
       4: dstore_2
       5: aload_0
       6: aload_0
       7: getfield      #25                 // Field ref:D
      10: iload_1
      11: i2d
      12: dadd
      13: putfield      #25                 // Field ref:D
      16: dload_2
      17: dreturn

  public int getAndIncrement$default$1();
    Code:
       0: iconst_1
       1: ireturn

  public double addAndGet(double);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #25                 // Field ref:D
       5: dload_1
       6: dadd
       7: putfield      #25                 // Field ref:D
      10: aload_0
      11: getfield      #25                 // Field ref:D
      14: dreturn

  public double incrementAndGet(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #25                 // Field ref:D
       5: iload_1
       6: i2d
       7: dadd
       8: putfield      #25                 // Field ref:D
      11: aload_0
      12: getfield      #25                 // Field ref:D
      15: dreturn

  public void add(double);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #25                 // Field ref:D
       5: dload_1
       6: dadd
       7: putfield      #25                 // Field ref:D
      10: return

  public void increment(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #25                 // Field ref:D
       5: iload_1
       6: i2d
       7: dadd
       8: putfield      #25                 // Field ref:D
      11: return

  public int incrementAndGet$default$1();
    Code:
       0: iconst_1
       1: ireturn

  public int increment$default$1();
    Code:
       0: iconst_1
       1: ireturn

  public void decrement(int);
    Code:
       0: aload_0
       1: iload_1
       2: ineg
       3: invokevirtual #57                 // Method increment:(I)V
       6: return

  public int decrement$default$1();
    Code:
       0: iconst_1
       1: ireturn

  public double decrementAndGet(int);
    Code:
       0: aload_0
       1: iload_1
       2: ineg
       3: invokevirtual #61                 // Method incrementAndGet:(I)D
       6: dreturn

  public int decrementAndGet$default$1();
    Code:
       0: iconst_1
       1: ireturn

  public double getAndDecrement(int);
    Code:
       0: aload_0
       1: iload_1
       2: ineg
       3: invokevirtual #65                 // Method getAndIncrement:(I)D
       6: dreturn

  public int getAndDecrement$default$1();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.Object getAndDecrement(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #69                 // Method getAndDecrement:(I)D
       5: invokestatic  #75                 // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
       8: areturn

  public java.lang.Object decrementAndGet(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #77                 // Method decrementAndGet:(I)D
       5: invokestatic  #75                 // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
       8: areturn

  public void add(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #82                 // Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
       5: invokevirtual #84                 // Method add:(D)V
       8: return

  public java.lang.Object incrementAndGet(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #61                 // Method incrementAndGet:(I)D
       5: invokestatic  #75                 // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
       8: areturn

  public java.lang.Object addAndGet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #82                 // Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
       5: invokevirtual #88                 // Method addAndGet:(D)D
       8: invokestatic  #75                 // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
      11: areturn

  public java.lang.Object getAndIncrement(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #65                 // Method getAndIncrement:(I)D
       5: invokestatic  #75                 // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
       8: areturn

  public java.lang.Object getAndAdd(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #82                 // Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
       5: invokevirtual #90                 // Method getAndAdd:(D)D
       8: invokestatic  #75                 // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
      11: areturn

  public void subtract(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #82                 // Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
       5: invokevirtual #92                 // Method subtract:(D)V
       8: return

  public java.lang.Object subtractAndGet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #82                 // Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
       5: invokevirtual #94                 // Method subtractAndGet:(D)D
       8: invokestatic  #75                 // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
      11: areturn

  public java.lang.Object getAndSubtract(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #82                 // Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
       5: invokevirtual #96                 // Method getAndSubtract:(D)D
       8: invokestatic  #75                 // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
      11: areturn

  public java.lang.Object get();
    Code:
       0: aload_0
       1: invokevirtual #99                 // Method get:()D
       4: invokestatic  #75                 // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
       7: areturn

  public void set(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #82                 // Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
       5: invokevirtual #101                // Method set:(D)V
       8: return

  public boolean compareAndSet(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #82                 // Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
       5: aload_2
       6: invokestatic  #82                 // Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
       9: invokevirtual #104                // Method compareAndSet:(DD)Z
      12: ireturn

  public java.lang.Object getAndSet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #82                 // Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
       5: invokevirtual #106                // Method getAndSet:(D)D
       8: invokestatic  #75                 // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
      11: areturn

  public monix.execution.atomic.AtomicDouble(double);
    Code:
       0: aload_0
       1: invokespecial #110                // Method monix/execution/atomic/AtomicNumber."<init>":()V
       4: aload_0
       5: dload_1
       6: putfield      #25                 // Field ref:D
       9: return
}
