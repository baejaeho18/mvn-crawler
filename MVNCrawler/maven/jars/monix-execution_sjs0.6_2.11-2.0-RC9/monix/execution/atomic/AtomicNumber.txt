Compiled from "AtomicNumber.scala"
public abstract class monix.execution.atomic.AtomicNumber<T> extends monix.execution.atomic.Atomic<T> {
  public abstract void increment(int);

  public int increment$default$1();
    Code:
       0: iconst_1
       1: ireturn

  public abstract void add(T);

  public abstract void decrement(int);

  public int decrement$default$1();
    Code:
       0: iconst_1
       1: ireturn

  public abstract void subtract(T);

  public abstract T incrementAndGet(int);

  public int incrementAndGet$default$1();
    Code:
       0: iconst_1
       1: ireturn

  public abstract T addAndGet(T);

  public abstract T decrementAndGet(int);

  public int decrementAndGet$default$1();
    Code:
       0: iconst_1
       1: ireturn

  public abstract T subtractAndGet(T);

  public abstract T getAndIncrement(int);

  public int getAndIncrement$default$1();
    Code:
       0: iconst_1
       1: ireturn

  public abstract T getAndAdd(T);

  public abstract T getAndDecrement(int);

  public int getAndDecrement$default$1();
    Code:
       0: iconst_1
       1: ireturn

  public abstract T getAndSubtract(T);

  public monix.execution.atomic.AtomicNumber();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method monix/execution/atomic/Atomic."<init>":()V
       4: return
}
