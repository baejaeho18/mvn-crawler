Compiled from "Ack.scala"
public class monix.execution.Ack$AckExtensions$ {
  public static final monix.execution.Ack$AckExtensions$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class monix/execution/Ack$AckExtensions$
       3: invokespecial #12                 // Method "<init>":()V
       6: return

  public final <T, Self extends scala.concurrent.Future<monix.execution.Ack>> Self syncOnContinueFollow$extension(Self, scala.concurrent.Promise<T>, T, monix.execution.Scheduler);
    Code:
       0: aload_1
       1: getstatic     #19                 // Field monix/execution/Ack$Continue$.MODULE$:Lmonix/execution/Ack$Continue$;
       4: if_acmpne     20
       7: aload_2
       8: aload_3
       9: invokeinterface #25,  2           // InterfaceMethod scala/concurrent/Promise.trySuccess:(Ljava/lang/Object;)Z
      14: invokestatic  #31                 // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      17: goto          47
      20: aload_1
      21: getstatic     #36                 // Field monix/execution/Ack$Stop$.MODULE$:Lmonix/execution/Ack$Stop$;
      24: if_acmpeq     44
      27: aload_1
      28: new           #38                 // class monix/execution/Ack$AckExtensions$$anonfun$syncOnContinueFollow$extension$1
      31: dup
      32: aload_2
      33: aload_3
      34: invokespecial #41                 // Method monix/execution/Ack$AckExtensions$$anonfun$syncOnContinueFollow$extension$1."<init>":(Lscala/concurrent/Promise;Ljava/lang/Object;)V
      37: aload         4
      39: invokeinterface #47,  3           // InterfaceMethod scala/concurrent/Future.onComplete:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)V
      44: getstatic     #53                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      47: pop
      48: aload_1
      49: areturn

  public final <T, Self extends scala.concurrent.Future<monix.execution.Ack>> Self syncOnStopFollow$extension(Self, scala.concurrent.Promise<T>, T, monix.execution.Scheduler);
    Code:
       0: aload_1
       1: getstatic     #36                 // Field monix/execution/Ack$Stop$.MODULE$:Lmonix/execution/Ack$Stop$;
       4: if_acmpne     20
       7: aload_2
       8: aload_3
       9: invokeinterface #25,  2           // InterfaceMethod scala/concurrent/Promise.trySuccess:(Ljava/lang/Object;)Z
      14: invokestatic  #31                 // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      17: goto          47
      20: aload_1
      21: getstatic     #19                 // Field monix/execution/Ack$Continue$.MODULE$:Lmonix/execution/Ack$Continue$;
      24: if_acmpeq     44
      27: aload_1
      28: new           #65                 // class monix/execution/Ack$AckExtensions$$anonfun$syncOnStopFollow$extension$1
      31: dup
      32: aload_2
      33: aload_3
      34: invokespecial #66                 // Method monix/execution/Ack$AckExtensions$$anonfun$syncOnStopFollow$extension$1."<init>":(Lscala/concurrent/Promise;Ljava/lang/Object;)V
      37: aload         4
      39: invokeinterface #47,  3           // InterfaceMethod scala/concurrent/Future.onComplete:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)V
      44: getstatic     #53                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      47: pop
      48: aload_1
      49: areturn

  public final <Self extends scala.concurrent.Future<monix.execution.Ack>> scala.concurrent.Future<monix.execution.Ack> syncTryFlatten$extension(Self, monix.execution.UncaughtExceptionReporter);
    Code:
       0: aload_1
       1: getstatic     #19                 // Field monix/execution/Ack$Continue$.MODULE$:Lmonix/execution/Ack$Continue$;
       4: astore_3
       5: dup
       6: ifnonnull     17
       9: pop
      10: aload_3
      11: ifnull        51
      14: goto          24
      17: aload_3
      18: invokevirtual #71                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      21: ifne          51
      24: aload_1
      25: getstatic     #36                 // Field monix/execution/Ack$Stop$.MODULE$:Lmonix/execution/Ack$Stop$;
      28: astore        4
      30: dup
      31: ifnonnull     43
      34: pop
      35: aload         4
      37: ifnull        51
      40: goto          55
      43: aload         4
      45: invokevirtual #71                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      48: ifeq          55
      51: aload_1
      52: goto          161
      55: aload_1
      56: invokeinterface #75,  1           // InterfaceMethod scala/concurrent/Future.isCompleted:()Z
      61: ifeq          160
      64: aload_1
      65: invokeinterface #78,  1           // InterfaceMethod scala/concurrent/Future.value:()Lscala/Option;
      70: invokevirtual #84                 // Method scala/Option.get:()Ljava/lang/Object;
      73: checkcast     #86                 // class scala/util/Try
      76: astore        5
      78: aload         5
      80: instanceof    #88                 // class scala/util/Success
      83: ifeq          110
      86: aload         5
      88: checkcast     #88                 // class scala/util/Success
      91: astore        6
      93: aload         6
      95: invokevirtual #90                 // Method scala/util/Success.value:()Ljava/lang/Object;
      98: checkcast     #92                 // class monix/execution/Ack
     101: astore        7
     103: aload         7
     105: astore        8
     107: goto          145
     110: aload         5
     112: instanceof    #94                 // class scala/util/Failure
     115: ifeq          150
     118: aload         5
     120: checkcast     #94                 // class scala/util/Failure
     123: astore        9
     125: aload         9
     127: invokevirtual #98                 // Method scala/util/Failure.exception:()Ljava/lang/Throwable;
     130: astore        10
     132: aload_2
     133: aload         10
     135: invokeinterface #104,  2          // InterfaceMethod monix/execution/UncaughtExceptionReporter.reportFailure:(Ljava/lang/Throwable;)V
     140: getstatic     #36                 // Field monix/execution/Ack$Stop$.MODULE$:Lmonix/execution/Ack$Stop$;
     143: astore        8
     145: aload         8
     147: goto          161
     150: new           #106                // class scala/MatchError
     153: dup
     154: aload         5
     156: invokespecial #109                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     159: athrow
     160: aload_1
     161: areturn

  public final <Self extends scala.concurrent.Future<monix.execution.Ack>> int hashCode$extension(Self);
    Code:
       0: aload_1
       1: invokevirtual #121                // Method java/lang/Object.hashCode:()I
       4: ireturn

  public final <Self extends scala.concurrent.Future<monix.execution.Ack>> boolean equals$extension(Self, java.lang.Object);
    Code:
       0: aload_2
       1: astore_3
       2: aload_3
       3: instanceof    #125                // class monix/execution/Ack$AckExtensions
       6: ifeq          15
       9: iconst_1
      10: istore        4
      12: goto          18
      15: iconst_0
      16: istore        4
      18: iload         4
      20: ifeq          78
      23: aload_2
      24: ifnonnull     31
      27: aconst_null
      28: goto          38
      31: aload_2
      32: checkcast     #125                // class monix/execution/Ack$AckExtensions
      35: invokevirtual #129                // Method monix/execution/Ack$AckExtensions.source:()Lscala/concurrent/Future;
      38: astore        5
      40: aload_1
      41: aload         5
      43: astore        6
      45: dup
      46: ifnonnull     58
      49: pop
      50: aload         6
      52: ifnull        66
      55: goto          70
      58: aload         6
      60: invokevirtual #71                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      63: ifeq          70
      66: iconst_1
      67: goto          71
      70: iconst_0
      71: ifeq          78
      74: iconst_1
      75: goto          79
      78: iconst_0
      79: ireturn

  public monix.execution.Ack$AckExtensions$();
    Code:
       0: aload_0
       1: invokespecial #131                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #133                // Field MODULE$:Lmonix/execution/Ack$AckExtensions$;
       8: return
}
