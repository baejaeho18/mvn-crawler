Compiled from "TestScheduler.scala"
public final class monix.execution.schedulers.TestScheduler$Task$$anon$1 implements scala.math.Ordering<monix.execution.schedulers.TestScheduler$Task> {
  private final scala.math.Ordering<java.lang.Object> longOrd;

  public scala.Some tryCompare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #20                 // Method scala/math/Ordering$class.tryCompare:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
       6: areturn

  public boolean lteq(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #30                 // Method scala/math/Ordering$class.lteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean gteq(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #33                 // Method scala/math/Ordering$class.gteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lt(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #36                 // Method scala/math/Ordering$class.lt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean gt(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #39                 // Method scala/math/Ordering$class.gt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean equiv(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #42                 // Method scala/math/Ordering$class.equiv:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #47                 // Method scala/math/Ordering$class.max:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #50                 // Method scala/math/Ordering$class.min:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.math.Ordering<monix.execution.schedulers.TestScheduler$Task> reverse();
    Code:
       0: aload_0
       1: invokestatic  #55                 // Method scala/math/Ordering$class.reverse:(Lscala/math/Ordering;)Lscala/math/Ordering;
       4: areturn

  public <U> scala.math.Ordering<U> on(scala.Function1<U, monix.execution.schedulers.TestScheduler$Task>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #60                 // Method scala/math/Ordering$class.on:(Lscala/math/Ordering;Lscala/Function1;)Lscala/math/Ordering;
       5: areturn

  public scala.math.Ordering$Ops mkOrderingOps(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #67                 // Method scala/math/Ordering$class.mkOrderingOps:(Lscala/math/Ordering;Ljava/lang/Object;)Lscala/math/Ordering$Ops;
       5: areturn

  private scala.math.Ordering<java.lang.Object> longOrd();
    Code:
       0: aload_0
       1: getfield      #70                 // Field longOrd:Lscala/math/Ordering;
       4: areturn

  public int compare(monix.execution.schedulers.TestScheduler$Task, monix.execution.schedulers.TestScheduler$Task);
    Code:
       0: aload_1
       1: invokevirtual #78                 // Method monix/execution/schedulers/TestScheduler$Task.runsAt:()Lscala/concurrent/duration/FiniteDuration;
       4: aload_2
       5: invokevirtual #78                 // Method monix/execution/schedulers/TestScheduler$Task.runsAt:()Lscala/concurrent/duration/FiniteDuration;
       8: invokevirtual #83                 // Method scala/concurrent/duration/FiniteDuration.compare:(Lscala/concurrent/duration/Duration;)I
      11: istore_3
      12: iload_3
      13: lookupswitch  { // 0
               default: 24
          }
      24: iload_3
      25: iconst_0
      26: if_icmpeq     33
      29: iload_3
      30: goto          56
      33: aload_0
      34: invokespecial #85                 // Method longOrd:()Lscala/math/Ordering;
      37: aload_1
      38: invokevirtual #89                 // Method monix/execution/schedulers/TestScheduler$Task.id:()J
      41: invokestatic  #95                 // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
      44: aload_2
      45: invokevirtual #89                 // Method monix/execution/schedulers/TestScheduler$Task.id:()J
      48: invokestatic  #95                 // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
      51: invokeinterface #98,  3           // InterfaceMethod scala/math/Ordering.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
      56: ireturn

  public scala.math.PartialOrdering reverse();
    Code:
       0: aload_0
       1: invokevirtual #102                // Method reverse:()Lscala/math/Ordering;
       4: areturn

  public scala.Option tryCompare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #105                // Method tryCompare:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
       6: areturn

  public int compare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #74                 // class monix/execution/schedulers/TestScheduler$Task
       5: aload_2
       6: checkcast     #74                 // class monix/execution/schedulers/TestScheduler$Task
       9: invokevirtual #107                // Method compare:(Lmonix/execution/schedulers/TestScheduler$Task;Lmonix/execution/schedulers/TestScheduler$Task;)I
      12: ireturn

  public monix.execution.schedulers.TestScheduler$Task$$anon$1();
    Code:
       0: aload_0
       1: invokespecial #111                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #117                // Method scala/math/PartialOrdering$class.$init$:(Lscala/math/PartialOrdering;)V
       8: aload_0
       9: invokestatic  #120                // Method scala/math/Ordering$class.$init$:(Lscala/math/Ordering;)V
      12: aload_0
      13: getstatic     #126                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      16: getstatic     #131                // Field scala/math/Ordering$Long$.MODULE$:Lscala/math/Ordering$Long$;
      19: invokevirtual #135                // Method scala/Predef$.implicitly:(Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #7                  // class scala/math/Ordering
      25: putfield      #70                 // Field longOrd:Lscala/math/Ordering;
      28: return
}
