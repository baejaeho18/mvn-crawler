Compiled from "SerialCancelable.scala"
public final class monix.execution.cancelables.SerialCancelable implements monix.execution.cancelables.AssignableCancelable$Multi {
  private final monix.execution.atomic.AtomicAny<monix.execution.cancelables.SerialCancelable$State> state;

  public static monix.execution.cancelables.SerialCancelable apply(monix.execution.Cancelable);
    Code:
       0: getstatic     #18                 // Field monix/execution/cancelables/SerialCancelable$.MODULE$:Lmonix/execution/cancelables/SerialCancelable$;
       3: aload_0
       4: invokevirtual #20                 // Method monix/execution/cancelables/SerialCancelable$.apply:(Lmonix/execution/Cancelable;)Lmonix/execution/cancelables/SerialCancelable;
       7: areturn

  public static monix.execution.cancelables.SerialCancelable apply();
    Code:
       0: getstatic     #18                 // Field monix/execution/cancelables/SerialCancelable$.MODULE$:Lmonix/execution/cancelables/SerialCancelable$;
       3: invokevirtual #23                 // Method monix/execution/cancelables/SerialCancelable$.apply:()Lmonix/execution/cancelables/SerialCancelable;
       6: areturn

  public boolean isCanceled();
    Code:
       0: aload_0
       1: getfield      #30                 // Field state:Lmonix/execution/atomic/AtomicAny;
       4: invokevirtual #36                 // Method monix/execution/atomic/AtomicAny.get:()Ljava/lang/Object;
       7: checkcast     #38                 // class monix/execution/cancelables/SerialCancelable$State
      10: astore_1
      11: getstatic     #43                 // Field monix/execution/cancelables/SerialCancelable$State$Cancelled$.MODULE$:Lmonix/execution/cancelables/SerialCancelable$State$Cancelled$;
      14: aload_1
      15: invokevirtual #47                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      18: ifeq          26
      21: iconst_1
      22: istore_2
      23: goto          28
      26: iconst_0
      27: istore_2
      28: iload_2
      29: ireturn

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #30                 // Field state:Lmonix/execution/atomic/AtomicAny;
       4: getstatic     #43                 // Field monix/execution/cancelables/SerialCancelable$State$Cancelled$.MODULE$:Lmonix/execution/cancelables/SerialCancelable$State$Cancelled$;
       7: invokevirtual #55                 // Method monix/execution/atomic/AtomicAny.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #38                 // class monix/execution/cancelables/SerialCancelable$State
      13: astore_1
      14: getstatic     #43                 // Field monix/execution/cancelables/SerialCancelable$State$Cancelled$.MODULE$:Lmonix/execution/cancelables/SerialCancelable$State$Cancelled$;
      17: aload_1
      18: invokevirtual #47                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      21: ifeq          31
      24: getstatic     #61                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      27: astore_2
      28: goto          60
      31: aload_1
      32: instanceof    #63                 // class monix/execution/cancelables/SerialCancelable$State$Active
      35: ifeq          61
      38: aload_1
      39: checkcast     #63                 // class monix/execution/cancelables/SerialCancelable$State$Active
      42: astore_3
      43: aload_3
      44: invokevirtual #67                 // Method monix/execution/cancelables/SerialCancelable$State$Active.s:()Lmonix/execution/Cancelable;
      47: astore        4
      49: aload         4
      51: invokeinterface #71,  1           // InterfaceMethod monix/execution/Cancelable.cancel:()V
      56: getstatic     #61                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      59: astore_2
      60: return
      61: new           #73                 // class scala/MatchError
      64: dup
      65: aload_1
      66: invokespecial #77                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      69: athrow

  public monix.execution.cancelables.SerialCancelable $colon$eq(monix.execution.Cancelable);
    Code:
       0: aload_0
       1: getfield      #30                 // Field state:Lmonix/execution/atomic/AtomicAny;
       4: invokevirtual #36                 // Method monix/execution/atomic/AtomicAny.get:()Ljava/lang/Object;
       7: checkcast     #38                 // class monix/execution/cancelables/SerialCancelable$State
      10: astore_3
      11: getstatic     #43                 // Field monix/execution/cancelables/SerialCancelable$State$Cancelled$.MODULE$:Lmonix/execution/cancelables/SerialCancelable$State$Cancelled$;
      14: aload_3
      15: invokevirtual #47                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      18: ifeq          33
      21: aload_1
      22: invokeinterface #71,  1           // InterfaceMethod monix/execution/Cancelable.cancel:()V
      27: aload_0
      28: astore        4
      30: goto          92
      33: aload_3
      34: instanceof    #63                 // class monix/execution/cancelables/SerialCancelable$State$Active
      37: ifeq          100
      40: aload_3
      41: checkcast     #63                 // class monix/execution/cancelables/SerialCancelable$State$Active
      44: astore        5
      46: aload         5
      48: invokevirtual #67                 // Method monix/execution/cancelables/SerialCancelable$State$Active.s:()Lmonix/execution/Cancelable;
      51: astore        6
      53: aload         5
      55: invokevirtual #83                 // Method monix/execution/cancelables/SerialCancelable$State$Active.order:()J
      58: lstore        7
      60: aload_0
      61: getfield      #30                 // Field state:Lmonix/execution/atomic/AtomicAny;
      64: aload         5
      66: new           #63                 // class monix/execution/cancelables/SerialCancelable$State$Active
      69: dup
      70: aload_1
      71: lload         7
      73: invokespecial #86                 // Method monix/execution/cancelables/SerialCancelable$State$Active."<init>":(Lmonix/execution/Cancelable;J)V
      76: invokevirtual #90                 // Method monix/execution/atomic/AtomicAny.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      79: ifeq          95
      82: aload         6
      84: invokeinterface #71,  1           // InterfaceMethod monix/execution/Cancelable.cancel:()V
      89: aload_0
      90: astore        4
      92: aload         4
      94: areturn
      95: aload_1
      96: astore_1
      97: goto          0
     100: new           #73                 // class scala/MatchError
     103: dup
     104: aload_3
     105: invokespecial #77                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     108: athrow

  public monix.execution.cancelables.SerialCancelable orderedUpdate(monix.execution.Cancelable, long);
    Code:
       0: aload_0
       1: getfield      #30                 // Field state:Lmonix/execution/atomic/AtomicAny;
       4: invokevirtual #36                 // Method monix/execution/atomic/AtomicAny.get:()Ljava/lang/Object;
       7: checkcast     #38                 // class monix/execution/cancelables/SerialCancelable$State
      10: astore        5
      12: getstatic     #43                 // Field monix/execution/cancelables/SerialCancelable$State$Cancelled$.MODULE$:Lmonix/execution/cancelables/SerialCancelable$State$Cancelled$;
      15: aload         5
      17: invokevirtual #47                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      20: ifeq          35
      23: aload_1
      24: invokeinterface #71,  1           // InterfaceMethod monix/execution/Cancelable.cancel:()V
      29: aload_0
      30: astore        6
      32: goto          175
      35: aload         5
      37: instanceof    #63                 // class monix/execution/cancelables/SerialCancelable$State$Active
      40: ifeq          178
      43: aload         5
      45: checkcast     #63                 // class monix/execution/cancelables/SerialCancelable$State$Active
      48: astore        7
      50: aload         7
      52: invokevirtual #67                 // Method monix/execution/cancelables/SerialCancelable$State$Active.s:()Lmonix/execution/Cancelable;
      55: astore        8
      57: aload         7
      59: invokevirtual #83                 // Method monix/execution/cancelables/SerialCancelable$State$Active.order:()J
      62: lstore        9
      64: lload         9
      66: lconst_0
      67: lcmp
      68: ifge          75
      71: iconst_1
      72: goto          76
      75: iconst_0
      76: lload_2
      77: lconst_0
      78: lcmp
      79: iflt          86
      82: iconst_1
      83: goto          87
      86: iconst_0
      87: ixor
      88: istore        11
      90: iload         11
      92: ifeq          102
      95: lload         9
      97: lload_2
      98: lcmp
      99: ifle          115
     102: lload         9
     104: lconst_0
     105: lcmp
     106: iflt          119
     109: lload_2
     110: lconst_0
     111: lcmp
     112: ifge          119
     115: iconst_1
     116: goto          120
     119: iconst_0
     120: istore        12
     122: iload         12
     124: ifeq          166
     127: aload_0
     128: getfield      #30                 // Field state:Lmonix/execution/atomic/AtomicAny;
     131: aload         7
     133: new           #63                 // class monix/execution/cancelables/SerialCancelable$State$Active
     136: dup
     137: aload_1
     138: lload_2
     139: invokespecial #86                 // Method monix/execution/cancelables/SerialCancelable$State$Active."<init>":(Lmonix/execution/Cancelable;J)V
     142: invokevirtual #90                 // Method monix/execution/atomic/AtomicAny.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
     145: ifeq          159
     148: aload         8
     150: invokeinterface #71,  1           // InterfaceMethod monix/execution/Cancelable.cancel:()V
     155: aload_0
     156: goto          173
     159: aload_1
     160: lload_2
     161: lstore_2
     162: astore_1
     163: goto          0
     166: aload_1
     167: invokeinterface #71,  1           // InterfaceMethod monix/execution/Cancelable.cancel:()V
     172: aload_0
     173: astore        6
     175: aload         6
     177: areturn
     178: new           #73                 // class scala/MatchError
     181: dup
     182: aload         5
     184: invokespecial #77                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     187: athrow

  public monix.execution.cancelables.AssignableCancelable$Multi orderedUpdate(monix.execution.Cancelable, long);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: invokevirtual #103                // Method orderedUpdate:(Lmonix/execution/Cancelable;J)Lmonix/execution/cancelables/SerialCancelable;
       6: areturn

  public monix.execution.cancelables.AssignableCancelable $colon$eq(monix.execution.Cancelable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #106                // Method $colon$eq:(Lmonix/execution/Cancelable;)Lmonix/execution/cancelables/SerialCancelable;
       5: areturn

  public monix.execution.cancelables.SerialCancelable(monix.execution.Cancelable);
    Code:
       0: aload_0
       1: invokespecial #109                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #63                 // class monix/execution/cancelables/SerialCancelable$State$Active
       8: dup
       9: aload_1
      10: ifnonnull     22
      13: getstatic     #114                // Field monix/execution/Cancelable$.MODULE$:Lmonix/execution/Cancelable$;
      16: invokevirtual #117                // Method monix/execution/Cancelable$.empty:()Lmonix/execution/Cancelable;
      19: goto          23
      22: aload_1
      23: lconst_0
      24: invokespecial #86                 // Method monix/execution/cancelables/SerialCancelable$State$Active."<init>":(Lmonix/execution/Cancelable;J)V
      27: astore_2
      28: getstatic     #122                // Field monix/execution/atomic/AtomicAny$.MODULE$:Lmonix/execution/atomic/AtomicAny$;
      31: aload_2
      32: getstatic     #127                // Field monix/execution/atomic/PaddingStrategy$LeftRight128$.MODULE$:Lmonix/execution/atomic/PaddingStrategy$LeftRight128$;
      35: invokevirtual #131                // Method monix/execution/atomic/AtomicAny$.withPadding:(Ljava/lang/Object;Lmonix/execution/atomic/PaddingStrategy;)Lmonix/execution/atomic/AtomicAny;
      38: putfield      #30                 // Field state:Lmonix/execution/atomic/AtomicAny;
      41: return
}
