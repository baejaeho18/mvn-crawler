Compiled from "MultiAssignmentCancelable.scala"
public final class monix.execution.cancelables.MultiAssignmentCancelable implements monix.execution.cancelables.AssignableCancelable$Multi {
  private final monix.execution.atomic.AtomicAny<monix.execution.cancelables.MultiAssignmentCancelable$State> state;

  public static monix.execution.cancelables.MultiAssignmentCancelable apply(monix.execution.Cancelable);
    Code:
       0: getstatic     #18                 // Field monix/execution/cancelables/MultiAssignmentCancelable$.MODULE$:Lmonix/execution/cancelables/MultiAssignmentCancelable$;
       3: aload_0
       4: invokevirtual #20                 // Method monix/execution/cancelables/MultiAssignmentCancelable$.apply:(Lmonix/execution/Cancelable;)Lmonix/execution/cancelables/MultiAssignmentCancelable;
       7: areturn

  public static monix.execution.cancelables.MultiAssignmentCancelable apply();
    Code:
       0: getstatic     #18                 // Field monix/execution/cancelables/MultiAssignmentCancelable$.MODULE$:Lmonix/execution/cancelables/MultiAssignmentCancelable$;
       3: invokevirtual #23                 // Method monix/execution/cancelables/MultiAssignmentCancelable$.apply:()Lmonix/execution/cancelables/MultiAssignmentCancelable;
       6: areturn

  public boolean isCanceled();
    Code:
       0: aload_0
       1: getfield      #30                 // Field state:Lmonix/execution/atomic/AtomicAny;
       4: invokevirtual #36                 // Method monix/execution/atomic/AtomicAny.get:()Ljava/lang/Object;
       7: checkcast     #38                 // class monix/execution/cancelables/MultiAssignmentCancelable$State
      10: astore_1
      11: getstatic     #43                 // Field monix/execution/cancelables/MultiAssignmentCancelable$State$Cancelled$.MODULE$:Lmonix/execution/cancelables/MultiAssignmentCancelable$State$Cancelled$;
      14: aload_1
      15: invokevirtual #47                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      18: ifeq          26
      21: iconst_1
      22: istore_2
      23: goto          28
      26: iconst_0
      27: istore_2
      28: iload_2
      29: ireturn

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #30                 // Field state:Lmonix/execution/atomic/AtomicAny;
       4: getstatic     #43                 // Field monix/execution/cancelables/MultiAssignmentCancelable$State$Cancelled$.MODULE$:Lmonix/execution/cancelables/MultiAssignmentCancelable$State$Cancelled$;
       7: invokevirtual #55                 // Method monix/execution/atomic/AtomicAny.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #38                 // class monix/execution/cancelables/MultiAssignmentCancelable$State
      13: astore_1
      14: aload_1
      15: getstatic     #43                 // Field monix/execution/cancelables/MultiAssignmentCancelable$State$Cancelled$.MODULE$:Lmonix/execution/cancelables/MultiAssignmentCancelable$State$Cancelled$;
      18: if_acmpeq     33
      21: aload_1
      22: checkcast     #57                 // class monix/execution/cancelables/MultiAssignmentCancelable$State$Active
      25: invokevirtual #61                 // Method monix/execution/cancelables/MultiAssignmentCancelable$State$Active.s:()Lmonix/execution/Cancelable;
      28: invokeinterface #65,  1           // InterfaceMethod monix/execution/Cancelable.cancel:()V
      33: return

  public monix.execution.cancelables.MultiAssignmentCancelable $colon$eq(monix.execution.Cancelable);
    Code:
       0: aload_0
       1: getfield      #30                 // Field state:Lmonix/execution/atomic/AtomicAny;
       4: invokevirtual #36                 // Method monix/execution/atomic/AtomicAny.get:()Ljava/lang/Object;
       7: checkcast     #38                 // class monix/execution/cancelables/MultiAssignmentCancelable$State
      10: astore_3
      11: getstatic     #43                 // Field monix/execution/cancelables/MultiAssignmentCancelable$State$Cancelled$.MODULE$:Lmonix/execution/cancelables/MultiAssignmentCancelable$State$Cancelled$;
      14: aload_3
      15: invokevirtual #47                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      18: ifeq          33
      21: aload_1
      22: invokeinterface #65,  1           // InterfaceMethod monix/execution/Cancelable.cancel:()V
      27: aload_0
      28: astore        4
      30: goto          78
      33: aload_3
      34: instanceof    #57                 // class monix/execution/cancelables/MultiAssignmentCancelable$State$Active
      37: ifeq          86
      40: aload_3
      41: checkcast     #57                 // class monix/execution/cancelables/MultiAssignmentCancelable$State$Active
      44: astore        5
      46: aload         5
      48: invokevirtual #72                 // Method monix/execution/cancelables/MultiAssignmentCancelable$State$Active.order:()J
      51: lstore        6
      53: aload_0
      54: getfield      #30                 // Field state:Lmonix/execution/atomic/AtomicAny;
      57: aload         5
      59: new           #57                 // class monix/execution/cancelables/MultiAssignmentCancelable$State$Active
      62: dup
      63: aload_1
      64: lload         6
      66: invokespecial #76                 // Method monix/execution/cancelables/MultiAssignmentCancelable$State$Active."<init>":(Lmonix/execution/Cancelable;J)V
      69: invokevirtual #80                 // Method monix/execution/atomic/AtomicAny.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      72: ifeq          81
      75: aload_0
      76: astore        4
      78: aload         4
      80: areturn
      81: aload_1
      82: astore_1
      83: goto          0
      86: new           #82                 // class scala/MatchError
      89: dup
      90: aload_3
      91: invokespecial #85                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      94: athrow

  public monix.execution.cancelables.MultiAssignmentCancelable orderedUpdate(monix.execution.Cancelable, long);
    Code:
       0: aload_0
       1: getfield      #30                 // Field state:Lmonix/execution/atomic/AtomicAny;
       4: invokevirtual #36                 // Method monix/execution/atomic/AtomicAny.get:()Ljava/lang/Object;
       7: checkcast     #38                 // class monix/execution/cancelables/MultiAssignmentCancelable$State
      10: astore        5
      12: getstatic     #43                 // Field monix/execution/cancelables/MultiAssignmentCancelable$State$Cancelled$.MODULE$:Lmonix/execution/cancelables/MultiAssignmentCancelable$State$Cancelled$;
      15: aload         5
      17: invokevirtual #47                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      20: ifeq          35
      23: aload_1
      24: invokeinterface #65,  1           // InterfaceMethod monix/execution/Cancelable.cancel:()V
      29: aload_0
      30: astore        6
      32: goto          155
      35: aload         5
      37: instanceof    #57                 // class monix/execution/cancelables/MultiAssignmentCancelable$State$Active
      40: ifeq          158
      43: aload         5
      45: checkcast     #57                 // class monix/execution/cancelables/MultiAssignmentCancelable$State$Active
      48: astore        7
      50: aload         7
      52: invokevirtual #72                 // Method monix/execution/cancelables/MultiAssignmentCancelable$State$Active.order:()J
      55: lstore        8
      57: lload         8
      59: lconst_0
      60: lcmp
      61: ifge          68
      64: iconst_1
      65: goto          69
      68: iconst_0
      69: lload_2
      70: lconst_0
      71: lcmp
      72: iflt          79
      75: iconst_1
      76: goto          80
      79: iconst_0
      80: ixor
      81: istore        10
      83: iload         10
      85: ifeq          95
      88: lload         8
      90: lload_2
      91: lcmp
      92: ifle          108
      95: lload         8
      97: lconst_0
      98: lcmp
      99: iflt          112
     102: lload_2
     103: lconst_0
     104: lcmp
     105: ifge          112
     108: iconst_1
     109: goto          113
     112: iconst_0
     113: istore        11
     115: iload         11
     117: ifeq          152
     120: aload_0
     121: getfield      #30                 // Field state:Lmonix/execution/atomic/AtomicAny;
     124: aload         7
     126: new           #57                 // class monix/execution/cancelables/MultiAssignmentCancelable$State$Active
     129: dup
     130: aload_1
     131: lload_2
     132: invokespecial #76                 // Method monix/execution/cancelables/MultiAssignmentCancelable$State$Active."<init>":(Lmonix/execution/Cancelable;J)V
     135: invokevirtual #80                 // Method monix/execution/atomic/AtomicAny.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
     138: ifeq          145
     141: aload_0
     142: goto          153
     145: aload_1
     146: lload_2
     147: lstore_2
     148: astore_1
     149: goto          0
     152: aload_0
     153: astore        6
     155: aload         6
     157: areturn
     158: new           #82                 // class scala/MatchError
     161: dup
     162: aload         5
     164: invokespecial #85                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     167: athrow

  public monix.execution.cancelables.AssignableCancelable$Multi orderedUpdate(monix.execution.Cancelable, long);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: invokevirtual #97                 // Method orderedUpdate:(Lmonix/execution/Cancelable;J)Lmonix/execution/cancelables/MultiAssignmentCancelable;
       6: areturn

  public monix.execution.cancelables.AssignableCancelable $colon$eq(monix.execution.Cancelable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #100                // Method $colon$eq:(Lmonix/execution/Cancelable;)Lmonix/execution/cancelables/MultiAssignmentCancelable;
       5: areturn

  public monix.execution.cancelables.MultiAssignmentCancelable(monix.execution.Cancelable);
    Code:
       0: aload_0
       1: invokespecial #103                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: ifnonnull     18
       9: getstatic     #108                // Field monix/execution/Cancelable$.MODULE$:Lmonix/execution/Cancelable$;
      12: invokevirtual #111                // Method monix/execution/Cancelable$.empty:()Lmonix/execution/Cancelable;
      15: goto          19
      18: aload_1
      19: astore_2
      20: getstatic     #116                // Field monix/execution/atomic/AtomicAny$.MODULE$:Lmonix/execution/atomic/AtomicAny$;
      23: new           #57                 // class monix/execution/cancelables/MultiAssignmentCancelable$State$Active
      26: dup
      27: aload_2
      28: lconst_0
      29: invokespecial #76                 // Method monix/execution/cancelables/MultiAssignmentCancelable$State$Active."<init>":(Lmonix/execution/Cancelable;J)V
      32: getstatic     #121                // Field monix/execution/atomic/PaddingStrategy$LeftRight128$.MODULE$:Lmonix/execution/atomic/PaddingStrategy$LeftRight128$;
      35: invokevirtual #125                // Method monix/execution/atomic/AtomicAny$.withPadding:(Ljava/lang/Object;Lmonix/execution/atomic/PaddingStrategy;)Lmonix/execution/atomic/AtomicAny;
      38: putfield      #30                 // Field state:Lmonix/execution/atomic/AtomicAny;
      41: return
}
