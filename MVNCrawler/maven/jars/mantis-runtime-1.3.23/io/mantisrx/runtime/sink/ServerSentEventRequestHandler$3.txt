Compiled from "ServerSentEventRequestHandler.java"
class io.mantisrx.runtime.sink.ServerSentEventRequestHandler$3 implements rx.functions.Func1<java.lang.Throwable, rx.Observable<? extends java.lang.Void>> {
  final io.mantisrx.common.metrics.Counter val$errorCounter;

  final mantis.io.reactivex.netty.protocol.http.server.HttpServerResponse val$response;

  final java.util.Map val$queryParameters;

  final io.mantisrx.common.network.WritableEndpoint val$sn;

  final rx.Subscription val$timerSubscription;

  final io.mantisrx.runtime.sink.ServerSentEventRequestHandler this$0;

  io.mantisrx.runtime.sink.ServerSentEventRequestHandler$3(io.mantisrx.runtime.sink.ServerSentEventRequestHandler, io.mantisrx.common.metrics.Counter, mantis.io.reactivex.netty.protocol.http.server.HttpServerResponse, java.util.Map, io.mantisrx.common.network.WritableEndpoint, rx.Subscription);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/mantisrx/runtime/sink/ServerSentEventRequestHandler;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$errorCounter:Lio/mantisrx/common/metrics/Counter;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$response:Lmantis/io/reactivex/netty/protocol/http/server/HttpServerResponse;
      15: aload_0
      16: aload         4
      18: putfield      #4                  // Field val$queryParameters:Ljava/util/Map;
      21: aload_0
      22: aload         5
      24: putfield      #5                  // Field val$sn:Lio/mantisrx/common/network/WritableEndpoint;
      27: aload_0
      28: aload         6
      30: putfield      #6                  // Field val$timerSubscription:Lrx/Subscription;
      33: aload_0
      34: invokespecial #7                  // Method java/lang/Object."<init>":()V
      37: return

  public rx.Observable<? extends java.lang.Void> call(java.lang.Throwable);
    Code:
       0: aload_1
       1: invokevirtual #8                  // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
       4: astore_2
       5: aload_0
       6: getfield      #2                  // Field val$errorCounter:Lio/mantisrx/common/metrics/Counter;
       9: invokeinterface #9,  1            // InterfaceMethod io/mantisrx/common/metrics/Counter.increment:()V
      14: aload_2
      15: ifnull        121
      18: aload_2
      19: instanceof    #10                 // class java/nio/channels/ClosedChannelException
      22: ifne          121
      25: invokestatic  #11                 // Method io/mantisrx/runtime/sink/ServerSentEventRequestHandler.access$100:()Lorg/slf4j/Logger;
      28: ldc           #12                 // String Error detected in SSE sink
      30: aload_2
      31: invokeinterface #13,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      36: aload_0
      37: getfield      #1                  // Field this$0:Lio/mantisrx/runtime/sink/ServerSentEventRequestHandler;
      40: invokestatic  #14                 // Method io/mantisrx/runtime/sink/ServerSentEventRequestHandler.access$200:(Lio/mantisrx/runtime/sink/ServerSentEventRequestHandler;)Lrx/functions/Func1;
      43: ifnull        117
      46: aload_0
      47: getfield      #3                  // Field val$response:Lmantis/io/reactivex/netty/protocol/http/server/HttpServerResponse;
      50: invokevirtual #15                 // Method mantis/io/reactivex/netty/protocol/http/server/HttpServerResponse.getAllocator:()Lio/netty/buffer/ByteBufAllocator;
      53: invokeinterface #16,  1           // InterfaceMethod io/netty/buffer/ByteBufAllocator.buffer:()Lio/netty/buffer/ByteBuf;
      58: ldc           #17                 // String error:
      60: invokevirtual #18                 // Method java/lang/String.getBytes:()[B
      63: invokevirtual #19                 // Method io/netty/buffer/ByteBuf.writeBytes:([B)Lio/netty/buffer/ByteBuf;
      66: astore_3
      67: aload_0
      68: getfield      #3                  // Field val$response:Lmantis/io/reactivex/netty/protocol/http/server/HttpServerResponse;
      71: invokevirtual #15                 // Method mantis/io/reactivex/netty/protocol/http/server/HttpServerResponse.getAllocator:()Lio/netty/buffer/ByteBufAllocator;
      74: invokeinterface #16,  1           // InterfaceMethod io/netty/buffer/ByteBufAllocator.buffer:()Lio/netty/buffer/ByteBuf;
      79: aload_0
      80: getfield      #1                  // Field this$0:Lio/mantisrx/runtime/sink/ServerSentEventRequestHandler;
      83: invokestatic  #14                 // Method io/mantisrx/runtime/sink/ServerSentEventRequestHandler.access$200:(Lio/mantisrx/runtime/sink/ServerSentEventRequestHandler;)Lrx/functions/Func1;
      86: aload_1
      87: invokeinterface #20,  2           // InterfaceMethod rx/functions/Func1.call:(Ljava/lang/Object;)Ljava/lang/Object;
      92: checkcast     #21                 // class java/lang/String
      95: invokevirtual #18                 // Method java/lang/String.getBytes:()[B
      98: invokevirtual #19                 // Method io/netty/buffer/ByteBuf.writeBytes:([B)Lio/netty/buffer/ByteBuf;
     101: astore        4
     103: aload_0
     104: getfield      #3                  // Field val$response:Lmantis/io/reactivex/netty/protocol/http/server/HttpServerResponse;
     107: aload_3
     108: aload         4
     110: invokestatic  #22                 // Method mantis/io/reactivex/netty/protocol/http/sse/ServerSentEvent.withEventType:(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)Lmantis/io/reactivex/netty/protocol/http/sse/ServerSentEvent;
     113: invokevirtual #23                 // Method mantis/io/reactivex/netty/protocol/http/server/HttpServerResponse.writeAndFlush:(Ljava/lang/Object;)Lrx/Observable;
     116: pop
     117: aload_1
     118: invokevirtual #24                 // Method java/lang/Throwable.printStackTrace:()V
     121: aload_0
     122: getfield      #1                  // Field this$0:Lio/mantisrx/runtime/sink/ServerSentEventRequestHandler;
     125: invokestatic  #25                 // Method io/mantisrx/runtime/sink/ServerSentEventRequestHandler.access$300:(Lio/mantisrx/runtime/sink/ServerSentEventRequestHandler;)Lrx/functions/Func2;
     128: ifnull        162
     131: aload_0
     132: getfield      #4                  // Field val$queryParameters:Ljava/util/Map;
     135: ifnull        162
     138: aload_0
     139: getfield      #1                  // Field this$0:Lio/mantisrx/runtime/sink/ServerSentEventRequestHandler;
     142: invokestatic  #25                 // Method io/mantisrx/runtime/sink/ServerSentEventRequestHandler.access$300:(Lio/mantisrx/runtime/sink/ServerSentEventRequestHandler;)Lrx/functions/Func2;
     145: aload_0
     146: getfield      #4                  // Field val$queryParameters:Ljava/util/Map;
     149: aload_0
     150: getfield      #1                  // Field this$0:Lio/mantisrx/runtime/sink/ServerSentEventRequestHandler;
     153: invokestatic  #26                 // Method io/mantisrx/runtime/sink/ServerSentEventRequestHandler.access$400:(Lio/mantisrx/runtime/sink/ServerSentEventRequestHandler;)Lio/mantisrx/runtime/Context;
     156: invokeinterface #27,  3           // InterfaceMethod rx/functions/Func2.call:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     161: pop
     162: aload_0
     163: getfield      #1                  // Field this$0:Lio/mantisrx/runtime/sink/ServerSentEventRequestHandler;
     166: getfield      #28                 // Field io/mantisrx/runtime/sink/ServerSentEventRequestHandler.ssm:Lio/mantisrx/common/network/ServerSlotManager;
     169: aload_0
     170: getfield      #5                  // Field val$sn:Lio/mantisrx/common/network/WritableEndpoint;
     173: aload_0
     174: getfield      #4                  // Field val$queryParameters:Ljava/util/Map;
     177: invokevirtual #29                 // Method io/mantisrx/common/network/ServerSlotManager.deregisterServer:(Lio/mantisrx/common/network/WritableEndpoint;Ljava/util/Map;)V
     180: aload_0
     181: getfield      #6                  // Field val$timerSubscription:Lrx/Subscription;
     184: invokeinterface #30,  1           // InterfaceMethod rx/Subscription.unsubscribe:()V
     189: aload_1
     190: invokestatic  #31                 // Method rx/Observable.error:(Ljava/lang/Throwable;)Lrx/Observable;
     193: areturn

  public java.lang.Object call(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #32                 // class java/lang/Throwable
       5: invokevirtual #33                 // Method call:(Ljava/lang/Throwable;)Lrx/Observable;
       8: areturn
}
