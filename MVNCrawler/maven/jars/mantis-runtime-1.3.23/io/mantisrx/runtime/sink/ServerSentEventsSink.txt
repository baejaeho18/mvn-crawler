Compiled from "ServerSentEventsSink.java"
public class io.mantisrx.runtime.sink.ServerSentEventsSink<T> implements io.mantisrx.runtime.sink.SelfDocumentingSink<T> {
  private static final org.slf4j.Logger LOG;

  private final rx.functions.Func2<java.util.Map<java.lang.String, java.util.List<java.lang.String>>, io.mantisrx.runtime.Context, java.lang.Void> subscribeProcessor;

  private final rx.subjects.BehaviorSubject<java.lang.Integer> portObservable;

  private rx.functions.Func1<T, java.lang.String> encoder;

  private rx.functions.Func1<java.lang.Throwable, java.lang.String> errorEncoder;

  private io.mantisrx.runtime.sink.predicate.Predicate<T> predicate;

  private rx.functions.Func2<java.util.Map<java.lang.String, java.util.List<java.lang.String>>, io.mantisrx.runtime.Context, java.lang.Void> requestPreprocessor;

  private rx.functions.Func2<java.util.Map<java.lang.String, java.util.List<java.lang.String>>, io.mantisrx.runtime.Context, java.lang.Void> requestPostprocessor;

  private int port;

  private io.mantisrx.common.properties.MantisPropertiesService propService;

  public io.mantisrx.runtime.sink.ServerSentEventsSink(rx.functions.Func1<T, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aconst_null
       4: invokespecial #1                  // Method "<init>":(Lrx/functions/Func1;Lrx/functions/Func1;Lio/mantisrx/runtime/sink/predicate/Predicate;)V
       7: return

  public io.mantisrx.runtime.sink.ServerSentEventsSink(rx.functions.Func1<T, java.lang.String>, rx.functions.Func1<java.lang.Throwable, java.lang.String>, io.mantisrx.runtime.sink.predicate.Predicate<T>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #3                  // Method rx/subjects/BehaviorSubject.create:()Lrx/subjects/BehaviorSubject;
       8: putfield      #4                  // Field portObservable:Lrx/subjects/BehaviorSubject;
      11: aload_0
      12: iconst_m1
      13: putfield      #5                  // Field port:I
      16: aload_2
      17: ifnonnull     26
      20: invokedynamic #6,  0              // InvokeDynamic #0:call:()Lrx/functions/Func1;
      25: astore_2
      26: aload_0
      27: aload_1
      28: putfield      #7                  // Field encoder:Lrx/functions/Func1;
      31: aload_0
      32: aload_2
      33: putfield      #8                  // Field errorEncoder:Lrx/functions/Func1;
      36: aload_0
      37: aload_3
      38: putfield      #9                  // Field predicate:Lio/mantisrx/runtime/sink/predicate/Predicate;
      41: aload_0
      42: getstatic     #10                 // Field io/mantisrx/server/core/ServiceRegistry.INSTANCE:Lio/mantisrx/server/core/ServiceRegistry;
      45: invokevirtual #11                 // Method io/mantisrx/server/core/ServiceRegistry.getPropertiesService:()Lio/mantisrx/common/properties/MantisPropertiesService;
      48: putfield      #12                 // Field propService:Lio/mantisrx/common/properties/MantisPropertiesService;
      51: aload_0
      52: aconst_null
      53: putfield      #13                 // Field subscribeProcessor:Lrx/functions/Func2;
      56: return

  public io.mantisrx.runtime.sink.ServerSentEventsSink(io.mantisrx.runtime.sink.ServerSentEventsSink$Builder<T>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #3                  // Method rx/subjects/BehaviorSubject.create:()Lrx/subjects/BehaviorSubject;
       8: putfield      #4                  // Field portObservable:Lrx/subjects/BehaviorSubject;
      11: aload_0
      12: iconst_m1
      13: putfield      #5                  // Field port:I
      16: aload_0
      17: aload_1
      18: getfield      #14                 // Field io/mantisrx/runtime/sink/ServerSentEventsSink$Builder.encoder:Lrx/functions/Func1;
      21: putfield      #7                  // Field encoder:Lrx/functions/Func1;
      24: aload_0
      25: aload_1
      26: getfield      #15                 // Field io/mantisrx/runtime/sink/ServerSentEventsSink$Builder.errorEncoder:Lrx/functions/Func1;
      29: putfield      #8                  // Field errorEncoder:Lrx/functions/Func1;
      32: aload_0
      33: aload_1
      34: getfield      #16                 // Field io/mantisrx/runtime/sink/ServerSentEventsSink$Builder.predicate:Lio/mantisrx/runtime/sink/predicate/Predicate;
      37: putfield      #9                  // Field predicate:Lio/mantisrx/runtime/sink/predicate/Predicate;
      40: aload_0
      41: aload_1
      42: getfield      #17                 // Field io/mantisrx/runtime/sink/ServerSentEventsSink$Builder.requestPreprocessor:Lrx/functions/Func2;
      45: putfield      #18                 // Field requestPreprocessor:Lrx/functions/Func2;
      48: aload_0
      49: aload_1
      50: getfield      #19                 // Field io/mantisrx/runtime/sink/ServerSentEventsSink$Builder.requestPostprocessor:Lrx/functions/Func2;
      53: putfield      #20                 // Field requestPostprocessor:Lrx/functions/Func2;
      56: aload_0
      57: aload_1
      58: invokestatic  #21                 // Method io/mantisrx/runtime/sink/ServerSentEventsSink$Builder.access$000:(Lio/mantisrx/runtime/sink/ServerSentEventsSink$Builder;)Lrx/functions/Func2;
      61: putfield      #13                 // Field subscribeProcessor:Lrx/functions/Func2;
      64: aload_0
      65: getstatic     #10                 // Field io/mantisrx/server/core/ServiceRegistry.INSTANCE:Lio/mantisrx/server/core/ServiceRegistry;
      68: invokevirtual #11                 // Method io/mantisrx/server/core/ServiceRegistry.getPropertiesService:()Lio/mantisrx/common/properties/MantisPropertiesService;
      71: putfield      #12                 // Field propService:Lio/mantisrx/common/properties/MantisPropertiesService;
      74: return

  public io.mantisrx.runtime.Metadata metadata();
    Code:
       0: new           #22                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #24                 // String HTTP server streaming results using Server-sent events.  The sink supports optional subscription (GET) parameters to change the events emitted by the stream.  A sampling interval can be applied to the stream using the GET parameter sample=numSeconds.  This will limit the stream rate to events-per-numSeconds.
      11: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_0
      16: getfield      #9                  // Field predicate:Lio/mantisrx/runtime/sink/predicate/Predicate;
      19: ifnull        49
      22: aload_0
      23: getfield      #9                  // Field predicate:Lio/mantisrx/runtime/sink/predicate/Predicate;
      26: invokevirtual #26                 // Method io/mantisrx/runtime/sink/predicate/Predicate.getDescription:()Ljava/lang/String;
      29: ifnull        49
      32: aload_1
      33: ldc           #27                 // String   Predicate description:
      35: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_0
      39: getfield      #9                  // Field predicate:Lio/mantisrx/runtime/sink/predicate/Predicate;
      42: invokevirtual #26                 // Method io/mantisrx/runtime/sink/predicate/Predicate.getDescription:()Ljava/lang/String;
      45: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: pop
      49: new           #28                 // class io/mantisrx/runtime/Metadata$Builder
      52: dup
      53: invokespecial #29                 // Method io/mantisrx/runtime/Metadata$Builder."<init>":()V
      56: ldc           #30                 // String Server Sent Event Sink
      58: invokevirtual #31                 // Method io/mantisrx/runtime/Metadata$Builder.name:(Ljava/lang/String;)Lio/mantisrx/runtime/Metadata$Builder;
      61: aload_1
      62: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: invokevirtual #33                 // Method io/mantisrx/runtime/Metadata$Builder.description:(Ljava/lang/String;)Lio/mantisrx/runtime/Metadata$Builder;
      68: invokevirtual #34                 // Method io/mantisrx/runtime/Metadata$Builder.build:()Lio/mantisrx/runtime/Metadata;
      71: areturn

  private boolean runNewSseServerImpl(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #12                 // Field propService:Lio/mantisrx/common/properties/MantisPropertiesService;
       4: ldc           #35                 // String mantis.sse.newServerImpl
       6: ldc           #36                 // String true
       8: invokevirtual #37                 // Method io/mantisrx/common/properties/MantisPropertiesService.getStringValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      11: astore_2
      12: aload_0
      13: getfield      #12                 // Field propService:Lio/mantisrx/common/properties/MantisPropertiesService;
      16: new           #22                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      23: aload_1
      24: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: ldc           #38                 // String .mantis.sse.newServerImpl
      29: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: ldc           #39                 // String false
      37: invokevirtual #37                 // Method io/mantisrx/common/properties/MantisPropertiesService.getStringValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      40: astore_3
      41: aload_2
      42: invokestatic  #40                 // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
      45: ifne          55
      48: aload_3
      49: invokestatic  #40                 // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
      52: ifeq          59
      55: iconst_1
      56: goto          60
      59: iconst_0
      60: ireturn

  private int numConsumerThreads();
    Code:
       0: aload_0
       1: getfield      #12                 // Field propService:Lio/mantisrx/common/properties/MantisPropertiesService;
       4: ldc           #41                 // String mantis.sse.numConsumerThreads
       6: ldc           #42                 // String 1
       8: invokevirtual #37                 // Method io/mantisrx/common/properties/MantisPropertiesService.getStringValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      11: astore_1
      12: aload_1
      13: invokestatic  #43                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      16: ireturn

  private int maxChunkSize();
    Code:
       0: aload_0
       1: getfield      #12                 // Field propService:Lio/mantisrx/common/properties/MantisPropertiesService;
       4: ldc           #44                 // String mantis.sse.maxChunkSize
       6: ldc           #45                 // String 1000
       8: invokevirtual #37                 // Method io/mantisrx/common/properties/MantisPropertiesService.getStringValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      11: astore_1
      12: aload_1
      13: invokestatic  #43                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      16: ireturn

  private int maxReadTime();
    Code:
       0: aload_0
       1: getfield      #12                 // Field propService:Lio/mantisrx/common/properties/MantisPropertiesService;
       4: ldc           #46                 // String mantis.sse.maxReadTimeMSec
       6: ldc           #47                 // String 250
       8: invokevirtual #37                 // Method io/mantisrx/common/properties/MantisPropertiesService.getStringValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      11: astore_1
      12: aload_1
      13: invokestatic  #43                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      16: ireturn

  private int bufferCapacity();
    Code:
       0: aload_0
       1: getfield      #12                 // Field propService:Lio/mantisrx/common/properties/MantisPropertiesService;
       4: ldc           #48                 // String mantis.sse.bufferCapacity
       6: ldc           #49                 // String 25000
       8: invokevirtual #37                 // Method io/mantisrx/common/properties/MantisPropertiesService.getStringValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      11: astore_1
      12: aload_1
      13: invokestatic  #43                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      16: ireturn

  private boolean useSpsc();
    Code:
       0: aload_0
       1: getfield      #12                 // Field propService:Lio/mantisrx/common/properties/MantisPropertiesService;
       4: ldc           #50                 // String mantis.sse.spsc
       6: ldc           #39                 // String false
       8: invokevirtual #37                 // Method io/mantisrx/common/properties/MantisPropertiesService.getStringValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      11: astore_1
      12: aload_1
      13: invokestatic  #40                 // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
      16: ireturn

  public void call(io.mantisrx.runtime.Context, io.mantisrx.runtime.PortRequest, rx.Observable<T>);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #51                 // Method io/mantisrx/runtime/PortRequest.getPort:()I
       5: putfield      #5                  // Field port:I
       8: aload_0
       9: aload_1
      10: invokevirtual #52                 // Method io/mantisrx/runtime/Context.getWorkerInfo:()Lio/mantisrx/runtime/WorkerInfo;
      13: invokevirtual #53                 // Method io/mantisrx/runtime/WorkerInfo.getJobName:()Ljava/lang/String;
      16: invokespecial #54                 // Method runNewSseServerImpl:(Ljava/lang/String;)Z
      19: ifeq          191
      22: getstatic     #55                 // Field LOG:Lorg/slf4j/Logger;
      25: new           #22                 // class java/lang/StringBuilder
      28: dup
      29: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      32: ldc           #56                 // String Serving modern HTTP SSE server sink on port:
      34: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_0
      38: getfield      #5                  // Field port:I
      41: invokevirtual #57                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      44: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: invokeinterface #58,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      52: ldc           #59                 // String SseSink
      54: astore        4
      56: new           #60                 // class io/reactivex/mantis/network/push/ServerConfig$Builder
      59: dup
      60: invokespecial #61                 // Method io/reactivex/mantis/network/push/ServerConfig$Builder."<init>":()V
      63: aload         4
      65: invokevirtual #62                 // Method io/reactivex/mantis/network/push/ServerConfig$Builder.name:(Ljava/lang/String;)Lio/reactivex/mantis/network/push/ServerConfig$Builder;
      68: aload         4
      70: aload_0
      71: getfield      #7                  // Field encoder:Lrx/functions/Func1;
      74: invokestatic  #63                 // Method io/reactivex/mantis/network/push/Routers.roundRobinSse:(Ljava/lang/String;Lrx/functions/Func1;)Lio/reactivex/mantis/network/push/Router;
      77: invokevirtual #64                 // Method io/reactivex/mantis/network/push/ServerConfig$Builder.groupRouter:(Lio/reactivex/mantis/network/push/Router;)Lio/reactivex/mantis/network/push/ServerConfig$Builder;
      80: aload_0
      81: getfield      #5                  // Field port:I
      84: invokevirtual #65                 // Method io/reactivex/mantis/network/push/ServerConfig$Builder.port:(I)Lio/reactivex/mantis/network/push/ServerConfig$Builder;
      87: aload_1
      88: invokevirtual #66                 // Method io/mantisrx/runtime/Context.getMetricsRegistry:()Lio/mantisrx/common/metrics/MetricsRegistry;
      91: invokevirtual #67                 // Method io/reactivex/mantis/network/push/ServerConfig$Builder.metricsRegistry:(Lio/mantisrx/common/metrics/MetricsRegistry;)Lio/reactivex/mantis/network/push/ServerConfig$Builder;
      94: aload_0
      95: invokespecial #68                 // Method maxReadTime:()I
      98: invokevirtual #69                 // Method io/reactivex/mantis/network/push/ServerConfig$Builder.maxChunkTimeMSec:(I)Lio/reactivex/mantis/network/push/ServerConfig$Builder;
     101: aload_0
     102: invokespecial #70                 // Method maxChunkSize:()I
     105: invokevirtual #71                 // Method io/reactivex/mantis/network/push/ServerConfig$Builder.maxChunkSize:(I)Lio/reactivex/mantis/network/push/ServerConfig$Builder;
     108: aload_0
     109: invokespecial #72                 // Method bufferCapacity:()I
     112: invokevirtual #73                 // Method io/reactivex/mantis/network/push/ServerConfig$Builder.bufferCapacity:(I)Lio/reactivex/mantis/network/push/ServerConfig$Builder;
     115: aload_0
     116: invokespecial #74                 // Method numConsumerThreads:()I
     119: invokevirtual #75                 // Method io/reactivex/mantis/network/push/ServerConfig$Builder.numQueueConsumers:(I)Lio/reactivex/mantis/network/push/ServerConfig$Builder;
     122: aload_0
     123: invokespecial #76                 // Method useSpsc:()Z
     126: invokevirtual #77                 // Method io/reactivex/mantis/network/push/ServerConfig$Builder.useSpscQueue:(Z)Lio/reactivex/mantis/network/push/ServerConfig$Builder;
     129: aload_0
     130: invokespecial #78                 // Method getBatchInterval:()I
     133: invokevirtual #69                 // Method io/reactivex/mantis/network/push/ServerConfig$Builder.maxChunkTimeMSec:(I)Lio/reactivex/mantis/network/push/ServerConfig$Builder;
     136: astore        5
     138: aload_0
     139: getfield      #9                  // Field predicate:Lio/mantisrx/runtime/sink/predicate/Predicate;
     142: ifnull        158
     145: aload         5
     147: aload_0
     148: getfield      #9                  // Field predicate:Lio/mantisrx/runtime/sink/predicate/Predicate;
     151: invokevirtual #79                 // Method io/mantisrx/runtime/sink/predicate/Predicate.getPredicate:()Lrx/functions/Func1;
     154: invokevirtual #80                 // Method io/reactivex/mantis/network/push/ServerConfig$Builder.predicate:(Lrx/functions/Func1;)Lio/reactivex/mantis/network/push/ServerConfig$Builder;
     157: pop
     158: aload         5
     160: invokevirtual #81                 // Method io/reactivex/mantis/network/push/ServerConfig$Builder.build:()Lio/reactivex/mantis/network/push/ServerConfig;
     163: aload_3
     164: aload_0
     165: getfield      #18                 // Field requestPreprocessor:Lrx/functions/Func2;
     168: aload_0
     169: getfield      #20                 // Field requestPostprocessor:Lrx/functions/Func2;
     172: aload_0
     173: getfield      #13                 // Field subscribeProcessor:Lrx/functions/Func2;
     176: aload_1
     177: iconst_1
     178: invokestatic  #82                 // Method io/reactivex/mantis/network/push/PushServers.infiniteStreamSse:(Lio/reactivex/mantis/network/push/ServerConfig;Lrx/Observable;Lrx/functions/Func2;Lrx/functions/Func2;Lrx/functions/Func2;Ljava/lang/Object;Z)Lio/reactivex/mantis/network/push/PushServerSse;
     181: astore        6
     183: aload         6
     185: invokevirtual #83                 // Method io/reactivex/mantis/network/push/PushServerSse.start:()V
     188: goto          313
     191: getstatic     #55                 // Field LOG:Lorg/slf4j/Logger;
     194: new           #22                 // class java/lang/StringBuilder
     197: dup
     198: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
     201: ldc           #84                 // String Serving legacy HTTP SSE server sink on port:
     203: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     206: aload_0
     207: getfield      #5                  // Field port:I
     210: invokevirtual #57                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     213: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     216: invokeinterface #58,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     221: aload_0
     222: invokespecial #78                 // Method getBatchInterval:()I
     225: istore        4
     227: aload_0
     228: getfield      #5                  // Field port:I
     231: new           #85                 // class io/mantisrx/runtime/sink/ServerSentEventRequestHandler
     234: dup
     235: aload_3
     236: aload_0
     237: getfield      #7                  // Field encoder:Lrx/functions/Func1;
     240: aload_0
     241: getfield      #8                  // Field errorEncoder:Lrx/functions/Func1;
     244: aload_0
     245: getfield      #9                  // Field predicate:Lio/mantisrx/runtime/sink/predicate/Predicate;
     248: aload_0
     249: getfield      #18                 // Field requestPreprocessor:Lrx/functions/Func2;
     252: aload_0
     253: getfield      #20                 // Field requestPostprocessor:Lrx/functions/Func2;
     256: aload_1
     257: iload         4
     259: invokespecial #86                 // Method io/mantisrx/runtime/sink/ServerSentEventRequestHandler."<init>":(Lrx/Observable;Lrx/functions/Func1;Lrx/functions/Func1;Lio/mantisrx/runtime/sink/predicate/Predicate;Lrx/functions/Func2;Lrx/functions/Func2;Lio/mantisrx/runtime/Context;I)V
     262: invokestatic  #87                 // Method mantis/io/reactivex/netty/RxNetty.newHttpServerBuilder:(ILmantis/io/reactivex/netty/protocol/http/server/RequestHandler;)Lmantis/io/reactivex/netty/protocol/http/server/HttpServerBuilder;
     265: invokestatic  #88                 // Method mantis/io/reactivex/netty/pipeline/PipelineConfigurators.serveSseConfigurator:()Lmantis/io/reactivex/netty/pipeline/PipelineConfigurator;
     268: invokevirtual #89                 // Method mantis/io/reactivex/netty/protocol/http/server/HttpServerBuilder.pipelineConfigurator:(Lmantis/io/reactivex/netty/pipeline/PipelineConfigurator;)Lmantis/io/reactivex/netty/server/AbstractServerBuilder;
     271: checkcast     #90                 // class mantis/io/reactivex/netty/protocol/http/server/HttpServerBuilder
     274: getstatic     #91                 // Field io/netty/channel/ChannelOption.WRITE_BUFFER_HIGH_WATER_MARK:Lio/netty/channel/ChannelOption;
     277: ldc           #92                 // int 5242880
     279: invokestatic  #93                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     282: invokevirtual #94                 // Method mantis/io/reactivex/netty/protocol/http/server/HttpServerBuilder.channelOption:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)Lmantis/io/reactivex/netty/server/AbstractServerBuilder;
     285: checkcast     #90                 // class mantis/io/reactivex/netty/protocol/http/server/HttpServerBuilder
     288: getstatic     #95                 // Field io/netty/channel/ChannelOption.WRITE_BUFFER_LOW_WATER_MARK:Lio/netty/channel/ChannelOption;
     291: ldc           #96                 // int 1048576
     293: invokestatic  #93                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     296: invokevirtual #94                 // Method mantis/io/reactivex/netty/protocol/http/server/HttpServerBuilder.channelOption:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)Lmantis/io/reactivex/netty/server/AbstractServerBuilder;
     299: checkcast     #90                 // class mantis/io/reactivex/netty/protocol/http/server/HttpServerBuilder
     302: invokevirtual #97                 // Method mantis/io/reactivex/netty/protocol/http/server/HttpServerBuilder.build:()Lmantis/io/reactivex/netty/protocol/http/server/HttpServer;
     305: astore        5
     307: aload         5
     309: invokevirtual #98                 // Method mantis/io/reactivex/netty/protocol/http/server/HttpServer.start:()Lmantis/io/reactivex/netty/protocol/http/server/HttpServer;
     312: pop
     313: aload_0
     314: getfield      #4                  // Field portObservable:Lrx/subjects/BehaviorSubject;
     317: aload_0
     318: getfield      #5                  // Field port:I
     321: invokestatic  #93                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     324: invokevirtual #99                 // Method rx/subjects/BehaviorSubject.onNext:(Ljava/lang/Object;)V
     327: return

  private int getBatchInterval();
    Code:
       0: getstatic     #10                 // Field io/mantisrx/server/core/ServiceRegistry.INSTANCE:Lio/mantisrx/server/core/ServiceRegistry;
       3: invokevirtual #11                 // Method io/mantisrx/server/core/ServiceRegistry.getPropertiesService:()Lio/mantisrx/common/properties/MantisPropertiesService;
       6: ldc           #100                // String mantis.sse.batchInterval
       8: ldc           #101                // String 100
      10: invokevirtual #37                 // Method io/mantisrx/common/properties/MantisPropertiesService.getStringValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      13: astore_1
      14: getstatic     #55                 // Field LOG:Lorg/slf4j/Logger;
      17: new           #22                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #102                // String Read fast property mantis.sse.batchInterval
      26: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_1
      30: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokeinterface #58,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      41: aload_1
      42: invokestatic  #43                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      45: ireturn

  private int getHighWaterMark();
    Code:
       0: aload_0
       1: getfield      #12                 // Field propService:Lio/mantisrx/common/properties/MantisPropertiesService;
       4: ldc           #103                // String JOB_NAME
       6: ldc           #104                // String default
       8: invokevirtual #37                 // Method io/mantisrx/common/properties/MantisPropertiesService.getStringValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      11: astore_1
      12: ldc           #92                 // int 5242880
      14: istore_2
      15: aload_0
      16: getfield      #12                 // Field propService:Lio/mantisrx/common/properties/MantisPropertiesService;
      19: new           #22                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      26: aload_1
      27: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: ldc           #105                // String .sse.highwater.mark
      32: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: ldc           #92                 // int 5242880
      40: invokestatic  #106                // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      43: invokevirtual #37                 // Method io/mantisrx/common/properties/MantisPropertiesService.getStringValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      46: astore_3
      47: getstatic     #55                 // Field LOG:Lorg/slf4j/Logger;
      50: new           #22                 // class java/lang/StringBuilder
      53: dup
      54: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      57: ldc           #107                // String Read fast property:
      59: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_1
      63: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: ldc           #108                // String .sse.highwater.mark ->
      68: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: aload_3
      72: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      78: invokeinterface #58,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      83: aload_3
      84: invokestatic  #43                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      87: istore_2
      88: goto          133
      91: astore        4
      93: getstatic     #55                 // Field LOG:Lorg/slf4j/Logger;
      96: new           #22                 // class java/lang/StringBuilder
      99: dup
     100: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
     103: ldc           #110                // String Error parsing string
     105: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: aload_3
     109: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: ldc           #111                // String  exception
     114: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: aload         4
     119: invokevirtual #112                // Method java/lang/Exception.getMessage:()Ljava/lang/String;
     122: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     128: invokeinterface #113,  2          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
     133: iload_2
     134: ireturn
    Exception table:
       from    to  target type
          83    88    91   Class java/lang/Exception

  public int getServerPort();
    Code:
       0: aload_0
       1: getfield      #5                  // Field port:I
       4: ireturn

  public rx.Observable<java.lang.Integer> portConnections();
    Code:
       0: aload_0
       1: getfield      #4                  // Field portObservable:Lrx/subjects/BehaviorSubject;
       4: areturn

  public void call(java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #114                // class io/mantisrx/runtime/Context
       5: aload_2
       6: checkcast     #115                // class io/mantisrx/runtime/PortRequest
       9: aload_3
      10: checkcast     #116                // class rx/Observable
      13: invokevirtual #117                // Method call:(Lio/mantisrx/runtime/Context;Lio/mantisrx/runtime/PortRequest;Lrx/Observable;)V
      16: return

  static {};
    Code:
       0: ldc           #118                // class io/mantisrx/runtime/sink/ServerSentEventsSink
       2: invokestatic  #119                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #55                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
