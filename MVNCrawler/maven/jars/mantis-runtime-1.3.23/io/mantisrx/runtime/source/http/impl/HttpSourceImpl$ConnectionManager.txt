Compiled from "HttpSourceImpl.java"
class io.mantisrx.runtime.source.http.impl.HttpSourceImpl$ConnectionManager<E> {
  private final java.util.concurrent.ConcurrentMap<mantis.io.reactivex.netty.client.RxClient$ServerInfo, mantis.io.reactivex.netty.protocol.http.client.HttpClientResponse<E>> connectedServers;

  private final java.util.Set<mantis.io.reactivex.netty.client.RxClient$ServerInfo> retryServers;

  private final java.util.Set<mantis.io.reactivex.netty.client.RxClient$ServerInfo> connectionAttempted;

  private io.mantisrx.runtime.source.http.impl.HttpSourceImpl$ConnectionManager();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #5                  // Field connectedServers:Ljava/util/concurrent/ConcurrentMap;
      15: aload_0
      16: new           #6                  // class java/util/concurrent/CopyOnWriteArraySet
      19: dup
      20: invokespecial #7                  // Method java/util/concurrent/CopyOnWriteArraySet."<init>":()V
      23: putfield      #8                  // Field retryServers:Ljava/util/Set;
      26: aload_0
      27: new           #6                  // class java/util/concurrent/CopyOnWriteArraySet
      30: dup
      31: invokespecial #7                  // Method java/util/concurrent/CopyOnWriteArraySet."<init>":()V
      34: putfield      #9                  // Field connectionAttempted:Ljava/util/Set;
      37: return

  public void serverConnected(mantis.io.reactivex.netty.client.RxClient$ServerInfo, mantis.io.reactivex.netty.protocol.http.client.HttpClientResponse<E>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field connectedServers:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_2
       6: invokeinterface #10,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: aload_0
      13: getfield      #8                  // Field retryServers:Ljava/util/Set;
      16: aload_1
      17: invokeinterface #11,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      22: pop
      23: aload_0
      24: getfield      #9                  // Field connectionAttempted:Ljava/util/Set;
      27: aload_1
      28: invokeinterface #11,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      33: pop
      34: invokestatic  #12                 // Method io/mantisrx/runtime/source/http/impl/HttpSourceImpl.access$1200:()Lorg/slf4j/Logger;
      37: new           #13                 // class java/lang/StringBuilder
      40: dup
      41: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      44: ldc           #15                 // String CM: Server connected:
      46: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: aload_1
      50: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      53: ldc           #18                 // String  count
      55: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: aload_0
      59: getfield      #5                  // Field connectedServers:Ljava/util/concurrent/ConcurrentMap;
      62: invokeinterface #19,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.size:()I
      67: invokevirtual #20                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      70: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: invokeinterface #22,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      78: return

  public void serverConnectionAttempted(mantis.io.reactivex.netty.client.RxClient$ServerInfo);
    Code:
       0: aload_0
       1: getfield      #9                  // Field connectionAttempted:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #23,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public boolean alreadyConnected(mantis.io.reactivex.netty.client.RxClient$ServerInfo);
    Code:
       0: aload_0
       1: getfield      #5                  // Field connectedServers:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #24,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean connectionAlreadyAttempted(mantis.io.reactivex.netty.client.RxClient$ServerInfo);
    Code:
       0: aload_0
       1: getfield      #9                  // Field connectionAttempted:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #25,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      10: ireturn

  public void serverDisconnected(mantis.io.reactivex.netty.client.RxClient$ServerInfo);
    Code:
       0: aload_0
       1: getfield      #5                  // Field connectedServers:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #26,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: aload_0
      12: getfield      #9                  // Field connectionAttempted:Ljava/util/Set;
      15: aload_1
      16: invokeinterface #11,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      21: pop
      22: aload_0
      23: getfield      #8                  // Field retryServers:Ljava/util/Set;
      26: aload_1
      27: invokeinterface #23,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      32: pop
      33: invokestatic  #12                 // Method io/mantisrx/runtime/source/http/impl/HttpSourceImpl.access$1200:()Lorg/slf4j/Logger;
      36: new           #13                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #27                 // String CM: Server disconnected:
      45: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_1
      49: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      52: ldc           #18                 // String  count
      54: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload_0
      58: getfield      #5                  // Field connectedServers:Ljava/util/concurrent/ConcurrentMap;
      61: invokeinterface #19,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.size:()I
      66: invokevirtual #20                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      69: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: invokeinterface #22,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      77: return

  public void serverRemoved(mantis.io.reactivex.netty.client.RxClient$ServerInfo);
    Code:
       0: aload_0
       1: getfield      #5                  // Field connectedServers:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #26,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: aload_0
      12: getfield      #9                  // Field connectionAttempted:Ljava/util/Set;
      15: aload_1
      16: invokeinterface #11,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      21: pop
      22: aload_0
      23: getfield      #8                  // Field retryServers:Ljava/util/Set;
      26: aload_1
      27: invokeinterface #11,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      32: pop
      33: invokestatic  #12                 // Method io/mantisrx/runtime/source/http/impl/HttpSourceImpl.access$1200:()Lorg/slf4j/Logger;
      36: new           #13                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #28                 // String CM: Server removed:
      45: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_1
      49: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      52: ldc           #18                 // String  count
      54: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload_0
      58: getfield      #5                  // Field connectedServers:Ljava/util/concurrent/ConcurrentMap;
      61: invokeinterface #19,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.size:()I
      66: invokevirtual #20                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      69: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: invokeinterface #22,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      77: return

  public java.util.Set<mantis.io.reactivex.netty.client.RxClient$ServerInfo> getConnectedServers();
    Code:
       0: aload_0
       1: getfield      #5                  // Field connectedServers:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #29,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.keySet:()Ljava/util/Set;
       9: invokestatic  #30                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      12: areturn

  public java.util.Set<mantis.io.reactivex.netty.client.RxClient$ServerInfo> getRetryServers();
    Code:
       0: aload_0
       1: getfield      #8                  // Field retryServers:Ljava/util/Set;
       4: invokestatic  #30                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
       7: areturn

  public java.util.Set<mantis.io.reactivex.netty.client.RxClient$ServerInfo> getConnectionAttemptedServers();
    Code:
       0: aload_0
       1: getfield      #9                  // Field connectionAttempted:Ljava/util/Set;
       4: invokestatic  #30                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
       7: areturn

  public void reset();
    Code:
       0: aload_0
       1: getfield      #5                  // Field connectedServers:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #31,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
       9: aload_0
      10: getfield      #9                  // Field connectionAttempted:Ljava/util/Set;
      13: invokeinterface #32,  1           // InterfaceMethod java/util/Set.clear:()V
      18: aload_0
      19: getfield      #8                  // Field retryServers:Ljava/util/Set;
      22: invokeinterface #32,  1           // InterfaceMethod java/util/Set.clear:()V
      27: invokestatic  #12                 // Method io/mantisrx/runtime/source/http/impl/HttpSourceImpl.access$1200:()Lorg/slf4j/Logger;
      30: ldc           #33                 // String CM: reset
      32: invokeinterface #22,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      37: return

  io.mantisrx.runtime.source.http.impl.HttpSourceImpl$ConnectionManager(io.mantisrx.runtime.source.http.impl.HttpSourceImpl$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
