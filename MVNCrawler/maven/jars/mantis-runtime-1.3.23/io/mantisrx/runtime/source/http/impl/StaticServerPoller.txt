Compiled from "StaticServerPoller.java"
public class io.mantisrx.runtime.source.http.impl.StaticServerPoller implements io.mantisrx.runtime.source.http.ServerPoller {
  private final java.util.Set<mantis.io.reactivex.netty.client.RxClient$ServerInfo> servers;

  private final int periodSeconds;

  private final rx.Scheduler scheduler;

  public io.mantisrx.runtime.source.http.impl.StaticServerPoller(java.util.Set<mantis.io.reactivex.netty.client.RxClient$ServerInfo>, int, rx.Scheduler);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #4                  // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
       9: putfield      #2                  // Field servers:Ljava/util/Set;
      12: aload_0
      13: iload_2
      14: putfield      #5                  // Field periodSeconds:I
      17: aload_0
      18: aload_3
      19: putfield      #6                  // Field scheduler:Lrx/Scheduler;
      22: return

  public io.mantisrx.runtime.source.http.impl.StaticServerPoller(java.util.Set<mantis.io.reactivex.netty.client.RxClient$ServerInfo>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #7                  // Method rx/schedulers/Schedulers.computation:()Lrx/Scheduler;
       6: invokespecial #8                  // Method "<init>":(Ljava/util/Set;ILrx/Scheduler;)V
       9: return

  private rx.Scheduler$Worker schedulePolling(rx.Subscriber<? super java.util.Set<mantis.io.reactivex.netty.client.RxClient$ServerInfo>>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field scheduler:Lrx/Scheduler;
       4: invokevirtual #9                  // Method rx/Scheduler.createWorker:()Lrx/Scheduler$Worker;
       7: astore_2
       8: aload_2
       9: new           #10                 // class io/mantisrx/runtime/source/http/impl/StaticServerPoller$1
      12: dup
      13: aload_0
      14: aload_1
      15: aload_2
      16: invokespecial #11                 // Method io/mantisrx/runtime/source/http/impl/StaticServerPoller$1."<init>":(Lio/mantisrx/runtime/source/http/impl/StaticServerPoller;Lrx/Subscriber;Lrx/Scheduler$Worker;)V
      19: lconst_0
      20: aload_0
      21: getfield      #5                  // Field periodSeconds:I
      24: i2l
      25: getstatic     #12                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      28: invokevirtual #13                 // Method rx/Scheduler$Worker.schedulePeriodically:(Lrx/functions/Action0;JJLjava/util/concurrent/TimeUnit;)Lrx/Subscription;
      31: pop
      32: aload_2
      33: areturn

  public rx.Observable<java.util.Set<mantis.io.reactivex.netty.client.RxClient$ServerInfo>> servers();
    Code:
       0: new           #14                 // class io/mantisrx/runtime/source/http/impl/StaticServerPoller$2
       3: dup
       4: aload_0
       5: invokespecial #15                 // Method io/mantisrx/runtime/source/http/impl/StaticServerPoller$2."<init>":(Lio/mantisrx/runtime/source/http/impl/StaticServerPoller;)V
       8: invokestatic  #16                 // Method rx/Observable.create:(Lrx/Observable$OnSubscribe;)Lrx/Observable;
      11: areturn

  public java.util.Set<mantis.io.reactivex.netty.client.RxClient$ServerInfo> getServers();
    Code:
       0: aload_0
       1: getfield      #2                  // Field servers:Ljava/util/Set;
       4: areturn

  static java.util.Set access$000(io.mantisrx.runtime.source.http.impl.StaticServerPoller);
    Code:
       0: aload_0
       1: getfield      #2                  // Field servers:Ljava/util/Set;
       4: areturn

  static rx.Scheduler$Worker access$100(io.mantisrx.runtime.source.http.impl.StaticServerPoller, rx.Subscriber);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method schedulePolling:(Lrx/Subscriber;)Lrx/Scheduler$Worker;
       5: areturn
}
