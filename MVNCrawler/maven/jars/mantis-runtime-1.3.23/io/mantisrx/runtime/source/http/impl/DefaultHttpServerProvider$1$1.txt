Compiled from "DefaultHttpServerProvider.java"
class io.mantisrx.runtime.source.http.impl.DefaultHttpServerProvider$1$1 extends rx.Subscriber<java.util.Set<mantis.io.reactivex.netty.client.RxClient$ServerInfo>> {
  final rx.Subscriber val$subscriber;

  final java.util.concurrent.atomic.AtomicReference val$activeServers;

  final io.mantisrx.runtime.source.http.impl.DefaultHttpServerProvider$1 this$1;

  io.mantisrx.runtime.source.http.impl.DefaultHttpServerProvider$1$1(io.mantisrx.runtime.source.http.impl.DefaultHttpServerProvider$1, rx.Subscriber, java.util.concurrent.atomic.AtomicReference);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$1:Lio/mantisrx/runtime/source/http/impl/DefaultHttpServerProvider$1;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$subscriber:Lrx/Subscriber;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$activeServers:Ljava/util/concurrent/atomic/AtomicReference;
      15: aload_0
      16: invokespecial #4                  // Method rx/Subscriber."<init>":()V
      19: return

  public void onCompleted();
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$subscriber:Lrx/Subscriber;
       4: invokevirtual #5                  // Method rx/Subscriber.onCompleted:()V
       7: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$subscriber:Lrx/Subscriber;
       4: aload_1
       5: invokevirtual #6                  // Method rx/Subscriber.onError:(Ljava/lang/Throwable;)V
       8: return

  public void onNext(java.util.Set<mantis.io.reactivex.netty.client.RxClient$ServerInfo>);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$1:Lio/mantisrx/runtime/source/http/impl/DefaultHttpServerProvider$1;
       4: getfield      #7                  // Field io/mantisrx/runtime/source/http/impl/DefaultHttpServerProvider$1.this$0:Lio/mantisrx/runtime/source/http/impl/DefaultHttpServerProvider;
       7: invokestatic  #8                  // Method io/mantisrx/runtime/source/http/impl/DefaultHttpServerProvider.access$000:(Lio/mantisrx/runtime/source/http/impl/DefaultHttpServerProvider;)Lio/mantisrx/common/metrics/Gauge;
      10: aload_1
      11: invokeinterface #9,  1            // InterfaceMethod java/util/Set.size:()I
      16: i2l
      17: invokeinterface #10,  3           // InterfaceMethod io/mantisrx/common/metrics/Gauge.set:(J)V
      22: aload_0
      23: getfield      #3                  // Field val$activeServers:Ljava/util/concurrent/atomic/AtomicReference;
      26: aload_1
      27: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      30: checkcast     #12                 // class java/util/Set
      33: astore_2
      34: aload_1
      35: aload_2
      36: invokestatic  #13                 // Method io/mantisrx/runtime/source/http/impl/DefaultHttpServerProvider.access$100:(Ljava/util/Set;Ljava/util/Set;)Ljava/util/Set;
      39: astore_3
      40: aload_0
      41: getfield      #1                  // Field this$1:Lio/mantisrx/runtime/source/http/impl/DefaultHttpServerProvider$1;
      44: getfield      #7                  // Field io/mantisrx/runtime/source/http/impl/DefaultHttpServerProvider$1.this$0:Lio/mantisrx/runtime/source/http/impl/DefaultHttpServerProvider;
      47: invokestatic  #14                 // Method io/mantisrx/runtime/source/http/impl/DefaultHttpServerProvider.access$200:(Lio/mantisrx/runtime/source/http/impl/DefaultHttpServerProvider;)Lio/mantisrx/common/metrics/Gauge;
      50: aload_3
      51: invokeinterface #9,  1            // InterfaceMethod java/util/Set.size:()I
      56: i2l
      57: invokeinterface #10,  3           // InterfaceMethod io/mantisrx/common/metrics/Gauge.set:(J)V
      62: aload_1
      63: invokeinterface #15,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      68: astore        4
      70: aload         4
      72: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      77: ifeq          104
      80: aload         4
      82: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      87: checkcast     #18                 // class mantis/io/reactivex/netty/client/RxClient$ServerInfo
      90: astore        5
      92: aload_0
      93: getfield      #2                  // Field val$subscriber:Lrx/Subscriber;
      96: aload         5
      98: invokevirtual #19                 // Method rx/Subscriber.onNext:(Ljava/lang/Object;)V
     101: goto          70
     104: return

  public void onNext(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #12                 // class java/util/Set
       5: invokevirtual #20                 // Method onNext:(Ljava/util/Set;)V
       8: return
}
