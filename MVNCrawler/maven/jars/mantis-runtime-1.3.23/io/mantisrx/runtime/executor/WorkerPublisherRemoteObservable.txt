Compiled from "WorkerPublisherRemoteObservable.java"
public class io.mantisrx.runtime.executor.WorkerPublisherRemoteObservable<T, R> implements io.mantisrx.runtime.executor.WorkerPublisher<T, R> {
  private static final org.slf4j.Logger logger;

  private java.lang.String name;

  private int serverPort;

  private io.reactivex.mantis.remote.observable.RemoteRxServer server;

  private rx.Observable<java.lang.Integer> minConnectionsToSubscribe;

  private io.mantisrx.common.properties.MantisPropertiesService propService;

  private java.lang.String jobName;

  public io.mantisrx.runtime.executor.WorkerPublisherRemoteObservable(int, java.lang.String, rx.Observable<java.lang.Integer>, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_2
       6: putfield      #2                  // Field name:Ljava/lang/String;
       9: aload_0
      10: iload_1
      11: putfield      #3                  // Field serverPort:I
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field minConnectionsToSubscribe:Lrx/Observable;
      19: aload_0
      20: getstatic     #5                  // Field io/mantisrx/server/core/ServiceRegistry.INSTANCE:Lio/mantisrx/server/core/ServiceRegistry;
      23: invokevirtual #6                  // Method io/mantisrx/server/core/ServiceRegistry.getPropertiesService:()Lio/mantisrx/common/properties/MantisPropertiesService;
      26: putfield      #7                  // Field propService:Lio/mantisrx/common/properties/MantisPropertiesService;
      29: aload_0
      30: aload         4
      32: putfield      #8                  // Field jobName:Ljava/lang/String;
      35: return

  public void start(io.mantisrx.runtime.StageConfig<T, R>, rx.Observable<rx.Observable<R>>);
    Code:
       0: new           #9                  // class io/reactivex/mantis/remote/observable/RemoteRxServer$Builder
       3: dup
       4: invokespecial #10                 // Method io/reactivex/mantis/remote/observable/RemoteRxServer$Builder."<init>":()V
       7: astore_3
       8: aload_1
       9: instanceof    #11                 // class io/mantisrx/runtime/KeyToKey
      12: ifne          36
      15: aload_1
      16: instanceof    #12                 // class io/mantisrx/runtime/ScalarToKey
      19: ifne          36
      22: aload_1
      23: instanceof    #13                 // class io/mantisrx/runtime/ScalarToGroup
      26: ifne          36
      29: aload_1
      30: instanceof    #14                 // class io/mantisrx/runtime/GroupToGroup
      33: ifeq          317
      36: aload_0
      37: aload_0
      38: getfield      #8                  // Field jobName:Ljava/lang/String;
      41: invokespecial #15                 // Method runNewW2WserverGroups:(Ljava/lang/String;)Z
      44: ifeq          615
      47: getstatic     #16                 // Field logger:Lorg/slf4j/Logger;
      50: new           #17                 // class java/lang/StringBuilder
      53: dup
      54: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      57: ldc           #19                 // String Modern server setup for name:
      59: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_0
      63: getfield      #2                  // Field name:Ljava/lang/String;
      66: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: ldc           #21                 // String  type: Keyedstage
      71: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      77: invokeinterface #23,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      82: ldc2_w        #25                 // long 9223372036854775807l
      85: lstore        4
      87: aload_1
      88: instanceof    #11                 // class io/mantisrx/runtime/KeyToKey
      91: ifeq          106
      94: aload_1
      95: checkcast     #11                 // class io/mantisrx/runtime/KeyToKey
      98: invokevirtual #27                 // Method io/mantisrx/runtime/KeyToKey.getKeyExpireTimeSeconds:()J
     101: lstore        4
     103: goto          122
     106: aload_1
     107: instanceof    #12                 // class io/mantisrx/runtime/ScalarToKey
     110: ifeq          122
     113: aload_1
     114: checkcast     #12                 // class io/mantisrx/runtime/ScalarToKey
     117: invokevirtual #28                 // Method io/mantisrx/runtime/ScalarToKey.getKeyExpireTimeSeconds:()J
     120: lstore        4
     122: new           #29                 // class io/mantisrx/runtime/executor/WorkerPublisherRemoteObservable$1
     125: dup
     126: aload_0
     127: aload_1
     128: invokespecial #30                 // Method io/mantisrx/runtime/executor/WorkerPublisherRemoteObservable$1."<init>":(Lio/mantisrx/runtime/executor/WorkerPublisherRemoteObservable;Lio/mantisrx/runtime/StageConfig;)V
     131: astore        6
     133: new           #31                 // class io/mantisrx/runtime/executor/WorkerPublisherRemoteObservable$2
     136: dup
     137: aload_0
     138: invokespecial #32                 // Method io/mantisrx/runtime/executor/WorkerPublisherRemoteObservable$2."<init>":(Lio/mantisrx/runtime/executor/WorkerPublisherRemoteObservable;)V
     141: astore        7
     143: new           #33                 // class io/reactivex/mantis/network/push/ServerConfig$Builder
     146: dup
     147: invokespecial #34                 // Method io/reactivex/mantis/network/push/ServerConfig$Builder."<init>":()V
     150: aload_0
     151: getfield      #2                  // Field name:Ljava/lang/String;
     154: invokevirtual #35                 // Method io/reactivex/mantis/network/push/ServerConfig$Builder.name:(Ljava/lang/String;)Lio/reactivex/mantis/network/push/ServerConfig$Builder;
     157: aload_0
     158: getfield      #3                  // Field serverPort:I
     161: invokevirtual #36                 // Method io/reactivex/mantis/network/push/ServerConfig$Builder.port:(I)Lio/reactivex/mantis/network/push/ServerConfig$Builder;
     164: invokestatic  #37                 // Method io/mantisrx/common/metrics/MetricsRegistry.getInstance:()Lio/mantisrx/common/metrics/MetricsRegistry;
     167: invokevirtual #38                 // Method io/reactivex/mantis/network/push/ServerConfig$Builder.metricsRegistry:(Lio/mantisrx/common/metrics/MetricsRegistry;)Lio/reactivex/mantis/network/push/ServerConfig$Builder;
     170: aload_0
     171: invokespecial #39                 // Method numConsumerThreads:()I
     174: invokevirtual #40                 // Method io/reactivex/mantis/network/push/ServerConfig$Builder.numQueueConsumers:(I)Lio/reactivex/mantis/network/push/ServerConfig$Builder;
     177: aload_0
     178: invokespecial #41                 // Method maxChunkSize:()I
     181: invokevirtual #42                 // Method io/reactivex/mantis/network/push/ServerConfig$Builder.maxChunkSize:(I)Lio/reactivex/mantis/network/push/ServerConfig$Builder;
     184: aload_0
     185: invokespecial #43                 // Method maxChunkTimeMSec:()I
     188: invokevirtual #44                 // Method io/reactivex/mantis/network/push/ServerConfig$Builder.maxChunkTimeMSec:(I)Lio/reactivex/mantis/network/push/ServerConfig$Builder;
     191: aload_0
     192: invokespecial #45                 // Method bufferCapacity:()I
     195: invokevirtual #46                 // Method io/reactivex/mantis/network/push/ServerConfig$Builder.bufferCapacity:(I)Lio/reactivex/mantis/network/push/ServerConfig$Builder;
     198: aload_0
     199: invokespecial #47                 // Method useSpsc:()Z
     202: invokevirtual #48                 // Method io/reactivex/mantis/network/push/ServerConfig$Builder.useSpscQueue:(Z)Lio/reactivex/mantis/network/push/ServerConfig$Builder;
     205: aload_0
     206: getfield      #8                  // Field jobName:Ljava/lang/String;
     209: aload         7
     211: aload         6
     213: invokestatic  #49                 // Method io/reactivex/mantis/network/push/Routers.consistentHashingLegacyTcpProtocol:(Ljava/lang/String;Lrx/functions/Func1;Lrx/functions/Func1;)Lio/reactivex/mantis/network/push/Router;
     216: invokevirtual #50                 // Method io/reactivex/mantis/network/push/ServerConfig$Builder.router:(Lio/reactivex/mantis/network/push/Router;)Lio/reactivex/mantis/network/push/ServerConfig$Builder;
     219: invokevirtual #51                 // Method io/reactivex/mantis/network/push/ServerConfig$Builder.build:()Lio/reactivex/mantis/network/push/ServerConfig;
     222: astore        8
     224: aload_2
     225: astore        9
     227: aload_1
     228: instanceof    #13                 // class io/mantisrx/runtime/ScalarToGroup
     231: ifne          241
     234: aload_1
     235: instanceof    #14                 // class io/mantisrx/runtime/GroupToGroup
     238: ifeq          279
     241: aload         8
     243: aload         9
     245: lload         4
     247: aload         7
     249: invokestatic  #52                 // Method io/reactivex/mantis/network/push/HashFunctions.ketama:()Lio/reactivex/mantis/network/push/HashFunction;
     252: invokestatic  #53                 // Method io/reactivex/mantis/network/push/PushServers.infiniteStreamLegacyTcpNestedMantisGroup:(Lio/reactivex/mantis/network/push/ServerConfig;Lrx/Observable;JLrx/functions/Func1;Lio/reactivex/mantis/network/push/HashFunction;)Lio/reactivex/mantis/network/push/LegacyTcpPushServer;
     255: astore        10
     257: aload         10
     259: invokevirtual #54                 // Method io/reactivex/mantis/network/push/LegacyTcpPushServer.start:()V
     262: aload_0
     263: new           #55                 // class io/mantisrx/runtime/executor/WorkerPublisherRemoteObservable$3
     266: dup
     267: aload_0
     268: aload         10
     270: invokespecial #56                 // Method io/mantisrx/runtime/executor/WorkerPublisherRemoteObservable$3."<init>":(Lio/mantisrx/runtime/executor/WorkerPublisherRemoteObservable;Lio/reactivex/mantis/network/push/LegacyTcpPushServer;)V
     273: putfield      #57                 // Field server:Lio/reactivex/mantis/remote/observable/RemoteRxServer;
     276: goto          314
     279: aload         8
     281: aload         9
     283: lload         4
     285: aload         7
     287: invokestatic  #52                 // Method io/reactivex/mantis/network/push/HashFunctions.ketama:()Lio/reactivex/mantis/network/push/HashFunction;
     290: invokestatic  #58                 // Method io/reactivex/mantis/network/push/PushServers.infiniteStreamLegacyTcpNestedGroupedObservable:(Lio/reactivex/mantis/network/push/ServerConfig;Lrx/Observable;JLrx/functions/Func1;Lio/reactivex/mantis/network/push/HashFunction;)Lio/reactivex/mantis/network/push/LegacyTcpPushServer;
     293: astore        10
     295: aload         10
     297: invokevirtual #54                 // Method io/reactivex/mantis/network/push/LegacyTcpPushServer.start:()V
     300: aload_0
     301: new           #59                 // class io/mantisrx/runtime/executor/WorkerPublisherRemoteObservable$4
     304: dup
     305: aload_0
     306: aload         10
     308: invokespecial #60                 // Method io/mantisrx/runtime/executor/WorkerPublisherRemoteObservable$4."<init>":(Lio/mantisrx/runtime/executor/WorkerPublisherRemoteObservable;Lio/reactivex/mantis/network/push/LegacyTcpPushServer;)V
     311: putfield      #57                 // Field server:Lio/reactivex/mantis/remote/observable/RemoteRxServer;
     314: goto          615
     317: aload_1
     318: instanceof    #61                 // class io/mantisrx/runtime/ScalarToScalar
     321: ifne          338
     324: aload_1
     325: instanceof    #62                 // class io/mantisrx/runtime/KeyToScalar
     328: ifne          338
     331: aload_1
     332: instanceof    #63                 // class io/mantisrx/runtime/GroupToScalar
     335: ifeq          588
     338: aload_0
     339: aload_0
     340: getfield      #8                  // Field jobName:Ljava/lang/String;
     343: invokespecial #64                 // Method runNewW2Wserver:(Ljava/lang/String;)Z
     346: ifeq          469
     349: getstatic     #16                 // Field logger:Lorg/slf4j/Logger;
     352: new           #17                 // class java/lang/StringBuilder
     355: dup
     356: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
     359: ldc           #19                 // String Modern server setup for name:
     361: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     364: aload_0
     365: getfield      #2                  // Field name:Ljava/lang/String;
     368: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     371: ldc           #65                 // String  type: Scalarstage
     373: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     376: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     379: invokeinterface #23,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     384: new           #66                 // class io/mantisrx/runtime/executor/WorkerPublisherRemoteObservable$5
     387: dup
     388: aload_0
     389: aload_1
     390: invokespecial #67                 // Method io/mantisrx/runtime/executor/WorkerPublisherRemoteObservable$5."<init>":(Lio/mantisrx/runtime/executor/WorkerPublisherRemoteObservable;Lio/mantisrx/runtime/StageConfig;)V
     393: astore        4
     395: new           #33                 // class io/reactivex/mantis/network/push/ServerConfig$Builder
     398: dup
     399: invokespecial #34                 // Method io/reactivex/mantis/network/push/ServerConfig$Builder."<init>":()V
     402: aload_0
     403: getfield      #2                  // Field name:Ljava/lang/String;
     406: invokevirtual #35                 // Method io/reactivex/mantis/network/push/ServerConfig$Builder.name:(Ljava/lang/String;)Lio/reactivex/mantis/network/push/ServerConfig$Builder;
     409: aload_0
     410: getfield      #3                  // Field serverPort:I
     413: invokevirtual #36                 // Method io/reactivex/mantis/network/push/ServerConfig$Builder.port:(I)Lio/reactivex/mantis/network/push/ServerConfig$Builder;
     416: invokestatic  #37                 // Method io/mantisrx/common/metrics/MetricsRegistry.getInstance:()Lio/mantisrx/common/metrics/MetricsRegistry;
     419: invokevirtual #38                 // Method io/reactivex/mantis/network/push/ServerConfig$Builder.metricsRegistry:(Lio/mantisrx/common/metrics/MetricsRegistry;)Lio/reactivex/mantis/network/push/ServerConfig$Builder;
     422: aload_0
     423: getfield      #2                  // Field name:Ljava/lang/String;
     426: aload         4
     428: invokestatic  #68                 // Method io/reactivex/mantis/network/push/Routers.roundRobinLegacyTcpProtocol:(Ljava/lang/String;Lrx/functions/Func1;)Lio/reactivex/mantis/network/push/Router;
     431: invokevirtual #50                 // Method io/reactivex/mantis/network/push/ServerConfig$Builder.router:(Lio/reactivex/mantis/network/push/Router;)Lio/reactivex/mantis/network/push/ServerConfig$Builder;
     434: invokevirtual #51                 // Method io/reactivex/mantis/network/push/ServerConfig$Builder.build:()Lio/reactivex/mantis/network/push/ServerConfig;
     437: astore        5
     439: aload         5
     441: aload_2
     442: invokestatic  #69                 // Method io/reactivex/mantis/network/push/PushServers.infiniteStreamLegacyTcpNested:(Lio/reactivex/mantis/network/push/ServerConfig;Lrx/Observable;)Lio/reactivex/mantis/network/push/LegacyTcpPushServer;
     445: astore        6
     447: aload         6
     449: invokevirtual #54                 // Method io/reactivex/mantis/network/push/LegacyTcpPushServer.start:()V
     452: aload_0
     453: new           #70                 // class io/mantisrx/runtime/executor/WorkerPublisherRemoteObservable$6
     456: dup
     457: aload_0
     458: aload         6
     460: invokespecial #71                 // Method io/mantisrx/runtime/executor/WorkerPublisherRemoteObservable$6."<init>":(Lio/mantisrx/runtime/executor/WorkerPublisherRemoteObservable;Lio/reactivex/mantis/network/push/LegacyTcpPushServer;)V
     463: putfield      #57                 // Field server:Lio/reactivex/mantis/remote/observable/RemoteRxServer;
     466: goto          615
     469: getstatic     #16                 // Field logger:Lorg/slf4j/Logger;
     472: new           #17                 // class java/lang/StringBuilder
     475: dup
     476: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
     479: ldc           #72                 // String Legacy server setup for name:
     481: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     484: aload_0
     485: getfield      #2                  // Field name:Ljava/lang/String;
     488: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     491: ldc           #65                 // String  type: Scalarstage
     493: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     496: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     499: invokeinterface #23,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     504: new           #73                 // class io/reactivex/mantis/remote/observable/slotting/RoundRobin
     507: dup
     508: invokespecial #74                 // Method io/reactivex/mantis/remote/observable/slotting/RoundRobin."<init>":()V
     511: astore        4
     513: aload_3
     514: new           #75                 // class io/reactivex/mantis/remote/observable/ServeNestedObservable$Builder
     517: dup
     518: invokespecial #76                 // Method io/reactivex/mantis/remote/observable/ServeNestedObservable$Builder."<init>":()V
     521: aload_0
     522: getfield      #2                  // Field name:Ljava/lang/String;
     525: invokevirtual #77                 // Method io/reactivex/mantis/remote/observable/ServeNestedObservable$Builder.name:(Ljava/lang/String;)Lio/reactivex/mantis/remote/observable/ServeNestedObservable$Builder;
     528: aload_1
     529: invokevirtual #78                 // Method io/mantisrx/runtime/StageConfig.getOutputCodec:()Lio/mantisrx/common/codec/Codec;
     532: invokevirtual #79                 // Method io/reactivex/mantis/remote/observable/ServeNestedObservable$Builder.encoder:(Lio/mantisrx/common/codec/Encoder;)Lio/reactivex/mantis/remote/observable/ServeNestedObservable$Builder;
     535: aload_2
     536: invokevirtual #80                 // Method io/reactivex/mantis/remote/observable/ServeNestedObservable$Builder.observable:(Lrx/Observable;)Lio/reactivex/mantis/remote/observable/ServeNestedObservable$Builder;
     539: aload         4
     541: invokevirtual #81                 // Method io/reactivex/mantis/remote/observable/ServeNestedObservable$Builder.slottingStrategy:(Lio/reactivex/mantis/remote/observable/slotting/SlottingStrategy;)Lio/reactivex/mantis/remote/observable/ServeNestedObservable$Builder;
     544: invokevirtual #82                 // Method io/reactivex/mantis/remote/observable/ServeNestedObservable$Builder.build:()Lio/reactivex/mantis/remote/observable/ServeNestedObservable;
     547: invokevirtual #83                 // Method io/reactivex/mantis/remote/observable/RemoteRxServer$Builder.addObservable:(Lio/reactivex/mantis/remote/observable/ServeNestedObservable;)Lio/reactivex/mantis/remote/observable/RemoteRxServer$Builder;
     550: pop
     551: invokestatic  #37                 // Method io/mantisrx/common/metrics/MetricsRegistry.getInstance:()Lio/mantisrx/common/metrics/MetricsRegistry;
     554: aload         4
     556: invokevirtual #84                 // Method io/reactivex/mantis/remote/observable/slotting/RoundRobin.getMetrics:()Lio/mantisrx/common/metrics/Metrics;
     559: invokevirtual #85                 // Method io/mantisrx/common/metrics/MetricsRegistry.registerAndGet:(Lio/mantisrx/common/metrics/Metrics;)Lio/mantisrx/common/metrics/Metrics;
     562: pop
     563: aload_0
     564: aload_3
     565: aload_0
     566: getfield      #3                  // Field serverPort:I
     569: invokevirtual #86                 // Method io/reactivex/mantis/remote/observable/RemoteRxServer$Builder.port:(I)Lio/reactivex/mantis/remote/observable/RemoteRxServer$Builder;
     572: invokevirtual #87                 // Method io/reactivex/mantis/remote/observable/RemoteRxServer$Builder.build:()Lio/reactivex/mantis/remote/observable/RemoteRxServer;
     575: putfield      #57                 // Field server:Lio/reactivex/mantis/remote/observable/RemoteRxServer;
     578: aload_0
     579: getfield      #57                 // Field server:Lio/reactivex/mantis/remote/observable/RemoteRxServer;
     582: invokevirtual #88                 // Method io/reactivex/mantis/remote/observable/RemoteRxServer.start:()V
     585: goto          615
     588: new           #89                 // class java/lang/RuntimeException
     591: dup
     592: new           #17                 // class java/lang/StringBuilder
     595: dup
     596: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
     599: ldc           #90                 // String Unsupported stage type:
     601: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     604: aload_1
     605: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     608: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     611: invokespecial #92                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     614: athrow
     615: return

  private boolean useSpsc();
    Code:
       0: aload_0
       1: getfield      #7                  // Field propService:Lio/mantisrx/common/properties/MantisPropertiesService;
       4: ldc           #93                 // String mantis.w2w.spsc
       6: ldc           #94                 // String false
       8: invokevirtual #95                 // Method io/mantisrx/common/properties/MantisPropertiesService.getStringValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      11: astore_1
      12: aload_1
      13: invokestatic  #96                 // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
      16: ireturn

  private int bufferCapacity();
    Code:
       0: aload_0
       1: getfield      #7                  // Field propService:Lio/mantisrx/common/properties/MantisPropertiesService;
       4: ldc           #97                 // String mantis.w2w.toKeyBuffer
       6: ldc           #98                 // String 50000
       8: invokevirtual #95                 // Method io/mantisrx/common/properties/MantisPropertiesService.getStringValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      11: astore_1
      12: aload_1
      13: invokestatic  #99                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      16: ireturn

  private int maxChunkTimeMSec();
    Code:
       0: aload_0
       1: getfield      #7                  // Field propService:Lio/mantisrx/common/properties/MantisPropertiesService;
       4: ldc           #100                // String mantis.w2w.toKeyMaxChunkTimeMSec
       6: ldc           #101                // String 250
       8: invokevirtual #95                 // Method io/mantisrx/common/properties/MantisPropertiesService.getStringValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      11: astore_1
      12: aload_1
      13: invokestatic  #99                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      16: ireturn

  private int maxChunkSize();
    Code:
       0: aload_0
       1: getfield      #7                  // Field propService:Lio/mantisrx/common/properties/MantisPropertiesService;
       4: ldc           #102                // String mantis.w2w.toKeyMaxChunkSize
       6: ldc           #103                // String 1000
       8: invokevirtual #95                 // Method io/mantisrx/common/properties/MantisPropertiesService.getStringValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      11: astore_1
      12: aload_1
      13: invokestatic  #99                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      16: ireturn

  private int numConsumerThreads();
    Code:
       0: aload_0
       1: getfield      #7                  // Field propService:Lio/mantisrx/common/properties/MantisPropertiesService;
       4: ldc           #104                // String mantis.w2w.toKeyThreads
       6: ldc           #105                // String 1
       8: invokevirtual #95                 // Method io/mantisrx/common/properties/MantisPropertiesService.getStringValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      11: astore_1
      12: aload_1
      13: invokestatic  #99                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      16: ireturn

  private boolean runNewW2Wserver(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field propService:Lio/mantisrx/common/properties/MantisPropertiesService;
       4: ldc           #106                // String mantis.w2w.newServerImplScalar
       6: ldc           #107                // String true
       8: invokevirtual #95                 // Method io/mantisrx/common/properties/MantisPropertiesService.getStringValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      11: astore_2
      12: aload_0
      13: getfield      #7                  // Field propService:Lio/mantisrx/common/properties/MantisPropertiesService;
      16: new           #17                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      23: aload_1
      24: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: ldc           #108                // String .mantis.w2w.newServerImplScalar
      29: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: ldc           #94                 // String false
      37: invokevirtual #95                 // Method io/mantisrx/common/properties/MantisPropertiesService.getStringValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      40: astore_3
      41: aload_2
      42: invokestatic  #96                 // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
      45: ifne          55
      48: aload_3
      49: invokestatic  #96                 // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
      52: ifeq          59
      55: iconst_1
      56: goto          60
      59: iconst_0
      60: ireturn

  private boolean runNewW2WserverGroups(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field propService:Lio/mantisrx/common/properties/MantisPropertiesService;
       4: ldc           #109                // String mantis.w2w.newServerImplKeyed
       6: ldc           #107                // String true
       8: invokevirtual #95                 // Method io/mantisrx/common/properties/MantisPropertiesService.getStringValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      11: astore_2
      12: aload_0
      13: getfield      #7                  // Field propService:Lio/mantisrx/common/properties/MantisPropertiesService;
      16: new           #17                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      23: aload_1
      24: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: ldc           #110                // String .mantis.w2w.newServerImplKeyed
      29: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: ldc           #94                 // String false
      37: invokevirtual #95                 // Method io/mantisrx/common/properties/MantisPropertiesService.getStringValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      40: astore_3
      41: aload_2
      42: invokestatic  #96                 // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
      45: ifne          55
      48: aload_3
      49: invokestatic  #96                 // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
      52: ifeq          59
      55: iconst_1
      56: goto          60
      59: iconst_0
      60: ireturn

  public void stop();
    Code:
       0: aload_0
       1: getfield      #57                 // Field server:Lio/reactivex/mantis/remote/observable/RemoteRxServer;
       4: invokevirtual #111                // Method io/reactivex/mantis/remote/observable/RemoteRxServer.shutdown:()V
       7: return

  public io.reactivex.mantis.remote.observable.RemoteRxServer getServer();
    Code:
       0: aload_0
       1: getfield      #57                 // Field server:Lio/reactivex/mantis/remote/observable/RemoteRxServer;
       4: areturn

  public io.reactivex.mantis.remote.observable.RxMetrics getMetrics();
    Code:
       0: aload_0
       1: getfield      #57                 // Field server:Lio/reactivex/mantis/remote/observable/RemoteRxServer;
       4: invokevirtual #112                // Method io/reactivex/mantis/remote/observable/RemoteRxServer.getMetrics:()Lio/reactivex/mantis/remote/observable/RxMetrics;
       7: areturn

  static {};
    Code:
       0: ldc           #113                // class io/mantisrx/runtime/executor/WorkerPublisherRemoteObservable
       2: invokestatic  #114                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #16                 // Field logger:Lorg/slf4j/Logger;
       8: return
}
