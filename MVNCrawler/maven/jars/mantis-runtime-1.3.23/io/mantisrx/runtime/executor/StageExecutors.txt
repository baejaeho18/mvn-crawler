Compiled from "StageExecutors.java"
public class io.mantisrx.runtime.executor.StageExecutors {
  private static final org.slf4j.Logger logger;

  private static io.mantisrx.common.metrics.Counter groupsExpiredCounter;

  private static long stageBufferIntervalMs;

  private static int maxItemsInBuffer;

  private io.mantisrx.runtime.executor.StageExecutors();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public static void executeSingleStageJob(io.mantisrx.runtime.SourceHolder, io.mantisrx.runtime.StageConfig, io.mantisrx.runtime.SinkHolder, io.mantisrx.runtime.executor.PortSelector, io.reactivex.mantis.remote.observable.RxMetrics, io.mantisrx.runtime.Context, rx.functions.Action0, int, rx.Observable<java.lang.Integer>, rx.functions.Action0, rx.functions.Action0, rx.functions.Action0, rx.functions.Action1<java.lang.Throwable>);
    Code:
       0: new           #3                  // class io/mantisrx/runtime/executor/StageExecutors$1
       3: dup
       4: iload         7
       6: aload         8
       8: aload_0
       9: aload         5
      11: aload_1
      12: invokespecial #4                  // Method io/mantisrx/runtime/executor/StageExecutors$1."<init>":(ILrx/Observable;Lio/mantisrx/runtime/SourceHolder;Lio/mantisrx/runtime/Context;Lio/mantisrx/runtime/StageConfig;)V
      15: astore        13
      17: new           #5                  // class io/mantisrx/runtime/executor/SinkPublisher
      20: dup
      21: aload_2
      22: aload_3
      23: aload         5
      25: aload         6
      27: aload         9
      29: aload         10
      31: aload         11
      33: aload         12
      35: invokespecial #6                  // Method io/mantisrx/runtime/executor/SinkPublisher."<init>":(Lio/mantisrx/runtime/SinkHolder;Lio/mantisrx/runtime/executor/PortSelector;Lio/mantisrx/runtime/Context;Lrx/functions/Action0;Lrx/functions/Action0;Lrx/functions/Action0;Lrx/functions/Action0;Lrx/functions/Action1;)V
      38: astore        14
      40: aload         13
      42: aload_1
      43: aload         14
      45: aload         5
      47: invokestatic  #7                  // Method executeIntermediate:(Lio/mantisrx/runtime/executor/WorkerConsumer;Lio/mantisrx/runtime/StageConfig;Lio/mantisrx/runtime/executor/WorkerPublisher;Lio/mantisrx/runtime/Context;)V
      50: return

  public static void executeSource(int, io.mantisrx.runtime.SourceHolder, io.mantisrx.runtime.StageConfig, io.mantisrx.runtime.executor.WorkerPublisher, io.mantisrx.runtime.Context, rx.Observable<java.lang.Integer>);
    Code:
       0: new           #8                  // class io/mantisrx/runtime/executor/StageExecutors$2
       3: dup
       4: iload_0
       5: aload         5
       7: aload_1
       8: aload         4
      10: invokespecial #9                  // Method io/mantisrx/runtime/executor/StageExecutors$2."<init>":(ILrx/Observable;Lio/mantisrx/runtime/SourceHolder;Lio/mantisrx/runtime/Context;)V
      13: astore        6
      15: aload         6
      17: aload_2
      18: aload_3
      19: aload         4
      21: invokestatic  #7                  // Method executeIntermediate:(Lio/mantisrx/runtime/executor/WorkerConsumer;Lio/mantisrx/runtime/StageConfig;Lio/mantisrx/runtime/executor/WorkerPublisher;Lio/mantisrx/runtime/Context;)V
      24: return

  private static <K, T, R> rx.Observable<rx.Observable<R>> executeGroupsInParallel(rx.Observable<rx.observables.GroupedObservable<K, T>>, io.mantisrx.runtime.computation.Computation, io.mantisrx.runtime.Context, long);
    Code:
       0: getstatic     #10                 // Field logger:Lorg/slf4j/Logger;
       3: ldc           #11                 // String initializing {}
       5: aload_1
       6: invokevirtual #12                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokevirtual #13                 // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
      12: invokeinterface #14,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      17: aload_1
      18: aload_2
      19: invokeinterface #15,  2           // InterfaceMethod io/mantisrx/runtime/computation/Computation.init:(Lio/mantisrx/runtime/Context;)V
      24: aload_1
      25: checkcast     #16                 // class rx/functions/Func2
      28: astore        5
      30: aload_0
      31: new           #17                 // class io/mantisrx/common/metrics/rx/MonitorOperator
      34: dup
      35: ldc           #18                 // String worker_stage_outer
      37: invokespecial #19                 // Method io/mantisrx/common/metrics/rx/MonitorOperator."<init>":(Ljava/lang/String;)V
      40: invokevirtual #20                 // Method rx/Observable.lift:(Lrx/Observable$Operator;)Lrx/Observable;
      43: aload         5
      45: aload_2
      46: lload_3
      47: invokedynamic #21,  0             // InvokeDynamic #0:call:(Lrx/functions/Func2;Lio/mantisrx/runtime/Context;J)Lrx/functions/Func1;
      52: invokevirtual #22                 // Method rx/Observable.map:(Lrx/functions/Func1;)Lrx/Observable;
      55: areturn

  private static <K, T, R> rx.Observable<rx.Observable<R>> executeMantisGroups(rx.Observable<rx.Observable<io.mantisrx.common.MantisGroup<K, T>>>, io.mantisrx.runtime.computation.Computation, io.mantisrx.runtime.Context, long);
    Code:
       0: getstatic     #10                 // Field logger:Lorg/slf4j/Logger;
       3: ldc           #11                 // String initializing {}
       5: aload_1
       6: invokevirtual #12                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokevirtual #13                 // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
      12: invokeinterface #14,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      17: aload_1
      18: aload_2
      19: invokeinterface #15,  2           // InterfaceMethod io/mantisrx/runtime/computation/Computation.init:(Lio/mantisrx/runtime/Context;)V
      24: aload_1
      25: checkcast     #16                 // class rx/functions/Func2
      28: astore        5
      30: aload_0
      31: new           #17                 // class io/mantisrx/common/metrics/rx/MonitorOperator
      34: dup
      35: ldc           #18                 // String worker_stage_outer
      37: invokespecial #19                 // Method io/mantisrx/common/metrics/rx/MonitorOperator."<init>":(Ljava/lang/String;)V
      40: invokevirtual #20                 // Method rx/Observable.lift:(Lrx/Observable$Operator;)Lrx/Observable;
      43: aload         5
      45: aload_2
      46: invokedynamic #23,  0             // InvokeDynamic #1:call:(Lrx/functions/Func2;Lio/mantisrx/runtime/Context;)Lrx/functions/Func1;
      51: invokevirtual #22                 // Method rx/Observable.map:(Lrx/functions/Func1;)Lrx/Observable;
      54: areturn

  private static <K, T, R> rx.Observable<rx.Observable<R>> executeMantisGroupsInParallel(rx.Observable<rx.Observable<io.mantisrx.common.MantisGroup<K, T>>>, io.mantisrx.runtime.computation.Computation, io.mantisrx.runtime.Context, boolean, long, int);
    Code:
       0: getstatic     #10                 // Field logger:Lorg/slf4j/Logger;
       3: ldc           #11                 // String initializing {}
       5: aload_1
       6: invokevirtual #12                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokevirtual #13                 // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
      12: invokeinterface #14,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      17: aload_1
      18: aload_2
      19: invokeinterface #15,  2           // InterfaceMethod io/mantisrx/runtime/computation/Computation.init:(Lio/mantisrx/runtime/Context;)V
      24: aload_1
      25: checkcast     #16                 // class rx/functions/Func2
      28: astore        7
      30: iload         6
      32: iconst_m1
      33: if_icmpne     61
      36: aload_0
      37: new           #17                 // class io/mantisrx/common/metrics/rx/MonitorOperator
      40: dup
      41: ldc           #18                 // String worker_stage_outer
      43: invokespecial #19                 // Method io/mantisrx/common/metrics/rx/MonitorOperator."<init>":(Ljava/lang/String;)V
      46: invokevirtual #20                 // Method rx/Observable.lift:(Lrx/Observable$Operator;)Lrx/Observable;
      49: aload         7
      51: aload_2
      52: invokedynamic #25,  0             // InvokeDynamic #2:call:(Lrx/functions/Func2;Lio/mantisrx/runtime/Context;)Lrx/functions/Func1;
      57: invokevirtual #22                 // Method rx/Observable.map:(Lrx/functions/Func1;)Lrx/Observable;
      60: areturn
      61: iload         6
      63: anewarray     #26                 // class io/mantisrx/runtime/scheduler/SingleThreadScheduler
      66: astore        8
      68: new           #27                 // class rx/internal/util/RxThreadFactory
      71: dup
      72: ldc           #28                 // String MantisSingleThreadScheduler-
      74: invokespecial #29                 // Method rx/internal/util/RxThreadFactory."<init>":(Ljava/lang/String;)V
      77: astore        9
      79: getstatic     #10                 // Field logger:Lorg/slf4j/Logger;
      82: ldc           #30                 // String creating {} Mantis threads
      84: iload         6
      86: invokestatic  #31                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      89: invokeinterface #14,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      94: iconst_0
      95: istore        10
      97: iload         10
      99: iload         6
     101: if_icmpge     124
     104: aload         8
     106: iload         10
     108: new           #26                 // class io/mantisrx/runtime/scheduler/SingleThreadScheduler
     111: dup
     112: aload         9
     114: invokespecial #32                 // Method io/mantisrx/runtime/scheduler/SingleThreadScheduler."<init>":(Ljava/util/concurrent/ThreadFactory;)V
     117: aastore
     118: iinc          10, 1
     121: goto          97
     124: aload_0
     125: new           #17                 // class io/mantisrx/common/metrics/rx/MonitorOperator
     128: dup
     129: ldc           #18                 // String worker_stage_outer
     131: invokespecial #19                 // Method io/mantisrx/common/metrics/rx/MonitorOperator."<init>":(Ljava/lang/String;)V
     134: invokevirtual #20                 // Method rx/Observable.lift:(Lrx/Observable$Operator;)Lrx/Observable;
     137: iload         6
     139: aload         7
     141: aload_2
     142: aload         8
     144: invokedynamic #33,  0             // InvokeDynamic #3:call:(ILrx/functions/Func2;Lio/mantisrx/runtime/Context;[Lio/mantisrx/runtime/scheduler/SingleThreadScheduler;)Lrx/functions/Func1;
     149: invokevirtual #22                 // Method rx/Observable.map:(Lrx/functions/Func1;)Lrx/Observable;
     152: areturn

  private static <T, R> rx.Observable<rx.Observable<R>> executeInners(rx.Observable<rx.Observable<T>>, io.mantisrx.runtime.computation.Computation, io.mantisrx.runtime.Context, boolean, long);
    Code:
       0: getstatic     #10                 // Field logger:Lorg/slf4j/Logger;
       3: ldc           #11                 // String initializing {}
       5: aload_1
       6: invokevirtual #12                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokevirtual #13                 // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
      12: invokeinterface #14,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      17: aload_1
      18: aload_2
      19: invokeinterface #15,  2           // InterfaceMethod io/mantisrx/runtime/computation/Computation.init:(Lio/mantisrx/runtime/Context;)V
      24: aload_1
      25: checkcast     #16                 // class rx/functions/Func2
      28: astore        6
      30: aload_0
      31: new           #17                 // class io/mantisrx/common/metrics/rx/MonitorOperator
      34: dup
      35: ldc           #18                 // String worker_stage_outer
      37: invokespecial #19                 // Method io/mantisrx/common/metrics/rx/MonitorOperator."<init>":(Ljava/lang/String;)V
      40: invokevirtual #20                 // Method rx/Observable.lift:(Lrx/Observable$Operator;)Lrx/Observable;
      43: aload         6
      45: aload_2
      46: invokedynamic #34,  0             // InvokeDynamic #4:call:(Lrx/functions/Func2;Lio/mantisrx/runtime/Context;)Lrx/functions/Func1;
      51: invokevirtual #22                 // Method rx/Observable.map:(Lrx/functions/Func1;)Lrx/Observable;
      54: areturn

  private static <T, R> rx.Observable<rx.Observable<R>> executeInnersInParallel(rx.Observable<rx.Observable<T>>, io.mantisrx.runtime.computation.Computation, io.mantisrx.runtime.Context, boolean, long, int);
    Code:
       0: getstatic     #10                 // Field logger:Lorg/slf4j/Logger;
       3: ldc           #11                 // String initializing {}
       5: aload_1
       6: invokevirtual #12                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokevirtual #13                 // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
      12: invokeinterface #14,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      17: aload_1
      18: aload_2
      19: invokeinterface #15,  2           // InterfaceMethod io/mantisrx/runtime/computation/Computation.init:(Lio/mantisrx/runtime/Context;)V
      24: aload_1
      25: checkcast     #16                 // class rx/functions/Func2
      28: astore        7
      30: iload         6
      32: iconst_m1
      33: if_icmpne     61
      36: aload_0
      37: new           #17                 // class io/mantisrx/common/metrics/rx/MonitorOperator
      40: dup
      41: ldc           #18                 // String worker_stage_outer
      43: invokespecial #19                 // Method io/mantisrx/common/metrics/rx/MonitorOperator."<init>":(Ljava/lang/String;)V
      46: invokevirtual #20                 // Method rx/Observable.lift:(Lrx/Observable$Operator;)Lrx/Observable;
      49: aload         7
      51: aload_2
      52: invokedynamic #35,  0             // InvokeDynamic #5:call:(Lrx/functions/Func2;Lio/mantisrx/runtime/Context;)Lrx/functions/Func1;
      57: invokevirtual #22                 // Method rx/Observable.map:(Lrx/functions/Func1;)Lrx/Observable;
      60: areturn
      61: iload         6
      63: anewarray     #26                 // class io/mantisrx/runtime/scheduler/SingleThreadScheduler
      66: astore        8
      68: new           #27                 // class rx/internal/util/RxThreadFactory
      71: dup
      72: ldc           #28                 // String MantisSingleThreadScheduler-
      74: invokespecial #29                 // Method rx/internal/util/RxThreadFactory."<init>":(Ljava/lang/String;)V
      77: astore        9
      79: getstatic     #10                 // Field logger:Lorg/slf4j/Logger;
      82: ldc           #30                 // String creating {} Mantis threads
      84: iload         6
      86: invokestatic  #31                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      89: invokeinterface #14,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      94: iconst_0
      95: istore        10
      97: iload         10
      99: iload         6
     101: if_icmpge     124
     104: aload         8
     106: iload         10
     108: new           #26                 // class io/mantisrx/runtime/scheduler/SingleThreadScheduler
     111: dup
     112: aload         9
     114: invokespecial #32                 // Method io/mantisrx/runtime/scheduler/SingleThreadScheduler."<init>":(Ljava/util/concurrent/ThreadFactory;)V
     117: aastore
     118: iinc          10, 1
     121: goto          97
     124: aload_0
     125: new           #17                 // class io/mantisrx/common/metrics/rx/MonitorOperator
     128: dup
     129: ldc           #18                 // String worker_stage_outer
     131: invokespecial #19                 // Method io/mantisrx/common/metrics/rx/MonitorOperator."<init>":(Ljava/lang/String;)V
     134: invokevirtual #20                 // Method rx/Observable.lift:(Lrx/Observable$Operator;)Lrx/Observable;
     137: iload         6
     139: aload         7
     141: aload_2
     142: aload         8
     144: invokedynamic #36,  0             // InvokeDynamic #6:call:(ILrx/functions/Func2;Lio/mantisrx/runtime/Context;[Lio/mantisrx/runtime/scheduler/SingleThreadScheduler;)Lrx/functions/Func1;
     149: invokevirtual #22                 // Method rx/Observable.map:(Lrx/functions/Func1;)Lrx/Observable;
     152: areturn

  private static int resolveStageConcurrency(int);
    Code:
       0: iload_0
       1: iconst_m1
       2: if_icmpne     134
       5: ldc           #37                 // String JOB_PARAM_
       7: astore_1
       8: new           #38                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      15: aload_1
      16: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #41                 // String mantis.stageConcurrency
      21: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: astore_2
      28: aload_2
      29: invokestatic  #43                 // Method java/lang/System.getenv:(Ljava/lang/String;)Ljava/lang/String;
      32: astore_3
      33: getstatic     #10                 // Field logger:Lorg/slf4j/Logger;
      36: new           #38                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #44                 // String Job param:
      45: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_2
      49: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: ldc           #45                 // String  value:
      54: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload_3
      58: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: invokeinterface #46,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      69: aload_3
      70: ifnull        134
      73: aload_3
      74: invokevirtual #47                 // Method java/lang/String.isEmpty:()Z
      77: ifne          134
      80: getstatic     #10                 // Field logger:Lorg/slf4j/Logger;
      83: new           #38                 // class java/lang/StringBuilder
      86: dup
      87: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      90: ldc           #44                 // String Job param:
      92: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: aload_2
      96: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: ldc           #45                 // String  value:
     101: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: aload_3
     105: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     111: invokeinterface #46,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     116: aload_3
     117: invokestatic  #48                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     120: istore        4
     122: iload         4
     124: ifgt          129
     127: iload_0
     128: ireturn
     129: iload         4
     131: ireturn
     132: astore        4
     134: iload_0
     135: ireturn
    Exception table:
       from    to  target type
         116   128   132   Class java/lang/NumberFormatException
         129   131   132   Class java/lang/NumberFormatException

  private static <T, R> rx.Observable<rx.Observable<R>> setupScalarToScalarStage(io.mantisrx.runtime.ScalarToScalar<T, R>, rx.Observable<rx.Observable<T>>, io.mantisrx.runtime.Context);
    Code:
       0: aload_0
       1: invokevirtual #50                 // Method io/mantisrx/runtime/ScalarToScalar.getInputStrategy:()Lio/mantisrx/runtime/StageConfig$INPUT_STRATEGY;
       4: astore_3
       5: getstatic     #10                 // Field logger:Lorg/slf4j/Logger;
       8: new           #38                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #51                 // String Setting up ScalarToScalar stage with input type:
      17: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: aload_3
      21: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      24: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: invokeinterface #46,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      32: aload_3
      33: getstatic     #53                 // Field io/mantisrx/runtime/StageConfig$INPUT_STRATEGY.CONCURRENT:Lio/mantisrx/runtime/StageConfig$INPUT_STRATEGY;
      36: if_acmpne     60
      39: aload_1
      40: aload_0
      41: invokevirtual #54                 // Method io/mantisrx/runtime/ScalarToScalar.getComputation:()Lio/mantisrx/runtime/computation/ScalarComputation;
      44: aload_2
      45: iconst_0
      46: ldc2_w        #56                 // long 2147483647l
      49: aload_0
      50: invokevirtual #58                 // Method io/mantisrx/runtime/ScalarToScalar.getConcurrency:()I
      53: invokestatic  #59                 // Method resolveStageConcurrency:(I)I
      56: invokestatic  #60                 // Method executeInnersInParallel:(Lrx/Observable;Lio/mantisrx/runtime/computation/Computation;Lio/mantisrx/runtime/Context;ZJI)Lrx/Observable;
      59: areturn
      60: aload_3
      61: getstatic     #61                 // Field io/mantisrx/runtime/StageConfig$INPUT_STRATEGY.SERIAL:Lio/mantisrx/runtime/StageConfig$INPUT_STRATEGY;
      64: if_acmpne     91
      67: aload_1
      68: invokestatic  #62                 // Method rx/Observable.merge:(Lrx/Observable;)Lrx/Observable;
      71: invokestatic  #63                 // Method rx/Observable.just:(Ljava/lang/Object;)Lrx/Observable;
      74: astore        4
      76: aload         4
      78: aload_0
      79: invokevirtual #54                 // Method io/mantisrx/runtime/ScalarToScalar.getComputation:()Lio/mantisrx/runtime/computation/ScalarComputation;
      82: aload_2
      83: iconst_0
      84: ldc2_w        #56                 // long 2147483647l
      87: invokestatic  #64                 // Method executeInners:(Lrx/Observable;Lio/mantisrx/runtime/computation/Computation;Lio/mantisrx/runtime/Context;ZJ)Lrx/Observable;
      90: areturn
      91: new           #65                 // class java/lang/RuntimeException
      94: dup
      95: new           #38                 // class java/lang/StringBuilder
      98: dup
      99: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
     102: ldc           #66                 // String Unsupported input type:
     104: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: aload_3
     108: invokevirtual #67                 // Method io/mantisrx/runtime/StageConfig$INPUT_STRATEGY.name:()Ljava/lang/String;
     111: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     117: invokespecial #68                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     120: athrow

  private static <K, T, R> rx.Observable<rx.Observable<rx.observables.GroupedObservable<java.lang.String, R>>> setupScalarToKeyStage(io.mantisrx.runtime.ScalarToKey<K, T, R>, rx.Observable<rx.Observable<T>>, io.mantisrx.runtime.Context);
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method io/mantisrx/runtime/ScalarToKey.getInputStrategy:()Lio/mantisrx/runtime/StageConfig$INPUT_STRATEGY;
       4: astore_3
       5: getstatic     #10                 // Field logger:Lorg/slf4j/Logger;
       8: new           #38                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #70                 // String Setting up ScalarToKey stage with input type:
      17: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: aload_3
      21: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      24: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: invokeinterface #46,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      32: aload_3
      33: getstatic     #53                 // Field io/mantisrx/runtime/StageConfig$INPUT_STRATEGY.CONCURRENT:Lio/mantisrx/runtime/StageConfig$INPUT_STRATEGY;
      36: if_acmpne     61
      39: aload_1
      40: aload_0
      41: invokevirtual #71                 // Method io/mantisrx/runtime/ScalarToKey.getComputation:()Lio/mantisrx/runtime/computation/ToKeyComputation;
      44: aload_2
      45: iconst_1
      46: aload_0
      47: invokevirtual #72                 // Method io/mantisrx/runtime/ScalarToKey.getKeyExpireTimeSeconds:()J
      50: aload_0
      51: invokevirtual #73                 // Method io/mantisrx/runtime/ScalarToKey.getConcurrency:()I
      54: invokestatic  #59                 // Method resolveStageConcurrency:(I)I
      57: invokestatic  #60                 // Method executeInnersInParallel:(Lrx/Observable;Lio/mantisrx/runtime/computation/Computation;Lio/mantisrx/runtime/Context;ZJI)Lrx/Observable;
      60: areturn
      61: aload_3
      62: getstatic     #61                 // Field io/mantisrx/runtime/StageConfig$INPUT_STRATEGY.SERIAL:Lio/mantisrx/runtime/StageConfig$INPUT_STRATEGY;
      65: if_acmpne     93
      68: aload_1
      69: invokestatic  #62                 // Method rx/Observable.merge:(Lrx/Observable;)Lrx/Observable;
      72: invokestatic  #63                 // Method rx/Observable.just:(Ljava/lang/Object;)Lrx/Observable;
      75: astore        4
      77: aload         4
      79: aload_0
      80: invokevirtual #71                 // Method io/mantisrx/runtime/ScalarToKey.getComputation:()Lio/mantisrx/runtime/computation/ToKeyComputation;
      83: aload_2
      84: iconst_1
      85: aload_0
      86: invokevirtual #72                 // Method io/mantisrx/runtime/ScalarToKey.getKeyExpireTimeSeconds:()J
      89: invokestatic  #64                 // Method executeInners:(Lrx/Observable;Lio/mantisrx/runtime/computation/Computation;Lio/mantisrx/runtime/Context;ZJ)Lrx/Observable;
      92: areturn
      93: new           #65                 // class java/lang/RuntimeException
      96: dup
      97: new           #38                 // class java/lang/StringBuilder
     100: dup
     101: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
     104: ldc           #66                 // String Unsupported input type:
     106: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: aload_3
     110: invokevirtual #67                 // Method io/mantisrx/runtime/StageConfig$INPUT_STRATEGY.name:()Ljava/lang/String;
     113: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     119: invokespecial #68                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     122: athrow

  private static <K, T, R> rx.Observable<rx.Observable<io.mantisrx.common.MantisGroup<java.lang.String, R>>> setupScalarToGroupStage(io.mantisrx.runtime.ScalarToGroup<K, T, R>, rx.Observable<rx.Observable<T>>, io.mantisrx.runtime.Context);
    Code:
       0: aload_0
       1: invokevirtual #74                 // Method io/mantisrx/runtime/ScalarToGroup.getInputStrategy:()Lio/mantisrx/runtime/StageConfig$INPUT_STRATEGY;
       4: astore_3
       5: getstatic     #10                 // Field logger:Lorg/slf4j/Logger;
       8: new           #38                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #75                 // String Setting up ScalarToGroup stage with input type:
      17: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: aload_3
      21: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      24: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: invokeinterface #46,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      32: aload_3
      33: getstatic     #53                 // Field io/mantisrx/runtime/StageConfig$INPUT_STRATEGY.CONCURRENT:Lio/mantisrx/runtime/StageConfig$INPUT_STRATEGY;
      36: if_acmpne     61
      39: aload_1
      40: aload_0
      41: invokevirtual #76                 // Method io/mantisrx/runtime/ScalarToGroup.getComputation:()Lio/mantisrx/runtime/computation/ToGroupComputation;
      44: aload_2
      45: iconst_1
      46: aload_0
      47: invokevirtual #77                 // Method io/mantisrx/runtime/ScalarToGroup.getKeyExpireTimeSeconds:()J
      50: aload_0
      51: invokevirtual #78                 // Method io/mantisrx/runtime/ScalarToGroup.getConcurrency:()I
      54: invokestatic  #59                 // Method resolveStageConcurrency:(I)I
      57: invokestatic  #60                 // Method executeInnersInParallel:(Lrx/Observable;Lio/mantisrx/runtime/computation/Computation;Lio/mantisrx/runtime/Context;ZJI)Lrx/Observable;
      60: areturn
      61: aload_3
      62: getstatic     #61                 // Field io/mantisrx/runtime/StageConfig$INPUT_STRATEGY.SERIAL:Lio/mantisrx/runtime/StageConfig$INPUT_STRATEGY;
      65: if_acmpne     93
      68: aload_1
      69: invokestatic  #62                 // Method rx/Observable.merge:(Lrx/Observable;)Lrx/Observable;
      72: invokestatic  #63                 // Method rx/Observable.just:(Ljava/lang/Object;)Lrx/Observable;
      75: astore        4
      77: aload         4
      79: aload_0
      80: invokevirtual #76                 // Method io/mantisrx/runtime/ScalarToGroup.getComputation:()Lio/mantisrx/runtime/computation/ToGroupComputation;
      83: aload_2
      84: iconst_1
      85: aload_0
      86: invokevirtual #77                 // Method io/mantisrx/runtime/ScalarToGroup.getKeyExpireTimeSeconds:()J
      89: invokestatic  #64                 // Method executeInners:(Lrx/Observable;Lio/mantisrx/runtime/computation/Computation;Lio/mantisrx/runtime/Context;ZJ)Lrx/Observable;
      92: areturn
      93: new           #65                 // class java/lang/RuntimeException
      96: dup
      97: new           #38                 // class java/lang/StringBuilder
     100: dup
     101: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
     104: ldc           #66                 // String Unsupported input type:
     106: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: aload_3
     110: invokevirtual #67                 // Method io/mantisrx/runtime/StageConfig$INPUT_STRATEGY.name:()Ljava/lang/String;
     113: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     119: invokespecial #68                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     122: athrow

  private static <K1, T, K2, R> rx.Observable<rx.Observable<rx.observables.GroupedObservable<java.lang.String, R>>> setupKeyToKeyStage(io.mantisrx.runtime.KeyToKey<K1, T, K2, R>, rx.Observable<rx.Observable<rx.observables.GroupedObservable<java.lang.String, T>>>, io.mantisrx.runtime.Context);
    Code:
       0: aload_0
       1: invokevirtual #79                 // Method io/mantisrx/runtime/KeyToKey.getInputStrategy:()Lio/mantisrx/runtime/StageConfig$INPUT_STRATEGY;
       4: astore_3
       5: getstatic     #10                 // Field logger:Lorg/slf4j/Logger;
       8: new           #38                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #80                 // String Setting up KeyToKey stage with input type:
      17: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: aload_3
      21: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      24: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: invokeinterface #46,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      32: aload_3
      33: getstatic     #53                 // Field io/mantisrx/runtime/StageConfig$INPUT_STRATEGY.CONCURRENT:Lio/mantisrx/runtime/StageConfig$INPUT_STRATEGY;
      36: if_acmpne     49
      39: new           #65                 // class java/lang/RuntimeException
      42: dup
      43: ldc           #81                 // String Concurrency is not a supported input strategy for KeyComputation
      45: invokespecial #68                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: aload_3
      50: getstatic     #61                 // Field io/mantisrx/runtime/StageConfig$INPUT_STRATEGY.SERIAL:Lio/mantisrx/runtime/StageConfig$INPUT_STRATEGY;
      53: if_acmpne     77
      56: aload_1
      57: invokestatic  #82                 // Method io/mantisrx/runtime/Groups.flatten:(Lrx/Observable;)Lrx/Observable;
      60: astore        4
      62: aload         4
      64: aload_0
      65: invokevirtual #83                 // Method io/mantisrx/runtime/KeyToKey.getComputation:()Lio/mantisrx/runtime/computation/KeyComputation;
      68: aload_2
      69: aload_0
      70: invokevirtual #84                 // Method io/mantisrx/runtime/KeyToKey.getKeyExpireTimeSeconds:()J
      73: invokestatic  #85                 // Method executeGroupsInParallel:(Lrx/Observable;Lio/mantisrx/runtime/computation/Computation;Lio/mantisrx/runtime/Context;J)Lrx/Observable;
      76: areturn
      77: new           #65                 // class java/lang/RuntimeException
      80: dup
      81: new           #38                 // class java/lang/StringBuilder
      84: dup
      85: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      88: ldc           #66                 // String Unsupported input type:
      90: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: aload_3
      94: invokevirtual #67                 // Method io/mantisrx/runtime/StageConfig$INPUT_STRATEGY.name:()Ljava/lang/String;
      97: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     103: invokespecial #68                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     106: athrow

  private static <K1, T, K2, R> rx.Observable<rx.Observable<io.mantisrx.common.MantisGroup<java.lang.String, R>>> setupGroupToGroupStage(io.mantisrx.runtime.GroupToGroup<K1, T, K2, R>, rx.Observable<rx.Observable<io.mantisrx.common.MantisGroup<java.lang.String, T>>>, io.mantisrx.runtime.Context);
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method io/mantisrx/runtime/GroupToGroup.getInputStrategy:()Lio/mantisrx/runtime/StageConfig$INPUT_STRATEGY;
       4: astore_3
       5: getstatic     #10                 // Field logger:Lorg/slf4j/Logger;
       8: new           #38                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #87                 // String Setting up GroupToGroup stage with input type:
      17: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: aload_3
      21: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      24: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: invokeinterface #46,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      32: aload_3
      33: getstatic     #53                 // Field io/mantisrx/runtime/StageConfig$INPUT_STRATEGY.CONCURRENT:Lio/mantisrx/runtime/StageConfig$INPUT_STRATEGY;
      36: if_acmpne     49
      39: new           #65                 // class java/lang/RuntimeException
      42: dup
      43: ldc           #81                 // String Concurrency is not a supported input strategy for KeyComputation
      45: invokespecial #68                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: aload_3
      50: getstatic     #61                 // Field io/mantisrx/runtime/StageConfig$INPUT_STRATEGY.SERIAL:Lio/mantisrx/runtime/StageConfig$INPUT_STRATEGY;
      53: if_acmpne     80
      56: aload_1
      57: invokestatic  #62                 // Method rx/Observable.merge:(Lrx/Observable;)Lrx/Observable;
      60: invokestatic  #63                 // Method rx/Observable.just:(Ljava/lang/Object;)Lrx/Observable;
      63: astore        4
      65: aload         4
      67: aload_0
      68: invokevirtual #88                 // Method io/mantisrx/runtime/GroupToGroup.getComputation:()Lio/mantisrx/runtime/computation/GroupComputation;
      71: aload_2
      72: aload_0
      73: invokevirtual #89                 // Method io/mantisrx/runtime/GroupToGroup.getKeyExpireTimeSeconds:()J
      76: invokestatic  #90                 // Method executeMantisGroups:(Lrx/Observable;Lio/mantisrx/runtime/computation/Computation;Lio/mantisrx/runtime/Context;J)Lrx/Observable;
      79: areturn
      80: new           #65                 // class java/lang/RuntimeException
      83: dup
      84: new           #38                 // class java/lang/StringBuilder
      87: dup
      88: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      91: ldc           #66                 // String Unsupported input type:
      93: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload_3
      97: invokevirtual #67                 // Method io/mantisrx/runtime/StageConfig$INPUT_STRATEGY.name:()Ljava/lang/String;
     100: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     106: invokespecial #68                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     109: athrow

  private static <K, T, R> rx.Observable<rx.Observable<R>> setupKeyToScalarStage(io.mantisrx.runtime.KeyToScalar<K, T, R>, rx.Observable<rx.Observable<io.mantisrx.common.MantisGroup<java.lang.String, T>>>, io.mantisrx.runtime.Context);
    Code:
       0: aload_0
       1: invokevirtual #91                 // Method io/mantisrx/runtime/KeyToScalar.getInputStrategy:()Lio/mantisrx/runtime/StageConfig$INPUT_STRATEGY;
       4: astore_3
       5: getstatic     #10                 // Field logger:Lorg/slf4j/Logger;
       8: new           #38                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #92                 // String Setting up KeyToScalar stage with input type:
      17: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: aload_3
      21: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      24: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: invokeinterface #46,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      32: aload_1
      33: invokestatic  #93                 // Method io/mantisrx/runtime/Groups.flattenMantisGroupsToGroupedObservables:(Lrx/Observable;)Lrx/Observable;
      36: astore        4
      38: aload         4
      40: aload_0
      41: invokevirtual #94                 // Method io/mantisrx/runtime/KeyToScalar.getComputation:()Lio/mantisrx/runtime/computation/ToScalarComputation;
      44: aload_2
      45: aload_0
      46: invokevirtual #95                 // Method io/mantisrx/runtime/KeyToScalar.getKeyExpireTimeSeconds:()J
      49: invokestatic  #85                 // Method executeGroupsInParallel:(Lrx/Observable;Lio/mantisrx/runtime/computation/Computation;Lio/mantisrx/runtime/Context;J)Lrx/Observable;
      52: areturn

  private static <K, T, R> rx.Observable<rx.Observable<R>> setupGroupToScalarStage(io.mantisrx.runtime.GroupToScalar<K, T, R>, rx.Observable<rx.Observable<io.mantisrx.common.MantisGroup<K, T>>>, io.mantisrx.runtime.Context);
    Code:
       0: aload_0
       1: invokevirtual #96                 // Method io/mantisrx/runtime/GroupToScalar.getInputStrategy:()Lio/mantisrx/runtime/StageConfig$INPUT_STRATEGY;
       4: astore_3
       5: getstatic     #10                 // Field logger:Lorg/slf4j/Logger;
       8: new           #38                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #97                 // String Setting up GroupToScalar stage with input type:
      17: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: aload_3
      21: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      24: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: invokeinterface #46,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      32: aload_3
      33: getstatic     #53                 // Field io/mantisrx/runtime/StageConfig$INPUT_STRATEGY.CONCURRENT:Lio/mantisrx/runtime/StageConfig$INPUT_STRATEGY;
      36: if_acmpne     71
      39: getstatic     #10                 // Field logger:Lorg/slf4j/Logger;
      42: ldc           #98                 // String Execute Groups in PARALLEL!!!!
      44: invokeinterface #46,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      49: aload_1
      50: aload_0
      51: invokevirtual #99                 // Method io/mantisrx/runtime/GroupToScalar.getComputation:()Lio/mantisrx/runtime/computation/GroupToScalarComputation;
      54: aload_2
      55: iconst_1
      56: aload_0
      57: invokevirtual #100                // Method io/mantisrx/runtime/GroupToScalar.getKeyExpireTimeSeconds:()J
      60: aload_0
      61: invokevirtual #101                // Method io/mantisrx/runtime/GroupToScalar.getConcurrency:()I
      64: invokestatic  #59                 // Method resolveStageConcurrency:(I)I
      67: invokestatic  #102                // Method executeMantisGroupsInParallel:(Lrx/Observable;Lio/mantisrx/runtime/computation/Computation;Lio/mantisrx/runtime/Context;ZJI)Lrx/Observable;
      70: areturn
      71: aload_3
      72: getstatic     #61                 // Field io/mantisrx/runtime/StageConfig$INPUT_STRATEGY.SERIAL:Lio/mantisrx/runtime/StageConfig$INPUT_STRATEGY;
      75: if_acmpne     102
      78: aload_1
      79: invokestatic  #62                 // Method rx/Observable.merge:(Lrx/Observable;)Lrx/Observable;
      82: invokestatic  #63                 // Method rx/Observable.just:(Ljava/lang/Object;)Lrx/Observable;
      85: astore        4
      87: aload         4
      89: aload_0
      90: invokevirtual #99                 // Method io/mantisrx/runtime/GroupToScalar.getComputation:()Lio/mantisrx/runtime/computation/GroupToScalarComputation;
      93: aload_2
      94: aload_0
      95: invokevirtual #100                // Method io/mantisrx/runtime/GroupToScalar.getKeyExpireTimeSeconds:()J
      98: invokestatic  #90                 // Method executeMantisGroups:(Lrx/Observable;Lio/mantisrx/runtime/computation/Computation;Lio/mantisrx/runtime/Context;J)Lrx/Observable;
     101: areturn
     102: new           #65                 // class java/lang/RuntimeException
     105: dup
     106: new           #38                 // class java/lang/StringBuilder
     109: dup
     110: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
     113: ldc           #66                 // String Unsupported input type:
     115: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: aload_3
     119: invokevirtual #67                 // Method io/mantisrx/runtime/StageConfig$INPUT_STRATEGY.name:()Ljava/lang/String;
     122: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     128: invokespecial #68                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     131: athrow

  public static <T, R> void executeIntermediate(io.mantisrx.runtime.executor.WorkerConsumer, io.mantisrx.runtime.StageConfig<T, R>, io.mantisrx.runtime.executor.WorkerPublisher, io.mantisrx.runtime.Context);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #103                // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #104                // String consumer cannot be null
      10: invokespecial #105                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_1
      15: ifnonnull     28
      18: new           #103                // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #106                // String stage cannot be null
      24: invokespecial #105                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_2
      29: ifnonnull     42
      32: new           #103                // class java/lang/IllegalArgumentException
      35: dup
      36: ldc           #107                // String producer cannot be null
      38: invokespecial #105                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aconst_null
      43: astore        4
      45: aload_1
      46: instanceof    #108                // class io/mantisrx/runtime/ScalarToScalar
      49: ifeq          81
      52: aload_1
      53: checkcast     #108                // class io/mantisrx/runtime/ScalarToScalar
      56: astore        5
      58: aload_0
      59: aload         5
      61: invokeinterface #109,  2          // InterfaceMethod io/mantisrx/runtime/executor/WorkerConsumer.start:(Lio/mantisrx/runtime/StageConfig;)Lrx/Observable;
      66: astore        6
      68: aload         5
      70: aload         6
      72: aload_3
      73: invokestatic  #110                // Method setupScalarToScalarStage:(Lio/mantisrx/runtime/ScalarToScalar;Lrx/Observable;Lio/mantisrx/runtime/Context;)Lrx/Observable;
      76: astore        4
      78: goto          294
      81: aload_1
      82: instanceof    #111                // class io/mantisrx/runtime/ScalarToKey
      85: ifeq          117
      88: aload_1
      89: checkcast     #111                // class io/mantisrx/runtime/ScalarToKey
      92: astore        5
      94: aload_0
      95: aload         5
      97: invokeinterface #109,  2          // InterfaceMethod io/mantisrx/runtime/executor/WorkerConsumer.start:(Lio/mantisrx/runtime/StageConfig;)Lrx/Observable;
     102: astore        6
     104: aload         5
     106: aload         6
     108: aload_3
     109: invokestatic  #112                // Method setupScalarToKeyStage:(Lio/mantisrx/runtime/ScalarToKey;Lrx/Observable;Lio/mantisrx/runtime/Context;)Lrx/Observable;
     112: astore        4
     114: goto          294
     117: aload_1
     118: instanceof    #113                // class io/mantisrx/runtime/ScalarToGroup
     121: ifeq          153
     124: aload_1
     125: checkcast     #113                // class io/mantisrx/runtime/ScalarToGroup
     128: astore        5
     130: aload_0
     131: aload         5
     133: invokeinterface #109,  2          // InterfaceMethod io/mantisrx/runtime/executor/WorkerConsumer.start:(Lio/mantisrx/runtime/StageConfig;)Lrx/Observable;
     138: astore        6
     140: aload         5
     142: aload         6
     144: aload_3
     145: invokestatic  #114                // Method setupScalarToGroupStage:(Lio/mantisrx/runtime/ScalarToGroup;Lrx/Observable;Lio/mantisrx/runtime/Context;)Lrx/Observable;
     148: astore        4
     150: goto          294
     153: aload_1
     154: instanceof    #115                // class io/mantisrx/runtime/KeyToKey
     157: ifeq          189
     160: aload_1
     161: checkcast     #115                // class io/mantisrx/runtime/KeyToKey
     164: astore        5
     166: aload_0
     167: aload         5
     169: invokeinterface #109,  2          // InterfaceMethod io/mantisrx/runtime/executor/WorkerConsumer.start:(Lio/mantisrx/runtime/StageConfig;)Lrx/Observable;
     174: astore        6
     176: aload         5
     178: aload         6
     180: aload_3
     181: invokestatic  #116                // Method setupKeyToKeyStage:(Lio/mantisrx/runtime/KeyToKey;Lrx/Observable;Lio/mantisrx/runtime/Context;)Lrx/Observable;
     184: astore        4
     186: goto          294
     189: aload_1
     190: instanceof    #117                // class io/mantisrx/runtime/GroupToGroup
     193: ifeq          225
     196: aload_1
     197: checkcast     #117                // class io/mantisrx/runtime/GroupToGroup
     200: astore        5
     202: aload_0
     203: aload         5
     205: invokeinterface #109,  2          // InterfaceMethod io/mantisrx/runtime/executor/WorkerConsumer.start:(Lio/mantisrx/runtime/StageConfig;)Lrx/Observable;
     210: astore        6
     212: aload         5
     214: aload         6
     216: aload_3
     217: invokestatic  #118                // Method setupGroupToGroupStage:(Lio/mantisrx/runtime/GroupToGroup;Lrx/Observable;Lio/mantisrx/runtime/Context;)Lrx/Observable;
     220: astore        4
     222: goto          294
     225: aload_1
     226: instanceof    #119                // class io/mantisrx/runtime/KeyToScalar
     229: ifeq          261
     232: aload_1
     233: checkcast     #119                // class io/mantisrx/runtime/KeyToScalar
     236: astore        5
     238: aload_0
     239: aload         5
     241: invokeinterface #109,  2          // InterfaceMethod io/mantisrx/runtime/executor/WorkerConsumer.start:(Lio/mantisrx/runtime/StageConfig;)Lrx/Observable;
     246: astore        6
     248: aload         5
     250: aload         6
     252: aload_3
     253: invokestatic  #120                // Method setupKeyToScalarStage:(Lio/mantisrx/runtime/KeyToScalar;Lrx/Observable;Lio/mantisrx/runtime/Context;)Lrx/Observable;
     256: astore        4
     258: goto          294
     261: aload_1
     262: instanceof    #121                // class io/mantisrx/runtime/GroupToScalar
     265: ifeq          294
     268: aload_1
     269: checkcast     #121                // class io/mantisrx/runtime/GroupToScalar
     272: astore        5
     274: aload_0
     275: aload         5
     277: invokeinterface #109,  2          // InterfaceMethod io/mantisrx/runtime/executor/WorkerConsumer.start:(Lio/mantisrx/runtime/StageConfig;)Lrx/Observable;
     282: astore        6
     284: aload         5
     286: aload         6
     288: aload_3
     289: invokestatic  #122                // Method setupGroupToScalarStage:(Lio/mantisrx/runtime/GroupToScalar;Lrx/Observable;Lio/mantisrx/runtime/Context;)Lrx/Observable;
     292: astore        4
     294: aload_2
     295: aload_1
     296: aload         4
     298: invokeinterface #123,  3          // InterfaceMethod io/mantisrx/runtime/executor/WorkerPublisher.start:(Lio/mantisrx/runtime/StageConfig;Lrx/Observable;)V
     303: return

  public static void executeSink(io.mantisrx.runtime.executor.WorkerConsumer, io.mantisrx.runtime.StageConfig, io.mantisrx.runtime.SinkHolder, io.mantisrx.runtime.executor.PortSelector, io.reactivex.mantis.remote.observable.RxMetrics, io.mantisrx.runtime.Context, rx.functions.Action0, rx.functions.Action0, rx.functions.Action0, rx.functions.Action0, rx.functions.Action1<java.lang.Throwable>);
    Code:
       0: new           #5                  // class io/mantisrx/runtime/executor/SinkPublisher
       3: dup
       4: aload_2
       5: aload_3
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: invokespecial #6                  // Method io/mantisrx/runtime/executor/SinkPublisher."<init>":(Lio/mantisrx/runtime/SinkHolder;Lio/mantisrx/runtime/executor/PortSelector;Lio/mantisrx/runtime/Context;Lrx/functions/Action0;Lrx/functions/Action0;Lrx/functions/Action0;Lrx/functions/Action0;Lrx/functions/Action1;)V
      21: astore        11
      23: aload_0
      24: aload_1
      25: aload         11
      27: aload         5
      29: invokestatic  #7                  // Method executeIntermediate:(Lio/mantisrx/runtime/executor/WorkerConsumer;Lio/mantisrx/runtime/StageConfig;Lio/mantisrx/runtime/executor/WorkerPublisher;Lio/mantisrx/runtime/Context;)V
      32: return

  private static rx.Observable lambda$executeInnersInParallel$11(int, rx.functions.Func2, io.mantisrx.runtime.Context, io.mantisrx.runtime.scheduler.SingleThreadScheduler[], rx.Observable);
    Code:
       0: aload         4
       2: iload_0
       3: invokedynamic #124,  0            // InvokeDynamic #7:call:(I)Lrx/functions/Func1;
       8: invokevirtual #125                // Method rx/Observable.groupBy:(Lrx/functions/Func1;)Lrx/Observable;
      11: aload_1
      12: aload_2
      13: aload_3
      14: invokedynamic #126,  0            // InvokeDynamic #8:call:(Lrx/functions/Func2;Lio/mantisrx/runtime/Context;[Lio/mantisrx/runtime/scheduler/SingleThreadScheduler;)Lrx/functions/Func1;
      19: invokevirtual #127                // Method rx/Observable.flatMap:(Lrx/functions/Func1;)Lrx/Observable;
      22: areturn

  private static rx.Observable lambda$null$10(rx.functions.Func2, io.mantisrx.runtime.Context, io.mantisrx.runtime.scheduler.SingleThreadScheduler[], rx.observables.GroupedObservable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: aload_2
       4: aload_3
       5: invokevirtual #128                // Method rx/observables/GroupedObservable.getKey:()Ljava/lang/Object;
       8: checkcast     #129                // class java/lang/Long
      11: invokevirtual #130                // Method java/lang/Long.intValue:()I
      14: aaload
      15: invokevirtual #131                // Method rx/observables/GroupedObservable.observeOn:(Lrx/Scheduler;)Lrx/Observable;
      18: new           #17                 // class io/mantisrx/common/metrics/rx/MonitorOperator
      21: dup
      22: ldc           #132                // String worker_stage_inner_input
      24: invokespecial #19                 // Method io/mantisrx/common/metrics/rx/MonitorOperator."<init>":(Ljava/lang/String;)V
      27: invokevirtual #20                 // Method rx/Observable.lift:(Lrx/Observable$Operator;)Lrx/Observable;
      30: invokeinterface #133,  3          // InterfaceMethod rx/functions/Func2.call:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      35: checkcast     #134                // class rx/Observable
      38: new           #17                 // class io/mantisrx/common/metrics/rx/MonitorOperator
      41: dup
      42: ldc           #135                // String worker_stage_inner_output
      44: invokespecial #19                 // Method io/mantisrx/common/metrics/rx/MonitorOperator."<init>":(Ljava/lang/String;)V
      47: invokevirtual #20                 // Method rx/Observable.lift:(Lrx/Observable$Operator;)Lrx/Observable;
      50: areturn

  private static java.lang.Long lambda$null$9(int, java.lang.Object);
    Code:
       0: invokestatic  #136                // Method java/lang/System.nanoTime:()J
       3: iload_0
       4: i2l
       5: lrem
       6: invokestatic  #137                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       9: areturn

  private static rx.Observable lambda$executeInnersInParallel$8(rx.functions.Func2, io.mantisrx.runtime.Context, rx.Observable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #138                // Method rx/schedulers/Schedulers.computation:()Lrx/Scheduler;
       6: invokevirtual #139                // Method rx/Observable.observeOn:(Lrx/Scheduler;)Lrx/Observable;
       9: new           #17                 // class io/mantisrx/common/metrics/rx/MonitorOperator
      12: dup
      13: ldc           #132                // String worker_stage_inner_input
      15: invokespecial #19                 // Method io/mantisrx/common/metrics/rx/MonitorOperator."<init>":(Ljava/lang/String;)V
      18: invokevirtual #20                 // Method rx/Observable.lift:(Lrx/Observable$Operator;)Lrx/Observable;
      21: invokeinterface #133,  3          // InterfaceMethod rx/functions/Func2.call:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #134                // class rx/Observable
      29: new           #17                 // class io/mantisrx/common/metrics/rx/MonitorOperator
      32: dup
      33: ldc           #135                // String worker_stage_inner_output
      35: invokespecial #19                 // Method io/mantisrx/common/metrics/rx/MonitorOperator."<init>":(Ljava/lang/String;)V
      38: invokevirtual #20                 // Method rx/Observable.lift:(Lrx/Observable$Operator;)Lrx/Observable;
      41: areturn

  private static rx.Observable lambda$executeInners$7(rx.functions.Func2, io.mantisrx.runtime.Context, rx.Observable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: new           #17                 // class io/mantisrx/common/metrics/rx/MonitorOperator
       6: dup
       7: ldc           #132                // String worker_stage_inner_input
       9: invokespecial #19                 // Method io/mantisrx/common/metrics/rx/MonitorOperator."<init>":(Ljava/lang/String;)V
      12: invokevirtual #20                 // Method rx/Observable.lift:(Lrx/Observable$Operator;)Lrx/Observable;
      15: invokeinterface #133,  3          // InterfaceMethod rx/functions/Func2.call:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #134                // class rx/Observable
      23: new           #17                 // class io/mantisrx/common/metrics/rx/MonitorOperator
      26: dup
      27: ldc           #135                // String worker_stage_inner_output
      29: invokespecial #19                 // Method io/mantisrx/common/metrics/rx/MonitorOperator."<init>":(Ljava/lang/String;)V
      32: invokevirtual #20                 // Method rx/Observable.lift:(Lrx/Observable$Operator;)Lrx/Observable;
      35: areturn

  private static rx.Observable lambda$executeMantisGroupsInParallel$6(int, rx.functions.Func2, io.mantisrx.runtime.Context, io.mantisrx.runtime.scheduler.SingleThreadScheduler[], rx.Observable);
    Code:
       0: aload         4
       2: iload_0
       3: invokedynamic #140,  0            // InvokeDynamic #9:call:(I)Lrx/functions/Func1;
       8: invokevirtual #125                // Method rx/Observable.groupBy:(Lrx/functions/Func1;)Lrx/Observable;
      11: aload_1
      12: aload_2
      13: aload_3
      14: invokedynamic #141,  0            // InvokeDynamic #10:call:(Lrx/functions/Func2;Lio/mantisrx/runtime/Context;[Lio/mantisrx/runtime/scheduler/SingleThreadScheduler;)Lrx/functions/Func1;
      19: invokevirtual #127                // Method rx/Observable.flatMap:(Lrx/functions/Func1;)Lrx/Observable;
      22: areturn

  private static rx.Observable lambda$null$5(rx.functions.Func2, io.mantisrx.runtime.Context, io.mantisrx.runtime.scheduler.SingleThreadScheduler[], rx.observables.GroupedObservable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: aload_2
       4: aload_3
       5: invokevirtual #128                // Method rx/observables/GroupedObservable.getKey:()Ljava/lang/Object;
       8: checkcast     #55                 // class java/lang/Integer
      11: invokevirtual #142                // Method java/lang/Integer.intValue:()I
      14: aaload
      15: invokevirtual #131                // Method rx/observables/GroupedObservable.observeOn:(Lrx/Scheduler;)Lrx/Observable;
      18: new           #17                 // class io/mantisrx/common/metrics/rx/MonitorOperator
      21: dup
      22: ldc           #132                // String worker_stage_inner_input
      24: invokespecial #19                 // Method io/mantisrx/common/metrics/rx/MonitorOperator."<init>":(Ljava/lang/String;)V
      27: invokevirtual #20                 // Method rx/Observable.lift:(Lrx/Observable$Operator;)Lrx/Observable;
      30: invokeinterface #133,  3          // InterfaceMethod rx/functions/Func2.call:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      35: checkcast     #134                // class rx/Observable
      38: new           #17                 // class io/mantisrx/common/metrics/rx/MonitorOperator
      41: dup
      42: ldc           #135                // String worker_stage_inner_output
      44: invokespecial #19                 // Method io/mantisrx/common/metrics/rx/MonitorOperator."<init>":(Ljava/lang/String;)V
      47: invokevirtual #20                 // Method rx/Observable.lift:(Lrx/Observable$Operator;)Lrx/Observable;
      50: areturn

  private static java.lang.Integer lambda$null$4(int, io.mantisrx.common.MantisGroup);
    Code:
       0: aload_1
       1: invokevirtual #143                // Method io/mantisrx/common/MantisGroup.getKeyValue:()Ljava/lang/Object;
       4: invokevirtual #144                // Method java/lang/Object.hashCode:()I
       7: invokestatic  #145                // Method java/lang/Math.abs:(I)I
      10: iload_0
      11: irem
      12: invokestatic  #31                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      15: areturn

  private static rx.Observable lambda$executeMantisGroupsInParallel$3(rx.functions.Func2, io.mantisrx.runtime.Context, rx.Observable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #138                // Method rx/schedulers/Schedulers.computation:()Lrx/Scheduler;
       6: invokevirtual #139                // Method rx/Observable.observeOn:(Lrx/Scheduler;)Lrx/Observable;
       9: new           #17                 // class io/mantisrx/common/metrics/rx/MonitorOperator
      12: dup
      13: ldc           #132                // String worker_stage_inner_input
      15: invokespecial #19                 // Method io/mantisrx/common/metrics/rx/MonitorOperator."<init>":(Ljava/lang/String;)V
      18: invokevirtual #20                 // Method rx/Observable.lift:(Lrx/Observable$Operator;)Lrx/Observable;
      21: invokeinterface #133,  3          // InterfaceMethod rx/functions/Func2.call:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #134                // class rx/Observable
      29: new           #17                 // class io/mantisrx/common/metrics/rx/MonitorOperator
      32: dup
      33: ldc           #135                // String worker_stage_inner_output
      35: invokespecial #19                 // Method io/mantisrx/common/metrics/rx/MonitorOperator."<init>":(Ljava/lang/String;)V
      38: invokevirtual #20                 // Method rx/Observable.lift:(Lrx/Observable$Operator;)Lrx/Observable;
      41: areturn

  private static rx.Observable lambda$executeMantisGroups$2(rx.functions.Func2, io.mantisrx.runtime.Context, rx.Observable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: new           #17                 // class io/mantisrx/common/metrics/rx/MonitorOperator
       6: dup
       7: ldc           #132                // String worker_stage_inner_input
       9: invokespecial #19                 // Method io/mantisrx/common/metrics/rx/MonitorOperator."<init>":(Ljava/lang/String;)V
      12: invokevirtual #20                 // Method rx/Observable.lift:(Lrx/Observable$Operator;)Lrx/Observable;
      15: invokeinterface #133,  3          // InterfaceMethod rx/functions/Func2.call:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #134                // class rx/Observable
      23: new           #17                 // class io/mantisrx/common/metrics/rx/MonitorOperator
      26: dup
      27: ldc           #135                // String worker_stage_inner_output
      29: invokespecial #19                 // Method io/mantisrx/common/metrics/rx/MonitorOperator."<init>":(Ljava/lang/String;)V
      32: invokevirtual #20                 // Method rx/Observable.lift:(Lrx/Observable$Operator;)Lrx/Observable;
      35: areturn

  private static rx.Observable lambda$executeGroupsInParallel$1(rx.functions.Func2, io.mantisrx.runtime.Context, long, rx.observables.GroupedObservable);
    Code:
       0: aload_0
       1: aload_1
       2: aload         4
       4: invokevirtual #128                // Method rx/observables/GroupedObservable.getKey:()Ljava/lang/Object;
       7: aload         4
       9: invokedynamic #146,  0            // InvokeDynamic #11:call:()Lrx/functions/Action0;
      14: invokevirtual #147                // Method rx/observables/GroupedObservable.doOnUnsubscribe:(Lrx/functions/Action0;)Lrx/Observable;
      17: lload_2
      18: getstatic     #148                // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      21: invokestatic  #149                // Method rx/Observable.empty:()Lrx/Observable;
      24: invokevirtual #150                // Method rx/Observable.timeout:(JLjava/util/concurrent/TimeUnit;Lrx/Observable;)Lrx/Observable;
      27: invokestatic  #138                // Method rx/schedulers/Schedulers.computation:()Lrx/Scheduler;
      30: invokevirtual #151                // Method rx/Observable.subscribeOn:(Lrx/Scheduler;)Lrx/Observable;
      33: new           #17                 // class io/mantisrx/common/metrics/rx/MonitorOperator
      36: dup
      37: ldc           #132                // String worker_stage_inner_input
      39: invokespecial #19                 // Method io/mantisrx/common/metrics/rx/MonitorOperator."<init>":(Ljava/lang/String;)V
      42: invokevirtual #20                 // Method rx/Observable.lift:(Lrx/Observable$Operator;)Lrx/Observable;
      45: invokestatic  #152                // Method io/reactivx/mantis/operators/GroupedObservableUtils.createGroupedObservable:(Ljava/lang/Object;Lrx/Observable;)Lrx/observables/GroupedObservable;
      48: invokeinterface #133,  3          // InterfaceMethod rx/functions/Func2.call:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      53: checkcast     #134                // class rx/Observable
      56: new           #17                 // class io/mantisrx/common/metrics/rx/MonitorOperator
      59: dup
      60: ldc           #135                // String worker_stage_inner_output
      62: invokespecial #19                 // Method io/mantisrx/common/metrics/rx/MonitorOperator."<init>":(Ljava/lang/String;)V
      65: invokevirtual #20                 // Method rx/Observable.lift:(Lrx/Observable$Operator;)Lrx/Observable;
      68: areturn

  private static void lambda$null$0();
    Code:
       0: getstatic     #153                // Field groupsExpiredCounter:Lio/mantisrx/common/metrics/Counter;
       3: ifnull        14
       6: getstatic     #153                // Field groupsExpiredCounter:Lio/mantisrx/common/metrics/Counter;
       9: invokeinterface #154,  1          // InterfaceMethod io/mantisrx/common/metrics/Counter.increment:()V
      14: return

  static {};
    Code:
       0: ldc           #155                // class io/mantisrx/runtime/executor/StageExecutors
       2: invokestatic  #156                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #10                 // Field logger:Lorg/slf4j/Logger;
       8: ldc2_w        #157                // long 100l
      11: putstatic     #159                // Field stageBufferIntervalMs:J
      14: bipush        100
      16: putstatic     #160                // Field maxItemsInBuffer:I
      19: new           #161                // class io/mantisrx/common/metrics/Metrics$Builder
      22: dup
      23: invokespecial #162                // Method io/mantisrx/common/metrics/Metrics$Builder."<init>":()V
      26: ldc           #163                // String StageExecutors
      28: invokevirtual #164                // Method io/mantisrx/common/metrics/Metrics$Builder.name:(Ljava/lang/String;)Lio/mantisrx/common/metrics/Metrics$Builder;
      31: ldc           #165                // String groupsExpiredCounter
      33: invokevirtual #166                // Method io/mantisrx/common/metrics/Metrics$Builder.addCounter:(Ljava/lang/String;)Lio/mantisrx/common/metrics/Metrics$Builder;
      36: invokevirtual #167                // Method io/mantisrx/common/metrics/Metrics$Builder.build:()Lio/mantisrx/common/metrics/Metrics;
      39: astore_0
      40: invokestatic  #168                // Method io/mantisrx/common/metrics/MetricsRegistry.getInstance:()Lio/mantisrx/common/metrics/MetricsRegistry;
      43: aload_0
      44: invokevirtual #169                // Method io/mantisrx/common/metrics/MetricsRegistry.registerAndGet:(Lio/mantisrx/common/metrics/Metrics;)Lio/mantisrx/common/metrics/Metrics;
      47: astore_0
      48: aload_0
      49: ldc           #165                // String groupsExpiredCounter
      51: invokevirtual #170                // Method io/mantisrx/common/metrics/Metrics.getCounter:(Ljava/lang/String;)Lio/mantisrx/common/metrics/Counter;
      54: putstatic     #153                // Field groupsExpiredCounter:Lio/mantisrx/common/metrics/Counter;
      57: getstatic     #171                // Field io/mantisrx/server/core/ServiceRegistry.INSTANCE:Lio/mantisrx/server/core/ServiceRegistry;
      60: invokevirtual #172                // Method io/mantisrx/server/core/ServiceRegistry.getPropertiesService:()Lio/mantisrx/common/properties/MantisPropertiesService;
      63: ldc           #173                // String mantis.stage.buffer.intervalMs
      65: ldc           #174                // String 100
      67: invokevirtual #175                // Method io/mantisrx/common/properties/MantisPropertiesService.getStringValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      70: astore_1
      71: aload_1
      72: invokestatic  #48                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      75: i2l
      76: putstatic     #159                // Field stageBufferIntervalMs:J
      79: getstatic     #171                // Field io/mantisrx/server/core/ServiceRegistry.INSTANCE:Lio/mantisrx/server/core/ServiceRegistry;
      82: invokevirtual #172                // Method io/mantisrx/server/core/ServiceRegistry.getPropertiesService:()Lio/mantisrx/common/properties/MantisPropertiesService;
      85: ldc           #176                // String mantis.stage.buffer.maxSize
      87: ldc           #174                // String 100
      89: invokevirtual #175                // Method io/mantisrx/common/properties/MantisPropertiesService.getStringValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      92: astore_2
      93: aload_2
      94: invokestatic  #48                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      97: putstatic     #160                // Field maxItemsInBuffer:I
     100: return
}
