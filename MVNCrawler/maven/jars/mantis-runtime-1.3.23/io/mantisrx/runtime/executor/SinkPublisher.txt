Compiled from "SinkPublisher.java"
public class io.mantisrx.runtime.executor.SinkPublisher<T, R> implements io.mantisrx.runtime.executor.WorkerPublisher<T, R> {
  private static final org.slf4j.Logger logger;

  private io.mantisrx.runtime.SinkHolder<R> sinkHolder;

  private io.mantisrx.runtime.executor.PortSelector portSelector;

  private io.mantisrx.runtime.Context context;

  private rx.functions.Action0 observableTerminatedCallback;

  private rx.functions.Action0 onSubscribeAction;

  private rx.functions.Action0 onUnsubscribeAction;

  private rx.functions.Action0 observableOnCompleteCallback;

  private rx.functions.Action1<java.lang.Throwable> observableOnErrorCallback;

  public io.mantisrx.runtime.executor.SinkPublisher(io.mantisrx.runtime.SinkHolder<R>, io.mantisrx.runtime.executor.PortSelector, io.mantisrx.runtime.Context, rx.functions.Action0, rx.functions.Action0, rx.functions.Action0, rx.functions.Action0, rx.functions.Action1<java.lang.Throwable>);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #8                  // Field sinkHolder:Lio/mantisrx/runtime/SinkHolder;
       9: aload_0
      10: aload_2
      11: putfield      #9                  // Field portSelector:Lio/mantisrx/runtime/executor/PortSelector;
      14: aload_0
      15: aload_3
      16: putfield      #10                 // Field context:Lio/mantisrx/runtime/Context;
      19: aload_0
      20: aload         4
      22: putfield      #3                  // Field observableTerminatedCallback:Lrx/functions/Action0;
      25: aload_0
      26: aload         5
      28: putfield      #4                  // Field onSubscribeAction:Lrx/functions/Action0;
      31: aload_0
      32: aload         6
      34: putfield      #6                  // Field onUnsubscribeAction:Lrx/functions/Action0;
      37: aload_0
      38: aload         7
      40: putfield      #1                  // Field observableOnCompleteCallback:Lrx/functions/Action0;
      43: aload_0
      44: aload         8
      46: putfield      #2                  // Field observableOnErrorCallback:Lrx/functions/Action1;
      49: return

  public void start(io.mantisrx.runtime.StageConfig<T, R>, rx.Observable<rx.Observable<R>>);
    Code:
       0: aload_0
       1: getfield      #8                  // Field sinkHolder:Lio/mantisrx/runtime/SinkHolder;
       4: invokevirtual #11                 // Method io/mantisrx/runtime/SinkHolder.getSinkAction:()Lio/mantisrx/runtime/sink/Sink;
       7: astore_3
       8: iconst_m1
       9: istore        4
      11: aload_0
      12: getfield      #8                  // Field sinkHolder:Lio/mantisrx/runtime/SinkHolder;
      15: invokevirtual #12                 // Method io/mantisrx/runtime/SinkHolder.isPortRequested:()Z
      18: ifeq          32
      21: aload_0
      22: getfield      #9                  // Field portSelector:Lio/mantisrx/runtime/executor/PortSelector;
      25: invokeinterface #13,  1           // InterfaceMethod io/mantisrx/runtime/executor/PortSelector.acquirePort:()I
      30: istore        4
      32: aload_2
      33: invokestatic  #14                 // Method rx/Observable.merge:(Lrx/Observable;)Lrx/Observable;
      36: astore        5
      38: aload         5
      40: new           #15                 // class io/mantisrx/common/metrics/rx/MonitorOperator
      43: dup
      44: ldc           #16                 // String worker_sink
      46: invokespecial #17                 // Method io/mantisrx/common/metrics/rx/MonitorOperator."<init>":(Ljava/lang/String;)V
      49: invokevirtual #18                 // Method rx/Observable.lift:(Lrx/Observable$Operator;)Lrx/Observable;
      52: astore        6
      54: new           #19                 // class io/mantisrx/runtime/executor/SinkPublisher$2
      57: dup
      58: aload_0
      59: aload         6
      61: invokespecial #20                 // Method io/mantisrx/runtime/executor/SinkPublisher$2."<init>":(Lio/mantisrx/runtime/executor/SinkPublisher;Lrx/Observable;)V
      64: invokestatic  #21                 // Method rx/Observable.create:(Lrx/Observable$OnSubscribe;)Lrx/Observable;
      67: new           #22                 // class io/mantisrx/runtime/executor/SinkPublisher$1
      70: dup
      71: aload_0
      72: invokespecial #23                 // Method io/mantisrx/runtime/executor/SinkPublisher$1."<init>":(Lio/mantisrx/runtime/executor/SinkPublisher;)V
      75: invokevirtual #24                 // Method rx/Observable.doOnUnsubscribe:(Lrx/functions/Action0;)Lrx/Observable;
      78: invokevirtual #25                 // Method rx/Observable.share:()Lrx/Observable;
      81: astore        7
      83: aload_0
      84: getfield      #10                 // Field context:Lio/mantisrx/runtime/Context;
      87: invokevirtual #26                 // Method io/mantisrx/runtime/Context.getWorkerInfo:()Lio/mantisrx/runtime/WorkerInfo;
      90: invokevirtual #27                 // Method io/mantisrx/runtime/WorkerInfo.getDurationType:()Lio/mantisrx/runtime/MantisJobDurationType;
      93: getstatic     #28                 // Field io/mantisrx/runtime/MantisJobDurationType.Perpetual:Lio/mantisrx/runtime/MantisJobDurationType;
      96: if_acmpne     105
      99: aload         7
     101: invokevirtual #29                 // Method rx/Observable.subscribe:()Lrx/Subscription;
     104: pop
     105: aload_3
     106: aload_0
     107: getfield      #10                 // Field context:Lio/mantisrx/runtime/Context;
     110: invokeinterface #30,  2           // InterfaceMethod io/mantisrx/runtime/sink/Sink.init:(Lio/mantisrx/runtime/Context;)V
     115: aload_3
     116: aload_0
     117: getfield      #10                 // Field context:Lio/mantisrx/runtime/Context;
     120: new           #31                 // class io/mantisrx/runtime/PortRequest
     123: dup
     124: iload         4
     126: invokespecial #32                 // Method io/mantisrx/runtime/PortRequest."<init>":(I)V
     129: aload         7
     131: invokeinterface #33,  4           // InterfaceMethod io/mantisrx/runtime/sink/Sink.call:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
     136: return

  public io.reactivex.mantis.remote.observable.RxMetrics getMetrics();
    Code:
       0: aconst_null
       1: areturn

  public void stop();
    Code:
       0: return

  static rx.functions.Action0 access$000(io.mantisrx.runtime.executor.SinkPublisher);
    Code:
       0: aload_0
       1: getfield      #6                  // Field onUnsubscribeAction:Lrx/functions/Action0;
       4: areturn

  static org.slf4j.Logger access$100();
    Code:
       0: getstatic     #5                  // Field logger:Lorg/slf4j/Logger;
       3: areturn

  static rx.functions.Action0 access$200(io.mantisrx.runtime.executor.SinkPublisher);
    Code:
       0: aload_0
       1: getfield      #4                  // Field onSubscribeAction:Lrx/functions/Action0;
       4: areturn

  static rx.functions.Action0 access$300(io.mantisrx.runtime.executor.SinkPublisher);
    Code:
       0: aload_0
       1: getfield      #3                  // Field observableTerminatedCallback:Lrx/functions/Action0;
       4: areturn

  static rx.functions.Action1 access$400(io.mantisrx.runtime.executor.SinkPublisher);
    Code:
       0: aload_0
       1: getfield      #2                  // Field observableOnErrorCallback:Lrx/functions/Action1;
       4: areturn

  static rx.functions.Action0 access$500(io.mantisrx.runtime.executor.SinkPublisher);
    Code:
       0: aload_0
       1: getfield      #1                  // Field observableOnCompleteCallback:Lrx/functions/Action0;
       4: areturn

  static {};
    Code:
       0: ldc           #34                 // class io/mantisrx/runtime/executor/SinkPublisher
       2: invokestatic  #35                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #5                  // Field logger:Lorg/slf4j/Logger;
       8: return
}
