.. _metrics_H2OGLRMMetrics:

H2OGLRMMetrics Class
--------------------

The class provides all metrics available for ``H2OGLRM``.

**Getter Methods**

getCatCnt()
  **Returns:** Number of Non-Missing Categorical Values.

  *Scala type:* ``Long``, *Python type:* ``int``, *R type:* ``integer``

getCatErr()
  **Returns:** Misclassification Error (Categorical Cols).

  *Scala type:* ``Double``, *Python type:* ``float``, *R type:* ``numeric``

getCustomMetricName()
  **Returns:** Name of custom metric.

  *Scala type:* ``String``, *Python type:* ``string``, *R type:* ``character``

getCustomMetricValue()
  **Returns:** Value of custom metric.

  *Scala type:* ``Double``, *Python type:* ``float``, *R type:* ``numeric``

getDataFrameSerializer()
  **Returns:** A full name of a serializer used for serialization and deserialization of Spark DataFrames to a JSON value within NullableDataFrameParam.

  *Scala type:* ``String``, *Python type:* ``string``, *R type:* ``character``

getDescription()
  **Returns:** Optional description for this scoring run (to note out-of-bag, sampled data, etc.).

  *Scala type:* ``String``, *Python type:* ``string``, *R type:* ``character``

getMSE()
  **Returns:** The Mean Squared Error of the prediction for this scoring run.

  *Scala type:* ``Double``, *Python type:* ``float``, *R type:* ``numeric``

getNobs()
  **Returns:** Number of observations.

  *Scala type:* ``Long``, *Python type:* ``int``, *R type:* ``integer``

getNumCnt()
  **Returns:** Number of Non-Missing Numeric Values.

  *Scala type:* ``Long``, *Python type:* ``int``, *R type:* ``integer``

getNumErr()
  **Returns:** Sum of Squared Error (Numeric Cols).

  *Scala type:* ``Double``, *Python type:* ``float``, *R type:* ``numeric``

getRMSE()
  **Returns:** The Root Mean Squared Error of the prediction for this scoring run.

  *Scala type:* ``Double``, *Python type:* ``float``, *R type:* ``numeric``

getScoringTime()
  **Returns:** The time in mS since the epoch for the start of this scoring run.

  *Scala type:* ``Long``, *Python type:* ``int``, *R type:* ``integer``

