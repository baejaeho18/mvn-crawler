.. _metrics_H2OClusteringMetrics:

H2OClusteringMetrics Class
--------------------------

The class makes available all metrics that shared across all algorithms supporting clustering.

**Getter Methods**

getBetweenss()
  **Returns:** Between Cluster Sum of Square Error.

  *Scala type:* ``Double``, *Python type:* ``float``, *R type:* ``numeric``

getCentroidStats()
  **Returns:** Centroid Statistics.

  *Type:* ``DataFrame``

getCustomMetricName()
  **Returns:** Name of custom metric.

  *Scala type:* ``String``, *Python type:* ``string``, *R type:* ``character``

getCustomMetricValue()
  **Returns:** Value of custom metric.

  *Scala type:* ``Double``, *Python type:* ``float``, *R type:* ``numeric``

getDataFrameSerializer()
  **Returns:** A full name of a serializer used for serialization and deserialization of Spark DataFrames to a JSON value within NullableDataFrameParam.

  *Scala type:* ``String``, *Python type:* ``string``, *R type:* ``character``

getDescription()
  **Returns:** Optional description for this scoring run (to note out-of-bag, sampled data, etc.).

  *Scala type:* ``String``, *Python type:* ``string``, *R type:* ``character``

getMSE()
  **Returns:** The Mean Squared Error of the prediction for this scoring run.

  *Scala type:* ``Double``, *Python type:* ``float``, *R type:* ``numeric``

getNobs()
  **Returns:** Number of observations.

  *Scala type:* ``Long``, *Python type:* ``int``, *R type:* ``integer``

getRMSE()
  **Returns:** The Root Mean Squared Error of the prediction for this scoring run.

  *Scala type:* ``Double``, *Python type:* ``float``, *R type:* ``numeric``

getScoringTime()
  **Returns:** The time in mS since the epoch for the start of this scoring run.

  *Scala type:* ``Long``, *Python type:* ``int``, *R type:* ``integer``

getTotWithinss()
  **Returns:** Within Cluster Sum of Square Error.

  *Scala type:* ``Double``, *Python type:* ``float``, *R type:* ``numeric``

getTotss()
  **Returns:** Total Sum of Square Error to Grand Mean.

  *Scala type:* ``Double``, *Python type:* ``float``, *R type:* ``numeric``

