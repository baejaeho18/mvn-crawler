Compiled from "explode.kt"
public final class org.jetbrains.kotlinx.dataframe.api.ExplodeKt {
  public static final <T> org.jetbrains.kotlinx.dataframe.DataFrame<T> explode(org.jetbrains.kotlinx.dataframe.DataFrame<? extends T>, boolean, kotlin.jvm.functions.Function2<? super org.jetbrains.kotlinx.dataframe.api.ColumnsSelectionDsl<? extends T>, ? super org.jetbrains.kotlinx.dataframe.api.ColumnsSelectionDsl<? extends T>, ? extends org.jetbrains.kotlinx.dataframe.columns.ColumnSet<?>>);
    Code:
       0: aload_0
       1: ldc           #10                 // String <this>
       3: invokestatic  #16                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #18                 // String selector
       9: invokestatic  #16                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: iload_1
      14: aload_2
      15: invokestatic  #23                 // Method org/jetbrains/kotlinx/dataframe/impl/api/ExplodeKt.explodeImpl:(Lorg/jetbrains/kotlinx/dataframe/DataFrame;ZLkotlin/jvm/functions/Function2;)Lorg/jetbrains/kotlinx/dataframe/DataFrame;
      18: areturn

  public static org.jetbrains.kotlinx.dataframe.DataFrame explode$default(org.jetbrains.kotlinx.dataframe.DataFrame, boolean, kotlin.jvm.functions.Function2, int, java.lang.Object);
    Code:
       0: iload_3
       1: iconst_1
       2: iand
       3: ifeq          8
       6: iconst_1
       7: istore_1
       8: iload_3
       9: iconst_2
      10: iand
      11: ifeq          21
      14: getstatic     #36                 // Field org/jetbrains/kotlinx/dataframe/api/ExplodeKt$explode$1.INSTANCE:Lorg/jetbrains/kotlinx/dataframe/api/ExplodeKt$explode$1;
      17: checkcast     #38                 // class kotlin/jvm/functions/Function2
      20: astore_2
      21: aload_0
      22: iload_1
      23: aload_2
      24: invokestatic  #40                 // Method explode:(Lorg/jetbrains/kotlinx/dataframe/DataFrame;ZLkotlin/jvm/functions/Function2;)Lorg/jetbrains/kotlinx/dataframe/DataFrame;
      27: areturn

  public static final <T> org.jetbrains.kotlinx.dataframe.DataFrame<T> explode(org.jetbrains.kotlinx.dataframe.DataFrame<? extends T>, java.lang.String[], boolean);
    Code:
       0: aload_0
       1: ldc           #10                 // String <this>
       3: invokestatic  #16                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #44                 // String columns
       9: invokestatic  #16                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: iload_2
      14: new           #46                 // class org/jetbrains/kotlinx/dataframe/api/ExplodeKt$explode$2
      17: dup
      18: aload_1
      19: invokespecial #50                 // Method org/jetbrains/kotlinx/dataframe/api/ExplodeKt$explode$2."<init>":([Ljava/lang/String;)V
      22: checkcast     #38                 // class kotlin/jvm/functions/Function2
      25: invokestatic  #40                 // Method explode:(Lorg/jetbrains/kotlinx/dataframe/DataFrame;ZLkotlin/jvm/functions/Function2;)Lorg/jetbrains/kotlinx/dataframe/DataFrame;
      28: areturn

  public static org.jetbrains.kotlinx.dataframe.DataFrame explode$default(org.jetbrains.kotlinx.dataframe.DataFrame, java.lang.String[], boolean, int, java.lang.Object);
    Code:
       0: iload_3
       1: iconst_2
       2: iand
       3: ifeq          8
       6: iconst_1
       7: istore_2
       8: aload_0
       9: aload_1
      10: iload_2
      11: invokestatic  #54                 // Method explode:(Lorg/jetbrains/kotlinx/dataframe/DataFrame;[Ljava/lang/String;Z)Lorg/jetbrains/kotlinx/dataframe/DataFrame;
      14: areturn

  public static final <T, C> org.jetbrains.kotlinx.dataframe.DataFrame<T> explode(org.jetbrains.kotlinx.dataframe.DataFrame<? extends T>, org.jetbrains.kotlinx.dataframe.columns.ColumnReference<? extends C>[], boolean);
    Code:
       0: aload_0
       1: ldc           #10                 // String <this>
       3: invokestatic  #16                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #44                 // String columns
       9: invokestatic  #16                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: iload_2
      14: new           #58                 // class org/jetbrains/kotlinx/dataframe/api/ExplodeKt$explode$3
      17: dup
      18: aload_1
      19: invokespecial #61                 // Method org/jetbrains/kotlinx/dataframe/api/ExplodeKt$explode$3."<init>":([Lorg/jetbrains/kotlinx/dataframe/columns/ColumnReference;)V
      22: checkcast     #38                 // class kotlin/jvm/functions/Function2
      25: invokestatic  #40                 // Method explode:(Lorg/jetbrains/kotlinx/dataframe/DataFrame;ZLkotlin/jvm/functions/Function2;)Lorg/jetbrains/kotlinx/dataframe/DataFrame;
      28: areturn

  public static org.jetbrains.kotlinx.dataframe.DataFrame explode$default(org.jetbrains.kotlinx.dataframe.DataFrame, org.jetbrains.kotlinx.dataframe.columns.ColumnReference[], boolean, int, java.lang.Object);
    Code:
       0: iload_3
       1: iconst_2
       2: iand
       3: ifeq          8
       6: iconst_1
       7: istore_2
       8: aload_0
       9: aload_1
      10: iload_2
      11: invokestatic  #65                 // Method explode:(Lorg/jetbrains/kotlinx/dataframe/DataFrame;[Lorg/jetbrains/kotlinx/dataframe/columns/ColumnReference;Z)Lorg/jetbrains/kotlinx/dataframe/DataFrame;
      14: areturn

  public static final <T, C> org.jetbrains.kotlinx.dataframe.DataFrame<T> explode(org.jetbrains.kotlinx.dataframe.DataFrame<? extends T>, kotlin.reflect.KProperty<? extends C>[], boolean);
    Code:
       0: aload_0
       1: ldc           #10                 // String <this>
       3: invokestatic  #16                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #44                 // String columns
       9: invokestatic  #16                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: iload_2
      14: new           #69                 // class org/jetbrains/kotlinx/dataframe/api/ExplodeKt$explode$4
      17: dup
      18: aload_1
      19: invokespecial #72                 // Method org/jetbrains/kotlinx/dataframe/api/ExplodeKt$explode$4."<init>":([Lkotlin/reflect/KProperty;)V
      22: checkcast     #38                 // class kotlin/jvm/functions/Function2
      25: invokestatic  #40                 // Method explode:(Lorg/jetbrains/kotlinx/dataframe/DataFrame;ZLkotlin/jvm/functions/Function2;)Lorg/jetbrains/kotlinx/dataframe/DataFrame;
      28: areturn

  public static org.jetbrains.kotlinx.dataframe.DataFrame explode$default(org.jetbrains.kotlinx.dataframe.DataFrame, kotlin.reflect.KProperty[], boolean, int, java.lang.Object);
    Code:
       0: iload_3
       1: iconst_2
       2: iand
       3: ifeq          8
       6: iconst_1
       7: istore_2
       8: aload_0
       9: aload_1
      10: iload_2
      11: invokestatic  #76                 // Method explode:(Lorg/jetbrains/kotlinx/dataframe/DataFrame;[Lkotlin/reflect/KProperty;Z)Lorg/jetbrains/kotlinx/dataframe/DataFrame;
      14: areturn

  public static final <T> org.jetbrains.kotlinx.dataframe.DataFrame<T> explode(org.jetbrains.kotlinx.dataframe.DataRow<? extends T>, boolean, kotlin.jvm.functions.Function2<? super org.jetbrains.kotlinx.dataframe.api.ColumnsSelectionDsl<? extends T>, ? super org.jetbrains.kotlinx.dataframe.api.ColumnsSelectionDsl<? extends T>, ? extends org.jetbrains.kotlinx.dataframe.columns.ColumnSet<?>>);
    Code:
       0: aload_0
       1: ldc           #10                 // String <this>
       3: invokestatic  #16                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #18                 // String selector
       9: invokestatic  #16                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: invokestatic  #84                 // Method org/jetbrains/kotlinx/dataframe/api/TypeConversionsKt.toDataFrame:(Lorg/jetbrains/kotlinx/dataframe/DataRow;)Lorg/jetbrains/kotlinx/dataframe/DataFrame;
      16: iload_1
      17: aload_2
      18: invokestatic  #40                 // Method explode:(Lorg/jetbrains/kotlinx/dataframe/DataFrame;ZLkotlin/jvm/functions/Function2;)Lorg/jetbrains/kotlinx/dataframe/DataFrame;
      21: areturn

  public static org.jetbrains.kotlinx.dataframe.DataFrame explode$default(org.jetbrains.kotlinx.dataframe.DataRow, boolean, kotlin.jvm.functions.Function2, int, java.lang.Object);
    Code:
       0: iload_3
       1: iconst_1
       2: iand
       3: ifeq          8
       6: iconst_1
       7: istore_1
       8: iload_3
       9: iconst_2
      10: iand
      11: ifeq          21
      14: getstatic     #91                 // Field org/jetbrains/kotlinx/dataframe/api/ExplodeKt$explode$5.INSTANCE:Lorg/jetbrains/kotlinx/dataframe/api/ExplodeKt$explode$5;
      17: checkcast     #38                 // class kotlin/jvm/functions/Function2
      20: astore_2
      21: aload_0
      22: iload_1
      23: aload_2
      24: invokestatic  #93                 // Method explode:(Lorg/jetbrains/kotlinx/dataframe/DataRow;ZLkotlin/jvm/functions/Function2;)Lorg/jetbrains/kotlinx/dataframe/DataFrame;
      27: areturn

  public static final <T> org.jetbrains.kotlinx.dataframe.DataFrame<T> explode(org.jetbrains.kotlinx.dataframe.DataRow<? extends T>, java.lang.String[], boolean);
    Code:
       0: aload_0
       1: ldc           #10                 // String <this>
       3: invokestatic  #16                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #44                 // String columns
       9: invokestatic  #16                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: iload_2
      14: new           #97                 // class org/jetbrains/kotlinx/dataframe/api/ExplodeKt$explode$6
      17: dup
      18: aload_1
      19: invokespecial #98                 // Method org/jetbrains/kotlinx/dataframe/api/ExplodeKt$explode$6."<init>":([Ljava/lang/String;)V
      22: checkcast     #38                 // class kotlin/jvm/functions/Function2
      25: invokestatic  #93                 // Method explode:(Lorg/jetbrains/kotlinx/dataframe/DataRow;ZLkotlin/jvm/functions/Function2;)Lorg/jetbrains/kotlinx/dataframe/DataFrame;
      28: areturn

  public static org.jetbrains.kotlinx.dataframe.DataFrame explode$default(org.jetbrains.kotlinx.dataframe.DataRow, java.lang.String[], boolean, int, java.lang.Object);
    Code:
       0: iload_3
       1: iconst_2
       2: iand
       3: ifeq          8
       6: iconst_1
       7: istore_2
       8: aload_0
       9: aload_1
      10: iload_2
      11: invokestatic  #101                // Method explode:(Lorg/jetbrains/kotlinx/dataframe/DataRow;[Ljava/lang/String;Z)Lorg/jetbrains/kotlinx/dataframe/DataFrame;
      14: areturn

  public static final <T, C> org.jetbrains.kotlinx.dataframe.DataFrame<T> explode(org.jetbrains.kotlinx.dataframe.DataRow<? extends T>, org.jetbrains.kotlinx.dataframe.columns.ColumnReference<? extends C>[], boolean);
    Code:
       0: aload_0
       1: ldc           #10                 // String <this>
       3: invokestatic  #16                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #44                 // String columns
       9: invokestatic  #16                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: iload_2
      14: new           #105                // class org/jetbrains/kotlinx/dataframe/api/ExplodeKt$explode$7
      17: dup
      18: aload_1
      19: invokespecial #106                // Method org/jetbrains/kotlinx/dataframe/api/ExplodeKt$explode$7."<init>":([Lorg/jetbrains/kotlinx/dataframe/columns/ColumnReference;)V
      22: checkcast     #38                 // class kotlin/jvm/functions/Function2
      25: invokestatic  #93                 // Method explode:(Lorg/jetbrains/kotlinx/dataframe/DataRow;ZLkotlin/jvm/functions/Function2;)Lorg/jetbrains/kotlinx/dataframe/DataFrame;
      28: areturn

  public static org.jetbrains.kotlinx.dataframe.DataFrame explode$default(org.jetbrains.kotlinx.dataframe.DataRow, org.jetbrains.kotlinx.dataframe.columns.ColumnReference[], boolean, int, java.lang.Object);
    Code:
       0: iload_3
       1: iconst_2
       2: iand
       3: ifeq          8
       6: iconst_1
       7: istore_2
       8: aload_0
       9: aload_1
      10: iload_2
      11: invokestatic  #109                // Method explode:(Lorg/jetbrains/kotlinx/dataframe/DataRow;[Lorg/jetbrains/kotlinx/dataframe/columns/ColumnReference;Z)Lorg/jetbrains/kotlinx/dataframe/DataFrame;
      14: areturn

  public static final <T, C> org.jetbrains.kotlinx.dataframe.DataFrame<T> explode(org.jetbrains.kotlinx.dataframe.DataRow<? extends T>, kotlin.reflect.KProperty<? extends C>[], boolean);
    Code:
       0: aload_0
       1: ldc           #10                 // String <this>
       3: invokestatic  #16                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #44                 // String columns
       9: invokestatic  #16                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: iload_2
      14: new           #113                // class org/jetbrains/kotlinx/dataframe/api/ExplodeKt$explode$8
      17: dup
      18: aload_1
      19: invokespecial #114                // Method org/jetbrains/kotlinx/dataframe/api/ExplodeKt$explode$8."<init>":([Lkotlin/reflect/KProperty;)V
      22: checkcast     #38                 // class kotlin/jvm/functions/Function2
      25: invokestatic  #93                 // Method explode:(Lorg/jetbrains/kotlinx/dataframe/DataRow;ZLkotlin/jvm/functions/Function2;)Lorg/jetbrains/kotlinx/dataframe/DataFrame;
      28: areturn

  public static org.jetbrains.kotlinx.dataframe.DataFrame explode$default(org.jetbrains.kotlinx.dataframe.DataRow, kotlin.reflect.KProperty[], boolean, int, java.lang.Object);
    Code:
       0: iload_3
       1: iconst_2
       2: iand
       3: ifeq          8
       6: iconst_1
       7: istore_2
       8: aload_0
       9: aload_1
      10: iload_2
      11: invokestatic  #117                // Method explode:(Lorg/jetbrains/kotlinx/dataframe/DataRow;[Lkotlin/reflect/KProperty;Z)Lorg/jetbrains/kotlinx/dataframe/DataFrame;
      14: areturn

  public static final <T> org.jetbrains.kotlinx.dataframe.DataColumn<T> explodeList(org.jetbrains.kotlinx.dataframe.DataColumn<? extends java.util.Collection<? extends T>>);
    Code:
       0: aload_0
       1: ldc           #10                 // String <this>
       3: invokestatic  #16                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokestatic  #124                // Method org/jetbrains/kotlinx/dataframe/impl/api/ExplodeKt.explodeImpl:(Lorg/jetbrains/kotlinx/dataframe/DataColumn;)Lorg/jetbrains/kotlinx/dataframe/DataColumn;
      10: areturn

  public static final <T> org.jetbrains.kotlinx.dataframe.columns.ColumnGroup<T> explodeFrames(org.jetbrains.kotlinx.dataframe.DataColumn<? extends org.jetbrains.kotlinx.dataframe.DataFrame<? extends T>>);
    Code:
       0: aload_0
       1: ldc           #10                 // String <this>
       3: invokestatic  #16                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokestatic  #134                // Method org/jetbrains/kotlinx/dataframe/api/DataFrameMergeKt.concat:(Lorg/jetbrains/kotlinx/dataframe/DataColumn;)Lorg/jetbrains/kotlinx/dataframe/DataFrame;
      10: aload_0
      11: invokeinterface #139,  1          // InterfaceMethod org/jetbrains/kotlinx/dataframe/DataColumn.name:()Ljava/lang/String;
      16: invokestatic  #143                // Method org/jetbrains/kotlinx/dataframe/api/TypeConversionsKt.toColumnGroup:(Lorg/jetbrains/kotlinx/dataframe/DataFrame;Ljava/lang/String;)Lorg/jetbrains/kotlinx/dataframe/columns/ColumnGroup;
      19: areturn
}
