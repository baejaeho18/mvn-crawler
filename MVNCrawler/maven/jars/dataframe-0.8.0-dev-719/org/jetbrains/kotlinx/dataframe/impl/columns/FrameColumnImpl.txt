Compiled from "FrameColumnImpl.kt"
public class org.jetbrains.kotlinx.dataframe.impl.columns.FrameColumnImpl<T> extends org.jetbrains.kotlinx.dataframe.impl.columns.DataColumnImpl<org.jetbrains.kotlinx.dataframe.DataFrame<? extends T>> implements org.jetbrains.kotlinx.dataframe.columns.FrameColumn<T> {
  private final kotlin.Lazy<org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema> schema;

  public org.jetbrains.kotlinx.dataframe.impl.columns.FrameColumnImpl(java.lang.String, java.util.List<? extends org.jetbrains.kotlinx.dataframe.DataFrame<? extends T>>, kotlin.Lazy<? extends org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema>, kotlin.Lazy<? extends java.util.Set<? extends org.jetbrains.kotlinx.dataframe.DataFrame<? extends T>>>);
    Code:
       0: aload_1
       1: ldc           #14                 // String name
       3: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #22                 // String values
       9: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: aload_2
      14: aload_1
      15: ldc           #24                 // class org/jetbrains/kotlinx/dataframe/DataFrame
      17: invokestatic  #30                 // Method kotlin/jvm/internal/Reflection.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;
      20: iconst_0
      21: invokestatic  #36                 // Method org/jetbrains/kotlinx/dataframe/impl/UtilsKt.createStarProjectedType:(Lkotlin/reflect/KClass;Z)Lkotlin/reflect/KType;
      24: aload         4
      26: invokespecial #39                 // Method org/jetbrains/kotlinx/dataframe/impl/columns/DataColumnImpl."<init>":(Ljava/util/List;Ljava/lang/String;Lkotlin/reflect/KType;Lkotlin/Lazy;)V
      29: aload_0
      30: aload_3
      31: dup
      32: ifnonnull     50
      35: pop
      36: new           #41                 // class org/jetbrains/kotlinx/dataframe/impl/columns/FrameColumnImpl$schema$1
      39: dup
      40: aload_2
      41: invokespecial #44                 // Method org/jetbrains/kotlinx/dataframe/impl/columns/FrameColumnImpl$schema$1."<init>":(Ljava/util/List;)V
      44: checkcast     #46                 // class kotlin/jvm/functions/Function0
      47: invokestatic  #52                 // Method kotlin/LazyKt.lazy:(Lkotlin/jvm/functions/Function0;)Lkotlin/Lazy;
      50: putfield      #56                 // Field schema:Lkotlin/Lazy;
      53: return

  public org.jetbrains.kotlinx.dataframe.impl.columns.FrameColumnImpl(java.lang.String, java.util.List, kotlin.Lazy, kotlin.Lazy, int, kotlin.jvm.internal.DefaultConstructorMarker);
    Code:
       0: iload         5
       2: iconst_4
       3: iand
       4: ifeq          9
       7: aconst_null
       8: astore_3
       9: iload         5
      11: bipush        8
      13: iand
      14: ifeq          20
      17: aconst_null
      18: astore        4
      20: aload_0
      21: aload_1
      22: aload_2
      23: aload_3
      24: aload         4
      26: invokespecial #71                 // Method "<init>":(Ljava/lang/String;Ljava/util/List;Lkotlin/Lazy;Lkotlin/Lazy;)V
      29: return

  public org.jetbrains.kotlinx.dataframe.impl.columns.FrameColumnImpl<T> rename(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #76                 // String newName
       3: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: new           #2                  // class org/jetbrains/kotlinx/dataframe/impl/columns/FrameColumnImpl
       9: dup
      10: aload_1
      11: aload_0
      12: invokevirtual #80                 // Method getValues:()Ljava/util/List;
      15: aload_0
      16: invokevirtual #84                 // Method getSchema:()Lkotlin/Lazy;
      19: aload_0
      20: invokevirtual #87                 // Method getDistinct:()Lkotlin/Lazy;
      23: invokespecial #71                 // Method "<init>":(Ljava/lang/String;Ljava/util/List;Lkotlin/Lazy;Lkotlin/Lazy;)V
      26: areturn

  public java.lang.Void defaultValue();
    Code:
       0: aconst_null
       1: areturn

  public org.jetbrains.kotlinx.dataframe.impl.columns.FrameColumnWithParent<T> addParent(org.jetbrains.kotlinx.dataframe.columns.ColumnGroup<?>);
    Code:
       0: aload_1
       1: ldc           #94                 // String parent
       3: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: new           #96                 // class org/jetbrains/kotlinx/dataframe/impl/columns/FrameColumnWithParent
       9: dup
      10: aload_1
      11: aload_0
      12: checkcast     #7                  // class org/jetbrains/kotlinx/dataframe/columns/FrameColumn
      15: invokespecial #99                 // Method org/jetbrains/kotlinx/dataframe/impl/columns/FrameColumnWithParent."<init>":(Lorg/jetbrains/kotlinx/dataframe/columns/ColumnGroup;Lorg/jetbrains/kotlinx/dataframe/columns/FrameColumn;)V
      18: areturn

  protected org.jetbrains.kotlinx.dataframe.columns.FrameColumn<T> createWithValues(java.util.List<? extends org.jetbrains.kotlinx.dataframe.DataFrame<? extends T>>, java.lang.Boolean);
    Code:
       0: aload_1
       1: ldc           #22                 // String values
       3: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: getstatic     #109                // Field org/jetbrains/kotlinx/dataframe/DataColumn.Companion:Lorg/jetbrains/kotlinx/dataframe/DataColumn$Companion;
       9: aload_0
      10: invokevirtual #113                // Method getName:()Ljava/lang/String;
      13: aload_1
      14: aconst_null
      15: iconst_4
      16: aconst_null
      17: invokestatic  #119                // Method org/jetbrains/kotlinx/dataframe/DataColumn$Companion.createFrameColumn$default:(Lorg/jetbrains/kotlinx/dataframe/DataColumn$Companion;Ljava/lang/String;Ljava/util/List;Lkotlin/Lazy;ILjava/lang/Object;)Lorg/jetbrains/kotlinx/dataframe/columns/FrameColumn;
      20: areturn

  public java.lang.Void changeType(kotlin.reflect.KType);
    Code:
       0: aload_1
       1: ldc           #125                // String type
       3: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: new           #127                // class java/lang/UnsupportedOperationException
       9: dup
      10: invokespecial #130                // Method java/lang/UnsupportedOperationException."<init>":()V
      13: athrow

  public org.jetbrains.kotlinx.dataframe.impl.columns.FrameColumnImpl<T> distinct();
    Code:
       0: new           #2                  // class org/jetbrains/kotlinx/dataframe/impl/columns/FrameColumnImpl
       3: dup
       4: aload_0
       5: invokevirtual #113                // Method getName:()Ljava/lang/String;
       8: aload_0
       9: invokevirtual #87                 // Method getDistinct:()Lkotlin/Lazy;
      12: invokeinterface #137,  1          // InterfaceMethod kotlin/Lazy.getValue:()Ljava/lang/Object;
      17: checkcast     #139                // class java/lang/Iterable
      20: invokestatic  #145                // Method kotlin/collections/CollectionsKt.toList:(Ljava/lang/Iterable;)Ljava/util/List;
      23: aload_0
      24: invokevirtual #84                 // Method getSchema:()Lkotlin/Lazy;
      27: aload_0
      28: invokevirtual #87                 // Method getDistinct:()Lkotlin/Lazy;
      31: invokespecial #71                 // Method "<init>":(Ljava/lang/String;Ljava/util/List;Lkotlin/Lazy;Lkotlin/Lazy;)V
      34: areturn

  public kotlin.Lazy<org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema> getSchema();
    Code:
       0: aload_0
       1: getfield      #56                 // Field schema:Lkotlin/Lazy;
       4: areturn

  public org.jetbrains.kotlinx.dataframe.impl.columns.ResolvingFrameColumn<T> forceResolve();
    Code:
       0: new           #151                // class org/jetbrains/kotlinx/dataframe/impl/columns/ResolvingFrameColumn
       3: dup
       4: aload_0
       5: checkcast     #7                  // class org/jetbrains/kotlinx/dataframe/columns/FrameColumn
       8: invokespecial #154                // Method org/jetbrains/kotlinx/dataframe/impl/columns/ResolvingFrameColumn."<init>":(Lorg/jetbrains/kotlinx/dataframe/columns/FrameColumn;)V
      11: areturn

  public org.jetbrains.kotlinx.dataframe.columns.FrameColumn<T> get(java.lang.Iterable<java.lang.Integer>);
    Code:
       0: aload_1
       1: ldc           #159                // String indices
       3: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: getstatic     #109                // Field org/jetbrains/kotlinx/dataframe/DataColumn.Companion:Lorg/jetbrains/kotlinx/dataframe/DataColumn$Companion;
       9: aload_0
      10: invokevirtual #113                // Method getName:()Ljava/lang/String;
      13: aload_1
      14: astore_2
      15: astore        12
      17: astore        11
      19: iconst_0
      20: istore_3
      21: aload_2
      22: astore        4
      24: new           #161                // class java/util/ArrayList
      27: dup
      28: aload_2
      29: bipush        10
      31: invokestatic  #165                // Method kotlin/collections/CollectionsKt.collectionSizeOrDefault:(Ljava/lang/Iterable;I)I
      34: invokespecial #168                // Method java/util/ArrayList."<init>":(I)V
      37: checkcast     #170                // class java/util/Collection
      40: astore        5
      42: iconst_0
      43: istore        6
      45: aload         4
      47: invokeinterface #174,  1          // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      52: astore        7
      54: aload         7
      56: invokeinterface #180,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      61: ifeq          116
      64: aload         7
      66: invokeinterface #183,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      71: astore        8
      73: aload         5
      75: aload         8
      77: checkcast     #185                // class java/lang/Number
      80: invokevirtual #189                // Method java/lang/Number.intValue:()I
      83: istore        9
      85: astore        13
      87: iconst_0
      88: istore        10
      90: aload_0
      91: invokevirtual #80                 // Method getValues:()Ljava/util/List;
      94: iload         9
      96: invokeinterface #192,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     101: checkcast     #24                 // class org/jetbrains/kotlinx/dataframe/DataFrame
     104: aload         13
     106: swap
     107: invokeinterface #196,  2          // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     112: pop
     113: goto          54
     116: aload         5
     118: checkcast     #66                 // class java/util/List
     121: nop
     122: astore        13
     124: aload         11
     126: aload         12
     128: aload         13
     130: aconst_null
     131: iconst_4
     132: aconst_null
     133: invokestatic  #119                // Method org/jetbrains/kotlinx/dataframe/DataColumn$Companion.createFrameColumn$default:(Lorg/jetbrains/kotlinx/dataframe/DataColumn$Companion;Ljava/lang/String;Ljava/util/List;Lkotlin/Lazy;ILjava/lang/Object;)Lorg/jetbrains/kotlinx/dataframe/columns/FrameColumn;
     136: areturn

  public java.lang.Void get(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #211                // String columnName
       3: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: new           #127                // class java/lang/UnsupportedOperationException
       9: dup
      10: new           #213                // class java/lang/StringBuilder
      13: dup
      14: invokespecial #214                // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #216                // String Can not get nested column \'
      19: invokevirtual #220                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_1
      23: invokevirtual #220                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc           #222                // String \' from FrameColumn \'
      28: invokevirtual #220                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: invokevirtual #113                // Method getName:()Ljava/lang/String;
      35: invokevirtual #220                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: bipush        39
      40: invokevirtual #225                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      43: invokevirtual #228                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokespecial #231                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      49: athrow

  public org.jetbrains.kotlinx.dataframe.columns.ColumnKind kind();
    Code:
       0: aload_0
       1: checkcast     #7                  // class org/jetbrains/kotlinx/dataframe/columns/FrameColumn
       4: invokestatic  #238                // Method org/jetbrains/kotlinx/dataframe/columns/FrameColumn$DefaultImpls.kind:(Lorg/jetbrains/kotlinx/dataframe/columns/FrameColumn;)Lorg/jetbrains/kotlinx/dataframe/columns/ColumnKind;
       7: areturn

  public org.jetbrains.kotlinx.dataframe.DataColumn rename(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #241                // Method rename:(Ljava/lang/String;)Lorg/jetbrains/kotlinx/dataframe/impl/columns/FrameColumnImpl;
       5: checkcast     #105                // class org/jetbrains/kotlinx/dataframe/DataColumn
       8: areturn

  public org.jetbrains.kotlinx.dataframe.columns.BaseColumn rename(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #241                // Method rename:(Ljava/lang/String;)Lorg/jetbrains/kotlinx/dataframe/impl/columns/FrameColumnImpl;
       5: checkcast     #244                // class org/jetbrains/kotlinx/dataframe/columns/BaseColumn
       8: areturn

  public org.jetbrains.kotlinx.dataframe.columns.ColumnReference rename(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #241                // Method rename:(Ljava/lang/String;)Lorg/jetbrains/kotlinx/dataframe/impl/columns/FrameColumnImpl;
       5: checkcast     #247                // class org/jetbrains/kotlinx/dataframe/columns/ColumnReference
       8: areturn

  public org.jetbrains.kotlinx.dataframe.impl.columns.DataColumnInternal rename(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #241                // Method rename:(Ljava/lang/String;)Lorg/jetbrains/kotlinx/dataframe/impl/columns/FrameColumnImpl;
       5: checkcast     #250                // class org/jetbrains/kotlinx/dataframe/impl/columns/DataColumnInternal
       8: areturn

  public org.jetbrains.kotlinx.dataframe.columns.FrameColumn rename(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #241                // Method rename:(Ljava/lang/String;)Lorg/jetbrains/kotlinx/dataframe/impl/columns/FrameColumnImpl;
       5: checkcast     #7                  // class org/jetbrains/kotlinx/dataframe/columns/FrameColumn
       8: areturn

  public java.lang.Object defaultValue();
    Code:
       0: aload_0
       1: invokevirtual #253                // Method defaultValue:()Ljava/lang/Void;
       4: areturn

  public org.jetbrains.kotlinx.dataframe.DataColumn addParent(org.jetbrains.kotlinx.dataframe.columns.ColumnGroup);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #256                // Method addParent:(Lorg/jetbrains/kotlinx/dataframe/columns/ColumnGroup;)Lorg/jetbrains/kotlinx/dataframe/impl/columns/FrameColumnWithParent;
       5: checkcast     #105                // class org/jetbrains/kotlinx/dataframe/DataColumn
       8: areturn

  public org.jetbrains.kotlinx.dataframe.DataColumn createWithValues(java.util.List, java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #259                // Method createWithValues:(Ljava/util/List;Ljava/lang/Boolean;)Lorg/jetbrains/kotlinx/dataframe/columns/FrameColumn;
       6: checkcast     #105                // class org/jetbrains/kotlinx/dataframe/DataColumn
       9: areturn

  public org.jetbrains.kotlinx.dataframe.DataColumn changeType(kotlin.reflect.KType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #262                // Method changeType:(Lkotlin/reflect/KType;)Ljava/lang/Void;
       5: checkcast     #105                // class org/jetbrains/kotlinx/dataframe/DataColumn
       8: areturn

  public org.jetbrains.kotlinx.dataframe.DataColumn distinct();
    Code:
       0: aload_0
       1: invokevirtual #265                // Method distinct:()Lorg/jetbrains/kotlinx/dataframe/impl/columns/FrameColumnImpl;
       4: checkcast     #105                // class org/jetbrains/kotlinx/dataframe/DataColumn
       7: areturn

  public org.jetbrains.kotlinx.dataframe.columns.BaseColumn distinct();
    Code:
       0: aload_0
       1: invokevirtual #265                // Method distinct:()Lorg/jetbrains/kotlinx/dataframe/impl/columns/FrameColumnImpl;
       4: checkcast     #244                // class org/jetbrains/kotlinx/dataframe/columns/BaseColumn
       7: areturn

  public org.jetbrains.kotlinx.dataframe.columns.FrameColumn distinct();
    Code:
       0: aload_0
       1: invokevirtual #265                // Method distinct:()Lorg/jetbrains/kotlinx/dataframe/impl/columns/FrameColumnImpl;
       4: checkcast     #7                  // class org/jetbrains/kotlinx/dataframe/columns/FrameColumn
       7: areturn

  public org.jetbrains.kotlinx.dataframe.DataColumn forceResolve();
    Code:
       0: aload_0
       1: invokevirtual #269                // Method forceResolve:()Lorg/jetbrains/kotlinx/dataframe/impl/columns/ResolvingFrameColumn;
       4: checkcast     #105                // class org/jetbrains/kotlinx/dataframe/DataColumn
       7: areturn

  public org.jetbrains.kotlinx.dataframe.DataColumn get(java.lang.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #272                // Method get:(Ljava/lang/Iterable;)Lorg/jetbrains/kotlinx/dataframe/columns/FrameColumn;
       5: checkcast     #105                // class org/jetbrains/kotlinx/dataframe/DataColumn
       8: areturn

  public org.jetbrains.kotlinx.dataframe.columns.BaseColumn get(java.lang.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #272                // Method get:(Ljava/lang/Iterable;)Lorg/jetbrains/kotlinx/dataframe/columns/FrameColumn;
       5: checkcast     #244                // class org/jetbrains/kotlinx/dataframe/columns/BaseColumn
       8: areturn

  public org.jetbrains.kotlinx.dataframe.DataColumn get(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #275                // Method get:(Ljava/lang/String;)Ljava/lang/Void;
       5: checkcast     #105                // class org/jetbrains/kotlinx/dataframe/DataColumn
       8: areturn
}
