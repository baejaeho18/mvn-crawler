Compiled from "html.kt"
public final class org.jetbrains.kotlinx.dataframe.io.DisplayConfiguration {
  public static final org.jetbrains.kotlinx.dataframe.io.DisplayConfiguration$Companion Companion;

  private int rowsLimit;

  private int cellContentLimit;

  private kotlin.jvm.functions.Function3<? super org.jetbrains.kotlinx.dataframe.api.FormattingDSL, ? super org.jetbrains.kotlinx.dataframe.DataRow<?>, ? super org.jetbrains.kotlinx.dataframe.DataColumn<?>, ? extends org.jetbrains.kotlinx.dataframe.api.CellAttributes> cellFormatter;

  private int precision;

  private boolean isolatedOutputs;

  private final boolean localTesting;

  private static final org.jetbrains.kotlinx.dataframe.io.DisplayConfiguration DEFAULT;

  public org.jetbrains.kotlinx.dataframe.io.DisplayConfiguration(int, int, kotlin.jvm.functions.Function3<? super org.jetbrains.kotlinx.dataframe.api.FormattingDSL, ? super org.jetbrains.kotlinx.dataframe.DataRow<?>, ? super org.jetbrains.kotlinx.dataframe.DataColumn<?>, ? extends org.jetbrains.kotlinx.dataframe.api.CellAttributes>, int, boolean, boolean);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #15                 // Field rowsLimit:I
       9: aload_0
      10: iload_2
      11: putfield      #18                 // Field cellContentLimit:I
      14: aload_0
      15: aload_3
      16: putfield      #22                 // Field cellFormatter:Lkotlin/jvm/functions/Function3;
      19: aload_0
      20: iload         4
      22: putfield      #25                 // Field precision:I
      25: aload_0
      26: iload         5
      28: putfield      #29                 // Field isolatedOutputs:Z
      31: aload_0
      32: iload         6
      34: putfield      #32                 // Field localTesting:Z
      37: return

  public org.jetbrains.kotlinx.dataframe.io.DisplayConfiguration(int, int, kotlin.jvm.functions.Function3, int, boolean, boolean, int, kotlin.jvm.internal.DefaultConstructorMarker);
    Code:
       0: iload         7
       2: iconst_1
       3: iand
       4: ifeq          10
       7: bipush        20
       9: istore_1
      10: iload         7
      12: iconst_2
      13: iand
      14: ifeq          20
      17: bipush        40
      19: istore_2
      20: iload         7
      22: iconst_4
      23: iand
      24: ifeq          29
      27: aconst_null
      28: astore_3
      29: iload         7
      31: bipush        8
      33: iand
      34: ifeq          42
      37: invokestatic  #41                 // Method org/jetbrains/kotlinx/dataframe/io/StringKt.getDefaultPrecision:()I
      40: istore        4
      42: iload         7
      44: bipush        16
      46: iand
      47: ifeq          57
      50: ldc           #43                 // String LETS_PLOT_HTML_ISOLATED_FRAME
      52: invokestatic  #49                 // Method org/jetbrains/kotlinx/dataframe/io/HtmlKt.access$flagFromEnv:(Ljava/lang/String;)Z
      55: istore        5
      57: iload         7
      59: bipush        32
      61: iand
      62: ifeq          72
      65: ldc           #51                 // String KOTLIN_DATAFRAME_LOCAL_TESTING
      67: invokestatic  #49                 // Method org/jetbrains/kotlinx/dataframe/io/HtmlKt.access$flagFromEnv:(Ljava/lang/String;)Z
      70: istore        6
      72: aload_0
      73: iload_1
      74: iload_2
      75: aload_3
      76: iload         4
      78: iload         5
      80: iload         6
      82: invokespecial #53                 // Method "<init>":(IILkotlin/jvm/functions/Function3;IZZ)V
      85: return

  public final int getRowsLimit();
    Code:
       0: aload_0
       1: getfield      #15                 // Field rowsLimit:I
       4: ireturn

  public final void setRowsLimit(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #15                 // Field rowsLimit:I
       5: return

  public final int getCellContentLimit();
    Code:
       0: aload_0
       1: getfield      #18                 // Field cellContentLimit:I
       4: ireturn

  public final void setCellContentLimit(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #18                 // Field cellContentLimit:I
       5: return

  public final kotlin.jvm.functions.Function3<org.jetbrains.kotlinx.dataframe.api.FormattingDSL, org.jetbrains.kotlinx.dataframe.DataRow<?>, org.jetbrains.kotlinx.dataframe.DataColumn<?>, org.jetbrains.kotlinx.dataframe.api.CellAttributes> getCellFormatter();
    Code:
       0: aload_0
       1: getfield      #22                 // Field cellFormatter:Lkotlin/jvm/functions/Function3;
       4: areturn

  public final void setCellFormatter(kotlin.jvm.functions.Function3<? super org.jetbrains.kotlinx.dataframe.api.FormattingDSL, ? super org.jetbrains.kotlinx.dataframe.DataRow<?>, ? super org.jetbrains.kotlinx.dataframe.DataColumn<?>, ? extends org.jetbrains.kotlinx.dataframe.api.CellAttributes>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field cellFormatter:Lkotlin/jvm/functions/Function3;
       5: return

  public final int getPrecision();
    Code:
       0: aload_0
       1: getfield      #25                 // Field precision:I
       4: ireturn

  public final void setPrecision(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #25                 // Field precision:I
       5: return

  public final boolean getIsolatedOutputs();
    Code:
       0: aload_0
       1: getfield      #29                 // Field isolatedOutputs:Z
       4: ireturn

  public final void setIsolatedOutputs(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #29                 // Field isolatedOutputs:Z
       5: return

  public final boolean getLocalTesting$dataframe();
    Code:
       0: aload_0
       1: getfield      #32                 // Field localTesting:Z
       4: ireturn

  public final int component1();
    Code:
       0: aload_0
       1: getfield      #15                 // Field rowsLimit:I
       4: ireturn

  public final int component2();
    Code:
       0: aload_0
       1: getfield      #18                 // Field cellContentLimit:I
       4: ireturn

  public final kotlin.jvm.functions.Function3<org.jetbrains.kotlinx.dataframe.api.FormattingDSL, org.jetbrains.kotlinx.dataframe.DataRow<?>, org.jetbrains.kotlinx.dataframe.DataColumn<?>, org.jetbrains.kotlinx.dataframe.api.CellAttributes> component3();
    Code:
       0: aload_0
       1: getfield      #22                 // Field cellFormatter:Lkotlin/jvm/functions/Function3;
       4: areturn

  public final int component4();
    Code:
       0: aload_0
       1: getfield      #25                 // Field precision:I
       4: ireturn

  public final boolean component5();
    Code:
       0: aload_0
       1: getfield      #29                 // Field isolatedOutputs:Z
       4: ireturn

  public final boolean component6$dataframe();
    Code:
       0: aload_0
       1: getfield      #32                 // Field localTesting:Z
       4: ireturn

  public final org.jetbrains.kotlinx.dataframe.io.DisplayConfiguration copy(int, int, kotlin.jvm.functions.Function3<? super org.jetbrains.kotlinx.dataframe.api.FormattingDSL, ? super org.jetbrains.kotlinx.dataframe.DataRow<?>, ? super org.jetbrains.kotlinx.dataframe.DataColumn<?>, ? extends org.jetbrains.kotlinx.dataframe.api.CellAttributes>, int, boolean, boolean);
    Code:
       0: new           #2                  // class org/jetbrains/kotlinx/dataframe/io/DisplayConfiguration
       3: dup
       4: iload_1
       5: iload_2
       6: aload_3
       7: iload         4
       9: iload         5
      11: iload         6
      13: invokespecial #53                 // Method "<init>":(IILkotlin/jvm/functions/Function3;IZZ)V
      16: areturn

  public static org.jetbrains.kotlinx.dataframe.io.DisplayConfiguration copy$default(org.jetbrains.kotlinx.dataframe.io.DisplayConfiguration, int, int, kotlin.jvm.functions.Function3, int, boolean, boolean, int, java.lang.Object);
    Code:
       0: iload         7
       2: iconst_1
       3: iand
       4: ifeq          12
       7: aload_0
       8: getfield      #15                 // Field rowsLimit:I
      11: istore_1
      12: iload         7
      14: iconst_2
      15: iand
      16: ifeq          24
      19: aload_0
      20: getfield      #18                 // Field cellContentLimit:I
      23: istore_2
      24: iload         7
      26: iconst_4
      27: iand
      28: ifeq          36
      31: aload_0
      32: getfield      #22                 // Field cellFormatter:Lkotlin/jvm/functions/Function3;
      35: astore_3
      36: iload         7
      38: bipush        8
      40: iand
      41: ifeq          50
      44: aload_0
      45: getfield      #25                 // Field precision:I
      48: istore        4
      50: iload         7
      52: bipush        16
      54: iand
      55: ifeq          64
      58: aload_0
      59: getfield      #29                 // Field isolatedOutputs:Z
      62: istore        5
      64: iload         7
      66: bipush        32
      68: iand
      69: ifeq          78
      72: aload_0
      73: getfield      #32                 // Field localTesting:Z
      76: istore        6
      78: aload_0
      79: iload_1
      80: iload_2
      81: aload_3
      82: iload         4
      84: iload         5
      86: iload         6
      88: invokevirtual #86                 // Method copy:(IILkotlin/jvm/functions/Function3;IZZ)Lorg/jetbrains/kotlinx/dataframe/io/DisplayConfiguration;
      91: areturn

  public java.lang.String toString();
    Code:
       0: new           #90                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #91                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #93                 // String DisplayConfiguration(rowsLimit=
       9: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #15                 // Field rowsLimit:I
      16: invokevirtual #100                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      19: ldc           #102                // String , cellContentLimit=
      21: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #18                 // Field cellContentLimit:I
      28: invokevirtual #100                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: ldc           #104                // String , cellFormatter=
      33: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #22                 // Field cellFormatter:Lkotlin/jvm/functions/Function3;
      40: invokevirtual #107                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: ldc           #109                // String , precision=
      45: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #25                 // Field precision:I
      52: invokevirtual #100                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      55: ldc           #111                // String , isolatedOutputs=
      57: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: getfield      #29                 // Field isolatedOutputs:Z
      64: invokevirtual #114                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      67: ldc           #116                // String , localTesting=
      69: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: getfield      #32                 // Field localTesting:Z
      76: invokevirtual #114                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      79: bipush        41
      81: invokevirtual #119                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      84: invokevirtual #121                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      87: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #15                 // Field rowsLimit:I
       4: invokestatic  #127                // Method java/lang/Integer.hashCode:(I)I
       7: istore_1
       8: iload_1
       9: bipush        31
      11: imul
      12: aload_0
      13: getfield      #18                 // Field cellContentLimit:I
      16: invokestatic  #127                // Method java/lang/Integer.hashCode:(I)I
      19: iadd
      20: istore_1
      21: iload_1
      22: bipush        31
      24: imul
      25: aload_0
      26: getfield      #22                 // Field cellFormatter:Lkotlin/jvm/functions/Function3;
      29: ifnonnull     36
      32: iconst_0
      33: goto          43
      36: aload_0
      37: getfield      #22                 // Field cellFormatter:Lkotlin/jvm/functions/Function3;
      40: invokevirtual #129                // Method java/lang/Object.hashCode:()I
      43: iadd
      44: istore_1
      45: iload_1
      46: bipush        31
      48: imul
      49: aload_0
      50: getfield      #25                 // Field precision:I
      53: invokestatic  #127                // Method java/lang/Integer.hashCode:(I)I
      56: iadd
      57: istore_1
      58: iload_1
      59: bipush        31
      61: imul
      62: aload_0
      63: getfield      #29                 // Field isolatedOutputs:Z
      66: dup
      67: ifeq          72
      70: pop
      71: iconst_1
      72: iadd
      73: istore_1
      74: iload_1
      75: bipush        31
      77: imul
      78: aload_0
      79: getfield      #32                 // Field localTesting:Z
      82: dup
      83: ifeq          88
      86: pop
      87: iconst_1
      88: iadd
      89: istore_1
      90: iload_1
      91: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #2                  // class org/jetbrains/kotlinx/dataframe/io/DisplayConfiguration
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #2                  // class org/jetbrains/kotlinx/dataframe/io/DisplayConfiguration
      20: astore_2
      21: aload_0
      22: getfield      #15                 // Field rowsLimit:I
      25: aload_2
      26: getfield      #15                 // Field rowsLimit:I
      29: if_icmpeq     34
      32: iconst_0
      33: ireturn
      34: aload_0
      35: getfield      #18                 // Field cellContentLimit:I
      38: aload_2
      39: getfield      #18                 // Field cellContentLimit:I
      42: if_icmpeq     47
      45: iconst_0
      46: ireturn
      47: aload_0
      48: getfield      #22                 // Field cellFormatter:Lkotlin/jvm/functions/Function3;
      51: aload_2
      52: getfield      #22                 // Field cellFormatter:Lkotlin/jvm/functions/Function3;
      55: invokestatic  #138                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      58: ifne          63
      61: iconst_0
      62: ireturn
      63: aload_0
      64: getfield      #25                 // Field precision:I
      67: aload_2
      68: getfield      #25                 // Field precision:I
      71: if_icmpeq     76
      74: iconst_0
      75: ireturn
      76: aload_0
      77: getfield      #29                 // Field isolatedOutputs:Z
      80: aload_2
      81: getfield      #29                 // Field isolatedOutputs:Z
      84: if_icmpeq     89
      87: iconst_0
      88: ireturn
      89: aload_0
      90: getfield      #32                 // Field localTesting:Z
      93: aload_2
      94: getfield      #32                 // Field localTesting:Z
      97: if_icmpeq     102
     100: iconst_0
     101: ireturn
     102: iconst_1
     103: ireturn

  public org.jetbrains.kotlinx.dataframe.io.DisplayConfiguration();
    Code:
       0: aload_0
       1: iconst_0
       2: iconst_0
       3: aconst_null
       4: iconst_0
       5: iconst_0
       6: iconst_0
       7: bipush        63
       9: aconst_null
      10: invokespecial #142                // Method "<init>":(IILkotlin/jvm/functions/Function3;IZZILkotlin/jvm/internal/DefaultConstructorMarker;)V
      13: return

  public static final org.jetbrains.kotlinx.dataframe.io.DisplayConfiguration access$getDEFAULT$cp();
    Code:
       0: getstatic     #147                // Field DEFAULT:Lorg/jetbrains/kotlinx/dataframe/io/DisplayConfiguration;
       3: areturn

  static {};
    Code:
       0: new           #150                // class org/jetbrains/kotlinx/dataframe/io/DisplayConfiguration$Companion
       3: dup
       4: aconst_null
       5: invokespecial #153                // Method org/jetbrains/kotlinx/dataframe/io/DisplayConfiguration$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
       8: putstatic     #157                // Field Companion:Lorg/jetbrains/kotlinx/dataframe/io/DisplayConfiguration$Companion;
      11: new           #2                  // class org/jetbrains/kotlinx/dataframe/io/DisplayConfiguration
      14: dup
      15: iconst_0
      16: iconst_0
      17: aconst_null
      18: iconst_0
      19: iconst_0
      20: iconst_0
      21: bipush        63
      23: aconst_null
      24: invokespecial #142                // Method "<init>":(IILkotlin/jvm/functions/Function3;IZZILkotlin/jvm/internal/DefaultConstructorMarker;)V
      27: putstatic     #147                // Field DEFAULT:Lorg/jetbrains/kotlinx/dataframe/io/DisplayConfiguration;
      30: return
}
