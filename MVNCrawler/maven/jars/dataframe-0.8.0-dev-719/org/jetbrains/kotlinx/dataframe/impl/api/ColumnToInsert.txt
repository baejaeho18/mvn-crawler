Compiled from "insert.kt"
public final class org.jetbrains.kotlinx.dataframe.impl.api.ColumnToInsert {
  private final org.jetbrains.kotlinx.dataframe.columns.ColumnPath insertionPath;

  private final org.jetbrains.kotlinx.dataframe.DataColumn<?> column;

  private final org.jetbrains.kotlinx.dataframe.impl.columns.tree.ReadonlyTreeNode<org.jetbrains.kotlinx.dataframe.impl.columns.tree.ReferenceData> referenceNode;

  public org.jetbrains.kotlinx.dataframe.impl.api.ColumnToInsert(org.jetbrains.kotlinx.dataframe.columns.ColumnPath, org.jetbrains.kotlinx.dataframe.DataColumn<?>, org.jetbrains.kotlinx.dataframe.impl.columns.tree.ReadonlyTreeNode<? extends org.jetbrains.kotlinx.dataframe.impl.columns.tree.ReferenceData>);
    Code:
       0: aload_1
       1: ldc           #11                 // String insertionPath
       3: invokestatic  #17                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #19                 // String column
       9: invokestatic  #17                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: invokespecial #22                 // Method java/lang/Object."<init>":()V
      16: aload_0
      17: aload_1
      18: putfield      #25                 // Field insertionPath:Lorg/jetbrains/kotlinx/dataframe/columns/ColumnPath;
      21: aload_0
      22: aload_2
      23: putfield      #28                 // Field column:Lorg/jetbrains/kotlinx/dataframe/DataColumn;
      26: aload_0
      27: aload_3
      28: putfield      #32                 // Field referenceNode:Lorg/jetbrains/kotlinx/dataframe/impl/columns/tree/ReadonlyTreeNode;
      31: return

  public org.jetbrains.kotlinx.dataframe.impl.api.ColumnToInsert(org.jetbrains.kotlinx.dataframe.columns.ColumnPath, org.jetbrains.kotlinx.dataframe.DataColumn, org.jetbrains.kotlinx.dataframe.impl.columns.tree.ReadonlyTreeNode, int, kotlin.jvm.internal.DefaultConstructorMarker);
    Code:
       0: iload         4
       2: iconst_4
       3: iand
       4: ifeq          9
       7: aconst_null
       8: astore_3
       9: aload_0
      10: aload_1
      11: aload_2
      12: aload_3
      13: invokespecial #37                 // Method "<init>":(Lorg/jetbrains/kotlinx/dataframe/columns/ColumnPath;Lorg/jetbrains/kotlinx/dataframe/DataColumn;Lorg/jetbrains/kotlinx/dataframe/impl/columns/tree/ReadonlyTreeNode;)V
      16: return

  public final org.jetbrains.kotlinx.dataframe.columns.ColumnPath getInsertionPath();
    Code:
       0: aload_0
       1: getfield      #25                 // Field insertionPath:Lorg/jetbrains/kotlinx/dataframe/columns/ColumnPath;
       4: areturn

  public final org.jetbrains.kotlinx.dataframe.DataColumn<?> getColumn();
    Code:
       0: aload_0
       1: getfield      #28                 // Field column:Lorg/jetbrains/kotlinx/dataframe/DataColumn;
       4: areturn

  public final org.jetbrains.kotlinx.dataframe.impl.columns.tree.ReadonlyTreeNode<org.jetbrains.kotlinx.dataframe.impl.columns.tree.ReferenceData> getReferenceNode();
    Code:
       0: aload_0
       1: getfield      #32                 // Field referenceNode:Lorg/jetbrains/kotlinx/dataframe/impl/columns/tree/ReadonlyTreeNode;
       4: areturn

  public final org.jetbrains.kotlinx.dataframe.columns.ColumnPath component1();
    Code:
       0: aload_0
       1: getfield      #25                 // Field insertionPath:Lorg/jetbrains/kotlinx/dataframe/columns/ColumnPath;
       4: areturn

  public final org.jetbrains.kotlinx.dataframe.DataColumn<?> component2();
    Code:
       0: aload_0
       1: getfield      #28                 // Field column:Lorg/jetbrains/kotlinx/dataframe/DataColumn;
       4: areturn

  public final org.jetbrains.kotlinx.dataframe.impl.columns.tree.ReadonlyTreeNode<org.jetbrains.kotlinx.dataframe.impl.columns.tree.ReferenceData> component3();
    Code:
       0: aload_0
       1: getfield      #32                 // Field referenceNode:Lorg/jetbrains/kotlinx/dataframe/impl/columns/tree/ReadonlyTreeNode;
       4: areturn

  public final org.jetbrains.kotlinx.dataframe.impl.api.ColumnToInsert copy(org.jetbrains.kotlinx.dataframe.columns.ColumnPath, org.jetbrains.kotlinx.dataframe.DataColumn<?>, org.jetbrains.kotlinx.dataframe.impl.columns.tree.ReadonlyTreeNode<? extends org.jetbrains.kotlinx.dataframe.impl.columns.tree.ReferenceData>);
    Code:
       0: aload_1
       1: ldc           #11                 // String insertionPath
       3: invokestatic  #17                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #19                 // String column
       9: invokestatic  #17                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: new           #2                  // class org/jetbrains/kotlinx/dataframe/impl/api/ColumnToInsert
      15: dup
      16: aload_1
      17: aload_2
      18: aload_3
      19: invokespecial #37                 // Method "<init>":(Lorg/jetbrains/kotlinx/dataframe/columns/ColumnPath;Lorg/jetbrains/kotlinx/dataframe/DataColumn;Lorg/jetbrains/kotlinx/dataframe/impl/columns/tree/ReadonlyTreeNode;)V
      22: areturn

  public static org.jetbrains.kotlinx.dataframe.impl.api.ColumnToInsert copy$default(org.jetbrains.kotlinx.dataframe.impl.api.ColumnToInsert, org.jetbrains.kotlinx.dataframe.columns.ColumnPath, org.jetbrains.kotlinx.dataframe.DataColumn, org.jetbrains.kotlinx.dataframe.impl.columns.tree.ReadonlyTreeNode, int, java.lang.Object);
    Code:
       0: iload         4
       2: iconst_1
       3: iand
       4: ifeq          12
       7: aload_0
       8: getfield      #25                 // Field insertionPath:Lorg/jetbrains/kotlinx/dataframe/columns/ColumnPath;
      11: astore_1
      12: iload         4
      14: iconst_2
      15: iand
      16: ifeq          24
      19: aload_0
      20: getfield      #28                 // Field column:Lorg/jetbrains/kotlinx/dataframe/DataColumn;
      23: astore_2
      24: iload         4
      26: iconst_4
      27: iand
      28: ifeq          36
      31: aload_0
      32: getfield      #32                 // Field referenceNode:Lorg/jetbrains/kotlinx/dataframe/impl/columns/tree/ReadonlyTreeNode;
      35: astore_3
      36: aload_0
      37: aload_1
      38: aload_2
      39: aload_3
      40: invokevirtual #55                 // Method copy:(Lorg/jetbrains/kotlinx/dataframe/columns/ColumnPath;Lorg/jetbrains/kotlinx/dataframe/DataColumn;Lorg/jetbrains/kotlinx/dataframe/impl/columns/tree/ReadonlyTreeNode;)Lorg/jetbrains/kotlinx/dataframe/impl/api/ColumnToInsert;
      43: areturn

  public java.lang.String toString();
    Code:
       0: new           #59                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #60                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #62                 // String ColumnToInsert(insertionPath=
       9: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #25                 // Field insertionPath:Lorg/jetbrains/kotlinx/dataframe/columns/ColumnPath;
      16: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #71                 // String , column=
      21: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #28                 // Field column:Lorg/jetbrains/kotlinx/dataframe/DataColumn;
      28: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #73                 // String , referenceNode=
      33: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #32                 // Field referenceNode:Lorg/jetbrains/kotlinx/dataframe/impl/columns/tree/ReadonlyTreeNode;
      40: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: bipush        41
      45: invokevirtual #76                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      48: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #25                 // Field insertionPath:Lorg/jetbrains/kotlinx/dataframe/columns/ColumnPath;
       4: invokevirtual #84                 // Method org/jetbrains/kotlinx/dataframe/columns/ColumnPath.hashCode:()I
       7: istore_1
       8: iload_1
       9: bipush        31
      11: imul
      12: aload_0
      13: getfield      #28                 // Field column:Lorg/jetbrains/kotlinx/dataframe/DataColumn;
      16: invokevirtual #85                 // Method java/lang/Object.hashCode:()I
      19: iadd
      20: istore_1
      21: iload_1
      22: bipush        31
      24: imul
      25: aload_0
      26: getfield      #32                 // Field referenceNode:Lorg/jetbrains/kotlinx/dataframe/impl/columns/tree/ReadonlyTreeNode;
      29: ifnonnull     36
      32: iconst_0
      33: goto          43
      36: aload_0
      37: getfield      #32                 // Field referenceNode:Lorg/jetbrains/kotlinx/dataframe/impl/columns/tree/ReadonlyTreeNode;
      40: invokevirtual #85                 // Method java/lang/Object.hashCode:()I
      43: iadd
      44: istore_1
      45: iload_1
      46: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #2                  // class org/jetbrains/kotlinx/dataframe/impl/api/ColumnToInsert
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #2                  // class org/jetbrains/kotlinx/dataframe/impl/api/ColumnToInsert
      20: astore_2
      21: aload_0
      22: getfield      #25                 // Field insertionPath:Lorg/jetbrains/kotlinx/dataframe/columns/ColumnPath;
      25: aload_2
      26: getfield      #25                 // Field insertionPath:Lorg/jetbrains/kotlinx/dataframe/columns/ColumnPath;
      29: invokestatic  #93                 // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      32: ifne          37
      35: iconst_0
      36: ireturn
      37: aload_0
      38: getfield      #28                 // Field column:Lorg/jetbrains/kotlinx/dataframe/DataColumn;
      41: aload_2
      42: getfield      #28                 // Field column:Lorg/jetbrains/kotlinx/dataframe/DataColumn;
      45: invokestatic  #93                 // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      48: ifne          53
      51: iconst_0
      52: ireturn
      53: aload_0
      54: getfield      #32                 // Field referenceNode:Lorg/jetbrains/kotlinx/dataframe/impl/columns/tree/ReadonlyTreeNode;
      57: aload_2
      58: getfield      #32                 // Field referenceNode:Lorg/jetbrains/kotlinx/dataframe/impl/columns/tree/ReadonlyTreeNode;
      61: invokestatic  #93                 // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      64: ifne          69
      67: iconst_0
      68: ireturn
      69: iconst_1
      70: ireturn
}
