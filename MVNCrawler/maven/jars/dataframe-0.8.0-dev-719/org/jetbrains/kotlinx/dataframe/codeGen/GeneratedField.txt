Compiled from "GeneratedField.kt"
public final class org.jetbrains.kotlinx.dataframe.codeGen.GeneratedField implements org.jetbrains.kotlinx.dataframe.codeGen.BaseField {
  private final org.jetbrains.kotlinx.dataframe.codeGen.ValidFieldName fieldName;

  private final java.lang.String columnName;

  private final boolean overrides;

  private final org.jetbrains.kotlinx.dataframe.schema.ColumnSchema columnSchema;

  private final java.lang.String markerName;

  private final boolean nullable;

  private final org.jetbrains.kotlinx.dataframe.codeGen.ColumnInfo columnInfo;

  public org.jetbrains.kotlinx.dataframe.codeGen.GeneratedField(org.jetbrains.kotlinx.dataframe.codeGen.ValidFieldName, java.lang.String, boolean, org.jetbrains.kotlinx.dataframe.schema.ColumnSchema, java.lang.String);
    Code:
       0: aload_1
       1: ldc           #12                 // String fieldName
       3: invokestatic  #18                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #20                 // String columnName
       9: invokestatic  #18                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload         4
      14: ldc           #22                 // String columnSchema
      16: invokestatic  #18                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      19: aload_0
      20: invokespecial #25                 // Method java/lang/Object."<init>":()V
      23: aload_0
      24: aload_1
      25: putfield      #28                 // Field fieldName:Lorg/jetbrains/kotlinx/dataframe/codeGen/ValidFieldName;
      28: aload_0
      29: aload_2
      30: putfield      #31                 // Field columnName:Ljava/lang/String;
      33: aload_0
      34: iload_3
      35: putfield      #35                 // Field overrides:Z
      38: aload_0
      39: aload         4
      41: putfield      #38                 // Field columnSchema:Lorg/jetbrains/kotlinx/dataframe/schema/ColumnSchema;
      44: aload_0
      45: aload         5
      47: putfield      #41                 // Field markerName:Ljava/lang/String;
      50: aload_0
      51: aload_0
      52: getfield      #38                 // Field columnSchema:Lorg/jetbrains/kotlinx/dataframe/schema/ColumnSchema;
      55: invokevirtual #47                 // Method org/jetbrains/kotlinx/dataframe/schema/ColumnSchema.getNullable:()Z
      58: putfield      #50                 // Field nullable:Z
      61: aload_0
      62: aload_0
      63: invokevirtual #54                 // Method getColumnKind:()Lorg/jetbrains/kotlinx/dataframe/columns/ColumnKind;
      66: getstatic     #60                 // Field org/jetbrains/kotlinx/dataframe/codeGen/GeneratedField$WhenMappings.$EnumSwitchMapping$0:[I
      69: swap
      70: invokevirtual #66                 // Method org/jetbrains/kotlinx/dataframe/columns/ColumnKind.ordinal:()I
      73: iaload
      74: tableswitch   { // 1 to 3
                     1: 100
                     2: 126
                     3: 135
               default: 144
          }
     100: new           #68                 // class org/jetbrains/kotlinx/dataframe/codeGen/ColumnInfo$ValueColumnInfo
     103: dup
     104: aload_0
     105: getfield      #38                 // Field columnSchema:Lorg/jetbrains/kotlinx/dataframe/schema/ColumnSchema;
     108: checkcast     #70                 // class org/jetbrains/kotlinx/dataframe/schema/ColumnSchema$Value
     111: invokevirtual #74                 // Method org/jetbrains/kotlinx/dataframe/schema/ColumnSchema$Value.getType:()Lkotlin/reflect/KType;
     114: invokevirtual #78                 // Method java/lang/Object.toString:()Ljava/lang/String;
     117: invokespecial #81                 // Method org/jetbrains/kotlinx/dataframe/codeGen/ColumnInfo$ValueColumnInfo."<init>":(Ljava/lang/String;)V
     120: checkcast     #83                 // class org/jetbrains/kotlinx/dataframe/codeGen/ColumnInfo
     123: goto          152
     126: getstatic     #89                 // Field org/jetbrains/kotlinx/dataframe/codeGen/ColumnInfo$ColumnGroupInfo.INSTANCE:Lorg/jetbrains/kotlinx/dataframe/codeGen/ColumnInfo$ColumnGroupInfo;
     129: checkcast     #83                 // class org/jetbrains/kotlinx/dataframe/codeGen/ColumnInfo
     132: goto          152
     135: getstatic     #94                 // Field org/jetbrains/kotlinx/dataframe/codeGen/ColumnInfo$FrameColumnInfo.INSTANCE:Lorg/jetbrains/kotlinx/dataframe/codeGen/ColumnInfo$FrameColumnInfo;
     138: checkcast     #83                 // class org/jetbrains/kotlinx/dataframe/codeGen/ColumnInfo
     141: goto          152
     144: new           #96                 // class kotlin/NoWhenBranchMatchedException
     147: dup
     148: invokespecial #97                 // Method kotlin/NoWhenBranchMatchedException."<init>":()V
     151: athrow
     152: putfield      #101                // Field columnInfo:Lorg/jetbrains/kotlinx/dataframe/codeGen/ColumnInfo;
     155: return

  public org.jetbrains.kotlinx.dataframe.codeGen.ValidFieldName getFieldName();
    Code:
       0: aload_0
       1: getfield      #28                 // Field fieldName:Lorg/jetbrains/kotlinx/dataframe/codeGen/ValidFieldName;
       4: areturn

  public java.lang.String getColumnName();
    Code:
       0: aload_0
       1: getfield      #31                 // Field columnName:Ljava/lang/String;
       4: areturn

  public final boolean getOverrides();
    Code:
       0: aload_0
       1: getfield      #35                 // Field overrides:Z
       4: ireturn

  public final org.jetbrains.kotlinx.dataframe.schema.ColumnSchema getColumnSchema();
    Code:
       0: aload_0
       1: getfield      #38                 // Field columnSchema:Lorg/jetbrains/kotlinx/dataframe/schema/ColumnSchema;
       4: areturn

  public java.lang.String getMarkerName();
    Code:
       0: aload_0
       1: getfield      #41                 // Field markerName:Ljava/lang/String;
       4: areturn

  public final org.jetbrains.kotlinx.dataframe.columns.ColumnKind getColumnKind();
    Code:
       0: aload_0
       1: getfield      #38                 // Field columnSchema:Lorg/jetbrains/kotlinx/dataframe/schema/ColumnSchema;
       4: invokevirtual #117                // Method org/jetbrains/kotlinx/dataframe/schema/ColumnSchema.getKind:()Lorg/jetbrains/kotlinx/dataframe/columns/ColumnKind;
       7: areturn

  public boolean getNullable();
    Code:
       0: aload_0
       1: getfield      #50                 // Field nullable:Z
       4: ireturn

  public org.jetbrains.kotlinx.dataframe.codeGen.ColumnInfo getColumnInfo();
    Code:
       0: aload_0
       1: getfield      #101                // Field columnInfo:Lorg/jetbrains/kotlinx/dataframe/codeGen/ColumnInfo;
       4: areturn

  public final org.jetbrains.kotlinx.dataframe.codeGen.ValidFieldName component1();
    Code:
       0: aload_0
       1: invokevirtual #122                // Method getFieldName:()Lorg/jetbrains/kotlinx/dataframe/codeGen/ValidFieldName;
       4: areturn

  public final java.lang.String component2();
    Code:
       0: aload_0
       1: invokevirtual #125                // Method getColumnName:()Ljava/lang/String;
       4: areturn

  public final boolean component3();
    Code:
       0: aload_0
       1: getfield      #35                 // Field overrides:Z
       4: ireturn

  public final org.jetbrains.kotlinx.dataframe.schema.ColumnSchema component4();
    Code:
       0: aload_0
       1: getfield      #38                 // Field columnSchema:Lorg/jetbrains/kotlinx/dataframe/schema/ColumnSchema;
       4: areturn

  public final java.lang.String component5();
    Code:
       0: aload_0
       1: invokevirtual #130                // Method getMarkerName:()Ljava/lang/String;
       4: areturn

  public final org.jetbrains.kotlinx.dataframe.codeGen.GeneratedField copy(org.jetbrains.kotlinx.dataframe.codeGen.ValidFieldName, java.lang.String, boolean, org.jetbrains.kotlinx.dataframe.schema.ColumnSchema, java.lang.String);
    Code:
       0: aload_1
       1: ldc           #12                 // String fieldName
       3: invokestatic  #18                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #20                 // String columnName
       9: invokestatic  #18                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload         4
      14: ldc           #22                 // String columnSchema
      16: invokestatic  #18                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      19: new           #2                  // class org/jetbrains/kotlinx/dataframe/codeGen/GeneratedField
      22: dup
      23: aload_1
      24: aload_2
      25: iload_3
      26: aload         4
      28: aload         5
      30: invokespecial #134                // Method "<init>":(Lorg/jetbrains/kotlinx/dataframe/codeGen/ValidFieldName;Ljava/lang/String;ZLorg/jetbrains/kotlinx/dataframe/schema/ColumnSchema;Ljava/lang/String;)V
      33: areturn

  public static org.jetbrains.kotlinx.dataframe.codeGen.GeneratedField copy$default(org.jetbrains.kotlinx.dataframe.codeGen.GeneratedField, org.jetbrains.kotlinx.dataframe.codeGen.ValidFieldName, java.lang.String, boolean, org.jetbrains.kotlinx.dataframe.schema.ColumnSchema, java.lang.String, int, java.lang.Object);
    Code:
       0: iload         6
       2: iconst_1
       3: iand
       4: ifeq          12
       7: aload_0
       8: invokevirtual #122                // Method getFieldName:()Lorg/jetbrains/kotlinx/dataframe/codeGen/ValidFieldName;
      11: astore_1
      12: iload         6
      14: iconst_2
      15: iand
      16: ifeq          24
      19: aload_0
      20: invokevirtual #125                // Method getColumnName:()Ljava/lang/String;
      23: astore_2
      24: iload         6
      26: iconst_4
      27: iand
      28: ifeq          36
      31: aload_0
      32: getfield      #35                 // Field overrides:Z
      35: istore_3
      36: iload         6
      38: bipush        8
      40: iand
      41: ifeq          50
      44: aload_0
      45: getfield      #38                 // Field columnSchema:Lorg/jetbrains/kotlinx/dataframe/schema/ColumnSchema;
      48: astore        4
      50: iload         6
      52: bipush        16
      54: iand
      55: ifeq          64
      58: aload_0
      59: invokevirtual #130                // Method getMarkerName:()Ljava/lang/String;
      62: astore        5
      64: aload_0
      65: aload_1
      66: aload_2
      67: iload_3
      68: aload         4
      70: aload         5
      72: invokevirtual #138                // Method copy:(Lorg/jetbrains/kotlinx/dataframe/codeGen/ValidFieldName;Ljava/lang/String;ZLorg/jetbrains/kotlinx/dataframe/schema/ColumnSchema;Ljava/lang/String;)Lorg/jetbrains/kotlinx/dataframe/codeGen/GeneratedField;
      75: areturn

  public java.lang.String toString();
    Code:
       0: new           #140                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #141                // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #143                // String GeneratedField(fieldName=
       9: invokevirtual #147                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #122                // Method getFieldName:()Lorg/jetbrains/kotlinx/dataframe/codeGen/ValidFieldName;
      16: invokevirtual #150                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #152                // String , columnName=
      21: invokevirtual #147                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #125                // Method getColumnName:()Ljava/lang/String;
      28: invokevirtual #147                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #154                // String , overrides=
      33: invokevirtual #147                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #35                 // Field overrides:Z
      40: invokevirtual #157                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      43: ldc           #159                // String , columnSchema=
      45: invokevirtual #147                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #38                 // Field columnSchema:Lorg/jetbrains/kotlinx/dataframe/schema/ColumnSchema;
      52: invokevirtual #150                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: ldc           #161                // String , markerName=
      57: invokevirtual #147                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: invokevirtual #130                // Method getMarkerName:()Ljava/lang/String;
      64: invokevirtual #150                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      67: bipush        41
      69: invokevirtual #164                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      72: invokevirtual #165                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #122                // Method getFieldName:()Lorg/jetbrains/kotlinx/dataframe/codeGen/ValidFieldName;
       4: invokevirtual #168                // Method org/jetbrains/kotlinx/dataframe/codeGen/ValidFieldName.hashCode:()I
       7: istore_1
       8: iload_1
       9: bipush        31
      11: imul
      12: aload_0
      13: invokevirtual #125                // Method getColumnName:()Ljava/lang/String;
      16: invokevirtual #169                // Method java/lang/String.hashCode:()I
      19: iadd
      20: istore_1
      21: iload_1
      22: bipush        31
      24: imul
      25: aload_0
      26: getfield      #35                 // Field overrides:Z
      29: dup
      30: ifeq          35
      33: pop
      34: iconst_1
      35: iadd
      36: istore_1
      37: iload_1
      38: bipush        31
      40: imul
      41: aload_0
      42: getfield      #38                 // Field columnSchema:Lorg/jetbrains/kotlinx/dataframe/schema/ColumnSchema;
      45: invokevirtual #170                // Method org/jetbrains/kotlinx/dataframe/schema/ColumnSchema.hashCode:()I
      48: iadd
      49: istore_1
      50: iload_1
      51: bipush        31
      53: imul
      54: aload_0
      55: invokevirtual #130                // Method getMarkerName:()Ljava/lang/String;
      58: ifnonnull     65
      61: iconst_0
      62: goto          72
      65: aload_0
      66: invokevirtual #130                // Method getMarkerName:()Ljava/lang/String;
      69: invokevirtual #169                // Method java/lang/String.hashCode:()I
      72: iadd
      73: istore_1
      74: iload_1
      75: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #2                  // class org/jetbrains/kotlinx/dataframe/codeGen/GeneratedField
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #2                  // class org/jetbrains/kotlinx/dataframe/codeGen/GeneratedField
      20: astore_2
      21: aload_0
      22: invokevirtual #122                // Method getFieldName:()Lorg/jetbrains/kotlinx/dataframe/codeGen/ValidFieldName;
      25: aload_2
      26: invokevirtual #122                // Method getFieldName:()Lorg/jetbrains/kotlinx/dataframe/codeGen/ValidFieldName;
      29: invokestatic  #178                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      32: ifne          37
      35: iconst_0
      36: ireturn
      37: aload_0
      38: invokevirtual #125                // Method getColumnName:()Ljava/lang/String;
      41: aload_2
      42: invokevirtual #125                // Method getColumnName:()Ljava/lang/String;
      45: invokestatic  #178                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      48: ifne          53
      51: iconst_0
      52: ireturn
      53: aload_0
      54: getfield      #35                 // Field overrides:Z
      57: aload_2
      58: getfield      #35                 // Field overrides:Z
      61: if_icmpeq     66
      64: iconst_0
      65: ireturn
      66: aload_0
      67: getfield      #38                 // Field columnSchema:Lorg/jetbrains/kotlinx/dataframe/schema/ColumnSchema;
      70: aload_2
      71: getfield      #38                 // Field columnSchema:Lorg/jetbrains/kotlinx/dataframe/schema/ColumnSchema;
      74: invokestatic  #178                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      77: ifne          82
      80: iconst_0
      81: ireturn
      82: aload_0
      83: invokevirtual #130                // Method getMarkerName:()Ljava/lang/String;
      86: aload_2
      87: invokevirtual #130                // Method getMarkerName:()Ljava/lang/String;
      90: invokestatic  #178                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      93: ifne          98
      96: iconst_0
      97: ireturn
      98: iconst_1
      99: ireturn
}
