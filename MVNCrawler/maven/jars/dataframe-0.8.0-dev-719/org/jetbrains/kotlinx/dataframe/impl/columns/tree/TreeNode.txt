Compiled from "TreeNode.kt"
public final class org.jetbrains.kotlinx.dataframe.impl.columns.tree.TreeNode<T> implements org.jetbrains.kotlinx.dataframe.impl.columns.tree.ReadonlyTreeNode<T> {
  public static final org.jetbrains.kotlinx.dataframe.impl.columns.tree.TreeNode$Companion Companion;

  private final java.lang.String name;

  private final int depth;

  private T data;

  private final org.jetbrains.kotlinx.dataframe.impl.columns.tree.TreeNode<T> parent;

  private final java.util.List<org.jetbrains.kotlinx.dataframe.impl.columns.tree.TreeNode<T>> myChildren;

  private final java.util.Map<java.lang.String, org.jetbrains.kotlinx.dataframe.impl.columns.tree.TreeNode<T>> childrenMap;

  public org.jetbrains.kotlinx.dataframe.impl.columns.tree.TreeNode(java.lang.String, int, T, org.jetbrains.kotlinx.dataframe.impl.columns.tree.TreeNode<T>);
    Code:
       0: aload_1
       1: ldc           #14                 // String name
       3: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokespecial #23                 // Method java/lang/Object."<init>":()V
      10: aload_0
      11: aload_1
      12: putfield      #26                 // Field name:Ljava/lang/String;
      15: aload_0
      16: iload_2
      17: putfield      #30                 // Field depth:I
      20: aload_0
      21: aload_3
      22: putfield      #34                 // Field data:Ljava/lang/Object;
      25: aload_0
      26: aload         4
      28: putfield      #38                 // Field parent:Lorg/jetbrains/kotlinx/dataframe/impl/columns/tree/TreeNode;
      31: aload_0
      32: new           #40                 // class java/util/ArrayList
      35: dup
      36: invokespecial #41                 // Method java/util/ArrayList."<init>":()V
      39: checkcast     #43                 // class java/util/List
      42: putfield      #47                 // Field myChildren:Ljava/util/List;
      45: aload_0
      46: new           #49                 // class java/util/LinkedHashMap
      49: dup
      50: invokespecial #50                 // Method java/util/LinkedHashMap."<init>":()V
      53: checkcast     #52                 // class java/util/Map
      56: putfield      #56                 // Field childrenMap:Ljava/util/Map;
      59: return

  public org.jetbrains.kotlinx.dataframe.impl.columns.tree.TreeNode(java.lang.String, int, java.lang.Object, org.jetbrains.kotlinx.dataframe.impl.columns.tree.TreeNode, int, kotlin.jvm.internal.DefaultConstructorMarker);
    Code:
       0: iload         5
       2: bipush        8
       4: iand
       5: ifeq          11
       8: aconst_null
       9: astore        4
      11: aload_0
      12: aload_1
      13: iload_2
      14: aload_3
      15: aload         4
      17: invokespecial #60                 // Method "<init>":(Ljava/lang/String;ILjava/lang/Object;Lorg/jetbrains/kotlinx/dataframe/impl/columns/tree/TreeNode;)V
      20: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #26                 // Field name:Ljava/lang/String;
       4: areturn

  public int getDepth();
    Code:
       0: aload_0
       1: getfield      #30                 // Field depth:I
       4: ireturn

  public T getData();
    Code:
       0: aload_0
       1: getfield      #34                 // Field data:Ljava/lang/Object;
       4: areturn

  public void setData(T);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #34                 // Field data:Ljava/lang/Object;
       5: return

  public org.jetbrains.kotlinx.dataframe.impl.columns.tree.TreeNode<T> getParent();
    Code:
       0: aload_0
       1: getfield      #38                 // Field parent:Lorg/jetbrains/kotlinx/dataframe/impl/columns/tree/TreeNode;
       4: areturn

  public java.util.List<org.jetbrains.kotlinx.dataframe.impl.columns.tree.TreeNode<T>> getChildren();
    Code:
       0: aload_0
       1: getfield      #47                 // Field myChildren:Ljava/util/List;
       4: areturn

  public org.jetbrains.kotlinx.dataframe.impl.columns.tree.TreeNode<T> getRoot();
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method getParent:()Lorg/jetbrains/kotlinx/dataframe/impl/columns/tree/TreeNode;
       4: dup
       5: ifnonnull     13
       8: pop
       9: aload_0
      10: goto          22
      13: invokevirtual #82                 // Method getRoot:()Lorg/jetbrains/kotlinx/dataframe/impl/columns/tree/TreeNode;
      16: dup
      17: ifnonnull     22
      20: pop
      21: aload_0
      22: areturn

  public final boolean contains(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #86                 // String childName
       3: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #56                 // Field childrenMap:Ljava/util/Map;
      10: aload_1
      11: invokeinterface #90,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      16: ireturn

  public org.jetbrains.kotlinx.dataframe.impl.columns.tree.TreeNode<T> get(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #86                 // String childName
       3: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #56                 // Field childrenMap:Ljava/util/Map;
      10: aload_1
      11: invokeinterface #96,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #2                  // class org/jetbrains/kotlinx/dataframe/impl/columns/tree/TreeNode
      19: areturn

  public final org.jetbrains.kotlinx.dataframe.columns.ColumnPath pathFromRoot();
    Code:
       0: new           #40                 // class java/util/ArrayList
       3: dup
       4: invokespecial #41                 // Method java/util/ArrayList."<init>":()V
       7: checkcast     #43                 // class java/util/List
      10: astore_1
      11: aload_0
      12: astore_2
      13: aload_2
      14: ifnull        43
      17: aload_2
      18: invokevirtual #80                 // Method getParent:()Lorg/jetbrains/kotlinx/dataframe/impl/columns/tree/TreeNode;
      21: ifnull        43
      24: aload_1
      25: aload_2
      26: invokevirtual #100                // Method getName:()Ljava/lang/String;
      29: invokeinterface #103,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      34: pop
      35: aload_2
      36: invokevirtual #80                 // Method getParent:()Lorg/jetbrains/kotlinx/dataframe/impl/columns/tree/TreeNode;
      39: astore_2
      40: goto          13
      43: aload_1
      44: invokestatic  #109                // Method kotlin/collections/CollectionsKt.reverse:(Ljava/util/List;)V
      47: new           #111                // class org/jetbrains/kotlinx/dataframe/columns/ColumnPath
      50: dup
      51: aload_1
      52: invokespecial #113                // Method org/jetbrains/kotlinx/dataframe/columns/ColumnPath."<init>":(Ljava/util/List;)V
      55: areturn

  public final org.jetbrains.kotlinx.dataframe.impl.columns.tree.TreeNode<T> addChild(java.lang.String, T);
    Code:
       0: aload_1
       1: ldc           #86                 // String childName
       3: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: new           #2                  // class org/jetbrains/kotlinx/dataframe/impl/columns/tree/TreeNode
       9: dup
      10: aload_1
      11: aload_0
      12: invokevirtual #120                // Method getDepth:()I
      15: iconst_1
      16: iadd
      17: aload_2
      18: aload_0
      19: invokespecial #60                 // Method "<init>":(Ljava/lang/String;ILjava/lang/Object;Lorg/jetbrains/kotlinx/dataframe/impl/columns/tree/TreeNode;)V
      22: astore_3
      23: aload_0
      24: getfield      #47                 // Field myChildren:Ljava/util/List;
      27: aload_3
      28: invokeinterface #103,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      33: pop
      34: aload_0
      35: getfield      #56                 // Field childrenMap:Ljava/util/Map;
      38: aload_1
      39: aload_3
      40: invokeinterface #124,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      45: pop
      46: aload_3
      47: areturn

  public final org.jetbrains.kotlinx.dataframe.impl.columns.tree.TreeNode<T> getOrPut(java.lang.String, kotlin.jvm.functions.Function0<? extends T>);
    Code:
       0: aload_1
       1: ldc           #86                 // String childName
       3: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #130                // String createData
       9: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: getfield      #56                 // Field childrenMap:Ljava/util/Map;
      16: aload_1
      17: invokeinterface #96,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #2                  // class org/jetbrains/kotlinx/dataframe/impl/columns/tree/TreeNode
      25: dup
      26: ifnonnull     33
      29: pop
      30: goto          39
      33: astore_3
      34: iconst_0
      35: istore        4
      37: aload_3
      38: areturn
      39: nop
      40: aload_0
      41: aload_1
      42: aload_2
      43: invokeinterface #135,  1          // InterfaceMethod kotlin/jvm/functions/Function0.invoke:()Ljava/lang/Object;
      48: invokevirtual #137                // Method addChild:(Ljava/lang/String;Ljava/lang/Object;)Lorg/jetbrains/kotlinx/dataframe/impl/columns/tree/TreeNode;
      51: areturn

  public final java.util.List<org.jetbrains.kotlinx.dataframe.impl.columns.tree.TreeNode<T>> dfs(kotlin.jvm.functions.Function1<? super org.jetbrains.kotlinx.dataframe.impl.columns.tree.TreeNode<T>, java.lang.Boolean>, kotlin.jvm.functions.Function1<? super org.jetbrains.kotlinx.dataframe.impl.columns.tree.TreeNode<T>, java.lang.Boolean>);
    Code:
       0: aload_1
       1: ldc           #145                // String enterCondition
       3: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #147                // String yieldCondition
       9: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: new           #40                 // class java/util/ArrayList
      15: dup
      16: invokespecial #41                 // Method java/util/ArrayList."<init>":()V
      19: checkcast     #43                 // class java/util/List
      22: astore_3
      23: aload_2
      24: aload_3
      25: aload_1
      26: aload_0
      27: invokestatic  #151                // Method dfs$doDfs:(Lkotlin/jvm/functions/Function1;Ljava/util/List;Lkotlin/jvm/functions/Function1;Lorg/jetbrains/kotlinx/dataframe/impl/columns/tree/TreeNode;)V
      30: aload_3
      31: areturn

  public static java.util.List dfs$default(org.jetbrains.kotlinx.dataframe.impl.columns.tree.TreeNode, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1, int, java.lang.Object);
    Code:
       0: iload_3
       1: iconst_1
       2: iand
       3: ifeq          13
       6: getstatic     #161                // Field org/jetbrains/kotlinx/dataframe/impl/columns/tree/TreeNode$dfs$1.INSTANCE:Lorg/jetbrains/kotlinx/dataframe/impl/columns/tree/TreeNode$dfs$1;
       9: checkcast     #163                // class kotlin/jvm/functions/Function1
      12: astore_1
      13: iload_3
      14: iconst_2
      15: iand
      16: ifeq          26
      19: getstatic     #168                // Field org/jetbrains/kotlinx/dataframe/impl/columns/tree/TreeNode$dfs$2.INSTANCE:Lorg/jetbrains/kotlinx/dataframe/impl/columns/tree/TreeNode$dfs$2;
      22: checkcast     #163                // class kotlin/jvm/functions/Function1
      25: astore_2
      26: aload_0
      27: aload_1
      28: aload_2
      29: invokevirtual #170                // Method dfs:(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/List;
      32: areturn

  private static final <T> void dfs$doDfs(kotlin.jvm.functions.Function1<? super org.jetbrains.kotlinx.dataframe.impl.columns.tree.TreeNode<T>, java.lang.Boolean>, java.util.List<org.jetbrains.kotlinx.dataframe.impl.columns.tree.TreeNode<T>>, kotlin.jvm.functions.Function1<? super org.jetbrains.kotlinx.dataframe.impl.columns.tree.TreeNode<T>, java.lang.Boolean>, org.jetbrains.kotlinx.dataframe.impl.columns.tree.TreeNode<T>);
    Code:
       0: aload_0
       1: aload_3
       2: invokeinterface #173,  2          // InterfaceMethod kotlin/jvm/functions/Function1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #175                // class java/lang/Boolean
      10: invokevirtual #179                // Method java/lang/Boolean.booleanValue:()Z
      13: ifeq          24
      16: aload_1
      17: aload_3
      18: invokeinterface #103,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      23: pop
      24: aload_2
      25: aload_3
      26: invokeinterface #173,  2          // InterfaceMethod kotlin/jvm/functions/Function1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #175                // class java/lang/Boolean
      34: invokevirtual #179                // Method java/lang/Boolean.booleanValue:()Z
      37: ifeq          103
      40: aload_3
      41: invokevirtual #181                // Method getChildren:()Ljava/util/List;
      44: checkcast     #183                // class java/lang/Iterable
      47: astore        4
      49: iconst_0
      50: istore        5
      52: aload         4
      54: invokeinterface #187,  1          // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      59: astore        6
      61: aload         6
      63: invokeinterface #192,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      68: ifeq          102
      71: aload         6
      73: invokeinterface #195,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      78: astore        7
      80: aload         7
      82: checkcast     #2                  // class org/jetbrains/kotlinx/dataframe/impl/columns/tree/TreeNode
      85: astore        8
      87: iconst_0
      88: istore        9
      90: aload_0
      91: aload_1
      92: aload_2
      93: aload         8
      95: invokestatic  #151                // Method dfs$doDfs:(Lkotlin/jvm/functions/Function1;Ljava/util/List;Lkotlin/jvm/functions/Function1;Lorg/jetbrains/kotlinx/dataframe/impl/columns/tree/TreeNode;)V
      98: nop
      99: goto          61
     102: nop
     103: return

  public org.jetbrains.kotlinx.dataframe.impl.columns.tree.ReadonlyTreeNode getParent();
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method getParent:()Lorg/jetbrains/kotlinx/dataframe/impl/columns/tree/TreeNode;
       4: checkcast     #7                  // class org/jetbrains/kotlinx/dataframe/impl/columns/tree/ReadonlyTreeNode
       7: areturn

  public org.jetbrains.kotlinx.dataframe.impl.columns.tree.ReadonlyTreeNode getRoot();
    Code:
       0: aload_0
       1: invokevirtual #82                 // Method getRoot:()Lorg/jetbrains/kotlinx/dataframe/impl/columns/tree/TreeNode;
       4: checkcast     #7                  // class org/jetbrains/kotlinx/dataframe/impl/columns/tree/ReadonlyTreeNode
       7: areturn

  public org.jetbrains.kotlinx.dataframe.impl.columns.tree.ReadonlyTreeNode get(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #206                // Method get:(Ljava/lang/String;)Lorg/jetbrains/kotlinx/dataframe/impl/columns/tree/TreeNode;
       5: checkcast     #7                  // class org/jetbrains/kotlinx/dataframe/impl/columns/tree/ReadonlyTreeNode
       8: areturn

  static {};
    Code:
       0: new           #209                // class org/jetbrains/kotlinx/dataframe/impl/columns/tree/TreeNode$Companion
       3: dup
       4: aconst_null
       5: invokespecial #212                // Method org/jetbrains/kotlinx/dataframe/impl/columns/tree/TreeNode$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
       8: putstatic     #216                // Field Companion:Lorg/jetbrains/kotlinx/dataframe/impl/columns/tree/TreeNode$Companion;
      11: return
}
