Compiled from "implode.kt"
final class org.jetbrains.kotlinx.dataframe.impl.api.ImplodeKt$implodeImpl$2$1 extends kotlin.jvm.internal.Lambda implements kotlin.jvm.functions.Function2<org.jetbrains.kotlinx.dataframe.ColumnsContainer<? extends T>, org.jetbrains.kotlinx.dataframe.DataColumn<? extends C>, org.jetbrains.kotlinx.dataframe.DataColumn<?>> {
  final boolean $dropNulls;

  org.jetbrains.kotlinx.dataframe.impl.api.ImplodeKt$implodeImpl$2$1(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field $dropNulls:Z
       5: aload_0
       6: iconst_2
       7: invokespecial #16                 // Method kotlin/jvm/internal/Lambda."<init>":(I)V
      10: return

  public final org.jetbrains.kotlinx.dataframe.DataColumn<?> invoke(org.jetbrains.kotlinx.dataframe.ColumnsContainer<? extends T>, org.jetbrains.kotlinx.dataframe.DataColumn<? extends C>);
    Code:
       0: aload_1
       1: ldc           #24                 // String $this$with
       3: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #32                 // String column
       9: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: getfield      #13                 // Field $dropNulls:Z
      16: ifeq          32
      19: aload_2
      20: invokeinterface #38,  1           // InterfaceMethod org/jetbrains/kotlinx/dataframe/DataColumn.hasNulls:()Z
      25: ifeq          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: istore_3
      34: aload_2
      35: invokeinterface #42,  1           // InterfaceMethod org/jetbrains/kotlinx/dataframe/DataColumn.kind:()Lorg/jetbrains/kotlinx/dataframe/columns/ColumnKind;
      40: getstatic     #48                 // Field org/jetbrains/kotlinx/dataframe/impl/api/ImplodeKt$implodeImpl$2$1$WhenMappings.$EnumSwitchMapping$0:[I
      43: swap
      44: invokevirtual #54                 // Method org/jetbrains/kotlinx/dataframe/columns/ColumnKind.ordinal:()I
      47: iaload
      48: tableswitch   { // 1 to 3
                     1: 76
                     2: 113
                     3: 123
               default: 136
          }
      76: aload_2
      77: invokeinterface #58,  1           // InterfaceMethod org/jetbrains/kotlinx/dataframe/DataColumn.toList:()Ljava/util/List;
      82: astore        6
      84: iconst_0
      85: istore        7
      87: iload_3
      88: ifeq          102
      91: aload         6
      93: checkcast     #60                 // class java/lang/Iterable
      96: invokestatic  #66                 // Method kotlin/collections/CollectionsKt.filterNotNull:(Ljava/lang/Iterable;)Ljava/util/List;
      99: goto          104
     102: aload         6
     104: checkcast     #60                 // class java/lang/Iterable
     107: invokestatic  #71                 // Method org/jetbrains/kotlinx/dataframe/impl/UtilsKt.asList:(Ljava/lang/Iterable;)Ljava/util/List;
     110: goto          144
     113: aload_2
     114: invokestatic  #77                 // Method org/jetbrains/kotlinx/dataframe/impl/columns/UtilsKt.asColumnGroup:(Lorg/jetbrains/kotlinx/dataframe/DataColumn;)Lorg/jetbrains/kotlinx/dataframe/columns/ColumnGroup;
     117: invokestatic  #83                 // Method org/jetbrains/kotlinx/dataframe/api/TypeConversionsKt.asDataFrame:(Lorg/jetbrains/kotlinx/dataframe/columns/ColumnGroup;)Lorg/jetbrains/kotlinx/dataframe/DataFrame;
     120: goto          144
     123: aload_2
     124: invokestatic  #87                 // Method org/jetbrains/kotlinx/dataframe/impl/columns/UtilsKt.asFrameColumn:(Lorg/jetbrains/kotlinx/dataframe/DataColumn;)Lorg/jetbrains/kotlinx/dataframe/columns/FrameColumn;
     127: checkcast     #34                 // class org/jetbrains/kotlinx/dataframe/DataColumn
     130: invokestatic  #93                 // Method org/jetbrains/kotlinx/dataframe/api/DataFrameMergeKt.concat:(Lorg/jetbrains/kotlinx/dataframe/DataColumn;)Lorg/jetbrains/kotlinx/dataframe/DataFrame;
     133: goto          144
     136: new           #95                 // class kotlin/NoWhenBranchMatchedException
     139: dup
     140: invokespecial #98                 // Method kotlin/NoWhenBranchMatchedException."<init>":()V
     143: athrow
     144: astore        4
     146: new           #100                // class kotlin/jvm/internal/Ref$BooleanRef
     149: dup
     150: invokespecial #101                // Method kotlin/jvm/internal/Ref$BooleanRef."<init>":()V
     153: astore        5
     155: aload         5
     157: iconst_1
     158: putfield      #104                // Field kotlin/jvm/internal/Ref$BooleanRef.element:Z
     161: aload_2
     162: new           #106                // class org/jetbrains/kotlinx/dataframe/impl/api/ImplodeKt$implodeImpl$2$1$1
     165: dup
     166: aload         5
     168: aload         4
     170: invokespecial #109                // Method org/jetbrains/kotlinx/dataframe/impl/api/ImplodeKt$implodeImpl$2$1$1."<init>":(Lkotlin/jvm/internal/Ref$BooleanRef;Ljava/lang/Object;)V
     173: checkcast     #111                // class kotlin/jvm/functions/Function1
     176: invokestatic  #117                // Method org/jetbrains/kotlinx/dataframe/api/DataColumnIterableKt.map:(Lorg/jetbrains/kotlinx/dataframe/DataColumn;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/kotlinx/dataframe/DataColumn;
     179: areturn

  public java.lang.Object invoke(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #130                // class org/jetbrains/kotlinx/dataframe/ColumnsContainer
       5: aload_2
       6: checkcast     #34                 // class org/jetbrains/kotlinx/dataframe/DataColumn
       9: invokevirtual #137                // Method invoke:(Lorg/jetbrains/kotlinx/dataframe/ColumnsContainer;Lorg/jetbrains/kotlinx/dataframe/DataColumn;)Lorg/jetbrains/kotlinx/dataframe/DataColumn;
      12: areturn
}
