Compiled from "DataFrameReceiver.kt"
public class org.jetbrains.kotlinx.dataframe.impl.DataFrameReceiver<T> extends org.jetbrains.kotlinx.dataframe.impl.DataFrameImpl<T> implements org.jetbrains.kotlinx.dataframe.columns.SingleColumn<org.jetbrains.kotlinx.dataframe.DataRow<? extends T>> {
  private final org.jetbrains.kotlinx.dataframe.DataFrame<T> source;

  private final org.jetbrains.kotlinx.dataframe.columns.UnresolvedColumnsPolicy unresolvedColumnsPolicy;

  public org.jetbrains.kotlinx.dataframe.impl.DataFrameReceiver(org.jetbrains.kotlinx.dataframe.DataFrame<? extends T>, org.jetbrains.kotlinx.dataframe.columns.UnresolvedColumnsPolicy);
    Code:
       0: aload_1
       1: ldc           #13                 // String source
       3: invokestatic  #19                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #21                 // String unresolvedColumnsPolicy
       9: invokestatic  #19                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: aload_1
      14: invokeinterface #27,  1           // InterfaceMethod org/jetbrains/kotlinx/dataframe/DataFrame.columns:()Ljava/util/List;
      19: invokespecial #30                 // Method org/jetbrains/kotlinx/dataframe/impl/DataFrameImpl."<init>":(Ljava/util/List;)V
      22: aload_0
      23: aload_1
      24: putfield      #33                 // Field source:Lorg/jetbrains/kotlinx/dataframe/DataFrame;
      27: aload_0
      28: aload_2
      29: putfield      #36                 // Field unresolvedColumnsPolicy:Lorg/jetbrains/kotlinx/dataframe/columns/UnresolvedColumnsPolicy;
      32: return

  public final org.jetbrains.kotlinx.dataframe.DataFrame<T> getSource();
    Code:
       0: aload_0
       1: getfield      #33                 // Field source:Lorg/jetbrains/kotlinx/dataframe/DataFrame;
       4: areturn

  private final <R> org.jetbrains.kotlinx.dataframe.DataColumn<R> check(org.jetbrains.kotlinx.dataframe.DataColumn<? extends R>, org.jetbrains.kotlinx.dataframe.columns.ColumnPath);
    Code:
       0: aload_1
       1: astore_3
       2: aload_3
       3: ifnonnull     111
       6: aload_0
       7: getfield      #36                 // Field unresolvedColumnsPolicy:Lorg/jetbrains/kotlinx/dataframe/columns/UnresolvedColumnsPolicy;
      10: getstatic     #50                 // Field org/jetbrains/kotlinx/dataframe/impl/DataFrameReceiver$WhenMappings.$EnumSwitchMapping$0:[I
      13: swap
      14: invokevirtual #56                 // Method org/jetbrains/kotlinx/dataframe/columns/UnresolvedColumnsPolicy.ordinal:()I
      17: iaload
      18: tableswitch   { // 1 to 3
                     1: 44
                     2: 44
                     3: 68
               default: 103
          }
      44: new           #58                 // class org/jetbrains/kotlinx/dataframe/impl/columns/missing/MissingColumnGroup
      47: dup
      48: aload_2
      49: aload_0
      50: checkcast     #60                 // class org/jetbrains/kotlinx/dataframe/ColumnsContainer
      53: invokespecial #63                 // Method org/jetbrains/kotlinx/dataframe/impl/columns/missing/MissingColumnGroup."<init>":(Lorg/jetbrains/kotlinx/dataframe/columns/ColumnPath;Lorg/jetbrains/kotlinx/dataframe/ColumnsContainer;)V
      56: checkcast     #65                 // class org/jetbrains/kotlinx/dataframe/columns/ColumnGroup
      59: invokestatic  #71                 // Method org/jetbrains/kotlinx/dataframe/api/TypeConversionsKt.asDataColumn:(Lorg/jetbrains/kotlinx/dataframe/columns/ColumnGroup;)Lorg/jetbrains/kotlinx/dataframe/DataColumn;
      62: invokestatic  #77                 // Method org/jetbrains/kotlinx/dataframe/api/DataFrameTypedKt.cast:(Lorg/jetbrains/kotlinx/dataframe/DataColumn;)Lorg/jetbrains/kotlinx/dataframe/DataColumn;
      65: goto          154
      68: new           #79                 // class java/lang/IllegalStateException
      71: dup
      72: new           #81                 // class java/lang/StringBuilder
      75: dup
      76: invokespecial #84                 // Method java/lang/StringBuilder."<init>":()V
      79: ldc           #86                 // String Column
      81: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_2
      85: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      88: ldc           #95                 // String  not found
      90: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: invokevirtual #99                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      96: invokevirtual #102                // Method java/lang/Object.toString:()Ljava/lang/String;
      99: invokespecial #105                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     102: athrow
     103: new           #107                // class kotlin/NoWhenBranchMatchedException
     106: dup
     107: invokespecial #108                // Method kotlin/NoWhenBranchMatchedException."<init>":()V
     110: athrow
     111: aload_3
     112: instanceof    #110                // class org/jetbrains/kotlinx/dataframe/impl/columns/missing/MissingDataColumn
     115: ifeq          122
     118: aload_1
     119: goto          154
     122: aload_3
     123: instanceof    #65                 // class org/jetbrains/kotlinx/dataframe/columns/ColumnGroup
     126: ifeq          153
     129: new           #112                // class org/jetbrains/kotlinx/dataframe/impl/columns/ColumnGroupWithParent
     132: dup
     133: aconst_null
     134: aload_1
     135: checkcast     #65                 // class org/jetbrains/kotlinx/dataframe/columns/ColumnGroup
     138: invokespecial #115                // Method org/jetbrains/kotlinx/dataframe/impl/columns/ColumnGroupWithParent."<init>":(Lorg/jetbrains/kotlinx/dataframe/columns/ColumnReference;Lorg/jetbrains/kotlinx/dataframe/columns/ColumnGroup;)V
     141: checkcast     #65                 // class org/jetbrains/kotlinx/dataframe/columns/ColumnGroup
     144: invokestatic  #71                 // Method org/jetbrains/kotlinx/dataframe/api/TypeConversionsKt.asDataColumn:(Lorg/jetbrains/kotlinx/dataframe/columns/ColumnGroup;)Lorg/jetbrains/kotlinx/dataframe/DataColumn;
     147: invokestatic  #77                 // Method org/jetbrains/kotlinx/dataframe/api/DataFrameTypedKt.cast:(Lorg/jetbrains/kotlinx/dataframe/DataColumn;)Lorg/jetbrains/kotlinx/dataframe/DataColumn;
     150: goto          154
     153: aload_1
     154: areturn

  public org.jetbrains.kotlinx.dataframe.DataColumn<java.lang.Object> getColumnOrNull(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #127                // String name
       3: invokestatic  #19                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_0
       8: getfield      #33                 // Field source:Lorg/jetbrains/kotlinx/dataframe/DataFrame;
      11: aload_1
      12: invokeinterface #129,  2          // InterfaceMethod org/jetbrains/kotlinx/dataframe/DataFrame.getColumnOrNull:(Ljava/lang/String;)Lorg/jetbrains/kotlinx/dataframe/DataColumn;
      17: iconst_1
      18: anewarray     #131                // class java/lang/String
      21: astore_2
      22: aload_2
      23: iconst_0
      24: aload_1
      25: aastore
      26: aload_2
      27: invokestatic  #137                // Method org/jetbrains/kotlinx/dataframe/ConstructorsKt.pathOf:([Ljava/lang/String;)Lorg/jetbrains/kotlinx/dataframe/columns/ColumnPath;
      30: invokespecial #139                // Method check:(Lorg/jetbrains/kotlinx/dataframe/DataColumn;Lorg/jetbrains/kotlinx/dataframe/columns/ColumnPath;)Lorg/jetbrains/kotlinx/dataframe/DataColumn;
      33: areturn

  public org.jetbrains.kotlinx.dataframe.DataColumn<java.lang.Object> getColumnOrNull(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #33                 // Field source:Lorg/jetbrains/kotlinx/dataframe/DataFrame;
       5: iload_1
       6: invokeinterface #144,  2          // InterfaceMethod org/jetbrains/kotlinx/dataframe/DataFrame.getColumnOrNull:(I)Lorg/jetbrains/kotlinx/dataframe/DataColumn;
      11: iconst_1
      12: anewarray     #131                // class java/lang/String
      15: astore_2
      16: aload_2
      17: iconst_0
      18: ldc           #146                // String
      20: aastore
      21: aload_2
      22: invokestatic  #137                // Method org/jetbrains/kotlinx/dataframe/ConstructorsKt.pathOf:([Ljava/lang/String;)Lorg/jetbrains/kotlinx/dataframe/columns/ColumnPath;
      25: invokespecial #139                // Method check:(Lorg/jetbrains/kotlinx/dataframe/DataColumn;Lorg/jetbrains/kotlinx/dataframe/columns/ColumnPath;)Lorg/jetbrains/kotlinx/dataframe/DataColumn;
      28: areturn

  public <R> org.jetbrains.kotlinx.dataframe.DataColumn<R> getColumnOrNull(org.jetbrains.kotlinx.dataframe.columns.ColumnReference<? extends R>);
    Code:
       0: aload_1
       1: ldc           #152                // String column
       3: invokestatic  #19                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_0
       8: getfield      #33                 // Field source:Lorg/jetbrains/kotlinx/dataframe/DataFrame;
      11: aload_1
      12: invokeinterface #154,  2          // InterfaceMethod org/jetbrains/kotlinx/dataframe/DataFrame.getColumnOrNull:(Lorg/jetbrains/kotlinx/dataframe/columns/ColumnReference;)Lorg/jetbrains/kotlinx/dataframe/DataColumn;
      17: aload_1
      18: invokeinterface #159,  1          // InterfaceMethod org/jetbrains/kotlinx/dataframe/columns/ColumnReference.path:()Lorg/jetbrains/kotlinx/dataframe/columns/ColumnPath;
      23: invokespecial #139                // Method check:(Lorg/jetbrains/kotlinx/dataframe/DataColumn;Lorg/jetbrains/kotlinx/dataframe/columns/ColumnPath;)Lorg/jetbrains/kotlinx/dataframe/DataColumn;
      26: areturn

  public org.jetbrains.kotlinx.dataframe.DataColumn<java.lang.Object> getColumnOrNull(org.jetbrains.kotlinx.dataframe.columns.ColumnPath);
    Code:
       0: aload_1
       1: ldc           #163                // String path
       3: invokestatic  #19                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_0
       8: aload_1
       9: invokespecial #165                // Method org/jetbrains/kotlinx/dataframe/impl/DataFrameImpl.getColumnOrNull:(Lorg/jetbrains/kotlinx/dataframe/columns/ColumnPath;)Lorg/jetbrains/kotlinx/dataframe/DataColumn;
      12: aload_1
      13: invokespecial #139                // Method check:(Lorg/jetbrains/kotlinx/dataframe/DataColumn;Lorg/jetbrains/kotlinx/dataframe/columns/ColumnPath;)Lorg/jetbrains/kotlinx/dataframe/DataColumn;
      16: areturn

  public <R> org.jetbrains.kotlinx.dataframe.DataColumn<R> getColumnOrNull(kotlin.jvm.functions.Function2<? super org.jetbrains.kotlinx.dataframe.api.ColumnsSelectionDsl<? extends T>, ? super org.jetbrains.kotlinx.dataframe.api.ColumnsSelectionDsl<? extends T>, ? extends org.jetbrains.kotlinx.dataframe.columns.SingleColumn<? extends R>>);
    Code:
       0: aload_1
       1: ldc           #152                // String column
       3: invokestatic  #19                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: checkcast     #23                 // class org/jetbrains/kotlinx/dataframe/DataFrame
      10: aload_0
      11: getfield      #36                 // Field unresolvedColumnsPolicy:Lorg/jetbrains/kotlinx/dataframe/columns/UnresolvedColumnsPolicy;
      14: aload_1
      15: invokestatic  #173                // Method org/jetbrains/kotlinx/dataframe/impl/UtilsKt.getColumnsImpl:(Lorg/jetbrains/kotlinx/dataframe/DataFrame;Lorg/jetbrains/kotlinx/dataframe/columns/UnresolvedColumnsPolicy;Lkotlin/jvm/functions/Function2;)Ljava/util/List;
      18: invokestatic  #179                // Method kotlin/collections/CollectionsKt.singleOrNull:(Ljava/util/List;)Ljava/lang/Object;
      21: checkcast     #121                // class org/jetbrains/kotlinx/dataframe/DataColumn
      24: areturn

  public <R> org.jetbrains.kotlinx.dataframe.columns.ColumnWithPath<R> resolve(org.jetbrains.kotlinx.dataframe.columns.ColumnReference<? extends R>);
    Code:
       0: aload_1
       1: ldc           #185                // String reference
       3: invokestatic  #19                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: new           #187                // class org/jetbrains/kotlinx/dataframe/columns/ColumnResolutionContext
       9: dup
      10: aload_0
      11: checkcast     #23                 // class org/jetbrains/kotlinx/dataframe/DataFrame
      14: aload_0
      15: getfield      #36                 // Field unresolvedColumnsPolicy:Lorg/jetbrains/kotlinx/dataframe/columns/UnresolvedColumnsPolicy;
      18: invokespecial #189                // Method org/jetbrains/kotlinx/dataframe/columns/ColumnResolutionContext."<init>":(Lorg/jetbrains/kotlinx/dataframe/DataFrame;Lorg/jetbrains/kotlinx/dataframe/columns/UnresolvedColumnsPolicy;)V
      21: astore_2
      22: aload_1
      23: aload_2
      24: invokeinterface #193,  2          // InterfaceMethod org/jetbrains/kotlinx/dataframe/columns/ColumnReference.resolveSingle:(Lorg/jetbrains/kotlinx/dataframe/columns/ColumnResolutionContext;)Lorg/jetbrains/kotlinx/dataframe/columns/ColumnWithPath;
      29: areturn

  public org.jetbrains.kotlinx.dataframe.columns.ColumnWithPath<org.jetbrains.kotlinx.dataframe.DataRow<T>> resolveSingle(org.jetbrains.kotlinx.dataframe.columns.ColumnResolutionContext);
    Code:
       0: aload_1
       1: ldc           #197                // String context
       3: invokestatic  #19                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: getstatic     #201                // Field org/jetbrains/kotlinx/dataframe/DataColumn.Companion:Lorg/jetbrains/kotlinx/dataframe/DataColumn$Companion;
       9: ldc           #146                // String
      11: aload_0
      12: getfield      #33                 // Field source:Lorg/jetbrains/kotlinx/dataframe/DataFrame;
      15: invokevirtual #207                // Method org/jetbrains/kotlinx/dataframe/DataColumn$Companion.createColumnGroup:(Ljava/lang/String;Lorg/jetbrains/kotlinx/dataframe/DataFrame;)Lorg/jetbrains/kotlinx/dataframe/columns/ColumnGroup;
      18: checkcast     #209                // class org/jetbrains/kotlinx/dataframe/columns/BaseColumn
      21: invokestatic  #212                // Method org/jetbrains/kotlinx/dataframe/impl/UtilsKt.emptyPath:()Lorg/jetbrains/kotlinx/dataframe/columns/ColumnPath;
      24: aload_0
      25: getfield      #33                 // Field source:Lorg/jetbrains/kotlinx/dataframe/DataFrame;
      28: checkcast     #60                 // class org/jetbrains/kotlinx/dataframe/ColumnsContainer
      31: invokestatic  #218                // Method org/jetbrains/kotlinx/dataframe/impl/columns/UtilsKt.addPath:(Lorg/jetbrains/kotlinx/dataframe/columns/BaseColumn;Lorg/jetbrains/kotlinx/dataframe/columns/ColumnPath;Lorg/jetbrains/kotlinx/dataframe/ColumnsContainer;)Lorg/jetbrains/kotlinx/dataframe/columns/ColumnWithPath;
      34: areturn

  public java.util.List<org.jetbrains.kotlinx.dataframe.DataColumn<java.lang.Object>> columns();
    Code:
       0: aload_0
       1: getfield      #33                 // Field source:Lorg/jetbrains/kotlinx/dataframe/DataFrame;
       4: invokeinterface #27,  1           // InterfaceMethod org/jetbrains/kotlinx/dataframe/DataFrame.columns:()Ljava/util/List;
       9: checkcast     #221                // class java/lang/Iterable
      12: astore_1
      13: iconst_0
      14: istore_2
      15: aload_1
      16: astore_3
      17: new           #223                // class java/util/ArrayList
      20: dup
      21: aload_1
      22: bipush        10
      24: invokestatic  #227                // Method kotlin/collections/CollectionsKt.collectionSizeOrDefault:(Ljava/lang/Iterable;I)I
      27: invokespecial #230                // Method java/util/ArrayList."<init>":(I)V
      30: checkcast     #232                // class java/util/Collection
      33: astore        4
      35: iconst_0
      36: istore        5
      38: aload_3
      39: invokeinterface #236,  1          // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      44: astore        6
      46: aload         6
      48: invokeinterface #242,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      53: ifeq          120
      56: aload         6
      58: invokeinterface #246,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      63: astore        7
      65: aload         4
      67: aload         7
      69: checkcast     #121                // class org/jetbrains/kotlinx/dataframe/DataColumn
      72: astore        8
      74: astore        10
      76: iconst_0
      77: istore        9
      79: aload         8
      81: invokestatic  #252                // Method org/jetbrains/kotlinx/dataframe/api/DataColumnTypeKt.isColumnGroup:(Lorg/jetbrains/kotlinx/dataframe/DataColumn;)Z
      84: ifeq          106
      87: new           #112                // class org/jetbrains/kotlinx/dataframe/impl/columns/ColumnGroupWithParent
      90: dup
      91: aconst_null
      92: aload         8
      94: invokestatic  #256                // Method org/jetbrains/kotlinx/dataframe/impl/columns/UtilsKt.asColumnGroup:(Lorg/jetbrains/kotlinx/dataframe/DataColumn;)Lorg/jetbrains/kotlinx/dataframe/columns/ColumnGroup;
      97: invokespecial #115                // Method org/jetbrains/kotlinx/dataframe/impl/columns/ColumnGroupWithParent."<init>":(Lorg/jetbrains/kotlinx/dataframe/columns/ColumnReference;Lorg/jetbrains/kotlinx/dataframe/columns/ColumnGroup;)V
     100: checkcast     #121                // class org/jetbrains/kotlinx/dataframe/DataColumn
     103: goto          108
     106: aload         8
     108: aload         10
     110: swap
     111: invokeinterface #260,  2          // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     116: pop
     117: goto          46
     120: aload         4
     122: checkcast     #262                // class java/util/List
     125: nop
     126: areturn

  public java.util.List<java.lang.String> columnNames();
    Code:
       0: aload_0
       1: getfield      #33                 // Field source:Lorg/jetbrains/kotlinx/dataframe/DataFrame;
       4: invokeinterface #277,  1          // InterfaceMethod org/jetbrains/kotlinx/dataframe/DataFrame.columnNames:()Ljava/util/List;
       9: areturn

  public java.util.List<kotlin.reflect.KType> columnTypes();
    Code:
       0: aload_0
       1: getfield      #33                 // Field source:Lorg/jetbrains/kotlinx/dataframe/DataFrame;
       4: invokeinterface #281,  1          // InterfaceMethod org/jetbrains/kotlinx/dataframe/DataFrame.columnTypes:()Ljava/util/List;
       9: areturn

  public java.util.List<org.jetbrains.kotlinx.dataframe.columns.ColumnWithPath<org.jetbrains.kotlinx.dataframe.DataRow<T>>> resolve(org.jetbrains.kotlinx.dataframe.columns.ColumnResolutionContext);
    Code:
       0: aload_0
       1: checkcast     #7                  // class org/jetbrains/kotlinx/dataframe/columns/SingleColumn
       4: aload_1
       5: invokestatic  #288                // Method org/jetbrains/kotlinx/dataframe/columns/SingleColumn$DefaultImpls.resolve:(Lorg/jetbrains/kotlinx/dataframe/columns/SingleColumn;Lorg/jetbrains/kotlinx/dataframe/columns/ColumnResolutionContext;)Ljava/util/List;
       8: areturn
}
