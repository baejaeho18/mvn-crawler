Compiled from "Marker.kt"
public class org.jetbrains.kotlinx.dataframe.codeGen.Marker implements org.jetbrains.kotlinx.dataframe.codeGen.IsolatedMarker {
  private final java.lang.String name;

  private final boolean isOpen;

  private final java.util.List<org.jetbrains.kotlinx.dataframe.codeGen.GeneratedField> fields;

  private final org.jetbrains.kotlinx.dataframe.codeGen.MarkerVisibility visibility;

  private final java.util.Map<java.lang.String, org.jetbrains.kotlinx.dataframe.codeGen.Marker> baseMarkers;

  private final kotlin.Lazy allBaseMarkers$delegate;

  private final kotlin.Lazy allFields$delegate;

  private final kotlin.Lazy allFieldsByColumn$delegate;

  private final kotlin.Lazy schema$delegate;

  public org.jetbrains.kotlinx.dataframe.codeGen.Marker(java.lang.String, boolean, java.util.List<org.jetbrains.kotlinx.dataframe.codeGen.GeneratedField>, java.util.List<? extends org.jetbrains.kotlinx.dataframe.codeGen.Marker>, org.jetbrains.kotlinx.dataframe.codeGen.MarkerVisibility);
    Code:
       0: aload_1
       1: ldc           #12                 // String name
       3: invokestatic  #18                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_3
       7: ldc           #20                 // String fields
       9: invokestatic  #18                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload         4
      14: ldc           #22                 // String base
      16: invokestatic  #18                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      19: aload         5
      21: ldc           #24                 // String visibility
      23: invokestatic  #18                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      26: aload_0
      27: invokespecial #27                 // Method java/lang/Object."<init>":()V
      30: aload_0
      31: aload_1
      32: putfield      #30                 // Field name:Ljava/lang/String;
      35: aload_0
      36: iload_2
      37: putfield      #34                 // Field isOpen:Z
      40: aload_0
      41: aload_3
      42: putfield      #37                 // Field fields:Ljava/util/List;
      45: aload_0
      46: aload         5
      48: putfield      #40                 // Field visibility:Lorg/jetbrains/kotlinx/dataframe/codeGen/MarkerVisibility;
      51: aload_0
      52: aload         4
      54: checkcast     #42                 // class java/lang/Iterable
      57: astore        6
      59: astore        16
      61: iconst_0
      62: istore        7
      64: aload         6
      66: bipush        10
      68: invokestatic  #48                 // Method kotlin/collections/CollectionsKt.collectionSizeOrDefault:(Ljava/lang/Iterable;I)I
      71: invokestatic  #54                 // Method kotlin/collections/MapsKt.mapCapacity:(I)I
      74: bipush        16
      76: invokestatic  #60                 // Method kotlin/ranges/RangesKt.coerceAtLeast:(II)I
      79: istore        8
      81: aload         6
      83: astore        9
      85: new           #62                 // class java/util/LinkedHashMap
      88: dup
      89: iload         8
      91: invokespecial #65                 // Method java/util/LinkedHashMap."<init>":(I)V
      94: checkcast     #67                 // class java/util/Map
      97: astore        10
      99: iconst_0
     100: istore        11
     102: aload         9
     104: invokeinterface #71,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
     109: astore        12
     111: aload         12
     113: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     118: ifeq          163
     121: aload         12
     123: invokeinterface #81,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     128: astore        13
     130: aload         10
     132: aload         13
     134: checkcast     #2                  // class org/jetbrains/kotlinx/dataframe/codeGen/Marker
     137: astore        14
     139: astore        17
     141: iconst_0
     142: istore        15
     144: aload         14
     146: invokevirtual #85                 // Method getName:()Ljava/lang/String;
     149: aload         17
     151: swap
     152: aload         13
     154: invokeinterface #89,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     159: pop
     160: goto          111
     163: aload         10
     165: nop
     166: aload         16
     168: swap
     169: putfield      #93                 // Field baseMarkers:Ljava/util/Map;
     172: aload_0
     173: new           #95                 // class org/jetbrains/kotlinx/dataframe/codeGen/Marker$allBaseMarkers$2
     176: dup
     177: aload_0
     178: invokespecial #98                 // Method org/jetbrains/kotlinx/dataframe/codeGen/Marker$allBaseMarkers$2."<init>":(Lorg/jetbrains/kotlinx/dataframe/codeGen/Marker;)V
     181: checkcast     #100                // class kotlin/jvm/functions/Function0
     184: invokestatic  #106                // Method kotlin/LazyKt.lazy:(Lkotlin/jvm/functions/Function0;)Lkotlin/Lazy;
     187: putfield      #110                // Field allBaseMarkers$delegate:Lkotlin/Lazy;
     190: aload_0
     191: new           #112                // class org/jetbrains/kotlinx/dataframe/codeGen/Marker$allFields$2
     194: dup
     195: aload_0
     196: invokespecial #113                // Method org/jetbrains/kotlinx/dataframe/codeGen/Marker$allFields$2."<init>":(Lorg/jetbrains/kotlinx/dataframe/codeGen/Marker;)V
     199: checkcast     #100                // class kotlin/jvm/functions/Function0
     202: invokestatic  #106                // Method kotlin/LazyKt.lazy:(Lkotlin/jvm/functions/Function0;)Lkotlin/Lazy;
     205: putfield      #116                // Field allFields$delegate:Lkotlin/Lazy;
     208: aload_0
     209: new           #118                // class org/jetbrains/kotlinx/dataframe/codeGen/Marker$allFieldsByColumn$2
     212: dup
     213: aload_0
     214: invokespecial #119                // Method org/jetbrains/kotlinx/dataframe/codeGen/Marker$allFieldsByColumn$2."<init>":(Lorg/jetbrains/kotlinx/dataframe/codeGen/Marker;)V
     217: checkcast     #100                // class kotlin/jvm/functions/Function0
     220: invokestatic  #106                // Method kotlin/LazyKt.lazy:(Lkotlin/jvm/functions/Function0;)Lkotlin/Lazy;
     223: putfield      #122                // Field allFieldsByColumn$delegate:Lkotlin/Lazy;
     226: aload_0
     227: new           #124                // class org/jetbrains/kotlinx/dataframe/codeGen/Marker$schema$2
     230: dup
     231: aload_0
     232: invokespecial #125                // Method org/jetbrains/kotlinx/dataframe/codeGen/Marker$schema$2."<init>":(Lorg/jetbrains/kotlinx/dataframe/codeGen/Marker;)V
     235: checkcast     #100                // class kotlin/jvm/functions/Function0
     238: invokestatic  #106                // Method kotlin/LazyKt.lazy:(Lkotlin/jvm/functions/Function0;)Lkotlin/Lazy;
     241: putfield      #128                // Field schema$delegate:Lkotlin/Lazy;
     244: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #30                 // Field name:Ljava/lang/String;
       4: areturn

  public final boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #34                 // Field isOpen:Z
       4: ireturn

  public java.util.List<org.jetbrains.kotlinx.dataframe.codeGen.GeneratedField> getFields();
    Code:
       0: aload_0
       1: getfield      #37                 // Field fields:Ljava/util/List;
       4: areturn

  public org.jetbrains.kotlinx.dataframe.codeGen.MarkerVisibility getVisibility();
    Code:
       0: aload_0
       1: getfield      #40                 // Field visibility:Lorg/jetbrains/kotlinx/dataframe/codeGen/MarkerVisibility;
       4: areturn

  public final java.lang.String getShortName();
    Code:
       0: aload_0
       1: invokevirtual #85                 // Method getName:()Ljava/lang/String;
       4: ldc           #156                // String .
       6: aconst_null
       7: iconst_2
       8: aconst_null
       9: invokestatic  #162                // Method kotlin/text/StringsKt.substringAfterLast$default:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;
      12: areturn

  public final java.util.Map<java.lang.String, org.jetbrains.kotlinx.dataframe.codeGen.Marker> getBaseMarkers();
    Code:
       0: aload_0
       1: getfield      #93                 // Field baseMarkers:Ljava/util/Map;
       4: areturn

  public final java.util.Map<java.lang.String, org.jetbrains.kotlinx.dataframe.codeGen.Marker> getAllBaseMarkers();
    Code:
       0: aload_0
       1: getfield      #110                // Field allBaseMarkers$delegate:Lkotlin/Lazy;
       4: astore_1
       5: aload_1
       6: invokeinterface #171,  1          // InterfaceMethod kotlin/Lazy.getValue:()Ljava/lang/Object;
      11: checkcast     #67                 // class java/util/Map
      14: areturn

  public final java.util.List<org.jetbrains.kotlinx.dataframe.codeGen.GeneratedField> getAllFields();
    Code:
       0: aload_0
       1: getfield      #116                // Field allFields$delegate:Lkotlin/Lazy;
       4: astore_1
       5: aload_1
       6: invokeinterface #171,  1          // InterfaceMethod kotlin/Lazy.getValue:()Ljava/lang/Object;
      11: checkcast     #146                // class java/util/List
      14: areturn

  public final java.util.Map<java.lang.String, org.jetbrains.kotlinx.dataframe.codeGen.GeneratedField> getAllFieldsByColumn();
    Code:
       0: aload_0
       1: getfield      #122                // Field allFieldsByColumn$delegate:Lkotlin/Lazy;
       4: astore_1
       5: aload_1
       6: invokeinterface #171,  1          // InterfaceMethod kotlin/Lazy.getValue:()Ljava/lang/Object;
      11: checkcast     #67                 // class java/util/Map
      14: areturn

  public final org.jetbrains.kotlinx.dataframe.codeGen.GeneratedField getField(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #179                // String columnName
       3: invokestatic  #18                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokevirtual #181                // Method getAllFieldsByColumn:()Ljava/util/Map;
      10: aload_1
      11: invokeinterface #185,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #187                // class org/jetbrains/kotlinx/dataframe/codeGen/GeneratedField
      19: areturn

  public final boolean containsColumn(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #179                // String columnName
       3: invokestatic  #18                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokevirtual #181                // Method getAllFieldsByColumn:()Ljava/util/Map;
      10: aload_1
      11: invokeinterface #193,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      16: ireturn

  public final java.util.List<java.lang.String> getColumnNames();
    Code:
       0: aload_0
       1: invokevirtual #197                // Method getAllFields:()Ljava/util/List;
       4: checkcast     #42                 // class java/lang/Iterable
       7: astore_1
       8: iconst_0
       9: istore_2
      10: aload_1
      11: astore_3
      12: new           #199                // class java/util/ArrayList
      15: dup
      16: aload_1
      17: bipush        10
      19: invokestatic  #48                 // Method kotlin/collections/CollectionsKt.collectionSizeOrDefault:(Ljava/lang/Iterable;I)I
      22: invokespecial #200                // Method java/util/ArrayList."<init>":(I)V
      25: checkcast     #202                // class java/util/Collection
      28: astore        4
      30: iconst_0
      31: istore        5
      33: aload_3
      34: invokeinterface #71,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      39: astore        6
      41: aload         6
      43: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      48: ifeq          91
      51: aload         6
      53: invokeinterface #81,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      58: astore        7
      60: aload         4
      62: aload         7
      64: checkcast     #187                // class org/jetbrains/kotlinx/dataframe/codeGen/GeneratedField
      67: astore        8
      69: astore        10
      71: iconst_0
      72: istore        9
      74: aload         8
      76: invokevirtual #205                // Method org/jetbrains/kotlinx/dataframe/codeGen/GeneratedField.getColumnName:()Ljava/lang/String;
      79: aload         10
      81: swap
      82: invokeinterface #208,  2          // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      87: pop
      88: goto          41
      91: aload         4
      93: checkcast     #146                // class java/util/List
      96: nop
      97: areturn

  public final org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema getSchema();
    Code:
       0: aload_0
       1: getfield      #128                // Field schema$delegate:Lkotlin/Lazy;
       4: astore_1
       5: aload_1
       6: invokeinterface #171,  1          // InterfaceMethod kotlin/Lazy.getValue:()Ljava/lang/Object;
      11: checkcast     #220                // class org/jetbrains/kotlinx/dataframe/schema/DataFrameSchema
      14: areturn

  public final boolean implements(org.jetbrains.kotlinx.dataframe.codeGen.Marker);
    Code:
       0: aload_1
       1: ldc           #224                // String schema
       3: invokestatic  #18                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokevirtual #85                 // Method getName:()Ljava/lang/String;
      10: aload_0
      11: invokevirtual #85                 // Method getName:()Ljava/lang/String;
      14: invokestatic  #228                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      17: ifeq          24
      20: iconst_1
      21: goto          66
      24: aload_0
      25: getfield      #93                 // Field baseMarkers:Ljava/util/Map;
      28: aload_1
      29: invokevirtual #85                 // Method getName:()Ljava/lang/String;
      32: invokeinterface #185,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      37: checkcast     #2                  // class org/jetbrains/kotlinx/dataframe/codeGen/Marker
      40: dup
      41: ifnonnull     49
      44: pop
      45: iconst_0
      46: goto          66
      49: astore_3
      50: iconst_0
      51: istore        4
      53: aload_3
      54: aload_1
      55: if_acmpne     62
      58: iconst_1
      59: goto          63
      62: iconst_0
      63: nop
      64: istore_2
      65: iload_2
      66: ireturn

  public final boolean implementsAll(java.lang.Iterable<? extends org.jetbrains.kotlinx.dataframe.codeGen.Marker>);
    Code:
       0: aload_1
       1: ldc           #234                // String schemas
       3: invokestatic  #18                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: astore_2
       8: iconst_0
       9: istore_3
      10: aload_2
      11: instanceof    #202                // class java/util/Collection
      14: ifeq          33
      17: aload_2
      18: checkcast     #202                // class java/util/Collection
      21: invokeinterface #237,  1          // InterfaceMethod java/util/Collection.isEmpty:()Z
      26: ifeq          33
      29: iconst_1
      30: goto          84
      33: aload_2
      34: invokeinterface #71,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      39: astore        4
      41: aload         4
      43: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      48: ifeq          83
      51: aload         4
      53: invokeinterface #81,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      58: astore        5
      60: aload         5
      62: checkcast     #2                  // class org/jetbrains/kotlinx/dataframe/codeGen/Marker
      65: astore        6
      67: iconst_0
      68: istore        7
      70: aload_0
      71: aload         6
      73: invokevirtual #239                // Method implements:(Lorg/jetbrains/kotlinx/dataframe/codeGen/Marker;)Z
      76: ifne          41
      79: iconst_0
      80: goto          84
      83: iconst_1
      84: ireturn
}
