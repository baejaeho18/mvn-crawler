Compiled from "DataFrame.kt"
public interface org.jetbrains.kotlinx.dataframe.DataFrame<T> extends org.jetbrains.kotlinx.dataframe.aggregation.Aggregatable<T>, org.jetbrains.kotlinx.dataframe.ColumnsContainer<T> {
  public static final org.jetbrains.kotlinx.dataframe.DataFrame$Companion Companion;

  public abstract java.util.List<org.jetbrains.kotlinx.dataframe.DataColumn<?>> columns();

  public abstract java.util.List<java.lang.String> columnNames();

  public abstract java.util.List<kotlin.reflect.KType> columnTypes();

  public abstract int ncol();

  public abstract kotlin.ranges.IntRange indices();

  public abstract <C> kotlin.sequences.Sequence<C> values(boolean, kotlin.jvm.functions.Function2<? super org.jetbrains.kotlinx.dataframe.api.ColumnsSelectionDsl<? extends T>, ? super org.jetbrains.kotlinx.dataframe.api.ColumnsSelectionDsl<? extends T>, ? extends org.jetbrains.kotlinx.dataframe.columns.ColumnSet<? extends C>>);

  public abstract kotlin.sequences.Sequence<java.lang.Object> values(boolean);

  public abstract <C> kotlin.sequences.Sequence<C> valuesNotNull(boolean, kotlin.jvm.functions.Function2<? super org.jetbrains.kotlinx.dataframe.api.ColumnsSelectionDsl<? extends T>, ? super org.jetbrains.kotlinx.dataframe.api.ColumnsSelectionDsl<? extends T>, ? extends org.jetbrains.kotlinx.dataframe.columns.ColumnSet<? extends C>>);

  public abstract kotlin.sequences.Sequence<java.lang.Object> valuesNotNull(boolean);

  public abstract <C> java.util.List<org.jetbrains.kotlinx.dataframe.DataColumn<C>> get(kotlin.jvm.functions.Function2<? super org.jetbrains.kotlinx.dataframe.api.ColumnsSelectionDsl<? extends T>, ? super org.jetbrains.kotlinx.dataframe.api.ColumnsSelectionDsl<? extends T>, ? extends org.jetbrains.kotlinx.dataframe.columns.ColumnSet<? extends C>>);

  public abstract org.jetbrains.kotlinx.dataframe.DataFrame<T> get(java.lang.Iterable<java.lang.Integer>);

  public abstract org.jetbrains.kotlinx.dataframe.DataFrame<T> get(kotlin.ranges.IntRange);

  public abstract org.jetbrains.kotlinx.dataframe.DataFrame<T> get(kotlin.ranges.IntRange...);

  public abstract org.jetbrains.kotlinx.dataframe.DataFrame<T> get(kotlin.ranges.ClosedRange<java.lang.String>);

  public abstract org.jetbrains.kotlinx.dataframe.DataFrame<T> get(int, int...);

  public abstract org.jetbrains.kotlinx.dataframe.DataFrame<T> get(org.jetbrains.kotlinx.dataframe.columns.ColumnReference<?>, org.jetbrains.kotlinx.dataframe.columns.ColumnReference<?>...);

  public abstract org.jetbrains.kotlinx.dataframe.DataFrame<T> get(java.lang.String, java.lang.String...);

  public abstract org.jetbrains.kotlinx.dataframe.DataFrame<T> plus(org.jetbrains.kotlinx.dataframe.DataColumn<?>);

  public abstract org.jetbrains.kotlinx.dataframe.DataFrame<T> plus(java.lang.Iterable<? extends org.jetbrains.kotlinx.dataframe.DataColumn<?>>);

  public abstract int getColumnIndex(java.lang.String);

  public abstract <R> org.jetbrains.kotlinx.dataframe.columns.ColumnWithPath<R> resolve(org.jetbrains.kotlinx.dataframe.columns.ColumnReference<? extends R>);

  public abstract org.jetbrains.kotlinx.dataframe.columns.ColumnGroup<?> asColumnGroup(java.lang.String);

  public abstract java.util.Iterator<org.jetbrains.kotlinx.dataframe.DataRow<T>> iterator();

  public abstract <R> org.jetbrains.kotlinx.dataframe.DataRow<T> aggregate(kotlin.jvm.functions.Function2<? super org.jetbrains.kotlinx.dataframe.aggregation.AggregateGroupedDsl<? extends T>, ? super org.jetbrains.kotlinx.dataframe.aggregation.AggregateGroupedDsl<? extends T>, ? extends R>);

  public abstract org.jetbrains.kotlinx.dataframe.DataRow<T> get(int);

  public abstract int nrow();

  public abstract java.lang.Iterable<org.jetbrains.kotlinx.dataframe.DataRow<T>> rows();

  public abstract java.lang.Iterable<org.jetbrains.kotlinx.dataframe.DataRow<T>> rowsReversed();

  static {};
    Code:
       0: getstatic     #78                 // Field org/jetbrains/kotlinx/dataframe/DataFrame$Companion.$$INSTANCE:Lorg/jetbrains/kotlinx/dataframe/DataFrame$Companion;
       3: putstatic     #81                 // Field Companion:Lorg/jetbrains/kotlinx/dataframe/DataFrame$Companion;
       6: return
}
