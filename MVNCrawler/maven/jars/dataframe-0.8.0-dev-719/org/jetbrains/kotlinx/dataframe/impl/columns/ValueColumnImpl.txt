Compiled from "ValueColumnImpl.kt"
public class org.jetbrains.kotlinx.dataframe.impl.columns.ValueColumnImpl<T> extends org.jetbrains.kotlinx.dataframe.impl.columns.DataColumnImpl<T> implements org.jetbrains.kotlinx.dataframe.columns.ValueColumn<T> {
  private final T defaultValue;

  public org.jetbrains.kotlinx.dataframe.impl.columns.ValueColumnImpl(java.util.List<? extends T>, java.lang.String, kotlin.reflect.KType, T, kotlin.Lazy<? extends java.util.Set<? extends T>>);
    Code:
       0: aload_1
       1: ldc           #14                 // String values
       3: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #22                 // String name
       9: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_3
      13: ldc           #24                 // String type
      15: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload_0
      19: aload_1
      20: aload_2
      21: aload_3
      22: aload         5
      24: invokespecial #27                 // Method org/jetbrains/kotlinx/dataframe/impl/columns/DataColumnImpl."<init>":(Ljava/util/List;Ljava/lang/String;Lkotlin/reflect/KType;Lkotlin/Lazy;)V
      27: aload_0
      28: aload         4
      30: putfield      #31                 // Field defaultValue:Ljava/lang/Object;
      33: return

  public org.jetbrains.kotlinx.dataframe.impl.columns.ValueColumnImpl(java.util.List, java.lang.String, kotlin.reflect.KType, java.lang.Object, kotlin.Lazy, int, kotlin.jvm.internal.DefaultConstructorMarker);
    Code:
       0: iload         6
       2: bipush        8
       4: iand
       5: ifeq          11
       8: aconst_null
       9: astore        4
      11: iload         6
      13: bipush        16
      15: iand
      16: ifeq          22
      19: aconst_null
      20: astore        5
      22: aload_0
      23: aload_1
      24: aload_2
      25: aload_3
      26: aload         4
      28: aload         5
      30: invokespecial #41                 // Method "<init>":(Ljava/util/List;Ljava/lang/String;Lkotlin/reflect/KType;Ljava/lang/Object;Lkotlin/Lazy;)V
      33: return

  public final T getDefaultValue();
    Code:
       0: aload_0
       1: getfield      #31                 // Field defaultValue:Ljava/lang/Object;
       4: areturn

  public org.jetbrains.kotlinx.dataframe.impl.columns.ValueColumnImpl<T> distinct();
    Code:
       0: new           #2                  // class org/jetbrains/kotlinx/dataframe/impl/columns/ValueColumnImpl
       3: dup
       4: aload_0
       5: invokevirtual #50                 // Method toSet:()Ljava/util/Set;
       8: checkcast     #52                 // class java/lang/Iterable
      11: invokestatic  #58                 // Method kotlin/collections/CollectionsKt.toList:(Ljava/lang/Iterable;)Ljava/util/List;
      14: aload_0
      15: invokevirtual #62                 // Method getName:()Ljava/lang/String;
      18: aload_0
      19: invokevirtual #66                 // Method getType:()Lkotlin/reflect/KType;
      22: aload_0
      23: getfield      #31                 // Field defaultValue:Ljava/lang/Object;
      26: aload_0
      27: invokevirtual #70                 // Method getDistinct:()Lkotlin/Lazy;
      30: invokespecial #41                 // Method "<init>":(Ljava/util/List;Ljava/lang/String;Lkotlin/reflect/KType;Ljava/lang/Object;Lkotlin/Lazy;)V
      33: areturn

  public org.jetbrains.kotlinx.dataframe.impl.columns.ValueColumnImpl<T> rename(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #75                 // String newName
       3: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: new           #2                  // class org/jetbrains/kotlinx/dataframe/impl/columns/ValueColumnImpl
       9: dup
      10: aload_0
      11: invokevirtual #79                 // Method getValues:()Ljava/util/List;
      14: aload_1
      15: aload_0
      16: invokevirtual #66                 // Method getType:()Lkotlin/reflect/KType;
      19: aload_0
      20: getfield      #31                 // Field defaultValue:Ljava/lang/Object;
      23: aload_0
      24: invokevirtual #70                 // Method getDistinct:()Lkotlin/Lazy;
      27: invokespecial #41                 // Method "<init>":(Ljava/util/List;Ljava/lang/String;Lkotlin/reflect/KType;Ljava/lang/Object;Lkotlin/Lazy;)V
      30: areturn

  public org.jetbrains.kotlinx.dataframe.impl.columns.ValueColumnImpl<T> changeType(kotlin.reflect.KType);
    Code:
       0: aload_1
       1: ldc           #24                 // String type
       3: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: new           #2                  // class org/jetbrains/kotlinx/dataframe/impl/columns/ValueColumnImpl
       9: dup
      10: aload_0
      11: invokevirtual #79                 // Method getValues:()Ljava/util/List;
      14: aload_0
      15: invokevirtual #62                 // Method getName:()Ljava/lang/String;
      18: aload_1
      19: aload_0
      20: getfield      #31                 // Field defaultValue:Ljava/lang/Object;
      23: aload_0
      24: invokevirtual #70                 // Method getDistinct:()Lkotlin/Lazy;
      27: invokespecial #41                 // Method "<init>":(Ljava/util/List;Ljava/lang/String;Lkotlin/reflect/KType;Ljava/lang/Object;Lkotlin/Lazy;)V
      30: areturn

  public org.jetbrains.kotlinx.dataframe.DataColumn<T> addParent(org.jetbrains.kotlinx.dataframe.columns.ColumnGroup<?>);
    Code:
       0: aload_1
       1: ldc           #87                 // String parent
       3: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: new           #89                 // class org/jetbrains/kotlinx/dataframe/impl/columns/ValueColumnWithParent
       9: dup
      10: aload_1
      11: aload_0
      12: checkcast     #7                  // class org/jetbrains/kotlinx/dataframe/columns/ValueColumn
      15: invokespecial #92                 // Method org/jetbrains/kotlinx/dataframe/impl/columns/ValueColumnWithParent."<init>":(Lorg/jetbrains/kotlinx/dataframe/columns/ColumnGroup;Lorg/jetbrains/kotlinx/dataframe/columns/ValueColumn;)V
      18: checkcast     #94                 // class org/jetbrains/kotlinx/dataframe/DataColumn
      21: areturn

  protected org.jetbrains.kotlinx.dataframe.columns.ValueColumn<T> createWithValues(java.util.List<? extends T>, java.lang.Boolean);
    Code:
       0: aload_1
       1: ldc           #14                 // String values
       3: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ifnonnull     100
      10: aload_1
      11: checkcast     #52                 // class java/lang/Iterable
      14: astore        4
      16: iconst_0
      17: istore        5
      19: aload         4
      21: instanceof    #100                // class java/util/Collection
      24: ifeq          44
      27: aload         4
      29: checkcast     #100                // class java/util/Collection
      32: invokeinterface #104,  1          // InterfaceMethod java/util/Collection.isEmpty:()Z
      37: ifeq          44
      40: iconst_0
      41: goto          104
      44: aload         4
      46: invokeinterface #108,  1          // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      51: astore        6
      53: aload         6
      55: invokeinterface #113,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      60: ifeq          96
      63: aload         6
      65: invokeinterface #116,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      70: astore        7
      72: aload         7
      74: astore        8
      76: iconst_0
      77: istore        9
      79: aload         8
      81: ifnonnull     88
      84: iconst_1
      85: goto          89
      88: iconst_0
      89: ifeq          53
      92: iconst_1
      93: goto          104
      96: iconst_0
      97: goto          104
     100: aload_2
     101: invokevirtual #121                // Method java/lang/Boolean.booleanValue:()Z
     104: istore_3
     105: getstatic     #125                // Field org/jetbrains/kotlinx/dataframe/DataColumn.Companion:Lorg/jetbrains/kotlinx/dataframe/DataColumn$Companion;
     108: aload_0
     109: invokevirtual #62                 // Method getName:()Ljava/lang/String;
     112: aload_1
     113: aload_0
     114: invokevirtual #66                 // Method getType:()Lkotlin/reflect/KType;
     117: iload_3
     118: invokestatic  #131                // Method kotlin/reflect/full/KTypes.withNullability:(Lkotlin/reflect/KType;Z)Lkotlin/reflect/KType;
     121: iconst_0
     122: aconst_null
     123: bipush        24
     125: aconst_null
     126: invokestatic  #137                // Method org/jetbrains/kotlinx/dataframe/DataColumn$Companion.createValueColumn$default:(Lorg/jetbrains/kotlinx/dataframe/DataColumn$Companion;Ljava/lang/String;Ljava/util/List;Lkotlin/reflect/KType;ZLjava/lang/Object;ILjava/lang/Object;)Lorg/jetbrains/kotlinx/dataframe/columns/ValueColumn;
     129: areturn

  public org.jetbrains.kotlinx.dataframe.columns.ValueColumn<T> get(java.lang.Iterable<java.lang.Integer>);
    Code:
       0: aload_1
       1: ldc           #157                // String indices
       3: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: iconst_0
       7: istore_2
       8: aload_1
       9: astore        4
      11: iconst_0
      12: istore        5
      14: aload         4
      16: astore        6
      18: new           #159                // class java/util/ArrayList
      21: dup
      22: aload         4
      24: bipush        10
      26: invokestatic  #163                // Method kotlin/collections/CollectionsKt.collectionSizeOrDefault:(Ljava/lang/Iterable;I)I
      29: invokespecial #166                // Method java/util/ArrayList."<init>":(I)V
      32: checkcast     #100                // class java/util/Collection
      35: astore        7
      37: iconst_0
      38: istore        8
      40: aload         6
      42: invokeinterface #108,  1          // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      47: astore        9
      49: aload         9
      51: invokeinterface #113,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      56: ifeq          119
      59: aload         9
      61: invokeinterface #116,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      66: astore        10
      68: aload         7
      70: aload         10
      72: checkcast     #168                // class java/lang/Number
      75: invokevirtual #172                // Method java/lang/Number.intValue:()I
      78: istore        11
      80: astore        14
      82: iconst_0
      83: istore        12
      85: aload_0
      86: invokevirtual #79                 // Method getValues:()Ljava/util/List;
      89: iload         11
      91: invokeinterface #175,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      96: astore        13
      98: aload         13
     100: ifnonnull     105
     103: iconst_1
     104: istore_2
     105: aload         13
     107: aload         14
     109: swap
     110: invokeinterface #179,  2          // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     115: pop
     116: goto          49
     119: aload         7
     121: checkcast     #152                // class java/util/List
     124: nop
     125: astore_3
     126: aload_0
     127: aload_3
     128: iload_2
     129: invokestatic  #183                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     132: invokevirtual #185                // Method createWithValues:(Ljava/util/List;Ljava/lang/Boolean;)Lorg/jetbrains/kotlinx/dataframe/columns/ValueColumn;
     135: areturn

  public java.lang.Void get(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #199                // String columnName
       3: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: new           #201                // class java/lang/UnsupportedOperationException
       9: dup
      10: new           #203                // class java/lang/StringBuilder
      13: dup
      14: invokespecial #206                // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #208                // String Can not get nested column \'
      19: invokevirtual #212                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_1
      23: invokevirtual #212                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc           #214                // String \' from ValueColumn \'
      28: invokevirtual #212                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: invokevirtual #62                 // Method getName:()Ljava/lang/String;
      35: invokevirtual #212                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: bipush        39
      40: invokevirtual #217                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      43: invokevirtual #220                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokespecial #223                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      49: athrow

  public org.jetbrains.kotlinx.dataframe.columns.ValueColumn<T> get(kotlin.ranges.IntRange);
    Code:
       0: aload_1
       1: ldc           #227                // String range
       3: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokespecial #230                // Method org/jetbrains/kotlinx/dataframe/impl/columns/DataColumnImpl.get:(Lkotlin/ranges/IntRange;)Lorg/jetbrains/kotlinx/dataframe/DataColumn;
      11: checkcast     #7                  // class org/jetbrains/kotlinx/dataframe/columns/ValueColumn
      14: areturn

  public T defaultValue();
    Code:
       0: aload_0
       1: getfield      #31                 // Field defaultValue:Ljava/lang/Object;
       4: areturn

  public org.jetbrains.kotlinx.dataframe.impl.columns.ResolvingValueColumn<T> forceResolve();
    Code:
       0: new           #236                // class org/jetbrains/kotlinx/dataframe/impl/columns/ResolvingValueColumn
       3: dup
       4: aload_0
       5: checkcast     #7                  // class org/jetbrains/kotlinx/dataframe/columns/ValueColumn
       8: invokespecial #239                // Method org/jetbrains/kotlinx/dataframe/impl/columns/ResolvingValueColumn."<init>":(Lorg/jetbrains/kotlinx/dataframe/columns/ValueColumn;)V
      11: areturn

  public org.jetbrains.kotlinx.dataframe.columns.ValueColumn<T> getValue(java.lang.Object, kotlin.reflect.KProperty<?>);
    Code:
       0: aload_0
       1: checkcast     #7                  // class org/jetbrains/kotlinx/dataframe/columns/ValueColumn
       4: aload_1
       5: aload_2
       6: invokestatic  #247                // Method org/jetbrains/kotlinx/dataframe/columns/ValueColumn$DefaultImpls.getValue:(Lorg/jetbrains/kotlinx/dataframe/columns/ValueColumn;Ljava/lang/Object;Lkotlin/reflect/KProperty;)Lorg/jetbrains/kotlinx/dataframe/columns/ValueColumn;
       9: areturn

  public org.jetbrains.kotlinx.dataframe.columns.ColumnKind kind();
    Code:
       0: aload_0
       1: checkcast     #7                  // class org/jetbrains/kotlinx/dataframe/columns/ValueColumn
       4: invokestatic  #255                // Method org/jetbrains/kotlinx/dataframe/columns/ValueColumn$DefaultImpls.kind:(Lorg/jetbrains/kotlinx/dataframe/columns/ValueColumn;)Lorg/jetbrains/kotlinx/dataframe/columns/ColumnKind;
       7: areturn

  public org.jetbrains.kotlinx.dataframe.DataColumn distinct();
    Code:
       0: aload_0
       1: invokevirtual #258                // Method distinct:()Lorg/jetbrains/kotlinx/dataframe/impl/columns/ValueColumnImpl;
       4: checkcast     #94                 // class org/jetbrains/kotlinx/dataframe/DataColumn
       7: areturn

  public org.jetbrains.kotlinx.dataframe.columns.BaseColumn distinct();
    Code:
       0: aload_0
       1: invokevirtual #258                // Method distinct:()Lorg/jetbrains/kotlinx/dataframe/impl/columns/ValueColumnImpl;
       4: checkcast     #261                // class org/jetbrains/kotlinx/dataframe/columns/BaseColumn
       7: areturn

  public org.jetbrains.kotlinx.dataframe.columns.ValueColumn distinct();
    Code:
       0: aload_0
       1: invokevirtual #258                // Method distinct:()Lorg/jetbrains/kotlinx/dataframe/impl/columns/ValueColumnImpl;
       4: checkcast     #7                  // class org/jetbrains/kotlinx/dataframe/columns/ValueColumn
       7: areturn

  public org.jetbrains.kotlinx.dataframe.DataColumn rename(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #265                // Method rename:(Ljava/lang/String;)Lorg/jetbrains/kotlinx/dataframe/impl/columns/ValueColumnImpl;
       5: checkcast     #94                 // class org/jetbrains/kotlinx/dataframe/DataColumn
       8: areturn

  public org.jetbrains.kotlinx.dataframe.columns.BaseColumn rename(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #265                // Method rename:(Ljava/lang/String;)Lorg/jetbrains/kotlinx/dataframe/impl/columns/ValueColumnImpl;
       5: checkcast     #261                // class org/jetbrains/kotlinx/dataframe/columns/BaseColumn
       8: areturn

  public org.jetbrains.kotlinx.dataframe.columns.ColumnReference rename(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #265                // Method rename:(Ljava/lang/String;)Lorg/jetbrains/kotlinx/dataframe/impl/columns/ValueColumnImpl;
       5: checkcast     #269                // class org/jetbrains/kotlinx/dataframe/columns/ColumnReference
       8: areturn

  public org.jetbrains.kotlinx.dataframe.impl.columns.DataColumnInternal rename(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #265                // Method rename:(Ljava/lang/String;)Lorg/jetbrains/kotlinx/dataframe/impl/columns/ValueColumnImpl;
       5: checkcast     #272                // class org/jetbrains/kotlinx/dataframe/impl/columns/DataColumnInternal
       8: areturn

  public org.jetbrains.kotlinx.dataframe.columns.ValueColumn rename(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #265                // Method rename:(Ljava/lang/String;)Lorg/jetbrains/kotlinx/dataframe/impl/columns/ValueColumnImpl;
       5: checkcast     #7                  // class org/jetbrains/kotlinx/dataframe/columns/ValueColumn
       8: areturn

  public org.jetbrains.kotlinx.dataframe.DataColumn changeType(kotlin.reflect.KType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #276                // Method changeType:(Lkotlin/reflect/KType;)Lorg/jetbrains/kotlinx/dataframe/impl/columns/ValueColumnImpl;
       5: checkcast     #94                 // class org/jetbrains/kotlinx/dataframe/DataColumn
       8: areturn

  public org.jetbrains.kotlinx.dataframe.DataColumn createWithValues(java.util.List, java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #185                // Method createWithValues:(Ljava/util/List;Ljava/lang/Boolean;)Lorg/jetbrains/kotlinx/dataframe/columns/ValueColumn;
       6: checkcast     #94                 // class org/jetbrains/kotlinx/dataframe/DataColumn
       9: areturn

  public org.jetbrains.kotlinx.dataframe.DataColumn get(java.lang.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #280                // Method get:(Ljava/lang/Iterable;)Lorg/jetbrains/kotlinx/dataframe/columns/ValueColumn;
       5: checkcast     #94                 // class org/jetbrains/kotlinx/dataframe/DataColumn
       8: areturn

  public org.jetbrains.kotlinx.dataframe.columns.BaseColumn get(java.lang.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #280                // Method get:(Ljava/lang/Iterable;)Lorg/jetbrains/kotlinx/dataframe/columns/ValueColumn;
       5: checkcast     #261                // class org/jetbrains/kotlinx/dataframe/columns/BaseColumn
       8: areturn

  public org.jetbrains.kotlinx.dataframe.DataColumn get(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #283                // Method get:(Ljava/lang/String;)Ljava/lang/Void;
       5: checkcast     #94                 // class org/jetbrains/kotlinx/dataframe/DataColumn
       8: areturn

  public org.jetbrains.kotlinx.dataframe.DataColumn get(kotlin.ranges.IntRange);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #285                // Method get:(Lkotlin/ranges/IntRange;)Lorg/jetbrains/kotlinx/dataframe/columns/ValueColumn;
       5: checkcast     #94                 // class org/jetbrains/kotlinx/dataframe/DataColumn
       8: areturn

  public org.jetbrains.kotlinx.dataframe.columns.BaseColumn get(kotlin.ranges.IntRange);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #285                // Method get:(Lkotlin/ranges/IntRange;)Lorg/jetbrains/kotlinx/dataframe/columns/ValueColumn;
       5: checkcast     #261                // class org/jetbrains/kotlinx/dataframe/columns/BaseColumn
       8: areturn

  public org.jetbrains.kotlinx.dataframe.DataColumn forceResolve();
    Code:
       0: aload_0
       1: invokevirtual #288                // Method forceResolve:()Lorg/jetbrains/kotlinx/dataframe/impl/columns/ResolvingValueColumn;
       4: checkcast     #94                 // class org/jetbrains/kotlinx/dataframe/DataColumn
       7: areturn

  public org.jetbrains.kotlinx.dataframe.DataColumn getValue(java.lang.Object, kotlin.reflect.KProperty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #291                // Method getValue:(Ljava/lang/Object;Lkotlin/reflect/KProperty;)Lorg/jetbrains/kotlinx/dataframe/columns/ValueColumn;
       6: checkcast     #94                 // class org/jetbrains/kotlinx/dataframe/DataColumn
       9: areturn

  public org.jetbrains.kotlinx.dataframe.columns.BaseColumn getValue(java.lang.Object, kotlin.reflect.KProperty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #291                // Method getValue:(Ljava/lang/Object;Lkotlin/reflect/KProperty;)Lorg/jetbrains/kotlinx/dataframe/columns/ValueColumn;
       6: checkcast     #261                // class org/jetbrains/kotlinx/dataframe/columns/BaseColumn
       9: areturn

  public org.jetbrains.kotlinx.dataframe.columns.ColumnReference getValue(java.lang.Object, kotlin.reflect.KProperty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #291                // Method getValue:(Ljava/lang/Object;Lkotlin/reflect/KProperty;)Lorg/jetbrains/kotlinx/dataframe/columns/ValueColumn;
       6: checkcast     #269                // class org/jetbrains/kotlinx/dataframe/columns/ColumnReference
       9: areturn
}
