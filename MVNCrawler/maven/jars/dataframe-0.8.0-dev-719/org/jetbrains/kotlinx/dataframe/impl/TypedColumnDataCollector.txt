Compiled from "ColumnDataCollector.kt"
public final class org.jetbrains.kotlinx.dataframe.impl.TypedColumnDataCollector<T> extends org.jetbrains.kotlinx.dataframe.impl.DataCollectorBase<T> {
  private final kotlin.reflect.KType type;

  private final boolean checkTypes;

  private final kotlin.reflect.KClass<?> kclass;

  public org.jetbrains.kotlinx.dataframe.impl.TypedColumnDataCollector(int, kotlin.reflect.KType, boolean);
    Code:
       0: aload_2
       1: ldc           #10                 // String type
       3: invokestatic  #16                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: iload_1
       8: invokespecial #19                 // Method org/jetbrains/kotlinx/dataframe/impl/DataCollectorBase."<init>":(I)V
      11: aload_0
      12: aload_2
      13: putfield      #22                 // Field type:Lkotlin/reflect/KType;
      16: aload_0
      17: iload_3
      18: putfield      #26                 // Field checkTypes:Z
      21: aload_0
      22: aload_0
      23: getfield      #22                 // Field type:Lkotlin/reflect/KType;
      26: invokestatic  #32                 // Method kotlin/reflect/jvm/KTypesJvm.getJvmErasure:(Lkotlin/reflect/KType;)Lkotlin/reflect/KClass;
      29: putfield      #36                 // Field kclass:Lkotlin/reflect/KClass;
      32: return

  public org.jetbrains.kotlinx.dataframe.impl.TypedColumnDataCollector(int, kotlin.reflect.KType, boolean, int, kotlin.jvm.internal.DefaultConstructorMarker);
    Code:
       0: iload         4
       2: iconst_1
       3: iand
       4: ifeq          9
       7: iconst_0
       8: istore_1
       9: iload         4
      11: iconst_4
      12: iand
      13: ifeq          18
      16: iconst_1
      17: istore_3
      18: aload_0
      19: iload_1
      20: aload_2
      21: iload_3
      22: invokespecial #43                 // Method "<init>":(ILkotlin/reflect/KType;Z)V
      25: return

  public final kotlin.reflect.KType getType();
    Code:
       0: aload_0
       1: getfield      #22                 // Field type:Lkotlin/reflect/KType;
       4: areturn

  public final boolean getCheckTypes();
    Code:
       0: aload_0
       1: getfield      #26                 // Field checkTypes:Z
       4: ireturn

  public final kotlin.reflect.KClass<?> getKclass$dataframe();
    Code:
       0: aload_0
       1: getfield      #36                 // Field kclass:Lkotlin/reflect/KClass;
       4: areturn

  public void add(T);
    Code:
       0: aload_0
       1: getfield      #26                 // Field checkTypes:Z
       4: ifeq          87
       7: aload_1
       8: ifnull        87
      11: aload_1
      12: invokevirtual #60                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokestatic  #66                 // Method kotlin/jvm/JvmClassMappingKt.getKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;
      18: aload_0
      19: getfield      #36                 // Field kclass:Lkotlin/reflect/KClass;
      22: invokestatic  #72                 // Method kotlin/reflect/full/KClasses.isSubclassOf:(Lkotlin/reflect/KClass;Lkotlin/reflect/KClass;)Z
      25: ifne          87
      28: new           #74                 // class java/lang/IllegalArgumentException
      31: dup
      32: new           #76                 // class java/lang/StringBuilder
      35: dup
      36: invokespecial #79                 // Method java/lang/StringBuilder."<init>":()V
      39: ldc           #81                 // String Can not add value of class
      41: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_1
      45: invokevirtual #60                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      48: invokestatic  #66                 // Method kotlin/jvm/JvmClassMappingKt.getKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;
      51: invokeinterface #91,  1           // InterfaceMethod kotlin/reflect/KClass.getQualifiedName:()Ljava/lang/String;
      56: invokevirtual #94                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      59: ldc           #96                 // String  to column of type
      61: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: aload_0
      65: getfield      #22                 // Field type:Lkotlin/reflect/KType;
      68: invokevirtual #94                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      71: ldc           #98                 // String . Value =
      73: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: aload_1
      77: invokevirtual #94                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      80: invokevirtual #101                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      83: invokespecial #104                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      86: athrow
      87: aload_0
      88: aload_1
      89: invokespecial #106                // Method org/jetbrains/kotlinx/dataframe/impl/DataCollectorBase.add:(Ljava/lang/Object;)V
      92: return

  public org.jetbrains.kotlinx.dataframe.DataColumn<T> toColumn(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #113                // String name
       3: invokestatic  #16                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: aload_0
       9: getfield      #22                 // Field type:Lkotlin/reflect/KType;
      12: invokevirtual #117                // Method createColumn:(Ljava/lang/String;Lkotlin/reflect/KType;)Lorg/jetbrains/kotlinx/dataframe/DataColumn;
      15: areturn
}
