Compiled from "LDAP.scala"
public final class net.liftweb.ldap.SimpleLDAPVendor$$anon$1 implements scala.collection.jcl.MapWrapper<java.lang.String, java.lang.String> {
  private final java.util.Hashtable javaMap$1;

  public net.liftweb.ldap.SimpleLDAPVendor$$anon$1(java.util.Hashtable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field javaMap$1:Ljava/util/Hashtable;
       5: aload_0
       6: invokespecial #17                 // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #23                 // Method scala/Iterable$class.$init$:(Lscala/Iterable;)V
      13: aload_0
      14: invokestatic  #28                 // Method scala/Collection$class.$init$:(Lscala/Collection;)V
      17: aload_0
      18: invokestatic  #33                 // Method scala/collection/jcl/MutableIterable$class.$init$:(Lscala/collection/jcl/MutableIterable;)V
      21: aload_0
      22: invokestatic  #38                 // Method scala/Function1$class.$init$:(Lscala/Function1;)V
      25: aload_0
      26: invokestatic  #43                 // Method scala/PartialFunction$class.$init$:(Lscala/PartialFunction;)V
      29: aload_0
      30: invokestatic  #48                 // Method scala/collection/Map$class.$init$:(Lscala/collection/Map;)V
      33: aload_0
      34: invokestatic  #53                 // Method scala/collection/mutable/CloneableCollection$class.$init$:(Lscala/collection/mutable/CloneableCollection;)V
      37: aload_0
      38: invokestatic  #58                 // Method scala/collection/mutable/Map$class.$init$:(Lscala/collection/mutable/Map;)V
      41: aload_0
      42: invokestatic  #63                 // Method scala/collection/jcl/Map$class.$init$:(Lscala/collection/jcl/Map;)V
      45: aload_0
      46: invokestatic  #68                 // Method scala/collection/jcl/MapWrapper$class.$init$:(Lscala/collection/jcl/MapWrapper;)V
      49: return

  public java.util.Map underlying();
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method underlying:()Ljava/util/Hashtable;
       4: areturn

  public scala.collection.jcl.Set keySet();
    Code:
       0: aload_0
       1: invokeinterface #80,  1           // InterfaceMethod scala/collection/jcl/MapWrapper.keySet:()Lscala/collection/jcl/Set$Projection;
       6: areturn

  public scala.collection.Set keySet();
    Code:
       0: aload_0
       1: invokeinterface #80,  1           // InterfaceMethod scala/collection/jcl/MapWrapper.keySet:()Lscala/collection/jcl/Set$Projection;
       6: areturn

  public scala.Iterator elements();
    Code:
       0: aload_0
       1: invokeinterface #86,  1           // InterfaceMethod scala/collection/jcl/MapWrapper.elements:()Lscala/collection/jcl/MutableIterator;
       6: areturn

  public final scala.Iterator keys();
    Code:
       0: aload_0
       1: invokeinterface #91,  1           // InterfaceMethod scala/collection/jcl/Map.keys:()Lscala/collection/jcl/MutableIterator;
       6: areturn

  public boolean has(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #95                 // class scala/Tuple2
       5: invokeinterface #98,  2           // InterfaceMethod scala/collection/jcl/Map.has:(Lscala/Tuple2;)Z
      10: ireturn

  public scala.collection.mutable.Map $plus(scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #108,  2          // InterfaceMethod scala/collection/jcl/Map.$plus:(Lscala/Tuple2;)Lscala/collection/jcl/Map;
       7: areturn

  public scala.collection.mutable.Map $minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #114,  2          // InterfaceMethod scala/collection/jcl/Map.$minus:(Ljava/lang/Object;)Lscala/collection/jcl/Map;
       7: areturn

  public boolean remove(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #95                 // class scala/Tuple2
       5: invokeinterface #117,  2          // InterfaceMethod scala/collection/jcl/Map.remove:(Lscala/Tuple2;)Z
      10: ireturn

  public scala.collection.Map$Projection projection();
    Code:
       0: aload_0
       1: invokeinterface #122,  1          // InterfaceMethod scala/collection/jcl/Map.projection:()Lscala/collection/jcl/Map$Projection;
       6: areturn

  public scala.collection.jcl.MutableIterable$Projection projection();
    Code:
       0: aload_0
       1: invokeinterface #122,  1          // InterfaceMethod scala/collection/jcl/Map.projection:()Lscala/collection/jcl/Map$Projection;
       6: areturn

  public scala.Iterable$Projection projection();
    Code:
       0: aload_0
       1: invokeinterface #122,  1          // InterfaceMethod scala/collection/jcl/Map.projection:()Lscala/collection/jcl/Map$Projection;
       6: areturn

  public scala.collection.Map$Projection filterKeys(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #129,  2          // InterfaceMethod scala/collection/jcl/Map.filterKeys:(Lscala/Function1;)Lscala/collection/jcl/Map$Projection;
       7: areturn

  public void $less$less(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #134                // class scala/collection/mutable/Message
       5: invokeinterface #139,  2          // InterfaceMethod scala/collection/mutable/Map.$less$less:(Lscala/collection/mutable/Message;)V
      10: return

  public java.lang.Object clone();
    Code:
       0: aload_0
       1: invokeinterface #144,  1          // InterfaceMethod scala/collection/mutable/Map.clone:()Lscala/collection/mutable/Map;
       6: areturn

  public scala.Function1 andThen(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #151,  2          // InterfaceMethod scala/PartialFunction.andThen:(Lscala/Function1;)Lscala/PartialFunction;
       7: areturn

  public java.util.Hashtable<java.lang.String, java.lang.String> underlying();
    Code:
       0: aload_0
       1: getfield      #12                 // Field javaMap$1:Ljava/util/Hashtable;
       4: areturn

  public int $tag() throws java.rmi.RemoteException;
    Code:
       0: aload_0
       1: invokestatic  #160                // Method scala/ScalaObject$class.$tag:(Lscala/ScalaObject;)I
       4: ireturn

  public boolean hasDefiniteSize();
    Code:
       0: aload_0
       1: invokestatic  #168                // Method scala/Iterable$class.hasDefiniteSize:(Lscala/Iterable;)Z
       4: ireturn

  public void copyToArray(scala.runtime.BoxedArray, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #173                // Method scala/Iterable$class.copyToArray:(Lscala/Iterable;Lscala/runtime/BoxedArray;I)V
       6: return

  public scala.StringBuilder addString(scala.StringBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #181                // Method scala/Iterable$class.addString:(Lscala/Iterable;Lscala/StringBuilder;)Lscala/StringBuilder;
       5: areturn

  public scala.StringBuilder addString(scala.StringBuilder, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #186                // Method scala/Iterable$class.addString:(Lscala/Iterable;Lscala/StringBuilder;Ljava/lang/String;)Lscala/StringBuilder;
       6: areturn

  public scala.StringBuilder addString(scala.StringBuilder, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #191                // Method scala/Iterable$class.addString:(Lscala/Iterable;Lscala/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lscala/StringBuilder;
       9: areturn

  public java.lang.String mkString();
    Code:
       0: aload_0
       1: invokestatic  #198                // Method scala/Iterable$class.mkString:(Lscala/Iterable;)Ljava/lang/String;
       4: areturn

  public java.lang.String mkString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #202                // Method scala/Iterable$class.mkString:(Lscala/Iterable;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public java.lang.String mkString(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #206                // Method scala/Iterable$class.mkString:(Lscala/Iterable;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public scala.Stream toStream();
    Code:
       0: aload_0
       1: invokestatic  #211                // Method scala/Iterable$class.toStream:(Lscala/Iterable;)Lscala/Stream;
       4: areturn

  public scala.Seq toSeq();
    Code:
       0: aload_0
       1: invokestatic  #216                // Method scala/Iterable$class.toSeq:(Lscala/Iterable;)Lscala/Seq;
       4: areturn

  public scala.List toList();
    Code:
       0: aload_0
       1: invokestatic  #221                // Method scala/Iterable$class.toList:(Lscala/Iterable;)Lscala/List;
       4: areturn

  public boolean sameElements(scala.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #225                // Method scala/Iterable$class.sameElements:(Lscala/Iterable;Lscala/Iterable;)Z
       5: ireturn

  public void copyToBuffer(scala.collection.mutable.Buffer);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #231                // Method scala/Iterable$class.copyToBuffer:(Lscala/Iterable;Lscala/collection/mutable/Buffer;)V
       5: return

  public java.lang.Object reduceRight(scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #237                // Method scala/Iterable$class.reduceRight:(Lscala/Iterable;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object reduceLeft(scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #241                // Method scala/Iterable$class.reduceLeft:(Lscala/Iterable;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object $colon$bslash(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #246                // Method scala/Iterable$class.$colon$bslash:(Lscala/Iterable;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object $div$colon(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #249                // Method scala/Iterable$class.$div$colon:(Lscala/Iterable;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object foldRight(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #252                // Method scala/Iterable$class.foldRight:(Lscala/Iterable;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object foldLeft(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #255                // Method scala/Iterable$class.foldLeft:(Lscala/Iterable;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public int indexOf(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #260                // Method scala/Iterable$class.indexOf:(Lscala/Iterable;Ljava/lang/Object;)I
       5: ireturn

  public int findIndexOf(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #265                // Method scala/Iterable$class.findIndexOf:(Lscala/Iterable;Lscala/Function1;)I
       5: ireturn

  public scala.Option find(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #270                // Method scala/Iterable$class.find:(Lscala/Iterable;Lscala/Function1;)Lscala/Option;
       5: areturn

  public boolean exists(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #275                // Method scala/Iterable$class.exists:(Lscala/Iterable;Lscala/Function1;)Z
       5: ireturn

  public boolean forall(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #278                // Method scala/Iterable$class.forall:(Lscala/Iterable;Lscala/Function1;)Z
       5: ireturn

  public void foreach(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #282                // Method scala/Iterable$class.foreach:(Lscala/Iterable;Lscala/Function1;)V
       5: return

  public scala.Collection drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #287                // Method scala/Iterable$class.drop:(Lscala/Iterable;I)Lscala/Collection;
       5: areturn

  public scala.Collection take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #290                // Method scala/Iterable$class.take:(Lscala/Iterable;I)Lscala/Collection;
       5: areturn

  public scala.Collection dropWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #295                // Method scala/Iterable$class.dropWhile:(Lscala/Iterable;Lscala/Function1;)Lscala/Collection;
       5: areturn

  public scala.Iterable takeWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #300                // Method scala/Iterable$class.takeWhile:(Lscala/Iterable;Lscala/Function1;)Lscala/Iterable;
       5: areturn

  public scala.Tuple2 partition(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #305                // Method scala/Iterable$class.partition:(Lscala/Iterable;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public scala.Iterable filter(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #308                // Method scala/Iterable$class.filter:(Lscala/Iterable;Lscala/Function1;)Lscala/Iterable;
       5: areturn

  public scala.Iterable flatMap(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #311                // Method scala/Iterable$class.flatMap:(Lscala/Iterable;Lscala/Function1;)Lscala/Iterable;
       5: areturn

  public scala.Iterable map(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #314                // Method scala/Iterable$class.map:(Lscala/Iterable;Lscala/Function1;)Lscala/Iterable;
       5: areturn

  public scala.Collection $plus$plus(scala.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #319                // Method scala/Iterable$class.$plus$plus:(Lscala/Iterable;Lscala/Iterable;)Lscala/Collection;
       5: areturn

  public scala.Collection concat(scala.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #322                // Method scala/Iterable$class.concat:(Lscala/Iterable;Lscala/Iterable;)Lscala/Collection;
       5: areturn

  public scala.runtime.BoxedArray toArray();
    Code:
       0: aload_0
       1: invokestatic  #327                // Method scala/Collection$class.toArray:(Lscala/Collection;)Lscala/runtime/BoxedArray;
       4: areturn

  public int size0();
    Code:
       0: aload_0
       1: invokestatic  #331                // Method scala/collection/jcl/MutableIterable$class.size0:(Lscala/collection/jcl/MutableIterable;)I
       4: ireturn

  public boolean retainAll(scala.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #335                // Method scala/collection/jcl/MutableIterable$class.retainAll:(Lscala/collection/jcl/MutableIterable;Lscala/Iterable;)Z
       5: ireturn

  public void retainOnly(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #339                // Method scala/collection/jcl/MutableIterable$class.retainOnly:(Lscala/collection/jcl/MutableIterable;Lscala/Function1;)V
       5: return

  public scala.collection.jcl.MutableIterable $minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #343                // Method scala/collection/jcl/MutableIterable$class.$minus:(Lscala/collection/jcl/MutableIterable;Ljava/lang/Object;)Lscala/collection/jcl/MutableIterable;
       5: areturn

  public scala.collection.jcl.MutableIterable $minus$minus(scala.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #348                // Method scala/collection/jcl/MutableIterable$class.$minus$minus:(Lscala/collection/jcl/MutableIterable;Lscala/Iterable;)Lscala/collection/jcl/MutableIterable;
       5: areturn

  public boolean removeAll(scala.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #351                // Method scala/collection/jcl/MutableIterable$class.removeAll:(Lscala/collection/jcl/MutableIterable;Lscala/Iterable;)Z
       5: ireturn

  public scala.Function1 compose(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #355                // Method scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.PartialFunction andThen(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #358                // Method scala/PartialFunction$class.andThen:(Lscala/PartialFunction;Lscala/Function1;)Lscala/PartialFunction;
       5: areturn

  public scala.PartialFunction orElse(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #363                // Method scala/PartialFunction$class.orElse:(Lscala/PartialFunction;Lscala/PartialFunction;)Lscala/PartialFunction;
       5: areturn

  public java.lang.String stringPrefix();
    Code:
       0: aload_0
       1: invokestatic  #368                // Method scala/collection/Map$class.stringPrefix:(Lscala/collection/Map;)Ljava/lang/String;
       4: areturn

  public scala.collection.Map$Projection mapElements(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #372                // Method scala/collection/Map$class.mapElements:(Lscala/collection/Map;Lscala/Function1;)Lscala/collection/Map$Projection;
       5: areturn

  public java.lang.Object default(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #377                // Method scala/collection/Map$class.default:(Lscala/collection/Map;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scala.Iterator values();
    Code:
       0: aload_0
       1: invokestatic  #381                // Method scala/collection/Map$class.values:(Lscala/collection/Map;)Lscala/Iterator;
       4: areturn

  public boolean isDefinedAt(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #385                // Method scala/collection/Map$class.isDefinedAt:(Lscala/collection/Map;Ljava/lang/Object;)Z
       5: ireturn

  public java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #388                // Method scala/collection/Map$class.apply:(Lscala/collection/Map;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object getOrElse(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #393                // Method scala/collection/Map$class.getOrElse:(Lscala/collection/Map;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object scala$collection$mutable$CloneableCollection$$super$clone();
    Code:
       0: aload_0
       1: invokespecial #397                // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: areturn

  public void excl(scala.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #402                // Method scala/collection/mutable/Map$class.excl:(Lscala/collection/mutable/Map;Lscala/Seq;)V
       5: return

  public void incl(scala.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #406                // Method scala/collection/mutable/Map$class.incl:(Lscala/collection/mutable/Map;Lscala/Seq;)V
       5: return

  public scala.collection.mutable.Map$MapTo $plus$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #411                // Method scala/collection/mutable/Map$class.$plus$eq:(Lscala/collection/mutable/Map;Ljava/lang/Object;)Lscala/collection/mutable/Map$MapTo;
       5: areturn

  public scala.collection.Map readOnly();
    Code:
       0: aload_0
       1: invokestatic  #416                // Method scala/collection/mutable/Map$class.readOnly:(Lscala/collection/mutable/Map;)Lscala/collection/Map;
       4: areturn

  public scala.collection.mutable.Map clone();
    Code:
       0: aload_0
       1: invokestatic  #419                // Method scala/collection/mutable/Map$class.clone:(Lscala/collection/mutable/Map;)Lscala/collection/mutable/Map;
       4: areturn

  public void $less$less(scala.collection.mutable.Message);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #422                // Method scala/collection/mutable/Map$class.$less$less:(Lscala/collection/mutable/Map;Lscala/collection/mutable/Message;)V
       5: return

  public void retain(scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #428                // Method scala/collection/mutable/Map$class.retain:(Lscala/collection/mutable/Map;Lscala/Function2;)V
       5: return

  public void transform(scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #431                // Method scala/collection/mutable/Map$class.transform:(Lscala/collection/mutable/Map;Lscala/Function2;)V
       5: return

  public java.lang.Object getOrElseUpdate(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #435                // Method scala/collection/mutable/Map$class.getOrElseUpdate:(Lscala/collection/mutable/Map;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public scala.collection.mutable.Map $minus$minus(scala.Iterator);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #439                // Method scala/collection/mutable/Map$class.$minus$minus:(Lscala/collection/mutable/Map;Lscala/Iterator;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.mutable.Map $minus$minus(scala.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #444                // Method scala/collection/mutable/Map$class.$minus$minus:(Lscala/collection/mutable/Map;Lscala/Iterable;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.mutable.Map $minus(java.lang.Object, java.lang.Object, scala.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #448                // Method scala/collection/mutable/Map$class.$minus:(Lscala/collection/mutable/Map;Ljava/lang/Object;Ljava/lang/Object;Lscala/Seq;)Lscala/collection/mutable/Map;
       7: areturn

  public void $minus$minus$eq(scala.Iterator);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #453                // Method scala/collection/mutable/Map$class.$minus$minus$eq:(Lscala/collection/mutable/Map;Lscala/Iterator;)V
       5: return

  public void $minus$minus$eq(scala.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #456                // Method scala/collection/mutable/Map$class.$minus$minus$eq:(Lscala/collection/mutable/Map;Lscala/Iterable;)V
       5: return

  public void $minus$eq(java.lang.Object, java.lang.Object, scala.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #461                // Method scala/collection/mutable/Map$class.$minus$eq:(Lscala/collection/mutable/Map;Ljava/lang/Object;Ljava/lang/Object;Lscala/Seq;)V
       7: return

  public scala.collection.mutable.Map $plus$plus(scala.Iterator);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #463                // Method scala/collection/mutable/Map$class.$plus$plus:(Lscala/collection/mutable/Map;Lscala/Iterator;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.mutable.Map $plus$plus(scala.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #465                // Method scala/collection/mutable/Map$class.$plus$plus:(Lscala/collection/mutable/Map;Lscala/Iterable;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.mutable.Map $plus(scala.Tuple2, scala.Tuple2, scala.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #469                // Method scala/collection/mutable/Map$class.$plus:(Lscala/collection/mutable/Map;Lscala/Tuple2;Lscala/Tuple2;Lscala/Seq;)Lscala/collection/mutable/Map;
       7: areturn

  public void $plus$plus$eq(scala.Iterator);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #472                // Method scala/collection/mutable/Map$class.$plus$plus$eq:(Lscala/collection/mutable/Map;Lscala/Iterator;)V
       5: return

  public void $plus$eq(scala.Tuple2, scala.Tuple2, scala.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #476                // Method scala/collection/mutable/Map$class.$plus$eq:(Lscala/collection/mutable/Map;Lscala/Tuple2;Lscala/Tuple2;Lscala/Seq;)V
       7: return

  public final java.lang.Object scala$collection$mutable$Map$$super$clone();
    Code:
       0: aload_0
       1: invokestatic  #480                // Method scala/collection/mutable/CloneableCollection$class.clone:(Lscala/collection/mutable/CloneableCollection;)Ljava/lang/Object;
       4: areturn

  public scala.collection.jcl.Map$Projection filterKeys(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #483                // Method scala/collection/jcl/Map$class.filterKeys:(Lscala/collection/jcl/Map;Lscala/Function1;)Lscala/collection/jcl/Map$Projection;
       5: areturn

  public scala.collection.jcl.Map$Projection lense(scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #488                // Method scala/collection/jcl/Map$class.lense:(Lscala/collection/jcl/Map;Lscala/Function1;Lscala/Function1;)Lscala/collection/jcl/Map$Projection;
       6: areturn

  public scala.collection.jcl.Map$Projection projection();
    Code:
       0: aload_0
       1: invokestatic  #491                // Method scala/collection/jcl/Map$class.projection:(Lscala/collection/jcl/Map;)Lscala/collection/jcl/Map$Projection;
       4: areturn

  public void $minus$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #494                // Method scala/collection/jcl/Map$class.$minus$eq:(Lscala/collection/jcl/Map;Ljava/lang/Object;)V
       5: return

  public boolean remove(scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #497                // Method scala/collection/jcl/Map$class.remove:(Lscala/collection/jcl/Map;Lscala/Tuple2;)Z
       5: ireturn

  public scala.collection.jcl.Map $minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #500                // Method scala/collection/jcl/Map$class.$minus:(Lscala/collection/jcl/Map;Ljava/lang/Object;)Lscala/collection/jcl/Map;
       5: areturn

  public void $plus$eq(scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #504                // Method scala/collection/jcl/Map$class.$plus$eq:(Lscala/collection/jcl/Map;Lscala/Tuple2;)V
       5: return

  public scala.collection.jcl.Map $plus(scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #507                // Method scala/collection/jcl/Map$class.$plus:(Lscala/collection/jcl/Map;Lscala/Tuple2;)Lscala/collection/jcl/Map;
       5: areturn

  public void update(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #512                // Method scala/collection/jcl/Map$class.update:(Lscala/collection/jcl/Map;Ljava/lang/Object;Ljava/lang/Object;)V
       6: return

  public boolean has(scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #514                // Method scala/collection/jcl/Map$class.has:(Lscala/collection/jcl/Map;Lscala/Tuple2;)Z
       5: ireturn

  public final scala.collection.jcl.MutableIterator keys();
    Code:
       0: aload_0
       1: invokestatic  #517                // Method scala/collection/jcl/Map$class.keys:(Lscala/collection/jcl/Map;)Lscala/collection/jcl/MutableIterator;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #521                // Method scala/collection/jcl/MapWrapper$class.equals:(Lscala/collection/jcl/MapWrapper;Ljava/lang/Object;)Z
       5: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokestatic  #525                // Method scala/collection/jcl/MapWrapper$class.hashCode:(Lscala/collection/jcl/MapWrapper;)I
       4: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #529                // Method scala/collection/jcl/MapWrapper$class.toString:(Lscala/collection/jcl/MapWrapper;)Ljava/lang/String;
       4: areturn

  public scala.collection.jcl.MutableIterator elements();
    Code:
       0: aload_0
       1: invokestatic  #532                // Method scala/collection/jcl/MapWrapper$class.elements:(Lscala/collection/jcl/MapWrapper;)Lscala/collection/jcl/MutableIterator;
       4: areturn

  public scala.collection.jcl.MutableIterable$Projection valueSet();
    Code:
       0: aload_0
       1: invokestatic  #536                // Method scala/collection/jcl/MapWrapper$class.valueSet:(Lscala/collection/jcl/MapWrapper;)Lscala/collection/jcl/MutableIterable$Projection;
       4: areturn

  public scala.collection.jcl.Set$Projection keySet();
    Code:
       0: aload_0
       1: invokestatic  #539                // Method scala/collection/jcl/MapWrapper$class.keySet:(Lscala/collection/jcl/MapWrapper;)Lscala/collection/jcl/Set$Projection;
       4: areturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #542                // Method scala/collection/jcl/MapWrapper$class.contains:(Lscala/collection/jcl/MapWrapper;Ljava/lang/Object;)Z
       5: ireturn

  public scala.Option removeKey(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #547                // Method scala/collection/jcl/MapWrapper$class.removeKey:(Lscala/collection/jcl/MapWrapper;Ljava/lang/Object;)Lscala/Option;
       5: areturn

  public void $plus$plus$eq(scala.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #550                // Method scala/collection/jcl/MapWrapper$class.$plus$plus$eq:(Lscala/collection/jcl/MapWrapper;Lscala/Iterable;)V
       5: return

  public scala.Option get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #553                // Method scala/collection/jcl/MapWrapper$class.get:(Lscala/collection/jcl/MapWrapper;Ljava/lang/Object;)Lscala/Option;
       5: areturn

  public scala.Option put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #558                // Method scala/collection/jcl/MapWrapper$class.put:(Lscala/collection/jcl/MapWrapper;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Option;
       6: areturn

  public void clear();
    Code:
       0: aload_0
       1: invokestatic  #561                // Method scala/collection/jcl/MapWrapper$class.clear:(Lscala/collection/jcl/MapWrapper;)V
       4: return

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokestatic  #565                // Method scala/collection/jcl/MapWrapper$class.isEmpty:(Lscala/collection/jcl/MapWrapper;)Z
       4: ireturn

  public int size();
    Code:
       0: aload_0
       1: invokestatic  #568                // Method scala/collection/jcl/MapWrapper$class.size:(Lscala/collection/jcl/MapWrapper;)I
       4: ireturn

  public final boolean scala$collection$jcl$MapWrapper$$super$equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #571                // Method scala/collection/Map$class.equals:(Lscala/collection/Map;Ljava/lang/Object;)Z
       5: ireturn

  public final void scala$collection$jcl$MapWrapper$$super$$plus$plus$eq(scala.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #575                // Method scala/collection/jcl/Map$class.$plus$plus$eq:(Lscala/collection/jcl/Map;Lscala/Iterable;)V
       5: return
}
