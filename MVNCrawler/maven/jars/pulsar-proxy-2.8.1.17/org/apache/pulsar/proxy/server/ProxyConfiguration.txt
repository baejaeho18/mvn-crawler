Compiled from "ProxyConfiguration.java"
public class org.apache.pulsar.proxy.server.ProxyConfiguration implements org.apache.pulsar.common.configuration.PulsarConfiguration {
  private static final java.lang.String CATEGORY_SERVER;

  private static final java.lang.String CATEGORY_BROKER_DISCOVERY;

  private static final java.lang.String CATEGORY_AUTHENTICATION;

  private static final java.lang.String CATEGORY_AUTHORIZATION;

  private static final java.lang.String CATEGORY_CLIENT_AUTHENTICATION;

  private static final java.lang.String CATEGORY_RATE_LIMITING;

  private static final java.lang.String CATEGORY_TLS;

  private static final java.lang.String CATEGORY_KEYSTORE_TLS;

  private static final java.lang.String CATEGORY_TOKEN_AUTH;

  private static final java.lang.String CATEGORY_HTTP;

  private static final java.lang.String CATEGORY_SASL_AUTH;

  private static final java.lang.String CATEGORY_PLUGIN;

  private static final java.lang.String CATEGORY_WEBSOCKET;

  private java.lang.String zookeeperServers;

  private java.lang.String configurationStoreServers;

  private java.lang.String globalZookeeperServers;

  private int zookeeperSessionTimeoutMs;

  private int zooKeeperCacheExpirySeconds;

  private java.lang.String brokerServiceURL;

  private java.lang.String brokerServiceURLTLS;

  private java.lang.String brokerWebServiceURL;

  private java.lang.String brokerWebServiceURLTLS;

  private java.lang.String functionWorkerWebServiceURL;

  private java.lang.String functionWorkerWebServiceURLTLS;

  private java.lang.String bindAddress;

  private java.lang.String advertisedAddress;

  private boolean haProxyProtocolEnabled;

  private java.util.Optional<java.lang.Integer> servicePort;

  private java.util.Optional<java.lang.Integer> servicePortTls;

  private java.util.Optional<java.lang.Integer> webServicePort;

  private java.util.Optional<java.lang.Integer> webServicePortTls;

  private java.lang.String narExtractionDirectory;

  private java.util.Optional<java.lang.Integer> proxyLogLevel;

  private java.lang.String statusFilePath;

  private java.util.Set<java.lang.String> superUserRoles;

  private boolean authenticationEnabled;

  private java.util.Set<java.lang.String> authenticationProviders;

  private boolean authorizationEnabled;

  private java.lang.String authorizationProvider;

  private boolean forwardAuthorizationCredentials;

  private boolean authenticateMetricsEndpoint;

  private java.lang.String saslJaasClientAllowedIds;

  private java.lang.String saslJaasServerSectionName;

  private java.lang.String kinitCommand;

  private int maxConcurrentInboundConnections;

  private int maxConcurrentLookupRequests;

  private java.lang.String brokerClientAuthenticationPlugin;

  private java.lang.String brokerClientAuthenticationParameters;

  private java.lang.String brokerClientTrustCertsFilePath;

  private boolean tlsEnabledWithBroker;

  private java.lang.String anonymousUserRole;

  private boolean tlsEnabledInProxy;

  private long tlsCertRefreshCheckDurationSec;

  private java.lang.String tlsCertificateFilePath;

  private java.lang.String tlsKeyFilePath;

  private java.lang.String tlsTrustCertsFilePath;

  private boolean tlsAllowInsecureConnection;

  private boolean tlsHostnameVerificationEnabled;

  private java.util.Set<java.lang.String> tlsProtocols;

  private java.util.Set<java.lang.String> tlsCiphers;

  private boolean tlsRequireTrustedClientCertOnConnect;

  private boolean tlsEnabledWithKeyStore;

  private java.lang.String tlsProvider;

  private java.lang.String tlsKeyStoreType;

  private java.lang.String tlsKeyStore;

  private java.lang.String tlsKeyStorePassword;

  private java.lang.String tlsTrustStoreType;

  private java.lang.String tlsTrustStore;

  private java.lang.String tlsTrustStorePassword;

  private boolean brokerClientTlsEnabledWithKeyStore;

  private java.lang.String brokerClientSslProvider;

  private java.lang.String brokerClientTlsTrustStoreType;

  private java.lang.String brokerClientTlsTrustStore;

  private java.lang.String brokerClientTlsTrustStorePassword;

  private java.util.Set<java.lang.String> brokerClientTlsCiphers;

  private java.util.Set<java.lang.String> brokerClientTlsProtocols;

  private java.util.Set<org.apache.pulsar.proxy.server.ProxyConfiguration$HttpReverseProxyConfig> httpReverseProxyConfigs;

  private int httpOutputBufferSize;

  private int httpProxyTimeout;

  private int httpNumThreads;

  private java.lang.String proxyAdditionalServletDirectory;

  private java.lang.String additionalServletDirectory;

  private java.util.Set<java.lang.String> proxyAdditionalServlets;

  private java.util.Set<java.lang.String> additionalServlets;

  private boolean httpRequestsLimitEnabled;

  private double httpRequestsMaxPerSecond;

  private boolean webSocketServiceEnabled;

  private java.lang.String clusterName;

  private java.util.Properties properties;

  public org.apache.pulsar.proxy.server.ProxyConfiguration();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: sipush        30000
       8: putfield      #2                  // Field zookeeperSessionTimeoutMs:I
      11: aload_0
      12: sipush        300
      15: putfield      #3                  // Field zooKeeperCacheExpirySeconds:I
      18: aload_0
      19: ldc           #4                  // String 0.0.0.0
      21: putfield      #5                  // Field bindAddress:Ljava/lang/String;
      24: aload_0
      25: sipush        6650
      28: invokestatic  #6                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      31: invokestatic  #7                  // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      34: putfield      #8                  // Field servicePort:Ljava/util/Optional;
      37: aload_0
      38: invokestatic  #9                  // Method java/util/Optional.empty:()Ljava/util/Optional;
      41: putfield      #10                 // Field servicePortTls:Ljava/util/Optional;
      44: aload_0
      45: sipush        8080
      48: invokestatic  #6                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      51: invokestatic  #7                  // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      54: putfield      #11                 // Field webServicePort:Ljava/util/Optional;
      57: aload_0
      58: invokestatic  #9                  // Method java/util/Optional.empty:()Ljava/util/Optional;
      61: putfield      #12                 // Field webServicePortTls:Ljava/util/Optional;
      64: aload_0
      65: getstatic     #13                 // Field org/apache/pulsar/common/nar/NarClassLoader.DEFAULT_NAR_EXTRACTION_DIR:Ljava/lang/String;
      68: putfield      #14                 // Field narExtractionDirectory:Ljava/lang/String;
      71: aload_0
      72: iconst_0
      73: invokestatic  #6                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      76: invokestatic  #7                  // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      79: putfield      #15                 // Field proxyLogLevel:Ljava/util/Optional;
      82: aload_0
      83: invokestatic  #16                 // Method com/google/common/collect/Sets.newTreeSet:()Ljava/util/TreeSet;
      86: putfield      #17                 // Field superUserRoles:Ljava/util/Set;
      89: aload_0
      90: iconst_0
      91: putfield      #18                 // Field authenticationEnabled:Z
      94: aload_0
      95: invokestatic  #16                 // Method com/google/common/collect/Sets.newTreeSet:()Ljava/util/TreeSet;
      98: putfield      #19                 // Field authenticationProviders:Ljava/util/Set;
     101: aload_0
     102: iconst_0
     103: putfield      #20                 // Field authorizationEnabled:Z
     106: aload_0
     107: ldc           #21                 // class org/apache/pulsar/broker/authorization/PulsarAuthorizationProvider
     109: invokevirtual #22                 // Method java/lang/Class.getName:()Ljava/lang/String;
     112: putfield      #23                 // Field authorizationProvider:Ljava/lang/String;
     115: aload_0
     116: iconst_0
     117: putfield      #24                 // Field forwardAuthorizationCredentials:Z
     120: aload_0
     121: iconst_1
     122: putfield      #25                 // Field authenticateMetricsEndpoint:Z
     125: aload_0
     126: ldc           #27                 // String .*pulsar.*
     128: putfield      #28                 // Field saslJaasClientAllowedIds:Ljava/lang/String;
     131: aload_0
     132: ldc           #29                 // String PulsarProxy
     134: putfield      #30                 // Field saslJaasServerSectionName:Ljava/lang/String;
     137: aload_0
     138: ldc           #31                 // String /usr/bin/kinit
     140: putfield      #32                 // Field kinitCommand:Ljava/lang/String;
     143: aload_0
     144: sipush        10000
     147: putfield      #33                 // Field maxConcurrentInboundConnections:I
     150: aload_0
     151: ldc           #34                 // int 50000
     153: putfield      #35                 // Field maxConcurrentLookupRequests:I
     156: aload_0
     157: iconst_0
     158: putfield      #36                 // Field tlsEnabledWithBroker:Z
     161: aload_0
     162: aconst_null
     163: putfield      #37                 // Field anonymousUserRole:Ljava/lang/String;
     166: aload_0
     167: iconst_0
     168: putfield      #38                 // Field tlsEnabledInProxy:Z
     171: aload_0
     172: ldc2_w        #39                 // long 300l
     175: putfield      #41                 // Field tlsCertRefreshCheckDurationSec:J
     178: aload_0
     179: iconst_0
     180: putfield      #42                 // Field tlsAllowInsecureConnection:Z
     183: aload_0
     184: iconst_0
     185: putfield      #43                 // Field tlsHostnameVerificationEnabled:Z
     188: aload_0
     189: invokestatic  #16                 // Method com/google/common/collect/Sets.newTreeSet:()Ljava/util/TreeSet;
     192: putfield      #44                 // Field tlsProtocols:Ljava/util/Set;
     195: aload_0
     196: invokestatic  #16                 // Method com/google/common/collect/Sets.newTreeSet:()Ljava/util/TreeSet;
     199: putfield      #45                 // Field tlsCiphers:Ljava/util/Set;
     202: aload_0
     203: iconst_0
     204: putfield      #46                 // Field tlsRequireTrustedClientCertOnConnect:Z
     207: aload_0
     208: iconst_0
     209: putfield      #47                 // Field tlsEnabledWithKeyStore:Z
     212: aload_0
     213: aconst_null
     214: putfield      #48                 // Field tlsProvider:Ljava/lang/String;
     217: aload_0
     218: ldc           #49                 // String JKS
     220: putfield      #50                 // Field tlsKeyStoreType:Ljava/lang/String;
     223: aload_0
     224: aconst_null
     225: putfield      #51                 // Field tlsKeyStore:Ljava/lang/String;
     228: aload_0
     229: aconst_null
     230: putfield      #52                 // Field tlsKeyStorePassword:Ljava/lang/String;
     233: aload_0
     234: ldc           #49                 // String JKS
     236: putfield      #53                 // Field tlsTrustStoreType:Ljava/lang/String;
     239: aload_0
     240: aconst_null
     241: putfield      #54                 // Field tlsTrustStore:Ljava/lang/String;
     244: aload_0
     245: aconst_null
     246: putfield      #55                 // Field tlsTrustStorePassword:Ljava/lang/String;
     249: aload_0
     250: iconst_0
     251: putfield      #56                 // Field brokerClientTlsEnabledWithKeyStore:Z
     254: aload_0
     255: aconst_null
     256: putfield      #57                 // Field brokerClientSslProvider:Ljava/lang/String;
     259: aload_0
     260: ldc           #49                 // String JKS
     262: putfield      #58                 // Field brokerClientTlsTrustStoreType:Ljava/lang/String;
     265: aload_0
     266: aconst_null
     267: putfield      #59                 // Field brokerClientTlsTrustStore:Ljava/lang/String;
     270: aload_0
     271: aconst_null
     272: putfield      #60                 // Field brokerClientTlsTrustStorePassword:Ljava/lang/String;
     275: aload_0
     276: invokestatic  #16                 // Method com/google/common/collect/Sets.newTreeSet:()Ljava/util/TreeSet;
     279: putfield      #61                 // Field brokerClientTlsCiphers:Ljava/util/Set;
     282: aload_0
     283: invokestatic  #16                 // Method com/google/common/collect/Sets.newTreeSet:()Ljava/util/TreeSet;
     286: putfield      #62                 // Field brokerClientTlsProtocols:Ljava/util/Set;
     289: aload_0
     290: invokestatic  #63                 // Method com/google/common/collect/Sets.newHashSet:()Ljava/util/HashSet;
     293: putfield      #64                 // Field httpReverseProxyConfigs:Ljava/util/Set;
     296: aload_0
     297: ldc           #65                 // int 32768
     299: putfield      #66                 // Field httpOutputBufferSize:I
     302: aload_0
     303: ldc           #67                 // int 300000
     305: putfield      #68                 // Field httpProxyTimeout:I
     308: aload_0
     309: bipush        8
     311: iconst_2
     312: invokestatic  #69                 // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
     315: invokevirtual #70                 // Method java/lang/Runtime.availableProcessors:()I
     318: imul
     319: invokestatic  #71                 // Method java/lang/Math.max:(II)I
     322: putfield      #72                 // Field httpNumThreads:I
     325: aload_0
     326: ldc           #73                 // String ./proxyAdditionalServlet
     328: putfield      #74                 // Field proxyAdditionalServletDirectory:Ljava/lang/String;
     331: aload_0
     332: ldc           #73                 // String ./proxyAdditionalServlet
     334: putfield      #75                 // Field additionalServletDirectory:Ljava/lang/String;
     337: aload_0
     338: invokestatic  #16                 // Method com/google/common/collect/Sets.newTreeSet:()Ljava/util/TreeSet;
     341: putfield      #76                 // Field proxyAdditionalServlets:Ljava/util/Set;
     344: aload_0
     345: invokestatic  #16                 // Method com/google/common/collect/Sets.newTreeSet:()Ljava/util/TreeSet;
     348: putfield      #77                 // Field additionalServlets:Ljava/util/Set;
     351: aload_0
     352: iconst_0
     353: putfield      #78                 // Field httpRequestsLimitEnabled:Z
     356: aload_0
     357: ldc2_w        #79                 // double 100.0d
     360: putfield      #81                 // Field httpRequestsMaxPerSecond:D
     363: aload_0
     364: iconst_0
     365: putfield      #82                 // Field webSocketServiceEnabled:Z
     368: aload_0
     369: new           #83                 // class java/util/Properties
     372: dup
     373: invokespecial #84                 // Method java/util/Properties."<init>":()V
     376: putfield      #85                 // Field properties:Ljava/util/Properties;
     379: return

  public java.util.Properties getProperties();
    Code:
       0: aload_0
       1: getfield      #85                 // Field properties:Ljava/util/Properties;
       4: areturn

  public java.util.Optional<java.lang.Integer> getServicePort();
    Code:
       0: aload_0
       1: getfield      #8                  // Field servicePort:Ljava/util/Optional;
       4: areturn

  public java.util.Optional<java.lang.Integer> getServicePortTls();
    Code:
       0: aload_0
       1: getfield      #10                 // Field servicePortTls:Ljava/util/Optional;
       4: areturn

  public java.util.Optional<java.lang.Integer> getWebServicePort();
    Code:
       0: aload_0
       1: getfield      #11                 // Field webServicePort:Ljava/util/Optional;
       4: areturn

  public java.util.Optional<java.lang.Integer> getWebServicePortTls();
    Code:
       0: aload_0
       1: getfield      #12                 // Field webServicePortTls:Ljava/util/Optional;
       4: areturn

  public void setProperties(java.util.Properties);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #85                 // Field properties:Ljava/util/Properties;
       5: new           #86                 // class java/util/HashMap
       8: dup
       9: invokespecial #87                 // Method java/util/HashMap."<init>":()V
      12: astore_2
      13: ldc           #88                 // String ^httpReverseProxy\\.([^\\.]*)\\.(.+)$
      15: invokestatic  #89                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      18: astore_3
      19: aload_1
      20: invokevirtual #90                 // Method java/util/Properties.stringPropertyNames:()Ljava/util/Set;
      23: invokeinterface #91,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      28: aload_3
      29: invokedynamic #92,  0             // InvokeDynamic #0:apply:(Ljava/util/regex/Pattern;)Ljava/util/function/Function;
      34: invokeinterface #93,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      39: invokedynamic #94,  0             // InvokeDynamic #1:test:()Ljava/util/function/Predicate;
      44: invokeinterface #95,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      49: invokedynamic #96,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      54: invokestatic  #97                 // Method java/util/stream/Collectors.groupingBy:(Ljava/util/function/Function;)Ljava/util/stream/Collector;
      57: invokeinterface #98,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      62: checkcast     #99                 // class java/util/Map
      65: astore        4
      67: aload         4
      69: invokeinterface #100,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      74: aload_0
      75: aload_1
      76: invokedynamic #101,  0            // InvokeDynamic #3:accept:(Lorg/apache/pulsar/proxy/server/ProxyConfiguration;Ljava/util/Properties;)Ljava/util/function/Consumer;
      81: invokeinterface #102,  2          // InterfaceMethod java/util/Set.forEach:(Ljava/util/function/Consumer;)V
      86: return

  public java.lang.String getZookeeperServers();
    Code:
       0: aload_0
       1: getfield      #103                // Field zookeeperServers:Ljava/lang/String;
       4: areturn

  public java.lang.String getConfigurationStoreServers();
    Code:
       0: aload_0
       1: getfield      #104                // Field configurationStoreServers:Ljava/lang/String;
       4: areturn

  public java.lang.String getGlobalZookeeperServers();
    Code:
       0: aload_0
       1: getfield      #105                // Field globalZookeeperServers:Ljava/lang/String;
       4: areturn

  public int getZookeeperSessionTimeoutMs();
    Code:
       0: aload_0
       1: getfield      #2                  // Field zookeeperSessionTimeoutMs:I
       4: ireturn

  public int getZooKeeperCacheExpirySeconds();
    Code:
       0: aload_0
       1: getfield      #3                  // Field zooKeeperCacheExpirySeconds:I
       4: ireturn

  public java.lang.String getBrokerServiceURL();
    Code:
       0: aload_0
       1: getfield      #106                // Field brokerServiceURL:Ljava/lang/String;
       4: areturn

  public java.lang.String getBrokerServiceURLTLS();
    Code:
       0: aload_0
       1: getfield      #107                // Field brokerServiceURLTLS:Ljava/lang/String;
       4: areturn

  public java.lang.String getBrokerWebServiceURL();
    Code:
       0: aload_0
       1: getfield      #108                // Field brokerWebServiceURL:Ljava/lang/String;
       4: areturn

  public java.lang.String getBrokerWebServiceURLTLS();
    Code:
       0: aload_0
       1: getfield      #109                // Field brokerWebServiceURLTLS:Ljava/lang/String;
       4: areturn

  public java.lang.String getFunctionWorkerWebServiceURL();
    Code:
       0: aload_0
       1: getfield      #110                // Field functionWorkerWebServiceURL:Ljava/lang/String;
       4: areturn

  public java.lang.String getFunctionWorkerWebServiceURLTLS();
    Code:
       0: aload_0
       1: getfield      #111                // Field functionWorkerWebServiceURLTLS:Ljava/lang/String;
       4: areturn

  public java.lang.String getBindAddress();
    Code:
       0: aload_0
       1: getfield      #5                  // Field bindAddress:Ljava/lang/String;
       4: areturn

  public java.lang.String getAdvertisedAddress();
    Code:
       0: aload_0
       1: getfield      #112                // Field advertisedAddress:Ljava/lang/String;
       4: areturn

  public boolean isHaProxyProtocolEnabled();
    Code:
       0: aload_0
       1: getfield      #113                // Field haProxyProtocolEnabled:Z
       4: ireturn

  public java.lang.String getNarExtractionDirectory();
    Code:
       0: aload_0
       1: getfield      #14                 // Field narExtractionDirectory:Ljava/lang/String;
       4: areturn

  public java.util.Optional<java.lang.Integer> getProxyLogLevel();
    Code:
       0: aload_0
       1: getfield      #15                 // Field proxyLogLevel:Ljava/util/Optional;
       4: areturn

  public java.lang.String getStatusFilePath();
    Code:
       0: aload_0
       1: getfield      #114                // Field statusFilePath:Ljava/lang/String;
       4: areturn

  public java.util.Set<java.lang.String> getSuperUserRoles();
    Code:
       0: aload_0
       1: getfield      #17                 // Field superUserRoles:Ljava/util/Set;
       4: areturn

  public boolean isAuthenticationEnabled();
    Code:
       0: aload_0
       1: getfield      #18                 // Field authenticationEnabled:Z
       4: ireturn

  public java.util.Set<java.lang.String> getAuthenticationProviders();
    Code:
       0: aload_0
       1: getfield      #19                 // Field authenticationProviders:Ljava/util/Set;
       4: areturn

  public boolean isAuthorizationEnabled();
    Code:
       0: aload_0
       1: getfield      #20                 // Field authorizationEnabled:Z
       4: ireturn

  public java.lang.String getAuthorizationProvider();
    Code:
       0: aload_0
       1: getfield      #23                 // Field authorizationProvider:Ljava/lang/String;
       4: areturn

  public boolean isForwardAuthorizationCredentials();
    Code:
       0: aload_0
       1: getfield      #24                 // Field forwardAuthorizationCredentials:Z
       4: ireturn

  public boolean isAuthenticateMetricsEndpoint();
    Code:
       0: aload_0
       1: getfield      #25                 // Field authenticateMetricsEndpoint:Z
       4: ireturn

  public java.lang.String getSaslJaasClientAllowedIds();
    Code:
       0: aload_0
       1: getfield      #28                 // Field saslJaasClientAllowedIds:Ljava/lang/String;
       4: areturn

  public java.lang.String getSaslJaasServerSectionName();
    Code:
       0: aload_0
       1: getfield      #30                 // Field saslJaasServerSectionName:Ljava/lang/String;
       4: areturn

  public java.lang.String getKinitCommand();
    Code:
       0: aload_0
       1: getfield      #32                 // Field kinitCommand:Ljava/lang/String;
       4: areturn

  public int getMaxConcurrentInboundConnections();
    Code:
       0: aload_0
       1: getfield      #33                 // Field maxConcurrentInboundConnections:I
       4: ireturn

  public int getMaxConcurrentLookupRequests();
    Code:
       0: aload_0
       1: getfield      #35                 // Field maxConcurrentLookupRequests:I
       4: ireturn

  public java.lang.String getBrokerClientAuthenticationPlugin();
    Code:
       0: aload_0
       1: getfield      #115                // Field brokerClientAuthenticationPlugin:Ljava/lang/String;
       4: areturn

  public java.lang.String getBrokerClientAuthenticationParameters();
    Code:
       0: aload_0
       1: getfield      #116                // Field brokerClientAuthenticationParameters:Ljava/lang/String;
       4: areturn

  public java.lang.String getBrokerClientTrustCertsFilePath();
    Code:
       0: aload_0
       1: getfield      #117                // Field brokerClientTrustCertsFilePath:Ljava/lang/String;
       4: areturn

  public boolean isTlsEnabledWithBroker();
    Code:
       0: aload_0
       1: getfield      #36                 // Field tlsEnabledWithBroker:Z
       4: ireturn

  public java.lang.String getAnonymousUserRole();
    Code:
       0: aload_0
       1: getfield      #37                 // Field anonymousUserRole:Ljava/lang/String;
       4: areturn

  public boolean isTlsEnabledInProxy();
    Code:
       0: aload_0
       1: getfield      #38                 // Field tlsEnabledInProxy:Z
       4: ireturn

  public long getTlsCertRefreshCheckDurationSec();
    Code:
       0: aload_0
       1: getfield      #41                 // Field tlsCertRefreshCheckDurationSec:J
       4: lreturn

  public java.lang.String getTlsCertificateFilePath();
    Code:
       0: aload_0
       1: getfield      #118                // Field tlsCertificateFilePath:Ljava/lang/String;
       4: areturn

  public java.lang.String getTlsKeyFilePath();
    Code:
       0: aload_0
       1: getfield      #119                // Field tlsKeyFilePath:Ljava/lang/String;
       4: areturn

  public java.lang.String getTlsTrustCertsFilePath();
    Code:
       0: aload_0
       1: getfield      #120                // Field tlsTrustCertsFilePath:Ljava/lang/String;
       4: areturn

  public boolean isTlsAllowInsecureConnection();
    Code:
       0: aload_0
       1: getfield      #42                 // Field tlsAllowInsecureConnection:Z
       4: ireturn

  public boolean isTlsHostnameVerificationEnabled();
    Code:
       0: aload_0
       1: getfield      #43                 // Field tlsHostnameVerificationEnabled:Z
       4: ireturn

  public java.util.Set<java.lang.String> getTlsProtocols();
    Code:
       0: aload_0
       1: getfield      #44                 // Field tlsProtocols:Ljava/util/Set;
       4: areturn

  public java.util.Set<java.lang.String> getTlsCiphers();
    Code:
       0: aload_0
       1: getfield      #45                 // Field tlsCiphers:Ljava/util/Set;
       4: areturn

  public boolean isTlsRequireTrustedClientCertOnConnect();
    Code:
       0: aload_0
       1: getfield      #46                 // Field tlsRequireTrustedClientCertOnConnect:Z
       4: ireturn

  public boolean isTlsEnabledWithKeyStore();
    Code:
       0: aload_0
       1: getfield      #47                 // Field tlsEnabledWithKeyStore:Z
       4: ireturn

  public java.lang.String getTlsProvider();
    Code:
       0: aload_0
       1: getfield      #48                 // Field tlsProvider:Ljava/lang/String;
       4: areturn

  public java.lang.String getTlsKeyStoreType();
    Code:
       0: aload_0
       1: getfield      #50                 // Field tlsKeyStoreType:Ljava/lang/String;
       4: areturn

  public java.lang.String getTlsKeyStore();
    Code:
       0: aload_0
       1: getfield      #51                 // Field tlsKeyStore:Ljava/lang/String;
       4: areturn

  public java.lang.String getTlsKeyStorePassword();
    Code:
       0: aload_0
       1: getfield      #52                 // Field tlsKeyStorePassword:Ljava/lang/String;
       4: areturn

  public java.lang.String getTlsTrustStoreType();
    Code:
       0: aload_0
       1: getfield      #53                 // Field tlsTrustStoreType:Ljava/lang/String;
       4: areturn

  public java.lang.String getTlsTrustStore();
    Code:
       0: aload_0
       1: getfield      #54                 // Field tlsTrustStore:Ljava/lang/String;
       4: areturn

  public java.lang.String getTlsTrustStorePassword();
    Code:
       0: aload_0
       1: getfield      #55                 // Field tlsTrustStorePassword:Ljava/lang/String;
       4: areturn

  public boolean isBrokerClientTlsEnabledWithKeyStore();
    Code:
       0: aload_0
       1: getfield      #56                 // Field brokerClientTlsEnabledWithKeyStore:Z
       4: ireturn

  public java.lang.String getBrokerClientSslProvider();
    Code:
       0: aload_0
       1: getfield      #57                 // Field brokerClientSslProvider:Ljava/lang/String;
       4: areturn

  public java.lang.String getBrokerClientTlsTrustStoreType();
    Code:
       0: aload_0
       1: getfield      #58                 // Field brokerClientTlsTrustStoreType:Ljava/lang/String;
       4: areturn

  public java.lang.String getBrokerClientTlsTrustStore();
    Code:
       0: aload_0
       1: getfield      #59                 // Field brokerClientTlsTrustStore:Ljava/lang/String;
       4: areturn

  public java.lang.String getBrokerClientTlsTrustStorePassword();
    Code:
       0: aload_0
       1: getfield      #60                 // Field brokerClientTlsTrustStorePassword:Ljava/lang/String;
       4: areturn

  public java.util.Set<java.lang.String> getBrokerClientTlsCiphers();
    Code:
       0: aload_0
       1: getfield      #61                 // Field brokerClientTlsCiphers:Ljava/util/Set;
       4: areturn

  public java.util.Set<java.lang.String> getBrokerClientTlsProtocols();
    Code:
       0: aload_0
       1: getfield      #62                 // Field brokerClientTlsProtocols:Ljava/util/Set;
       4: areturn

  public java.util.Set<org.apache.pulsar.proxy.server.ProxyConfiguration$HttpReverseProxyConfig> getHttpReverseProxyConfigs();
    Code:
       0: aload_0
       1: getfield      #64                 // Field httpReverseProxyConfigs:Ljava/util/Set;
       4: areturn

  public int getHttpOutputBufferSize();
    Code:
       0: aload_0
       1: getfield      #66                 // Field httpOutputBufferSize:I
       4: ireturn

  public int getHttpProxyTimeout();
    Code:
       0: aload_0
       1: getfield      #68                 // Field httpProxyTimeout:I
       4: ireturn

  public int getHttpNumThreads();
    Code:
       0: aload_0
       1: getfield      #72                 // Field httpNumThreads:I
       4: ireturn

  public java.lang.String getProxyAdditionalServletDirectory();
    Code:
       0: aload_0
       1: getfield      #74                 // Field proxyAdditionalServletDirectory:Ljava/lang/String;
       4: areturn

  public java.lang.String getAdditionalServletDirectory();
    Code:
       0: aload_0
       1: getfield      #75                 // Field additionalServletDirectory:Ljava/lang/String;
       4: areturn

  public java.util.Set<java.lang.String> getProxyAdditionalServlets();
    Code:
       0: aload_0
       1: getfield      #76                 // Field proxyAdditionalServlets:Ljava/util/Set;
       4: areturn

  public java.util.Set<java.lang.String> getAdditionalServlets();
    Code:
       0: aload_0
       1: getfield      #77                 // Field additionalServlets:Ljava/util/Set;
       4: areturn

  public boolean isHttpRequestsLimitEnabled();
    Code:
       0: aload_0
       1: getfield      #78                 // Field httpRequestsLimitEnabled:Z
       4: ireturn

  public double getHttpRequestsMaxPerSecond();
    Code:
       0: aload_0
       1: getfield      #81                 // Field httpRequestsMaxPerSecond:D
       4: dreturn

  public boolean isWebSocketServiceEnabled();
    Code:
       0: aload_0
       1: getfield      #82                 // Field webSocketServiceEnabled:Z
       4: ireturn

  public java.lang.String getClusterName();
    Code:
       0: aload_0
       1: getfield      #121                // Field clusterName:Ljava/lang/String;
       4: areturn

  public void setZookeeperServers(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #103                // Field zookeeperServers:Ljava/lang/String;
       5: return

  public void setConfigurationStoreServers(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #104                // Field configurationStoreServers:Ljava/lang/String;
       5: return

  public void setGlobalZookeeperServers(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #105                // Field globalZookeeperServers:Ljava/lang/String;
       5: return

  public void setZookeeperSessionTimeoutMs(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field zookeeperSessionTimeoutMs:I
       5: return

  public void setZooKeeperCacheExpirySeconds(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field zooKeeperCacheExpirySeconds:I
       5: return

  public void setBrokerServiceURL(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #106                // Field brokerServiceURL:Ljava/lang/String;
       5: return

  public void setBrokerServiceURLTLS(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #107                // Field brokerServiceURLTLS:Ljava/lang/String;
       5: return

  public void setBrokerWebServiceURL(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #108                // Field brokerWebServiceURL:Ljava/lang/String;
       5: return

  public void setBrokerWebServiceURLTLS(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #109                // Field brokerWebServiceURLTLS:Ljava/lang/String;
       5: return

  public void setFunctionWorkerWebServiceURL(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #110                // Field functionWorkerWebServiceURL:Ljava/lang/String;
       5: return

  public void setFunctionWorkerWebServiceURLTLS(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #111                // Field functionWorkerWebServiceURLTLS:Ljava/lang/String;
       5: return

  public void setBindAddress(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field bindAddress:Ljava/lang/String;
       5: return

  public void setAdvertisedAddress(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #112                // Field advertisedAddress:Ljava/lang/String;
       5: return

  public void setHaProxyProtocolEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #113                // Field haProxyProtocolEnabled:Z
       5: return

  public void setServicePort(java.util.Optional<java.lang.Integer>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field servicePort:Ljava/util/Optional;
       5: return

  public void setServicePortTls(java.util.Optional<java.lang.Integer>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field servicePortTls:Ljava/util/Optional;
       5: return

  public void setWebServicePort(java.util.Optional<java.lang.Integer>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field webServicePort:Ljava/util/Optional;
       5: return

  public void setWebServicePortTls(java.util.Optional<java.lang.Integer>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field webServicePortTls:Ljava/util/Optional;
       5: return

  public void setNarExtractionDirectory(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field narExtractionDirectory:Ljava/lang/String;
       5: return

  public void setProxyLogLevel(java.util.Optional<java.lang.Integer>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field proxyLogLevel:Ljava/util/Optional;
       5: return

  public void setStatusFilePath(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #114                // Field statusFilePath:Ljava/lang/String;
       5: return

  public void setSuperUserRoles(java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field superUserRoles:Ljava/util/Set;
       5: return

  public void setAuthenticationEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #18                 // Field authenticationEnabled:Z
       5: return

  public void setAuthenticationProviders(java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field authenticationProviders:Ljava/util/Set;
       5: return

  public void setAuthorizationEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #20                 // Field authorizationEnabled:Z
       5: return

  public void setAuthorizationProvider(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field authorizationProvider:Ljava/lang/String;
       5: return

  public void setForwardAuthorizationCredentials(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #24                 // Field forwardAuthorizationCredentials:Z
       5: return

  public void setAuthenticateMetricsEndpoint(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #25                 // Field authenticateMetricsEndpoint:Z
       5: return

  public void setSaslJaasClientAllowedIds(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #28                 // Field saslJaasClientAllowedIds:Ljava/lang/String;
       5: return

  public void setSaslJaasServerSectionName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #30                 // Field saslJaasServerSectionName:Ljava/lang/String;
       5: return

  public void setKinitCommand(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #32                 // Field kinitCommand:Ljava/lang/String;
       5: return

  public void setMaxConcurrentInboundConnections(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #33                 // Field maxConcurrentInboundConnections:I
       5: return

  public void setMaxConcurrentLookupRequests(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #35                 // Field maxConcurrentLookupRequests:I
       5: return

  public void setBrokerClientAuthenticationPlugin(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #115                // Field brokerClientAuthenticationPlugin:Ljava/lang/String;
       5: return

  public void setBrokerClientAuthenticationParameters(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #116                // Field brokerClientAuthenticationParameters:Ljava/lang/String;
       5: return

  public void setBrokerClientTrustCertsFilePath(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #117                // Field brokerClientTrustCertsFilePath:Ljava/lang/String;
       5: return

  public void setTlsEnabledWithBroker(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #36                 // Field tlsEnabledWithBroker:Z
       5: return

  public void setAnonymousUserRole(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #37                 // Field anonymousUserRole:Ljava/lang/String;
       5: return

  public void setTlsEnabledInProxy(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #38                 // Field tlsEnabledInProxy:Z
       5: return

  public void setTlsCertRefreshCheckDurationSec(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #41                 // Field tlsCertRefreshCheckDurationSec:J
       5: return

  public void setTlsCertificateFilePath(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #118                // Field tlsCertificateFilePath:Ljava/lang/String;
       5: return

  public void setTlsKeyFilePath(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #119                // Field tlsKeyFilePath:Ljava/lang/String;
       5: return

  public void setTlsTrustCertsFilePath(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #120                // Field tlsTrustCertsFilePath:Ljava/lang/String;
       5: return

  public void setTlsAllowInsecureConnection(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #42                 // Field tlsAllowInsecureConnection:Z
       5: return

  public void setTlsHostnameVerificationEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #43                 // Field tlsHostnameVerificationEnabled:Z
       5: return

  public void setTlsProtocols(java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #44                 // Field tlsProtocols:Ljava/util/Set;
       5: return

  public void setTlsCiphers(java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #45                 // Field tlsCiphers:Ljava/util/Set;
       5: return

  public void setTlsRequireTrustedClientCertOnConnect(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #46                 // Field tlsRequireTrustedClientCertOnConnect:Z
       5: return

  public void setTlsEnabledWithKeyStore(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #47                 // Field tlsEnabledWithKeyStore:Z
       5: return

  public void setTlsProvider(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #48                 // Field tlsProvider:Ljava/lang/String;
       5: return

  public void setTlsKeyStoreType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #50                 // Field tlsKeyStoreType:Ljava/lang/String;
       5: return

  public void setTlsKeyStore(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #51                 // Field tlsKeyStore:Ljava/lang/String;
       5: return

  public void setTlsKeyStorePassword(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #52                 // Field tlsKeyStorePassword:Ljava/lang/String;
       5: return

  public void setTlsTrustStoreType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #53                 // Field tlsTrustStoreType:Ljava/lang/String;
       5: return

  public void setTlsTrustStore(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #54                 // Field tlsTrustStore:Ljava/lang/String;
       5: return

  public void setTlsTrustStorePassword(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #55                 // Field tlsTrustStorePassword:Ljava/lang/String;
       5: return

  public void setBrokerClientTlsEnabledWithKeyStore(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #56                 // Field brokerClientTlsEnabledWithKeyStore:Z
       5: return

  public void setBrokerClientSslProvider(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #57                 // Field brokerClientSslProvider:Ljava/lang/String;
       5: return

  public void setBrokerClientTlsTrustStoreType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #58                 // Field brokerClientTlsTrustStoreType:Ljava/lang/String;
       5: return

  public void setBrokerClientTlsTrustStore(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #59                 // Field brokerClientTlsTrustStore:Ljava/lang/String;
       5: return

  public void setBrokerClientTlsTrustStorePassword(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #60                 // Field brokerClientTlsTrustStorePassword:Ljava/lang/String;
       5: return

  public void setBrokerClientTlsCiphers(java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #61                 // Field brokerClientTlsCiphers:Ljava/util/Set;
       5: return

  public void setBrokerClientTlsProtocols(java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #62                 // Field brokerClientTlsProtocols:Ljava/util/Set;
       5: return

  public void setHttpReverseProxyConfigs(java.util.Set<org.apache.pulsar.proxy.server.ProxyConfiguration$HttpReverseProxyConfig>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #64                 // Field httpReverseProxyConfigs:Ljava/util/Set;
       5: return

  public void setHttpOutputBufferSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #66                 // Field httpOutputBufferSize:I
       5: return

  public void setHttpProxyTimeout(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #68                 // Field httpProxyTimeout:I
       5: return

  public void setHttpNumThreads(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #72                 // Field httpNumThreads:I
       5: return

  public void setProxyAdditionalServletDirectory(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #74                 // Field proxyAdditionalServletDirectory:Ljava/lang/String;
       5: return

  public void setAdditionalServletDirectory(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #75                 // Field additionalServletDirectory:Ljava/lang/String;
       5: return

  public void setProxyAdditionalServlets(java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #76                 // Field proxyAdditionalServlets:Ljava/util/Set;
       5: return

  public void setAdditionalServlets(java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #77                 // Field additionalServlets:Ljava/util/Set;
       5: return

  public void setHttpRequestsLimitEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #78                 // Field httpRequestsLimitEnabled:Z
       5: return

  public void setHttpRequestsMaxPerSecond(double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #81                 // Field httpRequestsMaxPerSecond:D
       5: return

  public void setWebSocketServiceEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #82                 // Field webSocketServiceEnabled:Z
       5: return

  public void setClusterName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #121                // Field clusterName:Ljava/lang/String;
       5: return

  private void lambda$setProperties$4(java.util.Properties, java.util.Map$Entry);
    Code:
       0: aload_2
       1: invokeinterface #122,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
       6: checkcast     #123                // class java/util/List
       9: invokeinterface #124,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      14: invokedynamic #125,  0            // InvokeDynamic #4:apply:()Ljava/util/function/Function;
      19: invokedynamic #126,  0            // InvokeDynamic #5:apply:()Ljava/util/function/Function;
      24: invokestatic  #127                // Method java/util/stream/Collectors.toMap:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
      27: invokeinterface #98,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      32: checkcast     #99                 // class java/util/Map
      35: astore_3
      36: aload_3
      37: ldc           #128                // String path
      39: invokeinterface #129,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      44: ifne          73
      47: new           #130                // class java/lang/IllegalArgumentException
      50: dup
      51: ldc           #131                // String httpReverseProxy.%s.path must be specified exactly once
      53: iconst_1
      54: anewarray     #132                // class java/lang/Object
      57: dup
      58: iconst_0
      59: aload_2
      60: invokeinterface #133,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      65: aastore
      66: invokestatic  #134                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      69: invokespecial #135                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      72: athrow
      73: aload_3
      74: ldc           #136                // String proxyTo
      76: invokeinterface #129,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      81: ifne          110
      84: new           #130                // class java/lang/IllegalArgumentException
      87: dup
      88: ldc           #137                // String httpReverseProxy.%s.proxyTo must be specified exactly once
      90: iconst_1
      91: anewarray     #132                // class java/lang/Object
      94: dup
      95: iconst_0
      96: aload_2
      97: invokeinterface #133,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     102: aastore
     103: invokestatic  #134                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     106: invokespecial #135                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     109: athrow
     110: aload_0
     111: getfield      #64                 // Field httpReverseProxyConfigs:Ljava/util/Set;
     114: new           #138                // class org/apache/pulsar/proxy/server/ProxyConfiguration$HttpReverseProxyConfig
     117: dup
     118: aload_2
     119: invokeinterface #133,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     124: checkcast     #139                // class java/lang/String
     127: aload_1
     128: aload_3
     129: ldc           #128                // String path
     131: invokeinterface #140,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     136: checkcast     #139                // class java/lang/String
     139: invokevirtual #141                // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
     142: aload_1
     143: aload_3
     144: ldc           #136                // String proxyTo
     146: invokeinterface #140,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     151: checkcast     #139                // class java/lang/String
     154: invokevirtual #141                // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
     157: invokespecial #142                // Method org/apache/pulsar/proxy/server/ProxyConfiguration$HttpReverseProxyConfig."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     160: invokeinterface #143,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     165: pop
     166: return

  private static java.lang.String lambda$null$3(java.util.regex.Matcher);
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #144                // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
       5: areturn

  private static java.lang.String lambda$null$2(java.util.regex.Matcher);
    Code:
       0: aload_0
       1: iconst_2
       2: invokevirtual #144                // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
       5: areturn

  private static java.lang.String lambda$setProperties$1(java.util.regex.Matcher);
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #144                // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
       5: areturn

  private static java.util.regex.Matcher lambda$setProperties$0(java.util.regex.Pattern, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #145                // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       5: areturn
}
