Compiled from "IntRectangle.scala"
public interface de.sciss.lucre.geom.IntRectangleLike extends de.sciss.lucre.geom.QueryShape<java.lang.Object, de.sciss.lucre.geom.IntPoint2DLike, de.sciss.lucre.geom.IntSquare> {
  public abstract int left();

  public abstract int top();

  public abstract int width();

  public abstract int height();

  public static int bottom$(de.sciss.lucre.geom.IntRectangleLike);
    Code:
       0: aload_0
       1: invokespecial #22                 // InterfaceMethod bottom:()I
       4: ireturn

  public default int bottom();
    Code:
       0: aload_0
       1: invokeinterface #25,  1           // InterfaceMethod top:()I
       6: aload_0
       7: invokeinterface #27,  1           // InterfaceMethod height:()I
      12: iconst_1
      13: isub
      14: iadd
      15: ireturn

  public static int right$(de.sciss.lucre.geom.IntRectangleLike);
    Code:
       0: aload_0
       1: invokespecial #32                 // InterfaceMethod right:()I
       4: ireturn

  public default int right();
    Code:
       0: aload_0
       1: invokeinterface #34,  1           // InterfaceMethod left:()I
       6: aload_0
       7: invokeinterface #36,  1           // InterfaceMethod width:()I
      12: iconst_1
      13: isub
      14: iadd
      15: ireturn

  public static boolean containsP$(de.sciss.lucre.geom.IntRectangleLike, de.sciss.lucre.geom.IntPoint2DLike);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #43                 // InterfaceMethod containsP:(Lde/sciss/lucre/geom/IntPoint2DLike;)Z
       5: ireturn

  public default boolean containsP(de.sciss.lucre.geom.IntPoint2DLike);
    Code:
       0: aload_1
       1: invokeinterface #49,  1           // InterfaceMethod de/sciss/lucre/geom/IntPoint2DLike.x:()I
       6: istore_2
       7: aload_1
       8: invokeinterface #52,  1           // InterfaceMethod de/sciss/lucre/geom/IntPoint2DLike.y:()I
      13: istore_3
      14: aload_0
      15: invokeinterface #34,  1           // InterfaceMethod left:()I
      20: iload_2
      21: if_icmpgt     58
      24: aload_0
      25: invokeinterface #32,  1           // InterfaceMethod right:()I
      30: iload_2
      31: if_icmplt     58
      34: aload_0
      35: invokeinterface #25,  1           // InterfaceMethod top:()I
      40: iload_3
      41: if_icmpgt     58
      44: aload_0
      45: invokeinterface #22,  1           // InterfaceMethod bottom:()I
      50: iload_3
      51: if_icmplt     58
      54: iconst_1
      55: goto          59
      58: iconst_0
      59: ireturn

  public static long overlapArea$(de.sciss.lucre.geom.IntRectangleLike, de.sciss.lucre.geom.IntSquare);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #62                 // InterfaceMethod overlapArea:(Lde/sciss/lucre/geom/IntSquare;)J
       5: lreturn

  public default long overlapArea(de.sciss.lucre.geom.IntSquare);
    Code:
       0: getstatic     #69                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
       3: aload_1
       4: invokevirtual #72                 // Method de/sciss/lucre/geom/IntSquare.left:()I
       7: aload_0
       8: invokeinterface #34,  1           // InterfaceMethod left:()I
      13: invokevirtual #76                 // Method scala/math/package$.max:(II)I
      16: i2l
      17: lstore_2
      18: getstatic     #69                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
      21: aload_1
      22: invokevirtual #77                 // Method de/sciss/lucre/geom/IntSquare.right:()I
      25: aload_0
      26: invokeinterface #32,  1           // InterfaceMethod right:()I
      31: invokevirtual #80                 // Method scala/math/package$.min:(II)I
      34: i2l
      35: lstore        4
      37: lload         4
      39: lload_2
      40: lsub
      41: lconst_1
      42: ladd
      43: lstore        6
      45: lload         6
      47: lconst_0
      48: lcmp
      49: ifgt          54
      52: lconst_0
      53: lreturn
      54: getstatic     #69                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
      57: aload_1
      58: invokevirtual #81                 // Method de/sciss/lucre/geom/IntSquare.top:()I
      61: aload_0
      62: invokeinterface #25,  1           // InterfaceMethod top:()I
      67: invokevirtual #76                 // Method scala/math/package$.max:(II)I
      70: i2l
      71: lstore        8
      73: getstatic     #69                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
      76: aload_1
      77: invokevirtual #82                 // Method de/sciss/lucre/geom/IntSquare.bottom:()I
      80: aload_0
      81: invokeinterface #22,  1           // InterfaceMethod bottom:()I
      86: invokevirtual #80                 // Method scala/math/package$.min:(II)I
      89: i2l
      90: lstore        10
      92: lload         10
      94: lload         8
      96: lsub
      97: lconst_1
      98: ladd
      99: lstore        12
     101: lload         12
     103: lconst_0
     104: lcmp
     105: ifgt          110
     108: lconst_0
     109: lreturn
     110: lload         6
     112: lload         12
     114: lmul
     115: lreturn

  public static boolean isAreaGreater$(de.sciss.lucre.geom.IntRectangleLike, de.sciss.lucre.geom.IntSquare, long);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: invokespecial #96                 // InterfaceMethod isAreaGreater:(Lde/sciss/lucre/geom/IntSquare;J)Z
       6: ireturn

  public default boolean isAreaGreater(de.sciss.lucre.geom.IntSquare, long);
    Code:
       0: aload_1
       1: invokevirtual #100                // Method de/sciss/lucre/geom/IntSquare.area:()J
       4: lload_2
       5: lcmp
       6: ifle          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public static boolean isAreaNonEmpty$(de.sciss.lucre.geom.IntRectangleLike, long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #106                // InterfaceMethod isAreaNonEmpty:(J)Z
       5: ireturn

  public default boolean isAreaNonEmpty(long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifle          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: ireturn

  public static void $init$(de.sciss.lucre.geom.IntRectangleLike);
    Code:
       0: return
}
