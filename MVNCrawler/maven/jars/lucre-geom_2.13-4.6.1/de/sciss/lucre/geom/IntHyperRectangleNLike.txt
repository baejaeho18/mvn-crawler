Compiled from "IntHyperRectangleN.scala"
public interface de.sciss.lucre.geom.IntHyperRectangleNLike extends de.sciss.lucre.geom.QueryShape<scala.math.BigInt, de.sciss.lucre.geom.IntPointNLike, de.sciss.lucre.geom.IntHyperCubeN> {
  public abstract int dim();

  public abstract int min(int);

  public abstract int max(int);

  public static boolean containsP$(de.sciss.lucre.geom.IntHyperRectangleNLike, de.sciss.lucre.geom.IntPointNLike);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #24                 // InterfaceMethod containsP:(Lde/sciss/lucre/geom/IntPointNLike;)Z
       5: ireturn

  public default boolean containsP(de.sciss.lucre.geom.IntPointNLike);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_0
       4: invokeinterface #28,  1           // InterfaceMethod dim:()I
       9: if_icmpge     50
      12: aload_1
      13: iload_2
      14: invokeinterface #33,  2           // InterfaceMethod de/sciss/lucre/geom/IntPointNLike.apply:(I)I
      19: istore_3
      20: aload_0
      21: iload_2
      22: invokeinterface #35,  2           // InterfaceMethod min:(I)I
      27: iload_3
      28: if_icmpgt     42
      31: aload_0
      32: iload_2
      33: invokeinterface #37,  2           // InterfaceMethod max:(I)I
      38: iload_3
      39: if_icmpge     44
      42: iconst_0
      43: ireturn
      44: iinc          2, 1
      47: goto          2
      50: iconst_1
      51: ireturn

  public static scala.math.BigInt overlapArea$(de.sciss.lucre.geom.IntHyperRectangleNLike, de.sciss.lucre.geom.IntHyperCubeN);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #48                 // InterfaceMethod overlapArea:(Lde/sciss/lucre/geom/IntHyperCubeN;)Lscala/math/BigInt;
       5: areturn

  public default scala.math.BigInt overlapArea(de.sciss.lucre.geom.IntHyperCubeN);
    Code:
       0: aload_1
       1: invokevirtual #54                 // Method de/sciss/lucre/geom/IntHyperCubeN.extent:()I
       4: istore_2
       5: iload_2
       6: iconst_1
       7: isub
       8: istore_3
       9: getstatic     #60                 // Field de/sciss/lucre/geom/Space$.MODULE$:Lde/sciss/lucre/geom/Space$;
      12: invokevirtual #64                 // Method de/sciss/lucre/geom/Space$.bigOne:()Lscala/math/BigInt;
      15: astore        4
      17: iconst_0
      18: istore        5
      20: iload         5
      22: aload_0
      23: invokeinterface #28,  1           // InterfaceMethod dim:()I
      28: if_icmpge     125
      31: aload_1
      32: iload         5
      34: invokevirtual #67                 // Method de/sciss/lucre/geom/IntHyperCubeN.center:(I)I
      37: istore        6
      39: getstatic     #72                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
      42: aload_0
      43: iload         5
      45: invokeinterface #35,  2           // InterfaceMethod min:(I)I
      50: iload         6
      52: iload_2
      53: isub
      54: invokevirtual #75                 // Method scala/math/package$.max:(II)I
      57: i2l
      58: lstore        7
      60: getstatic     #72                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
      63: aload_0
      64: iload         5
      66: invokeinterface #37,  2           // InterfaceMethod max:(I)I
      71: iload         6
      73: iload_3
      74: iadd
      75: invokevirtual #77                 // Method scala/math/package$.min:(II)I
      78: i2l
      79: lstore        9
      81: lload         9
      83: lload         7
      85: lsub
      86: lconst_1
      87: ladd
      88: lstore        11
      90: lload         11
      92: lconst_0
      93: lcmp
      94: ifgt          104
      97: getstatic     #60                 // Field de/sciss/lucre/geom/Space$.MODULE$:Lde/sciss/lucre/geom/Space$;
     100: invokevirtual #80                 // Method de/sciss/lucre/geom/Space$.bigZero:()Lscala/math/BigInt;
     103: areturn
     104: aload         4
     106: getstatic     #85                 // Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
     109: lload         11
     111: invokevirtual #89                 // Method scala/math/BigInt$.long2bigInt:(J)Lscala/math/BigInt;
     114: invokevirtual #95                 // Method scala/math/BigInt.$times:(Lscala/math/BigInt;)Lscala/math/BigInt;
     117: astore        4
     119: iinc          5, 1
     122: goto          20
     125: aload         4
     127: areturn

  public static boolean isAreaGreater$(de.sciss.lucre.geom.IntHyperRectangleNLike, de.sciss.lucre.geom.IntHyperCubeN, scala.math.BigInt);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #111                // InterfaceMethod isAreaGreater:(Lde/sciss/lucre/geom/IntHyperCubeN;Lscala/math/BigInt;)Z
       6: ireturn

  public default boolean isAreaGreater(de.sciss.lucre.geom.IntHyperCubeN, scala.math.BigInt);
    Code:
       0: aload_1
       1: invokevirtual #114                // Method de/sciss/lucre/geom/IntHyperCubeN.area:()Lscala/math/BigInt;
       4: aload_2
       5: invokevirtual #118                // Method scala/math/BigInt.$greater:(Ljava/lang/Object;)Z
       8: ireturn

  public static boolean isAreaNonEmpty$(de.sciss.lucre.geom.IntHyperRectangleNLike, scala.math.BigInt);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #124                // InterfaceMethod isAreaNonEmpty:(Lscala/math/BigInt;)Z
       5: ireturn

  public default boolean isAreaNonEmpty(scala.math.BigInt);
    Code:
       0: aload_1
       1: getstatic     #60                 // Field de/sciss/lucre/geom/Space$.MODULE$:Lde/sciss/lucre/geom/Space$;
       4: invokevirtual #80                 // Method de/sciss/lucre/geom/Space$.bigZero:()Lscala/math/BigInt;
       7: invokevirtual #118                // Method scala/math/BigInt.$greater:(Ljava/lang/Object;)Z
      10: ireturn

  public static void $init$(de.sciss.lucre.geom.IntHyperRectangleNLike);
    Code:
       0: return
}
