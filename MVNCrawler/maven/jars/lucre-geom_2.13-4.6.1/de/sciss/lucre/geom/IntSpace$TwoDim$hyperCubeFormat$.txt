Compiled from "IntSpace.scala"
public class de.sciss.lucre.geom.IntSpace$TwoDim$hyperCubeFormat$ implements de.sciss.serial.ConstFormat<de.sciss.lucre.geom.IntSquare> {
  public static final de.sciss.lucre.geom.IntSpace$TwoDim$hyperCubeFormat$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class de/sciss/lucre/geom/IntSpace$TwoDim$hyperCubeFormat$
       3: dup
       4: invokespecial #21                 // Method "<init>":()V
       7: putstatic     #23                 // Field MODULE$:Lde/sciss/lucre/geom/IntSpace$TwoDim$hyperCubeFormat$;
      10: getstatic     #23                 // Field MODULE$:Lde/sciss/lucre/geom/IntSpace$TwoDim$hyperCubeFormat$;
      13: invokestatic  #29                 // InterfaceMethod de/sciss/serial/ConstReader.$init$:(Lde/sciss/serial/ConstReader;)V
      16: return

  public final java.lang.Object readT(de.sciss.serial.DataInput, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #37                 // InterfaceMethod de/sciss/serial/ConstReader.readT$:(Lde/sciss/serial/ConstReader;Lde/sciss/serial/DataInput;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public de.sciss.lucre.geom.IntSquare read(de.sciss.serial.DataInput);
    Code:
       0: aload_1
       1: invokeinterface #48,  1           // InterfaceMethod de/sciss/serial/DataInput.readInt:()I
       6: istore_2
       7: aload_1
       8: invokeinterface #48,  1           // InterfaceMethod de/sciss/serial/DataInput.readInt:()I
      13: istore_3
      14: aload_1
      15: invokeinterface #48,  1           // InterfaceMethod de/sciss/serial/DataInput.readInt:()I
      20: istore        4
      22: new           #50                 // class de/sciss/lucre/geom/IntSquare
      25: dup
      26: iload_2
      27: iload_3
      28: iload         4
      30: invokespecial #53                 // Method de/sciss/lucre/geom/IntSquare."<init>":(III)V
      33: areturn

  public void write(de.sciss.lucre.geom.IntSquare, de.sciss.serial.DataOutput);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #63                 // Method de/sciss/lucre/geom/IntSquare.cx:()I
       5: invokeinterface #69,  2           // InterfaceMethod de/sciss/serial/DataOutput.writeInt:(I)V
      10: aload_2
      11: aload_1
      12: invokevirtual #71                 // Method de/sciss/lucre/geom/IntSquare.cy:()I
      15: invokeinterface #69,  2           // InterfaceMethod de/sciss/serial/DataOutput.writeInt:(I)V
      20: aload_2
      21: aload_1
      22: invokevirtual #73                 // Method de/sciss/lucre/geom/IntSquare.extent:()I
      25: invokeinterface #69,  2           // InterfaceMethod de/sciss/serial/DataOutput.writeInt:(I)V
      30: return

  public void write(java.lang.Object, de.sciss.serial.DataOutput);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #50                 // class de/sciss/lucre/geom/IntSquare
       5: aload_2
       6: invokevirtual #79                 // Method write:(Lde/sciss/lucre/geom/IntSquare;Lde/sciss/serial/DataOutput;)V
       9: return

  public java.lang.Object read(de.sciss.serial.DataInput);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #82                 // Method read:(Lde/sciss/serial/DataInput;)Lde/sciss/lucre/geom/IntSquare;
       5: areturn

  public de.sciss.lucre.geom.IntSpace$TwoDim$hyperCubeFormat$();
    Code:
       0: aload_0
       1: invokespecial #83                 // Method java/lang/Object."<init>":()V
       4: return
}
