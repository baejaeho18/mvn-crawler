Compiled from "DefaultServletToAwsProxyRequestAdapter.java"
public class io.micronaut.function.aws.proxy.test.DefaultServletToAwsProxyRequestAdapter implements io.micronaut.function.aws.proxy.test.ServletToAwsProxyRequestAdapter {
  public io.micronaut.function.aws.proxy.test.DefaultServletToAwsProxyRequestAdapter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public com.amazonaws.serverless.proxy.model.AwsProxyRequest createAwsProxyRequest(javax.servlet.http.HttpServletRequest);
    Code:
       0: new           #2                  // class com/amazonaws/serverless/proxy/model/AwsProxyRequest
       3: dup
       4: invokespecial #3                  // Method com/amazonaws/serverless/proxy/model/AwsProxyRequest."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_0
      10: aload_1
      11: invokevirtual #4                  // Method createRequestContext:(Ljavax/servlet/http/HttpServletRequest;)Lcom/amazonaws/serverless/proxy/model/AwsProxyRequestContext;
      14: invokevirtual #5                  // Method com/amazonaws/serverless/proxy/model/AwsProxyRequest.setRequestContext:(Lcom/amazonaws/serverless/proxy/model/AwsProxyRequestContext;)V
      17: aload_2
      18: aload_1
      19: invokeinterface #6,  1            // InterfaceMethod javax/servlet/http/HttpServletRequest.getMethod:()Ljava/lang/String;
      24: invokevirtual #7                  // Method com/amazonaws/serverless/proxy/model/AwsProxyRequest.setHttpMethod:(Ljava/lang/String;)V
      27: aload_2
      28: aload_1
      29: invokeinterface #8,  1            // InterfaceMethod javax/servlet/http/HttpServletRequest.getRequestURI:()Ljava/lang/String;
      34: invokevirtual #9                  // Method com/amazonaws/serverless/proxy/model/AwsProxyRequest.setPath:(Ljava/lang/String;)V
      37: aload_2
      38: aload_0
      39: aload_1
      40: invokevirtual #10                 // Method createHeaders:(Ljavax/servlet/http/HttpServletRequest;)Lcom/amazonaws/serverless/proxy/model/Headers;
      43: invokevirtual #11                 // Method com/amazonaws/serverless/proxy/model/AwsProxyRequest.setMultiValueHeaders:(Lcom/amazonaws/serverless/proxy/model/Headers;)V
      46: aload_2
      47: aload_0
      48: aload_1
      49: invokevirtual #12                 // Method createParams:(Ljavax/servlet/http/HttpServletRequest;)Lcom/amazonaws/serverless/proxy/model/MultiValuedTreeMap;
      52: invokevirtual #13                 // Method com/amazonaws/serverless/proxy/model/AwsProxyRequest.setMultiValueQueryStringParameters:(Lcom/amazonaws/serverless/proxy/model/MultiValuedTreeMap;)V
      55: aload_0
      56: invokevirtual #14                 // Method encodeBodyAsBase64:()Z
      59: istore_3
      60: aload_2
      61: iload_3
      62: invokevirtual #15                 // Method com/amazonaws/serverless/proxy/model/AwsProxyRequest.setIsBase64Encoded:(Z)V
      65: aload_0
      66: aload_1
      67: iload_3
      68: invokevirtual #16                 // Method createBody:(Ljavax/servlet/http/HttpServletRequest;Z)Ljava/util/Optional;
      71: aload_2
      72: dup
      73: invokestatic  #17                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      76: pop
      77: invokedynamic #18,  0             // InvokeDynamic #0:accept:(Lcom/amazonaws/serverless/proxy/model/AwsProxyRequest;)Ljava/util/function/Consumer;
      82: invokevirtual #19                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      85: aload_2
      86: areturn

  protected com.amazonaws.serverless.proxy.model.AwsProxyRequestContext createRequestContext(javax.servlet.http.HttpServletRequest);
    Code:
       0: new           #20                 // class com/amazonaws/serverless/proxy/model/AwsProxyRequestContext
       3: dup
       4: invokespecial #21                 // Method com/amazonaws/serverless/proxy/model/AwsProxyRequestContext."<init>":()V
       7: astore_2
       8: aload_2
       9: new           #22                 // class com/amazonaws/serverless/proxy/model/ApiGatewayRequestIdentity
      12: dup
      13: invokespecial #23                 // Method com/amazonaws/serverless/proxy/model/ApiGatewayRequestIdentity."<init>":()V
      16: invokevirtual #24                 // Method com/amazonaws/serverless/proxy/model/AwsProxyRequestContext.setIdentity:(Lcom/amazonaws/serverless/proxy/model/ApiGatewayRequestIdentity;)V
      19: aload_2
      20: aload_1
      21: invokeinterface #6,  1            // InterfaceMethod javax/servlet/http/HttpServletRequest.getMethod:()Ljava/lang/String;
      26: invokevirtual #25                 // Method com/amazonaws/serverless/proxy/model/AwsProxyRequestContext.setHttpMethod:(Ljava/lang/String;)V
      29: aload_2
      30: invokestatic  #26                 // Method java/time/Instant.now:()Ljava/time/Instant;
      33: invokevirtual #27                 // Method java/time/Instant.toEpochMilli:()J
      36: invokevirtual #28                 // Method com/amazonaws/serverless/proxy/model/AwsProxyRequestContext.setRequestTimeEpoch:(J)V
      39: aload_2
      40: areturn

  protected com.amazonaws.serverless.proxy.model.Headers createHeaders(javax.servlet.http.HttpServletRequest);
    Code:
       0: new           #29                 // class com/amazonaws/serverless/proxy/model/Headers
       3: dup
       4: invokespecial #30                 // Method com/amazonaws/serverless/proxy/model/Headers."<init>":()V
       7: astore_2
       8: aload_1
       9: invokeinterface #31,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getHeaderNames:()Ljava/util/Enumeration;
      14: astore_3
      15: aload_3
      16: invokeinterface #32,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      21: ifeq          81
      24: aload_3
      25: invokeinterface #33,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      30: checkcast     #34                 // class java/lang/String
      33: astore        4
      35: aload_1
      36: aload         4
      38: invokeinterface #35,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getHeaders:(Ljava/lang/String;)Ljava/util/Enumeration;
      43: astore        5
      45: aload         5
      47: invokeinterface #32,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      52: ifeq          78
      55: aload         5
      57: invokeinterface #33,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      62: checkcast     #34                 // class java/lang/String
      65: astore        6
      67: aload_2
      68: aload         4
      70: aload         6
      72: invokevirtual #36                 // Method com/amazonaws/serverless/proxy/model/Headers.add:(Ljava/lang/Object;Ljava/lang/Object;)V
      75: goto          45
      78: goto          15
      81: aload_2
      82: areturn

  protected com.amazonaws.serverless.proxy.model.MultiValuedTreeMap<java.lang.String, java.lang.String> createParams(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_1
       1: invokeinterface #37,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getParameterMap:()Ljava/util/Map;
       6: astore_2
       7: new           #38                 // class com/amazonaws/serverless/proxy/model/MultiValuedTreeMap
      10: dup
      11: invokespecial #39                 // Method com/amazonaws/serverless/proxy/model/MultiValuedTreeMap."<init>":()V
      14: astore_3
      15: aload_2
      16: aload_3
      17: dup
      18: invokestatic  #17                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      21: pop
      22: invokedynamic #40,  0             // InvokeDynamic #1:accept:(Lcom/amazonaws/serverless/proxy/model/MultiValuedTreeMap;)Ljava/util/function/BiConsumer;
      27: invokeinterface #41,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      32: aload_3
      33: areturn

  protected boolean encodeBodyAsBase64();
    Code:
       0: iconst_1
       1: ireturn

  protected java.util.Optional<java.lang.String> createBody(javax.servlet.http.HttpServletRequest, boolean);
    Code:
       0: aload_1
       1: invokeinterface #6,  1            // InterfaceMethod javax/servlet/http/HttpServletRequest.getMethod:()Ljava/lang/String;
       6: invokestatic  #42                 // Method io/micronaut/http/HttpMethod.parse:(Ljava/lang/String;)Lio/micronaut/http/HttpMethod;
       9: astore_3
      10: aload_3
      11: invokestatic  #43                 // Method io/micronaut/http/HttpMethod.permitsRequestBody:(Lio/micronaut/http/HttpMethod;)Z
      14: ifeq          107
      17: aload_1
      18: invokeinterface #44,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getInputStream:()Ljavax/servlet/ServletInputStream;
      23: astore        4
      25: aload         4
      27: invokestatic  #45                 // Method org/apache/commons/io/IOUtils.toByteArray:(Ljava/io/InputStream;)[B
      30: astore        5
      32: iload_2
      33: ifeq          62
      36: invokestatic  #46                 // Method java/util/Base64.getEncoder:()Ljava/util/Base64$Encoder;
      39: aload         5
      41: invokevirtual #47                 // Method java/util/Base64$Encoder.encodeToString:([B)Ljava/lang/String;
      44: invokestatic  #48                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      47: astore        6
      49: aload         4
      51: ifnull        59
      54: aload         4
      56: invokevirtual #49                 // Method java/io/InputStream.close:()V
      59: aload         6
      61: areturn
      62: aload         4
      64: ifnull        102
      67: aload         4
      69: invokevirtual #49                 // Method java/io/InputStream.close:()V
      72: goto          102
      75: astore        5
      77: aload         4
      79: ifnull        99
      82: aload         4
      84: invokevirtual #49                 // Method java/io/InputStream.close:()V
      87: goto          99
      90: astore        6
      92: aload         5
      94: aload         6
      96: invokevirtual #51                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      99: aload         5
     101: athrow
     102: goto          107
     105: astore        4
     107: invokestatic  #53                 // Method java/util/Optional.empty:()Ljava/util/Optional;
     110: areturn
    Exception table:
       from    to  target type
          25    49    75   Class java/lang/Throwable
          82    87    90   Class java/lang/Throwable
          17    59   105   Class java/io/IOException
          62   102   105   Class java/io/IOException
}
