Compiled from "StringTree.scala"
public class wvlet.airframe.launcher.StringTree$Node implements wvlet.airframe.launcher.StringTree,scala.Product,scala.Serializable {
  private final scala.collection.immutable.Map<java.lang.String, wvlet.airframe.launcher.StringTree> child;

  public wvlet.airframe.launcher.StringTree $plus(scala.Tuple2<wvlet.airframe.surface.reflect.Path, wvlet.airframe.launcher.StringTree>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #36                 // InterfaceMethod wvlet/airframe/launcher/StringTree.$plus$:(Lwvlet/airframe/launcher/StringTree;Lscala/Tuple2;)Lwvlet/airframe/launcher/StringTree;
       5: areturn

  public wvlet.airframe.launcher.StringTree $plus$plus(scala.collection.Iterable<scala.Tuple2<wvlet.airframe.surface.reflect.Path, wvlet.airframe.launcher.StringTree>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #47                 // InterfaceMethod wvlet/airframe/launcher/StringTree.$plus$plus$:(Lwvlet/airframe/launcher/StringTree;Lscala/collection/Iterable;)Lwvlet/airframe/launcher/StringTree;
       5: areturn

  public wvlet.airframe.launcher.StringTree set(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #56                 // InterfaceMethod wvlet/airframe/launcher/StringTree.set$:(Lwvlet/airframe/launcher/StringTree;Ljava/lang/String;Ljava/lang/String;)Lwvlet/airframe/launcher/StringTree;
       6: areturn

  public wvlet.airframe.launcher.StringTree set(wvlet.airframe.surface.reflect.Path, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #61                 // InterfaceMethod wvlet/airframe/launcher/StringTree.set$:(Lwvlet/airframe/launcher/StringTree;Lwvlet/airframe/surface/reflect/Path;Ljava/lang/String;)Lwvlet/airframe/launcher/StringTree;
       6: areturn

  public wvlet.airframe.launcher.StringTree get(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #68                 // InterfaceMethod wvlet/airframe/launcher/StringTree.get$:(Lwvlet/airframe/launcher/StringTree;Ljava/lang/String;)Lwvlet/airframe/launcher/StringTree;
       5: areturn

  public scala.collection.Iterator<scala.Tuple2<wvlet.airframe.surface.reflect.Path, java.lang.String>> dfs();
    Code:
       0: aload_0
       1: invokestatic  #75                 // InterfaceMethod wvlet/airframe/launcher/StringTree.dfs$:(Lwvlet/airframe/launcher/StringTree;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator<scala.Tuple2<wvlet.airframe.surface.reflect.Path, java.lang.String>> dfs(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #80                 // InterfaceMethod wvlet/airframe/launcher/StringTree.dfs$:(Lwvlet/airframe/launcher/StringTree;Ljava/lang/String;)Lscala/collection/Iterator;
       5: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokestatic  #86                 // InterfaceMethod wvlet/airframe/launcher/StringTree.isEmpty$:(Lwvlet/airframe/launcher/StringTree;)Z
       4: ireturn

  public byte[] toMsgPack();
    Code:
       0: aload_0
       1: invokestatic  #92                 // InterfaceMethod wvlet/airframe/launcher/StringTree.toMsgPack$:(Lwvlet/airframe/launcher/StringTree;)[B
       4: areturn

  public scala.collection.immutable.Map<java.lang.String, wvlet.airframe.launcher.StringTree> child();
    Code:
       0: aload_0
       1: getfield      #96                 // Field child:Lscala/collection/immutable/Map;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #100                // class java/lang/StringBuilder
       3: dup
       4: ldc           #101                // int 2
       6: invokespecial #105                // Method java/lang/StringBuilder."<init>":(I)V
       9: ldc           #107                // String {
      11: invokevirtual #111                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_0
      15: invokevirtual #113                // Method child:()Lscala/collection/immutable/Map;
      18: invokedynamic #134,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
      23: getstatic     #140                // Field scala/collection/immutable/Iterable$.MODULE$:Lscala/collection/immutable/Iterable$;
      26: invokevirtual #144                // Method scala/collection/immutable/Iterable$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      29: invokeinterface #150,  3          // InterfaceMethod scala/collection/immutable/Map.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      34: checkcast     #152                // class scala/collection/TraversableOnce
      37: ldc           #154                // String ,
      39: invokeinterface #158,  2          // InterfaceMethod scala/collection/TraversableOnce.mkString:(Ljava/lang/String;)Ljava/lang/String;
      44: invokevirtual #111                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: ldc           #160                // String }
      49: invokevirtual #111                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: invokevirtual #162                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: areturn

  public wvlet.airframe.launcher.StringTree setNode(wvlet.airframe.surface.reflect.Path, wvlet.airframe.launcher.StringTree);
    Code:
       0: aload_1
       1: invokeinterface #168,  1          // InterfaceMethod wvlet/airframe/surface/reflect/Path.isEmpty:()Z
       6: ifeq          19
       9: new           #170                // class java/lang/IllegalStateException
      12: dup
      13: ldc           #172                // String path cannot be empty
      15: invokespecial #175                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: invokevirtual #113                // Method child:()Lscala/collection/immutable/Map;
      23: aload_1
      24: invokeinterface #179,  1          // InterfaceMethod wvlet/airframe/surface/reflect/Path.head:()Ljava/lang/Object;
      29: invokedynamic #189,  0            // InvokeDynamic #1:apply:()Lscala/Function0;
      34: invokeinterface #193,  3          // InterfaceMethod scala/collection/immutable/Map.getOrElse:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      39: checkcast     #6                  // class wvlet/airframe/launcher/StringTree
      42: aload_1
      43: invokeinterface #197,  1          // InterfaceMethod wvlet/airframe/surface/reflect/Path.tailPath:()Lwvlet/airframe/surface/reflect/Path;
      48: aload_2
      49: invokeinterface #199,  3          // InterfaceMethod wvlet/airframe/launcher/StringTree.setNode:(Lwvlet/airframe/surface/reflect/Path;Lwvlet/airframe/launcher/StringTree;)Lwvlet/airframe/launcher/StringTree;
      54: astore_3
      55: new           #2                  // class wvlet/airframe/launcher/StringTree$Node
      58: dup
      59: aload_0
      60: invokevirtual #113                // Method child:()Lscala/collection/immutable/Map;
      63: getstatic     #202                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      66: getstatic     #207                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      69: aload_1
      70: invokeinterface #179,  1          // InterfaceMethod wvlet/airframe/surface/reflect/Path.head:()Ljava/lang/Object;
      75: invokevirtual #210                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      78: aload_3
      79: invokevirtual #214                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      82: invokeinterface #217,  2          // InterfaceMethod scala/collection/immutable/Map.$plus:(Lscala/Tuple2;)Lscala/collection/immutable/Map;
      87: invokespecial #220                // Method "<init>":(Lscala/collection/immutable/Map;)V
      90: areturn

  public wvlet.airframe.launcher.StringTree get(wvlet.airframe.surface.reflect.Path);
    Code:
       0: aload_1
       1: invokeinterface #168,  1          // InterfaceMethod wvlet/airframe/surface/reflect/Path.isEmpty:()Z
       6: ifeq          11
       9: aload_0
      10: areturn
      11: aload_0
      12: invokevirtual #113                // Method child:()Lscala/collection/immutable/Map;
      15: aload_1
      16: invokeinterface #179,  1          // InterfaceMethod wvlet/airframe/surface/reflect/Path.head:()Ljava/lang/Object;
      21: invokeinterface #226,  2          // InterfaceMethod scala/collection/immutable/Map.get:(Ljava/lang/Object;)Lscala/Option;
      26: aload_1
      27: invokedynamic #235,  0            // InvokeDynamic #2:apply:(Lwvlet/airframe/surface/reflect/Path;)Lscala/Function1;
      32: invokevirtual #240                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      35: invokedynamic #245,  0            // InvokeDynamic #3:apply:()Lscala/Function0;
      40: invokevirtual #248                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
      43: checkcast     #6                  // class wvlet/airframe/launcher/StringTree
      46: areturn

  public scala.collection.Iterator<scala.Tuple2<wvlet.airframe.surface.reflect.Path, java.lang.String>> dfs(wvlet.airframe.surface.reflect.Path);
    Code:
       0: aload_0
       1: invokevirtual #113                // Method child:()Lscala/collection/immutable/Map;
       4: invokedynamic #257,  0            // InvokeDynamic #4:apply:()Lscala/Function1;
       9: invokeinterface #261,  2          // InterfaceMethod scala/collection/immutable/Map.withFilter:(Lscala/Function1;)Lscala/collection/generic/FilterMonadic;
      14: aload_1
      15: invokedynamic #269,  0            // InvokeDynamic #5:apply:(Lwvlet/airframe/surface/reflect/Path;)Lscala/Function1;
      20: getstatic     #140                // Field scala/collection/immutable/Iterable$.MODULE$:Lscala/collection/immutable/Iterable$;
      23: invokevirtual #144                // Method scala/collection/immutable/Iterable$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      26: invokeinterface #272,  3          // InterfaceMethod scala/collection/generic/FilterMonadic.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      31: checkcast     #152                // class scala/collection/TraversableOnce
      34: invokedynamic #283,  0            // InvokeDynamic #6:apply:()Lscala/Function2;
      39: invokeinterface #287,  2          // InterfaceMethod scala/collection/TraversableOnce.reduce:(Lscala/Function2;)Ljava/lang/Object;
      44: checkcast     #289                // class scala/collection/Iterator
      47: areturn

  public wvlet.airframe.launcher.StringTree$Node copy(scala.collection.immutable.Map<java.lang.String, wvlet.airframe.launcher.StringTree>);
    Code:
       0: new           #2                  // class wvlet/airframe/launcher/StringTree$Node
       3: dup
       4: aload_1
       5: invokespecial #220                // Method "<init>":(Lscala/collection/immutable/Map;)V
       8: areturn

  public scala.collection.immutable.Map<java.lang.String, wvlet.airframe.launcher.StringTree> copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #113                // Method child:()Lscala/collection/immutable/Map;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc_w         #295                // String Node
       3: areturn

  public int productArity();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 0
                     0: 20
               default: 25
          }
      20: aload_0
      21: invokevirtual #113                // Method child:()Lscala/collection/immutable/Map;
      24: areturn
      25: new           #302                // class java/lang/IndexOutOfBoundsException
      28: dup
      29: iload_1
      30: invokestatic  #307                // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      33: invokespecial #308                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      36: athrow

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #316                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #320                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class wvlet/airframe/launcher/StringTree$Node
       4: ireturn

  public int hashCode();
    Code:
       0: getstatic     #316                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #328                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     75
       5: aload_1
       6: astore_3
       7: aload_3
       8: instanceof    #2                  // class wvlet/airframe/launcher/StringTree$Node
      11: ifeq          18
      14: iconst_1
      15: goto          25
      18: goto          21
      21: iconst_0
      22: goto          25
      25: ifeq          79
      28: aload_1
      29: checkcast     #2                  // class wvlet/airframe/launcher/StringTree$Node
      32: astore        4
      34: aload_0
      35: invokevirtual #113                // Method child:()Lscala/collection/immutable/Map;
      38: aload         4
      40: invokevirtual #113                // Method child:()Lscala/collection/immutable/Map;
      43: astore        5
      45: dup
      46: ifnonnull     58
      49: pop
      50: aload         5
      52: ifnull        66
      55: goto          79
      58: aload         5
      60: invokevirtual #331                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      63: ifeq          79
      66: aload         4
      68: aload_0
      69: invokevirtual #333                // Method canEqual:(Ljava/lang/Object;)Z
      72: ifeq          79
      75: iconst_1
      76: goto          80
      79: iconst_0
      80: ireturn

  public static final java.lang.String $anonfun$toString$1(scala.Tuple2);
    Code:
       0: new           #100                // class java/lang/StringBuilder
       3: dup
       4: ldc           #123                // int 1
       6: invokespecial #105                // Method java/lang/StringBuilder."<init>":(I)V
       9: aload_0
      10: invokevirtual #338                // Method scala/Tuple2._1:()Ljava/lang/Object;
      13: invokevirtual #341                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      16: ldc_w         #343                // String :
      19: invokevirtual #111                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: invokevirtual #346                // Method scala/Tuple2._2:()Ljava/lang/Object;
      26: invokevirtual #341                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      29: invokevirtual #162                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: areturn

  public static final wvlet.airframe.launcher.StringTree$EmptyNode$ $anonfun$setNode$1();
    Code:
       0: getstatic     #349                // Field wvlet/airframe/launcher/StringTree$EmptyNode$.MODULE$:Lwvlet/airframe/launcher/StringTree$EmptyNode$;
       3: areturn

  public static final wvlet.airframe.launcher.StringTree $anonfun$get$1(wvlet.airframe.surface.reflect.Path, wvlet.airframe.launcher.StringTree);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #197,  1          // InterfaceMethod wvlet/airframe/surface/reflect/Path.tailPath:()Lwvlet/airframe/surface/reflect/Path;
       7: invokeinterface #352,  2          // InterfaceMethod wvlet/airframe/launcher/StringTree.get:(Lwvlet/airframe/surface/reflect/Path;)Lwvlet/airframe/launcher/StringTree;
      12: areturn

  public static final wvlet.airframe.launcher.StringTree$EmptyNode$ $anonfun$get$2();
    Code:
       0: getstatic     #349                // Field wvlet/airframe/launcher/StringTree$EmptyNode$.MODULE$:Lwvlet/airframe/launcher/StringTree$EmptyNode$;
       3: areturn

  public static final boolean $anonfun$dfs$1(scala.Tuple2);
    Code:
       0: aload_0
       1: astore_2
       2: aload_2
       3: ifnull        8
       6: iconst_1
       7: ireturn
       8: goto          11
      11: iconst_0
      12: ireturn

  public static final scala.collection.Iterator $anonfun$dfs$2(wvlet.airframe.surface.reflect.Path, scala.Tuple2);
    Code:
       0: aload_1
       1: astore_3
       2: aload_3
       3: ifnull        40
       6: aload_3
       7: invokevirtual #338                // Method scala/Tuple2._1:()Ljava/lang/Object;
      10: checkcast     #359                // class java/lang/String
      13: astore        4
      15: aload_3
      16: invokevirtual #346                // Method scala/Tuple2._2:()Ljava/lang/Object;
      19: checkcast     #6                  // class wvlet/airframe/launcher/StringTree
      22: astore        5
      24: aload         5
      26: aload_0
      27: aload         4
      29: invokeinterface #363,  2          // InterfaceMethod wvlet/airframe/surface/reflect/Path.$div:(Ljava/lang/String;)Lwvlet/airframe/surface/reflect/Path;
      34: invokeinterface #365,  2          // InterfaceMethod wvlet/airframe/launcher/StringTree.dfs:(Lwvlet/airframe/surface/reflect/Path;)Lscala/collection/Iterator;
      39: areturn
      40: goto          43
      43: new           #367                // class scala/MatchError
      46: dup
      47: aload_3
      48: invokespecial #370                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      51: athrow

  public static final scala.collection.Iterator $anonfun$dfs$4(scala.collection.Iterator);
    Code:
       0: aload_0
       1: areturn

  public static final scala.collection.Iterator $anonfun$dfs$3(scala.collection.Iterator, scala.collection.Iterator);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #385,  0            // InvokeDynamic #7:apply:(Lscala/collection/Iterator;)Lscala/Function0;
       7: invokeinterface #388,  2          // InterfaceMethod scala/collection/Iterator.$plus$plus:(Lscala/Function0;)Lscala/collection/Iterator;
      12: areturn

  public wvlet.airframe.launcher.StringTree$Node(scala.collection.immutable.Map<java.lang.String, wvlet.airframe.launcher.StringTree>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #96                 // Field child:Lscala/collection/immutable/Map;
       5: aload_0
       6: invokespecial #392                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #396                // InterfaceMethod wvlet/airframe/launcher/StringTree.$init$:(Lwvlet/airframe/launcher/StringTree;)V
      13: aload_0
      14: invokestatic  #399                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
      17: return

  public static final java.lang.Object $anonfun$dfs$1$adapted(scala.Tuple2);
    Code:
       0: aload_0
       1: invokestatic  #401                // Method $anonfun$dfs$1:(Lscala/Tuple2;)Z
       4: invokestatic  #407                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       7: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #419,  0            // InvokeDynamic #8:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
