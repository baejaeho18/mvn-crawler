Compiled from "StringTree.scala"
public final class wvlet.airframe.launcher.StringTree$ implements wvlet.log.LogSupport {
  public static wvlet.airframe.launcher.StringTree$ MODULE$;

  private final wvlet.airframe.launcher.StringTree empty;

  private wvlet.log.Logger logger;

  private volatile boolean bitmap$0;

  public static {};
    Code:
       0: new           #2                  // class wvlet/airframe/launcher/StringTree$
       3: invokespecial #25                 // Method "<init>":()V
       6: return

  private wvlet.log.Logger logger$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #29                 // Field bitmap$0:Z
       8: ifne          24
      11: aload_0
      12: aload_0
      13: invokestatic  #35                 // InterfaceMethod wvlet/log/LazyLogger.logger$:(Lwvlet/log/LazyLogger;)Lwvlet/log/Logger;
      16: putfield      #37                 // Field logger:Lwvlet/log/Logger;
      19: aload_0
      20: iconst_1
      21: putfield      #29                 // Field bitmap$0:Z
      24: aload_1
      25: monitorexit
      26: goto          32
      29: aload_1
      30: monitorexit
      31: athrow
      32: aload_0
      33: getfield      #37                 // Field logger:Lwvlet/log/Logger;
      36: areturn
    Exception table:
       from    to  target type
           4    24    29   any

  public wvlet.log.Logger logger();
    Code:
       0: aload_0
       1: getfield      #29                 // Field bitmap$0:Z
       4: ifne          12
       7: aload_0
       8: invokespecial #42                 // Method logger$lzycompute:()Lwvlet/log/Logger;
      11: areturn
      12: aload_0
      13: getfield      #37                 // Field logger:Lwvlet/log/Logger;
      16: areturn

  public wvlet.airframe.launcher.StringTree apply(scala.collection.Iterable<scala.Tuple2<wvlet.airframe.surface.reflect.Path, wvlet.airframe.launcher.StringTree>>);
    Code:
       0: getstatic     #49                 // Field wvlet/airframe/launcher/StringTree$EmptyNode$.MODULE$:Lwvlet/airframe/launcher/StringTree$EmptyNode$;
       3: aload_1
       4: invokevirtual #52                 // Method wvlet/airframe/launcher/StringTree$EmptyNode$.$plus$plus:(Lscala/collection/Iterable;)Lwvlet/airframe/launcher/StringTree;
       7: areturn

  public wvlet.airframe.launcher.StringTree empty();
    Code:
       0: aload_0
       1: getfield      #56                 // Field empty:Lwvlet/airframe/launcher/StringTree;
       4: areturn

  private java.lang.Object readResolve();
    Code:
       0: getstatic     #60                 // Field MODULE$:Lwvlet/airframe/launcher/StringTree$;
       3: areturn

  private wvlet.airframe.launcher.StringTree$();
    Code:
       0: aload_0
       1: invokespecial #61                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #60                 // Field MODULE$:Lwvlet/airframe/launcher/StringTree$;
       8: aload_0
       9: invokestatic  #67                 // InterfaceMethod wvlet/log/LoggingMethods.$init$:(Lwvlet/log/LoggingMethods;)V
      12: aload_0
      13: invokestatic  #70                 // InterfaceMethod wvlet/log/LazyLogger.$init$:(Lwvlet/log/LazyLogger;)V
      16: aload_0
      17: getstatic     #49                 // Field wvlet/airframe/launcher/StringTree$EmptyNode$.MODULE$:Lwvlet/airframe/launcher/StringTree$EmptyNode$;
      20: putfield      #56                 // Field empty:Lwvlet/airframe/launcher/StringTree;
      23: return
}
