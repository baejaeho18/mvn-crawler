Compiled from "OptionSchema.scala"
public final class wvlet.airframe.launcher.MethodOptionSchema$ implements scala.Serializable {
  public static wvlet.airframe.launcher.MethodOptionSchema$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class wvlet/airframe/launcher/MethodOptionSchema$
       3: invokespecial #40                 // Method "<init>":()V
       6: return

  public wvlet.airframe.launcher.MethodOptionSchema apply(wvlet.airframe.surface.MethodSurface, wvlet.airframe.surface.reflect.Path, int);
    Code:
       0: getstatic     #50                 // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
       3: invokevirtual #54                 // Method scala/collection/Seq$.newBuilder:()Lscala/collection/mutable/Builder;
       6: astore        4
       8: getstatic     #50                 // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
      11: invokevirtual #54                 // Method scala/collection/Seq$.newBuilder:()Lscala/collection/mutable/Builder;
      14: astore        5
      16: iload_3
      17: invokestatic  #60                 // Method scala/runtime/IntRef.create:(I)Lscala/runtime/IntRef;
      20: astore        6
      22: aload_1
      23: invokeinterface #66,  1           // InterfaceMethod wvlet/airframe/surface/MethodSurface.args:()Lscala/collection/Seq;
      28: aload_2
      29: aload         4
      31: aload         5
      33: aload         6
      35: invokedynamic #87,  0             // InvokeDynamic #0:apply:(Lwvlet/airframe/surface/reflect/Path;Lscala/collection/mutable/Builder;Lscala/collection/mutable/Builder;Lscala/runtime/IntRef;)Lscala/Function1;
      40: invokeinterface #93,  2           // InterfaceMethod scala/collection/Seq.foreach:(Lscala/Function1;)V
      45: new           #95                 // class wvlet/airframe/launcher/MethodOptionSchema
      48: dup
      49: aload_1
      50: aload         4
      52: invokeinterface #101,  1          // InterfaceMethod scala/collection/mutable/Builder.result:()Ljava/lang/Object;
      57: checkcast     #89                 // class scala/collection/Seq
      60: aload         5
      62: invokeinterface #101,  1          // InterfaceMethod scala/collection/mutable/Builder.result:()Ljava/lang/Object;
      67: checkcast     #103                // class scala/collection/SeqLike
      70: invokedynamic #112,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
      75: getstatic     #115                // Field scala/math/Ordering$Int$.MODULE$:Lscala/math/Ordering$Int$;
      78: invokeinterface #119,  3          // InterfaceMethod scala/collection/SeqLike.sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
      83: checkcast     #89                 // class scala/collection/Seq
      86: invokespecial #122                // Method wvlet/airframe/launcher/MethodOptionSchema."<init>":(Lwvlet/airframe/surface/MethodSurface;Lscala/collection/Seq;Lscala/collection/Seq;)V
      89: areturn

  public wvlet.airframe.surface.reflect.Path apply$default$2();
    Code:
       0: getstatic     #138                // Field wvlet/airframe/surface/reflect/Path$.MODULE$:Lwvlet/airframe/surface/reflect/Path$;
       3: invokevirtual #141                // Method wvlet/airframe/surface/reflect/Path$.current:()Lwvlet/airframe/surface/reflect/Path;
       6: areturn

  public int apply$default$3();
    Code:
       0: iconst_0
       1: ireturn

  private java.lang.Object readResolve();
    Code:
       0: getstatic     #146                // Field MODULE$:Lwvlet/airframe/launcher/MethodOptionSchema$;
       3: areturn

  public static final scala.collection.mutable.Builder $anonfun$apply$6(scala.collection.mutable.Builder, wvlet.airframe.surface.MethodParameter, wvlet.airframe.launcher.option);
    Code:
       0: aload_0
       1: new           #27                 // class wvlet/airframe/launcher/OptionParser$CLOption
       4: dup
       5: getstatic     #138                // Field wvlet/airframe/surface/reflect/Path$.MODULE$:Lwvlet/airframe/surface/reflect/Path$;
       8: aload_1
       9: invokeinterface #157,  1          // InterfaceMethod wvlet/airframe/surface/MethodParameter.name:()Ljava/lang/String;
      14: invokevirtual #160                // Method wvlet/airframe/surface/reflect/Path$.apply:(Ljava/lang/String;)Lwvlet/airframe/surface/reflect/Path;
      17: aload_2
      18: aload_1
      19: invokespecial #163                // Method wvlet/airframe/launcher/OptionParser$CLOption."<init>":(Lwvlet/airframe/surface/reflect/Path;Lwvlet/airframe/launcher/option;Lwvlet/airframe/surface/Parameter;)V
      22: invokeinterface #167,  2          // InterfaceMethod scala/collection/mutable/Builder.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Builder;
      27: areturn

  public static final void $anonfun$apply$7(scala.collection.mutable.Builder, wvlet.airframe.surface.MethodParameter, scala.runtime.IntRef, wvlet.airframe.launcher.argument);
    Code:
       0: aload_0
       1: new           #24                 // class wvlet/airframe/launcher/OptionParser$CLArgument
       4: dup
       5: getstatic     #138                // Field wvlet/airframe/surface/reflect/Path$.MODULE$:Lwvlet/airframe/surface/reflect/Path$;
       8: aload_1
       9: invokeinterface #157,  1          // InterfaceMethod wvlet/airframe/surface/MethodParameter.name:()Ljava/lang/String;
      14: invokevirtual #160                // Method wvlet/airframe/surface/reflect/Path$.apply:(Ljava/lang/String;)Lwvlet/airframe/surface/reflect/Path;
      17: aload_3
      18: aload_2
      19: getfield      #177                // Field scala/runtime/IntRef.elem:I
      22: aload_1
      23: invokespecial #180                // Method wvlet/airframe/launcher/OptionParser$CLArgument."<init>":(Lwvlet/airframe/surface/reflect/Path;Lwvlet/airframe/launcher/argument;ILwvlet/airframe/surface/Parameter;)V
      26: invokeinterface #167,  2          // InterfaceMethod scala/collection/mutable/Builder.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Builder;
      31: pop
      32: aload_2
      33: aload_2
      34: getfield      #177                // Field scala/runtime/IntRef.elem:I
      37: iconst_1
      38: iadd
      39: putfield      #177                // Field scala/runtime/IntRef.elem:I
      42: return

  public static final void $anonfun$apply$5(wvlet.airframe.surface.reflect.Path, scala.collection.mutable.Builder, scala.collection.mutable.Builder, scala.runtime.IntRef, wvlet.airframe.surface.MethodParameter);
    Code:
       0: aload_0
       1: aload         4
       3: invokeinterface #157,  1          // InterfaceMethod wvlet/airframe/surface/MethodParameter.name:()Ljava/lang/String;
       8: invokeinterface #190,  2          // InterfaceMethod wvlet/airframe/surface/reflect/Path.$div:(Ljava/lang/String;)Lwvlet/airframe/surface/reflect/Path;
      13: astore        5
      15: getstatic     #195                // Field wvlet/airframe/surface/reflect/package$.MODULE$:Lwvlet/airframe/surface/reflect/package$;
      18: aload         4
      20: invokevirtual #198                // Method wvlet/airframe/surface/reflect/package$.ToRuntimeSurfaceParameter:(Lwvlet/airframe/surface/Parameter;)Lwvlet/airframe/surface/reflect/package$ToRuntimeSurfaceParameter;
      23: getstatic     #203                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      26: ldc           #205                // class wvlet/airframe/launcher/option
      28: invokevirtual #208                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      31: invokevirtual #212                // Method wvlet/airframe/surface/reflect/package$ToRuntimeSurfaceParameter.findAnnotationOf:(Lscala/reflect/ClassTag;)Lscala/Option;
      34: astore        6
      36: getstatic     #195                // Field wvlet/airframe/surface/reflect/package$.MODULE$:Lwvlet/airframe/surface/reflect/package$;
      39: aload         4
      41: invokevirtual #198                // Method wvlet/airframe/surface/reflect/package$.ToRuntimeSurfaceParameter:(Lwvlet/airframe/surface/Parameter;)Lwvlet/airframe/surface/reflect/package$ToRuntimeSurfaceParameter;
      44: getstatic     #203                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      47: ldc           #214                // class wvlet/airframe/launcher/argument
      49: invokevirtual #208                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      52: invokevirtual #212                // Method wvlet/airframe/surface/reflect/package$ToRuntimeSurfaceParameter.findAnnotationOf:(Lscala/reflect/ClassTag;)Lscala/Option;
      55: astore        7
      57: aload         6
      59: aload_1
      60: aload         4
      62: invokedynamic #222,  0            // InvokeDynamic #2:apply:(Lscala/collection/mutable/Builder;Lwvlet/airframe/surface/MethodParameter;)Lscala/Function1;
      67: invokevirtual #225                // Method scala/Option.foreach:(Lscala/Function1;)V
      70: aload         7
      72: aload_2
      73: aload         4
      75: aload_3
      76: invokedynamic #235,  0            // InvokeDynamic #3:apply:(Lscala/collection/mutable/Builder;Lwvlet/airframe/surface/MethodParameter;Lscala/runtime/IntRef;)Lscala/Function1;
      81: invokevirtual #225                // Method scala/Option.foreach:(Lscala/Function1;)V
      84: aload         6
      86: invokevirtual #239                // Method scala/Option.isEmpty:()Z
      89: ifne          100
      92: aload         7
      94: invokevirtual #239                // Method scala/Option.isEmpty:()Z
      97: ifeq          165
     100: getstatic     #244                // Field wvlet/airframe/launcher/ClassOptionSchema$.MODULE$:Lwvlet/airframe/launcher/ClassOptionSchema$;
     103: aload         4
     105: invokeinterface #248,  1          // InterfaceMethod wvlet/airframe/surface/MethodParameter.surface:()Lwvlet/airframe/surface/Surface;
     110: aload         5
     112: aload_3
     113: getfield      #177                // Field scala/runtime/IntRef.elem:I
     116: invokevirtual #251                // Method wvlet/airframe/launcher/ClassOptionSchema$.apply:(Lwvlet/airframe/surface/Surface;Lwvlet/airframe/surface/reflect/Path;I)Lwvlet/airframe/launcher/ClassOptionSchema;
     119: astore        8
     121: aload_1
     122: aload         8
     124: invokevirtual #256                // Method wvlet/airframe/launcher/ClassOptionSchema.options:()Lscala/collection/Seq;
     127: invokeinterface #260,  2          // InterfaceMethod scala/collection/mutable/Builder.$plus$plus$eq:(Lscala/collection/TraversableOnce;)Lscala/collection/generic/Growable;
     132: pop
     133: aload_2
     134: aload         8
     136: invokevirtual #261                // Method wvlet/airframe/launcher/ClassOptionSchema.args:()Lscala/collection/Seq;
     139: invokeinterface #260,  2          // InterfaceMethod scala/collection/mutable/Builder.$plus$plus$eq:(Lscala/collection/TraversableOnce;)Lscala/collection/generic/Growable;
     144: pop
     145: aload_3
     146: aload_3
     147: getfield      #177                // Field scala/runtime/IntRef.elem:I
     150: aload         8
     152: invokevirtual #261                // Method wvlet/airframe/launcher/ClassOptionSchema.args:()Lscala/collection/Seq;
     155: invokeinterface #264,  1          // InterfaceMethod scala/collection/Seq.length:()I
     160: iadd
     161: putfield      #177                // Field scala/runtime/IntRef.elem:I
     164: return
     165: return

  public static final int $anonfun$apply$8(wvlet.airframe.launcher.OptionParser$CLArgItem);
    Code:
       0: aload_0
       1: invokeinterface #276,  1          // InterfaceMethod wvlet/airframe/launcher/OptionParser$CLArgItem.argIndex:()I
       6: ireturn

  private wvlet.airframe.launcher.MethodOptionSchema$();
    Code:
       0: aload_0
       1: invokespecial #278                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #146                // Field MODULE$:Lwvlet/airframe/launcher/MethodOptionSchema$;
       8: return

  public static final java.lang.Object $anonfun$apply$5$adapted(wvlet.airframe.surface.reflect.Path, scala.collection.mutable.Builder, scala.collection.mutable.Builder, scala.runtime.IntRef, wvlet.airframe.surface.MethodParameter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #280                // Method $anonfun$apply$5:(Lwvlet/airframe/surface/reflect/Path;Lscala/collection/mutable/Builder;Lscala/collection/mutable/Builder;Lscala/runtime/IntRef;Lwvlet/airframe/surface/MethodParameter;)V
       9: getstatic     #286                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      12: areturn

  public static final java.lang.Object $anonfun$apply$8$adapted(wvlet.airframe.launcher.OptionParser$CLArgItem);
    Code:
       0: aload_0
       1: invokestatic  #288                // Method $anonfun$apply$8:(Lwvlet/airframe/launcher/OptionParser$CLArgItem;)I
       4: invokestatic  #294                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       7: areturn

  public static final java.lang.Object $anonfun$apply$7$adapted(scala.collection.mutable.Builder, wvlet.airframe.surface.MethodParameter, scala.runtime.IntRef, wvlet.airframe.launcher.argument);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #296                // Method $anonfun$apply$7:(Lscala/collection/mutable/Builder;Lwvlet/airframe/surface/MethodParameter;Lscala/runtime/IntRef;Lwvlet/airframe/launcher/argument;)V
       7: getstatic     #286                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      10: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #308,  0            // InvokeDynamic #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
