Compiled from "OptionSchema.scala"
public class wvlet.airframe.launcher.ClassOptionSchema implements wvlet.airframe.launcher.OptionSchema {
  private final wvlet.airframe.surface.Surface surface;

  private final scala.collection.Seq<wvlet.airframe.launcher.OptionParser$CLOption> options;

  private final scala.collection.Seq<wvlet.airframe.launcher.OptionParser$CLArgItem> args;

  private scala.collection.immutable.Map<java.lang.String, wvlet.airframe.launcher.OptionParser$CLOption> symbolTable;

  private wvlet.log.Logger logger;

  private volatile byte bitmap$0;

  public static int apply$default$3();
    Code:
       0: getstatic     #40                 // Field wvlet/airframe/launcher/ClassOptionSchema$.MODULE$:Lwvlet/airframe/launcher/ClassOptionSchema$;
       3: invokevirtual #42                 // Method wvlet/airframe/launcher/ClassOptionSchema$.apply$default$3:()I
       6: ireturn

  public static wvlet.airframe.surface.reflect.Path apply$default$2();
    Code:
       0: getstatic     #40                 // Field wvlet/airframe/launcher/ClassOptionSchema$.MODULE$:Lwvlet/airframe/launcher/ClassOptionSchema$;
       3: invokevirtual #46                 // Method wvlet/airframe/launcher/ClassOptionSchema$.apply$default$2:()Lwvlet/airframe/surface/reflect/Path;
       6: areturn

  public wvlet.airframe.launcher.OptionParser$CLOption apply(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #53                 // InterfaceMethod wvlet/airframe/launcher/OptionSchema.apply$:(Lwvlet/airframe/launcher/OptionSchema;Ljava/lang/String;)Lwvlet/airframe/launcher/OptionParser$CLOption;
       5: areturn

  public scala.Option<wvlet.airframe.launcher.OptionParser$CLOption> findOption(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #63                 // InterfaceMethod wvlet/airframe/launcher/OptionSchema.findOption$:(Lwvlet/airframe/launcher/OptionSchema;Ljava/lang/String;)Lscala/Option;
       5: areturn

  public scala.Option<wvlet.airframe.launcher.OptionParser$CLOption> findFlagOption(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #67                 // InterfaceMethod wvlet/airframe/launcher/OptionSchema.findFlagOption$:(Lwvlet/airframe/launcher/OptionSchema;Ljava/lang/String;)Lscala/Option;
       5: areturn

  public scala.Option<wvlet.airframe.launcher.OptionParser$CLOption> findOptionNeedsArg(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #71                 // InterfaceMethod wvlet/airframe/launcher/OptionSchema.findOptionNeedsArg$:(Lwvlet/airframe/launcher/OptionSchema;Ljava/lang/String;)Lscala/Option;
       5: areturn

  public scala.Option<wvlet.airframe.launcher.OptionParser$CLArgItem> findArgumentItem(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #79                 // InterfaceMethod wvlet/airframe/launcher/OptionSchema.findArgumentItem$:(Lwvlet/airframe/launcher/OptionSchema;I)Lscala/Option;
       5: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #86                 // InterfaceMethod wvlet/airframe/launcher/OptionSchema.toString$:(Lwvlet/airframe/launcher/OptionSchema;)Ljava/lang/String;
       4: areturn

  private scala.collection.immutable.Map<java.lang.String, wvlet.airframe.launcher.OptionParser$CLOption> symbolTable$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #91                 // Field bitmap$0:B
       8: iconst_1
       9: iand
      10: i2b
      11: iconst_0
      12: if_icmpne     34
      15: aload_0
      16: aload_0
      17: invokestatic  #95                 // InterfaceMethod wvlet/airframe/launcher/OptionSchema.symbolTable$:(Lwvlet/airframe/launcher/OptionSchema;)Lscala/collection/immutable/Map;
      20: putfield      #97                 // Field symbolTable:Lscala/collection/immutable/Map;
      23: aload_0
      24: aload_0
      25: getfield      #91                 // Field bitmap$0:B
      28: iconst_1
      29: ior
      30: i2b
      31: putfield      #91                 // Field bitmap$0:B
      34: aload_1
      35: monitorexit
      36: goto          42
      39: aload_1
      40: monitorexit
      41: athrow
      42: aload_0
      43: getfield      #97                 // Field symbolTable:Lscala/collection/immutable/Map;
      46: areturn
    Exception table:
       from    to  target type
           4    34    39   any

  public scala.collection.immutable.Map<java.lang.String, wvlet.airframe.launcher.OptionParser$CLOption> symbolTable();
    Code:
       0: aload_0
       1: getfield      #91                 // Field bitmap$0:B
       4: iconst_1
       5: iand
       6: i2b
       7: iconst_0
       8: if_icmpne     16
      11: aload_0
      12: invokespecial #101                // Method symbolTable$lzycompute:()Lscala/collection/immutable/Map;
      15: areturn
      16: aload_0
      17: getfield      #97                 // Field symbolTable:Lscala/collection/immutable/Map;
      20: areturn

  private wvlet.log.Logger logger$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #91                 // Field bitmap$0:B
       8: iconst_2
       9: iand
      10: i2b
      11: iconst_0
      12: if_icmpne     34
      15: aload_0
      16: aload_0
      17: invokestatic  #109                // InterfaceMethod wvlet/log/LazyLogger.logger$:(Lwvlet/log/LazyLogger;)Lwvlet/log/Logger;
      20: putfield      #111                // Field logger:Lwvlet/log/Logger;
      23: aload_0
      24: aload_0
      25: getfield      #91                 // Field bitmap$0:B
      28: iconst_2
      29: ior
      30: i2b
      31: putfield      #91                 // Field bitmap$0:B
      34: aload_1
      35: monitorexit
      36: goto          42
      39: aload_1
      40: monitorexit
      41: athrow
      42: aload_0
      43: getfield      #111                // Field logger:Lwvlet/log/Logger;
      46: areturn
    Exception table:
       from    to  target type
           4    34    39   any

  public wvlet.log.Logger logger();
    Code:
       0: aload_0
       1: getfield      #91                 // Field bitmap$0:B
       4: iconst_2
       5: iand
       6: i2b
       7: iconst_0
       8: if_icmpne     16
      11: aload_0
      12: invokespecial #113                // Method logger$lzycompute:()Lwvlet/log/Logger;
      15: areturn
      16: aload_0
      17: getfield      #111                // Field logger:Lwvlet/log/Logger;
      20: areturn

  public wvlet.airframe.surface.Surface surface();
    Code:
       0: aload_0
       1: getfield      #116                // Field surface:Lwvlet/airframe/surface/Surface;
       4: areturn

  public scala.collection.Seq<wvlet.airframe.launcher.OptionParser$CLOption> options();
    Code:
       0: aload_0
       1: getfield      #120                // Field options:Lscala/collection/Seq;
       4: areturn

  public scala.collection.Seq<wvlet.airframe.launcher.OptionParser$CLArgItem> args();
    Code:
       0: aload_0
       1: getfield      #123                // Field args:Lscala/collection/Seq;
       4: areturn

  public wvlet.airframe.launcher.ClassOptionSchema(wvlet.airframe.surface.Surface, scala.collection.Seq<wvlet.airframe.launcher.OptionParser$CLOption>, scala.collection.Seq<wvlet.airframe.launcher.OptionParser$CLArgItem>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #116                // Field surface:Lwvlet/airframe/surface/Surface;
       5: aload_0
       6: aload_2
       7: putfield      #120                // Field options:Lscala/collection/Seq;
      10: aload_0
      11: aload_3
      12: putfield      #123                // Field args:Lscala/collection/Seq;
      15: aload_0
      16: invokespecial #129                // Method java/lang/Object."<init>":()V
      19: aload_0
      20: invokestatic  #135                // InterfaceMethod wvlet/log/LoggingMethods.$init$:(Lwvlet/log/LoggingMethods;)V
      23: aload_0
      24: invokestatic  #138                // InterfaceMethod wvlet/log/LazyLogger.$init$:(Lwvlet/log/LazyLogger;)V
      27: aload_0
      28: invokestatic  #141                // InterfaceMethod wvlet/airframe/launcher/OptionSchema.$init$:(Lwvlet/airframe/launcher/OptionSchema;)V
      31: return
}
