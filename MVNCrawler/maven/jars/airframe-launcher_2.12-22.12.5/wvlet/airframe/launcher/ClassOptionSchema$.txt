Compiled from "OptionSchema.scala"
public final class wvlet.airframe.launcher.ClassOptionSchema$ implements wvlet.log.LogSupport {
  public static wvlet.airframe.launcher.ClassOptionSchema$ MODULE$;

  private wvlet.log.Logger logger;

  private volatile boolean bitmap$0;

  public static {};
    Code:
       0: new           #2                  // class wvlet/airframe/launcher/ClassOptionSchema$
       3: invokespecial #44                 // Method "<init>":()V
       6: return

  private wvlet.log.Logger logger$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #48                 // Field bitmap$0:Z
       8: ifne          24
      11: aload_0
      12: aload_0
      13: invokestatic  #54                 // InterfaceMethod wvlet/log/LazyLogger.logger$:(Lwvlet/log/LazyLogger;)Lwvlet/log/Logger;
      16: putfield      #56                 // Field logger:Lwvlet/log/Logger;
      19: aload_0
      20: iconst_1
      21: putfield      #48                 // Field bitmap$0:Z
      24: aload_1
      25: monitorexit
      26: goto          32
      29: aload_1
      30: monitorexit
      31: athrow
      32: aload_0
      33: getfield      #56                 // Field logger:Lwvlet/log/Logger;
      36: areturn
    Exception table:
       from    to  target type
           4    24    29   any

  public wvlet.log.Logger logger();
    Code:
       0: aload_0
       1: getfield      #48                 // Field bitmap$0:Z
       4: ifne          12
       7: aload_0
       8: invokespecial #61                 // Method logger$lzycompute:()Lwvlet/log/Logger;
      11: areturn
      12: aload_0
      13: getfield      #56                 // Field logger:Lwvlet/log/Logger;
      16: areturn

  public wvlet.airframe.launcher.ClassOptionSchema apply(wvlet.airframe.surface.Surface, wvlet.airframe.surface.reflect.Path, int);
    Code:
       0: iload_3
       1: invokestatic  #72                 // Method scala/runtime/IntRef.create:(I)Lscala/runtime/IntRef;
       4: astore        4
       6: getstatic     #77                 // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
       9: invokevirtual #81                 // Method scala/collection/Seq$.newBuilder:()Lscala/collection/mutable/Builder;
      12: astore        5
      14: getstatic     #77                 // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
      17: invokevirtual #81                 // Method scala/collection/Seq$.newBuilder:()Lscala/collection/mutable/Builder;
      20: astore        6
      22: aload_1
      23: invokeinterface #87,  1           // InterfaceMethod wvlet/airframe/surface/Surface.params:()Lscala/collection/Seq;
      28: aload_2
      29: aload         5
      31: aload         6
      33: aload         4
      35: invokedynamic #110,  0            // InvokeDynamic #0:apply:(Lwvlet/airframe/surface/reflect/Path;Lscala/collection/mutable/Builder;Lscala/collection/mutable/Builder;Lscala/runtime/IntRef;)Lscala/Function1;
      40: invokeinterface #116,  2          // InterfaceMethod scala/collection/Seq.foreach:(Lscala/Function1;)V
      45: new           #118                // class wvlet/airframe/launcher/ClassOptionSchema
      48: dup
      49: aload_1
      50: aload         5
      52: invokeinterface #124,  1          // InterfaceMethod scala/collection/mutable/Builder.result:()Ljava/lang/Object;
      57: checkcast     #112                // class scala/collection/Seq
      60: aload         6
      62: invokeinterface #124,  1          // InterfaceMethod scala/collection/mutable/Builder.result:()Ljava/lang/Object;
      67: checkcast     #126                // class scala/collection/SeqLike
      70: invokedynamic #135,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
      75: getstatic     #138                // Field scala/math/Ordering$Int$.MODULE$:Lscala/math/Ordering$Int$;
      78: invokeinterface #142,  3          // InterfaceMethod scala/collection/SeqLike.sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
      83: checkcast     #112                // class scala/collection/Seq
      86: invokespecial #145                // Method wvlet/airframe/launcher/ClassOptionSchema."<init>":(Lwvlet/airframe/surface/Surface;Lscala/collection/Seq;Lscala/collection/Seq;)V
      89: areturn

  public wvlet.airframe.surface.reflect.Path apply$default$2();
    Code:
       0: getstatic     #160                // Field wvlet/airframe/surface/reflect/Path$.MODULE$:Lwvlet/airframe/surface/reflect/Path$;
       3: invokevirtual #163                // Method wvlet/airframe/surface/reflect/Path$.current:()Lwvlet/airframe/surface/reflect/Path;
       6: areturn

  public int apply$default$3();
    Code:
       0: iconst_0
       1: ireturn

  private java.lang.Object readResolve();
    Code:
       0: getstatic     #168                // Field MODULE$:Lwvlet/airframe/launcher/ClassOptionSchema$;
       3: areturn

  public static final scala.collection.mutable.Builder $anonfun$apply$2(scala.collection.mutable.Builder, wvlet.airframe.surface.reflect.Path, wvlet.airframe.surface.Parameter, wvlet.airframe.launcher.option);
    Code:
       0: aload_0
       1: new           #27                 // class wvlet/airframe/launcher/OptionParser$CLOption
       4: dup
       5: aload_1
       6: aload_3
       7: aload_2
       8: invokespecial #177                // Method wvlet/airframe/launcher/OptionParser$CLOption."<init>":(Lwvlet/airframe/surface/reflect/Path;Lwvlet/airframe/launcher/option;Lwvlet/airframe/surface/Parameter;)V
      11: invokeinterface #181,  2          // InterfaceMethod scala/collection/mutable/Builder.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Builder;
      16: areturn

  public static final void $anonfun$apply$3(scala.collection.mutable.Builder, wvlet.airframe.surface.reflect.Path, scala.runtime.IntRef, wvlet.airframe.surface.Parameter, wvlet.airframe.launcher.argument);
    Code:
       0: aload_0
       1: new           #24                 // class wvlet/airframe/launcher/OptionParser$CLArgument
       4: dup
       5: aload_1
       6: aload         4
       8: aload_2
       9: getfield      #191                // Field scala/runtime/IntRef.elem:I
      12: aload_3
      13: invokespecial #194                // Method wvlet/airframe/launcher/OptionParser$CLArgument."<init>":(Lwvlet/airframe/surface/reflect/Path;Lwvlet/airframe/launcher/argument;ILwvlet/airframe/surface/Parameter;)V
      16: invokeinterface #181,  2          // InterfaceMethod scala/collection/mutable/Builder.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Builder;
      21: pop
      22: aload_2
      23: aload_2
      24: getfield      #191                // Field scala/runtime/IntRef.elem:I
      27: iconst_1
      28: iadd
      29: putfield      #191                // Field scala/runtime/IntRef.elem:I
      32: return

  public static final void $anonfun$apply$1(wvlet.airframe.surface.reflect.Path, scala.collection.mutable.Builder, scala.collection.mutable.Builder, scala.runtime.IntRef, wvlet.airframe.surface.Parameter);
    Code:
       0: aload_0
       1: aload         4
       3: invokeinterface #205,  1          // InterfaceMethod wvlet/airframe/surface/Parameter.name:()Ljava/lang/String;
       8: invokeinterface #211,  2          // InterfaceMethod wvlet/airframe/surface/reflect/Path.$div:(Ljava/lang/String;)Lwvlet/airframe/surface/reflect/Path;
      13: astore        5
      15: getstatic     #216                // Field wvlet/airframe/surface/reflect/package$.MODULE$:Lwvlet/airframe/surface/reflect/package$;
      18: aload         4
      20: invokevirtual #219                // Method wvlet/airframe/surface/reflect/package$.ToRuntimeSurfaceParameter:(Lwvlet/airframe/surface/Parameter;)Lwvlet/airframe/surface/reflect/package$ToRuntimeSurfaceParameter;
      23: getstatic     #224                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      26: ldc           #226                // class wvlet/airframe/launcher/option
      28: invokevirtual #229                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      31: invokevirtual #233                // Method wvlet/airframe/surface/reflect/package$ToRuntimeSurfaceParameter.findAnnotationOf:(Lscala/reflect/ClassTag;)Lscala/Option;
      34: astore        6
      36: getstatic     #216                // Field wvlet/airframe/surface/reflect/package$.MODULE$:Lwvlet/airframe/surface/reflect/package$;
      39: aload         4
      41: invokevirtual #219                // Method wvlet/airframe/surface/reflect/package$.ToRuntimeSurfaceParameter:(Lwvlet/airframe/surface/Parameter;)Lwvlet/airframe/surface/reflect/package$ToRuntimeSurfaceParameter;
      44: getstatic     #224                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      47: ldc           #235                // class wvlet/airframe/launcher/argument
      49: invokevirtual #229                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      52: invokevirtual #233                // Method wvlet/airframe/surface/reflect/package$ToRuntimeSurfaceParameter.findAnnotationOf:(Lscala/reflect/ClassTag;)Lscala/Option;
      55: astore        7
      57: aload         6
      59: aload_1
      60: aload         5
      62: aload         4
      64: invokedynamic #243,  0            // InvokeDynamic #2:apply:(Lscala/collection/mutable/Builder;Lwvlet/airframe/surface/reflect/Path;Lwvlet/airframe/surface/Parameter;)Lscala/Function1;
      69: invokevirtual #246                // Method scala/Option.foreach:(Lscala/Function1;)V
      72: aload         7
      74: aload_2
      75: aload         5
      77: aload_3
      78: aload         4
      80: invokedynamic #256,  0            // InvokeDynamic #3:apply:(Lscala/collection/mutable/Builder;Lwvlet/airframe/surface/reflect/Path;Lscala/runtime/IntRef;Lwvlet/airframe/surface/Parameter;)Lscala/Function1;
      85: invokevirtual #246                // Method scala/Option.foreach:(Lscala/Function1;)V
      88: aload         6
      90: invokevirtual #260                // Method scala/Option.isEmpty:()Z
      93: ifne          104
      96: aload         7
      98: invokevirtual #260                // Method scala/Option.isEmpty:()Z
     101: ifeq          169
     104: getstatic     #168                // Field MODULE$:Lwvlet/airframe/launcher/ClassOptionSchema$;
     107: aload         4
     109: invokeinterface #263,  1          // InterfaceMethod wvlet/airframe/surface/Parameter.surface:()Lwvlet/airframe/surface/Surface;
     114: aload         5
     116: aload_3
     117: getfield      #191                // Field scala/runtime/IntRef.elem:I
     120: invokevirtual #265                // Method apply:(Lwvlet/airframe/surface/Surface;Lwvlet/airframe/surface/reflect/Path;I)Lwvlet/airframe/launcher/ClassOptionSchema;
     123: astore        8
     125: aload_1
     126: aload         8
     128: invokevirtual #268                // Method wvlet/airframe/launcher/ClassOptionSchema.options:()Lscala/collection/Seq;
     131: invokeinterface #272,  2          // InterfaceMethod scala/collection/mutable/Builder.$plus$plus$eq:(Lscala/collection/TraversableOnce;)Lscala/collection/generic/Growable;
     136: pop
     137: aload_2
     138: aload         8
     140: invokevirtual #275                // Method wvlet/airframe/launcher/ClassOptionSchema.args:()Lscala/collection/Seq;
     143: invokeinterface #272,  2          // InterfaceMethod scala/collection/mutable/Builder.$plus$plus$eq:(Lscala/collection/TraversableOnce;)Lscala/collection/generic/Growable;
     148: pop
     149: aload_3
     150: aload_3
     151: getfield      #191                // Field scala/runtime/IntRef.elem:I
     154: aload         8
     156: invokevirtual #275                // Method wvlet/airframe/launcher/ClassOptionSchema.args:()Lscala/collection/Seq;
     159: invokeinterface #278,  1          // InterfaceMethod scala/collection/Seq.length:()I
     164: iadd
     165: putfield      #191                // Field scala/runtime/IntRef.elem:I
     168: return
     169: return

  public static final int $anonfun$apply$4(wvlet.airframe.launcher.OptionParser$CLArgItem);
    Code:
       0: aload_0
       1: invokeinterface #290,  1          // InterfaceMethod wvlet/airframe/launcher/OptionParser$CLArgItem.argIndex:()I
       6: ireturn

  private wvlet.airframe.launcher.ClassOptionSchema$();
    Code:
       0: aload_0
       1: invokespecial #292                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #168                // Field MODULE$:Lwvlet/airframe/launcher/ClassOptionSchema$;
       8: aload_0
       9: invokestatic  #298                // InterfaceMethod wvlet/log/LoggingMethods.$init$:(Lwvlet/log/LoggingMethods;)V
      12: aload_0
      13: invokestatic  #301                // InterfaceMethod wvlet/log/LazyLogger.$init$:(Lwvlet/log/LazyLogger;)V
      16: return

  public static final java.lang.Object $anonfun$apply$1$adapted(wvlet.airframe.surface.reflect.Path, scala.collection.mutable.Builder, scala.collection.mutable.Builder, scala.runtime.IntRef, wvlet.airframe.surface.Parameter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #303                // Method $anonfun$apply$1:(Lwvlet/airframe/surface/reflect/Path;Lscala/collection/mutable/Builder;Lscala/collection/mutable/Builder;Lscala/runtime/IntRef;Lwvlet/airframe/surface/Parameter;)V
       9: getstatic     #309                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      12: areturn

  public static final java.lang.Object $anonfun$apply$4$adapted(wvlet.airframe.launcher.OptionParser$CLArgItem);
    Code:
       0: aload_0
       1: invokestatic  #311                // Method $anonfun$apply$4:(Lwvlet/airframe/launcher/OptionParser$CLArgItem;)I
       4: invokestatic  #317                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       7: areturn

  public static final java.lang.Object $anonfun$apply$3$adapted(scala.collection.mutable.Builder, wvlet.airframe.surface.reflect.Path, scala.runtime.IntRef, wvlet.airframe.surface.Parameter, wvlet.airframe.launcher.argument);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #319                // Method $anonfun$apply$3:(Lscala/collection/mutable/Builder;Lwvlet/airframe/surface/reflect/Path;Lscala/runtime/IntRef;Lwvlet/airframe/surface/Parameter;Lwvlet/airframe/launcher/argument;)V
       9: getstatic     #309                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      12: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #331,  0            // InvokeDynamic #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
