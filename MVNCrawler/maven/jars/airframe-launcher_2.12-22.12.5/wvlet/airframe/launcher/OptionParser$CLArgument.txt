Compiled from "OptionParser.scala"
public class wvlet.airframe.launcher.OptionParser$CLArgument extends wvlet.airframe.launcher.OptionParser$CLOptionItemBase implements wvlet.airframe.launcher.OptionParser$CLArgItem,scala.Product,scala.Serializable {
  private final wvlet.airframe.surface.reflect.Path path;

  private final wvlet.airframe.launcher.argument arg;

  private final int argIndex;

  public wvlet.airframe.surface.reflect.Path path();
    Code:
       0: aload_0
       1: getfield      #25                 // Field path:Lwvlet/airframe/surface/reflect/Path;
       4: areturn

  public wvlet.airframe.launcher.argument arg();
    Code:
       0: aload_0
       1: getfield      #30                 // Field arg:Lwvlet/airframe/launcher/argument;
       4: areturn

  public int argIndex();
    Code:
       0: aload_0
       1: getfield      #33                 // Field argIndex:I
       4: ireturn

  public wvlet.airframe.surface.Parameter param();
    Code:
       0: aload_0
       1: invokespecial #37                 // Method wvlet/airframe/launcher/OptionParser$CLOptionItemBase.param:()Lwvlet/airframe/surface/Parameter;
       4: areturn

  public java.lang.String name();
    Code:
       0: aload_0
       1: invokevirtual #41                 // Method arg:()Lwvlet/airframe/launcher/argument;
       4: invokeinterface #45,  1           // InterfaceMethod wvlet/airframe/launcher/argument.name:()Ljava/lang/String;
       9: invokevirtual #51                 // Method java/lang/String.isEmpty:()Z
      12: ifeq          25
      15: aload_0
      16: invokevirtual #52                 // Method param:()Lwvlet/airframe/surface/Parameter;
      19: invokeinterface #55,  1           // InterfaceMethod wvlet/airframe/surface/Parameter.name:()Ljava/lang/String;
      24: areturn
      25: aload_0
      26: invokevirtual #41                 // Method arg:()Lwvlet/airframe/launcher/argument;
      29: invokeinterface #45,  1           // InterfaceMethod wvlet/airframe/launcher/argument.name:()Ljava/lang/String;
      34: areturn

  public wvlet.airframe.launcher.OptionParser$CLArgument copy(wvlet.airframe.surface.reflect.Path, wvlet.airframe.launcher.argument, int, wvlet.airframe.surface.Parameter);
    Code:
       0: new           #2                  // class wvlet/airframe/launcher/OptionParser$CLArgument
       3: dup
       4: aload_1
       5: aload_2
       6: iload_3
       7: aload         4
       9: invokespecial #61                 // Method "<init>":(Lwvlet/airframe/surface/reflect/Path;Lwvlet/airframe/launcher/argument;ILwvlet/airframe/surface/Parameter;)V
      12: areturn

  public wvlet.airframe.surface.reflect.Path copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #65                 // Method path:()Lwvlet/airframe/surface/reflect/Path;
       4: areturn

  public wvlet.airframe.launcher.argument copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #41                 // Method arg:()Lwvlet/airframe/launcher/argument;
       4: areturn

  public int copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method argIndex:()I
       4: ireturn

  public wvlet.airframe.surface.Parameter copy$default$4();
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method param:()Lwvlet/airframe/surface/Parameter;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #72                 // String CLArgument
       2: areturn

  public int productArity();
    Code:
       0: iconst_4
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 3
                     0: 32
                     1: 37
                     2: 42
                     3: 50
               default: 55
          }
      32: aload_0
      33: invokevirtual #65                 // Method path:()Lwvlet/airframe/surface/reflect/Path;
      36: areturn
      37: aload_0
      38: invokevirtual #41                 // Method arg:()Lwvlet/airframe/launcher/argument;
      41: areturn
      42: aload_0
      43: invokevirtual #69                 // Method argIndex:()I
      46: invokestatic  #82                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      49: areturn
      50: aload_0
      51: invokevirtual #52                 // Method param:()Lwvlet/airframe/surface/Parameter;
      54: areturn
      55: new           #84                 // class java/lang/IndexOutOfBoundsException
      58: dup
      59: iload_1
      60: invokestatic  #90                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      63: invokespecial #93                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      66: athrow

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #102                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #106                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class wvlet/airframe/launcher/OptionParser$CLArgument
       4: ireturn

  public int hashCode();
    Code:
       0: ldc           #111                // int -889275714
       2: istore_1
       3: iload_1
       4: aload_0
       5: invokevirtual #65                 // Method path:()Lwvlet/airframe/surface/reflect/Path;
       8: invokestatic  #117                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      11: invokestatic  #121                // Method scala/runtime/Statics.mix:(II)I
      14: istore_1
      15: iload_1
      16: aload_0
      17: invokevirtual #41                 // Method arg:()Lwvlet/airframe/launcher/argument;
      20: invokestatic  #117                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      23: invokestatic  #121                // Method scala/runtime/Statics.mix:(II)I
      26: istore_1
      27: iload_1
      28: aload_0
      29: invokevirtual #69                 // Method argIndex:()I
      32: invokestatic  #121                // Method scala/runtime/Statics.mix:(II)I
      35: istore_1
      36: iload_1
      37: aload_0
      38: invokevirtual #52                 // Method param:()Lwvlet/airframe/surface/Parameter;
      41: invokestatic  #117                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      44: invokestatic  #121                // Method scala/runtime/Statics.mix:(II)I
      47: istore_1
      48: iload_1
      49: iconst_4
      50: invokestatic  #124                // Method scala/runtime/Statics.finalizeHash:(II)I
      53: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #102                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #128                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     151
       5: aload_1
       6: astore_3
       7: aload_3
       8: instanceof    #2                  // class wvlet/airframe/launcher/OptionParser$CLArgument
      11: ifeq          18
      14: iconst_1
      15: goto          25
      18: goto          21
      21: iconst_0
      22: goto          25
      25: ifeq          155
      28: aload_1
      29: checkcast     #2                  // class wvlet/airframe/launcher/OptionParser$CLArgument
      32: astore        4
      34: aload_0
      35: invokevirtual #65                 // Method path:()Lwvlet/airframe/surface/reflect/Path;
      38: aload         4
      40: invokevirtual #65                 // Method path:()Lwvlet/airframe/surface/reflect/Path;
      43: astore        5
      45: dup
      46: ifnonnull     58
      49: pop
      50: aload         5
      52: ifnull        66
      55: goto          155
      58: aload         5
      60: invokevirtual #133                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      63: ifeq          155
      66: aload_0
      67: invokevirtual #41                 // Method arg:()Lwvlet/airframe/launcher/argument;
      70: aload         4
      72: invokevirtual #41                 // Method arg:()Lwvlet/airframe/launcher/argument;
      75: astore        6
      77: dup
      78: ifnonnull     90
      81: pop
      82: aload         6
      84: ifnull        98
      87: goto          155
      90: aload         6
      92: invokevirtual #133                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      95: ifeq          155
      98: aload_0
      99: invokevirtual #69                 // Method argIndex:()I
     102: aload         4
     104: invokevirtual #69                 // Method argIndex:()I
     107: if_icmpne     155
     110: aload_0
     111: invokevirtual #52                 // Method param:()Lwvlet/airframe/surface/Parameter;
     114: aload         4
     116: invokevirtual #52                 // Method param:()Lwvlet/airframe/surface/Parameter;
     119: astore        7
     121: dup
     122: ifnonnull     134
     125: pop
     126: aload         7
     128: ifnull        142
     131: goto          155
     134: aload         7
     136: invokevirtual #133                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     139: ifeq          155
     142: aload         4
     144: aload_0
     145: invokevirtual #135                // Method canEqual:(Ljava/lang/Object;)Z
     148: ifeq          155
     151: iconst_1
     152: goto          156
     155: iconst_0
     156: ireturn

  public wvlet.airframe.launcher.OptionParser$CLArgument(wvlet.airframe.surface.reflect.Path, wvlet.airframe.launcher.argument, int, wvlet.airframe.surface.Parameter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field path:Lwvlet/airframe/surface/reflect/Path;
       5: aload_0
       6: aload_2
       7: putfield      #30                 // Field arg:Lwvlet/airframe/launcher/argument;
      10: aload_0
      11: iload_3
      12: putfield      #33                 // Field argIndex:I
      15: aload_0
      16: aload         4
      18: invokespecial #140                // Method wvlet/airframe/launcher/OptionParser$CLOptionItemBase."<init>":(Lwvlet/airframe/surface/Parameter;)V
      21: aload_0
      22: invokestatic  #144                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
      25: return
}
