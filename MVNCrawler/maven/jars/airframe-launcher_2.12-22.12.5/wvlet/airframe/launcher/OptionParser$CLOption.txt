Compiled from "OptionParser.scala"
public class wvlet.airframe.launcher.OptionParser$CLOption extends wvlet.airframe.launcher.OptionParser$CLOptionItemBase implements scala.Product,scala.Serializable {
  private final wvlet.airframe.surface.reflect.Path path;

  private final wvlet.airframe.launcher.option annot;

  private final scala.collection.Seq<java.lang.String> prefixes;

  public wvlet.airframe.surface.reflect.Path path();
    Code:
       0: aload_0
       1: getfield      #28                 // Field path:Lwvlet/airframe/surface/reflect/Path;
       4: areturn

  public wvlet.airframe.launcher.option annot();
    Code:
       0: aload_0
       1: getfield      #33                 // Field annot:Lwvlet/airframe/launcher/option;
       4: areturn

  public wvlet.airframe.surface.Parameter param();
    Code:
       0: aload_0
       1: invokespecial #37                 // Method wvlet/airframe/launcher/OptionParser$CLOptionItemBase.param:()Lwvlet/airframe/surface/Parameter;
       4: areturn

  public scala.collection.Seq<java.lang.String> prefixes();
    Code:
       0: aload_0
       1: getfield      #41                 // Field prefixes:Lscala/collection/Seq;
       4: areturn

  public boolean takesArgument();
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method param:()Lwvlet/airframe/surface/Parameter;
       4: invokeinterface #50,  1           // InterfaceMethod wvlet/airframe/surface/Parameter.surface:()Lwvlet/airframe/surface/Surface;
       9: astore_1
      10: aload_1
      11: invokeinterface #55,  1           // InterfaceMethod wvlet/airframe/surface/Surface.isOption:()Z
      16: ifeq          37
      19: aload_1
      20: invokeinterface #58,  1           // InterfaceMethod wvlet/airframe/surface/Surface.typeArgs:()Lscala/collection/Seq;
      25: iconst_0
      26: invokeinterface #64,  2           // InterfaceMethod scala/collection/Seq.apply:(I)Ljava/lang/Object;
      31: checkcast     #52                 // class wvlet/airframe/surface/Surface
      34: goto          38
      37: aload_1
      38: astore_2
      39: aload_2
      40: getstatic     #68                 // Field wvlet/airframe/surface/Primitive$Boolean$.MODULE$:Lwvlet/airframe/surface/Primitive$Boolean$;
      43: astore_3
      44: dup
      45: ifnonnull     56
      48: pop
      49: aload_3
      50: ifnull        67
      53: goto          63
      56: aload_3
      57: invokevirtual #74                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifne          67
      63: iconst_1
      64: goto          68
      67: iconst_0
      68: ireturn

  public wvlet.airframe.launcher.OptionParser$CLOption copy(wvlet.airframe.surface.reflect.Path, wvlet.airframe.launcher.option, wvlet.airframe.surface.Parameter);
    Code:
       0: new           #2                  // class wvlet/airframe/launcher/OptionParser$CLOption
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokespecial #83                 // Method "<init>":(Lwvlet/airframe/surface/reflect/Path;Lwvlet/airframe/launcher/option;Lwvlet/airframe/surface/Parameter;)V
      10: areturn

  public wvlet.airframe.surface.reflect.Path copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #87                 // Method path:()Lwvlet/airframe/surface/reflect/Path;
       4: areturn

  public wvlet.airframe.launcher.option copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #90                 // Method annot:()Lwvlet/airframe/launcher/option;
       4: areturn

  public wvlet.airframe.surface.Parameter copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method param:()Lwvlet/airframe/surface/Parameter;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #94                 // String CLOption
       2: areturn

  public int productArity();
    Code:
       0: iconst_3
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 2
                     0: 28
                     1: 33
                     2: 38
               default: 43
          }
      28: aload_0
      29: invokevirtual #87                 // Method path:()Lwvlet/airframe/surface/reflect/Path;
      32: areturn
      33: aload_0
      34: invokevirtual #90                 // Method annot:()Lwvlet/airframe/launcher/option;
      37: areturn
      38: aload_0
      39: invokevirtual #44                 // Method param:()Lwvlet/airframe/surface/Parameter;
      42: areturn
      43: new           #100                // class java/lang/IndexOutOfBoundsException
      46: dup
      47: iload_1
      48: invokestatic  #106                // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      51: invokespecial #109                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      54: athrow

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #118                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #122                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class wvlet/airframe/launcher/OptionParser$CLOption
       4: ireturn

  public int hashCode();
    Code:
       0: getstatic     #118                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #129                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #118                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #133                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     139
       5: aload_1
       6: astore_3
       7: aload_3
       8: instanceof    #2                  // class wvlet/airframe/launcher/OptionParser$CLOption
      11: ifeq          18
      14: iconst_1
      15: goto          25
      18: goto          21
      21: iconst_0
      22: goto          25
      25: ifeq          143
      28: aload_1
      29: checkcast     #2                  // class wvlet/airframe/launcher/OptionParser$CLOption
      32: astore        4
      34: aload_0
      35: invokevirtual #87                 // Method path:()Lwvlet/airframe/surface/reflect/Path;
      38: aload         4
      40: invokevirtual #87                 // Method path:()Lwvlet/airframe/surface/reflect/Path;
      43: astore        5
      45: dup
      46: ifnonnull     58
      49: pop
      50: aload         5
      52: ifnull        66
      55: goto          143
      58: aload         5
      60: invokevirtual #74                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      63: ifeq          143
      66: aload_0
      67: invokevirtual #90                 // Method annot:()Lwvlet/airframe/launcher/option;
      70: aload         4
      72: invokevirtual #90                 // Method annot:()Lwvlet/airframe/launcher/option;
      75: astore        6
      77: dup
      78: ifnonnull     90
      81: pop
      82: aload         6
      84: ifnull        98
      87: goto          143
      90: aload         6
      92: invokevirtual #74                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      95: ifeq          143
      98: aload_0
      99: invokevirtual #44                 // Method param:()Lwvlet/airframe/surface/Parameter;
     102: aload         4
     104: invokevirtual #44                 // Method param:()Lwvlet/airframe/surface/Parameter;
     107: astore        7
     109: dup
     110: ifnonnull     122
     113: pop
     114: aload         7
     116: ifnull        130
     119: goto          143
     122: aload         7
     124: invokevirtual #74                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     127: ifeq          143
     130: aload         4
     132: aload_0
     133: invokevirtual #135                // Method canEqual:(Ljava/lang/Object;)Z
     136: ifeq          143
     139: iconst_1
     140: goto          144
     143: iconst_0
     144: ireturn

  public wvlet.airframe.launcher.OptionParser$CLOption(wvlet.airframe.surface.reflect.Path, wvlet.airframe.launcher.option, wvlet.airframe.surface.Parameter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #28                 // Field path:Lwvlet/airframe/surface/reflect/Path;
       5: aload_0
       6: aload_2
       7: putfield      #33                 // Field annot:Lwvlet/airframe/launcher/option;
      10: aload_0
      11: aload_3
      12: invokespecial #142                // Method wvlet/airframe/launcher/OptionParser$CLOptionItemBase."<init>":(Lwvlet/airframe/surface/Parameter;)V
      15: aload_0
      16: invokestatic  #146                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
      19: aload_0
      20: getstatic     #151                // Field wvlet/airframe/launcher/OptionParser$.MODULE$:Lwvlet/airframe/launcher/OptionParser$;
      23: aload_2
      24: invokeinterface #154,  1          // InterfaceMethod wvlet/airframe/launcher/option.prefix:()Ljava/lang/String;
      29: invokevirtual #158                // Method wvlet/airframe/launcher/OptionParser$.splitPrefixes:(Ljava/lang/String;)Lscala/collection/Seq;
      32: putfield      #41                 // Field prefixes:Lscala/collection/Seq;
      35: return
}
