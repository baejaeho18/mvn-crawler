Compiled from "StringTree.scala"
public class wvlet.airframe.launcher.StringTree$SeqLeaf implements wvlet.airframe.launcher.StringTree,scala.Product,scala.Serializable {
  private final scala.collection.Seq<wvlet.airframe.launcher.StringTree> elems;

  public wvlet.airframe.launcher.StringTree $plus(scala.Tuple2<wvlet.airframe.surface.reflect.Path, wvlet.airframe.launcher.StringTree>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #31                 // InterfaceMethod wvlet/airframe/launcher/StringTree.$plus$:(Lwvlet/airframe/launcher/StringTree;Lscala/Tuple2;)Lwvlet/airframe/launcher/StringTree;
       5: areturn

  public wvlet.airframe.launcher.StringTree $plus$plus(scala.collection.Iterable<scala.Tuple2<wvlet.airframe.surface.reflect.Path, wvlet.airframe.launcher.StringTree>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #42                 // InterfaceMethod wvlet/airframe/launcher/StringTree.$plus$plus$:(Lwvlet/airframe/launcher/StringTree;Lscala/collection/Iterable;)Lwvlet/airframe/launcher/StringTree;
       5: areturn

  public wvlet.airframe.launcher.StringTree set(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #51                 // InterfaceMethod wvlet/airframe/launcher/StringTree.set$:(Lwvlet/airframe/launcher/StringTree;Ljava/lang/String;Ljava/lang/String;)Lwvlet/airframe/launcher/StringTree;
       6: areturn

  public wvlet.airframe.launcher.StringTree set(wvlet.airframe.surface.reflect.Path, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #56                 // InterfaceMethod wvlet/airframe/launcher/StringTree.set$:(Lwvlet/airframe/launcher/StringTree;Lwvlet/airframe/surface/reflect/Path;Ljava/lang/String;)Lwvlet/airframe/launcher/StringTree;
       6: areturn

  public wvlet.airframe.launcher.StringTree get(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #63                 // InterfaceMethod wvlet/airframe/launcher/StringTree.get$:(Lwvlet/airframe/launcher/StringTree;Ljava/lang/String;)Lwvlet/airframe/launcher/StringTree;
       5: areturn

  public scala.collection.Iterator<scala.Tuple2<wvlet.airframe.surface.reflect.Path, java.lang.String>> dfs();
    Code:
       0: aload_0
       1: invokestatic  #70                 // InterfaceMethod wvlet/airframe/launcher/StringTree.dfs$:(Lwvlet/airframe/launcher/StringTree;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator<scala.Tuple2<wvlet.airframe.surface.reflect.Path, java.lang.String>> dfs(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #75                 // InterfaceMethod wvlet/airframe/launcher/StringTree.dfs$:(Lwvlet/airframe/launcher/StringTree;Ljava/lang/String;)Lscala/collection/Iterator;
       5: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokestatic  #81                 // InterfaceMethod wvlet/airframe/launcher/StringTree.isEmpty$:(Lwvlet/airframe/launcher/StringTree;)Z
       4: ireturn

  public byte[] toMsgPack();
    Code:
       0: aload_0
       1: invokestatic  #87                 // InterfaceMethod wvlet/airframe/launcher/StringTree.toMsgPack$:(Lwvlet/airframe/launcher/StringTree;)[B
       4: areturn

  public scala.collection.Seq<wvlet.airframe.launcher.StringTree> elems();
    Code:
       0: aload_0
       1: getfield      #91                 // Field elems:Lscala/collection/Seq;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #95                 // class java/lang/StringBuilder
       3: dup
       4: ldc           #96                 // int 2
       6: invokespecial #100                // Method java/lang/StringBuilder."<init>":(I)V
       9: ldc           #102                // String [
      11: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_0
      15: invokevirtual #108                // Method elems:()Lscala/collection/Seq;
      18: ldc           #110                // String ,
      20: invokeinterface #116,  2          // InterfaceMethod scala/collection/Seq.mkString:(Ljava/lang/String;)Ljava/lang/String;
      25: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: ldc           #118                // String ]
      30: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #120                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: areturn

  public wvlet.airframe.launcher.StringTree$SeqLeaf setNode(wvlet.airframe.surface.reflect.Path, wvlet.airframe.launcher.StringTree);
    Code:
       0: new           #2                  // class wvlet/airframe/launcher/StringTree$SeqLeaf
       3: dup
       4: aload_0
       5: invokevirtual #108                // Method elems:()Lscala/collection/Seq;
       8: getstatic     #126                // Field wvlet/airframe/launcher/StringTree$EmptyNode$.MODULE$:Lwvlet/airframe/launcher/StringTree$EmptyNode$;
      11: aload_1
      12: aload_2
      13: invokevirtual #129                // Method wvlet/airframe/launcher/StringTree$EmptyNode$.setNode:(Lwvlet/airframe/surface/reflect/Path;Lwvlet/airframe/launcher/StringTree;)Lwvlet/airframe/launcher/StringTree;
      16: getstatic     #134                // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
      19: invokevirtual #138                // Method scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      22: invokeinterface #142,  3          // InterfaceMethod scala/collection/Seq.$colon$plus:(Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      27: checkcast     #112                // class scala/collection/Seq
      30: invokespecial #145                // Method "<init>":(Lscala/collection/Seq;)V
      33: areturn

  public wvlet.airframe.launcher.StringTree get(wvlet.airframe.surface.reflect.Path);
    Code:
       0: aload_1
       1: invokeinterface #151,  1          // InterfaceMethod wvlet/airframe/surface/reflect/Path.isEmpty:()Z
       6: ifeq          11
       9: aload_0
      10: areturn
      11: getstatic     #126                // Field wvlet/airframe/launcher/StringTree$EmptyNode$.MODULE$:Lwvlet/airframe/launcher/StringTree$EmptyNode$;
      14: areturn

  public scala.collection.Iterator<scala.Tuple2<wvlet.airframe.surface.reflect.Path, java.lang.String>> dfs(wvlet.airframe.surface.reflect.Path);
    Code:
       0: aload_0
       1: invokevirtual #108                // Method elems:()Lscala/collection/Seq;
       4: aload_1
       5: invokedynamic #174,  0            // InvokeDynamic #0:apply:(Lwvlet/airframe/surface/reflect/Path;)Lscala/Function1;
      10: getstatic     #134                // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
      13: invokevirtual #138                // Method scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      16: invokeinterface #178,  3          // InterfaceMethod scala/collection/Seq.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      21: checkcast     #180                // class scala/collection/TraversableOnce
      24: invokedynamic #191,  0            // InvokeDynamic #1:apply:()Lscala/Function2;
      29: invokeinterface #195,  2          // InterfaceMethod scala/collection/TraversableOnce.reduce:(Lscala/Function2;)Ljava/lang/Object;
      34: checkcast     #197                // class scala/collection/Iterator
      37: areturn

  public wvlet.airframe.launcher.StringTree$SeqLeaf copy(scala.collection.Seq<wvlet.airframe.launcher.StringTree>);
    Code:
       0: new           #2                  // class wvlet/airframe/launcher/StringTree$SeqLeaf
       3: dup
       4: aload_1
       5: invokespecial #145                // Method "<init>":(Lscala/collection/Seq;)V
       8: areturn

  public scala.collection.Seq<wvlet.airframe.launcher.StringTree> copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #108                // Method elems:()Lscala/collection/Seq;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #203                // String SeqLeaf
       2: areturn

  public int productArity();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 0
                     0: 20
               default: 25
          }
      20: aload_0
      21: invokevirtual #108                // Method elems:()Lscala/collection/Seq;
      24: areturn
      25: new           #210                // class java/lang/IndexOutOfBoundsException
      28: dup
      29: iload_1
      30: invokestatic  #215                // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      33: invokespecial #218                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      36: athrow

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #226                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #230                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class wvlet/airframe/launcher/StringTree$SeqLeaf
       4: ireturn

  public int hashCode();
    Code:
       0: getstatic     #226                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #238                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     75
       5: aload_1
       6: astore_3
       7: aload_3
       8: instanceof    #2                  // class wvlet/airframe/launcher/StringTree$SeqLeaf
      11: ifeq          18
      14: iconst_1
      15: goto          25
      18: goto          21
      21: iconst_0
      22: goto          25
      25: ifeq          79
      28: aload_1
      29: checkcast     #2                  // class wvlet/airframe/launcher/StringTree$SeqLeaf
      32: astore        4
      34: aload_0
      35: invokevirtual #108                // Method elems:()Lscala/collection/Seq;
      38: aload         4
      40: invokevirtual #108                // Method elems:()Lscala/collection/Seq;
      43: astore        5
      45: dup
      46: ifnonnull     58
      49: pop
      50: aload         5
      52: ifnull        66
      55: goto          79
      58: aload         5
      60: invokevirtual #241                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      63: ifeq          79
      66: aload         4
      68: aload_0
      69: invokevirtual #243                // Method canEqual:(Ljava/lang/Object;)Z
      72: ifeq          79
      75: iconst_1
      76: goto          80
      79: iconst_0
      80: ireturn

  public wvlet.airframe.launcher.StringTree setNode(wvlet.airframe.surface.reflect.Path, wvlet.airframe.launcher.StringTree);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #246                // Method setNode:(Lwvlet/airframe/surface/reflect/Path;Lwvlet/airframe/launcher/StringTree;)Lwvlet/airframe/launcher/StringTree$SeqLeaf;
       6: areturn

  public static final scala.collection.Iterator $anonfun$dfs$5(wvlet.airframe.surface.reflect.Path, wvlet.airframe.launcher.StringTree);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #249,  2          // InterfaceMethod wvlet/airframe/launcher/StringTree.dfs:(Lwvlet/airframe/surface/reflect/Path;)Lscala/collection/Iterator;
       7: areturn

  public static final scala.collection.Iterator $anonfun$dfs$7(scala.collection.Iterator);
    Code:
       0: aload_0
       1: areturn

  public static final scala.collection.Iterator $anonfun$dfs$6(scala.collection.Iterator, scala.collection.Iterator);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #264,  0            // InvokeDynamic #2:apply:(Lscala/collection/Iterator;)Lscala/Function0;
       7: invokeinterface #267,  2          // InterfaceMethod scala/collection/Iterator.$plus$plus:(Lscala/Function0;)Lscala/collection/Iterator;
      12: areturn

  public wvlet.airframe.launcher.StringTree$SeqLeaf(scala.collection.Seq<wvlet.airframe.launcher.StringTree>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #91                 // Field elems:Lscala/collection/Seq;
       5: aload_0
       6: invokespecial #271                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #275                // InterfaceMethod wvlet/airframe/launcher/StringTree.$init$:(Lwvlet/airframe/launcher/StringTree;)V
      13: aload_0
      14: invokestatic  #278                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
      17: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #290,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
