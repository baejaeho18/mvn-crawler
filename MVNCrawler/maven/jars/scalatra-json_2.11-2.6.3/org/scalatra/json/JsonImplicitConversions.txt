Compiled from "JsonImplicitConversions.scala"
public interface org.scalatra.json.JsonImplicitConversions extends org.scalatra.util.conversion.TypeConverterSupport {
  public abstract void org$scalatra$json$JsonImplicitConversions$_setter_$jsonToBoolean_$eq(org.scalatra.util.conversion.package$TypeConverter);

  public abstract void org$scalatra$json$JsonImplicitConversions$_setter_$jsonToFloat_$eq(org.scalatra.util.conversion.package$TypeConverter);

  public abstract void org$scalatra$json$JsonImplicitConversions$_setter_$jsonToDouble_$eq(org.scalatra.util.conversion.package$TypeConverter);

  public abstract void org$scalatra$json$JsonImplicitConversions$_setter_$jsonToByte_$eq(org.scalatra.util.conversion.package$TypeConverter);

  public abstract void org$scalatra$json$JsonImplicitConversions$_setter_$jsonToShort_$eq(org.scalatra.util.conversion.package$TypeConverter);

  public abstract void org$scalatra$json$JsonImplicitConversions$_setter_$jsonToInt_$eq(org.scalatra.util.conversion.package$TypeConverter);

  public abstract void org$scalatra$json$JsonImplicitConversions$_setter_$jsonToLong_$eq(org.scalatra.util.conversion.package$TypeConverter);

  public abstract void org$scalatra$json$JsonImplicitConversions$_setter_$jsonToSelf_$eq(org.scalatra.util.conversion.package$TypeConverter);

  public abstract void org$scalatra$json$JsonImplicitConversions$_setter_$jsonToBigInt_$eq(org.scalatra.util.conversion.package$TypeConverter);

  public abstract org.json4s.Formats jsonFormats();

  public abstract org.scalatra.util.conversion.package$TypeConverter<org.json4s.JsonAST$JValue, java.lang.Object> jsonToBoolean();

  public abstract org.scalatra.util.conversion.package$TypeConverter<org.json4s.JsonAST$JValue, java.lang.Object> jsonToFloat();

  public abstract org.scalatra.util.conversion.package$TypeConverter<org.json4s.JsonAST$JValue, java.lang.Object> jsonToDouble();

  public abstract org.scalatra.util.conversion.package$TypeConverter<org.json4s.JsonAST$JValue, java.lang.Object> jsonToByte();

  public abstract org.scalatra.util.conversion.package$TypeConverter<org.json4s.JsonAST$JValue, java.lang.Object> jsonToShort();

  public abstract org.scalatra.util.conversion.package$TypeConverter<org.json4s.JsonAST$JValue, java.lang.Object> jsonToInt();

  public abstract org.scalatra.util.conversion.package$TypeConverter<org.json4s.JsonAST$JValue, java.lang.Object> jsonToLong();

  public abstract org.scalatra.util.conversion.package$TypeConverter<org.json4s.JsonAST$JValue, java.lang.String> jsonToSelf();

  public abstract org.scalatra.util.conversion.package$TypeConverter<org.json4s.JsonAST$JValue, scala.math.BigInt> jsonToBigInt();

  public abstract org.scalatra.util.conversion.package$TypeConverter<org.json4s.JsonAST$JValue, java.util.Date> jsonToDate(scala.Function0<java.lang.String>);

  public abstract org.scalatra.util.conversion.package$TypeConverter<org.json4s.JsonAST$JValue, java.util.Date> jsonToDateFormat(scala.Function0<java.text.DateFormat>);

  public abstract <T> org.scalatra.util.conversion.package$TypeConverter<org.json4s.JsonAST$JValue, scala.collection.Seq<T>> jsonToSeq(org.scalatra.util.conversion.package$TypeConverter<org.json4s.JsonAST$JValue, T>, scala.reflect.Manifest<T>);

  public abstract org.json4s.JsonAST$JValue jsonToValTypeConversion(org.json4s.JsonAST$JValue);

  public abstract org.scalatra.json.JsonConversions$JsonDateConversion<org.json4s.JsonAST$JValue> jsonToDateConversion(org.json4s.JsonAST$JValue);

  public abstract org.scalatra.json.JsonImplicitConversions$jsonToSeqConversion jsonToSeqConversion(org.json4s.JsonAST$JValue);
}
