Compiled from "JsonValueReader.scala"
public class org.scalatra.json.JsonValueReader implements org.scalatra.util.ValueReader<org.json4s.JsonAST$JValue, org.json4s.JsonAST$JValue> {
  private final org.json4s.JsonAST$JValue data;

  private final java.lang.Object separator;

  private volatile boolean bitmap$init$0;

  private static java.lang.Class[] reflParams$Cache1;

  private static volatile java.lang.ref.SoftReference reflPoly$Cache1;

  private static java.lang.Class[] reflParams$Cache2;

  private static volatile java.lang.ref.SoftReference reflPoly$Cache2;

  private static java.lang.Class[] reflParams$Cache3;

  private static volatile java.lang.ref.SoftReference reflPoly$Cache3;

  public static {};
    Code:
       0: iconst_0
       1: anewarray     #15                 // class java/lang/Class
       4: putstatic     #19                 // Field reflParams$Cache1:[Ljava/lang/Class;
       7: new           #21                 // class java/lang/ref/SoftReference
      10: dup
      11: new           #23                 // class scala/runtime/EmptyMethodCache
      14: dup
      15: invokespecial #26                 // Method scala/runtime/EmptyMethodCache."<init>":()V
      18: invokespecial #29                 // Method java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;)V
      21: putstatic     #33                 // Field reflPoly$Cache1:Ljava/lang/ref/SoftReference;
      24: iconst_0
      25: anewarray     #15                 // class java/lang/Class
      28: putstatic     #36                 // Field reflParams$Cache2:[Ljava/lang/Class;
      31: new           #21                 // class java/lang/ref/SoftReference
      34: dup
      35: new           #23                 // class scala/runtime/EmptyMethodCache
      38: dup
      39: invokespecial #26                 // Method scala/runtime/EmptyMethodCache."<init>":()V
      42: invokespecial #29                 // Method java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;)V
      45: putstatic     #39                 // Field reflPoly$Cache2:Ljava/lang/ref/SoftReference;
      48: iconst_0
      49: anewarray     #15                 // class java/lang/Class
      52: putstatic     #42                 // Field reflParams$Cache3:[Ljava/lang/Class;
      55: new           #21                 // class java/lang/ref/SoftReference
      58: dup
      59: new           #23                 // class scala/runtime/EmptyMethodCache
      62: dup
      63: invokespecial #26                 // Method scala/runtime/EmptyMethodCache."<init>":()V
      66: invokespecial #29                 // Method java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;)V
      69: putstatic     #45                 // Field reflPoly$Cache3:Ljava/lang/ref/SoftReference;
      72: return

  public static java.lang.reflect.Method reflMethod$Method1(java.lang.Class);
    Code:
       0: getstatic     #33                 // Field reflPoly$Cache1:Ljava/lang/ref/SoftReference;
       3: invokevirtual #57                 // Method java/lang/ref/SoftReference.get:()Ljava/lang/Object;
       6: checkcast     #59                 // class scala/runtime/MethodCache
       9: astore_1
      10: aload_1
      11: ifnonnull     33
      14: new           #23                 // class scala/runtime/EmptyMethodCache
      17: dup
      18: invokespecial #26                 // Method scala/runtime/EmptyMethodCache."<init>":()V
      21: astore_1
      22: new           #21                 // class java/lang/ref/SoftReference
      25: dup
      26: aload_1
      27: invokespecial #29                 // Method java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;)V
      30: putstatic     #33                 // Field reflPoly$Cache1:Ljava/lang/ref/SoftReference;
      33: aload_1
      34: aload_0
      35: invokevirtual #62                 // Method scala/runtime/MethodCache.find:(Ljava/lang/Class;)Ljava/lang/reflect/Method;
      38: astore_2
      39: aload_2
      40: ifnull        45
      43: aload_2
      44: areturn
      45: getstatic     #68                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
      48: aload_0
      49: ldc           #70                 // String beginning
      51: getstatic     #19                 // Field reflParams$Cache1:[Ljava/lang/Class;
      54: invokevirtual #74                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      57: invokevirtual #78                 // Method scala/runtime/ScalaRunTime$.ensureAccessible:(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;
      60: astore_2
      61: new           #21                 // class java/lang/ref/SoftReference
      64: dup
      65: aload_1
      66: aload_0
      67: aload_2
      68: invokevirtual #82                 // Method scala/runtime/MethodCache.add:(Ljava/lang/Class;Ljava/lang/reflect/Method;)Lscala/runtime/MethodCache;
      71: invokespecial #29                 // Method java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;)V
      74: putstatic     #33                 // Field reflPoly$Cache1:Ljava/lang/ref/SoftReference;
      77: aload_2
      78: areturn

  public static java.lang.reflect.Method reflMethod$Method2(java.lang.Class);
    Code:
       0: getstatic     #39                 // Field reflPoly$Cache2:Ljava/lang/ref/SoftReference;
       3: invokevirtual #57                 // Method java/lang/ref/SoftReference.get:()Ljava/lang/Object;
       6: checkcast     #59                 // class scala/runtime/MethodCache
       9: astore_1
      10: aload_1
      11: ifnonnull     33
      14: new           #23                 // class scala/runtime/EmptyMethodCache
      17: dup
      18: invokespecial #26                 // Method scala/runtime/EmptyMethodCache."<init>":()V
      21: astore_1
      22: new           #21                 // class java/lang/ref/SoftReference
      25: dup
      26: aload_1
      27: invokespecial #29                 // Method java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;)V
      30: putstatic     #39                 // Field reflPoly$Cache2:Ljava/lang/ref/SoftReference;
      33: aload_1
      34: aload_0
      35: invokevirtual #62                 // Method scala/runtime/MethodCache.find:(Ljava/lang/Class;)Ljava/lang/reflect/Method;
      38: astore_2
      39: aload_2
      40: ifnull        45
      43: aload_2
      44: areturn
      45: getstatic     #68                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
      48: aload_0
      49: ldc           #70                 // String beginning
      51: getstatic     #36                 // Field reflParams$Cache2:[Ljava/lang/Class;
      54: invokevirtual #74                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      57: invokevirtual #78                 // Method scala/runtime/ScalaRunTime$.ensureAccessible:(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;
      60: astore_2
      61: new           #21                 // class java/lang/ref/SoftReference
      64: dup
      65: aload_1
      66: aload_0
      67: aload_2
      68: invokevirtual #82                 // Method scala/runtime/MethodCache.add:(Ljava/lang/Class;Ljava/lang/reflect/Method;)Lscala/runtime/MethodCache;
      71: invokespecial #29                 // Method java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;)V
      74: putstatic     #39                 // Field reflPoly$Cache2:Ljava/lang/ref/SoftReference;
      77: aload_2
      78: areturn

  public static java.lang.reflect.Method reflMethod$Method3(java.lang.Class);
    Code:
       0: getstatic     #45                 // Field reflPoly$Cache3:Ljava/lang/ref/SoftReference;
       3: invokevirtual #57                 // Method java/lang/ref/SoftReference.get:()Ljava/lang/Object;
       6: checkcast     #59                 // class scala/runtime/MethodCache
       9: astore_1
      10: aload_1
      11: ifnonnull     33
      14: new           #23                 // class scala/runtime/EmptyMethodCache
      17: dup
      18: invokespecial #26                 // Method scala/runtime/EmptyMethodCache."<init>":()V
      21: astore_1
      22: new           #21                 // class java/lang/ref/SoftReference
      25: dup
      26: aload_1
      27: invokespecial #29                 // Method java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;)V
      30: putstatic     #45                 // Field reflPoly$Cache3:Ljava/lang/ref/SoftReference;
      33: aload_1
      34: aload_0
      35: invokevirtual #62                 // Method scala/runtime/MethodCache.find:(Ljava/lang/Class;)Ljava/lang/reflect/Method;
      38: astore_2
      39: aload_2
      40: ifnull        45
      43: aload_2
      44: areturn
      45: getstatic     #68                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
      48: aload_0
      49: ldc           #96                 // String end
      51: getstatic     #42                 // Field reflParams$Cache3:[Ljava/lang/Class;
      54: invokevirtual #74                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      57: invokevirtual #78                 // Method scala/runtime/ScalaRunTime$.ensureAccessible:(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;
      60: astore_2
      61: new           #21                 // class java/lang/ref/SoftReference
      64: dup
      65: aload_1
      66: aload_0
      67: aload_2
      68: invokevirtual #82                 // Method scala/runtime/MethodCache.add:(Ljava/lang/Class;Ljava/lang/reflect/Method;)Lscala/runtime/MethodCache;
      71: invokespecial #29                 // Method java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;)V
      74: putstatic     #45                 // Field reflPoly$Cache3:Ljava/lang/ref/SoftReference;
      77: aload_2
      78: areturn

  public org.json4s.JsonAST$JValue data();
    Code:
       0: aload_0
       1: getfield      #101                // Field data:Lorg/json4s/JsonAST$JValue;
       4: areturn

  private java.lang.Object separator();
    Code:
       0: aload_0
       1: getfield      #105                // Field bitmap$init$0:Z
       4: ifeq          17
       7: aload_0
       8: getfield      #107                // Field separator:Ljava/lang/Object;
      11: pop
      12: aload_0
      13: getfield      #107                // Field separator:Ljava/lang/Object;
      16: areturn
      17: new           #109                // class scala/UninitializedFieldError
      20: dup
      21: ldc           #111                // String Uninitialized field: JsonValueReader.scala: 13
      23: invokespecial #114                // Method scala/UninitializedFieldError."<init>":(Ljava/lang/String;)V
      26: athrow

  public scala.util.Either<java.lang.String, scala.Option<org.json4s.JsonAST$JValue>> read(java.lang.String);
    Code:
       0: getstatic     #121                // Field scala/util/control/Exception$.MODULE$:Lscala/util/control/Exception$;
       3: invokevirtual #125                // Method scala/util/control/Exception$.allCatch:()Lscala/util/control/Exception$Catch;
       6: new           #127                // class org/scalatra/json/JsonValueReader$$anonfun$read$1
       9: dup
      10: aload_0
      11: invokespecial #130                // Method org/scalatra/json/JsonValueReader$$anonfun$read$1."<init>":(Lorg/scalatra/json/JsonValueReader;)V
      14: invokevirtual #136                // Method scala/util/control/Exception$Catch.withApply:(Lscala/Function1;)Lscala/util/control/Exception$Catch;
      17: new           #138                // class org/scalatra/json/JsonValueReader$$anonfun$read$2
      20: dup
      21: aload_0
      22: aload_1
      23: invokespecial #141                // Method org/scalatra/json/JsonValueReader$$anonfun$read$2."<init>":(Lorg/scalatra/json/JsonValueReader;Ljava/lang/String;)V
      26: invokevirtual #145                // Method scala/util/control/Exception$Catch.apply:(Lscala/Function0;)Ljava/lang/Object;
      29: checkcast     #147                // class scala/util/Either
      32: areturn

  public scala.Option<org.json4s.JsonAST$JValue> readPath(java.lang.String, org.json4s.JsonAST$JValue);
    Code:
       0: aload_1
       1: aload_0
       2: invokespecial #155                // Method separator:()Ljava/lang/Object;
       5: astore        4
       7: aload         4
       9: invokevirtual #159                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      12: invokestatic  #161                // Method reflMethod$Method1:(Ljava/lang/Class;)Ljava/lang/reflect/Method;
      15: aload         4
      17: iconst_0
      18: anewarray     #5                  // class java/lang/Object
      21: invokevirtual #165                // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #167                // class java/lang/String
      27: checkcast     #167                // class java/lang/String
      30: invokevirtual #171                // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      33: istore_3
      34: aload_1
      35: aload_0
      36: invokespecial #155                // Method separator:()Ljava/lang/Object;
      39: astore        8
      41: aload         8
      43: invokevirtual #159                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      46: invokestatic  #173                // Method reflMethod$Method2:(Ljava/lang/Class;)Ljava/lang/reflect/Method;
      49: aload         8
      51: iconst_0
      52: anewarray     #5                  // class java/lang/Object
      55: invokevirtual #165                // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      58: checkcast     #167                // class java/lang/String
      61: checkcast     #167                // class java/lang/String
      64: invokevirtual #171                // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      67: iconst_m1
      68: if_icmple     92
      71: new           #175                // class scala/collection/immutable/StringOps
      74: dup
      75: getstatic     #180                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      78: aload_1
      79: invokevirtual #184                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
      82: invokespecial #185                // Method scala/collection/immutable/StringOps."<init>":(Ljava/lang/String;)V
      85: iload_3
      86: invokevirtual #189                // Method scala/collection/immutable/StringOps.splitAt:(I)Lscala/Tuple2;
      89: goto          102
      92: new           #191                // class scala/Tuple2
      95: dup
      96: aload_1
      97: ldc           #193                // String
      99: invokespecial #196                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     102: astore        7
     104: aload         7
     106: ifnull        323
     109: aload         7
     111: invokevirtual #199                // Method scala/Tuple2._1:()Ljava/lang/Object;
     114: checkcast     #167                // class java/lang/String
     117: astore        10
     119: aload         7
     121: invokevirtual #202                // Method scala/Tuple2._2:()Ljava/lang/Object;
     124: checkcast     #167                // class java/lang/String
     127: astore        11
     129: new           #191                // class scala/Tuple2
     132: dup
     133: aload         10
     135: aload         11
     137: invokespecial #196                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     140: astore        12
     142: aload         12
     144: astore        6
     146: aload         6
     148: invokevirtual #199                // Method scala/Tuple2._1:()Ljava/lang/Object;
     151: checkcast     #167                // class java/lang/String
     154: astore        13
     156: aload         6
     158: invokevirtual #202                // Method scala/Tuple2._2:()Ljava/lang/Object;
     161: checkcast     #167                // class java/lang/String
     164: astore        14
     166: new           #175                // class scala/collection/immutable/StringOps
     169: dup
     170: getstatic     #180                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     173: aload         14
     175: invokevirtual #184                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
     178: invokespecial #185                // Method scala/collection/immutable/StringOps."<init>":(Ljava/lang/String;)V
     181: invokevirtual #206                // Method scala/collection/immutable/StringOps.nonEmpty:()Z
     184: ifeq          280
     187: getstatic     #211                // Field org/scalatra/util/RicherString/package$RicherStringImplicitClass$.MODULE$:Lorg/scalatra/util/RicherString/package$RicherStringImplicitClass$;
     190: getstatic     #216                // Field org/scalatra/util/RicherString/package$.MODULE$:Lorg/scalatra/util/RicherString/package$;
     193: aload_0
     194: invokespecial #155                // Method separator:()Ljava/lang/Object;
     197: astore        16
     199: aload         16
     201: invokevirtual #159                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     204: invokestatic  #218                // Method reflMethod$Method3:(Ljava/lang/Class;)Ljava/lang/reflect/Method;
     207: aload         16
     209: iconst_0
     210: anewarray     #5                  // class java/lang/Object
     213: invokevirtual #165                // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
     216: checkcast     #167                // class java/lang/String
     219: checkcast     #167                // class java/lang/String
     222: invokevirtual #221                // Method org/scalatra/util/RicherString/package$.RicherStringImplicitClass:(Ljava/lang/String;)Ljava/lang/String;
     225: invokevirtual #225                // Method org/scalatra/util/RicherString/package$RicherStringImplicitClass$.nonBlank$extension:(Ljava/lang/String;)Z
     228: ifeq          271
     231: new           #175                // class scala/collection/immutable/StringOps
     234: dup
     235: getstatic     #180                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     238: aload         14
     240: invokevirtual #184                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
     243: invokespecial #185                // Method scala/collection/immutable/StringOps."<init>":(Ljava/lang/String;)V
     246: invokevirtual #229                // Method scala/collection/immutable/StringOps.size:()I
     249: iconst_1
     250: if_icmple     262
     253: aload         14
     255: iconst_2
     256: invokevirtual #233                // Method java/lang/String.substring:(I)Ljava/lang/String;
     259: goto          282
     262: aload         14
     264: iconst_1
     265: invokevirtual #233                // Method java/lang/String.substring:(I)Ljava/lang/String;
     268: goto          282
     271: aload         14
     273: iconst_1
     274: invokevirtual #233                // Method java/lang/String.substring:(I)Ljava/lang/String;
     277: goto          282
     280: aload         14
     282: astore        15
     284: aload         15
     286: invokevirtual #236                // Method java/lang/String.isEmpty:()Z
     289: ifeq          302
     292: aload_0
     293: aload         13
     295: aload_2
     296: invokevirtual #238                // Method get:(Ljava/lang/String;Lorg/json4s/JsonAST$JValue;)Lscala/Option;
     299: goto          322
     302: aload_0
     303: aload         13
     305: aload_2
     306: invokevirtual #238                // Method get:(Ljava/lang/String;Lorg/json4s/JsonAST$JValue;)Lscala/Option;
     309: new           #240                // class org/scalatra/json/JsonValueReader$$anonfun$readPath$1
     312: dup
     313: aload_0
     314: aload         15
     316: invokespecial #241                // Method org/scalatra/json/JsonValueReader$$anonfun$readPath$1."<init>":(Lorg/scalatra/json/JsonValueReader;Ljava/lang/String;)V
     319: invokevirtual #247                // Method scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
     322: areturn
     323: new           #249                // class scala/MatchError
     326: dup
     327: aload         7
     329: invokespecial #250                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     332: athrow
     333: astore        5
     335: aload         5
     337: invokevirtual #254                // Method java/lang/reflect/InvocationTargetException.getCause:()Ljava/lang/Throwable;
     340: athrow
     341: astore        9
     343: aload         9
     345: invokevirtual #254                // Method java/lang/reflect/InvocationTargetException.getCause:()Ljava/lang/Throwable;
     348: athrow
     349: astore        17
     351: aload         17
     353: invokevirtual #254                // Method java/lang/reflect/InvocationTargetException.getCause:()Ljava/lang/Throwable;
     356: athrow
    Exception table:
       from    to  target type
         199   216   349   Class java/lang/reflect/InvocationTargetException
          41    58   341   Class java/lang/reflect/InvocationTargetException
           7    24   333   Class java/lang/reflect/InvocationTargetException

  public org.json4s.JsonAST$JValue readPath$default$2();
    Code:
       0: aload_0
       1: invokevirtual #269                // Method data:()Lorg/json4s/JsonAST$JValue;
       4: areturn

  public scala.Option<org.json4s.JsonAST$JValue> get(java.lang.String, org.json4s.JsonAST$JValue);
    Code:
       0: getstatic     #274                // Field org/json4s/package$.MODULE$:Lorg/json4s/package$;
       3: aload_2
       4: invokevirtual #278                // Method org/json4s/package$.jvalue2monadic:(Lorg/json4s/JsonAST$JValue;)Lorg/json4s/MonadicJValue;
       7: aload_1
       8: invokevirtual #284                // Method org/json4s/MonadicJValue.$bslash:(Ljava/lang/String;)Lorg/json4s/JsonAST$JValue;
      11: astore_3
      12: aload_3
      13: astore        4
      15: getstatic     #274                // Field org/json4s/package$.MODULE$:Lorg/json4s/package$;
      18: invokevirtual #288                // Method org/json4s/package$.JNothing:()Lorg/json4s/JsonAST$JNothing$;
      21: aload         4
      23: astore        5
      25: dup
      26: ifnonnull     38
      29: pop
      30: aload         5
      32: ifnull        46
      35: goto          54
      38: aload         5
      40: invokevirtual #292                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      43: ifeq          54
      46: getstatic     #297                // Field scala/None$.MODULE$:Lscala/None$;
      49: astore        6
      51: goto          65
      54: new           #299                // class scala/Some
      57: dup
      58: aload         4
      60: invokespecial #300                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      63: astore        6
      65: aload         6
      67: areturn

  public java.lang.Object data();
    Code:
       0: aload_0
       1: invokevirtual #269                // Method data:()Lorg/json4s/JsonAST$JValue;
       4: areturn

  public org.scalatra.json.JsonValueReader(org.json4s.JsonAST$JValue, org.json4s.Formats);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #101                // Field data:Lorg/json4s/JsonAST$JValue;
       5: aload_0
       6: invokespecial #305                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #307                // class org/scalatra/json/JsonValueReader$$anon$1
      13: dup
      14: aload_0
      15: invokespecial #308                // Method org/scalatra/json/JsonValueReader$$anon$1."<init>":(Lorg/scalatra/json/JsonValueReader;)V
      18: putfield      #107                // Field separator:Ljava/lang/Object;
      21: aload_0
      22: iconst_1
      23: putfield      #105                // Field bitmap$init$0:Z
      26: return
}
