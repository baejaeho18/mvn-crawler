Compiled from "JsonSupport.scala"
public interface org.scalatra.json.JsonSupport<T> extends org.scalatra.json.JsonOutput<T> {
  public abstract org.slf4j.Logger org$scalatra$json$JsonSupport$$logger();

  public abstract void org$scalatra$json$JsonSupport$_setter_$org$scalatra$json$JsonSupport$$logger_$eq(org.slf4j.Logger);

  public abstract boolean org$scalatra$json$JsonSupport$$_defaultCacheRequestBody();

  public abstract void org$scalatra$json$JsonSupport$_setter_$org$scalatra$json$JsonSupport$$_defaultCacheRequestBody_$eq(boolean);

  public abstract scala.Option org$scalatra$json$JsonSupport$$super$invoke(org.scalatra.MatchedRoute);

  public abstract boolean cacheRequestBodyAsString();

  public abstract org.json4s.JsonAST$JValue parseRequestBody(java.lang.String, javax.servlet.http.HttpServletRequest);

  public abstract org.json4s.JsonAST$JValue readJsonFromBody(java.lang.String);

  public abstract org.json4s.JsonAST$JValue readJsonFromStreamWithCharset(java.io.InputStream, java.lang.String);

  public abstract org.json4s.JsonAST$JValue readJsonFromStream(java.io.InputStream);

  public abstract scala.xml.factory.XMLLoader<scala.xml.Elem> secureXML();

  public abstract org.json4s.JsonAST$JValue readXmlFromBody(java.lang.String);

  public abstract org.json4s.JsonAST$JValue readXmlFromStream(java.io.InputStream);

  public abstract org.json4s.JsonAST$JValue transformRequestBody(org.json4s.JsonAST$JValue);

  public abstract scala.Option<java.lang.Object> invoke(org.scalatra.MatchedRoute);

  public abstract boolean shouldParseBody(java.lang.String, javax.servlet.http.HttpServletRequest);

  public abstract org.json4s.JsonAST$JValue parsedBody(javax.servlet.http.HttpServletRequest);
}
