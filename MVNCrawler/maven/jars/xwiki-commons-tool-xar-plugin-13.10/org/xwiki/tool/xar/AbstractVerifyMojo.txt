Compiled from "AbstractVerifyMojo.java"
public abstract class org.xwiki.tool.xar.AbstractVerifyMojo extends org.xwiki.tool.xar.AbstractXARMojo {
  protected static final java.lang.String AUTHOR;

  protected static final java.lang.String VERSION;

  private static final java.lang.String EXTENSION;

  private static final java.util.regex.Pattern TRANSLATION_PATTERN;

  protected boolean force;

  protected java.lang.String defaultLanguage;

  protected boolean formatLicense;

  protected java.lang.String commonsVersion;

  protected boolean skipDates;

  protected java.util.Set<java.lang.String> skipDatesDocumentList;

  protected java.util.List<java.lang.String> contentPages;

  protected java.util.List<java.lang.String> translatablePages;

  protected java.util.List<java.lang.String> visibleTechnicalPages;

  private org.apache.maven.execution.MavenSession mavenSession;

  private org.apache.maven.plugin.BuildPluginManager pluginManager;

  private java.util.List<java.util.regex.Pattern> contentPagePatterns;

  private java.util.List<java.util.regex.Pattern> translatablePagePatterns;

  private java.util.List<java.util.regex.Pattern> visibleTechnicalPagePatterns;

  public org.xwiki.tool.xar.AbstractVerifyMojo();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/xwiki/tool/xar/AbstractXARMojo."<init>":()V
       4: return

  protected void initializePatterns();
    Code:
       0: aload_0
       1: aload_0
       2: aload_0
       3: getfield      #2                  // Field contentPages:Ljava/util/List;
       6: invokespecial #3                  // Method initializationPagePatterns:(Ljava/util/List;)Ljava/util/List;
       9: putfield      #4                  // Field contentPagePatterns:Ljava/util/List;
      12: aload_0
      13: aload_0
      14: aload_0
      15: getfield      #5                  // Field translatablePages:Ljava/util/List;
      18: invokespecial #3                  // Method initializationPagePatterns:(Ljava/util/List;)Ljava/util/List;
      21: putfield      #6                  // Field translatablePagePatterns:Ljava/util/List;
      24: aload_0
      25: aload_0
      26: aload_0
      27: getfield      #7                  // Field visibleTechnicalPages:Ljava/util/List;
      30: invokespecial #3                  // Method initializationPagePatterns:(Ljava/util/List;)Ljava/util/List;
      33: putfield      #8                  // Field visibleTechnicalPagePatterns:Ljava/util/List;
      36: return

  private java.util.List<java.util.regex.Pattern> initializationPagePatterns(java.util.List<java.lang.String>);
    Code:
       0: new           #9                  // class java/util/ArrayList
       3: dup
       4: invokespecial #10                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_1
       9: ifnull        54
      12: aload_1
      13: invokeinterface #11,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      18: astore_3
      19: aload_3
      20: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          54
      28: aload_3
      29: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #14                 // class java/lang/String
      37: astore        4
      39: aload_2
      40: aload         4
      42: invokestatic  #15                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      45: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      50: pop
      51: goto          19
      54: aload_2
      55: areturn

  protected java.util.Collection<java.io.File> getXARXMLFiles() throws org.apache.maven.plugin.MojoFailureException;
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method getResourcesDirectory:()Ljava/io/File;
       4: astore_1
       5: new           #9                  // class java/util/ArrayList
       8: dup
       9: invokespecial #10                 // Method java/util/ArrayList."<init>":()V
      12: astore_2
      13: aload_1
      14: invokevirtual #18                 // Method java/io/File.exists:()Z
      17: ifeq          188
      20: new           #19                 // class org/codehaus/plexus/components/io/resources/PlexusIoFileResourceCollection
      23: dup
      24: invokespecial #20                 // Method org/codehaus/plexus/components/io/resources/PlexusIoFileResourceCollection."<init>":()V
      27: astore_3
      28: aload_3
      29: aload_1
      30: invokevirtual #21                 // Method org/codehaus/plexus/components/io/resources/PlexusIoFileResourceCollection.setBaseDir:(Ljava/io/File;)V
      33: new           #22                 // class org/codehaus/plexus/components/io/fileselectors/IncludeExcludeFileSelector
      36: dup
      37: invokespecial #23                 // Method org/codehaus/plexus/components/io/fileselectors/IncludeExcludeFileSelector."<init>":()V
      40: astore        5
      42: aload         5
      44: aload_0
      45: invokevirtual #24                 // Method getIncludes:()[Ljava/lang/String;
      48: invokevirtual #25                 // Method org/codehaus/plexus/components/io/fileselectors/IncludeExcludeFileSelector.setIncludes:([Ljava/lang/String;)V
      51: aload         5
      53: aload_0
      54: invokevirtual #26                 // Method getExcludes:()[Ljava/lang/String;
      57: invokevirtual #27                 // Method org/codehaus/plexus/components/io/fileselectors/IncludeExcludeFileSelector.setExcludes:([Ljava/lang/String;)V
      60: new           #22                 // class org/codehaus/plexus/components/io/fileselectors/IncludeExcludeFileSelector
      63: dup
      64: invokespecial #23                 // Method org/codehaus/plexus/components/io/fileselectors/IncludeExcludeFileSelector."<init>":()V
      67: astore        6
      69: aload         6
      71: iconst_1
      72: anewarray     #14                 // class java/lang/String
      75: dup
      76: iconst_0
      77: ldc           #29                 // String package.xml
      79: aastore
      80: invokevirtual #27                 // Method org/codehaus/plexus/components/io/fileselectors/IncludeExcludeFileSelector.setExcludes:([Ljava/lang/String;)V
      83: iconst_2
      84: anewarray     #30                 // class org/codehaus/plexus/components/io/fileselectors/FileSelector
      87: dup
      88: iconst_0
      89: aload         5
      91: aastore
      92: dup
      93: iconst_1
      94: aload         6
      96: aastore
      97: astore        4
      99: aload_3
     100: aload         4
     102: invokevirtual #31                 // Method org/codehaus/plexus/components/io/resources/PlexusIoFileResourceCollection.setFileSelectors:([Lorg/codehaus/plexus/components/io/fileselectors/FileSelector;)V
     105: aload_3
     106: invokevirtual #32                 // Method org/codehaus/plexus/components/io/resources/PlexusIoFileResourceCollection.getResources:()Ljava/util/Iterator;
     109: astore        7
     111: goto          128
     114: astore        8
     116: new           #34                 // class org/apache/maven/plugin/MojoFailureException
     119: dup
     120: ldc           #35                 // String Failed to get list of XAR XML files
     122: aload         8
     124: invokespecial #36                 // Method org/apache/maven/plugin/MojoFailureException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     127: athrow
     128: aload         7
     130: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     135: ifeq          188
     138: aload         7
     140: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     145: checkcast     #37                 // class org/codehaus/plexus/components/io/resources/PlexusIoResource
     148: astore        8
     150: aload         8
     152: invokeinterface #38,  1           // InterfaceMethod org/codehaus/plexus/components/io/resources/PlexusIoResource.isFile:()Z
     157: ifeq          185
     160: aload_2
     161: new           #39                 // class java/io/File
     164: dup
     165: aload_3
     166: invokevirtual #40                 // Method org/codehaus/plexus/components/io/resources/PlexusIoFileResourceCollection.getBaseDir:()Ljava/io/File;
     169: aload         8
     171: invokeinterface #41,  1           // InterfaceMethod org/codehaus/plexus/components/io/resources/PlexusIoResource.getName:()Ljava/lang/String;
     176: invokespecial #42                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
     179: invokeinterface #43,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     184: pop
     185: goto          128
     188: aload_2
     189: areturn
    Exception table:
       from    to  target type
         105   111   114   Class java/io/IOException

  protected java.lang.String guessDefaultLanguage(java.io.File, java.util.Collection<java.io.File>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #44                 // Method java/io/File.getPath:()Ljava/lang/String;
       5: invokevirtual #45                 // Method isTranslatablePage:(Ljava/lang/String;)Z
       8: ifne          22
      11: aload_0
      12: aload_1
      13: invokevirtual #44                 // Method java/io/File.getPath:()Ljava/lang/String;
      16: invokevirtual #46                 // Method isContentPage:(Ljava/lang/String;)Z
      19: ifeq          27
      22: aload_0
      23: getfield      #47                 // Field defaultLanguage:Ljava/lang/String;
      26: areturn
      27: ldc           #48                 // String
      29: astore_3
      30: getstatic     #49                 // Field TRANSLATION_PATTERN:Ljava/util/regex/Pattern;
      33: aload_1
      34: invokevirtual #50                 // Method java/io/File.getName:()Ljava/lang/String;
      37: invokevirtual #51                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      40: astore        4
      42: aload         4
      44: invokevirtual #52                 // Method java/util/regex/Matcher.matches:()Z
      47: ifeq          58
      50: aload_0
      51: getfield      #47                 // Field defaultLanguage:Ljava/lang/String;
      54: astore_3
      55: goto          152
      58: aload_1
      59: invokevirtual #44                 // Method java/io/File.getPath:()Ljava/lang/String;
      62: ldc           #54                 // String .xml
      64: invokestatic  #55                 // Method org/apache/commons/lang3/StringUtils.substringBeforeLast:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      67: astore        5
      69: ldc           #56                 // String %s\\..*\\.xml
      71: iconst_1
      72: anewarray     #57                 // class java/lang/Object
      75: dup
      76: iconst_0
      77: aload         5
      79: invokestatic  #58                 // Method java/util/regex/Pattern.quote:(Ljava/lang/String;)Ljava/lang/String;
      82: aastore
      83: invokestatic  #59                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      86: invokestatic  #15                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      89: astore        6
      91: aload_2
      92: invokeinterface #60,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      97: astore        7
      99: aload         7
     101: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     106: ifeq          152
     109: aload         7
     111: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     116: checkcast     #39                 // class java/io/File
     119: astore        8
     121: aload         6
     123: aload         8
     125: invokevirtual #44                 // Method java/io/File.getPath:()Ljava/lang/String;
     128: invokevirtual #51                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
     131: astore        9
     133: aload         9
     135: invokevirtual #52                 // Method java/util/regex/Matcher.matches:()Z
     138: ifeq          149
     141: aload_0
     142: getfield      #47                 // Field defaultLanguage:Ljava/lang/String;
     145: astore_3
     146: goto          152
     149: goto          99
     152: aload_3
     153: areturn

  protected boolean isContentPage(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #4                  // Field contentPagePatterns:Ljava/util/List;
       6: invokespecial #61                 // Method isMatchingPage:(Ljava/lang/String;Ljava/util/List;)Z
       9: ireturn

  protected boolean isTranslatablePage(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #6                  // Field translatablePagePatterns:Ljava/util/List;
       6: invokespecial #61                 // Method isMatchingPage:(Ljava/lang/String;Ljava/util/List;)Z
       9: ireturn

  protected boolean isVisibleTechnicalPage(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #8                  // Field visibleTechnicalPagePatterns:Ljava/util/List;
       6: invokespecial #61                 // Method isMatchingPage:(Ljava/lang/String;Ljava/util/List;)Z
       9: ireturn

  private boolean isMatchingPage(java.lang.String, java.util.List<java.util.regex.Pattern>);
    Code:
       0: aload_2
       1: ifnull        48
       4: aload_2
       5: invokeinterface #11,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      10: astore_3
      11: aload_3
      12: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      17: ifeq          48
      20: aload_3
      21: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      26: checkcast     #62                 // class java/util/regex/Pattern
      29: astore        4
      31: aload         4
      33: aload_1
      34: invokevirtual #51                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      37: invokevirtual #52                 // Method java/util/regex/Matcher.matches:()Z
      40: ifeq          45
      43: iconst_1
      44: ireturn
      45: goto          11
      48: iconst_0
      49: ireturn

  protected java.lang.String getXWikiCommonsVersion();
    Code:
       0: aload_0
       1: getfield      #63                 // Field commonsVersion:Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ifnonnull     17
       9: aload_0
      10: getfield      #64                 // Field project:Lorg/apache/maven/project/MavenProject;
      13: invokevirtual #65                 // Method org/apache/maven/project/MavenProject.getVersion:()Ljava/lang/String;
      16: astore_1
      17: aload_1
      18: areturn

  protected void executeLicenseGoal(java.lang.String) throws org.apache.maven.plugin.MojoExecutionException;
    Code:
       0: aload_0
       1: getfield      #64                 // Field project:Lorg/apache/maven/project/MavenProject;
       4: invokevirtual #66                 // Method org/apache/maven/project/MavenProject.getPluginManagement:()Lorg/apache/maven/model/PluginManagement;
       7: invokevirtual #67                 // Method org/apache/maven/model/PluginManagement.getPluginsAsMap:()Ljava/util/Map;
      10: ldc           #68                 // String com.mycila:license-maven-plugin
      12: invokeinterface #69,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #70                 // class org/apache/maven/model/Plugin
      20: astore_2
      21: aload_2
      22: ifnonnull     35
      25: new           #71                 // class org/apache/maven/plugin/MojoExecutionException
      28: dup
      29: ldc           #72                 // String License plugin could not be found in <pluginManagement>
      31: invokespecial #73                 // Method org/apache/maven/plugin/MojoExecutionException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_2
      36: aload_1
      37: invokestatic  #74                 // Method org/twdata/maven/mojoexecutor/MojoExecutor.goal:(Ljava/lang/String;)Ljava/lang/String;
      40: iconst_1
      41: anewarray     #75                 // class org/twdata/maven/mojoexecutor/MojoExecutor$Element
      44: dup
      45: iconst_0
      46: ldc           #76                 // String licenseSets
      48: invokestatic  #77                 // Method org/twdata/maven/mojoexecutor/MojoExecutor.name:(Ljava/lang/String;)Ljava/lang/String;
      51: iconst_1
      52: anewarray     #75                 // class org/twdata/maven/mojoexecutor/MojoExecutor$Element
      55: dup
      56: iconst_0
      57: ldc           #78                 // String licenseSet
      59: invokestatic  #77                 // Method org/twdata/maven/mojoexecutor/MojoExecutor.name:(Ljava/lang/String;)Ljava/lang/String;
      62: iconst_3
      63: anewarray     #75                 // class org/twdata/maven/mojoexecutor/MojoExecutor$Element
      66: dup
      67: iconst_0
      68: ldc           #79                 // String header
      70: invokestatic  #77                 // Method org/twdata/maven/mojoexecutor/MojoExecutor.name:(Ljava/lang/String;)Ljava/lang/String;
      73: ldc           #80                 // String license.txt
      75: invokestatic  #81                 // Method org/twdata/maven/mojoexecutor/MojoExecutor.element:(Ljava/lang/String;Ljava/lang/String;)Lorg/twdata/maven/mojoexecutor/MojoExecutor$Element;
      78: aastore
      79: dup
      80: iconst_1
      81: ldc           #82                 // String headerDefinitions
      83: invokestatic  #77                 // Method org/twdata/maven/mojoexecutor/MojoExecutor.name:(Ljava/lang/String;)Ljava/lang/String;
      86: iconst_1
      87: anewarray     #75                 // class org/twdata/maven/mojoexecutor/MojoExecutor$Element
      90: dup
      91: iconst_0
      92: ldc           #83                 // String headerDefinition
      94: invokestatic  #77                 // Method org/twdata/maven/mojoexecutor/MojoExecutor.name:(Ljava/lang/String;)Ljava/lang/String;
      97: ldc           #84                 // String license-xml-definition.xml
      99: invokestatic  #81                 // Method org/twdata/maven/mojoexecutor/MojoExecutor.element:(Ljava/lang/String;Ljava/lang/String;)Lorg/twdata/maven/mojoexecutor/MojoExecutor$Element;
     102: aastore
     103: invokestatic  #85                 // Method org/twdata/maven/mojoexecutor/MojoExecutor.element:(Ljava/lang/String;[Lorg/twdata/maven/mojoexecutor/MojoExecutor$Element;)Lorg/twdata/maven/mojoexecutor/MojoExecutor$Element;
     106: aastore
     107: dup
     108: iconst_2
     109: ldc           #86                 // String includes
     111: invokestatic  #77                 // Method org/twdata/maven/mojoexecutor/MojoExecutor.name:(Ljava/lang/String;)Ljava/lang/String;
     114: iconst_1
     115: anewarray     #75                 // class org/twdata/maven/mojoexecutor/MojoExecutor$Element
     118: dup
     119: iconst_0
     120: ldc           #87                 // String include
     122: invokestatic  #77                 // Method org/twdata/maven/mojoexecutor/MojoExecutor.name:(Ljava/lang/String;)Ljava/lang/String;
     125: ldc           #88                 // String src/main/resources/**/*.xml
     127: invokestatic  #81                 // Method org/twdata/maven/mojoexecutor/MojoExecutor.element:(Ljava/lang/String;Ljava/lang/String;)Lorg/twdata/maven/mojoexecutor/MojoExecutor$Element;
     130: aastore
     131: invokestatic  #85                 // Method org/twdata/maven/mojoexecutor/MojoExecutor.element:(Ljava/lang/String;[Lorg/twdata/maven/mojoexecutor/MojoExecutor$Element;)Lorg/twdata/maven/mojoexecutor/MojoExecutor$Element;
     134: aastore
     135: invokestatic  #85                 // Method org/twdata/maven/mojoexecutor/MojoExecutor.element:(Ljava/lang/String;[Lorg/twdata/maven/mojoexecutor/MojoExecutor$Element;)Lorg/twdata/maven/mojoexecutor/MojoExecutor$Element;
     138: aastore
     139: invokestatic  #85                 // Method org/twdata/maven/mojoexecutor/MojoExecutor.element:(Ljava/lang/String;[Lorg/twdata/maven/mojoexecutor/MojoExecutor$Element;)Lorg/twdata/maven/mojoexecutor/MojoExecutor$Element;
     142: aastore
     143: invokestatic  #89                 // Method org/twdata/maven/mojoexecutor/MojoExecutor.configuration:([Lorg/twdata/maven/mojoexecutor/MojoExecutor$Element;)Lorg/codehaus/plexus/util/xml/Xpp3Dom;
     146: aload_0
     147: getfield      #64                 // Field project:Lorg/apache/maven/project/MavenProject;
     150: aload_0
     151: getfield      #90                 // Field mavenSession:Lorg/apache/maven/execution/MavenSession;
     154: aload_0
     155: getfield      #91                 // Field pluginManager:Lorg/apache/maven/plugin/BuildPluginManager;
     158: invokestatic  #92                 // Method org/twdata/maven/mojoexecutor/MojoExecutor.executionEnvironment:(Lorg/apache/maven/project/MavenProject;Lorg/apache/maven/execution/MavenSession;Lorg/apache/maven/plugin/BuildPluginManager;)Lorg/twdata/maven/mojoexecutor/MojoExecutor$ExecutionEnvironment;
     161: invokestatic  #93                 // Method org/twdata/maven/mojoexecutor/MojoExecutor.executeMojo:(Lorg/apache/maven/model/Plugin;Ljava/lang/String;Lorg/codehaus/plexus/util/xml/Xpp3Dom;Lorg/twdata/maven/mojoexecutor/MojoExecutor$ExecutionEnvironment;)V
     164: return

  public org.apache.maven.project.MavenProject getProject();
    Code:
       0: aload_0
       1: invokespecial #94                 // Method org/xwiki/tool/xar/AbstractXARMojo.getProject:()Lorg/apache/maven/project/MavenProject;
       4: areturn

  static {};
    Code:
       0: ldc           #95                 // String (.*)\\..*\\.xml
       2: invokestatic  #15                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: putstatic     #49                 // Field TRANSLATION_PATTERN:Ljava/util/regex/Pattern;
       8: return
}
