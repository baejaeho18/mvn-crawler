Compiled from "AbstractXARMojo.java"
abstract class org.xwiki.tool.xar.AbstractXARMojo extends org.apache.maven.plugin.AbstractMojo {
  protected static final java.lang.String PACKAGE_XML;

  protected static final java.lang.String FILES_TAG;

  protected static final java.lang.String FILE_TAG;

  private static final java.lang.String DEFAULT_ENCODING;

  private static final java.lang.String[] DEFAULT_EXCLUDES;

  private static final java.lang.String[] DEFAULT_INCLUDES;

  protected java.lang.String[] includes;

  protected java.lang.String[] excludes;

  protected org.apache.maven.project.MavenProject project;

  protected java.lang.String encoding;

  protected java.util.List<org.apache.maven.artifact.repository.ArtifactRepository> remoteRepos;

  protected org.apache.maven.project.MavenProjectBuilder mavenProjectBuilder;

  protected org.apache.maven.artifact.factory.ArtifactFactory factory;

  protected org.apache.maven.artifact.resolver.ArtifactResolver resolver;

  private java.io.File outputBuildDirectory;

  private org.apache.maven.artifact.repository.ArtifactRepository local;

  private java.util.List<org.xwiki.tool.xar.XAREntry> entries;

  private java.util.Map<java.lang.String, org.xwiki.tool.xar.XAREntry> entryMap;

  org.xwiki.tool.xar.AbstractXARMojo();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/maven/plugin/AbstractMojo."<init>":()V
       4: aload_0
       5: ldc           #3                  // String UTF-8
       7: putfield      #4                  // Field encoding:Ljava/lang/String;
      10: return

  protected java.lang.String[] getIncludes();
    Code:
       0: aload_0
       1: getfield      #5                  // Field includes:[Ljava/lang/String;
       4: ifnull        20
       7: aload_0
       8: getfield      #5                  // Field includes:[Ljava/lang/String;
      11: arraylength
      12: ifle          20
      15: aload_0
      16: getfield      #5                  // Field includes:[Ljava/lang/String;
      19: areturn
      20: getstatic     #6                  // Field DEFAULT_INCLUDES:[Ljava/lang/String;
      23: areturn

  protected java.lang.String[] getExcludes();
    Code:
       0: aload_0
       1: getfield      #7                  // Field excludes:[Ljava/lang/String;
       4: ifnull        20
       7: aload_0
       8: getfield      #7                  // Field excludes:[Ljava/lang/String;
      11: arraylength
      12: ifle          20
      15: aload_0
      16: getfield      #7                  // Field excludes:[Ljava/lang/String;
      19: areturn
      20: getstatic     #8                  // Field DEFAULT_EXCLUDES:[Ljava/lang/String;
      23: areturn

  protected java.util.Map<java.lang.String, org.xwiki.tool.xar.XAREntry> getEntryMap();
    Code:
       0: aload_0
       1: getfield      #9                  // Field entryMap:Ljava/util/Map;
       4: ifnonnull     65
       7: aload_0
       8: new           #10                 // class java/util/HashMap
      11: dup
      12: invokespecial #11                 // Method java/util/HashMap."<init>":()V
      15: putfield      #9                  // Field entryMap:Ljava/util/Map;
      18: aload_0
      19: getfield      #12                 // Field entries:Ljava/util/List;
      22: invokeinterface #13,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      27: astore_1
      28: aload_1
      29: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          65
      37: aload_1
      38: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #16                 // class org/xwiki/tool/xar/XAREntry
      46: astore_2
      47: aload_0
      48: getfield      #9                  // Field entryMap:Ljava/util/Map;
      51: aload_2
      52: invokevirtual #17                 // Method org/xwiki/tool/xar/XAREntry.getDocument:()Ljava/lang/String;
      55: aload_2
      56: invokeinterface #18,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      61: pop
      62: goto          28
      65: aload_0
      66: getfield      #9                  // Field entryMap:Ljava/util/Map;
      69: areturn

  protected void unpack(java.io.File, java.io.File, java.lang.String, boolean, java.lang.String[], java.lang.String[]) throws org.apache.maven.plugin.MojoExecutionException;
    Code:
       0: new           #19                 // class org/codehaus/plexus/archiver/zip/ZipUnArchiver
       3: dup
       4: invokespecial #20                 // Method org/codehaus/plexus/archiver/zip/ZipUnArchiver."<init>":()V
       7: astore        7
       9: aload         7
      11: aload_0
      12: getfield      #4                  // Field encoding:Ljava/lang/String;
      15: invokevirtual #21                 // Method org/codehaus/plexus/archiver/zip/ZipUnArchiver.setEncoding:(Ljava/lang/String;)V
      18: aload         7
      20: new           #22                 // class org/codehaus/plexus/logging/console/ConsoleLogger
      23: dup
      24: iconst_3
      25: aload_3
      26: invokespecial #24                 // Method org/codehaus/plexus/logging/console/ConsoleLogger."<init>":(ILjava/lang/String;)V
      29: invokevirtual #25                 // Method org/codehaus/plexus/archiver/zip/ZipUnArchiver.enableLogging:(Lorg/codehaus/plexus/logging/Logger;)V
      32: aload         7
      34: aload_1
      35: invokevirtual #26                 // Method org/codehaus/plexus/archiver/zip/ZipUnArchiver.setSourceFile:(Ljava/io/File;)V
      38: aload         7
      40: aload_2
      41: invokevirtual #27                 // Method org/codehaus/plexus/archiver/zip/ZipUnArchiver.setDestDirectory:(Ljava/io/File;)V
      44: new           #28                 // class org/codehaus/plexus/components/io/fileselectors/IncludeExcludeFileSelector
      47: dup
      48: invokespecial #29                 // Method org/codehaus/plexus/components/io/fileselectors/IncludeExcludeFileSelector."<init>":()V
      51: astore        9
      53: aload         9
      55: aload         5
      57: invokevirtual #30                 // Method org/codehaus/plexus/components/io/fileselectors/IncludeExcludeFileSelector.setIncludes:([Ljava/lang/String;)V
      60: aload         9
      62: aload         6
      64: invokevirtual #31                 // Method org/codehaus/plexus/components/io/fileselectors/IncludeExcludeFileSelector.setExcludes:([Ljava/lang/String;)V
      67: aload         7
      69: iload         4
      71: invokevirtual #32                 // Method org/codehaus/plexus/archiver/zip/ZipUnArchiver.setOverwrite:(Z)V
      74: iload         4
      76: ifne          121
      79: new           #28                 // class org/codehaus/plexus/components/io/fileselectors/IncludeExcludeFileSelector
      82: dup
      83: invokespecial #29                 // Method org/codehaus/plexus/components/io/fileselectors/IncludeExcludeFileSelector."<init>":()V
      86: astore        10
      88: aload         10
      90: iconst_1
      91: anewarray     #33                 // class java/lang/String
      94: dup
      95: iconst_0
      96: ldc           #34                 // String package.xml
      98: aastore
      99: invokevirtual #31                 // Method org/codehaus/plexus/components/io/fileselectors/IncludeExcludeFileSelector.setExcludes:([Ljava/lang/String;)V
     102: iconst_2
     103: anewarray     #35                 // class org/codehaus/plexus/components/io/fileselectors/FileSelector
     106: dup
     107: iconst_0
     108: aload         9
     110: aastore
     111: dup
     112: iconst_1
     113: aload         10
     115: aastore
     116: astore        8
     118: goto          132
     121: iconst_1
     122: anewarray     #35                 // class org/codehaus/plexus/components/io/fileselectors/FileSelector
     125: dup
     126: iconst_0
     127: aload         9
     129: aastore
     130: astore        8
     132: aload         7
     134: aload         8
     136: invokevirtual #36                 // Method org/codehaus/plexus/archiver/zip/ZipUnArchiver.setFileSelectors:([Lorg/codehaus/plexus/components/io/fileselectors/FileSelector;)V
     139: aload         7
     141: invokevirtual #37                 // Method org/codehaus/plexus/archiver/zip/ZipUnArchiver.extract:()V
     144: goto          176
     147: astore        7
     149: new           #39                 // class org/apache/maven/plugin/MojoExecutionException
     152: dup
     153: ldc           #40                 // String Error unpacking file [%s] to [%s]
     155: iconst_2
     156: anewarray     #41                 // class java/lang/Object
     159: dup
     160: iconst_0
     161: aload_1
     162: aastore
     163: dup
     164: iconst_1
     165: aload_2
     166: aastore
     167: invokestatic  #42                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     170: aload         7
     172: invokespecial #43                 // Method org/apache/maven/plugin/MojoExecutionException."<init>":(Ljava/lang/String;Ljava/lang/Exception;)V
     175: athrow
     176: return
    Exception table:
       from    to  target type
           0   144   147   Class java/lang/Exception

  protected void unpackXARToOutputDirectory(org.apache.maven.artifact.Artifact, java.lang.String[], java.lang.String[]) throws org.apache.maven.plugin.MojoExecutionException;
    Code:
       0: aload_0
       1: getfield      #44                 // Field outputBuildDirectory:Ljava/io/File;
       4: invokevirtual #45                 // Method java/io/File.exists:()Z
       7: ifne          18
      10: aload_0
      11: getfield      #44                 // Field outputBuildDirectory:Ljava/io/File;
      14: invokevirtual #46                 // Method java/io/File.mkdirs:()Z
      17: pop
      18: aload_1
      19: invokeinterface #47,  1           // InterfaceMethod org/apache/maven/artifact/Artifact.getFile:()Ljava/io/File;
      24: astore        4
      26: aload_0
      27: aload         4
      29: aload_0
      30: getfield      #44                 // Field outputBuildDirectory:Ljava/io/File;
      33: ldc           #48                 // String XAR Plugin
      35: iconst_0
      36: aload_2
      37: aload_3
      38: invokevirtual #49                 // Method unpack:(Ljava/io/File;Ljava/io/File;Ljava/lang/String;Z[Ljava/lang/String;[Ljava/lang/String;)V
      41: return

  public org.apache.maven.project.MavenProject getProject();
    Code:
       0: aload_0
       1: getfield      #50                 // Field project:Lorg/apache/maven/project/MavenProject;
       4: areturn

  protected java.util.Set<org.apache.maven.artifact.Artifact> resolveArtifactDependencies(org.apache.maven.artifact.Artifact) throws org.apache.maven.artifact.resolver.ArtifactResolutionException, org.apache.maven.artifact.resolver.ArtifactNotFoundException, org.apache.maven.project.ProjectBuildingException;
    Code:
       0: aload_0
       1: getfield      #51                 // Field factory:Lorg/apache/maven/artifact/factory/ArtifactFactory;
       4: aload_1
       5: invokeinterface #52,  1           // InterfaceMethod org/apache/maven/artifact/Artifact.getGroupId:()Ljava/lang/String;
      10: aload_1
      11: invokeinterface #53,  1           // InterfaceMethod org/apache/maven/artifact/Artifact.getArtifactId:()Ljava/lang/String;
      16: aload_1
      17: invokeinterface #54,  1           // InterfaceMethod org/apache/maven/artifact/Artifact.getVersion:()Ljava/lang/String;
      22: ldc           #55                 // String
      24: ldc           #56                 // String pom
      26: invokeinterface #57,  6           // InterfaceMethod org/apache/maven/artifact/factory/ArtifactFactory.createArtifact:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/maven/artifact/Artifact;
      31: astore_2
      32: aload_0
      33: getfield      #58                 // Field mavenProjectBuilder:Lorg/apache/maven/project/MavenProjectBuilder;
      36: aload_2
      37: aload_0
      38: getfield      #59                 // Field remoteRepos:Ljava/util/List;
      41: aload_0
      42: getfield      #60                 // Field local:Lorg/apache/maven/artifact/repository/ArtifactRepository;
      45: invokeinterface #61,  4           // InterfaceMethod org/apache/maven/project/MavenProjectBuilder.buildFromRepository:(Lorg/apache/maven/artifact/Artifact;Ljava/util/List;Lorg/apache/maven/artifact/repository/ArtifactRepository;)Lorg/apache/maven/project/MavenProject;
      50: astore_3
      51: aload_0
      52: aload_3
      53: invokevirtual #62                 // Method resolveDependencyArtifacts:(Lorg/apache/maven/project/MavenProject;)Ljava/util/Set;
      56: areturn

  protected java.util.Set<org.apache.maven.artifact.Artifact> resolveDependencyArtifacts(org.apache.maven.project.MavenProject) throws org.apache.maven.artifact.resolver.ArtifactResolutionException, org.apache.maven.artifact.resolver.ArtifactNotFoundException, org.apache.maven.project.artifact.InvalidDependencyVersionException;
    Code:
       0: new           #63                 // class org/apache/maven/artifact/resolver/filter/AndArtifactFilter
       3: dup
       4: invokespecial #64                 // Method org/apache/maven/artifact/resolver/filter/AndArtifactFilter."<init>":()V
       7: astore_2
       8: aload_2
       9: new           #65                 // class org/apache/maven/artifact/resolver/filter/TypeArtifactFilter
      12: dup
      13: ldc           #66                 // String xar
      15: invokespecial #67                 // Method org/apache/maven/artifact/resolver/filter/TypeArtifactFilter."<init>":(Ljava/lang/String;)V
      18: invokevirtual #68                 // Method org/apache/maven/artifact/resolver/filter/AndArtifactFilter.add:(Lorg/apache/maven/artifact/resolver/filter/ArtifactFilter;)V
      21: aload_2
      22: new           #69                 // class org/apache/maven/artifact/resolver/filter/ScopeArtifactFilter
      25: dup
      26: ldc           #71                 // String runtime
      28: invokespecial #72                 // Method org/apache/maven/artifact/resolver/filter/ScopeArtifactFilter."<init>":(Ljava/lang/String;)V
      31: invokevirtual #68                 // Method org/apache/maven/artifact/resolver/filter/AndArtifactFilter.add:(Lorg/apache/maven/artifact/resolver/filter/ArtifactFilter;)V
      34: aload_1
      35: aload_0
      36: getfield      #51                 // Field factory:Lorg/apache/maven/artifact/factory/ArtifactFactory;
      39: ldc           #74                 // String test
      41: aload_2
      42: invokevirtual #75                 // Method org/apache/maven/project/MavenProject.createArtifacts:(Lorg/apache/maven/artifact/factory/ArtifactFactory;Ljava/lang/String;Lorg/apache/maven/artifact/resolver/filter/ArtifactFilter;)Ljava/util/Set;
      45: astore_3
      46: aload_3
      47: invokeinterface #76,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      52: astore        4
      54: aload         4
      56: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      61: ifeq          98
      64: aload         4
      66: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      71: checkcast     #73                 // class org/apache/maven/artifact/Artifact
      74: astore        5
      76: aload_0
      77: getfield      #77                 // Field resolver:Lorg/apache/maven/artifact/resolver/ArtifactResolver;
      80: aload         5
      82: aload_0
      83: getfield      #59                 // Field remoteRepos:Ljava/util/List;
      86: aload_0
      87: getfield      #60                 // Field local:Lorg/apache/maven/artifact/repository/ArtifactRepository;
      90: invokeinterface #78,  4           // InterfaceMethod org/apache/maven/artifact/resolver/ArtifactResolver.resolve:(Lorg/apache/maven/artifact/Artifact;Ljava/util/List;Lorg/apache/maven/artifact/repository/ArtifactRepository;)V
      95: goto          54
      98: aload_3
      99: areturn

  protected org.xwiki.tool.xar.internal.XWikiDocument getDocFromXML(java.io.File) throws org.apache.maven.plugin.MojoExecutionException;
    Code:
       0: new           #79                 // class org/xwiki/tool/xar/internal/XWikiDocument
       3: dup
       4: invokespecial #80                 // Method org/xwiki/tool/xar/internal/XWikiDocument."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_1
      10: invokevirtual #81                 // Method org/xwiki/tool/xar/internal/XWikiDocument.fromXML:(Ljava/io/File;)V
      13: goto          42
      16: astore_3
      17: new           #39                 // class org/apache/maven/plugin/MojoExecutionException
      20: dup
      21: ldc           #82                 // String Failed to parse [%s].
      23: iconst_1
      24: anewarray     #41                 // class java/lang/Object
      27: dup
      28: iconst_0
      29: aload_1
      30: invokevirtual #83                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      33: aastore
      34: invokestatic  #42                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      37: aload_3
      38: invokespecial #43                 // Method org/apache/maven/plugin/MojoExecutionException."<init>":(Ljava/lang/String;Ljava/lang/Exception;)V
      41: athrow
      42: aload_2
      43: areturn
    Exception table:
       from    to  target type
           0    13    16   Class java/lang/Exception

  protected java.io.File getResourcesDirectory();
    Code:
       0: new           #84                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #85                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #50                 // Field project:Lorg/apache/maven/project/MavenProject;
      11: invokevirtual #86                 // Method org/apache/maven/project/MavenProject.getBasedir:()Ljava/io/File;
      14: invokevirtual #83                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      17: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: ldc           #88                 // String /src/main/resources
      22: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: invokevirtual #89                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: ldc           #90                 // String /
      30: getstatic     #91                 // Field java/io/File.separator:Ljava/lang/String;
      33: invokevirtual #92                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      36: astore_1
      37: new           #93                 // class java/io/File
      40: dup
      41: aload_1
      42: invokespecial #94                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      45: areturn

  static {};
    Code:
       0: iconst_1
       1: anewarray     #33                 // class java/lang/String
       4: dup
       5: iconst_0
       6: ldc           #95                 // String **/META-INF/**
       8: aastore
       9: putstatic     #8                  // Field DEFAULT_EXCLUDES:[Ljava/lang/String;
      12: iconst_1
      13: anewarray     #33                 // class java/lang/String
      16: dup
      17: iconst_0
      18: ldc           #96                 // String **/*.xml
      20: aastore
      21: putstatic     #6                  // Field DEFAULT_INCLUDES:[Ljava/lang/String;
      24: return
}
