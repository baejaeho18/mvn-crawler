Compiled from "GetRollupJobRequest.java"
public class org.elasticsearch.client.rollup.GetRollupJobRequest implements org.elasticsearch.client.Validatable {
  private final java.lang.String jobId;

  public org.elasticsearch.client.rollup.GetRollupJobRequest(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String jobId is required
       7: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      10: pop
      11: ldc           #4                  // String _all
      13: aload_1
      14: invokevirtual #5                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      17: ifeq          30
      20: new           #6                  // class java/lang/IllegalArgumentException
      23: dup
      24: ldc           #7                  // String use the default ctor to ask for all jobs
      26: invokespecial #8                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      29: athrow
      30: aload_0
      31: aload_1
      32: putfield      #9                  // Field jobId:Ljava/lang/String;
      35: return

  public org.elasticsearch.client.rollup.GetRollupJobRequest();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #4                  // String _all
       7: putfield      #9                  // Field jobId:Ljava/lang/String;
      10: return

  public java.lang.String getJobId();
    Code:
       0: aload_0
       1: getfield      #9                  // Field jobId:Ljava/lang/String;
       4: areturn

  public java.util.Optional<org.elasticsearch.client.ValidationException> validate();
    Code:
       0: invokestatic  #10                 // Method java/util/Optional.empty:()Ljava/util/Optional;
       3: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #12                 // class org/elasticsearch/client/rollup/GetRollupJobRequest
      28: astore_2
      29: aload_0
      30: getfield      #9                  // Field jobId:Ljava/lang/String;
      33: aload_2
      34: getfield      #9                  // Field jobId:Ljava/lang/String;
      37: invokevirtual #5                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      40: ireturn

  public int hashCode();
    Code:
       0: iconst_1
       1: anewarray     #13                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #9                  // Field jobId:Ljava/lang/String;
      10: aastore
      11: invokestatic  #14                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
      14: ireturn
}
