Compiled from "RetryLifecyclePolicyRequest.java"
public class org.elasticsearch.client.indexlifecycle.RetryLifecyclePolicyRequest extends org.elasticsearch.client.TimedRequest {
  private final java.util.List<java.lang.String> indices;

  public org.elasticsearch.client.indexlifecycle.RetryLifecyclePolicyRequest(java.lang.String...);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/elasticsearch/client/TimedRequest."<init>":()V
       4: aload_1
       5: arraylength
       6: ifne          19
       9: new           #2                  // class java/lang/IllegalArgumentException
      12: dup
      13: ldc           #3                  // String Must at least specify one index to retry
      15: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: aload_1
      21: invokestatic  #5                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      24: putfield      #6                  // Field indices:Ljava/util/List;
      27: return

  public java.util.List<java.lang.String> getIndices();
    Code:
       0: aload_0
       1: getfield      #6                  // Field indices:Ljava/util/List;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #7                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #7                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #8                  // class org/elasticsearch/client/indexlifecycle/RetryLifecyclePolicyRequest
      28: astore_2
      29: aload_0
      30: getfield      #6                  // Field indices:Ljava/util/List;
      33: invokeinterface #9,  1            // InterfaceMethod java/util/List.size:()I
      38: aload_2
      39: getfield      #6                  // Field indices:Ljava/util/List;
      42: invokeinterface #9,  1            // InterfaceMethod java/util/List.size:()I
      47: if_icmpne     70
      50: aload_0
      51: getfield      #6                  // Field indices:Ljava/util/List;
      54: aload_2
      55: getfield      #6                  // Field indices:Ljava/util/List;
      58: invokeinterface #10,  2           // InterfaceMethod java/util/List.containsAll:(Ljava/util/Collection;)Z
      63: ifeq          70
      66: iconst_1
      67: goto          71
      70: iconst_0
      71: ireturn

  public int hashCode();
    Code:
       0: iconst_1
       1: anewarray     #11                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #6                  // Field indices:Ljava/util/List;
      10: aastore
      11: invokestatic  #12                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
      14: ireturn
}
