Compiled from "KtorHttpTemplate.kt"
public final class love.forte.simbot.http.template.ktor.KtorHttpResponseImpl<T> implements love.forte.simbot.http.template.HttpResponse<T> {
  private final org.slf4j.Logger logger;

  private kotlinx.coroutines.Deferred<java.lang.String> _contentAsync;

  private java.lang.String _content;

  private final int statusCode;

  private final kotlin.Lazy body$delegate;

  private final kotlin.Lazy headers$delegate;

  public love.forte.simbot.http.template.ktor.KtorHttpResponseImpl(io.ktor.client.statement.HttpResponse, boolean, kotlin.jvm.functions.Function1<? super java.lang.String, ? extends T>);
    Code:
       0: aload_1
       1: ldc           #15                 // String response
       3: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_3
       7: ldc           #22                 // String bodySerializer
       9: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: invokespecial #25                 // Method java/lang/Object."<init>":()V
      16: aload_0
      17: ldc           #2                  // class love/forte/simbot/http/template/ktor/KtorHttpResponseImpl
      19: invokestatic  #31                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      22: astore        4
      24: aload         4
      26: ldc           #33                 // String getLogger(KtorHttpResponseImpl::class.java)
      28: invokestatic  #36                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
      31: aload         4
      33: putfield      #40                 // Field logger:Lorg/slf4j/Logger;
      36: aload_0
      37: iload_2
      38: ifeq          48
      41: aconst_null
      42: checkcast     #42                 // class kotlinx/coroutines/Deferred
      45: goto          73
      48: getstatic     #48                 // Field kotlinx/coroutines/GlobalScope.INSTANCE:Lkotlinx/coroutines/GlobalScope;
      51: checkcast     #50                 // class kotlinx/coroutines/CoroutineScope
      54: aconst_null
      55: aconst_null
      56: new           #52                 // class love/forte/simbot/http/template/ktor/KtorHttpResponseImpl$_contentAsync$1
      59: dup
      60: aload_1
      61: aconst_null
      62: invokespecial #55                 // Method love/forte/simbot/http/template/ktor/KtorHttpResponseImpl$_contentAsync$1."<init>":(Lio/ktor/client/statement/HttpResponse;Lkotlin/coroutines/Continuation;)V
      65: checkcast     #57                 // class kotlin/jvm/functions/Function2
      68: iconst_3
      69: aconst_null
      70: invokestatic  #63                 // Method kotlinx/coroutines/BuildersKt.async$default:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/CoroutineStart;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Deferred;
      73: putfield      #67                 // Field _contentAsync:Lkotlinx/coroutines/Deferred;
      76: aload_0
      77: aload_1
      78: invokevirtual #73                 // Method io/ktor/client/statement/HttpResponse.getStatus:()Lio/ktor/http/HttpStatusCode;
      81: invokevirtual #79                 // Method io/ktor/http/HttpStatusCode.getValue:()I
      84: putfield      #83                 // Field statusCode:I
      87: aload_0
      88: getstatic     #89                 // Field kotlin/LazyThreadSafetyMode.PUBLICATION:Lkotlin/LazyThreadSafetyMode;
      91: new           #91                 // class love/forte/simbot/http/template/ktor/KtorHttpResponseImpl$body$2
      94: dup
      95: aload_0
      96: aload_3
      97: invokespecial #94                 // Method love/forte/simbot/http/template/ktor/KtorHttpResponseImpl$body$2."<init>":(Llove/forte/simbot/http/template/ktor/KtorHttpResponseImpl;Lkotlin/jvm/functions/Function1;)V
     100: checkcast     #96                 // class kotlin/jvm/functions/Function0
     103: invokestatic  #102                // Method kotlin/LazyKt.lazy:(Lkotlin/LazyThreadSafetyMode;Lkotlin/jvm/functions/Function0;)Lkotlin/Lazy;
     106: putfield      #106                // Field body$delegate:Lkotlin/Lazy;
     109: aload_0
     110: getstatic     #89                 // Field kotlin/LazyThreadSafetyMode.PUBLICATION:Lkotlin/LazyThreadSafetyMode;
     113: new           #108                // class love/forte/simbot/http/template/ktor/KtorHttpResponseImpl$headers$2
     116: dup
     117: aload_1
     118: invokespecial #111                // Method love/forte/simbot/http/template/ktor/KtorHttpResponseImpl$headers$2."<init>":(Lio/ktor/client/statement/HttpResponse;)V
     121: checkcast     #96                 // class kotlin/jvm/functions/Function0
     124: invokestatic  #102                // Method kotlin/LazyKt.lazy:(Lkotlin/LazyThreadSafetyMode;Lkotlin/jvm/functions/Function0;)Lkotlin/Lazy;
     127: putfield      #114                // Field headers$delegate:Lkotlin/Lazy;
     130: return

  public love.forte.simbot.http.template.ktor.KtorHttpResponseImpl(io.ktor.client.statement.HttpResponse, boolean, kotlin.jvm.functions.Function1, int, kotlin.jvm.internal.DefaultConstructorMarker);
    Code:
       0: iload         4
       2: iconst_2
       3: iand
       4: ifeq          9
       7: iconst_0
       8: istore_2
       9: aload_0
      10: aload_1
      11: iload_2
      12: aload_3
      13: invokespecial #126                // Method "<init>":(Lio/ktor/client/statement/HttpResponse;ZLkotlin/jvm/functions/Function1;)V
      16: return

  private final java.lang.String get_content();
    Code:
       0: aload_0
       1: getfield      #67                 // Field _contentAsync:Lkotlinx/coroutines/Deferred;
       4: ifnonnull     14
       7: aload_0
       8: getfield      #132                // Field _content:Ljava/lang/String;
      11: goto          89
      14: iconst_0
      15: istore_1
      16: iconst_0
      17: istore_2
      18: aload_0
      19: monitorenter
      20: nop
      21: iconst_0
      22: istore_3
      23: aload_0
      24: getfield      #67                 // Field _contentAsync:Lkotlinx/coroutines/Deferred;
      27: astore        4
      29: aload         4
      31: ifnonnull     41
      34: aload_0
      35: getfield      #132                // Field _content:Ljava/lang/String;
      38: goto          76
      41: aload_0
      42: aconst_null
      43: new           #134                // class love/forte/simbot/http/template/ktor/KtorHttpResponseImpl$_content$1$1
      46: dup
      47: aload         4
      49: aconst_null
      50: invokespecial #137                // Method love/forte/simbot/http/template/ktor/KtorHttpResponseImpl$_content$1$1."<init>":(Lkotlinx/coroutines/Deferred;Lkotlin/coroutines/Continuation;)V
      53: checkcast     #57                 // class kotlin/jvm/functions/Function2
      56: iconst_1
      57: aconst_null
      58: invokestatic  #141                // Method kotlinx/coroutines/BuildersKt.runBlocking$default:(Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Ljava/lang/Object;
      61: checkcast     #143                // class java/lang/String
      64: putfield      #132                // Field _content:Ljava/lang/String;
      67: aload_0
      68: aconst_null
      69: putfield      #67                 // Field _contentAsync:Lkotlinx/coroutines/Deferred;
      72: aload_0
      73: getfield      #132                // Field _content:Ljava/lang/String;
      76: nop
      77: astore_2
      78: aload_0
      79: monitorexit
      80: aload_2
      81: goto          89
      84: astore_2
      85: aload_0
      86: monitorexit
      87: aload_2
      88: athrow
      89: areturn
    Exception table:
       from    to  target type
          20    78    84   any
          84    85    84   any

  public java.lang.String getContent();
    Code:
       0: aload_0
       1: invokespecial #151                // Method get_content:()Ljava/lang/String;
       4: areturn

  public int getStatusCode();
    Code:
       0: aload_0
       1: getfield      #83                 // Field statusCode:I
       4: ireturn

  public T getBody();
    Code:
       0: aload_0
       1: getfield      #106                // Field body$delegate:Lkotlin/Lazy;
       4: astore_1
       5: iconst_0
       6: istore_3
       7: aload_1
       8: invokeinterface #159,  1          // InterfaceMethod kotlin/Lazy.getValue:()Ljava/lang/Object;
      13: areturn

  public love.forte.simbot.http.template.HttpHeaders getHeaders();
    Code:
       0: aload_0
       1: getfield      #114                // Field headers$delegate:Lkotlin/Lazy;
       4: astore_1
       5: iconst_0
       6: istore_3
       7: aload_1
       8: invokeinterface #159,  1          // InterfaceMethod kotlin/Lazy.getValue:()Ljava/lang/Object;
      13: checkcast     #163                // class love/forte/simbot/http/template/HttpHeaders
      16: areturn

  public java.lang.String getMessage();
    Code:
       0: aload_0
       1: invokevirtual #166                // Method getStatusCode:()I
       4: sipush        300
       7: if_icmpge     14
      10: aconst_null
      11: goto          18
      14: aload_0
      15: invokevirtual #168                // Method getContent:()Ljava/lang/String;
      18: areturn

  public java.lang.String toString();
    Code:
       0: new           #171                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #172                // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #174                // String KtorHttpResponse(status=
       9: invokevirtual #178                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #166                // Method getStatusCode:()I
      16: invokevirtual #181                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      19: ldc           #183                // String , content=
      21: invokevirtual #178                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #168                // Method getContent:()Ljava/lang/String;
      28: invokevirtual #186                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: bipush        41
      33: invokevirtual #189                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      36: invokevirtual #191                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn

  public static final org.slf4j.Logger access$getLogger$p(love.forte.simbot.http.template.ktor.KtorHttpResponseImpl);
    Code:
       0: aload_0
       1: getfield      #40                 // Field logger:Lorg/slf4j/Logger;
       4: areturn

  static {};
    Code:
       0: return
}
