Compiled from "KtorHttpTemplate.kt"
public final class love.forte.simbot.http.template.ktor.KtorHttpTemplates {
  private static final io.ktor.http.ContentType APPLICATION_JSON;

  private static final io.ktor.http.ContentType APPLICATION_FORM_URLENCODED;

  private static final void appendCookies(io.ktor.client.request.HttpRequestBuilder, love.forte.simbot.http.template.HttpCookies);
    Code:
       0: aload_1
       1: astore_3
       2: aload_3
       3: ifnonnull     10
       6: aconst_null
       7: goto          169
      10: aload_3
      11: astore        5
      13: iconst_0
      14: istore        6
      16: iconst_0
      17: istore        7
      19: aload         5
      21: astore        8
      23: iconst_0
      24: istore        9
      26: aload         8
      28: checkcast     #10                 // class java/util/Collection
      31: astore        10
      33: iconst_0
      34: istore        11
      36: aload         10
      38: invokeinterface #14,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      43: ifne          50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: nop
      52: ifeq          60
      55: aload         5
      57: goto          61
      60: aconst_null
      61: astore        4
      63: aload         4
      65: ifnonnull     72
      68: aconst_null
      69: goto          169
      72: aload         4
      74: checkcast     #16                 // class java/lang/Iterable
      77: invokestatic  #22                 // Method kotlin/collections/CollectionsKt.asSequence:(Ljava/lang/Iterable;)Lkotlin/sequences/Sequence;
      80: astore        5
      82: aload         5
      84: ifnonnull     91
      87: aconst_null
      88: goto          169
      91: aload         5
      93: getstatic     #28                 // Field love/forte/simbot/http/template/ktor/KtorHttpTemplates$appendCookies$appendCookies$2.INSTANCE:Llove/forte/simbot/http/template/ktor/KtorHttpTemplates$appendCookies$appendCookies$2;
      96: checkcast     #30                 // class kotlin/jvm/functions/Function1
      99: invokestatic  #36                 // Method kotlin/sequences/SequencesKt.map:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;
     102: astore        6
     104: aload         6
     106: ifnonnull     113
     109: aconst_null
     110: goto          169
     113: aload         6
     115: aload_0
     116: checkcast     #38                 // class io/ktor/http/HttpMessageBuilder
     119: invokestatic  #43                 // Method io/ktor/http/HttpMessagePropertiesKt.cookies:(Lio/ktor/http/HttpMessageBuilder;)Ljava/util/List;
     122: checkcast     #16                 // class java/lang/Iterable
     125: invokestatic  #22                 // Method kotlin/collections/CollectionsKt.asSequence:(Ljava/lang/Iterable;)Lkotlin/sequences/Sequence;
     128: getstatic     #48                 // Field love/forte/simbot/http/template/ktor/KtorHttpTemplates$appendCookies$appendCookies$3.INSTANCE:Llove/forte/simbot/http/template/ktor/KtorHttpTemplates$appendCookies$appendCookies$3;
     131: checkcast     #30                 // class kotlin/jvm/functions/Function1
     134: invokestatic  #36                 // Method kotlin/sequences/SequencesKt.map:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;
     137: invokestatic  #52                 // Method kotlin/sequences/SequencesKt.plus:(Lkotlin/sequences/Sequence;Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;
     140: astore        7
     142: aload         7
     144: ifnonnull     151
     147: aconst_null
     148: goto          169
     151: aload         7
     153: ldc           #54                 // String ;
     155: checkcast     #56                 // class java/lang/CharSequence
     158: aconst_null
     159: aconst_null
     160: iconst_0
     161: aconst_null
     162: aconst_null
     163: bipush        62
     165: aconst_null
     166: invokestatic  #60                 // Method kotlin/sequences/SequencesKt.joinToString$default:(Lkotlin/sequences/Sequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/String;
     169: astore_2
     170: aload_2
     171: ifnull        190
     174: aload_0
     175: new           #62                 // class love/forte/simbot/http/template/ktor/KtorHttpTemplates$appendCookies$1
     178: dup
     179: aload_2
     180: invokespecial #66                 // Method love/forte/simbot/http/template/ktor/KtorHttpTemplates$appendCookies$1."<init>":(Ljava/lang/String;)V
     183: checkcast     #30                 // class kotlin/jvm/functions/Function1
     186: invokestatic  #72                 // Method io/ktor/client/request/HttpRequestKt.headers:(Lio/ktor/client/request/HttpRequestBuilder;Lkotlin/jvm/functions/Function1;)Lio/ktor/http/HeadersBuilder;
     189: pop
     190: return

  private static final void body(io.ktor.client.request.HttpRequestBuilder, java.lang.Object, love.forte.simbot.serialization.json.JsonSerializerFactory);
    Code:
       0: aload_1
       1: astore_3
       2: aload_3
       3: ifnonnull     9
       6: goto          183
       9: aload_3
      10: astore        4
      12: iconst_0
      13: istore        5
      15: iconst_0
      16: istore        6
      18: aload         4
      20: astore        7
      22: iconst_0
      23: istore        8
      25: aload         7
      27: astore        9
      29: aload         9
      31: instanceof    #93                 // class java/util/List
      34: ifeq          51
      37: aload_2
      38: ldc           #93                 // class java/util/List
      40: checkcast     #95                 // class java/lang/reflect/Type
      43: invokeinterface #101,  2          // InterfaceMethod love/forte/simbot/serialization/json/JsonSerializerFactory.getJsonSerializer:(Ljava/lang/reflect/Type;)Llove/forte/simbot/serialization/json/JsonSerializer;
      48: goto          128
      51: aload         9
      53: instanceof    #103                // class java/util/Set
      56: ifeq          73
      59: aload_2
      60: ldc           #103                // class java/util/Set
      62: checkcast     #95                 // class java/lang/reflect/Type
      65: invokeinterface #101,  2          // InterfaceMethod love/forte/simbot/serialization/json/JsonSerializerFactory.getJsonSerializer:(Ljava/lang/reflect/Type;)Llove/forte/simbot/serialization/json/JsonSerializer;
      70: goto          128
      73: aload         9
      75: instanceof    #105                // class java/util/Map
      78: ifeq          95
      81: aload_2
      82: ldc           #105                // class java/util/Map
      84: checkcast     #95                 // class java/lang/reflect/Type
      87: invokeinterface #101,  2          // InterfaceMethod love/forte/simbot/serialization/json/JsonSerializerFactory.getJsonSerializer:(Ljava/lang/reflect/Type;)Llove/forte/simbot/serialization/json/JsonSerializer;
      92: goto          128
      95: aload         9
      97: instanceof    #10                 // class java/util/Collection
     100: ifeq          117
     103: aload_2
     104: ldc           #10                 // class java/util/Collection
     106: checkcast     #95                 // class java/lang/reflect/Type
     109: invokeinterface #101,  2          // InterfaceMethod love/forte/simbot/serialization/json/JsonSerializerFactory.getJsonSerializer:(Ljava/lang/reflect/Type;)Llove/forte/simbot/serialization/json/JsonSerializer;
     114: goto          128
     117: aload_2
     118: aload         7
     120: invokevirtual #109                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     123: invokeinterface #112,  2          // InterfaceMethod love/forte/simbot/serialization/json/JsonSerializerFactory.getJsonSerializer:(Ljava/lang/Class;)Llove/forte/simbot/serialization/json/JsonSerializer;
     128: astore        10
     130: aload         10
     132: ifnonnull     138
     135: goto          181
     138: aload         10
     140: astore        9
     142: iconst_0
     143: istore        11
     145: iconst_0
     146: istore        12
     148: aload         9
     150: astore        13
     152: iconst_0
     153: istore        14
     155: aload_0
     156: aload         13
     158: aload         7
     160: invokeinterface #118,  2          // InterfaceMethod love/forte/simbot/serialization/json/JsonSerializer.toJson:(Ljava/lang/Object;)Ljava/lang/String;
     165: astore        15
     167: aload         15
     169: ldc           #120                // String toJson(it)
     171: invokestatic  #126                // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
     174: aload         15
     176: invokevirtual #130                // Method io/ktor/client/request/HttpRequestBuilder.setBody:(Ljava/lang/Object;)V
     179: nop
     180: nop
     181: nop
     182: nop
     183: return

  private static final io.ktor.http.Cookie toKtorCookie(love.forte.simbot.http.template.HttpCookie, java.lang.String, java.lang.String);
    Code:
       0: new           #143                // class io/ktor/http/Cookie
       3: dup
       4: aload_0
       5: invokeinterface #149,  1          // InterfaceMethod love/forte/simbot/http/template/HttpCookie.getName:()Ljava/lang/String;
      10: aload_0
      11: invokeinterface #152,  1          // InterfaceMethod love/forte/simbot/http/template/HttpCookie.getValue:()Ljava/lang/String;
      16: aconst_null
      17: aload_0
      18: invokeinterface #156,  1          // InterfaceMethod love/forte/simbot/http/template/HttpCookie.getMaxAge:()I
      23: aconst_null
      24: aload_0
      25: invokeinterface #159,  1          // InterfaceMethod love/forte/simbot/http/template/HttpCookie.getDomain:()Ljava/lang/String;
      30: ifnonnull     37
      33: aload_1
      34: goto          43
      37: aload_0
      38: invokeinterface #159,  1          // InterfaceMethod love/forte/simbot/http/template/HttpCookie.getDomain:()Ljava/lang/String;
      43: aload_0
      44: invokeinterface #162,  1          // InterfaceMethod love/forte/simbot/http/template/HttpCookie.getPath:()Ljava/lang/String;
      49: ifnonnull     56
      52: aload_2
      53: goto          62
      56: aload_0
      57: invokeinterface #162,  1          // InterfaceMethod love/forte/simbot/http/template/HttpCookie.getPath:()Ljava/lang/String;
      62: iconst_0
      63: iconst_0
      64: aconst_null
      65: sipush        916
      68: aconst_null
      69: invokespecial #165                // Method io/ktor/http/Cookie."<init>":(Ljava/lang/String;Ljava/lang/String;Lio/ktor/http/CookieEncoding;ILio/ktor/util/date/GMTDate;Ljava/lang/String;Ljava/lang/String;ZZLjava/util/Map;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
      72: areturn

  public static final void access$appendCookies(io.ktor.client.request.HttpRequestBuilder, love.forte.simbot.http.template.HttpCookies);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #169                // Method appendCookies:(Lio/ktor/client/request/HttpRequestBuilder;Llove/forte/simbot/http/template/HttpCookies;)V
       5: return

  public static final io.ktor.http.ContentType access$getAPPLICATION_JSON$p();
    Code:
       0: getstatic     #176                // Field APPLICATION_JSON:Lio/ktor/http/ContentType;
       3: areturn

  public static final void access$body(io.ktor.client.request.HttpRequestBuilder, java.lang.Object, love.forte.simbot.serialization.json.JsonSerializerFactory);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #179                // Method body:(Lio/ktor/client/request/HttpRequestBuilder;Ljava/lang/Object;Llove/forte/simbot/serialization/json/JsonSerializerFactory;)V
       6: return

  public static final io.ktor.http.ContentType access$getAPPLICATION_FORM_URLENCODED$p();
    Code:
       0: getstatic     #183                // Field APPLICATION_FORM_URLENCODED:Lio/ktor/http/ContentType;
       3: areturn

  static {};
    Code:
       0: new           #187                // class io/ktor/http/ContentType
       3: dup
       4: ldc           #189                // String application
       6: ldc           #191                // String json
       8: aconst_null
       9: iconst_4
      10: aconst_null
      11: invokespecial #194                // Method io/ktor/http/ContentType."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
      14: putstatic     #176                // Field APPLICATION_JSON:Lio/ktor/http/ContentType;
      17: new           #187                // class io/ktor/http/ContentType
      20: dup
      21: ldc           #189                // String application
      23: ldc           #196                // String x-www-form-urlencoded
      25: aconst_null
      26: iconst_4
      27: aconst_null
      28: invokespecial #194                // Method io/ktor/http/ContentType."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
      31: putstatic     #183                // Field APPLICATION_FORM_URLENCODED:Lio/ktor/http/ContentType;
      34: return
}
