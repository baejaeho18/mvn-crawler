Compiled from "KtorHttpTemplate.kt"
final class love.forte.simbot.http.template.ktor.KtorHttpTemplate$requestAll$1$postBlock$1 extends kotlin.jvm.internal.Lambda implements kotlin.jvm.functions.Function1<io.ktor.client.request.HttpRequestBuilder, kotlin.Unit> {
  final kotlin.jvm.functions.Function1<io.ktor.client.request.HttpRequestBuilder, kotlin.Unit> $block;

  final java.lang.Object $params;

  final love.forte.simbot.http.template.ktor.KtorHttpTemplate this$0;

  love.forte.simbot.http.template.ktor.KtorHttpTemplate$requestAll$1$postBlock$1(kotlin.jvm.functions.Function1<? super io.ktor.client.request.HttpRequestBuilder, kotlin.Unit>, java.lang.Object, love.forte.simbot.http.template.ktor.KtorHttpTemplate);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field $block:Lkotlin/jvm/functions/Function1;
       5: aload_0
       6: aload_2
       7: putfield      #19                 // Field $params:Ljava/lang/Object;
      10: aload_0
      11: aload_3
      12: putfield      #22                 // Field this$0:Llove/forte/simbot/http/template/ktor/KtorHttpTemplate;
      15: aload_0
      16: iconst_1
      17: invokespecial #25                 // Method kotlin/jvm/internal/Lambda."<init>":(I)V
      20: return

  public final void invoke(io.ktor.client.request.HttpRequestBuilder);
    Code:
       0: aload_1
       1: ldc           #33                 // String $this$null
       3: invokestatic  #39                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #16                 // Field $block:Lkotlin/jvm/functions/Function1;
      10: aload_1
      11: invokeinterface #42,  2           // InterfaceMethod kotlin/jvm/functions/Function1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: aload_1
      18: checkcast     #44                 // class io/ktor/http/HttpMessageBuilder
      21: invokestatic  #50                 // Method io/ktor/http/HttpMessagePropertiesKt.contentType:(Lio/ktor/http/HttpMessageBuilder;)Lio/ktor/http/ContentType;
      24: ifnonnull     37
      27: aload_1
      28: checkcast     #44                 // class io/ktor/http/HttpMessageBuilder
      31: invokestatic  #56                 // Method love/forte/simbot/http/template/ktor/KtorHttpTemplates.access$getAPPLICATION_JSON$p:()Lio/ktor/http/ContentType;
      34: invokestatic  #59                 // Method io/ktor/http/HttpMessagePropertiesKt.contentType:(Lio/ktor/http/HttpMessageBuilder;Lio/ktor/http/ContentType;)V
      37: aload_0
      38: getfield      #19                 // Field $params:Ljava/lang/Object;
      41: astore_2
      42: aload_2
      43: ifnonnull     49
      46: goto          247
      49: aload_2
      50: astore_3
      51: aload_0
      52: getfield      #22                 // Field this$0:Llove/forte/simbot/http/template/ktor/KtorHttpTemplate;
      55: astore        4
      57: iconst_0
      58: istore        5
      60: iconst_0
      61: istore        6
      63: aload_3
      64: astore        7
      66: iconst_0
      67: istore        8
      69: aload         7
      71: astore        9
      73: aload         9
      75: instanceof    #61                 // class java/util/List
      78: ifeq          99
      81: aload         4
      83: invokestatic  #67                 // Method love/forte/simbot/http/template/ktor/KtorHttpTemplate.access$getJsonSerializerFactory$p:(Llove/forte/simbot/http/template/ktor/KtorHttpTemplate;)Llove/forte/simbot/serialization/json/JsonSerializerFactory;
      86: ldc           #61                 // class java/util/List
      88: checkcast     #69                 // class java/lang/reflect/Type
      91: invokeinterface #75,  2           // InterfaceMethod love/forte/simbot/serialization/json/JsonSerializerFactory.getJsonSerializer:(Ljava/lang/reflect/Type;)Llove/forte/simbot/serialization/json/JsonSerializer;
      96: goto          192
      99: aload         9
     101: instanceof    #77                 // class java/util/Set
     104: ifeq          125
     107: aload         4
     109: invokestatic  #67                 // Method love/forte/simbot/http/template/ktor/KtorHttpTemplate.access$getJsonSerializerFactory$p:(Llove/forte/simbot/http/template/ktor/KtorHttpTemplate;)Llove/forte/simbot/serialization/json/JsonSerializerFactory;
     112: ldc           #77                 // class java/util/Set
     114: checkcast     #69                 // class java/lang/reflect/Type
     117: invokeinterface #75,  2           // InterfaceMethod love/forte/simbot/serialization/json/JsonSerializerFactory.getJsonSerializer:(Ljava/lang/reflect/Type;)Llove/forte/simbot/serialization/json/JsonSerializer;
     122: goto          192
     125: aload         9
     127: instanceof    #79                 // class java/util/Map
     130: ifeq          151
     133: aload         4
     135: invokestatic  #67                 // Method love/forte/simbot/http/template/ktor/KtorHttpTemplate.access$getJsonSerializerFactory$p:(Llove/forte/simbot/http/template/ktor/KtorHttpTemplate;)Llove/forte/simbot/serialization/json/JsonSerializerFactory;
     138: ldc           #79                 // class java/util/Map
     140: checkcast     #69                 // class java/lang/reflect/Type
     143: invokeinterface #75,  2           // InterfaceMethod love/forte/simbot/serialization/json/JsonSerializerFactory.getJsonSerializer:(Ljava/lang/reflect/Type;)Llove/forte/simbot/serialization/json/JsonSerializer;
     148: goto          192
     151: aload         9
     153: instanceof    #81                 // class java/util/Collection
     156: ifeq          177
     159: aload         4
     161: invokestatic  #67                 // Method love/forte/simbot/http/template/ktor/KtorHttpTemplate.access$getJsonSerializerFactory$p:(Llove/forte/simbot/http/template/ktor/KtorHttpTemplate;)Llove/forte/simbot/serialization/json/JsonSerializerFactory;
     164: ldc           #81                 // class java/util/Collection
     166: checkcast     #69                 // class java/lang/reflect/Type
     169: invokeinterface #75,  2           // InterfaceMethod love/forte/simbot/serialization/json/JsonSerializerFactory.getJsonSerializer:(Ljava/lang/reflect/Type;)Llove/forte/simbot/serialization/json/JsonSerializer;
     174: goto          192
     177: aload         4
     179: invokestatic  #67                 // Method love/forte/simbot/http/template/ktor/KtorHttpTemplate.access$getJsonSerializerFactory$p:(Llove/forte/simbot/http/template/ktor/KtorHttpTemplate;)Llove/forte/simbot/serialization/json/JsonSerializerFactory;
     182: aload         7
     184: invokevirtual #87                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     187: invokeinterface #90,  2           // InterfaceMethod love/forte/simbot/serialization/json/JsonSerializerFactory.getJsonSerializer:(Ljava/lang/Class;)Llove/forte/simbot/serialization/json/JsonSerializer;
     192: astore        10
     194: aload         10
     196: ifnonnull     202
     199: goto          245
     202: aload         10
     204: astore        9
     206: iconst_0
     207: istore        11
     209: iconst_0
     210: istore        12
     212: aload         9
     214: astore        13
     216: iconst_0
     217: istore        14
     219: aload_1
     220: aload         13
     222: aload         7
     224: invokeinterface #96,  2           // InterfaceMethod love/forte/simbot/serialization/json/JsonSerializer.toJson:(Ljava/lang/Object;)Ljava/lang/String;
     229: astore        15
     231: aload         15
     233: ldc           #98                 // String toJson(it)
     235: invokestatic  #101                // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
     238: aload         15
     240: invokevirtual #107                // Method io/ktor/client/request/HttpRequestBuilder.setBody:(Ljava/lang/Object;)V
     243: nop
     244: nop
     245: nop
     246: nop
     247: return

  public java.lang.Object invoke(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #103                // class io/ktor/client/request/HttpRequestBuilder
       5: invokevirtual #116                // Method invoke:(Lio/ktor/client/request/HttpRequestBuilder;)V
       8: getstatic     #122                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
      11: areturn
}
