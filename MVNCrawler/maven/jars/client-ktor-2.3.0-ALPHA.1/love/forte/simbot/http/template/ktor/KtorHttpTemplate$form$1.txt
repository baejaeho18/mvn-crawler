Compiled from "KtorHttpTemplate.kt"
final class love.forte.simbot.http.template.ktor.KtorHttpTemplate$form$1 extends kotlin.coroutines.jvm.internal.SuspendLambda implements kotlin.jvm.functions.Function2<kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation<? super love.forte.simbot.http.template.HttpResponse<T>>, java.lang.Object> {
  java.lang.Object L$0;

  int label;

  final java.lang.String $url;

  final love.forte.simbot.http.template.ktor.KtorHttpTemplate this$0;

  final java.lang.Class<T> $responseType;

  final love.forte.simbot.http.template.HttpHeaders $headers;

  final love.forte.simbot.http.template.HttpCookies $cookies;

  final java.util.Map<java.lang.String, java.lang.Object> $requestForm;

  love.forte.simbot.http.template.ktor.KtorHttpTemplate$form$1(java.lang.String, love.forte.simbot.http.template.ktor.KtorHttpTemplate, java.lang.Class<T>, love.forte.simbot.http.template.HttpHeaders, love.forte.simbot.http.template.HttpCookies, java.util.Map<java.lang.String, ? extends java.lang.Object>, kotlin.coroutines.Continuation<? super love.forte.simbot.http.template.ktor.KtorHttpTemplate$form$1>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field $url:Ljava/lang/String;
       5: aload_0
       6: aload_2
       7: putfield      #23                 // Field this$0:Llove/forte/simbot/http/template/ktor/KtorHttpTemplate;
      10: aload_0
      11: aload_3
      12: putfield      #26                 // Field $responseType:Ljava/lang/Class;
      15: aload_0
      16: aload         4
      18: putfield      #29                 // Field $headers:Llove/forte/simbot/http/template/HttpHeaders;
      21: aload_0
      22: aload         5
      24: putfield      #32                 // Field $cookies:Llove/forte/simbot/http/template/HttpCookies;
      27: aload_0
      28: aload         6
      30: putfield      #35                 // Field $requestForm:Ljava/util/Map;
      33: aload_0
      34: iconst_2
      35: aload         7
      37: invokespecial #38                 // Method kotlin/coroutines/jvm/internal/SuspendLambda."<init>":(ILkotlin/coroutines/Continuation;)V
      40: return

  public final java.lang.Object invokeSuspend(java.lang.Object);
    Code:
       0: invokestatic  #70                 // Method kotlin/coroutines/intrinsics/IntrinsicsKt.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;
       3: astore        51
       5: aload_0
       6: getfield      #74                 // Field label:I
       9: tableswitch   { // 0 to 3
                     0: 40
                     1: 580
                     2: 643
                     3: 737
               default: 828
          }
      40: aload_1
      41: invokestatic  #80                 // Method kotlin/ResultKt.throwOnFailure:(Ljava/lang/Object;)V
      44: invokestatic  #86                 // Method love/forte/simbot/http/template/ktor/KtorHttpTemplate.access$getLogger$cp:()Lorg/slf4j/Logger;
      47: ldc           #88                 // String Form -> {}
      49: aload_0
      50: getfield      #20                 // Field $url:Ljava/lang/String;
      53: invokeinterface #94,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      58: aload_0
      59: getfield      #23                 // Field this$0:Llove/forte/simbot/http/template/ktor/KtorHttpTemplate;
      62: invokestatic  #98                 // Method love/forte/simbot/http/template/ktor/KtorHttpTemplate.access$getClient$p:(Llove/forte/simbot/http/template/ktor/KtorHttpTemplate;)Lio/ktor/client/HttpClient;
      65: astore_3
      66: aload_0
      67: getfield      #20                 // Field $url:Ljava/lang/String;
      70: astore        4
      72: aload_0
      73: getfield      #29                 // Field $headers:Llove/forte/simbot/http/template/HttpHeaders;
      76: astore        7
      78: aload_0
      79: getfield      #32                 // Field $cookies:Llove/forte/simbot/http/template/HttpCookies;
      82: astore        8
      84: aload_0
      85: getfield      #35                 // Field $requestForm:Ljava/util/Map;
      88: astore        9
      90: getstatic     #104                // Field io/ktor/http/Parameters.Companion:Lio/ktor/http/Parameters$Companion;
      93: invokevirtual #110                // Method io/ktor/http/Parameters$Companion.getEmpty:()Lio/ktor/http/Parameters;
      96: astore        5
      98: iconst_0
      99: istore        6
     101: iconst_0
     102: istore        10
     104: aload_3
     105: astore        11
     107: iconst_0
     108: istore        12
     110: aload         11
     112: astore        13
     114: iconst_0
     115: istore        14
     117: aload         13
     119: astore        15
     121: new           #112                // class io/ktor/client/request/HttpRequestBuilder
     124: dup
     125: invokespecial #115                // Method io/ktor/client/request/HttpRequestBuilder."<init>":()V
     128: astore        16
     130: iconst_0
     131: istore        17
     133: iconst_0
     134: istore        18
     136: aload         16
     138: astore        19
     140: iconst_0
     141: istore        20
     143: nop
     144: aload         19
     146: getstatic     #120                // Field io/ktor/http/HttpMethod.Companion:Lio/ktor/http/HttpMethod$Companion;
     149: invokevirtual #126                // Method io/ktor/http/HttpMethod$Companion.getPost:()Lio/ktor/http/HttpMethod;
     152: invokevirtual #130                // Method io/ktor/client/request/HttpRequestBuilder.setMethod:(Lio/ktor/http/HttpMethod;)V
     155: aload         19
     157: new           #132                // class io/ktor/client/request/forms/FormDataContent
     160: dup
     161: aload         5
     163: invokespecial #135                // Method io/ktor/client/request/forms/FormDataContent."<init>":(Lio/ktor/http/Parameters;)V
     166: invokevirtual #138                // Method io/ktor/client/request/HttpRequestBuilder.setBody:(Ljava/lang/Object;)V
     169: aload         19
     171: astore        21
     173: iconst_0
     174: istore        22
     176: aload         21
     178: aload         4
     180: invokestatic  #144                // Method io/ktor/client/request/HttpRequestKt.url:(Lio/ktor/client/request/HttpRequestBuilder;Ljava/lang/String;)V
     183: aload         21
     185: astore        23
     187: iconst_0
     188: istore        24
     190: aload         7
     192: astore        25
     194: aload         25
     196: ifnonnull     202
     199: goto          325
     202: aload         25
     204: checkcast     #146                // class java/util/Map
     207: astore        26
     209: iconst_0
     210: istore        27
     212: aload         26
     214: astore        28
     216: iconst_0
     217: istore        29
     219: aload         28
     221: invokeinterface #150,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     226: invokeinterface #156,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     231: astore        30
     233: aload         30
     235: invokeinterface #162,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     240: ifeq          324
     243: aload         30
     245: invokeinterface #165,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     250: checkcast     #167                // class java/util/Map$Entry
     253: astore        31
     255: aload         31
     257: astore        32
     259: iconst_0
     260: istore        33
     262: aload         32
     264: astore        34
     266: iconst_0
     267: istore        35
     269: aload         34
     271: invokeinterface #170,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     276: checkcast     #172                // class java/lang/String
     279: astore        36
     281: aload         32
     283: astore        35
     285: iconst_0
     286: istore        37
     288: aload         35
     290: invokeinterface #175,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     295: checkcast     #177                // class java/util/List
     298: astore        34
     300: aload         23
     302: new           #179                // class love/forte/simbot/http/template/ktor/KtorHttpTemplate$form$1$response$1$1$1
     305: dup
     306: aload         36
     308: aload         34
     310: invokespecial #182                // Method love/forte/simbot/http/template/ktor/KtorHttpTemplate$form$1$response$1$1$1."<init>":(Ljava/lang/String;Ljava/util/List;)V
     313: checkcast     #184                // class kotlin/jvm/functions/Function1
     316: invokestatic  #188                // Method io/ktor/client/request/HttpRequestKt.headers:(Lio/ktor/client/request/HttpRequestBuilder;Lkotlin/jvm/functions/Function1;)Lio/ktor/http/HeadersBuilder;
     319: pop
     320: nop
     321: goto          233
     324: nop
     325: aload         23
     327: checkcast     #190                // class io/ktor/http/HttpMessageBuilder
     330: invokestatic  #196                // Method io/ktor/http/HttpMessagePropertiesKt.contentType:(Lio/ktor/http/HttpMessageBuilder;)Lio/ktor/http/ContentType;
     333: ifnonnull     347
     336: aload         23
     338: checkcast     #190                // class io/ktor/http/HttpMessageBuilder
     341: invokestatic  #202                // Method love/forte/simbot/http/template/ktor/KtorHttpTemplates.access$getAPPLICATION_FORM_URLENCODED$p:()Lio/ktor/http/ContentType;
     344: invokestatic  #205                // Method io/ktor/http/HttpMessagePropertiesKt.contentType:(Lio/ktor/http/HttpMessageBuilder;Lio/ktor/http/ContentType;)V
     347: aload         23
     349: aload         8
     351: invokestatic  #209                // Method love/forte/simbot/http/template/ktor/KtorHttpTemplates.access$appendCookies:(Lio/ktor/client/request/HttpRequestBuilder;Llove/forte/simbot/http/template/HttpCookies;)V
     354: aload         9
     356: astore        25
     358: aload         25
     360: ifnonnull     366
     363: goto          490
     366: aload         25
     368: astore        26
     370: iconst_0
     371: istore        27
     373: aload         26
     375: astore        28
     377: iconst_0
     378: istore        29
     380: iconst_0
     381: istore        30
     383: aload         28
     385: astore        31
     387: iconst_0
     388: istore        32
     390: aload         31
     392: astore        33
     394: iconst_0
     395: istore        34
     397: aload         33
     399: invokeinterface #150,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     404: invokeinterface #156,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     409: astore        35
     411: aload         35
     413: invokeinterface #162,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     418: ifeq          488
     421: aload         35
     423: invokeinterface #165,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     428: checkcast     #167                // class java/util/Map$Entry
     431: astore        36
     433: aload         36
     435: astore        37
     437: iconst_0
     438: istore        38
     440: aload         37
     442: astore        39
     444: iconst_0
     445: istore        40
     447: aload         39
     449: invokeinterface #170,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     454: checkcast     #172                // class java/lang/String
     457: astore        41
     459: aload         37
     461: astore        40
     463: iconst_0
     464: istore        42
     466: aload         40
     468: invokeinterface #175,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     473: astore        39
     475: aload         23
     477: aload         41
     479: aload         39
     481: invokestatic  #215                // Method io/ktor/client/request/UtilsKt.parameter:(Lio/ktor/client/request/HttpRequestBuilder;Ljava/lang/String;Ljava/lang/Object;)V
     484: nop
     485: goto          411
     488: nop
     489: nop
     490: nop
     491: nop
     492: nop
     493: aload         16
     495: astore        16
     497: iconst_0
     498: istore        17
     500: new           #217                // class io/ktor/client/statement/HttpStatement
     503: dup
     504: aload         16
     506: aload         15
     508: invokespecial #220                // Method io/ktor/client/statement/HttpStatement."<init>":(Lio/ktor/client/request/HttpRequestBuilder;Lio/ktor/client/HttpClient;)V
     511: astore        18
     513: iconst_0
     514: istore        43
     516: ldc           #222                // class io/ktor/client/statement/HttpResponse
     518: invokestatic  #228                // Method kotlin/jvm/internal/Reflection.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;
     521: astore        44
     523: aload         44
     525: ldc           #217                // class io/ktor/client/statement/HttpStatement
     527: invokestatic  #228                // Method kotlin/jvm/internal/Reflection.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;
     530: invokestatic  #234                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     533: ifeq          544
     536: aload         18
     538: checkcast     #222                // class io/ktor/client/statement/HttpResponse
     541: goto          809
     544: aload         44
     546: ldc           #222                // class io/ktor/client/statement/HttpResponse
     548: invokestatic  #228                // Method kotlin/jvm/internal/Reflection.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;
     551: invokestatic  #234                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     554: ifeq          620
     557: aload         18
     559: aload_0
     560: checkcast     #236                // class kotlin/coroutines/Continuation
     563: aload_0
     564: iconst_1
     565: putfield      #74                 // Field label:I
     568: invokevirtual #240                // Method io/ktor/client/statement/HttpStatement.execute:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
     571: dup
     572: aload         51
     574: if_acmpne     600
     577: aload         51
     579: areturn
     580: iconst_0
     581: istore        10
     583: iconst_0
     584: istore        12
     586: iconst_0
     587: istore        14
     589: iconst_0
     590: istore        17
     592: iconst_0
     593: istore        43
     595: aload_1
     596: invokestatic  #80                 // Method kotlin/ResultKt.throwOnFailure:(Ljava/lang/Object;)V
     599: aload_1
     600: dup
     601: ifnonnull     614
     604: new           #242                // class java/lang/NullPointerException
     607: dup
     608: ldc           #244                // String null cannot be cast to non-null type io.ktor.client.statement.HttpResponse
     610: invokespecial #247                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
     613: athrow
     614: checkcast     #222                // class io/ktor/client/statement/HttpResponse
     617: goto          809
     620: aload         18
     622: aload_0
     623: checkcast     #236                // class kotlin/coroutines/Continuation
     626: aload_0
     627: iconst_2
     628: putfield      #74                 // Field label:I
     631: invokevirtual #250                // Method io/ktor/client/statement/HttpStatement.executeUnsafe:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
     634: dup
     635: aload         51
     637: if_acmpne     663
     640: aload         51
     642: areturn
     643: iconst_0
     644: istore        10
     646: iconst_0
     647: istore        12
     649: iconst_0
     650: istore        14
     652: iconst_0
     653: istore        17
     655: iconst_0
     656: istore        43
     658: aload_1
     659: invokestatic  #80                 // Method kotlin/ResultKt.throwOnFailure:(Ljava/lang/Object;)V
     662: aload_1
     663: checkcast     #222                // class io/ktor/client/statement/HttpResponse
     666: astore        45
     668: nop
     669: aload         45
     671: astore        46
     673: iconst_0
     674: istore        47
     676: aload         46
     678: invokevirtual #254                // Method io/ktor/client/statement/HttpResponse.getCall:()Lio/ktor/client/call/HttpClientCall;
     681: iconst_0
     682: istore        48
     684: ldc           #222                // class io/ktor/client/statement/HttpResponse
     686: invokestatic  #258                // Method kotlin/jvm/internal/Reflection.typeOf:(Ljava/lang/Class;)Lkotlin/reflect/KType;
     689: astore        49
     691: aload         49
     693: invokestatic  #264                // Method kotlin/reflect/TypesJVMKt.getJavaType:(Lkotlin/reflect/KType;)Ljava/lang/reflect/Type;
     696: astore        50
     698: aload         50
     700: ldc           #222                // class io/ktor/client/statement/HttpResponse
     702: invokestatic  #228                // Method kotlin/jvm/internal/Reflection.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;
     705: aload         49
     707: invokestatic  #270                // Method io/ktor/util/reflect/TypeInfoJvmKt.typeInfoImpl:(Ljava/lang/reflect/Type;Lkotlin/reflect/KClass;Lkotlin/reflect/KType;)Lio/ktor/util/reflect/TypeInfo;
     710: aload_0
     711: checkcast     #236                // class kotlin/coroutines/Continuation
     714: aload_0
     715: aload         45
     717: putfield      #272                // Field L$0:Ljava/lang/Object;
     720: aload_0
     721: iconst_3
     722: putfield      #74                 // Field label:I
     725: invokevirtual #278                // Method io/ktor/client/call/HttpClientCall.receive:(Lio/ktor/util/reflect/TypeInfo;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
     728: dup
     729: aload         51
     731: if_acmpne     770
     734: aload         51
     736: areturn
     737: iconst_0
     738: istore        10
     740: iconst_0
     741: istore        12
     743: iconst_0
     744: istore        14
     746: iconst_0
     747: istore        17
     749: iconst_0
     750: istore        43
     752: iconst_0
     753: istore        47
     755: aload_0
     756: getfield      #272                // Field L$0:Ljava/lang/Object;
     759: checkcast     #222                // class io/ktor/client/statement/HttpResponse
     762: astore        45
     764: nop
     765: aload_1
     766: invokestatic  #80                 // Method kotlin/ResultKt.throwOnFailure:(Ljava/lang/Object;)V
     769: aload_1
     770: dup
     771: ifnonnull     784
     774: new           #242                // class java/lang/NullPointerException
     777: dup
     778: ldc           #244                // String null cannot be cast to non-null type io.ktor.client.statement.HttpResponse
     780: invokespecial #247                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
     783: athrow
     784: checkcast     #222                // class io/ktor/client/statement/HttpResponse
     787: astore        46
     789: aload         45
     791: invokestatic  #284                // Method io/ktor/client/statement/HttpResponseKt.complete:(Lio/ktor/client/statement/HttpResponse;)V
     794: goto          807
     797: astore        47
     799: aload         45
     801: invokestatic  #284                // Method io/ktor/client/statement/HttpResponseKt.complete:(Lio/ktor/client/statement/HttpResponse;)V
     804: aload         47
     806: athrow
     807: aload         46
     809: nop
     810: nop
     811: nop
     812: nop
     813: nop
     814: astore_2
     815: aload_0
     816: getfield      #23                 // Field this$0:Llove/forte/simbot/http/template/ktor/KtorHttpTemplate;
     819: aload_2
     820: aload_0
     821: getfield      #26                 // Field $responseType:Ljava/lang/Class;
     824: invokestatic  #288                // Method love/forte/simbot/http/template/ktor/KtorHttpTemplate.access$toResponse:(Llove/forte/simbot/http/template/ktor/KtorHttpTemplate;Lio/ktor/client/statement/HttpResponse;Ljava/lang/Class;)Llove/forte/simbot/http/template/HttpResponse;
     827: areturn
     828: new           #290                // class java/lang/IllegalStateException
     831: dup
     832: ldc_w         #292                // String call to \'resume\' before \'invoke\' with coroutine
     835: invokespecial #293                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     838: athrow
    Exception table:
       from    to  target type
         668   728   797   any
         764   789   797   any
         797   799   797   any

  public final kotlin.coroutines.Continuation<kotlin.Unit> create(java.lang.Object, kotlin.coroutines.Continuation<?>);
    Code:
       0: new           #2                  // class love/forte/simbot/http/template/ktor/KtorHttpTemplate$form$1
       3: dup
       4: aload_0
       5: getfield      #20                 // Field $url:Ljava/lang/String;
       8: aload_0
       9: getfield      #23                 // Field this$0:Llove/forte/simbot/http/template/ktor/KtorHttpTemplate;
      12: aload_0
      13: getfield      #26                 // Field $responseType:Ljava/lang/Class;
      16: aload_0
      17: getfield      #29                 // Field $headers:Llove/forte/simbot/http/template/HttpHeaders;
      20: aload_0
      21: getfield      #32                 // Field $cookies:Llove/forte/simbot/http/template/HttpCookies;
      24: aload_0
      25: getfield      #35                 // Field $requestForm:Ljava/util/Map;
      28: aload_2
      29: invokespecial #358                // Method "<init>":(Ljava/lang/String;Llove/forte/simbot/http/template/ktor/KtorHttpTemplate;Ljava/lang/Class;Llove/forte/simbot/http/template/HttpHeaders;Llove/forte/simbot/http/template/HttpCookies;Ljava/util/Map;Lkotlin/coroutines/Continuation;)V
      32: checkcast     #236                // class kotlin/coroutines/Continuation
      35: areturn

  public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation<? super love.forte.simbot.http.template.HttpResponse<T>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #365                // Method create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;
       6: checkcast     #2                  // class love/forte/simbot/http/template/ktor/KtorHttpTemplate$form$1
       9: getstatic     #371                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
      12: invokevirtual #373                // Method invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object invoke(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #377                // class kotlinx/coroutines/CoroutineScope
       5: aload_2
       6: checkcast     #236                // class kotlin/coroutines/Continuation
       9: invokevirtual #379                // Method invoke:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
      12: areturn
}
