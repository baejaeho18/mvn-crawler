Compiled from "KtorHttpTemplate.kt"
public final class love.forte.simbot.http.template.ktor.KtorHttpTemplate extends love.forte.simbot.http.template.BaseHttpTemplate {
  private static final love.forte.simbot.http.template.ktor.KtorHttpTemplate$Logger Logger;

  private final love.forte.simbot.serialization.json.JsonSerializerFactory jsonSerializerFactory;

  private final java.lang.Long requestTimeout;

  private final java.lang.Long connectTimeout;

  private final io.ktor.client.HttpClient client;

  private static final org.slf4j.Logger logger;

  public love.forte.simbot.http.template.ktor.KtorHttpTemplate(io.ktor.client.engine.HttpClientEngineFactory<?>, love.forte.simbot.serialization.json.JsonSerializerFactory, love.forte.simbot.http.configuration.HttpProperties);
    Code:
       0: aload_1
       1: ldc           #12                 // String engineFactory
       3: invokestatic  #18                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #19                 // String jsonSerializerFactory
       9: invokestatic  #18                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_3
      13: ldc           #20                 // String httpProperties
      15: invokestatic  #18                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload_0
      19: invokespecial #23                 // Method love/forte/simbot/http/template/BaseHttpTemplate."<init>":()V
      22: aload_0
      23: aload_2
      24: putfield      #26                 // Field jsonSerializerFactory:Llove/forte/simbot/serialization/json/JsonSerializerFactory;
      27: aload_0
      28: aload_3
      29: invokevirtual #32                 // Method love/forte/simbot/http/configuration/HttpProperties.getRequestTimeout:()Ljava/lang/Long;
      32: putfield      #36                 // Field requestTimeout:Ljava/lang/Long;
      35: aload_0
      36: aload_3
      37: invokevirtual #39                 // Method love/forte/simbot/http/configuration/HttpProperties.getConnectTimeout:()Ljava/lang/Long;
      40: putfield      #42                 // Field connectTimeout:Ljava/lang/Long;
      43: aload_0
      44: aload_1
      45: new           #44                 // class love/forte/simbot/http/template/ktor/KtorHttpTemplate$client$1
      48: dup
      49: aload_0
      50: invokespecial #47                 // Method love/forte/simbot/http/template/ktor/KtorHttpTemplate$client$1."<init>":(Llove/forte/simbot/http/template/ktor/KtorHttpTemplate;)V
      53: checkcast     #49                 // class kotlin/jvm/functions/Function1
      56: invokestatic  #55                 // Method io/ktor/client/HttpClientKt.HttpClient:(Lio/ktor/client/engine/HttpClientEngineFactory;Lkotlin/jvm/functions/Function1;)Lio/ktor/client/HttpClient;
      59: putfield      #59                 // Field client:Lio/ktor/client/HttpClient;
      62: return

  private final <T> love.forte.simbot.http.template.HttpResponse<T> toResponse(io.ktor.client.statement.HttpResponse, java.lang.Class<T>);
    Code:
       0: aload_2
       1: ldc           #70                 // class java/lang/String
       3: invokestatic  #74                 // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ifeq          32
       9: new           #76                 // class love/forte/simbot/http/template/ktor/KtorHttpResponseImpl
      12: dup
      13: aload_1
      14: iconst_0
      15: getstatic     #82                 // Field love/forte/simbot/http/template/ktor/KtorHttpTemplate$toResponse$1.INSTANCE:Llove/forte/simbot/http/template/ktor/KtorHttpTemplate$toResponse$1;
      18: checkcast     #49                 // class kotlin/jvm/functions/Function1
      21: iconst_2
      22: aconst_null
      23: invokespecial #85                 // Method love/forte/simbot/http/template/ktor/KtorHttpResponseImpl."<init>":(Lio/ktor/client/statement/HttpResponse;ZLkotlin/jvm/functions/Function1;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
      26: checkcast     #87                 // class love/forte/simbot/http/template/HttpResponse
      29: goto          68
      32: aload_0
      33: getfield      #26                 // Field jsonSerializerFactory:Llove/forte/simbot/serialization/json/JsonSerializerFactory;
      36: aload_2
      37: invokeinterface #93,  2           // InterfaceMethod love/forte/simbot/serialization/json/JsonSerializerFactory.getJsonSerializer:(Ljava/lang/Class;)Llove/forte/simbot/serialization/json/JsonSerializer;
      42: astore_3
      43: new           #76                 // class love/forte/simbot/http/template/ktor/KtorHttpResponseImpl
      46: dup
      47: aload_1
      48: iconst_0
      49: new           #95                 // class love/forte/simbot/http/template/ktor/KtorHttpTemplate$toResponse$2
      52: dup
      53: aload_3
      54: invokespecial #98                 // Method love/forte/simbot/http/template/ktor/KtorHttpTemplate$toResponse$2."<init>":(Llove/forte/simbot/serialization/json/JsonSerializer;)V
      57: checkcast     #49                 // class kotlin/jvm/functions/Function1
      60: iconst_2
      61: aconst_null
      62: invokespecial #85                 // Method love/forte/simbot/http/template/ktor/KtorHttpResponseImpl."<init>":(Lio/ktor/client/statement/HttpResponse;ZLkotlin/jvm/functions/Function1;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
      65: checkcast     #87                 // class love/forte/simbot/http/template/HttpResponse
      68: areturn

  public <T> love.forte.simbot.http.template.HttpResponse<T> get(java.lang.String, love.forte.simbot.http.template.HttpHeaders, love.forte.simbot.http.template.HttpCookies, java.util.Map<java.lang.String, ? extends java.lang.Object>, java.lang.Class<T>);
    Code:
       0: aload_1
       1: ldc           #111                // String url
       3: invokestatic  #18                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload         5
       8: ldc           #112                // String responseType
      10: invokestatic  #18                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      13: aconst_null
      14: new           #114                // class love/forte/simbot/http/template/ktor/KtorHttpTemplate$get$1
      17: dup
      18: aload_1
      19: aload_0
      20: aload         5
      22: aload_2
      23: aload_3
      24: aload         4
      26: aconst_null
      27: invokespecial #117                // Method love/forte/simbot/http/template/ktor/KtorHttpTemplate$get$1."<init>":(Ljava/lang/String;Llove/forte/simbot/http/template/ktor/KtorHttpTemplate;Ljava/lang/Class;Llove/forte/simbot/http/template/HttpHeaders;Llove/forte/simbot/http/template/HttpCookies;Ljava/util/Map;Lkotlin/coroutines/Continuation;)V
      30: checkcast     #119                // class kotlin/jvm/functions/Function2
      33: iconst_1
      34: aconst_null
      35: invokestatic  #125                // Method kotlinx/coroutines/BuildersKt.runBlocking$default:(Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Ljava/lang/Object;
      38: checkcast     #87                 // class love/forte/simbot/http/template/HttpResponse
      41: areturn

  public <T> love.forte.simbot.http.template.HttpResponse<T> post(java.lang.String, love.forte.simbot.http.template.HttpHeaders, love.forte.simbot.http.template.HttpCookies, java.lang.Object, java.lang.Class<T>);
    Code:
       0: aload_1
       1: ldc           #111                // String url
       3: invokestatic  #18                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload         5
       8: ldc           #112                // String responseType
      10: invokestatic  #18                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      13: aconst_null
      14: new           #135                // class love/forte/simbot/http/template/ktor/KtorHttpTemplate$post$1
      17: dup
      18: aload_1
      19: aload_0
      20: aload         5
      22: aload_2
      23: aload_3
      24: aload         4
      26: aconst_null
      27: invokespecial #138                // Method love/forte/simbot/http/template/ktor/KtorHttpTemplate$post$1."<init>":(Ljava/lang/String;Llove/forte/simbot/http/template/ktor/KtorHttpTemplate;Ljava/lang/Class;Llove/forte/simbot/http/template/HttpHeaders;Llove/forte/simbot/http/template/HttpCookies;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)V
      30: checkcast     #119                // class kotlin/jvm/functions/Function2
      33: iconst_1
      34: aconst_null
      35: invokestatic  #125                // Method kotlinx/coroutines/BuildersKt.runBlocking$default:(Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Ljava/lang/Object;
      38: checkcast     #87                 // class love/forte/simbot/http/template/HttpResponse
      41: areturn

  public <T> love.forte.simbot.http.template.HttpResponse<T> form(java.lang.String, love.forte.simbot.http.template.HttpHeaders, love.forte.simbot.http.template.HttpCookies, java.util.Map<java.lang.String, ? extends java.lang.Object>, java.lang.Class<T>);
    Code:
       0: aload_1
       1: ldc           #111                // String url
       3: invokestatic  #18                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload         5
       8: ldc           #112                // String responseType
      10: invokestatic  #18                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      13: aconst_null
      14: new           #143                // class love/forte/simbot/http/template/ktor/KtorHttpTemplate$form$1
      17: dup
      18: aload_1
      19: aload_0
      20: aload         5
      22: aload_2
      23: aload_3
      24: aload         4
      26: aconst_null
      27: invokespecial #144                // Method love/forte/simbot/http/template/ktor/KtorHttpTemplate$form$1."<init>":(Ljava/lang/String;Llove/forte/simbot/http/template/ktor/KtorHttpTemplate;Ljava/lang/Class;Llove/forte/simbot/http/template/HttpHeaders;Llove/forte/simbot/http/template/HttpCookies;Ljava/util/Map;Lkotlin/coroutines/Continuation;)V
      30: checkcast     #119                // class kotlin/jvm/functions/Function2
      33: iconst_1
      34: aconst_null
      35: invokestatic  #125                // Method kotlinx/coroutines/BuildersKt.runBlocking$default:(Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Ljava/lang/Object;
      38: checkcast     #87                 // class love/forte/simbot/http/template/HttpResponse
      41: areturn

  public <T> love.forte.simbot.http.template.HttpResponse<T> request(love.forte.simbot.http.template.HttpRequest<T>);
    Code:
       0: aload_1
       1: ldc           #148                // String request
       3: invokestatic  #18                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokeinterface #154,  1          // InterfaceMethod love/forte/simbot/http/template/HttpRequest.getUrl:()Ljava/lang/String;
      12: astore_2
      13: aload_1
      14: invokeinterface #158,  1          // InterfaceMethod love/forte/simbot/http/template/HttpRequest.getHeaders:()Llove/forte/simbot/http/template/HttpHeaders;
      19: astore_3
      20: aload_1
      21: invokeinterface #162,  1          // InterfaceMethod love/forte/simbot/http/template/HttpRequest.getCookies:()Llove/forte/simbot/http/template/HttpCookies;
      26: astore        4
      28: aload_1
      29: invokeinterface #166,  1          // InterfaceMethod love/forte/simbot/http/template/HttpRequest.getRequestParam:()Ljava/lang/Object;
      34: astore        5
      36: aload_1
      37: invokeinterface #170,  1          // InterfaceMethod love/forte/simbot/http/template/HttpRequest.getResponseType:()Ljava/lang/Class;
      42: astore        6
      44: getstatic     #174                // Field logger:Lorg/slf4j/Logger;
      47: new           #176                // class java/lang/StringBuilder
      50: dup
      51: invokespecial #177                // Method java/lang/StringBuilder."<init>":()V
      54: ldc           #179                // String Request
      56: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: aload_1
      60: invokeinterface #187,  1          // InterfaceMethod love/forte/simbot/http/template/HttpRequest.getType:()Llove/forte/simbot/http/template/HttpRequestType;
      65: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      68: ldc           #192                // String  -> {}
      70: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: invokevirtual #195                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      76: aload_2
      77: invokeinterface #201,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      82: aload_1
      83: invokeinterface #187,  1          // InterfaceMethod love/forte/simbot/http/template/HttpRequest.getType:()Llove/forte/simbot/http/template/HttpRequestType;
      88: astore        7
      90: getstatic     #207                // Field love/forte/simbot/http/template/ktor/KtorHttpTemplate$WhenMappings.$EnumSwitchMapping$0:[I
      93: aload         7
      95: invokevirtual #213                // Method love/forte/simbot/http/template/HttpRequestType.ordinal:()I
      98: iaload
      99: istore        8
     101: iload         8
     103: tableswitch   { // 1 to 3
                     1: 128
                     2: 158
                     3: 188
               default: 203
          }
     128: aload_0
     129: aload_2
     130: aload_3
     131: aload         4
     133: aload         5
     135: instanceof    #215                // class java/util/Map
     138: ifeq          149
     141: aload         5
     143: checkcast     #215                // class java/util/Map
     146: goto          150
     149: aconst_null
     150: aload         6
     152: invokevirtual #217                // Method get:(Ljava/lang/String;Llove/forte/simbot/http/template/HttpHeaders;Llove/forte/simbot/http/template/HttpCookies;Ljava/util/Map;Ljava/lang/Class;)Llove/forte/simbot/http/template/HttpResponse;
     155: goto          211
     158: aload_0
     159: aload_2
     160: aload_3
     161: aload         4
     163: aload         5
     165: instanceof    #215                // class java/util/Map
     168: ifeq          179
     171: aload         5
     173: checkcast     #215                // class java/util/Map
     176: goto          180
     179: aconst_null
     180: aload         6
     182: invokevirtual #219                // Method form:(Ljava/lang/String;Llove/forte/simbot/http/template/HttpHeaders;Llove/forte/simbot/http/template/HttpCookies;Ljava/util/Map;Ljava/lang/Class;)Llove/forte/simbot/http/template/HttpResponse;
     185: goto          211
     188: aload_0
     189: aload_2
     190: aload_3
     191: aload         4
     193: aload         5
     195: aload         6
     197: invokevirtual #221                // Method post:(Ljava/lang/String;Llove/forte/simbot/http/template/HttpHeaders;Llove/forte/simbot/http/template/HttpCookies;Ljava/lang/Object;Ljava/lang/Class;)Llove/forte/simbot/http/template/HttpResponse;
     200: goto          211
     203: new           #223                // class kotlin/NoWhenBranchMatchedException
     206: dup
     207: invokespecial #224                // Method kotlin/NoWhenBranchMatchedException."<init>":()V
     210: athrow
     211: areturn

  public java.util.List<love.forte.simbot.http.template.HttpResponse<?>> requestAll(boolean, love.forte.simbot.http.template.HttpRequest<?>...);
    Code:
       0: aload_2
       1: ldc           #240                // String requests
       3: invokestatic  #18                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: astore_3
       8: iconst_0
       9: istore        4
      11: aload_3
      12: arraylength
      13: ifne          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ifeq          28
      24: invokestatic  #246                // Method kotlin/collections/CollectionsKt.emptyList:()Ljava/util/List;
      27: areturn
      28: aload_2
      29: arraylength
      30: iconst_1
      31: if_icmpne     51
      34: aload_0
      35: aload_2
      36: invokestatic  #252                // Method kotlin/collections/ArraysKt.first:([Ljava/lang/Object;)Ljava/lang/Object;
      39: checkcast     #150                // class love/forte/simbot/http/template/HttpRequest
      42: invokevirtual #254                // Method request:(Llove/forte/simbot/http/template/HttpRequest;)Llove/forte/simbot/http/template/HttpResponse;
      45: invokestatic  #258                // Method kotlin/collections/CollectionsKt.listOf:(Ljava/lang/Object;)Ljava/util/List;
      48: goto          923
      51: iload_1
      52: ifeq          553
      55: aload_2
      56: astore_3
      57: iconst_0
      58: istore        4
      60: aload_3
      61: astore        5
      63: new           #260                // class java/util/ArrayList
      66: dup
      67: aload_3
      68: arraylength
      69: invokespecial #263                // Method java/util/ArrayList."<init>":(I)V
      72: checkcast     #265                // class java/util/Collection
      75: astore        6
      77: iconst_0
      78: istore        7
      80: aload         5
      82: astore        8
      84: aload         8
      86: arraylength
      87: istore        9
      89: iconst_0
      90: istore        10
      92: iload         10
      94: iload         9
      96: if_icmpge     426
      99: aload         8
     101: iload         10
     103: aaload
     104: astore        11
     106: aload         6
     108: aload         11
     110: astore        12
     112: astore        23
     114: iconst_0
     115: istore        13
     117: aload         12
     119: invokeinterface #154,  1          // InterfaceMethod love/forte/simbot/http/template/HttpRequest.getUrl:()Ljava/lang/String;
     124: astore        14
     126: aload         12
     128: invokeinterface #158,  1          // InterfaceMethod love/forte/simbot/http/template/HttpRequest.getHeaders:()Llove/forte/simbot/http/template/HttpHeaders;
     133: astore        15
     135: aload         12
     137: invokeinterface #166,  1          // InterfaceMethod love/forte/simbot/http/template/HttpRequest.getRequestParam:()Ljava/lang/Object;
     142: astore        16
     144: aload         12
     146: invokeinterface #170,  1          // InterfaceMethod love/forte/simbot/http/template/HttpRequest.getResponseType:()Ljava/lang/Class;
     151: astore        17
     153: getstatic     #174                // Field logger:Lorg/slf4j/Logger;
     156: new           #176                // class java/lang/StringBuilder
     159: dup
     160: invokespecial #177                // Method java/lang/StringBuilder."<init>":()V
     163: ldc           #179                // String Request
     165: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     168: aload         12
     170: invokeinterface #187,  1          // InterfaceMethod love/forte/simbot/http/template/HttpRequest.getType:()Llove/forte/simbot/http/template/HttpRequestType;
     175: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     178: ldc           #192                // String  -> {}
     180: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     183: invokevirtual #195                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     186: aload         14
     188: invokeinterface #201,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     193: aload         15
     195: invokestatic  #269                // Method requestAll$getBlock:(Llove/forte/simbot/http/template/HttpHeaders;)Lkotlin/jvm/functions/Function1;
     198: astore        18
     200: aload         17
     202: aload         12
     204: invokeinterface #187,  1          // InterfaceMethod love/forte/simbot/http/template/HttpRequest.getType:()Llove/forte/simbot/http/template/HttpRequestType;
     209: astore        19
     211: getstatic     #207                // Field love/forte/simbot/http/template/ktor/KtorHttpTemplate$WhenMappings.$EnumSwitchMapping$0:[I
     214: aload         19
     216: invokevirtual #213                // Method love/forte/simbot/http/template/HttpRequestType.ordinal:()I
     219: iaload
     220: istore        20
     222: iload         20
     224: tableswitch   { // 1 to 3
                     1: 252
                     2: 349
                     3: 300
               default: 397
          }
     252: new           #271                // class love/forte/simbot/http/template/ktor/KtorHttpTemplate$requestAll$1$getBlock$1
     255: dup
     256: aload         18
     258: aload         16
     260: invokespecial #274                // Method love/forte/simbot/http/template/ktor/KtorHttpTemplate$requestAll$1$getBlock$1."<init>":(Lkotlin/jvm/functions/Function1;Ljava/lang/Object;)V
     263: checkcast     #49                 // class kotlin/jvm/functions/Function1
     266: astore        21
     268: getstatic     #279                // Field kotlinx/coroutines/GlobalScope.INSTANCE:Lkotlinx/coroutines/GlobalScope;
     271: checkcast     #281                // class kotlinx/coroutines/CoroutineScope
     274: aconst_null
     275: aconst_null
     276: new           #283                // class love/forte/simbot/http/template/ktor/KtorHttpTemplate$requestAll$1$1
     279: dup
     280: aload_0
     281: aload         14
     283: aload         21
     285: aconst_null
     286: invokespecial #286                // Method love/forte/simbot/http/template/ktor/KtorHttpTemplate$requestAll$1$1."<init>":(Llove/forte/simbot/http/template/ktor/KtorHttpTemplate;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)V
     289: checkcast     #119                // class kotlin/jvm/functions/Function2
     292: iconst_3
     293: aconst_null
     294: invokestatic  #290                // Method kotlinx/coroutines/BuildersKt.async$default:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/CoroutineStart;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Deferred;
     297: goto          405
     300: new           #292                // class love/forte/simbot/http/template/ktor/KtorHttpTemplate$requestAll$1$postBlock$1
     303: dup
     304: aload         18
     306: aload         16
     308: aload_0
     309: invokespecial #295                // Method love/forte/simbot/http/template/ktor/KtorHttpTemplate$requestAll$1$postBlock$1."<init>":(Lkotlin/jvm/functions/Function1;Ljava/lang/Object;Llove/forte/simbot/http/template/ktor/KtorHttpTemplate;)V
     312: checkcast     #49                 // class kotlin/jvm/functions/Function1
     315: astore        21
     317: getstatic     #279                // Field kotlinx/coroutines/GlobalScope.INSTANCE:Lkotlinx/coroutines/GlobalScope;
     320: checkcast     #281                // class kotlinx/coroutines/CoroutineScope
     323: aconst_null
     324: aconst_null
     325: new           #297                // class love/forte/simbot/http/template/ktor/KtorHttpTemplate$requestAll$1$2
     328: dup
     329: aload_0
     330: aload         14
     332: aload         21
     334: aconst_null
     335: invokespecial #298                // Method love/forte/simbot/http/template/ktor/KtorHttpTemplate$requestAll$1$2."<init>":(Llove/forte/simbot/http/template/ktor/KtorHttpTemplate;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)V
     338: checkcast     #119                // class kotlin/jvm/functions/Function2
     341: iconst_3
     342: aconst_null
     343: invokestatic  #290                // Method kotlinx/coroutines/BuildersKt.async$default:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/CoroutineStart;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Deferred;
     346: goto          405
     349: new           #300                // class love/forte/simbot/http/template/ktor/KtorHttpTemplate$requestAll$1$postBlock$2
     352: dup
     353: aload         18
     355: aload         16
     357: invokespecial #301                // Method love/forte/simbot/http/template/ktor/KtorHttpTemplate$requestAll$1$postBlock$2."<init>":(Lkotlin/jvm/functions/Function1;Ljava/lang/Object;)V
     360: checkcast     #49                 // class kotlin/jvm/functions/Function1
     363: astore        21
     365: getstatic     #279                // Field kotlinx/coroutines/GlobalScope.INSTANCE:Lkotlinx/coroutines/GlobalScope;
     368: checkcast     #281                // class kotlinx/coroutines/CoroutineScope
     371: aconst_null
     372: aconst_null
     373: new           #303                // class love/forte/simbot/http/template/ktor/KtorHttpTemplate$requestAll$1$3
     376: dup
     377: aload_0
     378: aload         14
     380: aload         21
     382: aconst_null
     383: invokespecial #304                // Method love/forte/simbot/http/template/ktor/KtorHttpTemplate$requestAll$1$3."<init>":(Llove/forte/simbot/http/template/ktor/KtorHttpTemplate;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)V
     386: checkcast     #119                // class kotlin/jvm/functions/Function2
     389: iconst_3
     390: aconst_null
     391: invokestatic  #290                // Method kotlinx/coroutines/BuildersKt.async$default:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/CoroutineStart;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Deferred;
     394: goto          405
     397: new           #223                // class kotlin/NoWhenBranchMatchedException
     400: dup
     401: invokespecial #224                // Method kotlin/NoWhenBranchMatchedException."<init>":()V
     404: athrow
     405: invokestatic  #310                // Method kotlin/TuplesKt.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;
     408: astore        24
     410: aload         23
     412: aload         24
     414: invokeinterface #314,  2          // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     419: pop
     420: iinc          10, 1
     423: goto          92
     426: aload         6
     428: checkcast     #316                // class java/util/List
     431: nop
     432: checkcast     #318                // class java/lang/Iterable
     435: astore_3
     436: nop
     437: iconst_0
     438: istore        4
     440: aload_3
     441: astore        5
     443: new           #260                // class java/util/ArrayList
     446: dup
     447: aload_3
     448: bipush        10
     450: invokestatic  #322                // Method kotlin/collections/CollectionsKt.collectionSizeOrDefault:(Ljava/lang/Iterable;I)I
     453: invokespecial #263                // Method java/util/ArrayList."<init>":(I)V
     456: checkcast     #265                // class java/util/Collection
     459: astore        6
     461: iconst_0
     462: istore        7
     464: aload         5
     466: invokeinterface #326,  1          // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
     471: astore        8
     473: aload         8
     475: invokeinterface #332,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     480: ifeq          544
     483: aload         8
     485: invokeinterface #335,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     490: astore        9
     492: aload         6
     494: aload         9
     496: checkcast     #337                // class kotlin/Pair
     499: astore        10
     501: astore        23
     503: iconst_0
     504: istore        11
     506: aconst_null
     507: new           #339                // class love/forte/simbot/http/template/ktor/KtorHttpTemplate$requestAll$2$1
     510: dup
     511: aload_0
     512: aload         10
     514: aconst_null
     515: invokespecial #342                // Method love/forte/simbot/http/template/ktor/KtorHttpTemplate$requestAll$2$1."<init>":(Llove/forte/simbot/http/template/ktor/KtorHttpTemplate;Lkotlin/Pair;Lkotlin/coroutines/Continuation;)V
     518: checkcast     #119                // class kotlin/jvm/functions/Function2
     521: iconst_1
     522: aconst_null
     523: invokestatic  #125                // Method kotlinx/coroutines/BuildersKt.runBlocking$default:(Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Ljava/lang/Object;
     526: checkcast     #87                 // class love/forte/simbot/http/template/HttpResponse
     529: astore        24
     531: aload         23
     533: aload         24
     535: invokeinterface #314,  2          // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     540: pop
     541: goto          473
     544: aload         6
     546: checkcast     #316                // class java/util/List
     549: nop
     550: goto          923
     553: aload_2
     554: astore_3
     555: iconst_0
     556: istore        4
     558: aload_3
     559: astore        5
     561: new           #260                // class java/util/ArrayList
     564: dup
     565: aload_3
     566: arraylength
     567: invokespecial #263                // Method java/util/ArrayList."<init>":(I)V
     570: checkcast     #265                // class java/util/Collection
     573: astore        6
     575: iconst_0
     576: istore        7
     578: aload         5
     580: astore        8
     582: aload         8
     584: arraylength
     585: istore        9
     587: iconst_0
     588: istore        10
     590: iload         10
     592: iload         9
     594: if_icmpge     917
     597: aload         8
     599: iload         10
     601: aaload
     602: astore        11
     604: aload         6
     606: aload         11
     608: astore        12
     610: astore        23
     612: iconst_0
     613: istore        13
     615: aload         12
     617: invokeinterface #154,  1          // InterfaceMethod love/forte/simbot/http/template/HttpRequest.getUrl:()Ljava/lang/String;
     622: astore        14
     624: aload         12
     626: invokeinterface #158,  1          // InterfaceMethod love/forte/simbot/http/template/HttpRequest.getHeaders:()Llove/forte/simbot/http/template/HttpHeaders;
     631: astore        15
     633: aload         12
     635: invokeinterface #166,  1          // InterfaceMethod love/forte/simbot/http/template/HttpRequest.getRequestParam:()Ljava/lang/Object;
     640: astore        16
     642: aload         12
     644: invokeinterface #170,  1          // InterfaceMethod love/forte/simbot/http/template/HttpRequest.getResponseType:()Ljava/lang/Class;
     649: astore        17
     651: aload         15
     653: invokestatic  #269                // Method requestAll$getBlock:(Llove/forte/simbot/http/template/HttpHeaders;)Lkotlin/jvm/functions/Function1;
     656: astore        18
     658: getstatic     #174                // Field logger:Lorg/slf4j/Logger;
     661: new           #176                // class java/lang/StringBuilder
     664: dup
     665: invokespecial #177                // Method java/lang/StringBuilder."<init>":()V
     668: ldc           #179                // String Request
     670: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     673: aload         12
     675: invokeinterface #187,  1          // InterfaceMethod love/forte/simbot/http/template/HttpRequest.getType:()Llove/forte/simbot/http/template/HttpRequestType;
     680: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     683: ldc           #192                // String  -> {}
     685: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     688: invokevirtual #195                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     691: aload         14
     693: invokeinterface #201,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     698: aload         12
     700: invokeinterface #187,  1          // InterfaceMethod love/forte/simbot/http/template/HttpRequest.getType:()Llove/forte/simbot/http/template/HttpRequestType;
     705: astore        19
     707: getstatic     #207                // Field love/forte/simbot/http/template/ktor/KtorHttpTemplate$WhenMappings.$EnumSwitchMapping$0:[I
     710: aload         19
     712: invokevirtual #213                // Method love/forte/simbot/http/template/HttpRequestType.ordinal:()I
     715: iaload
     716: istore        20
     718: iload         20
     720: tableswitch   { // 1 to 3
                     1: 748
                     2: 837
                     3: 792
               default: 881
          }
     748: new           #344                // class love/forte/simbot/http/template/ktor/KtorHttpTemplate$requestAll$3$response$getBlock$1
     751: dup
     752: aload         18
     754: aload         16
     756: invokespecial #345                // Method love/forte/simbot/http/template/ktor/KtorHttpTemplate$requestAll$3$response$getBlock$1."<init>":(Lkotlin/jvm/functions/Function1;Ljava/lang/Object;)V
     759: checkcast     #49                 // class kotlin/jvm/functions/Function1
     762: astore        21
     764: aconst_null
     765: new           #347                // class love/forte/simbot/http/template/ktor/KtorHttpTemplate$requestAll$3$response$1
     768: dup
     769: aload_0
     770: aload         14
     772: aload         21
     774: aconst_null
     775: invokespecial #348                // Method love/forte/simbot/http/template/ktor/KtorHttpTemplate$requestAll$3$response$1."<init>":(Llove/forte/simbot/http/template/ktor/KtorHttpTemplate;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)V
     778: checkcast     #119                // class kotlin/jvm/functions/Function2
     781: iconst_1
     782: aconst_null
     783: invokestatic  #125                // Method kotlinx/coroutines/BuildersKt.runBlocking$default:(Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Ljava/lang/Object;
     786: checkcast     #350                // class io/ktor/client/statement/HttpResponse
     789: goto          889
     792: new           #352                // class love/forte/simbot/http/template/ktor/KtorHttpTemplate$requestAll$3$response$postBlock$1
     795: dup
     796: aload         18
     798: aload         16
     800: aload_0
     801: invokespecial #353                // Method love/forte/simbot/http/template/ktor/KtorHttpTemplate$requestAll$3$response$postBlock$1."<init>":(Lkotlin/jvm/functions/Function1;Ljava/lang/Object;Llove/forte/simbot/http/template/ktor/KtorHttpTemplate;)V
     804: checkcast     #49                 // class kotlin/jvm/functions/Function1
     807: astore        21
     809: aconst_null
     810: new           #355                // class love/forte/simbot/http/template/ktor/KtorHttpTemplate$requestAll$3$response$2
     813: dup
     814: aload_0
     815: aload         14
     817: aload         21
     819: aconst_null
     820: invokespecial #356                // Method love/forte/simbot/http/template/ktor/KtorHttpTemplate$requestAll$3$response$2."<init>":(Llove/forte/simbot/http/template/ktor/KtorHttpTemplate;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)V
     823: checkcast     #119                // class kotlin/jvm/functions/Function2
     826: iconst_1
     827: aconst_null
     828: invokestatic  #125                // Method kotlinx/coroutines/BuildersKt.runBlocking$default:(Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Ljava/lang/Object;
     831: checkcast     #350                // class io/ktor/client/statement/HttpResponse
     834: goto          889
     837: new           #358                // class love/forte/simbot/http/template/ktor/KtorHttpTemplate$requestAll$3$response$postBlock$2
     840: dup
     841: aload         18
     843: aload         16
     845: invokespecial #359                // Method love/forte/simbot/http/template/ktor/KtorHttpTemplate$requestAll$3$response$postBlock$2."<init>":(Lkotlin/jvm/functions/Function1;Ljava/lang/Object;)V
     848: checkcast     #49                 // class kotlin/jvm/functions/Function1
     851: astore        21
     853: aconst_null
     854: new           #361                // class love/forte/simbot/http/template/ktor/KtorHttpTemplate$requestAll$3$response$3
     857: dup
     858: aload_0
     859: aload         14
     861: aload         21
     863: aconst_null
     864: invokespecial #362                // Method love/forte/simbot/http/template/ktor/KtorHttpTemplate$requestAll$3$response$3."<init>":(Llove/forte/simbot/http/template/ktor/KtorHttpTemplate;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)V
     867: checkcast     #119                // class kotlin/jvm/functions/Function2
     870: iconst_1
     871: aconst_null
     872: invokestatic  #125                // Method kotlinx/coroutines/BuildersKt.runBlocking$default:(Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Ljava/lang/Object;
     875: checkcast     #350                // class io/ktor/client/statement/HttpResponse
     878: goto          889
     881: new           #223                // class kotlin/NoWhenBranchMatchedException
     884: dup
     885: invokespecial #224                // Method kotlin/NoWhenBranchMatchedException."<init>":()V
     888: athrow
     889: astore        22
     891: aload_0
     892: aload         22
     894: aload         17
     896: invokespecial #364                // Method toResponse:(Lio/ktor/client/statement/HttpResponse;Ljava/lang/Class;)Llove/forte/simbot/http/template/HttpResponse;
     899: astore        24
     901: aload         23
     903: aload         24
     905: invokeinterface #314,  2          // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     910: pop
     911: iinc          10, 1
     914: goto          590
     917: aload         6
     919: checkcast     #316                // class java/util/List
     922: nop
     923: areturn

  private static final kotlin.jvm.functions.Function1<io.ktor.client.request.HttpRequestBuilder, kotlin.Unit> requestAll$getBlock(love.forte.simbot.http.template.HttpHeaders);
    Code:
       0: new           #392                // class love/forte/simbot/http/template/ktor/KtorHttpTemplate$requestAll$getBlock$1
       3: dup
       4: aload_0
       5: invokespecial #395                // Method love/forte/simbot/http/template/ktor/KtorHttpTemplate$requestAll$getBlock$1."<init>":(Llove/forte/simbot/http/template/HttpHeaders;)V
       8: checkcast     #49                 // class kotlin/jvm/functions/Function1
      11: areturn

  public static final org.slf4j.Logger access$getLogger$cp();
    Code:
       0: getstatic     #174                // Field logger:Lorg/slf4j/Logger;
       3: areturn

  public static final io.ktor.client.HttpClient access$getClient$p(love.forte.simbot.http.template.ktor.KtorHttpTemplate);
    Code:
       0: aload_0
       1: getfield      #59                 // Field client:Lio/ktor/client/HttpClient;
       4: areturn

  public static final love.forte.simbot.http.template.HttpResponse access$toResponse(love.forte.simbot.http.template.ktor.KtorHttpTemplate, io.ktor.client.statement.HttpResponse, java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #364                // Method toResponse:(Lio/ktor/client/statement/HttpResponse;Ljava/lang/Class;)Llove/forte/simbot/http/template/HttpResponse;
       6: areturn

  public static final love.forte.simbot.serialization.json.JsonSerializerFactory access$getJsonSerializerFactory$p(love.forte.simbot.http.template.ktor.KtorHttpTemplate);
    Code:
       0: aload_0
       1: getfield      #26                 // Field jsonSerializerFactory:Llove/forte/simbot/serialization/json/JsonSerializerFactory;
       4: areturn

  public static final java.lang.Long access$getRequestTimeout$p(love.forte.simbot.http.template.ktor.KtorHttpTemplate);
    Code:
       0: aload_0
       1: getfield      #36                 // Field requestTimeout:Ljava/lang/Long;
       4: areturn

  public static final java.lang.Long access$getConnectTimeout$p(love.forte.simbot.http.template.ktor.KtorHttpTemplate);
    Code:
       0: aload_0
       1: getfield      #42                 // Field connectTimeout:Ljava/lang/Long;
       4: areturn

  static {};
    Code:
       0: new           #411                // class love/forte/simbot/http/template/ktor/KtorHttpTemplate$Logger
       3: dup
       4: aconst_null
       5: invokespecial #414                // Method love/forte/simbot/http/template/ktor/KtorHttpTemplate$Logger."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
       8: putstatic     #418                // Field Logger:Llove/forte/simbot/http/template/ktor/KtorHttpTemplate$Logger;
      11: ldc           #2                  // class love/forte/simbot/http/template/ktor/KtorHttpTemplate
      13: invokestatic  #424                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      16: putstatic     #174                // Field logger:Lorg/slf4j/Logger;
      19: return
}
