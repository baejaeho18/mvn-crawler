Compiled from "KtorHttpTemplate.kt"
final class love.forte.simbot.http.template.ktor.KtorHttpResponseImpl$headers$2 extends kotlin.jvm.internal.Lambda implements kotlin.jvm.functions.Function0<love.forte.simbot.http.template.HttpHeaders> {
  final io.ktor.client.statement.HttpResponse $response;

  love.forte.simbot.http.template.ktor.KtorHttpResponseImpl$headers$2(io.ktor.client.statement.HttpResponse);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field $response:Lio/ktor/client/statement/HttpResponse;
       5: aload_0
       6: iconst_0
       7: invokespecial #16                 // Method kotlin/jvm/internal/Lambda."<init>":(I)V
      10: return

  public final love.forte.simbot.http.template.HttpHeaders invoke();
    Code:
       0: getstatic     #27                 // Field love/forte/simbot/http/template/HttpHeaders.Companion:Llove/forte/simbot/http/template/HttpHeaders$Companion;
       3: aload_0
       4: getfield      #13                 // Field $response:Lio/ktor/client/statement/HttpResponse;
       7: invokevirtual #33                 // Method io/ktor/client/statement/HttpResponse.getHeaders:()Lio/ktor/http/Headers;
      10: checkcast     #35                 // class io/ktor/util/StringValues
      13: invokestatic  #41                 // Method io/ktor/util/StringValuesKt.toMap:(Lio/ktor/util/StringValues;)Ljava/util/Map;
      16: invokevirtual #47                 // Method love/forte/simbot/http/template/HttpHeaders$Companion.fromMultiValueMap:(Ljava/util/Map;)Llove/forte/simbot/http/template/HttpHeaders;
      19: areturn

  public java.lang.Object invoke();
    Code:
       0: aload_0
       1: invokevirtual #50                 // Method invoke:()Llove/forte/simbot/http/template/HttpHeaders;
       4: areturn
}
