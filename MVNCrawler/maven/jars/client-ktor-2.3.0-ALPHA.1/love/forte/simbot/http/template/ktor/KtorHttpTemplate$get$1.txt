Compiled from "KtorHttpTemplate.kt"
final class love.forte.simbot.http.template.ktor.KtorHttpTemplate$get$1 extends kotlin.coroutines.jvm.internal.SuspendLambda implements kotlin.jvm.functions.Function2<kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation<? super love.forte.simbot.http.template.HttpResponse<T>>, java.lang.Object> {
  java.lang.Object L$0;

  int label;

  final java.lang.String $url;

  final love.forte.simbot.http.template.ktor.KtorHttpTemplate this$0;

  final java.lang.Class<T> $responseType;

  final love.forte.simbot.http.template.HttpHeaders $headers;

  final love.forte.simbot.http.template.HttpCookies $cookies;

  final java.util.Map<java.lang.String, java.lang.Object> $requestParam;

  love.forte.simbot.http.template.ktor.KtorHttpTemplate$get$1(java.lang.String, love.forte.simbot.http.template.ktor.KtorHttpTemplate, java.lang.Class<T>, love.forte.simbot.http.template.HttpHeaders, love.forte.simbot.http.template.HttpCookies, java.util.Map<java.lang.String, ? extends java.lang.Object>, kotlin.coroutines.Continuation<? super love.forte.simbot.http.template.ktor.KtorHttpTemplate$get$1>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field $url:Ljava/lang/String;
       5: aload_0
       6: aload_2
       7: putfield      #23                 // Field this$0:Llove/forte/simbot/http/template/ktor/KtorHttpTemplate;
      10: aload_0
      11: aload_3
      12: putfield      #26                 // Field $responseType:Ljava/lang/Class;
      15: aload_0
      16: aload         4
      18: putfield      #29                 // Field $headers:Llove/forte/simbot/http/template/HttpHeaders;
      21: aload_0
      22: aload         5
      24: putfield      #32                 // Field $cookies:Llove/forte/simbot/http/template/HttpCookies;
      27: aload_0
      28: aload         6
      30: putfield      #35                 // Field $requestParam:Ljava/util/Map;
      33: aload_0
      34: iconst_2
      35: aload         7
      37: invokespecial #38                 // Method kotlin/coroutines/jvm/internal/SuspendLambda."<init>":(ILkotlin/coroutines/Continuation;)V
      40: return

  public final java.lang.Object invokeSuspend(java.lang.Object);
    Code:
       0: invokestatic  #70                 // Method kotlin/coroutines/intrinsics/IntrinsicsKt.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;
       3: astore        52
       5: aload_0
       6: getfield      #74                 // Field label:I
       9: tableswitch   { // 0 to 3
                     0: 40
                     1: 590
                     2: 653
                     3: 747
               default: 838
          }
      40: aload_1
      41: invokestatic  #80                 // Method kotlin/ResultKt.throwOnFailure:(Ljava/lang/Object;)V
      44: invokestatic  #86                 // Method love/forte/simbot/http/template/ktor/KtorHttpTemplate.access$getLogger$cp:()Lorg/slf4j/Logger;
      47: ldc           #88                 // String Get -> {}
      49: aload_0
      50: getfield      #20                 // Field $url:Ljava/lang/String;
      53: invokeinterface #94,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      58: aload_0
      59: getfield      #23                 // Field this$0:Llove/forte/simbot/http/template/ktor/KtorHttpTemplate;
      62: invokestatic  #98                 // Method love/forte/simbot/http/template/ktor/KtorHttpTemplate.access$getClient$p:(Llove/forte/simbot/http/template/ktor/KtorHttpTemplate;)Lio/ktor/client/HttpClient;
      65: astore_3
      66: aload_0
      67: getfield      #20                 // Field $url:Ljava/lang/String;
      70: astore        4
      72: aload_0
      73: getfield      #29                 // Field $headers:Llove/forte/simbot/http/template/HttpHeaders;
      76: astore        5
      78: aload_0
      79: getfield      #32                 // Field $cookies:Llove/forte/simbot/http/template/HttpCookies;
      82: astore        6
      84: aload_0
      85: getfield      #35                 // Field $requestParam:Ljava/util/Map;
      88: astore        7
      90: iconst_0
      91: istore        8
      93: aload_3
      94: astore        9
      96: ldc           #100                // String http
      98: astore        10
     100: ldc           #102                // String localhost
     102: astore        11
     104: iconst_0
     105: istore        12
     107: ldc           #104                // String /
     109: astore        13
     111: getstatic     #110                // Field io/ktor/client/utils/EmptyContent.INSTANCE:Lio/ktor/client/utils/EmptyContent;
     114: astore        14
     116: iconst_0
     117: istore        15
     119: aload         9
     121: astore        16
     123: iconst_0
     124: istore        17
     126: aload         16
     128: astore        18
     130: new           #112                // class io/ktor/client/request/HttpRequestBuilder
     133: dup
     134: invokespecial #115                // Method io/ktor/client/request/HttpRequestBuilder."<init>":()V
     137: astore        19
     139: iconst_0
     140: istore        20
     142: iconst_0
     143: istore        21
     145: aload         19
     147: astore        22
     149: iconst_0
     150: istore        23
     152: aload         22
     154: aload         10
     156: aload         11
     158: iload         12
     160: aload         13
     162: aconst_null
     163: bipush        16
     165: aconst_null
     166: invokestatic  #121                // Method io/ktor/client/request/HttpRequestKt.url$default:(Lio/ktor/client/request/HttpRequestBuilder;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
     169: aload         22
     171: getstatic     #127                // Field io/ktor/http/HttpMethod.Companion:Lio/ktor/http/HttpMethod$Companion;
     174: invokevirtual #133                // Method io/ktor/http/HttpMethod$Companion.getGet:()Lio/ktor/http/HttpMethod;
     177: invokevirtual #137                // Method io/ktor/client/request/HttpRequestBuilder.setMethod:(Lio/ktor/http/HttpMethod;)V
     180: aload         22
     182: aload         14
     184: invokevirtual #140                // Method io/ktor/client/request/HttpRequestBuilder.setBody:(Ljava/lang/Object;)V
     187: aload         22
     189: astore        24
     191: iconst_0
     192: istore        25
     194: iconst_0
     195: istore        26
     197: aload         24
     199: astore        27
     201: iconst_0
     202: istore        28
     204: aload         27
     206: invokevirtual #144                // Method io/ktor/client/request/HttpRequestBuilder.getUrl:()Lio/ktor/http/URLBuilder;
     209: aload         4
     211: invokestatic  #150                // Method io/ktor/http/URLParserKt.takeFrom:(Lio/ktor/http/URLBuilder;Ljava/lang/String;)Lio/ktor/http/URLBuilder;
     214: pop
     215: aload         27
     217: astore        29
     219: iconst_0
     220: istore        30
     222: aload         5
     224: astore        31
     226: aload         31
     228: ifnonnull     234
     231: goto          357
     234: aload         31
     236: checkcast     #152                // class java/util/Map
     239: astore        32
     241: iconst_0
     242: istore        33
     244: aload         32
     246: astore        34
     248: iconst_0
     249: istore        35
     251: aload         34
     253: invokeinterface #156,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     258: invokeinterface #162,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     263: astore        36
     265: aload         36
     267: invokeinterface #168,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     272: ifeq          356
     275: aload         36
     277: invokeinterface #171,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     282: checkcast     #173                // class java/util/Map$Entry
     285: astore        37
     287: aload         37
     289: astore        38
     291: iconst_0
     292: istore        39
     294: aload         38
     296: astore        40
     298: iconst_0
     299: istore        41
     301: aload         40
     303: invokeinterface #176,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     308: checkcast     #178                // class java/lang/String
     311: astore        42
     313: aload         38
     315: astore        41
     317: iconst_0
     318: istore        43
     320: aload         41
     322: invokeinterface #181,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     327: checkcast     #183                // class java/util/List
     330: astore        40
     332: aload         29
     334: new           #185                // class love/forte/simbot/http/template/ktor/KtorHttpTemplate$get$1$response$1$1$1
     337: dup
     338: aload         42
     340: aload         40
     342: invokespecial #188                // Method love/forte/simbot/http/template/ktor/KtorHttpTemplate$get$1$response$1$1$1."<init>":(Ljava/lang/String;Ljava/util/List;)V
     345: checkcast     #190                // class kotlin/jvm/functions/Function1
     348: invokestatic  #194                // Method io/ktor/client/request/HttpRequestKt.headers:(Lio/ktor/client/request/HttpRequestBuilder;Lkotlin/jvm/functions/Function1;)Lio/ktor/http/HeadersBuilder;
     351: pop
     352: nop
     353: goto          265
     356: nop
     357: aload         29
     359: new           #196                // class love/forte/simbot/http/template/ktor/KtorHttpTemplate$get$1$response$1$2
     362: dup
     363: aload         29
     365: invokespecial #199                // Method love/forte/simbot/http/template/ktor/KtorHttpTemplate$get$1$response$1$2."<init>":(Lio/ktor/client/request/HttpRequestBuilder;)V
     368: checkcast     #190                // class kotlin/jvm/functions/Function1
     371: invokestatic  #194                // Method io/ktor/client/request/HttpRequestKt.headers:(Lio/ktor/client/request/HttpRequestBuilder;Lkotlin/jvm/functions/Function1;)Lio/ktor/http/HeadersBuilder;
     374: pop
     375: aload         29
     377: aload         6
     379: invokestatic  #205                // Method love/forte/simbot/http/template/ktor/KtorHttpTemplates.access$appendCookies:(Lio/ktor/client/request/HttpRequestBuilder;Llove/forte/simbot/http/template/HttpCookies;)V
     382: aload         7
     384: astore        31
     386: aload         31
     388: ifnonnull     394
     391: goto          500
     394: aload         31
     396: astore        32
     398: iconst_0
     399: istore        33
     401: aload         32
     403: astore        34
     405: iconst_0
     406: istore        35
     408: aload         34
     410: invokeinterface #156,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     415: invokeinterface #162,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     420: astore        36
     422: aload         36
     424: invokeinterface #168,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     429: ifeq          499
     432: aload         36
     434: invokeinterface #171,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     439: checkcast     #173                // class java/util/Map$Entry
     442: astore        37
     444: aload         37
     446: astore        38
     448: iconst_0
     449: istore        39
     451: aload         38
     453: astore        40
     455: iconst_0
     456: istore        41
     458: aload         40
     460: invokeinterface #176,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     465: checkcast     #178                // class java/lang/String
     468: astore        42
     470: aload         38
     472: astore        41
     474: iconst_0
     475: istore        43
     477: aload         41
     479: invokeinterface #181,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     484: astore        40
     486: aload         29
     488: aload         42
     490: aload         40
     492: invokestatic  #211                // Method io/ktor/client/request/UtilsKt.parameter:(Lio/ktor/client/request/HttpRequestBuilder;Ljava/lang/String;Ljava/lang/Object;)V
     495: nop
     496: goto          422
     499: nop
     500: nop
     501: nop
     502: nop
     503: aload         19
     505: astore        19
     507: iconst_0
     508: istore        20
     510: new           #213                // class io/ktor/client/statement/HttpStatement
     513: dup
     514: aload         19
     516: aload         18
     518: invokespecial #216                // Method io/ktor/client/statement/HttpStatement."<init>":(Lio/ktor/client/request/HttpRequestBuilder;Lio/ktor/client/HttpClient;)V
     521: astore        21
     523: iconst_0
     524: istore        44
     526: ldc           #218                // class io/ktor/client/statement/HttpResponse
     528: invokestatic  #224                // Method kotlin/jvm/internal/Reflection.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;
     531: astore        45
     533: aload         45
     535: ldc           #213                // class io/ktor/client/statement/HttpStatement
     537: invokestatic  #224                // Method kotlin/jvm/internal/Reflection.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;
     540: invokestatic  #230                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     543: ifeq          554
     546: aload         21
     548: checkcast     #218                // class io/ktor/client/statement/HttpResponse
     551: goto          819
     554: aload         45
     556: ldc           #218                // class io/ktor/client/statement/HttpResponse
     558: invokestatic  #224                // Method kotlin/jvm/internal/Reflection.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;
     561: invokestatic  #230                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     564: ifeq          630
     567: aload         21
     569: aload_0
     570: checkcast     #232                // class kotlin/coroutines/Continuation
     573: aload_0
     574: iconst_1
     575: putfield      #74                 // Field label:I
     578: invokevirtual #236                // Method io/ktor/client/statement/HttpStatement.execute:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
     581: dup
     582: aload         52
     584: if_acmpne     610
     587: aload         52
     589: areturn
     590: iconst_0
     591: istore        8
     593: iconst_0
     594: istore        15
     596: iconst_0
     597: istore        17
     599: iconst_0
     600: istore        20
     602: iconst_0
     603: istore        44
     605: aload_1
     606: invokestatic  #80                 // Method kotlin/ResultKt.throwOnFailure:(Ljava/lang/Object;)V
     609: aload_1
     610: dup
     611: ifnonnull     624
     614: new           #238                // class java/lang/NullPointerException
     617: dup
     618: ldc           #240                // String null cannot be cast to non-null type io.ktor.client.statement.HttpResponse
     620: invokespecial #243                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
     623: athrow
     624: checkcast     #218                // class io/ktor/client/statement/HttpResponse
     627: goto          819
     630: aload         21
     632: aload_0
     633: checkcast     #232                // class kotlin/coroutines/Continuation
     636: aload_0
     637: iconst_2
     638: putfield      #74                 // Field label:I
     641: invokevirtual #246                // Method io/ktor/client/statement/HttpStatement.executeUnsafe:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
     644: dup
     645: aload         52
     647: if_acmpne     673
     650: aload         52
     652: areturn
     653: iconst_0
     654: istore        8
     656: iconst_0
     657: istore        15
     659: iconst_0
     660: istore        17
     662: iconst_0
     663: istore        20
     665: iconst_0
     666: istore        44
     668: aload_1
     669: invokestatic  #80                 // Method kotlin/ResultKt.throwOnFailure:(Ljava/lang/Object;)V
     672: aload_1
     673: checkcast     #218                // class io/ktor/client/statement/HttpResponse
     676: astore        46
     678: nop
     679: aload         46
     681: astore        47
     683: iconst_0
     684: istore        48
     686: aload         47
     688: invokevirtual #250                // Method io/ktor/client/statement/HttpResponse.getCall:()Lio/ktor/client/call/HttpClientCall;
     691: iconst_0
     692: istore        49
     694: ldc           #218                // class io/ktor/client/statement/HttpResponse
     696: invokestatic  #254                // Method kotlin/jvm/internal/Reflection.typeOf:(Ljava/lang/Class;)Lkotlin/reflect/KType;
     699: astore        50
     701: aload         50
     703: invokestatic  #260                // Method kotlin/reflect/TypesJVMKt.getJavaType:(Lkotlin/reflect/KType;)Ljava/lang/reflect/Type;
     706: astore        51
     708: aload         51
     710: ldc           #218                // class io/ktor/client/statement/HttpResponse
     712: invokestatic  #224                // Method kotlin/jvm/internal/Reflection.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;
     715: aload         50
     717: invokestatic  #266                // Method io/ktor/util/reflect/TypeInfoJvmKt.typeInfoImpl:(Ljava/lang/reflect/Type;Lkotlin/reflect/KClass;Lkotlin/reflect/KType;)Lio/ktor/util/reflect/TypeInfo;
     720: aload_0
     721: checkcast     #232                // class kotlin/coroutines/Continuation
     724: aload_0
     725: aload         46
     727: putfield      #268                // Field L$0:Ljava/lang/Object;
     730: aload_0
     731: iconst_3
     732: putfield      #74                 // Field label:I
     735: invokevirtual #274                // Method io/ktor/client/call/HttpClientCall.receive:(Lio/ktor/util/reflect/TypeInfo;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
     738: dup
     739: aload         52
     741: if_acmpne     780
     744: aload         52
     746: areturn
     747: iconst_0
     748: istore        8
     750: iconst_0
     751: istore        15
     753: iconst_0
     754: istore        17
     756: iconst_0
     757: istore        20
     759: iconst_0
     760: istore        44
     762: iconst_0
     763: istore        48
     765: aload_0
     766: getfield      #268                // Field L$0:Ljava/lang/Object;
     769: checkcast     #218                // class io/ktor/client/statement/HttpResponse
     772: astore        46
     774: nop
     775: aload_1
     776: invokestatic  #80                 // Method kotlin/ResultKt.throwOnFailure:(Ljava/lang/Object;)V
     779: aload_1
     780: dup
     781: ifnonnull     794
     784: new           #238                // class java/lang/NullPointerException
     787: dup
     788: ldc           #240                // String null cannot be cast to non-null type io.ktor.client.statement.HttpResponse
     790: invokespecial #243                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
     793: athrow
     794: checkcast     #218                // class io/ktor/client/statement/HttpResponse
     797: astore        47
     799: aload         46
     801: invokestatic  #280                // Method io/ktor/client/statement/HttpResponseKt.complete:(Lio/ktor/client/statement/HttpResponse;)V
     804: goto          817
     807: astore        48
     809: aload         46
     811: invokestatic  #280                // Method io/ktor/client/statement/HttpResponseKt.complete:(Lio/ktor/client/statement/HttpResponse;)V
     814: aload         48
     816: athrow
     817: aload         47
     819: nop
     820: nop
     821: nop
     822: nop
     823: nop
     824: astore_2
     825: aload_0
     826: getfield      #23                 // Field this$0:Llove/forte/simbot/http/template/ktor/KtorHttpTemplate;
     829: aload_2
     830: aload_0
     831: getfield      #26                 // Field $responseType:Ljava/lang/Class;
     834: invokestatic  #284                // Method love/forte/simbot/http/template/ktor/KtorHttpTemplate.access$toResponse:(Llove/forte/simbot/http/template/ktor/KtorHttpTemplate;Lio/ktor/client/statement/HttpResponse;Ljava/lang/Class;)Llove/forte/simbot/http/template/HttpResponse;
     837: areturn
     838: new           #286                // class java/lang/IllegalStateException
     841: dup
     842: ldc_w         #288                // String call to \'resume\' before \'invoke\' with coroutine
     845: invokespecial #289                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     848: athrow
    Exception table:
       from    to  target type
         678   738   807   any
         774   799   807   any
         807   809   807   any

  public final kotlin.coroutines.Continuation<kotlin.Unit> create(java.lang.Object, kotlin.coroutines.Continuation<?>);
    Code:
       0: new           #2                  // class love/forte/simbot/http/template/ktor/KtorHttpTemplate$get$1
       3: dup
       4: aload_0
       5: getfield      #20                 // Field $url:Ljava/lang/String;
       8: aload_0
       9: getfield      #23                 // Field this$0:Llove/forte/simbot/http/template/ktor/KtorHttpTemplate;
      12: aload_0
      13: getfield      #26                 // Field $responseType:Ljava/lang/Class;
      16: aload_0
      17: getfield      #29                 // Field $headers:Llove/forte/simbot/http/template/HttpHeaders;
      20: aload_0
      21: getfield      #32                 // Field $cookies:Llove/forte/simbot/http/template/HttpCookies;
      24: aload_0
      25: getfield      #35                 // Field $requestParam:Ljava/util/Map;
      28: aload_2
      29: invokespecial #351                // Method "<init>":(Ljava/lang/String;Llove/forte/simbot/http/template/ktor/KtorHttpTemplate;Ljava/lang/Class;Llove/forte/simbot/http/template/HttpHeaders;Llove/forte/simbot/http/template/HttpCookies;Ljava/util/Map;Lkotlin/coroutines/Continuation;)V
      32: checkcast     #232                // class kotlin/coroutines/Continuation
      35: areturn

  public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation<? super love.forte.simbot.http.template.HttpResponse<T>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #358                // Method create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;
       6: checkcast     #2                  // class love/forte/simbot/http/template/ktor/KtorHttpTemplate$get$1
       9: getstatic     #363                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
      12: invokevirtual #365                // Method invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object invoke(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #369                // class kotlinx/coroutines/CoroutineScope
       5: aload_2
       6: checkcast     #232                // class kotlin/coroutines/Continuation
       9: invokevirtual #371                // Method invoke:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
      12: areturn
}
