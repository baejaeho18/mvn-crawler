Compiled from "Asn1FieldInfo.java"
public class org.apache.kerby.asn1.Asn1FieldInfo {
  private org.apache.kerby.asn1.EnumType index;

  private int tagNo;

  private boolean isImplicit;

  private java.lang.Class<? extends org.apache.kerby.asn1.type.Asn1Type> type;

  private org.apache.kerby.asn1.Tag tag;

  public org.apache.kerby.asn1.Asn1FieldInfo(org.apache.kerby.asn1.EnumType, java.lang.Class<? extends org.apache.kerby.asn1.type.Asn1Type>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokeinterface #1,  1            // InterfaceMethod org/apache/kerby/asn1/EnumType.getValue:()I
       8: aload_2
       9: iload_3
      10: invokespecial #2                  // Method "<init>":(Lorg/apache/kerby/asn1/EnumType;ILjava/lang/Class;Z)V
      13: return

  public org.apache.kerby.asn1.Asn1FieldInfo(org.apache.kerby.asn1.EnumType, int, java.lang.Class<? extends org.apache.kerby.asn1.type.Asn1Type>, boolean);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #4                  // Field tagNo:I
       9: aload_0
      10: aconst_null
      11: putfield      #5                  // Field tag:Lorg/apache/kerby/asn1/Tag;
      14: aload_0
      15: aload_1
      16: putfield      #6                  // Field index:Lorg/apache/kerby/asn1/EnumType;
      19: aload_0
      20: iload_2
      21: putfield      #4                  // Field tagNo:I
      24: aload_0
      25: aload_3
      26: putfield      #7                  // Field type:Ljava/lang/Class;
      29: aload_0
      30: iload         4
      32: putfield      #8                  // Field isImplicit:Z
      35: return

  public org.apache.kerby.asn1.Asn1FieldInfo(org.apache.kerby.asn1.EnumType, java.lang.Class<? extends org.apache.kerby.asn1.type.Asn1Type>);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #4                  // Field tagNo:I
       9: aload_0
      10: aconst_null
      11: putfield      #5                  // Field tag:Lorg/apache/kerby/asn1/Tag;
      14: aload_0
      15: aload_1
      16: putfield      #6                  // Field index:Lorg/apache/kerby/asn1/EnumType;
      19: aload_0
      20: aload_2
      21: putfield      #7                  // Field type:Ljava/lang/Class;
      24: aload_0
      25: iconst_m1
      26: putfield      #4                  // Field tagNo:I
      29: return

  public boolean isTagged();
    Code:
       0: aload_0
       1: getfield      #4                  // Field tagNo:I
       4: iconst_m1
       5: if_icmpeq     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public org.apache.kerby.asn1.TaggingOption getTaggingOption();
    Code:
       0: aload_0
       1: getfield      #8                  // Field isImplicit:Z
       4: ifeq          15
       7: aload_0
       8: getfield      #4                  // Field tagNo:I
      11: invokestatic  #9                  // Method org/apache/kerby/asn1/TaggingOption.newImplicitContextSpecific:(I)Lorg/apache/kerby/asn1/TaggingOption;
      14: areturn
      15: aload_0
      16: getfield      #4                  // Field tagNo:I
      19: invokestatic  #10                 // Method org/apache/kerby/asn1/TaggingOption.newExplicitContextSpecific:(I)Lorg/apache/kerby/asn1/TaggingOption;
      22: areturn

  public int getTagNo();
    Code:
       0: aload_0
       1: getfield      #4                  // Field tagNo:I
       4: ireturn

  public org.apache.kerby.asn1.EnumType getIndex();
    Code:
       0: aload_0
       1: getfield      #6                  // Field index:Lorg/apache/kerby/asn1/EnumType;
       4: areturn

  public boolean isImplicit();
    Code:
       0: aload_0
       1: getfield      #8                  // Field isImplicit:Z
       4: ireturn

  public org.apache.kerby.asn1.type.Asn1Type createFieldValue();
    Code:
       0: aload_0
       1: getfield      #7                  // Field type:Ljava/lang/Class;
       4: invokevirtual #11                 // Method java/lang/Class.newInstance:()Ljava/lang/Object;
       7: checkcast     #12                 // class org/apache/kerby/asn1/type/Asn1Type
      10: areturn
      11: astore_1
      12: new           #14                 // class java/lang/IllegalArgumentException
      15: dup
      16: ldc           #15                 // String Bad field type provided, no default constructor?
      18: aload_1
      19: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      22: athrow
    Exception table:
       from    to  target type
           0    10    11   Class java/lang/Exception

  public org.apache.kerby.asn1.Tag getFieldTag();
    Code:
       0: aload_0
       1: getfield      #5                  // Field tag:Lorg/apache/kerby/asn1/Tag;
       4: ifnonnull     22
       7: aload_0
       8: invokevirtual #17                 // Method createFieldValue:()Lorg/apache/kerby/asn1/type/Asn1Type;
      11: astore_1
      12: aload_0
      13: aload_1
      14: invokeinterface #18,  1           // InterfaceMethod org/apache/kerby/asn1/type/Asn1Type.tag:()Lorg/apache/kerby/asn1/Tag;
      19: putfield      #5                  // Field tag:Lorg/apache/kerby/asn1/Tag;
      22: aload_0
      23: getfield      #5                  // Field tag:Lorg/apache/kerby/asn1/Tag;
      26: areturn

  public java.lang.Class<? extends org.apache.kerby.asn1.type.Asn1Type> getType();
    Code:
       0: aload_0
       1: getfield      #7                  // Field type:Ljava/lang/Class;
       4: areturn
}
