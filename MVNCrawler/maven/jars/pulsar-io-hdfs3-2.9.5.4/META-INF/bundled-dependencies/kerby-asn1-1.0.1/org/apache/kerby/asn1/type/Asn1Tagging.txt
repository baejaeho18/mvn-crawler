Compiled from "Asn1Tagging.java"
public class org.apache.kerby.asn1.type.Asn1Tagging<T extends org.apache.kerby.asn1.type.Asn1Type> extends org.apache.kerby.asn1.type.AbstractAsn1Type<T> implements org.apache.kerby.asn1.Asn1Dumpable {
  public org.apache.kerby.asn1.type.Asn1Tagging(int, T, boolean, boolean);
    Code:
       0: aload_0
       1: iload_3
       2: iload_1
       3: invokestatic  #1                  // Method makeTag:(ZI)Lorg/apache/kerby/asn1/Tag;
       6: aload_2
       7: invokespecial #2                  // Method org/apache/kerby/asn1/type/AbstractAsn1Type."<init>":(Lorg/apache/kerby/asn1/Tag;Ljava/lang/Object;)V
      10: aload_2
      11: ifnonnull     18
      14: aload_0
      15: invokespecial #3                  // Method initValue:()V
      18: aload_0
      19: iload         4
      21: invokevirtual #4                  // Method useImplicit:(Z)V
      24: return

  private static org.apache.kerby.asn1.Tag makeTag(boolean, int);
    Code:
       0: iload_0
       1: ifeq          11
       4: iload_1
       5: invokestatic  #5                  // Method org/apache/kerby/asn1/Tag.newAppTag:(I)Lorg/apache/kerby/asn1/Tag;
       8: goto          15
      11: iload_1
      12: invokestatic  #6                  // Method org/apache/kerby/asn1/Tag.newCtxTag:(I)Lorg/apache/kerby/asn1/Tag;
      15: areturn

  public void useImplicit(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #7                  // Method org/apache/kerby/asn1/type/AbstractAsn1Type.useImplicit:(Z)V
       5: iload_1
       6: ifne          17
       9: aload_0
      10: iconst_0
      11: invokevirtual #8                  // Method usePrimitive:(Z)V
      14: goto          33
      17: aload_0
      18: aload_0
      19: invokevirtual #9                  // Method getValue:()Ljava/lang/Object;
      22: checkcast     #10                 // class org/apache/kerby/asn1/type/Asn1Type
      25: invokeinterface #11,  1           // InterfaceMethod org/apache/kerby/asn1/type/Asn1Type.isPrimitive:()Z
      30: invokevirtual #8                  // Method usePrimitive:(Z)V
      33: return

  protected int encodingBodyLength() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method getValue:()Ljava/lang/Object;
       4: checkcast     #12                 // class org/apache/kerby/asn1/type/Asn1Encodeable
       7: astore_1
       8: aload_0
       9: invokevirtual #13                 // Method isImplicit:()Z
      12: ifeq          20
      15: aload_1
      16: invokevirtual #14                 // Method org/apache/kerby/asn1/type/Asn1Encodeable.encodingBodyLength:()I
      19: ireturn
      20: aload_1
      21: invokevirtual #15                 // Method org/apache/kerby/asn1/type/Asn1Encodeable.encodingLength:()I
      24: ireturn

  protected void encodeBody(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method getValue:()Ljava/lang/Object;
       4: checkcast     #12                 // class org/apache/kerby/asn1/type/Asn1Encodeable
       7: astore_2
       8: aload_0
       9: invokevirtual #13                 // Method isImplicit:()Z
      12: ifeq          23
      15: aload_2
      16: aload_1
      17: invokevirtual #16                 // Method org/apache/kerby/asn1/type/Asn1Encodeable.encodeBody:(Ljava/nio/ByteBuffer;)V
      20: goto          28
      23: aload_2
      24: aload_1
      25: invokevirtual #17                 // Method org/apache/kerby/asn1/type/Asn1Encodeable.encode:(Ljava/nio/ByteBuffer;)V
      28: return

  protected void decodeBody(org.apache.kerby.asn1.parse.Asn1ParseResult) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method getValue:()Ljava/lang/Object;
       4: checkcast     #12                 // class org/apache/kerby/asn1/type/Asn1Encodeable
       7: astore_2
       8: aload_0
       9: invokevirtual #13                 // Method isImplicit:()Z
      12: ifeq          23
      15: aload_2
      16: aload_1
      17: invokevirtual #18                 // Method org/apache/kerby/asn1/type/Asn1Encodeable.decodeBody:(Lorg/apache/kerby/asn1/parse/Asn1ParseResult;)V
      20: goto          49
      23: aload_1
      24: checkcast     #19                 // class org/apache/kerby/asn1/parse/Asn1Container
      27: astore_3
      28: aload_3
      29: invokevirtual #20                 // Method org/apache/kerby/asn1/parse/Asn1Container.getChildren:()Ljava/util/List;
      32: iconst_0
      33: invokeinterface #21,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      38: checkcast     #22                 // class org/apache/kerby/asn1/parse/Asn1ParseResult
      41: astore        4
      43: aload_2
      44: aload         4
      46: invokevirtual #23                 // Method org/apache/kerby/asn1/type/Asn1Encodeable.decode:(Lorg/apache/kerby/asn1/parse/Asn1ParseResult;)V
      49: return

  private void initValue();
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokevirtual #25                 // Method java/lang/Class.getGenericSuperclass:()Ljava/lang/reflect/Type;
       7: checkcast     #26                 // class java/lang/reflect/ParameterizedType
      10: invokeinterface #27,  1           // InterfaceMethod java/lang/reflect/ParameterizedType.getActualTypeArguments:()[Ljava/lang/reflect/Type;
      15: iconst_0
      16: aaload
      17: checkcast     #28                 // class java/lang/Class
      20: astore_1
      21: aload_1
      22: invokevirtual #29                 // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      25: checkcast     #30                 // class org/apache/kerby/asn1/type/AbstractAsn1Type
      28: astore_2
      29: goto          44
      32: astore_3
      33: new           #32                 // class java/lang/RuntimeException
      36: dup
      37: ldc           #33                 // String Failed to create tagged value
      39: aload_3
      40: invokespecial #34                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      43: athrow
      44: aload_0
      45: aload_2
      46: invokevirtual #35                 // Method setValue:(Ljava/lang/Object;)V
      49: return
    Exception table:
       from    to  target type
          21    29    32   Class java/lang/Exception

  public void dumpWith(org.apache.kerby.asn1.Asn1Dumper, int);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method getValue:()Ljava/lang/Object;
       4: checkcast     #10                 // class org/apache/kerby/asn1/type/Asn1Type
       7: astore_3
       8: aload_1
       9: iload_2
      10: invokevirtual #36                 // Method org/apache/kerby/asn1/Asn1Dumper.indent:(I)Lorg/apache/kerby/asn1/Asn1Dumper;
      13: aload_0
      14: invokevirtual #24                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: invokevirtual #37                 // Method org/apache/kerby/asn1/Asn1Dumper.appendType:(Ljava/lang/Class;)Lorg/apache/kerby/asn1/Asn1Dumper;
      20: pop
      21: aload_1
      22: aload_0
      23: invokevirtual #38                 // Method simpleInfo:()Ljava/lang/String;
      26: invokevirtual #39                 // Method org/apache/kerby/asn1/Asn1Dumper.append:(Ljava/lang/String;)Lorg/apache/kerby/asn1/Asn1Dumper;
      29: invokevirtual #40                 // Method org/apache/kerby/asn1/Asn1Dumper.newLine:()Lorg/apache/kerby/asn1/Asn1Dumper;
      32: pop
      33: aload_1
      34: iload_2
      35: aload_3
      36: invokevirtual #41                 // Method org/apache/kerby/asn1/Asn1Dumper.dumpType:(ILorg/apache/kerby/asn1/type/Asn1Type;)Lorg/apache/kerby/asn1/Asn1Dumper;
      39: pop
      40: return
}
