Compiled from "Asn1TaggingCollection.java"
public abstract class org.apache.kerby.asn1.type.Asn1TaggingCollection extends org.apache.kerby.asn1.type.AbstractAsn1Type<org.apache.kerby.asn1.type.Asn1CollectionType> implements org.apache.kerby.asn1.Asn1Dumpable {
  private org.apache.kerby.asn1.type.Asn1Tagging<org.apache.kerby.asn1.type.Asn1CollectionType> tagging;

  private org.apache.kerby.asn1.type.Asn1CollectionType tagged;

  public org.apache.kerby.asn1.type.Asn1TaggingCollection(int, org.apache.kerby.asn1.Asn1FieldInfo[], boolean, boolean);
    Code:
       0: aload_0
       1: iload_3
       2: iload_1
       3: invokestatic  #1                  // Method makeTag:(ZI)Lorg/apache/kerby/asn1/Tag;
       6: invokespecial #2                  // Method org/apache/kerby/asn1/type/AbstractAsn1Type."<init>":(Lorg/apache/kerby/asn1/Tag;)V
       9: aload_0
      10: aload_0
      11: aload_2
      12: invokevirtual #3                  // Method createTaggedCollection:([Lorg/apache/kerby/asn1/Asn1FieldInfo;)Lorg/apache/kerby/asn1/type/Asn1CollectionType;
      15: putfield      #4                  // Field tagged:Lorg/apache/kerby/asn1/type/Asn1CollectionType;
      18: aload_0
      19: aload_0
      20: getfield      #4                  // Field tagged:Lorg/apache/kerby/asn1/type/Asn1CollectionType;
      23: invokevirtual #5                  // Method setValue:(Ljava/lang/Object;)V
      26: aload_0
      27: new           #6                  // class org/apache/kerby/asn1/type/Asn1Tagging
      30: dup
      31: iload_1
      32: aload_0
      33: getfield      #4                  // Field tagged:Lorg/apache/kerby/asn1/type/Asn1CollectionType;
      36: iload_3
      37: iload         4
      39: invokespecial #7                  // Method org/apache/kerby/asn1/type/Asn1Tagging."<init>":(ILorg/apache/kerby/asn1/type/Asn1Type;ZZ)V
      42: putfield      #8                  // Field tagging:Lorg/apache/kerby/asn1/type/Asn1Tagging;
      45: return

  private static org.apache.kerby.asn1.Tag makeTag(boolean, int);
    Code:
       0: iload_0
       1: ifeq          11
       4: iload_1
       5: invokestatic  #9                  // Method org/apache/kerby/asn1/Tag.newAppTag:(I)Lorg/apache/kerby/asn1/Tag;
       8: goto          15
      11: iload_1
      12: invokestatic  #10                 // Method org/apache/kerby/asn1/Tag.newCtxTag:(I)Lorg/apache/kerby/asn1/Tag;
      15: areturn

  protected abstract org.apache.kerby.asn1.type.Asn1CollectionType createTaggedCollection(org.apache.kerby.asn1.Asn1FieldInfo[]);

  public org.apache.kerby.asn1.Tag tag();
    Code:
       0: aload_0
       1: getfield      #8                  // Field tagging:Lorg/apache/kerby/asn1/type/Asn1Tagging;
       4: invokevirtual #11                 // Method org/apache/kerby/asn1/type/Asn1Tagging.tag:()Lorg/apache/kerby/asn1/Tag;
       7: areturn

  public int tagNo();
    Code:
       0: aload_0
       1: getfield      #8                  // Field tagging:Lorg/apache/kerby/asn1/type/Asn1Tagging;
       4: invokevirtual #12                 // Method org/apache/kerby/asn1/type/Asn1Tagging.tagNo:()I
       7: ireturn

  public void usePrimitive(boolean);
    Code:
       0: aload_0
       1: getfield      #8                  // Field tagging:Lorg/apache/kerby/asn1/type/Asn1Tagging;
       4: iload_1
       5: invokevirtual #13                 // Method org/apache/kerby/asn1/type/Asn1Tagging.usePrimitive:(Z)V
       8: return

  public boolean isPrimitive();
    Code:
       0: aload_0
       1: getfield      #8                  // Field tagging:Lorg/apache/kerby/asn1/type/Asn1Tagging;
       4: invokevirtual #14                 // Method org/apache/kerby/asn1/type/Asn1Tagging.isPrimitive:()Z
       7: ireturn

  public void useDefinitiveLength(boolean);
    Code:
       0: aload_0
       1: getfield      #8                  // Field tagging:Lorg/apache/kerby/asn1/type/Asn1Tagging;
       4: iload_1
       5: invokevirtual #15                 // Method org/apache/kerby/asn1/type/Asn1Tagging.useDefinitiveLength:(Z)V
       8: return

  public boolean isDefinitiveLength();
    Code:
       0: aload_0
       1: getfield      #8                  // Field tagging:Lorg/apache/kerby/asn1/type/Asn1Tagging;
       4: invokevirtual #16                 // Method org/apache/kerby/asn1/type/Asn1Tagging.isDefinitiveLength:()Z
       7: ireturn

  public void useImplicit(boolean);
    Code:
       0: aload_0
       1: getfield      #8                  // Field tagging:Lorg/apache/kerby/asn1/type/Asn1Tagging;
       4: iload_1
       5: invokevirtual #17                 // Method org/apache/kerby/asn1/type/Asn1Tagging.useImplicit:(Z)V
       8: return

  public boolean isImplicit();
    Code:
       0: aload_0
       1: getfield      #8                  // Field tagging:Lorg/apache/kerby/asn1/type/Asn1Tagging;
       4: invokevirtual #18                 // Method org/apache/kerby/asn1/type/Asn1Tagging.isImplicit:()Z
       7: ireturn

  public void useDER();
    Code:
       0: aload_0
       1: getfield      #8                  // Field tagging:Lorg/apache/kerby/asn1/type/Asn1Tagging;
       4: invokevirtual #19                 // Method org/apache/kerby/asn1/type/Asn1Tagging.useDER:()V
       7: return

  public boolean isDER();
    Code:
       0: aload_0
       1: getfield      #8                  // Field tagging:Lorg/apache/kerby/asn1/type/Asn1Tagging;
       4: invokevirtual #20                 // Method org/apache/kerby/asn1/type/Asn1Tagging.isDER:()Z
       7: ireturn

  public void useBER();
    Code:
       0: aload_0
       1: getfield      #8                  // Field tagging:Lorg/apache/kerby/asn1/type/Asn1Tagging;
       4: invokevirtual #21                 // Method org/apache/kerby/asn1/type/Asn1Tagging.useBER:()V
       7: return

  public boolean isBER();
    Code:
       0: aload_0
       1: getfield      #8                  // Field tagging:Lorg/apache/kerby/asn1/type/Asn1Tagging;
       4: invokevirtual #22                 // Method org/apache/kerby/asn1/type/Asn1Tagging.isBER:()Z
       7: ireturn

  public void useCER();
    Code:
       0: aload_0
       1: getfield      #8                  // Field tagging:Lorg/apache/kerby/asn1/type/Asn1Tagging;
       4: invokevirtual #23                 // Method org/apache/kerby/asn1/type/Asn1Tagging.useCER:()V
       7: return

  public boolean isCER();
    Code:
       0: aload_0
       1: getfield      #8                  // Field tagging:Lorg/apache/kerby/asn1/type/Asn1Tagging;
       4: invokevirtual #24                 // Method org/apache/kerby/asn1/type/Asn1Tagging.isCER:()Z
       7: ireturn

  protected int encodingBodyLength() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field tagging:Lorg/apache/kerby/asn1/type/Asn1Tagging;
       4: invokevirtual #25                 // Method org/apache/kerby/asn1/type/Asn1Tagging.encodingBodyLength:()I
       7: ireturn

  protected void encodeBody(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field tagging:Lorg/apache/kerby/asn1/type/Asn1Tagging;
       4: aload_1
       5: invokevirtual #26                 // Method org/apache/kerby/asn1/type/Asn1Tagging.encodeBody:(Ljava/nio/ByteBuffer;)V
       8: return

  public void decode(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field tagging:Lorg/apache/kerby/asn1/type/Asn1Tagging;
       4: aload_1
       5: invokevirtual #27                 // Method org/apache/kerby/asn1/type/Asn1Tagging.decode:(Ljava/nio/ByteBuffer;)V
       8: return

  protected void decodeBody(org.apache.kerby.asn1.parse.Asn1ParseResult) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field tagging:Lorg/apache/kerby/asn1/type/Asn1Tagging;
       4: aload_1
       5: invokevirtual #28                 // Method org/apache/kerby/asn1/type/Asn1Tagging.decodeBody:(Lorg/apache/kerby/asn1/parse/Asn1ParseResult;)V
       8: return

  protected <T extends org.apache.kerby.asn1.type.Asn1Type> T getFieldAs(org.apache.kerby.asn1.EnumType, java.lang.Class<T>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field tagged:Lorg/apache/kerby/asn1/type/Asn1CollectionType;
       4: aload_1
       5: aload_2
       6: invokevirtual #29                 // Method org/apache/kerby/asn1/type/Asn1CollectionType.getFieldAs:(Lorg/apache/kerby/asn1/EnumType;Ljava/lang/Class;)Lorg/apache/kerby/asn1/type/Asn1Type;
       9: areturn

  protected void setFieldAs(org.apache.kerby.asn1.EnumType, org.apache.kerby.asn1.type.Asn1Type);
    Code:
       0: aload_0
       1: getfield      #4                  // Field tagged:Lorg/apache/kerby/asn1/type/Asn1CollectionType;
       4: aload_1
       5: aload_2
       6: invokevirtual #30                 // Method org/apache/kerby/asn1/type/Asn1CollectionType.setFieldAs:(Lorg/apache/kerby/asn1/EnumType;Lorg/apache/kerby/asn1/type/Asn1Type;)V
       9: return

  protected java.lang.String getFieldAsString(org.apache.kerby.asn1.EnumType);
    Code:
       0: aload_0
       1: getfield      #4                  // Field tagged:Lorg/apache/kerby/asn1/type/Asn1CollectionType;
       4: aload_1
       5: invokevirtual #31                 // Method org/apache/kerby/asn1/type/Asn1CollectionType.getFieldAsString:(Lorg/apache/kerby/asn1/EnumType;)Ljava/lang/String;
       8: areturn

  protected byte[] getFieldAsOctets(org.apache.kerby.asn1.EnumType);
    Code:
       0: aload_0
       1: getfield      #4                  // Field tagged:Lorg/apache/kerby/asn1/type/Asn1CollectionType;
       4: aload_1
       5: invokevirtual #32                 // Method org/apache/kerby/asn1/type/Asn1CollectionType.getFieldAsOctets:(Lorg/apache/kerby/asn1/EnumType;)[B
       8: areturn

  protected void setFieldAsOctets(org.apache.kerby.asn1.EnumType, byte[]);
    Code:
       0: aload_0
       1: getfield      #4                  // Field tagged:Lorg/apache/kerby/asn1/type/Asn1CollectionType;
       4: aload_1
       5: aload_2
       6: invokevirtual #33                 // Method org/apache/kerby/asn1/type/Asn1CollectionType.setFieldAsOctets:(Lorg/apache/kerby/asn1/EnumType;[B)V
       9: return

  protected java.lang.Integer getFieldAsInteger(org.apache.kerby.asn1.EnumType);
    Code:
       0: aload_0
       1: getfield      #4                  // Field tagged:Lorg/apache/kerby/asn1/type/Asn1CollectionType;
       4: aload_1
       5: invokevirtual #34                 // Method org/apache/kerby/asn1/type/Asn1CollectionType.getFieldAsInteger:(Lorg/apache/kerby/asn1/EnumType;)Ljava/lang/Integer;
       8: areturn

  protected void setFieldAsInt(org.apache.kerby.asn1.EnumType, int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field tagged:Lorg/apache/kerby/asn1/type/Asn1CollectionType;
       4: aload_1
       5: iload_2
       6: invokevirtual #35                 // Method org/apache/kerby/asn1/type/Asn1CollectionType.setFieldAsInt:(Lorg/apache/kerby/asn1/EnumType;I)V
       9: return

  protected byte[] getFieldAsOctetBytes(org.apache.kerby.asn1.EnumType);
    Code:
       0: aload_0
       1: getfield      #4                  // Field tagged:Lorg/apache/kerby/asn1/type/Asn1CollectionType;
       4: aload_1
       5: invokevirtual #32                 // Method org/apache/kerby/asn1/type/Asn1CollectionType.getFieldAsOctets:(Lorg/apache/kerby/asn1/EnumType;)[B
       8: areturn

  protected void setFieldAsOctetBytes(org.apache.kerby.asn1.EnumType, byte[]);
    Code:
       0: aload_0
       1: getfield      #4                  // Field tagged:Lorg/apache/kerby/asn1/type/Asn1CollectionType;
       4: aload_1
       5: aload_2
       6: invokevirtual #33                 // Method org/apache/kerby/asn1/type/Asn1CollectionType.setFieldAsOctets:(Lorg/apache/kerby/asn1/EnumType;[B)V
       9: return

  public void dumpWith(org.apache.kerby.asn1.Asn1Dumper, int);
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method getValue:()Ljava/lang/Object;
       4: checkcast     #37                 // class org/apache/kerby/asn1/type/Asn1Type
       7: astore_3
       8: aload_1
       9: iload_2
      10: invokevirtual #38                 // Method org/apache/kerby/asn1/Asn1Dumper.indent:(I)Lorg/apache/kerby/asn1/Asn1Dumper;
      13: aload_0
      14: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: invokevirtual #40                 // Method org/apache/kerby/asn1/Asn1Dumper.appendType:(Ljava/lang/Class;)Lorg/apache/kerby/asn1/Asn1Dumper;
      20: pop
      21: aload_1
      22: aload_0
      23: invokevirtual #41                 // Method simpleInfo:()Ljava/lang/String;
      26: invokevirtual #42                 // Method org/apache/kerby/asn1/Asn1Dumper.append:(Ljava/lang/String;)Lorg/apache/kerby/asn1/Asn1Dumper;
      29: invokevirtual #43                 // Method org/apache/kerby/asn1/Asn1Dumper.newLine:()Lorg/apache/kerby/asn1/Asn1Dumper;
      32: pop
      33: aload_1
      34: iload_2
      35: aload_3
      36: invokevirtual #44                 // Method org/apache/kerby/asn1/Asn1Dumper.dumpType:(ILorg/apache/kerby/asn1/type/Asn1Type;)Lorg/apache/kerby/asn1/Asn1Dumper;
      39: pop
      40: return
}
