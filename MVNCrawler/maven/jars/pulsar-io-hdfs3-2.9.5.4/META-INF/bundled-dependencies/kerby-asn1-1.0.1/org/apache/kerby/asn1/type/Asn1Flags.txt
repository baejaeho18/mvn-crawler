Compiled from "Asn1Flags.java"
public class org.apache.kerby.asn1.type.Asn1Flags extends org.apache.kerby.asn1.type.Asn1BitString {
  private static final int MAX_SIZE;

  private static final int MASK;

  private int flags;

  public org.apache.kerby.asn1.type.Asn1Flags();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #1                  // Method "<init>":(I)V
       5: return

  public org.apache.kerby.asn1.type.Asn1Flags(int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/apache/kerby/asn1/type/Asn1BitString."<init>":()V
       4: aload_0
       5: iload_1
       6: invokevirtual #3                  // Method setFlags:(I)V
       9: return

  public void setFlags(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field flags:I
       5: aload_0
       6: invokespecial #5                  // Method flags2Value:()V
       9: return

  public void setValue(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method org/apache/kerby/asn1/type/Asn1BitString.setValue:(Ljava/lang/Object;)V
       5: aload_0
       6: invokespecial #7                  // Method value2Flags:()V
       9: return

  public int getFlags();
    Code:
       0: aload_0
       1: getfield      #4                  // Field flags:I
       4: ireturn

  public boolean isFlagSet(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field flags:I
       4: iload_1
       5: iand
       6: ifeq          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public void setFlag(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field flags:I
       5: iload_1
       6: ior
       7: invokevirtual #3                  // Method setFlags:(I)V
      10: return

  public void clearFlag(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field flags:I
       5: getstatic     #8                  // Field MASK:I
       8: iload_1
       9: ixor
      10: iand
      11: invokevirtual #3                  // Method setFlags:(I)V
      14: return

  public void clear();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #3                  // Method setFlags:(I)V
       5: return

  public boolean isFlagSet(org.apache.kerby.asn1.EnumType);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #9,  1            // InterfaceMethod org/apache/kerby/asn1/EnumType.getValue:()I
       7: invokevirtual #10                 // Method isFlagSet:(I)Z
      10: ireturn

  public void setFlag(org.apache.kerby.asn1.EnumType);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #9,  1            // InterfaceMethod org/apache/kerby/asn1/EnumType.getValue:()I
       7: invokevirtual #11                 // Method setFlag:(I)V
      10: return

  public void setFlag(org.apache.kerby.asn1.EnumType, boolean);
    Code:
       0: iload_2
       1: ifeq          17
       4: aload_0
       5: aload_1
       6: invokeinterface #9,  1            // InterfaceMethod org/apache/kerby/asn1/EnumType.getValue:()I
      11: invokevirtual #11                 // Method setFlag:(I)V
      14: goto          27
      17: aload_0
      18: aload_1
      19: invokeinterface #9,  1            // InterfaceMethod org/apache/kerby/asn1/EnumType.getValue:()I
      24: invokevirtual #12                 // Method clearFlag:(I)V
      27: return

  public void clearFlag(org.apache.kerby.asn1.EnumType);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #9,  1            // InterfaceMethod org/apache/kerby/asn1/EnumType.getValue:()I
       7: invokevirtual #12                 // Method clearFlag:(I)V
      10: return

  private void flags2Value();
    Code:
       0: iconst_4
       1: newarray       byte
       3: astore_1
       4: aload_1
       5: iconst_0
       6: aload_0
       7: getfield      #4                  // Field flags:I
      10: bipush        24
      12: ishr
      13: i2b
      14: bastore
      15: aload_1
      16: iconst_1
      17: aload_0
      18: getfield      #4                  // Field flags:I
      21: bipush        16
      23: ishr
      24: sipush        255
      27: iand
      28: i2b
      29: bastore
      30: aload_1
      31: iconst_2
      32: aload_0
      33: getfield      #4                  // Field flags:I
      36: bipush        8
      38: ishr
      39: sipush        255
      42: iand
      43: i2b
      44: bastore
      45: aload_1
      46: iconst_3
      47: aload_0
      48: getfield      #4                  // Field flags:I
      51: sipush        255
      54: iand
      55: i2b
      56: bastore
      57: aload_0
      58: aload_1
      59: invokevirtual #13                 // Method setValue:([B)V
      62: return

  private void value2Flags();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getValue:()Ljava/lang/Object;
       4: checkcast     #15                 // class "[B"
       7: astore_1
       8: aload_0
       9: aload_1
      10: iconst_0
      11: baload
      12: sipush        255
      15: iand
      16: bipush        24
      18: ishl
      19: aload_1
      20: iconst_1
      21: baload
      22: sipush        255
      25: iand
      26: bipush        16
      28: ishl
      29: ior
      30: aload_1
      31: iconst_2
      32: baload
      33: sipush        255
      36: iand
      37: bipush        8
      39: ishl
      40: ior
      41: sipush        255
      44: aload_1
      45: iconst_3
      46: baload
      47: iand
      48: ior
      49: putfield      #4                  // Field flags:I
      52: return

  protected void toValue() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #16                 // Method org/apache/kerby/asn1/type/Asn1BitString.toValue:()V
       4: aload_0
       5: invokevirtual #17                 // Method getPadding:()I
       8: ifne          23
      11: aload_0
      12: invokevirtual #14                 // Method getValue:()Ljava/lang/Object;
      15: checkcast     #15                 // class "[B"
      18: arraylength
      19: iconst_4
      20: if_icmpeq     33
      23: new           #18                 // class java/io/IOException
      26: dup
      27: ldc           #19                 // String Bad bitstring decoded as invalid krb flags
      29: invokespecial #20                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: aload_0
      34: invokespecial #7                  // Method value2Flags:()V
      37: return

  public void setValue(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #15                 // class "[B"
       5: invokevirtual #13                 // Method setValue:([B)V
       8: return

  static {};
    Code:
       0: iconst_0
       1: istore_0
       2: iconst_0
       3: istore_1
       4: iload_1
       5: bipush        32
       7: if_icmpge     24
      10: iload_0
      11: iconst_1
      12: ishl
      13: istore_0
      14: iload_0
      15: iconst_1
      16: ior
      17: istore_0
      18: iinc          1, 1
      21: goto          4
      24: iload_0
      25: putstatic     #8                  // Field MASK:I
      28: return
}
