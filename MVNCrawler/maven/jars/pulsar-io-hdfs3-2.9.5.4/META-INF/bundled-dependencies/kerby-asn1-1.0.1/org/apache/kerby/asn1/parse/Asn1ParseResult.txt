Compiled from "Asn1ParseResult.java"
public abstract class org.apache.kerby.asn1.parse.Asn1ParseResult extends org.apache.kerby.asn1.type.Asn1Object {
  private org.apache.kerby.asn1.parse.Asn1Header header;

  private int bodyStart;

  private int bodyEnd;

  private java.nio.ByteBuffer buffer;

  public org.apache.kerby.asn1.parse.Asn1ParseResult(org.apache.kerby.asn1.parse.Asn1Header, int, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1                  // Method org/apache/kerby/asn1/parse/Asn1Header.getTag:()Lorg/apache/kerby/asn1/Tag;
       5: invokespecial #2                  // Method org/apache/kerby/asn1/type/Asn1Object."<init>":(Lorg/apache/kerby/asn1/Tag;)V
       8: aload_0
       9: aload_1
      10: putfield      #3                  // Field header:Lorg/apache/kerby/asn1/parse/Asn1Header;
      13: aload_0
      14: iload_2
      15: putfield      #4                  // Field bodyStart:I
      18: aload_0
      19: aload_3
      20: putfield      #5                  // Field buffer:Ljava/nio/ByteBuffer;
      23: aload_0
      24: aload_0
      25: invokevirtual #6                  // Method isDefinitiveLength:()Z
      28: ifeq          40
      31: iload_2
      32: aload_1
      33: invokevirtual #7                  // Method org/apache/kerby/asn1/parse/Asn1Header.getLength:()I
      36: iadd
      37: goto          41
      40: iconst_m1
      41: putfield      #8                  // Field bodyEnd:I
      44: return

  public org.apache.kerby.asn1.parse.Asn1Header getHeader();
    Code:
       0: aload_0
       1: getfield      #3                  // Field header:Lorg/apache/kerby/asn1/parse/Asn1Header;
       4: areturn

  public int getBodyStart();
    Code:
       0: aload_0
       1: getfield      #4                  // Field bodyStart:I
       4: ireturn

  public int getBodyEnd();
    Code:
       0: aload_0
       1: getfield      #8                  // Field bodyEnd:I
       4: ireturn

  public void setBodyEnd(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field bodyEnd:I
       5: return

  public java.nio.ByteBuffer getBuffer();
    Code:
       0: aload_0
       1: getfield      #5                  // Field buffer:Ljava/nio/ByteBuffer;
       4: areturn

  public java.nio.ByteBuffer getBodyBuffer();
    Code:
       0: aload_0
       1: getfield      #5                  // Field buffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #9                  // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #4                  // Field bodyStart:I
      13: invokevirtual #10                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      16: pop
      17: aload_0
      18: invokevirtual #11                 // Method getBodyEnd:()I
      21: istore_2
      22: iload_2
      23: aload_0
      24: getfield      #4                  // Field bodyStart:I
      27: if_icmplt     36
      30: aload_1
      31: iload_2
      32: invokevirtual #12                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      35: pop
      36: aload_1
      37: areturn

  public byte[] readBodyBytes();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method getBodyBuffer:()Ljava/nio/ByteBuffer;
       4: astore_1
       5: aload_1
       6: invokevirtual #14                 // Method java/nio/ByteBuffer.remaining:()I
       9: newarray       byte
      11: astore_2
      12: aload_1
      13: aload_2
      14: invokevirtual #15                 // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
      17: pop
      18: aload_2
      19: areturn

  public boolean isDefinitiveLength();
    Code:
       0: aload_0
       1: getfield      #3                  // Field header:Lorg/apache/kerby/asn1/parse/Asn1Header;
       4: invokevirtual #16                 // Method org/apache/kerby/asn1/parse/Asn1Header.isDefinitiveLength:()Z
       7: ireturn

  public int getEncodingLength();
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method getHeaderLength:()I
       4: aload_0
       5: invokevirtual #18                 // Method getBodyLength:()I
       8: iadd
       9: ireturn

  public int getHeaderLength();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method getBodyLength:()I
       4: istore_1
       5: aload_0
       6: getfield      #3                  // Field header:Lorg/apache/kerby/asn1/parse/Asn1Header;
       9: invokevirtual #1                  // Method org/apache/kerby/asn1/parse/Asn1Header.getTag:()Lorg/apache/kerby/asn1/Tag;
      12: invokevirtual #19                 // Method org/apache/kerby/asn1/Tag.tagNo:()I
      15: invokestatic  #20                 // Method org/apache/kerby/asn1/util/Asn1Util.lengthOfTagLength:(I)I
      18: istore_2
      19: iload_2
      20: aload_0
      21: getfield      #3                  // Field header:Lorg/apache/kerby/asn1/parse/Asn1Header;
      24: invokevirtual #16                 // Method org/apache/kerby/asn1/parse/Asn1Header.isDefinitiveLength:()Z
      27: ifeq          37
      30: iload_1
      31: invokestatic  #21                 // Method org/apache/kerby/asn1/util/Asn1Util.lengthOfBodyLength:(I)I
      34: goto          38
      37: iconst_1
      38: iadd
      39: istore_2
      40: iload_2
      41: ireturn

  public int getOffset();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method getBodyStart:()I
       4: aload_0
       5: invokevirtual #17                 // Method getHeaderLength:()I
       8: isub
       9: ireturn

  public int getBodyLength();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method isDefinitiveLength:()Z
       4: ifeq          15
       7: aload_0
       8: getfield      #3                  // Field header:Lorg/apache/kerby/asn1/parse/Asn1Header;
      11: invokevirtual #7                  // Method org/apache/kerby/asn1/parse/Asn1Header.getLength:()I
      14: ireturn
      15: aload_0
      16: invokevirtual #11                 // Method getBodyEnd:()I
      19: iconst_m1
      20: if_icmpeq     33
      23: aload_0
      24: invokevirtual #11                 // Method getBodyEnd:()I
      27: aload_0
      28: invokevirtual #22                 // Method getBodyStart:()I
      31: isub
      32: ireturn
      33: iconst_m1
      34: ireturn

  public boolean checkBodyFinished(int);
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method getBodyEnd:()I
       4: iconst_m1
       5: if_icmpeq     20
       8: iload_1
       9: aload_0
      10: invokevirtual #11                 // Method getBodyEnd:()I
      13: if_icmplt     20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public java.lang.String simpleInfo();
    Code:
       0: new           #23                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #25                 // Method tag:()Lorg/apache/kerby/asn1/Tag;
      11: invokevirtual #26                 // Method org/apache/kerby/asn1/Tag.typeStr:()Ljava/lang/String;
      14: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #28                 // String  [
      19: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: ldc           #29                 // String tag=
      24: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: invokevirtual #25                 // Method tag:()Lorg/apache/kerby/asn1/Tag;
      31: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      34: ldc           #31                 // String , off=
      36: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_0
      40: invokevirtual #32                 // Method getOffset:()I
      43: invokevirtual #33                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      46: ldc           #34                 // String , len=
      48: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_0
      52: invokevirtual #17                 // Method getHeaderLength:()I
      55: invokevirtual #33                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      58: ldc           #35                 // String +
      60: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: aload_0
      64: invokevirtual #18                 // Method getBodyLength:()I
      67: invokevirtual #33                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      70: ldc           #36                 // String ]
      72: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      78: areturn
}
