Compiled from "Asn1DerivedItem.java"
public class org.apache.kerby.asn1.parse.Asn1DerivedItem extends org.apache.kerby.asn1.parse.Asn1Item {
  private final org.apache.kerby.asn1.parse.Asn1Container container;

  private final org.apache.kerby.asn1.Tag newTag;

  private int newBodyLength;

  private java.nio.ByteBuffer newBodyBuffer;

  public org.apache.kerby.asn1.parse.Asn1DerivedItem(org.apache.kerby.asn1.Tag, org.apache.kerby.asn1.parse.Asn1Container);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #1                  // Method org/apache/kerby/asn1/parse/Asn1Container.getHeader:()Lorg/apache/kerby/asn1/parse/Asn1Header;
       5: aload_2
       6: invokevirtual #2                  // Method org/apache/kerby/asn1/parse/Asn1Container.getBodyStart:()I
       9: aload_2
      10: invokevirtual #3                  // Method org/apache/kerby/asn1/parse/Asn1Container.getBuffer:()Ljava/nio/ByteBuffer;
      13: invokespecial #4                  // Method org/apache/kerby/asn1/parse/Asn1Item."<init>":(Lorg/apache/kerby/asn1/parse/Asn1Header;ILjava/nio/ByteBuffer;)V
      16: aload_0
      17: aload_1
      18: putfield      #5                  // Field newTag:Lorg/apache/kerby/asn1/Tag;
      21: aload_0
      22: aload_2
      23: putfield      #6                  // Field container:Lorg/apache/kerby/asn1/parse/Asn1Container;
      26: aload_0
      27: iconst_m1
      28: putfield      #7                  // Field newBodyLength:I
      31: return

  public org.apache.kerby.asn1.Tag tag();
    Code:
       0: aload_0
       1: getfield      #5                  // Field newTag:Lorg/apache/kerby/asn1/Tag;
       4: areturn

  private int computeBodyLength();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #6                  // Field container:Lorg/apache/kerby/asn1/parse/Asn1Container;
       6: invokevirtual #8                  // Method org/apache/kerby/asn1/parse/Asn1Container.getChildren:()Ljava/util/List;
       9: invokeinterface #9,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          44
      24: aload_2
      25: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #12                 // class org/apache/kerby/asn1/parse/Asn1ParseResult
      33: astore_3
      34: iload_1
      35: aload_3
      36: invokevirtual #13                 // Method org/apache/kerby/asn1/parse/Asn1ParseResult.getBodyLength:()I
      39: iadd
      40: istore_1
      41: goto          15
      44: iload_1
      45: ireturn

  private java.nio.ByteBuffer makeBodyBuffer();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getBodyLength:()I
       4: invokestatic  #15                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
       7: astore_1
       8: aload_0
       9: getfield      #6                  // Field container:Lorg/apache/kerby/asn1/parse/Asn1Container;
      12: invokevirtual #8                  // Method org/apache/kerby/asn1/parse/Asn1Container.getChildren:()Ljava/util/List;
      15: invokeinterface #9,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      20: astore_2
      21: aload_2
      22: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          52
      30: aload_2
      31: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #12                 // class org/apache/kerby/asn1/parse/Asn1ParseResult
      39: astore_3
      40: aload_1
      41: aload_3
      42: invokevirtual #16                 // Method org/apache/kerby/asn1/parse/Asn1ParseResult.getBodyBuffer:()Ljava/nio/ByteBuffer;
      45: invokevirtual #17                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      48: pop
      49: goto          21
      52: aload_1
      53: invokevirtual #18                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      56: pop
      57: aload_1
      58: areturn

  public java.nio.ByteBuffer getBodyBuffer();
    Code:
       0: aload_0
       1: getfield      #19                 // Field newBodyBuffer:Ljava/nio/ByteBuffer;
       4: ifnonnull     15
       7: aload_0
       8: aload_0
       9: invokespecial #20                 // Method makeBodyBuffer:()Ljava/nio/ByteBuffer;
      12: putfield      #19                 // Field newBodyBuffer:Ljava/nio/ByteBuffer;
      15: aload_0
      16: getfield      #19                 // Field newBodyBuffer:Ljava/nio/ByteBuffer;
      19: areturn

  public int getBodyLength();
    Code:
       0: aload_0
       1: getfield      #7                  // Field newBodyLength:I
       4: iconst_m1
       5: if_icmpne     16
       8: aload_0
       9: aload_0
      10: invokespecial #21                 // Method computeBodyLength:()I
      13: putfield      #7                  // Field newBodyLength:I
      16: aload_0
      17: getfield      #7                  // Field newBodyLength:I
      20: ireturn
}
