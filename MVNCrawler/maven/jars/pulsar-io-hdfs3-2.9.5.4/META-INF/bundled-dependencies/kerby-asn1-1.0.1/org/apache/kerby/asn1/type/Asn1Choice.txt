Compiled from "Asn1Choice.java"
public class org.apache.kerby.asn1.type.Asn1Choice extends org.apache.kerby.asn1.type.AbstractAsn1Type<org.apache.kerby.asn1.type.Asn1Type> implements org.apache.kerby.asn1.Asn1Dumpable {
  private final org.apache.kerby.asn1.Asn1FieldInfo[] fieldInfos;

  private final org.apache.kerby.asn1.Tag[] tags;

  private org.apache.kerby.asn1.Asn1FieldInfo chosenField;

  public org.apache.kerby.asn1.type.Asn1Choice(org.apache.kerby.asn1.Asn1FieldInfo[]);
    Code:
       0: aload_0
       1: getstatic     #1                  // Field org/apache/kerby/asn1/UniversalTag.CHOICE:Lorg/apache/kerby/asn1/UniversalTag;
       4: invokespecial #2                  // Method org/apache/kerby/asn1/type/AbstractAsn1Type."<init>":(Lorg/apache/kerby/asn1/UniversalTag;)V
       7: aload_0
       8: aload_1
       9: putfield      #3                  // Field fieldInfos:[Lorg/apache/kerby/asn1/Asn1FieldInfo;
      12: aload_0
      13: aload_1
      14: arraylength
      15: anewarray     #4                  // class org/apache/kerby/asn1/Tag
      18: putfield      #5                  // Field tags:[Lorg/apache/kerby/asn1/Tag;
      21: aload_0
      22: invokespecial #6                  // Method initTags:()V
      25: return

  public org.apache.kerby.asn1.Tag tag();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method getValue:()Ljava/lang/Object;
       4: ifnull        20
       7: aload_0
       8: invokevirtual #7                  // Method getValue:()Ljava/lang/Object;
      11: checkcast     #8                  // class org/apache/kerby/asn1/type/Asn1Type
      14: invokeinterface #9,  1            // InterfaceMethod org/apache/kerby/asn1/type/Asn1Type.tag:()Lorg/apache/kerby/asn1/Tag;
      19: areturn
      20: aload_0
      21: getfield      #10                 // Field chosenField:Lorg/apache/kerby/asn1/Asn1FieldInfo;
      24: ifnull        35
      27: aload_0
      28: getfield      #10                 // Field chosenField:Lorg/apache/kerby/asn1/Asn1FieldInfo;
      31: invokevirtual #11                 // Method org/apache/kerby/asn1/Asn1FieldInfo.getFieldTag:()Lorg/apache/kerby/asn1/Tag;
      34: areturn
      35: aload_0
      36: invokespecial #12                 // Method org/apache/kerby/asn1/type/AbstractAsn1Type.tag:()Lorg/apache/kerby/asn1/Tag;
      39: areturn

  private void initTags();
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: getfield      #3                  // Field fieldInfos:[Lorg/apache/kerby/asn1/Asn1FieldInfo;
       7: arraylength
       8: if_icmpge     32
      11: aload_0
      12: getfield      #5                  // Field tags:[Lorg/apache/kerby/asn1/Tag;
      15: iload_1
      16: aload_0
      17: getfield      #3                  // Field fieldInfos:[Lorg/apache/kerby/asn1/Asn1FieldInfo;
      20: iload_1
      21: aaload
      22: invokevirtual #11                 // Method org/apache/kerby/asn1/Asn1FieldInfo.getFieldTag:()Lorg/apache/kerby/asn1/Tag;
      25: aastore
      26: iinc          1, 1
      29: goto          2
      32: return

  public boolean matchAndSetValue(org.apache.kerby.asn1.Tag);
    Code:
       0: iconst_m1
       1: istore_2
       2: iconst_0
       3: istore_3
       4: iload_3
       5: aload_0
       6: getfield      #3                  // Field fieldInfos:[Lorg/apache/kerby/asn1/Asn1FieldInfo;
       9: arraylength
      10: if_icmpge     65
      13: aload_1
      14: invokevirtual #13                 // Method org/apache/kerby/asn1/Tag.isContextSpecific:()Z
      17: ifeq          41
      20: aload_0
      21: getfield      #3                  // Field fieldInfos:[Lorg/apache/kerby/asn1/Asn1FieldInfo;
      24: iload_3
      25: aaload
      26: invokevirtual #14                 // Method org/apache/kerby/asn1/Asn1FieldInfo.getTagNo:()I
      29: aload_1
      30: invokevirtual #15                 // Method org/apache/kerby/asn1/Tag.tagNo:()I
      33: if_icmpne     59
      36: iload_3
      37: istore_2
      38: goto          65
      41: aload_0
      42: getfield      #5                  // Field tags:[Lorg/apache/kerby/asn1/Tag;
      45: iload_3
      46: aaload
      47: aload_1
      48: invokevirtual #16                 // Method org/apache/kerby/asn1/Tag.equals:(Ljava/lang/Object;)Z
      51: ifeq          59
      54: iload_3
      55: istore_2
      56: goto          65
      59: iinc          3, 1
      62: goto          4
      65: iload_2
      66: iconst_m1
      67: if_icmpeq     95
      70: aload_0
      71: aload_0
      72: getfield      #3                  // Field fieldInfos:[Lorg/apache/kerby/asn1/Asn1FieldInfo;
      75: iload_2
      76: aaload
      77: putfield      #10                 // Field chosenField:Lorg/apache/kerby/asn1/Asn1FieldInfo;
      80: aload_0
      81: aload_0
      82: getfield      #3                  // Field fieldInfos:[Lorg/apache/kerby/asn1/Asn1FieldInfo;
      85: iload_2
      86: aaload
      87: invokevirtual #17                 // Method org/apache/kerby/asn1/Asn1FieldInfo.createFieldValue:()Lorg/apache/kerby/asn1/type/Asn1Type;
      90: invokevirtual #18                 // Method setValue:(Ljava/lang/Object;)V
      93: iconst_1
      94: ireturn
      95: iconst_0
      96: ireturn

  public byte[] encode() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method getValue:()Ljava/lang/Object;
       4: checkcast     #19                 // class org/apache/kerby/asn1/type/Asn1Encodeable
       7: astore_1
       8: aload_1
       9: ifnull        41
      12: aload_0
      13: getfield      #10                 // Field chosenField:Lorg/apache/kerby/asn1/Asn1FieldInfo;
      16: invokevirtual #20                 // Method org/apache/kerby/asn1/Asn1FieldInfo.isTagged:()Z
      19: ifeq          36
      22: aload_0
      23: getfield      #10                 // Field chosenField:Lorg/apache/kerby/asn1/Asn1FieldInfo;
      26: invokevirtual #21                 // Method org/apache/kerby/asn1/Asn1FieldInfo.getTaggingOption:()Lorg/apache/kerby/asn1/TaggingOption;
      29: astore_2
      30: aload_1
      31: aload_2
      32: invokevirtual #22                 // Method org/apache/kerby/asn1/type/Asn1Encodeable.taggedEncode:(Lorg/apache/kerby/asn1/TaggingOption;)[B
      35: areturn
      36: aload_1
      37: invokevirtual #23                 // Method org/apache/kerby/asn1/type/Asn1Encodeable.encode:()[B
      40: areturn
      41: aconst_null
      42: areturn

  public void encode(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method getValue:()Ljava/lang/Object;
       4: checkcast     #19                 // class org/apache/kerby/asn1/type/Asn1Encodeable
       7: astore_2
       8: aload_2
       9: ifnull        44
      12: aload_0
      13: getfield      #10                 // Field chosenField:Lorg/apache/kerby/asn1/Asn1FieldInfo;
      16: invokevirtual #20                 // Method org/apache/kerby/asn1/Asn1FieldInfo.isTagged:()Z
      19: ifeq          39
      22: aload_0
      23: getfield      #10                 // Field chosenField:Lorg/apache/kerby/asn1/Asn1FieldInfo;
      26: invokevirtual #21                 // Method org/apache/kerby/asn1/Asn1FieldInfo.getTaggingOption:()Lorg/apache/kerby/asn1/TaggingOption;
      29: astore_3
      30: aload_2
      31: aload_1
      32: aload_3
      33: invokevirtual #24                 // Method org/apache/kerby/asn1/type/Asn1Encodeable.taggedEncode:(Ljava/nio/ByteBuffer;Lorg/apache/kerby/asn1/TaggingOption;)V
      36: goto          44
      39: aload_2
      40: aload_1
      41: invokevirtual #25                 // Method org/apache/kerby/asn1/type/Asn1Encodeable.encode:(Ljava/nio/ByteBuffer;)V
      44: return

  public int encodingLength();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method getValue:()Ljava/lang/Object;
       4: checkcast     #19                 // class org/apache/kerby/asn1/type/Asn1Encodeable
       7: astore_1
       8: aload_1
       9: ifnull        41
      12: aload_0
      13: getfield      #10                 // Field chosenField:Lorg/apache/kerby/asn1/Asn1FieldInfo;
      16: invokevirtual #20                 // Method org/apache/kerby/asn1/Asn1FieldInfo.isTagged:()Z
      19: ifeq          36
      22: aload_0
      23: getfield      #10                 // Field chosenField:Lorg/apache/kerby/asn1/Asn1FieldInfo;
      26: invokevirtual #21                 // Method org/apache/kerby/asn1/Asn1FieldInfo.getTaggingOption:()Lorg/apache/kerby/asn1/TaggingOption;
      29: astore_2
      30: aload_1
      31: aload_2
      32: invokevirtual #26                 // Method org/apache/kerby/asn1/type/Asn1Encodeable.taggedEncodingLength:(Lorg/apache/kerby/asn1/TaggingOption;)I
      35: ireturn
      36: aload_1
      37: invokevirtual #27                 // Method org/apache/kerby/asn1/type/Asn1Encodeable.encodingLength:()I
      40: ireturn
      41: aload_0
      42: invokespecial #28                 // Method org/apache/kerby/asn1/type/AbstractAsn1Type.encodingLength:()I
      45: ireturn

  protected int encodingBodyLength();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method getValue:()Ljava/lang/Object;
       4: checkcast     #19                 // class org/apache/kerby/asn1/type/Asn1Encodeable
       7: astore_1
       8: aload_1
       9: ifnonnull     14
      12: iconst_0
      13: ireturn
      14: iconst_m1
      15: ireturn

  protected void encodeBody(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method getValue:()Ljava/lang/Object;
       4: checkcast     #19                 // class org/apache/kerby/asn1/type/Asn1Encodeable
       7: astore_2
       8: aload_2
       9: ifnull        44
      12: aload_0
      13: getfield      #10                 // Field chosenField:Lorg/apache/kerby/asn1/Asn1FieldInfo;
      16: invokevirtual #20                 // Method org/apache/kerby/asn1/Asn1FieldInfo.isTagged:()Z
      19: ifeq          39
      22: aload_0
      23: getfield      #10                 // Field chosenField:Lorg/apache/kerby/asn1/Asn1FieldInfo;
      26: invokevirtual #21                 // Method org/apache/kerby/asn1/Asn1FieldInfo.getTaggingOption:()Lorg/apache/kerby/asn1/TaggingOption;
      29: astore_3
      30: aload_2
      31: aload_1
      32: aload_3
      33: invokevirtual #24                 // Method org/apache/kerby/asn1/type/Asn1Encodeable.taggedEncode:(Ljava/nio/ByteBuffer;Lorg/apache/kerby/asn1/TaggingOption;)V
      36: goto          44
      39: aload_2
      40: aload_1
      41: invokevirtual #25                 // Method org/apache/kerby/asn1/type/Asn1Encodeable.encode:(Ljava/nio/ByteBuffer;)V
      44: return

  public void decode(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #10                 // Field chosenField:Lorg/apache/kerby/asn1/Asn1FieldInfo;
       5: aload_0
       6: aconst_null
       7: invokevirtual #18                 // Method setValue:(Ljava/lang/Object;)V
      10: aload_0
      11: aload_1
      12: invokespecial #29                 // Method org/apache/kerby/asn1/type/AbstractAsn1Type.decode:(Ljava/nio/ByteBuffer;)V
      15: return

  public void decode(org.apache.kerby.asn1.parse.Asn1ParseResult) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field chosenField:Lorg/apache/kerby/asn1/Asn1FieldInfo;
       4: ifnonnull     16
       7: aload_0
       8: aload_1
       9: invokevirtual #30                 // Method org/apache/kerby/asn1/parse/Asn1ParseResult.tag:()Lorg/apache/kerby/asn1/Tag;
      12: invokevirtual #31                 // Method matchAndSetValue:(Lorg/apache/kerby/asn1/Tag;)Z
      15: pop
      16: aload_0
      17: aload_1
      18: invokevirtual #32                 // Method decodeBody:(Lorg/apache/kerby/asn1/parse/Asn1ParseResult;)V
      21: return

  protected void decodeBody(org.apache.kerby.asn1.parse.Asn1ParseResult) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field chosenField:Lorg/apache/kerby/asn1/Asn1FieldInfo;
       4: ifnonnull     16
       7: aload_0
       8: aload_1
       9: invokevirtual #30                 // Method org/apache/kerby/asn1/parse/Asn1ParseResult.tag:()Lorg/apache/kerby/asn1/Tag;
      12: invokevirtual #31                 // Method matchAndSetValue:(Lorg/apache/kerby/asn1/Tag;)Z
      15: pop
      16: aload_0
      17: getfield      #10                 // Field chosenField:Lorg/apache/kerby/asn1/Asn1FieldInfo;
      20: ifnonnull     53
      23: new           #33                 // class java/io/IOException
      26: dup
      27: new           #34                 // class java/lang/StringBuilder
      30: dup
      31: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      34: ldc           #36                 // String Unexpected item, not in choices:
      36: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_1
      40: invokevirtual #38                 // Method org/apache/kerby/asn1/parse/Asn1ParseResult.simpleInfo:()Ljava/lang/String;
      43: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokespecial #40                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      52: athrow
      53: aload_0
      54: invokevirtual #7                  // Method getValue:()Ljava/lang/Object;
      57: checkcast     #8                  // class org/apache/kerby/asn1/type/Asn1Type
      60: astore_2
      61: aload_1
      62: invokevirtual #41                 // Method org/apache/kerby/asn1/parse/Asn1ParseResult.isContextSpecific:()Z
      65: ifeq          83
      68: aload_1
      69: aload_2
      70: aload_0
      71: getfield      #10                 // Field chosenField:Lorg/apache/kerby/asn1/Asn1FieldInfo;
      74: invokevirtual #21                 // Method org/apache/kerby/asn1/Asn1FieldInfo.getTaggingOption:()Lorg/apache/kerby/asn1/TaggingOption;
      77: invokestatic  #42                 // Method org/apache/kerby/asn1/Asn1Binder.bindWithTagging:(Lorg/apache/kerby/asn1/parse/Asn1ParseResult;Lorg/apache/kerby/asn1/type/Asn1Type;Lorg/apache/kerby/asn1/TaggingOption;)V
      80: goto          88
      83: aload_1
      84: aload_2
      85: invokestatic  #43                 // Method org/apache/kerby/asn1/Asn1Binder.bind:(Lorg/apache/kerby/asn1/parse/Asn1ParseResult;Lorg/apache/kerby/asn1/type/Asn1Type;)V
      88: return

  protected <T extends org.apache.kerby.asn1.type.Asn1Type> T getChoiceValueAs(org.apache.kerby.asn1.EnumType, java.lang.Class<T>);
    Code:
       0: aload_0
       1: getfield      #10                 // Field chosenField:Lorg/apache/kerby/asn1/Asn1FieldInfo;
       4: ifnull        14
       7: aload_0
       8: invokevirtual #7                  // Method getValue:()Ljava/lang/Object;
      11: ifnonnull     16
      14: aconst_null
      15: areturn
      16: aload_0
      17: getfield      #10                 // Field chosenField:Lorg/apache/kerby/asn1/Asn1FieldInfo;
      20: ifnull        44
      23: aload_1
      24: aload_0
      25: getfield      #10                 // Field chosenField:Lorg/apache/kerby/asn1/Asn1FieldInfo;
      28: invokevirtual #44                 // Method org/apache/kerby/asn1/Asn1FieldInfo.getIndex:()Lorg/apache/kerby/asn1/EnumType;
      31: if_acmpeq     44
      34: new           #45                 // class java/lang/IllegalArgumentException
      37: dup
      38: ldc           #46                 // String Incorrect chosen value requested
      40: invokespecial #47                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: aload_0
      45: invokevirtual #7                  // Method getValue:()Ljava/lang/Object;
      48: checkcast     #8                  // class org/apache/kerby/asn1/type/Asn1Type
      51: areturn

  protected void setChoiceValue(org.apache.kerby.asn1.EnumType, org.apache.kerby.asn1.type.Asn1Type);
    Code:
       0: aload_0
       1: getfield      #3                  // Field fieldInfos:[Lorg/apache/kerby/asn1/Asn1FieldInfo;
       4: aload_1
       5: invokeinterface #48,  1           // InterfaceMethod org/apache/kerby/asn1/EnumType.getValue:()I
      10: aaload
      11: invokevirtual #44                 // Method org/apache/kerby/asn1/Asn1FieldInfo.getIndex:()Lorg/apache/kerby/asn1/EnumType;
      14: aload_1
      15: if_acmpeq     28
      18: new           #45                 // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #49                 // String Incorrect choice option to set
      24: invokespecial #47                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: aload_0
      30: getfield      #3                  // Field fieldInfos:[Lorg/apache/kerby/asn1/Asn1FieldInfo;
      33: aload_1
      34: invokeinterface #48,  1           // InterfaceMethod org/apache/kerby/asn1/EnumType.getValue:()I
      39: aaload
      40: putfield      #10                 // Field chosenField:Lorg/apache/kerby/asn1/Asn1FieldInfo;
      43: aload_0
      44: aload_2
      45: invokevirtual #18                 // Method setValue:(Ljava/lang/Object;)V
      48: return

  protected void setChoiceValueAsOctets(org.apache.kerby.asn1.EnumType, byte[]);
    Code:
       0: new           #50                 // class org/apache/kerby/asn1/type/Asn1OctetString
       3: dup
       4: aload_2
       5: invokespecial #51                 // Method org/apache/kerby/asn1/type/Asn1OctetString."<init>":([B)V
       8: astore_3
       9: aload_0
      10: aload_1
      11: aload_3
      12: invokevirtual #52                 // Method setChoiceValue:(Lorg/apache/kerby/asn1/EnumType;Lorg/apache/kerby/asn1/type/Asn1Type;)V
      15: return

  protected byte[] getChoiceValueAsOctets(org.apache.kerby.asn1.EnumType);
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #50                 // class org/apache/kerby/asn1/type/Asn1OctetString
       5: invokevirtual #53                 // Method getChoiceValueAs:(Lorg/apache/kerby/asn1/EnumType;Ljava/lang/Class;)Lorg/apache/kerby/asn1/type/Asn1Type;
       8: checkcast     #50                 // class org/apache/kerby/asn1/type/Asn1OctetString
      11: astore_2
      12: aload_2
      13: ifnull        24
      16: aload_2
      17: invokevirtual #54                 // Method org/apache/kerby/asn1/type/Asn1OctetString.getValue:()Ljava/lang/Object;
      20: checkcast     #55                 // class "[B"
      23: areturn
      24: aconst_null
      25: areturn

  public void dumpWith(org.apache.kerby.asn1.Asn1Dumper, int);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method getValue:()Ljava/lang/Object;
       4: checkcast     #8                  // class org/apache/kerby/asn1/type/Asn1Type
       7: astore_3
       8: aload_1
       9: iload_2
      10: invokevirtual #56                 // Method org/apache/kerby/asn1/Asn1Dumper.indent:(I)Lorg/apache/kerby/asn1/Asn1Dumper;
      13: ldc           #57                 // String <Choice>
      15: invokevirtual #58                 // Method org/apache/kerby/asn1/Asn1Dumper.append:(Ljava/lang/String;)Lorg/apache/kerby/asn1/Asn1Dumper;
      18: invokevirtual #59                 // Method org/apache/kerby/asn1/Asn1Dumper.newLine:()Lorg/apache/kerby/asn1/Asn1Dumper;
      21: pop
      22: aload_1
      23: iload_2
      24: aload_3
      25: invokevirtual #60                 // Method org/apache/kerby/asn1/Asn1Dumper.dumpType:(ILorg/apache/kerby/asn1/type/Asn1Type;)Lorg/apache/kerby/asn1/Asn1Dumper;
      28: pop
      29: return
}
