Compiled from "Asn1Object.java"
public abstract class org.apache.kerby.asn1.type.Asn1Object {
  private final org.apache.kerby.asn1.Tag tag;

  public org.apache.kerby.asn1.type.Asn1Object(org.apache.kerby.asn1.Tag);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/apache/kerby/asn1/Tag
       8: dup
       9: aload_1
      10: invokespecial #3                  // Method org/apache/kerby/asn1/Tag."<init>":(Lorg/apache/kerby/asn1/Tag;)V
      13: putfield      #4                  // Field tag:Lorg/apache/kerby/asn1/Tag;
      16: return

  public org.apache.kerby.asn1.type.Asn1Object(org.apache.kerby.asn1.UniversalTag);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/apache/kerby/asn1/Tag
       8: dup
       9: aload_1
      10: invokespecial #5                  // Method org/apache/kerby/asn1/Tag."<init>":(Lorg/apache/kerby/asn1/UniversalTag;)V
      13: putfield      #4                  // Field tag:Lorg/apache/kerby/asn1/Tag;
      16: return

  public org.apache.kerby.asn1.type.Asn1Object(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/apache/kerby/asn1/Tag
       8: dup
       9: iload_1
      10: invokespecial #6                  // Method org/apache/kerby/asn1/Tag."<init>":(I)V
      13: putfield      #4                  // Field tag:Lorg/apache/kerby/asn1/Tag;
      16: return

  public org.apache.kerby.asn1.Tag tag();
    Code:
       0: aload_0
       1: getfield      #4                  // Field tag:Lorg/apache/kerby/asn1/Tag;
       4: areturn

  public int tagFlags();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method tag:()Lorg/apache/kerby/asn1/Tag;
       4: invokevirtual #8                  // Method org/apache/kerby/asn1/Tag.tagFlags:()I
       7: ireturn

  public int tagNo();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method tag:()Lorg/apache/kerby/asn1/Tag;
       4: invokevirtual #9                  // Method org/apache/kerby/asn1/Tag.tagNo:()I
       7: ireturn

  public void usePrimitive(boolean);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method tag:()Lorg/apache/kerby/asn1/Tag;
       4: iload_1
       5: invokevirtual #10                 // Method org/apache/kerby/asn1/Tag.usePrimitive:(Z)V
       8: return

  public boolean isPrimitive();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method tag:()Lorg/apache/kerby/asn1/Tag;
       4: invokevirtual #11                 // Method org/apache/kerby/asn1/Tag.isPrimitive:()Z
       7: ireturn

  public boolean isUniversal();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method tag:()Lorg/apache/kerby/asn1/Tag;
       4: invokevirtual #12                 // Method org/apache/kerby/asn1/Tag.isUniversal:()Z
       7: ireturn

  public boolean isAppSpecific();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method tag:()Lorg/apache/kerby/asn1/Tag;
       4: invokevirtual #13                 // Method org/apache/kerby/asn1/Tag.isAppSpecific:()Z
       7: ireturn

  public boolean isContextSpecific();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method tag:()Lorg/apache/kerby/asn1/Tag;
       4: invokevirtual #14                 // Method org/apache/kerby/asn1/Tag.isContextSpecific:()Z
       7: ireturn

  public boolean isTagSpecific();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method tag:()Lorg/apache/kerby/asn1/Tag;
       4: invokevirtual #15                 // Method org/apache/kerby/asn1/Tag.isSpecific:()Z
       7: ireturn

  public boolean isEOC();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method tag:()Lorg/apache/kerby/asn1/Tag;
       4: invokevirtual #16                 // Method org/apache/kerby/asn1/Tag.isEOC:()Z
       7: ireturn

  public boolean isNull();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method tag:()Lorg/apache/kerby/asn1/Tag;
       4: invokevirtual #17                 // Method org/apache/kerby/asn1/Tag.isNull:()Z
       7: ireturn

  public boolean isSimple();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method tag:()Lorg/apache/kerby/asn1/Tag;
       4: invokestatic  #18                 // Method org/apache/kerby/asn1/type/Asn1Simple.isSimple:(Lorg/apache/kerby/asn1/Tag;)Z
       7: ireturn

  public boolean isCollection();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method tag:()Lorg/apache/kerby/asn1/Tag;
       4: invokestatic  #19                 // Method org/apache/kerby/asn1/type/Asn1Collection.isCollection:(Lorg/apache/kerby/asn1/Tag;)Z
       7: ireturn

  protected abstract int getHeaderLength() throws java.io.IOException;

  protected abstract int getBodyLength() throws java.io.IOException;

  protected java.lang.String simpleInfo();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method tag:()Lorg/apache/kerby/asn1/Tag;
       4: invokevirtual #20                 // Method org/apache/kerby/asn1/Tag.typeStr:()Ljava/lang/String;
       7: astore_1
       8: new           #21                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      15: aload_1
      16: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #24                 // String  [tag=
      21: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #7                  // Method tag:()Lorg/apache/kerby/asn1/Tag;
      28: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #26                 // String , len=
      33: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokevirtual #27                 // Method getHeaderLength:()I
      40: invokevirtual #28                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      43: ldc           #29                 // String +
      45: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: invokevirtual #30                 // Method getBodyLength:()I
      52: invokevirtual #28                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      55: ldc           #31                 // String ]
      57: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: astore_1
      64: goto          77
      67: astore_2
      68: new           #34                 // class java/lang/RuntimeException
      71: dup
      72: aload_2
      73: invokespecial #35                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      76: athrow
      77: aload_1
      78: areturn
    Exception table:
       from    to  target type
           8    64    67   Class java/io/IOException
}
