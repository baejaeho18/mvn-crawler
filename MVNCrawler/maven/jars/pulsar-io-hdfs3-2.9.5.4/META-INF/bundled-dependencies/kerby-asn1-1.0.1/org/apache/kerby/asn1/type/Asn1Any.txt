Compiled from "Asn1Any.java"
public class org.apache.kerby.asn1.type.Asn1Any extends org.apache.kerby.asn1.type.AbstractAsn1Type<org.apache.kerby.asn1.type.Asn1Type> implements org.apache.kerby.asn1.Asn1Dumpable {
  private java.lang.Class<? extends org.apache.kerby.asn1.type.Asn1Type> valueType;

  private org.apache.kerby.asn1.Asn1FieldInfo decodeInfo;

  private org.apache.kerby.asn1.parse.Asn1ParseResult parseResult;

  private boolean isBlindlyDecoded;

  public org.apache.kerby.asn1.type.Asn1Any();
    Code:
       0: aload_0
       1: getstatic     #1                  // Field org/apache/kerby/asn1/UniversalTag.ANY:Lorg/apache/kerby/asn1/UniversalTag;
       4: invokespecial #2                  // Method org/apache/kerby/asn1/type/AbstractAsn1Type."<init>":(Lorg/apache/kerby/asn1/UniversalTag;)V
       7: aload_0
       8: iconst_1
       9: putfield      #3                  // Field isBlindlyDecoded:Z
      12: return

  public org.apache.kerby.asn1.type.Asn1Any(org.apache.kerby.asn1.type.Asn1Type);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method "<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #5                  // Method setValue:(Ljava/lang/Object;)V
       9: return

  public org.apache.kerby.asn1.Tag tag();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getValue:()Ljava/lang/Object;
       4: ifnull        20
       7: aload_0
       8: invokevirtual #6                  // Method getValue:()Ljava/lang/Object;
      11: checkcast     #7                  // class org/apache/kerby/asn1/type/Asn1Type
      14: invokeinterface #8,  1            // InterfaceMethod org/apache/kerby/asn1/type/Asn1Type.tag:()Lorg/apache/kerby/asn1/Tag;
      19: areturn
      20: aload_0
      21: getfield      #9                  // Field parseResult:Lorg/apache/kerby/asn1/parse/Asn1ParseResult;
      24: ifnull        35
      27: aload_0
      28: getfield      #9                  // Field parseResult:Lorg/apache/kerby/asn1/parse/Asn1ParseResult;
      31: invokevirtual #10                 // Method org/apache/kerby/asn1/parse/Asn1ParseResult.tag:()Lorg/apache/kerby/asn1/Tag;
      34: areturn
      35: aload_0
      36: invokespecial #11                 // Method org/apache/kerby/asn1/type/AbstractAsn1Type.tag:()Lorg/apache/kerby/asn1/Tag;
      39: areturn

  public void setValueType(java.lang.Class<? extends org.apache.kerby.asn1.type.Asn1Type>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field valueType:Ljava/lang/Class;
       5: return

  public void setDecodeInfo(org.apache.kerby.asn1.Asn1FieldInfo);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field decodeInfo:Lorg/apache/kerby/asn1/Asn1FieldInfo;
       5: return

  public org.apache.kerby.asn1.parse.Asn1ParseResult getParseResult();
    Code:
       0: aload_0
       1: getfield      #9                  // Field parseResult:Lorg/apache/kerby/asn1/parse/Asn1ParseResult;
       4: areturn

  public void encode(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getValue:()Ljava/lang/Object;
       4: checkcast     #14                 // class org/apache/kerby/asn1/type/Asn1Encodeable
       7: astore_2
       8: aload_2
       9: ifnull        59
      12: aload_0
      13: getfield      #3                  // Field isBlindlyDecoded:Z
      16: ifne          54
      19: aload_0
      20: getfield      #13                 // Field decodeInfo:Lorg/apache/kerby/asn1/Asn1FieldInfo;
      23: invokevirtual #15                 // Method org/apache/kerby/asn1/Asn1FieldInfo.isTagged:()Z
      26: ifeq          46
      29: aload_0
      30: getfield      #13                 // Field decodeInfo:Lorg/apache/kerby/asn1/Asn1FieldInfo;
      33: invokevirtual #16                 // Method org/apache/kerby/asn1/Asn1FieldInfo.getTaggingOption:()Lorg/apache/kerby/asn1/TaggingOption;
      36: astore_3
      37: aload_2
      38: aload_1
      39: aload_3
      40: invokevirtual #17                 // Method org/apache/kerby/asn1/type/Asn1Encodeable.taggedEncode:(Ljava/nio/ByteBuffer;Lorg/apache/kerby/asn1/TaggingOption;)V
      43: goto          59
      46: aload_2
      47: aload_1
      48: invokevirtual #18                 // Method org/apache/kerby/asn1/type/Asn1Encodeable.encode:(Ljava/nio/ByteBuffer;)V
      51: goto          59
      54: aload_2
      55: aload_1
      56: invokevirtual #18                 // Method org/apache/kerby/asn1/type/Asn1Encodeable.encode:(Ljava/nio/ByteBuffer;)V
      59: return

  public int encodingLength();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getValue:()Ljava/lang/Object;
       4: checkcast     #14                 // class org/apache/kerby/asn1/type/Asn1Encodeable
       7: astore_1
       8: aload_1
       9: ifnull        53
      12: aload_0
      13: getfield      #3                  // Field isBlindlyDecoded:Z
      16: ifne          48
      19: aload_0
      20: getfield      #13                 // Field decodeInfo:Lorg/apache/kerby/asn1/Asn1FieldInfo;
      23: invokevirtual #15                 // Method org/apache/kerby/asn1/Asn1FieldInfo.isTagged:()Z
      26: ifeq          43
      29: aload_0
      30: getfield      #13                 // Field decodeInfo:Lorg/apache/kerby/asn1/Asn1FieldInfo;
      33: invokevirtual #16                 // Method org/apache/kerby/asn1/Asn1FieldInfo.getTaggingOption:()Lorg/apache/kerby/asn1/TaggingOption;
      36: astore_2
      37: aload_1
      38: aload_2
      39: invokevirtual #19                 // Method org/apache/kerby/asn1/type/Asn1Encodeable.taggedEncodingLength:(Lorg/apache/kerby/asn1/TaggingOption;)I
      42: ireturn
      43: aload_1
      44: invokevirtual #20                 // Method org/apache/kerby/asn1/type/Asn1Encodeable.encodingLength:()I
      47: ireturn
      48: aload_1
      49: invokevirtual #20                 // Method org/apache/kerby/asn1/type/Asn1Encodeable.encodingLength:()I
      52: ireturn
      53: aload_0
      54: invokespecial #21                 // Method org/apache/kerby/asn1/type/AbstractAsn1Type.encodingLength:()I
      57: ireturn

  protected int encodingBodyLength();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getValue:()Ljava/lang/Object;
       4: checkcast     #14                 // class org/apache/kerby/asn1/type/Asn1Encodeable
       7: astore_1
       8: aload_1
       9: ifnonnull     14
      12: iconst_0
      13: ireturn
      14: iconst_m1
      15: ireturn

  public void decode(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #5                  // Method setValue:(Ljava/lang/Object;)V
       5: aload_0
       6: aload_1
       7: invokespecial #22                 // Method org/apache/kerby/asn1/type/AbstractAsn1Type.decode:(Ljava/nio/ByteBuffer;)V
      10: return

  public void decode(org.apache.kerby.asn1.parse.Asn1ParseResult) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #23                 // Method decodeBody:(Lorg/apache/kerby/asn1/parse/Asn1ParseResult;)V
       5: return

  protected void decodeBody(org.apache.kerby.asn1.parse.Asn1ParseResult) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field parseResult:Lorg/apache/kerby/asn1/parse/Asn1ParseResult;
       5: aload_0
       6: getfield      #12                 // Field valueType:Ljava/lang/Class;
       9: ifnull        23
      12: aload_0
      13: aload_0
      14: getfield      #12                 // Field valueType:Ljava/lang/Class;
      17: invokespecial #24                 // Method typeAwareDecode:(Ljava/lang/Class;)V
      20: goto          27
      23: aload_0
      24: invokespecial #25                 // Method blindlyDecode:()V
      27: return

  private void blindlyDecode() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field parseResult:Lorg/apache/kerby/asn1/parse/Asn1ParseResult;
       4: iconst_0
       5: invokestatic  #26                 // Method org/apache/kerby/asn1/Asn1Converter.convert:(Lorg/apache/kerby/asn1/parse/Asn1ParseResult;Z)Lorg/apache/kerby/asn1/type/Asn1Type;
       8: astore_1
       9: aload_0
      10: getfield      #13                 // Field decodeInfo:Lorg/apache/kerby/asn1/Asn1FieldInfo;
      13: ifnull        56
      16: aload_0
      17: getfield      #13                 // Field decodeInfo:Lorg/apache/kerby/asn1/Asn1FieldInfo;
      20: invokevirtual #15                 // Method org/apache/kerby/asn1/Asn1FieldInfo.isTagged:()Z
      23: ifeq          56
      26: aload_1
      27: checkcast     #27                 // class org/apache/kerby/asn1/type/Asn1Constructed
      30: astore_2
      31: aload_2
      32: invokevirtual #28                 // Method org/apache/kerby/asn1/type/Asn1Constructed.getValue:()Ljava/lang/Object;
      35: checkcast     #29                 // class java/util/List
      38: iconst_0
      39: invokeinterface #30,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      44: checkcast     #7                  // class org/apache/kerby/asn1/type/Asn1Type
      47: astore_3
      48: aload_0
      49: aload_3
      50: invokevirtual #5                  // Method setValue:(Ljava/lang/Object;)V
      53: goto          61
      56: aload_0
      57: aload_1
      58: invokevirtual #5                  // Method setValue:(Ljava/lang/Object;)V
      61: aload_0
      62: iconst_1
      63: putfield      #3                  // Field isBlindlyDecoded:Z
      66: return

  protected <T extends org.apache.kerby.asn1.type.Asn1Type> T getValueAs(java.lang.Class<T>);
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getValue:()Ljava/lang/Object;
       4: checkcast     #7                  // class org/apache/kerby/asn1/type/Asn1Type
       7: astore_2
       8: aload_2
       9: ifnull        21
      12: aload_0
      13: getfield      #3                  // Field isBlindlyDecoded:Z
      16: ifne          21
      19: aload_2
      20: areturn
      21: aload_0
      22: getfield      #12                 // Field valueType:Ljava/lang/Class;
      25: ifnull        46
      28: aload_0
      29: getfield      #12                 // Field valueType:Ljava/lang/Class;
      32: aload_1
      33: if_acmpeq     46
      36: new           #31                 // class java/lang/RuntimeException
      39: dup
      40: ldc           #32                 // String Required value type isn\'t the same with the value type set before
      42: invokespecial #33                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: aload_0
      47: aload_1
      48: invokespecial #24                 // Method typeAwareDecode:(Ljava/lang/Class;)V
      51: goto          65
      54: astore_3
      55: new           #31                 // class java/lang/RuntimeException
      58: dup
      59: ldc           #35                 // String Type aware decoding of Any type failed
      61: invokespecial #33                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      64: athrow
      65: aload_0
      66: invokevirtual #6                  // Method getValue:()Ljava/lang/Object;
      69: checkcast     #7                  // class org/apache/kerby/asn1/type/Asn1Type
      72: areturn
    Exception table:
       from    to  target type
          46    51    54   Class java/io/IOException

  private <T extends org.apache.kerby.asn1.type.Asn1Type> void typeAwareDecode(java.lang.Class<T>) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #36                 // Method java/lang/Class.newInstance:()Ljava/lang/Object;
       4: checkcast     #7                  // class org/apache/kerby/asn1/type/Asn1Type
       7: astore_2
       8: goto          23
      11: astore_3
      12: new           #34                 // class java/io/IOException
      15: dup
      16: ldc           #38                 // String No default constructor?
      18: aload_3
      19: invokespecial #39                 // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      22: athrow
      23: aload_0
      24: getfield      #9                  // Field parseResult:Lorg/apache/kerby/asn1/parse/Asn1ParseResult;
      27: invokevirtual #40                 // Method org/apache/kerby/asn1/parse/Asn1ParseResult.isContextSpecific:()Z
      30: ifeq          51
      33: aload_0
      34: getfield      #9                  // Field parseResult:Lorg/apache/kerby/asn1/parse/Asn1ParseResult;
      37: aload_2
      38: aload_0
      39: getfield      #13                 // Field decodeInfo:Lorg/apache/kerby/asn1/Asn1FieldInfo;
      42: invokevirtual #16                 // Method org/apache/kerby/asn1/Asn1FieldInfo.getTaggingOption:()Lorg/apache/kerby/asn1/TaggingOption;
      45: invokestatic  #41                 // Method org/apache/kerby/asn1/Asn1Binder.bindWithTagging:(Lorg/apache/kerby/asn1/parse/Asn1ParseResult;Lorg/apache/kerby/asn1/type/Asn1Type;Lorg/apache/kerby/asn1/TaggingOption;)V
      48: goto          59
      51: aload_0
      52: getfield      #9                  // Field parseResult:Lorg/apache/kerby/asn1/parse/Asn1ParseResult;
      55: aload_2
      56: invokestatic  #42                 // Method org/apache/kerby/asn1/Asn1Binder.bind:(Lorg/apache/kerby/asn1/parse/Asn1ParseResult;Lorg/apache/kerby/asn1/type/Asn1Type;)V
      59: aload_0
      60: aload_2
      61: invokevirtual #5                  // Method setValue:(Ljava/lang/Object;)V
      64: aload_0
      65: iconst_0
      66: putfield      #3                  // Field isBlindlyDecoded:Z
      69: return
    Exception table:
       from    to  target type
           0     8    11   Class java/lang/Exception

  public void dumpWith(org.apache.kerby.asn1.Asn1Dumper, int);
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getValue:()Ljava/lang/Object;
       4: checkcast     #7                  // class org/apache/kerby/asn1/type/Asn1Type
       7: astore_3
       8: aload_1
       9: iload_2
      10: invokevirtual #43                 // Method org/apache/kerby/asn1/Asn1Dumper.indent:(I)Lorg/apache/kerby/asn1/Asn1Dumper;
      13: ldc           #44                 // String <Any>
      15: invokevirtual #45                 // Method org/apache/kerby/asn1/Asn1Dumper.append:(Ljava/lang/String;)Lorg/apache/kerby/asn1/Asn1Dumper;
      18: invokevirtual #46                 // Method org/apache/kerby/asn1/Asn1Dumper.newLine:()Lorg/apache/kerby/asn1/Asn1Dumper;
      21: pop
      22: aload_1
      23: iload_2
      24: aload_3
      25: invokevirtual #47                 // Method org/apache/kerby/asn1/Asn1Dumper.dumpType:(ILorg/apache/kerby/asn1/type/Asn1Type;)Lorg/apache/kerby/asn1/Asn1Dumper;
      28: pop
      29: return
}
