Compiled from "Asn1Encodeable.java"
public abstract class org.apache.kerby.asn1.type.Asn1Encodeable extends org.apache.kerby.asn1.type.Asn1Object implements org.apache.kerby.asn1.type.Asn1Type {
  protected int bodyLength;

  public org.apache.kerby.asn1.type.Asn1Encodeable outerEncodeable;

  private org.apache.kerby.asn1.type.Asn1Type$EncodingType encodingType;

  private boolean isImplicit;

  private boolean isDefinitiveLength;

  public org.apache.kerby.asn1.type.Asn1Encodeable(org.apache.kerby.asn1.Tag);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/kerby/asn1/type/Asn1Object."<init>":(Lorg/apache/kerby/asn1/Tag;)V
       5: aload_0
       6: iconst_m1
       7: putfield      #2                  // Field bodyLength:I
      10: aload_0
      11: aconst_null
      12: putfield      #3                  // Field outerEncodeable:Lorg/apache/kerby/asn1/type/Asn1Encodeable;
      15: aload_0
      16: getstatic     #4                  // Field org/apache/kerby/asn1/type/Asn1Type$EncodingType.BER:Lorg/apache/kerby/asn1/type/Asn1Type$EncodingType;
      19: putfield      #5                  // Field encodingType:Lorg/apache/kerby/asn1/type/Asn1Type$EncodingType;
      22: aload_0
      23: iconst_1
      24: putfield      #6                  // Field isImplicit:Z
      27: aload_0
      28: iconst_1
      29: putfield      #7                  // Field isDefinitiveLength:Z
      32: return

  public org.apache.kerby.asn1.type.Asn1Encodeable(org.apache.kerby.asn1.UniversalTag);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method org/apache/kerby/asn1/type/Asn1Object."<init>":(Lorg/apache/kerby/asn1/UniversalTag;)V
       5: aload_0
       6: iconst_m1
       7: putfield      #2                  // Field bodyLength:I
      10: aload_0
      11: aconst_null
      12: putfield      #3                  // Field outerEncodeable:Lorg/apache/kerby/asn1/type/Asn1Encodeable;
      15: aload_0
      16: getstatic     #4                  // Field org/apache/kerby/asn1/type/Asn1Type$EncodingType.BER:Lorg/apache/kerby/asn1/type/Asn1Type$EncodingType;
      19: putfield      #5                  // Field encodingType:Lorg/apache/kerby/asn1/type/Asn1Type$EncodingType;
      22: aload_0
      23: iconst_1
      24: putfield      #6                  // Field isImplicit:Z
      27: aload_0
      28: iconst_1
      29: putfield      #7                  // Field isDefinitiveLength:Z
      32: return

  public org.apache.kerby.asn1.type.Asn1Encodeable(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #9                  // Method org/apache/kerby/asn1/type/Asn1Object."<init>":(I)V
       5: aload_0
       6: iconst_m1
       7: putfield      #2                  // Field bodyLength:I
      10: aload_0
      11: aconst_null
      12: putfield      #3                  // Field outerEncodeable:Lorg/apache/kerby/asn1/type/Asn1Encodeable;
      15: aload_0
      16: getstatic     #4                  // Field org/apache/kerby/asn1/type/Asn1Type$EncodingType.BER:Lorg/apache/kerby/asn1/type/Asn1Type$EncodingType;
      19: putfield      #5                  // Field encodingType:Lorg/apache/kerby/asn1/type/Asn1Type$EncodingType;
      22: aload_0
      23: iconst_1
      24: putfield      #6                  // Field isImplicit:Z
      27: aload_0
      28: iconst_1
      29: putfield      #7                  // Field isDefinitiveLength:Z
      32: return

  public void usePrimitive(boolean);
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method tag:()Lorg/apache/kerby/asn1/Tag;
       4: iload_1
       5: invokevirtual #11                 // Method org/apache/kerby/asn1/Tag.usePrimitive:(Z)V
       8: return

  public boolean isPrimitive();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method tag:()Lorg/apache/kerby/asn1/Tag;
       4: invokevirtual #12                 // Method org/apache/kerby/asn1/Tag.isPrimitive:()Z
       7: ireturn

  public void useDefinitiveLength(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field isDefinitiveLength:Z
       5: return

  public boolean isDefinitiveLength();
    Code:
       0: aload_0
       1: getfield      #7                  // Field isDefinitiveLength:Z
       4: ireturn

  public void useImplicit(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field isImplicit:Z
       5: return

  public boolean isImplicit();
    Code:
       0: aload_0
       1: getfield      #6                  // Field isImplicit:Z
       4: ireturn

  public void useDER();
    Code:
       0: aload_0
       1: getstatic     #13                 // Field org/apache/kerby/asn1/type/Asn1Type$EncodingType.DER:Lorg/apache/kerby/asn1/type/Asn1Type$EncodingType;
       4: putfield      #5                  // Field encodingType:Lorg/apache/kerby/asn1/type/Asn1Type$EncodingType;
       7: return

  public boolean isDER();
    Code:
       0: aload_0
       1: getfield      #5                  // Field encodingType:Lorg/apache/kerby/asn1/type/Asn1Type$EncodingType;
       4: getstatic     #13                 // Field org/apache/kerby/asn1/type/Asn1Type$EncodingType.DER:Lorg/apache/kerby/asn1/type/Asn1Type$EncodingType;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public void useBER();
    Code:
       0: aload_0
       1: getstatic     #4                  // Field org/apache/kerby/asn1/type/Asn1Type$EncodingType.BER:Lorg/apache/kerby/asn1/type/Asn1Type$EncodingType;
       4: putfield      #5                  // Field encodingType:Lorg/apache/kerby/asn1/type/Asn1Type$EncodingType;
       7: return

  public boolean isBER();
    Code:
       0: aload_0
       1: getfield      #5                  // Field encodingType:Lorg/apache/kerby/asn1/type/Asn1Type$EncodingType;
       4: getstatic     #4                  // Field org/apache/kerby/asn1/type/Asn1Type$EncodingType.BER:Lorg/apache/kerby/asn1/type/Asn1Type$EncodingType;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public void useCER();
    Code:
       0: aload_0
       1: getstatic     #14                 // Field org/apache/kerby/asn1/type/Asn1Type$EncodingType.CER:Lorg/apache/kerby/asn1/type/Asn1Type$EncodingType;
       4: putfield      #5                  // Field encodingType:Lorg/apache/kerby/asn1/type/Asn1Type$EncodingType;
       7: return

  public boolean isCER();
    Code:
       0: aload_0
       1: getfield      #5                  // Field encodingType:Lorg/apache/kerby/asn1/type/Asn1Type$EncodingType;
       4: getstatic     #14                 // Field org/apache/kerby/asn1/type/Asn1Type$EncodingType.CER:Lorg/apache/kerby/asn1/type/Asn1Type$EncodingType;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public byte[] encode() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method encodingLength:()I
       4: istore_1
       5: iload_1
       6: invokestatic  #16                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
       9: astore_2
      10: aload_0
      11: aload_2
      12: invokevirtual #17                 // Method encode:(Ljava/nio/ByteBuffer;)V
      15: aload_2
      16: invokevirtual #18                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      19: pop
      20: aload_2
      21: invokevirtual #19                 // Method java/nio/ByteBuffer.array:()[B
      24: areturn

  public void encode(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #10                 // Method tag:()Lorg/apache/kerby/asn1/Tag;
       5: invokestatic  #20                 // Method org/apache/kerby/asn1/util/Asn1Util.encodeTag:(Ljava/nio/ByteBuffer;Lorg/apache/kerby/asn1/Tag;)V
       8: aload_0
       9: invokevirtual #21                 // Method getBodyLength:()I
      12: istore_2
      13: aload_1
      14: iload_2
      15: invokestatic  #22                 // Method org/apache/kerby/asn1/util/Asn1Util.encodeLength:(Ljava/nio/ByteBuffer;I)V
      18: aload_0
      19: aload_1
      20: invokevirtual #23                 // Method encodeBody:(Ljava/nio/ByteBuffer;)V
      23: return

  public void resetBodyLength();
    Code:
       0: aload_0
       1: getfield      #2                  // Field bodyLength:I
       4: iconst_m1
       5: if_icmpeq     27
       8: aload_0
       9: iconst_m1
      10: putfield      #2                  // Field bodyLength:I
      13: aload_0
      14: getfield      #3                  // Field outerEncodeable:Lorg/apache/kerby/asn1/type/Asn1Encodeable;
      17: ifnull        27
      20: aload_0
      21: getfield      #3                  // Field outerEncodeable:Lorg/apache/kerby/asn1/type/Asn1Encodeable;
      24: invokevirtual #24                 // Method resetBodyLength:()V
      27: return

  protected void encodeBody(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: return

  public void decode(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #25                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
       5: invokevirtual #26                 // Method decode:(Ljava/nio/ByteBuffer;)V
       8: return

  public int encodingLength();
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method getHeaderLength:()I
       4: aload_0
       5: invokevirtual #21                 // Method getBodyLength:()I
       8: iadd
       9: ireturn

  protected int getHeaderLength();
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method encodingHeaderLength:()I
       4: ireturn
       5: astore_1
       6: new           #30                 // class java/lang/RuntimeException
       9: dup
      10: aload_1
      11: invokespecial #31                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      14: athrow
    Exception table:
       from    to  target type
           0     4     5   Class java/io/IOException

  protected int getBodyLength();
    Code:
       0: aload_0
       1: getfield      #2                  // Field bodyLength:I
       4: iconst_m1
       5: if_icmpne     47
       8: aload_0
       9: aload_0
      10: invokevirtual #32                 // Method encodingBodyLength:()I
      13: putfield      #2                  // Field bodyLength:I
      16: goto          29
      19: astore_1
      20: new           #30                 // class java/lang/RuntimeException
      23: dup
      24: aload_1
      25: invokespecial #31                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      28: athrow
      29: aload_0
      30: getfield      #2                  // Field bodyLength:I
      33: iconst_m1
      34: if_icmpne     47
      37: new           #30                 // class java/lang/RuntimeException
      40: dup
      41: ldc           #33                 // String Unexpected body length: -1
      43: invokespecial #34                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: aload_0
      48: getfield      #2                  // Field bodyLength:I
      51: ireturn
    Exception table:
       from    to  target type
           8    16    19   Class java/io/IOException

  protected int encodingHeaderLength() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method tagNo:()I
       4: invokestatic  #36                 // Method org/apache/kerby/asn1/util/Asn1Util.lengthOfTagLength:(I)I
       7: istore_1
       8: aload_0
       9: invokevirtual #21                 // Method getBodyLength:()I
      12: istore_2
      13: iload_1
      14: iload_2
      15: invokestatic  #37                 // Method org/apache/kerby/asn1/util/Asn1Util.lengthOfBodyLength:(I)I
      18: iadd
      19: istore_1
      20: iload_1
      21: ireturn

  protected abstract int encodingBodyLength() throws java.io.IOException;

  public void decode(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #38                 // Method org/apache/kerby/asn1/parse/Asn1Parser.parse:(Ljava/nio/ByteBuffer;)Lorg/apache/kerby/asn1/parse/Asn1ParseResult;
       4: astore_2
       5: aload_0
       6: aload_2
       7: invokevirtual #39                 // Method decode:(Lorg/apache/kerby/asn1/parse/Asn1ParseResult;)V
      10: return

  public void decode(org.apache.kerby.asn1.parse.Asn1ParseResult) throws java.io.IOException;
    Code:
       0: aload_1
       1: astore_2
       2: aload_0
       3: invokevirtual #10                 // Method tag:()Lorg/apache/kerby/asn1/Tag;
       6: aload_1
       7: invokevirtual #40                 // Method org/apache/kerby/asn1/parse/Asn1ParseResult.tag:()Lorg/apache/kerby/asn1/Tag;
      10: invokevirtual #41                 // Method org/apache/kerby/asn1/Tag.equals:(Ljava/lang/Object;)Z
      13: ifne          93
      16: aload_0
      17: invokevirtual #42                 // Method isPrimitive:()Z
      20: ifeq          51
      23: aload_1
      24: invokevirtual #43                 // Method org/apache/kerby/asn1/parse/Asn1ParseResult.isPrimitive:()Z
      27: ifne          51
      30: aload_1
      31: checkcast     #44                 // class org/apache/kerby/asn1/parse/Asn1Container
      34: astore_3
      35: new           #45                 // class org/apache/kerby/asn1/parse/Asn1DerivedItem
      38: dup
      39: aload_0
      40: invokevirtual #10                 // Method tag:()Lorg/apache/kerby/asn1/Tag;
      43: aload_3
      44: invokespecial #46                 // Method org/apache/kerby/asn1/parse/Asn1DerivedItem."<init>":(Lorg/apache/kerby/asn1/Tag;Lorg/apache/kerby/asn1/parse/Asn1Container;)V
      47: astore_2
      48: goto          93
      51: new           #29                 // class java/io/IOException
      54: dup
      55: new           #47                 // class java/lang/StringBuilder
      58: dup
      59: invokespecial #48                 // Method java/lang/StringBuilder."<init>":()V
      62: ldc           #49                 // String Unexpected item
      64: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: aload_1
      68: invokevirtual #51                 // Method org/apache/kerby/asn1/parse/Asn1ParseResult.simpleInfo:()Ljava/lang/String;
      71: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: ldc           #52                 // String , expecting
      76: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: aload_0
      80: invokevirtual #10                 // Method tag:()Lorg/apache/kerby/asn1/Tag;
      83: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      86: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: invokespecial #55                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      92: athrow
      93: aload_0
      94: aload_2
      95: invokevirtual #56                 // Method decodeBody:(Lorg/apache/kerby/asn1/parse/Asn1ParseResult;)V
      98: return

  protected abstract void decodeBody(org.apache.kerby.asn1.parse.Asn1ParseResult) throws java.io.IOException;

  protected int taggedEncodingLength(org.apache.kerby.asn1.TaggingOption);
    Code:
       0: aload_1
       1: invokevirtual #57                 // Method org/apache/kerby/asn1/TaggingOption.getTagNo:()I
       4: istore_2
       5: aload_1
       6: invokevirtual #58                 // Method org/apache/kerby/asn1/TaggingOption.isImplicit:()Z
       9: ifeq          19
      12: aload_0
      13: invokevirtual #21                 // Method getBodyLength:()I
      16: goto          23
      19: aload_0
      20: invokevirtual #15                 // Method encodingLength:()I
      23: istore_3
      24: iload_2
      25: invokestatic  #36                 // Method org/apache/kerby/asn1/util/Asn1Util.lengthOfTagLength:(I)I
      28: iload_3
      29: invokestatic  #37                 // Method org/apache/kerby/asn1/util/Asn1Util.lengthOfBodyLength:(I)I
      32: iadd
      33: iload_3
      34: iadd
      35: istore        4
      37: iload         4
      39: ireturn

  public byte[] taggedEncode(org.apache.kerby.asn1.TaggingOption) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #59                 // Method taggedEncodingLength:(Lorg/apache/kerby/asn1/TaggingOption;)I
       5: istore_2
       6: iload_2
       7: invokestatic  #16                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      10: astore_3
      11: aload_0
      12: aload_3
      13: aload_1
      14: invokevirtual #60                 // Method taggedEncode:(Ljava/nio/ByteBuffer;Lorg/apache/kerby/asn1/TaggingOption;)V
      17: aload_3
      18: invokevirtual #18                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      21: pop
      22: aload_3
      23: invokevirtual #19                 // Method java/nio/ByteBuffer.array:()[B
      26: areturn

  public void taggedEncode(java.nio.ByteBuffer, org.apache.kerby.asn1.TaggingOption) throws java.io.IOException;
    Code:
       0: aload_2
       1: aload_0
       2: invokevirtual #42                 // Method isPrimitive:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: invokevirtual #61                 // Method org/apache/kerby/asn1/TaggingOption.getTag:(Z)Lorg/apache/kerby/asn1/Tag;
      16: astore_3
      17: aload_1
      18: aload_3
      19: invokestatic  #20                 // Method org/apache/kerby/asn1/util/Asn1Util.encodeTag:(Ljava/nio/ByteBuffer;Lorg/apache/kerby/asn1/Tag;)V
      22: aload_2
      23: invokevirtual #58                 // Method org/apache/kerby/asn1/TaggingOption.isImplicit:()Z
      26: ifeq          36
      29: aload_0
      30: invokevirtual #32                 // Method encodingBodyLength:()I
      33: goto          40
      36: aload_0
      37: invokevirtual #15                 // Method encodingLength:()I
      40: istore        4
      42: aload_1
      43: iload         4
      45: invokestatic  #22                 // Method org/apache/kerby/asn1/util/Asn1Util.encodeLength:(Ljava/nio/ByteBuffer;I)V
      48: aload_2
      49: invokevirtual #58                 // Method org/apache/kerby/asn1/TaggingOption.isImplicit:()Z
      52: ifeq          63
      55: aload_0
      56: aload_1
      57: invokevirtual #23                 // Method encodeBody:(Ljava/nio/ByteBuffer;)V
      60: goto          68
      63: aload_0
      64: aload_1
      65: invokevirtual #17                 // Method encode:(Ljava/nio/ByteBuffer;)V
      68: return

  public void taggedDecode(byte[], org.apache.kerby.asn1.TaggingOption) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #25                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
       5: aload_2
       6: invokevirtual #62                 // Method taggedDecode:(Ljava/nio/ByteBuffer;Lorg/apache/kerby/asn1/TaggingOption;)V
       9: return

  public void taggedDecode(java.nio.ByteBuffer, org.apache.kerby.asn1.TaggingOption) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #38                 // Method org/apache/kerby/asn1/parse/Asn1Parser.parse:(Ljava/nio/ByteBuffer;)Lorg/apache/kerby/asn1/parse/Asn1ParseResult;
       4: astore_3
       5: aload_0
       6: aload_3
       7: aload_2
       8: invokevirtual #63                 // Method taggedDecode:(Lorg/apache/kerby/asn1/parse/Asn1ParseResult;Lorg/apache/kerby/asn1/TaggingOption;)V
      11: return

  public void taggedDecode(org.apache.kerby.asn1.parse.Asn1ParseResult, org.apache.kerby.asn1.TaggingOption) throws java.io.IOException;
    Code:
       0: aload_2
       1: aload_0
       2: invokevirtual #42                 // Method isPrimitive:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: invokevirtual #61                 // Method org/apache/kerby/asn1/TaggingOption.getTag:(Z)Lorg/apache/kerby/asn1/Tag;
      16: astore_3
      17: aload_1
      18: astore        4
      20: aload_3
      21: aload_1
      22: invokevirtual #40                 // Method org/apache/kerby/asn1/parse/Asn1ParseResult.tag:()Lorg/apache/kerby/asn1/Tag;
      25: invokevirtual #41                 // Method org/apache/kerby/asn1/Tag.equals:(Ljava/lang/Object;)Z
      28: ifne          108
      31: aload_0
      32: invokevirtual #42                 // Method isPrimitive:()Z
      35: ifeq          69
      38: aload_1
      39: invokevirtual #43                 // Method org/apache/kerby/asn1/parse/Asn1ParseResult.isPrimitive:()Z
      42: ifne          69
      45: aload_1
      46: checkcast     #44                 // class org/apache/kerby/asn1/parse/Asn1Container
      49: astore        5
      51: new           #45                 // class org/apache/kerby/asn1/parse/Asn1DerivedItem
      54: dup
      55: aload_0
      56: invokevirtual #10                 // Method tag:()Lorg/apache/kerby/asn1/Tag;
      59: aload         5
      61: invokespecial #46                 // Method org/apache/kerby/asn1/parse/Asn1DerivedItem."<init>":(Lorg/apache/kerby/asn1/Tag;Lorg/apache/kerby/asn1/parse/Asn1Container;)V
      64: astore        4
      66: goto          108
      69: new           #29                 // class java/io/IOException
      72: dup
      73: new           #47                 // class java/lang/StringBuilder
      76: dup
      77: invokespecial #48                 // Method java/lang/StringBuilder."<init>":()V
      80: ldc           #64                 // String Unexpected tag
      82: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: aload_1
      86: invokevirtual #40                 // Method org/apache/kerby/asn1/parse/Asn1ParseResult.tag:()Lorg/apache/kerby/asn1/Tag;
      89: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      92: ldc           #52                 // String , expecting
      94: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: aload_3
      98: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     101: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     104: invokespecial #55                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     107: athrow
     108: aload_2
     109: invokevirtual #58                 // Method org/apache/kerby/asn1/TaggingOption.isImplicit:()Z
     112: ifeq          124
     115: aload_0
     116: aload         4
     118: invokevirtual #56                 // Method decodeBody:(Lorg/apache/kerby/asn1/parse/Asn1ParseResult;)V
     121: goto          152
     124: aload_1
     125: checkcast     #44                 // class org/apache/kerby/asn1/parse/Asn1Container
     128: astore        5
     130: aload         5
     132: invokevirtual #65                 // Method org/apache/kerby/asn1/parse/Asn1Container.getChildren:()Ljava/util/List;
     135: iconst_0
     136: invokeinterface #66,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     141: checkcast     #67                 // class org/apache/kerby/asn1/parse/Asn1ParseResult
     144: astore        4
     146: aload_0
     147: aload         4
     149: invokevirtual #39                 // Method decode:(Lorg/apache/kerby/asn1/parse/Asn1ParseResult;)V
     152: return
}
