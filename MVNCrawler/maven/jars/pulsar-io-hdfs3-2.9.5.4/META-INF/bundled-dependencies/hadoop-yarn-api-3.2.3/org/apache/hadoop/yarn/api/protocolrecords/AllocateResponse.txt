Compiled from "AllocateResponse.java"
public abstract class org.apache.hadoop.yarn.api.protocolrecords.AllocateResponse {
  public org.apache.hadoop.yarn.api.protocolrecords.AllocateResponse();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static org.apache.hadoop.yarn.api.protocolrecords.AllocateResponse newInstance(int, java.util.List<org.apache.hadoop.yarn.api.records.ContainerStatus>, java.util.List<org.apache.hadoop.yarn.api.records.Container>, java.util.List<org.apache.hadoop.yarn.api.records.NodeReport>, org.apache.hadoop.yarn.api.records.Resource, org.apache.hadoop.yarn.api.records.AMCommand, int, org.apache.hadoop.yarn.api.records.PreemptionMessage, java.util.List<org.apache.hadoop.yarn.api.records.NMToken>);
    Code:
       0: invokestatic  #2                  // Method newBuilder:()Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
       3: iload         6
       5: invokevirtual #3                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.numClusterNodes:(I)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
       8: iload_0
       9: invokevirtual #4                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.responseId:(I)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
      12: aload_1
      13: invokevirtual #5                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.completedContainersStatuses:(Ljava/util/List;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
      16: aload_2
      17: invokevirtual #6                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.allocatedContainers:(Ljava/util/List;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
      20: aload_3
      21: invokevirtual #7                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.updatedNodes:(Ljava/util/List;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
      24: aload         4
      26: invokevirtual #8                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.availableResources:(Lorg/apache/hadoop/yarn/api/records/Resource;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
      29: aload         5
      31: invokevirtual #9                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.amCommand:(Lorg/apache/hadoop/yarn/api/records/AMCommand;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
      34: aload         7
      36: invokevirtual #10                 // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.preemptionMessage:(Lorg/apache/hadoop/yarn/api/records/PreemptionMessage;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
      39: aload         8
      41: invokevirtual #11                 // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.nmTokens:(Ljava/util/List;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
      44: invokevirtual #12                 // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.build:()Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse;
      47: areturn

  public static org.apache.hadoop.yarn.api.protocolrecords.AllocateResponse newInstance(int, java.util.List<org.apache.hadoop.yarn.api.records.ContainerStatus>, java.util.List<org.apache.hadoop.yarn.api.records.Container>, java.util.List<org.apache.hadoop.yarn.api.records.NodeReport>, org.apache.hadoop.yarn.api.records.Resource, org.apache.hadoop.yarn.api.records.AMCommand, int, org.apache.hadoop.yarn.api.records.PreemptionMessage, java.util.List<org.apache.hadoop.yarn.api.records.NMToken>, org.apache.hadoop.yarn.api.records.CollectorInfo);
    Code:
       0: invokestatic  #2                  // Method newBuilder:()Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
       3: iload         6
       5: invokevirtual #3                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.numClusterNodes:(I)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
       8: iload_0
       9: invokevirtual #4                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.responseId:(I)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
      12: aload_1
      13: invokevirtual #5                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.completedContainersStatuses:(Ljava/util/List;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
      16: aload_2
      17: invokevirtual #6                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.allocatedContainers:(Ljava/util/List;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
      20: aload_3
      21: invokevirtual #7                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.updatedNodes:(Ljava/util/List;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
      24: aload         4
      26: invokevirtual #8                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.availableResources:(Lorg/apache/hadoop/yarn/api/records/Resource;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
      29: aload         5
      31: invokevirtual #9                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.amCommand:(Lorg/apache/hadoop/yarn/api/records/AMCommand;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
      34: aload         7
      36: invokevirtual #10                 // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.preemptionMessage:(Lorg/apache/hadoop/yarn/api/records/PreemptionMessage;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
      39: aload         8
      41: invokevirtual #11                 // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.nmTokens:(Ljava/util/List;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
      44: aload         9
      46: invokevirtual #13                 // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.collectorInfo:(Lorg/apache/hadoop/yarn/api/records/CollectorInfo;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
      49: invokevirtual #12                 // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.build:()Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse;
      52: areturn

  public static org.apache.hadoop.yarn.api.protocolrecords.AllocateResponse newInstance(int, java.util.List<org.apache.hadoop.yarn.api.records.ContainerStatus>, java.util.List<org.apache.hadoop.yarn.api.records.Container>, java.util.List<org.apache.hadoop.yarn.api.records.NodeReport>, org.apache.hadoop.yarn.api.records.Resource, org.apache.hadoop.yarn.api.records.AMCommand, int, org.apache.hadoop.yarn.api.records.PreemptionMessage, java.util.List<org.apache.hadoop.yarn.api.records.NMToken>, org.apache.hadoop.yarn.api.records.Token, java.util.List<org.apache.hadoop.yarn.api.records.UpdatedContainer>);
    Code:
       0: invokestatic  #2                  // Method newBuilder:()Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
       3: iload         6
       5: invokevirtual #3                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.numClusterNodes:(I)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
       8: iload_0
       9: invokevirtual #4                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.responseId:(I)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
      12: aload_1
      13: invokevirtual #5                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.completedContainersStatuses:(Ljava/util/List;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
      16: aload_2
      17: invokevirtual #6                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.allocatedContainers:(Ljava/util/List;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
      20: aload_3
      21: invokevirtual #7                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.updatedNodes:(Ljava/util/List;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
      24: aload         4
      26: invokevirtual #8                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.availableResources:(Lorg/apache/hadoop/yarn/api/records/Resource;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
      29: aload         5
      31: invokevirtual #9                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.amCommand:(Lorg/apache/hadoop/yarn/api/records/AMCommand;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
      34: aload         7
      36: invokevirtual #10                 // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.preemptionMessage:(Lorg/apache/hadoop/yarn/api/records/PreemptionMessage;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
      39: aload         8
      41: invokevirtual #11                 // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.nmTokens:(Ljava/util/List;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
      44: aload         10
      46: invokevirtual #14                 // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.updatedContainers:(Ljava/util/List;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
      49: aload         9
      51: invokevirtual #15                 // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.amRmToken:(Lorg/apache/hadoop/yarn/api/records/Token;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
      54: invokevirtual #12                 // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.build:()Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse;
      57: areturn

  public static org.apache.hadoop.yarn.api.protocolrecords.AllocateResponse newInstance(int, java.util.List<org.apache.hadoop.yarn.api.records.ContainerStatus>, java.util.List<org.apache.hadoop.yarn.api.records.Container>, java.util.List<org.apache.hadoop.yarn.api.records.NodeReport>, org.apache.hadoop.yarn.api.records.Resource, org.apache.hadoop.yarn.api.records.AMCommand, int, org.apache.hadoop.yarn.api.records.PreemptionMessage, java.util.List<org.apache.hadoop.yarn.api.records.NMToken>, org.apache.hadoop.yarn.api.records.Token, java.util.List<org.apache.hadoop.yarn.api.records.UpdatedContainer>, org.apache.hadoop.yarn.api.records.CollectorInfo);
    Code:
       0: invokestatic  #2                  // Method newBuilder:()Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
       3: iload         6
       5: invokevirtual #3                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.numClusterNodes:(I)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
       8: iload_0
       9: invokevirtual #4                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.responseId:(I)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
      12: aload_1
      13: invokevirtual #5                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.completedContainersStatuses:(Ljava/util/List;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
      16: aload_2
      17: invokevirtual #6                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.allocatedContainers:(Ljava/util/List;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
      20: aload_3
      21: invokevirtual #7                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.updatedNodes:(Ljava/util/List;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
      24: aload         4
      26: invokevirtual #8                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.availableResources:(Lorg/apache/hadoop/yarn/api/records/Resource;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
      29: aload         5
      31: invokevirtual #9                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.amCommand:(Lorg/apache/hadoop/yarn/api/records/AMCommand;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
      34: aload         7
      36: invokevirtual #10                 // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.preemptionMessage:(Lorg/apache/hadoop/yarn/api/records/PreemptionMessage;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
      39: aload         8
      41: invokevirtual #11                 // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.nmTokens:(Ljava/util/List;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
      44: aload         10
      46: invokevirtual #14                 // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.updatedContainers:(Ljava/util/List;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
      49: aload         9
      51: invokevirtual #15                 // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.amRmToken:(Lorg/apache/hadoop/yarn/api/records/Token;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
      54: aload         11
      56: invokevirtual #13                 // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.collectorInfo:(Lorg/apache/hadoop/yarn/api/records/CollectorInfo;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder;
      59: invokevirtual #12                 // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder.build:()Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse;
      62: areturn

  public abstract org.apache.hadoop.yarn.api.records.AMCommand getAMCommand();

  public abstract void setAMCommand(org.apache.hadoop.yarn.api.records.AMCommand);

  public abstract int getResponseId();

  public abstract void setResponseId(int);

  public abstract java.util.List<org.apache.hadoop.yarn.api.records.Container> getAllocatedContainers();

  public abstract void setAllocatedContainers(java.util.List<org.apache.hadoop.yarn.api.records.Container>);

  public abstract org.apache.hadoop.yarn.api.records.Resource getAvailableResources();

  public abstract void setAvailableResources(org.apache.hadoop.yarn.api.records.Resource);

  public abstract java.util.List<org.apache.hadoop.yarn.api.records.ContainerStatus> getCompletedContainersStatuses();

  public abstract void setCompletedContainersStatuses(java.util.List<org.apache.hadoop.yarn.api.records.ContainerStatus>);

  public abstract java.util.List<org.apache.hadoop.yarn.api.records.NodeReport> getUpdatedNodes();

  public abstract void setUpdatedNodes(java.util.List<org.apache.hadoop.yarn.api.records.NodeReport>);

  public abstract int getNumClusterNodes();

  public abstract void setNumClusterNodes(int);

  public abstract org.apache.hadoop.yarn.api.records.PreemptionMessage getPreemptionMessage();

  public abstract void setPreemptionMessage(org.apache.hadoop.yarn.api.records.PreemptionMessage);

  public abstract java.util.List<org.apache.hadoop.yarn.api.records.NMToken> getNMTokens();

  public abstract void setNMTokens(java.util.List<org.apache.hadoop.yarn.api.records.NMToken>);

  public abstract java.util.List<org.apache.hadoop.yarn.api.records.UpdatedContainer> getUpdatedContainers();

  public abstract void setUpdatedContainers(java.util.List<org.apache.hadoop.yarn.api.records.UpdatedContainer>);

  public abstract org.apache.hadoop.yarn.api.records.Token getAMRMToken();

  public abstract void setAMRMToken(org.apache.hadoop.yarn.api.records.Token);

  public abstract org.apache.hadoop.yarn.api.records.Priority getApplicationPriority();

  public abstract void setApplicationPriority(org.apache.hadoop.yarn.api.records.Priority);

  public abstract org.apache.hadoop.yarn.api.records.CollectorInfo getCollectorInfo();

  public abstract void setCollectorInfo(org.apache.hadoop.yarn.api.records.CollectorInfo);

  public java.util.List<org.apache.hadoop.yarn.api.records.UpdateContainerError> getUpdateErrors();
    Code:
       0: new           #16                 // class java/util/ArrayList
       3: dup
       4: invokespecial #17                 // Method java/util/ArrayList."<init>":()V
       7: areturn

  public void setUpdateErrors(java.util.List<org.apache.hadoop.yarn.api.records.UpdateContainerError>);
    Code:
       0: return

  public abstract java.util.List<org.apache.hadoop.yarn.api.records.Container> getContainersFromPreviousAttempts();

  public abstract void setContainersFromPreviousAttempts(java.util.List<org.apache.hadoop.yarn.api.records.Container>);

  public java.util.List<org.apache.hadoop.yarn.api.records.RejectedSchedulingRequest> getRejectedSchedulingRequests();
    Code:
       0: invokestatic  #18                 // Method java/util/Collections.emptyList:()Ljava/util/List;
       3: areturn

  public void setRejectedSchedulingRequests(java.util.List<org.apache.hadoop.yarn.api.records.RejectedSchedulingRequest>);
    Code:
       0: return

  public static org.apache.hadoop.yarn.api.protocolrecords.AllocateResponse$AllocateResponseBuilder newBuilder();
    Code:
       0: new           #19                 // class org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder
       3: dup
       4: aconst_null
       5: invokespecial #20                 // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$AllocateResponseBuilder."<init>":(Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse$1;)V
       8: areturn
}
