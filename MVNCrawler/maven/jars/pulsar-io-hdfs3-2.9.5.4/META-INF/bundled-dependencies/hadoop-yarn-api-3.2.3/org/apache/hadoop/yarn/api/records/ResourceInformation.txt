Compiled from "ResourceInformation.java"
public class org.apache.hadoop.yarn.api.records.ResourceInformation implements java.lang.Comparable<org.apache.hadoop.yarn.api.records.ResourceInformation> {
  private java.lang.String name;

  private java.lang.String units;

  private org.apache.hadoop.yarn.api.protocolrecords.ResourceTypes resourceType;

  private long value;

  private long minimumAllocation;

  private long maximumAllocation;

  public static final java.lang.String MEMORY_URI;

  public static final java.lang.String VCORES_URI;

  public static final java.lang.String GPU_URI;

  public static final java.lang.String FPGA_URI;

  public static final org.apache.hadoop.yarn.api.records.ResourceInformation MEMORY_MB;

  public static final org.apache.hadoop.yarn.api.records.ResourceInformation VCORES;

  public static final org.apache.hadoop.yarn.api.records.ResourceInformation GPUS;

  public static final org.apache.hadoop.yarn.api.records.ResourceInformation FPGAS;

  public static final java.util.Map<java.lang.String, org.apache.hadoop.yarn.api.records.ResourceInformation> SPECIAL_RESOURCES;

  public org.apache.hadoop.yarn.api.records.ResourceInformation();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field name:Ljava/lang/String;
       4: areturn

  public void setName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field name:Ljava/lang/String;
       5: return

  public java.lang.String getUnits();
    Code:
       0: aload_0
       1: getfield      #3                  // Field units:Ljava/lang/String;
       4: areturn

  public void setUnits(java.lang.String);
    Code:
       0: getstatic     #4                  // Field org/apache/hadoop/yarn/util/UnitsConversionUtil.KNOWN_UNITS:Ljava/util/Set;
       3: aload_1
       4: invokeinterface #5,  2            // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
       9: ifne          50
      12: new           #6                  // class java/lang/IllegalArgumentException
      15: dup
      16: new           #7                  // class java/lang/StringBuilder
      19: dup
      20: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #9                  // String Unknown unit \'
      25: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_1
      29: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: ldc           #11                 // String \'. Known units are
      34: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: getstatic     #4                  // Field org/apache/hadoop/yarn/util/UnitsConversionUtil.KNOWN_UNITS:Ljava/util/Set;
      40: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: aload_0
      51: aload_1
      52: putfield      #3                  // Field units:Ljava/lang/String;
      55: return

  public void setUnitsWithoutValidation(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field units:Ljava/lang/String;
       5: return

  public org.apache.hadoop.yarn.api.protocolrecords.ResourceTypes getResourceType();
    Code:
       0: aload_0
       1: getfield      #15                 // Field resourceType:Lorg/apache/hadoop/yarn/api/protocolrecords/ResourceTypes;
       4: areturn

  public void setResourceType(org.apache.hadoop.yarn.api.protocolrecords.ResourceTypes);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field resourceType:Lorg/apache/hadoop/yarn/api/protocolrecords/ResourceTypes;
       5: return

  public long getValue();
    Code:
       0: aload_0
       1: getfield      #16                 // Field value:J
       4: lreturn

  public void setValue(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #16                 // Field value:J
       5: return

  public long getMinimumAllocation();
    Code:
       0: aload_0
       1: getfield      #17                 // Field minimumAllocation:J
       4: lreturn

  public void setMinimumAllocation(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #17                 // Field minimumAllocation:J
       5: return

  public long getMaximumAllocation();
    Code:
       0: aload_0
       1: getfield      #18                 // Field maximumAllocation:J
       4: lreturn

  public void setMaximumAllocation(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #18                 // Field maximumAllocation:J
       5: return

  public static org.apache.hadoop.yarn.api.records.ResourceInformation newInstance(org.apache.hadoop.yarn.api.records.ResourceInformation);
    Code:
       0: new           #19                 // class org/apache/hadoop/yarn/api/records/ResourceInformation
       3: dup
       4: invokespecial #20                 // Method "<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokestatic  #21                 // Method copy:(Lorg/apache/hadoop/yarn/api/records/ResourceInformation;Lorg/apache/hadoop/yarn/api/records/ResourceInformation;)V
      13: aload_1
      14: areturn

  public static org.apache.hadoop.yarn.api.records.ResourceInformation newInstance(java.lang.String, java.lang.String, long, org.apache.hadoop.yarn.api.protocolrecords.ResourceTypes, long, long);
    Code:
       0: new           #19                 // class org/apache/hadoop/yarn/api/records/ResourceInformation
       3: dup
       4: invokespecial #20                 // Method "<init>":()V
       7: astore        9
       9: aload         9
      11: aload_0
      12: invokevirtual #22                 // Method setName:(Ljava/lang/String;)V
      15: aload         9
      17: aload         4
      19: invokevirtual #23                 // Method setResourceType:(Lorg/apache/hadoop/yarn/api/protocolrecords/ResourceTypes;)V
      22: aload         9
      24: aload_1
      25: invokevirtual #24                 // Method setUnitsWithoutValidation:(Ljava/lang/String;)V
      28: aload         9
      30: lload_2
      31: invokevirtual #25                 // Method setValue:(J)V
      34: aload         9
      36: lload         5
      38: invokevirtual #26                 // Method setMinimumAllocation:(J)V
      41: aload         9
      43: lload         7
      45: invokevirtual #27                 // Method setMaximumAllocation:(J)V
      48: aload         9
      50: areturn

  public static org.apache.hadoop.yarn.api.records.ResourceInformation newInstance(java.lang.String, java.lang.String, long);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: getstatic     #28                 // Field org/apache/hadoop/yarn/api/protocolrecords/ResourceTypes.COUNTABLE:Lorg/apache/hadoop/yarn/api/protocolrecords/ResourceTypes;
       6: lconst_0
       7: ldc2_w        #30                 // long 9223372036854775807l
      10: invokestatic  #32                 // Method newInstance:(Ljava/lang/String;Ljava/lang/String;JLorg/apache/hadoop/yarn/api/protocolrecords/ResourceTypes;JJ)Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
      13: areturn

  public static org.apache.hadoop.yarn.api.records.ResourceInformation newInstance(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: lconst_0
       3: getstatic     #28                 // Field org/apache/hadoop/yarn/api/protocolrecords/ResourceTypes.COUNTABLE:Lorg/apache/hadoop/yarn/api/protocolrecords/ResourceTypes;
       6: lconst_0
       7: ldc2_w        #30                 // long 9223372036854775807l
      10: invokestatic  #32                 // Method newInstance:(Ljava/lang/String;Ljava/lang/String;JLorg/apache/hadoop/yarn/api/protocolrecords/ResourceTypes;JJ)Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
      13: areturn

  public static org.apache.hadoop.yarn.api.records.ResourceInformation newInstance(java.lang.String, java.lang.String, org.apache.hadoop.yarn.api.protocolrecords.ResourceTypes);
    Code:
       0: aload_0
       1: aload_1
       2: lconst_0
       3: aload_2
       4: lconst_0
       5: ldc2_w        #30                 // long 9223372036854775807l
       8: invokestatic  #32                 // Method newInstance:(Ljava/lang/String;Ljava/lang/String;JLorg/apache/hadoop/yarn/api/protocolrecords/ResourceTypes;JJ)Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
      11: areturn

  public static org.apache.hadoop.yarn.api.records.ResourceInformation newInstance(java.lang.String, java.lang.String, long, long);
    Code:
       0: aload_0
       1: aload_1
       2: lconst_0
       3: getstatic     #28                 // Field org/apache/hadoop/yarn/api/protocolrecords/ResourceTypes.COUNTABLE:Lorg/apache/hadoop/yarn/api/protocolrecords/ResourceTypes;
       6: lload_2
       7: lload         4
       9: invokestatic  #32                 // Method newInstance:(Ljava/lang/String;Ljava/lang/String;JLorg/apache/hadoop/yarn/api/protocolrecords/ResourceTypes;JJ)Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
      12: areturn

  public static org.apache.hadoop.yarn.api.records.ResourceInformation newInstance(java.lang.String, long);
    Code:
       0: aload_0
       1: ldc           #33                 // String
       3: lload_1
       4: getstatic     #28                 // Field org/apache/hadoop/yarn/api/protocolrecords/ResourceTypes.COUNTABLE:Lorg/apache/hadoop/yarn/api/protocolrecords/ResourceTypes;
       7: lconst_0
       8: ldc2_w        #30                 // long 9223372036854775807l
      11: invokestatic  #32                 // Method newInstance:(Ljava/lang/String;Ljava/lang/String;JLorg/apache/hadoop/yarn/api/protocolrecords/ResourceTypes;JJ)Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
      14: areturn

  public static org.apache.hadoop.yarn.api.records.ResourceInformation newInstance(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #33                 // String
       3: invokestatic  #34                 // Method newInstance:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
       6: areturn

  public static void copy(org.apache.hadoop.yarn.api.records.ResourceInformation, org.apache.hadoop.yarn.api.records.ResourceInformation);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #35                 // Method getName:()Ljava/lang/String;
       5: invokevirtual #22                 // Method setName:(Ljava/lang/String;)V
       8: aload_1
       9: aload_0
      10: invokevirtual #36                 // Method getResourceType:()Lorg/apache/hadoop/yarn/api/protocolrecords/ResourceTypes;
      13: invokevirtual #23                 // Method setResourceType:(Lorg/apache/hadoop/yarn/api/protocolrecords/ResourceTypes;)V
      16: aload_1
      17: aload_0
      18: invokevirtual #37                 // Method getUnits:()Ljava/lang/String;
      21: invokevirtual #38                 // Method setUnits:(Ljava/lang/String;)V
      24: aload_1
      25: aload_0
      26: invokevirtual #39                 // Method getValue:()J
      29: invokevirtual #25                 // Method setValue:(J)V
      32: aload_1
      33: aload_0
      34: invokevirtual #40                 // Method getMinimumAllocation:()J
      37: invokevirtual #26                 // Method setMinimumAllocation:(J)V
      40: aload_1
      41: aload_0
      42: invokevirtual #41                 // Method getMaximumAllocation:()J
      45: invokevirtual #27                 // Method setMaximumAllocation:(J)V
      48: return

  public java.lang.String toString();
    Code:
       0: new           #7                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #42                 // String name:
       9: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #2                  // Field name:Ljava/lang/String;
      16: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #43                 // String , units:
      21: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #3                  // Field units:Ljava/lang/String;
      28: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #44                 // String , type:
      33: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #15                 // Field resourceType:Lorg/apache/hadoop/yarn/api/protocolrecords/ResourceTypes;
      40: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: ldc           #45                 // String , value:
      45: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #16                 // Field value:J
      52: invokevirtual #46                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      55: ldc           #47                 // String , minimum allocation:
      57: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: getfield      #17                 // Field minimumAllocation:J
      64: invokevirtual #46                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      67: ldc           #48                 // String , maximum allocation:
      69: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: getfield      #18                 // Field maximumAllocation:J
      76: invokevirtual #46                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      79: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      82: areturn

  public java.lang.String getShorthandRepresentation();
    Code:
       0: new           #7                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #33                 // String
       9: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #16                 // Field value:J
      16: invokevirtual #46                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #3                  // Field units:Ljava/lang/String;
      23: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: instanceof    #19                 // class org/apache/hadoop/yarn/api/records/ResourceInformation
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_1
      23: checkcast     #19                 // class org/apache/hadoop/yarn/api/records/ResourceInformation
      26: astore_2
      27: aload_0
      28: getfield      #2                  // Field name:Ljava/lang/String;
      31: aload_2
      32: invokevirtual #35                 // Method getName:()Ljava/lang/String;
      35: invokevirtual #49                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      38: ifeq          55
      41: aload_0
      42: getfield      #15                 // Field resourceType:Lorg/apache/hadoop/yarn/api/protocolrecords/ResourceTypes;
      45: aload_2
      46: invokevirtual #36                 // Method getResourceType:()Lorg/apache/hadoop/yarn/api/protocolrecords/ResourceTypes;
      49: invokevirtual #50                 // Method org/apache/hadoop/yarn/api/protocolrecords/ResourceTypes.equals:(Ljava/lang/Object;)Z
      52: ifne          57
      55: iconst_0
      56: ireturn
      57: aload_0
      58: getfield      #3                  // Field units:Ljava/lang/String;
      61: aload_2
      62: getfield      #3                  // Field units:Ljava/lang/String;
      65: invokevirtual #49                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      68: ifeq          89
      71: aload_0
      72: getfield      #16                 // Field value:J
      75: aload_2
      76: getfield      #16                 // Field value:J
      79: lcmp
      80: ifne          87
      83: iconst_1
      84: goto          88
      87: iconst_0
      88: ireturn
      89: aload_0
      90: getfield      #3                  // Field units:Ljava/lang/String;
      93: aload_0
      94: getfield      #16                 // Field value:J
      97: aload_2
      98: getfield      #3                  // Field units:Ljava/lang/String;
     101: aload_2
     102: getfield      #16                 // Field value:J
     105: invokestatic  #51                 // Method org/apache/hadoop/yarn/util/UnitsConversionUtil.compare:(Ljava/lang/String;JLjava/lang/String;J)I
     108: ifne          115
     111: iconst_1
     112: goto          116
     115: iconst_0
     116: ireturn

  public int hashCode();
    Code:
       0: ldc           #52                 // int 263167
       2: istore_1
       3: ldc           #53                 // int 939769357
       5: aload_0
       6: getfield      #2                  // Field name:Ljava/lang/String;
       9: invokevirtual #54                 // Method java/lang/String.hashCode:()I
      12: iadd
      13: istore_2
      14: ldc           #52                 // int 263167
      16: iload_2
      17: imul
      18: aload_0
      19: getfield      #15                 // Field resourceType:Lorg/apache/hadoop/yarn/api/protocolrecords/ResourceTypes;
      22: invokevirtual #55                 // Method org/apache/hadoop/yarn/api/protocolrecords/ResourceTypes.hashCode:()I
      25: iadd
      26: istore_2
      27: ldc           #52                 // int 263167
      29: iload_2
      30: imul
      31: aload_0
      32: getfield      #3                  // Field units:Ljava/lang/String;
      35: invokevirtual #54                 // Method java/lang/String.hashCode:()I
      38: iadd
      39: istore_2
      40: ldc           #52                 // int 263167
      42: iload_2
      43: imul
      44: aload_0
      45: getfield      #16                 // Field value:J
      48: invokestatic  #56                 // Method java/lang/Long.hashCode:(J)I
      51: iadd
      52: istore_2
      53: iload_2
      54: ireturn

  public int compareTo(org.apache.hadoop.yarn.api.records.ResourceInformation);
    Code:
       0: aload_0
       1: getfield      #2                  // Field name:Ljava/lang/String;
       4: aload_1
       5: getfield      #2                  // Field name:Ljava/lang/String;
       8: invokevirtual #57                 // Method java/lang/String.compareTo:(Ljava/lang/String;)I
      11: istore_2
      12: iload_2
      13: ifne          52
      16: aload_0
      17: getfield      #3                  // Field units:Ljava/lang/String;
      20: aload_0
      21: getfield      #16                 // Field value:J
      24: aload_1
      25: getfield      #3                  // Field units:Ljava/lang/String;
      28: aload_1
      29: getfield      #16                 // Field value:J
      32: invokestatic  #51                 // Method org/apache/hadoop/yarn/util/UnitsConversionUtil.compare:(Ljava/lang/String;JLjava/lang/String;J)I
      35: istore_2
      36: iload_2
      37: ifne          52
      40: aload_0
      41: getfield      #15                 // Field resourceType:Lorg/apache/hadoop/yarn/api/protocolrecords/ResourceTypes;
      44: aload_1
      45: getfield      #15                 // Field resourceType:Lorg/apache/hadoop/yarn/api/protocolrecords/ResourceTypes;
      48: invokevirtual #58                 // Method org/apache/hadoop/yarn/api/protocolrecords/ResourceTypes.compareTo:(Ljava/lang/Enum;)I
      51: istore_2
      52: iload_2
      53: ireturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #19                 // class org/apache/hadoop/yarn/api/records/ResourceInformation
       5: invokevirtual #59                 // Method compareTo:(Lorg/apache/hadoop/yarn/api/records/ResourceInformation;)I
       8: ireturn

  static {};
    Code:
       0: ldc           #60                 // String memory-mb
       2: ldc           #61                 // String Mi
       4: invokestatic  #34                 // Method newInstance:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
       7: putstatic     #62                 // Field MEMORY_MB:Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
      10: ldc           #63                 // String vcores
      12: invokestatic  #64                 // Method newInstance:(Ljava/lang/String;)Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
      15: putstatic     #65                 // Field VCORES:Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
      18: ldc           #66                 // String yarn.io/gpu
      20: invokestatic  #64                 // Method newInstance:(Ljava/lang/String;)Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
      23: putstatic     #67                 // Field GPUS:Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
      26: ldc           #68                 // String yarn.io/fpga
      28: invokestatic  #64                 // Method newInstance:(Ljava/lang/String;)Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
      31: putstatic     #69                 // Field FPGAS:Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
      34: ldc           #60                 // String memory-mb
      36: getstatic     #62                 // Field MEMORY_MB:Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
      39: ldc           #63                 // String vcores
      41: getstatic     #65                 // Field VCORES:Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
      44: ldc           #66                 // String yarn.io/gpu
      46: getstatic     #67                 // Field GPUS:Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
      49: ldc           #68                 // String yarn.io/fpga
      51: getstatic     #69                 // Field FPGAS:Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
      54: invokestatic  #70                 // Method com/google/common/collect/ImmutableMap.of:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap;
      57: putstatic     #71                 // Field SPECIAL_RESOURCES:Ljava/util/Map;
      60: return
}
