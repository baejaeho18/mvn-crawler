Compiled from "ResourceUtils.java"
public class org.apache.hadoop.yarn.util.resource.ResourceUtils {
  public static final java.lang.String UNITS;

  public static final java.lang.String TYPE;

  public static final java.lang.String MINIMUM_ALLOCATION;

  public static final java.lang.String MAXIMUM_ALLOCATION;

  private static final java.lang.String MEMORY;

  private static final java.lang.String VCORES;

  public static final java.util.regex.Pattern RESOURCE_REQUEST_VALUE_PATTERN;

  private static final java.util.regex.Pattern RESOURCE_NAME_PATTERN;

  public static final java.lang.String YARN_IO_OPTIONAL;

  private static volatile boolean initializedResources;

  private static final java.util.Map<java.lang.String, java.lang.Integer> RESOURCE_NAME_TO_INDEX;

  private static volatile java.util.Map<java.lang.String, org.apache.hadoop.yarn.api.records.ResourceInformation> resourceTypes;

  private static volatile org.apache.hadoop.yarn.api.records.ResourceInformation[] resourceTypesArray;

  private static volatile boolean initializedNodeResources;

  private static volatile java.util.Map<java.lang.String, org.apache.hadoop.yarn.api.records.ResourceInformation> readOnlyNodeResources;

  private static volatile int numKnownResourceTypes;

  static final org.slf4j.Logger LOG;

  private org.apache.hadoop.yarn.util.resource.ResourceUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  private static void checkSpecialResources(java.util.Map<java.lang.String, org.apache.hadoop.yarn.api.records.ResourceInformation>) throws org.apache.hadoop.yarn.exceptions.YarnRuntimeException;
    Code:
       0: iconst_3
       1: anewarray     #2                  // class java/lang/String
       4: dup
       5: iconst_0
       6: ldc           #3                  // String memory
       8: aastore
       9: dup
      10: iconst_1
      11: ldc           #5                  // String memory-mb
      13: aastore
      14: dup
      15: iconst_2
      16: ldc           #6                  // String vcores
      18: aastore
      19: astore_1
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     123
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: aload         5
      43: invokeinterface #7,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      48: ifeq          117
      51: getstatic     #8                  // Field LOG:Lorg/slf4j/Logger;
      54: new           #9                  // class java/lang/StringBuilder
      57: dup
      58: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      61: ldc           #11                 // String Attempt to define resource \'
      63: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: aload         5
      68: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: ldc           #13                 // String \', but it is not allowed.
      73: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: invokeinterface #15,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      84: new           #16                 // class org/apache/hadoop/yarn/exceptions/YarnRuntimeException
      87: dup
      88: new           #9                  // class java/lang/StringBuilder
      91: dup
      92: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      95: ldc           #17                 // String Attempt to re-define mandatory resource \'
      97: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: aload         5
     102: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: ldc           #18                 // String \'.
     107: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     113: invokespecial #19                 // Method org/apache/hadoop/yarn/exceptions/YarnRuntimeException."<init>":(Ljava/lang/String;)V
     116: athrow
     117: iinc          4, 1
     120: goto          28
     123: getstatic     #20                 // Field org/apache/hadoop/yarn/api/records/ResourceInformation.SPECIAL_RESOURCES:Ljava/util/Map;
     126: invokeinterface #21,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     131: invokeinterface #22,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     136: astore_2
     137: aload_2
     138: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     143: ifeq          315
     146: aload_2
     147: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     152: checkcast     #25                 // class java/util/Map$Entry
     155: astore_3
     156: aload_3
     157: invokeinterface #26,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     162: checkcast     #2                  // class java/lang/String
     165: astore        4
     167: aload_3
     168: invokeinterface #27,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     173: checkcast     #4                  // class org/apache/hadoop/yarn/api/records/ResourceInformation
     176: astore        5
     178: aload_0
     179: aload         4
     181: invokeinterface #28,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     186: checkcast     #4                  // class org/apache/hadoop/yarn/api/records/ResourceInformation
     189: astore        6
     191: aload         6
     193: ifnull        312
     196: aload         5
     198: invokevirtual #29                 // Method org/apache/hadoop/yarn/api/records/ResourceInformation.getUnits:()Ljava/lang/String;
     201: astore        7
     203: aload         5
     205: invokevirtual #30                 // Method org/apache/hadoop/yarn/api/records/ResourceInformation.getResourceType:()Lorg/apache/hadoop/yarn/api/protocolrecords/ResourceTypes;
     208: astore        8
     210: aload         6
     212: invokevirtual #29                 // Method org/apache/hadoop/yarn/api/records/ResourceInformation.getUnits:()Ljava/lang/String;
     215: astore        9
     217: aload         6
     219: invokevirtual #30                 // Method org/apache/hadoop/yarn/api/records/ResourceInformation.getResourceType:()Lorg/apache/hadoop/yarn/api/protocolrecords/ResourceTypes;
     222: astore        10
     224: aload         7
     226: aload         9
     228: invokevirtual #31                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     231: ifeq          244
     234: aload         8
     236: aload         10
     238: invokevirtual #32                 // Method org/apache/hadoop/yarn/api/protocolrecords/ResourceTypes.equals:(Ljava/lang/Object;)Z
     241: ifne          312
     244: new           #16                 // class org/apache/hadoop/yarn/exceptions/YarnRuntimeException
     247: dup
     248: new           #9                  // class java/lang/StringBuilder
     251: dup
     252: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
     255: ldc           #33                 // String Defined mandatory resource type=
     257: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     260: aload         4
     262: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     265: ldc           #34                 // String  inside resource-types.xml, however its type or unit is conflict to mandatory resource types, expected type=
     267: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     270: aload         8
     272: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     275: ldc           #36                 // String , unit=
     277: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     280: aload         7
     282: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     285: ldc           #37                 // String ; actual type=
     287: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     290: aload         10
     292: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     295: ldc           #38                 // String  actual unit=
     297: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     300: aload         9
     302: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     305: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     308: invokespecial #19                 // Method org/apache/hadoop/yarn/exceptions/YarnRuntimeException."<init>":(Ljava/lang/String;)V
     311: athrow
     312: goto          137
     315: return

  private static void addMandatoryResources(java.util.Map<java.lang.String, org.apache.hadoop.yarn.api.records.ResourceInformation>);
    Code:
       0: aload_0
       1: getstatic     #39                 // Field MEMORY:Ljava/lang/String;
       4: invokeinterface #7,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
       9: ifne          101
      12: getstatic     #8                  // Field LOG:Lorg/slf4j/Logger;
      15: invokeinterface #40,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      20: ifeq          77
      23: getstatic     #8                  // Field LOG:Lorg/slf4j/Logger;
      26: new           #9                  // class java/lang/StringBuilder
      29: dup
      30: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #41                 // String Adding resource type - name =
      35: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: getstatic     #39                 // Field MEMORY:Ljava/lang/String;
      41: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: ldc           #42                 // String , units =
      46: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: getstatic     #43                 // Field org/apache/hadoop/yarn/api/records/ResourceInformation.MEMORY_MB:Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
      52: invokevirtual #29                 // Method org/apache/hadoop/yarn/api/records/ResourceInformation.getUnits:()Ljava/lang/String;
      55: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: ldc           #44                 // String , type =
      60: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: getstatic     #45                 // Field org/apache/hadoop/yarn/api/protocolrecords/ResourceTypes.COUNTABLE:Lorg/apache/hadoop/yarn/api/protocolrecords/ResourceTypes;
      66: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      69: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: invokeinterface #46,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      77: getstatic     #39                 // Field MEMORY:Ljava/lang/String;
      80: getstatic     #43                 // Field org/apache/hadoop/yarn/api/records/ResourceInformation.MEMORY_MB:Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
      83: invokevirtual #29                 // Method org/apache/hadoop/yarn/api/records/ResourceInformation.getUnits:()Ljava/lang/String;
      86: invokestatic  #47                 // Method org/apache/hadoop/yarn/api/records/ResourceInformation.newInstance:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
      89: astore_1
      90: aload_0
      91: getstatic     #39                 // Field MEMORY:Ljava/lang/String;
      94: aload_1
      95: invokeinterface #48,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     100: pop
     101: aload_0
     102: getstatic     #49                 // Field VCORES:Ljava/lang/String;
     105: invokeinterface #7,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     110: ifne          182
     113: getstatic     #8                  // Field LOG:Lorg/slf4j/Logger;
     116: invokeinterface #40,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     121: ifeq          164
     124: getstatic     #8                  // Field LOG:Lorg/slf4j/Logger;
     127: new           #9                  // class java/lang/StringBuilder
     130: dup
     131: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
     134: ldc           #41                 // String Adding resource type - name =
     136: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     139: getstatic     #49                 // Field VCORES:Ljava/lang/String;
     142: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     145: ldc           #50                 // String , units = , type =
     147: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     150: getstatic     #45                 // Field org/apache/hadoop/yarn/api/protocolrecords/ResourceTypes.COUNTABLE:Lorg/apache/hadoop/yarn/api/protocolrecords/ResourceTypes;
     153: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     156: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     159: invokeinterface #46,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     164: getstatic     #49                 // Field VCORES:Ljava/lang/String;
     167: invokestatic  #51                 // Method org/apache/hadoop/yarn/api/records/ResourceInformation.newInstance:(Ljava/lang/String;)Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
     170: astore_1
     171: aload_0
     172: getstatic     #49                 // Field VCORES:Ljava/lang/String;
     175: aload_1
     176: invokeinterface #48,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     181: pop
     182: return

  private static void setAllocationForMandatoryResources(java.util.Map<java.lang.String, org.apache.hadoop.yarn.api.records.ResourceInformation>, org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: getstatic     #43                 // Field org/apache/hadoop/yarn/api/records/ResourceInformation.MEMORY_MB:Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
       4: invokevirtual #52                 // Method org/apache/hadoop/yarn/api/records/ResourceInformation.getName:()Ljava/lang/String;
       7: invokeinterface #28,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #4                  // class org/apache/hadoop/yarn/api/records/ResourceInformation
      15: astore_2
      16: aload_2
      17: aload_1
      18: new           #9                  // class java/lang/StringBuilder
      21: dup
      22: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #54                 // String yarn.resource-types.
      27: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_2
      31: invokevirtual #52                 // Method org/apache/hadoop/yarn/api/records/ResourceInformation.getName:()Ljava/lang/String;
      34: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: ldc           #56                 // String .minimum-allocation
      39: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: ldc           #57                 // String yarn.scheduler.minimum-allocation-mb
      47: ldc2_w        #58                 // long 1024l
      50: invokestatic  #60                 // Method getAllocation:(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;J)J
      53: invokevirtual #61                 // Method org/apache/hadoop/yarn/api/records/ResourceInformation.setMinimumAllocation:(J)V
      56: aload_2
      57: aload_1
      58: new           #9                  // class java/lang/StringBuilder
      61: dup
      62: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      65: ldc           #54                 // String yarn.resource-types.
      67: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: aload_2
      71: invokevirtual #52                 // Method org/apache/hadoop/yarn/api/records/ResourceInformation.getName:()Ljava/lang/String;
      74: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: ldc           #62                 // String .maximum-allocation
      79: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      85: ldc           #63                 // String yarn.scheduler.maximum-allocation-mb
      87: ldc2_w        #64                 // long 8192l
      90: invokestatic  #60                 // Method getAllocation:(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;J)J
      93: invokevirtual #66                 // Method org/apache/hadoop/yarn/api/records/ResourceInformation.setMaximumAllocation:(J)V
      96: aload_0
      97: getstatic     #67                 // Field org/apache/hadoop/yarn/api/records/ResourceInformation.VCORES:Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
     100: invokevirtual #52                 // Method org/apache/hadoop/yarn/api/records/ResourceInformation.getName:()Ljava/lang/String;
     103: invokeinterface #28,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     108: checkcast     #4                  // class org/apache/hadoop/yarn/api/records/ResourceInformation
     111: astore_3
     112: aload_3
     113: aload_1
     114: new           #9                  // class java/lang/StringBuilder
     117: dup
     118: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
     121: ldc           #54                 // String yarn.resource-types.
     123: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: aload_3
     127: invokevirtual #52                 // Method org/apache/hadoop/yarn/api/records/ResourceInformation.getName:()Ljava/lang/String;
     130: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: ldc           #56                 // String .minimum-allocation
     135: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     141: ldc           #68                 // String yarn.scheduler.minimum-allocation-vcores
     143: lconst_1
     144: invokestatic  #60                 // Method getAllocation:(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;J)J
     147: invokevirtual #61                 // Method org/apache/hadoop/yarn/api/records/ResourceInformation.setMinimumAllocation:(J)V
     150: aload_3
     151: aload_1
     152: new           #9                  // class java/lang/StringBuilder
     155: dup
     156: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
     159: ldc           #54                 // String yarn.resource-types.
     161: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: aload_3
     165: invokevirtual #52                 // Method org/apache/hadoop/yarn/api/records/ResourceInformation.getName:()Ljava/lang/String;
     168: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     171: ldc           #62                 // String .maximum-allocation
     173: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     176: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     179: ldc           #69                 // String yarn.scheduler.maximum-allocation-vcores
     181: ldc2_w        #70                 // long 4l
     184: invokestatic  #60                 // Method getAllocation:(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;J)J
     187: invokevirtual #66                 // Method org/apache/hadoop/yarn/api/records/ResourceInformation.setMaximumAllocation:(J)V
     190: return

  private static long getAllocation(org.apache.hadoop.conf.Configuration, java.lang.String, java.lang.String, long);
    Code:
       0: aload_0
       1: aload_1
       2: ldc2_w        #72                 // long -1l
       5: invokevirtual #74                 // Method org/apache/hadoop/conf/Configuration.getLong:(Ljava/lang/String;J)J
       8: lstore        5
      10: lload         5
      12: ldc2_w        #72                 // long -1l
      15: lcmp
      16: ifne          68
      19: getstatic     #8                  // Field LOG:Lorg/slf4j/Logger;
      22: new           #9                  // class java/lang/StringBuilder
      25: dup
      26: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      29: ldc           #75                 // String Mandatory Resource \'
      31: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_1
      35: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: ldc           #76                 // String \' is not configured in resource-types config file. Setting allocation specified using \'
      40: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_2
      44: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: ldc           #77                 // String \'
      49: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: invokeinterface #46,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      60: aload_0
      61: aload_2
      62: lload_3
      63: invokevirtual #74                 // Method org/apache/hadoop/conf/Configuration.getLong:(Ljava/lang/String;J)J
      66: lstore        5
      68: lload         5
      70: lreturn

  static void validateNameOfResourceNameAndThrowException(java.lang.String) throws org.apache.hadoop.yarn.exceptions.YarnRuntimeException;
    Code:
       0: getstatic     #78                 // Field RESOURCE_NAME_PATTERN:Ljava/util/regex/Pattern;
       3: aload_0
       4: invokevirtual #79                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       7: astore_1
       8: aload_1
       9: invokevirtual #80                 // Method java/util/regex/Matcher.matches:()Z
      12: ifne          38
      15: ldc           #81                 // String \'%s\' is not a valid resource name. A valid resource name must begin with a letter and contain only letters, numbers, and any of: \'.\', \'_\', or \'-\'. A valid resource name may also be optionally preceded by a name space followed by a slash. A valid name space consists of period-separated groups of letters, numbers, and dashes.
      17: iconst_1
      18: anewarray     #82                 // class java/lang/Object
      21: dup
      22: iconst_0
      23: aload_0
      24: aastore
      25: invokestatic  #83                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      28: astore_2
      29: new           #16                 // class org/apache/hadoop/yarn/exceptions/YarnRuntimeException
      32: dup
      33: aload_2
      34: invokespecial #19                 // Method org/apache/hadoop/yarn/exceptions/YarnRuntimeException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: return

  public static org.apache.hadoop.yarn.api.records.Resource fetchMaximumAllocationFromConfig(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: invokestatic  #84                 // Method getResourceInformationMapFromConfig:(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/Map;
       4: astore_1
       5: iconst_0
       6: iconst_0
       7: invokestatic  #85                 // Method org/apache/hadoop/yarn/api/records/Resource.newInstance:(II)Lorg/apache/hadoop/yarn/api/records/Resource;
      10: astore_2
      11: aload_1
      12: invokeinterface #86,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      17: invokeinterface #87,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      22: astore_3
      23: aload_3
      24: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          60
      32: aload_3
      33: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #4                  // class org/apache/hadoop/yarn/api/records/ResourceInformation
      41: astore        4
      43: aload_2
      44: aload         4
      46: invokevirtual #52                 // Method org/apache/hadoop/yarn/api/records/ResourceInformation.getName:()Ljava/lang/String;
      49: aload         4
      51: invokevirtual #88                 // Method org/apache/hadoop/yarn/api/records/ResourceInformation.getMaximumAllocation:()J
      54: invokevirtual #89                 // Method org/apache/hadoop/yarn/api/records/Resource.setResourceValue:(Ljava/lang/String;J)V
      57: goto          23
      60: aload_2
      61: areturn

  private static java.util.Map<java.lang.String, org.apache.hadoop.yarn.api.records.ResourceInformation> getResourceInformationMapFromConfig(org.apache.hadoop.conf.Configuration);
    Code:
       0: new           #90                 // class java/util/HashMap
       3: dup
       4: invokespecial #91                 // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: ldc           #92                 // String yarn.resource-types
      11: invokevirtual #93                 // Method org/apache/hadoop/conf/Configuration.getStrings:(Ljava/lang/String;)[Ljava/lang/String;
      14: astore_2
      15: aload_2
      16: ifnull        378
      19: aload_2
      20: arraylength
      21: ifeq          378
      24: aload_2
      25: astore_3
      26: aload_3
      27: arraylength
      28: istore        4
      30: iconst_0
      31: istore        5
      33: iload         5
      35: iload         4
      37: if_icmpge     378
      40: aload_3
      41: iload         5
      43: aaload
      44: astore        6
      46: aload_0
      47: new           #9                  // class java/lang/StringBuilder
      50: dup
      51: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      54: ldc           #54                 // String yarn.resource-types.
      56: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: aload         6
      61: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: ldc           #94                 // String .units
      66: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: ldc           #95                 // String
      74: invokevirtual #96                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      77: astore        7
      79: aload_0
      80: new           #9                  // class java/lang/StringBuilder
      83: dup
      84: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      87: ldc           #54                 // String yarn.resource-types.
      89: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: aload         6
      94: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: ldc           #97                 // String .type
      99: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     105: getstatic     #45                 // Field org/apache/hadoop/yarn/api/protocolrecords/ResourceTypes.COUNTABLE:Lorg/apache/hadoop/yarn/api/protocolrecords/ResourceTypes;
     108: invokevirtual #98                 // Method org/apache/hadoop/yarn/api/protocolrecords/ResourceTypes.toString:()Ljava/lang/String;
     111: invokevirtual #96                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     114: astore        8
     116: aload_0
     117: new           #9                  // class java/lang/StringBuilder
     120: dup
     121: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
     124: ldc           #54                 // String yarn.resource-types.
     126: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: aload         6
     131: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: ldc           #56                 // String .minimum-allocation
     136: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     139: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     142: lconst_0
     143: invokevirtual #74                 // Method org/apache/hadoop/conf/Configuration.getLong:(Ljava/lang/String;J)J
     146: invokestatic  #99                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     149: astore        9
     151: aload_0
     152: new           #9                  // class java/lang/StringBuilder
     155: dup
     156: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
     159: ldc           #54                 // String yarn.resource-types.
     161: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: aload         6
     166: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     169: ldc           #62                 // String .maximum-allocation
     171: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     174: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     177: ldc2_w        #101                // long 9223372036854775807l
     180: invokevirtual #74                 // Method org/apache/hadoop/conf/Configuration.getLong:(Ljava/lang/String;J)J
     183: invokestatic  #99                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     186: astore        10
     188: aload         6
     190: ifnull        211
     193: aload         6
     195: invokevirtual #103                // Method java/lang/String.isEmpty:()Z
     198: ifne          211
     201: aload         7
     203: ifnull        211
     206: aload         8
     208: ifnonnull     244
     211: new           #16                 // class org/apache/hadoop/yarn/exceptions/YarnRuntimeException
     214: dup
     215: new           #9                  // class java/lang/StringBuilder
     218: dup
     219: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
     222: ldc           #104                // String Incomplete configuration for resource type \'
     224: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     227: aload         6
     229: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     232: ldc           #105                // String \'. One of name, units or type is configured incorrectly.
     234: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     237: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     240: invokespecial #19                 // Method org/apache/hadoop/yarn/exceptions/YarnRuntimeException."<init>":(Ljava/lang/String;)V
     243: athrow
     244: aload         8
     246: invokestatic  #106                // Method org/apache/hadoop/yarn/api/protocolrecords/ResourceTypes.valueOf:(Ljava/lang/String;)Lorg/apache/hadoop/yarn/api/protocolrecords/ResourceTypes;
     249: astore        11
     251: getstatic     #8                  // Field LOG:Lorg/slf4j/Logger;
     254: new           #9                  // class java/lang/StringBuilder
     257: dup
     258: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
     261: ldc           #41                 // String Adding resource type - name =
     263: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     266: aload         6
     268: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     271: ldc           #42                 // String , units =
     273: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     276: aload         7
     278: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     281: ldc           #44                 // String , type =
     283: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     286: aload         8
     288: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     291: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     294: invokeinterface #107,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     299: aload_1
     300: aload         6
     302: invokeinterface #7,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     307: ifeq          343
     310: new           #16                 // class org/apache/hadoop/yarn/exceptions/YarnRuntimeException
     313: dup
     314: new           #9                  // class java/lang/StringBuilder
     317: dup
     318: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
     321: ldc           #108                // String Error in config, key \'
     323: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     326: aload         6
     328: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     331: ldc           #109                // String \' specified twice
     333: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     336: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     339: invokespecial #19                 // Method org/apache/hadoop/yarn/exceptions/YarnRuntimeException."<init>":(Ljava/lang/String;)V
     342: athrow
     343: aload_1
     344: aload         6
     346: aload         6
     348: aload         7
     350: lconst_0
     351: aload         11
     353: aload         9
     355: invokevirtual #110                // Method java/lang/Long.longValue:()J
     358: aload         10
     360: invokevirtual #110                // Method java/lang/Long.longValue:()J
     363: invokestatic  #111                // Method org/apache/hadoop/yarn/api/records/ResourceInformation.newInstance:(Ljava/lang/String;Ljava/lang/String;JLorg/apache/hadoop/yarn/api/protocolrecords/ResourceTypes;JJ)Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
     366: invokeinterface #48,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     371: pop
     372: iinc          5, 1
     375: goto          33
     378: aload_1
     379: invokeinterface #112,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
     384: invokeinterface #22,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     389: astore_3
     390: aload_3
     391: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     396: ifeq          418
     399: aload_3
     400: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     405: checkcast     #2                  // class java/lang/String
     408: astore        4
     410: aload         4
     412: invokestatic  #113                // Method validateNameOfResourceNameAndThrowException:(Ljava/lang/String;)V
     415: goto          390
     418: aload_1
     419: invokestatic  #114                // Method checkSpecialResources:(Ljava/util/Map;)V
     422: aload_1
     423: invokestatic  #115                // Method addMandatoryResources:(Ljava/util/Map;)V
     426: aload_1
     427: aload_0
     428: invokestatic  #116                // Method setAllocationForMandatoryResources:(Ljava/util/Map;Lorg/apache/hadoop/conf/Configuration;)V
     431: aload_1
     432: areturn

  static void initializeResourcesMap(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: invokestatic  #84                 // Method getResourceInformationMapFromConfig:(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/Map;
       4: astore_1
       5: aload_1
       6: invokestatic  #117                // Method initializeResourcesFromResourceInformationMap:(Ljava/util/Map;)V
       9: return

  public static void initializeResourcesFromResourceInformationMap(java.util.Map<java.lang.String, org.apache.hadoop.yarn.api.records.ResourceInformation>);
    Code:
       0: aload_0
       1: invokestatic  #118                // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
       4: putstatic     #119                // Field resourceTypes:Ljava/util/Map;
       7: invokestatic  #120                // Method updateKnownResources:()V
      10: invokestatic  #121                // Method updateResourceTypeIndex:()V
      13: iconst_1
      14: putstatic     #122                // Field initializedResources:Z
      17: getstatic     #119                // Field resourceTypes:Ljava/util/Map;
      20: invokeinterface #123,  1          // InterfaceMethod java/util/Map.size:()I
      25: putstatic     #124                // Field numKnownResourceTypes:I
      28: return

  private static void updateKnownResources();
    Code:
       0: getstatic     #119                // Field resourceTypes:Ljava/util/Map;
       3: invokeinterface #123,  1          // InterfaceMethod java/util/Map.size:()I
       8: anewarray     #4                  // class org/apache/hadoop/yarn/api/records/ResourceInformation
      11: putstatic     #125                // Field resourceTypesArray:[Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
      14: iconst_2
      15: istore_0
      16: getstatic     #119                // Field resourceTypes:Ljava/util/Map;
      19: invokeinterface #86,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      24: invokeinterface #87,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      29: astore_1
      30: aload_1
      31: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          140
      39: aload_1
      40: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #4                  // class org/apache/hadoop/yarn/api/records/ResourceInformation
      48: astore_2
      49: aload_2
      50: invokevirtual #52                 // Method org/apache/hadoop/yarn/api/records/ResourceInformation.getName:()Ljava/lang/String;
      53: getstatic     #39                 // Field MEMORY:Ljava/lang/String;
      56: invokevirtual #31                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      59: ifeq          87
      62: getstatic     #125                // Field resourceTypesArray:[Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
      65: iconst_0
      66: getstatic     #119                // Field resourceTypes:Ljava/util/Map;
      69: getstatic     #39                 // Field MEMORY:Ljava/lang/String;
      72: invokeinterface #28,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      77: checkcast     #4                  // class org/apache/hadoop/yarn/api/records/ResourceInformation
      80: invokestatic  #126                // Method org/apache/hadoop/yarn/api/records/ResourceInformation.newInstance:(Lorg/apache/hadoop/yarn/api/records/ResourceInformation;)Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
      83: aastore
      84: goto          137
      87: aload_2
      88: invokevirtual #52                 // Method org/apache/hadoop/yarn/api/records/ResourceInformation.getName:()Ljava/lang/String;
      91: getstatic     #49                 // Field VCORES:Ljava/lang/String;
      94: invokevirtual #31                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      97: ifeq          125
     100: getstatic     #125                // Field resourceTypesArray:[Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
     103: iconst_1
     104: getstatic     #119                // Field resourceTypes:Ljava/util/Map;
     107: getstatic     #49                 // Field VCORES:Ljava/lang/String;
     110: invokeinterface #28,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     115: checkcast     #4                  // class org/apache/hadoop/yarn/api/records/ResourceInformation
     118: invokestatic  #126                // Method org/apache/hadoop/yarn/api/records/ResourceInformation.newInstance:(Lorg/apache/hadoop/yarn/api/records/ResourceInformation;)Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
     121: aastore
     122: goto          137
     125: getstatic     #125                // Field resourceTypesArray:[Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
     128: iload_0
     129: aload_2
     130: invokestatic  #126                // Method org/apache/hadoop/yarn/api/records/ResourceInformation.newInstance:(Lorg/apache/hadoop/yarn/api/records/ResourceInformation;)Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
     133: aastore
     134: iinc          0, 1
     137: goto          30
     140: return

  private static void updateResourceTypeIndex();
    Code:
       0: getstatic     #127                // Field RESOURCE_NAME_TO_INDEX:Ljava/util/Map;
       3: invokeinterface #128,  1          // InterfaceMethod java/util/Map.clear:()V
       8: iconst_0
       9: istore_0
      10: iload_0
      11: getstatic     #125                // Field resourceTypesArray:[Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
      14: arraylength
      15: if_icmpge     47
      18: getstatic     #125                // Field resourceTypesArray:[Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
      21: iload_0
      22: aaload
      23: astore_1
      24: getstatic     #127                // Field RESOURCE_NAME_TO_INDEX:Ljava/util/Map;
      27: aload_1
      28: invokevirtual #52                 // Method org/apache/hadoop/yarn/api/records/ResourceInformation.getName:()Ljava/lang/String;
      31: iload_0
      32: invokestatic  #129                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      35: invokeinterface #48,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      40: pop
      41: iinc          0, 1
      44: goto          10
      47: return

  public static java.util.Map<java.lang.String, java.lang.Integer> getResourceTypeIndex();
    Code:
       0: getstatic     #127                // Field RESOURCE_NAME_TO_INDEX:Ljava/util/Map;
       3: areturn

  public static java.util.Map<java.lang.String, org.apache.hadoop.yarn.api.records.ResourceInformation> getResourceTypes();
    Code:
       0: aconst_null
       1: ldc           #130                // String resource-types.xml
       3: invokestatic  #131                // Method getResourceTypes:(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Ljava/util/Map;
       6: areturn

  public static org.apache.hadoop.yarn.api.records.ResourceInformation[] getResourceTypesArray();
    Code:
       0: invokestatic  #132                // Method initializeResourceTypesIfNeeded:()V
       3: getstatic     #125                // Field resourceTypesArray:[Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
       6: areturn

  public static int getNumberOfKnownResourceTypes();
    Code:
       0: getstatic     #124                // Field numKnownResourceTypes:I
       3: ifge          9
       6: invokestatic  #132                // Method initializeResourceTypesIfNeeded:()V
       9: getstatic     #124                // Field numKnownResourceTypes:I
      12: ireturn

  private static java.util.Map<java.lang.String, org.apache.hadoop.yarn.api.records.ResourceInformation> getResourceTypes(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: ldc           #130                // String resource-types.xml
       3: invokestatic  #131                // Method getResourceTypes:(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Ljava/util/Map;
       6: areturn

  private static void initializeResourceTypesIfNeeded();
    Code:
       0: aconst_null
       1: ldc           #130                // String resource-types.xml
       3: invokestatic  #133                // Method initializeResourceTypesIfNeeded:(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)V
       6: return

  private static void initializeResourceTypesIfNeeded(org.apache.hadoop.conf.Configuration, java.lang.String);
    Code:
       0: getstatic     #122                // Field initializedResources:Z
       3: ifne          52
       6: ldc           #55                 // class org/apache/hadoop/yarn/util/resource/ResourceUtils
       8: dup
       9: astore_2
      10: monitorenter
      11: getstatic     #122                // Field initializedResources:Z
      14: ifne          40
      17: aload_0
      18: astore_3
      19: aload_3
      20: ifnonnull     31
      23: new           #53                 // class org/apache/hadoop/yarn/conf/YarnConfiguration
      26: dup
      27: invokespecial #134                // Method org/apache/hadoop/yarn/conf/YarnConfiguration."<init>":()V
      30: astore_3
      31: aload_1
      32: aload_3
      33: invokestatic  #135                // Method addResourcesFileToConf:(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V
      36: aload_3
      37: invokestatic  #136                // Method initializeResourcesMap:(Lorg/apache/hadoop/conf/Configuration;)V
      40: aload_2
      41: monitorexit
      42: goto          52
      45: astore        4
      47: aload_2
      48: monitorexit
      49: aload         4
      51: athrow
      52: getstatic     #119                // Field resourceTypes:Ljava/util/Map;
      55: invokeinterface #123,  1          // InterfaceMethod java/util/Map.size:()I
      60: putstatic     #124                // Field numKnownResourceTypes:I
      63: return
    Exception table:
       from    to  target type
          11    42    45   any
          45    49    45   any

  private static java.util.Map<java.lang.String, org.apache.hadoop.yarn.api.records.ResourceInformation> getResourceTypes(org.apache.hadoop.conf.Configuration, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #133                // Method initializeResourceTypesIfNeeded:(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)V
       5: getstatic     #119                // Field resourceTypes:Ljava/util/Map;
       8: areturn

  private static java.io.InputStream getConfInputStream(java.lang.String, org.apache.hadoop.conf.Configuration) throws java.io.IOException, org.apache.hadoop.yarn.exceptions.YarnException;
    Code:
       0: aload_1
       1: invokestatic  #137                // Method org/apache/hadoop/yarn/conf/ConfigurationProviderFactory.getConfigurationProvider:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/yarn/conf/ConfigurationProvider;
       4: astore_2
       5: aload_2
       6: aload_1
       7: invokevirtual #138                // Method org/apache/hadoop/yarn/conf/ConfigurationProvider.init:(Lorg/apache/hadoop/conf/Configuration;)V
      10: goto          23
      13: astore_3
      14: new           #140                // class java/io/IOException
      17: dup
      18: aload_3
      19: invokespecial #141                // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
      22: athrow
      23: aload_2
      24: aload_1
      25: aload_0
      26: invokevirtual #142                // Method org/apache/hadoop/yarn/conf/ConfigurationProvider.getConfigurationInputStream:(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Ljava/io/InputStream;
      29: astore_3
      30: aload_3
      31: ifnonnull     105
      34: aload_1
      35: aload_0
      36: invokevirtual #143                // Method org/apache/hadoop/conf/Configuration.getResource:(Ljava/lang/String;)Ljava/net/URL;
      39: ifnonnull     69
      42: new           #144                // class java/io/FileNotFoundException
      45: dup
      46: new           #9                  // class java/lang/StringBuilder
      49: dup
      50: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      53: ldc           #145                // String Unable to find
      55: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: aload_0
      59: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: invokespecial #146                // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
      68: athrow
      69: new           #140                // class java/io/IOException
      72: dup
      73: new           #9                  // class java/lang/StringBuilder
      76: dup
      77: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      80: ldc           #147                // String Unable to open resource types file \'
      82: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: aload_0
      86: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: ldc           #148                // String \'. Using provider
      91: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: aload_2
      95: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      98: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     101: invokespecial #149                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     104: athrow
     105: aload_3
     106: areturn
    Exception table:
       from    to  target type
           5    10    13   Class java/lang/Exception

  private static void addResourcesFileToConf(java.lang.String, org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #150                // Method getConfInputStream:(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Ljava/io/InputStream;
       5: astore_2
       6: getstatic     #8                  // Field LOG:Lorg/slf4j/Logger;
       9: invokeinterface #40,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      14: ifeq          49
      17: getstatic     #8                  // Field LOG:Lorg/slf4j/Logger;
      20: new           #9                  // class java/lang/StringBuilder
      23: dup
      24: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      27: ldc           #151                // String Found
      29: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_0
      33: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: ldc           #152                // String , adding to configuration
      38: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokeinterface #46,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      49: aload_1
      50: aload_2
      51: invokevirtual #153                // Method org/apache/hadoop/conf/Configuration.addResource:(Ljava/io/InputStream;)V
      54: goto          136
      57: astore_2
      58: getstatic     #8                  // Field LOG:Lorg/slf4j/Logger;
      61: new           #9                  // class java/lang/StringBuilder
      64: dup
      65: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      68: ldc           #154                // String Unable to find \'
      70: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: aload_0
      74: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: ldc           #18                 // String \'.
      79: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      85: invokeinterface #107,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      90: goto          136
      93: astore_2
      94: getstatic     #8                  // Field LOG:Lorg/slf4j/Logger;
      97: new           #9                  // class java/lang/StringBuilder
     100: dup
     101: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
     104: ldc           #156                // String Exception trying to read resource types configuration \'
     106: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: aload_0
     110: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: ldc           #18                 // String \'.
     115: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     121: aload_2
     122: invokeinterface #157,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     127: new           #16                 // class org/apache/hadoop/yarn/exceptions/YarnRuntimeException
     130: dup
     131: aload_2
     132: invokespecial #158                // Method org/apache/hadoop/yarn/exceptions/YarnRuntimeException."<init>":(Ljava/lang/Throwable;)V
     135: athrow
     136: return
    Exception table:
       from    to  target type
           0    54    57   Class java/io/FileNotFoundException
           0    54    93   Class java/io/IOException
           0    54    93   Class org/apache/hadoop/yarn/exceptions/YarnException

  public static synchronized void resetResourceTypes();
    Code:
       0: iconst_0
       1: putstatic     #122                // Field initializedResources:Z
       4: return

  public static java.util.Map<java.lang.String, org.apache.hadoop.yarn.api.records.ResourceInformation> resetResourceTypes(org.apache.hadoop.conf.Configuration);
    Code:
       0: ldc           #55                 // class org/apache/hadoop/yarn/util/resource/ResourceUtils
       2: dup
       3: astore_1
       4: monitorenter
       5: iconst_0
       6: putstatic     #122                // Field initializedResources:Z
       9: aload_1
      10: monitorexit
      11: goto          19
      14: astore_2
      15: aload_1
      16: monitorexit
      17: aload_2
      18: athrow
      19: aload_0
      20: invokestatic  #159                // Method getResourceTypes:(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/Map;
      23: areturn
    Exception table:
       from    to  target type
           5    11    14   any
          14    17    14   any

  public static java.lang.String getUnits(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #160                // Method parseResourceValue:(Ljava/lang/String;)[Ljava/lang/String;
       4: iconst_0
       5: aaload
       6: areturn

  public static java.lang.String[] parseResourceValue(java.lang.String);
    Code:
       0: iconst_2
       1: anewarray     #2                  // class java/lang/String
       4: astore_1
       5: iconst_0
       6: istore_2
       7: iload_2
       8: aload_0
       9: invokevirtual #161                // Method java/lang/String.length:()I
      12: if_icmpge     35
      15: aload_0
      16: iload_2
      17: invokevirtual #162                // Method java/lang/String.charAt:(I)C
      20: invokestatic  #163                // Method java/lang/Character.isAlphabetic:(I)Z
      23: ifeq          29
      26: goto          35
      29: iinc          2, 1
      32: goto          7
      35: aload_0
      36: iload_2
      37: invokevirtual #164                // Method java/lang/String.substring:(I)Ljava/lang/String;
      40: astore_3
      41: aload_3
      42: invokestatic  #165                // Method org/apache/commons/lang3/StringUtils.isAlpha:(Ljava/lang/CharSequence;)Z
      45: ifne          57
      48: aload_3
      49: ldc           #95                 // String
      51: invokevirtual #31                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      54: ifeq          72
      57: aload_1
      58: iconst_0
      59: aload_3
      60: aastore
      61: aload_1
      62: iconst_1
      63: aload_0
      64: iconst_0
      65: iload_2
      66: invokevirtual #166                // Method java/lang/String.substring:(II)Ljava/lang/String;
      69: aastore
      70: aload_1
      71: areturn
      72: new           #167                // class java/lang/IllegalArgumentException
      75: dup
      76: new           #9                  // class java/lang/StringBuilder
      79: dup
      80: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      83: ldc           #168                // String Units \'
      85: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: aload_3
      89: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: ldc           #169                // String \' contains non alphabet characters, which is not allowed.
      94: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     100: invokespecial #170                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     103: athrow

  public static long getValue(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #160                // Method parseResourceValue:(Ljava/lang/String;)[Ljava/lang/String;
       4: iconst_1
       5: aaload
       6: invokestatic  #171                // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
       9: lreturn

  public static java.util.Map<java.lang.String, org.apache.hadoop.yarn.api.records.ResourceInformation> getNodeResourceInformation(org.apache.hadoop.conf.Configuration);
    Code:
       0: getstatic     #172                // Field initializedNodeResources:Z
       3: ifne          56
       6: ldc           #55                 // class org/apache/hadoop/yarn/util/resource/ResourceUtils
       8: dup
       9: astore_1
      10: monitorenter
      11: getstatic     #172                // Field initializedNodeResources:Z
      14: ifne          46
      17: aload_0
      18: invokestatic  #173                // Method initializeNodeResourceInformation:(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/Map;
      21: astore_2
      22: aload_2
      23: invokestatic  #114                // Method checkSpecialResources:(Ljava/util/Map;)V
      26: aload_2
      27: invokestatic  #115                // Method addMandatoryResources:(Ljava/util/Map;)V
      30: aload_2
      31: aload_0
      32: invokestatic  #116                // Method setAllocationForMandatoryResources:(Ljava/util/Map;Lorg/apache/hadoop/conf/Configuration;)V
      35: aload_2
      36: invokestatic  #118                // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      39: putstatic     #174                // Field readOnlyNodeResources:Ljava/util/Map;
      42: iconst_1
      43: putstatic     #172                // Field initializedNodeResources:Z
      46: aload_1
      47: monitorexit
      48: goto          56
      51: astore_3
      52: aload_1
      53: monitorexit
      54: aload_3
      55: athrow
      56: getstatic     #174                // Field readOnlyNodeResources:Ljava/util/Map;
      59: areturn
    Exception table:
       from    to  target type
          11    48    51   any
          51    54    51   any

  private static java.util.Map<java.lang.String, org.apache.hadoop.yarn.api.records.ResourceInformation> initializeNodeResourceInformation(org.apache.hadoop.conf.Configuration);
    Code:
       0: new           #90                 // class java/util/HashMap
       3: dup
       4: invokespecial #91                 // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: ldc           #175                // String node-resources.xml
      10: aload_0
      11: invokestatic  #135                // Method addResourcesFileToConf:(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V
      14: aload_0
      15: invokevirtual #176                // Method org/apache/hadoop/conf/Configuration.iterator:()Ljava/util/Iterator;
      18: astore_2
      19: aload_2
      20: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          71
      28: aload_2
      29: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #25                 // class java/util/Map$Entry
      37: astore_3
      38: aload_3
      39: invokeinterface #26,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      44: checkcast     #2                  // class java/lang/String
      47: astore        4
      49: aload_3
      50: invokeinterface #27,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      55: checkcast     #2                  // class java/lang/String
      58: astore        5
      60: aload         4
      62: aload         5
      64: aload_1
      65: invokestatic  #177                // Method addResourceTypeInformation:(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
      68: goto          19
      71: aload_1
      72: areturn

  private static void addResourceTypeInformation(java.lang.String, java.lang.String, java.util.Map<java.lang.String, org.apache.hadoop.yarn.api.records.ResourceInformation>);
    Code:
       0: aload_0
       1: ldc           #178                // String yarn.nodemanager.resource-type.
       3: invokevirtual #179                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       6: ifeq          222
       9: getstatic     #8                  // Field LOG:Lorg/slf4j/Logger;
      12: new           #9                  // class java/lang/StringBuilder
      15: dup
      16: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #180                // String Found resource entry
      21: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: invokeinterface #107,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      36: aload_0
      37: ldc           #178                // String yarn.nodemanager.resource-type.
      39: invokevirtual #161                // Method java/lang/String.length:()I
      42: invokevirtual #164                // Method java/lang/String.substring:(I)Ljava/lang/String;
      45: astore_3
      46: aload_2
      47: aload_3
      48: invokeinterface #7,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      53: ifne          68
      56: aload_2
      57: aload_3
      58: aload_3
      59: invokestatic  #51                 // Method org/apache/hadoop/yarn/api/records/ResourceInformation.newInstance:(Ljava/lang/String;)Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
      62: invokeinterface #48,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      67: pop
      68: aload_1
      69: invokestatic  #181                // Method getUnits:(Ljava/lang/String;)Ljava/lang/String;
      72: astore        4
      74: aload_1
      75: iconst_0
      76: aload_1
      77: invokevirtual #161                // Method java/lang/String.length:()I
      80: aload         4
      82: invokevirtual #161                // Method java/lang/String.length:()I
      85: isub
      86: invokevirtual #166                // Method java/lang/String.substring:(II)Ljava/lang/String;
      89: invokestatic  #182                // Method java/lang/Long.valueOf:(Ljava/lang/String;)Ljava/lang/Long;
      92: astore        5
      94: aload_3
      95: invokestatic  #183                // Method getDefaultUnit:(Ljava/lang/String;)Ljava/lang/String;
      98: astore        6
     100: aload         4
     102: aload         6
     104: invokevirtual #31                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     107: ifne          131
     110: aload         4
     112: aload         6
     114: aload         5
     116: invokevirtual #110                // Method java/lang/Long.longValue:()J
     119: invokestatic  #184                // Method org/apache/hadoop/yarn/util/UnitsConversionUtil.convert:(Ljava/lang/String;Ljava/lang/String;J)J
     122: invokestatic  #99                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     125: astore        5
     127: aload         6
     129: astore        4
     131: aload_2
     132: aload_3
     133: invokeinterface #28,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     138: checkcast     #4                  // class org/apache/hadoop/yarn/api/records/ResourceInformation
     141: aload         5
     143: invokevirtual #110                // Method java/lang/Long.longValue:()J
     146: invokevirtual #185                // Method org/apache/hadoop/yarn/api/records/ResourceInformation.setValue:(J)V
     149: aload_2
     150: aload_3
     151: invokeinterface #28,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     156: checkcast     #4                  // class org/apache/hadoop/yarn/api/records/ResourceInformation
     159: aload         4
     161: invokevirtual #186                // Method org/apache/hadoop/yarn/api/records/ResourceInformation.setUnits:(Ljava/lang/String;)V
     164: getstatic     #8                  // Field LOG:Lorg/slf4j/Logger;
     167: invokeinterface #40,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     172: ifeq          222
     175: getstatic     #8                  // Field LOG:Lorg/slf4j/Logger;
     178: new           #9                  // class java/lang/StringBuilder
     181: dup
     182: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
     185: ldc           #187                // String Setting value for resource type
     187: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     190: aload_3
     191: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     194: ldc           #188                // String  to
     196: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     199: aload         5
     201: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     204: ldc           #189                // String  with units
     206: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     209: aload         4
     211: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     214: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     217: invokeinterface #46,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     222: return

  public static synchronized void resetNodeResources();
    Code:
       0: iconst_0
       1: putstatic     #172                // Field initializedNodeResources:Z
       4: return

  public static org.apache.hadoop.yarn.api.records.Resource getResourceTypesMinimumAllocation();
    Code:
       0: iconst_0
       1: iconst_0
       2: invokestatic  #85                 // Method org/apache/hadoop/yarn/api/records/Resource.newInstance:(II)Lorg/apache/hadoop/yarn/api/records/Resource;
       5: astore_0
       6: getstatic     #125                // Field resourceTypesArray:[Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
       9: astore_1
      10: aload_1
      11: arraylength
      12: istore_2
      13: iconst_0
      14: istore_3
      15: iload_3
      16: iload_2
      17: if_icmpge     131
      20: aload_1
      21: iload_3
      22: aaload
      23: astore        4
      25: aload         4
      27: invokevirtual #52                 // Method org/apache/hadoop/yarn/api/records/ResourceInformation.getName:()Ljava/lang/String;
      30: astore        5
      32: aload         5
      34: getstatic     #43                 // Field org/apache/hadoop/yarn/api/records/ResourceInformation.MEMORY_MB:Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
      37: invokevirtual #52                 // Method org/apache/hadoop/yarn/api/records/ResourceInformation.getName:()Ljava/lang/String;
      40: invokevirtual #31                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      43: ifeq          58
      46: aload_0
      47: aload         4
      49: invokevirtual #190                // Method org/apache/hadoop/yarn/api/records/ResourceInformation.getMinimumAllocation:()J
      52: invokevirtual #191                // Method org/apache/hadoop/yarn/api/records/Resource.setMemorySize:(J)V
      55: goto          125
      58: aload         5
      60: getstatic     #67                 // Field org/apache/hadoop/yarn/api/records/ResourceInformation.VCORES:Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
      63: invokevirtual #52                 // Method org/apache/hadoop/yarn/api/records/ResourceInformation.getName:()Ljava/lang/String;
      66: invokevirtual #31                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      69: ifeq          114
      72: aload         4
      74: invokevirtual #190                // Method org/apache/hadoop/yarn/api/records/ResourceInformation.getMinimumAllocation:()J
      77: invokestatic  #99                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      80: astore        6
      82: aload         6
      84: invokevirtual #110                // Method java/lang/Long.longValue:()J
      87: ldc2_w        #193                // long 2147483647l
      90: lcmp
      91: ifle          102
      94: ldc2_w        #193                // long 2147483647l
      97: invokestatic  #99                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     100: astore        6
     102: aload_0
     103: aload         6
     105: invokevirtual #195                // Method java/lang/Long.intValue:()I
     108: invokevirtual #196                // Method org/apache/hadoop/yarn/api/records/Resource.setVirtualCores:(I)V
     111: goto          125
     114: aload_0
     115: aload         5
     117: aload         4
     119: invokevirtual #190                // Method org/apache/hadoop/yarn/api/records/ResourceInformation.getMinimumAllocation:()J
     122: invokevirtual #89                 // Method org/apache/hadoop/yarn/api/records/Resource.setResourceValue:(Ljava/lang/String;J)V
     125: iinc          3, 1
     128: goto          15
     131: aload_0
     132: areturn

  public static org.apache.hadoop.yarn.api.records.Resource getResourceTypesMaximumAllocation();
    Code:
       0: iconst_0
       1: iconst_0
       2: invokestatic  #85                 // Method org/apache/hadoop/yarn/api/records/Resource.newInstance:(II)Lorg/apache/hadoop/yarn/api/records/Resource;
       5: astore_0
       6: getstatic     #125                // Field resourceTypesArray:[Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
       9: astore_1
      10: aload_1
      11: arraylength
      12: istore_2
      13: iconst_0
      14: istore_3
      15: iload_3
      16: iload_2
      17: if_icmpge     45
      20: aload_1
      21: iload_3
      22: aaload
      23: astore        4
      25: aload_0
      26: aload         4
      28: invokevirtual #52                 // Method org/apache/hadoop/yarn/api/records/ResourceInformation.getName:()Ljava/lang/String;
      31: aload         4
      33: invokevirtual #88                 // Method org/apache/hadoop/yarn/api/records/ResourceInformation.getMaximumAllocation:()J
      36: invokevirtual #89                 // Method org/apache/hadoop/yarn/api/records/Resource.setResourceValue:(Ljava/lang/String;J)V
      39: iinc          3, 1
      42: goto          15
      45: aload_0
      46: areturn

  public static java.lang.String getDefaultUnit(java.lang.String);
    Code:
       0: invokestatic  #197                // Method getResourceTypes:()Ljava/util/Map;
       3: aload_0
       4: invokeinterface #28,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #4                  // class org/apache/hadoop/yarn/api/records/ResourceInformation
      12: astore_1
      13: aload_1
      14: ifnull        22
      17: aload_1
      18: invokevirtual #29                 // Method org/apache/hadoop/yarn/api/records/ResourceInformation.getUnits:()Ljava/lang/String;
      21: areturn
      22: ldc           #95                 // String
      24: areturn

  public static java.util.List<org.apache.hadoop.yarn.api.records.ResourceTypeInfo> getResourcesTypeInfo();
    Code:
       0: new           #198                // class java/util/ArrayList
       3: dup
       4: invokespecial #199                // Method java/util/ArrayList."<init>":()V
       7: astore_0
       8: invokestatic  #197                // Method getResourceTypes:()Ljava/util/Map;
      11: invokeinterface #86,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      16: astore_1
      17: aload_1
      18: invokeinterface #87,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      23: astore_2
      24: aload_2
      25: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          68
      33: aload_2
      34: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #4                  // class org/apache/hadoop/yarn/api/records/ResourceInformation
      42: astore_3
      43: aload_0
      44: aload_3
      45: invokevirtual #52                 // Method org/apache/hadoop/yarn/api/records/ResourceInformation.getName:()Ljava/lang/String;
      48: aload_3
      49: invokevirtual #29                 // Method org/apache/hadoop/yarn/api/records/ResourceInformation.getUnits:()Ljava/lang/String;
      52: aload_3
      53: invokevirtual #30                 // Method org/apache/hadoop/yarn/api/records/ResourceInformation.getResourceType:()Lorg/apache/hadoop/yarn/api/protocolrecords/ResourceTypes;
      56: invokestatic  #200                // Method org/apache/hadoop/yarn/api/records/ResourceTypeInfo.newInstance:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/yarn/api/protocolrecords/ResourceTypes;)Lorg/apache/hadoop/yarn/api/records/ResourceTypeInfo;
      59: invokeinterface #201,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      64: pop
      65: goto          24
      68: aload_0
      69: areturn

  public static void reinitializeResources(java.util.List<org.apache.hadoop.yarn.api.records.ResourceTypeInfo>);
    Code:
       0: new           #90                 // class java/util/HashMap
       3: dup
       4: invokespecial #91                 // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: invokeinterface #202,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          63
      24: aload_2
      25: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #203                // class org/apache/hadoop/yarn/api/records/ResourceTypeInfo
      33: astore_3
      34: aload_1
      35: aload_3
      36: invokevirtual #204                // Method org/apache/hadoop/yarn/api/records/ResourceTypeInfo.getName:()Ljava/lang/String;
      39: aload_3
      40: invokevirtual #204                // Method org/apache/hadoop/yarn/api/records/ResourceTypeInfo.getName:()Ljava/lang/String;
      43: aload_3
      44: invokevirtual #205                // Method org/apache/hadoop/yarn/api/records/ResourceTypeInfo.getDefaultUnit:()Ljava/lang/String;
      47: aload_3
      48: invokevirtual #206                // Method org/apache/hadoop/yarn/api/records/ResourceTypeInfo.getResourceType:()Lorg/apache/hadoop/yarn/api/protocolrecords/ResourceTypes;
      51: invokestatic  #207                // Method org/apache/hadoop/yarn/api/records/ResourceInformation.newInstance:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/yarn/api/protocolrecords/ResourceTypes;)Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
      54: invokeinterface #48,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      59: pop
      60: goto          15
      63: aload_1
      64: invokestatic  #117                // Method initializeResourcesFromResourceInformationMap:(Ljava/util/Map;)V
      67: return

  public static java.util.List<org.apache.hadoop.yarn.api.records.ResourceInformation> getRequestedResourcesFromConfig(org.apache.hadoop.conf.Configuration, java.lang.String);
    Code:
       0: new           #198                // class java/util/ArrayList
       3: dup
       4: invokespecial #199                // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_0
       9: new           #9                  // class java/lang/StringBuilder
      12: dup
      13: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      16: ldc           #208                // String ^
      18: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_1
      22: invokestatic  #209                // Method java/util/regex/Pattern.quote:(Ljava/lang/String;)Ljava/lang/String;
      25: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: ldc           #210                // String (yarn\\.io/)?
      30: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: ldc           #211                // String [^.]+$
      35: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: invokevirtual #212                // Method org/apache/hadoop/conf/Configuration.getValByRegex:(Ljava/lang/String;)Ljava/util/Map;
      44: astore_3
      45: aload_3
      46: invokeinterface #21,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      51: invokeinterface #22,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      56: astore        4
      58: aload         4
      60: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      65: ifeq          274
      68: aload         4
      70: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      75: checkcast     #25                 // class java/util/Map$Entry
      78: astore        5
      80: aload         5
      82: invokeinterface #26,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      87: checkcast     #2                  // class java/lang/String
      90: aload_1
      91: invokevirtual #161                // Method java/lang/String.length:()I
      94: invokevirtual #164                // Method java/lang/String.substring:(I)Ljava/lang/String;
      97: astore        6
      99: getstatic     #213                // Field RESOURCE_REQUEST_VALUE_PATTERN:Ljava/util/regex/Pattern;
     102: aload         5
     104: invokeinterface #27,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     109: checkcast     #214                // class java/lang/CharSequence
     112: invokevirtual #79                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
     115: astore        7
     117: aload         7
     119: invokevirtual #80                 // Method java/util/regex/Matcher.matches:()Z
     122: ifne          198
     125: new           #9                  // class java/lang/StringBuilder
     128: dup
     129: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
     132: ldc           #215                // String Invalid resource request specified for property
     134: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     137: aload         5
     139: invokeinterface #26,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     144: checkcast     #2                  // class java/lang/String
     147: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     150: ldc           #216                // String : \"
     152: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     155: aload         5
     157: invokeinterface #27,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     162: checkcast     #2                  // class java/lang/String
     165: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     168: ldc           #217                // String \", expected format is: value[ ][units]
     170: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     173: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     176: astore        8
     178: getstatic     #8                  // Field LOG:Lorg/slf4j/Logger;
     181: aload         8
     183: invokeinterface #218,  2          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
     188: new           #167                // class java/lang/IllegalArgumentException
     191: dup
     192: aload         8
     194: invokespecial #170                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     197: athrow
     198: aload         7
     200: iconst_1
     201: invokevirtual #219                // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
     204: invokestatic  #171                // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
     207: lstore        8
     209: aload         7
     211: iconst_2
     212: invokevirtual #219                // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
     215: astore        10
     217: aload         10
     219: invokevirtual #103                // Method java/lang/String.isEmpty:()Z
     222: ifeq          232
     225: aload         6
     227: invokestatic  #183                // Method getDefaultUnit:(Ljava/lang/String;)Ljava/lang/String;
     230: astore        10
     232: new           #4                  // class org/apache/hadoop/yarn/api/records/ResourceInformation
     235: dup
     236: invokespecial #220                // Method org/apache/hadoop/yarn/api/records/ResourceInformation."<init>":()V
     239: astore        11
     241: aload         11
     243: aload         6
     245: invokevirtual #221                // Method org/apache/hadoop/yarn/api/records/ResourceInformation.setName:(Ljava/lang/String;)V
     248: aload         11
     250: lload         8
     252: invokevirtual #185                // Method org/apache/hadoop/yarn/api/records/ResourceInformation.setValue:(J)V
     255: aload         11
     257: aload         10
     259: invokevirtual #186                // Method org/apache/hadoop/yarn/api/records/ResourceInformation.setUnits:(Ljava/lang/String;)V
     262: aload_2
     263: aload         11
     265: invokeinterface #201,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     270: pop
     271: goto          58
     274: aload_2
     275: areturn

  public static void areMandatoryResourcesAvailable(org.apache.hadoop.yarn.api.records.Resource);
    Code:
       0: aload_0
       1: getstatic     #39                 // Field MEMORY:Ljava/lang/String;
       4: invokevirtual #222                // Method org/apache/hadoop/yarn/api/records/Resource.getResourceInformation:(Ljava/lang/String;)Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
       7: astore_1
       8: aload_1
       9: ifnull        100
      12: aload_1
      13: invokevirtual #223                // Method org/apache/hadoop/yarn/api/records/ResourceInformation.getValue:()J
      16: lstore_2
      17: lload_2
      18: ldc2_w        #193                // long 2147483647l
      21: lcmp
      22: ifle          57
      25: new           #167                // class java/lang/IllegalArgumentException
      28: dup
      29: new           #9                  // class java/lang/StringBuilder
      32: dup
      33: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #224                // String Value \'
      38: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: lload_2
      42: invokevirtual #225                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      45: ldc           #226                // String \' for resource memory is more than the maximum for an integer.
      47: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokespecial #170                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: lload_2
      58: lconst_0
      59: lcmp
      60: ifne          97
      63: new           #167                // class java/lang/IllegalArgumentException
      66: dup
      67: new           #9                  // class java/lang/StringBuilder
      70: dup
      71: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      74: ldc           #227                // String Invalid value for resource \'
      76: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: getstatic     #39                 // Field MEMORY:Ljava/lang/String;
      82: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: ldc           #228                // String \'. Value cannot be 0(zero).
      87: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      93: invokespecial #170                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      96: athrow
      97: goto          110
     100: new           #167                // class java/lang/IllegalArgumentException
     103: dup
     104: ldc           #229                // String Mandatory resource \'memory-mb\' is missing.
     106: invokespecial #170                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     109: athrow
     110: aload_0
     111: getstatic     #49                 // Field VCORES:Ljava/lang/String;
     114: invokevirtual #222                // Method org/apache/hadoop/yarn/api/records/Resource.getResourceInformation:(Ljava/lang/String;)Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
     117: astore_2
     118: aload_2
     119: ifnull        210
     122: aload_2
     123: invokevirtual #223                // Method org/apache/hadoop/yarn/api/records/ResourceInformation.getValue:()J
     126: lstore_3
     127: lload_3
     128: ldc2_w        #193                // long 2147483647l
     131: lcmp
     132: ifle          167
     135: new           #167                // class java/lang/IllegalArgumentException
     138: dup
     139: new           #9                  // class java/lang/StringBuilder
     142: dup
     143: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
     146: ldc           #224                // String Value \'
     148: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     151: lload_3
     152: invokevirtual #225                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     155: ldc           #230                // String \' for resource vcores is more than the maximum for an integer.
     157: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     160: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     163: invokespecial #170                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     166: athrow
     167: lload_3
     168: lconst_0
     169: lcmp
     170: ifne          207
     173: new           #167                // class java/lang/IllegalArgumentException
     176: dup
     177: new           #9                  // class java/lang/StringBuilder
     180: dup
     181: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
     184: ldc           #227                // String Invalid value for resource \'
     186: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     189: getstatic     #49                 // Field VCORES:Ljava/lang/String;
     192: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     195: ldc           #228                // String \'. Value cannot be 0(zero).
     197: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     200: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     203: invokespecial #170                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     206: athrow
     207: goto          220
     210: new           #167                // class java/lang/IllegalArgumentException
     213: dup
     214: ldc           #231                // String Mandatory resource \'vcores\' is missing.
     216: invokespecial #170                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     219: athrow
     220: return

  public static org.apache.hadoop.yarn.api.records.ResourceInformation[] createResourceTypesArray(java.util.Map<java.lang.String, java.lang.Long>);
    Code:
       0: invokestatic  #132                // Method initializeResourceTypesIfNeeded:()V
       3: getstatic     #119                // Field resourceTypes:Ljava/util/Map;
       6: invokeinterface #123,  1          // InterfaceMethod java/util/Map.size:()I
      11: anewarray     #4                  // class org/apache/hadoop/yarn/api/records/ResourceInformation
      14: astore_1
      15: getstatic     #127                // Field RESOURCE_NAME_TO_INDEX:Ljava/util/Map;
      18: invokeinterface #21,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      23: invokeinterface #22,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      28: astore_2
      29: aload_2
      30: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      35: ifeq          129
      38: aload_2
      39: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #25                 // class java/util/Map$Entry
      47: astore_3
      48: aload_3
      49: invokeinterface #27,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      54: checkcast     #192                // class java/lang/Integer
      57: invokevirtual #232                // Method java/lang/Integer.intValue:()I
      60: istore        4
      62: aload_0
      63: aload_3
      64: invokeinterface #26,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      69: invokeinterface #28,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      74: checkcast     #100                // class java/lang/Long
      77: astore        5
      79: aload         5
      81: ifnonnull     90
      84: lconst_0
      85: invokestatic  #99                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      88: astore        5
      90: aload_1
      91: iload         4
      93: new           #4                  // class org/apache/hadoop/yarn/api/records/ResourceInformation
      96: dup
      97: invokespecial #220                // Method org/apache/hadoop/yarn/api/records/ResourceInformation."<init>":()V
     100: aastore
     101: getstatic     #125                // Field resourceTypesArray:[Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
     104: iload         4
     106: aaload
     107: aload_1
     108: iload         4
     110: aaload
     111: invokestatic  #233                // Method org/apache/hadoop/yarn/api/records/ResourceInformation.copy:(Lorg/apache/hadoop/yarn/api/records/ResourceInformation;Lorg/apache/hadoop/yarn/api/records/ResourceInformation;)V
     114: aload_1
     115: iload         4
     117: aaload
     118: aload         5
     120: invokevirtual #110                // Method java/lang/Long.longValue:()J
     123: invokevirtual #185                // Method org/apache/hadoop/yarn/api/records/ResourceInformation.setValue:(J)V
     126: goto          29
     129: aload_1
     130: areturn

  static {};
    Code:
       0: getstatic     #43                 // Field org/apache/hadoop/yarn/api/records/ResourceInformation.MEMORY_MB:Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
       3: invokevirtual #52                 // Method org/apache/hadoop/yarn/api/records/ResourceInformation.getName:()Ljava/lang/String;
       6: putstatic     #39                 // Field MEMORY:Ljava/lang/String;
       9: getstatic     #67                 // Field org/apache/hadoop/yarn/api/records/ResourceInformation.VCORES:Lorg/apache/hadoop/yarn/api/records/ResourceInformation;
      12: invokevirtual #52                 // Method org/apache/hadoop/yarn/api/records/ResourceInformation.getName:()Ljava/lang/String;
      15: putstatic     #49                 // Field VCORES:Ljava/lang/String;
      18: ldc           #234                // String ^([0-9]+) ?([a-zA-Z]*)$
      20: invokestatic  #235                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      23: putstatic     #213                // Field RESOURCE_REQUEST_VALUE_PATTERN:Ljava/util/regex/Pattern;
      26: ldc           #236                // String ^(((\\p{Alnum}([\\p{Alnum}-]*\\p{Alnum})?\\.)*\\p{Alnum}([\\p{Alnum}-]*\\p{Alnum})?)/)?\\p{Alpha}([\\w.-]*)$
      28: invokestatic  #235                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      31: putstatic     #78                 // Field RESOURCE_NAME_PATTERN:Ljava/util/regex/Pattern;
      34: iconst_0
      35: putstatic     #122                // Field initializedResources:Z
      38: new           #237                // class java/util/concurrent/ConcurrentHashMap
      41: dup
      42: invokespecial #238                // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      45: putstatic     #127                // Field RESOURCE_NAME_TO_INDEX:Ljava/util/Map;
      48: iconst_0
      49: putstatic     #172                // Field initializedNodeResources:Z
      52: iconst_m1
      53: putstatic     #124                // Field numKnownResourceTypes:I
      56: ldc           #55                 // class org/apache/hadoop/yarn/util/resource/ResourceUtils
      58: invokestatic  #239                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      61: putstatic     #8                  // Field LOG:Lorg/slf4j/Logger;
      64: return
}
