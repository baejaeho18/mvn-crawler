Compiled from "AllocateRequest.java"
public abstract class org.apache.hadoop.yarn.api.protocolrecords.AllocateRequest {
  public org.apache.hadoop.yarn.api.protocolrecords.AllocateRequest();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static org.apache.hadoop.yarn.api.protocolrecords.AllocateRequest newInstance(int, float, java.util.List<org.apache.hadoop.yarn.api.records.ResourceRequest>, java.util.List<org.apache.hadoop.yarn.api.records.ContainerId>, org.apache.hadoop.yarn.api.records.ResourceBlacklistRequest);
    Code:
       0: invokestatic  #2                  // Method newBuilder:()Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder;
       3: iload_0
       4: invokevirtual #3                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder.responseId:(I)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder;
       7: fload_1
       8: invokevirtual #4                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder.progress:(F)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder;
      11: aload_2
      12: invokevirtual #5                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder.askList:(Ljava/util/List;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder;
      15: aload_3
      16: invokevirtual #6                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder.releaseList:(Ljava/util/List;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder;
      19: aload         4
      21: invokevirtual #7                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder.resourceBlacklistRequest:(Lorg/apache/hadoop/yarn/api/records/ResourceBlacklistRequest;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder;
      24: invokevirtual #8                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder.build:()Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateRequest;
      27: areturn

  public static org.apache.hadoop.yarn.api.protocolrecords.AllocateRequest newInstance(int, float, java.util.List<org.apache.hadoop.yarn.api.records.ResourceRequest>, java.util.List<org.apache.hadoop.yarn.api.records.ContainerId>, org.apache.hadoop.yarn.api.records.ResourceBlacklistRequest, java.lang.String);
    Code:
       0: invokestatic  #2                  // Method newBuilder:()Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder;
       3: iload_0
       4: invokevirtual #3                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder.responseId:(I)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder;
       7: fload_1
       8: invokevirtual #4                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder.progress:(F)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder;
      11: aload_2
      12: invokevirtual #5                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder.askList:(Ljava/util/List;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder;
      15: aload_3
      16: invokevirtual #6                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder.releaseList:(Ljava/util/List;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder;
      19: aload         4
      21: invokevirtual #7                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder.resourceBlacklistRequest:(Lorg/apache/hadoop/yarn/api/records/ResourceBlacklistRequest;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder;
      24: aload         5
      26: invokevirtual #9                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder.trackingUrl:(Ljava/lang/String;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder;
      29: invokevirtual #8                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder.build:()Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateRequest;
      32: areturn

  public static org.apache.hadoop.yarn.api.protocolrecords.AllocateRequest newInstance(int, float, java.util.List<org.apache.hadoop.yarn.api.records.ResourceRequest>, java.util.List<org.apache.hadoop.yarn.api.records.ContainerId>, java.util.List<org.apache.hadoop.yarn.api.records.UpdateContainerRequest>, org.apache.hadoop.yarn.api.records.ResourceBlacklistRequest);
    Code:
       0: invokestatic  #2                  // Method newBuilder:()Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder;
       3: iload_0
       4: invokevirtual #3                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder.responseId:(I)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder;
       7: fload_1
       8: invokevirtual #4                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder.progress:(F)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder;
      11: aload_2
      12: invokevirtual #5                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder.askList:(Ljava/util/List;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder;
      15: aload_3
      16: invokevirtual #6                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder.releaseList:(Ljava/util/List;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder;
      19: aload         5
      21: invokevirtual #7                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder.resourceBlacklistRequest:(Lorg/apache/hadoop/yarn/api/records/ResourceBlacklistRequest;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder;
      24: aload         4
      26: invokevirtual #10                 // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder.updateRequests:(Ljava/util/List;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder;
      29: invokevirtual #8                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder.build:()Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateRequest;
      32: areturn

  public abstract int getResponseId();

  public abstract void setResponseId(int);

  public abstract float getProgress();

  public abstract void setProgress(float);

  public abstract java.util.List<org.apache.hadoop.yarn.api.records.ResourceRequest> getAskList();

  public abstract void setAskList(java.util.List<org.apache.hadoop.yarn.api.records.ResourceRequest>);

  public abstract java.util.List<org.apache.hadoop.yarn.api.records.ContainerId> getReleaseList();

  public abstract void setReleaseList(java.util.List<org.apache.hadoop.yarn.api.records.ContainerId>);

  public abstract org.apache.hadoop.yarn.api.records.ResourceBlacklistRequest getResourceBlacklistRequest();

  public abstract void setResourceBlacklistRequest(org.apache.hadoop.yarn.api.records.ResourceBlacklistRequest);

  public abstract java.util.List<org.apache.hadoop.yarn.api.records.UpdateContainerRequest> getUpdateRequests();

  public abstract void setUpdateRequests(java.util.List<org.apache.hadoop.yarn.api.records.UpdateContainerRequest>);

  public java.util.List<org.apache.hadoop.yarn.api.records.SchedulingRequest> getSchedulingRequests();
    Code:
       0: invokestatic  #11                 // Method java/util/Collections.emptyList:()Ljava/util/List;
       3: areturn

  public void setSchedulingRequests(java.util.List<org.apache.hadoop.yarn.api.records.SchedulingRequest>);
    Code:
       0: return

  public abstract java.lang.String getTrackingUrl();

  public abstract void setTrackingUrl(java.lang.String);

  public static org.apache.hadoop.yarn.api.protocolrecords.AllocateRequest$AllocateRequestBuilder newBuilder();
    Code:
       0: new           #12                 // class org/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder
       3: dup
       4: aconst_null
       5: invokespecial #13                 // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder."<init>":(Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$1;)V
       8: areturn
}
