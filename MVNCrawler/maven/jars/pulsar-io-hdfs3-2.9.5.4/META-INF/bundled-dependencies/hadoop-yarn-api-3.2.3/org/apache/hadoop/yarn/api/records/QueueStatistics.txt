Compiled from "QueueStatistics.java"
public abstract class org.apache.hadoop.yarn.api.records.QueueStatistics {
  public org.apache.hadoop.yarn.api.records.QueueStatistics();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static org.apache.hadoop.yarn.api.records.QueueStatistics newInstance(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long);
    Code:
       0: ldc           #2                  // class org/apache/hadoop/yarn/api/records/QueueStatistics
       2: invokestatic  #3                  // Method org/apache/hadoop/yarn/util/Records.newRecord:(Ljava/lang/Class;)Ljava/lang/Object;
       5: checkcast     #2                  // class org/apache/hadoop/yarn/api/records/QueueStatistics
       8: astore        30
      10: aload         30
      12: lload_0
      13: invokevirtual #4                  // Method setNumAppsSubmitted:(J)V
      16: aload         30
      18: lload_2
      19: invokevirtual #5                  // Method setNumAppsRunning:(J)V
      22: aload         30
      24: lload         4
      26: invokevirtual #6                  // Method setNumAppsPending:(J)V
      29: aload         30
      31: lload         6
      33: invokevirtual #7                  // Method setNumAppsCompleted:(J)V
      36: aload         30
      38: lload         8
      40: invokevirtual #8                  // Method setNumAppsKilled:(J)V
      43: aload         30
      45: lload         10
      47: invokevirtual #9                  // Method setNumAppsFailed:(J)V
      50: aload         30
      52: lload         12
      54: invokevirtual #10                 // Method setNumActiveUsers:(J)V
      57: aload         30
      59: lload         14
      61: invokevirtual #11                 // Method setAvailableMemoryMB:(J)V
      64: aload         30
      66: lload         16
      68: invokevirtual #12                 // Method setAllocatedMemoryMB:(J)V
      71: aload         30
      73: lload         18
      75: invokevirtual #13                 // Method setPendingMemoryMB:(J)V
      78: aload         30
      80: lload         20
      82: invokevirtual #14                 // Method setReservedMemoryMB:(J)V
      85: aload         30
      87: lload         22
      89: invokevirtual #15                 // Method setAvailableVCores:(J)V
      92: aload         30
      94: lload         24
      96: invokevirtual #16                 // Method setAllocatedVCores:(J)V
      99: aload         30
     101: lload         26
     103: invokevirtual #17                 // Method setPendingVCores:(J)V
     106: aload         30
     108: lload         28
     110: invokevirtual #18                 // Method setReservedVCores:(J)V
     113: aload         30
     115: areturn

  public abstract long getNumAppsSubmitted();

  public abstract void setNumAppsSubmitted(long);

  public abstract long getNumAppsRunning();

  public abstract void setNumAppsRunning(long);

  public abstract long getNumAppsPending();

  public abstract void setNumAppsPending(long);

  public abstract long getNumAppsCompleted();

  public abstract void setNumAppsCompleted(long);

  public abstract long getNumAppsKilled();

  public abstract void setNumAppsKilled(long);

  public abstract long getNumAppsFailed();

  public abstract void setNumAppsFailed(long);

  public abstract long getNumActiveUsers();

  public abstract void setNumActiveUsers(long);

  public abstract long getAvailableMemoryMB();

  public abstract void setAvailableMemoryMB(long);

  public abstract long getAllocatedMemoryMB();

  public abstract void setAllocatedMemoryMB(long);

  public abstract long getPendingMemoryMB();

  public abstract void setPendingMemoryMB(long);

  public abstract long getReservedMemoryMB();

  public abstract void setReservedMemoryMB(long);

  public abstract long getAvailableVCores();

  public abstract void setAvailableVCores(long);

  public abstract long getAllocatedVCores();

  public abstract void setAllocatedVCores(long);

  public abstract long getPendingVCores();

  public abstract void setPendingVCores(long);

  public abstract long getPendingContainers();

  public abstract void setPendingContainers(long);

  public abstract long getAllocatedContainers();

  public abstract void setAllocatedContainers(long);

  public abstract long getReservedContainers();

  public abstract void setReservedContainers(long);

  public abstract long getReservedVCores();

  public abstract void setReservedVCores(long);
}
