Compiled from "URL.java"
public abstract class org.apache.hadoop.yarn.api.records.URL {
  public org.apache.hadoop.yarn.api.records.URL();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static org.apache.hadoop.yarn.api.records.URL newInstance(java.lang.String, java.lang.String, int, java.lang.String);
    Code:
       0: ldc           #2                  // class org/apache/hadoop/yarn/api/records/URL
       2: invokestatic  #3                  // Method org/apache/hadoop/yarn/util/Records.newRecord:(Ljava/lang/Class;)Ljava/lang/Object;
       5: checkcast     #2                  // class org/apache/hadoop/yarn/api/records/URL
       8: astore        4
      10: aload         4
      12: aload_0
      13: invokevirtual #4                  // Method setScheme:(Ljava/lang/String;)V
      16: aload         4
      18: aload_1
      19: invokevirtual #5                  // Method setHost:(Ljava/lang/String;)V
      22: aload         4
      24: iload_2
      25: invokevirtual #6                  // Method setPort:(I)V
      28: aload         4
      30: aload_3
      31: invokevirtual #7                  // Method setFile:(Ljava/lang/String;)V
      34: aload         4
      36: areturn

  public abstract java.lang.String getScheme();

  public abstract void setScheme(java.lang.String);

  public abstract java.lang.String getUserInfo();

  public abstract void setUserInfo(java.lang.String);

  public abstract java.lang.String getHost();

  public abstract void setHost(java.lang.String);

  public abstract int getPort();

  public abstract void setPort(int);

  public abstract java.lang.String getFile();

  public abstract void setFile(java.lang.String);

  public org.apache.hadoop.fs.Path toPath() throws java.net.URISyntaxException;
    Code:
       0: new           #8                  // class org/apache/hadoop/fs/Path
       3: dup
       4: new           #9                  // class java/net/URI
       7: dup
       8: aload_0
       9: invokevirtual #10                 // Method getScheme:()Ljava/lang/String;
      12: aload_0
      13: invokevirtual #11                 // Method getUserInfo:()Ljava/lang/String;
      16: aload_0
      17: invokevirtual #12                 // Method getHost:()Ljava/lang/String;
      20: aload_0
      21: invokevirtual #13                 // Method getPort:()I
      24: aload_0
      25: invokevirtual #14                 // Method getFile:()Ljava/lang/String;
      28: aconst_null
      29: aconst_null
      30: invokespecial #15                 // Method java/net/URI."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      33: invokespecial #16                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/net/URI;)V
      36: areturn

  public static org.apache.hadoop.yarn.api.records.URL fromURI(java.net.URI, org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_1
       1: invokestatic  #17                 // Method org/apache/hadoop/yarn/factory/providers/RecordFactoryProvider.getRecordFactory:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/yarn/factories/RecordFactory;
       4: ldc           #2                  // class org/apache/hadoop/yarn/api/records/URL
       6: invokeinterface #18,  2           // InterfaceMethod org/apache/hadoop/yarn/factories/RecordFactory.newRecordInstance:(Ljava/lang/Class;)Ljava/lang/Object;
      11: checkcast     #2                  // class org/apache/hadoop/yarn/api/records/URL
      14: astore_2
      15: aload_0
      16: invokevirtual #19                 // Method java/net/URI.getHost:()Ljava/lang/String;
      19: ifnull        30
      22: aload_2
      23: aload_0
      24: invokevirtual #19                 // Method java/net/URI.getHost:()Ljava/lang/String;
      27: invokevirtual #5                  // Method setHost:(Ljava/lang/String;)V
      30: aload_0
      31: invokevirtual #20                 // Method java/net/URI.getUserInfo:()Ljava/lang/String;
      34: ifnull        45
      37: aload_2
      38: aload_0
      39: invokevirtual #20                 // Method java/net/URI.getUserInfo:()Ljava/lang/String;
      42: invokevirtual #21                 // Method setUserInfo:(Ljava/lang/String;)V
      45: aload_2
      46: aload_0
      47: invokevirtual #22                 // Method java/net/URI.getPort:()I
      50: invokevirtual #6                  // Method setPort:(I)V
      53: aload_2
      54: aload_0
      55: invokevirtual #23                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      58: invokevirtual #4                  // Method setScheme:(Ljava/lang/String;)V
      61: aload_2
      62: aload_0
      63: invokevirtual #24                 // Method java/net/URI.getPath:()Ljava/lang/String;
      66: invokevirtual #7                  // Method setFile:(Ljava/lang/String;)V
      69: aload_2
      70: areturn

  public static org.apache.hadoop.yarn.api.records.URL fromURI(java.net.URI);
    Code:
       0: aload_0
       1: aconst_null
       2: invokestatic  #25                 // Method fromURI:(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/yarn/api/records/URL;
       5: areturn

  public static org.apache.hadoop.yarn.api.records.URL fromPath(org.apache.hadoop.fs.Path, org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
       4: aload_1
       5: invokestatic  #25                 // Method fromURI:(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/yarn/api/records/URL;
       8: areturn

  public static org.apache.hadoop.yarn.api.records.URL fromPath(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
       4: invokestatic  #27                 // Method fromURI:(Ljava/net/URI;)Lorg/apache/hadoop/yarn/api/records/URL;
       7: areturn
}
