Compiled from "ResourceTypeInfo.java"
public abstract class org.apache.hadoop.yarn.api.records.ResourceTypeInfo implements java.lang.Comparable<org.apache.hadoop.yarn.api.records.ResourceTypeInfo> {
  public org.apache.hadoop.yarn.api.records.ResourceTypeInfo();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public abstract java.lang.String getName();

  public abstract void setName(java.lang.String);

  public abstract java.lang.String getDefaultUnit();

  public abstract void setDefaultUnit(java.lang.String);

  public abstract org.apache.hadoop.yarn.api.protocolrecords.ResourceTypes getResourceType();

  public abstract void setResourceType(org.apache.hadoop.yarn.api.protocolrecords.ResourceTypes);

  public static org.apache.hadoop.yarn.api.records.ResourceTypeInfo newInstance(org.apache.hadoop.yarn.api.records.ResourceTypeInfo);
    Code:
       0: ldc           #2                  // class org/apache/hadoop/yarn/api/records/ResourceTypeInfo
       2: invokestatic  #3                  // Method org/apache/hadoop/yarn/util/Records.newRecord:(Ljava/lang/Class;)Ljava/lang/Object;
       5: checkcast     #2                  // class org/apache/hadoop/yarn/api/records/ResourceTypeInfo
       8: astore_1
       9: aload_0
      10: aload_1
      11: invokestatic  #4                  // Method copy:(Lorg/apache/hadoop/yarn/api/records/ResourceTypeInfo;Lorg/apache/hadoop/yarn/api/records/ResourceTypeInfo;)V
      14: aload_1
      15: areturn

  public static org.apache.hadoop.yarn.api.records.ResourceTypeInfo newInstance(java.lang.String, java.lang.String, org.apache.hadoop.yarn.api.protocolrecords.ResourceTypes);
    Code:
       0: ldc           #2                  // class org/apache/hadoop/yarn/api/records/ResourceTypeInfo
       2: invokestatic  #3                  // Method org/apache/hadoop/yarn/util/Records.newRecord:(Ljava/lang/Class;)Ljava/lang/Object;
       5: checkcast     #2                  // class org/apache/hadoop/yarn/api/records/ResourceTypeInfo
       8: astore_3
       9: aload_3
      10: aload_0
      11: invokevirtual #5                  // Method setName:(Ljava/lang/String;)V
      14: aload_3
      15: aload_2
      16: invokevirtual #6                  // Method setResourceType:(Lorg/apache/hadoop/yarn/api/protocolrecords/ResourceTypes;)V
      19: aload_3
      20: aload_1
      21: invokevirtual #7                  // Method setDefaultUnit:(Ljava/lang/String;)V
      24: aload_3
      25: areturn

  public static org.apache.hadoop.yarn.api.records.ResourceTypeInfo newInstance(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #8                  // Field org/apache/hadoop/yarn/api/protocolrecords/ResourceTypes.COUNTABLE:Lorg/apache/hadoop/yarn/api/protocolrecords/ResourceTypes;
       5: invokestatic  #9                  // Method newInstance:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/yarn/api/protocolrecords/ResourceTypes;)Lorg/apache/hadoop/yarn/api/records/ResourceTypeInfo;
       8: areturn

  public static org.apache.hadoop.yarn.api.records.ResourceTypeInfo newInstance(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #10                 // String
       3: invokestatic  #11                 // Method newInstance:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/yarn/api/records/ResourceTypeInfo;
       6: areturn

  public static void copy(org.apache.hadoop.yarn.api.records.ResourceTypeInfo, org.apache.hadoop.yarn.api.records.ResourceTypeInfo);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #12                 // Method getName:()Ljava/lang/String;
       5: invokevirtual #5                  // Method setName:(Ljava/lang/String;)V
       8: aload_1
       9: aload_0
      10: invokevirtual #13                 // Method getResourceType:()Lorg/apache/hadoop/yarn/api/protocolrecords/ResourceTypes;
      13: invokevirtual #6                  // Method setResourceType:(Lorg/apache/hadoop/yarn/api/protocolrecords/ResourceTypes;)V
      16: aload_1
      17: aload_0
      18: invokevirtual #14                 // Method getDefaultUnit:()Ljava/lang/String;
      21: invokevirtual #7                  // Method setDefaultUnit:(Ljava/lang/String;)V
      24: return

  public java.lang.String toString();
    Code:
       0: new           #15                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokevirtual #12                 // Method getName:()Ljava/lang/String;
      13: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: pop
      17: aload_0
      18: invokevirtual #14                 // Method getDefaultUnit:()Ljava/lang/String;
      21: invokevirtual #18                 // Method java/lang/String.isEmpty:()Z
      24: ifne          46
      27: aload_1
      28: ldc           #19                 // String  (unit=
      30: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_0
      34: invokevirtual #14                 // Method getDefaultUnit:()Ljava/lang/String;
      37: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: ldc           #20                 // String )
      42: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: pop
      46: aload_1
      47: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: instanceof    #2                  // class org/apache/hadoop/yarn/api/records/ResourceTypeInfo
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_1
      23: checkcast     #2                  // class org/apache/hadoop/yarn/api/records/ResourceTypeInfo
      26: astore_2
      27: aload_0
      28: invokevirtual #12                 // Method getName:()Ljava/lang/String;
      31: aload_2
      32: invokevirtual #12                 // Method getName:()Ljava/lang/String;
      35: invokevirtual #22                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      38: ifeq          73
      41: aload_0
      42: invokevirtual #13                 // Method getResourceType:()Lorg/apache/hadoop/yarn/api/protocolrecords/ResourceTypes;
      45: aload_2
      46: invokevirtual #13                 // Method getResourceType:()Lorg/apache/hadoop/yarn/api/protocolrecords/ResourceTypes;
      49: invokevirtual #23                 // Method org/apache/hadoop/yarn/api/protocolrecords/ResourceTypes.equals:(Ljava/lang/Object;)Z
      52: ifeq          73
      55: aload_0
      56: invokevirtual #14                 // Method getDefaultUnit:()Ljava/lang/String;
      59: aload_2
      60: invokevirtual #14                 // Method getDefaultUnit:()Ljava/lang/String;
      63: invokevirtual #22                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      66: ifeq          73
      69: iconst_1
      70: goto          74
      73: iconst_0
      74: ireturn

  public int hashCode();
    Code:
       0: bipush        47
       2: istore_1
       3: bipush        47
       5: aload_0
       6: invokevirtual #12                 // Method getName:()Ljava/lang/String;
       9: invokevirtual #24                 // Method java/lang/String.hashCode:()I
      12: iadd
      13: istore_2
      14: bipush        47
      16: iload_2
      17: imul
      18: aload_0
      19: invokevirtual #13                 // Method getResourceType:()Lorg/apache/hadoop/yarn/api/protocolrecords/ResourceTypes;
      22: invokevirtual #25                 // Method org/apache/hadoop/yarn/api/protocolrecords/ResourceTypes.hashCode:()I
      25: iadd
      26: istore_2
      27: iload_2
      28: ireturn

  public int compareTo(org.apache.hadoop.yarn.api.records.ResourceTypeInfo);
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method getName:()Ljava/lang/String;
       4: aload_1
       5: invokevirtual #12                 // Method getName:()Ljava/lang/String;
       8: invokevirtual #26                 // Method java/lang/String.compareTo:(Ljava/lang/String;)I
      11: istore_2
      12: iload_2
      13: ifne          44
      16: aload_0
      17: invokevirtual #14                 // Method getDefaultUnit:()Ljava/lang/String;
      20: aload_1
      21: invokevirtual #14                 // Method getDefaultUnit:()Ljava/lang/String;
      24: invokevirtual #26                 // Method java/lang/String.compareTo:(Ljava/lang/String;)I
      27: istore_2
      28: iload_2
      29: ifne          44
      32: aload_0
      33: invokevirtual #13                 // Method getResourceType:()Lorg/apache/hadoop/yarn/api/protocolrecords/ResourceTypes;
      36: aload_1
      37: invokevirtual #13                 // Method getResourceType:()Lorg/apache/hadoop/yarn/api/protocolrecords/ResourceTypes;
      40: invokevirtual #27                 // Method org/apache/hadoop/yarn/api/protocolrecords/ResourceTypes.compareTo:(Ljava/lang/Enum;)I
      43: istore_2
      44: iload_2
      45: ireturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2                  // class org/apache/hadoop/yarn/api/records/ResourceTypeInfo
       5: invokevirtual #28                 // Method compareTo:(Lorg/apache/hadoop/yarn/api/records/ResourceTypeInfo;)I
       8: ireturn
}
