Compiled from "NodeLabel.java"
public abstract class org.apache.hadoop.yarn.api.records.NodeLabel implements java.lang.Comparable<org.apache.hadoop.yarn.api.records.NodeLabel> {
  public static final java.lang.String DEFAULT_NODE_LABEL_PARTITION;

  public static final java.lang.String NODE_LABEL_EXPRESSION_NOT_SET;

  public static final boolean DEFAULT_NODE_LABEL_EXCLUSIVITY;

  public org.apache.hadoop.yarn.api.records.NodeLabel();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static org.apache.hadoop.yarn.api.records.NodeLabel newInstance(java.lang.String);
    Code:
       0: aload_0
       1: iconst_1
       2: invokestatic  #3                  // Method newInstance:(Ljava/lang/String;Z)Lorg/apache/hadoop/yarn/api/records/NodeLabel;
       5: areturn

  public static org.apache.hadoop.yarn.api.records.NodeLabel newInstance(java.lang.String, boolean);
    Code:
       0: ldc           #2                  // class org/apache/hadoop/yarn/api/records/NodeLabel
       2: invokestatic  #4                  // Method org/apache/hadoop/yarn/util/Records.newRecord:(Ljava/lang/Class;)Ljava/lang/Object;
       5: checkcast     #2                  // class org/apache/hadoop/yarn/api/records/NodeLabel
       8: astore_2
       9: aload_2
      10: aload_0
      11: invokevirtual #5                  // Method setName:(Ljava/lang/String;)V
      14: aload_2
      15: iload_1
      16: invokevirtual #6                  // Method setExclusivity:(Z)V
      19: aload_2
      20: areturn

  public abstract java.lang.String getName();

  public abstract void setName(java.lang.String);

  public abstract boolean isExclusive();

  public abstract void setExclusivity(boolean);

  public int compareTo(org.apache.hadoop.yarn.api.records.NodeLabel);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method getName:()Ljava/lang/String;
       4: aload_1
       5: invokevirtual #7                  // Method getName:()Ljava/lang/String;
       8: invokevirtual #8                  // Method java/lang/String.compareTo:(Ljava/lang/String;)I
      11: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class org/apache/hadoop/yarn/api/records/NodeLabel
       4: ifeq          43
       7: aload_1
       8: checkcast     #2                  // class org/apache/hadoop/yarn/api/records/NodeLabel
      11: astore_2
      12: aload_2
      13: invokevirtual #7                  // Method getName:()Ljava/lang/String;
      16: aload_0
      17: invokevirtual #7                  // Method getName:()Ljava/lang/String;
      20: invokevirtual #9                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      23: ifeq          41
      26: aload_2
      27: invokevirtual #10                 // Method isExclusive:()Z
      30: aload_0
      31: invokevirtual #10                 // Method isExclusive:()Z
      34: if_icmpne     41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: ireturn
      43: iconst_0
      44: ireturn

  public java.lang.String toString();
    Code:
       0: new           #11                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #13                 // String <
      11: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_1
      16: aload_0
      17: invokevirtual #7                  // Method getName:()Ljava/lang/String;
      20: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: pop
      24: aload_1
      25: ldc           #15                 // String :exclusivity=
      27: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: pop
      31: aload_1
      32: aload_0
      33: invokevirtual #10                 // Method isExclusive:()Z
      36: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      39: pop
      40: aload_1
      41: ldc           #17                 // String >
      43: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: pop
      47: aload_1
      48: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method getName:()Ljava/lang/String;
       4: invokevirtual #19                 // Method java/lang/String.hashCode:()I
       7: bipush        16
       9: ishl
      10: aload_0
      11: invokevirtual #10                 // Method isExclusive:()Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: iadd
      23: ireturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2                  // class org/apache/hadoop/yarn/api/records/NodeLabel
       5: invokevirtual #20                 // Method compareTo:(Lorg/apache/hadoop/yarn/api/records/NodeLabel;)I
       8: ireturn
}
