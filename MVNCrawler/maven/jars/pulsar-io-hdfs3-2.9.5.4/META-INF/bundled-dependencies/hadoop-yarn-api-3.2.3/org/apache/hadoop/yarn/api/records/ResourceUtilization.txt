Compiled from "ResourceUtilization.java"
public abstract class org.apache.hadoop.yarn.api.records.ResourceUtilization implements java.lang.Comparable<org.apache.hadoop.yarn.api.records.ResourceUtilization> {
  public org.apache.hadoop.yarn.api.records.ResourceUtilization();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static org.apache.hadoop.yarn.api.records.ResourceUtilization newInstance(int, int, float);
    Code:
       0: ldc           #2                  // class org/apache/hadoop/yarn/api/records/ResourceUtilization
       2: invokestatic  #3                  // Method org/apache/hadoop/yarn/util/Records.newRecord:(Ljava/lang/Class;)Ljava/lang/Object;
       5: checkcast     #2                  // class org/apache/hadoop/yarn/api/records/ResourceUtilization
       8: astore_3
       9: aload_3
      10: iload_0
      11: invokevirtual #4                  // Method setPhysicalMemory:(I)V
      14: aload_3
      15: iload_1
      16: invokevirtual #5                  // Method setVirtualMemory:(I)V
      19: aload_3
      20: fload_2
      21: invokevirtual #6                  // Method setCPU:(F)V
      24: aload_3
      25: areturn

  public static org.apache.hadoop.yarn.api.records.ResourceUtilization newInstance(org.apache.hadoop.yarn.api.records.ResourceUtilization);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method getPhysicalMemory:()I
       4: aload_0
       5: invokevirtual #8                  // Method getVirtualMemory:()I
       8: aload_0
       9: invokevirtual #9                  // Method getCPU:()F
      12: invokestatic  #10                 // Method newInstance:(IIF)Lorg/apache/hadoop/yarn/api/records/ResourceUtilization;
      15: areturn

  public abstract int getVirtualMemory();

  public abstract void setVirtualMemory(int);

  public abstract int getPhysicalMemory();

  public abstract void setPhysicalMemory(int);

  public abstract float getCPU();

  public abstract void setCPU(float);

  public int hashCode();
    Code:
       0: ldc           #11                 // int 263167
       2: istore_1
       3: sipush        3571
       6: istore_2
       7: ldc           #11                 // int 263167
       9: iload_2
      10: imul
      11: aload_0
      12: invokevirtual #8                  // Method getVirtualMemory:()I
      15: iadd
      16: istore_2
      17: ldc           #11                 // int 263167
      19: iload_2
      20: imul
      21: aload_0
      22: invokevirtual #7                  // Method getPhysicalMemory:()I
      25: iadd
      26: istore_2
      27: bipush        31
      29: iload_2
      30: imul
      31: aload_0
      32: invokevirtual #9                  // Method getCPU:()F
      35: invokestatic  #12                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      38: invokevirtual #13                 // Method java/lang/Float.hashCode:()I
      41: iadd
      42: istore_2
      43: iload_2
      44: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: instanceof    #2                  // class org/apache/hadoop/yarn/api/records/ResourceUtilization
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_1
      23: checkcast     #2                  // class org/apache/hadoop/yarn/api/records/ResourceUtilization
      26: astore_2
      27: aload_0
      28: invokevirtual #8                  // Method getVirtualMemory:()I
      31: aload_2
      32: invokevirtual #8                  // Method getVirtualMemory:()I
      35: if_icmpne     61
      38: aload_0
      39: invokevirtual #7                  // Method getPhysicalMemory:()I
      42: aload_2
      43: invokevirtual #7                  // Method getPhysicalMemory:()I
      46: if_icmpne     61
      49: aload_0
      50: invokevirtual #9                  // Method getCPU:()F
      53: aload_2
      54: invokevirtual #9                  // Method getCPU:()F
      57: fcmpl
      58: ifeq          63
      61: iconst_0
      62: ireturn
      63: iconst_1
      64: ireturn

  public java.lang.String toString();
    Code:
       0: new           #14                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #16                 // String <pmem:
       9: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #7                  // Method getPhysicalMemory:()I
      16: invokevirtual #18                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      19: ldc           #19                 // String , vmem:
      21: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #8                  // Method getVirtualMemory:()I
      28: invokevirtual #18                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: ldc           #20                 // String , vCores:
      33: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokevirtual #9                  // Method getCPU:()F
      40: invokevirtual #21                 // Method java/lang/StringBuilder.append:(F)Ljava/lang/StringBuilder;
      43: ldc           #22                 // String >
      45: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: areturn

  public void addTo(int, int, float);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #7                  // Method getPhysicalMemory:()I
       5: iload_1
       6: iadd
       7: invokevirtual #4                  // Method setPhysicalMemory:(I)V
      10: aload_0
      11: aload_0
      12: invokevirtual #8                  // Method getVirtualMemory:()I
      15: iload_2
      16: iadd
      17: invokevirtual #5                  // Method setVirtualMemory:(I)V
      20: aload_0
      21: aload_0
      22: invokevirtual #9                  // Method getCPU:()F
      25: fload_3
      26: fadd
      27: invokevirtual #6                  // Method setCPU:(F)V
      30: return

  public void subtractFrom(int, int, float);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #7                  // Method getPhysicalMemory:()I
       5: iload_1
       6: isub
       7: invokevirtual #4                  // Method setPhysicalMemory:(I)V
      10: aload_0
      11: aload_0
      12: invokevirtual #8                  // Method getVirtualMemory:()I
      15: iload_2
      16: isub
      17: invokevirtual #5                  // Method setVirtualMemory:(I)V
      20: aload_0
      21: aload_0
      22: invokevirtual #9                  // Method getCPU:()F
      25: fload_3
      26: fsub
      27: invokevirtual #6                  // Method setCPU:(F)V
      30: return
}
