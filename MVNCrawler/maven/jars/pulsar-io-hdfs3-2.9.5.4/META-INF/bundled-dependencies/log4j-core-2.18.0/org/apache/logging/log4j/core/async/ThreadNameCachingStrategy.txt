Compiled from "ThreadNameCachingStrategy.java"
public abstract class org.apache.logging.log4j.core.async.ThreadNameCachingStrategy extends java.lang.Enum<org.apache.logging.log4j.core.async.ThreadNameCachingStrategy> {
  public static final org.apache.logging.log4j.core.async.ThreadNameCachingStrategy CACHED;

  public static final org.apache.logging.log4j.core.async.ThreadNameCachingStrategy UNCACHED;

  private static final org.apache.logging.log4j.status.StatusLogger LOGGER;

  private static final java.lang.ThreadLocal<java.lang.String> THREADLOCAL_NAME;

  static final org.apache.logging.log4j.core.async.ThreadNameCachingStrategy DEFAULT_STRATEGY;

  private static final org.apache.logging.log4j.core.async.ThreadNameCachingStrategy[] $VALUES;

  public static org.apache.logging.log4j.core.async.ThreadNameCachingStrategy[] values();
    Code:
       0: getstatic     #3                  // Field $VALUES:[Lorg/apache/logging/log4j/core/async/ThreadNameCachingStrategy;
       3: invokevirtual #4                  // Method "[Lorg/apache/logging/log4j/core/async/ThreadNameCachingStrategy;".clone:()Ljava/lang/Object;
       6: checkcast     #5                  // class "[Lorg/apache/logging/log4j/core/async/ThreadNameCachingStrategy;"
       9: areturn

  public static org.apache.logging.log4j.core.async.ThreadNameCachingStrategy valueOf(java.lang.String);
    Code:
       0: ldc           #6                  // class org/apache/logging/log4j/core/async/ThreadNameCachingStrategy
       2: aload_0
       3: invokestatic  #7                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #6                  // class org/apache/logging/log4j/core/async/ThreadNameCachingStrategy
       9: areturn

  private org.apache.logging.log4j.core.async.ThreadNameCachingStrategy();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #8                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: return

  abstract java.lang.String getThreadName();

  public static org.apache.logging.log4j.core.async.ThreadNameCachingStrategy create();
    Code:
       0: invokestatic  #9                  // Method org/apache/logging/log4j/util/PropertiesUtil.getProperties:()Lorg/apache/logging/log4j/util/PropertiesUtil;
       3: ldc           #10                 // String AsyncLogger.ThreadNameStrategy
       5: invokevirtual #11                 // Method org/apache/logging/log4j/util/PropertiesUtil.getStringProperty:(Ljava/lang/String;)Ljava/lang/String;
       8: astore_0
       9: aload_0
      10: ifnull        20
      13: aload_0
      14: invokestatic  #12                 // Method valueOf:(Ljava/lang/String;)Lorg/apache/logging/log4j/core/async/ThreadNameCachingStrategy;
      17: goto          23
      20: getstatic     #13                 // Field DEFAULT_STRATEGY:Lorg/apache/logging/log4j/core/async/ThreadNameCachingStrategy;
      23: astore_1
      24: getstatic     #14                 // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
      27: ldc           #15                 // String AsyncLogger.ThreadNameStrategy={} (user specified {}, default is {})
      29: aload_1
      30: invokevirtual #16                 // Method name:()Ljava/lang/String;
      33: aload_0
      34: getstatic     #13                 // Field DEFAULT_STRATEGY:Lorg/apache/logging/log4j/core/async/ThreadNameCachingStrategy;
      37: invokevirtual #16                 // Method name:()Ljava/lang/String;
      40: invokevirtual #17                 // Method org/apache/logging/log4j/status/StatusLogger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      43: aload_1
      44: areturn
      45: astore_1
      46: getstatic     #14                 // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
      49: ldc           #19                 // String Using AsyncLogger.ThreadNameStrategy.{}: \'{}\' not valid: {}
      51: getstatic     #13                 // Field DEFAULT_STRATEGY:Lorg/apache/logging/log4j/core/async/ThreadNameCachingStrategy;
      54: invokevirtual #16                 // Method name:()Ljava/lang/String;
      57: aload_0
      58: aload_1
      59: invokevirtual #20                 // Method java/lang/Exception.toString:()Ljava/lang/String;
      62: invokevirtual #17                 // Method org/apache/logging/log4j/status/StatusLogger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      65: getstatic     #13                 // Field DEFAULT_STRATEGY:Lorg/apache/logging/log4j/core/async/ThreadNameCachingStrategy;
      68: areturn
    Exception table:
       from    to  target type
           9    44    45   Class java/lang/Exception

  static boolean isAllocatingThreadGetName();
    Code:
       0: getstatic     #21                 // Field org/apache/logging/log4j/util/Constants.JAVA_MAJOR_VERSION:I
       3: bipush        8
       5: if_icmpne     66
       8: ldc           #22                 // String (\\d+)\\.(\\d+)\\.(\\d+)_(\\d+)
      10: invokestatic  #23                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      13: astore_0
      14: aload_0
      15: ldc           #24                 // String java.version
      17: invokestatic  #25                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      20: invokevirtual #26                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      23: astore_1
      24: aload_1
      25: invokevirtual #27                 // Method java/util/regex/Matcher.matches:()Z
      28: ifeq          61
      31: aload_1
      32: iconst_3
      33: invokevirtual #28                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      36: invokestatic  #29                 // Method org/apache/logging/log4j/core/util/Integers.parseInt:(Ljava/lang/String;)I
      39: ifne          59
      42: aload_1
      43: iconst_4
      44: invokevirtual #28                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      47: invokestatic  #29                 // Method org/apache/logging/log4j/core/util/Integers.parseInt:(Ljava/lang/String;)I
      50: bipush        102
      52: if_icmpge     59
      55: iconst_1
      56: goto          60
      59: iconst_0
      60: ireturn
      61: iconst_1
      62: ireturn
      63: astore_0
      64: iconst_1
      65: ireturn
      66: getstatic     #21                 // Field org/apache/logging/log4j/util/Constants.JAVA_MAJOR_VERSION:I
      69: bipush        8
      71: if_icmpge     78
      74: iconst_1
      75: goto          79
      78: iconst_0
      79: ireturn
    Exception table:
       from    to  target type
           8    60    63   Class java/lang/Exception
          61    62    63   Class java/lang/Exception

  org.apache.logging.log4j.core.async.ThreadNameCachingStrategy(java.lang.String, int, org.apache.logging.log4j.core.async.ThreadNameCachingStrategy$1);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #2                  // Method "<init>":(Ljava/lang/String;I)V
       6: return

  static java.lang.ThreadLocal access$100();
    Code:
       0: getstatic     #1                  // Field THREADLOCAL_NAME:Ljava/lang/ThreadLocal;
       3: areturn

  static {};
    Code:
       0: new           #30                 // class org/apache/logging/log4j/core/async/ThreadNameCachingStrategy$1
       3: dup
       4: ldc           #31                 // String CACHED
       6: iconst_0
       7: invokespecial #32                 // Method org/apache/logging/log4j/core/async/ThreadNameCachingStrategy$1."<init>":(Ljava/lang/String;I)V
      10: putstatic     #33                 // Field CACHED:Lorg/apache/logging/log4j/core/async/ThreadNameCachingStrategy;
      13: new           #34                 // class org/apache/logging/log4j/core/async/ThreadNameCachingStrategy$2
      16: dup
      17: ldc           #35                 // String UNCACHED
      19: iconst_1
      20: invokespecial #36                 // Method org/apache/logging/log4j/core/async/ThreadNameCachingStrategy$2."<init>":(Ljava/lang/String;I)V
      23: putstatic     #37                 // Field UNCACHED:Lorg/apache/logging/log4j/core/async/ThreadNameCachingStrategy;
      26: iconst_2
      27: anewarray     #6                  // class org/apache/logging/log4j/core/async/ThreadNameCachingStrategy
      30: dup
      31: iconst_0
      32: getstatic     #33                 // Field CACHED:Lorg/apache/logging/log4j/core/async/ThreadNameCachingStrategy;
      35: aastore
      36: dup
      37: iconst_1
      38: getstatic     #37                 // Field UNCACHED:Lorg/apache/logging/log4j/core/async/ThreadNameCachingStrategy;
      41: aastore
      42: putstatic     #3                  // Field $VALUES:[Lorg/apache/logging/log4j/core/async/ThreadNameCachingStrategy;
      45: invokestatic  #38                 // Method org/apache/logging/log4j/status/StatusLogger.getLogger:()Lorg/apache/logging/log4j/status/StatusLogger;
      48: putstatic     #14                 // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
      51: new           #39                 // class java/lang/ThreadLocal
      54: dup
      55: invokespecial #40                 // Method java/lang/ThreadLocal."<init>":()V
      58: putstatic     #1                  // Field THREADLOCAL_NAME:Ljava/lang/ThreadLocal;
      61: invokestatic  #41                 // Method isAllocatingThreadGetName:()Z
      64: ifeq          73
      67: getstatic     #33                 // Field CACHED:Lorg/apache/logging/log4j/core/async/ThreadNameCachingStrategy;
      70: goto          76
      73: getstatic     #37                 // Field UNCACHED:Lorg/apache/logging/log4j/core/async/ThreadNameCachingStrategy;
      76: putstatic     #13                 // Field DEFAULT_STRATEGY:Lorg/apache/logging/log4j/core/async/ThreadNameCachingStrategy;
      79: return
}
