Compiled from "KafkaAppender.java"
public final class org.apache.logging.log4j.core.appender.mom.kafka.KafkaAppender extends org.apache.logging.log4j.core.appender.AbstractAppender {
  private static final java.lang.String[] KAFKA_CLIENT_PACKAGES;

  private final java.lang.Integer retryCount;

  private final org.apache.logging.log4j.core.appender.mom.kafka.KafkaManager manager;

  public static org.apache.logging.log4j.core.appender.mom.kafka.KafkaAppender createAppender(org.apache.logging.log4j.core.Layout<? extends java.io.Serializable>, org.apache.logging.log4j.core.Filter, java.lang.String, boolean, java.lang.String, org.apache.logging.log4j.core.config.Property[], org.apache.logging.log4j.core.config.Configuration, java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     16
       4: getstatic     #3                  // Field org/apache/logging/log4j/core/AbstractLifeCycle.LOGGER:Lorg/apache/logging/log4j/Logger;
       7: ldc           #4                  // String No layout provided for KafkaAppender
       9: invokeinterface #5,  2            // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;)V
      14: aconst_null
      15: areturn
      16: aload         6
      18: invokeinterface #6,  1            // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.getLoggerContext:()Lorg/apache/logging/log4j/core/LoggerContext;
      23: aload_2
      24: aload         4
      26: iconst_1
      27: aload         5
      29: aload         7
      31: invokestatic  #7                  // Method org/apache/logging/log4j/core/appender/mom/kafka/KafkaManager.getManager:(Lorg/apache/logging/log4j/core/LoggerContext;Ljava/lang/String;Ljava/lang/String;Z[Lorg/apache/logging/log4j/core/config/Property;Ljava/lang/String;)Lorg/apache/logging/log4j/core/appender/mom/kafka/KafkaManager;
      34: astore        8
      36: new           #8                  // class org/apache/logging/log4j/core/appender/mom/kafka/KafkaAppender
      39: dup
      40: aload_2
      41: aload_0
      42: aload_1
      43: iload_3
      44: aload         8
      46: aconst_null
      47: aconst_null
      48: invokespecial #1                  // Method "<init>":(Ljava/lang/String;Lorg/apache/logging/log4j/core/Layout;Lorg/apache/logging/log4j/core/Filter;ZLorg/apache/logging/log4j/core/appender/mom/kafka/KafkaManager;[Lorg/apache/logging/log4j/core/config/Property;Ljava/lang/Integer;)V
      51: areturn

  private static boolean isRecursive(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: getstatic     #9                  // Field KAFKA_CLIENT_PACKAGES:[Ljava/lang/String;
       3: invokestatic  #10                 // InterfaceMethod java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;
       6: aload_0
       7: invokedynamic #11,  0             // InvokeDynamic #0:test:(Lorg/apache/logging/log4j/core/LogEvent;)Ljava/util/function/Predicate;
      12: invokeinterface #12,  2           // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z
      17: ireturn

  public static <B extends org.apache.logging.log4j.core.appender.mom.kafka.KafkaAppender$Builder<B>> B newBuilder();
    Code:
       0: new           #13                 // class org/apache/logging/log4j/core/appender/mom/kafka/KafkaAppender$Builder
       3: dup
       4: invokespecial #14                 // Method org/apache/logging/log4j/core/appender/mom/kafka/KafkaAppender$Builder."<init>":()V
       7: invokevirtual #15                 // Method org/apache/logging/log4j/core/appender/mom/kafka/KafkaAppender$Builder.asBuilder:()Lorg/apache/logging/log4j/core/filter/AbstractFilterable$Builder;
      10: checkcast     #13                 // class org/apache/logging/log4j/core/appender/mom/kafka/KafkaAppender$Builder
      13: areturn

  private org.apache.logging.log4j.core.appender.mom.kafka.KafkaAppender(java.lang.String, org.apache.logging.log4j.core.Layout<? extends java.io.Serializable>, org.apache.logging.log4j.core.Filter, boolean, org.apache.logging.log4j.core.appender.mom.kafka.KafkaManager, org.apache.logging.log4j.core.config.Property[], java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: aload_2
       4: iload         4
       6: aload         6
       8: invokespecial #16                 // Method org/apache/logging/log4j/core/appender/AbstractAppender."<init>":(Ljava/lang/String;Lorg/apache/logging/log4j/core/Filter;Lorg/apache/logging/log4j/core/Layout;Z[Lorg/apache/logging/log4j/core/config/Property;)V
      11: aload_0
      12: aload         5
      14: ldc           #17                 // String manager
      16: invokestatic  #18                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      19: checkcast     #19                 // class org/apache/logging/log4j/core/appender/mom/kafka/KafkaManager
      22: putfield      #20                 // Field manager:Lorg/apache/logging/log4j/core/appender/mom/kafka/KafkaManager;
      25: aload_0
      26: aload         7
      28: putfield      #21                 // Field retryCount:Ljava/lang/Integer;
      31: return

  public void append(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_1
       1: invokeinterface #22,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getLoggerName:()Ljava/lang/String;
       6: ifnull        39
       9: aload_1
      10: invokestatic  #23                 // Method isRecursive:(Lorg/apache/logging/log4j/core/LogEvent;)Z
      13: ifeq          39
      16: getstatic     #2                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      19: ldc           #24                 // String Recursive logging from [{}] for appender [{}].
      21: aload_1
      22: invokeinterface #22,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getLoggerName:()Ljava/lang/String;
      27: aload_0
      28: invokevirtual #25                 // Method getName:()Ljava/lang/String;
      31: invokeinterface #26,  4           // InterfaceMethod org/apache/logging/log4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      36: goto          117
      39: aload_0
      40: aload_1
      41: invokespecial #27                 // Method tryAppend:(Lorg/apache/logging/log4j/core/LogEvent;)V
      44: goto          117
      47: astore_2
      48: aload_0
      49: getfield      #21                 // Field retryCount:Ljava/lang/Integer;
      52: ifnull        84
      55: iconst_0
      56: istore_3
      57: iload_3
      58: aload_0
      59: getfield      #21                 // Field retryCount:Ljava/lang/Integer;
      62: invokevirtual #29                 // Method java/lang/Integer.intValue:()I
      65: if_icmpge     84
      68: iinc          3, 1
      71: aload_0
      72: aload_1
      73: invokespecial #27                 // Method tryAppend:(Lorg/apache/logging/log4j/core/LogEvent;)V
      76: goto          84
      79: astore        4
      81: goto          57
      84: aload_0
      85: new           #30                 // class java/lang/StringBuilder
      88: dup
      89: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      92: ldc           #32                 // String Unable to write to Kafka in appender [
      94: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: aload_0
      98: invokevirtual #25                 // Method getName:()Ljava/lang/String;
     101: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: ldc           #34                 // String ]
     106: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     112: aload_1
     113: aload_2
     114: invokevirtual #36                 // Method error:(Ljava/lang/String;Lorg/apache/logging/log4j/core/LogEvent;Ljava/lang/Throwable;)V
     117: return
    Exception table:
       from    to  target type
          39    44    47   Class java/lang/Exception
          71    76    79   Class java/lang/Exception

  public void start();
    Code:
       0: aload_0
       1: invokespecial #37                 // Method org/apache/logging/log4j/core/appender/AbstractAppender.start:()V
       4: aload_0
       5: getfield      #20                 // Field manager:Lorg/apache/logging/log4j/core/appender/mom/kafka/KafkaManager;
       8: invokevirtual #38                 // Method org/apache/logging/log4j/core/appender/mom/kafka/KafkaManager.startup:()V
      11: return

  public boolean stop(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method setStopping:()V
       4: aload_0
       5: lload_1
       6: aload_3
       7: iconst_0
       8: invokespecial #40                 // Method org/apache/logging/log4j/core/appender/AbstractAppender.stop:(JLjava/util/concurrent/TimeUnit;Z)Z
      11: istore        4
      13: iload         4
      15: aload_0
      16: getfield      #20                 // Field manager:Lorg/apache/logging/log4j/core/appender/mom/kafka/KafkaManager;
      19: lload_1
      20: aload_3
      21: invokevirtual #41                 // Method org/apache/logging/log4j/core/appender/mom/kafka/KafkaManager.stop:(JLjava/util/concurrent/TimeUnit;)Z
      24: iand
      25: istore        4
      27: aload_0
      28: invokevirtual #42                 // Method setStopped:()V
      31: iload         4
      33: ireturn

  public java.lang.String toString();
    Code:
       0: new           #30                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #43                 // String KafkaAppender{name=
       9: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #25                 // Method getName:()Ljava/lang/String;
      16: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #44                 // String , state=
      21: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #45                 // Method getState:()Lorg/apache/logging/log4j/core/LifeCycle$State;
      28: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #47                 // String , topic=
      33: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #20                 // Field manager:Lorg/apache/logging/log4j/core/appender/mom/kafka/KafkaManager;
      40: invokevirtual #48                 // Method org/apache/logging/log4j/core/appender/mom/kafka/KafkaManager.getTopic:()Ljava/lang/String;
      43: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: bipush        125
      48: invokevirtual #49                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      51: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: areturn

  private void tryAppend(org.apache.logging.log4j.core.LogEvent) throws java.util.concurrent.ExecutionException, java.lang.InterruptedException, java.util.concurrent.TimeoutException;
    Code:
       0: aload_0
       1: invokevirtual #50                 // Method getLayout:()Lorg/apache/logging/log4j/core/Layout;
       4: astore_2
       5: aload_2
       6: instanceof    #51                 // class org/apache/logging/log4j/core/layout/SerializedLayout
       9: ifeq          66
      12: aload_2
      13: invokeinterface #52,  1           // InterfaceMethod org/apache/logging/log4j/core/Layout.getHeader:()[B
      18: astore        4
      20: aload_2
      21: aload_1
      22: invokeinterface #53,  2           // InterfaceMethod org/apache/logging/log4j/core/Layout.toByteArray:(Lorg/apache/logging/log4j/core/LogEvent;)[B
      27: astore        5
      29: aload         4
      31: arraylength
      32: aload         5
      34: arraylength
      35: iadd
      36: newarray       byte
      38: astore_3
      39: aload         4
      41: iconst_0
      42: aload_3
      43: iconst_0
      44: aload         4
      46: arraylength
      47: invokestatic  #54                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      50: aload         5
      52: iconst_0
      53: aload_3
      54: aload         4
      56: arraylength
      57: aload         5
      59: arraylength
      60: invokestatic  #54                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      63: goto          74
      66: aload_2
      67: aload_1
      68: invokeinterface #53,  2           // InterfaceMethod org/apache/logging/log4j/core/Layout.toByteArray:(Lorg/apache/logging/log4j/core/LogEvent;)[B
      73: astore_3
      74: aload_0
      75: getfield      #20                 // Field manager:Lorg/apache/logging/log4j/core/appender/mom/kafka/KafkaManager;
      78: aload_3
      79: invokevirtual #55                 // Method org/apache/logging/log4j/core/appender/mom/kafka/KafkaManager.send:([B)V
      82: return

  private static boolean lambda$isRecursive$0(org.apache.logging.log4j.core.LogEvent, java.lang.String);
    Code:
       0: aload_0
       1: invokeinterface #22,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getLoggerName:()Ljava/lang/String;
       6: aload_1
       7: invokevirtual #56                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      10: ireturn

  static org.apache.logging.log4j.Logger access$000();
    Code:
       0: getstatic     #2                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       3: areturn

  org.apache.logging.log4j.core.appender.mom.kafka.KafkaAppender(java.lang.String, org.apache.logging.log4j.core.Layout, org.apache.logging.log4j.core.Filter, boolean, org.apache.logging.log4j.core.appender.mom.kafka.KafkaManager, org.apache.logging.log4j.core.config.Property[], java.lang.Integer, org.apache.logging.log4j.core.appender.mom.kafka.KafkaAppender$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokespecial #1                  // Method "<init>":(Ljava/lang/String;Lorg/apache/logging/log4j/core/Layout;Lorg/apache/logging/log4j/core/Filter;ZLorg/apache/logging/log4j/core/appender/mom/kafka/KafkaManager;[Lorg/apache/logging/log4j/core/config/Property;Ljava/lang/Integer;)V
      15: return

  static {};
    Code:
       0: iconst_2
       1: anewarray     #57                 // class java/lang/String
       4: dup
       5: iconst_0
       6: ldc           #58                 // String org.apache.kafka.common
       8: aastore
       9: dup
      10: iconst_1
      11: ldc           #59                 // String org.apache.kafka.clients
      13: aastore
      14: putstatic     #9                  // Field KAFKA_CLIENT_PACKAGES:[Ljava/lang/String;
      17: return
}
