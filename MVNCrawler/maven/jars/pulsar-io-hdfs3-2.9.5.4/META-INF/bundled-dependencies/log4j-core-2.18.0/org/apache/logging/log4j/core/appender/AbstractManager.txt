Compiled from "AbstractManager.java"
public abstract class org.apache.logging.log4j.core.appender.AbstractManager implements java.lang.AutoCloseable {
  protected static final org.apache.logging.log4j.Logger LOGGER;

  private static final java.util.Map<java.lang.String, org.apache.logging.log4j.core.appender.AbstractManager> MAP;

  private static final java.util.concurrent.locks.Lock LOCK;

  protected int count;

  private final java.lang.String name;

  private final org.apache.logging.log4j.core.LoggerContext loggerContext;

  protected org.apache.logging.log4j.core.appender.AbstractManager(org.apache.logging.log4j.core.LoggerContext, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field loggerContext:Lorg/apache/logging/log4j/core/LoggerContext;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field name:Ljava/lang/String;
      14: getstatic     #4                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      17: ldc           #5                  // String Starting {} {}
      19: aload_0
      20: invokevirtual #6                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      23: invokevirtual #7                  // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      26: aload_2
      27: invokeinterface #8,  4            // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      32: return

  public void close();
    Code:
       0: aload_0
       1: lconst_0
       2: getstatic     #10                 // Field org/apache/logging/log4j/core/AbstractLifeCycle.DEFAULT_STOP_TIMEUNIT:Ljava/util/concurrent/TimeUnit;
       5: invokevirtual #11                 // Method stop:(JLjava/util/concurrent/TimeUnit;)Z
       8: pop
       9: return

  public boolean stop(long, java.util.concurrent.TimeUnit);
    Code:
       0: iconst_1
       1: istore        4
       3: getstatic     #12                 // Field LOCK:Ljava/util/concurrent/locks/Lock;
       6: invokeinterface #13,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      11: aload_0
      12: dup
      13: getfield      #14                 // Field count:I
      16: iconst_1
      17: isub
      18: putfield      #14                 // Field count:I
      21: aload_0
      22: getfield      #14                 // Field count:I
      25: ifgt          96
      28: getstatic     #15                 // Field MAP:Ljava/util/Map;
      31: aload_0
      32: getfield      #3                  // Field name:Ljava/lang/String;
      35: invokeinterface #16,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      40: pop
      41: getstatic     #4                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      44: ldc           #17                 // String Shutting down {} {}
      46: aload_0
      47: invokevirtual #6                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      50: invokevirtual #7                  // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      53: aload_0
      54: invokevirtual #18                 // Method getName:()Ljava/lang/String;
      57: invokeinterface #8,  4            // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      62: aload_0
      63: lload_1
      64: aload_3
      65: invokevirtual #19                 // Method releaseSub:(JLjava/util/concurrent/TimeUnit;)Z
      68: istore        4
      70: getstatic     #4                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      73: ldc           #20                 // String Shut down {} {}, all resources released: {}
      75: aload_0
      76: invokevirtual #6                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      79: invokevirtual #7                  // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      82: aload_0
      83: invokevirtual #18                 // Method getName:()Ljava/lang/String;
      86: iload         4
      88: invokestatic  #21                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      91: invokeinterface #22,  5           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      96: getstatic     #12                 // Field LOCK:Ljava/util/concurrent/locks/Lock;
      99: invokeinterface #23,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     104: goto          120
     107: astore        5
     109: getstatic     #12                 // Field LOCK:Ljava/util/concurrent/locks/Lock;
     112: invokeinterface #23,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     117: aload         5
     119: athrow
     120: iload         4
     122: ireturn
    Exception table:
       from    to  target type
          11    96   107   any
         107   109   107   any

  public static <M extends org.apache.logging.log4j.core.appender.AbstractManager, T> M getManager(java.lang.String, org.apache.logging.log4j.core.appender.ManagerFactory<M, T>, T);
    Code:
       0: getstatic     #12                 // Field LOCK:Ljava/util/concurrent/locks/Lock;
       3: invokeinterface #13,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       8: getstatic     #15                 // Field MAP:Ljava/util/Map;
      11: aload_0
      12: invokeinterface #24,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #25                 // class org/apache/logging/log4j/core/appender/AbstractManager
      20: astore_3
      21: aload_3
      22: ifnonnull     113
      25: aload_1
      26: ldc           #26                 // String factory
      28: invokestatic  #27                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      31: checkcast     #28                 // class org/apache/logging/log4j/core/appender/ManagerFactory
      34: aload_0
      35: aload_2
      36: invokeinterface #29,  3           // InterfaceMethod org/apache/logging/log4j/core/appender/ManagerFactory.createManager:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      41: checkcast     #25                 // class org/apache/logging/log4j/core/appender/AbstractManager
      44: astore_3
      45: aload_3
      46: ifnonnull     99
      49: new           #30                 // class java/lang/IllegalStateException
      52: dup
      53: new           #31                 // class java/lang/StringBuilder
      56: dup
      57: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      60: ldc           #33                 // String ManagerFactory [
      62: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload_1
      66: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      69: ldc           #36                 // String ] unable to create manager for [
      71: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_0
      75: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: ldc           #37                 // String ] with data [
      80: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: aload_2
      84: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      87: ldc           #38                 // String ]
      89: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      95: invokespecial #40                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      98: athrow
      99: getstatic     #15                 // Field MAP:Ljava/util/Map;
     102: aload_0
     103: aload_3
     104: invokeinterface #41,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     109: pop
     110: goto          118
     113: aload_3
     114: aload_2
     115: invokevirtual #42                 // Method updateData:(Ljava/lang/Object;)V
     118: aload_3
     119: dup
     120: getfield      #14                 // Field count:I
     123: iconst_1
     124: iadd
     125: putfield      #14                 // Field count:I
     128: aload_3
     129: astore        4
     131: getstatic     #12                 // Field LOCK:Ljava/util/concurrent/locks/Lock;
     134: invokeinterface #23,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     139: aload         4
     141: areturn
     142: astore        5
     144: getstatic     #12                 // Field LOCK:Ljava/util/concurrent/locks/Lock;
     147: invokeinterface #23,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     152: aload         5
     154: athrow
    Exception table:
       from    to  target type
           8   131   142   any
         142   144   142   any

  public void updateData(java.lang.Object);
    Code:
       0: return

  public static boolean hasManager(java.lang.String);
    Code:
       0: getstatic     #12                 // Field LOCK:Ljava/util/concurrent/locks/Lock;
       3: invokeinterface #13,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       8: getstatic     #15                 // Field MAP:Ljava/util/Map;
      11: aload_0
      12: invokeinterface #43,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      17: istore_1
      18: getstatic     #12                 // Field LOCK:Ljava/util/concurrent/locks/Lock;
      21: invokeinterface #23,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      26: iload_1
      27: ireturn
      28: astore_2
      29: getstatic     #12                 // Field LOCK:Ljava/util/concurrent/locks/Lock;
      32: invokeinterface #23,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      37: aload_2
      38: athrow
    Exception table:
       from    to  target type
           8    18    28   any

  protected static <M extends org.apache.logging.log4j.core.appender.AbstractManager> M narrow(java.lang.Class<M>, org.apache.logging.log4j.core.appender.AbstractManager);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #6                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: invokevirtual #44                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       8: ifeq          13
      11: aload_1
      12: areturn
      13: new           #45                 // class org/apache/logging/log4j/core/config/ConfigurationException
      16: dup
      17: new           #31                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #46                 // String Configuration has multiple incompatible Appenders pointing to the same resource \'
      26: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_1
      30: invokevirtual #18                 // Method getName:()Ljava/lang/String;
      33: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: ldc           #47                 // String \'
      38: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokespecial #48                 // Method org/apache/logging/log4j/core/config/ConfigurationException."<init>":(Ljava/lang/String;)V
      47: athrow

  protected static org.apache.logging.log4j.status.StatusLogger logger();
    Code:
       0: invokestatic  #49                 // Method org/apache/logging/log4j/status/StatusLogger.getLogger:()Lorg/apache/logging/log4j/status/StatusLogger;
       3: areturn

  static int getManagerCount();
    Code:
       0: getstatic     #15                 // Field MAP:Ljava/util/Map;
       3: invokeinterface #50,  1           // InterfaceMethod java/util/Map.size:()I
       8: ireturn

  protected boolean releaseSub(long, java.util.concurrent.TimeUnit);
    Code:
       0: iconst_1
       1: ireturn

  protected int getCount();
    Code:
       0: aload_0
       1: getfield      #14                 // Field count:I
       4: ireturn

  public org.apache.logging.log4j.core.LoggerContext getLoggerContext();
    Code:
       0: aload_0
       1: getfield      #2                  // Field loggerContext:Lorg/apache/logging/log4j/core/LoggerContext;
       4: areturn

  public void release();
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method close:()V
       4: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #3                  // Field name:Ljava/lang/String;
       4: areturn

  public java.util.Map<java.lang.String, java.lang.String> getContentFormat();
    Code:
       0: new           #52                 // class java/util/HashMap
       3: dup
       4: invokespecial #53                 // Method java/util/HashMap."<init>":()V
       7: areturn

  protected org.apache.logging.log4j.core.lookup.StrSubstitutor getStrSubstitutor();
    Code:
       0: aload_0
       1: getfield      #2                  // Field loggerContext:Lorg/apache/logging/log4j/core/LoggerContext;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #2                  // Field loggerContext:Lorg/apache/logging/log4j/core/LoggerContext;
      13: invokevirtual #54                 // Method org/apache/logging/log4j/core/LoggerContext.getConfiguration:()Lorg/apache/logging/log4j/core/config/Configuration;
      16: astore_1
      17: aload_1
      18: ifnonnull     23
      21: aconst_null
      22: areturn
      23: aload_1
      24: invokeinterface #55,  1           // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.getStrSubstitutor:()Lorg/apache/logging/log4j/core/lookup/StrSubstitutor;
      29: areturn

  protected void log(org.apache.logging.log4j.Level, java.lang.String, java.lang.Throwable);
    Code:
       0: getstatic     #4                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       3: invokeinterface #56,  1           // InterfaceMethod org/apache/logging/log4j/Logger.getMessageFactory:()Lorg/apache/logging/log4j/message/MessageFactory;
       8: ldc           #57                 // String {} {} {}: {}
      10: iconst_4
      11: anewarray     #58                 // class java/lang/Object
      14: dup
      15: iconst_0
      16: aload_0
      17: invokevirtual #6                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: invokevirtual #7                  // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      23: aastore
      24: dup
      25: iconst_1
      26: aload_0
      27: invokevirtual #18                 // Method getName:()Ljava/lang/String;
      30: aastore
      31: dup
      32: iconst_2
      33: aload_2
      34: aastore
      35: dup
      36: iconst_3
      37: aload_3
      38: aastore
      39: invokeinterface #59,  3           // InterfaceMethod org/apache/logging/log4j/message/MessageFactory.newMessage:(Ljava/lang/String;[Ljava/lang/Object;)Lorg/apache/logging/log4j/message/Message;
      44: astore        4
      46: getstatic     #4                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      49: aload_1
      50: aload         4
      52: aload_3
      53: invokeinterface #60,  4           // InterfaceMethod org/apache/logging/log4j/Logger.log:(Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;)V
      58: return

  protected void logDebug(java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: getstatic     #61                 // Field org/apache/logging/log4j/Level.DEBUG:Lorg/apache/logging/log4j/Level;
       4: aload_1
       5: aload_2
       6: invokevirtual #62                 // Method log:(Lorg/apache/logging/log4j/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
       9: return

  protected void logError(java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: getstatic     #63                 // Field org/apache/logging/log4j/Level.ERROR:Lorg/apache/logging/log4j/Level;
       4: aload_1
       5: aload_2
       6: invokevirtual #62                 // Method log:(Lorg/apache/logging/log4j/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
       9: return

  protected void logWarn(java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: getstatic     #64                 // Field org/apache/logging/log4j/Level.WARN:Lorg/apache/logging/log4j/Level;
       4: aload_1
       5: aload_2
       6: invokevirtual #62                 // Method log:(Lorg/apache/logging/log4j/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
       9: return

  static {};
    Code:
       0: invokestatic  #49                 // Method org/apache/logging/log4j/status/StatusLogger.getLogger:()Lorg/apache/logging/log4j/status/StatusLogger;
       3: putstatic     #4                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       6: new           #52                 // class java/util/HashMap
       9: dup
      10: invokespecial #53                 // Method java/util/HashMap."<init>":()V
      13: putstatic     #15                 // Field MAP:Ljava/util/Map;
      16: new           #65                 // class java/util/concurrent/locks/ReentrantLock
      19: dup
      20: invokespecial #66                 // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      23: putstatic     #12                 // Field LOCK:Ljava/util/concurrent/locks/Lock;
      26: return
}
