Compiled from "DefaultRolloverStrategy.java"
public class org.apache.logging.log4j.core.appender.rolling.DefaultRolloverStrategy$Builder implements org.apache.logging.log4j.core.util.Builder<org.apache.logging.log4j.core.appender.rolling.DefaultRolloverStrategy> {
  private java.lang.String max;

  private java.lang.String min;

  private java.lang.String fileIndex;

  private java.lang.String compressionLevelStr;

  private org.apache.logging.log4j.core.appender.rolling.action.Action[] customActions;

  private boolean stopCustomActionsOnError;

  private java.lang.String tempCompressedFilePattern;

  private org.apache.logging.log4j.core.config.Configuration config;

  public org.apache.logging.log4j.core.appender.rolling.DefaultRolloverStrategy$Builder();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #3                  // Field stopCustomActionsOnError:Z
       9: return

  public org.apache.logging.log4j.core.appender.rolling.DefaultRolloverStrategy build();
    Code:
       0: aload_0
       1: getfield      #4                  // Field fileIndex:Ljava/lang/String;
       4: ifnull        30
       7: aload_0
       8: getfield      #4                  // Field fileIndex:Ljava/lang/String;
      11: ldc           #5                  // String nomax
      13: invokevirtual #6                  // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      16: ifeq          30
      19: ldc           #8                  // int -2147483648
      21: istore_1
      22: ldc           #9                  // int 2147483647
      24: istore_2
      25: iconst_0
      26: istore_3
      27: goto          151
      30: aload_0
      31: getfield      #4                  // Field fileIndex:Ljava/lang/String;
      34: ifnonnull     41
      37: iconst_1
      38: goto          50
      41: aload_0
      42: getfield      #4                  // Field fileIndex:Ljava/lang/String;
      45: ldc           #10                 // String max
      47: invokevirtual #6                  // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      50: istore_3
      51: iconst_1
      52: istore_1
      53: aload_0
      54: getfield      #11                 // Field min:Ljava/lang/String;
      57: ifnull        85
      60: aload_0
      61: getfield      #11                 // Field min:Ljava/lang/String;
      64: invokestatic  #12                 // Method org/apache/logging/log4j/core/util/Integers.parseInt:(Ljava/lang/String;)I
      67: istore_1
      68: iload_1
      69: iconst_1
      70: if_icmpge     85
      73: getstatic     #13                 // Field org/apache/logging/log4j/core/appender/rolling/AbstractRolloverStrategy.LOGGER:Lorg/apache/logging/log4j/Logger;
      76: ldc           #14                 // String Minimum window size too small. Limited to 1
      78: invokeinterface #15,  2           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;)V
      83: iconst_1
      84: istore_1
      85: bipush        7
      87: istore_2
      88: aload_0
      89: getfield      #16                 // Field max:Ljava/lang/String;
      92: ifnull        151
      95: aload_0
      96: getfield      #16                 // Field max:Ljava/lang/String;
      99: invokevirtual #17                 // Method java/lang/String.trim:()Ljava/lang/String;
     102: invokestatic  #18                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     105: istore_2
     106: iload_2
     107: iload_1
     108: if_icmpge     151
     111: iload_1
     112: bipush        7
     114: if_icmpge     122
     117: bipush        7
     119: goto          123
     122: iload_1
     123: istore_2
     124: getstatic     #13                 // Field org/apache/logging/log4j/core/appender/rolling/AbstractRolloverStrategy.LOGGER:Lorg/apache/logging/log4j/Logger;
     127: new           #19                 // class java/lang/StringBuilder
     130: dup
     131: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
     134: ldc           #21                 // String Maximum window size must be greater than the minimum windows size. Set to
     136: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     139: iload_2
     140: invokevirtual #23                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     143: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     146: invokeinterface #15,  2           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;)V
     151: aload_0
     152: getfield      #25                 // Field compressionLevelStr:Ljava/lang/String;
     155: ifnull        168
     158: aload_0
     159: getfield      #25                 // Field compressionLevelStr:Ljava/lang/String;
     162: invokevirtual #17                 // Method java/lang/String.trim:()Ljava/lang/String;
     165: goto          172
     168: aload_0
     169: getfield      #25                 // Field compressionLevelStr:Ljava/lang/String;
     172: astore        4
     174: aload         4
     176: iconst_m1
     177: invokestatic  #27                 // Method org/apache/logging/log4j/core/util/Integers.parseInt:(Ljava/lang/String;I)I
     180: istore        5
     182: aload_0
     183: getfield      #28                 // Field config:Lorg/apache/logging/log4j/core/config/Configuration;
     186: ifnull        201
     189: aload_0
     190: getfield      #28                 // Field config:Lorg/apache/logging/log4j/core/config/Configuration;
     193: invokeinterface #29,  1           // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.getStrSubstitutor:()Lorg/apache/logging/log4j/core/lookup/StrSubstitutor;
     198: goto          208
     201: new           #30                 // class org/apache/logging/log4j/core/lookup/StrSubstitutor
     204: dup
     205: invokespecial #31                 // Method org/apache/logging/log4j/core/lookup/StrSubstitutor."<init>":()V
     208: astore        6
     210: new           #1                  // class org/apache/logging/log4j/core/appender/rolling/DefaultRolloverStrategy
     213: dup
     214: iload_1
     215: iload_2
     216: iload_3
     217: iload         5
     219: aload         6
     221: aload_0
     222: getfield      #32                 // Field customActions:[Lorg/apache/logging/log4j/core/appender/rolling/action/Action;
     225: aload_0
     226: getfield      #3                  // Field stopCustomActionsOnError:Z
     229: aload_0
     230: getfield      #33                 // Field tempCompressedFilePattern:Ljava/lang/String;
     233: invokespecial #34                 // Method org/apache/logging/log4j/core/appender/rolling/DefaultRolloverStrategy."<init>":(IIZILorg/apache/logging/log4j/core/lookup/StrSubstitutor;[Lorg/apache/logging/log4j/core/appender/rolling/action/Action;ZLjava/lang/String;)V
     236: areturn

  public java.lang.String getMax();
    Code:
       0: aload_0
       1: getfield      #16                 // Field max:Ljava/lang/String;
       4: areturn

  public org.apache.logging.log4j.core.appender.rolling.DefaultRolloverStrategy$Builder withMax(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field max:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.String getMin();
    Code:
       0: aload_0
       1: getfield      #11                 // Field min:Ljava/lang/String;
       4: areturn

  public org.apache.logging.log4j.core.appender.rolling.DefaultRolloverStrategy$Builder withMin(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field min:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.String getFileIndex();
    Code:
       0: aload_0
       1: getfield      #4                  // Field fileIndex:Ljava/lang/String;
       4: areturn

  public org.apache.logging.log4j.core.appender.rolling.DefaultRolloverStrategy$Builder withFileIndex(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field fileIndex:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.String getCompressionLevelStr();
    Code:
       0: aload_0
       1: getfield      #25                 // Field compressionLevelStr:Ljava/lang/String;
       4: areturn

  public org.apache.logging.log4j.core.appender.rolling.DefaultRolloverStrategy$Builder withCompressionLevelStr(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field compressionLevelStr:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.appender.rolling.action.Action[] getCustomActions();
    Code:
       0: aload_0
       1: getfield      #32                 // Field customActions:[Lorg/apache/logging/log4j/core/appender/rolling/action/Action;
       4: areturn

  public org.apache.logging.log4j.core.appender.rolling.DefaultRolloverStrategy$Builder withCustomActions(org.apache.logging.log4j.core.appender.rolling.action.Action[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #32                 // Field customActions:[Lorg/apache/logging/log4j/core/appender/rolling/action/Action;
       5: aload_0
       6: areturn

  public boolean isStopCustomActionsOnError();
    Code:
       0: aload_0
       1: getfield      #3                  // Field stopCustomActionsOnError:Z
       4: ireturn

  public org.apache.logging.log4j.core.appender.rolling.DefaultRolloverStrategy$Builder withStopCustomActionsOnError(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field stopCustomActionsOnError:Z
       5: aload_0
       6: areturn

  public java.lang.String getTempCompressedFilePattern();
    Code:
       0: aload_0
       1: getfield      #33                 // Field tempCompressedFilePattern:Ljava/lang/String;
       4: areturn

  public org.apache.logging.log4j.core.appender.rolling.DefaultRolloverStrategy$Builder withTempCompressedFilePattern(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #33                 // Field tempCompressedFilePattern:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.config.Configuration getConfig();
    Code:
       0: aload_0
       1: getfield      #28                 // Field config:Lorg/apache/logging/log4j/core/config/Configuration;
       4: areturn

  public org.apache.logging.log4j.core.appender.rolling.DefaultRolloverStrategy$Builder withConfig(org.apache.logging.log4j.core.config.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #28                 // Field config:Lorg/apache/logging/log4j/core/config/Configuration;
       5: aload_0
       6: areturn

  public java.lang.Object build();
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method build:()Lorg/apache/logging/log4j/core/appender/rolling/DefaultRolloverStrategy;
       4: areturn
}
