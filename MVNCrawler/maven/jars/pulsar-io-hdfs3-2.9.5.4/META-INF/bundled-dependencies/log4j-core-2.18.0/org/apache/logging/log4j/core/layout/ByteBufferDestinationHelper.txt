Compiled from "ByteBufferDestinationHelper.java"
public final class org.apache.logging.log4j.core.layout.ByteBufferDestinationHelper {
  private org.apache.logging.log4j.core.layout.ByteBufferDestinationHelper();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static void writeToUnsynchronized(java.nio.ByteBuffer, org.apache.logging.log4j.core.layout.ByteBufferDestination);
    Code:
       0: aload_1
       1: invokeinterface #2,  1            // InterfaceMethod org/apache/logging/log4j/core/layout/ByteBufferDestination.getByteBuffer:()Ljava/nio/ByteBuffer;
       6: astore_2
       7: aload_0
       8: invokevirtual #3                  // Method java/nio/ByteBuffer.remaining:()I
      11: aload_2
      12: invokevirtual #3                  // Method java/nio/ByteBuffer.remaining:()I
      15: if_icmple     67
      18: aload_0
      19: invokevirtual #4                  // Method java/nio/ByteBuffer.limit:()I
      22: istore_3
      23: aload_0
      24: aload_0
      25: invokevirtual #4                  // Method java/nio/ByteBuffer.limit:()I
      28: aload_0
      29: invokevirtual #5                  // Method java/nio/ByteBuffer.position:()I
      32: aload_2
      33: invokevirtual #3                  // Method java/nio/ByteBuffer.remaining:()I
      36: iadd
      37: invokestatic  #6                  // Method java/lang/Math.min:(II)I
      40: invokevirtual #7                  // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      43: pop
      44: aload_2
      45: aload_0
      46: invokevirtual #8                  // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      49: pop
      50: aload_0
      51: iload_3
      52: invokevirtual #7                  // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      55: pop
      56: aload_1
      57: aload_2
      58: invokeinterface #9,  2            // InterfaceMethod org/apache/logging/log4j/core/layout/ByteBufferDestination.drain:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      63: astore_2
      64: goto          7
      67: aload_2
      68: aload_0
      69: invokevirtual #8                  // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      72: pop
      73: return

  public static void writeToUnsynchronized(byte[], int, int, org.apache.logging.log4j.core.layout.ByteBufferDestination);
    Code:
       0: aload_3
       1: invokeinterface #2,  1            // InterfaceMethod org/apache/logging/log4j/core/layout/ByteBufferDestination.getByteBuffer:()Ljava/nio/ByteBuffer;
       6: astore        4
       8: iload_2
       9: aload         4
      11: invokevirtual #3                  // Method java/nio/ByteBuffer.remaining:()I
      14: if_icmple     57
      17: aload         4
      19: invokevirtual #3                  // Method java/nio/ByteBuffer.remaining:()I
      22: istore        5
      24: aload         4
      26: aload_0
      27: iload_1
      28: iload         5
      30: invokevirtual #10                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      33: pop
      34: iload_1
      35: iload         5
      37: iadd
      38: istore_1
      39: iload_2
      40: iload         5
      42: isub
      43: istore_2
      44: aload_3
      45: aload         4
      47: invokeinterface #9,  2            // InterfaceMethod org/apache/logging/log4j/core/layout/ByteBufferDestination.drain:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      52: astore        4
      54: goto          8
      57: aload         4
      59: aload_0
      60: iload_1
      61: iload_2
      62: invokevirtual #10                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      65: pop
      66: return
}
