Compiled from "FailoversPlugin.java"
public final class org.apache.logging.log4j.core.appender.FailoversPlugin {
  private static final org.apache.logging.log4j.Logger LOGGER;

  private org.apache.logging.log4j.core.appender.FailoversPlugin();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.lang.String[] createFailovers(org.apache.logging.log4j.core.config.AppenderRef...);
    Code:
       0: aload_0
       1: ifnonnull     16
       4: getstatic     #2                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       7: ldc           #3                  // String failovers must contain an appender reference
       9: invokeinterface #4,  2            // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;)V
      14: aconst_null
      15: areturn
      16: aload_0
      17: arraylength
      18: anewarray     #5                  // class java/lang/String
      21: astore_1
      22: iconst_0
      23: istore_2
      24: iload_2
      25: aload_0
      26: arraylength
      27: if_icmpge     45
      30: aload_1
      31: iload_2
      32: aload_0
      33: iload_2
      34: aaload
      35: invokevirtual #6                  // Method org/apache/logging/log4j/core/config/AppenderRef.getRef:()Ljava/lang/String;
      38: aastore
      39: iinc          2, 1
      42: goto          24
      45: aload_1
      46: areturn

  static {};
    Code:
       0: invokestatic  #7                  // Method org/apache/logging/log4j/status/StatusLogger.getLogger:()Lorg/apache/logging/log4j/status/StatusLogger;
       3: putstatic     #2                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       6: return
}
