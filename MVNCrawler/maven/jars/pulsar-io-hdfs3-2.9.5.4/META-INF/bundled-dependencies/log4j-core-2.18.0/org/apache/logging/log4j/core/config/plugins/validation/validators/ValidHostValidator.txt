Compiled from "ValidHostValidator.java"
public class org.apache.logging.log4j.core.config.plugins.validation.validators.ValidHostValidator implements org.apache.logging.log4j.core.config.plugins.validation.ConstraintValidator<org.apache.logging.log4j.core.config.plugins.validation.constraints.ValidHost> {
  private static final org.apache.logging.log4j.Logger LOGGER;

  private org.apache.logging.log4j.core.config.plugins.validation.constraints.ValidHost annotation;

  public org.apache.logging.log4j.core.config.plugins.validation.validators.ValidHostValidator();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void initialize(org.apache.logging.log4j.core.config.plugins.validation.constraints.ValidHost);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field annotation:Lorg/apache/logging/log4j/core/config/plugins/validation/constraints/ValidHost;
       5: return

  public boolean isValid(java.lang.String, java.lang.Object);
    Code:
       0: aload_2
       1: ifnonnull     23
       4: getstatic     #3                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       7: aload_0
       8: getfield      #2                  // Field annotation:Lorg/apache/logging/log4j/core/config/plugins/validation/constraints/ValidHost;
      11: invokeinterface #4,  1            // InterfaceMethod org/apache/logging/log4j/core/config/plugins/validation/constraints/ValidHost.message:()Ljava/lang/String;
      16: invokeinterface #5,  2            // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;)V
      21: iconst_0
      22: ireturn
      23: aload_2
      24: instanceof    #6                  // class java/net/InetAddress
      27: ifeq          32
      30: iconst_1
      31: ireturn
      32: aload_2
      33: invokevirtual #7                  // Method java/lang/Object.toString:()Ljava/lang/String;
      36: invokestatic  #8                  // Method java/net/InetAddress.getByName:(Ljava/lang/String;)Ljava/net/InetAddress;
      39: pop
      40: iconst_1
      41: ireturn
      42: astore_3
      43: getstatic     #3                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      46: aload_0
      47: getfield      #2                  // Field annotation:Lorg/apache/logging/log4j/core/config/plugins/validation/constraints/ValidHost;
      50: invokeinterface #4,  1            // InterfaceMethod org/apache/logging/log4j/core/config/plugins/validation/constraints/ValidHost.message:()Ljava/lang/String;
      55: aload_3
      56: invokeinterface #10,  3           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      61: iconst_0
      62: ireturn
    Exception table:
       from    to  target type
          32    41    42   Class java/net/UnknownHostException

  public void initialize(java.lang.annotation.Annotation);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #11                 // class org/apache/logging/log4j/core/config/plugins/validation/constraints/ValidHost
       5: invokevirtual #12                 // Method initialize:(Lorg/apache/logging/log4j/core/config/plugins/validation/constraints/ValidHost;)V
       8: return

  static {};
    Code:
       0: invokestatic  #13                 // Method org/apache/logging/log4j/status/StatusLogger.getLogger:()Lorg/apache/logging/log4j/status/StatusLogger;
       3: putstatic     #3                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       6: return
}
