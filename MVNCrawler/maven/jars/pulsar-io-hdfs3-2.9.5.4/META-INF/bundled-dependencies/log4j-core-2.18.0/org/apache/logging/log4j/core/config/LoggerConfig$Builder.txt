Compiled from "LoggerConfig.java"
public class org.apache.logging.log4j.core.config.LoggerConfig$Builder<B extends org.apache.logging.log4j.core.config.LoggerConfig$Builder<B>> implements org.apache.logging.log4j.core.util.Builder<org.apache.logging.log4j.core.config.LoggerConfig> {
  private java.lang.Boolean additivity;

  private org.apache.logging.log4j.Level level;

  private java.lang.String levelAndRefs;

  private java.lang.String loggerName;

  private java.lang.String includeLocation;

  private org.apache.logging.log4j.core.config.AppenderRef[] refs;

  private org.apache.logging.log4j.core.config.Property[] properties;

  private org.apache.logging.log4j.core.config.Configuration config;

  private org.apache.logging.log4j.core.Filter filter;

  public org.apache.logging.log4j.core.config.LoggerConfig$Builder();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public boolean isAdditivity();
    Code:
       0: aload_0
       1: getfield      #3                  // Field additivity:Ljava/lang/Boolean;
       4: ifnull        17
       7: aload_0
       8: getfield      #3                  // Field additivity:Ljava/lang/Boolean;
      11: invokevirtual #4                  // Method java/lang/Boolean.booleanValue:()Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public B withAdditivity(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #5                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       5: putfield      #3                  // Field additivity:Ljava/lang/Boolean;
       8: aload_0
       9: invokevirtual #6                  // Method asBuilder:()Lorg/apache/logging/log4j/core/config/LoggerConfig$Builder;
      12: areturn

  public org.apache.logging.log4j.Level getLevel();
    Code:
       0: aload_0
       1: getfield      #7                  // Field level:Lorg/apache/logging/log4j/Level;
       4: areturn

  public B withLevel(org.apache.logging.log4j.Level);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field level:Lorg/apache/logging/log4j/Level;
       5: aload_0
       6: invokevirtual #6                  // Method asBuilder:()Lorg/apache/logging/log4j/core/config/LoggerConfig$Builder;
       9: areturn

  public java.lang.String getLevelAndRefs();
    Code:
       0: aload_0
       1: getfield      #8                  // Field levelAndRefs:Ljava/lang/String;
       4: areturn

  public B withLevelAndRefs(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field levelAndRefs:Ljava/lang/String;
       5: aload_0
       6: invokevirtual #6                  // Method asBuilder:()Lorg/apache/logging/log4j/core/config/LoggerConfig$Builder;
       9: areturn

  public java.lang.String getLoggerName();
    Code:
       0: aload_0
       1: getfield      #9                  // Field loggerName:Ljava/lang/String;
       4: areturn

  public B withLoggerName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field loggerName:Ljava/lang/String;
       5: aload_0
       6: invokevirtual #6                  // Method asBuilder:()Lorg/apache/logging/log4j/core/config/LoggerConfig$Builder;
       9: areturn

  public java.lang.String getIncludeLocation();
    Code:
       0: aload_0
       1: getfield      #10                 // Field includeLocation:Ljava/lang/String;
       4: areturn

  public B withIncludeLocation(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field includeLocation:Ljava/lang/String;
       5: aload_0
       6: invokevirtual #6                  // Method asBuilder:()Lorg/apache/logging/log4j/core/config/LoggerConfig$Builder;
       9: areturn

  public org.apache.logging.log4j.core.config.AppenderRef[] getRefs();
    Code:
       0: aload_0
       1: getfield      #11                 // Field refs:[Lorg/apache/logging/log4j/core/config/AppenderRef;
       4: areturn

  public B withRefs(org.apache.logging.log4j.core.config.AppenderRef[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field refs:[Lorg/apache/logging/log4j/core/config/AppenderRef;
       5: aload_0
       6: invokevirtual #6                  // Method asBuilder:()Lorg/apache/logging/log4j/core/config/LoggerConfig$Builder;
       9: areturn

  public org.apache.logging.log4j.core.config.Property[] getProperties();
    Code:
       0: aload_0
       1: getfield      #12                 // Field properties:[Lorg/apache/logging/log4j/core/config/Property;
       4: areturn

  public B withProperties(org.apache.logging.log4j.core.config.Property[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field properties:[Lorg/apache/logging/log4j/core/config/Property;
       5: aload_0
       6: invokevirtual #6                  // Method asBuilder:()Lorg/apache/logging/log4j/core/config/LoggerConfig$Builder;
       9: areturn

  public org.apache.logging.log4j.core.config.Configuration getConfig();
    Code:
       0: aload_0
       1: getfield      #13                 // Field config:Lorg/apache/logging/log4j/core/config/Configuration;
       4: areturn

  public B withConfig(org.apache.logging.log4j.core.config.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field config:Lorg/apache/logging/log4j/core/config/Configuration;
       5: aload_0
       6: invokevirtual #6                  // Method asBuilder:()Lorg/apache/logging/log4j/core/config/LoggerConfig$Builder;
       9: areturn

  public org.apache.logging.log4j.core.Filter getFilter();
    Code:
       0: aload_0
       1: getfield      #14                 // Field filter:Lorg/apache/logging/log4j/core/Filter;
       4: areturn

  public B withtFilter(org.apache.logging.log4j.core.Filter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field filter:Lorg/apache/logging/log4j/core/Filter;
       5: aload_0
       6: invokevirtual #6                  // Method asBuilder:()Lorg/apache/logging/log4j/core/config/LoggerConfig$Builder;
       9: areturn

  public org.apache.logging.log4j.core.config.LoggerConfig build();
    Code:
       0: aload_0
       1: getfield      #9                  // Field loggerName:Ljava/lang/String;
       4: ldc           #15                 // String root
       6: invokevirtual #16                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       9: ifeq          17
      12: ldc           #18                 // String
      14: goto          21
      17: aload_0
      18: getfield      #9                  // Field loggerName:Ljava/lang/String;
      21: astore_1
      22: aload_0
      23: getfield      #7                  // Field level:Lorg/apache/logging/log4j/Level;
      26: aload_0
      27: getfield      #11                 // Field refs:[Lorg/apache/logging/log4j/core/config/AppenderRef;
      30: aload_0
      31: getfield      #8                  // Field levelAndRefs:Ljava/lang/String;
      34: aload_0
      35: getfield      #13                 // Field config:Lorg/apache/logging/log4j/core/config/Configuration;
      38: invokestatic  #19                 // Method org/apache/logging/log4j/core/config/LoggerConfig.getLevelAndRefs:(Lorg/apache/logging/log4j/Level;[Lorg/apache/logging/log4j/core/config/AppenderRef;Ljava/lang/String;Lorg/apache/logging/log4j/core/config/Configuration;)Lorg/apache/logging/log4j/core/config/LoggerConfig$LevelAndRefs;
      41: astore_2
      42: aload_0
      43: getfield      #10                 // Field includeLocation:Ljava/lang/String;
      46: aload_0
      47: getfield      #13                 // Field config:Lorg/apache/logging/log4j/core/config/Configuration;
      50: invokestatic  #20                 // Method org/apache/logging/log4j/core/config/LoggerConfig.includeLocation:(Ljava/lang/String;Lorg/apache/logging/log4j/core/config/Configuration;)Z
      53: istore_3
      54: new           #1                  // class org/apache/logging/log4j/core/config/LoggerConfig
      57: dup
      58: aload_1
      59: aload_2
      60: getfield      #21                 // Field org/apache/logging/log4j/core/config/LoggerConfig$LevelAndRefs.refs:Ljava/util/List;
      63: aload_0
      64: getfield      #14                 // Field filter:Lorg/apache/logging/log4j/core/Filter;
      67: aload_2
      68: getfield      #22                 // Field org/apache/logging/log4j/core/config/LoggerConfig$LevelAndRefs.level:Lorg/apache/logging/log4j/Level;
      71: aload_0
      72: invokevirtual #23                 // Method isAdditivity:()Z
      75: aload_0
      76: getfield      #12                 // Field properties:[Lorg/apache/logging/log4j/core/config/Property;
      79: aload_0
      80: getfield      #13                 // Field config:Lorg/apache/logging/log4j/core/config/Configuration;
      83: iload_3
      84: invokespecial #24                 // Method org/apache/logging/log4j/core/config/LoggerConfig."<init>":(Ljava/lang/String;Ljava/util/List;Lorg/apache/logging/log4j/core/Filter;Lorg/apache/logging/log4j/Level;Z[Lorg/apache/logging/log4j/core/config/Property;Lorg/apache/logging/log4j/core/config/Configuration;Z)V
      87: areturn

  public B asBuilder();
    Code:
       0: aload_0
       1: areturn

  public java.lang.Object build();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method build:()Lorg/apache/logging/log4j/core/config/LoggerConfig;
       4: areturn
}
