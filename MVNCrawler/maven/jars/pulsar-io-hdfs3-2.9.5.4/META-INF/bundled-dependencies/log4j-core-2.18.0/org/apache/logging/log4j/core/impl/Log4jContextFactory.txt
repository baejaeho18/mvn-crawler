Compiled from "Log4jContextFactory.java"
public class org.apache.logging.log4j.core.impl.Log4jContextFactory implements org.apache.logging.log4j.spi.LoggerContextFactory,org.apache.logging.log4j.core.util.ShutdownCallbackRegistry {
  private static final org.apache.logging.log4j.status.StatusLogger LOGGER;

  private static final boolean SHUTDOWN_HOOK_ENABLED;

  private final org.apache.logging.log4j.core.selector.ContextSelector selector;

  private final org.apache.logging.log4j.core.util.ShutdownCallbackRegistry shutdownCallbackRegistry;

  public org.apache.logging.log4j.core.impl.Log4jContextFactory();
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method createContextSelector:()Lorg/apache/logging/log4j/core/selector/ContextSelector;
       4: invokestatic  #2                  // Method createShutdownCallbackRegistry:()Lorg/apache/logging/log4j/core/util/ShutdownCallbackRegistry;
       7: invokespecial #3                  // Method "<init>":(Lorg/apache/logging/log4j/core/selector/ContextSelector;Lorg/apache/logging/log4j/core/util/ShutdownCallbackRegistry;)V
      10: return

  public org.apache.logging.log4j.core.impl.Log4jContextFactory(org.apache.logging.log4j.core.selector.ContextSelector);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2                  // Method createShutdownCallbackRegistry:()Lorg/apache/logging/log4j/core/util/ShutdownCallbackRegistry;
       5: invokespecial #3                  // Method "<init>":(Lorg/apache/logging/log4j/core/selector/ContextSelector;Lorg/apache/logging/log4j/core/util/ShutdownCallbackRegistry;)V
       8: return

  public org.apache.logging.log4j.core.impl.Log4jContextFactory(org.apache.logging.log4j.core.util.ShutdownCallbackRegistry);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method createContextSelector:()Lorg/apache/logging/log4j/core/selector/ContextSelector;
       4: aload_1
       5: invokespecial #3                  // Method "<init>":(Lorg/apache/logging/log4j/core/selector/ContextSelector;Lorg/apache/logging/log4j/core/util/ShutdownCallbackRegistry;)V
       8: return

  public org.apache.logging.log4j.core.impl.Log4jContextFactory(org.apache.logging.log4j.core.selector.ContextSelector, org.apache.logging.log4j.core.util.ShutdownCallbackRegistry);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #5                  // String No ContextSelector provided
       8: invokestatic  #6                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #7                  // class org/apache/logging/log4j/core/selector/ContextSelector
      14: putfield      #8                  // Field selector:Lorg/apache/logging/log4j/core/selector/ContextSelector;
      17: aload_0
      18: aload_2
      19: ldc           #9                  // String No ShutdownCallbackRegistry provided
      21: invokestatic  #6                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      24: checkcast     #10                 // class org/apache/logging/log4j/core/util/ShutdownCallbackRegistry
      27: putfield      #11                 // Field shutdownCallbackRegistry:Lorg/apache/logging/log4j/core/util/ShutdownCallbackRegistry;
      30: getstatic     #12                 // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
      33: ldc           #13                 // String Using ShutdownCallbackRegistry {}
      35: aload_2
      36: invokevirtual #14                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      39: invokevirtual #15                 // Method org/apache/logging/log4j/status/StatusLogger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      42: aload_0
      43: invokespecial #16                 // Method initializeShutdownCallbackRegistry:()V
      46: return

  private static org.apache.logging.log4j.core.selector.ContextSelector createContextSelector();
    Code:
       0: ldc           #18                 // String Log4jContextSelector
       2: ldc           #7                  // class org/apache/logging/log4j/core/selector/ContextSelector
       4: invokestatic  #19                 // Method org/apache/logging/log4j/core/util/Loader.newCheckedInstanceOfProperty:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
       7: checkcast     #7                  // class org/apache/logging/log4j/core/selector/ContextSelector
      10: astore_0
      11: aload_0
      12: ifnull        17
      15: aload_0
      16: areturn
      17: goto          30
      20: astore_0
      21: getstatic     #12                 // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
      24: ldc           #21                 // String Unable to create custom ContextSelector. Falling back to default.
      26: aload_0
      27: invokevirtual #22                 // Method org/apache/logging/log4j/status/StatusLogger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      30: new           #23                 // class org/apache/logging/log4j/core/selector/ClassLoaderContextSelector
      33: dup
      34: invokespecial #24                 // Method org/apache/logging/log4j/core/selector/ClassLoaderContextSelector."<init>":()V
      37: areturn
    Exception table:
       from    to  target type
           0    16    20   Class java/lang/Exception

  private static org.apache.logging.log4j.core.util.ShutdownCallbackRegistry createShutdownCallbackRegistry();
    Code:
       0: ldc           #25                 // String log4j.shutdownCallbackRegistry
       2: ldc           #10                 // class org/apache/logging/log4j/core/util/ShutdownCallbackRegistry
       4: invokestatic  #19                 // Method org/apache/logging/log4j/core/util/Loader.newCheckedInstanceOfProperty:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
       7: checkcast     #10                 // class org/apache/logging/log4j/core/util/ShutdownCallbackRegistry
      10: astore_0
      11: aload_0
      12: ifnull        17
      15: aload_0
      16: areturn
      17: goto          30
      20: astore_0
      21: getstatic     #12                 // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
      24: ldc           #26                 // String Unable to create custom ShutdownCallbackRegistry. Falling back to default.
      26: aload_0
      27: invokevirtual #22                 // Method org/apache/logging/log4j/status/StatusLogger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      30: new           #27                 // class org/apache/logging/log4j/core/util/DefaultShutdownCallbackRegistry
      33: dup
      34: invokespecial #28                 // Method org/apache/logging/log4j/core/util/DefaultShutdownCallbackRegistry."<init>":()V
      37: areturn
    Exception table:
       from    to  target type
           0    16    20   Class java/lang/Exception

  private void initializeShutdownCallbackRegistry();
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method isShutdownHookEnabled:()Z
       4: ifeq          53
       7: aload_0
       8: getfield      #11                 // Field shutdownCallbackRegistry:Lorg/apache/logging/log4j/core/util/ShutdownCallbackRegistry;
      11: instanceof    #30                 // class org/apache/logging/log4j/core/LifeCycle
      14: ifeq          53
      17: aload_0
      18: getfield      #11                 // Field shutdownCallbackRegistry:Lorg/apache/logging/log4j/core/util/ShutdownCallbackRegistry;
      21: checkcast     #30                 // class org/apache/logging/log4j/core/LifeCycle
      24: invokeinterface #31,  1           // InterfaceMethod org/apache/logging/log4j/core/LifeCycle.start:()V
      29: goto          53
      32: astore_1
      33: getstatic     #12                 // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
      36: ldc           #33                 // String Cannot start ShutdownCallbackRegistry, already shutting down.
      38: invokevirtual #34                 // Method org/apache/logging/log4j/status/StatusLogger.error:(Ljava/lang/String;)V
      41: aload_1
      42: athrow
      43: astore_1
      44: getstatic     #12                 // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
      47: ldc           #36                 // String There was an error starting the ShutdownCallbackRegistry.
      49: aload_1
      50: invokevirtual #22                 // Method org/apache/logging/log4j/status/StatusLogger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      53: return
    Exception table:
       from    to  target type
          17    29    32   Class java/lang/IllegalStateException
          17    29    43   Class java/lang/RuntimeException

  public org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String, java.lang.ClassLoader, java.lang.Object, boolean);
    Code:
       0: aload_0
       1: getfield      #8                  // Field selector:Lorg/apache/logging/log4j/core/selector/ContextSelector;
       4: aload_1
       5: aload_2
       6: iload         4
       8: invokeinterface #37,  4           // InterfaceMethod org/apache/logging/log4j/core/selector/ContextSelector.getContext:(Ljava/lang/String;Ljava/lang/ClassLoader;Z)Lorg/apache/logging/log4j/core/LoggerContext;
      13: astore        5
      15: aload_3
      16: ifnull        33
      19: aload         5
      21: invokevirtual #38                 // Method org/apache/logging/log4j/core/LoggerContext.getExternalContext:()Ljava/lang/Object;
      24: ifnonnull     33
      27: aload         5
      29: aload_3
      30: invokevirtual #39                 // Method org/apache/logging/log4j/core/LoggerContext.setExternalContext:(Ljava/lang/Object;)V
      33: aload         5
      35: invokevirtual #40                 // Method org/apache/logging/log4j/core/LoggerContext.getState:()Lorg/apache/logging/log4j/core/LifeCycle$State;
      38: getstatic     #41                 // Field org/apache/logging/log4j/core/LifeCycle$State.INITIALIZED:Lorg/apache/logging/log4j/core/LifeCycle$State;
      41: if_acmpne     49
      44: aload         5
      46: invokevirtual #42                 // Method org/apache/logging/log4j/core/LoggerContext.start:()V
      49: aload         5
      51: areturn

  public org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String, java.lang.ClassLoader, java.lang.Object, boolean, org.apache.logging.log4j.core.config.ConfigurationSource);
    Code:
       0: aload_0
       1: getfield      #8                  // Field selector:Lorg/apache/logging/log4j/core/selector/ContextSelector;
       4: aload_1
       5: aload_2
       6: iload         4
       8: aconst_null
       9: invokeinterface #43,  5           // InterfaceMethod org/apache/logging/log4j/core/selector/ContextSelector.getContext:(Ljava/lang/String;Ljava/lang/ClassLoader;ZLjava/net/URI;)Lorg/apache/logging/log4j/core/LoggerContext;
      14: astore        6
      16: aload_3
      17: ifnull        34
      20: aload         6
      22: invokevirtual #38                 // Method org/apache/logging/log4j/core/LoggerContext.getExternalContext:()Ljava/lang/Object;
      25: ifnonnull     34
      28: aload         6
      30: aload_3
      31: invokevirtual #39                 // Method org/apache/logging/log4j/core/LoggerContext.setExternalContext:(Ljava/lang/Object;)V
      34: aload         6
      36: invokevirtual #40                 // Method org/apache/logging/log4j/core/LoggerContext.getState:()Lorg/apache/logging/log4j/core/LifeCycle$State;
      39: getstatic     #41                 // Field org/apache/logging/log4j/core/LifeCycle$State.INITIALIZED:Lorg/apache/logging/log4j/core/LifeCycle$State;
      42: if_acmpne     106
      45: aload         5
      47: ifnull        101
      50: getstatic     #44                 // Field org/apache/logging/log4j/core/impl/ContextAnchor.THREAD_CONTEXT:Ljava/lang/ThreadLocal;
      53: aload         6
      55: invokevirtual #45                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      58: invokestatic  #46                 // Method org/apache/logging/log4j/core/config/ConfigurationFactory.getInstance:()Lorg/apache/logging/log4j/core/config/ConfigurationFactory;
      61: aload         6
      63: aload         5
      65: invokevirtual #47                 // Method org/apache/logging/log4j/core/config/ConfigurationFactory.getConfiguration:(Lorg/apache/logging/log4j/core/LoggerContext;Lorg/apache/logging/log4j/core/config/ConfigurationSource;)Lorg/apache/logging/log4j/core/config/Configuration;
      68: astore        7
      70: getstatic     #12                 // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
      73: ldc           #48                 // String Starting LoggerContext[name={}] from configuration {}
      75: aload         6
      77: invokevirtual #49                 // Method org/apache/logging/log4j/core/LoggerContext.getName:()Ljava/lang/String;
      80: aload         5
      82: invokevirtual #50                 // Method org/apache/logging/log4j/status/StatusLogger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      85: aload         6
      87: aload         7
      89: invokevirtual #51                 // Method org/apache/logging/log4j/core/LoggerContext.start:(Lorg/apache/logging/log4j/core/config/Configuration;)V
      92: getstatic     #44                 // Field org/apache/logging/log4j/core/impl/ContextAnchor.THREAD_CONTEXT:Ljava/lang/ThreadLocal;
      95: invokevirtual #52                 // Method java/lang/ThreadLocal.remove:()V
      98: goto          106
     101: aload         6
     103: invokevirtual #42                 // Method org/apache/logging/log4j/core/LoggerContext.start:()V
     106: aload         6
     108: areturn

  public org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String, java.lang.ClassLoader, java.lang.Object, boolean, org.apache.logging.log4j.core.config.Configuration);
    Code:
       0: aload_0
       1: getfield      #8                  // Field selector:Lorg/apache/logging/log4j/core/selector/ContextSelector;
       4: aload_1
       5: aload_2
       6: iload         4
       8: aconst_null
       9: invokeinterface #43,  5           // InterfaceMethod org/apache/logging/log4j/core/selector/ContextSelector.getContext:(Ljava/lang/String;Ljava/lang/ClassLoader;ZLjava/net/URI;)Lorg/apache/logging/log4j/core/LoggerContext;
      14: astore        6
      16: aload_3
      17: ifnull        34
      20: aload         6
      22: invokevirtual #38                 // Method org/apache/logging/log4j/core/LoggerContext.getExternalContext:()Ljava/lang/Object;
      25: ifnonnull     34
      28: aload         6
      30: aload_3
      31: invokevirtual #39                 // Method org/apache/logging/log4j/core/LoggerContext.setExternalContext:(Ljava/lang/Object;)V
      34: aload         6
      36: invokevirtual #40                 // Method org/apache/logging/log4j/core/LoggerContext.getState:()Lorg/apache/logging/log4j/core/LifeCycle$State;
      39: getstatic     #41                 // Field org/apache/logging/log4j/core/LifeCycle$State.INITIALIZED:Lorg/apache/logging/log4j/core/LifeCycle$State;
      42: if_acmpne     80
      45: getstatic     #44                 // Field org/apache/logging/log4j/core/impl/ContextAnchor.THREAD_CONTEXT:Ljava/lang/ThreadLocal;
      48: aload         6
      50: invokevirtual #45                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      53: aload         6
      55: aload         5
      57: invokevirtual #51                 // Method org/apache/logging/log4j/core/LoggerContext.start:(Lorg/apache/logging/log4j/core/config/Configuration;)V
      60: getstatic     #44                 // Field org/apache/logging/log4j/core/impl/ContextAnchor.THREAD_CONTEXT:Ljava/lang/ThreadLocal;
      63: invokevirtual #52                 // Method java/lang/ThreadLocal.remove:()V
      66: goto          80
      69: astore        7
      71: getstatic     #44                 // Field org/apache/logging/log4j/core/impl/ContextAnchor.THREAD_CONTEXT:Ljava/lang/ThreadLocal;
      74: invokevirtual #52                 // Method java/lang/ThreadLocal.remove:()V
      77: aload         7
      79: athrow
      80: aload         6
      82: areturn
    Exception table:
       from    to  target type
          53    60    69   any
          69    71    69   any

  public org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String, java.lang.ClassLoader, java.lang.Object, boolean, java.net.URI, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field selector:Lorg/apache/logging/log4j/core/selector/ContextSelector;
       4: aload_1
       5: aload_2
       6: iload         4
       8: aload         5
      10: invokeinterface #43,  5           // InterfaceMethod org/apache/logging/log4j/core/selector/ContextSelector.getContext:(Ljava/lang/String;Ljava/lang/ClassLoader;ZLjava/net/URI;)Lorg/apache/logging/log4j/core/LoggerContext;
      15: astore        7
      17: aload_3
      18: ifnull        35
      21: aload         7
      23: invokevirtual #38                 // Method org/apache/logging/log4j/core/LoggerContext.getExternalContext:()Ljava/lang/Object;
      26: ifnonnull     35
      29: aload         7
      31: aload_3
      32: invokevirtual #39                 // Method org/apache/logging/log4j/core/LoggerContext.setExternalContext:(Ljava/lang/Object;)V
      35: aload         6
      37: ifnull        47
      40: aload         7
      42: aload         6
      44: invokevirtual #53                 // Method org/apache/logging/log4j/core/LoggerContext.setName:(Ljava/lang/String;)V
      47: aload         7
      49: invokevirtual #40                 // Method org/apache/logging/log4j/core/LoggerContext.getState:()Lorg/apache/logging/log4j/core/LifeCycle$State;
      52: getstatic     #41                 // Field org/apache/logging/log4j/core/LifeCycle$State.INITIALIZED:Lorg/apache/logging/log4j/core/LifeCycle$State;
      55: if_acmpne     126
      58: aload         5
      60: ifnonnull     68
      63: aload         6
      65: ifnull        121
      68: getstatic     #44                 // Field org/apache/logging/log4j/core/impl/ContextAnchor.THREAD_CONTEXT:Ljava/lang/ThreadLocal;
      71: aload         7
      73: invokevirtual #45                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      76: invokestatic  #46                 // Method org/apache/logging/log4j/core/config/ConfigurationFactory.getInstance:()Lorg/apache/logging/log4j/core/config/ConfigurationFactory;
      79: aload         7
      81: aload         6
      83: aload         5
      85: invokevirtual #54                 // Method org/apache/logging/log4j/core/config/ConfigurationFactory.getConfiguration:(Lorg/apache/logging/log4j/core/LoggerContext;Ljava/lang/String;Ljava/net/URI;)Lorg/apache/logging/log4j/core/config/Configuration;
      88: astore        8
      90: getstatic     #12                 // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
      93: ldc           #55                 // String Starting LoggerContext[name={}] from configuration at {}
      95: aload         7
      97: invokevirtual #49                 // Method org/apache/logging/log4j/core/LoggerContext.getName:()Ljava/lang/String;
     100: aload         5
     102: invokevirtual #50                 // Method org/apache/logging/log4j/status/StatusLogger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     105: aload         7
     107: aload         8
     109: invokevirtual #51                 // Method org/apache/logging/log4j/core/LoggerContext.start:(Lorg/apache/logging/log4j/core/config/Configuration;)V
     112: getstatic     #44                 // Field org/apache/logging/log4j/core/impl/ContextAnchor.THREAD_CONTEXT:Ljava/lang/ThreadLocal;
     115: invokevirtual #52                 // Method java/lang/ThreadLocal.remove:()V
     118: goto          126
     121: aload         7
     123: invokevirtual #42                 // Method org/apache/logging/log4j/core/LoggerContext.start:()V
     126: aload         7
     128: areturn

  public org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String, java.lang.ClassLoader, java.util.Map$Entry<java.lang.String, java.lang.Object>, boolean, java.net.URI, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field selector:Lorg/apache/logging/log4j/core/selector/ContextSelector;
       4: aload_1
       5: aload_2
       6: aload_3
       7: iload         4
       9: aload         5
      11: invokeinterface #56,  6           // InterfaceMethod org/apache/logging/log4j/core/selector/ContextSelector.getContext:(Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/util/Map$Entry;ZLjava/net/URI;)Lorg/apache/logging/log4j/core/LoggerContext;
      16: astore        7
      18: aload         6
      20: ifnull        30
      23: aload         7
      25: aload         6
      27: invokevirtual #53                 // Method org/apache/logging/log4j/core/LoggerContext.setName:(Ljava/lang/String;)V
      30: aload         7
      32: invokevirtual #40                 // Method org/apache/logging/log4j/core/LoggerContext.getState:()Lorg/apache/logging/log4j/core/LifeCycle$State;
      35: getstatic     #41                 // Field org/apache/logging/log4j/core/LifeCycle$State.INITIALIZED:Lorg/apache/logging/log4j/core/LifeCycle$State;
      38: if_acmpne     109
      41: aload         5
      43: ifnonnull     51
      46: aload         6
      48: ifnull        104
      51: getstatic     #44                 // Field org/apache/logging/log4j/core/impl/ContextAnchor.THREAD_CONTEXT:Ljava/lang/ThreadLocal;
      54: aload         7
      56: invokevirtual #45                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      59: invokestatic  #46                 // Method org/apache/logging/log4j/core/config/ConfigurationFactory.getInstance:()Lorg/apache/logging/log4j/core/config/ConfigurationFactory;
      62: aload         7
      64: aload         6
      66: aload         5
      68: invokevirtual #54                 // Method org/apache/logging/log4j/core/config/ConfigurationFactory.getConfiguration:(Lorg/apache/logging/log4j/core/LoggerContext;Ljava/lang/String;Ljava/net/URI;)Lorg/apache/logging/log4j/core/config/Configuration;
      71: astore        8
      73: getstatic     #12                 // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
      76: ldc           #55                 // String Starting LoggerContext[name={}] from configuration at {}
      78: aload         7
      80: invokevirtual #49                 // Method org/apache/logging/log4j/core/LoggerContext.getName:()Ljava/lang/String;
      83: aload         5
      85: invokevirtual #50                 // Method org/apache/logging/log4j/status/StatusLogger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      88: aload         7
      90: aload         8
      92: invokevirtual #51                 // Method org/apache/logging/log4j/core/LoggerContext.start:(Lorg/apache/logging/log4j/core/config/Configuration;)V
      95: getstatic     #44                 // Field org/apache/logging/log4j/core/impl/ContextAnchor.THREAD_CONTEXT:Ljava/lang/ThreadLocal;
      98: invokevirtual #52                 // Method java/lang/ThreadLocal.remove:()V
     101: goto          109
     104: aload         7
     106: invokevirtual #42                 // Method org/apache/logging/log4j/core/LoggerContext.start:()V
     109: aload         7
     111: areturn

  public org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String, java.lang.ClassLoader, java.lang.Object, boolean, java.util.List<java.net.URI>, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field selector:Lorg/apache/logging/log4j/core/selector/ContextSelector;
       4: aload_1
       5: aload_2
       6: iload         4
       8: aconst_null
       9: invokeinterface #43,  5           // InterfaceMethod org/apache/logging/log4j/core/selector/ContextSelector.getContext:(Ljava/lang/String;Ljava/lang/ClassLoader;ZLjava/net/URI;)Lorg/apache/logging/log4j/core/LoggerContext;
      14: astore        7
      16: aload_3
      17: ifnull        34
      20: aload         7
      22: invokevirtual #38                 // Method org/apache/logging/log4j/core/LoggerContext.getExternalContext:()Ljava/lang/Object;
      25: ifnonnull     34
      28: aload         7
      30: aload_3
      31: invokevirtual #39                 // Method org/apache/logging/log4j/core/LoggerContext.setExternalContext:(Ljava/lang/Object;)V
      34: aload         6
      36: ifnull        46
      39: aload         7
      41: aload         6
      43: invokevirtual #53                 // Method org/apache/logging/log4j/core/LoggerContext.setName:(Ljava/lang/String;)V
      46: aload         7
      48: invokevirtual #40                 // Method org/apache/logging/log4j/core/LoggerContext.getState:()Lorg/apache/logging/log4j/core/LifeCycle$State;
      51: getstatic     #41                 // Field org/apache/logging/log4j/core/LifeCycle$State.INITIALIZED:Lorg/apache/logging/log4j/core/LifeCycle$State;
      54: if_acmpne     351
      57: aload         5
      59: ifnull        346
      62: aload         5
      64: invokeinterface #57,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      69: ifne          346
      72: getstatic     #44                 // Field org/apache/logging/log4j/core/impl/ContextAnchor.THREAD_CONTEXT:Ljava/lang/ThreadLocal;
      75: aload         7
      77: invokevirtual #45                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      80: new           #58                 // class java/util/ArrayList
      83: dup
      84: aload         5
      86: invokeinterface #59,  1           // InterfaceMethod java/util/List.size:()I
      91: invokespecial #60                 // Method java/util/ArrayList."<init>":(I)V
      94: astore        8
      96: aload         5
      98: invokeinterface #61,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     103: astore        9
     105: aload         9
     107: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     112: ifeq          223
     115: aload         9
     117: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     122: checkcast     #64                 // class java/net/URI
     125: astore        10
     127: invokestatic  #46                 // Method org/apache/logging/log4j/core/config/ConfigurationFactory.getInstance:()Lorg/apache/logging/log4j/core/config/ConfigurationFactory;
     130: aload         7
     132: aload         6
     134: aload         10
     136: invokevirtual #54                 // Method org/apache/logging/log4j/core/config/ConfigurationFactory.getConfiguration:(Lorg/apache/logging/log4j/core/LoggerContext;Ljava/lang/String;Ljava/net/URI;)Lorg/apache/logging/log4j/core/config/Configuration;
     139: astore        11
     141: aload         11
     143: ifnull        207
     146: aload         11
     148: instanceof    #65                 // class org/apache/logging/log4j/core/config/DefaultConfiguration
     151: ifeq          170
     154: getstatic     #12                 // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
     157: ldc           #66                 // String Unable to locate configuration {}, ignoring
     159: aload         10
     161: invokevirtual #67                 // Method java/net/URI.toString:()Ljava/lang/String;
     164: invokevirtual #68                 // Method org/apache/logging/log4j/status/StatusLogger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
     167: goto          220
     170: aload         11
     172: instanceof    #69                 // class org/apache/logging/log4j/core/config/AbstractConfiguration
     175: ifeq          194
     178: aload         8
     180: aload         11
     182: checkcast     #69                 // class org/apache/logging/log4j/core/config/AbstractConfiguration
     185: invokeinterface #70,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     190: pop
     191: goto          220
     194: getstatic     #12                 // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
     197: ldc           #71                 // String Found configuration {}, which is not an AbstractConfiguration and can\'t be handled by CompositeConfiguration
     199: aload         10
     201: invokevirtual #72                 // Method org/apache/logging/log4j/status/StatusLogger.error:(Ljava/lang/String;Ljava/lang/Object;)V
     204: goto          220
     207: getstatic     #12                 // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
     210: ldc           #73                 // String Unable to access configuration {}, ignoring
     212: aload         10
     214: invokevirtual #67                 // Method java/net/URI.toString:()Ljava/lang/String;
     217: invokevirtual #74                 // Method org/apache/logging/log4j/status/StatusLogger.info:(Ljava/lang/String;Ljava/lang/Object;)V
     220: goto          105
     223: aload         8
     225: invokeinterface #57,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     230: ifeq          249
     233: getstatic     #12                 // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
     236: ldc           #75                 // String No configurations could be created for {}
     238: aload         5
     240: invokevirtual #76                 // Method java/lang/Object.toString:()Ljava/lang/String;
     243: invokevirtual #72                 // Method org/apache/logging/log4j/status/StatusLogger.error:(Ljava/lang/String;Ljava/lang/Object;)V
     246: goto          337
     249: aload         8
     251: invokeinterface #59,  1           // InterfaceMethod java/util/List.size:()I
     256: iconst_1
     257: if_icmpne     304
     260: aload         8
     262: iconst_0
     263: invokeinterface #77,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     268: checkcast     #69                 // class org/apache/logging/log4j/core/config/AbstractConfiguration
     271: astore        9
     273: getstatic     #12                 // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
     276: ldc           #55                 // String Starting LoggerContext[name={}] from configuration at {}
     278: aload         7
     280: invokevirtual #49                 // Method org/apache/logging/log4j/core/LoggerContext.getName:()Ljava/lang/String;
     283: aload         9
     285: invokevirtual #78                 // Method org/apache/logging/log4j/core/config/AbstractConfiguration.getConfigurationSource:()Lorg/apache/logging/log4j/core/config/ConfigurationSource;
     288: invokevirtual #79                 // Method org/apache/logging/log4j/core/config/ConfigurationSource.getLocation:()Ljava/lang/String;
     291: invokevirtual #50                 // Method org/apache/logging/log4j/status/StatusLogger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     294: aload         7
     296: aload         9
     298: invokevirtual #51                 // Method org/apache/logging/log4j/core/LoggerContext.start:(Lorg/apache/logging/log4j/core/config/Configuration;)V
     301: goto          337
     304: new           #80                 // class org/apache/logging/log4j/core/config/composite/CompositeConfiguration
     307: dup
     308: aload         8
     310: invokespecial #81                 // Method org/apache/logging/log4j/core/config/composite/CompositeConfiguration."<init>":(Ljava/util/List;)V
     313: astore        9
     315: getstatic     #12                 // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
     318: ldc           #82                 // String Starting LoggerContext[name={}] from configurations at {}
     320: aload         7
     322: invokevirtual #49                 // Method org/apache/logging/log4j/core/LoggerContext.getName:()Ljava/lang/String;
     325: aload         5
     327: invokevirtual #50                 // Method org/apache/logging/log4j/status/StatusLogger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     330: aload         7
     332: aload         9
     334: invokevirtual #51                 // Method org/apache/logging/log4j/core/LoggerContext.start:(Lorg/apache/logging/log4j/core/config/Configuration;)V
     337: getstatic     #44                 // Field org/apache/logging/log4j/core/impl/ContextAnchor.THREAD_CONTEXT:Ljava/lang/ThreadLocal;
     340: invokevirtual #52                 // Method java/lang/ThreadLocal.remove:()V
     343: goto          351
     346: aload         7
     348: invokevirtual #42                 // Method org/apache/logging/log4j/core/LoggerContext.start:()V
     351: aload         7
     353: areturn

  public void shutdown(java.lang.String, java.lang.ClassLoader, boolean, boolean);
    Code:
       0: aload_0
       1: getfield      #8                  // Field selector:Lorg/apache/logging/log4j/core/selector/ContextSelector;
       4: aload_1
       5: aload_2
       6: iload_3
       7: invokeinterface #83,  4           // InterfaceMethod org/apache/logging/log4j/core/selector/ContextSelector.hasContext:(Ljava/lang/String;Ljava/lang/ClassLoader;Z)Z
      12: ifeq          29
      15: aload_0
      16: getfield      #8                  // Field selector:Lorg/apache/logging/log4j/core/selector/ContextSelector;
      19: aload_1
      20: aload_2
      21: iload_3
      22: iload         4
      24: invokeinterface #84,  5           // InterfaceMethod org/apache/logging/log4j/core/selector/ContextSelector.shutdown:(Ljava/lang/String;Ljava/lang/ClassLoader;ZZ)V
      29: return

  public boolean hasContext(java.lang.String, java.lang.ClassLoader, boolean);
    Code:
       0: aload_0
       1: getfield      #8                  // Field selector:Lorg/apache/logging/log4j/core/selector/ContextSelector;
       4: aload_1
       5: aload_2
       6: iload_3
       7: invokeinterface #83,  4           // InterfaceMethod org/apache/logging/log4j/core/selector/ContextSelector.hasContext:(Ljava/lang/String;Ljava/lang/ClassLoader;Z)Z
      12: ireturn

  public org.apache.logging.log4j.core.selector.ContextSelector getSelector();
    Code:
       0: aload_0
       1: getfield      #8                  // Field selector:Lorg/apache/logging/log4j/core/selector/ContextSelector;
       4: areturn

  public org.apache.logging.log4j.core.util.ShutdownCallbackRegistry getShutdownCallbackRegistry();
    Code:
       0: aload_0
       1: getfield      #11                 // Field shutdownCallbackRegistry:Lorg/apache/logging/log4j/core/util/ShutdownCallbackRegistry;
       4: areturn

  public void removeContext(org.apache.logging.log4j.spi.LoggerContext);
    Code:
       0: aload_1
       1: instanceof    #85                 // class org/apache/logging/log4j/core/LoggerContext
       4: ifeq          20
       7: aload_0
       8: getfield      #8                  // Field selector:Lorg/apache/logging/log4j/core/selector/ContextSelector;
      11: aload_1
      12: checkcast     #85                 // class org/apache/logging/log4j/core/LoggerContext
      15: invokeinterface #86,  2           // InterfaceMethod org/apache/logging/log4j/core/selector/ContextSelector.removeContext:(Lorg/apache/logging/log4j/core/LoggerContext;)V
      20: return

  public boolean isClassLoaderDependent();
    Code:
       0: aload_0
       1: getfield      #8                  // Field selector:Lorg/apache/logging/log4j/core/selector/ContextSelector;
       4: invokeinterface #87,  1           // InterfaceMethod org/apache/logging/log4j/core/selector/ContextSelector.isClassLoaderDependent:()Z
       9: ireturn

  public org.apache.logging.log4j.core.util.Cancellable addShutdownCallback(java.lang.Runnable);
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method isShutdownHookEnabled:()Z
       4: ifeq          20
       7: aload_0
       8: getfield      #11                 // Field shutdownCallbackRegistry:Lorg/apache/logging/log4j/core/util/ShutdownCallbackRegistry;
      11: aload_1
      12: invokeinterface #88,  2           // InterfaceMethod org/apache/logging/log4j/core/util/ShutdownCallbackRegistry.addShutdownCallback:(Ljava/lang/Runnable;)Lorg/apache/logging/log4j/core/util/Cancellable;
      17: goto          21
      20: aconst_null
      21: areturn

  public boolean isShutdownHookEnabled();
    Code:
       0: getstatic     #89                 // Field SHUTDOWN_HOOK_ENABLED:Z
       3: ireturn

  public org.apache.logging.log4j.spi.LoggerContext getContext(java.lang.String, java.lang.ClassLoader, java.lang.Object, boolean, java.net.URI, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: aload         5
       8: aload         6
      10: invokevirtual #90                 // Method getContext:(Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/lang/Object;ZLjava/net/URI;Ljava/lang/String;)Lorg/apache/logging/log4j/core/LoggerContext;
      13: areturn

  public org.apache.logging.log4j.spi.LoggerContext getContext(java.lang.String, java.lang.ClassLoader, java.lang.Object, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: invokevirtual #91                 // Method getContext:(Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/lang/Object;Z)Lorg/apache/logging/log4j/core/LoggerContext;
       9: areturn

  static {};
    Code:
       0: invokestatic  #92                 // Method org/apache/logging/log4j/status/StatusLogger.getLogger:()Lorg/apache/logging/log4j/status/StatusLogger;
       3: putstatic     #12                 // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
       6: invokestatic  #93                 // Method org/apache/logging/log4j/util/PropertiesUtil.getProperties:()Lorg/apache/logging/log4j/util/PropertiesUtil;
       9: ldc           #94                 // String log4j.shutdownHookEnabled
      11: iconst_1
      12: invokevirtual #95                 // Method org/apache/logging/log4j/util/PropertiesUtil.getBooleanProperty:(Ljava/lang/String;Z)Z
      15: ifeq          28
      18: getstatic     #96                 // Field org/apache/logging/log4j/core/util/Constants.IS_WEB_APP:Z
      21: ifne          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: putstatic     #89                 // Field SHUTDOWN_HOOK_ENABLED:Z
      32: return
}
