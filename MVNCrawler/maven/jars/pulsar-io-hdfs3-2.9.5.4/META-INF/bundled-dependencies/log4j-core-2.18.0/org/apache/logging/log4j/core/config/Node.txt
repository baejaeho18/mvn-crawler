Compiled from "Node.java"
public class org.apache.logging.log4j.core.config.Node {
  public static final java.lang.String CATEGORY;

  private org.apache.logging.log4j.core.config.Node parent;

  private final java.lang.String name;

  private java.lang.String value;

  private final org.apache.logging.log4j.core.config.plugins.util.PluginType<?> type;

  private final java.util.Map<java.lang.String, java.lang.String> attributes;

  private final java.util.List<org.apache.logging.log4j.core.config.Node> children;

  private java.lang.Object object;

  public org.apache.logging.log4j.core.config.Node(org.apache.logging.log4j.core.config.Node, java.lang.String, org.apache.logging.log4j.core.config.plugins.util.PluginType<?>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field attributes:Ljava/util/Map;
      15: aload_0
      16: new           #5                  // class java/util/ArrayList
      19: dup
      20: invokespecial #6                  // Method java/util/ArrayList."<init>":()V
      23: putfield      #7                  // Field children:Ljava/util/List;
      26: aload_0
      27: aload_1
      28: putfield      #8                  // Field parent:Lorg/apache/logging/log4j/core/config/Node;
      31: aload_0
      32: aload_2
      33: putfield      #9                  // Field name:Ljava/lang/String;
      36: aload_0
      37: aload_3
      38: putfield      #10                 // Field type:Lorg/apache/logging/log4j/core/config/plugins/util/PluginType;
      41: return

  public org.apache.logging.log4j.core.config.Node();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field attributes:Ljava/util/Map;
      15: aload_0
      16: new           #5                  // class java/util/ArrayList
      19: dup
      20: invokespecial #6                  // Method java/util/ArrayList."<init>":()V
      23: putfield      #7                  // Field children:Ljava/util/List;
      26: aload_0
      27: aconst_null
      28: putfield      #8                  // Field parent:Lorg/apache/logging/log4j/core/config/Node;
      31: aload_0
      32: aconst_null
      33: putfield      #9                  // Field name:Ljava/lang/String;
      36: aload_0
      37: aconst_null
      38: putfield      #10                 // Field type:Lorg/apache/logging/log4j/core/config/plugins/util/PluginType;
      41: return

  public org.apache.logging.log4j.core.config.Node(org.apache.logging.log4j.core.config.Node);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field attributes:Ljava/util/Map;
      15: aload_0
      16: new           #5                  // class java/util/ArrayList
      19: dup
      20: invokespecial #6                  // Method java/util/ArrayList."<init>":()V
      23: putfield      #7                  // Field children:Ljava/util/List;
      26: aload_0
      27: aload_1
      28: getfield      #8                  // Field parent:Lorg/apache/logging/log4j/core/config/Node;
      31: putfield      #8                  // Field parent:Lorg/apache/logging/log4j/core/config/Node;
      34: aload_0
      35: aload_1
      36: getfield      #9                  // Field name:Ljava/lang/String;
      39: putfield      #9                  // Field name:Ljava/lang/String;
      42: aload_0
      43: aload_1
      44: getfield      #10                 // Field type:Lorg/apache/logging/log4j/core/config/plugins/util/PluginType;
      47: putfield      #10                 // Field type:Lorg/apache/logging/log4j/core/config/plugins/util/PluginType;
      50: aload_0
      51: getfield      #4                  // Field attributes:Ljava/util/Map;
      54: aload_1
      55: invokevirtual #11                 // Method getAttributes:()Ljava/util/Map;
      58: invokeinterface #12,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      63: aload_0
      64: aload_1
      65: invokevirtual #13                 // Method getValue:()Ljava/lang/String;
      68: putfield      #14                 // Field value:Ljava/lang/String;
      71: aload_1
      72: invokevirtual #15                 // Method getChildren:()Ljava/util/List;
      75: invokeinterface #16,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      80: astore_2
      81: aload_2
      82: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      87: ifeq          121
      90: aload_2
      91: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      96: checkcast     #19                 // class org/apache/logging/log4j/core/config/Node
      99: astore_3
     100: aload_0
     101: getfield      #7                  // Field children:Ljava/util/List;
     104: new           #19                 // class org/apache/logging/log4j/core/config/Node
     107: dup
     108: aload_3
     109: invokespecial #20                 // Method "<init>":(Lorg/apache/logging/log4j/core/config/Node;)V
     112: invokeinterface #21,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     117: pop
     118: goto          81
     121: aload_0
     122: aload_1
     123: getfield      #22                 // Field object:Ljava/lang/Object;
     126: putfield      #22                 // Field object:Ljava/lang/Object;
     129: return

  public void setParent(org.apache.logging.log4j.core.config.Node);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field parent:Lorg/apache/logging/log4j/core/config/Node;
       5: return

  public java.util.Map<java.lang.String, java.lang.String> getAttributes();
    Code:
       0: aload_0
       1: getfield      #4                  // Field attributes:Ljava/util/Map;
       4: areturn

  public java.util.List<org.apache.logging.log4j.core.config.Node> getChildren();
    Code:
       0: aload_0
       1: getfield      #7                  // Field children:Ljava/util/List;
       4: areturn

  public boolean hasChildren();
    Code:
       0: aload_0
       1: getfield      #7                  // Field children:Ljava/util/List;
       4: invokeinterface #23,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public java.lang.String getValue();
    Code:
       0: aload_0
       1: getfield      #14                 // Field value:Ljava/lang/String;
       4: areturn

  public void setValue(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field value:Ljava/lang/String;
       5: return

  public org.apache.logging.log4j.core.config.Node getParent();
    Code:
       0: aload_0
       1: getfield      #8                  // Field parent:Lorg/apache/logging/log4j/core/config/Node;
       4: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #9                  // Field name:Ljava/lang/String;
       4: areturn

  public boolean isRoot();
    Code:
       0: aload_0
       1: getfield      #8                  // Field parent:Lorg/apache/logging/log4j/core/config/Node;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void setObject(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field object:Ljava/lang/Object;
       5: return

  public <T> T getObject();
    Code:
       0: aload_0
       1: getfield      #22                 // Field object:Ljava/lang/Object;
       4: areturn

  public <T> T getObject(java.lang.Class<T>);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #22                 // Field object:Ljava/lang/Object;
       5: invokevirtual #24                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public boolean isInstanceOf(java.lang.Class<?>);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #22                 // Field object:Ljava/lang/Object;
       5: invokevirtual #25                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
       8: ireturn

  public org.apache.logging.log4j.core.config.plugins.util.PluginType<?> getType();
    Code:
       0: aload_0
       1: getfield      #10                 // Field type:Lorg/apache/logging/log4j/core/config/plugins/util/PluginType;
       4: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #22                 // Field object:Ljava/lang/Object;
       4: ifnonnull     10
       7: ldc           #26                 // String null
       9: areturn
      10: aload_0
      11: getfield      #10                 // Field type:Lorg/apache/logging/log4j/core/config/plugins/util/PluginType;
      14: invokevirtual #27                 // Method org/apache/logging/log4j/core/config/plugins/util/PluginType.isObjectPrintable:()Z
      17: ifeq          30
      20: aload_0
      21: getfield      #22                 // Field object:Ljava/lang/Object;
      24: invokevirtual #28                 // Method java/lang/Object.toString:()Ljava/lang/String;
      27: goto          65
      30: new           #29                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      37: aload_0
      38: getfield      #10                 // Field type:Lorg/apache/logging/log4j/core/config/plugins/util/PluginType;
      41: invokevirtual #31                 // Method org/apache/logging/log4j/core/config/plugins/util/PluginType.getPluginClass:()Ljava/lang/Class;
      44: invokevirtual #32                 // Method java/lang/Class.getName:()Ljava/lang/String;
      47: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: ldc           #34                 // String  with name
      52: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: aload_0
      56: getfield      #9                  // Field name:Ljava/lang/String;
      59: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: areturn
}
