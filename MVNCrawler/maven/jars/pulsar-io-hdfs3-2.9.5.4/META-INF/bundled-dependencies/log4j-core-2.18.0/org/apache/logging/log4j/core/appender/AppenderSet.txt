Compiled from "AppenderSet.java"
public class org.apache.logging.log4j.core.appender.AppenderSet {
  private static final org.apache.logging.log4j.status.StatusLogger LOGGER;

  private final org.apache.logging.log4j.core.config.Configuration configuration;

  private final java.util.Map<java.lang.String, org.apache.logging.log4j.core.config.Node> nodeMap;

  public static org.apache.logging.log4j.core.appender.AppenderSet$Builder newBuilder();
    Code:
       0: new           #3                  // class org/apache/logging/log4j/core/appender/AppenderSet$Builder
       3: dup
       4: invokespecial #4                  // Method org/apache/logging/log4j/core/appender/AppenderSet$Builder."<init>":()V
       7: areturn

  private org.apache.logging.log4j.core.appender.AppenderSet(org.apache.logging.log4j.core.config.Configuration, java.util.Map<java.lang.String, org.apache.logging.log4j.core.config.Node>);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #6                  // Field configuration:Lorg/apache/logging/log4j/core/config/Configuration;
       9: aload_0
      10: aload_2
      11: putfield      #7                  // Field nodeMap:Ljava/util/Map;
      14: return

  public org.apache.logging.log4j.core.Appender createAppender(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field nodeMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #8,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #9                  // class org/apache/logging/log4j/core/config/Node
      13: astore_3
      14: aload_3
      15: ifnonnull     30
      18: getstatic     #2                  // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
      21: ldc           #10                 // String No node named {} in {}
      23: aload_1
      24: aload_0
      25: invokevirtual #11                 // Method org/apache/logging/log4j/status/StatusLogger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      28: aconst_null
      29: areturn
      30: aload_3
      31: invokevirtual #12                 // Method org/apache/logging/log4j/core/config/Node.getAttributes:()Ljava/util/Map;
      34: ldc           #13                 // String name
      36: aload_2
      37: invokeinterface #14,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      42: pop
      43: aload_3
      44: invokevirtual #15                 // Method org/apache/logging/log4j/core/config/Node.getType:()Lorg/apache/logging/log4j/core/config/plugins/util/PluginType;
      47: invokevirtual #16                 // Method org/apache/logging/log4j/core/config/plugins/util/PluginType.getElementName:()Ljava/lang/String;
      50: ldc           #18                 // String appender
      52: invokevirtual #19                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      55: ifeq          141
      58: new           #9                  // class org/apache/logging/log4j/core/config/Node
      61: dup
      62: aload_3
      63: invokespecial #20                 // Method org/apache/logging/log4j/core/config/Node."<init>":(Lorg/apache/logging/log4j/core/config/Node;)V
      66: astore        4
      68: aload_0
      69: getfield      #6                  // Field configuration:Lorg/apache/logging/log4j/core/config/Configuration;
      72: aload         4
      74: aconst_null
      75: invokeinterface #21,  3           // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.createConfiguration:(Lorg/apache/logging/log4j/core/config/Node;Lorg/apache/logging/log4j/core/LogEvent;)V
      80: aload         4
      82: invokevirtual #22                 // Method org/apache/logging/log4j/core/config/Node.getObject:()Ljava/lang/Object;
      85: instanceof    #17                 // class org/apache/logging/log4j/core/Appender
      88: ifeq          111
      91: aload         4
      93: invokevirtual #22                 // Method org/apache/logging/log4j/core/config/Node.getObject:()Ljava/lang/Object;
      96: checkcast     #17                 // class org/apache/logging/log4j/core/Appender
      99: astore        5
     101: aload         5
     103: invokeinterface #23,  1           // InterfaceMethod org/apache/logging/log4j/core/Appender.start:()V
     108: aload         5
     110: areturn
     111: getstatic     #2                  // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
     114: new           #24                 // class java/lang/StringBuilder
     117: dup
     118: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     121: ldc           #26                 // String Unable to create Appender of type
     123: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: aload_3
     127: invokevirtual #28                 // Method org/apache/logging/log4j/core/config/Node.getName:()Ljava/lang/String;
     130: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     136: invokevirtual #30                 // Method org/apache/logging/log4j/status/StatusLogger.error:(Ljava/lang/String;)V
     139: aconst_null
     140: areturn
     141: getstatic     #2                  // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
     144: new           #24                 // class java/lang/StringBuilder
     147: dup
     148: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     151: ldc           #31                 // String No Appender was configured for name {}
     153: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     156: aload_1
     157: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     160: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     163: invokevirtual #30                 // Method org/apache/logging/log4j/status/StatusLogger.error:(Ljava/lang/String;)V
     166: aconst_null
     167: areturn

  static org.apache.logging.log4j.status.StatusLogger access$000();
    Code:
       0: getstatic     #2                  // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
       3: areturn

  org.apache.logging.log4j.core.appender.AppenderSet(org.apache.logging.log4j.core.config.Configuration, java.util.Map, org.apache.logging.log4j.core.appender.AppenderSet$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method "<init>":(Lorg/apache/logging/log4j/core/config/Configuration;Ljava/util/Map;)V
       6: return

  static {};
    Code:
       0: invokestatic  #32                 // Method org/apache/logging/log4j/status/StatusLogger.getLogger:()Lorg/apache/logging/log4j/status/StatusLogger;
       3: putstatic     #2                  // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
       6: return
}
