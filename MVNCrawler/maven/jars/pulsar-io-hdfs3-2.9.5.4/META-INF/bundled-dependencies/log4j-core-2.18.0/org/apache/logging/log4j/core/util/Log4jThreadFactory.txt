Compiled from "Log4jThreadFactory.java"
public class org.apache.logging.log4j.core.util.Log4jThreadFactory implements java.util.concurrent.ThreadFactory {
  private static final java.lang.String PREFIX;

  private static final java.util.concurrent.atomic.AtomicInteger FACTORY_NUMBER;

  private static final java.util.concurrent.atomic.AtomicInteger THREAD_NUMBER;

  private final boolean daemon;

  private final java.lang.ThreadGroup group;

  private final int priority;

  private final java.lang.String threadNamePrefix;

  public static org.apache.logging.log4j.core.util.Log4jThreadFactory createDaemonThreadFactory(java.lang.String);
    Code:
       0: new           #1                  // class org/apache/logging/log4j/core/util/Log4jThreadFactory
       3: dup
       4: aload_0
       5: iconst_1
       6: iconst_5
       7: invokespecial #3                  // Method "<init>":(Ljava/lang/String;ZI)V
      10: areturn

  public static org.apache.logging.log4j.core.util.Log4jThreadFactory createThreadFactory(java.lang.String);
    Code:
       0: new           #1                  // class org/apache/logging/log4j/core/util/Log4jThreadFactory
       3: dup
       4: aload_0
       5: iconst_0
       6: iconst_5
       7: invokespecial #3                  // Method "<init>":(Ljava/lang/String;ZI)V
      10: areturn

  public org.apache.logging.log4j.core.util.Log4jThreadFactory(java.lang.String, boolean, int);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #5                  // class java/lang/StringBuilder
       8: dup
       9: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      12: ldc           #7                  // String TF-
      14: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: getstatic     #9                  // Field FACTORY_NUMBER:Ljava/util/concurrent/atomic/AtomicInteger;
      20: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      23: invokevirtual #11                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      26: ldc           #12                 // String -
      28: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_1
      32: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #12                 // String -
      37: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: putfield      #14                 // Field threadNamePrefix:Ljava/lang/String;
      46: aload_0
      47: iload_2
      48: putfield      #15                 // Field daemon:Z
      51: aload_0
      52: iload_3
      53: putfield      #16                 // Field priority:I
      56: invokestatic  #17                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
      59: astore        4
      61: aload_0
      62: aload         4
      64: ifnull        75
      67: aload         4
      69: invokevirtual #18                 // Method java/lang/SecurityManager.getThreadGroup:()Ljava/lang/ThreadGroup;
      72: goto          81
      75: invokestatic  #19                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      78: invokevirtual #20                 // Method java/lang/Thread.getThreadGroup:()Ljava/lang/ThreadGroup;
      81: putfield      #21                 // Field group:Ljava/lang/ThreadGroup;
      84: return

  public java.lang.Thread newThread(java.lang.Runnable);
    Code:
       0: new           #22                 // class org/apache/logging/log4j/core/util/Log4jThread
       3: dup
       4: aload_0
       5: getfield      #21                 // Field group:Ljava/lang/ThreadGroup;
       8: aload_1
       9: new           #5                  // class java/lang/StringBuilder
      12: dup
      13: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      16: aload_0
      17: getfield      #14                 // Field threadNamePrefix:Ljava/lang/String;
      20: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: getstatic     #23                 // Field THREAD_NUMBER:Ljava/util/concurrent/atomic/AtomicInteger;
      26: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      29: invokevirtual #11                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      32: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: lconst_0
      36: invokespecial #24                 // Method org/apache/logging/log4j/core/util/Log4jThread."<init>":(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;J)V
      39: astore_2
      40: aload_2
      41: invokevirtual #25                 // Method java/lang/Thread.isDaemon:()Z
      44: aload_0
      45: getfield      #15                 // Field daemon:Z
      48: if_icmpeq     59
      51: aload_2
      52: aload_0
      53: getfield      #15                 // Field daemon:Z
      56: invokevirtual #26                 // Method java/lang/Thread.setDaemon:(Z)V
      59: aload_2
      60: invokevirtual #27                 // Method java/lang/Thread.getPriority:()I
      63: aload_0
      64: getfield      #16                 // Field priority:I
      67: if_icmpeq     78
      70: aload_2
      71: aload_0
      72: getfield      #16                 // Field priority:I
      75: invokevirtual #28                 // Method java/lang/Thread.setPriority:(I)V
      78: aload_2
      79: areturn

  static {};
    Code:
       0: new           #29                 // class java/util/concurrent/atomic/AtomicInteger
       3: dup
       4: iconst_1
       5: invokespecial #30                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
       8: putstatic     #9                  // Field FACTORY_NUMBER:Ljava/util/concurrent/atomic/AtomicInteger;
      11: new           #29                 // class java/util/concurrent/atomic/AtomicInteger
      14: dup
      15: iconst_1
      16: invokespecial #30                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      19: putstatic     #23                 // Field THREAD_NUMBER:Ljava/util/concurrent/atomic/AtomicInteger;
      22: return
}
