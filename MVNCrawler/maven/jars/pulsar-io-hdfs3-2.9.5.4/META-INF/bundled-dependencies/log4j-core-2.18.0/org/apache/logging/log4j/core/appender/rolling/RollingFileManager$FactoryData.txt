Compiled from "RollingFileManager.java"
class org.apache.logging.log4j.core.appender.rolling.RollingFileManager$FactoryData extends org.apache.logging.log4j.core.appender.ConfigurationFactoryData {
  private final java.lang.String fileName;

  private final java.lang.String pattern;

  private final boolean append;

  private final boolean bufferedIO;

  private final int bufferSize;

  private final boolean immediateFlush;

  private final boolean createOnDemand;

  private final org.apache.logging.log4j.core.appender.rolling.TriggeringPolicy policy;

  private final org.apache.logging.log4j.core.appender.rolling.RolloverStrategy strategy;

  private final java.lang.String advertiseURI;

  private final org.apache.logging.log4j.core.Layout<? extends java.io.Serializable> layout;

  private final java.lang.String filePermissions;

  private final java.lang.String fileOwner;

  private final java.lang.String fileGroup;

  public org.apache.logging.log4j.core.appender.rolling.RollingFileManager$FactoryData(java.lang.String, java.lang.String, boolean, boolean, org.apache.logging.log4j.core.appender.rolling.TriggeringPolicy, org.apache.logging.log4j.core.appender.rolling.RolloverStrategy, java.lang.String, org.apache.logging.log4j.core.Layout<? extends java.io.Serializable>, int, boolean, boolean, java.lang.String, java.lang.String, java.lang.String, org.apache.logging.log4j.core.config.Configuration);
    Code:
       0: aload_0
       1: aload         15
       3: invokespecial #14                 // Method org/apache/logging/log4j/core/appender/ConfigurationFactoryData."<init>":(Lorg/apache/logging/log4j/core/config/Configuration;)V
       6: aload_0
       7: aload_1
       8: putfield      #13                 // Field fileName:Ljava/lang/String;
      11: aload_0
      12: aload_2
      13: putfield      #8                  // Field pattern:Ljava/lang/String;
      16: aload_0
      17: iload_3
      18: putfield      #11                 // Field append:Z
      21: aload_0
      22: iload         4
      24: putfield      #10                 // Field bufferedIO:Z
      27: aload_0
      28: iload         9
      30: putfield      #9                  // Field bufferSize:I
      33: aload_0
      34: aload         5
      36: putfield      #7                  // Field policy:Lorg/apache/logging/log4j/core/appender/rolling/TriggeringPolicy;
      39: aload_0
      40: aload         6
      42: putfield      #6                  // Field strategy:Lorg/apache/logging/log4j/core/appender/rolling/RolloverStrategy;
      45: aload_0
      46: aload         7
      48: putfield      #5                  // Field advertiseURI:Ljava/lang/String;
      51: aload_0
      52: aload         8
      54: putfield      #4                  // Field layout:Lorg/apache/logging/log4j/core/Layout;
      57: aload_0
      58: iload         10
      60: putfield      #15                 // Field immediateFlush:Z
      63: aload_0
      64: iload         11
      66: putfield      #12                 // Field createOnDemand:Z
      69: aload_0
      70: aload         12
      72: putfield      #3                  // Field filePermissions:Ljava/lang/String;
      75: aload_0
      76: aload         13
      78: putfield      #2                  // Field fileOwner:Ljava/lang/String;
      81: aload_0
      82: aload         14
      84: putfield      #1                  // Field fileGroup:Ljava/lang/String;
      87: return

  public org.apache.logging.log4j.core.appender.rolling.TriggeringPolicy getTriggeringPolicy();
    Code:
       0: aload_0
       1: getfield      #7                  // Field policy:Lorg/apache/logging/log4j/core/appender/rolling/TriggeringPolicy;
       4: areturn

  public org.apache.logging.log4j.core.appender.rolling.RolloverStrategy getRolloverStrategy();
    Code:
       0: aload_0
       1: getfield      #6                  // Field strategy:Lorg/apache/logging/log4j/core/appender/rolling/RolloverStrategy;
       4: areturn

  public java.lang.String getPattern();
    Code:
       0: aload_0
       1: getfield      #8                  // Field pattern:Ljava/lang/String;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #16                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokespecial #18                 // Method java/lang/Object.toString:()Ljava/lang/String;
      13: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: pop
      17: aload_1
      18: ldc           #20                 // String [pattern=
      20: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: pop
      24: aload_1
      25: aload_0
      26: getfield      #8                  // Field pattern:Ljava/lang/String;
      29: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: pop
      33: aload_1
      34: ldc           #21                 // String , append=
      36: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: pop
      40: aload_1
      41: aload_0
      42: getfield      #11                 // Field append:Z
      45: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      48: pop
      49: aload_1
      50: ldc           #23                 // String , bufferedIO=
      52: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: pop
      56: aload_1
      57: aload_0
      58: getfield      #10                 // Field bufferedIO:Z
      61: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      64: pop
      65: aload_1
      66: ldc           #24                 // String , bufferSize=
      68: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: pop
      72: aload_1
      73: aload_0
      74: getfield      #9                  // Field bufferSize:I
      77: invokevirtual #25                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      80: pop
      81: aload_1
      82: ldc           #26                 // String , policy=
      84: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: pop
      88: aload_1
      89: aload_0
      90: getfield      #7                  // Field policy:Lorg/apache/logging/log4j/core/appender/rolling/TriggeringPolicy;
      93: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      96: pop
      97: aload_1
      98: ldc           #28                 // String , strategy=
     100: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: pop
     104: aload_1
     105: aload_0
     106: getfield      #6                  // Field strategy:Lorg/apache/logging/log4j/core/appender/rolling/RolloverStrategy;
     109: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     112: pop
     113: aload_1
     114: ldc           #29                 // String , advertiseURI=
     116: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: pop
     120: aload_1
     121: aload_0
     122: getfield      #5                  // Field advertiseURI:Ljava/lang/String;
     125: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: pop
     129: aload_1
     130: ldc           #30                 // String , layout=
     132: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: pop
     136: aload_1
     137: aload_0
     138: getfield      #4                  // Field layout:Lorg/apache/logging/log4j/core/Layout;
     141: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     144: pop
     145: aload_1
     146: ldc           #31                 // String , filePermissions=
     148: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     151: pop
     152: aload_1
     153: aload_0
     154: getfield      #3                  // Field filePermissions:Ljava/lang/String;
     157: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     160: pop
     161: aload_1
     162: ldc           #32                 // String , fileOwner=
     164: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     167: pop
     168: aload_1
     169: aload_0
     170: getfield      #2                  // Field fileOwner:Ljava/lang/String;
     173: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     176: pop
     177: aload_1
     178: ldc           #33                 // String ]
     180: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     183: pop
     184: aload_1
     185: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     188: areturn

  static java.lang.String access$200(org.apache.logging.log4j.core.appender.rolling.RollingFileManager$FactoryData);
    Code:
       0: aload_0
       1: getfield      #13                 // Field fileName:Ljava/lang/String;
       4: areturn

  static boolean access$300(org.apache.logging.log4j.core.appender.rolling.RollingFileManager$FactoryData);
    Code:
       0: aload_0
       1: getfield      #12                 // Field createOnDemand:Z
       4: ireturn

  static boolean access$600(org.apache.logging.log4j.core.appender.rolling.RollingFileManager$FactoryData);
    Code:
       0: aload_0
       1: getfield      #11                 // Field append:Z
       4: ireturn

  static boolean access$700(org.apache.logging.log4j.core.appender.rolling.RollingFileManager$FactoryData);
    Code:
       0: aload_0
       1: getfield      #10                 // Field bufferedIO:Z
       4: ireturn

  static int access$800(org.apache.logging.log4j.core.appender.rolling.RollingFileManager$FactoryData);
    Code:
       0: aload_0
       1: getfield      #9                  // Field bufferSize:I
       4: ireturn

  static java.lang.String access$1000(org.apache.logging.log4j.core.appender.rolling.RollingFileManager$FactoryData);
    Code:
       0: aload_0
       1: getfield      #8                  // Field pattern:Ljava/lang/String;
       4: areturn

  static org.apache.logging.log4j.core.appender.rolling.TriggeringPolicy access$1100(org.apache.logging.log4j.core.appender.rolling.RollingFileManager$FactoryData);
    Code:
       0: aload_0
       1: getfield      #7                  // Field policy:Lorg/apache/logging/log4j/core/appender/rolling/TriggeringPolicy;
       4: areturn

  static org.apache.logging.log4j.core.appender.rolling.RolloverStrategy access$1200(org.apache.logging.log4j.core.appender.rolling.RollingFileManager$FactoryData);
    Code:
       0: aload_0
       1: getfield      #6                  // Field strategy:Lorg/apache/logging/log4j/core/appender/rolling/RolloverStrategy;
       4: areturn

  static java.lang.String access$1300(org.apache.logging.log4j.core.appender.rolling.RollingFileManager$FactoryData);
    Code:
       0: aload_0
       1: getfield      #5                  // Field advertiseURI:Ljava/lang/String;
       4: areturn

  static org.apache.logging.log4j.core.Layout access$1400(org.apache.logging.log4j.core.appender.rolling.RollingFileManager$FactoryData);
    Code:
       0: aload_0
       1: getfield      #4                  // Field layout:Lorg/apache/logging/log4j/core/Layout;
       4: areturn

  static java.lang.String access$1500(org.apache.logging.log4j.core.appender.rolling.RollingFileManager$FactoryData);
    Code:
       0: aload_0
       1: getfield      #3                  // Field filePermissions:Ljava/lang/String;
       4: areturn

  static java.lang.String access$1600(org.apache.logging.log4j.core.appender.rolling.RollingFileManager$FactoryData);
    Code:
       0: aload_0
       1: getfield      #2                  // Field fileOwner:Ljava/lang/String;
       4: areturn

  static java.lang.String access$1700(org.apache.logging.log4j.core.appender.rolling.RollingFileManager$FactoryData);
    Code:
       0: aload_0
       1: getfield      #1                  // Field fileGroup:Ljava/lang/String;
       4: areturn
}
