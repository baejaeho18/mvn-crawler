Compiled from "HttpAppender.java"
public final class org.apache.logging.log4j.core.appender.HttpAppender extends org.apache.logging.log4j.core.appender.AbstractAppender {
  private final org.apache.logging.log4j.core.appender.HttpManager manager;

  public static <B extends org.apache.logging.log4j.core.appender.HttpAppender$Builder<B>> B newBuilder();
    Code:
       0: new           #2                  // class org/apache/logging/log4j/core/appender/HttpAppender$Builder
       3: dup
       4: invokespecial #3                  // Method org/apache/logging/log4j/core/appender/HttpAppender$Builder."<init>":()V
       7: invokevirtual #4                  // Method org/apache/logging/log4j/core/appender/HttpAppender$Builder.asBuilder:()Lorg/apache/logging/log4j/core/filter/AbstractFilterable$Builder;
      10: checkcast     #2                  // class org/apache/logging/log4j/core/appender/HttpAppender$Builder
      13: areturn

  private org.apache.logging.log4j.core.appender.HttpAppender(java.lang.String, org.apache.logging.log4j.core.Layout<? extends java.io.Serializable>, org.apache.logging.log4j.core.Filter, boolean, org.apache.logging.log4j.core.appender.HttpManager, org.apache.logging.log4j.core.config.Property[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: aload_2
       4: iload         4
       6: aload         6
       8: invokespecial #5                  // Method org/apache/logging/log4j/core/appender/AbstractAppender."<init>":(Ljava/lang/String;Lorg/apache/logging/log4j/core/Filter;Lorg/apache/logging/log4j/core/Layout;Z[Lorg/apache/logging/log4j/core/config/Property;)V
      11: aload_2
      12: ldc           #6                  // String layout
      14: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      17: pop
      18: aload_0
      19: aload         5
      21: ldc           #8                  // String manager
      23: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      26: checkcast     #9                  // class org/apache/logging/log4j/core/appender/HttpManager
      29: putfield      #10                 // Field manager:Lorg/apache/logging/log4j/core/appender/HttpManager;
      32: return

  public void start();
    Code:
       0: aload_0
       1: invokespecial #11                 // Method org/apache/logging/log4j/core/appender/AbstractAppender.start:()V
       4: aload_0
       5: getfield      #10                 // Field manager:Lorg/apache/logging/log4j/core/appender/HttpManager;
       8: invokevirtual #12                 // Method org/apache/logging/log4j/core/appender/HttpManager.startup:()V
      11: return

  public void append(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_0
       1: getfield      #10                 // Field manager:Lorg/apache/logging/log4j/core/appender/HttpManager;
       4: aload_0
       5: invokevirtual #13                 // Method getLayout:()Lorg/apache/logging/log4j/core/Layout;
       8: aload_1
       9: invokevirtual #14                 // Method org/apache/logging/log4j/core/appender/HttpManager.send:(Lorg/apache/logging/log4j/core/Layout;Lorg/apache/logging/log4j/core/LogEvent;)V
      12: goto          49
      15: astore_2
      16: aload_0
      17: new           #16                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #18                 // String Unable to send HTTP in appender [
      26: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_0
      30: invokevirtual #20                 // Method getName:()Ljava/lang/String;
      33: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: ldc           #21                 // String ]
      38: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: aload_1
      45: aload_2
      46: invokevirtual #23                 // Method error:(Ljava/lang/String;Lorg/apache/logging/log4j/core/LogEvent;Ljava/lang/Throwable;)V
      49: return
    Exception table:
       from    to  target type
           0    12    15   Class java/lang/Exception

  public boolean stop(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method setStopping:()V
       4: aload_0
       5: lload_1
       6: aload_3
       7: iconst_0
       8: invokespecial #25                 // Method org/apache/logging/log4j/core/appender/AbstractAppender.stop:(JLjava/util/concurrent/TimeUnit;Z)Z
      11: istore        4
      13: iload         4
      15: aload_0
      16: getfield      #10                 // Field manager:Lorg/apache/logging/log4j/core/appender/HttpManager;
      19: lload_1
      20: aload_3
      21: invokevirtual #26                 // Method org/apache/logging/log4j/core/appender/HttpManager.stop:(JLjava/util/concurrent/TimeUnit;)Z
      24: iand
      25: istore        4
      27: aload_0
      28: invokevirtual #27                 // Method setStopped:()V
      31: iload         4
      33: ireturn

  public java.lang.String toString();
    Code:
       0: new           #16                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #28                 // String HttpAppender{name=
       9: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #20                 // Method getName:()Ljava/lang/String;
      16: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #29                 // String , state=
      21: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #30                 // Method getState:()Lorg/apache/logging/log4j/core/LifeCycle$State;
      28: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: bipush        125
      33: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      36: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn

  org.apache.logging.log4j.core.appender.HttpAppender(java.lang.String, org.apache.logging.log4j.core.Layout, org.apache.logging.log4j.core.Filter, boolean, org.apache.logging.log4j.core.appender.HttpManager, org.apache.logging.log4j.core.config.Property[], org.apache.logging.log4j.core.appender.HttpAppender$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: aload         5
       8: aload         6
      10: invokespecial #1                  // Method "<init>":(Ljava/lang/String;Lorg/apache/logging/log4j/core/Layout;Lorg/apache/logging/log4j/core/Filter;ZLorg/apache/logging/log4j/core/appender/HttpManager;[Lorg/apache/logging/log4j/core/config/Property;)V
      13: return
}
