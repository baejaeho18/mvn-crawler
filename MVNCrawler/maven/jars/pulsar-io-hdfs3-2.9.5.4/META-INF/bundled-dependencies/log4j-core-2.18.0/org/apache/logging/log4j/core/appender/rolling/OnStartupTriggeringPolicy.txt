Compiled from "OnStartupTriggeringPolicy.java"
public class org.apache.logging.log4j.core.appender.rolling.OnStartupTriggeringPolicy extends org.apache.logging.log4j.core.appender.rolling.AbstractTriggeringPolicy {
  private static final long JVM_START_TIME;

  private final long minSize;

  private org.apache.logging.log4j.core.appender.rolling.OnStartupTriggeringPolicy(long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/logging/log4j/core/appender/rolling/AbstractTriggeringPolicy."<init>":()V
       4: aload_0
       5: lload_1
       6: putfield      #2                  // Field minSize:J
       9: return

  private static long initStartTime();
    Code:
       0: ldc           #3                  // String java.lang.management.ManagementFactory
       2: invokestatic  #4                  // Method org/apache/logging/log4j/core/util/Loader.loadSystemClass:(Ljava/lang/String;)Ljava/lang/Class;
       5: astore_0
       6: aload_0
       7: ldc           #5                  // String getRuntimeMXBean
       9: iconst_0
      10: anewarray     #6                  // class java/lang/Class
      13: invokevirtual #7                  // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      16: astore_1
      17: aload_1
      18: aconst_null
      19: iconst_0
      20: anewarray     #8                  // class java/lang/Object
      23: invokevirtual #9                  // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      26: astore_2
      27: ldc           #10                 // String java.lang.management.RuntimeMXBean
      29: invokestatic  #4                  // Method org/apache/logging/log4j/core/util/Loader.loadSystemClass:(Ljava/lang/String;)Ljava/lang/Class;
      32: astore_3
      33: aload_3
      34: ldc           #11                 // String getStartTime
      36: iconst_0
      37: anewarray     #6                  // class java/lang/Class
      40: invokevirtual #7                  // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      43: astore        4
      45: aload         4
      47: aload_2
      48: iconst_0
      49: anewarray     #8                  // class java/lang/Object
      52: invokevirtual #9                  // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      55: checkcast     #12                 // class java/lang/Long
      58: astore        5
      60: aload         5
      62: invokevirtual #13                 // Method java/lang/Long.longValue:()J
      65: lreturn
      66: astore_0
      67: invokestatic  #15                 // Method org/apache/logging/log4j/status/StatusLogger.getLogger:()Lorg/apache/logging/log4j/status/StatusLogger;
      70: ldc           #16                 // String Unable to call ManagementFactory.getRuntimeMXBean().getStartTime(), using system time for OnStartupTriggeringPolicy
      72: aload_0
      73: invokevirtual #17                 // Method org/apache/logging/log4j/status/StatusLogger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      76: invokestatic  #18                 // Method java/lang/System.currentTimeMillis:()J
      79: lreturn
    Exception table:
       from    to  target type
           0    65    66   Class java/lang/Throwable

  public void initialize(org.apache.logging.log4j.core.appender.rolling.RollingFileManager);
    Code:
       0: aload_1
       1: invokevirtual #19                 // Method org/apache/logging/log4j/core/appender/rolling/RollingFileManager.getFileTime:()J
       4: getstatic     #20                 // Field JVM_START_TIME:J
       7: lcmp
       8: ifge          59
      11: aload_1
      12: invokevirtual #21                 // Method org/apache/logging/log4j/core/appender/rolling/RollingFileManager.getFileSize:()J
      15: aload_0
      16: getfield      #2                  // Field minSize:J
      19: lcmp
      20: iflt          59
      23: invokestatic  #15                 // Method org/apache/logging/log4j/status/StatusLogger.getLogger:()Lorg/apache/logging/log4j/status/StatusLogger;
      26: ldc           #22                 // String Initiating rollover at startup
      28: invokevirtual #23                 // Method org/apache/logging/log4j/status/StatusLogger.debug:(Ljava/lang/String;)V
      31: aload_0
      32: getfield      #2                  // Field minSize:J
      35: lconst_0
      36: lcmp
      37: ifne          45
      40: aload_1
      41: iconst_1
      42: invokevirtual #24                 // Method org/apache/logging/log4j/core/appender/rolling/RollingFileManager.setRenameEmptyFiles:(Z)V
      45: aload_1
      46: iconst_1
      47: invokevirtual #25                 // Method org/apache/logging/log4j/core/appender/rolling/RollingFileManager.skipFooter:(Z)V
      50: aload_1
      51: invokevirtual #26                 // Method org/apache/logging/log4j/core/appender/rolling/RollingFileManager.rollover:()V
      54: aload_1
      55: iconst_0
      56: invokevirtual #25                 // Method org/apache/logging/log4j/core/appender/rolling/RollingFileManager.skipFooter:(Z)V
      59: return

  public boolean isTriggeringEvent(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.String toString();
    Code:
       0: ldc           #27                 // String OnStartupTriggeringPolicy
       2: areturn

  public static org.apache.logging.log4j.core.appender.rolling.OnStartupTriggeringPolicy createPolicy(long);
    Code:
       0: new           #28                 // class org/apache/logging/log4j/core/appender/rolling/OnStartupTriggeringPolicy
       3: dup
       4: lload_0
       5: invokespecial #29                 // Method "<init>":(J)V
       8: areturn

  static {};
    Code:
       0: invokestatic  #30                 // Method initStartTime:()J
       3: putstatic     #20                 // Field JVM_START_TIME:J
       6: return
}
