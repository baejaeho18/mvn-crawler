Compiled from "DiscardingAsyncQueueFullPolicy.java"
public class org.apache.logging.log4j.core.async.DiscardingAsyncQueueFullPolicy extends org.apache.logging.log4j.core.async.DefaultAsyncQueueFullPolicy {
  private static final org.apache.logging.log4j.Logger LOGGER;

  private final org.apache.logging.log4j.Level thresholdLevel;

  private final java.util.concurrent.atomic.AtomicLong discardCount;

  public org.apache.logging.log4j.core.async.DiscardingAsyncQueueFullPolicy(org.apache.logging.log4j.Level);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/logging/log4j/core/async/DefaultAsyncQueueFullPolicy."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicLong
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      12: putfield      #4                  // Field discardCount:Ljava/util/concurrent/atomic/AtomicLong;
      15: aload_0
      16: aload_1
      17: ldc           #5                  // String thresholdLevel
      19: invokestatic  #6                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      22: checkcast     #7                  // class org/apache/logging/log4j/Level
      25: putfield      #8                  // Field thresholdLevel:Lorg/apache/logging/log4j/Level;
      28: return

  public org.apache.logging.log4j.core.async.EventRoute getRoute(long, org.apache.logging.log4j.Level);
    Code:
       0: aload_3
       1: aload_0
       2: getfield      #8                  // Field thresholdLevel:Lorg/apache/logging/log4j/Level;
       5: invokevirtual #9                  // Method org/apache/logging/log4j/Level.isLessSpecificThan:(Lorg/apache/logging/log4j/Level;)Z
       8: ifeq          42
      11: aload_0
      12: getfield      #4                  // Field discardCount:Ljava/util/concurrent/atomic/AtomicLong;
      15: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
      18: lconst_0
      19: lcmp
      20: ifne          38
      23: getstatic     #11                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      26: ldc           #12                 // String Async queue is full, discarding event with level {}. This message will only appear once; future events from {} are silently discarded until queue capacity becomes available.
      28: aload_3
      29: aload_0
      30: getfield      #8                  // Field thresholdLevel:Lorg/apache/logging/log4j/Level;
      33: invokeinterface #13,  4           // InterfaceMethod org/apache/logging/log4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      38: getstatic     #14                 // Field org/apache/logging/log4j/core/async/EventRoute.DISCARD:Lorg/apache/logging/log4j/core/async/EventRoute;
      41: areturn
      42: aload_0
      43: lload_1
      44: aload_3
      45: invokespecial #15                 // Method org/apache/logging/log4j/core/async/DefaultAsyncQueueFullPolicy.getRoute:(JLorg/apache/logging/log4j/Level;)Lorg/apache/logging/log4j/core/async/EventRoute;
      48: areturn

  public static long getDiscardCount(org.apache.logging.log4j.core.async.AsyncQueueFullPolicy);
    Code:
       0: aload_0
       1: instanceof    #16                 // class org/apache/logging/log4j/core/async/DiscardingAsyncQueueFullPolicy
       4: ifeq          18
       7: aload_0
       8: checkcast     #16                 // class org/apache/logging/log4j/core/async/DiscardingAsyncQueueFullPolicy
      11: getfield      #4                  // Field discardCount:Ljava/util/concurrent/atomic/AtomicLong;
      14: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      17: lreturn
      18: lconst_0
      19: lreturn

  public org.apache.logging.log4j.Level getThresholdLevel();
    Code:
       0: aload_0
       1: getfield      #8                  // Field thresholdLevel:Lorg/apache/logging/log4j/Level;
       4: areturn

  static {};
    Code:
       0: invokestatic  #18                 // Method org/apache/logging/log4j/status/StatusLogger.getLogger:()Lorg/apache/logging/log4j/status/StatusLogger;
       3: putstatic     #11                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       6: return
}
