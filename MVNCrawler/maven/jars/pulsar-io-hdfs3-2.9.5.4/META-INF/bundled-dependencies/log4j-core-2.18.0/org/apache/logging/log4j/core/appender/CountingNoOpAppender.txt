Compiled from "CountingNoOpAppender.java"
public class org.apache.logging.log4j.core.appender.CountingNoOpAppender extends org.apache.logging.log4j.core.appender.AbstractAppender {
  private final java.util.concurrent.atomic.AtomicLong total;

  public org.apache.logging.log4j.core.appender.CountingNoOpAppender(java.lang.String, org.apache.logging.log4j.core.Layout<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_2
       4: iconst_1
       5: getstatic     #1                  // Field org/apache/logging/log4j/core/config/Property.EMPTY_ARRAY:[Lorg/apache/logging/log4j/core/config/Property;
       8: invokespecial #2                  // Method org/apache/logging/log4j/core/appender/AbstractAppender."<init>":(Ljava/lang/String;Lorg/apache/logging/log4j/core/Filter;Lorg/apache/logging/log4j/core/Layout;Z[Lorg/apache/logging/log4j/core/config/Property;)V
      11: aload_0
      12: new           #3                  // class java/util/concurrent/atomic/AtomicLong
      15: dup
      16: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      19: putfield      #5                  // Field total:Ljava/util/concurrent/atomic/AtomicLong;
      22: return

  private org.apache.logging.log4j.core.appender.CountingNoOpAppender(java.lang.String, org.apache.logging.log4j.core.Layout<?>, org.apache.logging.log4j.core.config.Property[]);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_2
       4: iconst_1
       5: aload_3
       6: invokespecial #2                  // Method org/apache/logging/log4j/core/appender/AbstractAppender."<init>":(Ljava/lang/String;Lorg/apache/logging/log4j/core/Filter;Lorg/apache/logging/log4j/core/Layout;Z[Lorg/apache/logging/log4j/core/config/Property;)V
       9: aload_0
      10: new           #3                  // class java/util/concurrent/atomic/AtomicLong
      13: dup
      14: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      17: putfield      #5                  // Field total:Ljava/util/concurrent/atomic/AtomicLong;
      20: return

  public long getCount();
    Code:
       0: aload_0
       1: getfield      #5                  // Field total:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public void append(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_0
       1: getfield      #5                  // Field total:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #7                  // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
       7: pop2
       8: return

  public static org.apache.logging.log4j.core.appender.CountingNoOpAppender createAppender(java.lang.String);
    Code:
       0: new           #8                  // class org/apache/logging/log4j/core/appender/CountingNoOpAppender
       3: dup
       4: aload_0
       5: invokestatic  #9                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #10                 // class java/lang/String
      11: aconst_null
      12: getstatic     #1                  // Field org/apache/logging/log4j/core/config/Property.EMPTY_ARRAY:[Lorg/apache/logging/log4j/core/config/Property;
      15: invokespecial #11                 // Method "<init>":(Ljava/lang/String;Lorg/apache/logging/log4j/core/Layout;[Lorg/apache/logging/log4j/core/config/Property;)V
      18: areturn
}
