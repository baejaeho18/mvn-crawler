Compiled from "MutableInstant.java"
public class org.apache.logging.log4j.core.time.MutableInstant implements org.apache.logging.log4j.core.time.Instant,java.io.Serializable,java.time.temporal.TemporalAccessor {
  private static final int MILLIS_PER_SECOND;

  private static final int NANOS_PER_MILLI;

  private static final int NANOS_PER_SECOND;

  private long epochSecond;

  private int nanoOfSecond;

  public org.apache.logging.log4j.core.time.MutableInstant();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public long getEpochSecond();
    Code:
       0: aload_0
       1: getfield      #3                  // Field epochSecond:J
       4: lreturn

  public int getNanoOfSecond();
    Code:
       0: aload_0
       1: getfield      #4                  // Field nanoOfSecond:I
       4: ireturn

  public long getEpochMillisecond();
    Code:
       0: aload_0
       1: getfield      #4                  // Field nanoOfSecond:I
       4: ldc           #5                  // int 1000000
       6: idiv
       7: istore_1
       8: aload_0
       9: getfield      #3                  // Field epochSecond:J
      12: ldc2_w        #6                  // long 1000l
      15: lmul
      16: iload_1
      17: i2l
      18: ladd
      19: lstore_2
      20: lload_2
      21: lreturn

  public int getNanoOfMillisecond();
    Code:
       0: aload_0
       1: getfield      #4                  // Field nanoOfSecond:I
       4: ldc           #5                  // int 1000000
       6: idiv
       7: istore_1
       8: aload_0
       9: getfield      #4                  // Field nanoOfSecond:I
      12: iload_1
      13: ldc           #5                  // int 1000000
      15: imul
      16: isub
      17: istore_2
      18: iload_2
      19: ireturn

  public void initFrom(org.apache.logging.log4j.core.time.Instant);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #8,  1            // InterfaceMethod org/apache/logging/log4j/core/time/Instant.getEpochSecond:()J
       7: putfield      #3                  // Field epochSecond:J
      10: aload_0
      11: aload_1
      12: invokeinterface #9,  1            // InterfaceMethod org/apache/logging/log4j/core/time/Instant.getNanoOfSecond:()I
      17: putfield      #4                  // Field nanoOfSecond:I
      20: return

  public void initFromEpochMilli(long, int);
    Code:
       0: aload_0
       1: iload_3
       2: invokespecial #10                 // Method validateNanoOfMillisecond:(I)V
       5: aload_0
       6: lload_1
       7: ldc2_w        #6                  // long 1000l
      10: ldiv
      11: putfield      #3                  // Field epochSecond:J
      14: aload_0
      15: lload_1
      16: aload_0
      17: getfield      #3                  // Field epochSecond:J
      20: ldc2_w        #6                  // long 1000l
      23: lmul
      24: lsub
      25: l2i
      26: ldc           #5                  // int 1000000
      28: imul
      29: iload_3
      30: iadd
      31: putfield      #4                  // Field nanoOfSecond:I
      34: return

  private void validateNanoOfMillisecond(int);
    Code:
       0: iload_1
       1: iflt          10
       4: iload_1
       5: ldc           #5                  // int 1000000
       7: if_icmplt     37
      10: new           #11                 // class java/lang/IllegalArgumentException
      13: dup
      14: new           #12                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #14                 // String Invalid nanoOfMillisecond
      23: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: iload_1
      27: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      30: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: return

  public void initFrom(org.apache.logging.log4j.core.util.Clock);
    Code:
       0: aload_1
       1: instanceof    #19                 // class org/apache/logging/log4j/core/time/PreciseClock
       4: ifeq          20
       7: aload_1
       8: checkcast     #19                 // class org/apache/logging/log4j/core/time/PreciseClock
      11: aload_0
      12: invokeinterface #20,  2           // InterfaceMethod org/apache/logging/log4j/core/time/PreciseClock.init:(Lorg/apache/logging/log4j/core/time/MutableInstant;)V
      17: goto          31
      20: aload_0
      21: aload_1
      22: invokeinterface #21,  1           // InterfaceMethod org/apache/logging/log4j/core/util/Clock.currentTimeMillis:()J
      27: iconst_0
      28: invokevirtual #22                 // Method initFromEpochMilli:(JI)V
      31: return

  public void initFromEpochSecond(long, int);
    Code:
       0: aload_0
       1: iload_3
       2: invokespecial #23                 // Method validateNanoOfSecond:(I)V
       5: aload_0
       6: lload_1
       7: putfield      #3                  // Field epochSecond:J
      10: aload_0
      11: iload_3
      12: putfield      #4                  // Field nanoOfSecond:I
      15: return

  private void validateNanoOfSecond(int);
    Code:
       0: iload_1
       1: iflt          10
       4: iload_1
       5: ldc           #24                 // int 1000000000
       7: if_icmplt     37
      10: new           #11                 // class java/lang/IllegalArgumentException
      13: dup
      14: new           #12                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #25                 // String Invalid nanoOfSecond
      23: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: iload_1
      27: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      30: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: return

  public static void instantToMillisAndNanos(long, int, long[]);
    Code:
       0: iload_2
       1: ldc           #5                  // int 1000000
       3: idiv
       4: istore        4
       6: aload_3
       7: iconst_0
       8: lload_0
       9: ldc2_w        #6                  // long 1000l
      12: lmul
      13: iload         4
      15: i2l
      16: ladd
      17: lastore
      18: aload_3
      19: iconst_1
      20: iload_2
      21: iload         4
      23: ldc           #5                  // int 1000000
      25: imul
      26: isub
      27: i2l
      28: lastore
      29: return

  public boolean isSupported(java.time.temporal.TemporalField);
    Code:
       0: aload_1
       1: instanceof    #26                 // class java/time/temporal/ChronoField
       4: ifeq          41
       7: aload_1
       8: getstatic     #27                 // Field java/time/temporal/ChronoField.INSTANT_SECONDS:Ljava/time/temporal/ChronoField;
      11: if_acmpeq     35
      14: aload_1
      15: getstatic     #28                 // Field java/time/temporal/ChronoField.NANO_OF_SECOND:Ljava/time/temporal/ChronoField;
      18: if_acmpeq     35
      21: aload_1
      22: getstatic     #29                 // Field java/time/temporal/ChronoField.MICRO_OF_SECOND:Ljava/time/temporal/ChronoField;
      25: if_acmpeq     35
      28: aload_1
      29: getstatic     #30                 // Field java/time/temporal/ChronoField.MILLI_OF_SECOND:Ljava/time/temporal/ChronoField;
      32: if_acmpne     39
      35: iconst_1
      36: goto          40
      39: iconst_0
      40: ireturn
      41: aload_1
      42: ifnull        59
      45: aload_1
      46: aload_0
      47: invokeinterface #31,  2           // InterfaceMethod java/time/temporal/TemporalField.isSupportedBy:(Ljava/time/temporal/TemporalAccessor;)Z
      52: ifeq          59
      55: iconst_1
      56: goto          60
      59: iconst_0
      60: ireturn

  public long getLong(java.time.temporal.TemporalField);
    Code:
       0: aload_1
       1: instanceof    #26                 // class java/time/temporal/ChronoField
       4: ifeq          105
       7: getstatic     #32                 // Field org/apache/logging/log4j/core/time/MutableInstant$1.$SwitchMap$java$time$temporal$ChronoField:[I
      10: aload_1
      11: checkcast     #26                 // class java/time/temporal/ChronoField
      14: invokevirtual #33                 // Method java/time/temporal/ChronoField.ordinal:()I
      17: iaload
      18: tableswitch   { // 1 to 4
                     1: 48
                     2: 54
                     3: 64
                     4: 73
               default: 78
          }
      48: aload_0
      49: getfield      #4                  // Field nanoOfSecond:I
      52: i2l
      53: lreturn
      54: aload_0
      55: getfield      #4                  // Field nanoOfSecond:I
      58: sipush        1000
      61: idiv
      62: i2l
      63: lreturn
      64: aload_0
      65: getfield      #4                  // Field nanoOfSecond:I
      68: ldc           #5                  // int 1000000
      70: idiv
      71: i2l
      72: lreturn
      73: aload_0
      74: getfield      #3                  // Field epochSecond:J
      77: lreturn
      78: new           #34                 // class java/time/temporal/UnsupportedTemporalTypeException
      81: dup
      82: new           #12                 // class java/lang/StringBuilder
      85: dup
      86: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      89: ldc           #35                 // String Unsupported field:
      91: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: aload_1
      95: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      98: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     101: invokespecial #37                 // Method java/time/temporal/UnsupportedTemporalTypeException."<init>":(Ljava/lang/String;)V
     104: athrow
     105: aload_1
     106: aload_0
     107: invokeinterface #38,  2           // InterfaceMethod java/time/temporal/TemporalField.getFrom:(Ljava/time/temporal/TemporalAccessor;)J
     112: lreturn

  public java.time.temporal.ValueRange range(java.time.temporal.TemporalField);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #39                 // InterfaceMethod java/time/temporal/TemporalAccessor.range:(Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange;
       5: areturn

  public int get(java.time.temporal.TemporalField);
    Code:
       0: aload_1
       1: instanceof    #26                 // class java/time/temporal/ChronoField
       4: ifeq          108
       7: getstatic     #32                 // Field org/apache/logging/log4j/core/time/MutableInstant$1.$SwitchMap$java$time$temporal$ChronoField:[I
      10: aload_1
      11: checkcast     #26                 // class java/time/temporal/ChronoField
      14: invokevirtual #33                 // Method java/time/temporal/ChronoField.ordinal:()I
      17: iaload
      18: tableswitch   { // 1 to 4
                     1: 48
                     2: 53
                     3: 62
                     4: 70
               default: 81
          }
      48: aload_0
      49: getfield      #4                  // Field nanoOfSecond:I
      52: ireturn
      53: aload_0
      54: getfield      #4                  // Field nanoOfSecond:I
      57: sipush        1000
      60: idiv
      61: ireturn
      62: aload_0
      63: getfield      #4                  // Field nanoOfSecond:I
      66: ldc           #5                  // int 1000000
      68: idiv
      69: ireturn
      70: getstatic     #27                 // Field java/time/temporal/ChronoField.INSTANT_SECONDS:Ljava/time/temporal/ChronoField;
      73: aload_0
      74: getfield      #3                  // Field epochSecond:J
      77: invokevirtual #40                 // Method java/time/temporal/ChronoField.checkValidIntValue:(J)I
      80: pop
      81: new           #34                 // class java/time/temporal/UnsupportedTemporalTypeException
      84: dup
      85: new           #12                 // class java/lang/StringBuilder
      88: dup
      89: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      92: ldc           #35                 // String Unsupported field:
      94: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: aload_1
      98: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     101: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     104: invokespecial #37                 // Method java/time/temporal/UnsupportedTemporalTypeException."<init>":(Ljava/lang/String;)V
     107: athrow
     108: aload_0
     109: aload_1
     110: invokevirtual #41                 // Method range:(Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange;
     113: aload_1
     114: aload_0
     115: invokeinterface #38,  2           // InterfaceMethod java/time/temporal/TemporalField.getFrom:(Ljava/time/temporal/TemporalAccessor;)J
     120: aload_1
     121: invokevirtual #42                 // Method java/time/temporal/ValueRange.checkValidIntValue:(JLjava/time/temporal/TemporalField;)I
     124: ireturn

  public <R> R query(java.time.temporal.TemporalQuery<R>);
    Code:
       0: aload_1
       1: invokestatic  #43                 // Method java/time/temporal/TemporalQueries.precision:()Ljava/time/temporal/TemporalQuery;
       4: if_acmpne     11
       7: getstatic     #44                 // Field java/time/temporal/ChronoUnit.NANOS:Ljava/time/temporal/ChronoUnit;
      10: areturn
      11: aload_1
      12: invokestatic  #45                 // Method java/time/temporal/TemporalQueries.chronology:()Ljava/time/temporal/TemporalQuery;
      15: if_acmpeq     53
      18: aload_1
      19: invokestatic  #46                 // Method java/time/temporal/TemporalQueries.zoneId:()Ljava/time/temporal/TemporalQuery;
      22: if_acmpeq     53
      25: aload_1
      26: invokestatic  #47                 // Method java/time/temporal/TemporalQueries.zone:()Ljava/time/temporal/TemporalQuery;
      29: if_acmpeq     53
      32: aload_1
      33: invokestatic  #48                 // Method java/time/temporal/TemporalQueries.offset:()Ljava/time/temporal/TemporalQuery;
      36: if_acmpeq     53
      39: aload_1
      40: invokestatic  #49                 // Method java/time/temporal/TemporalQueries.localDate:()Ljava/time/temporal/TemporalQuery;
      43: if_acmpeq     53
      46: aload_1
      47: invokestatic  #50                 // Method java/time/temporal/TemporalQueries.localTime:()Ljava/time/temporal/TemporalQuery;
      50: if_acmpne     55
      53: aconst_null
      54: areturn
      55: aload_1
      56: aload_0
      57: invokeinterface #51,  2           // InterfaceMethod java/time/temporal/TemporalQuery.queryFrom:(Ljava/time/temporal/TemporalAccessor;)Ljava/lang/Object;
      62: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #1                  // class org/apache/logging/log4j/core/time/MutableInstant
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #1                  // class org/apache/logging/log4j/core/time/MutableInstant
      20: astore_2
      21: aload_0
      22: getfield      #3                  // Field epochSecond:J
      25: aload_2
      26: getfield      #3                  // Field epochSecond:J
      29: lcmp
      30: ifne          48
      33: aload_0
      34: getfield      #4                  // Field nanoOfSecond:I
      37: aload_2
      38: getfield      #4                  // Field nanoOfSecond:I
      41: if_icmpne     48
      44: iconst_1
      45: goto          49
      48: iconst_0
      49: ireturn

  public int hashCode();
    Code:
       0: bipush        17
       2: istore_1
       3: bipush        31
       5: iload_1
       6: imul
       7: aload_0
       8: getfield      #3                  // Field epochSecond:J
      11: aload_0
      12: getfield      #3                  // Field epochSecond:J
      15: bipush        32
      17: lushr
      18: lxor
      19: l2i
      20: iadd
      21: istore_1
      22: bipush        31
      24: iload_1
      25: imul
      26: aload_0
      27: getfield      #4                  // Field nanoOfSecond:I
      30: iadd
      31: istore_1
      32: iload_1
      33: ireturn

  public java.lang.String toString();
    Code:
       0: new           #12                 // class java/lang/StringBuilder
       3: dup
       4: bipush        64
       6: invokespecial #52                 // Method java/lang/StringBuilder."<init>":(I)V
       9: astore_1
      10: aload_0
      11: aload_1
      12: invokevirtual #53                 // Method formatTo:(Ljava/lang/StringBuilder;)V
      15: aload_1
      16: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      19: areturn

  public void formatTo(java.lang.StringBuilder);
    Code:
       0: aload_1
       1: ldc           #54                 // String MutableInstant[epochSecond=
       3: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       6: aload_0
       7: getfield      #3                  // Field epochSecond:J
      10: invokevirtual #55                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      13: ldc           #56                 // String , nano=
      15: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: aload_0
      19: getfield      #4                  // Field nanoOfSecond:I
      22: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      25: ldc           #57                 // String ]
      27: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: pop
      31: return
}
