Compiled from "ClassLoaderContextSelector.java"
public class org.apache.logging.log4j.core.selector.ClassLoaderContextSelector implements org.apache.logging.log4j.core.selector.ContextSelector,org.apache.logging.log4j.spi.LoggerContextShutdownAware {
  private static final java.util.concurrent.atomic.AtomicReference<org.apache.logging.log4j.core.LoggerContext> DEFAULT_CONTEXT;

  protected static final org.apache.logging.log4j.status.StatusLogger LOGGER;

  protected static final java.util.concurrent.ConcurrentMap<java.lang.String, java.util.concurrent.atomic.AtomicReference<java.lang.ref.WeakReference<org.apache.logging.log4j.core.LoggerContext>>> CONTEXT_MAP;

  public org.apache.logging.log4j.core.selector.ClassLoaderContextSelector();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void shutdown(java.lang.String, java.lang.ClassLoader, boolean, boolean);
    Code:
       0: aconst_null
       1: astore        5
       3: iload_3
       4: ifeq          21
       7: getstatic     #2                  // Field org/apache/logging/log4j/core/impl/ContextAnchor.THREAD_CONTEXT:Ljava/lang/ThreadLocal;
      10: invokevirtual #3                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      13: checkcast     #4                  // class org/apache/logging/log4j/core/LoggerContext
      16: astore        5
      18: goto          73
      21: aload_2
      22: ifnull        35
      25: aload_0
      26: aload_2
      27: invokespecial #5                  // Method findContext:(Ljava/lang/ClassLoader;)Lorg/apache/logging/log4j/core/LoggerContext;
      30: astore        5
      32: goto          73
      35: aload_1
      36: invokestatic  #6                  // Method org/apache/logging/log4j/util/StackLocatorUtil.getCallerClass:(Ljava/lang/String;)Ljava/lang/Class;
      39: astore        6
      41: aload         6
      43: ifnull        57
      46: aload_0
      47: aload         6
      49: invokevirtual #7                  // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      52: invokespecial #5                  // Method findContext:(Ljava/lang/ClassLoader;)Lorg/apache/logging/log4j/core/LoggerContext;
      55: astore        5
      57: aload         5
      59: ifnonnull     73
      62: getstatic     #2                  // Field org/apache/logging/log4j/core/impl/ContextAnchor.THREAD_CONTEXT:Ljava/lang/ThreadLocal;
      65: invokevirtual #3                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      68: checkcast     #4                  // class org/apache/logging/log4j/core/LoggerContext
      71: astore        5
      73: aload         5
      75: ifnull        90
      78: aload         5
      80: ldc2_w        #9                  // long 50l
      83: getstatic     #11                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      86: invokevirtual #12                 // Method org/apache/logging/log4j/core/LoggerContext.stop:(JLjava/util/concurrent/TimeUnit;)Z
      89: pop
      90: return

  public void contextShutdown(org.apache.logging.log4j.spi.LoggerContext);
    Code:
       0: aload_1
       1: instanceof    #4                  // class org/apache/logging/log4j/core/LoggerContext
       4: ifeq          15
       7: aload_0
       8: aload_1
       9: checkcast     #4                  // class org/apache/logging/log4j/core/LoggerContext
      12: invokevirtual #13                 // Method removeContext:(Lorg/apache/logging/log4j/core/LoggerContext;)V
      15: return

  public boolean hasContext(java.lang.String, java.lang.ClassLoader, boolean);
    Code:
       0: iload_3
       1: ifeq          18
       4: getstatic     #2                  // Field org/apache/logging/log4j/core/impl/ContextAnchor.THREAD_CONTEXT:Ljava/lang/ThreadLocal;
       7: invokevirtual #3                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      10: checkcast     #4                  // class org/apache/logging/log4j/core/LoggerContext
      13: astore        4
      15: goto          68
      18: aload_2
      19: ifnull        32
      22: aload_0
      23: aload_2
      24: invokespecial #5                  // Method findContext:(Ljava/lang/ClassLoader;)Lorg/apache/logging/log4j/core/LoggerContext;
      27: astore        4
      29: goto          68
      32: aload_1
      33: invokestatic  #6                  // Method org/apache/logging/log4j/util/StackLocatorUtil.getCallerClass:(Ljava/lang/String;)Ljava/lang/Class;
      36: astore        5
      38: aload         5
      40: ifnull        57
      43: aload_0
      44: aload         5
      46: invokevirtual #7                  // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      49: invokespecial #5                  // Method findContext:(Ljava/lang/ClassLoader;)Lorg/apache/logging/log4j/core/LoggerContext;
      52: astore        4
      54: goto          68
      57: getstatic     #2                  // Field org/apache/logging/log4j/core/impl/ContextAnchor.THREAD_CONTEXT:Ljava/lang/ThreadLocal;
      60: invokevirtual #3                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      63: checkcast     #4                  // class org/apache/logging/log4j/core/LoggerContext
      66: astore        4
      68: aload         4
      70: ifnull        85
      73: aload         4
      75: invokevirtual #14                 // Method org/apache/logging/log4j/core/LoggerContext.isStarted:()Z
      78: ifeq          85
      81: iconst_1
      82: goto          86
      85: iconst_0
      86: ireturn

  private org.apache.logging.log4j.core.LoggerContext findContext(java.lang.ClassLoader);
    Code:
       0: aload_1
       1: ifnull        8
       4: aload_1
       5: goto          11
       8: invokestatic  #15                 // Method java/lang/ClassLoader.getSystemClassLoader:()Ljava/lang/ClassLoader;
      11: astore_2
      12: aload_0
      13: aload_2
      14: invokevirtual #16                 // Method toContextMapKey:(Ljava/lang/ClassLoader;)Ljava/lang/String;
      17: astore_3
      18: getstatic     #17                 // Field CONTEXT_MAP:Ljava/util/concurrent/ConcurrentMap;
      21: aload_3
      22: invokeinterface #18,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      27: checkcast     #19                 // class java/util/concurrent/atomic/AtomicReference
      30: astore        4
      32: aload         4
      34: ifnull        56
      37: aload         4
      39: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      42: checkcast     #21                 // class java/lang/ref/WeakReference
      45: astore        5
      47: aload         5
      49: invokevirtual #22                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      52: checkcast     #4                  // class org/apache/logging/log4j/core/LoggerContext
      55: areturn
      56: aconst_null
      57: areturn

  public org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String, java.lang.ClassLoader, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: aconst_null
       5: invokevirtual #23                 // Method getContext:(Ljava/lang/String;Ljava/lang/ClassLoader;ZLjava/net/URI;)Lorg/apache/logging/log4j/core/LoggerContext;
       8: areturn

  public org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String, java.lang.ClassLoader, boolean, java.net.URI);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: iload_3
       5: aload         4
       7: invokevirtual #24                 // Method getContext:(Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/util/Map$Entry;ZLjava/net/URI;)Lorg/apache/logging/log4j/core/LoggerContext;
      10: areturn

  public org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String, java.lang.ClassLoader, java.util.Map$Entry<java.lang.String, java.lang.Object>, boolean, java.net.URI);
    Code:
       0: iload         4
       2: ifeq          29
       5: getstatic     #2                  // Field org/apache/logging/log4j/core/impl/ContextAnchor.THREAD_CONTEXT:Ljava/lang/ThreadLocal;
       8: invokevirtual #3                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      11: checkcast     #4                  // class org/apache/logging/log4j/core/LoggerContext
      14: astore        6
      16: aload         6
      18: ifnull        24
      21: aload         6
      23: areturn
      24: aload_0
      25: invokevirtual #25                 // Method getDefault:()Lorg/apache/logging/log4j/core/LoggerContext;
      28: areturn
      29: aload_2
      30: ifnull        42
      33: aload_0
      34: aload_2
      35: aload_3
      36: aload         5
      38: invokespecial #26                 // Method locateContext:(Ljava/lang/ClassLoader;Ljava/util/Map$Entry;Ljava/net/URI;)Lorg/apache/logging/log4j/core/LoggerContext;
      41: areturn
      42: aload_1
      43: invokestatic  #6                  // Method org/apache/logging/log4j/util/StackLocatorUtil.getCallerClass:(Ljava/lang/String;)Ljava/lang/Class;
      46: astore        6
      48: aload         6
      50: ifnull        66
      53: aload_0
      54: aload         6
      56: invokevirtual #7                  // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      59: aload_3
      60: aload         5
      62: invokespecial #26                 // Method locateContext:(Ljava/lang/ClassLoader;Ljava/util/Map$Entry;Ljava/net/URI;)Lorg/apache/logging/log4j/core/LoggerContext;
      65: areturn
      66: getstatic     #2                  // Field org/apache/logging/log4j/core/impl/ContextAnchor.THREAD_CONTEXT:Ljava/lang/ThreadLocal;
      69: invokevirtual #3                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      72: checkcast     #4                  // class org/apache/logging/log4j/core/LoggerContext
      75: astore        7
      77: aload         7
      79: ifnull        85
      82: aload         7
      84: areturn
      85: aload_0
      86: invokevirtual #25                 // Method getDefault:()Lorg/apache/logging/log4j/core/LoggerContext;
      89: areturn

  public void removeContext(org.apache.logging.log4j.core.LoggerContext);
    Code:
       0: getstatic     #17                 // Field CONTEXT_MAP:Ljava/util/concurrent/ConcurrentMap;
       3: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
       8: invokeinterface #28,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      13: astore_2
      14: aload_2
      15: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          80
      23: aload_2
      24: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #31                 // class java/util/Map$Entry
      32: astore_3
      33: aload_3
      34: invokeinterface #32,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      39: checkcast     #19                 // class java/util/concurrent/atomic/AtomicReference
      42: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      45: checkcast     #21                 // class java/lang/ref/WeakReference
      48: invokevirtual #22                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      51: checkcast     #4                  // class org/apache/logging/log4j/core/LoggerContext
      54: astore        4
      56: aload         4
      58: aload_1
      59: if_acmpne     77
      62: getstatic     #17                 // Field CONTEXT_MAP:Ljava/util/concurrent/ConcurrentMap;
      65: aload_3
      66: invokeinterface #33,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      71: invokeinterface #34,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      76: pop
      77: goto          14
      80: return

  public boolean isClassLoaderDependent();
    Code:
       0: iconst_1
       1: ireturn

  public java.util.List<org.apache.logging.log4j.core.LoggerContext> getLoggerContexts();
    Code:
       0: new           #35                 // class java/util/ArrayList
       3: dup
       4: invokespecial #36                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: getstatic     #17                 // Field CONTEXT_MAP:Ljava/util/concurrent/ConcurrentMap;
      11: invokeinterface #37,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      16: astore_2
      17: aload_2
      18: invokeinterface #38,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      23: astore_3
      24: aload_3
      25: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          77
      33: aload_3
      34: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #19                 // class java/util/concurrent/atomic/AtomicReference
      42: astore        4
      44: aload         4
      46: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      49: checkcast     #21                 // class java/lang/ref/WeakReference
      52: invokevirtual #22                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      55: checkcast     #4                  // class org/apache/logging/log4j/core/LoggerContext
      58: astore        5
      60: aload         5
      62: ifnull        74
      65: aload_1
      66: aload         5
      68: invokeinterface #39,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      73: pop
      74: goto          24
      77: aload_1
      78: invokestatic  #40                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      81: areturn

  private org.apache.logging.log4j.core.LoggerContext locateContext(java.lang.ClassLoader, java.util.Map$Entry<java.lang.String, java.lang.Object>, java.net.URI);
    Code:
       0: aload_1
       1: ifnull        8
       4: aload_1
       5: goto          11
       8: invokestatic  #15                 // Method java/lang/ClassLoader.getSystemClassLoader:()Ljava/lang/ClassLoader;
      11: astore        4
      13: aload_0
      14: aload         4
      16: invokevirtual #16                 // Method toContextMapKey:(Ljava/lang/ClassLoader;)Ljava/lang/String;
      19: astore        5
      21: getstatic     #17                 // Field CONTEXT_MAP:Ljava/util/concurrent/ConcurrentMap;
      24: aload         5
      26: invokeinterface #18,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #19                 // class java/util/concurrent/atomic/AtomicReference
      34: astore        6
      36: aload         6
      38: ifnonnull     203
      41: aload_3
      42: ifnonnull     119
      45: aload         4
      47: invokevirtual #41                 // Method java/lang/ClassLoader.getParent:()Ljava/lang/ClassLoader;
      50: astore        7
      52: aload         7
      54: ifnull        119
      57: getstatic     #17                 // Field CONTEXT_MAP:Ljava/util/concurrent/ConcurrentMap;
      60: aload_0
      61: aload         7
      63: invokevirtual #16                 // Method toContextMapKey:(Ljava/lang/ClassLoader;)Ljava/lang/String;
      66: invokeinterface #18,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      71: checkcast     #19                 // class java/util/concurrent/atomic/AtomicReference
      74: astore        6
      76: aload         6
      78: ifnull        109
      81: aload         6
      83: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      86: checkcast     #21                 // class java/lang/ref/WeakReference
      89: astore        8
      91: aload         8
      93: invokevirtual #22                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      96: checkcast     #4                  // class org/apache/logging/log4j/core/LoggerContext
      99: astore        9
     101: aload         9
     103: ifnull        109
     106: aload         9
     108: areturn
     109: aload         7
     111: invokevirtual #41                 // Method java/lang/ClassLoader.getParent:()Ljava/lang/ClassLoader;
     114: astore        7
     116: goto          52
     119: aload_0
     120: aload         5
     122: aload_3
     123: invokevirtual #42                 // Method createContext:(Ljava/lang/String;Ljava/net/URI;)Lorg/apache/logging/log4j/core/LoggerContext;
     126: astore        7
     128: aload_2
     129: ifnull        153
     132: aload         7
     134: aload_2
     135: invokeinterface #33,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     140: checkcast     #43                 // class java/lang/String
     143: aload_2
     144: invokeinterface #32,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     149: invokevirtual #44                 // Method org/apache/logging/log4j/core/LoggerContext.putObject:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
     152: pop
     153: getstatic     #17                 // Field CONTEXT_MAP:Ljava/util/concurrent/ConcurrentMap;
     156: aload         5
     158: aload         7
     160: invokedynamic #45,  0             // InvokeDynamic #0:apply:(Lorg/apache/logging/log4j/core/LoggerContext;)Ljava/util/function/Function;
     165: invokeinterface #46,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
     170: checkcast     #19                 // class java/util/concurrent/atomic/AtomicReference
     173: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
     176: checkcast     #21                 // class java/lang/ref/WeakReference
     179: invokevirtual #22                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
     182: checkcast     #4                  // class org/apache/logging/log4j/core/LoggerContext
     185: astore        8
     187: aload         8
     189: aload         7
     191: if_acmpne     200
     194: aload         7
     196: aload_0
     197: invokevirtual #47                 // Method org/apache/logging/log4j/core/LoggerContext.addShutdownListener:(Lorg/apache/logging/log4j/spi/LoggerContextShutdownAware;)V
     200: aload         8
     202: areturn
     203: aload         6
     205: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
     208: checkcast     #21                 // class java/lang/ref/WeakReference
     211: astore        7
     213: aload         7
     215: invokevirtual #22                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
     218: checkcast     #4                  // class org/apache/logging/log4j/core/LoggerContext
     221: astore        8
     223: aload         8
     225: ifnull        341
     228: aload_2
     229: ifnull        270
     232: aload         8
     234: aload_2
     235: invokeinterface #33,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     240: checkcast     #43                 // class java/lang/String
     243: invokevirtual #48                 // Method org/apache/logging/log4j/core/LoggerContext.getObject:(Ljava/lang/String;)Ljava/lang/Object;
     246: ifnonnull     270
     249: aload         8
     251: aload_2
     252: invokeinterface #33,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     257: checkcast     #43                 // class java/lang/String
     260: aload_2
     261: invokeinterface #32,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     266: invokevirtual #44                 // Method org/apache/logging/log4j/core/LoggerContext.putObject:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
     269: pop
     270: aload         8
     272: invokevirtual #49                 // Method org/apache/logging/log4j/core/LoggerContext.getConfigLocation:()Ljava/net/URI;
     275: ifnonnull     300
     278: aload_3
     279: ifnull        300
     282: getstatic     #50                 // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
     285: ldc           #51                 // String Setting configuration to {}
     287: aload_3
     288: invokevirtual #52                 // Method org/apache/logging/log4j/status/StatusLogger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     291: aload         8
     293: aload_3
     294: invokevirtual #53                 // Method org/apache/logging/log4j/core/LoggerContext.setConfigLocation:(Ljava/net/URI;)V
     297: goto          338
     300: aload         8
     302: invokevirtual #49                 // Method org/apache/logging/log4j/core/LoggerContext.getConfigLocation:()Ljava/net/URI;
     305: ifnull        338
     308: aload_3
     309: ifnull        338
     312: aload         8
     314: invokevirtual #49                 // Method org/apache/logging/log4j/core/LoggerContext.getConfigLocation:()Ljava/net/URI;
     317: aload_3
     318: invokevirtual #54                 // Method java/net/URI.equals:(Ljava/lang/Object;)Z
     321: ifne          338
     324: getstatic     #50                 // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
     327: ldc           #55                 // String locateContext called with URI {}. Existing LoggerContext has URI {}
     329: aload_3
     330: aload         8
     332: invokevirtual #49                 // Method org/apache/logging/log4j/core/LoggerContext.getConfigLocation:()Ljava/net/URI;
     335: invokevirtual #56                 // Method org/apache/logging/log4j/status/StatusLogger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     338: aload         8
     340: areturn
     341: aload_0
     342: aload         5
     344: aload_3
     345: invokevirtual #42                 // Method createContext:(Ljava/lang/String;Ljava/net/URI;)Lorg/apache/logging/log4j/core/LoggerContext;
     348: astore        8
     350: aload_2
     351: ifnull        375
     354: aload         8
     356: aload_2
     357: invokeinterface #33,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     362: checkcast     #43                 // class java/lang/String
     365: aload_2
     366: invokeinterface #32,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     371: invokevirtual #44                 // Method org/apache/logging/log4j/core/LoggerContext.putObject:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
     374: pop
     375: aload         6
     377: aload         7
     379: new           #21                 // class java/lang/ref/WeakReference
     382: dup
     383: aload         8
     385: invokespecial #57                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
     388: invokevirtual #58                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
     391: pop
     392: aload         8
     394: areturn

  protected org.apache.logging.log4j.core.LoggerContext createContext(java.lang.String, java.net.URI);
    Code:
       0: new           #4                  // class org/apache/logging/log4j/core/LoggerContext
       3: dup
       4: aload_1
       5: aconst_null
       6: aload_2
       7: invokespecial #59                 // Method org/apache/logging/log4j/core/LoggerContext."<init>":(Ljava/lang/String;Ljava/lang/Object;Ljava/net/URI;)V
      10: areturn

  protected java.lang.String toContextMapKey(java.lang.ClassLoader);
    Code:
       0: aload_1
       1: invokestatic  #60                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
       4: invokestatic  #61                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
       7: areturn

  protected org.apache.logging.log4j.core.LoggerContext getDefault();
    Code:
       0: getstatic     #62                 // Field DEFAULT_CONTEXT:Ljava/util/concurrent/atomic/AtomicReference;
       3: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       6: checkcast     #4                  // class org/apache/logging/log4j/core/LoggerContext
       9: astore_1
      10: aload_1
      11: ifnull        16
      14: aload_1
      15: areturn
      16: getstatic     #62                 // Field DEFAULT_CONTEXT:Ljava/util/concurrent/atomic/AtomicReference;
      19: aconst_null
      20: aload_0
      21: aload_0
      22: invokevirtual #63                 // Method defaultContextName:()Ljava/lang/String;
      25: aconst_null
      26: invokevirtual #42                 // Method createContext:(Ljava/lang/String;Ljava/net/URI;)Lorg/apache/logging/log4j/core/LoggerContext;
      29: invokevirtual #58                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      32: pop
      33: getstatic     #62                 // Field DEFAULT_CONTEXT:Ljava/util/concurrent/atomic/AtomicReference;
      36: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      39: checkcast     #4                  // class org/apache/logging/log4j/core/LoggerContext
      42: areturn

  protected java.lang.String defaultContextName();
    Code:
       0: ldc           #64                 // String Default
       2: areturn

  private static java.util.concurrent.atomic.AtomicReference lambda$locateContext$0(org.apache.logging.log4j.core.LoggerContext, java.lang.String);
    Code:
       0: new           #19                 // class java/util/concurrent/atomic/AtomicReference
       3: dup
       4: new           #21                 // class java/lang/ref/WeakReference
       7: dup
       8: aload_0
       9: invokespecial #57                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
      12: invokespecial #65                 // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      15: areturn

  static {};
    Code:
       0: new           #19                 // class java/util/concurrent/atomic/AtomicReference
       3: dup
       4: invokespecial #66                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
       7: putstatic     #62                 // Field DEFAULT_CONTEXT:Ljava/util/concurrent/atomic/AtomicReference;
      10: invokestatic  #67                 // Method org/apache/logging/log4j/status/StatusLogger.getLogger:()Lorg/apache/logging/log4j/status/StatusLogger;
      13: putstatic     #50                 // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
      16: new           #68                 // class java/util/concurrent/ConcurrentHashMap
      19: dup
      20: invokespecial #69                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      23: putstatic     #17                 // Field CONTEXT_MAP:Ljava/util/concurrent/ConcurrentMap;
      26: return
}
