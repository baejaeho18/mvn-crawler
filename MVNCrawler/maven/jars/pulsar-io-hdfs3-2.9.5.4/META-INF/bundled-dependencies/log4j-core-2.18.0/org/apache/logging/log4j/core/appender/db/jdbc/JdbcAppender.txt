Compiled from "JdbcAppender.java"
public final class org.apache.logging.log4j.core.appender.db.jdbc.JdbcAppender extends org.apache.logging.log4j.core.appender.db.AbstractDatabaseAppender<org.apache.logging.log4j.core.appender.db.jdbc.JdbcDatabaseManager> {
  private final java.lang.String description;

  public static <B extends org.apache.logging.log4j.core.appender.db.jdbc.JdbcAppender$Builder<B>> org.apache.logging.log4j.core.appender.db.jdbc.JdbcAppender createAppender(java.lang.String, java.lang.String, org.apache.logging.log4j.core.Filter, org.apache.logging.log4j.core.appender.db.jdbc.ConnectionSource, java.lang.String, java.lang.String, org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig[]);
    Code:
       0: aload_0
       1: ldc           #3                  // String Name cannot be empty
       3: invokestatic  #4                  // Method org/apache/logging/log4j/core/util/Assert.requireNonEmpty:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_3
       8: ldc           #5                  // String ConnectionSource cannot be null
      10: invokestatic  #6                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: aload         5
      16: ldc           #7                  // String Table name cannot be empty
      18: invokestatic  #4                  // Method org/apache/logging/log4j/core/util/Assert.requireNonEmpty:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      21: pop
      22: aload         6
      24: ldc           #8                  // String ColumnConfigs cannot be empty
      26: invokestatic  #4                  // Method org/apache/logging/log4j/core/util/Assert.requireNonEmpty:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      29: pop
      30: aload         4
      32: iconst_0
      33: invokestatic  #9                  // Method org/apache/logging/log4j/core/appender/AbstractAppender.parseInt:(Ljava/lang/String;I)I
      36: istore        7
      38: aload_1
      39: iconst_1
      40: invokestatic  #10                 // Method org/apache/logging/log4j/core/util/Booleans.parseBoolean:(Ljava/lang/String;Z)Z
      43: istore        8
      45: invokestatic  #11                 // Method newBuilder:()Lorg/apache/logging/log4j/core/appender/db/jdbc/JdbcAppender$Builder;
      48: iload         7
      50: invokevirtual #12                 // Method org/apache/logging/log4j/core/appender/db/jdbc/JdbcAppender$Builder.setBufferSize:(I)Lorg/apache/logging/log4j/core/appender/db/jdbc/JdbcAppender$Builder;
      53: aload         6
      55: invokevirtual #13                 // Method org/apache/logging/log4j/core/appender/db/jdbc/JdbcAppender$Builder.setColumnConfigs:([Lorg/apache/logging/log4j/core/appender/db/jdbc/ColumnConfig;)Lorg/apache/logging/log4j/core/appender/db/jdbc/JdbcAppender$Builder;
      58: aload_3
      59: invokevirtual #14                 // Method org/apache/logging/log4j/core/appender/db/jdbc/JdbcAppender$Builder.setConnectionSource:(Lorg/apache/logging/log4j/core/appender/db/jdbc/ConnectionSource;)Lorg/apache/logging/log4j/core/appender/db/jdbc/JdbcAppender$Builder;
      62: aload         5
      64: invokevirtual #15                 // Method org/apache/logging/log4j/core/appender/db/jdbc/JdbcAppender$Builder.setTableName:(Ljava/lang/String;)Lorg/apache/logging/log4j/core/appender/db/jdbc/JdbcAppender$Builder;
      67: aload_0
      68: invokevirtual #16                 // Method org/apache/logging/log4j/core/appender/db/jdbc/JdbcAppender$Builder.setName:(Ljava/lang/String;)Lorg/apache/logging/log4j/core/appender/AbstractAppender$Builder;
      71: checkcast     #17                 // class org/apache/logging/log4j/core/appender/db/jdbc/JdbcAppender$Builder
      74: iload         8
      76: invokevirtual #18                 // Method org/apache/logging/log4j/core/appender/db/jdbc/JdbcAppender$Builder.setIgnoreExceptions:(Z)Lorg/apache/logging/log4j/core/appender/AbstractAppender$Builder;
      79: checkcast     #17                 // class org/apache/logging/log4j/core/appender/db/jdbc/JdbcAppender$Builder
      82: aload_2
      83: invokevirtual #19                 // Method org/apache/logging/log4j/core/appender/db/jdbc/JdbcAppender$Builder.setFilter:(Lorg/apache/logging/log4j/core/Filter;)Lorg/apache/logging/log4j/core/filter/AbstractFilterable$Builder;
      86: checkcast     #17                 // class org/apache/logging/log4j/core/appender/db/jdbc/JdbcAppender$Builder
      89: invokevirtual #20                 // Method org/apache/logging/log4j/core/appender/db/jdbc/JdbcAppender$Builder.build:()Lorg/apache/logging/log4j/core/appender/db/jdbc/JdbcAppender;
      92: areturn

  public static <B extends org.apache.logging.log4j.core.appender.db.jdbc.JdbcAppender$Builder<B>> B newBuilder();
    Code:
       0: new           #17                 // class org/apache/logging/log4j/core/appender/db/jdbc/JdbcAppender$Builder
       3: dup
       4: invokespecial #21                 // Method org/apache/logging/log4j/core/appender/db/jdbc/JdbcAppender$Builder."<init>":()V
       7: invokevirtual #22                 // Method org/apache/logging/log4j/core/appender/db/jdbc/JdbcAppender$Builder.asBuilder:()Lorg/apache/logging/log4j/core/filter/AbstractFilterable$Builder;
      10: checkcast     #17                 // class org/apache/logging/log4j/core/appender/db/jdbc/JdbcAppender$Builder
      13: areturn

  private org.apache.logging.log4j.core.appender.db.jdbc.JdbcAppender(java.lang.String, org.apache.logging.log4j.core.Filter, org.apache.logging.log4j.core.Layout<? extends java.io.Serializable>, boolean, org.apache.logging.log4j.core.config.Property[], org.apache.logging.log4j.core.appender.db.jdbc.JdbcDatabaseManager);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: aload         5
       8: aload         6
      10: invokespecial #23                 // Method org/apache/logging/log4j/core/appender/db/AbstractDatabaseAppender."<init>":(Ljava/lang/String;Lorg/apache/logging/log4j/core/Filter;Lorg/apache/logging/log4j/core/Layout;Z[Lorg/apache/logging/log4j/core/config/Property;Lorg/apache/logging/log4j/core/appender/db/AbstractDatabaseManager;)V
      13: aload_0
      14: new           #24                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      21: aload_0
      22: invokevirtual #26                 // Method getName:()Ljava/lang/String;
      25: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: ldc           #28                 // String { manager=
      30: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_0
      34: invokevirtual #29                 // Method getManager:()Lorg/apache/logging/log4j/core/appender/db/AbstractDatabaseManager;
      37: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      40: ldc           #31                 // String  }
      42: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: putfield      #33                 // Field description:Ljava/lang/String;
      51: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #33                 // Field description:Ljava/lang/String;
       4: areturn

  static org.apache.logging.log4j.Logger access$000();
    Code:
       0: getstatic     #2                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       3: areturn

  org.apache.logging.log4j.core.appender.db.jdbc.JdbcAppender(java.lang.String, org.apache.logging.log4j.core.Filter, org.apache.logging.log4j.core.Layout, boolean, org.apache.logging.log4j.core.config.Property[], org.apache.logging.log4j.core.appender.db.jdbc.JdbcDatabaseManager, org.apache.logging.log4j.core.appender.db.jdbc.JdbcAppender$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: aload         5
       8: aload         6
      10: invokespecial #1                  // Method "<init>":(Ljava/lang/String;Lorg/apache/logging/log4j/core/Filter;Lorg/apache/logging/log4j/core/Layout;Z[Lorg/apache/logging/log4j/core/config/Property;Lorg/apache/logging/log4j/core/appender/db/jdbc/JdbcDatabaseManager;)V
      13: return
}
