Compiled from "TextEncoderHelper.java"
public class org.apache.logging.log4j.core.layout.TextEncoderHelper {
  private org.apache.logging.log4j.core.layout.TextEncoderHelper();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  static void encodeTextFallBack(java.nio.charset.Charset, java.lang.StringBuilder, org.apache.logging.log4j.core.layout.ByteBufferDestination);
    Code:
       0: aload_1
       1: invokevirtual #2                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       4: aload_0
       5: invokevirtual #3                  // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
       8: astore_3
       9: aload_2
      10: aload_3
      11: iconst_0
      12: aload_3
      13: arraylength
      14: invokeinterface #4,  4            // InterfaceMethod org/apache/logging/log4j/core/layout/ByteBufferDestination.writeBytes:([BII)V
      19: return

  public static void encodeText(java.nio.charset.CharsetEncoder, java.nio.CharBuffer, java.nio.ByteBuffer, java.lang.StringBuilder, org.apache.logging.log4j.core.layout.ByteBufferDestination);
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method java/nio/charset/CharsetEncoder.reset:()Ljava/nio/charset/CharsetEncoder;
       4: pop
       5: aload_3
       6: invokevirtual #6                  // Method java/lang/StringBuilder.length:()I
       9: aload_1
      10: invokevirtual #7                  // Method java/nio/CharBuffer.capacity:()I
      13: if_icmple     26
      16: aload_0
      17: aload_1
      18: aload_2
      19: aload_3
      20: aload         4
      22: invokestatic  #8                  // Method encodeChunkedText:(Ljava/nio/charset/CharsetEncoder;Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Ljava/lang/StringBuilder;Lorg/apache/logging/log4j/core/layout/ByteBufferDestination;)V
      25: return
      26: aload_1
      27: invokevirtual #9                  // Method java/nio/CharBuffer.clear:()Ljava/nio/Buffer;
      30: pop
      31: aload_3
      32: iconst_0
      33: aload_3
      34: invokevirtual #6                  // Method java/lang/StringBuilder.length:()I
      37: aload_1
      38: invokevirtual #10                 // Method java/nio/CharBuffer.array:()[C
      41: aload_1
      42: invokevirtual #11                 // Method java/nio/CharBuffer.arrayOffset:()I
      45: invokevirtual #12                 // Method java/lang/StringBuilder.getChars:(II[CI)V
      48: aload_1
      49: aload_3
      50: invokevirtual #6                  // Method java/lang/StringBuilder.length:()I
      53: invokevirtual #13                 // Method java/nio/CharBuffer.limit:(I)Ljava/nio/Buffer;
      56: pop
      57: aload_0
      58: aload_1
      59: aload_2
      60: iconst_1
      61: invokevirtual #14                 // Method java/nio/charset/CharsetEncoder.encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;
      64: astore        5
      66: aload_0
      67: aload_1
      68: aload_2
      69: aload         4
      71: aload         5
      73: invokestatic  #15                 // Method writeEncodedText:(Ljava/nio/charset/CharsetEncoder;Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Lorg/apache/logging/log4j/core/layout/ByteBufferDestination;Ljava/nio/charset/CoderResult;)V
      76: return

  private static void writeEncodedText(java.nio.charset.CharsetEncoder, java.nio.CharBuffer, java.nio.ByteBuffer, org.apache.logging.log4j.core.layout.ByteBufferDestination, java.nio.charset.CoderResult);
    Code:
       0: aload         4
       2: invokevirtual #16                 // Method java/nio/charset/CoderResult.isUnderflow:()Z
       5: ifne          18
       8: aload_0
       9: aload_1
      10: aload_3
      11: aload_2
      12: aload         4
      14: invokestatic  #17                 // Method writeChunkedEncodedText:(Ljava/nio/charset/CharsetEncoder;Ljava/nio/CharBuffer;Lorg/apache/logging/log4j/core/layout/ByteBufferDestination;Ljava/nio/ByteBuffer;Ljava/nio/charset/CoderResult;)V
      17: return
      18: aload_0
      19: aload_2
      20: invokevirtual #18                 // Method java/nio/charset/CharsetEncoder.flush:(Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;
      23: astore        4
      25: aload         4
      27: invokevirtual #16                 // Method java/nio/charset/CoderResult.isUnderflow:()Z
      30: ifne          59
      33: aload_3
      34: dup
      35: astore        5
      37: monitorenter
      38: aload_0
      39: aload_3
      40: aload_2
      41: invokestatic  #19                 // Method flushRemainingBytes:(Ljava/nio/charset/CharsetEncoder;Lorg/apache/logging/log4j/core/layout/ByteBufferDestination;Ljava/nio/ByteBuffer;)V
      44: aload         5
      46: monitorexit
      47: goto          58
      50: astore        6
      52: aload         5
      54: monitorexit
      55: aload         6
      57: athrow
      58: return
      59: aload_2
      60: aload_3
      61: invokeinterface #20,  1           // InterfaceMethod org/apache/logging/log4j/core/layout/ByteBufferDestination.getByteBuffer:()Ljava/nio/ByteBuffer;
      66: if_acmpeq     86
      69: aload_2
      70: invokevirtual #21                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      73: pop
      74: aload_3
      75: aload_2
      76: invokeinterface #22,  2           // InterfaceMethod org/apache/logging/log4j/core/layout/ByteBufferDestination.writeBytes:(Ljava/nio/ByteBuffer;)V
      81: aload_2
      82: invokevirtual #23                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      85: pop
      86: return
    Exception table:
       from    to  target type
          38    47    50   any
          50    55    50   any

  private static void writeChunkedEncodedText(java.nio.charset.CharsetEncoder, java.nio.CharBuffer, org.apache.logging.log4j.core.layout.ByteBufferDestination, java.nio.ByteBuffer, java.nio.charset.CoderResult);
    Code:
       0: aload_2
       1: dup
       2: astore        5
       4: monitorenter
       5: aload_0
       6: aload_1
       7: iconst_1
       8: aload_2
       9: aload_3
      10: aload         4
      12: invokestatic  #24                 // Method writeAndEncodeAsMuchAsPossible:(Ljava/nio/charset/CharsetEncoder;Ljava/nio/CharBuffer;ZLorg/apache/logging/log4j/core/layout/ByteBufferDestination;Ljava/nio/ByteBuffer;Ljava/nio/charset/CoderResult;)Ljava/nio/ByteBuffer;
      15: astore_3
      16: aload_0
      17: aload_2
      18: aload_3
      19: invokestatic  #19                 // Method flushRemainingBytes:(Ljava/nio/charset/CharsetEncoder;Lorg/apache/logging/log4j/core/layout/ByteBufferDestination;Ljava/nio/ByteBuffer;)V
      22: aload         5
      24: monitorexit
      25: goto          36
      28: astore        6
      30: aload         5
      32: monitorexit
      33: aload         6
      35: athrow
      36: return
    Exception table:
       from    to  target type
           5    25    28   any
          28    33    28   any

  private static void encodeChunkedText(java.nio.charset.CharsetEncoder, java.nio.CharBuffer, java.nio.ByteBuffer, java.lang.StringBuilder, org.apache.logging.log4j.core.layout.ByteBufferDestination);
    Code:
       0: iconst_0
       1: istore        5
       3: getstatic     #25                 // Field java/nio/charset/CoderResult.UNDERFLOW:Ljava/nio/charset/CoderResult;
       6: astore        6
       8: iconst_0
       9: istore        7
      11: iload         7
      13: ifne          79
      16: aload         6
      18: invokevirtual #16                 // Method java/nio/charset/CoderResult.isUnderflow:()Z
      21: ifeq          79
      24: aload_1
      25: invokevirtual #9                  // Method java/nio/CharBuffer.clear:()Ljava/nio/Buffer;
      28: pop
      29: aload_3
      30: iload         5
      32: aload_1
      33: invokestatic  #26                 // Method copy:(Ljava/lang/StringBuilder;ILjava/nio/CharBuffer;)I
      36: istore        8
      38: iload         5
      40: iload         8
      42: iadd
      43: istore        5
      45: iload         5
      47: aload_3
      48: invokevirtual #6                  // Method java/lang/StringBuilder.length:()I
      51: if_icmplt     58
      54: iconst_1
      55: goto          59
      58: iconst_0
      59: istore        7
      61: aload_1
      62: invokevirtual #27                 // Method java/nio/CharBuffer.flip:()Ljava/nio/Buffer;
      65: pop
      66: aload_0
      67: aload_1
      68: aload_2
      69: iload         7
      71: invokevirtual #14                 // Method java/nio/charset/CharsetEncoder.encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;
      74: astore        6
      76: goto          11
      79: iload         7
      81: ifeq          95
      84: aload_0
      85: aload_1
      86: aload_2
      87: aload         4
      89: aload         6
      91: invokestatic  #15                 // Method writeEncodedText:(Ljava/nio/charset/CharsetEncoder;Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Lorg/apache/logging/log4j/core/layout/ByteBufferDestination;Ljava/nio/charset/CoderResult;)V
      94: return
      95: aload         4
      97: dup
      98: astore        8
     100: monitorenter
     101: aload_0
     102: aload_1
     103: iload         7
     105: aload         4
     107: aload_2
     108: aload         6
     110: invokestatic  #24                 // Method writeAndEncodeAsMuchAsPossible:(Ljava/nio/charset/CharsetEncoder;Ljava/nio/CharBuffer;ZLorg/apache/logging/log4j/core/layout/ByteBufferDestination;Ljava/nio/ByteBuffer;Ljava/nio/charset/CoderResult;)Ljava/nio/ByteBuffer;
     113: astore_2
     114: iload         7
     116: ifne          208
     119: getstatic     #25                 // Field java/nio/charset/CoderResult.UNDERFLOW:Ljava/nio/charset/CoderResult;
     122: astore        6
     124: iload         7
     126: ifne          192
     129: aload         6
     131: invokevirtual #16                 // Method java/nio/charset/CoderResult.isUnderflow:()Z
     134: ifeq          192
     137: aload_1
     138: invokevirtual #9                  // Method java/nio/CharBuffer.clear:()Ljava/nio/Buffer;
     141: pop
     142: aload_3
     143: iload         5
     145: aload_1
     146: invokestatic  #26                 // Method copy:(Ljava/lang/StringBuilder;ILjava/nio/CharBuffer;)I
     149: istore        9
     151: iload         5
     153: iload         9
     155: iadd
     156: istore        5
     158: iload         5
     160: aload_3
     161: invokevirtual #6                  // Method java/lang/StringBuilder.length:()I
     164: if_icmplt     171
     167: iconst_1
     168: goto          172
     171: iconst_0
     172: istore        7
     174: aload_1
     175: invokevirtual #27                 // Method java/nio/CharBuffer.flip:()Ljava/nio/Buffer;
     178: pop
     179: aload_0
     180: aload_1
     181: aload_2
     182: iload         7
     184: invokevirtual #14                 // Method java/nio/charset/CharsetEncoder.encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;
     187: astore        6
     189: goto          124
     192: aload_0
     193: aload_1
     194: iload         7
     196: aload         4
     198: aload_2
     199: aload         6
     201: invokestatic  #24                 // Method writeAndEncodeAsMuchAsPossible:(Ljava/nio/charset/CharsetEncoder;Ljava/nio/CharBuffer;ZLorg/apache/logging/log4j/core/layout/ByteBufferDestination;Ljava/nio/ByteBuffer;Ljava/nio/charset/CoderResult;)Ljava/nio/ByteBuffer;
     204: astore_2
     205: goto          114
     208: aload_0
     209: aload         4
     211: aload_2
     212: invokestatic  #19                 // Method flushRemainingBytes:(Ljava/nio/charset/CharsetEncoder;Lorg/apache/logging/log4j/core/layout/ByteBufferDestination;Ljava/nio/ByteBuffer;)V
     215: aload         8
     217: monitorexit
     218: goto          229
     221: astore        10
     223: aload         8
     225: monitorexit
     226: aload         10
     228: athrow
     229: return
    Exception table:
       from    to  target type
         101   218   221   any
         221   226   221   any

  public static void encodeText(java.nio.charset.CharsetEncoder, java.nio.CharBuffer, org.apache.logging.log4j.core.layout.ByteBufferDestination);
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method java/nio/charset/CharsetEncoder.reset:()Ljava/nio/charset/CharsetEncoder;
       4: pop
       5: aload_2
       6: dup
       7: astore_3
       8: monitorenter
       9: aload_2
      10: invokeinterface #20,  1           // InterfaceMethod org/apache/logging/log4j/core/layout/ByteBufferDestination.getByteBuffer:()Ljava/nio/ByteBuffer;
      15: astore        4
      17: aload_0
      18: aload_1
      19: iconst_1
      20: aload_2
      21: aload         4
      23: invokestatic  #28                 // Method encodeAsMuchAsPossible:(Ljava/nio/charset/CharsetEncoder;Ljava/nio/CharBuffer;ZLorg/apache/logging/log4j/core/layout/ByteBufferDestination;Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      26: astore        4
      28: aload_0
      29: aload_2
      30: aload         4
      32: invokestatic  #19                 // Method flushRemainingBytes:(Ljava/nio/charset/CharsetEncoder;Lorg/apache/logging/log4j/core/layout/ByteBufferDestination;Ljava/nio/ByteBuffer;)V
      35: aload_3
      36: monitorexit
      37: goto          47
      40: astore        5
      42: aload_3
      43: monitorexit
      44: aload         5
      46: athrow
      47: return
    Exception table:
       from    to  target type
           9    37    40   any
          40    44    40   any

  private static java.nio.ByteBuffer writeAndEncodeAsMuchAsPossible(java.nio.charset.CharsetEncoder, java.nio.CharBuffer, boolean, org.apache.logging.log4j.core.layout.ByteBufferDestination, java.nio.ByteBuffer, java.nio.charset.CoderResult);
    Code:
       0: aload_3
       1: aload         4
       3: aload         5
       5: invokestatic  #29                 // Method drainIfByteBufferFull:(Lorg/apache/logging/log4j/core/layout/ByteBufferDestination;Ljava/nio/ByteBuffer;Ljava/nio/charset/CoderResult;)Ljava/nio/ByteBuffer;
       8: astore        4
      10: aload         5
      12: invokevirtual #30                 // Method java/nio/charset/CoderResult.isOverflow:()Z
      15: ifne          21
      18: goto          34
      21: aload_0
      22: aload_1
      23: aload         4
      25: iload_2
      26: invokevirtual #14                 // Method java/nio/charset/CharsetEncoder.encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;
      29: astore        5
      31: goto          0
      34: aload         5
      36: invokevirtual #16                 // Method java/nio/charset/CoderResult.isUnderflow:()Z
      39: ifne          47
      42: aload         5
      44: invokestatic  #31                 // Method throwException:(Ljava/nio/charset/CoderResult;)V
      47: aload         4
      49: areturn

  private static void throwException(java.nio.charset.CoderResult);
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method java/nio/charset/CoderResult.throwException:()V
       4: goto          17
       7: astore_1
       8: new           #34                 // class java/lang/IllegalStateException
      11: dup
      12: aload_1
      13: invokespecial #35                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      16: athrow
      17: return
    Exception table:
       from    to  target type
           0     4     7   Class java/nio/charset/CharacterCodingException

  private static java.nio.ByteBuffer encodeAsMuchAsPossible(java.nio.charset.CharsetEncoder, java.nio.CharBuffer, boolean, org.apache.logging.log4j.core.layout.ByteBufferDestination, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: aload         4
       4: iload_2
       5: invokevirtual #14                 // Method java/nio/charset/CharsetEncoder.encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;
       8: astore        5
      10: aload_3
      11: aload         4
      13: aload         5
      15: invokestatic  #29                 // Method drainIfByteBufferFull:(Lorg/apache/logging/log4j/core/layout/ByteBufferDestination;Ljava/nio/ByteBuffer;Ljava/nio/charset/CoderResult;)Ljava/nio/ByteBuffer;
      18: astore        4
      20: aload         5
      22: invokevirtual #30                 // Method java/nio/charset/CoderResult.isOverflow:()Z
      25: ifne          0
      28: aload         5
      30: invokevirtual #16                 // Method java/nio/charset/CoderResult.isUnderflow:()Z
      33: ifne          41
      36: aload         5
      38: invokestatic  #31                 // Method throwException:(Ljava/nio/charset/CoderResult;)V
      41: aload         4
      43: areturn

  private static java.nio.ByteBuffer drainIfByteBufferFull(org.apache.logging.log4j.core.layout.ByteBufferDestination, java.nio.ByteBuffer, java.nio.charset.CoderResult);
    Code:
       0: aload_2
       1: invokevirtual #30                 // Method java/nio/charset/CoderResult.isOverflow:()Z
       4: ifeq          67
       7: aload_0
       8: dup
       9: astore_3
      10: monitorenter
      11: aload_0
      12: invokeinterface #20,  1           // InterfaceMethod org/apache/logging/log4j/core/layout/ByteBufferDestination.getByteBuffer:()Ljava/nio/ByteBuffer;
      17: astore        4
      19: aload         4
      21: aload_1
      22: if_acmpeq     49
      25: aload_1
      26: invokevirtual #21                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      29: pop
      30: aload_1
      31: aload_0
      32: invokestatic  #36                 // Method org/apache/logging/log4j/core/layout/ByteBufferDestinationHelper.writeToUnsynchronized:(Ljava/nio/ByteBuffer;Lorg/apache/logging/log4j/core/layout/ByteBufferDestination;)V
      35: aload_1
      36: invokevirtual #23                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      39: pop
      40: aload_0
      41: invokeinterface #20,  1           // InterfaceMethod org/apache/logging/log4j/core/layout/ByteBufferDestination.getByteBuffer:()Ljava/nio/ByteBuffer;
      46: aload_3
      47: monitorexit
      48: areturn
      49: aload_0
      50: aload         4
      52: invokeinterface #37,  2           // InterfaceMethod org/apache/logging/log4j/core/layout/ByteBufferDestination.drain:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      57: aload_3
      58: monitorexit
      59: areturn
      60: astore        5
      62: aload_3
      63: monitorexit
      64: aload         5
      66: athrow
      67: aload_1
      68: areturn
    Exception table:
       from    to  target type
          11    48    60   any
          49    59    60   any
          60    64    60   any

  private static void flushRemainingBytes(java.nio.charset.CharsetEncoder, org.apache.logging.log4j.core.layout.ByteBufferDestination, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #18                 // Method java/nio/charset/CharsetEncoder.flush:(Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;
       5: astore_3
       6: aload_1
       7: aload_2
       8: aload_3
       9: invokestatic  #29                 // Method drainIfByteBufferFull:(Lorg/apache/logging/log4j/core/layout/ByteBufferDestination;Ljava/nio/ByteBuffer;Ljava/nio/charset/CoderResult;)Ljava/nio/ByteBuffer;
      12: astore_2
      13: aload_3
      14: invokevirtual #30                 // Method java/nio/charset/CoderResult.isOverflow:()Z
      17: ifne          0
      20: aload_3
      21: invokevirtual #16                 // Method java/nio/charset/CoderResult.isUnderflow:()Z
      24: ifne          31
      27: aload_3
      28: invokestatic  #31                 // Method throwException:(Ljava/nio/charset/CoderResult;)V
      31: aload_2
      32: invokevirtual #38                 // Method java/nio/ByteBuffer.remaining:()I
      35: ifle          63
      38: aload_2
      39: aload_1
      40: invokeinterface #20,  1           // InterfaceMethod org/apache/logging/log4j/core/layout/ByteBufferDestination.getByteBuffer:()Ljava/nio/ByteBuffer;
      45: if_acmpeq     63
      48: aload_2
      49: invokevirtual #21                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      52: pop
      53: aload_2
      54: aload_1
      55: invokestatic  #36                 // Method org/apache/logging/log4j/core/layout/ByteBufferDestinationHelper.writeToUnsynchronized:(Ljava/nio/ByteBuffer;Lorg/apache/logging/log4j/core/layout/ByteBufferDestination;)V
      58: aload_2
      59: invokevirtual #23                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      62: pop
      63: return

  static int copy(java.lang.StringBuilder, int, java.nio.CharBuffer);
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method java/lang/StringBuilder.length:()I
       4: iload_1
       5: isub
       6: aload_2
       7: invokevirtual #39                 // Method java/nio/CharBuffer.remaining:()I
      10: invokestatic  #40                 // Method java/lang/Math.min:(II)I
      13: istore_3
      14: aload_2
      15: invokevirtual #10                 // Method java/nio/CharBuffer.array:()[C
      18: astore        4
      20: aload_2
      21: invokevirtual #41                 // Method java/nio/CharBuffer.position:()I
      24: istore        5
      26: aload_0
      27: iload_1
      28: iload_1
      29: iload_3
      30: iadd
      31: aload         4
      33: aload_2
      34: invokevirtual #11                 // Method java/nio/CharBuffer.arrayOffset:()I
      37: iload         5
      39: iadd
      40: invokevirtual #12                 // Method java/lang/StringBuilder.getChars:(II[CI)V
      43: aload_2
      44: iload         5
      46: iload_3
      47: iadd
      48: invokevirtual #42                 // Method java/nio/CharBuffer.position:(I)Ljava/nio/Buffer;
      51: pop
      52: iload_3
      53: ireturn
}
