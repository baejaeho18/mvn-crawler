Compiled from "IdlePurgePolicy.java"
public class org.apache.logging.log4j.core.appender.routing.IdlePurgePolicy extends org.apache.logging.log4j.core.AbstractLifeCycle implements org.apache.logging.log4j.core.appender.routing.PurgePolicy,java.lang.Runnable {
  private final long timeToLive;

  private final long checkInterval;

  private final java.util.concurrent.ConcurrentMap<java.lang.String, java.lang.Long> appendersUsage;

  private org.apache.logging.log4j.core.appender.routing.RoutingAppender routingAppender;

  private final org.apache.logging.log4j.core.config.ConfigurationScheduler scheduler;

  private volatile java.util.concurrent.ScheduledFuture<?> future;

  public org.apache.logging.log4j.core.appender.routing.IdlePurgePolicy(long, long, org.apache.logging.log4j.core.config.ConfigurationScheduler);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/logging/log4j/core/AbstractLifeCycle."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field appendersUsage:Ljava/util/concurrent/ConcurrentMap;
      15: aload_0
      16: lload_1
      17: putfield      #5                  // Field timeToLive:J
      20: aload_0
      21: lload_3
      22: putfield      #6                  // Field checkInterval:J
      25: aload_0
      26: aload         5
      28: putfield      #7                  // Field scheduler:Lorg/apache/logging/log4j/core/config/ConfigurationScheduler;
      31: return

  public void initialize(org.apache.logging.log4j.core.appender.routing.RoutingAppender);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field routingAppender:Lorg/apache/logging/log4j/core/appender/routing/RoutingAppender;
       5: return

  public boolean stop(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method setStopping:()V
       4: aload_0
       5: aload_0
       6: getfield      #10                 // Field future:Ljava/util/concurrent/ScheduledFuture;
       9: invokevirtual #11                 // Method stop:(Ljava/util/concurrent/Future;)Z
      12: istore        4
      14: aload_0
      15: invokevirtual #12                 // Method setStopped:()V
      18: iload         4
      20: ireturn

  public void purge();
    Code:
       0: invokestatic  #13                 // Method java/lang/System.currentTimeMillis:()J
       3: aload_0
       4: getfield      #5                  // Field timeToLive:J
       7: lsub
       8: lstore_1
       9: aload_0
      10: getfield      #4                  // Field appendersUsage:Ljava/util/concurrent/ConcurrentMap;
      13: invokeinterface #14,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
      18: invokeinterface #15,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      23: astore_3
      24: aload_3
      25: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          127
      33: aload_3
      34: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #18                 // class java/util/Map$Entry
      42: astore        4
      44: aload         4
      46: invokeinterface #19,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      51: checkcast     #20                 // class java/lang/Long
      54: invokevirtual #21                 // Method java/lang/Long.longValue:()J
      57: lstore        5
      59: lload         5
      61: lload_1
      62: lcmp
      63: ifge          124
      66: aload_0
      67: getfield      #4                  // Field appendersUsage:Ljava/util/concurrent/ConcurrentMap;
      70: aload         4
      72: invokeinterface #22,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      77: lload         5
      79: invokestatic  #23                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      82: invokeinterface #24,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      87: ifeq          124
      90: getstatic     #25                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      93: ldc           #26                 // String Removing appender {}
      95: aload         4
      97: invokeinterface #22,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     102: invokeinterface #27,  3           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     107: aload_0
     108: getfield      #8                  // Field routingAppender:Lorg/apache/logging/log4j/core/appender/routing/RoutingAppender;
     111: aload         4
     113: invokeinterface #22,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     118: checkcast     #28                 // class java/lang/String
     121: invokevirtual #29                 // Method org/apache/logging/log4j/core/appender/routing/RoutingAppender.deleteAppender:(Ljava/lang/String;)V
     124: goto          24
     127: return

  public void update(java.lang.String, org.apache.logging.log4j.core.LogEvent);
    Code:
       0: invokestatic  #13                 // Method java/lang/System.currentTimeMillis:()J
       3: lstore_3
       4: aload_0
       5: getfield      #4                  // Field appendersUsage:Ljava/util/concurrent/ConcurrentMap;
       8: aload_1
       9: lload_3
      10: invokestatic  #23                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      13: invokeinterface #30,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: aload_0
      20: getfield      #10                 // Field future:Ljava/util/concurrent/ScheduledFuture;
      23: ifnonnull     56
      26: aload_0
      27: dup
      28: astore        5
      30: monitorenter
      31: aload_0
      32: getfield      #10                 // Field future:Ljava/util/concurrent/ScheduledFuture;
      35: ifnonnull     42
      38: aload_0
      39: invokespecial #31                 // Method scheduleNext:()V
      42: aload         5
      44: monitorexit
      45: goto          56
      48: astore        6
      50: aload         5
      52: monitorexit
      53: aload         6
      55: athrow
      56: return
    Exception table:
       from    to  target type
          31    45    48   any
          48    53    48   any

  public void run();
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method purge:()V
       4: aload_0
       5: invokespecial #31                 // Method scheduleNext:()V
       8: return

  private void scheduleNext();
    Code:
       0: ldc2_w        #33                 // long 9223372036854775807l
       3: lstore_1
       4: aload_0
       5: getfield      #4                  // Field appendersUsage:Ljava/util/concurrent/ConcurrentMap;
       8: invokeinterface #14,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
      13: invokeinterface #15,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      18: astore_3
      19: aload_3
      20: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          74
      28: aload_3
      29: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #18                 // class java/util/Map$Entry
      37: astore        4
      39: aload         4
      41: invokeinterface #19,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      46: checkcast     #20                 // class java/lang/Long
      49: invokevirtual #21                 // Method java/lang/Long.longValue:()J
      52: lload_1
      53: lcmp
      54: ifge          71
      57: aload         4
      59: invokeinterface #19,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      64: checkcast     #20                 // class java/lang/Long
      67: invokevirtual #21                 // Method java/lang/Long.longValue:()J
      70: lstore_1
      71: goto          19
      74: lload_1
      75: ldc2_w        #33                 // long 9223372036854775807l
      78: lcmp
      79: ifge          112
      82: aload_0
      83: getfield      #5                  // Field timeToLive:J
      86: invokestatic  #13                 // Method java/lang/System.currentTimeMillis:()J
      89: lload_1
      90: lsub
      91: lsub
      92: lstore_3
      93: aload_0
      94: aload_0
      95: getfield      #7                  // Field scheduler:Lorg/apache/logging/log4j/core/config/ConfigurationScheduler;
      98: aload_0
      99: lload_3
     100: getstatic     #35                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     103: invokevirtual #36                 // Method org/apache/logging/log4j/core/config/ConfigurationScheduler.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
     106: putfield      #10                 // Field future:Ljava/util/concurrent/ScheduledFuture;
     109: goto          131
     112: aload_0
     113: aload_0
     114: getfield      #7                  // Field scheduler:Lorg/apache/logging/log4j/core/config/ConfigurationScheduler;
     117: aload_0
     118: aload_0
     119: getfield      #6                  // Field checkInterval:J
     122: getstatic     #35                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     125: invokevirtual #36                 // Method org/apache/logging/log4j/core/config/ConfigurationScheduler.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
     128: putfield      #10                 // Field future:Ljava/util/concurrent/ScheduledFuture;
     131: return

  public static org.apache.logging.log4j.core.appender.routing.PurgePolicy createPurgePolicy(java.lang.String, java.lang.String, java.lang.String, org.apache.logging.log4j.core.config.Configuration);
    Code:
       0: aload_0
       1: ifnonnull     16
       4: getstatic     #25                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       7: ldc           #37                 // String A timeToLive value is required
       9: invokeinterface #38,  2           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;)V
      14: aconst_null
      15: areturn
      16: aload_2
      17: ifnonnull     28
      20: getstatic     #39                 // Field java/util/concurrent/TimeUnit.MINUTES:Ljava/util/concurrent/TimeUnit;
      23: astore        4
      25: goto          60
      28: aload_2
      29: invokevirtual #40                 // Method java/lang/String.toUpperCase:()Ljava/lang/String;
      32: invokestatic  #41                 // Method java/util/concurrent/TimeUnit.valueOf:(Ljava/lang/String;)Ljava/util/concurrent/TimeUnit;
      35: astore        4
      37: goto          60
      40: astore        5
      42: getstatic     #25                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      45: ldc           #43                 // String Invalid timeUnit value {}. timeUnit set to MINUTES
      47: aload_2
      48: aload         5
      50: invokeinterface #44,  4           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      55: getstatic     #39                 // Field java/util/concurrent/TimeUnit.MINUTES:Ljava/util/concurrent/TimeUnit;
      58: astore        4
      60: aload         4
      62: aload_0
      63: invokestatic  #45                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      66: invokevirtual #46                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      69: lstore        5
      71: lload         5
      73: lconst_0
      74: lcmp
      75: ifge          91
      78: getstatic     #25                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      81: ldc           #47                 // String timeToLive must be positive. timeToLive set to 0
      83: invokeinterface #38,  2           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;)V
      88: lconst_0
      89: lstore        5
      91: aload_1
      92: ifnonnull     102
      95: lload         5
      97: lstore        7
      99: goto          139
     102: aload         4
     104: aload_1
     105: invokestatic  #45                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
     108: invokevirtual #46                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
     111: lstore        7
     113: lload         7
     115: lconst_0
     116: lcmp
     117: ifge          139
     120: getstatic     #25                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
     123: ldc           #48                 // String checkInterval must be positive. checkInterval set equal to timeToLive = {}
     125: lload         5
     127: invokestatic  #23                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     130: invokeinterface #49,  3           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;)V
     135: lload         5
     137: lstore        7
     139: new           #50                 // class org/apache/logging/log4j/core/appender/routing/IdlePurgePolicy
     142: dup
     143: lload         5
     145: lload         7
     147: aload_3
     148: invokeinterface #51,  1           // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.getScheduler:()Lorg/apache/logging/log4j/core/config/ConfigurationScheduler;
     153: invokespecial #52                 // Method "<init>":(JJLorg/apache/logging/log4j/core/config/ConfigurationScheduler;)V
     156: areturn
    Exception table:
       from    to  target type
          28    37    40   Class java/lang/Exception

  public java.lang.String toString();
    Code:
       0: new           #53                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #54                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #55                 // String timeToLive=
       9: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #5                  // Field timeToLive:J
      16: invokevirtual #57                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      19: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn
}
