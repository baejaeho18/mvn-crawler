Compiled from "WatchManager.java"
public class org.apache.logging.log4j.core.util.WatchManager extends org.apache.logging.log4j.core.AbstractLifeCycle {
  private static org.apache.logging.log4j.Logger logger;

  private final java.util.concurrent.ConcurrentMap<org.apache.logging.log4j.core.util.Source, org.apache.logging.log4j.core.util.WatchManager$ConfigurationMonitor> watchers;

  private int intervalSeconds;

  private java.util.concurrent.ScheduledFuture<?> future;

  private final org.apache.logging.log4j.core.config.ConfigurationScheduler scheduler;

  private final java.util.List<org.apache.logging.log4j.core.util.WatchEventService> eventServiceList;

  private final java.util.UUID id;

  public org.apache.logging.log4j.core.util.WatchManager(org.apache.logging.log4j.core.config.ConfigurationScheduler);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method org/apache/logging/log4j/core/AbstractLifeCycle."<init>":()V
       4: aload_0
       5: new           #5                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #6                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #2                  // Field watchers:Ljava/util/concurrent/ConcurrentMap;
      15: aload_0
      16: iconst_0
      17: putfield      #7                  // Field intervalSeconds:I
      20: aload_0
      21: invokestatic  #8                  // Method org/apache/logging/log4j/core/util/WatchManager$LocalUUID.get:()Ljava/util/UUID;
      24: putfield      #9                  // Field id:Ljava/util/UUID;
      27: aload_0
      28: aload_1
      29: ldc           #10                 // String scheduler
      31: invokestatic  #11                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      34: checkcast     #12                 // class org/apache/logging/log4j/core/config/ConfigurationScheduler
      37: putfield      #13                 // Field scheduler:Lorg/apache/logging/log4j/core/config/ConfigurationScheduler;
      40: aload_0
      41: ldc           #14                 // class org/apache/logging/log4j/core/util/WatchEventService
      43: invokestatic  #15                 // Method java/lang/invoke/MethodHandles.lookup:()Ljava/lang/invoke/MethodHandles$Lookup;
      46: iconst_1
      47: invokestatic  #16                 // Method org/apache/logging/log4j/util/ServiceLoaderUtil.loadServices:(Ljava/lang/Class;Ljava/lang/invoke/MethodHandles$Lookup;Z)Ljava/util/stream/Stream;
      50: invokestatic  #17                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      53: invokeinterface #18,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      58: checkcast     #19                 // class java/util/List
      61: putfield      #20                 // Field eventServiceList:Ljava/util/List;
      64: return

  public void checkFiles();
    Code:
       0: new           #21                 // class org/apache/logging/log4j/core/util/WatchManager$WatchRunnable
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #22                 // Method org/apache/logging/log4j/core/util/WatchManager$WatchRunnable."<init>":(Lorg/apache/logging/log4j/core/util/WatchManager;Lorg/apache/logging/log4j/core/util/WatchManager$1;)V
       9: invokevirtual #23                 // Method org/apache/logging/log4j/core/util/WatchManager$WatchRunnable.run:()V
      12: return

  public java.util.Map<org.apache.logging.log4j.core.util.Source, org.apache.logging.log4j.core.util.Watcher> getConfigurationWatchers();
    Code:
       0: new           #24                 // class java/util/HashMap
       3: dup
       4: aload_0
       5: getfield      #2                  // Field watchers:Ljava/util/concurrent/ConcurrentMap;
       8: invokeinterface #25,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.size:()I
      13: invokespecial #26                 // Method java/util/HashMap."<init>":(I)V
      16: astore_1
      17: aload_0
      18: getfield      #2                  // Field watchers:Ljava/util/concurrent/ConcurrentMap;
      21: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
      26: invokeinterface #28,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      31: astore_2
      32: aload_2
      33: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      38: ifeq          79
      41: aload_2
      42: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #31                 // class java/util/Map$Entry
      50: astore_3
      51: aload_1
      52: aload_3
      53: invokeinterface #32,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      58: aload_3
      59: invokeinterface #33,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      64: checkcast     #34                 // class org/apache/logging/log4j/core/util/WatchManager$ConfigurationMonitor
      67: invokevirtual #35                 // Method org/apache/logging/log4j/core/util/WatchManager$ConfigurationMonitor.getWatcher:()Lorg/apache/logging/log4j/core/util/Watcher;
      70: invokeinterface #36,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      75: pop
      76: goto          32
      79: aload_1
      80: areturn

  public java.util.UUID getId();
    Code:
       0: aload_0
       1: getfield      #9                  // Field id:Ljava/util/UUID;
       4: areturn

  public int getIntervalSeconds();
    Code:
       0: aload_0
       1: getfield      #7                  // Field intervalSeconds:I
       4: ireturn

  public java.util.Map<java.io.File, org.apache.logging.log4j.core.util.FileWatcher> getWatchers();
    Code:
       0: new           #24                 // class java/util/HashMap
       3: dup
       4: aload_0
       5: getfield      #2                  // Field watchers:Ljava/util/concurrent/ConcurrentMap;
       8: invokeinterface #25,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.size:()I
      13: invokespecial #26                 // Method java/util/HashMap."<init>":(I)V
      16: astore_1
      17: aload_0
      18: getfield      #2                  // Field watchers:Ljava/util/concurrent/ConcurrentMap;
      21: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
      26: invokeinterface #28,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      31: astore_2
      32: aload_2
      33: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      38: ifeq          150
      41: aload_2
      42: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #31                 // class java/util/Map$Entry
      50: astore_3
      51: aload_3
      52: invokeinterface #33,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      57: checkcast     #34                 // class org/apache/logging/log4j/core/util/WatchManager$ConfigurationMonitor
      60: invokevirtual #35                 // Method org/apache/logging/log4j/core/util/WatchManager$ConfigurationMonitor.getWatcher:()Lorg/apache/logging/log4j/core/util/Watcher;
      63: instanceof    #37                 // class org/apache/logging/log4j/core/config/ConfigurationFileWatcher
      66: ifeq          106
      69: aload_1
      70: aload_3
      71: invokeinterface #32,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      76: checkcast     #38                 // class org/apache/logging/log4j/core/util/Source
      79: invokevirtual #39                 // Method org/apache/logging/log4j/core/util/Source.getFile:()Ljava/io/File;
      82: aload_3
      83: invokeinterface #33,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      88: checkcast     #34                 // class org/apache/logging/log4j/core/util/WatchManager$ConfigurationMonitor
      91: invokevirtual #35                 // Method org/apache/logging/log4j/core/util/WatchManager$ConfigurationMonitor.getWatcher:()Lorg/apache/logging/log4j/core/util/Watcher;
      94: checkcast     #40                 // class org/apache/logging/log4j/core/util/FileWatcher
      97: invokeinterface #36,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     102: pop
     103: goto          147
     106: aload_1
     107: aload_3
     108: invokeinterface #32,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     113: checkcast     #38                 // class org/apache/logging/log4j/core/util/Source
     116: invokevirtual #39                 // Method org/apache/logging/log4j/core/util/Source.getFile:()Ljava/io/File;
     119: new           #41                 // class org/apache/logging/log4j/core/util/WrappedFileWatcher
     122: dup
     123: aload_3
     124: invokeinterface #33,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     129: checkcast     #34                 // class org/apache/logging/log4j/core/util/WatchManager$ConfigurationMonitor
     132: invokevirtual #35                 // Method org/apache/logging/log4j/core/util/WatchManager$ConfigurationMonitor.getWatcher:()Lorg/apache/logging/log4j/core/util/Watcher;
     135: checkcast     #40                 // class org/apache/logging/log4j/core/util/FileWatcher
     138: invokespecial #42                 // Method org/apache/logging/log4j/core/util/WrappedFileWatcher."<init>":(Lorg/apache/logging/log4j/core/util/FileWatcher;)V
     141: invokeinterface #36,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     146: pop
     147: goto          32
     150: aload_1
     151: areturn

  public boolean hasEventListeners();
    Code:
       0: aload_0
       1: getfield      #20                 // Field eventServiceList:Ljava/util/List;
       4: invokeinterface #43,  1           // InterfaceMethod java/util/List.size:()I
       9: ifle          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  private java.lang.String millisToString(long);
    Code:
       0: new           #44                 // class java/util/Date
       3: dup
       4: lload_1
       5: invokespecial #45                 // Method java/util/Date."<init>":(J)V
       8: invokevirtual #46                 // Method java/util/Date.toString:()Ljava/lang/String;
      11: areturn

  public void reset();
    Code:
       0: getstatic     #3                  // Field logger:Lorg/apache/logging/log4j/Logger;
       3: ldc           #47                 // String Resetting {}
       5: aload_0
       6: invokeinterface #48,  3           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      11: aload_0
      12: getfield      #2                  // Field watchers:Ljava/util/concurrent/ConcurrentMap;
      15: invokeinterface #49,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.keySet:()Ljava/util/Set;
      20: invokeinterface #28,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      25: astore_1
      26: aload_1
      27: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          53
      35: aload_1
      36: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #38                 // class org/apache/logging/log4j/core/util/Source
      44: astore_2
      45: aload_0
      46: aload_2
      47: invokevirtual #50                 // Method reset:(Lorg/apache/logging/log4j/core/util/Source;)V
      50: goto          26
      53: return

  public void reset(java.io.File);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: new           #38                 // class org/apache/logging/log4j/core/util/Source
       8: dup
       9: aload_1
      10: invokespecial #51                 // Method org/apache/logging/log4j/core/util/Source."<init>":(Ljava/io/File;)V
      13: astore_2
      14: aload_0
      15: aload_2
      16: invokevirtual #50                 // Method reset:(Lorg/apache/logging/log4j/core/util/Source;)V
      19: return

  public void reset(org.apache.logging.log4j.core.util.Source);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: getfield      #2                  // Field watchers:Ljava/util/concurrent/ConcurrentMap;
       9: aload_1
      10: invokeinterface #52,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #34                 // class org/apache/logging/log4j/core/util/WatchManager$ConfigurationMonitor
      18: astore_2
      19: aload_2
      20: ifnull        102
      23: aload_2
      24: invokevirtual #35                 // Method org/apache/logging/log4j/core/util/WatchManager$ConfigurationMonitor.getWatcher:()Lorg/apache/logging/log4j/core/util/Watcher;
      27: astore_3
      28: aload_3
      29: invokeinterface #53,  1           // InterfaceMethod org/apache/logging/log4j/core/util/Watcher.isModified:()Z
      34: ifeq          102
      37: aload_3
      38: invokeinterface #54,  1           // InterfaceMethod org/apache/logging/log4j/core/util/Watcher.getLastModified:()J
      43: lstore        4
      45: getstatic     #3                  // Field logger:Lorg/apache/logging/log4j/Logger;
      48: invokeinterface #55,  1           // InterfaceMethod org/apache/logging/log4j/Logger.isDebugEnabled:()Z
      53: ifeq          96
      56: getstatic     #3                  // Field logger:Lorg/apache/logging/log4j/Logger;
      59: ldc           #56                 // String Resetting file monitor for \'{}\' from {} ({}) to {} ({})
      61: aload_1
      62: invokevirtual #57                 // Method org/apache/logging/log4j/core/util/Source.getLocation:()Ljava/lang/String;
      65: aload_0
      66: aload_2
      67: invokestatic  #58                 // Method org/apache/logging/log4j/core/util/WatchManager$ConfigurationMonitor.access$300:(Lorg/apache/logging/log4j/core/util/WatchManager$ConfigurationMonitor;)J
      70: invokespecial #1                  // Method millisToString:(J)Ljava/lang/String;
      73: aload_2
      74: invokestatic  #58                 // Method org/apache/logging/log4j/core/util/WatchManager$ConfigurationMonitor.access$300:(Lorg/apache/logging/log4j/core/util/WatchManager$ConfigurationMonitor;)J
      77: invokestatic  #59                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      80: aload_0
      81: lload         4
      83: invokespecial #1                  // Method millisToString:(J)Ljava/lang/String;
      86: lload         4
      88: invokestatic  #59                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      91: invokeinterface #60,  7           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      96: aload_2
      97: lload         4
      99: invokestatic  #61                 // Method org/apache/logging/log4j/core/util/WatchManager$ConfigurationMonitor.access$500:(Lorg/apache/logging/log4j/core/util/WatchManager$ConfigurationMonitor;J)V
     102: return

  public void setIntervalSeconds(int);
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method isStarted:()Z
       4: ifne          51
       7: aload_0
       8: getfield      #7                  // Field intervalSeconds:I
      11: ifle          28
      14: iload_1
      15: ifne          28
      18: aload_0
      19: getfield      #13                 // Field scheduler:Lorg/apache/logging/log4j/core/config/ConfigurationScheduler;
      22: invokevirtual #63                 // Method org/apache/logging/log4j/core/config/ConfigurationScheduler.decrementScheduledItems:()V
      25: goto          46
      28: aload_0
      29: getfield      #7                  // Field intervalSeconds:I
      32: ifne          46
      35: iload_1
      36: ifle          46
      39: aload_0
      40: getfield      #13                 // Field scheduler:Lorg/apache/logging/log4j/core/config/ConfigurationScheduler;
      43: invokevirtual #64                 // Method org/apache/logging/log4j/core/config/ConfigurationScheduler.incrementScheduledItems:()V
      46: aload_0
      47: iload_1
      48: putfield      #7                  // Field intervalSeconds:I
      51: return

  public void start();
    Code:
       0: aload_0
       1: invokespecial #65                 // Method org/apache/logging/log4j/core/AbstractLifeCycle.start:()V
       4: aload_0
       5: getfield      #7                  // Field intervalSeconds:I
       8: ifle          44
      11: aload_0
      12: aload_0
      13: getfield      #13                 // Field scheduler:Lorg/apache/logging/log4j/core/config/ConfigurationScheduler;
      16: new           #21                 // class org/apache/logging/log4j/core/util/WatchManager$WatchRunnable
      19: dup
      20: aload_0
      21: aconst_null
      22: invokespecial #22                 // Method org/apache/logging/log4j/core/util/WatchManager$WatchRunnable."<init>":(Lorg/apache/logging/log4j/core/util/WatchManager;Lorg/apache/logging/log4j/core/util/WatchManager$1;)V
      25: aload_0
      26: getfield      #7                  // Field intervalSeconds:I
      29: i2l
      30: aload_0
      31: getfield      #7                  // Field intervalSeconds:I
      34: i2l
      35: getstatic     #66                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      38: invokevirtual #67                 // Method org/apache/logging/log4j/core/config/ConfigurationScheduler.scheduleWithFixedDelay:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      41: putfield      #68                 // Field future:Ljava/util/concurrent/ScheduledFuture;
      44: aload_0
      45: getfield      #20                 // Field eventServiceList:Ljava/util/List;
      48: invokeinterface #69,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      53: astore_1
      54: aload_1
      55: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      60: ifeq          83
      63: aload_1
      64: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      69: checkcast     #14                 // class org/apache/logging/log4j/core/util/WatchEventService
      72: astore_2
      73: aload_2
      74: aload_0
      75: invokeinterface #70,  2           // InterfaceMethod org/apache/logging/log4j/core/util/WatchEventService.subscribe:(Lorg/apache/logging/log4j/core/util/WatchManager;)V
      80: goto          54
      83: return

  public boolean stop(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokevirtual #71                 // Method setStopping:()V
       4: aload_0
       5: getfield      #20                 // Field eventServiceList:Ljava/util/List;
       8: invokeinterface #69,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      13: astore        4
      15: aload         4
      17: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          48
      25: aload         4
      27: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #14                 // class org/apache/logging/log4j/core/util/WatchEventService
      35: astore        5
      37: aload         5
      39: aload_0
      40: invokeinterface #72,  2           // InterfaceMethod org/apache/logging/log4j/core/util/WatchEventService.unsubscribe:(Lorg/apache/logging/log4j/core/util/WatchManager;)V
      45: goto          15
      48: aload_0
      49: aload_0
      50: getfield      #68                 // Field future:Ljava/util/concurrent/ScheduledFuture;
      53: invokevirtual #73                 // Method stop:(Ljava/util/concurrent/Future;)Z
      56: istore        4
      58: aload_0
      59: invokevirtual #74                 // Method setStopped:()V
      62: iload         4
      64: ireturn

  public java.lang.String toString();
    Code:
       0: new           #75                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #76                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #77                 // String WatchManager [intervalSeconds=
       9: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #7                  // Field intervalSeconds:I
      16: invokevirtual #79                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      19: ldc           #80                 // String , watchers=
      21: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #2                  // Field watchers:Ljava/util/concurrent/ConcurrentMap;
      28: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #82                 // String , scheduler=
      33: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #13                 // Field scheduler:Lorg/apache/logging/log4j/core/config/ConfigurationScheduler;
      40: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: ldc           #83                 // String , future=
      45: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #68                 // Field future:Ljava/util/concurrent/ScheduledFuture;
      52: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: ldc           #84                 // String ]
      57: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #85                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: areturn

  public void unwatch(org.apache.logging.log4j.core.util.Source);
    Code:
       0: getstatic     #3                  // Field logger:Lorg/apache/logging/log4j/Logger;
       3: ldc           #86                 // String Unwatching configuration {}
       5: aload_1
       6: invokeinterface #48,  3           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      11: aload_0
      12: getfield      #2                  // Field watchers:Ljava/util/concurrent/ConcurrentMap;
      15: aload_1
      16: invokeinterface #87,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      21: pop
      22: return

  public void unwatchFile(java.io.File);
    Code:
       0: new           #38                 // class org/apache/logging/log4j/core/util/Source
       3: dup
       4: aload_1
       5: invokespecial #51                 // Method org/apache/logging/log4j/core/util/Source."<init>":(Ljava/io/File;)V
       8: astore_2
       9: aload_0
      10: aload_2
      11: invokevirtual #88                 // Method unwatch:(Lorg/apache/logging/log4j/core/util/Source;)V
      14: return

  public void watch(org.apache.logging.log4j.core.util.Source, org.apache.logging.log4j.core.util.Watcher);
    Code:
       0: aload_2
       1: aload_1
       2: invokeinterface #89,  2           // InterfaceMethod org/apache/logging/log4j/core/util/Watcher.watching:(Lorg/apache/logging/log4j/core/util/Source;)V
       7: aload_2
       8: invokeinterface #54,  1           // InterfaceMethod org/apache/logging/log4j/core/util/Watcher.getLastModified:()J
      13: lstore_3
      14: getstatic     #3                  // Field logger:Lorg/apache/logging/log4j/Logger;
      17: invokeinterface #55,  1           // InterfaceMethod org/apache/logging/log4j/Logger.isDebugEnabled:()Z
      22: ifeq          45
      25: getstatic     #3                  // Field logger:Lorg/apache/logging/log4j/Logger;
      28: ldc           #90                 // String Watching configuration \'{}\' for lastModified {} ({})
      30: aload_1
      31: aload_0
      32: lload_3
      33: invokespecial #1                  // Method millisToString:(J)Ljava/lang/String;
      36: lload_3
      37: invokestatic  #59                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      40: invokeinterface #91,  5           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      45: aload_0
      46: getfield      #2                  // Field watchers:Ljava/util/concurrent/ConcurrentMap;
      49: aload_1
      50: new           #34                 // class org/apache/logging/log4j/core/util/WatchManager$ConfigurationMonitor
      53: dup
      54: aload_0
      55: lload_3
      56: aload_2
      57: invokespecial #92                 // Method org/apache/logging/log4j/core/util/WatchManager$ConfigurationMonitor."<init>":(Lorg/apache/logging/log4j/core/util/WatchManager;JLorg/apache/logging/log4j/core/util/Watcher;)V
      60: invokeinterface #93,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      65: pop
      66: return

  public void watchFile(java.io.File, org.apache.logging.log4j.core.util.FileWatcher);
    Code:
       0: aload_2
       1: instanceof    #94                 // class org/apache/logging/log4j/core/util/Watcher
       4: ifeq          15
       7: aload_2
       8: checkcast     #94                 // class org/apache/logging/log4j/core/util/Watcher
      11: astore_3
      12: goto          24
      15: new           #41                 // class org/apache/logging/log4j/core/util/WrappedFileWatcher
      18: dup
      19: aload_2
      20: invokespecial #42                 // Method org/apache/logging/log4j/core/util/WrappedFileWatcher."<init>":(Lorg/apache/logging/log4j/core/util/FileWatcher;)V
      23: astore_3
      24: new           #38                 // class org/apache/logging/log4j/core/util/Source
      27: dup
      28: aload_1
      29: invokespecial #51                 // Method org/apache/logging/log4j/core/util/Source."<init>":(Ljava/io/File;)V
      32: astore        4
      34: aload_0
      35: aload         4
      37: aload_3
      38: invokevirtual #95                 // Method watch:(Lorg/apache/logging/log4j/core/util/Source;Lorg/apache/logging/log4j/core/util/Watcher;)V
      41: return

  static org.apache.logging.log4j.Logger access$000();
    Code:
       0: getstatic     #3                  // Field logger:Lorg/apache/logging/log4j/Logger;
       3: areturn

  static java.util.concurrent.ConcurrentMap access$100(org.apache.logging.log4j.core.util.WatchManager);
    Code:
       0: aload_0
       1: getfield      #2                  // Field watchers:Ljava/util/concurrent/ConcurrentMap;
       4: areturn

  static java.lang.String access$200(org.apache.logging.log4j.core.util.WatchManager, long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #1                  // Method millisToString:(J)Ljava/lang/String;
       5: areturn

  static {};
    Code:
       0: invokestatic  #96                 // Method org/apache/logging/log4j/status/StatusLogger.getLogger:()Lorg/apache/logging/log4j/status/StatusLogger;
       3: putstatic     #3                  // Field logger:Lorg/apache/logging/log4j/Logger;
       6: return
}
