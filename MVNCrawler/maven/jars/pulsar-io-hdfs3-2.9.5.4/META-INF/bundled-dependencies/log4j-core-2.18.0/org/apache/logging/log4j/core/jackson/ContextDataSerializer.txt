Compiled from "ContextDataSerializer.java"
public class org.apache.logging.log4j.core.jackson.ContextDataSerializer extends com.fasterxml.jackson.databind.ser.std.StdSerializer<org.apache.logging.log4j.util.ReadOnlyStringMap> {
  private static final long serialVersionUID;

  private static final org.apache.logging.log4j.util.TriConsumer<java.lang.String, java.lang.Object, com.fasterxml.jackson.core.JsonGenerator> WRITE_STRING_FIELD_INTO;

  protected org.apache.logging.log4j.core.jackson.ContextDataSerializer();
    Code:
       0: aload_0
       1: ldc           #1                  // class java/util/Map
       3: iconst_0
       4: invokespecial #2                  // Method com/fasterxml/jackson/databind/ser/std/StdSerializer."<init>":(Ljava/lang/Class;Z)V
       7: return

  public void serialize(org.apache.logging.log4j.util.ReadOnlyStringMap, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException;
    Code:
       0: aload_2
       1: invokevirtual #3                  // Method com/fasterxml/jackson/core/JsonGenerator.writeStartObject:()V
       4: aload_1
       5: getstatic     #4                  // Field WRITE_STRING_FIELD_INTO:Lorg/apache/logging/log4j/util/TriConsumer;
       8: aload_2
       9: invokeinterface #5,  3            // InterfaceMethod org/apache/logging/log4j/util/ReadOnlyStringMap.forEach:(Lorg/apache/logging/log4j/util/TriConsumer;Ljava/lang/Object;)V
      14: aload_2
      15: invokevirtual #6                  // Method com/fasterxml/jackson/core/JsonGenerator.writeEndObject:()V
      18: return

  public void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #7                  // class org/apache/logging/log4j/util/ReadOnlyStringMap
       5: aload_2
       6: aload_3
       7: invokevirtual #8                  // Method serialize:(Lorg/apache/logging/log4j/util/ReadOnlyStringMap;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
      10: return

  private static void lambda$static$0(java.lang.String, java.lang.Object, com.fasterxml.jackson.core.JsonGenerator);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: aload_2
       5: aload_0
       6: invokevirtual #9                  // Method com/fasterxml/jackson/core/JsonGenerator.writeNullField:(Ljava/lang/String;)V
       9: goto          21
      12: aload_2
      13: aload_0
      14: aload_1
      15: invokestatic  #10                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      18: invokevirtual #11                 // Method com/fasterxml/jackson/core/JsonGenerator.writeStringField:(Ljava/lang/String;Ljava/lang/String;)V
      21: goto          53
      24: astore_3
      25: new           #13                 // class java/lang/IllegalStateException
      28: dup
      29: new           #14                 // class java/lang/StringBuilder
      32: dup
      33: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #16                 // String Problem with key
      38: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_0
      42: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: aload_3
      49: invokespecial #19                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      52: athrow
      53: return
    Exception table:
       from    to  target type
           0    21    24   Class java/lang/Exception

  static {};
    Code:
       0: invokedynamic #20,  0             // InvokeDynamic #0:accept:()Lorg/apache/logging/log4j/util/TriConsumer;
       5: putstatic     #4                  // Field WRITE_STRING_FIELD_INTO:Lorg/apache/logging/log4j/util/TriConsumer;
       8: return
}
