Compiled from "ConfigurationScheduler.java"
public class org.apache.logging.log4j.core.config.ConfigurationScheduler extends org.apache.logging.log4j.core.AbstractLifeCycle {
  private static final org.apache.logging.log4j.Logger LOGGER;

  private static final java.lang.String SIMPLE_NAME;

  private static final int MAX_SCHEDULED_ITEMS;

  private volatile java.util.concurrent.ScheduledExecutorService executorService;

  private int scheduledItems;

  private final java.lang.String name;

  public org.apache.logging.log4j.core.config.ConfigurationScheduler();
    Code:
       0: aload_0
       1: getstatic     #3                  // Field SIMPLE_NAME:Ljava/lang/String;
       4: invokespecial #4                  // Method "<init>":(Ljava/lang/String;)V
       7: return

  public org.apache.logging.log4j.core.config.ConfigurationScheduler(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method org/apache/logging/log4j/core/AbstractLifeCycle."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #6                  // Field scheduledItems:I
       9: aload_0
      10: aload_1
      11: putfield      #2                  // Field name:Ljava/lang/String;
      14: return

  public void start();
    Code:
       0: aload_0
       1: invokespecial #7                  // Method org/apache/logging/log4j/core/AbstractLifeCycle.start:()V
       4: return

  public boolean stop(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method setStopping:()V
       4: aload_0
       5: invokevirtual #9                  // Method isExecutorServiceSet:()Z
       8: ifeq          102
      11: getstatic     #1                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      14: ldc           #10                 // String {} shutting down threads in {}
      16: aload_0
      17: getfield      #2                  // Field name:Ljava/lang/String;
      20: aload_0
      21: invokespecial #11                 // Method getExecutorService:()Ljava/util/concurrent/ScheduledExecutorService;
      24: invokeinterface #12,  4           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      29: aload_0
      30: getfield      #13                 // Field executorService:Ljava/util/concurrent/ScheduledExecutorService;
      33: invokeinterface #14,  1           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.shutdown:()V
      38: aload_0
      39: getfield      #13                 // Field executorService:Ljava/util/concurrent/ScheduledExecutorService;
      42: lload_1
      43: aload_3
      44: invokeinterface #15,  4           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
      49: pop
      50: goto          102
      53: astore        4
      55: aload_0
      56: getfield      #13                 // Field executorService:Ljava/util/concurrent/ScheduledExecutorService;
      59: invokeinterface #17,  1           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.shutdownNow:()Ljava/util/List;
      64: pop
      65: aload_0
      66: getfield      #13                 // Field executorService:Ljava/util/concurrent/ScheduledExecutorService;
      69: lload_1
      70: aload_3
      71: invokeinterface #15,  4           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
      76: pop
      77: goto          96
      80: astore        5
      82: getstatic     #1                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      85: ldc           #18                 // String {} stopped but some scheduled services may not have completed.
      87: aload_0
      88: getfield      #2                  // Field name:Ljava/lang/String;
      91: invokeinterface #19,  3           // InterfaceMethod org/apache/logging/log4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      96: invokestatic  #20                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      99: invokevirtual #21                 // Method java/lang/Thread.interrupt:()V
     102: aload_0
     103: invokevirtual #22                 // Method setStopped:()V
     106: iconst_1
     107: ireturn
    Exception table:
       from    to  target type
          38    50    53   Class java/lang/InterruptedException
          65    77    80   Class java/lang/InterruptedException

  public boolean isExecutorServiceSet();
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ScheduledExecutorService;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void incrementScheduledItems();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method isExecutorServiceSet:()Z
       4: ifeq          24
       7: getstatic     #1                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      10: ldc           #23                 // String {} attempted to increment scheduled items after start
      12: aload_0
      13: getfield      #2                  // Field name:Ljava/lang/String;
      16: invokeinterface #24,  3           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;)V
      21: goto          34
      24: aload_0
      25: dup
      26: getfield      #6                  // Field scheduledItems:I
      29: iconst_1
      30: iadd
      31: putfield      #6                  // Field scheduledItems:I
      34: return

  public void decrementScheduledItems();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method isStarted:()Z
       4: ifne          24
       7: aload_0
       8: getfield      #6                  // Field scheduledItems:I
      11: ifle          24
      14: aload_0
      15: dup
      16: getfield      #6                  // Field scheduledItems:I
      19: iconst_1
      20: isub
      21: putfield      #6                  // Field scheduledItems:I
      24: return

  public <V> java.util.concurrent.ScheduledFuture<V> schedule(java.util.concurrent.Callable<V>, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method getExecutorService:()Ljava/util/concurrent/ScheduledExecutorService;
       4: aload_1
       5: lload_2
       6: aload         4
       8: invokeinterface #26,  5           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.schedule:(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      13: areturn

  public java.util.concurrent.ScheduledFuture<?> schedule(java.lang.Runnable, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method getExecutorService:()Ljava/util/concurrent/ScheduledExecutorService;
       4: aload_1
       5: lload_2
       6: aload         4
       8: invokeinterface #27,  5           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      13: areturn

  public org.apache.logging.log4j.core.config.CronScheduledFuture<?> scheduleWithCron(org.apache.logging.log4j.core.util.CronExpression, java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: new           #28                 // class java/util/Date
       5: dup
       6: invokespecial #29                 // Method java/util/Date."<init>":()V
       9: aload_2
      10: invokevirtual #30                 // Method scheduleWithCron:(Lorg/apache/logging/log4j/core/util/CronExpression;Ljava/util/Date;Ljava/lang/Runnable;)Lorg/apache/logging/log4j/core/config/CronScheduledFuture;
      13: areturn

  public org.apache.logging.log4j.core.config.CronScheduledFuture<?> scheduleWithCron(org.apache.logging.log4j.core.util.CronExpression, java.util.Date, java.lang.Runnable);
    Code:
       0: aload_1
       1: aload_2
       2: ifnonnull     15
       5: new           #28                 // class java/util/Date
       8: dup
       9: invokespecial #29                 // Method java/util/Date."<init>":()V
      12: goto          16
      15: aload_2
      16: invokevirtual #31                 // Method org/apache/logging/log4j/core/util/CronExpression.getNextValidTimeAfter:(Ljava/util/Date;)Ljava/util/Date;
      19: astore        4
      21: new           #32                 // class org/apache/logging/log4j/core/config/ConfigurationScheduler$CronRunnable
      24: dup
      25: aload_0
      26: aload_3
      27: aload_1
      28: invokespecial #33                 // Method org/apache/logging/log4j/core/config/ConfigurationScheduler$CronRunnable."<init>":(Lorg/apache/logging/log4j/core/config/ConfigurationScheduler;Ljava/lang/Runnable;Lorg/apache/logging/log4j/core/util/CronExpression;)V
      31: astore        5
      33: aload_0
      34: aload         5
      36: aload_0
      37: aload         4
      39: invokevirtual #34                 // Method nextFireInterval:(Ljava/util/Date;)J
      42: getstatic     #35                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      45: invokevirtual #36                 // Method schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      48: astore        6
      50: new           #37                 // class org/apache/logging/log4j/core/config/CronScheduledFuture
      53: dup
      54: aload         6
      56: aload         4
      58: invokespecial #38                 // Method org/apache/logging/log4j/core/config/CronScheduledFuture."<init>":(Ljava/util/concurrent/ScheduledFuture;Ljava/util/Date;)V
      61: astore        7
      63: aload         5
      65: aload         7
      67: invokevirtual #39                 // Method org/apache/logging/log4j/core/config/ConfigurationScheduler$CronRunnable.setScheduledFuture:(Lorg/apache/logging/log4j/core/config/CronScheduledFuture;)V
      70: getstatic     #1                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      73: ldc           #40                 // String {} scheduled cron expression {} to fire at {}
      75: aload_0
      76: getfield      #2                  // Field name:Ljava/lang/String;
      79: aload_1
      80: invokevirtual #41                 // Method org/apache/logging/log4j/core/util/CronExpression.getCronExpression:()Ljava/lang/String;
      83: aload         4
      85: invokeinterface #42,  5           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      90: aload         7
      92: areturn

  public java.util.concurrent.ScheduledFuture<?> scheduleAtFixedRate(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method getExecutorService:()Ljava/util/concurrent/ScheduledExecutorService;
       4: aload_1
       5: lload_2
       6: lload         4
       8: aload         6
      10: invokeinterface #43,  7           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      15: areturn

  public java.util.concurrent.ScheduledFuture<?> scheduleWithFixedDelay(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method getExecutorService:()Ljava/util/concurrent/ScheduledExecutorService;
       4: aload_1
       5: lload_2
       6: lload         4
       8: aload         6
      10: invokeinterface #44,  7           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.scheduleWithFixedDelay:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      15: areturn

  public long nextFireInterval(java.util.Date);
    Code:
       0: aload_1
       1: invokevirtual #45                 // Method java/util/Date.getTime:()J
       4: new           #28                 // class java/util/Date
       7: dup
       8: invokespecial #29                 // Method java/util/Date."<init>":()V
      11: invokevirtual #45                 // Method java/util/Date.getTime:()J
      14: lsub
      15: lreturn

  private java.util.concurrent.ScheduledExecutorService getExecutorService();
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ScheduledExecutorService;
       4: ifnonnull     117
       7: aload_0
       8: dup
       9: astore_1
      10: monitorenter
      11: aload_0
      12: getfield      #13                 // Field executorService:Ljava/util/concurrent/ScheduledExecutorService;
      15: ifnonnull     107
      18: aload_0
      19: getfield      #6                  // Field scheduledItems:I
      22: ifle          93
      25: getstatic     #1                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      28: ldc           #46                 // String {} starting {} threads
      30: aload_0
      31: getfield      #2                  // Field name:Ljava/lang/String;
      34: aload_0
      35: getfield      #6                  // Field scheduledItems:I
      38: invokestatic  #47                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      41: invokeinterface #12,  4           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      46: aload_0
      47: aload_0
      48: getfield      #6                  // Field scheduledItems:I
      51: iconst_5
      52: invokestatic  #49                 // Method java/lang/Math.min:(II)I
      55: putfield      #6                  // Field scheduledItems:I
      58: new           #50                 // class java/util/concurrent/ScheduledThreadPoolExecutor
      61: dup
      62: aload_0
      63: getfield      #6                  // Field scheduledItems:I
      66: ldc           #51                 // String Scheduled
      68: invokestatic  #52                 // Method org/apache/logging/log4j/core/util/Log4jThreadFactory.createDaemonThreadFactory:(Ljava/lang/String;)Lorg/apache/logging/log4j/core/util/Log4jThreadFactory;
      71: invokespecial #53                 // Method java/util/concurrent/ScheduledThreadPoolExecutor."<init>":(ILjava/util/concurrent/ThreadFactory;)V
      74: astore_2
      75: aload_2
      76: iconst_0
      77: invokevirtual #54                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.setContinueExistingPeriodicTasksAfterShutdownPolicy:(Z)V
      80: aload_2
      81: iconst_0
      82: invokevirtual #55                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.setExecuteExistingDelayedTasksAfterShutdownPolicy:(Z)V
      85: aload_0
      86: aload_2
      87: putfield      #13                 // Field executorService:Ljava/util/concurrent/ScheduledExecutorService;
      90: goto          107
      93: getstatic     #1                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      96: ldc           #56                 // String {}: No scheduled items
      98: aload_0
      99: getfield      #2                  // Field name:Ljava/lang/String;
     102: invokeinterface #57,  3           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     107: aload_1
     108: monitorexit
     109: goto          117
     112: astore_3
     113: aload_1
     114: monitorexit
     115: aload_3
     116: athrow
     117: aload_0
     118: getfield      #13                 // Field executorService:Ljava/util/concurrent/ScheduledExecutorService;
     121: areturn
    Exception table:
       from    to  target type
          11   109   112   any
         112   115   112   any

  public java.lang.String toString();
    Code:
       0: new           #58                 // class java/lang/StringBuilder
       3: dup
       4: ldc           #59                 // String ConfigurationScheduler [name=
       6: invokespecial #60                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
       9: astore_1
      10: aload_1
      11: aload_0
      12: getfield      #2                  // Field name:Ljava/lang/String;
      15: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: pop
      19: aload_1
      20: ldc           #62                 // String , [
      22: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: pop
      26: aload_0
      27: getfield      #13                 // Field executorService:Ljava/util/concurrent/ScheduledExecutorService;
      30: ifnull        102
      33: aload_0
      34: getfield      #13                 // Field executorService:Ljava/util/concurrent/ScheduledExecutorService;
      37: checkcast     #50                 // class java/util/concurrent/ScheduledThreadPoolExecutor
      40: invokevirtual #63                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.getQueue:()Ljava/util/concurrent/BlockingQueue;
      43: astore_2
      44: iconst_1
      45: istore_3
      46: aload_2
      47: invokeinterface #64,  1           // InterfaceMethod java/util/Queue.iterator:()Ljava/util/Iterator;
      52: astore        4
      54: aload         4
      56: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      61: ifeq          102
      64: aload         4
      66: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      71: checkcast     #67                 // class java/lang/Runnable
      74: astore        5
      76: iload_3
      77: ifne          87
      80: aload_1
      81: ldc           #68                 // String ,
      83: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: pop
      87: aload_1
      88: aload         5
      90: invokevirtual #69                 // Method java/lang/Object.toString:()Ljava/lang/String;
      93: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: pop
      97: iconst_0
      98: istore_3
      99: goto          54
     102: aload_1
     103: ldc           #70                 // String ]
     105: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: pop
     109: aload_1
     110: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     113: areturn

  static java.lang.String access$000(org.apache.logging.log4j.core.config.ConfigurationScheduler);
    Code:
       0: aload_0
       1: getfield      #2                  // Field name:Ljava/lang/String;
       4: areturn

  static org.apache.logging.log4j.Logger access$100();
    Code:
       0: getstatic     #1                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       3: areturn

  static {};
    Code:
       0: invokestatic  #72                 // Method org/apache/logging/log4j/status/StatusLogger.getLogger:()Lorg/apache/logging/log4j/status/StatusLogger;
       3: putstatic     #1                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       6: new           #58                 // class java/lang/StringBuilder
       9: dup
      10: invokespecial #73                 // Method java/lang/StringBuilder."<init>":()V
      13: ldc           #74                 // String Log4j2
      15: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: ldc           #48                 // class org/apache/logging/log4j/core/config/ConfigurationScheduler
      20: invokevirtual #75                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      23: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: putstatic     #3                  // Field SIMPLE_NAME:Ljava/lang/String;
      32: return
}
