Compiled from "ColumnConfig.java"
public final class org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig {
  private static final org.apache.logging.log4j.Logger LOGGER;

  private final java.lang.String columnName;

  private final java.lang.String columnNameKey;

  private final org.apache.logging.log4j.core.layout.PatternLayout layout;

  private final java.lang.String literalValue;

  private final boolean eventTimestamp;

  private final boolean unicode;

  private final boolean clob;

  public static org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig createColumnConfig(org.apache.logging.log4j.core.config.Configuration, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #3                  // Method org/apache/logging/log4j/util/Strings.isEmpty:(Ljava/lang/CharSequence;)Z
       4: ifeq          19
       7: getstatic     #2                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      10: ldc           #4                  // String The column config is not valid because it does not contain a column name.
      12: invokeinterface #5,  2            // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;)V
      17: aconst_null
      18: areturn
      19: aload         4
      21: invokestatic  #6                  // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
      24: istore        7
      26: aload         5
      28: iconst_1
      29: invokestatic  #7                  // Method org/apache/logging/log4j/core/util/Booleans.parseBoolean:(Ljava/lang/String;Z)Z
      32: istore        8
      34: aload         6
      36: invokestatic  #6                  // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
      39: istore        9
      41: invokestatic  #8                  // Method newBuilder:()Lorg/apache/logging/log4j/core/appender/db/jdbc/ColumnConfig$Builder;
      44: aload_0
      45: invokevirtual #9                  // Method org/apache/logging/log4j/core/appender/db/jdbc/ColumnConfig$Builder.setConfiguration:(Lorg/apache/logging/log4j/core/config/Configuration;)Lorg/apache/logging/log4j/core/appender/db/jdbc/ColumnConfig$Builder;
      48: aload_1
      49: invokevirtual #10                 // Method org/apache/logging/log4j/core/appender/db/jdbc/ColumnConfig$Builder.setName:(Ljava/lang/String;)Lorg/apache/logging/log4j/core/appender/db/jdbc/ColumnConfig$Builder;
      52: aload_2
      53: invokevirtual #11                 // Method org/apache/logging/log4j/core/appender/db/jdbc/ColumnConfig$Builder.setPattern:(Ljava/lang/String;)Lorg/apache/logging/log4j/core/appender/db/jdbc/ColumnConfig$Builder;
      56: aload_3
      57: invokevirtual #12                 // Method org/apache/logging/log4j/core/appender/db/jdbc/ColumnConfig$Builder.setLiteral:(Ljava/lang/String;)Lorg/apache/logging/log4j/core/appender/db/jdbc/ColumnConfig$Builder;
      60: iload         7
      62: invokevirtual #13                 // Method org/apache/logging/log4j/core/appender/db/jdbc/ColumnConfig$Builder.setEventTimestamp:(Z)Lorg/apache/logging/log4j/core/appender/db/jdbc/ColumnConfig$Builder;
      65: iload         8
      67: invokevirtual #14                 // Method org/apache/logging/log4j/core/appender/db/jdbc/ColumnConfig$Builder.setUnicode:(Z)Lorg/apache/logging/log4j/core/appender/db/jdbc/ColumnConfig$Builder;
      70: iload         9
      72: invokevirtual #15                 // Method org/apache/logging/log4j/core/appender/db/jdbc/ColumnConfig$Builder.setClob:(Z)Lorg/apache/logging/log4j/core/appender/db/jdbc/ColumnConfig$Builder;
      75: invokevirtual #16                 // Method org/apache/logging/log4j/core/appender/db/jdbc/ColumnConfig$Builder.build:()Lorg/apache/logging/log4j/core/appender/db/jdbc/ColumnConfig;
      78: areturn

  public static org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig$Builder newBuilder();
    Code:
       0: new           #17                 // class org/apache/logging/log4j/core/appender/db/jdbc/ColumnConfig$Builder
       3: dup
       4: invokespecial #18                 // Method org/apache/logging/log4j/core/appender/db/jdbc/ColumnConfig$Builder."<init>":()V
       7: areturn

  private org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig(java.lang.String, org.apache.logging.log4j.core.layout.PatternLayout, java.lang.String, boolean, boolean, boolean);
    Code:
       0: aload_0
       1: invokespecial #19                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #20                 // Field columnName:Ljava/lang/String;
       9: aload_0
      10: aload_1
      11: invokestatic  #21                 // Method org/apache/logging/log4j/core/appender/db/ColumnMapping.toKey:(Ljava/lang/String;)Ljava/lang/String;
      14: putfield      #22                 // Field columnNameKey:Ljava/lang/String;
      17: aload_0
      18: aload_2
      19: putfield      #23                 // Field layout:Lorg/apache/logging/log4j/core/layout/PatternLayout;
      22: aload_0
      23: aload_3
      24: putfield      #24                 // Field literalValue:Ljava/lang/String;
      27: aload_0
      28: iload         4
      30: putfield      #25                 // Field eventTimestamp:Z
      33: aload_0
      34: iload         5
      36: putfield      #26                 // Field unicode:Z
      39: aload_0
      40: iload         6
      42: putfield      #27                 // Field clob:Z
      45: return

  public java.lang.String getColumnName();
    Code:
       0: aload_0
       1: getfield      #20                 // Field columnName:Ljava/lang/String;
       4: areturn

  public java.lang.String getColumnNameKey();
    Code:
       0: aload_0
       1: getfield      #22                 // Field columnNameKey:Ljava/lang/String;
       4: areturn

  public org.apache.logging.log4j.core.layout.PatternLayout getLayout();
    Code:
       0: aload_0
       1: getfield      #23                 // Field layout:Lorg/apache/logging/log4j/core/layout/PatternLayout;
       4: areturn

  public java.lang.String getLiteralValue();
    Code:
       0: aload_0
       1: getfield      #24                 // Field literalValue:Ljava/lang/String;
       4: areturn

  public boolean isClob();
    Code:
       0: aload_0
       1: getfield      #27                 // Field clob:Z
       4: ireturn

  public boolean isEventTimestamp();
    Code:
       0: aload_0
       1: getfield      #25                 // Field eventTimestamp:Z
       4: ireturn

  public boolean isUnicode();
    Code:
       0: aload_0
       1: getfield      #26                 // Field unicode:Z
       4: ireturn

  public java.lang.String toString();
    Code:
       0: new           #28                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #30                 // String { name=
       9: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #20                 // Field columnName:Ljava/lang/String;
      16: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #32                 // String , layout=
      21: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #23                 // Field layout:Lorg/apache/logging/log4j/core/layout/PatternLayout;
      28: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #34                 // String , literal=
      33: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #24                 // Field literalValue:Ljava/lang/String;
      40: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: ldc           #35                 // String , timestamp=
      45: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #25                 // Field eventTimestamp:Z
      52: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      55: ldc           #37                 // String  }
      57: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: areturn

  static org.apache.logging.log4j.Logger access$000();
    Code:
       0: getstatic     #2                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       3: areturn

  org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig(java.lang.String, org.apache.logging.log4j.core.layout.PatternLayout, java.lang.String, boolean, boolean, boolean, org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: iload         5
       8: iload         6
      10: invokespecial #1                  // Method "<init>":(Ljava/lang/String;Lorg/apache/logging/log4j/core/layout/PatternLayout;Ljava/lang/String;ZZZ)V
      13: return

  static {};
    Code:
       0: invokestatic  #39                 // Method org/apache/logging/log4j/status/StatusLogger.getLogger:()Lorg/apache/logging/log4j/status/StatusLogger;
       3: putstatic     #2                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       6: return
}
