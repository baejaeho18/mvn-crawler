Compiled from "TypeConverters.java"
public final class org.apache.logging.log4j.core.config.plugins.convert.TypeConverters {
  public static final java.lang.String CATEGORY;

  private static final org.apache.logging.log4j.Logger LOGGER;

  public org.apache.logging.log4j.core.config.plugins.convert.TypeConverters();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static <T> T convert(java.lang.String, java.lang.Class<? extends T>, java.lang.Object);
    Code:
       0: invokestatic  #2                  // Method org/apache/logging/log4j/core/config/plugins/convert/TypeConverterRegistry.getInstance:()Lorg/apache/logging/log4j/core/config/plugins/convert/TypeConverterRegistry;
       3: aload_1
       4: invokevirtual #3                  // Method org/apache/logging/log4j/core/config/plugins/convert/TypeConverterRegistry.findCompatibleConverter:(Ljava/lang/reflect/Type;)Lorg/apache/logging/log4j/core/config/plugins/convert/TypeConverter;
       7: astore_3
       8: aload_0
       9: ifnonnull     18
      12: aload_3
      13: aload_2
      14: invokestatic  #4                  // Method parseDefaultValue:(Lorg/apache/logging/log4j/core/config/plugins/convert/TypeConverter;Ljava/lang/Object;)Ljava/lang/Object;
      17: areturn
      18: aload_3
      19: aload_0
      20: invokeinterface #5,  2            // InterfaceMethod org/apache/logging/log4j/core/config/plugins/convert/TypeConverter.convert:(Ljava/lang/String;)Ljava/lang/Object;
      25: areturn
      26: astore        4
      28: getstatic     #7                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      31: ldc           #8                  // String Error while converting string [{}] to type [{}]. Using default value [{}].
      33: aload_0
      34: aload_1
      35: aload_2
      36: aload         4
      38: invokeinterface #9,  6            // InterfaceMethod org/apache/logging/log4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      43: aload_3
      44: aload_2
      45: invokestatic  #4                  // Method parseDefaultValue:(Lorg/apache/logging/log4j/core/config/plugins/convert/TypeConverter;Ljava/lang/Object;)Ljava/lang/Object;
      48: areturn
    Exception table:
       from    to  target type
          18    25    26   Class java/lang/Exception

  private static <T> T parseDefaultValue(org.apache.logging.log4j.core.config.plugins.convert.TypeConverter<T>, java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_1
       7: instanceof    #10                 // class java/lang/String
      10: ifne          15
      13: aload_1
      14: areturn
      15: aload_0
      16: aload_1
      17: checkcast     #10                 // class java/lang/String
      20: invokeinterface #5,  2            // InterfaceMethod org/apache/logging/log4j/core/config/plugins/convert/TypeConverter.convert:(Ljava/lang/String;)Ljava/lang/Object;
      25: areturn
      26: astore_2
      27: getstatic     #7                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      30: ldc           #11                 // String Can\'t parse default value [{}] for type [{}].
      32: aload_1
      33: aload_0
      34: invokevirtual #12                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      37: aload_2
      38: invokeinterface #13,  5           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      43: aconst_null
      44: areturn
    Exception table:
       from    to  target type
          15    25    26   Class java/lang/Exception

  static {};
    Code:
       0: invokestatic  #14                 // Method org/apache/logging/log4j/status/StatusLogger.getLogger:()Lorg/apache/logging/log4j/status/StatusLogger;
       3: putstatic     #7                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       6: return
}
