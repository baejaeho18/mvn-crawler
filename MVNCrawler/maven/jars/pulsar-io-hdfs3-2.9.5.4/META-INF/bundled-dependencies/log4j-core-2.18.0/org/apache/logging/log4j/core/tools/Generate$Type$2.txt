Compiled from "Generate.java"
final class org.apache.logging.log4j.core.tools.Generate$Type$2 extends org.apache.logging.log4j.core.tools.Generate$Type {
  org.apache.logging.log4j.core.tools.Generate$Type$2(java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aconst_null
       4: invokespecial #1                  // Method org/apache/logging/log4j/core/tools/Generate$Type."<init>":(Ljava/lang/String;ILorg/apache/logging/log4j/core/tools/Generate$1;)V
       7: return

  java.lang.String imports();
    Code:
       0: ldc           #2                  // String import org.apache.logging.log4j.Level;%nimport org.apache.logging.log4j.LogManager;%nimport org.apache.logging.log4j.Logger;%nimport org.apache.logging.log4j.Marker;%nimport org.apache.logging.log4j.message.Message;%nimport org.apache.logging.log4j.message.MessageFactory;%nimport org.apache.logging.log4j.spi.AbstractLogger;%nimport org.apache.logging.log4j.spi.ExtendedLoggerWrapper;%nimport org.apache.logging.log4j.util.MessageSupplier;%nimport org.apache.logging.log4j.util.Supplier;%n%n
       2: areturn

  java.lang.String declaration();
    Code:
       0: new           #3                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #5                  // String /**%n * Extended Logger interface with convenience methods for%n * %s%n * <p>Compatible with Log4j 2.6 or higher.</p>%n */%npublic final class %s extends ExtendedLoggerWrapper {%n    private static final long serialVersionUID =
       9: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: invokestatic  #7                  // Method java/lang/System.nanoTime:()J
      15: invokevirtual #8                  // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      18: ldc           #9                  // String L;%n    private final ExtendedLoggerWrapper logger;%n%n
      20: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: areturn

  java.lang.String constructor();
    Code:
       0: ldc           #11                 // String %n    private %s(final Logger logger) {%n        super((AbstractLogger) logger, logger.getName(), logger.getMessageFactory());%n        this.logger = this;%n    }%n
       2: areturn

  java.lang.Class<?> generator();
    Code:
       0: ldc           #12                 // class org/apache/logging/log4j/core/tools/Generate$ExtendedLogger
       2: areturn
}
