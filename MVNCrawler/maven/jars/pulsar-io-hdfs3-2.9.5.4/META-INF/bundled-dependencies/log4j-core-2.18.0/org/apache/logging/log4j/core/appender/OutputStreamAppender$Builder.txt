Compiled from "OutputStreamAppender.java"
public class org.apache.logging.log4j.core.appender.OutputStreamAppender$Builder<B extends org.apache.logging.log4j.core.appender.OutputStreamAppender$Builder<B>> extends org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender$Builder<B> implements org.apache.logging.log4j.core.util.Builder<org.apache.logging.log4j.core.appender.OutputStreamAppender> {
  private boolean follow;

  private final boolean ignoreExceptions;

  private java.io.OutputStream target;

  public org.apache.logging.log4j.core.appender.OutputStreamAppender$Builder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/logging/log4j/core/appender/AbstractOutputStreamAppender$Builder."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field follow:Z
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field ignoreExceptions:Z
      14: return

  public org.apache.logging.log4j.core.appender.OutputStreamAppender build();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getOrCreateLayout:()Lorg/apache/logging/log4j/core/Layout;
       4: astore_1
       5: new           #5                  // class org/apache/logging/log4j/core/appender/OutputStreamAppender
       8: dup
       9: aload_0
      10: invokevirtual #6                  // Method getName:()Ljava/lang/String;
      13: aload_1
      14: aload_0
      15: invokevirtual #7                  // Method getFilter:()Lorg/apache/logging/log4j/core/Filter;
      18: aload_0
      19: getfield      #8                  // Field target:Ljava/io/OutputStream;
      22: aload_0
      23: getfield      #2                  // Field follow:Z
      26: aload_1
      27: invokestatic  #9                  // Method org/apache/logging/log4j/core/appender/OutputStreamAppender.access$000:(Ljava/io/OutputStream;ZLorg/apache/logging/log4j/core/Layout;)Lorg/apache/logging/log4j/core/appender/OutputStreamManager;
      30: iconst_1
      31: aload_0
      32: invokevirtual #11                 // Method getPropertyArray:()[Lorg/apache/logging/log4j/core/config/Property;
      35: aconst_null
      36: invokespecial #12                 // Method org/apache/logging/log4j/core/appender/OutputStreamAppender."<init>":(Ljava/lang/String;Lorg/apache/logging/log4j/core/Layout;Lorg/apache/logging/log4j/core/Filter;Lorg/apache/logging/log4j/core/appender/OutputStreamManager;Z[Lorg/apache/logging/log4j/core/config/Property;Lorg/apache/logging/log4j/core/appender/OutputStreamAppender$1;)V
      39: areturn

  public B setFollow(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field follow:Z
       5: aload_0
       6: invokevirtual #13                 // Method asBuilder:()Lorg/apache/logging/log4j/core/filter/AbstractFilterable$Builder;
       9: checkcast     #10                 // class org/apache/logging/log4j/core/appender/OutputStreamAppender$Builder
      12: areturn

  public B setTarget(java.io.OutputStream);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field target:Ljava/io/OutputStream;
       5: aload_0
       6: invokevirtual #13                 // Method asBuilder:()Lorg/apache/logging/log4j/core/filter/AbstractFilterable$Builder;
       9: checkcast     #10                 // class org/apache/logging/log4j/core/appender/OutputStreamAppender$Builder
      12: areturn

  public java.lang.Object build();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method build:()Lorg/apache/logging/log4j/core/appender/OutputStreamAppender;
       4: areturn
}
