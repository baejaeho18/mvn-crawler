Compiled from "JwtTokenEncoder.java"
public class org.apache.kerby.kerberos.provider.token.JwtTokenEncoder implements org.apache.kerby.kerberos.kerb.provider.TokenEncoder {
  private com.nimbusds.jose.JWEAlgorithm jweAlgorithm;

  private com.nimbusds.jose.EncryptionMethod encryptionMethod;

  private com.nimbusds.jose.JWSAlgorithm jwsAlgorithm;

  private java.lang.Object encryptionKey;

  private java.lang.Object signKey;

  public org.apache.kerby.kerberos.provider.token.JwtTokenEncoder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field com/nimbusds/jose/JWEAlgorithm.RSA_OAEP:Lcom/nimbusds/jose/JWEAlgorithm;
       8: putfield      #3                  // Field jweAlgorithm:Lcom/nimbusds/jose/JWEAlgorithm;
      11: aload_0
      12: getstatic     #4                  // Field com/nimbusds/jose/EncryptionMethod.A128GCM:Lcom/nimbusds/jose/EncryptionMethod;
      15: putfield      #5                  // Field encryptionMethod:Lcom/nimbusds/jose/EncryptionMethod;
      18: aload_0
      19: getstatic     #6                  // Field com/nimbusds/jose/JWSAlgorithm.RS256:Lcom/nimbusds/jose/JWSAlgorithm;
      22: putfield      #7                  // Field jwsAlgorithm:Lcom/nimbusds/jose/JWSAlgorithm;
      25: return

  public byte[] encodeAsBytes(org.apache.kerby.kerberos.kerb.type.base.AuthToken) throws org.apache.kerby.kerberos.kerb.KrbException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #8                  // Method encodeAsString:(Lorg/apache/kerby/kerberos/kerb/type/base/AuthToken;)Ljava/lang/String;
       5: astore_2
       6: aload_2
       7: getstatic     #9                  // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      10: invokevirtual #10                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      13: areturn

  public java.lang.String encodeAsString(org.apache.kerby.kerberos.kerb.type.base.AuthToken) throws org.apache.kerby.kerberos.kerb.KrbException;
    Code:
       0: aload_1
       1: instanceof    #11                 // class org/apache/kerby/kerberos/provider/token/JwtAuthToken
       4: ifne          17
       7: new           #12                 // class org/apache/kerby/kerberos/kerb/KrbException
      10: dup
      11: ldc           #13                 // String Unexpected AuthToken, not JwtAuthToken
      13: invokespecial #14                 // Method org/apache/kerby/kerberos/kerb/KrbException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: checkcast     #11                 // class org/apache/kerby/kerberos/provider/token/JwtAuthToken
      21: astore_2
      22: aload_2
      23: invokevirtual #15                 // Method org/apache/kerby/kerberos/provider/token/JwtAuthToken.getJwt:()Lcom/nimbusds/jwt/JWT;
      26: astore_3
      27: aconst_null
      28: astore        4
      30: aload_0
      31: getfield      #16                 // Field signKey:Ljava/lang/Object;
      34: ifnull        207
      37: aload_0
      38: invokespecial #17                 // Method createSigner:()Lcom/nimbusds/jose/JWSSigner;
      41: astore        5
      43: aconst_null
      44: astore        6
      46: new           #18                 // class com/nimbusds/jwt/SignedJWT
      49: dup
      50: new           #19                 // class com/nimbusds/jose/JWSHeader
      53: dup
      54: aload_0
      55: getfield      #7                  // Field jwsAlgorithm:Lcom/nimbusds/jose/JWSAlgorithm;
      58: invokespecial #20                 // Method com/nimbusds/jose/JWSHeader."<init>":(Lcom/nimbusds/jose/JWSAlgorithm;)V
      61: aload_3
      62: invokeinterface #21,  1           // InterfaceMethod com/nimbusds/jwt/JWT.getJWTClaimsSet:()Lcom/nimbusds/jwt/ReadOnlyJWTClaimsSet;
      67: invokespecial #22                 // Method com/nimbusds/jwt/SignedJWT."<init>":(Lcom/nimbusds/jose/JWSHeader;Lcom/nimbusds/jwt/ReadOnlyJWTClaimsSet;)V
      70: astore        6
      72: goto          89
      75: astore        7
      77: new           #12                 // class org/apache/kerby/kerberos/kerb/KrbException
      80: dup
      81: ldc           #24                 // String Failed to get JWT claims set
      83: aload         7
      85: invokespecial #25                 // Method org/apache/kerby/kerberos/kerb/KrbException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      88: athrow
      89: aload         6
      91: aload         5
      93: invokevirtual #26                 // Method com/nimbusds/jwt/SignedJWT.sign:(Lcom/nimbusds/jose/JWSSigner;)V
      96: goto          113
      99: astore        7
     101: new           #12                 // class org/apache/kerby/kerberos/kerb/KrbException
     104: dup
     105: ldc           #28                 // String Failed to sign the Signed JWT
     107: aload         7
     109: invokespecial #25                 // Method org/apache/kerby/kerberos/kerb/KrbException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     112: athrow
     113: aload_0
     114: getfield      #29                 // Field encryptionKey:Ljava/lang/Object;
     117: ifnull        197
     120: new           #30                 // class com/nimbusds/jose/JWEObject
     123: dup
     124: new           #31                 // class com/nimbusds/jose/JWEHeader$Builder
     127: dup
     128: aload_0
     129: getfield      #3                  // Field jweAlgorithm:Lcom/nimbusds/jose/JWEAlgorithm;
     132: aload_0
     133: getfield      #5                  // Field encryptionMethod:Lcom/nimbusds/jose/EncryptionMethod;
     136: invokespecial #32                 // Method com/nimbusds/jose/JWEHeader$Builder."<init>":(Lcom/nimbusds/jose/JWEAlgorithm;Lcom/nimbusds/jose/EncryptionMethod;)V
     139: ldc           #33                 // String JWT
     141: invokevirtual #34                 // Method com/nimbusds/jose/JWEHeader$Builder.contentType:(Ljava/lang/String;)Lcom/nimbusds/jose/JWEHeader$Builder;
     144: invokevirtual #35                 // Method com/nimbusds/jose/JWEHeader$Builder.build:()Lcom/nimbusds/jose/JWEHeader;
     147: new           #36                 // class com/nimbusds/jose/Payload
     150: dup
     151: aload         6
     153: invokespecial #37                 // Method com/nimbusds/jose/Payload."<init>":(Lcom/nimbusds/jwt/SignedJWT;)V
     156: invokespecial #38                 // Method com/nimbusds/jose/JWEObject."<init>":(Lcom/nimbusds/jose/JWEHeader;Lcom/nimbusds/jose/Payload;)V
     159: astore        7
     161: aload         7
     163: aload_0
     164: invokespecial #39                 // Method createEncryptor:()Lcom/nimbusds/jose/JWEEncrypter;
     167: invokevirtual #40                 // Method com/nimbusds/jose/JWEObject.encrypt:(Lcom/nimbusds/jose/JWEEncrypter;)V
     170: goto          187
     173: astore        8
     175: new           #12                 // class org/apache/kerby/kerberos/kerb/KrbException
     178: dup
     179: ldc           #41                 // String Failed to encrypt the JWE object
     181: aload         8
     183: invokespecial #25                 // Method org/apache/kerby/kerberos/kerb/KrbException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     186: athrow
     187: aload         7
     189: invokevirtual #42                 // Method com/nimbusds/jose/JWEObject.serialize:()Ljava/lang/String;
     192: astore        4
     194: goto          204
     197: aload         6
     199: invokevirtual #43                 // Method com/nimbusds/jwt/SignedJWT.serialize:()Ljava/lang/String;
     202: astore        4
     204: goto          312
     207: aload_0
     208: getfield      #29                 // Field encryptionKey:Ljava/lang/Object;
     211: ifnull        304
     214: new           #44                 // class com/nimbusds/jose/JWEHeader
     217: dup
     218: aload_0
     219: getfield      #3                  // Field jweAlgorithm:Lcom/nimbusds/jose/JWEAlgorithm;
     222: aload_0
     223: getfield      #5                  // Field encryptionMethod:Lcom/nimbusds/jose/EncryptionMethod;
     226: invokespecial #45                 // Method com/nimbusds/jose/JWEHeader."<init>":(Lcom/nimbusds/jose/JWEAlgorithm;Lcom/nimbusds/jose/EncryptionMethod;)V
     229: astore        5
     231: aconst_null
     232: astore        6
     234: new           #46                 // class com/nimbusds/jwt/EncryptedJWT
     237: dup
     238: aload         5
     240: aload_3
     241: invokeinterface #21,  1           // InterfaceMethod com/nimbusds/jwt/JWT.getJWTClaimsSet:()Lcom/nimbusds/jwt/ReadOnlyJWTClaimsSet;
     246: invokespecial #47                 // Method com/nimbusds/jwt/EncryptedJWT."<init>":(Lcom/nimbusds/jose/JWEHeader;Lcom/nimbusds/jwt/ReadOnlyJWTClaimsSet;)V
     249: astore        6
     251: goto          268
     254: astore        7
     256: new           #12                 // class org/apache/kerby/kerberos/kerb/KrbException
     259: dup
     260: ldc           #24                 // String Failed to get JWT claims set
     262: aload         7
     264: invokespecial #25                 // Method org/apache/kerby/kerberos/kerb/KrbException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     267: athrow
     268: aload         6
     270: aload_0
     271: invokespecial #39                 // Method createEncryptor:()Lcom/nimbusds/jose/JWEEncrypter;
     274: invokevirtual #48                 // Method com/nimbusds/jwt/EncryptedJWT.encrypt:(Lcom/nimbusds/jose/JWEEncrypter;)V
     277: goto          294
     280: astore        7
     282: new           #12                 // class org/apache/kerby/kerberos/kerb/KrbException
     285: dup
     286: ldc           #49                 // String Failed to encrypt the encrypted JWT
     288: aload         7
     290: invokespecial #25                 // Method org/apache/kerby/kerberos/kerb/KrbException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     293: athrow
     294: aload         6
     296: invokevirtual #50                 // Method com/nimbusds/jwt/EncryptedJWT.serialize:()Ljava/lang/String;
     299: astore        4
     301: goto          312
     304: aload_3
     305: invokeinterface #51,  1           // InterfaceMethod com/nimbusds/jwt/JWT.serialize:()Ljava/lang/String;
     310: astore        4
     312: aload         4
     314: areturn
    Exception table:
       from    to  target type
          46    72    75   Class java/text/ParseException
          89    96    99   Class com/nimbusds/jose/JOSEException
         161   170   173   Class com/nimbusds/jose/JOSEException
         234   251   254   Class java/text/ParseException
         268   277   280   Class com/nimbusds/jose/JOSEException

  private com.nimbusds.jose.JWSSigner createSigner() throws org.apache.kerby.kerberos.kerb.KrbException;
    Code:
       0: getstatic     #52                 // Field com/nimbusds/jose/crypto/RSASSASigner.SUPPORTED_ALGORITHMS:Ljava/util/Set;
       3: aload_0
       4: getfield      #7                  // Field jwsAlgorithm:Lcom/nimbusds/jose/JWSAlgorithm;
       7: invokeinterface #53,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      12: ifeq          50
      15: aload_0
      16: getfield      #16                 // Field signKey:Ljava/lang/Object;
      19: instanceof    #54                 // class java/security/interfaces/RSAPrivateKey
      22: ifne          35
      25: new           #12                 // class org/apache/kerby/kerberos/kerb/KrbException
      28: dup
      29: ldc           #55                 // String An RSAPrivateKey key must be specified for signature
      31: invokespecial #14                 // Method org/apache/kerby/kerberos/kerb/KrbException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: new           #56                 // class com/nimbusds/jose/crypto/RSASSASigner
      38: dup
      39: aload_0
      40: getfield      #16                 // Field signKey:Ljava/lang/Object;
      43: checkcast     #54                 // class java/security/interfaces/RSAPrivateKey
      46: invokespecial #57                 // Method com/nimbusds/jose/crypto/RSASSASigner."<init>":(Ljava/security/interfaces/RSAPrivateKey;)V
      49: areturn
      50: getstatic     #58                 // Field com/nimbusds/jose/crypto/ECDSASigner.SUPPORTED_ALGORITHMS:Ljava/util/Set;
      53: aload_0
      54: getfield      #7                  // Field jwsAlgorithm:Lcom/nimbusds/jose/JWSAlgorithm;
      57: invokeinterface #53,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      62: ifeq          105
      65: aload_0
      66: getfield      #16                 // Field signKey:Ljava/lang/Object;
      69: instanceof    #59                 // class java/security/interfaces/ECPrivateKey
      72: ifne          85
      75: new           #12                 // class org/apache/kerby/kerberos/kerb/KrbException
      78: dup
      79: ldc           #60                 // String A ECPrivateKey key must be specified for signature
      81: invokespecial #14                 // Method org/apache/kerby/kerberos/kerb/KrbException."<init>":(Ljava/lang/String;)V
      84: athrow
      85: new           #61                 // class com/nimbusds/jose/crypto/ECDSASigner
      88: dup
      89: aload_0
      90: getfield      #16                 // Field signKey:Ljava/lang/Object;
      93: checkcast     #59                 // class java/security/interfaces/ECPrivateKey
      96: invokeinterface #62,  1           // InterfaceMethod java/security/interfaces/ECPrivateKey.getS:()Ljava/math/BigInteger;
     101: invokespecial #63                 // Method com/nimbusds/jose/crypto/ECDSASigner."<init>":(Ljava/math/BigInteger;)V
     104: areturn
     105: getstatic     #64                 // Field com/nimbusds/jose/crypto/MACSigner.SUPPORTED_ALGORITHMS:Ljava/util/Set;
     108: aload_0
     109: getfield      #7                  // Field jwsAlgorithm:Lcom/nimbusds/jose/JWSAlgorithm;
     112: invokeinterface #53,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     117: ifeq          158
     120: aload_0
     121: getfield      #16                 // Field signKey:Ljava/lang/Object;
     124: instanceof    #65                 // class "[B"
     127: ifne          140
     130: new           #12                 // class org/apache/kerby/kerberos/kerb/KrbException
     133: dup
     134: ldc           #66                 // String A byte[] key must be specified for signature
     136: invokespecial #14                 // Method org/apache/kerby/kerberos/kerb/KrbException."<init>":(Ljava/lang/String;)V
     139: athrow
     140: new           #67                 // class com/nimbusds/jose/crypto/MACSigner
     143: dup
     144: aload_0
     145: getfield      #16                 // Field signKey:Ljava/lang/Object;
     148: checkcast     #65                 // class "[B"
     151: checkcast     #65                 // class "[B"
     154: invokespecial #68                 // Method com/nimbusds/jose/crypto/MACSigner."<init>":([B)V
     157: areturn
     158: new           #12                 // class org/apache/kerby/kerberos/kerb/KrbException
     161: dup
     162: ldc           #69                 // String An unknown signature algorithm was specified
     164: invokespecial #14                 // Method org/apache/kerby/kerberos/kerb/KrbException."<init>":(Ljava/lang/String;)V
     167: athrow

  private com.nimbusds.jose.JWEEncrypter createEncryptor() throws org.apache.kerby.kerberos.kerb.KrbException, com.nimbusds.jose.JOSEException;
    Code:
       0: getstatic     #70                 // Field com/nimbusds/jose/crypto/RSAEncrypter.SUPPORTED_ALGORITHMS:Ljava/util/Set;
       3: aload_0
       4: getfield      #3                  // Field jweAlgorithm:Lcom/nimbusds/jose/JWEAlgorithm;
       7: invokeinterface #53,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      12: ifeq          50
      15: aload_0
      16: getfield      #29                 // Field encryptionKey:Ljava/lang/Object;
      19: instanceof    #71                 // class java/security/interfaces/RSAPublicKey
      22: ifne          35
      25: new           #12                 // class org/apache/kerby/kerberos/kerb/KrbException
      28: dup
      29: ldc           #72                 // String An RSAPublicKey key must be specified for encryption
      31: invokespecial #14                 // Method org/apache/kerby/kerberos/kerb/KrbException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: new           #73                 // class com/nimbusds/jose/crypto/RSAEncrypter
      38: dup
      39: aload_0
      40: getfield      #29                 // Field encryptionKey:Ljava/lang/Object;
      43: checkcast     #71                 // class java/security/interfaces/RSAPublicKey
      46: invokespecial #74                 // Method com/nimbusds/jose/crypto/RSAEncrypter."<init>":(Ljava/security/interfaces/RSAPublicKey;)V
      49: areturn
      50: getstatic     #75                 // Field com/nimbusds/jose/crypto/DirectEncrypter.SUPPORTED_ALGORITHMS:Ljava/util/Set;
      53: aload_0
      54: getfield      #3                  // Field jweAlgorithm:Lcom/nimbusds/jose/JWEAlgorithm;
      57: invokeinterface #53,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      62: ifeq          103
      65: aload_0
      66: getfield      #29                 // Field encryptionKey:Ljava/lang/Object;
      69: instanceof    #65                 // class "[B"
      72: ifne          85
      75: new           #12                 // class org/apache/kerby/kerberos/kerb/KrbException
      78: dup
      79: ldc           #76                 // String A byte[] key must be specified for encryption
      81: invokespecial #14                 // Method org/apache/kerby/kerberos/kerb/KrbException."<init>":(Ljava/lang/String;)V
      84: athrow
      85: new           #77                 // class com/nimbusds/jose/crypto/DirectEncrypter
      88: dup
      89: aload_0
      90: getfield      #29                 // Field encryptionKey:Ljava/lang/Object;
      93: checkcast     #65                 // class "[B"
      96: checkcast     #65                 // class "[B"
      99: invokespecial #78                 // Method com/nimbusds/jose/crypto/DirectEncrypter."<init>":([B)V
     102: areturn
     103: new           #12                 // class org/apache/kerby/kerberos/kerb/KrbException
     106: dup
     107: ldc           #79                 // String An unknown encryption algorithm was specified
     109: invokespecial #14                 // Method org/apache/kerby/kerberos/kerb/KrbException."<init>":(Ljava/lang/String;)V
     112: athrow

  public void setEncryptionKey(java.security.PublicKey);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #29                 // Field encryptionKey:Ljava/lang/Object;
       5: return

  public void setEncryptionKey(byte[]);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: aload_0
       5: iconst_0
       6: newarray       byte
       8: putfield      #29                 // Field encryptionKey:Ljava/lang/Object;
      11: goto          22
      14: aload_0
      15: aload_1
      16: invokevirtual #80                 // Method "[B".clone:()Ljava/lang/Object;
      19: putfield      #29                 // Field encryptionKey:Ljava/lang/Object;
      22: return

  public void setSignKey(java.security.PrivateKey);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field signKey:Ljava/lang/Object;
       5: return

  public void setSignKey(byte[]);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: aload_0
       5: iconst_0
       6: newarray       byte
       8: putfield      #16                 // Field signKey:Ljava/lang/Object;
      11: goto          22
      14: aload_0
      15: aload_1
      16: invokevirtual #81                 // Method "[B".clone:()Ljava/lang/Object;
      19: putfield      #16                 // Field signKey:Ljava/lang/Object;
      22: return

  public com.nimbusds.jose.JWEAlgorithm getJweAlgorithm();
    Code:
       0: aload_0
       1: getfield      #3                  // Field jweAlgorithm:Lcom/nimbusds/jose/JWEAlgorithm;
       4: areturn

  public void setJweAlgorithm(com.nimbusds.jose.JWEAlgorithm);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field jweAlgorithm:Lcom/nimbusds/jose/JWEAlgorithm;
       5: return

  public com.nimbusds.jose.JWSAlgorithm getJwsAlgorithm();
    Code:
       0: aload_0
       1: getfield      #7                  // Field jwsAlgorithm:Lcom/nimbusds/jose/JWSAlgorithm;
       4: areturn

  public void setJwsAlgorithm(com.nimbusds.jose.JWSAlgorithm);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field jwsAlgorithm:Lcom/nimbusds/jose/JWSAlgorithm;
       5: return

  public com.nimbusds.jose.EncryptionMethod getEncryptionMethod();
    Code:
       0: aload_0
       1: getfield      #5                  // Field encryptionMethod:Lcom/nimbusds/jose/EncryptionMethod;
       4: areturn

  public void setEncryptionMethod(com.nimbusds.jose.EncryptionMethod);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field encryptionMethod:Lcom/nimbusds/jose/EncryptionMethod;
       5: return
}
