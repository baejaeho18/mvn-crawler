Compiled from "FileAlterationMonitor.java"
public final class org.apache.commons.io.monitor.FileAlterationMonitor implements java.lang.Runnable {
  private final long interval;

  private final java.util.List<org.apache.commons.io.monitor.FileAlterationObserver> observers;

  private java.lang.Thread thread;

  private java.util.concurrent.ThreadFactory threadFactory;

  private volatile boolean running;

  public org.apache.commons.io.monitor.FileAlterationMonitor();
    Code:
       0: aload_0
       1: ldc2_w        #1                  // long 10000l
       4: invokespecial #3                  // Method "<init>":(J)V
       7: return

  public org.apache.commons.io.monitor.FileAlterationMonitor(long);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #5                  // class java/util/concurrent/CopyOnWriteArrayList
       8: dup
       9: invokespecial #6                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      12: putfield      #7                  // Field observers:Ljava/util/List;
      15: aload_0
      16: aconst_null
      17: putfield      #8                  // Field thread:Ljava/lang/Thread;
      20: aload_0
      21: iconst_0
      22: putfield      #9                  // Field running:Z
      25: aload_0
      26: lload_1
      27: putfield      #10                 // Field interval:J
      30: return

  public org.apache.commons.io.monitor.FileAlterationMonitor(long, org.apache.commons.io.monitor.FileAlterationObserver...);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #3                  // Method "<init>":(J)V
       5: aload_3
       6: ifnull        46
       9: aload_3
      10: astore        4
      12: aload         4
      14: arraylength
      15: istore        5
      17: iconst_0
      18: istore        6
      20: iload         6
      22: iload         5
      24: if_icmpge     46
      27: aload         4
      29: iload         6
      31: aaload
      32: astore        7
      34: aload_0
      35: aload         7
      37: invokevirtual #11                 // Method addObserver:(Lorg/apache/commons/io/monitor/FileAlterationObserver;)V
      40: iinc          6, 1
      43: goto          20
      46: return

  public long getInterval();
    Code:
       0: aload_0
       1: getfield      #10                 // Field interval:J
       4: lreturn

  public synchronized void setThreadFactory(java.util.concurrent.ThreadFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field threadFactory:Ljava/util/concurrent/ThreadFactory;
       5: return

  public void addObserver(org.apache.commons.io.monitor.FileAlterationObserver);
    Code:
       0: aload_1
       1: ifnull        15
       4: aload_0
       5: getfield      #7                  // Field observers:Ljava/util/List;
       8: aload_1
       9: invokeinterface #13,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      14: pop
      15: return

  public void removeObserver(org.apache.commons.io.monitor.FileAlterationObserver);
    Code:
       0: aload_1
       1: ifnull        20
       4: aload_0
       5: getfield      #7                  // Field observers:Ljava/util/List;
       8: aload_1
       9: invokeinterface #14,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      14: ifeq          20
      17: goto          4
      20: return

  public java.lang.Iterable<org.apache.commons.io.monitor.FileAlterationObserver> getObservers();
    Code:
       0: aload_0
       1: getfield      #7                  // Field observers:Ljava/util/List;
       4: areturn

  public synchronized void start() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #9                  // Field running:Z
       4: ifeq          17
       7: new           #15                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #16                 // String Monitor is already running
      13: invokespecial #17                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #7                  // Field observers:Ljava/util/List;
      21: invokeinterface #18,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      26: astore_1
      27: aload_1
      28: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          53
      36: aload_1
      37: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #21                 // class org/apache/commons/io/monitor/FileAlterationObserver
      45: astore_2
      46: aload_2
      47: invokevirtual #22                 // Method org/apache/commons/io/monitor/FileAlterationObserver.initialize:()V
      50: goto          27
      53: aload_0
      54: iconst_1
      55: putfield      #9                  // Field running:Z
      58: aload_0
      59: getfield      #12                 // Field threadFactory:Ljava/util/concurrent/ThreadFactory;
      62: ifnull        82
      65: aload_0
      66: aload_0
      67: getfield      #12                 // Field threadFactory:Ljava/util/concurrent/ThreadFactory;
      70: aload_0
      71: invokeinterface #23,  2           // InterfaceMethod java/util/concurrent/ThreadFactory.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;
      76: putfield      #8                  // Field thread:Ljava/lang/Thread;
      79: goto          94
      82: aload_0
      83: new           #24                 // class java/lang/Thread
      86: dup
      87: aload_0
      88: invokespecial #25                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
      91: putfield      #8                  // Field thread:Ljava/lang/Thread;
      94: aload_0
      95: getfield      #8                  // Field thread:Ljava/lang/Thread;
      98: invokevirtual #26                 // Method java/lang/Thread.start:()V
     101: return

  public synchronized void stop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #10                 // Field interval:J
       5: invokevirtual #27                 // Method stop:(J)V
       8: return

  public synchronized void stop(long) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #9                  // Field running:Z
       4: ifne          17
       7: new           #15                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #28                 // String Monitor is not running
      13: invokespecial #17                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: iconst_0
      19: putfield      #9                  // Field running:Z
      22: aload_0
      23: getfield      #8                  // Field thread:Ljava/lang/Thread;
      26: invokevirtual #29                 // Method java/lang/Thread.interrupt:()V
      29: aload_0
      30: getfield      #8                  // Field thread:Ljava/lang/Thread;
      33: lload_1
      34: invokevirtual #30                 // Method java/lang/Thread.join:(J)V
      37: goto          47
      40: astore_3
      41: invokestatic  #32                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      44: invokevirtual #29                 // Method java/lang/Thread.interrupt:()V
      47: aload_0
      48: getfield      #7                  // Field observers:Ljava/util/List;
      51: invokeinterface #18,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      56: astore_3
      57: aload_3
      58: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      63: ifeq          85
      66: aload_3
      67: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      72: checkcast     #21                 // class org/apache/commons/io/monitor/FileAlterationObserver
      75: astore        4
      77: aload         4
      79: invokevirtual #33                 // Method org/apache/commons/io/monitor/FileAlterationObserver.destroy:()V
      82: goto          57
      85: return
    Exception table:
       from    to  target type
          22    37    40   Class java/lang/InterruptedException

  public void run();
    Code:
       0: aload_0
       1: getfield      #9                  // Field running:Z
       4: ifeq          67
       7: aload_0
       8: getfield      #7                  // Field observers:Ljava/util/List;
      11: invokeinterface #18,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      16: astore_1
      17: aload_1
      18: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          43
      26: aload_1
      27: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #21                 // class org/apache/commons/io/monitor/FileAlterationObserver
      35: astore_2
      36: aload_2
      37: invokevirtual #34                 // Method org/apache/commons/io/monitor/FileAlterationObserver.checkAndNotify:()V
      40: goto          17
      43: aload_0
      44: getfield      #9                  // Field running:Z
      47: ifne          53
      50: goto          67
      53: aload_0
      54: getfield      #10                 // Field interval:J
      57: invokestatic  #35                 // Method java/lang/Thread.sleep:(J)V
      60: goto          0
      63: astore_1
      64: goto          0
      67: return
    Exception table:
       from    to  target type
          53    60    63   Class java/lang/InterruptedException
}
