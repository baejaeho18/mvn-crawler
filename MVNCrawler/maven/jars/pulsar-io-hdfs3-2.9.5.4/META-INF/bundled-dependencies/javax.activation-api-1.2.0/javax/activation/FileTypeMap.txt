Compiled from "FileTypeMap.java"
public abstract class javax.activation.FileTypeMap {
  private static javax.activation.FileTypeMap defaultMap;

  private static java.util.Map<java.lang.ClassLoader, javax.activation.FileTypeMap> map;

  public javax.activation.FileTypeMap();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public abstract java.lang.String getContentType(java.io.File);

  public abstract java.lang.String getContentType(java.lang.String);

  public static synchronized void setDefaultFileTypeMap(javax.activation.FileTypeMap);
    Code:
       0: invokestatic  #2                  // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
       3: astore_1
       4: aload_1
       5: ifnull        46
       8: aload_1
       9: invokevirtual #3                  // Method java/lang/SecurityManager.checkSetFactory:()V
      12: goto          46
      15: astore_2
      16: ldc           #5                  // class javax/activation/FileTypeMap
      18: invokevirtual #6                  // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      21: astore_3
      22: aload_3
      23: ifnull        44
      26: aload_3
      27: invokevirtual #7                  // Method java/lang/ClassLoader.getParent:()Ljava/lang/ClassLoader;
      30: ifnull        44
      33: aload_3
      34: aload_0
      35: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      38: invokevirtual #6                  // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      41: if_acmpeq     46
      44: aload_2
      45: athrow
      46: getstatic     #9                  // Field map:Ljava/util/Map;
      49: invokestatic  #10                 // Method javax/activation/SecuritySupport.getContextClassLoader:()Ljava/lang/ClassLoader;
      52: invokeinterface #11,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      57: pop
      58: aload_0
      59: putstatic     #12                 // Field defaultMap:Ljavax/activation/FileTypeMap;
      62: return
    Exception table:
       from    to  target type
           8    12    15   Class java/lang/SecurityException

  public static synchronized javax.activation.FileTypeMap getDefaultFileTypeMap();
    Code:
       0: getstatic     #12                 // Field defaultMap:Ljavax/activation/FileTypeMap;
       3: ifnull        10
       6: getstatic     #12                 // Field defaultMap:Ljavax/activation/FileTypeMap;
       9: areturn
      10: invokestatic  #10                 // Method javax/activation/SecuritySupport.getContextClassLoader:()Ljava/lang/ClassLoader;
      13: astore_0
      14: getstatic     #9                  // Field map:Ljava/util/Map;
      17: aload_0
      18: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #5                  // class javax/activation/FileTypeMap
      26: astore_1
      27: aload_1
      28: ifnonnull     50
      31: new           #14                 // class javax/activation/MimetypesFileTypeMap
      34: dup
      35: invokespecial #15                 // Method javax/activation/MimetypesFileTypeMap."<init>":()V
      38: astore_1
      39: getstatic     #9                  // Field map:Ljava/util/Map;
      42: aload_0
      43: aload_1
      44: invokeinterface #16,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      49: pop
      50: aload_1
      51: areturn

  static {};
    Code:
       0: aconst_null
       1: putstatic     #12                 // Field defaultMap:Ljavax/activation/FileTypeMap;
       4: new           #17                 // class java/util/WeakHashMap
       7: dup
       8: invokespecial #18                 // Method java/util/WeakHashMap."<init>":()V
      11: putstatic     #9                  // Field map:Ljava/util/Map;
      14: return
}
