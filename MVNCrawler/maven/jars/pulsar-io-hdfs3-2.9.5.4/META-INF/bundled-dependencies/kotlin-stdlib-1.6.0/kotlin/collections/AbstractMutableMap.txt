Compiled from "AbstractMutableMap.kt"
public abstract class kotlin.collections.AbstractMutableMap<K, V> extends java.util.AbstractMap<K, V> implements java.util.Map<K, V>, kotlin.jvm.internal.markers.KMutableMap {
  protected kotlin.collections.AbstractMutableMap();
    Code:
       0: aload_0
       1: invokespecial #13                 // Method java/util/AbstractMap."<init>":()V
       4: return

  public abstract V put(K, V);

  public abstract java.util.Set getEntries();

  public final java.util.Set<java.util.Map$Entry<K, V>> entrySet();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method getEntries:()Ljava/util/Set;
       4: areturn

  public java.util.Set<java.lang.Object> getKeys();
    Code:
       0: aload_0
       1: invokespecial #30                 // Method java/util/AbstractMap.keySet:()Ljava/util/Set;
       4: areturn

  public final java.util.Set<K> keySet();
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method getKeys:()Ljava/util/Set;
       4: areturn

  public int getSize();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method java/util/AbstractMap.size:()I
       4: ireturn

  public final int size();
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method getSize:()I
       4: ireturn

  public java.util.Collection<java.lang.Object> getValues();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method java/util/AbstractMap.values:()Ljava/util/Collection;
       4: areturn

  public final java.util.Collection<V> values();
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method getValues:()Ljava/util/Collection;
       4: areturn
}
