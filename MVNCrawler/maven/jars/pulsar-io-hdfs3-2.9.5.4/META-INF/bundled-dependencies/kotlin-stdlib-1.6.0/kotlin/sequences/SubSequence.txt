Compiled from "Sequences.kt"
public final class kotlin.sequences.SubSequence<T> implements kotlin.sequences.Sequence<T>, kotlin.sequences.DropTakeSequence<T> {
  private final kotlin.sequences.Sequence<T> sequence;

  private final int startIndex;

  private final int endIndex;

  public kotlin.sequences.SubSequence(kotlin.sequences.Sequence<? extends T>, int, int);
    Code:
       0: aload_1
       1: ldc           #15                 // String sequence
       3: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokespecial #24                 // Method java/lang/Object."<init>":()V
      10: aload_0
      11: aload_1
      12: putfield      #27                 // Field sequence:Lkotlin/sequences/Sequence;
      15: aload_0
      16: iload_2
      17: putfield      #31                 // Field startIndex:I
      20: aload_0
      21: iload_3
      22: putfield      #34                 // Field endIndex:I
      25: nop
      26: aload_0
      27: getfield      #31                 // Field startIndex:I
      30: iflt          37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: istore        4
      40: iload         4
      42: ifne          75
      45: iconst_0
      46: istore        5
      48: ldc           #36                 // String startIndex should be non-negative, but is
      50: aload_0
      51: getfield      #31                 // Field startIndex:I
      54: invokestatic  #42                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      57: invokestatic  #46                 // Method kotlin/jvm/internal/Intrinsics.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
      60: astore        5
      62: new           #48                 // class java/lang/IllegalArgumentException
      65: dup
      66: aload         5
      68: invokevirtual #52                 // Method java/lang/Object.toString:()Ljava/lang/String;
      71: invokespecial #55                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      74: athrow
      75: aload_0
      76: getfield      #34                 // Field endIndex:I
      79: iflt          86
      82: iconst_1
      83: goto          87
      86: iconst_0
      87: istore        4
      89: iload         4
      91: ifne          124
      94: iconst_0
      95: istore        5
      97: ldc           #57                 // String endIndex should be non-negative, but is
      99: aload_0
     100: getfield      #34                 // Field endIndex:I
     103: invokestatic  #42                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     106: invokestatic  #46                 // Method kotlin/jvm/internal/Intrinsics.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
     109: astore        5
     111: new           #48                 // class java/lang/IllegalArgumentException
     114: dup
     115: aload         5
     117: invokevirtual #52                 // Method java/lang/Object.toString:()Ljava/lang/String;
     120: invokespecial #55                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     123: athrow
     124: aload_0
     125: getfield      #34                 // Field endIndex:I
     128: aload_0
     129: getfield      #31                 // Field startIndex:I
     132: if_icmplt     139
     135: iconst_1
     136: goto          140
     139: iconst_0
     140: istore        4
     142: iload         4
     144: ifne          199
     147: iconst_0
     148: istore        5
     150: new           #59                 // class java/lang/StringBuilder
     153: dup
     154: invokespecial #60                 // Method java/lang/StringBuilder."<init>":()V
     157: ldc           #62                 // String endIndex should be not less than startIndex, but was
     159: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     162: aload_0
     163: getfield      #34                 // Field endIndex:I
     166: invokevirtual #69                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     169: ldc           #71                 // String  <
     171: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     174: aload_0
     175: getfield      #31                 // Field startIndex:I
     178: invokevirtual #69                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     181: invokevirtual #72                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     184: astore        5
     186: new           #48                 // class java/lang/IllegalArgumentException
     189: dup
     190: aload         5
     192: invokevirtual #52                 // Method java/lang/Object.toString:()Ljava/lang/String;
     195: invokespecial #55                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     198: athrow
     199: nop
     200: return

  private final int getCount();
    Code:
       0: aload_0
       1: getfield      #34                 // Field endIndex:I
       4: aload_0
       5: getfield      #31                 // Field startIndex:I
       8: isub
       9: ireturn

  public kotlin.sequences.Sequence<T> drop(int);
    Code:
       0: iload_1
       1: aload_0
       2: invokespecial #84                 // Method getCount:()I
       5: if_icmplt     14
       8: invokestatic  #90                 // Method kotlin/sequences/SequencesKt.emptySequence:()Lkotlin/sequences/Sequence;
      11: goto          38
      14: new           #2                  // class kotlin/sequences/SubSequence
      17: dup
      18: aload_0
      19: getfield      #27                 // Field sequence:Lkotlin/sequences/Sequence;
      22: aload_0
      23: getfield      #31                 // Field startIndex:I
      26: iload_1
      27: iadd
      28: aload_0
      29: getfield      #34                 // Field endIndex:I
      32: invokespecial #92                 // Method "<init>":(Lkotlin/sequences/Sequence;II)V
      35: checkcast     #7                  // class kotlin/sequences/Sequence
      38: areturn

  public kotlin.sequences.Sequence<T> take(int);
    Code:
       0: iload_1
       1: aload_0
       2: invokespecial #84                 // Method getCount:()I
       5: if_icmplt     15
       8: aload_0
       9: checkcast     #7                  // class kotlin/sequences/Sequence
      12: goto          39
      15: new           #2                  // class kotlin/sequences/SubSequence
      18: dup
      19: aload_0
      20: getfield      #27                 // Field sequence:Lkotlin/sequences/Sequence;
      23: aload_0
      24: getfield      #31                 // Field startIndex:I
      27: aload_0
      28: getfield      #31                 // Field startIndex:I
      31: iload_1
      32: iadd
      33: invokespecial #92                 // Method "<init>":(Lkotlin/sequences/Sequence;II)V
      36: checkcast     #7                  // class kotlin/sequences/Sequence
      39: areturn

  public java.util.Iterator<T> iterator();
    Code:
       0: new           #99                 // class kotlin/sequences/SubSequence$iterator$1
       3: dup
       4: aload_0
       5: invokespecial #102                // Method kotlin/sequences/SubSequence$iterator$1."<init>":(Lkotlin/sequences/SubSequence;)V
       8: checkcast     #104                // class java/util/Iterator
      11: areturn

  public static final kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.SubSequence);
    Code:
       0: aload_0
       1: getfield      #27                 // Field sequence:Lkotlin/sequences/Sequence;
       4: areturn

  public static final int access$getStartIndex$p(kotlin.sequences.SubSequence);
    Code:
       0: aload_0
       1: getfield      #31                 // Field startIndex:I
       4: ireturn

  public static final int access$getEndIndex$p(kotlin.sequences.SubSequence);
    Code:
       0: aload_0
       1: getfield      #34                 // Field endIndex:I
       4: ireturn
}
