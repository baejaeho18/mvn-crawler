Compiled from "Sequences.kt"
public final class kotlin.sequences.IndexingSequence$iterator$1 implements java.util.Iterator<kotlin.collections.IndexedValue<? extends T>>, kotlin.jvm.internal.markers.KMappedMarker {
  private final java.util.Iterator<T> iterator;

  private int index;

  final kotlin.sequences.IndexingSequence<T> this$0;

  kotlin.sequences.IndexingSequence$iterator$1(kotlin.sequences.IndexingSequence<T>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field this$0:Lkotlin/sequences/IndexingSequence;
       5: aload_0
       6: invokespecial #19                 // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_0
      11: getfield      #16                 // Field this$0:Lkotlin/sequences/IndexingSequence;
      14: invokestatic  #25                 // Method kotlin/sequences/IndexingSequence.access$getSequence$p:(Lkotlin/sequences/IndexingSequence;)Lkotlin/sequences/Sequence;
      17: invokeinterface #31,  1           // InterfaceMethod kotlin/sequences/Sequence.iterator:()Ljava/util/Iterator;
      22: putfield      #34                 // Field iterator:Ljava/util/Iterator;
      25: return

  public final java.util.Iterator<T> getIterator();
    Code:
       0: aload_0
       1: getfield      #34                 // Field iterator:Ljava/util/Iterator;
       4: areturn

  public final int getIndex();
    Code:
       0: aload_0
       1: getfield      #46                 // Field index:I
       4: ireturn

  public final void setIndex(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #46                 // Field index:I
       5: return

  public kotlin.collections.IndexedValue<T> next();
    Code:
       0: new           #54                 // class kotlin/collections/IndexedValue
       3: dup
       4: aload_0
       5: astore_1
       6: aload_1
       7: getfield      #46                 // Field index:I
      10: istore_2
      11: aload_1
      12: iload_2
      13: iconst_1
      14: iadd
      15: putfield      #46                 // Field index:I
      18: iload_2
      19: istore_1
      20: iload_1
      21: ifge          27
      24: invokestatic  #59                 // Method kotlin/collections/CollectionsKt.throwIndexOverflow:()V
      27: iload_1
      28: aload_0
      29: getfield      #34                 // Field iterator:Ljava/util/Iterator;
      32: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: invokespecial #65                 // Method kotlin/collections/IndexedValue."<init>":(ILjava/lang/Object;)V
      40: areturn

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #34                 // Field iterator:Ljava/util/Iterator;
       4: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
       9: ireturn

  public void remove();
    Code:
       0: new           #72                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #74                 // String Operation is not supported for read-only collection
       6: invokespecial #77                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.lang.Object next();
    Code:
       0: aload_0
       1: invokevirtual #79                 // Method next:()Lkotlin/collections/IndexedValue;
       4: areturn
}
