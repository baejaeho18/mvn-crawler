Compiled from "ChecksumFileSystem.java"
public abstract class org.apache.hadoop.fs.ChecksumFileSystem extends org.apache.hadoop.fs.FilterFileSystem {
  private static final byte[] CHECKSUM_VERSION;

  private int bytesPerChecksum;

  private boolean verifyChecksum;

  private boolean writeChecksum;

  private static final org.apache.hadoop.fs.PathFilter DEFAULT_FILTER;

  public static double getApproxChkSumLength(long);
    Code:
       0: ldc           #5                  // float 0.01f
       2: lload_0
       3: l2f
       4: fmul
       5: f2d
       6: dreturn

  public org.apache.hadoop.fs.ChecksumFileSystem(org.apache.hadoop.fs.FileSystem);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method org/apache/hadoop/fs/FilterFileSystem."<init>":(Lorg/apache/hadoop/fs/FileSystem;)V
       5: aload_0
       6: sipush        512
       9: putfield      #7                  // Field bytesPerChecksum:I
      12: aload_0
      13: iconst_1
      14: putfield      #2                  // Field verifyChecksum:Z
      17: aload_0
      18: iconst_1
      19: putfield      #8                  // Field writeChecksum:Z
      22: return

  public void setConf(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method org/apache/hadoop/fs/FilterFileSystem.setConf:(Lorg/apache/hadoop/conf/Configuration;)V
       5: aload_1
       6: ifnull        43
       9: aload_0
      10: aload_1
      11: ldc           #11                 // String file.bytes-per-checksum
      13: sipush        512
      16: invokevirtual #12                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      19: putfield      #7                  // Field bytesPerChecksum:I
      22: aload_0
      23: getfield      #7                  // Field bytesPerChecksum:I
      26: ifle          33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: ldc           #13                 // String bytes per checksum should be positive but was %s
      36: aload_0
      37: getfield      #7                  // Field bytesPerChecksum:I
      40: invokestatic  #14                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/String;I)V
      43: return

  public void setVerifyChecksum(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field verifyChecksum:Z
       5: return

  public void setWriteChecksum(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field writeChecksum:Z
       5: return

  public org.apache.hadoop.fs.FileSystem getRawFileSystem();
    Code:
       0: aload_0
       1: getfield      #15                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: areturn

  public org.apache.hadoop.fs.Path getChecksumFile(org.apache.hadoop.fs.Path);
    Code:
       0: new           #16                 // class org/apache/hadoop/fs/Path
       3: dup
       4: aload_1
       5: invokevirtual #17                 // Method org/apache/hadoop/fs/Path.getParent:()Lorg/apache/hadoop/fs/Path;
       8: new           #18                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #20                 // String .
      17: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: aload_1
      21: invokevirtual #22                 // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
      24: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: ldc           #23                 // String .crc
      29: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokespecial #25                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      38: areturn

  public static boolean isChecksumFile(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ldc           #20                 // String .
       8: invokevirtual #26                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      11: ifeq          27
      14: aload_1
      15: ldc           #23                 // String .crc
      17: invokevirtual #27                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      20: ifeq          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  public long getChecksumFileLength(org.apache.hadoop.fs.Path, long);
    Code:
       0: lload_2
       1: aload_0
       2: invokevirtual #28                 // Method getBytesPerSum:()I
       5: invokestatic  #29                 // Method getChecksumLength:(JI)J
       8: lreturn

  public int getBytesPerSum();
    Code:
       0: aload_0
       1: getfield      #7                  // Field bytesPerChecksum:I
       4: ireturn

  private int getSumBufferSize(int, int);
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
       4: ldc           #31                 // String file.stream-buffer-size
       6: sipush        4096
       9: invokevirtual #12                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      12: istore_3
      13: iload_2
      14: iload_1
      15: idiv
      16: istore        4
      18: iload_1
      19: iload         4
      21: iload_3
      22: invokestatic  #32                 // Method java/lang/Math.max:(II)I
      25: invokestatic  #32                 // Method java/lang/Math.max:(II)I
      28: ireturn

  public org.apache.hadoop.fs.FSDataInputStream open(org.apache.hadoop.fs.Path, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field verifyChecksum:Z
       4: ifeq          24
       7: aload_0
       8: astore_3
       9: new           #33                 // class org/apache/hadoop/fs/ChecksumFileSystem$ChecksumFSInputChecker
      12: dup
      13: aload_0
      14: aload_1
      15: iload_2
      16: invokespecial #34                 // Method org/apache/hadoop/fs/ChecksumFileSystem$ChecksumFSInputChecker."<init>":(Lorg/apache/hadoop/fs/ChecksumFileSystem;Lorg/apache/hadoop/fs/Path;I)V
      19: astore        4
      21: goto          37
      24: aload_0
      25: invokevirtual #35                 // Method getRawFileSystem:()Lorg/apache/hadoop/fs/FileSystem;
      28: astore_3
      29: aload_3
      30: aload_1
      31: iload_2
      32: invokevirtual #36                 // Method org/apache/hadoop/fs/FileSystem.open:(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;
      35: astore        4
      37: new           #37                 // class org/apache/hadoop/fs/ChecksumFileSystem$FSDataBoundedInputStream
      40: dup
      41: aload_3
      42: aload_1
      43: aload         4
      45: invokespecial #38                 // Method org/apache/hadoop/fs/ChecksumFileSystem$FSDataBoundedInputStream."<init>":(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/io/InputStream;)V
      48: areturn

  public org.apache.hadoop.fs.FSDataOutputStream append(org.apache.hadoop.fs.Path, int, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: new           #39                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #40                 // String Append is not supported by ChecksumFileSystem
       6: invokespecial #41                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public boolean truncate(org.apache.hadoop.fs.Path, long) throws java.io.IOException;
    Code:
       0: new           #39                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #42                 // String Truncate is not supported by ChecksumFileSystem
       6: invokespecial #41                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public static long getChecksumLength(long, int);
    Code:
       0: lload_0
       1: iload_2
       2: i2l
       3: ladd
       4: lconst_1
       5: lsub
       6: iload_2
       7: i2l
       8: ldiv
       9: ldc2_w        #43                 // long 4l
      12: lmul
      13: getstatic     #3                  // Field CHECKSUM_VERSION:[B
      16: arraylength
      17: i2l
      18: ladd
      19: ldc2_w        #43                 // long 4l
      22: ladd
      23: lreturn

  public org.apache.hadoop.fs.FSDataOutputStream create(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission, boolean, int, short, long, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iconst_1
       5: iload         4
       7: iload         5
       9: lload         6
      11: aload         8
      13: invokespecial #45                 // Method create:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
      16: areturn

  private org.apache.hadoop.fs.FSDataOutputStream create(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission, boolean, boolean, int, short, long, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #17                 // Method org/apache/hadoop/fs/Path.getParent:()Lorg/apache/hadoop/fs/Path;
       4: astore        10
       6: aload         10
       8: ifnull        121
      11: iload         4
      13: ifne          53
      16: aload_0
      17: aload         10
      19: invokevirtual #46                 // Method exists:(Lorg/apache/hadoop/fs/Path;)Z
      22: ifne          53
      25: new           #47                 // class java/io/FileNotFoundException
      28: dup
      29: new           #18                 // class java/lang/StringBuilder
      32: dup
      33: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #48                 // String Parent directory doesn\'t exist:
      38: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload         10
      43: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      46: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokespecial #50                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
      52: athrow
      53: aload_0
      54: aload         10
      56: invokevirtual #51                 // Method mkdirs:(Lorg/apache/hadoop/fs/Path;)Z
      59: ifne          121
      62: new           #52                 // class java/io/IOException
      65: dup
      66: new           #18                 // class java/lang/StringBuilder
      69: dup
      70: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      73: ldc           #53                 // String Mkdirs failed to create
      75: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: aload         10
      80: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      83: ldc           #54                 // String  (exists=
      85: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: aload_0
      89: aload         10
      91: invokevirtual #46                 // Method exists:(Lorg/apache/hadoop/fs/Path;)Z
      94: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      97: ldc           #56                 // String , cwd=
      99: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: aload_0
     103: invokevirtual #57                 // Method getWorkingDirectory:()Lorg/apache/hadoop/fs/Path;
     106: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     109: ldc           #58                 // String )
     111: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     117: invokespecial #59                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     120: athrow
     121: aload_0
     122: getfield      #8                  // Field writeChecksum:Z
     125: ifeq          160
     128: new           #60                 // class org/apache/hadoop/fs/FSDataOutputStream
     131: dup
     132: new           #1                  // class org/apache/hadoop/fs/ChecksumFileSystem$ChecksumFSOutputSummer
     135: dup
     136: aload_0
     137: aload_1
     138: iload_3
     139: iload         5
     141: iload         6
     143: lload         7
     145: aload         9
     147: aload_2
     148: invokespecial #61                 // Method org/apache/hadoop/fs/ChecksumFileSystem$ChecksumFSOutputSummer."<init>":(Lorg/apache/hadoop/fs/ChecksumFileSystem;Lorg/apache/hadoop/fs/Path;ZISJLorg/apache/hadoop/util/Progressable;Lorg/apache/hadoop/fs/permission/FsPermission;)V
     151: aconst_null
     152: invokespecial #62                 // Method org/apache/hadoop/fs/FSDataOutputStream."<init>":(Ljava/io/OutputStream;Lorg/apache/hadoop/fs/FileSystem$Statistics;)V
     155: astore        11
     157: goto          210
     160: aload_0
     161: getfield      #15                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     164: aload_1
     165: aload_2
     166: iload_3
     167: iload         5
     169: iload         6
     171: lload         7
     173: aload         9
     175: invokevirtual #63                 // Method org/apache/hadoop/fs/FileSystem.create:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
     178: astore        11
     180: aload_0
     181: aload_1
     182: invokevirtual #64                 // Method getChecksumFile:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
     185: astore        12
     187: aload_0
     188: getfield      #15                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     191: aload         12
     193: invokevirtual #65                 // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
     196: ifeq          210
     199: aload_0
     200: getfield      #15                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     203: aload         12
     205: iconst_1
     206: invokevirtual #66                 // Method org/apache/hadoop/fs/FileSystem.delete:(Lorg/apache/hadoop/fs/Path;Z)Z
     209: pop
     210: aload         11
     212: areturn

  public org.apache.hadoop.fs.FSDataOutputStream createNonRecursive(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission, boolean, int, short, long, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iconst_0
       5: iload         4
       7: iload         5
       9: lload         6
      11: aload         8
      13: invokespecial #45                 // Method create:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
      16: areturn

  public void setPermission(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission) throws java.io.IOException;
    Code:
       0: new           #67                 // class org/apache/hadoop/fs/ChecksumFileSystem$1
       3: dup
       4: aload_0
       5: aload_2
       6: invokespecial #68                 // Method org/apache/hadoop/fs/ChecksumFileSystem$1."<init>":(Lorg/apache/hadoop/fs/ChecksumFileSystem;Lorg/apache/hadoop/fs/permission/FsPermission;)V
       9: aload_1
      10: invokevirtual #69                 // Method org/apache/hadoop/fs/ChecksumFileSystem$1.run:(Lorg/apache/hadoop/fs/Path;)Z
      13: pop
      14: return

  public void setOwner(org.apache.hadoop.fs.Path, java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: new           #70                 // class org/apache/hadoop/fs/ChecksumFileSystem$2
       3: dup
       4: aload_0
       5: aload_2
       6: aload_3
       7: invokespecial #71                 // Method org/apache/hadoop/fs/ChecksumFileSystem$2."<init>":(Lorg/apache/hadoop/fs/ChecksumFileSystem;Ljava/lang/String;Ljava/lang/String;)V
      10: aload_1
      11: invokevirtual #72                 // Method org/apache/hadoop/fs/ChecksumFileSystem$2.run:(Lorg/apache/hadoop/fs/Path;)Z
      14: pop
      15: return

  public void setAcl(org.apache.hadoop.fs.Path, java.util.List<org.apache.hadoop.fs.permission.AclEntry>) throws java.io.IOException;
    Code:
       0: new           #73                 // class org/apache/hadoop/fs/ChecksumFileSystem$3
       3: dup
       4: aload_0
       5: aload_2
       6: invokespecial #74                 // Method org/apache/hadoop/fs/ChecksumFileSystem$3."<init>":(Lorg/apache/hadoop/fs/ChecksumFileSystem;Ljava/util/List;)V
       9: aload_1
      10: invokevirtual #75                 // Method org/apache/hadoop/fs/ChecksumFileSystem$3.run:(Lorg/apache/hadoop/fs/Path;)Z
      13: pop
      14: return

  public void modifyAclEntries(org.apache.hadoop.fs.Path, java.util.List<org.apache.hadoop.fs.permission.AclEntry>) throws java.io.IOException;
    Code:
       0: new           #76                 // class org/apache/hadoop/fs/ChecksumFileSystem$4
       3: dup
       4: aload_0
       5: aload_2
       6: invokespecial #77                 // Method org/apache/hadoop/fs/ChecksumFileSystem$4."<init>":(Lorg/apache/hadoop/fs/ChecksumFileSystem;Ljava/util/List;)V
       9: aload_1
      10: invokevirtual #78                 // Method org/apache/hadoop/fs/ChecksumFileSystem$4.run:(Lorg/apache/hadoop/fs/Path;)Z
      13: pop
      14: return

  public void removeAcl(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #79                 // class org/apache/hadoop/fs/ChecksumFileSystem$5
       3: dup
       4: aload_0
       5: invokespecial #80                 // Method org/apache/hadoop/fs/ChecksumFileSystem$5."<init>":(Lorg/apache/hadoop/fs/ChecksumFileSystem;)V
       8: aload_1
       9: invokevirtual #81                 // Method org/apache/hadoop/fs/ChecksumFileSystem$5.run:(Lorg/apache/hadoop/fs/Path;)Z
      12: pop
      13: return

  public void removeAclEntries(org.apache.hadoop.fs.Path, java.util.List<org.apache.hadoop.fs.permission.AclEntry>) throws java.io.IOException;
    Code:
       0: new           #82                 // class org/apache/hadoop/fs/ChecksumFileSystem$6
       3: dup
       4: aload_0
       5: aload_2
       6: invokespecial #83                 // Method org/apache/hadoop/fs/ChecksumFileSystem$6."<init>":(Lorg/apache/hadoop/fs/ChecksumFileSystem;Ljava/util/List;)V
       9: aload_1
      10: invokevirtual #84                 // Method org/apache/hadoop/fs/ChecksumFileSystem$6.run:(Lorg/apache/hadoop/fs/Path;)Z
      13: pop
      14: return

  public void removeDefaultAcl(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #85                 // class org/apache/hadoop/fs/ChecksumFileSystem$7
       3: dup
       4: aload_0
       5: invokespecial #86                 // Method org/apache/hadoop/fs/ChecksumFileSystem$7."<init>":(Lorg/apache/hadoop/fs/ChecksumFileSystem;)V
       8: aload_1
       9: invokevirtual #87                 // Method org/apache/hadoop/fs/ChecksumFileSystem$7.run:(Lorg/apache/hadoop/fs/Path;)Z
      12: pop
      13: return

  public boolean setReplication(org.apache.hadoop.fs.Path, short) throws java.io.IOException;
    Code:
       0: new           #88                 // class org/apache/hadoop/fs/ChecksumFileSystem$8
       3: dup
       4: aload_0
       5: iload_2
       6: invokespecial #89                 // Method org/apache/hadoop/fs/ChecksumFileSystem$8."<init>":(Lorg/apache/hadoop/fs/ChecksumFileSystem;S)V
       9: aload_1
      10: invokevirtual #90                 // Method org/apache/hadoop/fs/ChecksumFileSystem$8.run:(Lorg/apache/hadoop/fs/Path;)Z
      13: ireturn

  public boolean rename(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #15                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: aload_1
       5: invokevirtual #91                 // Method org/apache/hadoop/fs/FileSystem.isDirectory:(Lorg/apache/hadoop/fs/Path;)Z
       8: ifeq          21
      11: aload_0
      12: getfield      #15                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      15: aload_1
      16: aload_2
      17: invokevirtual #92                 // Method org/apache/hadoop/fs/FileSystem.rename:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
      20: ireturn
      21: aload_0
      22: getfield      #15                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      25: aload_2
      26: invokevirtual #91                 // Method org/apache/hadoop/fs/FileSystem.isDirectory:(Lorg/apache/hadoop/fs/Path;)Z
      29: ifeq          45
      32: new           #16                 // class org/apache/hadoop/fs/Path
      35: dup
      36: aload_2
      37: aload_1
      38: invokevirtual #22                 // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
      41: invokespecial #25                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      44: astore_2
      45: aload_0
      46: getfield      #15                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      49: aload_1
      50: aload_2
      51: invokevirtual #92                 // Method org/apache/hadoop/fs/FileSystem.rename:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
      54: istore_3
      55: iload_3
      56: ifne          61
      59: iconst_0
      60: ireturn
      61: aload_0
      62: aload_1
      63: invokevirtual #64                 // Method getChecksumFile:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      66: astore        4
      68: aload_0
      69: aload_2
      70: invokevirtual #64                 // Method getChecksumFile:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      73: astore        5
      75: aload_0
      76: getfield      #15                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      79: aload         4
      81: invokevirtual #65                 // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
      84: ifeq          102
      87: aload_0
      88: getfield      #15                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      91: aload         4
      93: aload         5
      95: invokevirtual #92                 // Method org/apache/hadoop/fs/FileSystem.rename:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
      98: istore_3
      99: goto          125
     102: aload_0
     103: getfield      #15                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     106: aload         5
     108: invokevirtual #65                 // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
     111: ifeq          125
     114: aload_0
     115: getfield      #15                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     118: aload         5
     120: iconst_1
     121: invokevirtual #66                 // Method org/apache/hadoop/fs/FileSystem.delete:(Lorg/apache/hadoop/fs/Path;Z)Z
     124: istore_3
     125: iload_3
     126: ireturn

  public boolean delete(org.apache.hadoop.fs.Path, boolean) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_3
       2: aload_0
       3: getfield      #15                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       6: aload_1
       7: invokevirtual #93                 // Method org/apache/hadoop/fs/FileSystem.getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      10: astore_3
      11: goto          18
      14: astore        4
      16: iconst_0
      17: ireturn
      18: aload_3
      19: invokevirtual #94                 // Method org/apache/hadoop/fs/FileStatus.isDirectory:()Z
      22: ifeq          35
      25: aload_0
      26: getfield      #15                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      29: aload_1
      30: iload_2
      31: invokevirtual #66                 // Method org/apache/hadoop/fs/FileSystem.delete:(Lorg/apache/hadoop/fs/Path;Z)Z
      34: ireturn
      35: aload_0
      36: aload_1
      37: invokevirtual #64                 // Method getChecksumFile:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      40: astore        4
      42: aload_0
      43: getfield      #15                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      46: aload         4
      48: invokevirtual #65                 // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
      51: ifeq          65
      54: aload_0
      55: getfield      #15                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      58: aload         4
      60: iconst_1
      61: invokevirtual #66                 // Method org/apache/hadoop/fs/FileSystem.delete:(Lorg/apache/hadoop/fs/Path;Z)Z
      64: pop
      65: aload_0
      66: getfield      #15                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      69: aload_1
      70: iconst_1
      71: invokevirtual #66                 // Method org/apache/hadoop/fs/FileSystem.delete:(Lorg/apache/hadoop/fs/Path;Z)Z
      74: ireturn
    Exception table:
       from    to  target type
           2    11    14   Class java/io/FileNotFoundException

  public org.apache.hadoop.fs.FileStatus[] listStatus(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #15                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: aload_1
       5: getstatic     #95                 // Field DEFAULT_FILTER:Lorg/apache/hadoop/fs/PathFilter;
       8: invokevirtual #96                 // Method org/apache/hadoop/fs/FileSystem.listStatus:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/PathFilter;)[Lorg/apache/hadoop/fs/FileStatus;
      11: areturn

  public org.apache.hadoop.fs.RemoteIterator<org.apache.hadoop.fs.FileStatus> listStatusIterator(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #97                 // class org/apache/hadoop/fs/FileSystem$DirListingIterator
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #98                 // Method org/apache/hadoop/fs/FileSystem$DirListingIterator."<init>":(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)V
       9: areturn

  public org.apache.hadoop.fs.RemoteIterator<org.apache.hadoop.fs.LocatedFileStatus> listLocatedStatus(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #15                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: aload_1
       5: getstatic     #95                 // Field DEFAULT_FILTER:Lorg/apache/hadoop/fs/PathFilter;
       8: invokevirtual #99                 // Method org/apache/hadoop/fs/FileSystem.listLocatedStatus:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/PathFilter;)Lorg/apache/hadoop/fs/RemoteIterator;
      11: areturn

  public boolean mkdirs(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #15                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: aload_1
       5: invokevirtual #100                // Method org/apache/hadoop/fs/FileSystem.mkdirs:(Lorg/apache/hadoop/fs/Path;)Z
       8: ireturn

  public void copyFromLocalFile(boolean, org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
       4: astore        4
       6: aload         4
       8: invokestatic  #101                // Method getLocal:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/LocalFileSystem;
      11: aload_2
      12: aload_0
      13: aload_3
      14: iload_1
      15: aload         4
      17: invokestatic  #102                // Method org/apache/hadoop/fs/FileUtil.copy:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZLorg/apache/hadoop/conf/Configuration;)Z
      20: pop
      21: return

  public void copyToLocalFile(boolean, org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
       4: astore        4
       6: aload_0
       7: aload_2
       8: aload         4
      10: invokestatic  #101                // Method getLocal:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/LocalFileSystem;
      13: aload_3
      14: iload_1
      15: aload         4
      17: invokestatic  #102                // Method org/apache/hadoop/fs/FileUtil.copy:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZLorg/apache/hadoop/conf/Configuration;)Z
      20: pop
      21: return

  public void copyToLocalFile(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #15                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: aload_1
       5: invokevirtual #91                 // Method org/apache/hadoop/fs/FileSystem.isDirectory:(Lorg/apache/hadoop/fs/Path;)Z
       8: ifne          113
      11: aload_0
      12: getfield      #15                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      15: aload_1
      16: aload_2
      17: invokevirtual #103                // Method org/apache/hadoop/fs/FileSystem.copyToLocalFile:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
      20: aload_0
      21: invokevirtual #30                 // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
      24: invokestatic  #101                // Method getLocal:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/LocalFileSystem;
      27: invokevirtual #104                // Method org/apache/hadoop/fs/LocalFileSystem.getRawFileSystem:()Lorg/apache/hadoop/fs/FileSystem;
      30: astore        4
      32: aload         4
      34: aload_2
      35: invokevirtual #91                 // Method org/apache/hadoop/fs/FileSystem.isDirectory:(Lorg/apache/hadoop/fs/Path;)Z
      38: ifeq          54
      41: new           #16                 // class org/apache/hadoop/fs/Path
      44: dup
      45: aload_2
      46: aload_1
      47: invokevirtual #22                 // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
      50: invokespecial #25                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      53: astore_2
      54: aload_0
      55: aload_2
      56: invokevirtual #64                 // Method getChecksumFile:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      59: astore_2
      60: aload         4
      62: aload_2
      63: invokevirtual #65                 // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
      66: ifeq          77
      69: aload         4
      71: aload_2
      72: iconst_1
      73: invokevirtual #66                 // Method org/apache/hadoop/fs/FileSystem.delete:(Lorg/apache/hadoop/fs/Path;Z)Z
      76: pop
      77: aload_0
      78: aload_1
      79: invokevirtual #64                 // Method getChecksumFile:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      82: astore        5
      84: iload_3
      85: ifeq          110
      88: aload_0
      89: getfield      #15                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      92: aload         5
      94: invokevirtual #65                 // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
      97: ifeq          110
     100: aload_0
     101: getfield      #15                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     104: aload         5
     106: aload_2
     107: invokevirtual #103                // Method org/apache/hadoop/fs/FileSystem.copyToLocalFile:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
     110: goto          178
     113: aload_0
     114: aload_1
     115: invokevirtual #105                // Method listStatus:(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
     118: astore        4
     120: aload         4
     122: astore        5
     124: aload         5
     126: arraylength
     127: istore        6
     129: iconst_0
     130: istore        7
     132: iload         7
     134: iload         6
     136: if_icmpge     178
     139: aload         5
     141: iload         7
     143: aaload
     144: astore        8
     146: aload_0
     147: aload         8
     149: invokevirtual #106                // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
     152: new           #16                 // class org/apache/hadoop/fs/Path
     155: dup
     156: aload_2
     157: aload         8
     159: invokevirtual #106                // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
     162: invokevirtual #22                 // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
     165: invokespecial #25                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
     168: iload_3
     169: invokevirtual #107                // Method copyToLocalFile:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Z)V
     172: iinc          7, 1
     175: goto          132
     178: return

  public org.apache.hadoop.fs.Path startLocalOutput(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_2
       1: areturn

  public void completeLocalOutput(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokevirtual #108                // Method moveFromLocalFile:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
       6: return

  public boolean reportChecksumFailure(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.FSDataInputStream, long, org.apache.hadoop.fs.FSDataInputStream, long);
    Code:
       0: iconst_0
       1: ireturn

  public boolean hasPathCapability(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #109                // Method makeQualified:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: astore_3
       6: aload_3
       7: aload_2
       8: invokestatic  #110                // Method org/apache/hadoop/fs/impl/PathCapabilitiesSupport.validatePathCapabilityArgs:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Ljava/lang/String;
      11: astore        4
      13: iconst_m1
      14: istore        5
      16: aload         4
      18: invokevirtual #111                // Method java/lang/String.hashCode:()I
      21: lookupswitch  { // 2
             551582479: 48
             607855369: 64
               default: 77
          }
      48: aload         4
      50: ldc           #112                // String fs.capability.paths.append
      52: invokevirtual #113                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      55: ifeq          77
      58: iconst_0
      59: istore        5
      61: goto          77
      64: aload         4
      66: ldc           #114                // String fs.capability.paths.concat
      68: invokevirtual #113                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      71: ifeq          77
      74: iconst_1
      75: istore        5
      77: iload         5
      79: lookupswitch  { // 2
                     0: 104
                     1: 104
               default: 106
          }
     104: iconst_0
     105: ireturn
     106: aload_0
     107: aload_3
     108: aload_2
     109: invokespecial #115                // Method org/apache/hadoop/fs/FilterFileSystem.hasPathCapability:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Z
     112: ireturn

  static int access$000(org.apache.hadoop.fs.ChecksumFileSystem, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokespecial #4                  // Method getSumBufferSize:(II)I
       6: ireturn

  static byte[] access$100();
    Code:
       0: getstatic     #3                  // Field CHECKSUM_VERSION:[B
       3: areturn

  static boolean access$200(org.apache.hadoop.fs.ChecksumFileSystem);
    Code:
       0: aload_0
       1: getfield      #2                  // Field verifyChecksum:Z
       4: ireturn

  static {};
    Code:
       0: iconst_4
       1: newarray       byte
       3: dup
       4: iconst_0
       5: bipush        99
       7: bastore
       8: dup
       9: iconst_1
      10: bipush        114
      12: bastore
      13: dup
      14: iconst_2
      15: bipush        99
      17: bastore
      18: dup
      19: iconst_3
      20: iconst_0
      21: bastore
      22: putstatic     #3                  // Field CHECKSUM_VERSION:[B
      25: new           #116                // class org/apache/hadoop/fs/ChecksumFileSystem$9
      28: dup
      29: invokespecial #117                // Method org/apache/hadoop/fs/ChecksumFileSystem$9."<init>":()V
      32: putstatic     #95                 // Field DEFAULT_FILTER:Lorg/apache/hadoop/fs/PathFilter;
      35: return
}
