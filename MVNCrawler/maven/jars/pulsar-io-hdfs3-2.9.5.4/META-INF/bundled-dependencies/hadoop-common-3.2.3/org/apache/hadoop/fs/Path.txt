Compiled from "Path.java"
public class org.apache.hadoop.fs.Path implements java.lang.Comparable<org.apache.hadoop.fs.Path>, java.io.Serializable, java.io.ObjectInputValidation {
  public static final java.lang.String SEPARATOR;

  public static final char SEPARATOR_CHAR;

  public static final java.lang.String CUR_DIR;

  public static final boolean WINDOWS;

  private static final java.util.regex.Pattern HAS_DRIVE_LETTER_SPECIFIER;

  private static final java.util.regex.Pattern SLASHES;

  private static final long serialVersionUID;

  private java.net.URI uri;

  void checkNotSchemeWithRelative();
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method toUri:()Ljava/net/URI;
       4: invokevirtual #2                  // Method java/net/URI.isAbsolute:()Z
       7: ifeq          27
      10: aload_0
      11: invokevirtual #3                  // Method isUriPathAbsolute:()Z
      14: ifne          27
      17: new           #4                  // class org/apache/hadoop/HadoopIllegalArgumentException
      20: dup
      21: ldc           #5                  // String Unsupported name: has scheme but relative path-part
      23: invokespecial #6                  // Method org/apache/hadoop/HadoopIllegalArgumentException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: return

  void checkNotRelative();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method isAbsolute:()Z
       4: ifne          27
       7: aload_0
       8: invokevirtual #1                  // Method toUri:()Ljava/net/URI;
      11: invokevirtual #8                  // Method java/net/URI.getScheme:()Ljava/lang/String;
      14: ifnonnull     27
      17: new           #4                  // class org/apache/hadoop/HadoopIllegalArgumentException
      20: dup
      21: ldc           #9                  // String Path is relative
      23: invokespecial #6                  // Method org/apache/hadoop/HadoopIllegalArgumentException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: return

  public static org.apache.hadoop.fs.Path getPathWithoutSchemeAndAuthority(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method isUriPathAbsolute:()Z
       4: ifeq          26
       7: new           #10                 // class org/apache/hadoop/fs/Path
      10: dup
      11: aconst_null
      12: aconst_null
      13: aload_0
      14: invokevirtual #1                  // Method toUri:()Ljava/net/URI;
      17: invokevirtual #11                 // Method java/net/URI.getPath:()Ljava/lang/String;
      20: invokespecial #12                 // Method "<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      23: goto          27
      26: aload_0
      27: astore_1
      28: aload_1
      29: areturn

  public org.apache.hadoop.fs.Path(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: new           #10                 // class org/apache/hadoop/fs/Path
       4: dup
       5: aload_1
       6: invokespecial #13                 // Method "<init>":(Ljava/lang/String;)V
       9: new           #10                 // class org/apache/hadoop/fs/Path
      12: dup
      13: aload_2
      14: invokespecial #13                 // Method "<init>":(Ljava/lang/String;)V
      17: invokespecial #14                 // Method "<init>":(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
      20: return

  public org.apache.hadoop.fs.Path(org.apache.hadoop.fs.Path, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: new           #10                 // class org/apache/hadoop/fs/Path
       5: dup
       6: aload_2
       7: invokespecial #13                 // Method "<init>":(Ljava/lang/String;)V
      10: invokespecial #14                 // Method "<init>":(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
      13: return

  public org.apache.hadoop.fs.Path(java.lang.String, org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: new           #10                 // class org/apache/hadoop/fs/Path
       4: dup
       5: aload_1
       6: invokespecial #13                 // Method "<init>":(Ljava/lang/String;)V
       9: aload_2
      10: invokespecial #14                 // Method "<init>":(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
      13: return

  public org.apache.hadoop.fs.Path(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: invokespecial #15                 // Method java/lang/Object."<init>":()V
       4: aload_1
       5: getfield      #16                 // Field uri:Ljava/net/URI;
       8: astore_3
       9: aload_3
      10: invokevirtual #11                 // Method java/net/URI.getPath:()Ljava/lang/String;
      13: astore        4
      15: aload         4
      17: ldc           #17                 // String /
      19: invokevirtual #18                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      22: ifne          91
      25: aload         4
      27: invokevirtual #19                 // Method java/lang/String.isEmpty:()Z
      30: ifne          91
      33: new           #20                 // class java/net/URI
      36: dup
      37: aload_3
      38: invokevirtual #8                  // Method java/net/URI.getScheme:()Ljava/lang/String;
      41: aload_3
      42: invokevirtual #21                 // Method java/net/URI.getAuthority:()Ljava/lang/String;
      45: new           #22                 // class java/lang/StringBuilder
      48: dup
      49: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      52: aload_3
      53: invokevirtual #11                 // Method java/net/URI.getPath:()Ljava/lang/String;
      56: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: ldc           #17                 // String /
      61: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: aconst_null
      68: aload_3
      69: invokevirtual #26                 // Method java/net/URI.getFragment:()Ljava/lang/String;
      72: invokespecial #27                 // Method java/net/URI."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      75: astore_3
      76: goto          91
      79: astore        5
      81: new           #29                 // class java/lang/IllegalArgumentException
      84: dup
      85: aload         5
      87: invokespecial #30                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/Throwable;)V
      90: athrow
      91: aload_3
      92: aload_2
      93: getfield      #16                 // Field uri:Ljava/net/URI;
      96: invokevirtual #31                 // Method java/net/URI.resolve:(Ljava/net/URI;)Ljava/net/URI;
      99: astore        5
     101: aload_0
     102: aload         5
     104: invokevirtual #8                  // Method java/net/URI.getScheme:()Ljava/lang/String;
     107: aload         5
     109: invokevirtual #21                 // Method java/net/URI.getAuthority:()Ljava/lang/String;
     112: aload         5
     114: invokevirtual #11                 // Method java/net/URI.getPath:()Ljava/lang/String;
     117: aload         5
     119: invokevirtual #26                 // Method java/net/URI.getFragment:()Ljava/lang/String;
     122: invokespecial #32                 // Method initialize:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     125: return
    Exception table:
       from    to  target type
          33    76    79   Class java/net/URISyntaxException

  private void checkPathArg(java.lang.String) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #29                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #33                 // String Can not create a Path from a null string
      10: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_1
      15: invokevirtual #35                 // Method java/lang/String.length:()I
      18: ifne          31
      21: new           #29                 // class java/lang/IllegalArgumentException
      24: dup
      25: ldc           #36                 // String Can not create a Path from an empty string
      27: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: return

  public org.apache.hadoop.fs.Path(java.lang.String) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: invokespecial #15                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokespecial #37                 // Method checkPathArg:(Ljava/lang/String;)V
       9: aload_1
      10: invokestatic  #38                 // Method hasWindowsDrive:(Ljava/lang/String;)Z
      13: ifeq          46
      16: aload_1
      17: iconst_0
      18: invokevirtual #39                 // Method java/lang/String.charAt:(I)C
      21: bipush        47
      23: if_icmpeq     46
      26: new           #22                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #17                 // String /
      35: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_1
      39: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: astore_1
      46: aconst_null
      47: astore_2
      48: aconst_null
      49: astore_3
      50: iconst_0
      51: istore        4
      53: aload_1
      54: bipush        58
      56: invokevirtual #40                 // Method java/lang/String.indexOf:(I)I
      59: istore        5
      61: aload_1
      62: bipush        47
      64: invokevirtual #40                 // Method java/lang/String.indexOf:(I)I
      67: istore        6
      69: iload         5
      71: iconst_m1
      72: if_icmpeq     102
      75: iload         6
      77: iconst_m1
      78: if_icmpeq     88
      81: iload         5
      83: iload         6
      85: if_icmpge     102
      88: aload_1
      89: iconst_0
      90: iload         5
      92: invokevirtual #41                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      95: astore_2
      96: iload         5
      98: iconst_1
      99: iadd
     100: istore        4
     102: aload_1
     103: ldc           #42                 // String //
     105: iload         4
     107: invokevirtual #43                 // Method java/lang/String.startsWith:(Ljava/lang/String;I)Z
     110: ifeq          167
     113: aload_1
     114: invokevirtual #35                 // Method java/lang/String.length:()I
     117: iload         4
     119: isub
     120: iconst_2
     121: if_icmple     167
     124: aload_1
     125: bipush        47
     127: iload         4
     129: iconst_2
     130: iadd
     131: invokevirtual #44                 // Method java/lang/String.indexOf:(II)I
     134: istore        7
     136: iload         7
     138: ifle          146
     141: iload         7
     143: goto          150
     146: aload_1
     147: invokevirtual #35                 // Method java/lang/String.length:()I
     150: istore        8
     152: aload_1
     153: iload         4
     155: iconst_2
     156: iadd
     157: iload         8
     159: invokevirtual #41                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     162: astore_3
     163: iload         8
     165: istore        4
     167: aload_1
     168: iload         4
     170: aload_1
     171: invokevirtual #35                 // Method java/lang/String.length:()I
     174: invokevirtual #41                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     177: astore        7
     179: aload_0
     180: aload_2
     181: aload_3
     182: aload         7
     184: aconst_null
     185: invokespecial #32                 // Method initialize:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     188: return

  public org.apache.hadoop.fs.Path(java.net.URI);
    Code:
       0: aload_0
       1: invokespecial #15                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #45                 // Method java/net/URI.normalize:()Ljava/net/URI;
       9: putfield      #16                 // Field uri:Ljava/net/URI;
      12: return

  public org.apache.hadoop.fs.Path(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #15                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_3
       6: invokespecial #37                 // Method checkPathArg:(Ljava/lang/String;)V
       9: aload_3
      10: invokestatic  #38                 // Method hasWindowsDrive:(Ljava/lang/String;)Z
      13: ifeq          46
      16: aload_3
      17: iconst_0
      18: invokevirtual #39                 // Method java/lang/String.charAt:(I)C
      21: bipush        47
      23: if_icmpeq     46
      26: new           #22                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #17                 // String /
      35: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_3
      39: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: astore_3
      46: getstatic     #46                 // Field WINDOWS:Z
      49: ifne          82
      52: aload_3
      53: iconst_0
      54: invokevirtual #39                 // Method java/lang/String.charAt:(I)C
      57: bipush        47
      59: if_icmpeq     82
      62: new           #22                 // class java/lang/StringBuilder
      65: dup
      66: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      69: ldc           #47                 // String ./
      71: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_3
      75: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      81: astore_3
      82: aload_0
      83: aload_1
      84: aload_2
      85: aload_3
      86: aconst_null
      87: invokespecial #32                 // Method initialize:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      90: return

  private void initialize(java.lang.String, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: new           #20                 // class java/net/URI
       4: dup
       5: aload_1
       6: aload_2
       7: aload_1
       8: aload_3
       9: invokestatic  #48                 // Method normalizePath:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      12: aconst_null
      13: aload         4
      15: invokespecial #27                 // Method java/net/URI."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      18: invokevirtual #45                 // Method java/net/URI.normalize:()Ljava/net/URI;
      21: putfield      #16                 // Field uri:Ljava/net/URI;
      24: goto          39
      27: astore        5
      29: new           #29                 // class java/lang/IllegalArgumentException
      32: dup
      33: aload         5
      35: invokespecial #30                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/Throwable;)V
      38: athrow
      39: return
    Exception table:
       from    to  target type
           0    24    27   Class java/net/URISyntaxException

  public static org.apache.hadoop.fs.Path mergePaths(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path);
    Code:
       0: aload_1
       1: invokevirtual #1                  // Method toUri:()Ljava/net/URI;
       4: invokevirtual #11                 // Method java/net/URI.getPath:()Ljava/lang/String;
       7: astore_2
       8: aload_2
       9: aload_2
      10: invokestatic  #49                 // Method startPositionWithoutWindowsDrive:(Ljava/lang/String;)I
      13: invokevirtual #50                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      16: astore_2
      17: new           #10                 // class org/apache/hadoop/fs/Path
      20: dup
      21: aload_0
      22: invokevirtual #1                  // Method toUri:()Ljava/net/URI;
      25: invokevirtual #8                  // Method java/net/URI.getScheme:()Ljava/lang/String;
      28: aload_0
      29: invokevirtual #1                  // Method toUri:()Ljava/net/URI;
      32: invokevirtual #21                 // Method java/net/URI.getAuthority:()Ljava/lang/String;
      35: new           #22                 // class java/lang/StringBuilder
      38: dup
      39: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      42: aload_0
      43: invokevirtual #1                  // Method toUri:()Ljava/net/URI;
      46: invokevirtual #11                 // Method java/net/URI.getPath:()Ljava/lang/String;
      49: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_2
      53: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: invokespecial #12                 // Method "<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      62: areturn

  private static java.lang.String normalizePath(java.lang.String, java.lang.String);
    Code:
       0: getstatic     #51                 // Field SLASHES:Ljava/util/regex/Pattern;
       3: aload_1
       4: invokevirtual #52                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       7: ldc           #17                 // String /
       9: invokevirtual #53                 // Method java/util/regex/Matcher.replaceAll:(Ljava/lang/String;)Ljava/lang/String;
      12: astore_1
      13: getstatic     #46                 // Field WINDOWS:Z
      16: ifeq          55
      19: aload_1
      20: invokestatic  #38                 // Method hasWindowsDrive:(Ljava/lang/String;)Z
      23: ifne          46
      26: aload_0
      27: ifnull        46
      30: aload_0
      31: invokevirtual #19                 // Method java/lang/String.isEmpty:()Z
      34: ifne          46
      37: aload_0
      38: ldc           #54                 // String file
      40: invokevirtual #18                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      43: ifeq          55
      46: aload_1
      47: ldc           #55                 // String \\
      49: ldc           #17                 // String /
      51: invokestatic  #56                 // Method org/apache/commons/lang3/StringUtils.replace:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      54: astore_1
      55: aload_1
      56: invokestatic  #49                 // Method startPositionWithoutWindowsDrive:(Ljava/lang/String;)I
      59: iconst_1
      60: iadd
      61: istore_2
      62: aload_1
      63: invokevirtual #35                 // Method java/lang/String.length:()I
      66: iload_2
      67: if_icmple     91
      70: aload_1
      71: ldc           #17                 // String /
      73: invokevirtual #57                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      76: ifeq          91
      79: aload_1
      80: iconst_0
      81: aload_1
      82: invokevirtual #35                 // Method java/lang/String.length:()I
      85: iconst_1
      86: isub
      87: invokevirtual #41                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      90: astore_1
      91: aload_1
      92: areturn

  private static boolean hasWindowsDrive(java.lang.String);
    Code:
       0: getstatic     #46                 // Field WINDOWS:Z
       3: ifeq          23
       6: getstatic     #58                 // Field HAS_DRIVE_LETTER_SPECIFIER:Ljava/util/regex/Pattern;
       9: aload_0
      10: invokevirtual #52                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      13: invokevirtual #59                 // Method java/util/regex/Matcher.find:()Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  private static int startPositionWithoutWindowsDrive(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #38                 // Method hasWindowsDrive:(Ljava/lang/String;)Z
       4: ifeq          23
       7: aload_0
       8: iconst_0
       9: invokevirtual #39                 // Method java/lang/String.charAt:(I)C
      12: bipush        47
      14: if_icmpne     21
      17: iconst_3
      18: goto          22
      21: iconst_2
      22: ireturn
      23: iconst_0
      24: ireturn

  public static boolean isWindowsAbsolutePath(java.lang.String, boolean);
    Code:
       0: aload_0
       1: invokestatic  #49                 // Method startPositionWithoutWindowsDrive:(Ljava/lang/String;)I
       4: istore_2
       5: iload_2
       6: ifle          41
       9: aload_0
      10: invokevirtual #35                 // Method java/lang/String.length:()I
      13: iload_2
      14: if_icmple     41
      17: aload_0
      18: iload_2
      19: invokevirtual #39                 // Method java/lang/String.charAt:(I)C
      22: bipush        47
      24: if_icmpeq     37
      27: aload_0
      28: iload_2
      29: invokevirtual #39                 // Method java/lang/String.charAt:(I)C
      32: bipush        92
      34: if_icmpne     41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: ireturn

  public java.net.URI toUri();
    Code:
       0: aload_0
       1: getfield      #16                 // Field uri:Ljava/net/URI;
       4: areturn

  public org.apache.hadoop.fs.FileSystem getFileSystem(org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method toUri:()Ljava/net/URI;
       4: aload_1
       5: invokestatic  #60                 // Method org/apache/hadoop/fs/FileSystem.get:(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
       8: areturn

  public boolean isAbsoluteAndSchemeAuthorityNull();
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method isUriPathAbsolute:()Z
       4: ifeq          31
       7: aload_0
       8: getfield      #16                 // Field uri:Ljava/net/URI;
      11: invokevirtual #8                  // Method java/net/URI.getScheme:()Ljava/lang/String;
      14: ifnonnull     31
      17: aload_0
      18: getfield      #16                 // Field uri:Ljava/net/URI;
      21: invokevirtual #21                 // Method java/net/URI.getAuthority:()Ljava/lang/String;
      24: ifnonnull     31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  public boolean isUriPathAbsolute();
    Code:
       0: aload_0
       1: getfield      #16                 // Field uri:Ljava/net/URI;
       4: invokevirtual #11                 // Method java/net/URI.getPath:()Ljava/lang/String;
       7: invokestatic  #49                 // Method startPositionWithoutWindowsDrive:(Ljava/lang/String;)I
      10: istore_1
      11: aload_0
      12: getfield      #16                 // Field uri:Ljava/net/URI;
      15: invokevirtual #11                 // Method java/net/URI.getPath:()Ljava/lang/String;
      18: ldc           #17                 // String /
      20: iload_1
      21: invokevirtual #43                 // Method java/lang/String.startsWith:(Ljava/lang/String;I)Z
      24: ireturn

  public boolean isAbsolute();
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method isUriPathAbsolute:()Z
       4: ireturn

  public boolean isRoot();
    Code:
       0: aload_0
       1: invokevirtual #61                 // Method getParent:()Lorg/apache/hadoop/fs/Path;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #16                 // Field uri:Ljava/net/URI;
       4: invokevirtual #11                 // Method java/net/URI.getPath:()Ljava/lang/String;
       7: astore_1
       8: aload_1
       9: ldc           #17                 // String /
      11: invokevirtual #62                 // Method java/lang/String.lastIndexOf:(Ljava/lang/String;)I
      14: istore_2
      15: aload_1
      16: iload_2
      17: iconst_1
      18: iadd
      19: invokevirtual #50                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      22: areturn

  public org.apache.hadoop.fs.Path getParent();
    Code:
       0: aload_0
       1: getfield      #16                 // Field uri:Ljava/net/URI;
       4: invokevirtual #11                 // Method java/net/URI.getPath:()Ljava/lang/String;
       7: astore_1
       8: aload_1
       9: bipush        47
      11: invokevirtual #63                 // Method java/lang/String.lastIndexOf:(I)I
      14: istore_2
      15: aload_1
      16: invokestatic  #49                 // Method startPositionWithoutWindowsDrive:(Ljava/lang/String;)I
      19: istore_3
      20: aload_1
      21: invokevirtual #35                 // Method java/lang/String.length:()I
      24: iload_3
      25: if_icmpeq     43
      28: iload_2
      29: iload_3
      30: if_icmpne     45
      33: aload_1
      34: invokevirtual #35                 // Method java/lang/String.length:()I
      37: iload_3
      38: iconst_1
      39: iadd
      40: if_icmpne     45
      43: aconst_null
      44: areturn
      45: iload_2
      46: iconst_m1
      47: if_icmpne     57
      50: ldc           #64                 // String .
      52: astore        4
      54: goto          76
      57: aload_1
      58: iconst_0
      59: iload_2
      60: iload_3
      61: if_icmpne     70
      64: iload_3
      65: iconst_1
      66: iadd
      67: goto          71
      70: iload_2
      71: invokevirtual #41                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      74: astore        4
      76: new           #10                 // class org/apache/hadoop/fs/Path
      79: dup
      80: aload_0
      81: getfield      #16                 // Field uri:Ljava/net/URI;
      84: invokevirtual #8                  // Method java/net/URI.getScheme:()Ljava/lang/String;
      87: aload_0
      88: getfield      #16                 // Field uri:Ljava/net/URI;
      91: invokevirtual #21                 // Method java/net/URI.getAuthority:()Ljava/lang/String;
      94: aload         4
      96: invokespecial #12                 // Method "<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      99: areturn

  public org.apache.hadoop.fs.Path suffix(java.lang.String);
    Code:
       0: new           #10                 // class org/apache/hadoop/fs/Path
       3: dup
       4: aload_0
       5: invokevirtual #61                 // Method getParent:()Lorg/apache/hadoop/fs/Path;
       8: new           #22                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      15: aload_0
      16: invokevirtual #65                 // Method getName:()Ljava/lang/String;
      19: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_1
      23: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokespecial #66                 // Method "<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      32: areturn

  public java.lang.String toString();
    Code:
       0: new           #22                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #16                 // Field uri:Ljava/net/URI;
      12: invokevirtual #8                  // Method java/net/URI.getScheme:()Ljava/lang/String;
      15: ifnull        37
      18: aload_1
      19: aload_0
      20: getfield      #16                 // Field uri:Ljava/net/URI;
      23: invokevirtual #8                  // Method java/net/URI.getScheme:()Ljava/lang/String;
      26: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: pop
      30: aload_1
      31: ldc           #67                 // String :
      33: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: pop
      37: aload_0
      38: getfield      #16                 // Field uri:Ljava/net/URI;
      41: invokevirtual #21                 // Method java/net/URI.getAuthority:()Ljava/lang/String;
      44: ifnull        66
      47: aload_1
      48: ldc           #42                 // String //
      50: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: pop
      54: aload_1
      55: aload_0
      56: getfield      #16                 // Field uri:Ljava/net/URI;
      59: invokevirtual #21                 // Method java/net/URI.getAuthority:()Ljava/lang/String;
      62: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: pop
      66: aload_0
      67: getfield      #16                 // Field uri:Ljava/net/URI;
      70: invokevirtual #11                 // Method java/net/URI.getPath:()Ljava/lang/String;
      73: ifnull        132
      76: aload_0
      77: getfield      #16                 // Field uri:Ljava/net/URI;
      80: invokevirtual #11                 // Method java/net/URI.getPath:()Ljava/lang/String;
      83: astore_2
      84: aload_2
      85: bipush        47
      87: invokevirtual #40                 // Method java/lang/String.indexOf:(I)I
      90: ifne          126
      93: aload_2
      94: invokestatic  #38                 // Method hasWindowsDrive:(Ljava/lang/String;)Z
      97: ifeq          126
     100: aload_0
     101: getfield      #16                 // Field uri:Ljava/net/URI;
     104: invokevirtual #8                  // Method java/net/URI.getScheme:()Ljava/lang/String;
     107: ifnonnull     126
     110: aload_0
     111: getfield      #16                 // Field uri:Ljava/net/URI;
     114: invokevirtual #21                 // Method java/net/URI.getAuthority:()Ljava/lang/String;
     117: ifnonnull     126
     120: aload_2
     121: iconst_1
     122: invokevirtual #50                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     125: astore_2
     126: aload_1
     127: aload_2
     128: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: pop
     132: aload_0
     133: getfield      #16                 // Field uri:Ljava/net/URI;
     136: invokevirtual #26                 // Method java/net/URI.getFragment:()Ljava/lang/String;
     139: ifnull        161
     142: aload_1
     143: ldc           #68                 // String #
     145: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     148: pop
     149: aload_1
     150: aload_0
     151: getfield      #16                 // Field uri:Ljava/net/URI;
     154: invokevirtual #26                 // Method java/net/URI.getFragment:()Ljava/lang/String;
     157: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     160: pop
     161: aload_1
     162: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     165: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #10                 // class org/apache/hadoop/fs/Path
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #10                 // class org/apache/hadoop/fs/Path
      13: astore_2
      14: aload_0
      15: getfield      #16                 // Field uri:Ljava/net/URI;
      18: aload_2
      19: getfield      #16                 // Field uri:Ljava/net/URI;
      22: invokevirtual #69                 // Method java/net/URI.equals:(Ljava/lang/Object;)Z
      25: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #16                 // Field uri:Ljava/net/URI;
       4: invokevirtual #70                 // Method java/net/URI.hashCode:()I
       7: ireturn

  public int compareTo(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: getfield      #16                 // Field uri:Ljava/net/URI;
       4: aload_1
       5: getfield      #16                 // Field uri:Ljava/net/URI;
       8: invokevirtual #71                 // Method java/net/URI.compareTo:(Ljava/net/URI;)I
      11: ireturn

  public int depth();
    Code:
       0: aload_0
       1: getfield      #16                 // Field uri:Ljava/net/URI;
       4: invokevirtual #11                 // Method java/net/URI.getPath:()Ljava/lang/String;
       7: astore_1
       8: iconst_0
       9: istore_2
      10: aload_1
      11: invokevirtual #35                 // Method java/lang/String.length:()I
      14: iconst_1
      15: if_icmpne     32
      18: aload_1
      19: iconst_0
      20: invokevirtual #39                 // Method java/lang/String.charAt:(I)C
      23: bipush        47
      25: if_icmpne     32
      28: iconst_m1
      29: goto          33
      32: iconst_0
      33: istore_3
      34: iload_3
      35: iconst_m1
      36: if_icmpeq     55
      39: iinc          2, 1
      42: aload_1
      43: ldc           #17                 // String /
      45: iload_3
      46: iconst_1
      47: iadd
      48: invokevirtual #72                 // Method java/lang/String.indexOf:(Ljava/lang/String;I)I
      51: istore_3
      52: goto          34
      55: iload_2
      56: ireturn

  public org.apache.hadoop.fs.Path makeQualified(org.apache.hadoop.fs.FileSystem);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #73                 // Method org/apache/hadoop/fs/FileSystem.getUri:()Ljava/net/URI;
       5: aload_1
       6: invokevirtual #74                 // Method org/apache/hadoop/fs/FileSystem.getWorkingDirectory:()Lorg/apache/hadoop/fs/Path;
       9: invokevirtual #75                 // Method makeQualified:(Ljava/net/URI;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      12: areturn

  public org.apache.hadoop.fs.Path makeQualified(java.net.URI, org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: astore_3
       2: aload_0
       3: invokevirtual #7                  // Method isAbsolute:()Z
       6: ifne          19
       9: new           #10                 // class org/apache/hadoop/fs/Path
      12: dup
      13: aload_2
      14: aload_0
      15: invokespecial #14                 // Method "<init>":(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
      18: astore_3
      19: aload_3
      20: invokevirtual #1                  // Method toUri:()Ljava/net/URI;
      23: astore        4
      25: aload         4
      27: invokevirtual #8                  // Method java/net/URI.getScheme:()Ljava/lang/String;
      30: astore        5
      32: aload         4
      34: invokevirtual #21                 // Method java/net/URI.getAuthority:()Ljava/lang/String;
      37: astore        6
      39: aload         4
      41: invokevirtual #26                 // Method java/net/URI.getFragment:()Ljava/lang/String;
      44: astore        7
      46: aload         5
      48: ifnull        65
      51: aload         6
      53: ifnonnull     63
      56: aload_1
      57: invokevirtual #21                 // Method java/net/URI.getAuthority:()Ljava/lang/String;
      60: ifnonnull     65
      63: aload_3
      64: areturn
      65: aload         5
      67: ifnonnull     76
      70: aload_1
      71: invokevirtual #8                  // Method java/net/URI.getScheme:()Ljava/lang/String;
      74: astore        5
      76: aload         6
      78: ifnonnull     96
      81: aload_1
      82: invokevirtual #21                 // Method java/net/URI.getAuthority:()Ljava/lang/String;
      85: astore        6
      87: aload         6
      89: ifnonnull     96
      92: ldc           #76                 // String
      94: astore        6
      96: aconst_null
      97: astore        8
      99: new           #20                 // class java/net/URI
     102: dup
     103: aload         5
     105: aload         6
     107: aload         5
     109: aload         4
     111: invokevirtual #11                 // Method java/net/URI.getPath:()Ljava/lang/String;
     114: invokestatic  #48                 // Method normalizePath:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     117: aconst_null
     118: aload         7
     120: invokespecial #27                 // Method java/net/URI."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     123: astore        8
     125: goto          140
     128: astore        9
     130: new           #29                 // class java/lang/IllegalArgumentException
     133: dup
     134: aload         9
     136: invokespecial #30                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/Throwable;)V
     139: athrow
     140: new           #10                 // class org/apache/hadoop/fs/Path
     143: dup
     144: aload         8
     146: invokespecial #77                 // Method "<init>":(Ljava/net/URI;)V
     149: areturn
    Exception table:
       from    to  target type
          99   125   128   Class java/net/URISyntaxException

  public void validateObject() throws java.io.InvalidObjectException;
    Code:
       0: aload_0
       1: getfield      #16                 // Field uri:Ljava/net/URI;
       4: ifnonnull     17
       7: new           #78                 // class java/io/InvalidObjectException
      10: dup
      11: ldc           #79                 // String No URI in deserialized Path
      13: invokespecial #80                 // Method java/io/InvalidObjectException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #10                 // class org/apache/hadoop/fs/Path
       5: invokevirtual #81                 // Method compareTo:(Lorg/apache/hadoop/fs/Path;)I
       8: ireturn

  static {};
    Code:
       0: ldc           #82                 // String os.name
       2: invokestatic  #83                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       5: ldc           #84                 // String Windows
       7: invokevirtual #85                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      10: putstatic     #46                 // Field WINDOWS:Z
      13: ldc           #86                 // String ^/?[a-zA-Z]:
      15: invokestatic  #87                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      18: putstatic     #58                 // Field HAS_DRIVE_LETTER_SPECIFIER:Ljava/util/regex/Pattern;
      21: ldc           #88                 // String /+
      23: invokestatic  #87                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      26: putstatic     #51                 // Field SLASHES:Ljava/util/regex/Pattern;
      29: return
}
