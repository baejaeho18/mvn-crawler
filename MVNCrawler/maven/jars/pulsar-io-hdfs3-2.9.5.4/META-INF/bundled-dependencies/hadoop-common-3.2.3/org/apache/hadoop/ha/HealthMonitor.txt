Compiled from "HealthMonitor.java"
public class org.apache.hadoop.ha.HealthMonitor {
  private static final org.slf4j.Logger LOG;

  private org.apache.hadoop.util.Daemon daemon;

  private long connectRetryInterval;

  private long checkIntervalMillis;

  private long sleepAfterDisconnectMillis;

  private int rpcTimeout;

  private volatile boolean shouldRun;

  private org.apache.hadoop.ha.HAServiceProtocol proxy;

  private final org.apache.hadoop.ha.HAServiceTarget targetToMonitor;

  private final org.apache.hadoop.conf.Configuration conf;

  private org.apache.hadoop.ha.HealthMonitor$State state;

  private java.util.List<org.apache.hadoop.ha.HealthMonitor$Callback> callbacks;

  private java.util.List<org.apache.hadoop.ha.HealthMonitor$ServiceStateCallback> serviceStateCallbacks;

  private org.apache.hadoop.ha.HAServiceStatus lastServiceState;

  static final boolean $assertionsDisabled;

  org.apache.hadoop.ha.HealthMonitor(org.apache.hadoop.conf.Configuration, org.apache.hadoop.ha.HAServiceTarget);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #4                  // Field shouldRun:Z
       9: aload_0
      10: getstatic     #9                  // Field org/apache/hadoop/ha/HealthMonitor$State.INITIALIZING:Lorg/apache/hadoop/ha/HealthMonitor$State;
      13: putfield      #10                 // Field state:Lorg/apache/hadoop/ha/HealthMonitor$State;
      16: aload_0
      17: new           #11                 // class java/util/LinkedList
      20: dup
      21: invokespecial #12                 // Method java/util/LinkedList."<init>":()V
      24: invokestatic  #13                 // Method java/util/Collections.synchronizedList:(Ljava/util/List;)Ljava/util/List;
      27: putfield      #14                 // Field callbacks:Ljava/util/List;
      30: aload_0
      31: new           #11                 // class java/util/LinkedList
      34: dup
      35: invokespecial #12                 // Method java/util/LinkedList."<init>":()V
      38: invokestatic  #13                 // Method java/util/Collections.synchronizedList:(Ljava/util/List;)Ljava/util/List;
      41: putfield      #15                 // Field serviceStateCallbacks:Ljava/util/List;
      44: aload_0
      45: new           #16                 // class org/apache/hadoop/ha/HAServiceStatus
      48: dup
      49: getstatic     #17                 // Field org/apache/hadoop/ha/HAServiceProtocol$HAServiceState.INITIALIZING:Lorg/apache/hadoop/ha/HAServiceProtocol$HAServiceState;
      52: invokespecial #18                 // Method org/apache/hadoop/ha/HAServiceStatus."<init>":(Lorg/apache/hadoop/ha/HAServiceProtocol$HAServiceState;)V
      55: putfield      #19                 // Field lastServiceState:Lorg/apache/hadoop/ha/HAServiceStatus;
      58: aload_0
      59: aload_2
      60: putfield      #7                  // Field targetToMonitor:Lorg/apache/hadoop/ha/HAServiceTarget;
      63: aload_0
      64: aload_1
      65: putfield      #20                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      68: aload_0
      69: aload_1
      70: ldc           #21                 // String ha.health-monitor.sleep-after-disconnect.ms
      72: ldc2_w        #22                 // long 1000l
      75: invokevirtual #24                 // Method org/apache/hadoop/conf/Configuration.getLong:(Ljava/lang/String;J)J
      78: putfield      #25                 // Field sleepAfterDisconnectMillis:J
      81: aload_0
      82: aload_1
      83: ldc           #26                 // String ha.health-monitor.check-interval.ms
      85: ldc2_w        #22                 // long 1000l
      88: invokevirtual #24                 // Method org/apache/hadoop/conf/Configuration.getLong:(Ljava/lang/String;J)J
      91: putfield      #27                 // Field checkIntervalMillis:J
      94: aload_0
      95: aload_1
      96: ldc           #28                 // String ha.health-monitor.connect-retry-interval.ms
      98: ldc2_w        #22                 // long 1000l
     101: invokevirtual #24                 // Method org/apache/hadoop/conf/Configuration.getLong:(Ljava/lang/String;J)J
     104: putfield      #29                 // Field connectRetryInterval:J
     107: aload_0
     108: aload_1
     109: ldc           #30                 // String ha.health-monitor.rpc-timeout.ms
     111: ldc           #31                 // int 45000
     113: invokevirtual #32                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
     116: putfield      #33                 // Field rpcTimeout:I
     119: aload_0
     120: new           #34                 // class org/apache/hadoop/ha/HealthMonitor$MonitorDaemon
     123: dup
     124: aload_0
     125: aconst_null
     126: invokespecial #35                 // Method org/apache/hadoop/ha/HealthMonitor$MonitorDaemon."<init>":(Lorg/apache/hadoop/ha/HealthMonitor;Lorg/apache/hadoop/ha/HealthMonitor$1;)V
     129: putfield      #36                 // Field daemon:Lorg/apache/hadoop/util/Daemon;
     132: return

  public void addCallback(org.apache.hadoop.ha.HealthMonitor$Callback);
    Code:
       0: aload_0
       1: getfield      #14                 // Field callbacks:Ljava/util/List;
       4: aload_1
       5: invokeinterface #37,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public synchronized void addServiceStateCallback(org.apache.hadoop.ha.HealthMonitor$ServiceStateCallback);
    Code:
       0: aload_0
       1: getfield      #15                 // Field serviceStateCallbacks:Ljava/util/List;
       4: aload_1
       5: invokeinterface #37,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public void shutdown();
    Code:
       0: getstatic     #6                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #38                 // String Stopping HealthMonitor thread
       5: invokeinterface #39,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      10: aload_0
      11: iconst_0
      12: putfield      #4                  // Field shouldRun:Z
      15: aload_0
      16: getfield      #36                 // Field daemon:Lorg/apache/hadoop/util/Daemon;
      19: invokevirtual #40                 // Method org/apache/hadoop/util/Daemon.interrupt:()V
      22: return

  public synchronized org.apache.hadoop.ha.HAServiceProtocol getProxy();
    Code:
       0: aload_0
       1: getfield      #41                 // Field proxy:Lorg/apache/hadoop/ha/HAServiceProtocol;
       4: areturn

  private void loopUntilConnected() throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: invokespecial #42                 // Method tryConnect:()V
       4: aload_0
       5: getfield      #41                 // Field proxy:Lorg/apache/hadoop/ha/HAServiceProtocol;
       8: ifnonnull     25
      11: aload_0
      12: getfield      #29                 // Field connectRetryInterval:J
      15: invokestatic  #43                 // Method java/lang/Thread.sleep:(J)V
      18: aload_0
      19: invokespecial #42                 // Method tryConnect:()V
      22: goto          4
      25: getstatic     #44                 // Field $assertionsDisabled:Z
      28: ifne          46
      31: aload_0
      32: getfield      #41                 // Field proxy:Lorg/apache/hadoop/ha/HAServiceProtocol;
      35: ifnonnull     46
      38: new           #45                 // class java/lang/AssertionError
      41: dup
      42: invokespecial #46                 // Method java/lang/AssertionError."<init>":()V
      45: athrow
      46: return

  private void tryConnect();
    Code:
       0: aload_0
       1: getfield      #41                 // Field proxy:Lorg/apache/hadoop/ha/HAServiceProtocol;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #47                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      15: aload_0
      16: dup
      17: astore_1
      18: monitorenter
      19: aload_0
      20: aload_0
      21: invokevirtual #48                 // Method createProxy:()Lorg/apache/hadoop/ha/HAServiceProtocol;
      24: putfield      #41                 // Field proxy:Lorg/apache/hadoop/ha/HAServiceProtocol;
      27: aload_1
      28: monitorexit
      29: goto          37
      32: astore_2
      33: aload_1
      34: monitorexit
      35: aload_2
      36: athrow
      37: goto          95
      40: astore_1
      41: getstatic     #6                  // Field LOG:Lorg/slf4j/Logger;
      44: new           #50                 // class java/lang/StringBuilder
      47: dup
      48: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
      51: ldc           #52                 // String Could not connect to local service at
      53: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload_0
      57: getfield      #7                  // Field targetToMonitor:Lorg/apache/hadoop/ha/HAServiceTarget;
      60: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      63: ldc           #55                 // String :
      65: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_1
      69: invokevirtual #56                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
      72: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      78: invokeinterface #58,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      83: aload_0
      84: aconst_null
      85: putfield      #41                 // Field proxy:Lorg/apache/hadoop/ha/HAServiceProtocol;
      88: aload_0
      89: getstatic     #59                 // Field org/apache/hadoop/ha/HealthMonitor$State.SERVICE_NOT_RESPONDING:Lorg/apache/hadoop/ha/HealthMonitor$State;
      92: invokespecial #5                  // Method enterState:(Lorg/apache/hadoop/ha/HealthMonitor$State;)V
      95: return
    Exception table:
       from    to  target type
          19    29    32   any
          32    35    32   any
          15    37    40   Class java/io/IOException

  protected org.apache.hadoop.ha.HAServiceProtocol createProxy() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field targetToMonitor:Lorg/apache/hadoop/ha/HAServiceTarget;
       4: aload_0
       5: getfield      #20                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
       8: aload_0
       9: getfield      #33                 // Field rpcTimeout:I
      12: invokevirtual #60                 // Method org/apache/hadoop/ha/HAServiceTarget.getHealthMonitorProxy:(Lorg/apache/hadoop/conf/Configuration;I)Lorg/apache/hadoop/ha/HAServiceProtocol;
      15: areturn

  private void doHealthChecks() throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field shouldRun:Z
       4: ifeq          141
       7: aconst_null
       8: astore_1
       9: iconst_0
      10: istore_2
      11: aload_0
      12: getfield      #41                 // Field proxy:Lorg/apache/hadoop/ha/HAServiceProtocol;
      15: invokeinterface #61,  1           // InterfaceMethod org/apache/hadoop/ha/HAServiceProtocol.getServiceStatus:()Lorg/apache/hadoop/ha/HAServiceStatus;
      20: astore_1
      21: aload_0
      22: getfield      #41                 // Field proxy:Lorg/apache/hadoop/ha/HAServiceProtocol;
      25: invokeinterface #62,  1           // InterfaceMethod org/apache/hadoop/ha/HAServiceProtocol.monitorHealth:()V
      30: iconst_1
      31: istore_2
      32: goto          111
      35: astore_3
      36: aload_0
      37: aload_3
      38: invokespecial #64                 // Method isHealthCheckFailedException:(Ljava/lang/Throwable;)Z
      41: ifeq          69
      44: getstatic     #6                  // Field LOG:Lorg/slf4j/Logger;
      47: ldc           #65                 // String Service health check failed for {}
      49: aload_0
      50: getfield      #7                  // Field targetToMonitor:Lorg/apache/hadoop/ha/HAServiceTarget;
      53: aload_3
      54: invokeinterface #66,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      59: aload_0
      60: getstatic     #67                 // Field org/apache/hadoop/ha/HealthMonitor$State.SERVICE_UNHEALTHY:Lorg/apache/hadoop/ha/HealthMonitor$State;
      63: invokespecial #5                  // Method enterState:(Lorg/apache/hadoop/ha/HealthMonitor$State;)V
      66: goto          111
      69: getstatic     #6                  // Field LOG:Lorg/slf4j/Logger;
      72: ldc           #68                 // String Transport-level exception trying to monitor health of {}
      74: aload_0
      75: getfield      #7                  // Field targetToMonitor:Lorg/apache/hadoop/ha/HAServiceTarget;
      78: aload_3
      79: invokeinterface #66,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      84: aload_0
      85: getfield      #41                 // Field proxy:Lorg/apache/hadoop/ha/HAServiceProtocol;
      88: invokestatic  #69                 // Method org/apache/hadoop/ipc/RPC.stopProxy:(Ljava/lang/Object;)V
      91: aload_0
      92: aconst_null
      93: putfield      #41                 // Field proxy:Lorg/apache/hadoop/ha/HAServiceProtocol;
      96: aload_0
      97: getstatic     #59                 // Field org/apache/hadoop/ha/HealthMonitor$State.SERVICE_NOT_RESPONDING:Lorg/apache/hadoop/ha/HealthMonitor$State;
     100: invokespecial #5                  // Method enterState:(Lorg/apache/hadoop/ha/HealthMonitor$State;)V
     103: aload_0
     104: getfield      #25                 // Field sleepAfterDisconnectMillis:J
     107: invokestatic  #43                 // Method java/lang/Thread.sleep:(J)V
     110: return
     111: aload_1
     112: ifnull        120
     115: aload_0
     116: aload_1
     117: invokespecial #70                 // Method setLastServiceStatus:(Lorg/apache/hadoop/ha/HAServiceStatus;)V
     120: iload_2
     121: ifeq          131
     124: aload_0
     125: getstatic     #71                 // Field org/apache/hadoop/ha/HealthMonitor$State.SERVICE_HEALTHY:Lorg/apache/hadoop/ha/HealthMonitor$State;
     128: invokespecial #5                  // Method enterState:(Lorg/apache/hadoop/ha/HealthMonitor$State;)V
     131: aload_0
     132: getfield      #27                 // Field checkIntervalMillis:J
     135: invokestatic  #43                 // Method java/lang/Thread.sleep:(J)V
     138: goto          0
     141: return
    Exception table:
       from    to  target type
          11    32    35   Class java/lang/Throwable

  private boolean isHealthCheckFailedException(java.lang.Throwable);
    Code:
       0: aload_1
       1: instanceof    #72                 // class org/apache/hadoop/ha/HealthCheckFailedException
       4: ifne          36
       7: aload_1
       8: instanceof    #73                 // class org/apache/hadoop/ipc/RemoteException
      11: ifeq          40
      14: aload_1
      15: checkcast     #73                 // class org/apache/hadoop/ipc/RemoteException
      18: iconst_1
      19: anewarray     #74                 // class java/lang/Class
      22: dup
      23: iconst_0
      24: ldc           #72                 // class org/apache/hadoop/ha/HealthCheckFailedException
      26: aastore
      27: invokevirtual #75                 // Method org/apache/hadoop/ipc/RemoteException.unwrapRemoteException:([Ljava/lang/Class;)Ljava/io/IOException;
      30: instanceof    #72                 // class org/apache/hadoop/ha/HealthCheckFailedException
      33: ifeq          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn

  private synchronized void setLastServiceStatus(org.apache.hadoop.ha.HAServiceStatus);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field lastServiceState:Lorg/apache/hadoop/ha/HAServiceStatus;
       5: aload_0
       6: getfield      #15                 // Field serviceStateCallbacks:Ljava/util/List;
       9: invokeinterface #76,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          47
      24: aload_2
      25: invokeinterface #78,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #79                 // class org/apache/hadoop/ha/HealthMonitor$ServiceStateCallback
      33: astore_3
      34: aload_3
      35: aload_0
      36: getfield      #19                 // Field lastServiceState:Lorg/apache/hadoop/ha/HAServiceStatus;
      39: invokeinterface #80,  2           // InterfaceMethod org/apache/hadoop/ha/HealthMonitor$ServiceStateCallback.reportServiceStatus:(Lorg/apache/hadoop/ha/HAServiceStatus;)V
      44: goto          15
      47: return

  private synchronized void enterState(org.apache.hadoop.ha.HealthMonitor$State);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #10                 // Field state:Lorg/apache/hadoop/ha/HealthMonitor$State;
       5: if_acmpeq     84
       8: getstatic     #6                  // Field LOG:Lorg/slf4j/Logger;
      11: ldc           #81                 // String Entering state {}
      13: aload_1
      14: invokeinterface #82,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      19: aload_0
      20: aload_1
      21: putfield      #10                 // Field state:Lorg/apache/hadoop/ha/HealthMonitor$State;
      24: aload_0
      25: getfield      #14                 // Field callbacks:Ljava/util/List;
      28: dup
      29: astore_2
      30: monitorenter
      31: aload_0
      32: getfield      #14                 // Field callbacks:Ljava/util/List;
      35: invokeinterface #76,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      40: astore_3
      41: aload_3
      42: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      47: ifeq          72
      50: aload_3
      51: invokeinterface #78,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      56: checkcast     #83                 // class org/apache/hadoop/ha/HealthMonitor$Callback
      59: astore        4
      61: aload         4
      63: aload_1
      64: invokeinterface #84,  2           // InterfaceMethod org/apache/hadoop/ha/HealthMonitor$Callback.enteredState:(Lorg/apache/hadoop/ha/HealthMonitor$State;)V
      69: goto          41
      72: aload_2
      73: monitorexit
      74: goto          84
      77: astore        5
      79: aload_2
      80: monitorexit
      81: aload         5
      83: athrow
      84: return
    Exception table:
       from    to  target type
          31    74    77   any
          77    81    77   any

  synchronized org.apache.hadoop.ha.HealthMonitor$State getHealthState();
    Code:
       0: aload_0
       1: getfield      #10                 // Field state:Lorg/apache/hadoop/ha/HealthMonitor$State;
       4: areturn

  boolean isAlive();
    Code:
       0: aload_0
       1: getfield      #36                 // Field daemon:Lorg/apache/hadoop/util/Daemon;
       4: invokevirtual #85                 // Method org/apache/hadoop/util/Daemon.isAlive:()Z
       7: ireturn

  void join() throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #36                 // Field daemon:Lorg/apache/hadoop/util/Daemon;
       4: invokevirtual #86                 // Method org/apache/hadoop/util/Daemon.join:()V
       7: return

  void start();
    Code:
       0: aload_0
       1: getfield      #36                 // Field daemon:Lorg/apache/hadoop/util/Daemon;
       4: invokevirtual #87                 // Method org/apache/hadoop/util/Daemon.start:()V
       7: return

  static org.apache.hadoop.ha.HAServiceTarget access$100(org.apache.hadoop.ha.HealthMonitor);
    Code:
       0: aload_0
       1: getfield      #7                  // Field targetToMonitor:Lorg/apache/hadoop/ha/HAServiceTarget;
       4: areturn

  static org.slf4j.Logger access$200();
    Code:
       0: getstatic     #6                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static void access$300(org.apache.hadoop.ha.HealthMonitor, org.apache.hadoop.ha.HealthMonitor$State);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method enterState:(Lorg/apache/hadoop/ha/HealthMonitor$State;)V
       5: return

  static boolean access$400(org.apache.hadoop.ha.HealthMonitor);
    Code:
       0: aload_0
       1: getfield      #4                  // Field shouldRun:Z
       4: ireturn

  static void access$500(org.apache.hadoop.ha.HealthMonitor) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: invokespecial #3                  // Method loopUntilConnected:()V
       4: return

  static void access$600(org.apache.hadoop.ha.HealthMonitor) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method doHealthChecks:()V
       4: return

  static {};
    Code:
       0: ldc           #88                 // class org/apache/hadoop/ha/HealthMonitor
       2: invokevirtual #89                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #44                 // Field $assertionsDisabled:Z
      16: ldc           #88                 // class org/apache/hadoop/ha/HealthMonitor
      18: invokestatic  #90                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      21: putstatic     #6                  // Field LOG:Lorg/slf4j/Logger;
      24: return
}
