Compiled from "Display.java"
public class org.apache.hadoop.fs.shell.Display$Checksum extends org.apache.hadoop.fs.shell.Display {
  public static final java.lang.String NAME;

  public static final java.lang.String USAGE;

  public static final java.lang.String DESCRIPTION;

  public org.apache.hadoop.fs.shell.Display$Checksum();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/fs/shell/Display."<init>":()V
       4: return

  protected void processPath(org.apache.hadoop.fs.shell.PathData) throws java.io.IOException;
    Code:
       0: aload_1
       1: getfield      #2                  // Field org/apache/hadoop/fs/shell/PathData.stat:Lorg/apache/hadoop/fs/FileStatus;
       4: invokevirtual #3                  // Method org/apache/hadoop/fs/FileStatus.isDirectory:()Z
       7: ifeq          22
      10: new           #4                  // class org/apache/hadoop/fs/PathIsDirectoryException
      13: dup
      14: aload_1
      15: invokevirtual #5                  // Method org/apache/hadoop/fs/shell/PathData.toString:()Ljava/lang/String;
      18: invokespecial #6                  // Method org/apache/hadoop/fs/PathIsDirectoryException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: aload_1
      23: getfield      #7                  // Field org/apache/hadoop/fs/shell/PathData.fs:Lorg/apache/hadoop/fs/FileSystem;
      26: aload_1
      27: getfield      #8                  // Field org/apache/hadoop/fs/shell/PathData.path:Lorg/apache/hadoop/fs/Path;
      30: invokevirtual #9                  // Method org/apache/hadoop/fs/FileSystem.getFileChecksum:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileChecksum;
      33: astore_2
      34: aload_2
      35: ifnonnull     62
      38: aload_0
      39: getfield      #10                 // Field out:Ljava/io/PrintStream;
      42: ldc           #11                 // String %s\tNONE\t%n
      44: iconst_1
      45: anewarray     #12                 // class java/lang/Object
      48: dup
      49: iconst_0
      50: aload_1
      51: invokevirtual #5                  // Method org/apache/hadoop/fs/shell/PathData.toString:()Ljava/lang/String;
      54: aastore
      55: invokevirtual #13                 // Method java/io/PrintStream.printf:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;
      58: pop
      59: goto          107
      62: aload_2
      63: invokevirtual #14                 // Method org/apache/hadoop/fs/FileChecksum.getBytes:()[B
      66: iconst_0
      67: aload_2
      68: invokevirtual #15                 // Method org/apache/hadoop/fs/FileChecksum.getLength:()I
      71: invokestatic  #16                 // Method org/apache/hadoop/util/StringUtils.byteToHexString:([BII)Ljava/lang/String;
      74: astore_3
      75: aload_0
      76: getfield      #10                 // Field out:Ljava/io/PrintStream;
      79: ldc           #17                 // String %s\t%s\t%s%n
      81: iconst_3
      82: anewarray     #12                 // class java/lang/Object
      85: dup
      86: iconst_0
      87: aload_1
      88: invokevirtual #5                  // Method org/apache/hadoop/fs/shell/PathData.toString:()Ljava/lang/String;
      91: aastore
      92: dup
      93: iconst_1
      94: aload_2
      95: invokevirtual #18                 // Method org/apache/hadoop/fs/FileChecksum.getAlgorithmName:()Ljava/lang/String;
      98: aastore
      99: dup
     100: iconst_2
     101: aload_3
     102: aastore
     103: invokevirtual #13                 // Method java/io/PrintStream.printf:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;
     106: pop
     107: return
}
