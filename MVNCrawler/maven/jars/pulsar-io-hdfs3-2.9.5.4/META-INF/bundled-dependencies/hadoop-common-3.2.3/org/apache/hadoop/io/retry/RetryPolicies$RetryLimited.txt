Compiled from "RetryPolicies.java"
abstract class org.apache.hadoop.io.retry.RetryPolicies$RetryLimited implements org.apache.hadoop.io.retry.RetryPolicy {
  final int maxRetries;

  final long sleepTime;

  final java.util.concurrent.TimeUnit timeUnit;

  private java.lang.String myString;

  org.apache.hadoop.io.retry.RetryPolicies$RetryLimited(int, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: iload_1
       5: ifge          40
       8: new           #2                  // class java/lang/IllegalArgumentException
      11: dup
      12: new           #3                  // class java/lang/StringBuilder
      15: dup
      16: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #5                  // String maxRetries =
      21: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: iload_1
      25: invokevirtual #7                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      28: ldc           #8                  // String  < 0
      30: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokespecial #10                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: lload_2
      41: lconst_0
      42: lcmp
      43: ifge          78
      46: new           #2                  // class java/lang/IllegalArgumentException
      49: dup
      50: new           #3                  // class java/lang/StringBuilder
      53: dup
      54: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      57: ldc           #11                 // String sleepTime =
      59: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: lload_2
      63: invokevirtual #12                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      66: ldc           #8                  // String  < 0
      68: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      74: invokespecial #10                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      77: athrow
      78: aload_0
      79: iload_1
      80: putfield      #13                 // Field maxRetries:I
      83: aload_0
      84: lload_2
      85: putfield      #14                 // Field sleepTime:J
      88: aload_0
      89: aload         4
      91: putfield      #15                 // Field timeUnit:Ljava/util/concurrent/TimeUnit;
      94: return

  public org.apache.hadoop.io.retry.RetryPolicy$RetryAction shouldRetry(java.lang.Exception, int, int, boolean) throws java.lang.Exception;
    Code:
       0: iload_2
       1: aload_0
       2: getfield      #13                 // Field maxRetries:I
       5: if_icmplt     24
       8: new           #16                 // class org/apache/hadoop/io/retry/RetryPolicy$RetryAction
      11: dup
      12: getstatic     #17                 // Field org/apache/hadoop/io/retry/RetryPolicy$RetryAction$RetryDecision.FAIL:Lorg/apache/hadoop/io/retry/RetryPolicy$RetryAction$RetryDecision;
      15: lconst_0
      16: aload_0
      17: invokevirtual #18                 // Method getReason:()Ljava/lang/String;
      20: invokespecial #19                 // Method org/apache/hadoop/io/retry/RetryPolicy$RetryAction."<init>":(Lorg/apache/hadoop/io/retry/RetryPolicy$RetryAction$RetryDecision;JLjava/lang/String;)V
      23: areturn
      24: new           #16                 // class org/apache/hadoop/io/retry/RetryPolicy$RetryAction
      27: dup
      28: getstatic     #20                 // Field org/apache/hadoop/io/retry/RetryPolicy$RetryAction$RetryDecision.RETRY:Lorg/apache/hadoop/io/retry/RetryPolicy$RetryAction$RetryDecision;
      31: aload_0
      32: getfield      #15                 // Field timeUnit:Ljava/util/concurrent/TimeUnit;
      35: aload_0
      36: iload_2
      37: invokevirtual #21                 // Method calculateSleepTime:(I)J
      40: invokevirtual #22                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      43: aload_0
      44: invokevirtual #18                 // Method getReason:()Ljava/lang/String;
      47: invokespecial #19                 // Method org/apache/hadoop/io/retry/RetryPolicy$RetryAction."<init>":(Lorg/apache/hadoop/io/retry/RetryPolicy$RetryAction$RetryDecision;JLjava/lang/String;)V
      50: areturn

  protected java.lang.String getReason();
    Code:
       0: aload_0
       1: getfield      #13                 // Field maxRetries:I
       4: invokestatic  #23                 // Method constructReasonString:(I)Ljava/lang/String;
       7: areturn

  public static java.lang.String constructReasonString(int);
    Code:
       0: new           #3                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #24                 // String retries get failed due to exceeded maximum allowed retries number:
       9: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: iload_0
      13: invokevirtual #7                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      16: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      19: areturn

  protected abstract long calculateSleepTime(int);

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method toString:()Ljava/lang/String;
       4: invokevirtual #26                 // Method java/lang/String.hashCode:()I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_0
      25: invokevirtual #25                 // Method toString:()Ljava/lang/String;
      28: aload_1
      29: invokevirtual #28                 // Method java/lang/Object.toString:()Ljava/lang/String;
      32: invokevirtual #29                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      35: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #30                 // Field myString:Ljava/lang/String;
       4: ifnonnull     72
       7: aload_0
       8: new           #3                  // class java/lang/StringBuilder
      11: dup
      12: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      15: aload_0
      16: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: invokevirtual #31                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      22: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: ldc           #32                 // String (maxRetries=
      27: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_0
      31: getfield      #13                 // Field maxRetries:I
      34: invokevirtual #7                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      37: ldc           #33                 // String , sleepTime=
      39: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_0
      43: getfield      #14                 // Field sleepTime:J
      46: invokevirtual #12                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      49: ldc           #34                 // String
      51: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_0
      55: getfield      #15                 // Field timeUnit:Ljava/util/concurrent/TimeUnit;
      58: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      61: ldc           #36                 // String )
      63: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      69: putfield      #30                 // Field myString:Ljava/lang/String;
      72: aload_0
      73: getfield      #30                 // Field myString:Ljava/lang/String;
      76: areturn
}
