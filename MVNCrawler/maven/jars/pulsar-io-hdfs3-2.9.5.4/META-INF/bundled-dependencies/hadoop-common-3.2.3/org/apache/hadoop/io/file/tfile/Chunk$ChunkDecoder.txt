Compiled from "Chunk.java"
public class org.apache.hadoop.io.file.tfile.Chunk$ChunkDecoder extends java.io.InputStream {
  private java.io.DataInputStream in;

  private boolean lastChunk;

  private int remain;

  private boolean closed;

  public org.apache.hadoop.io.file.tfile.Chunk$ChunkDecoder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field in:Ljava/io/DataInputStream;
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field remain:I
      14: aload_0
      15: iconst_1
      16: putfield      #4                  // Field lastChunk:Z
      19: aload_0
      20: iconst_1
      21: putfield      #5                  // Field closed:Z
      24: return

  public void reset(java.io.DataInputStream);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field in:Ljava/io/DataInputStream;
       5: aload_0
       6: iconst_0
       7: putfield      #4                  // Field lastChunk:Z
      10: aload_0
      11: iconst_0
      12: putfield      #3                  // Field remain:I
      15: aload_0
      16: iconst_0
      17: putfield      #5                  // Field closed:Z
      20: return

  public org.apache.hadoop.io.file.tfile.Chunk$ChunkDecoder(java.io.DataInputStream);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field in:Ljava/io/DataInputStream;
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field remain:I
      14: aload_0
      15: aload_1
      16: putfield      #2                  // Field in:Ljava/io/DataInputStream;
      19: aload_0
      20: iconst_0
      21: putfield      #4                  // Field lastChunk:Z
      24: aload_0
      25: iconst_0
      26: putfield      #5                  // Field closed:Z
      29: return

  public boolean isLastChunk() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method checkEOF:()Z
       4: pop
       5: aload_0
       6: getfield      #4                  // Field lastChunk:Z
       9: ireturn

  public int getRemain() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method checkEOF:()Z
       4: pop
       5: aload_0
       6: getfield      #3                  // Field remain:I
       9: ireturn

  private void readLength() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field in:Ljava/io/DataInputStream;
       5: invokestatic  #7                  // Method org/apache/hadoop/io/file/tfile/Utils.readVInt:(Ljava/io/DataInput;)I
       8: putfield      #3                  // Field remain:I
      11: aload_0
      12: getfield      #3                  // Field remain:I
      15: iflt          26
      18: aload_0
      19: iconst_1
      20: putfield      #4                  // Field lastChunk:Z
      23: goto          35
      26: aload_0
      27: aload_0
      28: getfield      #3                  // Field remain:I
      31: ineg
      32: putfield      #3                  // Field remain:I
      35: return

  private boolean checkEOF() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method isClosed:()Z
       4: ifeq          9
       7: iconst_1
       8: ireturn
       9: aload_0
      10: getfield      #3                  // Field remain:I
      13: ifle          18
      16: iconst_0
      17: ireturn
      18: aload_0
      19: getfield      #4                  // Field lastChunk:Z
      22: ifeq          27
      25: iconst_1
      26: ireturn
      27: aload_0
      28: invokespecial #9                  // Method readLength:()V
      31: goto          9

  public int available();
    Code:
       0: aload_0
       1: getfield      #3                  // Field remain:I
       4: ireturn

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method checkEOF:()Z
       4: ifeq          9
       7: iconst_m1
       8: ireturn
       9: aload_0
      10: getfield      #2                  // Field in:Ljava/io/DataInputStream;
      13: invokevirtual #10                 // Method java/io/DataInputStream.read:()I
      16: istore_1
      17: iload_1
      18: ifge          31
      21: new           #11                 // class java/io/IOException
      24: dup
      25: ldc           #12                 // String Corrupted chunk encoding stream
      27: invokespecial #13                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_0
      32: dup
      33: getfield      #3                  // Field remain:I
      36: iconst_1
      37: isub
      38: putfield      #3                  // Field remain:I
      41: iload_1
      42: ireturn

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #14                 // Method read:([BII)I
       8: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_2
       1: iload_3
       2: ior
       3: iload_2
       4: iload_3
       5: iadd
       6: ior
       7: aload_1
       8: arraylength
       9: iload_2
      10: iload_3
      11: iadd
      12: isub
      13: ior
      14: ifge          25
      17: new           #15                 // class java/lang/IndexOutOfBoundsException
      20: dup
      21: invokespecial #16                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      24: athrow
      25: aload_0
      26: invokespecial #6                  // Method checkEOF:()Z
      29: ifne          84
      32: aload_0
      33: getfield      #3                  // Field remain:I
      36: iload_3
      37: invokestatic  #17                 // Method java/lang/Math.min:(II)I
      40: istore        4
      42: aload_0
      43: getfield      #2                  // Field in:Ljava/io/DataInputStream;
      46: aload_1
      47: iload_2
      48: iload         4
      50: invokevirtual #18                 // Method java/io/DataInputStream.read:([BII)I
      53: istore        5
      55: iload         5
      57: ifge          70
      60: new           #11                 // class java/io/IOException
      63: dup
      64: ldc           #12                 // String Corrupted chunk encoding stream
      66: invokespecial #13                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      69: athrow
      70: aload_0
      71: dup
      72: getfield      #3                  // Field remain:I
      75: iload         5
      77: isub
      78: putfield      #3                  // Field remain:I
      81: iload         5
      83: ireturn
      84: iconst_m1
      85: ireturn

  public long skip(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method checkEOF:()Z
       4: ifne          38
       7: aload_0
       8: getfield      #2                  // Field in:Ljava/io/DataInputStream;
      11: aload_0
      12: getfield      #3                  // Field remain:I
      15: i2l
      16: lload_1
      17: invokestatic  #19                 // Method java/lang/Math.min:(JJ)J
      20: invokevirtual #20                 // Method java/io/DataInputStream.skip:(J)J
      23: lstore_3
      24: aload_0
      25: dup
      26: getfield      #3                  // Field remain:I
      29: i2l
      30: lload_3
      31: lsub
      32: l2i
      33: putfield      #3                  // Field remain:I
      36: lload_3
      37: lreturn
      38: lconst_0
      39: lreturn

  public boolean markSupported();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #5                  // Field closed:Z
       4: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field closed:Z
       4: ifne          41
       7: aload_0
       8: invokespecial #6                  // Method checkEOF:()Z
      11: ifne          25
      14: aload_0
      15: ldc2_w        #22                 // long 2147483647l
      18: invokevirtual #24                 // Method skip:(J)J
      21: pop2
      22: goto          7
      25: aload_0
      26: iconst_1
      27: putfield      #5                  // Field closed:Z
      30: goto          41
      33: astore_1
      34: aload_0
      35: iconst_1
      36: putfield      #5                  // Field closed:Z
      39: aload_1
      40: athrow
      41: return
    Exception table:
       from    to  target type
           7    25    33   any
}
