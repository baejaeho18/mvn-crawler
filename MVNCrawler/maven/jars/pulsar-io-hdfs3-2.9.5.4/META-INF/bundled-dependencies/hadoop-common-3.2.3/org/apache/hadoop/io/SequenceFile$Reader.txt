Compiled from "SequenceFile.java"
public class org.apache.hadoop.io.SequenceFile$Reader implements java.io.Closeable {
  private java.lang.String filename;

  private org.apache.hadoop.fs.FSDataInputStream in;

  private org.apache.hadoop.io.DataOutputBuffer outBuf;

  private byte version;

  private java.lang.String keyClassName;

  private java.lang.String valClassName;

  private java.lang.Class keyClass;

  private java.lang.Class valClass;

  private org.apache.hadoop.io.compress.CompressionCodec codec;

  private org.apache.hadoop.io.SequenceFile$Metadata metadata;

  private byte[] sync;

  private byte[] syncCheck;

  private boolean syncSeen;

  private long headerEnd;

  private long end;

  private int keyLength;

  private int recordLength;

  private boolean decompress;

  private boolean blockCompressed;

  private org.apache.hadoop.conf.Configuration conf;

  private int noBufferedRecords;

  private boolean lazyDecompress;

  private boolean valuesDecompressed;

  private int noBufferedKeys;

  private int noBufferedValues;

  private org.apache.hadoop.io.DataInputBuffer keyLenBuffer;

  private org.apache.hadoop.io.compress.CompressionInputStream keyLenInFilter;

  private java.io.DataInputStream keyLenIn;

  private org.apache.hadoop.io.compress.Decompressor keyLenDecompressor;

  private org.apache.hadoop.io.DataInputBuffer keyBuffer;

  private org.apache.hadoop.io.compress.CompressionInputStream keyInFilter;

  private java.io.DataInputStream keyIn;

  private org.apache.hadoop.io.compress.Decompressor keyDecompressor;

  private org.apache.hadoop.io.DataInputBuffer valLenBuffer;

  private org.apache.hadoop.io.compress.CompressionInputStream valLenInFilter;

  private java.io.DataInputStream valLenIn;

  private org.apache.hadoop.io.compress.Decompressor valLenDecompressor;

  private org.apache.hadoop.io.DataInputBuffer valBuffer;

  private org.apache.hadoop.io.compress.CompressionInputStream valInFilter;

  private java.io.DataInputStream valIn;

  private org.apache.hadoop.io.compress.Decompressor valDecompressor;

  private org.apache.hadoop.io.serializer.Deserializer keyDeserializer;

  private org.apache.hadoop.io.serializer.Deserializer valDeserializer;

  public static org.apache.hadoop.io.SequenceFile$Reader$Option file(org.apache.hadoop.fs.Path);
    Code:
       0: new           #5                  // class org/apache/hadoop/io/SequenceFile$Reader$FileOption
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #6                  // Method org/apache/hadoop/io/SequenceFile$Reader$FileOption."<init>":(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/io/SequenceFile$1;)V
       9: areturn

  public static org.apache.hadoop.io.SequenceFile$Reader$Option stream(org.apache.hadoop.fs.FSDataInputStream);
    Code:
       0: new           #7                  // class org/apache/hadoop/io/SequenceFile$Reader$InputStreamOption
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #8                  // Method org/apache/hadoop/io/SequenceFile$Reader$InputStreamOption."<init>":(Lorg/apache/hadoop/fs/FSDataInputStream;Lorg/apache/hadoop/io/SequenceFile$1;)V
       9: areturn

  public static org.apache.hadoop.io.SequenceFile$Reader$Option start(long);
    Code:
       0: new           #9                  // class org/apache/hadoop/io/SequenceFile$Reader$StartOption
       3: dup
       4: lload_0
       5: aconst_null
       6: invokespecial #10                 // Method org/apache/hadoop/io/SequenceFile$Reader$StartOption."<init>":(JLorg/apache/hadoop/io/SequenceFile$1;)V
       9: areturn

  public static org.apache.hadoop.io.SequenceFile$Reader$Option length(long);
    Code:
       0: new           #11                 // class org/apache/hadoop/io/SequenceFile$Reader$LengthOption
       3: dup
       4: lload_0
       5: aconst_null
       6: invokespecial #12                 // Method org/apache/hadoop/io/SequenceFile$Reader$LengthOption."<init>":(JLorg/apache/hadoop/io/SequenceFile$1;)V
       9: areturn

  public static org.apache.hadoop.io.SequenceFile$Reader$Option bufferSize(int);
    Code:
       0: new           #13                 // class org/apache/hadoop/io/SequenceFile$Reader$BufferSizeOption
       3: dup
       4: iload_0
       5: aconst_null
       6: invokespecial #14                 // Method org/apache/hadoop/io/SequenceFile$Reader$BufferSizeOption."<init>":(ILorg/apache/hadoop/io/SequenceFile$1;)V
       9: areturn

  public org.apache.hadoop.io.SequenceFile$Reader(org.apache.hadoop.conf.Configuration, org.apache.hadoop.io.SequenceFile$Reader$Option...) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #15                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #16                 // class org/apache/hadoop/io/DataOutputBuffer
       8: dup
       9: invokespecial #17                 // Method org/apache/hadoop/io/DataOutputBuffer."<init>":()V
      12: putfield      #18                 // Field outBuf:Lorg/apache/hadoop/io/DataOutputBuffer;
      15: aload_0
      16: aconst_null
      17: putfield      #19                 // Field codec:Lorg/apache/hadoop/io/compress/CompressionCodec;
      20: aload_0
      21: aconst_null
      22: putfield      #20                 // Field metadata:Lorg/apache/hadoop/io/SequenceFile$Metadata;
      25: aload_0
      26: bipush        16
      28: newarray       byte
      30: putfield      #21                 // Field sync:[B
      33: aload_0
      34: bipush        16
      36: newarray       byte
      38: putfield      #22                 // Field syncCheck:[B
      41: aload_0
      42: iconst_0
      43: putfield      #23                 // Field noBufferedRecords:I
      46: aload_0
      47: iconst_1
      48: putfield      #24                 // Field lazyDecompress:Z
      51: aload_0
      52: iconst_1
      53: putfield      #25                 // Field valuesDecompressed:Z
      56: aload_0
      57: iconst_0
      58: putfield      #26                 // Field noBufferedKeys:I
      61: aload_0
      62: iconst_0
      63: putfield      #27                 // Field noBufferedValues:I
      66: aload_0
      67: aconst_null
      68: putfield      #28                 // Field keyLenBuffer:Lorg/apache/hadoop/io/DataInputBuffer;
      71: aload_0
      72: aconst_null
      73: putfield      #29                 // Field keyLenInFilter:Lorg/apache/hadoop/io/compress/CompressionInputStream;
      76: aload_0
      77: aconst_null
      78: putfield      #30                 // Field keyLenIn:Ljava/io/DataInputStream;
      81: aload_0
      82: aconst_null
      83: putfield      #31                 // Field keyLenDecompressor:Lorg/apache/hadoop/io/compress/Decompressor;
      86: aload_0
      87: aconst_null
      88: putfield      #32                 // Field keyBuffer:Lorg/apache/hadoop/io/DataInputBuffer;
      91: aload_0
      92: aconst_null
      93: putfield      #33                 // Field keyInFilter:Lorg/apache/hadoop/io/compress/CompressionInputStream;
      96: aload_0
      97: aconst_null
      98: putfield      #34                 // Field keyIn:Ljava/io/DataInputStream;
     101: aload_0
     102: aconst_null
     103: putfield      #35                 // Field keyDecompressor:Lorg/apache/hadoop/io/compress/Decompressor;
     106: aload_0
     107: aconst_null
     108: putfield      #36                 // Field valLenBuffer:Lorg/apache/hadoop/io/DataInputBuffer;
     111: aload_0
     112: aconst_null
     113: putfield      #37                 // Field valLenInFilter:Lorg/apache/hadoop/io/compress/CompressionInputStream;
     116: aload_0
     117: aconst_null
     118: putfield      #38                 // Field valLenIn:Ljava/io/DataInputStream;
     121: aload_0
     122: aconst_null
     123: putfield      #39                 // Field valLenDecompressor:Lorg/apache/hadoop/io/compress/Decompressor;
     126: aload_0
     127: aconst_null
     128: putfield      #40                 // Field valBuffer:Lorg/apache/hadoop/io/DataInputBuffer;
     131: aload_0
     132: aconst_null
     133: putfield      #41                 // Field valInFilter:Lorg/apache/hadoop/io/compress/CompressionInputStream;
     136: aload_0
     137: aconst_null
     138: putfield      #42                 // Field valIn:Ljava/io/DataInputStream;
     141: aload_0
     142: aconst_null
     143: putfield      #43                 // Field valDecompressor:Lorg/apache/hadoop/io/compress/Decompressor;
     146: ldc           #5                  // class org/apache/hadoop/io/SequenceFile$Reader$FileOption
     148: aload_2
     149: invokestatic  #44                 // Method org/apache/hadoop/util/Options.getOption:(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
     152: checkcast     #5                  // class org/apache/hadoop/io/SequenceFile$Reader$FileOption
     155: astore_3
     156: ldc           #7                  // class org/apache/hadoop/io/SequenceFile$Reader$InputStreamOption
     158: aload_2
     159: invokestatic  #44                 // Method org/apache/hadoop/util/Options.getOption:(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
     162: checkcast     #7                  // class org/apache/hadoop/io/SequenceFile$Reader$InputStreamOption
     165: astore        4
     167: ldc           #9                  // class org/apache/hadoop/io/SequenceFile$Reader$StartOption
     169: aload_2
     170: invokestatic  #44                 // Method org/apache/hadoop/util/Options.getOption:(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
     173: checkcast     #9                  // class org/apache/hadoop/io/SequenceFile$Reader$StartOption
     176: astore        5
     178: ldc           #11                 // class org/apache/hadoop/io/SequenceFile$Reader$LengthOption
     180: aload_2
     181: invokestatic  #44                 // Method org/apache/hadoop/util/Options.getOption:(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
     184: checkcast     #11                 // class org/apache/hadoop/io/SequenceFile$Reader$LengthOption
     187: astore        6
     189: ldc           #13                 // class org/apache/hadoop/io/SequenceFile$Reader$BufferSizeOption
     191: aload_2
     192: invokestatic  #44                 // Method org/apache/hadoop/util/Options.getOption:(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
     195: checkcast     #13                 // class org/apache/hadoop/io/SequenceFile$Reader$BufferSizeOption
     198: astore        7
     200: ldc           #45                 // class org/apache/hadoop/io/SequenceFile$Reader$OnlyHeaderOption
     202: aload_2
     203: invokestatic  #44                 // Method org/apache/hadoop/util/Options.getOption:(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
     206: checkcast     #45                 // class org/apache/hadoop/io/SequenceFile$Reader$OnlyHeaderOption
     209: astore        8
     211: aload_3
     212: ifnonnull     219
     215: iconst_1
     216: goto          220
     219: iconst_0
     220: aload         4
     222: ifnonnull     229
     225: iconst_1
     226: goto          230
     229: iconst_0
     230: if_icmpne     243
     233: new           #46                 // class java/lang/IllegalArgumentException
     236: dup
     237: ldc           #47                 // String File or stream option must be specified
     239: invokespecial #48                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     242: athrow
     243: aload_3
     244: ifnonnull     262
     247: aload         7
     249: ifnull        262
     252: new           #46                 // class java/lang/IllegalArgumentException
     255: dup
     256: ldc           #49                 // String buffer size can only be set when a file is specified.
     258: invokespecial #48                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     261: athrow
     262: aconst_null
     263: astore        9
     265: aload_3
     266: ifnull        345
     269: aload_3
     270: invokevirtual #50                 // Method org/apache/hadoop/io/SequenceFile$Reader$FileOption.getValue:()Lorg/apache/hadoop/fs/Path;
     273: astore        9
     275: aload         9
     277: aload_1
     278: invokevirtual #51                 // Method org/apache/hadoop/fs/Path.getFileSystem:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
     281: astore        13
     283: aload         7
     285: ifnonnull     295
     288: aload_1
     289: invokestatic  #52                 // Method org/apache/hadoop/io/SequenceFile.access$100:(Lorg/apache/hadoop/conf/Configuration;)I
     292: goto          300
     295: aload         7
     297: invokevirtual #53                 // Method org/apache/hadoop/io/SequenceFile$Reader$BufferSizeOption.getValue:()I
     300: istore        14
     302: aconst_null
     303: aload         6
     305: if_acmpne     321
     308: aload         13
     310: aload         9
     312: invokevirtual #54                 // Method org/apache/hadoop/fs/FileSystem.getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
     315: invokevirtual #55                 // Method org/apache/hadoop/fs/FileStatus.getLen:()J
     318: goto          326
     321: aload         6
     323: invokevirtual #56                 // Method org/apache/hadoop/io/SequenceFile$Reader$LengthOption.getValue:()J
     326: lstore        11
     328: aload_0
     329: aload         13
     331: aload         9
     333: iload         14
     335: lload         11
     337: invokevirtual #57                 // Method openFile:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;IJ)Lorg/apache/hadoop/fs/FSDataInputStream;
     340: astore        10
     342: goto          371
     345: aconst_null
     346: aload         6
     348: if_acmpne     357
     351: ldc2_w        #59                 // long 9223372036854775807l
     354: goto          362
     357: aload         6
     359: invokevirtual #56                 // Method org/apache/hadoop/io/SequenceFile$Reader$LengthOption.getValue:()J
     362: lstore        11
     364: aload         4
     366: invokevirtual #61                 // Method org/apache/hadoop/io/SequenceFile$Reader$InputStreamOption.getValue:()Lorg/apache/hadoop/fs/FSDataInputStream;
     369: astore        10
     371: aload         5
     373: ifnonnull     380
     376: lconst_0
     377: goto          385
     380: aload         5
     382: invokevirtual #62                 // Method org/apache/hadoop/io/SequenceFile$Reader$StartOption.getValue:()J
     385: lstore        13
     387: aload_0
     388: aload         9
     390: aload         10
     392: lload         13
     394: lload         11
     396: aload_1
     397: aload         8
     399: ifnull        406
     402: iconst_1
     403: goto          407
     406: iconst_0
     407: invokespecial #63                 // Method initialize:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FSDataInputStream;JJLorg/apache/hadoop/conf/Configuration;Z)V
     410: return

  public org.apache.hadoop.io.SequenceFile$Reader(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_3
       2: iconst_1
       3: anewarray     #64                 // class org/apache/hadoop/io/SequenceFile$Reader$Option
       6: dup
       7: iconst_0
       8: aload_1
       9: aload_2
      10: invokevirtual #65                 // Method org/apache/hadoop/fs/FileSystem.makeQualified:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      13: invokestatic  #66                 // Method file:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/io/SequenceFile$Reader$Option;
      16: aastore
      17: invokespecial #67                 // Method "<init>":(Lorg/apache/hadoop/conf/Configuration;[Lorg/apache/hadoop/io/SequenceFile$Reader$Option;)V
      20: return

  public org.apache.hadoop.io.SequenceFile$Reader(org.apache.hadoop.fs.FSDataInputStream, int, long, long, org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload         7
       3: iconst_3
       4: anewarray     #64                 // class org/apache/hadoop/io/SequenceFile$Reader$Option
       7: dup
       8: iconst_0
       9: aload_1
      10: invokestatic  #68                 // Method stream:(Lorg/apache/hadoop/fs/FSDataInputStream;)Lorg/apache/hadoop/io/SequenceFile$Reader$Option;
      13: aastore
      14: dup
      15: iconst_1
      16: lload_3
      17: invokestatic  #69                 // Method start:(J)Lorg/apache/hadoop/io/SequenceFile$Reader$Option;
      20: aastore
      21: dup
      22: iconst_2
      23: lload         5
      25: invokestatic  #70                 // Method length:(J)Lorg/apache/hadoop/io/SequenceFile$Reader$Option;
      28: aastore
      29: invokespecial #67                 // Method "<init>":(Lorg/apache/hadoop/conf/Configuration;[Lorg/apache/hadoop/io/SequenceFile$Reader$Option;)V
      32: return

  private void initialize(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.FSDataInputStream, long, long, org.apache.hadoop.conf.Configuration, boolean) throws java.io.IOException;
    Code:
       0: aload_2
       1: ifnonnull     14
       4: new           #46                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #71                 // String in == null
      10: invokespecial #48                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: ifnonnull     24
      19: ldc           #72                 // String <unknown>
      21: goto          28
      24: aload_1
      25: invokevirtual #73                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
      28: putfield      #74                 // Field filename:Ljava/lang/String;
      31: aload_0
      32: aload_2
      33: putfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
      36: aload_0
      37: aload         7
      39: putfield      #76                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      42: iconst_0
      43: istore        9
      45: aload_0
      46: lload_3
      47: invokevirtual #77                 // Method seek:(J)V
      50: aload_0
      51: aload_0
      52: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
      55: invokevirtual #78                 // Method org/apache/hadoop/fs/FSDataInputStream.getPos:()J
      58: lload         5
      60: ladd
      61: putfield      #79                 // Field end:J
      64: aload_0
      65: getfield      #79                 // Field end:J
      68: lload         5
      70: lcmp
      71: ifge          81
      74: aload_0
      75: ldc2_w        #59                 // long 9223372036854775807l
      78: putfield      #79                 // Field end:J
      81: aload_0
      82: iload         8
      84: invokespecial #80                 // Method init:(Z)V
      87: iconst_1
      88: istore        9
      90: iload         9
      92: ifne          142
      95: invokestatic  #81                 // Method org/apache/hadoop/io/SequenceFile.access$500:()Lorg/slf4j/Logger;
      98: iconst_1
      99: anewarray     #82                 // class java/io/Closeable
     102: dup
     103: iconst_0
     104: aload_0
     105: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
     108: aastore
     109: invokestatic  #83                 // Method org/apache/hadoop/io/IOUtils.cleanupWithLogger:(Lorg/slf4j/Logger;[Ljava/io/Closeable;)V
     112: goto          142
     115: astore        10
     117: iload         9
     119: ifne          139
     122: invokestatic  #81                 // Method org/apache/hadoop/io/SequenceFile.access$500:()Lorg/slf4j/Logger;
     125: iconst_1
     126: anewarray     #82                 // class java/io/Closeable
     129: dup
     130: iconst_0
     131: aload_0
     132: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
     135: aastore
     136: invokestatic  #83                 // Method org/apache/hadoop/io/IOUtils.cleanupWithLogger:(Lorg/slf4j/Logger;[Ljava/io/Closeable;)V
     139: aload         10
     141: athrow
     142: return
    Exception table:
       from    to  target type
          45    90   115   any
         115   117   115   any

  protected org.apache.hadoop.fs.FSDataInputStream openFile(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, int, long) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_2
       2: iload_3
       3: invokevirtual #84                 // Method org/apache/hadoop/fs/FileSystem.open:(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;
       6: areturn

  private void init(boolean) throws java.io.IOException;
    Code:
       0: invokestatic  #85                 // Method org/apache/hadoop/io/SequenceFile.access$400:()[B
       3: arraylength
       4: newarray       byte
       6: astore_2
       7: new           #86                 // class java/lang/StringBuilder
      10: dup
      11: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
      14: aload_0
      15: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      18: ldc           #89                 // String  not a SequenceFile
      20: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: astore_3
      27: aload_0
      28: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
      31: aload_2
      32: invokevirtual #92                 // Method org/apache/hadoop/fs/FSDataInputStream.readFully:([B)V
      35: goto          49
      38: astore        4
      40: new           #93                 // class java/io/EOFException
      43: dup
      44: aload_3
      45: invokespecial #94                 // Method java/io/EOFException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: aload_2
      50: iconst_0
      51: baload
      52: invokestatic  #85                 // Method org/apache/hadoop/io/SequenceFile.access$400:()[B
      55: iconst_0
      56: baload
      57: if_icmpne     82
      60: aload_2
      61: iconst_1
      62: baload
      63: invokestatic  #85                 // Method org/apache/hadoop/io/SequenceFile.access$400:()[B
      66: iconst_1
      67: baload
      68: if_icmpne     82
      71: aload_2
      72: iconst_2
      73: baload
      74: invokestatic  #85                 // Method org/apache/hadoop/io/SequenceFile.access$400:()[B
      77: iconst_2
      78: baload
      79: if_icmpeq     109
      82: new           #95                 // class java/io/IOException
      85: dup
      86: new           #86                 // class java/lang/StringBuilder
      89: dup
      90: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
      93: aload_0
      94: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      97: ldc           #89                 // String  not a SequenceFile
      99: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     105: invokespecial #96                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     108: athrow
     109: aload_0
     110: aload_2
     111: iconst_3
     112: baload
     113: putfield      #97                 // Field version:B
     116: aload_0
     117: getfield      #97                 // Field version:B
     120: invokestatic  #85                 // Method org/apache/hadoop/io/SequenceFile.access$400:()[B
     123: iconst_3
     124: baload
     125: if_icmple     145
     128: new           #98                 // class org/apache/hadoop/io/VersionMismatchException
     131: dup
     132: invokestatic  #85                 // Method org/apache/hadoop/io/SequenceFile.access$400:()[B
     135: iconst_3
     136: baload
     137: aload_0
     138: getfield      #97                 // Field version:B
     141: invokespecial #99                 // Method org/apache/hadoop/io/VersionMismatchException."<init>":(BB)V
     144: athrow
     145: aload_0
     146: getfield      #97                 // Field version:B
     149: iconst_4
     150: if_icmpge     201
     153: new           #100                // class org/apache/hadoop/io/UTF8
     156: dup
     157: invokespecial #101                // Method org/apache/hadoop/io/UTF8."<init>":()V
     160: astore        4
     162: aload         4
     164: aload_0
     165: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
     168: invokevirtual #102                // Method org/apache/hadoop/io/UTF8.readFields:(Ljava/io/DataInput;)V
     171: aload_0
     172: aload         4
     174: invokevirtual #103                // Method org/apache/hadoop/io/UTF8.toStringChecked:()Ljava/lang/String;
     177: putfield      #104                // Field keyClassName:Ljava/lang/String;
     180: aload         4
     182: aload_0
     183: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
     186: invokevirtual #102                // Method org/apache/hadoop/io/UTF8.readFields:(Ljava/io/DataInput;)V
     189: aload_0
     190: aload         4
     192: invokevirtual #103                // Method org/apache/hadoop/io/UTF8.toStringChecked:()Ljava/lang/String;
     195: putfield      #105                // Field valClassName:Ljava/lang/String;
     198: goto          223
     201: aload_0
     202: aload_0
     203: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
     206: invokestatic  #106                // Method org/apache/hadoop/io/Text.readString:(Ljava/io/DataInput;)Ljava/lang/String;
     209: putfield      #104                // Field keyClassName:Ljava/lang/String;
     212: aload_0
     213: aload_0
     214: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
     217: invokestatic  #106                // Method org/apache/hadoop/io/Text.readString:(Ljava/io/DataInput;)Ljava/lang/String;
     220: putfield      #105                // Field valClassName:Ljava/lang/String;
     223: aload_0
     224: getfield      #97                 // Field version:B
     227: iconst_2
     228: if_icmple     245
     231: aload_0
     232: aload_0
     233: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
     236: invokevirtual #107                // Method org/apache/hadoop/fs/FSDataInputStream.readBoolean:()Z
     239: putfield      #108                // Field decompress:Z
     242: goto          250
     245: aload_0
     246: iconst_0
     247: putfield      #108                // Field decompress:Z
     250: aload_0
     251: getfield      #97                 // Field version:B
     254: iconst_4
     255: if_icmplt     272
     258: aload_0
     259: aload_0
     260: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
     263: invokevirtual #107                // Method org/apache/hadoop/fs/FSDataInputStream.readBoolean:()Z
     266: putfield      #109                // Field blockCompressed:Z
     269: goto          277
     272: aload_0
     273: iconst_0
     274: putfield      #109                // Field blockCompressed:Z
     277: aload_0
     278: getfield      #108                // Field decompress:Z
     281: ifeq          398
     284: aload_0
     285: getfield      #97                 // Field version:B
     288: iconst_5
     289: if_icmplt     371
     292: aload_0
     293: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
     296: invokestatic  #106                // Method org/apache/hadoop/io/Text.readString:(Ljava/io/DataInput;)Ljava/lang/String;
     299: astore        4
     301: aload_0
     302: getfield      #76                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
     305: aload         4
     307: invokevirtual #110                // Method org/apache/hadoop/conf/Configuration.getClassByName:(Ljava/lang/String;)Ljava/lang/Class;
     310: ldc           #111                // class org/apache/hadoop/io/compress/CompressionCodec
     312: invokevirtual #112                // Method java/lang/Class.asSubclass:(Ljava/lang/Class;)Ljava/lang/Class;
     315: astore        5
     317: aload_0
     318: aload         5
     320: aload_0
     321: getfield      #76                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
     324: invokestatic  #113                // Method org/apache/hadoop/util/ReflectionUtils.newInstance:(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;
     327: checkcast     #111                // class org/apache/hadoop/io/compress/CompressionCodec
     330: putfield      #19                 // Field codec:Lorg/apache/hadoop/io/compress/CompressionCodec;
     333: goto          368
     336: astore        5
     338: new           #46                 // class java/lang/IllegalArgumentException
     341: dup
     342: new           #86                 // class java/lang/StringBuilder
     345: dup
     346: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
     349: ldc           #115                // String Unknown codec:
     351: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     354: aload         4
     356: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     359: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     362: aload         5
     364: invokespecial #116                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     367: athrow
     368: goto          398
     371: aload_0
     372: new           #117                // class org/apache/hadoop/io/compress/DefaultCodec
     375: dup
     376: invokespecial #118                // Method org/apache/hadoop/io/compress/DefaultCodec."<init>":()V
     379: putfield      #19                 // Field codec:Lorg/apache/hadoop/io/compress/CompressionCodec;
     382: aload_0
     383: getfield      #19                 // Field codec:Lorg/apache/hadoop/io/compress/CompressionCodec;
     386: checkcast     #119                // class org/apache/hadoop/conf/Configurable
     389: aload_0
     390: getfield      #76                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
     393: invokeinterface #120,  2          // InterfaceMethod org/apache/hadoop/conf/Configurable.setConf:(Lorg/apache/hadoop/conf/Configuration;)V
     398: aload_0
     399: new           #121                // class org/apache/hadoop/io/SequenceFile$Metadata
     402: dup
     403: invokespecial #122                // Method org/apache/hadoop/io/SequenceFile$Metadata."<init>":()V
     406: putfield      #20                 // Field metadata:Lorg/apache/hadoop/io/SequenceFile$Metadata;
     409: aload_0
     410: getfield      #97                 // Field version:B
     413: bipush        6
     415: if_icmplt     429
     418: aload_0
     419: getfield      #20                 // Field metadata:Lorg/apache/hadoop/io/SequenceFile$Metadata;
     422: aload_0
     423: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
     426: invokevirtual #123                // Method org/apache/hadoop/io/SequenceFile$Metadata.readFields:(Ljava/io/DataInput;)V
     429: aload_0
     430: getfield      #97                 // Field version:B
     433: iconst_1
     434: if_icmple     459
     437: aload_0
     438: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
     441: aload_0
     442: getfield      #21                 // Field sync:[B
     445: invokevirtual #92                 // Method org/apache/hadoop/fs/FSDataInputStream.readFully:([B)V
     448: aload_0
     449: aload_0
     450: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
     453: invokevirtual #78                 // Method org/apache/hadoop/fs/FSDataInputStream.getPos:()J
     456: putfield      #124                // Field headerEnd:J
     459: iload_1
     460: ifne          920
     463: aload_0
     464: new           #125                // class org/apache/hadoop/io/DataInputBuffer
     467: dup
     468: invokespecial #126                // Method org/apache/hadoop/io/DataInputBuffer."<init>":()V
     471: putfield      #40                 // Field valBuffer:Lorg/apache/hadoop/io/DataInputBuffer;
     474: aload_0
     475: getfield      #108                // Field decompress:Z
     478: ifeq          531
     481: aload_0
     482: aload_0
     483: getfield      #19                 // Field codec:Lorg/apache/hadoop/io/compress/CompressionCodec;
     486: invokestatic  #127                // Method org/apache/hadoop/io/compress/CodecPool.getDecompressor:(Lorg/apache/hadoop/io/compress/CompressionCodec;)Lorg/apache/hadoop/io/compress/Decompressor;
     489: putfield      #43                 // Field valDecompressor:Lorg/apache/hadoop/io/compress/Decompressor;
     492: aload_0
     493: aload_0
     494: getfield      #19                 // Field codec:Lorg/apache/hadoop/io/compress/CompressionCodec;
     497: aload_0
     498: getfield      #40                 // Field valBuffer:Lorg/apache/hadoop/io/DataInputBuffer;
     501: aload_0
     502: getfield      #43                 // Field valDecompressor:Lorg/apache/hadoop/io/compress/Decompressor;
     505: invokeinterface #128,  3          // InterfaceMethod org/apache/hadoop/io/compress/CompressionCodec.createInputStream:(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/Decompressor;)Lorg/apache/hadoop/io/compress/CompressionInputStream;
     510: putfield      #41                 // Field valInFilter:Lorg/apache/hadoop/io/compress/CompressionInputStream;
     513: aload_0
     514: new           #129                // class java/io/DataInputStream
     517: dup
     518: aload_0
     519: getfield      #41                 // Field valInFilter:Lorg/apache/hadoop/io/compress/CompressionInputStream;
     522: invokespecial #130                // Method java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
     525: putfield      #42                 // Field valIn:Ljava/io/DataInputStream;
     528: goto          539
     531: aload_0
     532: aload_0
     533: getfield      #40                 // Field valBuffer:Lorg/apache/hadoop/io/DataInputBuffer;
     536: putfield      #42                 // Field valIn:Ljava/io/DataInputStream;
     539: aload_0
     540: getfield      #109                // Field blockCompressed:Z
     543: ifeq          720
     546: aload_0
     547: new           #125                // class org/apache/hadoop/io/DataInputBuffer
     550: dup
     551: invokespecial #126                // Method org/apache/hadoop/io/DataInputBuffer."<init>":()V
     554: putfield      #28                 // Field keyLenBuffer:Lorg/apache/hadoop/io/DataInputBuffer;
     557: aload_0
     558: new           #125                // class org/apache/hadoop/io/DataInputBuffer
     561: dup
     562: invokespecial #126                // Method org/apache/hadoop/io/DataInputBuffer."<init>":()V
     565: putfield      #32                 // Field keyBuffer:Lorg/apache/hadoop/io/DataInputBuffer;
     568: aload_0
     569: new           #125                // class org/apache/hadoop/io/DataInputBuffer
     572: dup
     573: invokespecial #126                // Method org/apache/hadoop/io/DataInputBuffer."<init>":()V
     576: putfield      #36                 // Field valLenBuffer:Lorg/apache/hadoop/io/DataInputBuffer;
     579: aload_0
     580: aload_0
     581: getfield      #19                 // Field codec:Lorg/apache/hadoop/io/compress/CompressionCodec;
     584: invokestatic  #127                // Method org/apache/hadoop/io/compress/CodecPool.getDecompressor:(Lorg/apache/hadoop/io/compress/CompressionCodec;)Lorg/apache/hadoop/io/compress/Decompressor;
     587: putfield      #31                 // Field keyLenDecompressor:Lorg/apache/hadoop/io/compress/Decompressor;
     590: aload_0
     591: aload_0
     592: getfield      #19                 // Field codec:Lorg/apache/hadoop/io/compress/CompressionCodec;
     595: aload_0
     596: getfield      #28                 // Field keyLenBuffer:Lorg/apache/hadoop/io/DataInputBuffer;
     599: aload_0
     600: getfield      #31                 // Field keyLenDecompressor:Lorg/apache/hadoop/io/compress/Decompressor;
     603: invokeinterface #128,  3          // InterfaceMethod org/apache/hadoop/io/compress/CompressionCodec.createInputStream:(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/Decompressor;)Lorg/apache/hadoop/io/compress/CompressionInputStream;
     608: putfield      #29                 // Field keyLenInFilter:Lorg/apache/hadoop/io/compress/CompressionInputStream;
     611: aload_0
     612: new           #129                // class java/io/DataInputStream
     615: dup
     616: aload_0
     617: getfield      #29                 // Field keyLenInFilter:Lorg/apache/hadoop/io/compress/CompressionInputStream;
     620: invokespecial #130                // Method java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
     623: putfield      #30                 // Field keyLenIn:Ljava/io/DataInputStream;
     626: aload_0
     627: aload_0
     628: getfield      #19                 // Field codec:Lorg/apache/hadoop/io/compress/CompressionCodec;
     631: invokestatic  #127                // Method org/apache/hadoop/io/compress/CodecPool.getDecompressor:(Lorg/apache/hadoop/io/compress/CompressionCodec;)Lorg/apache/hadoop/io/compress/Decompressor;
     634: putfield      #35                 // Field keyDecompressor:Lorg/apache/hadoop/io/compress/Decompressor;
     637: aload_0
     638: aload_0
     639: getfield      #19                 // Field codec:Lorg/apache/hadoop/io/compress/CompressionCodec;
     642: aload_0
     643: getfield      #32                 // Field keyBuffer:Lorg/apache/hadoop/io/DataInputBuffer;
     646: aload_0
     647: getfield      #35                 // Field keyDecompressor:Lorg/apache/hadoop/io/compress/Decompressor;
     650: invokeinterface #128,  3          // InterfaceMethod org/apache/hadoop/io/compress/CompressionCodec.createInputStream:(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/Decompressor;)Lorg/apache/hadoop/io/compress/CompressionInputStream;
     655: putfield      #33                 // Field keyInFilter:Lorg/apache/hadoop/io/compress/CompressionInputStream;
     658: aload_0
     659: new           #129                // class java/io/DataInputStream
     662: dup
     663: aload_0
     664: getfield      #33                 // Field keyInFilter:Lorg/apache/hadoop/io/compress/CompressionInputStream;
     667: invokespecial #130                // Method java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
     670: putfield      #34                 // Field keyIn:Ljava/io/DataInputStream;
     673: aload_0
     674: aload_0
     675: getfield      #19                 // Field codec:Lorg/apache/hadoop/io/compress/CompressionCodec;
     678: invokestatic  #127                // Method org/apache/hadoop/io/compress/CodecPool.getDecompressor:(Lorg/apache/hadoop/io/compress/CompressionCodec;)Lorg/apache/hadoop/io/compress/Decompressor;
     681: putfield      #39                 // Field valLenDecompressor:Lorg/apache/hadoop/io/compress/Decompressor;
     684: aload_0
     685: aload_0
     686: getfield      #19                 // Field codec:Lorg/apache/hadoop/io/compress/CompressionCodec;
     689: aload_0
     690: getfield      #36                 // Field valLenBuffer:Lorg/apache/hadoop/io/DataInputBuffer;
     693: aload_0
     694: getfield      #39                 // Field valLenDecompressor:Lorg/apache/hadoop/io/compress/Decompressor;
     697: invokeinterface #128,  3          // InterfaceMethod org/apache/hadoop/io/compress/CompressionCodec.createInputStream:(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/Decompressor;)Lorg/apache/hadoop/io/compress/CompressionInputStream;
     702: putfield      #37                 // Field valLenInFilter:Lorg/apache/hadoop/io/compress/CompressionInputStream;
     705: aload_0
     706: new           #129                // class java/io/DataInputStream
     709: dup
     710: aload_0
     711: getfield      #37                 // Field valLenInFilter:Lorg/apache/hadoop/io/compress/CompressionInputStream;
     714: invokespecial #130                // Method java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
     717: putfield      #38                 // Field valLenIn:Ljava/io/DataInputStream;
     720: new           #131                // class org/apache/hadoop/io/serializer/SerializationFactory
     723: dup
     724: aload_0
     725: getfield      #76                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
     728: invokespecial #132                // Method org/apache/hadoop/io/serializer/SerializationFactory."<init>":(Lorg/apache/hadoop/conf/Configuration;)V
     731: astore        4
     733: aload_0
     734: aload_0
     735: aload         4
     737: aload_0
     738: invokevirtual #133                // Method getKeyClass:()Ljava/lang/Class;
     741: invokespecial #134                // Method getDeserializer:(Lorg/apache/hadoop/io/serializer/SerializationFactory;Ljava/lang/Class;)Lorg/apache/hadoop/io/serializer/Deserializer;
     744: putfield      #135                // Field keyDeserializer:Lorg/apache/hadoop/io/serializer/Deserializer;
     747: aload_0
     748: getfield      #135                // Field keyDeserializer:Lorg/apache/hadoop/io/serializer/Deserializer;
     751: ifnonnull     802
     754: new           #95                 // class java/io/IOException
     757: dup
     758: new           #86                 // class java/lang/StringBuilder
     761: dup
     762: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
     765: ldc           #136                // String Could not find a deserializer for the Key class: \'
     767: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     770: aload_0
     771: invokevirtual #133                // Method getKeyClass:()Ljava/lang/Class;
     774: invokevirtual #137                // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
     777: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     780: ldc           #138                // String \'. Please ensure that the configuration \'
     782: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     785: ldc           #140                // String io.serializations
     787: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     790: ldc           #141                // String \' is properly configured, if you\'re using custom serialization.
     792: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     795: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     798: invokespecial #96                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     801: athrow
     802: aload_0
     803: getfield      #109                // Field blockCompressed:Z
     806: ifne          825
     809: aload_0
     810: getfield      #135                // Field keyDeserializer:Lorg/apache/hadoop/io/serializer/Deserializer;
     813: aload_0
     814: getfield      #40                 // Field valBuffer:Lorg/apache/hadoop/io/DataInputBuffer;
     817: invokeinterface #142,  2          // InterfaceMethod org/apache/hadoop/io/serializer/Deserializer.open:(Ljava/io/InputStream;)V
     822: goto          838
     825: aload_0
     826: getfield      #135                // Field keyDeserializer:Lorg/apache/hadoop/io/serializer/Deserializer;
     829: aload_0
     830: getfield      #34                 // Field keyIn:Ljava/io/DataInputStream;
     833: invokeinterface #142,  2          // InterfaceMethod org/apache/hadoop/io/serializer/Deserializer.open:(Ljava/io/InputStream;)V
     838: aload_0
     839: aload_0
     840: aload         4
     842: aload_0
     843: invokevirtual #143                // Method getValueClass:()Ljava/lang/Class;
     846: invokespecial #134                // Method getDeserializer:(Lorg/apache/hadoop/io/serializer/SerializationFactory;Ljava/lang/Class;)Lorg/apache/hadoop/io/serializer/Deserializer;
     849: putfield      #144                // Field valDeserializer:Lorg/apache/hadoop/io/serializer/Deserializer;
     852: aload_0
     853: getfield      #144                // Field valDeserializer:Lorg/apache/hadoop/io/serializer/Deserializer;
     856: ifnonnull     907
     859: new           #95                 // class java/io/IOException
     862: dup
     863: new           #86                 // class java/lang/StringBuilder
     866: dup
     867: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
     870: ldc           #145                // String Could not find a deserializer for the Value class: \'
     872: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     875: aload_0
     876: invokevirtual #143                // Method getValueClass:()Ljava/lang/Class;
     879: invokevirtual #137                // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
     882: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     885: ldc           #138                // String \'. Please ensure that the configuration \'
     887: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     890: ldc           #140                // String io.serializations
     892: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     895: ldc           #141                // String \' is properly configured, if you\'re using custom serialization.
     897: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     900: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     903: invokespecial #96                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     906: athrow
     907: aload_0
     908: getfield      #144                // Field valDeserializer:Lorg/apache/hadoop/io/serializer/Deserializer;
     911: aload_0
     912: getfield      #42                 // Field valIn:Ljava/io/DataInputStream;
     915: invokeinterface #142,  2          // InterfaceMethod org/apache/hadoop/io/serializer/Deserializer.open:(Ljava/io/InputStream;)V
     920: return
    Exception table:
       from    to  target type
          27    35    38   Class java/io/EOFException
         301   333   336   Class java/lang/ClassNotFoundException

  private org.apache.hadoop.io.serializer.Deserializer getDeserializer(org.apache.hadoop.io.serializer.SerializationFactory, java.lang.Class);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #146                // Method org/apache/hadoop/io/serializer/SerializationFactory.getDeserializer:(Ljava/lang/Class;)Lorg/apache/hadoop/io/serializer/Deserializer;
       5: areturn

  public synchronized void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #31                 // Field keyLenDecompressor:Lorg/apache/hadoop/io/compress/Decompressor;
       4: invokestatic  #147                // Method org/apache/hadoop/io/compress/CodecPool.returnDecompressor:(Lorg/apache/hadoop/io/compress/Decompressor;)V
       7: aload_0
       8: getfield      #35                 // Field keyDecompressor:Lorg/apache/hadoop/io/compress/Decompressor;
      11: invokestatic  #147                // Method org/apache/hadoop/io/compress/CodecPool.returnDecompressor:(Lorg/apache/hadoop/io/compress/Decompressor;)V
      14: aload_0
      15: getfield      #39                 // Field valLenDecompressor:Lorg/apache/hadoop/io/compress/Decompressor;
      18: invokestatic  #147                // Method org/apache/hadoop/io/compress/CodecPool.returnDecompressor:(Lorg/apache/hadoop/io/compress/Decompressor;)V
      21: aload_0
      22: getfield      #43                 // Field valDecompressor:Lorg/apache/hadoop/io/compress/Decompressor;
      25: invokestatic  #147                // Method org/apache/hadoop/io/compress/CodecPool.returnDecompressor:(Lorg/apache/hadoop/io/compress/Decompressor;)V
      28: aload_0
      29: aload_0
      30: aconst_null
      31: dup_x1
      32: putfield      #35                 // Field keyDecompressor:Lorg/apache/hadoop/io/compress/Decompressor;
      35: putfield      #31                 // Field keyLenDecompressor:Lorg/apache/hadoop/io/compress/Decompressor;
      38: aload_0
      39: aload_0
      40: aconst_null
      41: dup_x1
      42: putfield      #43                 // Field valDecompressor:Lorg/apache/hadoop/io/compress/Decompressor;
      45: putfield      #39                 // Field valLenDecompressor:Lorg/apache/hadoop/io/compress/Decompressor;
      48: aload_0
      49: getfield      #135                // Field keyDeserializer:Lorg/apache/hadoop/io/serializer/Deserializer;
      52: ifnull        64
      55: aload_0
      56: getfield      #135                // Field keyDeserializer:Lorg/apache/hadoop/io/serializer/Deserializer;
      59: invokeinterface #148,  1          // InterfaceMethod org/apache/hadoop/io/serializer/Deserializer.close:()V
      64: aload_0
      65: getfield      #144                // Field valDeserializer:Lorg/apache/hadoop/io/serializer/Deserializer;
      68: ifnull        80
      71: aload_0
      72: getfield      #144                // Field valDeserializer:Lorg/apache/hadoop/io/serializer/Deserializer;
      75: invokeinterface #148,  1          // InterfaceMethod org/apache/hadoop/io/serializer/Deserializer.close:()V
      80: aload_0
      81: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
      84: invokevirtual #149                // Method org/apache/hadoop/fs/FSDataInputStream.close:()V
      87: return

  public java.lang.String getKeyClassName();
    Code:
       0: aload_0
       1: getfield      #104                // Field keyClassName:Ljava/lang/String;
       4: areturn

  public synchronized java.lang.Class<?> getKeyClass();
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #150                // Field keyClass:Ljava/lang/Class;
       5: if_acmpne     36
       8: aload_0
       9: aload_0
      10: invokevirtual #151                // Method getKeyClassName:()Ljava/lang/String;
      13: aload_0
      14: getfield      #76                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      17: invokestatic  #152                // Method org/apache/hadoop/io/WritableName.getClass:(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;
      20: putfield      #150                // Field keyClass:Ljava/lang/Class;
      23: goto          36
      26: astore_1
      27: new           #153                // class java/lang/RuntimeException
      30: dup
      31: aload_1
      32: invokespecial #154                // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      35: athrow
      36: aload_0
      37: getfield      #150                // Field keyClass:Ljava/lang/Class;
      40: areturn
    Exception table:
       from    to  target type
           8    23    26   Class java/io/IOException

  public java.lang.String getValueClassName();
    Code:
       0: aload_0
       1: getfield      #105                // Field valClassName:Ljava/lang/String;
       4: areturn

  public synchronized java.lang.Class<?> getValueClass();
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #155                // Field valClass:Ljava/lang/Class;
       5: if_acmpne     36
       8: aload_0
       9: aload_0
      10: invokevirtual #156                // Method getValueClassName:()Ljava/lang/String;
      13: aload_0
      14: getfield      #76                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      17: invokestatic  #152                // Method org/apache/hadoop/io/WritableName.getClass:(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;
      20: putfield      #155                // Field valClass:Ljava/lang/Class;
      23: goto          36
      26: astore_1
      27: new           #153                // class java/lang/RuntimeException
      30: dup
      31: aload_1
      32: invokespecial #154                // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      35: athrow
      36: aload_0
      37: getfield      #155                // Field valClass:Ljava/lang/Class;
      40: areturn
    Exception table:
       from    to  target type
           8    23    26   Class java/io/IOException

  public boolean isCompressed();
    Code:
       0: aload_0
       1: getfield      #108                // Field decompress:Z
       4: ireturn

  public boolean isBlockCompressed();
    Code:
       0: aload_0
       1: getfield      #109                // Field blockCompressed:Z
       4: ireturn

  public org.apache.hadoop.io.compress.CompressionCodec getCompressionCodec();
    Code:
       0: aload_0
       1: getfield      #19                 // Field codec:Lorg/apache/hadoop/io/compress/CompressionCodec;
       4: areturn

  private byte[] getSync();
    Code:
       0: aload_0
       1: getfield      #21                 // Field sync:[B
       4: areturn

  private byte getVersion();
    Code:
       0: aload_0
       1: getfield      #97                 // Field version:B
       4: ireturn

  public org.apache.hadoop.io.SequenceFile$CompressionType getCompressionType();
    Code:
       0: aload_0
       1: getfield      #108                // Field decompress:Z
       4: ifeq          24
       7: aload_0
       8: getfield      #109                // Field blockCompressed:Z
      11: ifeq          20
      14: getstatic     #157                // Field org/apache/hadoop/io/SequenceFile$CompressionType.BLOCK:Lorg/apache/hadoop/io/SequenceFile$CompressionType;
      17: goto          23
      20: getstatic     #158                // Field org/apache/hadoop/io/SequenceFile$CompressionType.RECORD:Lorg/apache/hadoop/io/SequenceFile$CompressionType;
      23: areturn
      24: getstatic     #159                // Field org/apache/hadoop/io/SequenceFile$CompressionType.NONE:Lorg/apache/hadoop/io/SequenceFile$CompressionType;
      27: areturn

  public org.apache.hadoop.io.SequenceFile$Metadata getMetadata();
    Code:
       0: aload_0
       1: getfield      #20                 // Field metadata:Lorg/apache/hadoop/io/SequenceFile$Metadata;
       4: areturn

  org.apache.hadoop.conf.Configuration getConf();
    Code:
       0: aload_0
       1: getfield      #76                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
       4: areturn

  private synchronized void readBuffer(org.apache.hadoop.io.DataInputBuffer, org.apache.hadoop.io.compress.CompressionInputStream) throws java.io.IOException;
    Code:
       0: new           #16                 // class org/apache/hadoop/io/DataOutputBuffer
       3: dup
       4: invokespecial #17                 // Method org/apache/hadoop/io/DataOutputBuffer."<init>":()V
       7: astore_3
       8: aload_0
       9: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
      12: invokestatic  #160                // Method org/apache/hadoop/io/WritableUtils.readVInt:(Ljava/io/DataInput;)I
      15: istore        4
      17: aload_3
      18: aload_0
      19: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
      22: iload         4
      24: invokevirtual #161                // Method org/apache/hadoop/io/DataOutputBuffer.write:(Ljava/io/DataInput;I)V
      27: aload_1
      28: aload_3
      29: invokevirtual #162                // Method org/apache/hadoop/io/DataOutputBuffer.getData:()[B
      32: iconst_0
      33: aload_3
      34: invokevirtual #163                // Method org/apache/hadoop/io/DataOutputBuffer.getLength:()I
      37: invokevirtual #164                // Method org/apache/hadoop/io/DataInputBuffer.reset:([BII)V
      40: aload_3
      41: invokevirtual #165                // Method org/apache/hadoop/io/DataOutputBuffer.close:()V
      44: goto          56
      47: astore        5
      49: aload_3
      50: invokevirtual #165                // Method org/apache/hadoop/io/DataOutputBuffer.close:()V
      53: aload         5
      55: athrow
      56: aload_2
      57: invokevirtual #166                // Method org/apache/hadoop/io/compress/CompressionInputStream.resetState:()V
      60: return
    Exception table:
       from    to  target type
           8    40    47   any
          47    49    47   any

  private synchronized void readBlock() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #24                 // Field lazyDecompress:Z
       4: ifeq          60
       7: aload_0
       8: getfield      #25                 // Field valuesDecompressed:Z
      11: ifne          60
      14: aload_0
      15: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
      18: aload_0
      19: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
      22: invokestatic  #160                // Method org/apache/hadoop/io/WritableUtils.readVInt:(Ljava/io/DataInput;)I
      25: i2l
      26: aload_0
      27: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
      30: invokevirtual #78                 // Method org/apache/hadoop/fs/FSDataInputStream.getPos:()J
      33: ladd
      34: invokevirtual #167                // Method org/apache/hadoop/fs/FSDataInputStream.seek:(J)V
      37: aload_0
      38: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
      41: aload_0
      42: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
      45: invokestatic  #160                // Method org/apache/hadoop/io/WritableUtils.readVInt:(Ljava/io/DataInput;)I
      48: i2l
      49: aload_0
      50: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
      53: invokevirtual #78                 // Method org/apache/hadoop/fs/FSDataInputStream.getPos:()J
      56: ladd
      57: invokevirtual #167                // Method org/apache/hadoop/fs/FSDataInputStream.seek:(J)V
      60: aload_0
      61: iconst_0
      62: putfield      #26                 // Field noBufferedKeys:I
      65: aload_0
      66: iconst_0
      67: putfield      #27                 // Field noBufferedValues:I
      70: aload_0
      71: iconst_0
      72: putfield      #23                 // Field noBufferedRecords:I
      75: aload_0
      76: iconst_0
      77: putfield      #25                 // Field valuesDecompressed:Z
      80: aload_0
      81: getfield      #21                 // Field sync:[B
      84: ifnull        130
      87: aload_0
      88: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
      91: invokevirtual #168                // Method org/apache/hadoop/fs/FSDataInputStream.readInt:()I
      94: pop
      95: aload_0
      96: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
      99: aload_0
     100: getfield      #22                 // Field syncCheck:[B
     103: invokevirtual #92                 // Method org/apache/hadoop/fs/FSDataInputStream.readFully:([B)V
     106: aload_0
     107: getfield      #21                 // Field sync:[B
     110: aload_0
     111: getfield      #22                 // Field syncCheck:[B
     114: invokestatic  #169                // Method java/util/Arrays.equals:([B[B)Z
     117: ifne          130
     120: new           #95                 // class java/io/IOException
     123: dup
     124: ldc           #170                // String File is corrupt!
     126: invokespecial #96                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     129: athrow
     130: aload_0
     131: iconst_1
     132: putfield      #171                // Field syncSeen:Z
     135: aload_0
     136: aload_0
     137: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
     140: invokestatic  #160                // Method org/apache/hadoop/io/WritableUtils.readVInt:(Ljava/io/DataInput;)I
     143: putfield      #23                 // Field noBufferedRecords:I
     146: aload_0
     147: aload_0
     148: getfield      #28                 // Field keyLenBuffer:Lorg/apache/hadoop/io/DataInputBuffer;
     151: aload_0
     152: getfield      #29                 // Field keyLenInFilter:Lorg/apache/hadoop/io/compress/CompressionInputStream;
     155: invokespecial #172                // Method readBuffer:(Lorg/apache/hadoop/io/DataInputBuffer;Lorg/apache/hadoop/io/compress/CompressionInputStream;)V
     158: aload_0
     159: aload_0
     160: getfield      #32                 // Field keyBuffer:Lorg/apache/hadoop/io/DataInputBuffer;
     163: aload_0
     164: getfield      #33                 // Field keyInFilter:Lorg/apache/hadoop/io/compress/CompressionInputStream;
     167: invokespecial #172                // Method readBuffer:(Lorg/apache/hadoop/io/DataInputBuffer;Lorg/apache/hadoop/io/compress/CompressionInputStream;)V
     170: aload_0
     171: aload_0
     172: getfield      #23                 // Field noBufferedRecords:I
     175: putfield      #26                 // Field noBufferedKeys:I
     178: aload_0
     179: getfield      #24                 // Field lazyDecompress:Z
     182: ifne          222
     185: aload_0
     186: aload_0
     187: getfield      #36                 // Field valLenBuffer:Lorg/apache/hadoop/io/DataInputBuffer;
     190: aload_0
     191: getfield      #37                 // Field valLenInFilter:Lorg/apache/hadoop/io/compress/CompressionInputStream;
     194: invokespecial #172                // Method readBuffer:(Lorg/apache/hadoop/io/DataInputBuffer;Lorg/apache/hadoop/io/compress/CompressionInputStream;)V
     197: aload_0
     198: aload_0
     199: getfield      #40                 // Field valBuffer:Lorg/apache/hadoop/io/DataInputBuffer;
     202: aload_0
     203: getfield      #41                 // Field valInFilter:Lorg/apache/hadoop/io/compress/CompressionInputStream;
     206: invokespecial #172                // Method readBuffer:(Lorg/apache/hadoop/io/DataInputBuffer;Lorg/apache/hadoop/io/compress/CompressionInputStream;)V
     209: aload_0
     210: aload_0
     211: getfield      #23                 // Field noBufferedRecords:I
     214: putfield      #27                 // Field noBufferedValues:I
     217: aload_0
     218: iconst_1
     219: putfield      #25                 // Field valuesDecompressed:Z
     222: return

  private synchronized void seekToCurrentValue() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #109                // Field blockCompressed:Z
       4: ifne          31
       7: aload_0
       8: getfield      #108                // Field decompress:Z
      11: ifeq          21
      14: aload_0
      15: getfield      #41                 // Field valInFilter:Lorg/apache/hadoop/io/compress/CompressionInputStream;
      18: invokevirtual #166                // Method org/apache/hadoop/io/compress/CompressionInputStream.resetState:()V
      21: aload_0
      22: getfield      #40                 // Field valBuffer:Lorg/apache/hadoop/io/DataInputBuffer;
      25: invokevirtual #173                // Method org/apache/hadoop/io/DataInputBuffer.reset:()V
      28: goto          175
      31: aload_0
      32: getfield      #24                 // Field lazyDecompress:Z
      35: ifeq          82
      38: aload_0
      39: getfield      #25                 // Field valuesDecompressed:Z
      42: ifne          82
      45: aload_0
      46: aload_0
      47: getfield      #36                 // Field valLenBuffer:Lorg/apache/hadoop/io/DataInputBuffer;
      50: aload_0
      51: getfield      #37                 // Field valLenInFilter:Lorg/apache/hadoop/io/compress/CompressionInputStream;
      54: invokespecial #172                // Method readBuffer:(Lorg/apache/hadoop/io/DataInputBuffer;Lorg/apache/hadoop/io/compress/CompressionInputStream;)V
      57: aload_0
      58: aload_0
      59: getfield      #40                 // Field valBuffer:Lorg/apache/hadoop/io/DataInputBuffer;
      62: aload_0
      63: getfield      #41                 // Field valInFilter:Lorg/apache/hadoop/io/compress/CompressionInputStream;
      66: invokespecial #172                // Method readBuffer:(Lorg/apache/hadoop/io/DataInputBuffer;Lorg/apache/hadoop/io/compress/CompressionInputStream;)V
      69: aload_0
      70: aload_0
      71: getfield      #23                 // Field noBufferedRecords:I
      74: putfield      #27                 // Field noBufferedValues:I
      77: aload_0
      78: iconst_1
      79: putfield      #25                 // Field valuesDecompressed:Z
      82: iconst_0
      83: istore_1
      84: aload_0
      85: getfield      #26                 // Field noBufferedKeys:I
      88: iconst_1
      89: iadd
      90: istore_2
      91: aload_0
      92: getfield      #27                 // Field noBufferedValues:I
      95: istore_3
      96: iload_3
      97: iload_2
      98: if_icmple     127
     101: iload_1
     102: aload_0
     103: getfield      #38                 // Field valLenIn:Ljava/io/DataInputStream;
     106: invokestatic  #160                // Method org/apache/hadoop/io/WritableUtils.readVInt:(Ljava/io/DataInput;)I
     109: iadd
     110: istore_1
     111: aload_0
     112: dup
     113: getfield      #27                 // Field noBufferedValues:I
     116: iconst_1
     117: isub
     118: putfield      #27                 // Field noBufferedValues:I
     121: iinc          3, -1
     124: goto          96
     127: iload_1
     128: ifle          175
     131: aload_0
     132: getfield      #42                 // Field valIn:Ljava/io/DataInputStream;
     135: iload_1
     136: invokevirtual #174                // Method java/io/DataInputStream.skipBytes:(I)I
     139: iload_1
     140: if_icmpeq     175
     143: new           #95                 // class java/io/IOException
     146: dup
     147: new           #86                 // class java/lang/StringBuilder
     150: dup
     151: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
     154: ldc           #175                // String Failed to seek to
     156: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: iload_2
     160: invokevirtual #176                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     163: ldc           #177                // String (th) value!
     165: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     168: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     171: invokespecial #96                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     174: athrow
     175: return

  public synchronized void getCurrentValue(org.apache.hadoop.io.Writable) throws java.io.IOException;
    Code:
       0: aload_1
       1: instanceof    #119                // class org/apache/hadoop/conf/Configurable
       4: ifeq          20
       7: aload_1
       8: checkcast     #119                // class org/apache/hadoop/conf/Configurable
      11: aload_0
      12: getfield      #76                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      15: invokeinterface #120,  2          // InterfaceMethod org/apache/hadoop/conf/Configurable.setConf:(Lorg/apache/hadoop/conf/Configuration;)V
      20: aload_0
      21: invokespecial #178                // Method seekToCurrentValue:()V
      24: aload_0
      25: getfield      #109                // Field blockCompressed:Z
      28: ifne          146
      31: aload_1
      32: aload_0
      33: getfield      #42                 // Field valIn:Ljava/io/DataInputStream;
      36: invokeinterface #179,  2          // InterfaceMethod org/apache/hadoop/io/Writable.readFields:(Ljava/io/DataInput;)V
      41: aload_0
      42: getfield      #42                 // Field valIn:Ljava/io/DataInputStream;
      45: invokevirtual #180                // Method java/io/DataInputStream.read:()I
      48: ifle          216
      51: invokestatic  #81                 // Method org/apache/hadoop/io/SequenceFile.access$500:()Lorg/slf4j/Logger;
      54: new           #86                 // class java/lang/StringBuilder
      57: dup
      58: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
      61: ldc           #181                // String available bytes:
      63: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: aload_0
      67: getfield      #42                 // Field valIn:Ljava/io/DataInputStream;
      70: invokevirtual #182                // Method java/io/DataInputStream.available:()I
      73: invokevirtual #176                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      76: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: invokeinterface #183,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      84: new           #95                 // class java/io/IOException
      87: dup
      88: new           #86                 // class java/lang/StringBuilder
      91: dup
      92: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
      95: aload_1
      96: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      99: ldc           #184                // String  read
     101: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: aload_0
     105: getfield      #40                 // Field valBuffer:Lorg/apache/hadoop/io/DataInputBuffer;
     108: invokevirtual #185                // Method org/apache/hadoop/io/DataInputBuffer.getPosition:()I
     111: aload_0
     112: getfield      #186                // Field keyLength:I
     115: isub
     116: invokevirtual #176                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     119: ldc           #187                // String  bytes, should read
     121: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: aload_0
     125: getfield      #40                 // Field valBuffer:Lorg/apache/hadoop/io/DataInputBuffer;
     128: invokevirtual #188                // Method org/apache/hadoop/io/DataInputBuffer.getLength:()I
     131: aload_0
     132: getfield      #186                // Field keyLength:I
     135: isub
     136: invokevirtual #176                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     139: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     142: invokespecial #96                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     145: athrow
     146: aload_0
     147: getfield      #38                 // Field valLenIn:Ljava/io/DataInputStream;
     150: invokestatic  #160                // Method org/apache/hadoop/io/WritableUtils.readVInt:(Ljava/io/DataInput;)I
     153: istore_2
     154: aload_1
     155: aload_0
     156: getfield      #42                 // Field valIn:Ljava/io/DataInputStream;
     159: invokeinterface #179,  2          // InterfaceMethod org/apache/hadoop/io/Writable.readFields:(Ljava/io/DataInput;)V
     164: aload_0
     165: dup
     166: getfield      #27                 // Field noBufferedValues:I
     169: iconst_1
     170: isub
     171: putfield      #27                 // Field noBufferedValues:I
     174: iload_2
     175: ifge          216
     178: invokestatic  #81                 // Method org/apache/hadoop/io/SequenceFile.access$500:()Lorg/slf4j/Logger;
     181: invokeinterface #189,  1          // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     186: ifeq          216
     189: invokestatic  #81                 // Method org/apache/hadoop/io/SequenceFile.access$500:()Lorg/slf4j/Logger;
     192: new           #86                 // class java/lang/StringBuilder
     195: dup
     196: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
     199: aload_1
     200: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     203: ldc           #190                // String  is a zero-length value
     205: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     208: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     211: invokeinterface #191,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     216: return

  public synchronized java.lang.Object getCurrentValue(java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_1
       1: instanceof    #119                // class org/apache/hadoop/conf/Configurable
       4: ifeq          20
       7: aload_1
       8: checkcast     #119                // class org/apache/hadoop/conf/Configurable
      11: aload_0
      12: getfield      #76                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      15: invokeinterface #120,  2          // InterfaceMethod org/apache/hadoop/conf/Configurable.setConf:(Lorg/apache/hadoop/conf/Configuration;)V
      20: aload_0
      21: invokespecial #178                // Method seekToCurrentValue:()V
      24: aload_0
      25: getfield      #109                // Field blockCompressed:Z
      28: ifne          142
      31: aload_0
      32: aload_1
      33: invokespecial #192                // Method deserializeValue:(Ljava/lang/Object;)Ljava/lang/Object;
      36: astore_1
      37: aload_0
      38: getfield      #42                 // Field valIn:Ljava/io/DataInputStream;
      41: invokevirtual #180                // Method java/io/DataInputStream.read:()I
      44: ifle          208
      47: invokestatic  #81                 // Method org/apache/hadoop/io/SequenceFile.access$500:()Lorg/slf4j/Logger;
      50: new           #86                 // class java/lang/StringBuilder
      53: dup
      54: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
      57: ldc           #181                // String available bytes:
      59: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_0
      63: getfield      #42                 // Field valIn:Ljava/io/DataInputStream;
      66: invokevirtual #182                // Method java/io/DataInputStream.available:()I
      69: invokevirtual #176                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      72: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: invokeinterface #183,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      80: new           #95                 // class java/io/IOException
      83: dup
      84: new           #86                 // class java/lang/StringBuilder
      87: dup
      88: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
      91: aload_1
      92: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      95: ldc           #184                // String  read
      97: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: aload_0
     101: getfield      #40                 // Field valBuffer:Lorg/apache/hadoop/io/DataInputBuffer;
     104: invokevirtual #185                // Method org/apache/hadoop/io/DataInputBuffer.getPosition:()I
     107: aload_0
     108: getfield      #186                // Field keyLength:I
     111: isub
     112: invokevirtual #176                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     115: ldc           #187                // String  bytes, should read
     117: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: aload_0
     121: getfield      #40                 // Field valBuffer:Lorg/apache/hadoop/io/DataInputBuffer;
     124: invokevirtual #188                // Method org/apache/hadoop/io/DataInputBuffer.getLength:()I
     127: aload_0
     128: getfield      #186                // Field keyLength:I
     131: isub
     132: invokevirtual #176                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     135: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     138: invokespecial #96                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     141: athrow
     142: aload_0
     143: getfield      #38                 // Field valLenIn:Ljava/io/DataInputStream;
     146: invokestatic  #160                // Method org/apache/hadoop/io/WritableUtils.readVInt:(Ljava/io/DataInput;)I
     149: istore_2
     150: aload_0
     151: aload_1
     152: invokespecial #192                // Method deserializeValue:(Ljava/lang/Object;)Ljava/lang/Object;
     155: astore_1
     156: aload_0
     157: dup
     158: getfield      #27                 // Field noBufferedValues:I
     161: iconst_1
     162: isub
     163: putfield      #27                 // Field noBufferedValues:I
     166: iload_2
     167: ifge          208
     170: invokestatic  #81                 // Method org/apache/hadoop/io/SequenceFile.access$500:()Lorg/slf4j/Logger;
     173: invokeinterface #189,  1          // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     178: ifeq          208
     181: invokestatic  #81                 // Method org/apache/hadoop/io/SequenceFile.access$500:()Lorg/slf4j/Logger;
     184: new           #86                 // class java/lang/StringBuilder
     187: dup
     188: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
     191: aload_1
     192: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     195: ldc           #190                // String  is a zero-length value
     197: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     200: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     203: invokeinterface #191,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     208: aload_1
     209: areturn

  private java.lang.Object deserializeValue(java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #144                // Field valDeserializer:Lorg/apache/hadoop/io/serializer/Deserializer;
       4: aload_1
       5: invokeinterface #193,  2          // InterfaceMethod org/apache/hadoop/io/serializer/Deserializer.deserialize:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public synchronized boolean next(org.apache.hadoop.io.Writable) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #194                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: aload_0
       5: invokevirtual #133                // Method getKeyClass:()Ljava/lang/Class;
       8: if_acmpeq     56
      11: new           #95                 // class java/io/IOException
      14: dup
      15: new           #86                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #195                // String wrong key class:
      24: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_1
      28: invokevirtual #194                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      31: invokevirtual #196                // Method java/lang/Class.getName:()Ljava/lang/String;
      34: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: ldc           #197                // String  is not
      39: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_0
      43: getfield      #150                // Field keyClass:Ljava/lang/Class;
      46: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      49: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokespecial #96                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: aload_0
      57: getfield      #109                // Field blockCompressed:Z
      60: ifne          194
      63: aload_0
      64: getfield      #18                 // Field outBuf:Lorg/apache/hadoop/io/DataOutputBuffer;
      67: invokevirtual #198                // Method org/apache/hadoop/io/DataOutputBuffer.reset:()Lorg/apache/hadoop/io/DataOutputBuffer;
      70: pop
      71: aload_0
      72: aload_0
      73: aload_0
      74: getfield      #18                 // Field outBuf:Lorg/apache/hadoop/io/DataOutputBuffer;
      77: invokevirtual #199                // Method next:(Lorg/apache/hadoop/io/DataOutputBuffer;)I
      80: putfield      #186                // Field keyLength:I
      83: aload_0
      84: getfield      #186                // Field keyLength:I
      87: ifge          92
      90: iconst_0
      91: ireturn
      92: aload_0
      93: getfield      #40                 // Field valBuffer:Lorg/apache/hadoop/io/DataInputBuffer;
      96: aload_0
      97: getfield      #18                 // Field outBuf:Lorg/apache/hadoop/io/DataOutputBuffer;
     100: invokevirtual #162                // Method org/apache/hadoop/io/DataOutputBuffer.getData:()[B
     103: aload_0
     104: getfield      #18                 // Field outBuf:Lorg/apache/hadoop/io/DataOutputBuffer;
     107: invokevirtual #163                // Method org/apache/hadoop/io/DataOutputBuffer.getLength:()I
     110: invokevirtual #200                // Method org/apache/hadoop/io/DataInputBuffer.reset:([BI)V
     113: aload_1
     114: aload_0
     115: getfield      #40                 // Field valBuffer:Lorg/apache/hadoop/io/DataInputBuffer;
     118: invokeinterface #179,  2          // InterfaceMethod org/apache/hadoop/io/Writable.readFields:(Ljava/io/DataInput;)V
     123: aload_0
     124: getfield      #40                 // Field valBuffer:Lorg/apache/hadoop/io/DataInputBuffer;
     127: iconst_0
     128: invokevirtual #201                // Method org/apache/hadoop/io/DataInputBuffer.mark:(I)V
     131: aload_0
     132: getfield      #40                 // Field valBuffer:Lorg/apache/hadoop/io/DataInputBuffer;
     135: invokevirtual #185                // Method org/apache/hadoop/io/DataInputBuffer.getPosition:()I
     138: aload_0
     139: getfield      #186                // Field keyLength:I
     142: if_icmpeq     250
     145: new           #95                 // class java/io/IOException
     148: dup
     149: new           #86                 // class java/lang/StringBuilder
     152: dup
     153: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
     156: aload_1
     157: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     160: ldc           #184                // String  read
     162: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     165: aload_0
     166: getfield      #40                 // Field valBuffer:Lorg/apache/hadoop/io/DataInputBuffer;
     169: invokevirtual #185                // Method org/apache/hadoop/io/DataInputBuffer.getPosition:()I
     172: invokevirtual #176                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     175: ldc           #187                // String  bytes, should read
     177: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     180: aload_0
     181: getfield      #186                // Field keyLength:I
     184: invokevirtual #176                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     187: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     190: invokespecial #96                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     193: athrow
     194: aload_0
     195: iconst_0
     196: putfield      #171                // Field syncSeen:Z
     199: aload_0
     200: getfield      #26                 // Field noBufferedKeys:I
     203: ifne          216
     206: aload_0
     207: invokespecial #202                // Method readBlock:()V
     210: goto          216
     213: astore_2
     214: iconst_0
     215: ireturn
     216: aload_0
     217: getfield      #30                 // Field keyLenIn:Ljava/io/DataInputStream;
     220: invokestatic  #160                // Method org/apache/hadoop/io/WritableUtils.readVInt:(Ljava/io/DataInput;)I
     223: istore_2
     224: iload_2
     225: ifge          230
     228: iconst_0
     229: ireturn
     230: aload_1
     231: aload_0
     232: getfield      #34                 // Field keyIn:Ljava/io/DataInputStream;
     235: invokeinterface #179,  2          // InterfaceMethod org/apache/hadoop/io/Writable.readFields:(Ljava/io/DataInput;)V
     240: aload_0
     241: dup
     242: getfield      #26                 // Field noBufferedKeys:I
     245: iconst_1
     246: isub
     247: putfield      #26                 // Field noBufferedKeys:I
     250: iconst_1
     251: ireturn
    Exception table:
       from    to  target type
         206   210   213   Class java/io/EOFException

  public synchronized boolean next(org.apache.hadoop.io.Writable, org.apache.hadoop.io.Writable) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokevirtual #194                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: aload_0
       5: invokevirtual #143                // Method getValueClass:()Ljava/lang/Class;
       8: if_acmpeq     50
      11: new           #95                 // class java/io/IOException
      14: dup
      15: new           #86                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #203                // String wrong value class:
      24: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_2
      28: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #197                // String  is not
      33: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #155                // Field valClass:Ljava/lang/Class;
      40: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokespecial #96                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: aload_0
      51: aload_1
      52: invokevirtual #204                // Method next:(Lorg/apache/hadoop/io/Writable;)Z
      55: istore_3
      56: iload_3
      57: ifeq          65
      60: aload_0
      61: aload_2
      62: invokevirtual #205                // Method getCurrentValue:(Lorg/apache/hadoop/io/Writable;)V
      65: iload_3
      66: ireturn

  private synchronized int readRecordLength() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
       4: invokevirtual #78                 // Method org/apache/hadoop/fs/FSDataInputStream.getPos:()J
       7: aload_0
       8: getfield      #79                 // Field end:J
      11: lcmp
      12: iflt          17
      15: iconst_m1
      16: ireturn
      17: aload_0
      18: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
      21: invokevirtual #168                // Method org/apache/hadoop/fs/FSDataInputStream.readInt:()I
      24: istore_1
      25: aload_0
      26: getfield      #97                 // Field version:B
      29: iconst_1
      30: if_icmple     113
      33: aload_0
      34: getfield      #21                 // Field sync:[B
      37: ifnull        113
      40: iload_1
      41: iconst_m1
      42: if_icmpne     113
      45: aload_0
      46: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
      49: aload_0
      50: getfield      #22                 // Field syncCheck:[B
      53: invokevirtual #92                 // Method org/apache/hadoop/fs/FSDataInputStream.readFully:([B)V
      56: aload_0
      57: getfield      #21                 // Field sync:[B
      60: aload_0
      61: getfield      #22                 // Field syncCheck:[B
      64: invokestatic  #169                // Method java/util/Arrays.equals:([B[B)Z
      67: ifne          80
      70: new           #95                 // class java/io/IOException
      73: dup
      74: ldc           #170                // String File is corrupt!
      76: invokespecial #96                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      79: athrow
      80: aload_0
      81: iconst_1
      82: putfield      #171                // Field syncSeen:Z
      85: aload_0
      86: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
      89: invokevirtual #78                 // Method org/apache/hadoop/fs/FSDataInputStream.getPos:()J
      92: aload_0
      93: getfield      #79                 // Field end:J
      96: lcmp
      97: iflt          102
     100: iconst_m1
     101: ireturn
     102: aload_0
     103: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
     106: invokevirtual #168                // Method org/apache/hadoop/fs/FSDataInputStream.readInt:()I
     109: istore_1
     110: goto          118
     113: aload_0
     114: iconst_0
     115: putfield      #171                // Field syncSeen:Z
     118: iload_1
     119: ireturn

  synchronized int next(org.apache.hadoop.io.DataOutputBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #109                // Field blockCompressed:Z
       4: ifeq          17
       7: new           #95                 // class java/io/IOException
      10: dup
      11: ldc           #206                // String Unsupported call for block-compressed SequenceFiles - use SequenceFile.Reader.next(DataOutputStream, ValueBytes)
      13: invokespecial #96                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: invokespecial #207                // Method readRecordLength:()I
      21: istore_2
      22: iload_2
      23: iconst_m1
      24: if_icmpne     29
      27: iconst_m1
      28: ireturn
      29: aload_0
      30: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
      33: invokevirtual #168                // Method org/apache/hadoop/fs/FSDataInputStream.readInt:()I
      36: istore_3
      37: aload_1
      38: aload_0
      39: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
      42: iload_2
      43: invokevirtual #161                // Method org/apache/hadoop/io/DataOutputBuffer.write:(Ljava/io/DataInput;I)V
      46: iload_3
      47: ireturn
      48: astore_2
      49: aload_0
      50: aload_2
      51: invokespecial #209                // Method handleChecksumException:(Lorg/apache/hadoop/fs/ChecksumException;)V
      54: aload_0
      55: aload_1
      56: invokevirtual #199                // Method next:(Lorg/apache/hadoop/io/DataOutputBuffer;)I
      59: ireturn
    Exception table:
       from    to  target type
          17    28    48   Class org/apache/hadoop/fs/ChecksumException
          29    47    48   Class org/apache/hadoop/fs/ChecksumException

  public org.apache.hadoop.io.SequenceFile$ValueBytes createValueBytes();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #108                // Field decompress:Z
       6: ifeq          16
       9: aload_0
      10: getfield      #109                // Field blockCompressed:Z
      13: ifeq          28
      16: new           #210                // class org/apache/hadoop/io/SequenceFile$UncompressedBytes
      19: dup
      20: aconst_null
      21: invokespecial #211                // Method org/apache/hadoop/io/SequenceFile$UncompressedBytes."<init>":(Lorg/apache/hadoop/io/SequenceFile$1;)V
      24: astore_1
      25: goto          41
      28: new           #212                // class org/apache/hadoop/io/SequenceFile$CompressedBytes
      31: dup
      32: aload_0
      33: getfield      #19                 // Field codec:Lorg/apache/hadoop/io/compress/CompressionCodec;
      36: aconst_null
      37: invokespecial #213                // Method org/apache/hadoop/io/SequenceFile$CompressedBytes."<init>":(Lorg/apache/hadoop/io/compress/CompressionCodec;Lorg/apache/hadoop/io/SequenceFile$1;)V
      40: astore_1
      41: aload_1
      42: areturn

  public synchronized int nextRaw(org.apache.hadoop.io.DataOutputBuffer, org.apache.hadoop.io.SequenceFile$ValueBytes) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #109                // Field blockCompressed:Z
       4: ifne          90
       7: aload_0
       8: invokespecial #207                // Method readRecordLength:()I
      11: istore_3
      12: iload_3
      13: iconst_m1
      14: if_icmpne     19
      17: iconst_m1
      18: ireturn
      19: aload_0
      20: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
      23: invokevirtual #168                // Method org/apache/hadoop/fs/FSDataInputStream.readInt:()I
      26: istore        4
      28: iload_3
      29: iload         4
      31: isub
      32: istore        5
      34: aload_1
      35: aload_0
      36: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
      39: iload         4
      41: invokevirtual #161                // Method org/apache/hadoop/io/DataOutputBuffer.write:(Ljava/io/DataInput;I)V
      44: aload_0
      45: getfield      #108                // Field decompress:Z
      48: ifeq          71
      51: aload_2
      52: checkcast     #212                // class org/apache/hadoop/io/SequenceFile$CompressedBytes
      55: astore        6
      57: aload         6
      59: aload_0
      60: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
      63: iload         5
      65: invokestatic  #214                // Method org/apache/hadoop/io/SequenceFile$CompressedBytes.access$1600:(Lorg/apache/hadoop/io/SequenceFile$CompressedBytes;Ljava/io/DataInputStream;I)V
      68: goto          88
      71: aload_2
      72: checkcast     #210                // class org/apache/hadoop/io/SequenceFile$UncompressedBytes
      75: astore        6
      77: aload         6
      79: aload_0
      80: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
      83: iload         5
      85: invokestatic  #215                // Method org/apache/hadoop/io/SequenceFile$UncompressedBytes.access$1700:(Lorg/apache/hadoop/io/SequenceFile$UncompressedBytes;Ljava/io/DataInputStream;I)V
      88: iload_3
      89: ireturn
      90: aload_0
      91: iconst_0
      92: putfield      #171                // Field syncSeen:Z
      95: aload_0
      96: getfield      #26                 // Field noBufferedKeys:I
      99: ifne          129
     102: aload_0
     103: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
     106: invokevirtual #78                 // Method org/apache/hadoop/fs/FSDataInputStream.getPos:()J
     109: aload_0
     110: getfield      #79                 // Field end:J
     113: lcmp
     114: iflt          119
     117: iconst_m1
     118: ireturn
     119: aload_0
     120: invokespecial #202                // Method readBlock:()V
     123: goto          129
     126: astore_3
     127: iconst_m1
     128: ireturn
     129: aload_0
     130: getfield      #30                 // Field keyLenIn:Ljava/io/DataInputStream;
     133: invokestatic  #160                // Method org/apache/hadoop/io/WritableUtils.readVInt:(Ljava/io/DataInput;)I
     136: istore_3
     137: iload_3
     138: ifge          151
     141: new           #95                 // class java/io/IOException
     144: dup
     145: ldc           #216                // String zero length key found!
     147: invokespecial #96                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     150: athrow
     151: aload_1
     152: aload_0
     153: getfield      #34                 // Field keyIn:Ljava/io/DataInputStream;
     156: iload_3
     157: invokevirtual #161                // Method org/apache/hadoop/io/DataOutputBuffer.write:(Ljava/io/DataInput;I)V
     160: aload_0
     161: dup
     162: getfield      #26                 // Field noBufferedKeys:I
     165: iconst_1
     166: isub
     167: putfield      #26                 // Field noBufferedKeys:I
     170: aload_0
     171: invokespecial #178                // Method seekToCurrentValue:()V
     174: aload_0
     175: getfield      #38                 // Field valLenIn:Ljava/io/DataInputStream;
     178: invokestatic  #160                // Method org/apache/hadoop/io/WritableUtils.readVInt:(Ljava/io/DataInput;)I
     181: istore        4
     183: aload_2
     184: checkcast     #210                // class org/apache/hadoop/io/SequenceFile$UncompressedBytes
     187: astore        5
     189: aload         5
     191: aload_0
     192: getfield      #42                 // Field valIn:Ljava/io/DataInputStream;
     195: iload         4
     197: invokestatic  #215                // Method org/apache/hadoop/io/SequenceFile$UncompressedBytes.access$1700:(Lorg/apache/hadoop/io/SequenceFile$UncompressedBytes;Ljava/io/DataInputStream;I)V
     200: aload_0
     201: dup
     202: getfield      #27                 // Field noBufferedValues:I
     205: iconst_1
     206: isub
     207: putfield      #27                 // Field noBufferedValues:I
     210: iload_3
     211: iload         4
     213: iadd
     214: ireturn
    Exception table:
       from    to  target type
         119   123   126   Class java/io/EOFException

  public synchronized int nextRawKey(org.apache.hadoop.io.DataOutputBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #109                // Field blockCompressed:Z
       4: ifne          53
       7: aload_0
       8: aload_0
       9: invokespecial #207                // Method readRecordLength:()I
      12: putfield      #217                // Field recordLength:I
      15: aload_0
      16: getfield      #217                // Field recordLength:I
      19: iconst_m1
      20: if_icmpne     25
      23: iconst_m1
      24: ireturn
      25: aload_0
      26: aload_0
      27: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
      30: invokevirtual #168                // Method org/apache/hadoop/fs/FSDataInputStream.readInt:()I
      33: putfield      #186                // Field keyLength:I
      36: aload_1
      37: aload_0
      38: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
      41: aload_0
      42: getfield      #186                // Field keyLength:I
      45: invokevirtual #161                // Method org/apache/hadoop/io/DataOutputBuffer.write:(Ljava/io/DataInput;I)V
      48: aload_0
      49: getfield      #186                // Field keyLength:I
      52: ireturn
      53: aload_0
      54: iconst_0
      55: putfield      #171                // Field syncSeen:Z
      58: aload_0
      59: getfield      #26                 // Field noBufferedKeys:I
      62: ifne          92
      65: aload_0
      66: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
      69: invokevirtual #78                 // Method org/apache/hadoop/fs/FSDataInputStream.getPos:()J
      72: aload_0
      73: getfield      #79                 // Field end:J
      76: lcmp
      77: iflt          82
      80: iconst_m1
      81: ireturn
      82: aload_0
      83: invokespecial #202                // Method readBlock:()V
      86: goto          92
      89: astore_2
      90: iconst_m1
      91: ireturn
      92: aload_0
      93: getfield      #30                 // Field keyLenIn:Ljava/io/DataInputStream;
      96: invokestatic  #160                // Method org/apache/hadoop/io/WritableUtils.readVInt:(Ljava/io/DataInput;)I
      99: istore_2
     100: iload_2
     101: ifge          114
     104: new           #95                 // class java/io/IOException
     107: dup
     108: ldc           #216                // String zero length key found!
     110: invokespecial #96                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     113: athrow
     114: aload_1
     115: aload_0
     116: getfield      #34                 // Field keyIn:Ljava/io/DataInputStream;
     119: iload_2
     120: invokevirtual #161                // Method org/apache/hadoop/io/DataOutputBuffer.write:(Ljava/io/DataInput;I)V
     123: aload_0
     124: dup
     125: getfield      #26                 // Field noBufferedKeys:I
     128: iconst_1
     129: isub
     130: putfield      #26                 // Field noBufferedKeys:I
     133: iload_2
     134: ireturn
    Exception table:
       from    to  target type
          82    86    89   Class java/io/EOFException

  public synchronized java.lang.Object next(java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnull        60
       4: aload_1
       5: invokevirtual #194                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: aload_0
       9: invokevirtual #133                // Method getKeyClass:()Ljava/lang/Class;
      12: if_acmpeq     60
      15: new           #95                 // class java/io/IOException
      18: dup
      19: new           #86                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #195                // String wrong key class:
      28: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_1
      32: invokevirtual #194                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      35: invokevirtual #196                // Method java/lang/Class.getName:()Ljava/lang/String;
      38: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: ldc           #197                // String  is not
      43: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_0
      47: getfield      #150                // Field keyClass:Ljava/lang/Class;
      50: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      53: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: invokespecial #96                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      59: athrow
      60: aload_0
      61: getfield      #109                // Field blockCompressed:Z
      64: ifne          194
      67: aload_0
      68: getfield      #18                 // Field outBuf:Lorg/apache/hadoop/io/DataOutputBuffer;
      71: invokevirtual #198                // Method org/apache/hadoop/io/DataOutputBuffer.reset:()Lorg/apache/hadoop/io/DataOutputBuffer;
      74: pop
      75: aload_0
      76: aload_0
      77: aload_0
      78: getfield      #18                 // Field outBuf:Lorg/apache/hadoop/io/DataOutputBuffer;
      81: invokevirtual #199                // Method next:(Lorg/apache/hadoop/io/DataOutputBuffer;)I
      84: putfield      #186                // Field keyLength:I
      87: aload_0
      88: getfield      #186                // Field keyLength:I
      91: ifge          96
      94: aconst_null
      95: areturn
      96: aload_0
      97: getfield      #40                 // Field valBuffer:Lorg/apache/hadoop/io/DataInputBuffer;
     100: aload_0
     101: getfield      #18                 // Field outBuf:Lorg/apache/hadoop/io/DataOutputBuffer;
     104: invokevirtual #162                // Method org/apache/hadoop/io/DataOutputBuffer.getData:()[B
     107: aload_0
     108: getfield      #18                 // Field outBuf:Lorg/apache/hadoop/io/DataOutputBuffer;
     111: invokevirtual #163                // Method org/apache/hadoop/io/DataOutputBuffer.getLength:()I
     114: invokevirtual #200                // Method org/apache/hadoop/io/DataInputBuffer.reset:([BI)V
     117: aload_0
     118: aload_1
     119: invokespecial #218                // Method deserializeKey:(Ljava/lang/Object;)Ljava/lang/Object;
     122: astore_1
     123: aload_0
     124: getfield      #40                 // Field valBuffer:Lorg/apache/hadoop/io/DataInputBuffer;
     127: iconst_0
     128: invokevirtual #201                // Method org/apache/hadoop/io/DataInputBuffer.mark:(I)V
     131: aload_0
     132: getfield      #40                 // Field valBuffer:Lorg/apache/hadoop/io/DataInputBuffer;
     135: invokevirtual #185                // Method org/apache/hadoop/io/DataInputBuffer.getPosition:()I
     138: aload_0
     139: getfield      #186                // Field keyLength:I
     142: if_icmpeq     246
     145: new           #95                 // class java/io/IOException
     148: dup
     149: new           #86                 // class java/lang/StringBuilder
     152: dup
     153: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
     156: aload_1
     157: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     160: ldc           #184                // String  read
     162: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     165: aload_0
     166: getfield      #40                 // Field valBuffer:Lorg/apache/hadoop/io/DataInputBuffer;
     169: invokevirtual #185                // Method org/apache/hadoop/io/DataInputBuffer.getPosition:()I
     172: invokevirtual #176                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     175: ldc           #187                // String  bytes, should read
     177: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     180: aload_0
     181: getfield      #186                // Field keyLength:I
     184: invokevirtual #176                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     187: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     190: invokespecial #96                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     193: athrow
     194: aload_0
     195: iconst_0
     196: putfield      #171                // Field syncSeen:Z
     199: aload_0
     200: getfield      #26                 // Field noBufferedKeys:I
     203: ifne          216
     206: aload_0
     207: invokespecial #202                // Method readBlock:()V
     210: goto          216
     213: astore_2
     214: aconst_null
     215: areturn
     216: aload_0
     217: getfield      #30                 // Field keyLenIn:Ljava/io/DataInputStream;
     220: invokestatic  #160                // Method org/apache/hadoop/io/WritableUtils.readVInt:(Ljava/io/DataInput;)I
     223: istore_2
     224: iload_2
     225: ifge          230
     228: aconst_null
     229: areturn
     230: aload_0
     231: aload_1
     232: invokespecial #218                // Method deserializeKey:(Ljava/lang/Object;)Ljava/lang/Object;
     235: astore_1
     236: aload_0
     237: dup
     238: getfield      #26                 // Field noBufferedKeys:I
     241: iconst_1
     242: isub
     243: putfield      #26                 // Field noBufferedKeys:I
     246: aload_1
     247: areturn
    Exception table:
       from    to  target type
         206   210   213   Class java/io/EOFException

  private java.lang.Object deserializeKey(java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #135                // Field keyDeserializer:Lorg/apache/hadoop/io/serializer/Deserializer;
       4: aload_1
       5: invokeinterface #193,  2          // InterfaceMethod org/apache/hadoop/io/serializer/Deserializer.deserialize:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public synchronized int nextRawValue(org.apache.hadoop.io.SequenceFile$ValueBytes) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #178                // Method seekToCurrentValue:()V
       4: aload_0
       5: getfield      #109                // Field blockCompressed:Z
       8: ifne          61
      11: aload_0
      12: getfield      #217                // Field recordLength:I
      15: aload_0
      16: getfield      #186                // Field keyLength:I
      19: isub
      20: istore_2
      21: aload_0
      22: getfield      #108                // Field decompress:Z
      25: ifeq          45
      28: aload_1
      29: checkcast     #212                // class org/apache/hadoop/io/SequenceFile$CompressedBytes
      32: astore_3
      33: aload_3
      34: aload_0
      35: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
      38: iload_2
      39: invokestatic  #214                // Method org/apache/hadoop/io/SequenceFile$CompressedBytes.access$1600:(Lorg/apache/hadoop/io/SequenceFile$CompressedBytes;Ljava/io/DataInputStream;I)V
      42: goto          59
      45: aload_1
      46: checkcast     #210                // class org/apache/hadoop/io/SequenceFile$UncompressedBytes
      49: astore_3
      50: aload_3
      51: aload_0
      52: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
      55: iload_2
      56: invokestatic  #215                // Method org/apache/hadoop/io/SequenceFile$UncompressedBytes.access$1700:(Lorg/apache/hadoop/io/SequenceFile$UncompressedBytes;Ljava/io/DataInputStream;I)V
      59: iload_2
      60: ireturn
      61: aload_0
      62: getfield      #38                 // Field valLenIn:Ljava/io/DataInputStream;
      65: invokestatic  #160                // Method org/apache/hadoop/io/WritableUtils.readVInt:(Ljava/io/DataInput;)I
      68: istore_2
      69: aload_1
      70: checkcast     #210                // class org/apache/hadoop/io/SequenceFile$UncompressedBytes
      73: astore_3
      74: aload_3
      75: aload_0
      76: getfield      #42                 // Field valIn:Ljava/io/DataInputStream;
      79: iload_2
      80: invokestatic  #215                // Method org/apache/hadoop/io/SequenceFile$UncompressedBytes.access$1700:(Lorg/apache/hadoop/io/SequenceFile$UncompressedBytes;Ljava/io/DataInputStream;I)V
      83: aload_0
      84: dup
      85: getfield      #27                 // Field noBufferedValues:I
      88: iconst_1
      89: isub
      90: putfield      #27                 // Field noBufferedValues:I
      93: iload_2
      94: ireturn

  private void handleChecksumException(org.apache.hadoop.fs.ChecksumException) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #76                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
       4: ldc           #219                // String io.skip.checksum.errors
       6: iconst_0
       7: invokevirtual #220                // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
      10: ifeq          73
      13: invokestatic  #81                 // Method org/apache/hadoop/io/SequenceFile.access$500:()Lorg/slf4j/Logger;
      16: new           #86                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #221                // String Bad checksum at
      25: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: invokevirtual #222                // Method getPosition:()J
      32: invokevirtual #223                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      35: ldc           #224                // String . Skipping entries.
      37: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokeinterface #225,  2          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      48: aload_0
      49: aload_0
      50: invokevirtual #222                // Method getPosition:()J
      53: aload_0
      54: getfield      #76                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      57: ldc           #226                // String io.bytes.per.checksum
      59: sipush        512
      62: invokevirtual #227                // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      65: i2l
      66: ladd
      67: invokevirtual #228                // Method sync:(J)V
      70: goto          75
      73: aload_1
      74: athrow
      75: return

  synchronized void ignoreSync();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #21                 // Field sync:[B
       5: return

  public synchronized void seek(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
       4: lload_1
       5: invokevirtual #167                // Method org/apache/hadoop/fs/FSDataInputStream.seek:(J)V
       8: aload_0
       9: getfield      #109                // Field blockCompressed:Z
      12: ifeq          25
      15: aload_0
      16: iconst_0
      17: putfield      #26                 // Field noBufferedKeys:I
      20: aload_0
      21: iconst_1
      22: putfield      #25                 // Field valuesDecompressed:Z
      25: return

  public synchronized void sync(long) throws java.io.IOException;
    Code:
       0: lload_1
       1: ldc2_w        #229                // long 20l
       4: ladd
       5: aload_0
       6: getfield      #79                 // Field end:J
       9: lcmp
      10: iflt          22
      13: aload_0
      14: aload_0
      15: getfield      #79                 // Field end:J
      18: invokevirtual #77                 // Method seek:(J)V
      21: return
      22: lload_1
      23: aload_0
      24: getfield      #124                // Field headerEnd:J
      27: lcmp
      28: ifge          48
      31: aload_0
      32: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
      35: aload_0
      36: getfield      #124                // Field headerEnd:J
      39: invokevirtual #167                // Method org/apache/hadoop/fs/FSDataInputStream.seek:(J)V
      42: aload_0
      43: iconst_1
      44: putfield      #171                // Field syncSeen:Z
      47: return
      48: aload_0
      49: lload_1
      50: ldc2_w        #231                // long 4l
      53: ladd
      54: invokevirtual #77                 // Method seek:(J)V
      57: aload_0
      58: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
      61: aload_0
      62: getfield      #22                 // Field syncCheck:[B
      65: invokevirtual #92                 // Method org/apache/hadoop/fs/FSDataInputStream.readFully:([B)V
      68: aload_0
      69: getfield      #21                 // Field sync:[B
      72: arraylength
      73: istore_3
      74: iconst_0
      75: istore        4
      77: aload_0
      78: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
      81: invokevirtual #78                 // Method org/apache/hadoop/fs/FSDataInputStream.getPos:()J
      84: aload_0
      85: getfield      #79                 // Field end:J
      88: lcmp
      89: ifge          179
      92: iconst_0
      93: istore        5
      95: iload         5
      97: iload_3
      98: if_icmpge     132
     101: aload_0
     102: getfield      #21                 // Field sync:[B
     105: iload         5
     107: baload
     108: aload_0
     109: getfield      #22                 // Field syncCheck:[B
     112: iload         4
     114: iload         5
     116: iadd
     117: iload_3
     118: irem
     119: baload
     120: if_icmpeq     126
     123: goto          132
     126: iinc          5, 1
     129: goto          95
     132: iload         5
     134: iload_3
     135: if_icmpne     157
     138: aload_0
     139: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
     142: aload_0
     143: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
     146: invokevirtual #78                 // Method org/apache/hadoop/fs/FSDataInputStream.getPos:()J
     149: ldc2_w        #229                // long 20l
     152: lsub
     153: invokevirtual #167                // Method org/apache/hadoop/fs/FSDataInputStream.seek:(J)V
     156: return
     157: aload_0
     158: getfield      #22                 // Field syncCheck:[B
     161: iload         4
     163: iload_3
     164: irem
     165: aload_0
     166: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
     169: invokevirtual #233                // Method org/apache/hadoop/fs/FSDataInputStream.readByte:()B
     172: bastore
     173: iinc          4, 1
     176: goto          77
     179: goto          188
     182: astore_3
     183: aload_0
     184: aload_3
     185: invokespecial #209                // Method handleChecksumException:(Lorg/apache/hadoop/fs/ChecksumException;)V
     188: return
    Exception table:
       from    to  target type
          48   156   182   Class org/apache/hadoop/fs/ChecksumException
         157   179   182   Class org/apache/hadoop/fs/ChecksumException

  public synchronized boolean syncSeen();
    Code:
       0: aload_0
       1: getfield      #171                // Field syncSeen:Z
       4: ireturn

  public synchronized long getPosition() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #75                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
       4: invokevirtual #78                 // Method org/apache/hadoop/fs/FSDataInputStream.getPos:()J
       7: lreturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #74                 // Field filename:Ljava/lang/String;
       4: areturn

  static byte access$300(org.apache.hadoop.io.SequenceFile$Reader);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method getVersion:()B
       4: ireturn

  static byte[] access$800(org.apache.hadoop.io.SequenceFile$Reader);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method getSync:()[B
       4: areturn
}
