Compiled from "FSDataInputStream.java"
public class org.apache.hadoop.fs.FSDataInputStream extends java.io.DataInputStream implements org.apache.hadoop.fs.Seekable,org.apache.hadoop.fs.PositionedReadable,org.apache.hadoop.fs.ByteBufferReadable,org.apache.hadoop.fs.HasFileDescriptor,org.apache.hadoop.fs.CanSetDropBehind,org.apache.hadoop.fs.CanSetReadahead,org.apache.hadoop.fs.HasEnhancedByteBufferAccess,org.apache.hadoop.fs.CanUnbuffer,org.apache.hadoop.fs.StreamCapabilities {
  private final org.apache.hadoop.util.IdentityHashStore<java.nio.ByteBuffer, org.apache.hadoop.io.ByteBufferPool> extendedReadBuffers;

  private static final java.util.EnumSet<org.apache.hadoop.fs.ReadOption> EMPTY_READ_OPTIONS_SET;

  public org.apache.hadoop.fs.FSDataInputStream(java.io.InputStream);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
       5: aload_0
       6: new           #2                  // class org/apache/hadoop/util/IdentityHashStore
       9: dup
      10: iconst_0
      11: invokespecial #3                  // Method org/apache/hadoop/util/IdentityHashStore."<init>":(I)V
      14: putfield      #4                  // Field extendedReadBuffers:Lorg/apache/hadoop/util/IdentityHashStore;
      17: aload_1
      18: instanceof    #5                  // class org/apache/hadoop/fs/Seekable
      21: ifeq          31
      24: aload_1
      25: instanceof    #6                  // class org/apache/hadoop/fs/PositionedReadable
      28: ifne          41
      31: new           #7                  // class java/lang/IllegalArgumentException
      34: dup
      35: ldc           #8                  // String In is not an instance of Seekable or PositionedReadable
      37: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: return

  public void seek(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field in:Ljava/io/InputStream;
       4: checkcast     #5                  // class org/apache/hadoop/fs/Seekable
       7: lload_1
       8: invokeinterface #11,  3           // InterfaceMethod org/apache/hadoop/fs/Seekable.seek:(J)V
      13: return

  public long getPos() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field in:Ljava/io/InputStream;
       4: checkcast     #5                  // class org/apache/hadoop/fs/Seekable
       7: invokeinterface #12,  1           // InterfaceMethod org/apache/hadoop/fs/Seekable.getPos:()J
      12: lreturn

  public int read(long, byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field in:Ljava/io/InputStream;
       4: checkcast     #6                  // class org/apache/hadoop/fs/PositionedReadable
       7: lload_1
       8: aload_3
       9: iload         4
      11: iload         5
      13: invokeinterface #13,  6           // InterfaceMethod org/apache/hadoop/fs/PositionedReadable.read:(J[BII)I
      18: ireturn

  public void readFully(long, byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field in:Ljava/io/InputStream;
       4: checkcast     #6                  // class org/apache/hadoop/fs/PositionedReadable
       7: lload_1
       8: aload_3
       9: iload         4
      11: iload         5
      13: invokeinterface #14,  6           // InterfaceMethod org/apache/hadoop/fs/PositionedReadable.readFully:(J[BII)V
      18: return

  public void readFully(long, byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field in:Ljava/io/InputStream;
       4: checkcast     #6                  // class org/apache/hadoop/fs/PositionedReadable
       7: lload_1
       8: aload_3
       9: iconst_0
      10: aload_3
      11: arraylength
      12: invokeinterface #14,  6           // InterfaceMethod org/apache/hadoop/fs/PositionedReadable.readFully:(J[BII)V
      17: return

  public boolean seekToNewSource(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field in:Ljava/io/InputStream;
       4: checkcast     #5                  // class org/apache/hadoop/fs/Seekable
       7: lload_1
       8: invokeinterface #15,  3           // InterfaceMethod org/apache/hadoop/fs/Seekable.seekToNewSource:(J)Z
      13: ireturn

  public java.io.InputStream getWrappedStream();
    Code:
       0: aload_0
       1: getfield      #10                 // Field in:Ljava/io/InputStream;
       4: areturn

  public int read(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field in:Ljava/io/InputStream;
       4: instanceof    #16                 // class org/apache/hadoop/fs/ByteBufferReadable
       7: ifeq          24
      10: aload_0
      11: getfield      #10                 // Field in:Ljava/io/InputStream;
      14: checkcast     #16                 // class org/apache/hadoop/fs/ByteBufferReadable
      17: aload_1
      18: invokeinterface #17,  2           // InterfaceMethod org/apache/hadoop/fs/ByteBufferReadable.read:(Ljava/nio/ByteBuffer;)I
      23: ireturn
      24: new           #18                 // class java/lang/UnsupportedOperationException
      27: dup
      28: ldc           #19                 // String Byte-buffer read unsupported by input stream
      30: invokespecial #20                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      33: athrow

  public java.io.FileDescriptor getFileDescriptor() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field in:Ljava/io/InputStream;
       4: instanceof    #21                 // class org/apache/hadoop/fs/HasFileDescriptor
       7: ifeq          23
      10: aload_0
      11: getfield      #10                 // Field in:Ljava/io/InputStream;
      14: checkcast     #21                 // class org/apache/hadoop/fs/HasFileDescriptor
      17: invokeinterface #22,  1           // InterfaceMethod org/apache/hadoop/fs/HasFileDescriptor.getFileDescriptor:()Ljava/io/FileDescriptor;
      22: areturn
      23: aload_0
      24: getfield      #10                 // Field in:Ljava/io/InputStream;
      27: instanceof    #23                 // class java/io/FileInputStream
      30: ifeq          44
      33: aload_0
      34: getfield      #10                 // Field in:Ljava/io/InputStream;
      37: checkcast     #23                 // class java/io/FileInputStream
      40: invokevirtual #24                 // Method java/io/FileInputStream.getFD:()Ljava/io/FileDescriptor;
      43: areturn
      44: aconst_null
      45: areturn

  public void setReadahead(java.lang.Long) throws java.io.IOException, java.lang.UnsupportedOperationException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field in:Ljava/io/InputStream;
       4: checkcast     #25                 // class org/apache/hadoop/fs/CanSetReadahead
       7: aload_1
       8: invokeinterface #26,  2           // InterfaceMethod org/apache/hadoop/fs/CanSetReadahead.setReadahead:(Ljava/lang/Long;)V
      13: goto          27
      16: astore_2
      17: new           #18                 // class java/lang/UnsupportedOperationException
      20: dup
      21: ldc           #28                 // String this stream does not support setting the readahead caching strategy.
      23: invokespecial #20                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: return
    Exception table:
       from    to  target type
           0    13    16   Class java/lang/ClassCastException

  public void setDropBehind(java.lang.Boolean) throws java.io.IOException, java.lang.UnsupportedOperationException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field in:Ljava/io/InputStream;
       4: checkcast     #29                 // class org/apache/hadoop/fs/CanSetDropBehind
       7: aload_1
       8: invokeinterface #30,  2           // InterfaceMethod org/apache/hadoop/fs/CanSetDropBehind.setDropBehind:(Ljava/lang/Boolean;)V
      13: goto          27
      16: astore_2
      17: new           #18                 // class java/lang/UnsupportedOperationException
      20: dup
      21: ldc           #31                 // String this stream does not support setting the drop-behind caching setting.
      23: invokespecial #20                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: return
    Exception table:
       from    to  target type
           0    13    16   Class java/lang/ClassCastException

  public java.nio.ByteBuffer read(org.apache.hadoop.io.ByteBufferPool, int, java.util.EnumSet<org.apache.hadoop.fs.ReadOption>) throws java.io.IOException, java.lang.UnsupportedOperationException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field in:Ljava/io/InputStream;
       4: checkcast     #32                 // class org/apache/hadoop/fs/HasEnhancedByteBufferAccess
       7: aload_1
       8: iload_2
       9: aload_3
      10: invokeinterface #33,  4           // InterfaceMethod org/apache/hadoop/fs/HasEnhancedByteBufferAccess.read:(Lorg/apache/hadoop/io/ByteBufferPool;ILjava/util/EnumSet;)Ljava/nio/ByteBuffer;
      15: areturn
      16: astore        4
      18: aload_0
      19: aload_1
      20: iload_2
      21: invokestatic  #34                 // Method org/apache/hadoop/fs/ByteBufferUtil.fallbackRead:(Ljava/io/InputStream;Lorg/apache/hadoop/io/ByteBufferPool;I)Ljava/nio/ByteBuffer;
      24: astore        5
      26: aload         5
      28: ifnull        41
      31: aload_0
      32: getfield      #4                  // Field extendedReadBuffers:Lorg/apache/hadoop/util/IdentityHashStore;
      35: aload         5
      37: aload_1
      38: invokevirtual #35                 // Method org/apache/hadoop/util/IdentityHashStore.put:(Ljava/lang/Object;Ljava/lang/Object;)V
      41: aload         5
      43: areturn
    Exception table:
       from    to  target type
           0    15    16   Class java/lang/ClassCastException

  public final java.nio.ByteBuffer read(org.apache.hadoop.io.ByteBufferPool, int) throws java.io.IOException, java.lang.UnsupportedOperationException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: getstatic     #36                 // Field EMPTY_READ_OPTIONS_SET:Ljava/util/EnumSet;
       6: invokevirtual #37                 // Method read:(Lorg/apache/hadoop/io/ByteBufferPool;ILjava/util/EnumSet;)Ljava/nio/ByteBuffer;
       9: areturn

  public void releaseBuffer(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: getfield      #10                 // Field in:Ljava/io/InputStream;
       4: checkcast     #32                 // class org/apache/hadoop/fs/HasEnhancedByteBufferAccess
       7: aload_1
       8: invokeinterface #38,  2           // InterfaceMethod org/apache/hadoop/fs/HasEnhancedByteBufferAccess.releaseBuffer:(Ljava/nio/ByteBuffer;)V
      13: goto          50
      16: astore_2
      17: aload_0
      18: getfield      #4                  // Field extendedReadBuffers:Lorg/apache/hadoop/util/IdentityHashStore;
      21: aload_1
      22: invokevirtual #39                 // Method org/apache/hadoop/util/IdentityHashStore.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #40                 // class org/apache/hadoop/io/ByteBufferPool
      28: astore_3
      29: aload_3
      30: ifnonnull     43
      33: new           #7                  // class java/lang/IllegalArgumentException
      36: dup
      37: ldc           #41                 // String tried to release a buffer that was not created by this stream.
      39: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_3
      44: aload_1
      45: invokeinterface #42,  2           // InterfaceMethod org/apache/hadoop/io/ByteBufferPool.putBuffer:(Ljava/nio/ByteBuffer;)V
      50: return
    Exception table:
       from    to  target type
           0    13    16   Class java/lang/ClassCastException

  public void unbuffer();
    Code:
       0: aload_0
       1: getfield      #10                 // Field in:Ljava/io/InputStream;
       4: invokestatic  #43                 // Method org/apache/hadoop/fs/StreamCapabilitiesPolicy.unbuffer:(Ljava/io/InputStream;)V
       7: return

  public boolean hasCapability(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #10                 // Field in:Ljava/io/InputStream;
       4: instanceof    #44                 // class org/apache/hadoop/fs/StreamCapabilities
       7: ifeq          24
      10: aload_0
      11: getfield      #10                 // Field in:Ljava/io/InputStream;
      14: checkcast     #44                 // class org/apache/hadoop/fs/StreamCapabilities
      17: aload_1
      18: invokeinterface #45,  2           // InterfaceMethod org/apache/hadoop/fs/StreamCapabilities.hasCapability:(Ljava/lang/String;)Z
      23: ireturn
      24: iconst_0
      25: ireturn

  public java.lang.String toString();
    Code:
       0: new           #46                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokespecial #48                 // Method java/lang/Object.toString:()Ljava/lang/String;
      11: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #50                 // String :
      16: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #10                 // Field in:Ljava/io/InputStream;
      23: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      26: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: areturn

  static {};
    Code:
       0: ldc           #53                 // class org/apache/hadoop/fs/ReadOption
       2: invokestatic  #54                 // Method java/util/EnumSet.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;
       5: putstatic     #36                 // Field EMPTY_READ_OPTIONS_SET:Ljava/util/EnumSet;
       8: return
}
