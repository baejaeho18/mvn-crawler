Compiled from "Server.java"
public abstract class org.apache.hadoop.ipc.Server {
  private final boolean authorize;

  private java.util.List<org.apache.hadoop.security.SaslRpcServer$AuthMethod> enabledAuthMethods;

  private org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcSaslProto negotiateResponse;

  private org.apache.hadoop.ipc.Server$ExceptionsHandler exceptionsHandler;

  private org.apache.htrace.core.Tracer tracer;

  private org.apache.hadoop.ipc.AlignmentContext alignmentContext;

  private final java.lang.String serverName;

  private static final java.nio.ByteBuffer HTTP_GET_BYTES;

  static final java.lang.String RECEIVED_HTTP_REQ_RESPONSE;

  static int INITIAL_RESP_BUF_SIZE;

  static java.util.Map<org.apache.hadoop.ipc.RPC$RpcKind, org.apache.hadoop.ipc.Server$RpcKindMapValue> rpcKindMap;

  public static final org.slf4j.Logger LOG;

  public static final org.slf4j.Logger AUDITLOG;

  private static final java.lang.String AUTH_FAILED_FOR;

  private static final java.lang.String AUTH_SUCCESSFUL_FOR;

  private static final java.lang.ThreadLocal<org.apache.hadoop.ipc.Server> SERVER;

  private static final java.util.Map<java.lang.String, java.lang.Class<?>> PROTOCOL_CACHE;

  private static final java.lang.ThreadLocal<org.apache.hadoop.ipc.Server$Call> CurCall;

  private java.lang.String bindAddress;

  private int port;

  private int handlerCount;

  private int readThreads;

  private int readerPendingConnectionQueue;

  private java.lang.Class<? extends org.apache.hadoop.io.Writable> rpcRequestClass;

  protected final org.apache.hadoop.ipc.metrics.RpcMetrics rpcMetrics;

  protected final org.apache.hadoop.ipc.metrics.RpcDetailedMetrics rpcDetailedMetrics;

  private org.apache.hadoop.conf.Configuration conf;

  private java.lang.String portRangeConfig;

  private org.apache.hadoop.security.token.SecretManager<org.apache.hadoop.security.token.TokenIdentifier> secretManager;

  private org.apache.hadoop.security.SaslPropertiesResolver saslPropsResolver;

  private org.apache.hadoop.security.authorize.ServiceAuthorizationManager serviceAuthorizationManager;

  private int maxQueueSize;

  private final int maxRespSize;

  private final java.lang.ThreadLocal<org.apache.hadoop.ipc.ResponseBuffer> responseBuffer;

  private int socketSendBufferSize;

  private final int maxDataLength;

  private final boolean tcpNoDelay;

  private volatile boolean running;

  private org.apache.hadoop.ipc.CallQueueManager<org.apache.hadoop.ipc.Server$Call> callQueue;

  private org.apache.hadoop.ipc.Server$ConnectionManager connectionManager;

  private org.apache.hadoop.ipc.Server$Listener listener;

  private java.util.Map<java.lang.Integer, org.apache.hadoop.ipc.Server$Listener> auxiliaryListenerMap;

  private org.apache.hadoop.ipc.Server$Responder responder;

  private org.apache.hadoop.ipc.Server$Handler[] handlers;

  private boolean logSlowRPC;

  private static final long PURGE_INTERVAL_NANOS;

  private static int NIO_BUFFER_LIMIT;

  public void addTerseExceptions(java.lang.Class<?>...);
    Code:
       0: aload_0
       1: getfield      #35                 // Field exceptionsHandler:Lorg/apache/hadoop/ipc/Server$ExceptionsHandler;
       4: aload_1
       5: invokevirtual #36                 // Method org/apache/hadoop/ipc/Server$ExceptionsHandler.addTerseLoggingExceptions:([Ljava/lang/Class;)V
       8: return

  public void addSuppressedLoggingExceptions(java.lang.Class<?>...);
    Code:
       0: aload_0
       1: getfield      #35                 // Field exceptionsHandler:Lorg/apache/hadoop/ipc/Server$ExceptionsHandler;
       4: aload_1
       5: invokevirtual #37                 // Method org/apache/hadoop/ipc/Server$ExceptionsHandler.addSuppressedLoggingExceptions:([Ljava/lang/Class;)V
       8: return

  public void setAlignmentContext(org.apache.hadoop.ipc.AlignmentContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field alignmentContext:Lorg/apache/hadoop/ipc/AlignmentContext;
       5: return

  public static void registerProtocolEngine(org.apache.hadoop.ipc.RPC$RpcKind, java.lang.Class<? extends org.apache.hadoop.io.Writable>, org.apache.hadoop.ipc.RPC$RpcInvoker);
    Code:
       0: getstatic     #38                 // Field rpcKindMap:Ljava/util/Map;
       3: aload_0
       4: new           #39                 // class org/apache/hadoop/ipc/Server$RpcKindMapValue
       7: dup
       8: aload_1
       9: aload_2
      10: invokespecial #40                 // Method org/apache/hadoop/ipc/Server$RpcKindMapValue."<init>":(Ljava/lang/Class;Lorg/apache/hadoop/ipc/RPC$RpcInvoker;)V
      13: invokeinterface #41,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #39                 // class org/apache/hadoop/ipc/Server$RpcKindMapValue
      21: astore_3
      22: aload_3
      23: ifnull        64
      26: getstatic     #38                 // Field rpcKindMap:Ljava/util/Map;
      29: aload_0
      30: aload_3
      31: invokeinterface #41,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      36: pop
      37: new           #42                 // class java/lang/IllegalArgumentException
      40: dup
      41: new           #43                 // class java/lang/StringBuilder
      44: dup
      45: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      48: ldc           #45                 // String ReRegistration of rpcKind:
      50: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_0
      54: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      57: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokespecial #49                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      63: athrow
      64: getstatic     #50                 // Field LOG:Lorg/slf4j/Logger;
      67: invokeinterface #51,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      72: ifeq          120
      75: getstatic     #50                 // Field LOG:Lorg/slf4j/Logger;
      78: new           #43                 // class java/lang/StringBuilder
      81: dup
      82: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      85: ldc           #52                 // String rpcKind=
      87: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: aload_0
      91: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      94: ldc           #53                 // String , rpcRequestWrapperClass=
      96: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: aload_1
     100: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     103: ldc           #54                 // String , rpcInvoker=
     105: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: aload_2
     109: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     112: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     115: invokeinterface #55,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     120: return

  public java.lang.Class<? extends org.apache.hadoop.io.Writable> getRpcRequestWrapper(org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcKindProto);
    Code:
       0: aload_0
       1: getfield      #56                 // Field rpcRequestClass:Ljava/lang/Class;
       4: ifnull        12
       7: aload_0
       8: getfield      #56                 // Field rpcRequestClass:Ljava/lang/Class;
      11: areturn
      12: getstatic     #38                 // Field rpcKindMap:Ljava/util/Map;
      15: aload_1
      16: invokestatic  #57                 // Method org/apache/hadoop/util/ProtoUtil.convert:(Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcKindProto;)Lorg/apache/hadoop/ipc/RPC$RpcKind;
      19: invokeinterface #58,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #39                 // class org/apache/hadoop/ipc/Server$RpcKindMapValue
      27: astore_2
      28: aload_2
      29: ifnonnull     36
      32: aconst_null
      33: goto          40
      36: aload_2
      37: getfield      #59                 // Field org/apache/hadoop/ipc/Server$RpcKindMapValue.rpcRequestWrapperClass:Ljava/lang/Class;
      40: areturn

  public static org.apache.hadoop.ipc.RPC$RpcInvoker getRpcInvoker(org.apache.hadoop.ipc.RPC$RpcKind);
    Code:
       0: getstatic     #38                 // Field rpcKindMap:Ljava/util/Map;
       3: aload_0
       4: invokeinterface #58,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #39                 // class org/apache/hadoop/ipc/Server$RpcKindMapValue
      12: astore_1
      13: aload_1
      14: ifnonnull     21
      17: aconst_null
      18: goto          25
      21: aload_1
      22: getfield      #60                 // Field org/apache/hadoop/ipc/Server$RpcKindMapValue.rpcInvoker:Lorg/apache/hadoop/ipc/RPC$RpcInvoker;
      25: areturn

  static java.lang.Class<?> getProtocolClass(java.lang.String, org.apache.hadoop.conf.Configuration) throws java.lang.ClassNotFoundException;
    Code:
       0: getstatic     #61                 // Field PROTOCOL_CACHE:Ljava/util/Map;
       3: aload_0
       4: invokeinterface #58,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #62                 // class java/lang/Class
      12: astore_2
      13: aload_2
      14: ifnonnull     34
      17: aload_1
      18: aload_0
      19: invokevirtual #63                 // Method org/apache/hadoop/conf/Configuration.getClassByName:(Ljava/lang/String;)Ljava/lang/Class;
      22: astore_2
      23: getstatic     #61                 // Field PROTOCOL_CACHE:Ljava/util/Map;
      26: aload_0
      27: aload_2
      28: invokeinterface #41,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      33: pop
      34: aload_2
      35: areturn

  public static org.apache.hadoop.ipc.Server get();
    Code:
       0: getstatic     #27                 // Field SERVER:Ljava/lang/ThreadLocal;
       3: invokevirtual #64                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #65                 // class org/apache/hadoop/ipc/Server
       9: areturn

  public static java.lang.ThreadLocal<org.apache.hadoop.ipc.Server$Call> getCurCall();
    Code:
       0: getstatic     #4                  // Field CurCall:Ljava/lang/ThreadLocal;
       3: areturn

  public static int getCallId();
    Code:
       0: getstatic     #4                  // Field CurCall:Ljava/lang/ThreadLocal;
       3: invokevirtual #64                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #66                 // class org/apache/hadoop/ipc/Server$Call
       9: astore_0
      10: aload_0
      11: ifnull        21
      14: aload_0
      15: getfield      #67                 // Field org/apache/hadoop/ipc/Server$Call.callId:I
      18: goto          23
      21: bipush        -2
      23: ireturn

  public static int getCallRetryCount();
    Code:
       0: getstatic     #4                  // Field CurCall:Ljava/lang/ThreadLocal;
       3: invokevirtual #64                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #66                 // class org/apache/hadoop/ipc/Server$Call
       9: astore_0
      10: aload_0
      11: ifnull        21
      14: aload_0
      15: getfield      #68                 // Field org/apache/hadoop/ipc/Server$Call.retryCount:I
      18: goto          22
      21: iconst_m1
      22: ireturn

  public static java.net.InetAddress getRemoteIp();
    Code:
       0: getstatic     #4                  // Field CurCall:Ljava/lang/ThreadLocal;
       3: invokevirtual #64                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #66                 // class org/apache/hadoop/ipc/Server$Call
       9: astore_0
      10: aload_0
      11: ifnull        21
      14: aload_0
      15: invokevirtual #69                 // Method org/apache/hadoop/ipc/Server$Call.getHostInetAddress:()Ljava/net/InetAddress;
      18: goto          22
      21: aconst_null
      22: areturn

  public static java.lang.String getAuxiliaryPortEstablishedQOP();
    Code:
       0: getstatic     #4                  // Field CurCall:Ljava/lang/ThreadLocal;
       3: invokevirtual #64                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #66                 // class org/apache/hadoop/ipc/Server$Call
       9: astore_0
      10: aload_0
      11: instanceof    #70                 // class org/apache/hadoop/ipc/Server$RpcCall
      14: ifne          19
      17: aconst_null
      18: areturn
      19: aload_0
      20: checkcast     #70                 // class org/apache/hadoop/ipc/Server$RpcCall
      23: astore_1
      24: aload_1
      25: getfield      #71                 // Field org/apache/hadoop/ipc/Server$RpcCall.connection:Lorg/apache/hadoop/ipc/Server$Connection;
      28: invokevirtual #72                 // Method org/apache/hadoop/ipc/Server$Connection.isOnAuxiliaryPort:()Z
      31: ifeq          42
      34: aload_1
      35: getfield      #71                 // Field org/apache/hadoop/ipc/Server$RpcCall.connection:Lorg/apache/hadoop/ipc/Server$Connection;
      38: invokevirtual #73                 // Method org/apache/hadoop/ipc/Server$Connection.getEstablishedQOP:()Ljava/lang/String;
      41: areturn
      42: aconst_null
      43: areturn

  public static byte[] getClientId();
    Code:
       0: getstatic     #4                  // Field CurCall:Ljava/lang/ThreadLocal;
       3: invokevirtual #64                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #66                 // class org/apache/hadoop/ipc/Server$Call
       9: astore_0
      10: aload_0
      11: ifnull        21
      14: aload_0
      15: getfield      #74                 // Field org/apache/hadoop/ipc/Server$Call.clientId:[B
      18: goto          24
      21: getstatic     #75                 // Field org/apache/hadoop/ipc/RpcConstants.DUMMY_CLIENT_ID:[B
      24: areturn

  public static java.lang.String getRemoteAddress();
    Code:
       0: invokestatic  #76                 // Method getRemoteIp:()Ljava/net/InetAddress;
       3: astore_0
       4: aload_0
       5: ifnonnull     12
       8: aconst_null
       9: goto          16
      12: aload_0
      13: invokevirtual #77                 // Method java/net/InetAddress.getHostAddress:()Ljava/lang/String;
      16: areturn

  public static org.apache.hadoop.security.UserGroupInformation getRemoteUser();
    Code:
       0: getstatic     #4                  // Field CurCall:Ljava/lang/ThreadLocal;
       3: invokevirtual #64                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #66                 // class org/apache/hadoop/ipc/Server$Call
       9: astore_0
      10: aload_0
      11: ifnull        21
      14: aload_0
      15: invokevirtual #78                 // Method org/apache/hadoop/ipc/Server$Call.getRemoteUser:()Lorg/apache/hadoop/security/UserGroupInformation;
      18: goto          22
      21: aconst_null
      22: areturn

  public static java.lang.String getProtocol();
    Code:
       0: getstatic     #4                  // Field CurCall:Ljava/lang/ThreadLocal;
       3: invokevirtual #64                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #66                 // class org/apache/hadoop/ipc/Server$Call
       9: astore_0
      10: aload_0
      11: ifnull        21
      14: aload_0
      15: invokevirtual #79                 // Method org/apache/hadoop/ipc/Server$Call.getProtocol:()Ljava/lang/String;
      18: goto          22
      21: aconst_null
      22: areturn

  public static boolean isRpcInvocation();
    Code:
       0: getstatic     #4                  // Field CurCall:Ljava/lang/ThreadLocal;
       3: invokevirtual #64                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: ifnull        13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public static int getPriorityLevel();
    Code:
       0: getstatic     #4                  // Field CurCall:Ljava/lang/ThreadLocal;
       3: invokevirtual #64                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #66                 // class org/apache/hadoop/ipc/Server$Call
       9: astore_0
      10: aload_0
      11: ifnull        21
      14: aload_0
      15: invokevirtual #80                 // Method org/apache/hadoop/ipc/Server$Call.getPriorityLevel:()I
      18: goto          22
      21: iconst_0
      22: ireturn

  protected boolean isLogSlowRPC();
    Code:
       0: aload_0
       1: getfield      #81                 // Field logSlowRPC:Z
       4: ireturn

  protected void setLogSlowRPC(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #81                 // Field logSlowRPC:Z
       5: return

  void logSlowRpcCalls(java.lang.String, org.apache.hadoop.ipc.Server$Call, org.apache.hadoop.ipc.ProcessingDetails);
    Code:
       0: iconst_3
       1: istore        4
       3: sipush        1024
       6: istore        5
       8: aload_0
       9: getfield      #82                 // Field rpcMetrics:Lorg/apache/hadoop/ipc/metrics/RpcMetrics;
      12: invokevirtual #83                 // Method org/apache/hadoop/ipc/metrics/RpcMetrics.getProcessingMean:()D
      15: aload_0
      16: getfield      #82                 // Field rpcMetrics:Lorg/apache/hadoop/ipc/metrics/RpcMetrics;
      19: invokevirtual #84                 // Method org/apache/hadoop/ipc/metrics/RpcMetrics.getProcessingStdDev:()D
      22: ldc2_w        #85                 // double 3.0d
      25: dmul
      26: dadd
      27: dstore        6
      29: aload_3
      30: getstatic     #87                 // Field org/apache/hadoop/ipc/ProcessingDetails$Timing.PROCESSING:Lorg/apache/hadoop/ipc/ProcessingDetails$Timing;
      33: getstatic     #88                 // Field org/apache/hadoop/ipc/metrics/RpcMetrics.TIMEUNIT:Ljava/util/concurrent/TimeUnit;
      36: invokevirtual #89                 // Method org/apache/hadoop/ipc/ProcessingDetails.get:(Lorg/apache/hadoop/ipc/ProcessingDetails$Timing;Ljava/util/concurrent/TimeUnit;)J
      39: lstore        8
      41: aload_0
      42: getfield      #82                 // Field rpcMetrics:Lorg/apache/hadoop/ipc/metrics/RpcMetrics;
      45: invokevirtual #90                 // Method org/apache/hadoop/ipc/metrics/RpcMetrics.getProcessingSampleCount:()J
      48: ldc2_w        #91                 // long 1024l
      51: lcmp
      52: ifle          114
      55: lload         8
      57: l2d
      58: dload         6
      60: dcmpl
      61: ifle          114
      64: getstatic     #50                 // Field LOG:Lorg/slf4j/Logger;
      67: ldc           #93                 // String Slow RPC : {} took {} {} to process from client {}, the processing detail is {}
      69: iconst_5
      70: anewarray     #94                 // class java/lang/Object
      73: dup
      74: iconst_0
      75: aload_1
      76: aastore
      77: dup
      78: iconst_1
      79: lload         8
      81: invokestatic  #95                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      84: aastore
      85: dup
      86: iconst_2
      87: getstatic     #88                 // Field org/apache/hadoop/ipc/metrics/RpcMetrics.TIMEUNIT:Ljava/util/concurrent/TimeUnit;
      90: aastore
      91: dup
      92: iconst_3
      93: aload_2
      94: aastore
      95: dup
      96: iconst_4
      97: aload_3
      98: invokevirtual #96                 // Method org/apache/hadoop/ipc/ProcessingDetails.toString:()Ljava/lang/String;
     101: aastore
     102: invokeinterface #97,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;[Ljava/lang/Object;)V
     107: aload_0
     108: getfield      #82                 // Field rpcMetrics:Lorg/apache/hadoop/ipc/metrics/RpcMetrics;
     111: invokevirtual #98                 // Method org/apache/hadoop/ipc/metrics/RpcMetrics.incrSlowRpc:()V
     114: return

  void updateMetrics(org.apache.hadoop.ipc.Server$Call, long, boolean);
    Code:
       0: invokestatic  #99                 // Method org/apache/hadoop/util/Time.monotonicNowNanos:()J
       3: lload_2
       4: lsub
       5: lstore        5
       7: aload_1
       8: getfield      #100                // Field org/apache/hadoop/ipc/Server$Call.timestampNanos:J
      11: lstore        7
      13: aload_1
      14: invokevirtual #101                // Method org/apache/hadoop/ipc/Server$Call.getProcessingDetails:()Lorg/apache/hadoop/ipc/ProcessingDetails;
      17: astore        9
      19: aload         9
      21: getstatic     #102                // Field org/apache/hadoop/ipc/ProcessingDetails$Timing.QUEUE:Lorg/apache/hadoop/ipc/ProcessingDetails$Timing;
      24: lload_2
      25: lload         7
      27: lsub
      28: aload         9
      30: getstatic     #103                // Field org/apache/hadoop/ipc/ProcessingDetails$Timing.ENQUEUE:Lorg/apache/hadoop/ipc/ProcessingDetails$Timing;
      33: invokevirtual #104                // Method org/apache/hadoop/ipc/ProcessingDetails.get:(Lorg/apache/hadoop/ipc/ProcessingDetails$Timing;)J
      36: lsub
      37: invokevirtual #105                // Method org/apache/hadoop/ipc/ProcessingDetails.set:(Lorg/apache/hadoop/ipc/ProcessingDetails$Timing;J)V
      40: lload         5
      42: aload         9
      44: getstatic     #87                 // Field org/apache/hadoop/ipc/ProcessingDetails$Timing.PROCESSING:Lorg/apache/hadoop/ipc/ProcessingDetails$Timing;
      47: invokevirtual #104                // Method org/apache/hadoop/ipc/ProcessingDetails.get:(Lorg/apache/hadoop/ipc/ProcessingDetails$Timing;)J
      50: lsub
      51: lstore        5
      53: lload         5
      55: aload         9
      57: getstatic     #106                // Field org/apache/hadoop/ipc/ProcessingDetails$Timing.RESPONSE:Lorg/apache/hadoop/ipc/ProcessingDetails$Timing;
      60: invokevirtual #104                // Method org/apache/hadoop/ipc/ProcessingDetails.get:(Lorg/apache/hadoop/ipc/ProcessingDetails$Timing;)J
      63: lsub
      64: lstore        5
      66: aload         9
      68: getstatic     #107                // Field org/apache/hadoop/ipc/ProcessingDetails$Timing.HANDLER:Lorg/apache/hadoop/ipc/ProcessingDetails$Timing;
      71: lload         5
      73: invokevirtual #105                // Method org/apache/hadoop/ipc/ProcessingDetails.set:(Lorg/apache/hadoop/ipc/ProcessingDetails$Timing;J)V
      76: aload         9
      78: getstatic     #102                // Field org/apache/hadoop/ipc/ProcessingDetails$Timing.QUEUE:Lorg/apache/hadoop/ipc/ProcessingDetails$Timing;
      81: getstatic     #88                 // Field org/apache/hadoop/ipc/metrics/RpcMetrics.TIMEUNIT:Ljava/util/concurrent/TimeUnit;
      84: invokevirtual #89                 // Method org/apache/hadoop/ipc/ProcessingDetails.get:(Lorg/apache/hadoop/ipc/ProcessingDetails$Timing;Ljava/util/concurrent/TimeUnit;)J
      87: lstore        10
      89: aload_0
      90: getfield      #82                 // Field rpcMetrics:Lorg/apache/hadoop/ipc/metrics/RpcMetrics;
      93: lload         10
      95: invokevirtual #108                // Method org/apache/hadoop/ipc/metrics/RpcMetrics.addRpcQueueTime:(J)V
      98: aload_1
      99: invokevirtual #109                // Method org/apache/hadoop/ipc/Server$Call.isResponseDeferred:()Z
     102: ifne          110
     105: iload         4
     107: ifeq          111
     110: return
     111: aload         9
     113: getstatic     #87                 // Field org/apache/hadoop/ipc/ProcessingDetails$Timing.PROCESSING:Lorg/apache/hadoop/ipc/ProcessingDetails$Timing;
     116: getstatic     #88                 // Field org/apache/hadoop/ipc/metrics/RpcMetrics.TIMEUNIT:Ljava/util/concurrent/TimeUnit;
     119: invokevirtual #89                 // Method org/apache/hadoop/ipc/ProcessingDetails.get:(Lorg/apache/hadoop/ipc/ProcessingDetails$Timing;Ljava/util/concurrent/TimeUnit;)J
     122: lstore        12
     124: aload         9
     126: getstatic     #110                // Field org/apache/hadoop/ipc/ProcessingDetails$Timing.LOCKWAIT:Lorg/apache/hadoop/ipc/ProcessingDetails$Timing;
     129: getstatic     #88                 // Field org/apache/hadoop/ipc/metrics/RpcMetrics.TIMEUNIT:Ljava/util/concurrent/TimeUnit;
     132: invokevirtual #89                 // Method org/apache/hadoop/ipc/ProcessingDetails.get:(Lorg/apache/hadoop/ipc/ProcessingDetails$Timing;Ljava/util/concurrent/TimeUnit;)J
     135: lstore        14
     137: aload_0
     138: getfield      #82                 // Field rpcMetrics:Lorg/apache/hadoop/ipc/metrics/RpcMetrics;
     141: lload         14
     143: invokevirtual #111                // Method org/apache/hadoop/ipc/metrics/RpcMetrics.addRpcLockWaitTime:(J)V
     146: aload_0
     147: getfield      #82                 // Field rpcMetrics:Lorg/apache/hadoop/ipc/metrics/RpcMetrics;
     150: lload         12
     152: invokevirtual #112                // Method org/apache/hadoop/ipc/metrics/RpcMetrics.addRpcProcessingTime:(J)V
     155: lload         12
     157: lload         14
     159: lsub
     160: lstore        12
     162: aload_1
     163: invokevirtual #113                // Method org/apache/hadoop/ipc/Server$Call.getDetailedMetricsName:()Ljava/lang/String;
     166: astore        16
     168: aload_0
     169: getfield      #114                // Field rpcDetailedMetrics:Lorg/apache/hadoop/ipc/metrics/RpcDetailedMetrics;
     172: aload         16
     174: lload         12
     176: invokevirtual #115                // Method org/apache/hadoop/ipc/metrics/RpcDetailedMetrics.addProcessingTime:(Ljava/lang/String;J)V
     179: aload_0
     180: getfield      #10                 // Field callQueue:Lorg/apache/hadoop/ipc/CallQueueManager;
     183: aload         16
     185: aload_1
     186: aload         9
     188: invokevirtual #116                // Method org/apache/hadoop/ipc/CallQueueManager.addResponseTime:(Ljava/lang/String;Lorg/apache/hadoop/ipc/Schedulable;Lorg/apache/hadoop/ipc/ProcessingDetails;)V
     191: aload_0
     192: invokevirtual #117                // Method isLogSlowRPC:()Z
     195: ifeq          207
     198: aload_0
     199: aload         16
     201: aload_1
     202: aload         9
     204: invokevirtual #118                // Method logSlowRpcCalls:(Ljava/lang/String;Lorg/apache/hadoop/ipc/Server$Call;Lorg/apache/hadoop/ipc/ProcessingDetails;)V
     207: return

  void updateDeferredMetrics(java.lang.String, long);
    Code:
       0: aload_0
       1: getfield      #82                 // Field rpcMetrics:Lorg/apache/hadoop/ipc/metrics/RpcMetrics;
       4: lload_2
       5: invokevirtual #119                // Method org/apache/hadoop/ipc/metrics/RpcMetrics.addDeferredRpcProcessingTime:(J)V
       8: aload_0
       9: getfield      #114                // Field rpcDetailedMetrics:Lorg/apache/hadoop/ipc/metrics/RpcDetailedMetrics;
      12: aload_1
      13: lload_2
      14: invokevirtual #120                // Method org/apache/hadoop/ipc/metrics/RpcDetailedMetrics.addDeferredProcessingTime:(Ljava/lang/String;J)V
      17: return

  public static void bind(java.net.ServerSocket, java.net.InetSocketAddress, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aconst_null
       4: aconst_null
       5: invokestatic  #121                // Method bind:(Ljava/net/ServerSocket;Ljava/net/InetSocketAddress;ILorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)V
       8: return

  public static void bind(java.net.ServerSocket, java.net.InetSocketAddress, int, org.apache.hadoop.conf.Configuration, java.lang.String) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore        5
       3: aload         4
       5: ifnull        18
       8: aload_3
       9: aload         4
      11: ldc           #122                // String
      13: invokevirtual #123                // Method org/apache/hadoop/conf/Configuration.getRange:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/conf/Configuration$IntegerRanges;
      16: astore        5
      18: aload         5
      20: ifnull        38
      23: aload         5
      25: invokevirtual #124                // Method org/apache/hadoop/conf/Configuration$IntegerRanges.isEmpty:()Z
      28: ifne          38
      31: aload_1
      32: invokevirtual #125                // Method java/net/InetSocketAddress.getPort:()I
      35: ifeq          47
      38: aload_0
      39: aload_1
      40: iload_2
      41: invokevirtual #126                // Method java/net/ServerSocket.bind:(Ljava/net/SocketAddress;I)V
      44: goto          154
      47: aload         5
      49: invokevirtual #127                // Method org/apache/hadoop/conf/Configuration$IntegerRanges.iterator:()Ljava/util/Iterator;
      52: astore        6
      54: aload         6
      56: invokeinterface #128,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      61: ifeq          119
      64: aload         6
      66: invokeinterface #129,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      71: checkcast     #130                // class java/lang/Integer
      74: astore        7
      76: aload_0
      77: invokevirtual #131                // Method java/net/ServerSocket.isBound:()Z
      80: ifeq          86
      83: goto          119
      86: new           #132                // class java/net/InetSocketAddress
      89: dup
      90: aload_1
      91: invokevirtual #133                // Method java/net/InetSocketAddress.getAddress:()Ljava/net/InetAddress;
      94: aload         7
      96: invokevirtual #134                // Method java/lang/Integer.intValue:()I
      99: invokespecial #135                // Method java/net/InetSocketAddress."<init>":(Ljava/net/InetAddress;I)V
     102: astore        8
     104: aload_0
     105: aload         8
     107: iload_2
     108: invokevirtual #126                // Method java/net/ServerSocket.bind:(Ljava/net/SocketAddress;I)V
     111: goto          116
     114: astore        8
     116: goto          54
     119: aload_0
     120: invokevirtual #131                // Method java/net/ServerSocket.isBound:()Z
     123: ifne          154
     126: new           #136                // class java/net/BindException
     129: dup
     130: new           #43                 // class java/lang/StringBuilder
     133: dup
     134: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     137: ldc           #137                // String Could not find a free port in
     139: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     142: aload         5
     144: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     147: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     150: invokespecial #138                // Method java/net/BindException."<init>":(Ljava/lang/String;)V
     153: athrow
     154: goto          175
     157: astore        5
     159: aconst_null
     160: iconst_0
     161: aload_1
     162: invokevirtual #140                // Method java/net/InetSocketAddress.getHostName:()Ljava/lang/String;
     165: aload_1
     166: invokevirtual #125                // Method java/net/InetSocketAddress.getPort:()I
     169: aload         5
     171: invokestatic  #141                // Method org/apache/hadoop/net/NetUtils.wrapException:(Ljava/lang/String;ILjava/lang/String;ILjava/io/IOException;)Ljava/io/IOException;
     174: athrow
     175: return
    Exception table:
       from    to  target type
          86   111   114   Class java/net/BindException
           0   154   157   Class java/net/SocketException

  int getPriorityLevel(org.apache.hadoop.ipc.Schedulable);
    Code:
       0: aload_0
       1: getfield      #10                 // Field callQueue:Lorg/apache/hadoop/ipc/CallQueueManager;
       4: aload_1
       5: invokevirtual #142                // Method org/apache/hadoop/ipc/CallQueueManager.getPriorityLevel:(Lorg/apache/hadoop/ipc/Schedulable;)I
       8: ireturn

  int getPriorityLevel(org.apache.hadoop.security.UserGroupInformation);
    Code:
       0: aload_0
       1: getfield      #10                 // Field callQueue:Lorg/apache/hadoop/ipc/CallQueueManager;
       4: aload_1
       5: invokevirtual #143                // Method org/apache/hadoop/ipc/CallQueueManager.getPriorityLevel:(Lorg/apache/hadoop/security/UserGroupInformation;)I
       8: ireturn

  void setPriorityLevel(org.apache.hadoop.security.UserGroupInformation, int);
    Code:
       0: aload_0
       1: getfield      #10                 // Field callQueue:Lorg/apache/hadoop/ipc/CallQueueManager;
       4: aload_1
       5: iload_2
       6: invokevirtual #144                // Method org/apache/hadoop/ipc/CallQueueManager.setPriorityLevel:(Lorg/apache/hadoop/security/UserGroupInformation;I)V
       9: return

  public org.apache.hadoop.ipc.metrics.RpcMetrics getRpcMetrics();
    Code:
       0: aload_0
       1: getfield      #82                 // Field rpcMetrics:Lorg/apache/hadoop/ipc/metrics/RpcMetrics;
       4: areturn

  public org.apache.hadoop.ipc.metrics.RpcDetailedMetrics getRpcDetailedMetrics();
    Code:
       0: aload_0
       1: getfield      #114                // Field rpcDetailedMetrics:Lorg/apache/hadoop/ipc/metrics/RpcDetailedMetrics;
       4: areturn

  java.lang.Iterable<? extends java.lang.Thread> getHandlers();
    Code:
       0: aload_0
       1: getfield      #145                // Field handlers:[Lorg/apache/hadoop/ipc/Server$Handler;
       4: invokestatic  #146                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       7: areturn

  org.apache.hadoop.ipc.Server$Connection[] getConnections();
    Code:
       0: aload_0
       1: getfield      #26                 // Field connectionManager:Lorg/apache/hadoop/ipc/Server$ConnectionManager;
       4: invokevirtual #147                // Method org/apache/hadoop/ipc/Server$ConnectionManager.toArray:()[Lorg/apache/hadoop/ipc/Server$Connection;
       7: areturn

  public void refreshServiceAcl(org.apache.hadoop.conf.Configuration, org.apache.hadoop.security.authorize.PolicyProvider);
    Code:
       0: aload_0
       1: getfield      #148                // Field serviceAuthorizationManager:Lorg/apache/hadoop/security/authorize/ServiceAuthorizationManager;
       4: aload_1
       5: aload_2
       6: invokevirtual #149                // Method org/apache/hadoop/security/authorize/ServiceAuthorizationManager.refresh:(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/security/authorize/PolicyProvider;)V
       9: return

  public void refreshServiceAclWithLoadedConfiguration(org.apache.hadoop.conf.Configuration, org.apache.hadoop.security.authorize.PolicyProvider);
    Code:
       0: aload_0
       1: getfield      #148                // Field serviceAuthorizationManager:Lorg/apache/hadoop/security/authorize/ServiceAuthorizationManager;
       4: aload_1
       5: aload_2
       6: invokevirtual #150                // Method org/apache/hadoop/security/authorize/ServiceAuthorizationManager.refreshWithLoadedConfiguration:(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/security/authorize/PolicyProvider;)V
       9: return

  public org.apache.hadoop.security.authorize.ServiceAuthorizationManager getServiceAuthorizationManager();
    Code:
       0: aload_0
       1: getfield      #148                // Field serviceAuthorizationManager:Lorg/apache/hadoop/security/authorize/ServiceAuthorizationManager;
       4: areturn

  private java.lang.String getQueueClassPrefix();
    Code:
       0: new           #43                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #152                // String ipc.
       9: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #5                  // Field port:I
      16: invokevirtual #153                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      19: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn

  static java.lang.Class<? extends java.util.concurrent.BlockingQueue<org.apache.hadoop.ipc.Server$Call>> getQueueClass(java.lang.String, org.apache.hadoop.conf.Configuration);
    Code:
       0: new           #43                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      11: ldc           #154                // String .
      13: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: ldc           #155                // String callqueue.impl
      18: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      24: astore_2
      25: aload_1
      26: aload_2
      27: ldc           #156                // class java/util/concurrent/LinkedBlockingQueue
      29: invokevirtual #157                // Method org/apache/hadoop/conf/Configuration.getClass:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;
      32: astore_3
      33: aload_3
      34: ldc           #66                 // class org/apache/hadoop/ipc/Server$Call
      36: invokestatic  #158                // Method org/apache/hadoop/ipc/CallQueueManager.convertQueueClass:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
      39: areturn

  static java.lang.Class<? extends org.apache.hadoop.ipc.RpcScheduler> getSchedulerClass(java.lang.String, org.apache.hadoop.conf.Configuration);
    Code:
       0: new           #43                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      11: ldc           #154                // String .
      13: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: ldc           #159                // String scheduler.impl
      18: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      24: astore_2
      25: aload_1
      26: aload_2
      27: aconst_null
      28: invokevirtual #157                // Method org/apache/hadoop/conf/Configuration.getClass:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;
      31: astore_3
      32: aload_3
      33: ifnonnull     101
      36: new           #43                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      43: aload_0
      44: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: ldc           #154                // String .
      49: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: ldc           #155                // String callqueue.impl
      54: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: astore        4
      62: aload_1
      63: aload         4
      65: aconst_null
      66: invokevirtual #157                // Method org/apache/hadoop/conf/Configuration.getClass:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;
      69: astore        5
      71: aload         5
      73: ifnull        101
      76: aload         5
      78: invokevirtual #160                // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
      81: ldc           #161                // class org/apache/hadoop/ipc/FairCallQueue
      83: invokevirtual #160                // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
      86: invokevirtual #162                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      89: ifeq          101
      92: aload_1
      93: aload_2
      94: ldc           #163                // class org/apache/hadoop/ipc/DecayRpcScheduler
      96: ldc           #164                // class org/apache/hadoop/ipc/RpcScheduler
      98: invokevirtual #165                // Method org/apache/hadoop/conf/Configuration.setClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V
     101: aload_1
     102: aload_2
     103: ldc           #166                // class org/apache/hadoop/ipc/DefaultRpcScheduler
     105: invokevirtual #157                // Method org/apache/hadoop/conf/Configuration.getClass:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;
     108: astore_3
     109: aload_3
     110: invokestatic  #167                // Method org/apache/hadoop/ipc/CallQueueManager.convertSchedulerClass:(Ljava/lang/Class;)Ljava/lang/Class;
     113: areturn

  public synchronized void refreshCallQueue(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: invokespecial #168                // Method getQueueClassPrefix:()Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: aload_0
       7: getfield      #169                // Field handlerCount:I
      10: aload_1
      11: ldc           #170                // String ipc.server.handler.queue.size
      13: bipush        100
      15: invokevirtual #171                // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      18: imul
      19: putfield      #2                  // Field maxQueueSize:I
      22: aload_0
      23: getfield      #10                 // Field callQueue:Lorg/apache/hadoop/ipc/CallQueueManager;
      26: aload_2
      27: aload_1
      28: invokestatic  #172                // Method getSchedulerClass:(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;
      31: aload_2
      32: aload_1
      33: invokestatic  #173                // Method getQueueClass:(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;
      36: aload_0
      37: getfield      #2                  // Field maxQueueSize:I
      40: aload_2
      41: aload_1
      42: invokevirtual #174                // Method org/apache/hadoop/ipc/CallQueueManager.swapQueue:(Ljava/lang/Class;Ljava/lang/Class;ILjava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V
      45: aload_0
      46: getfield      #10                 // Field callQueue:Lorg/apache/hadoop/ipc/CallQueueManager;
      49: aload_2
      50: aload_1
      51: invokestatic  #175                // Method getClientBackoffEnable:(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Z
      54: invokevirtual #176                // Method org/apache/hadoop/ipc/CallQueueManager.setClientBackoffEnabled:(Z)V
      57: return

  static boolean getClientBackoffEnable(java.lang.String, org.apache.hadoop.conf.Configuration);
    Code:
       0: new           #43                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      11: ldc           #154                // String .
      13: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: ldc           #177                // String backoff.enable
      18: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      24: astore_2
      25: aload_1
      26: aload_2
      27: iconst_0
      28: invokevirtual #178                // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
      31: ireturn

  public void queueCall(org.apache.hadoop.ipc.Server$Call) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method internalQueueCall:(Lorg/apache/hadoop/ipc/Server$Call;)V
       5: goto          17
       8: astore_2
       9: aload_2
      10: invokevirtual #180                // Method org/apache/hadoop/ipc/RpcServerException.getCause:()Ljava/lang/Throwable;
      13: checkcast     #181                // class java/io/IOException
      16: athrow
      17: return
    Exception table:
       from    to  target type
           0     5     8   Class org/apache/hadoop/ipc/RpcServerException

  private void internalQueueCall(org.apache.hadoop.ipc.Server$Call) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #3                  // Method internalQueueCall:(Lorg/apache/hadoop/ipc/Server$Call;Z)V
       6: return

  private void internalQueueCall(org.apache.hadoop.ipc.Server$Call, boolean) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: iload_2
       1: ifeq          15
       4: aload_0
       5: getfield      #10                 // Field callQueue:Lorg/apache/hadoop/ipc/CallQueueManager;
       8: aload_1
       9: invokevirtual #182                // Method org/apache/hadoop/ipc/CallQueueManager.put:(Lorg/apache/hadoop/ipc/Schedulable;)V
      12: goto          24
      15: aload_0
      16: getfield      #10                 // Field callQueue:Lorg/apache/hadoop/ipc/CallQueueManager;
      19: aload_1
      20: invokevirtual #183                // Method org/apache/hadoop/ipc/CallQueueManager.add:(Lorg/apache/hadoop/ipc/Schedulable;)Z
      23: pop
      24: invokestatic  #99                 // Method org/apache/hadoop/util/Time.monotonicNowNanos:()J
      27: aload_1
      28: getfield      #100                // Field org/apache/hadoop/ipc/Server$Call.timestampNanos:J
      31: lsub
      32: lstore_3
      33: aload_1
      34: invokevirtual #101                // Method org/apache/hadoop/ipc/Server$Call.getProcessingDetails:()Lorg/apache/hadoop/ipc/ProcessingDetails;
      37: getstatic     #103                // Field org/apache/hadoop/ipc/ProcessingDetails$Timing.ENQUEUE:Lorg/apache/hadoop/ipc/ProcessingDetails$Timing;
      40: lload_3
      41: getstatic     #184                // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      44: invokevirtual #185                // Method org/apache/hadoop/ipc/ProcessingDetails.set:(Lorg/apache/hadoop/ipc/ProcessingDetails$Timing;JLjava/util/concurrent/TimeUnit;)V
      47: goto          63
      50: astore_3
      51: aload_0
      52: getfield      #82                 // Field rpcMetrics:Lorg/apache/hadoop/ipc/metrics/RpcMetrics;
      55: invokevirtual #187                // Method org/apache/hadoop/ipc/metrics/RpcMetrics.incrClientBackoff:()V
      58: aload_3
      59: invokevirtual #188                // Method org/apache/hadoop/ipc/CallQueueManager$CallQueueOverflowException.getCause:()Ljava/io/IOException;
      62: athrow
      63: return
    Exception table:
       from    to  target type
           0    47    50   Class org/apache/hadoop/ipc/CallQueueManager$CallQueueOverflowException

  void logException(org.slf4j.Logger, java.lang.Throwable, org.apache.hadoop.ipc.Server$Call);
    Code:
       0: aload_0
       1: getfield      #35                 // Field exceptionsHandler:Lorg/apache/hadoop/ipc/Server$ExceptionsHandler;
       4: aload_2
       5: invokevirtual #189                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: invokevirtual #190                // Method org/apache/hadoop/ipc/Server$ExceptionsHandler.isSuppressedLog:(Ljava/lang/Class;)Z
      11: ifeq          15
      14: return
      15: new           #43                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      22: invokestatic  #191                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      25: invokevirtual #192                // Method java/lang/Thread.getName:()Ljava/lang/String;
      28: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #193                // String , call
      33: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_3
      37: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      40: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: astore        4
      45: aload_0
      46: getfield      #35                 // Field exceptionsHandler:Lorg/apache/hadoop/ipc/Server$ExceptionsHandler;
      49: aload_2
      50: invokevirtual #189                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      53: invokevirtual #194                // Method org/apache/hadoop/ipc/Server$ExceptionsHandler.isTerseLog:(Ljava/lang/Class;)Z
      56: ifeq          92
      59: aload_1
      60: new           #43                 // class java/lang/StringBuilder
      63: dup
      64: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      67: aload         4
      69: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: ldc           #195                // String :
      74: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: aload_2
      78: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      81: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      84: invokeinterface #196,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      89: goto          127
      92: aload_2
      93: instanceof    #197                // class java/lang/RuntimeException
      96: ifne          106
      99: aload_2
     100: instanceof    #198                // class java/lang/Error
     103: ifeq          118
     106: aload_1
     107: aload         4
     109: aload_2
     110: invokeinterface #199,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     115: goto          127
     118: aload_1
     119: aload         4
     121: aload_2
     122: invokeinterface #200,  3          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Throwable;)V
     127: return

  protected org.apache.hadoop.ipc.Server(java.lang.String, int, java.lang.Class<? extends org.apache.hadoop.io.Writable>, int, org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: iload         4
       6: iconst_m1
       7: iconst_m1
       8: aload         5
      10: iload_2
      11: invokestatic  #201                // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      14: aconst_null
      15: aconst_null
      16: invokespecial #202                // Method "<init>":(Ljava/lang/String;ILjava/lang/Class;IIILorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Lorg/apache/hadoop/security/token/SecretManager;Ljava/lang/String;)V
      19: return

  protected org.apache.hadoop.ipc.Server(java.lang.String, int, java.lang.Class<? extends org.apache.hadoop.io.Writable>, int, int, int, org.apache.hadoop.conf.Configuration, java.lang.String, org.apache.hadoop.security.token.SecretManager<? extends org.apache.hadoop.security.token.TokenIdentifier>) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: iload         4
       6: iload         5
       8: iload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aconst_null
      17: invokespecial #202                // Method "<init>":(Ljava/lang/String;ILjava/lang/Class;IIILorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Lorg/apache/hadoop/security/token/SecretManager;Ljava/lang/String;)V
      20: return

  protected org.apache.hadoop.ipc.Server(java.lang.String, int, java.lang.Class<? extends org.apache.hadoop.io.Writable>, int, int, int, org.apache.hadoop.conf.Configuration, java.lang.String, org.apache.hadoop.security.token.SecretManager<? extends org.apache.hadoop.security.token.TokenIdentifier>, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #203                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #204                // class org/apache/hadoop/ipc/Server$ExceptionsHandler
       8: dup
       9: invokespecial #205                // Method org/apache/hadoop/ipc/Server$ExceptionsHandler."<init>":()V
      12: putfield      #35                 // Field exceptionsHandler:Lorg/apache/hadoop/ipc/Server$ExceptionsHandler;
      15: aload_0
      16: aconst_null
      17: putfield      #30                 // Field portRangeConfig:Ljava/lang/String;
      20: aload_0
      21: new           #206                // class org/apache/hadoop/security/authorize/ServiceAuthorizationManager
      24: dup
      25: invokespecial #207                // Method org/apache/hadoop/security/authorize/ServiceAuthorizationManager."<init>":()V
      28: putfield      #148                // Field serviceAuthorizationManager:Lorg/apache/hadoop/security/authorize/ServiceAuthorizationManager;
      31: aload_0
      32: new           #208                // class org/apache/hadoop/ipc/Server$1
      35: dup
      36: aload_0
      37: invokespecial #209                // Method org/apache/hadoop/ipc/Server$1."<init>":(Lorg/apache/hadoop/ipc/Server;)V
      40: putfield      #210                // Field responseBuffer:Ljava/lang/ThreadLocal;
      43: aload_0
      44: iconst_1
      45: putfield      #33                 // Field running:Z
      48: aload_0
      49: aconst_null
      50: putfield      #211                // Field listener:Lorg/apache/hadoop/ipc/Server$Listener;
      53: aload_0
      54: aconst_null
      55: putfield      #6                  // Field responder:Lorg/apache/hadoop/ipc/Server$Responder;
      58: aload_0
      59: aconst_null
      60: putfield      #145                // Field handlers:[Lorg/apache/hadoop/ipc/Server$Handler;
      63: aload_0
      64: iconst_0
      65: putfield      #81                 // Field logSlowRPC:Z
      68: aload_0
      69: aload_1
      70: putfield      #31                 // Field bindAddress:Ljava/lang/String;
      73: aload_0
      74: aload         7
      76: putfield      #32                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      79: aload_0
      80: aload         10
      82: putfield      #30                 // Field portRangeConfig:Ljava/lang/String;
      85: aload_0
      86: iload_2
      87: putfield      #5                  // Field port:I
      90: aload_0
      91: aload_3
      92: putfield      #56                 // Field rpcRequestClass:Ljava/lang/Class;
      95: aload_0
      96: iload         4
      98: putfield      #169                // Field handlerCount:I
     101: aload_0
     102: iconst_0
     103: putfield      #20                 // Field socketSendBufferSize:I
     106: aload_0
     107: aload         8
     109: putfield      #212                // Field serverName:Ljava/lang/String;
     112: aload_0
     113: aconst_null
     114: putfield      #213                // Field auxiliaryListenerMap:Ljava/util/Map;
     117: aload_0
     118: aload         7
     120: ldc           #214                // String ipc.maximum.data.length
     122: ldc           #215                // int 67108864
     124: invokevirtual #171                // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
     127: putfield      #16                 // Field maxDataLength:I
     130: iload         6
     132: iconst_m1
     133: if_icmpeq     148
     136: aload_0
     137: iload         4
     139: iload         6
     141: imul
     142: putfield      #2                  // Field maxQueueSize:I
     145: goto          164
     148: aload_0
     149: iload         4
     151: aload         7
     153: ldc           #170                // String ipc.server.handler.queue.size
     155: bipush        100
     157: invokevirtual #171                // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
     160: imul
     161: putfield      #2                  // Field maxQueueSize:I
     164: aload_0
     165: aload         7
     167: ldc           #216                // String ipc.server.max.response.size
     169: ldc           #217                // int 1048576
     171: invokevirtual #171                // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
     174: putfield      #218                // Field maxRespSize:I
     177: iload         5
     179: iconst_m1
     180: if_icmpeq     192
     183: aload_0
     184: iload         5
     186: putfield      #29                 // Field readThreads:I
     189: goto          204
     192: aload_0
     193: aload         7
     195: ldc           #219                // String ipc.server.read.threadpool.size
     197: iconst_1
     198: invokevirtual #171                // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
     201: putfield      #29                 // Field readThreads:I
     204: aload_0
     205: aload         7
     207: ldc           #220                // String ipc.server.read.connection-queue.size
     209: bipush        100
     211: invokevirtual #171                // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
     214: putfield      #28                 // Field readerPendingConnectionQueue:I
     217: aload_0
     218: invokespecial #168                // Method getQueueClassPrefix:()Ljava/lang/String;
     221: astore        11
     223: aload_0
     224: new           #221                // class org/apache/hadoop/ipc/CallQueueManager
     227: dup
     228: aload         11
     230: aload         7
     232: invokestatic  #173                // Method getQueueClass:(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;
     235: aload         11
     237: aload         7
     239: invokestatic  #172                // Method getSchedulerClass:(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;
     242: aload         11
     244: aload         7
     246: invokestatic  #175                // Method getClientBackoffEnable:(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Z
     249: aload_0
     250: getfield      #2                  // Field maxQueueSize:I
     253: aload         11
     255: aload         7
     257: invokespecial #222                // Method org/apache/hadoop/ipc/CallQueueManager."<init>":(Ljava/lang/Class;Ljava/lang/Class;ZILjava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V
     260: putfield      #10                 // Field callQueue:Lorg/apache/hadoop/ipc/CallQueueManager;
     263: aload_0
     264: aload         9
     266: putfield      #19                 // Field secretManager:Lorg/apache/hadoop/security/token/SecretManager;
     269: aload_0
     270: aload         7
     272: ldc           #223                // String hadoop.security.authorization
     274: iconst_0
     275: invokevirtual #178                // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
     278: putfield      #224                // Field authorize:Z
     281: aload_0
     282: aload_0
     283: aload         9
     285: aload         7
     287: invokespecial #225                // Method getAuthMethods:(Lorg/apache/hadoop/security/token/SecretManager;Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;
     290: putfield      #17                 // Field enabledAuthMethods:Ljava/util/List;
     293: aload_0
     294: aload_0
     295: aload_0
     296: getfield      #17                 // Field enabledAuthMethods:Ljava/util/List;
     299: invokespecial #226                // Method buildNegotiateResponse:(Ljava/util/List;)Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcSaslProto;
     302: putfield      #18                 // Field negotiateResponse:Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcSaslProto;
     305: aload_0
     306: new           #227                // class org/apache/hadoop/ipc/Server$Listener
     309: dup
     310: aload_0
     311: iload_2
     312: invokespecial #228                // Method org/apache/hadoop/ipc/Server$Listener."<init>":(Lorg/apache/hadoop/ipc/Server;I)V
     315: putfield      #211                // Field listener:Lorg/apache/hadoop/ipc/Server$Listener;
     318: aload_0
     319: aload_0
     320: getfield      #211                // Field listener:Lorg/apache/hadoop/ipc/Server$Listener;
     323: invokevirtual #229                // Method org/apache/hadoop/ipc/Server$Listener.getAddress:()Ljava/net/InetSocketAddress;
     326: invokevirtual #125                // Method java/net/InetSocketAddress.getPort:()I
     329: putfield      #5                  // Field port:I
     332: aload_0
     333: new           #230                // class org/apache/hadoop/ipc/Server$ConnectionManager
     336: dup
     337: aload_0
     338: invokespecial #231                // Method org/apache/hadoop/ipc/Server$ConnectionManager."<init>":(Lorg/apache/hadoop/ipc/Server;)V
     341: putfield      #26                 // Field connectionManager:Lorg/apache/hadoop/ipc/Server$ConnectionManager;
     344: aload_0
     345: aload_0
     346: aload         7
     348: invokestatic  #232                // Method org/apache/hadoop/ipc/metrics/RpcMetrics.create:(Lorg/apache/hadoop/ipc/Server;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/ipc/metrics/RpcMetrics;
     351: putfield      #82                 // Field rpcMetrics:Lorg/apache/hadoop/ipc/metrics/RpcMetrics;
     354: aload_0
     355: aload_0
     356: getfield      #5                  // Field port:I
     359: invokestatic  #233                // Method org/apache/hadoop/ipc/metrics/RpcDetailedMetrics.create:(I)Lorg/apache/hadoop/ipc/metrics/RpcDetailedMetrics;
     362: putfield      #114                // Field rpcDetailedMetrics:Lorg/apache/hadoop/ipc/metrics/RpcDetailedMetrics;
     365: aload_0
     366: aload         7
     368: ldc           #235                // String ipc.server.tcpnodelay
     370: iconst_1
     371: invokevirtual #178                // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
     374: putfield      #24                 // Field tcpNoDelay:Z
     377: aload_0
     378: aload         7
     380: ldc           #236                // String ipc.server.log.slow.rpc
     382: iconst_0
     383: invokevirtual #178                // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
     386: invokevirtual #237                // Method setLogSlowRPC:(Z)V
     389: aload_0
     390: new           #238                // class org/apache/hadoop/ipc/Server$Responder
     393: dup
     394: aload_0
     395: invokespecial #239                // Method org/apache/hadoop/ipc/Server$Responder."<init>":(Lorg/apache/hadoop/ipc/Server;)V
     398: putfield      #6                  // Field responder:Lorg/apache/hadoop/ipc/Server$Responder;
     401: aload         9
     403: ifnonnull     412
     406: invokestatic  #240                // Method org/apache/hadoop/security/UserGroupInformation.isSecurityEnabled:()Z
     409: ifeq          426
     412: aload         7
     414: invokestatic  #241                // Method org/apache/hadoop/security/SaslRpcServer.init:(Lorg/apache/hadoop/conf/Configuration;)V
     417: aload_0
     418: aload         7
     420: invokestatic  #242                // Method org/apache/hadoop/security/SaslPropertiesResolver.getInstance:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/security/SaslPropertiesResolver;
     423: putfield      #13                 // Field saslPropsResolver:Lorg/apache/hadoop/security/SaslPropertiesResolver;
     426: aload_0
     427: getfield      #35                 // Field exceptionsHandler:Lorg/apache/hadoop/ipc/Server$ExceptionsHandler;
     430: iconst_1
     431: anewarray     #62                 // class java/lang/Class
     434: dup
     435: iconst_0
     436: ldc           #243                // class org/apache/hadoop/ipc/StandbyException
     438: aastore
     439: invokevirtual #36                 // Method org/apache/hadoop/ipc/Server$ExceptionsHandler.addTerseLoggingExceptions:([Ljava/lang/Class;)V
     442: return

  public synchronized void addAuxiliaryListener(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #213                // Field auxiliaryListenerMap:Ljava/util/Map;
       4: ifnonnull     18
       7: aload_0
       8: new           #244                // class java/util/HashMap
      11: dup
      12: invokespecial #245                // Method java/util/HashMap."<init>":()V
      15: putfield      #213                // Field auxiliaryListenerMap:Ljava/util/Map;
      18: aload_0
      19: getfield      #213                // Field auxiliaryListenerMap:Ljava/util/Map;
      22: iload_1
      23: invokestatic  #246                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      26: invokeinterface #247,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      31: ifeq          65
      34: iload_1
      35: ifeq          65
      38: new           #181                // class java/io/IOException
      41: dup
      42: new           #43                 // class java/lang/StringBuilder
      45: dup
      46: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      49: ldc           #248                // String There is already a listener binding to:
      51: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: iload_1
      55: invokevirtual #153                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      58: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: invokespecial #249                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      64: athrow
      65: new           #227                // class org/apache/hadoop/ipc/Server$Listener
      68: dup
      69: aload_0
      70: iload_1
      71: invokespecial #228                // Method org/apache/hadoop/ipc/Server$Listener."<init>":(Lorg/apache/hadoop/ipc/Server;I)V
      74: astore_2
      75: aload_2
      76: invokevirtual #250                // Method org/apache/hadoop/ipc/Server$Listener.setIsAuxiliary:()V
      79: getstatic     #50                 // Field LOG:Lorg/slf4j/Logger;
      82: new           #43                 // class java/lang/StringBuilder
      85: dup
      86: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      89: ldc           #251                // String Adding a server listener on port
      91: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: aload_2
      95: invokevirtual #229                // Method org/apache/hadoop/ipc/Server$Listener.getAddress:()Ljava/net/InetSocketAddress;
      98: invokevirtual #125                // Method java/net/InetSocketAddress.getPort:()I
     101: invokevirtual #153                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     104: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     107: invokeinterface #196,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     112: aload_0
     113: getfield      #213                // Field auxiliaryListenerMap:Ljava/util/Map;
     116: aload_2
     117: invokevirtual #229                // Method org/apache/hadoop/ipc/Server$Listener.getAddress:()Ljava/net/InetSocketAddress;
     120: invokevirtual #125                // Method java/net/InetSocketAddress.getPort:()I
     123: invokestatic  #246                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     126: aload_2
     127: invokeinterface #41,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     132: pop
     133: return

  private org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcSaslProto buildNegotiateResponse(java.util.List<org.apache.hadoop.security.SaslRpcServer$AuthMethod>) throws java.io.IOException;
    Code:
       0: invokestatic  #252                // Method org/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcSaslProto.newBuilder:()Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcSaslProto$Builder;
       3: astore_2
       4: aload_1
       5: getstatic     #253                // Field org/apache/hadoop/security/SaslRpcServer$AuthMethod.SIMPLE:Lorg/apache/hadoop/security/SaslRpcServer$AuthMethod;
       8: invokeinterface #254,  2          // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      13: ifeq          37
      16: aload_1
      17: invokeinterface #255,  1          // InterfaceMethod java/util/List.size:()I
      22: iconst_1
      23: if_icmpne     37
      26: aload_2
      27: getstatic     #256                // Field org/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcSaslProto$SaslState.SUCCESS:Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcSaslProto$SaslState;
      30: invokevirtual #257                // Method org/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcSaslProto$Builder.setState:(Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcSaslProto$SaslState;)Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcSaslProto$Builder;
      33: pop
      34: goto          146
      37: aload_2
      38: getstatic     #258                // Field org/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcSaslProto$SaslState.NEGOTIATE:Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcSaslProto$SaslState;
      41: invokevirtual #257                // Method org/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcSaslProto$Builder.setState:(Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcSaslProto$SaslState;)Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcSaslProto$Builder;
      44: pop
      45: aload_1
      46: invokeinterface #259,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      51: astore_3
      52: aload_3
      53: invokeinterface #128,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      58: ifeq          146
      61: aload_3
      62: invokeinterface #129,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      67: checkcast     #260                // class org/apache/hadoop/security/SaslRpcServer$AuthMethod
      70: astore        4
      72: new           #261                // class org/apache/hadoop/security/SaslRpcServer
      75: dup
      76: aload         4
      78: invokespecial #262                // Method org/apache/hadoop/security/SaslRpcServer."<init>":(Lorg/apache/hadoop/security/SaslRpcServer$AuthMethod;)V
      81: astore        5
      83: aload_2
      84: invokevirtual #263                // Method org/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcSaslProto$Builder.addAuthsBuilder:()Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcSaslProto$SaslAuth$Builder;
      87: aload         4
      89: invokevirtual #264                // Method org/apache/hadoop/security/SaslRpcServer$AuthMethod.toString:()Ljava/lang/String;
      92: invokevirtual #265                // Method org/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcSaslProto$SaslAuth$Builder.setMethod:(Ljava/lang/String;)Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcSaslProto$SaslAuth$Builder;
      95: aload         5
      97: getfield      #266                // Field org/apache/hadoop/security/SaslRpcServer.mechanism:Ljava/lang/String;
     100: invokevirtual #267                // Method org/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcSaslProto$SaslAuth$Builder.setMechanism:(Ljava/lang/String;)Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcSaslProto$SaslAuth$Builder;
     103: astore        6
     105: aload         5
     107: getfield      #268                // Field org/apache/hadoop/security/SaslRpcServer.protocol:Ljava/lang/String;
     110: ifnull        124
     113: aload         6
     115: aload         5
     117: getfield      #268                // Field org/apache/hadoop/security/SaslRpcServer.protocol:Ljava/lang/String;
     120: invokevirtual #269                // Method org/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcSaslProto$SaslAuth$Builder.setProtocol:(Ljava/lang/String;)Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcSaslProto$SaslAuth$Builder;
     123: pop
     124: aload         5
     126: getfield      #270                // Field org/apache/hadoop/security/SaslRpcServer.serverId:Ljava/lang/String;
     129: ifnull        143
     132: aload         6
     134: aload         5
     136: getfield      #270                // Field org/apache/hadoop/security/SaslRpcServer.serverId:Ljava/lang/String;
     139: invokevirtual #271                // Method org/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcSaslProto$SaslAuth$Builder.setServerId:(Ljava/lang/String;)Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcSaslProto$SaslAuth$Builder;
     142: pop
     143: goto          52
     146: aload_2
     147: invokevirtual #272                // Method org/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcSaslProto$Builder.build:()Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcSaslProto;
     150: areturn

  private java.util.List<org.apache.hadoop.security.SaslRpcServer$AuthMethod> getAuthMethods(org.apache.hadoop.security.token.SecretManager<?>, org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_2
       1: invokestatic  #273                // Method org/apache/hadoop/security/SecurityUtil.getAuthenticationMethod:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/security/UserGroupInformation$AuthenticationMethod;
       4: astore_3
       5: new           #274                // class java/util/ArrayList
       8: dup
       9: invokespecial #275                // Method java/util/ArrayList."<init>":()V
      12: astore        4
      14: aload_3
      15: getstatic     #276                // Field org/apache/hadoop/security/UserGroupInformation$AuthenticationMethod.TOKEN:Lorg/apache/hadoop/security/UserGroupInformation$AuthenticationMethod;
      18: if_acmpne     55
      21: aload_1
      22: ifnonnull     103
      25: new           #42                 // class java/lang/IllegalArgumentException
      28: dup
      29: new           #43                 // class java/lang/StringBuilder
      32: dup
      33: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      36: getstatic     #276                // Field org/apache/hadoop/security/UserGroupInformation$AuthenticationMethod.TOKEN:Lorg/apache/hadoop/security/UserGroupInformation$AuthenticationMethod;
      39: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      42: ldc_w         #277                // String  authentication requires a secret manager
      45: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokespecial #49                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: aload_1
      56: ifnull        103
      59: getstatic     #50                 // Field LOG:Lorg/slf4j/Logger;
      62: new           #43                 // class java/lang/StringBuilder
      65: dup
      66: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      69: getstatic     #276                // Field org/apache/hadoop/security/UserGroupInformation$AuthenticationMethod.TOKEN:Lorg/apache/hadoop/security/UserGroupInformation$AuthenticationMethod;
      72: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      75: ldc_w         #278                // String  authentication enabled for secret manager
      78: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      84: invokeinterface #55,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      89: aload         4
      91: getstatic     #276                // Field org/apache/hadoop/security/UserGroupInformation$AuthenticationMethod.TOKEN:Lorg/apache/hadoop/security/UserGroupInformation$AuthenticationMethod;
      94: invokevirtual #279                // Method org/apache/hadoop/security/UserGroupInformation$AuthenticationMethod.getAuthMethod:()Lorg/apache/hadoop/security/SaslRpcServer$AuthMethod;
      97: invokeinterface #280,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     102: pop
     103: aload         4
     105: aload_3
     106: invokevirtual #279                // Method org/apache/hadoop/security/UserGroupInformation$AuthenticationMethod.getAuthMethod:()Lorg/apache/hadoop/security/SaslRpcServer$AuthMethod;
     109: invokeinterface #280,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     114: pop
     115: getstatic     #50                 // Field LOG:Lorg/slf4j/Logger;
     118: new           #43                 // class java/lang/StringBuilder
     121: dup
     122: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     125: ldc_w         #281                // String Server accepts auth methods:
     128: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: aload         4
     133: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     136: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     139: invokeinterface #55,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     144: aload         4
     146: areturn

  private void closeConnection(org.apache.hadoop.ipc.Server$Connection);
    Code:
       0: aload_0
       1: getfield      #26                 // Field connectionManager:Lorg/apache/hadoop/ipc/Server$ConnectionManager;
       4: aload_1
       5: invokevirtual #282                // Method org/apache/hadoop/ipc/Server$ConnectionManager.close:(Lorg/apache/hadoop/ipc/Server$Connection;)Z
       8: pop
       9: return

  private void setupResponse(org.apache.hadoop.ipc.Server$RpcCall, org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcResponseHeaderProto$RpcStatusProto, org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcResponseHeaderProto$RpcErrorCodeProto, org.apache.hadoop.io.Writable, java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_2
       1: getstatic     #283                // Field org/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$RpcStatusProto.FATAL:Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$RpcStatusProto;
       4: if_acmpne     15
       7: aload_1
       8: getfield      #71                 // Field org/apache/hadoop/ipc/Server$RpcCall.connection:Lorg/apache/hadoop/ipc/Server$Connection;
      11: invokevirtual #284                // Method org/apache/hadoop/ipc/Server$Connection.setShouldClose:()Z
      14: pop
      15: invokestatic  #285                // Method org/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto.newBuilder:()Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$Builder;
      18: astore        7
      20: aload         7
      22: aload_1
      23: getfield      #286                // Field org/apache/hadoop/ipc/Server$RpcCall.clientId:[B
      26: invokestatic  #287                // Method com/google/protobuf/ByteString.copyFrom:([B)Lcom/google/protobuf/ByteString;
      29: invokevirtual #288                // Method org/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$Builder.setClientId:(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$Builder;
      32: pop
      33: aload         7
      35: aload_1
      36: getfield      #289                // Field org/apache/hadoop/ipc/Server$RpcCall.callId:I
      39: invokevirtual #290                // Method org/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$Builder.setCallId:(I)Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$Builder;
      42: pop
      43: aload         7
      45: aload_1
      46: getfield      #291                // Field org/apache/hadoop/ipc/Server$RpcCall.retryCount:I
      49: invokevirtual #292                // Method org/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$Builder.setRetryCount:(I)Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$Builder;
      52: pop
      53: aload         7
      55: aload_2
      56: invokevirtual #293                // Method org/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$Builder.setStatus:(Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$RpcStatusProto;)Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$Builder;
      59: pop
      60: aload         7
      62: bipush        9
      64: invokevirtual #294                // Method org/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$Builder.setServerIpcVersionNum:(I)Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$Builder;
      67: pop
      68: aload_0
      69: getfield      #9                  // Field alignmentContext:Lorg/apache/hadoop/ipc/AlignmentContext;
      72: ifnull        86
      75: aload_0
      76: getfield      #9                  // Field alignmentContext:Lorg/apache/hadoop/ipc/AlignmentContext;
      79: aload         7
      81: invokeinterface #295,  2          // InterfaceMethod org/apache/hadoop/ipc/AlignmentContext.updateResponseState:(Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$Builder;)V
      86: aload_2
      87: getstatic     #296                // Field org/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$RpcStatusProto.SUCCESS:Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$RpcStatusProto;
      90: if_acmpne     173
      93: aload         7
      95: invokevirtual #297                // Method org/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$Builder.build:()Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto;
      98: astore        8
     100: aload_0
     101: aload_1
     102: aload         8
     104: aload         4
     106: invokespecial #298                // Method setupResponse:(Lorg/apache/hadoop/ipc/Server$RpcCall;Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto;Lorg/apache/hadoop/io/Writable;)V
     109: goto          170
     112: astore        9
     114: getstatic     #50                 // Field LOG:Lorg/slf4j/Logger;
     117: new           #43                 // class java/lang/StringBuilder
     120: dup
     121: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     124: ldc_w         #300                // String Error serializing call response for call
     127: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     130: aload_1
     131: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     134: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     137: aload         9
     139: invokeinterface #199,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     144: aload_0
     145: aload_1
     146: getstatic     #301                // Field org/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$RpcStatusProto.ERROR:Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$RpcStatusProto;
     149: getstatic     #302                // Field org/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$RpcErrorCodeProto.ERROR_SERIALIZING_RESPONSE:Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$RpcErrorCodeProto;
     152: aconst_null
     153: aload         9
     155: invokevirtual #189                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     158: invokevirtual #303                // Method java/lang/Class.getName:()Ljava/lang/String;
     161: aload         9
     163: invokestatic  #304                // Method org/apache/hadoop/util/StringUtils.stringifyException:(Ljava/lang/Throwable;)Ljava/lang/String;
     166: invokespecial #34                 // Method setupResponse:(Lorg/apache/hadoop/ipc/Server$RpcCall;Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$RpcStatusProto;Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$RpcErrorCodeProto;Lorg/apache/hadoop/io/Writable;Ljava/lang/String;Ljava/lang/String;)V
     169: return
     170: goto          207
     173: aload         7
     175: aload         5
     177: invokevirtual #305                // Method org/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$Builder.setExceptionClassName:(Ljava/lang/String;)Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$Builder;
     180: pop
     181: aload         7
     183: aload         6
     185: invokevirtual #306                // Method org/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$Builder.setErrorMsg:(Ljava/lang/String;)Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$Builder;
     188: pop
     189: aload         7
     191: aload_3
     192: invokevirtual #307                // Method org/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$Builder.setErrorDetail:(Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$RpcErrorCodeProto;)Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$Builder;
     195: pop
     196: aload_0
     197: aload_1
     198: aload         7
     200: invokevirtual #297                // Method org/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$Builder.build:()Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto;
     203: aconst_null
     204: invokespecial #298                // Method setupResponse:(Lorg/apache/hadoop/ipc/Server$RpcCall;Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto;Lorg/apache/hadoop/io/Writable;)V
     207: return
    Exception table:
       from    to  target type
         100   109   112   Class java/lang/Throwable

  private void setupResponse(org.apache.hadoop.ipc.Server$RpcCall, org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcResponseHeaderProto, org.apache.hadoop.io.Writable) throws java.io.IOException;
    Code:
       0: aload_3
       1: ifnull        11
       4: aload_3
       5: instanceof    #308                // class org/apache/hadoop/ipc/RpcWritable$ProtobufWrapper
       8: ifeq          22
      11: aload_0
      12: aload_2
      13: aload_3
      14: invokespecial #309                // Method setupResponseForProtobuf:(Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto;Lorg/apache/hadoop/io/Writable;)[B
      17: astore        4
      19: goto          30
      22: aload_0
      23: aload_2
      24: aload_3
      25: invokespecial #310                // Method setupResponseForWritable:(Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto;Lorg/apache/hadoop/io/Writable;)[B
      28: astore        4
      30: aload         4
      32: arraylength
      33: aload_0
      34: getfield      #218                // Field maxRespSize:I
      37: if_icmple     83
      40: getstatic     #50                 // Field LOG:Lorg/slf4j/Logger;
      43: new           #43                 // class java/lang/StringBuilder
      46: dup
      47: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      50: ldc_w         #311                // String Large response size
      53: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload         4
      58: arraylength
      59: invokevirtual #153                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      62: ldc_w         #312                // String  for call
      65: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_1
      69: invokevirtual #313                // Method org/apache/hadoop/ipc/Server$RpcCall.toString:()Ljava/lang/String;
      72: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      78: invokeinterface #314,  2          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      83: aload_1
      84: aload         4
      86: invokestatic  #315                // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      89: invokevirtual #316                // Method org/apache/hadoop/ipc/Server$RpcCall.setResponse:(Ljava/nio/ByteBuffer;)V
      92: return

  private byte[] setupResponseForWritable(org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcResponseHeaderProto, org.apache.hadoop.io.Writable) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #210                // Field responseBuffer:Ljava/lang/ThreadLocal;
       4: invokevirtual #64                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       7: checkcast     #317                // class org/apache/hadoop/ipc/ResponseBuffer
      10: invokevirtual #318                // Method org/apache/hadoop/ipc/ResponseBuffer.reset:()Lorg/apache/hadoop/ipc/ResponseBuffer;
      13: astore_3
      14: aload_1
      15: invokestatic  #319                // Method org/apache/hadoop/ipc/RpcWritable.wrap:(Ljava/lang/Object;)Lorg/apache/hadoop/ipc/RpcWritable;
      18: aload_3
      19: invokevirtual #320                // Method org/apache/hadoop/ipc/RpcWritable.writeTo:(Lorg/apache/hadoop/ipc/ResponseBuffer;)V
      22: aload_2
      23: ifnull        34
      26: aload_2
      27: invokestatic  #319                // Method org/apache/hadoop/ipc/RpcWritable.wrap:(Ljava/lang/Object;)Lorg/apache/hadoop/ipc/RpcWritable;
      30: aload_3
      31: invokevirtual #320                // Method org/apache/hadoop/ipc/RpcWritable.writeTo:(Lorg/apache/hadoop/ipc/ResponseBuffer;)V
      34: aload_3
      35: invokevirtual #321                // Method org/apache/hadoop/ipc/ResponseBuffer.toByteArray:()[B
      38: astore        4
      40: aload_3
      41: invokevirtual #322                // Method org/apache/hadoop/ipc/ResponseBuffer.capacity:()I
      44: aload_0
      45: getfield      #218                // Field maxRespSize:I
      48: if_icmple     58
      51: aload_3
      52: getstatic     #323                // Field INITIAL_RESP_BUF_SIZE:I
      55: invokevirtual #324                // Method org/apache/hadoop/ipc/ResponseBuffer.setCapacity:(I)V
      58: aload         4
      60: areturn
      61: astore        5
      63: aload_3
      64: invokevirtual #322                // Method org/apache/hadoop/ipc/ResponseBuffer.capacity:()I
      67: aload_0
      68: getfield      #218                // Field maxRespSize:I
      71: if_icmple     81
      74: aload_3
      75: getstatic     #323                // Field INITIAL_RESP_BUF_SIZE:I
      78: invokevirtual #324                // Method org/apache/hadoop/ipc/ResponseBuffer.setCapacity:(I)V
      81: aload         5
      83: athrow
    Exception table:
       from    to  target type
          14    40    61   any
          61    63    61   any

  private byte[] setupResponseForProtobuf(org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcResponseHeaderProto, org.apache.hadoop.io.Writable) throws java.io.IOException;
    Code:
       0: aload_2
       1: ifnull        14
       4: aload_2
       5: checkcast     #308                // class org/apache/hadoop/ipc/RpcWritable$ProtobufWrapper
       8: invokevirtual #325                // Method org/apache/hadoop/ipc/RpcWritable$ProtobufWrapper.getMessage:()Lcom/google/protobuf/Message;
      11: goto          15
      14: aconst_null
      15: astore_3
      16: aload_1
      17: invokestatic  #326                // Method getDelimitedLength:(Lcom/google/protobuf/Message;)I
      20: istore        4
      22: aload_3
      23: ifnull        35
      26: iload         4
      28: aload_3
      29: invokestatic  #326                // Method getDelimitedLength:(Lcom/google/protobuf/Message;)I
      32: iadd
      33: istore        4
      35: iload         4
      37: iconst_4
      38: iadd
      39: newarray       byte
      41: astore        5
      43: aload         5
      45: invokestatic  #327                // Method com/google/protobuf/CodedOutputStream.newInstance:([B)Lcom/google/protobuf/CodedOutputStream;
      48: astore        6
      50: aload         6
      52: iload         4
      54: bipush        24
      56: iushr
      57: sipush        255
      60: iand
      61: i2b
      62: invokevirtual #328                // Method com/google/protobuf/CodedOutputStream.writeRawByte:(B)V
      65: aload         6
      67: iload         4
      69: bipush        16
      71: iushr
      72: sipush        255
      75: iand
      76: i2b
      77: invokevirtual #328                // Method com/google/protobuf/CodedOutputStream.writeRawByte:(B)V
      80: aload         6
      82: iload         4
      84: bipush        8
      86: iushr
      87: sipush        255
      90: iand
      91: i2b
      92: invokevirtual #328                // Method com/google/protobuf/CodedOutputStream.writeRawByte:(B)V
      95: aload         6
      97: iload         4
      99: iconst_0
     100: iushr
     101: sipush        255
     104: iand
     105: i2b
     106: invokevirtual #328                // Method com/google/protobuf/CodedOutputStream.writeRawByte:(B)V
     109: aload         6
     111: aload_1
     112: invokevirtual #329                // Method org/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto.getSerializedSize:()I
     115: invokevirtual #330                // Method com/google/protobuf/CodedOutputStream.writeRawVarint32:(I)V
     118: aload_1
     119: aload         6
     121: invokevirtual #331                // Method org/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto.writeTo:(Lcom/google/protobuf/CodedOutputStream;)V
     124: aload_3
     125: ifnull        147
     128: aload         6
     130: aload_3
     131: invokeinterface #332,  1          // InterfaceMethod com/google/protobuf/Message.getSerializedSize:()I
     136: invokevirtual #330                // Method com/google/protobuf/CodedOutputStream.writeRawVarint32:(I)V
     139: aload_3
     140: aload         6
     142: invokeinterface #333,  2          // InterfaceMethod com/google/protobuf/Message.writeTo:(Lcom/google/protobuf/CodedOutputStream;)V
     147: aload         5
     149: areturn

  private static int getDelimitedLength(com.google.protobuf.Message);
    Code:
       0: aload_0
       1: invokeinterface #332,  1          // InterfaceMethod com/google/protobuf/Message.getSerializedSize:()I
       6: istore_1
       7: iload_1
       8: iload_1
       9: invokestatic  #334                // Method com/google/protobuf/CodedOutputStream.computeRawVarint32Size:(I)I
      12: iadd
      13: ireturn

  private void setupResponseOldVersionFatal(java.io.ByteArrayOutputStream, org.apache.hadoop.ipc.Server$RpcCall, org.apache.hadoop.io.Writable, java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: iconst_m1
       1: istore        6
       3: aload_1
       4: invokevirtual #335                // Method java/io/ByteArrayOutputStream.reset:()V
       7: new           #336                // class java/io/DataOutputStream
      10: dup
      11: aload_1
      12: invokespecial #337                // Method java/io/DataOutputStream."<init>":(Ljava/io/OutputStream;)V
      15: astore        7
      17: aload         7
      19: aload_2
      20: getfield      #289                // Field org/apache/hadoop/ipc/Server$RpcCall.callId:I
      23: invokevirtual #338                // Method java/io/DataOutputStream.writeInt:(I)V
      26: aload         7
      28: iconst_m1
      29: invokevirtual #338                // Method java/io/DataOutputStream.writeInt:(I)V
      32: aload         7
      34: aload         4
      36: invokestatic  #339                // Method org/apache/hadoop/io/WritableUtils.writeString:(Ljava/io/DataOutput;Ljava/lang/String;)V
      39: aload         7
      41: aload         5
      43: invokestatic  #339                // Method org/apache/hadoop/io/WritableUtils.writeString:(Ljava/io/DataOutput;Ljava/lang/String;)V
      46: aload_2
      47: aload_1
      48: invokevirtual #340                // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      51: invokestatic  #315                // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      54: invokevirtual #316                // Method org/apache/hadoop/ipc/Server$RpcCall.setResponse:(Ljava/nio/ByteBuffer;)V
      57: return

  private void wrapWithSasl(org.apache.hadoop.ipc.Server$RpcCall) throws java.io.IOException;
    Code:
       0: aload_1
       1: getfield      #71                 // Field org/apache/hadoop/ipc/Server$RpcCall.connection:Lorg/apache/hadoop/ipc/Server$Connection;
       4: getfield      #341                // Field org/apache/hadoop/ipc/Server$Connection.saslServer:Ljavax/security/sasl/SaslServer;
       7: ifnull        157
      10: aload_1
      11: getfield      #342                // Field org/apache/hadoop/ipc/Server$RpcCall.rpcResponse:Ljava/nio/ByteBuffer;
      14: invokevirtual #343                // Method java/nio/ByteBuffer.array:()[B
      17: astore_2
      18: aload_1
      19: getfield      #71                 // Field org/apache/hadoop/ipc/Server$RpcCall.connection:Lorg/apache/hadoop/ipc/Server$Connection;
      22: getfield      #341                // Field org/apache/hadoop/ipc/Server$Connection.saslServer:Ljavax/security/sasl/SaslServer;
      25: dup
      26: astore_3
      27: monitorenter
      28: aload_1
      29: getfield      #71                 // Field org/apache/hadoop/ipc/Server$RpcCall.connection:Lorg/apache/hadoop/ipc/Server$Connection;
      32: getfield      #341                // Field org/apache/hadoop/ipc/Server$Connection.saslServer:Ljavax/security/sasl/SaslServer;
      35: aload_2
      36: iconst_0
      37: aload_2
      38: arraylength
      39: invokeinterface #344,  4          // InterfaceMethod javax/security/sasl/SaslServer.wrap:([BII)[B
      44: astore_2
      45: aload_3
      46: monitorexit
      47: goto          57
      50: astore        4
      52: aload_3
      53: monitorexit
      54: aload         4
      56: athrow
      57: getstatic     #50                 // Field LOG:Lorg/slf4j/Logger;
      60: invokeinterface #51,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      65: ifeq          103
      68: getstatic     #50                 // Field LOG:Lorg/slf4j/Logger;
      71: new           #43                 // class java/lang/StringBuilder
      74: dup
      75: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      78: ldc_w         #345                // String Adding saslServer wrapped token of size
      81: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_2
      85: arraylength
      86: invokevirtual #153                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      89: ldc_w         #346                // String  as call response.
      92: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      98: invokeinterface #55,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     103: invokestatic  #285                // Method org/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto.newBuilder:()Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$Builder;
     106: getstatic     #347                // Field org/apache/hadoop/ipc/Server$AuthProtocol.SASL:Lorg/apache/hadoop/ipc/Server$AuthProtocol;
     109: getfield      #348                // Field org/apache/hadoop/ipc/Server$AuthProtocol.callId:I
     112: invokevirtual #290                // Method org/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$Builder.setCallId:(I)Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$Builder;
     115: getstatic     #296                // Field org/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$RpcStatusProto.SUCCESS:Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$RpcStatusProto;
     118: invokevirtual #293                // Method org/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$Builder.setStatus:(Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$RpcStatusProto;)Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$Builder;
     121: invokevirtual #297                // Method org/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$Builder.build:()Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto;
     124: astore_3
     125: invokestatic  #252                // Method org/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcSaslProto.newBuilder:()Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcSaslProto$Builder;
     128: getstatic     #349                // Field org/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcSaslProto$SaslState.WRAP:Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcSaslProto$SaslState;
     131: invokevirtual #257                // Method org/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcSaslProto$Builder.setState:(Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcSaslProto$SaslState;)Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcSaslProto$Builder;
     134: aload_2
     135: invokestatic  #287                // Method com/google/protobuf/ByteString.copyFrom:([B)Lcom/google/protobuf/ByteString;
     138: invokevirtual #350                // Method org/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcSaslProto$Builder.setToken:(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcSaslProto$Builder;
     141: invokevirtual #272                // Method org/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcSaslProto$Builder.build:()Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcSaslProto;
     144: astore        4
     146: aload_0
     147: aload_1
     148: aload_3
     149: aload         4
     151: invokestatic  #319                // Method org/apache/hadoop/ipc/RpcWritable.wrap:(Ljava/lang/Object;)Lorg/apache/hadoop/ipc/RpcWritable;
     154: invokespecial #298                // Method setupResponse:(Lorg/apache/hadoop/ipc/Server$RpcCall;Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto;Lorg/apache/hadoop/io/Writable;)V
     157: return
    Exception table:
       from    to  target type
          28    47    50   any
          50    54    50   any

  org.apache.hadoop.conf.Configuration getConf();
    Code:
       0: aload_0
       1: getfield      #32                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
       4: areturn

  public void setSocketSendBufSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #20                 // Field socketSendBufferSize:I
       5: return

  public void setTracer(org.apache.htrace.core.Tracer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field tracer:Lorg/apache/htrace/core/Tracer;
       5: return

  public synchronized void start();
    Code:
       0: aload_0
       1: getfield      #6                  // Field responder:Lorg/apache/hadoop/ipc/Server$Responder;
       4: invokevirtual #351                // Method org/apache/hadoop/ipc/Server$Responder.start:()V
       7: aload_0
       8: getfield      #211                // Field listener:Lorg/apache/hadoop/ipc/Server$Listener;
      11: invokevirtual #352                // Method org/apache/hadoop/ipc/Server$Listener.start:()V
      14: aload_0
      15: getfield      #213                // Field auxiliaryListenerMap:Ljava/util/Map;
      18: ifnull        74
      21: aload_0
      22: getfield      #213                // Field auxiliaryListenerMap:Ljava/util/Map;
      25: invokeinterface #353,  1          // InterfaceMethod java/util/Map.size:()I
      30: ifle          74
      33: aload_0
      34: getfield      #213                // Field auxiliaryListenerMap:Ljava/util/Map;
      37: invokeinterface #354,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      42: invokeinterface #355,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      47: astore_1
      48: aload_1
      49: invokeinterface #128,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      54: ifeq          74
      57: aload_1
      58: invokeinterface #129,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      63: checkcast     #227                // class org/apache/hadoop/ipc/Server$Listener
      66: astore_2
      67: aload_2
      68: invokevirtual #352                // Method org/apache/hadoop/ipc/Server$Listener.start:()V
      71: goto          48
      74: aload_0
      75: aload_0
      76: getfield      #169                // Field handlerCount:I
      79: anewarray     #356                // class org/apache/hadoop/ipc/Server$Handler
      82: putfield      #145                // Field handlers:[Lorg/apache/hadoop/ipc/Server$Handler;
      85: iconst_0
      86: istore_1
      87: iload_1
      88: aload_0
      89: getfield      #169                // Field handlerCount:I
      92: if_icmpge     125
      95: aload_0
      96: getfield      #145                // Field handlers:[Lorg/apache/hadoop/ipc/Server$Handler;
      99: iload_1
     100: new           #356                // class org/apache/hadoop/ipc/Server$Handler
     103: dup
     104: aload_0
     105: iload_1
     106: invokespecial #357                // Method org/apache/hadoop/ipc/Server$Handler."<init>":(Lorg/apache/hadoop/ipc/Server;I)V
     109: aastore
     110: aload_0
     111: getfield      #145                // Field handlers:[Lorg/apache/hadoop/ipc/Server$Handler;
     114: iload_1
     115: aaload
     116: invokevirtual #358                // Method org/apache/hadoop/ipc/Server$Handler.start:()V
     119: iinc          1, 1
     122: goto          87
     125: return

  public synchronized void stop();
    Code:
       0: getstatic     #50                 // Field LOG:Lorg/slf4j/Logger;
       3: new           #43                 // class java/lang/StringBuilder
       6: dup
       7: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      10: ldc_w         #359                // String Stopping server on
      13: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: getfield      #5                  // Field port:I
      20: invokevirtual #153                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      23: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: invokeinterface #196,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      31: aload_0
      32: iconst_0
      33: putfield      #33                 // Field running:Z
      36: aload_0
      37: getfield      #145                // Field handlers:[Lorg/apache/hadoop/ipc/Server$Handler;
      40: ifnull        77
      43: iconst_0
      44: istore_1
      45: iload_1
      46: aload_0
      47: getfield      #169                // Field handlerCount:I
      50: if_icmpge     77
      53: aload_0
      54: getfield      #145                // Field handlers:[Lorg/apache/hadoop/ipc/Server$Handler;
      57: iload_1
      58: aaload
      59: ifnull        71
      62: aload_0
      63: getfield      #145                // Field handlers:[Lorg/apache/hadoop/ipc/Server$Handler;
      66: iload_1
      67: aaload
      68: invokevirtual #360                // Method org/apache/hadoop/ipc/Server$Handler.interrupt:()V
      71: iinc          1, 1
      74: goto          45
      77: aload_0
      78: getfield      #211                // Field listener:Lorg/apache/hadoop/ipc/Server$Listener;
      81: invokevirtual #361                // Method org/apache/hadoop/ipc/Server$Listener.interrupt:()V
      84: aload_0
      85: getfield      #211                // Field listener:Lorg/apache/hadoop/ipc/Server$Listener;
      88: invokevirtual #362                // Method org/apache/hadoop/ipc/Server$Listener.doStop:()V
      91: aload_0
      92: getfield      #213                // Field auxiliaryListenerMap:Ljava/util/Map;
      95: ifnull        155
      98: aload_0
      99: getfield      #213                // Field auxiliaryListenerMap:Ljava/util/Map;
     102: invokeinterface #353,  1          // InterfaceMethod java/util/Map.size:()I
     107: ifle          155
     110: aload_0
     111: getfield      #213                // Field auxiliaryListenerMap:Ljava/util/Map;
     114: invokeinterface #354,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     119: invokeinterface #355,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     124: astore_1
     125: aload_1
     126: invokeinterface #128,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     131: ifeq          155
     134: aload_1
     135: invokeinterface #129,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     140: checkcast     #227                // class org/apache/hadoop/ipc/Server$Listener
     143: astore_2
     144: aload_2
     145: invokevirtual #361                // Method org/apache/hadoop/ipc/Server$Listener.interrupt:()V
     148: aload_2
     149: invokevirtual #362                // Method org/apache/hadoop/ipc/Server$Listener.doStop:()V
     152: goto          125
     155: aload_0
     156: getfield      #6                  // Field responder:Lorg/apache/hadoop/ipc/Server$Responder;
     159: invokevirtual #363                // Method org/apache/hadoop/ipc/Server$Responder.interrupt:()V
     162: aload_0
     163: invokevirtual #364                // Method java/lang/Object.notifyAll:()V
     166: aload_0
     167: getfield      #82                 // Field rpcMetrics:Lorg/apache/hadoop/ipc/metrics/RpcMetrics;
     170: invokevirtual #365                // Method org/apache/hadoop/ipc/metrics/RpcMetrics.shutdown:()V
     173: aload_0
     174: getfield      #114                // Field rpcDetailedMetrics:Lorg/apache/hadoop/ipc/metrics/RpcDetailedMetrics;
     177: invokevirtual #366                // Method org/apache/hadoop/ipc/metrics/RpcDetailedMetrics.shutdown:()V
     180: return

  public synchronized void join() throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field running:Z
       4: ifeq          14
       7: aload_0
       8: invokevirtual #367                // Method java/lang/Object.wait:()V
      11: goto          0
      14: return

  public synchronized java.net.InetSocketAddress getListenerAddress();
    Code:
       0: aload_0
       1: getfield      #211                // Field listener:Lorg/apache/hadoop/ipc/Server$Listener;
       4: invokevirtual #229                // Method org/apache/hadoop/ipc/Server$Listener.getAddress:()Ljava/net/InetSocketAddress;
       7: areturn

  public synchronized java.util.Set<java.net.InetSocketAddress> getAuxiliaryListenerAddresses();
    Code:
       0: new           #368                // class java/util/HashSet
       3: dup
       4: invokespecial #369                // Method java/util/HashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #213                // Field auxiliaryListenerMap:Ljava/util/Map;
      12: ifnull        75
      15: aload_0
      16: getfield      #213                // Field auxiliaryListenerMap:Ljava/util/Map;
      19: invokeinterface #353,  1          // InterfaceMethod java/util/Map.size:()I
      24: ifle          75
      27: aload_0
      28: getfield      #213                // Field auxiliaryListenerMap:Ljava/util/Map;
      31: invokeinterface #354,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      36: invokeinterface #355,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      41: astore_2
      42: aload_2
      43: invokeinterface #128,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      48: ifeq          75
      51: aload_2
      52: invokeinterface #129,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      57: checkcast     #227                // class org/apache/hadoop/ipc/Server$Listener
      60: astore_3
      61: aload_1
      62: aload_3
      63: invokevirtual #229                // Method org/apache/hadoop/ipc/Server$Listener.getAddress:()Ljava/net/InetSocketAddress;
      66: invokeinterface #370,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      71: pop
      72: goto          42
      75: aload_1
      76: areturn

  public org.apache.hadoop.io.Writable call(org.apache.hadoop.io.Writable, long) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getstatic     #371                // Field org/apache/hadoop/ipc/RPC$RpcKind.RPC_BUILTIN:Lorg/apache/hadoop/ipc/RPC$RpcKind;
       4: aconst_null
       5: aload_1
       6: lload_2
       7: invokevirtual #372                // Method call:(Lorg/apache/hadoop/ipc/RPC$RpcKind;Ljava/lang/String;Lorg/apache/hadoop/io/Writable;J)Lorg/apache/hadoop/io/Writable;
      10: areturn

  public abstract org.apache.hadoop.io.Writable call(org.apache.hadoop.ipc.RPC$RpcKind, java.lang.String, org.apache.hadoop.io.Writable, long) throws java.lang.Exception;

  private void authorize(org.apache.hadoop.security.UserGroupInformation, java.lang.String, java.net.InetAddress) throws org.apache.hadoop.security.authorize.AuthorizationException;
    Code:
       0: aload_0
       1: getfield      #224                // Field authorize:Z
       4: ifeq          83
       7: aload_2
       8: ifnonnull     22
      11: new           #373                // class org/apache/hadoop/security/authorize/AuthorizationException
      14: dup
      15: ldc_w         #374                // String Null protocol not authorized
      18: invokespecial #375                // Method org/apache/hadoop/security/authorize/AuthorizationException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: aconst_null
      23: astore        4
      25: aload_2
      26: aload_0
      27: invokevirtual #376                // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
      30: invokestatic  #377                // Method getProtocolClass:(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;
      33: astore        4
      35: goto          68
      38: astore        5
      40: new           #373                // class org/apache/hadoop/security/authorize/AuthorizationException
      43: dup
      44: new           #43                 // class java/lang/StringBuilder
      47: dup
      48: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      51: ldc_w         #379                // String Unknown protocol:
      54: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload_2
      58: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: invokespecial #375                // Method org/apache/hadoop/security/authorize/AuthorizationException."<init>":(Ljava/lang/String;)V
      67: athrow
      68: aload_0
      69: getfield      #148                // Field serviceAuthorizationManager:Lorg/apache/hadoop/security/authorize/ServiceAuthorizationManager;
      72: aload_1
      73: aload         4
      75: aload_0
      76: invokevirtual #376                // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
      79: aload_3
      80: invokevirtual #380                // Method org/apache/hadoop/security/authorize/ServiceAuthorizationManager.authorize:(Lorg/apache/hadoop/security/UserGroupInformation;Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;Ljava/net/InetAddress;)V
      83: return
    Exception table:
       from    to  target type
          25    35    38   Class java/lang/ClassNotFoundException

  public int getPort();
    Code:
       0: aload_0
       1: getfield      #5                  // Field port:I
       4: ireturn

  public int getNumOpenConnections();
    Code:
       0: aload_0
       1: getfield      #26                 // Field connectionManager:Lorg/apache/hadoop/ipc/Server$ConnectionManager;
       4: invokevirtual #381                // Method org/apache/hadoop/ipc/Server$ConnectionManager.size:()I
       7: ireturn

  public java.lang.String getNumOpenConnectionsPerUser();
    Code:
       0: new           #382                // class com/fasterxml/jackson/databind/ObjectMapper
       3: dup
       4: invokespecial #383                // Method com/fasterxml/jackson/databind/ObjectMapper."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #26                 // Field connectionManager:Lorg/apache/hadoop/ipc/Server$ConnectionManager;
      13: invokevirtual #384                // Method org/apache/hadoop/ipc/Server$ConnectionManager.getUserToConnectionsMap:()Ljava/util/Map;
      16: invokevirtual #385                // Method com/fasterxml/jackson/databind/ObjectMapper.writeValueAsString:(Ljava/lang/Object;)Ljava/lang/String;
      19: areturn
      20: astore_2
      21: aconst_null
      22: areturn
    Exception table:
       from    to  target type
           8    19    20   Class java/io/IOException

  public long getNumDroppedConnections();
    Code:
       0: aload_0
       1: getfield      #26                 // Field connectionManager:Lorg/apache/hadoop/ipc/Server$ConnectionManager;
       4: invokevirtual #386                // Method org/apache/hadoop/ipc/Server$ConnectionManager.getDroppedConnections:()J
       7: lreturn

  public int getCallQueueLen();
    Code:
       0: aload_0
       1: getfield      #10                 // Field callQueue:Lorg/apache/hadoop/ipc/CallQueueManager;
       4: invokevirtual #387                // Method org/apache/hadoop/ipc/CallQueueManager.size:()I
       7: ireturn

  public boolean isClientBackoffEnabled();
    Code:
       0: aload_0
       1: getfield      #10                 // Field callQueue:Lorg/apache/hadoop/ipc/CallQueueManager;
       4: invokevirtual #388                // Method org/apache/hadoop/ipc/CallQueueManager.isClientBackoffEnabled:()Z
       7: ireturn

  public void setClientBackoffEnabled(boolean);
    Code:
       0: aload_0
       1: getfield      #10                 // Field callQueue:Lorg/apache/hadoop/ipc/CallQueueManager;
       4: iload_1
       5: invokevirtual #176                // Method org/apache/hadoop/ipc/CallQueueManager.setClientBackoffEnabled:(Z)V
       8: return

  public int getMaxQueueSize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field maxQueueSize:I
       4: ireturn

  public int getNumReaders();
    Code:
       0: aload_0
       1: getfield      #29                 // Field readThreads:I
       4: ireturn

  private int channelWrite(java.nio.channels.WritableByteChannel, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokevirtual #389                // Method java/nio/ByteBuffer.remaining:()I
       4: getstatic     #390                // Field NIO_BUFFER_LIMIT:I
       7: if_icmpgt     20
      10: aload_1
      11: aload_2
      12: invokeinterface #391,  2          // InterfaceMethod java/nio/channels/WritableByteChannel.write:(Ljava/nio/ByteBuffer;)I
      17: goto          26
      20: aconst_null
      21: aload_1
      22: aload_2
      23: invokestatic  #392                // Method channelIO:(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/channels/WritableByteChannel;Ljava/nio/ByteBuffer;)I
      26: istore_3
      27: iload_3
      28: ifle          39
      31: aload_0
      32: getfield      #82                 // Field rpcMetrics:Lorg/apache/hadoop/ipc/metrics/RpcMetrics;
      35: iload_3
      36: invokevirtual #393                // Method org/apache/hadoop/ipc/metrics/RpcMetrics.incrSentBytes:(I)V
      39: iload_3
      40: ireturn

  private int channelRead(java.nio.channels.ReadableByteChannel, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokevirtual #389                // Method java/nio/ByteBuffer.remaining:()I
       4: getstatic     #390                // Field NIO_BUFFER_LIMIT:I
       7: if_icmpgt     20
      10: aload_1
      11: aload_2
      12: invokeinterface #394,  2          // InterfaceMethod java/nio/channels/ReadableByteChannel.read:(Ljava/nio/ByteBuffer;)I
      17: goto          26
      20: aload_1
      21: aconst_null
      22: aload_2
      23: invokestatic  #392                // Method channelIO:(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/channels/WritableByteChannel;Ljava/nio/ByteBuffer;)I
      26: istore_3
      27: iload_3
      28: ifle          39
      31: aload_0
      32: getfield      #82                 // Field rpcMetrics:Lorg/apache/hadoop/ipc/metrics/RpcMetrics;
      35: iload_3
      36: invokevirtual #395                // Method org/apache/hadoop/ipc/metrics/RpcMetrics.incrReceivedBytes:(I)V
      39: iload_3
      40: ireturn

  private static int channelIO(java.nio.channels.ReadableByteChannel, java.nio.channels.WritableByteChannel, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokevirtual #396                // Method java/nio/ByteBuffer.limit:()I
       4: istore_3
       5: aload_2
       6: invokevirtual #389                // Method java/nio/ByteBuffer.remaining:()I
       9: istore        4
      11: iconst_0
      12: istore        5
      14: aload_2
      15: invokevirtual #389                // Method java/nio/ByteBuffer.remaining:()I
      18: ifle          107
      21: aload_2
      22: invokevirtual #389                // Method java/nio/ByteBuffer.remaining:()I
      25: getstatic     #390                // Field NIO_BUFFER_LIMIT:I
      28: invokestatic  #397                // Method java/lang/Math.min:(II)I
      31: istore        6
      33: aload_2
      34: aload_2
      35: invokevirtual #398                // Method java/nio/ByteBuffer.position:()I
      38: iload         6
      40: iadd
      41: invokevirtual #399                // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      44: pop
      45: aload_0
      46: ifnonnull     59
      49: aload_1
      50: aload_2
      51: invokeinterface #391,  2          // InterfaceMethod java/nio/channels/WritableByteChannel.write:(Ljava/nio/ByteBuffer;)I
      56: goto          66
      59: aload_0
      60: aload_2
      61: invokeinterface #394,  2          // InterfaceMethod java/nio/channels/ReadableByteChannel.read:(Ljava/nio/ByteBuffer;)I
      66: istore        5
      68: iload         5
      70: iload         6
      72: if_icmpge     84
      75: aload_2
      76: iload_3
      77: invokevirtual #399                // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      80: pop
      81: goto          107
      84: aload_2
      85: iload_3
      86: invokevirtual #399                // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      89: pop
      90: goto          104
      93: astore        7
      95: aload_2
      96: iload_3
      97: invokevirtual #399                // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     100: pop
     101: aload         7
     103: athrow
     104: goto          14
     107: iload         4
     109: aload_2
     110: invokevirtual #389                // Method java/nio/ByteBuffer.remaining:()I
     113: isub
     114: istore        6
     116: iload         6
     118: ifle          126
     121: iload         6
     123: goto          128
     126: iload         5
     128: ireturn
    Exception table:
       from    to  target type
          21    75    93   any
          93    95    93   any

  protected int getMaxIdleTime();
    Code:
       0: aload_0
       1: getfield      #26                 // Field connectionManager:Lorg/apache/hadoop/ipc/Server$ConnectionManager;
       4: invokestatic  #400                // Method org/apache/hadoop/ipc/Server$ConnectionManager.access$4600:(Lorg/apache/hadoop/ipc/Server$ConnectionManager;)I
       7: ireturn

  public java.lang.String getServerName();
    Code:
       0: aload_0
       1: getfield      #212                // Field serverName:Ljava/lang/String;
       4: areturn

  static void access$200(org.apache.hadoop.ipc.Server, org.apache.hadoop.ipc.Server$RpcCall, org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcResponseHeaderProto$RpcStatusProto, org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcResponseHeaderProto$RpcErrorCodeProto, org.apache.hadoop.io.Writable, java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokespecial #34                 // Method setupResponse:(Lorg/apache/hadoop/ipc/Server$RpcCall;Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$RpcStatusProto;Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$RpcErrorCodeProto;Lorg/apache/hadoop/io/Writable;Ljava/lang/String;Ljava/lang/String;)V
      13: return

  static boolean access$400(org.apache.hadoop.ipc.Server);
    Code:
       0: aload_0
       1: getfield      #33                 // Field running:Z
       4: ireturn

  static org.apache.hadoop.conf.Configuration access$500(org.apache.hadoop.ipc.Server);
    Code:
       0: aload_0
       1: getfield      #32                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
       4: areturn

  static java.lang.String access$600(org.apache.hadoop.ipc.Server);
    Code:
       0: aload_0
       1: getfield      #31                 // Field bindAddress:Ljava/lang/String;
       4: areturn

  static java.lang.String access$700(org.apache.hadoop.ipc.Server);
    Code:
       0: aload_0
       1: getfield      #30                 // Field portRangeConfig:Ljava/lang/String;
       4: areturn

  static int access$800(org.apache.hadoop.ipc.Server);
    Code:
       0: aload_0
       1: getfield      #29                 // Field readThreads:I
       4: ireturn

  static int access$900(org.apache.hadoop.ipc.Server);
    Code:
       0: aload_0
       1: getfield      #28                 // Field readerPendingConnectionQueue:I
       4: ireturn

  static java.lang.ThreadLocal access$1000();
    Code:
       0: getstatic     #27                 // Field SERVER:Ljava/lang/ThreadLocal;
       3: areturn

  static org.apache.hadoop.ipc.Server$ConnectionManager access$1100(org.apache.hadoop.ipc.Server);
    Code:
       0: aload_0
       1: getfield      #26                 // Field connectionManager:Lorg/apache/hadoop/ipc/Server$ConnectionManager;
       4: areturn

  static void access$1200(org.apache.hadoop.ipc.Server, org.apache.hadoop.ipc.Server$Connection);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #25                 // Method closeConnection:(Lorg/apache/hadoop/ipc/Server$Connection;)V
       5: return

  static boolean access$1300(org.apache.hadoop.ipc.Server);
    Code:
       0: aload_0
       1: getfield      #24                 // Field tcpNoDelay:Z
       4: ireturn

  static long access$1500();
    Code:
       0: getstatic     #23                 // Field PURGE_INTERVAL_NANOS:J
       3: lreturn

  static int access$1700(org.apache.hadoop.ipc.Server, java.nio.channels.WritableByteChannel, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #22                 // Method channelWrite:(Ljava/nio/channels/WritableByteChannel;Ljava/nio/ByteBuffer;)I
       6: ireturn

  static void access$2000(org.apache.hadoop.ipc.Server, org.apache.hadoop.ipc.Server$RpcCall) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #21                 // Method wrapWithSasl:(Lorg/apache/hadoop/ipc/Server$RpcCall;)V
       5: return

  static int access$2100(org.apache.hadoop.ipc.Server);
    Code:
       0: aload_0
       1: getfield      #20                 // Field socketSendBufferSize:I
       4: ireturn

  static org.apache.hadoop.security.token.SecretManager access$2200(org.apache.hadoop.ipc.Server);
    Code:
       0: aload_0
       1: getfield      #19                 // Field secretManager:Lorg/apache/hadoop/security/token/SecretManager;
       4: areturn

  static org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcSaslProto access$2300(org.apache.hadoop.ipc.Server);
    Code:
       0: aload_0
       1: getfield      #18                 // Field negotiateResponse:Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcSaslProto;
       4: areturn

  static java.util.List access$2400(org.apache.hadoop.ipc.Server);
    Code:
       0: aload_0
       1: getfield      #17                 // Field enabledAuthMethods:Ljava/util/List;
       4: areturn

  static int access$2500(org.apache.hadoop.ipc.Server);
    Code:
       0: aload_0
       1: getfield      #16                 // Field maxDataLength:I
       4: ireturn

  static int access$2600(org.apache.hadoop.ipc.Server, java.nio.channels.ReadableByteChannel, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #15                 // Method channelRead:(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/ByteBuffer;)I
       6: ireturn

  static java.nio.ByteBuffer access$2700();
    Code:
       0: getstatic     #14                 // Field HTTP_GET_BYTES:Ljava/nio/ByteBuffer;
       3: areturn

  static org.apache.hadoop.security.SaslPropertiesResolver access$2800(org.apache.hadoop.ipc.Server);
    Code:
       0: aload_0
       1: getfield      #13                 // Field saslPropsResolver:Lorg/apache/hadoop/security/SaslPropertiesResolver;
       4: areturn

  static void access$2900(org.apache.hadoop.ipc.Server, java.io.ByteArrayOutputStream, org.apache.hadoop.ipc.Server$RpcCall, org.apache.hadoop.io.Writable, java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokespecial #12                 // Method setupResponseOldVersionFatal:(Ljava/io/ByteArrayOutputStream;Lorg/apache/hadoop/ipc/Server$RpcCall;Lorg/apache/hadoop/io/Writable;Ljava/lang/String;Ljava/lang/String;)V
      11: return

  static org.apache.htrace.core.Tracer access$3000(org.apache.hadoop.ipc.Server);
    Code:
       0: aload_0
       1: getfield      #11                 // Field tracer:Lorg/apache/htrace/core/Tracer;
       4: areturn

  static org.apache.hadoop.ipc.CallQueueManager access$3100(org.apache.hadoop.ipc.Server);
    Code:
       0: aload_0
       1: getfield      #10                 // Field callQueue:Lorg/apache/hadoop/ipc/CallQueueManager;
       4: areturn

  static org.apache.hadoop.ipc.AlignmentContext access$3200(org.apache.hadoop.ipc.Server);
    Code:
       0: aload_0
       1: getfield      #9                  // Field alignmentContext:Lorg/apache/hadoop/ipc/AlignmentContext;
       4: areturn

  static void access$3300(org.apache.hadoop.ipc.Server, org.apache.hadoop.ipc.Server$Call) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method internalQueueCall:(Lorg/apache/hadoop/ipc/Server$Call;)V
       5: return

  static void access$3400(org.apache.hadoop.ipc.Server, org.apache.hadoop.security.UserGroupInformation, java.lang.String, java.net.InetAddress) throws org.apache.hadoop.security.authorize.AuthorizationException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #7                  // Method authorize:(Lorg/apache/hadoop/security/UserGroupInformation;Ljava/lang/String;Ljava/net/InetAddress;)V
       7: return

  static org.apache.hadoop.ipc.Server$Responder access$3500(org.apache.hadoop.ipc.Server);
    Code:
       0: aload_0
       1: getfield      #6                  // Field responder:Lorg/apache/hadoop/ipc/Server$Responder;
       4: areturn

  static int access$3600(org.apache.hadoop.ipc.Server);
    Code:
       0: aload_0
       1: getfield      #5                  // Field port:I
       4: ireturn

  static java.lang.ThreadLocal access$3700();
    Code:
       0: getstatic     #4                  // Field CurCall:Ljava/lang/ThreadLocal;
       3: areturn

  static void access$4000(org.apache.hadoop.ipc.Server, org.apache.hadoop.ipc.Server$Call, boolean) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #3                  // Method internalQueueCall:(Lorg/apache/hadoop/ipc/Server$Call;Z)V
       6: return

  static int access$4100(org.apache.hadoop.ipc.Server);
    Code:
       0: aload_0
       1: getfield      #2                  // Field maxQueueSize:I
       4: ireturn

  static {};
    Code:
       0: ldc_w         #401                // String GET
       3: getstatic     #402                // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
       6: invokevirtual #403                // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
       9: invokestatic  #315                // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      12: putstatic     #14                 // Field HTTP_GET_BYTES:Ljava/nio/ByteBuffer;
      15: sipush        10240
      18: putstatic     #323                // Field INITIAL_RESP_BUF_SIZE:I
      21: new           #244                // class java/util/HashMap
      24: dup
      25: iconst_4
      26: invokespecial #404                // Method java/util/HashMap."<init>":(I)V
      29: putstatic     #38                 // Field rpcKindMap:Ljava/util/Map;
      32: ldc           #65                 // class org/apache/hadoop/ipc/Server
      34: invokestatic  #405                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      37: putstatic     #50                 // Field LOG:Lorg/slf4j/Logger;
      40: new           #43                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      47: ldc_w         #406                // String SecurityLogger.
      50: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: ldc           #65                 // class org/apache/hadoop/ipc/Server
      55: invokevirtual #303                // Method java/lang/Class.getName:()Ljava/lang/String;
      58: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: invokestatic  #407                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/String;)Lorg/slf4j/Logger;
      67: putstatic     #408                // Field AUDITLOG:Lorg/slf4j/Logger;
      70: new           #409                // class java/lang/ThreadLocal
      73: dup
      74: invokespecial #410                // Method java/lang/ThreadLocal."<init>":()V
      77: putstatic     #27                 // Field SERVER:Ljava/lang/ThreadLocal;
      80: new           #411                // class java/util/concurrent/ConcurrentHashMap
      83: dup
      84: invokespecial #412                // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      87: putstatic     #61                 // Field PROTOCOL_CACHE:Ljava/util/Map;
      90: new           #409                // class java/lang/ThreadLocal
      93: dup
      94: invokespecial #410                // Method java/lang/ThreadLocal."<init>":()V
      97: putstatic     #4                  // Field CurCall:Ljava/lang/ThreadLocal;
     100: getstatic     #184                // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
     103: ldc2_w        #413                // long 15l
     106: getstatic     #415                // Field java/util/concurrent/TimeUnit.MINUTES:Ljava/util/concurrent/TimeUnit;
     109: invokevirtual #416                // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
     112: putstatic     #23                 // Field PURGE_INTERVAL_NANOS:J
     115: sipush        8192
     118: putstatic     #390                // Field NIO_BUFFER_LIMIT:I
     121: return
}
