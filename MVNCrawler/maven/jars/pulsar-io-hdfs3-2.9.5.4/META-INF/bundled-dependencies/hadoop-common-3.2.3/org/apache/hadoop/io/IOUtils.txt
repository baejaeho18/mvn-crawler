Compiled from "IOUtils.java"
public class org.apache.hadoop.io.IOUtils {
  public static final org.slf4j.Logger LOG;

  static final boolean $assertionsDisabled;

  public org.apache.hadoop.io.IOUtils();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public static void copyBytes(java.io.InputStream, java.io.OutputStream, int, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #3                  // Method copyBytes:(Ljava/io/InputStream;Ljava/io/OutputStream;I)V
       6: iload_3
       7: ifeq          22
      10: aload_1
      11: invokevirtual #4                  // Method java/io/OutputStream.close:()V
      14: aconst_null
      15: astore_1
      16: aload_0
      17: invokevirtual #5                  // Method java/io/InputStream.close:()V
      20: aconst_null
      21: astore_0
      22: iload_3
      23: ifeq          54
      26: aload_1
      27: invokestatic  #6                  // Method closeStream:(Ljava/io/Closeable;)V
      30: aload_0
      31: invokestatic  #6                  // Method closeStream:(Ljava/io/Closeable;)V
      34: goto          54
      37: astore        4
      39: iload_3
      40: ifeq          51
      43: aload_1
      44: invokestatic  #6                  // Method closeStream:(Ljava/io/Closeable;)V
      47: aload_0
      48: invokestatic  #6                  // Method closeStream:(Ljava/io/Closeable;)V
      51: aload         4
      53: athrow
      54: return
    Exception table:
       from    to  target type
           0    22    37   any
          37    39    37   any

  public static void copyBytes(java.io.InputStream, java.io.OutputStream, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: instanceof    #7                  // class java/io/PrintStream
       4: ifeq          14
       7: aload_1
       8: checkcast     #7                  // class java/io/PrintStream
      11: goto          15
      14: aconst_null
      15: astore_3
      16: iload_2
      17: newarray       byte
      19: astore        4
      21: aload_0
      22: aload         4
      24: invokevirtual #8                  // Method java/io/InputStream.read:([B)I
      27: istore        5
      29: iload         5
      31: iflt          75
      34: aload_1
      35: aload         4
      37: iconst_0
      38: iload         5
      40: invokevirtual #9                  // Method java/io/OutputStream.write:([BII)V
      43: aload_3
      44: ifnull        64
      47: aload_3
      48: invokevirtual #10                 // Method java/io/PrintStream.checkError:()Z
      51: ifeq          64
      54: new           #11                 // class java/io/IOException
      57: dup
      58: ldc           #12                 // String Unable to write to output stream.
      60: invokespecial #13                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      63: athrow
      64: aload_0
      65: aload         4
      67: invokevirtual #8                  // Method java/io/InputStream.read:([B)I
      70: istore        5
      72: goto          29
      75: return

  public static void copyBytes(java.io.InputStream, java.io.OutputStream, org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: ldc           #14                 // String io.file.buffer.size
       5: sipush        4096
       8: invokevirtual #15                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      11: iconst_1
      12: invokestatic  #16                 // Method copyBytes:(Ljava/io/InputStream;Ljava/io/OutputStream;IZ)V
      15: return

  public static void copyBytes(java.io.InputStream, java.io.OutputStream, org.apache.hadoop.conf.Configuration, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: ldc           #14                 // String io.file.buffer.size
       5: sipush        4096
       8: invokevirtual #15                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      11: iload_3
      12: invokestatic  #16                 // Method copyBytes:(Ljava/io/InputStream;Ljava/io/OutputStream;IZ)V
      15: return

  public static void copyBytes(java.io.InputStream, java.io.OutputStream, long, boolean) throws java.io.IOException;
    Code:
       0: sipush        4096
       3: newarray       byte
       5: astore        5
       7: lload_2
       8: lstore        6
      10: lload         6
      12: lconst_0
      13: lcmp
      14: ifle          79
      17: lload         6
      19: aload         5
      21: arraylength
      22: i2l
      23: lcmp
      24: ifge          32
      27: lload         6
      29: goto          36
      32: aload         5
      34: arraylength
      35: i2l
      36: l2i
      37: istore        9
      39: aload_0
      40: aload         5
      42: iconst_0
      43: iload         9
      45: invokevirtual #17                 // Method java/io/InputStream.read:([BII)I
      48: istore        8
      50: iload         8
      52: iconst_m1
      53: if_icmpne     59
      56: goto          79
      59: aload_1
      60: aload         5
      62: iconst_0
      63: iload         8
      65: invokevirtual #9                  // Method java/io/OutputStream.write:([BII)V
      68: lload         6
      70: iload         8
      72: i2l
      73: lsub
      74: lstore        6
      76: goto          10
      79: iload         4
      81: ifeq          96
      84: aload_1
      85: invokevirtual #4                  // Method java/io/OutputStream.close:()V
      88: aconst_null
      89: astore_1
      90: aload_0
      91: invokevirtual #5                  // Method java/io/InputStream.close:()V
      94: aconst_null
      95: astore_0
      96: iload         4
      98: ifeq          130
     101: aload_1
     102: invokestatic  #6                  // Method closeStream:(Ljava/io/Closeable;)V
     105: aload_0
     106: invokestatic  #6                  // Method closeStream:(Ljava/io/Closeable;)V
     109: goto          130
     112: astore        10
     114: iload         4
     116: ifeq          127
     119: aload_1
     120: invokestatic  #6                  // Method closeStream:(Ljava/io/Closeable;)V
     123: aload_0
     124: invokestatic  #6                  // Method closeStream:(Ljava/io/Closeable;)V
     127: aload         10
     129: athrow
     130: return
    Exception table:
       from    to  target type
          10    96   112   any
         112   114   112   any

  public static int wrappedReadForCompressedData(java.io.InputStream, byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #17                 // Method java/io/InputStream.read:([BII)I
       7: ireturn
       8: astore        4
      10: aload         4
      12: athrow
      13: astore        4
      15: new           #11                 // class java/io/IOException
      18: dup
      19: ldc           #19                 // String Error while reading compressed data
      21: aload         4
      23: invokespecial #20                 // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      26: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/io/IOException
           0     7    13   Class java/lang/Throwable

  public static void readFully(java.io.InputStream, byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: istore        4
       3: iload         4
       5: ifle          48
       8: aload_0
       9: aload_1
      10: iload_2
      11: iload         4
      13: invokevirtual #17                 // Method java/io/InputStream.read:([BII)I
      16: istore        5
      18: iload         5
      20: ifge          33
      23: new           #11                 // class java/io/IOException
      26: dup
      27: ldc           #21                 // String Premature EOF from inputStream
      29: invokespecial #13                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: iload         4
      35: iload         5
      37: isub
      38: istore        4
      40: iload_2
      41: iload         5
      43: iadd
      44: istore_2
      45: goto          3
      48: return

  public static void skipFully(java.io.InputStream, long) throws java.io.IOException;
    Code:
       0: lload_1
       1: lstore_3
       2: lload_3
       3: lconst_0
       4: lcmp
       5: ifle          79
       8: aload_0
       9: lload_3
      10: invokevirtual #22                 // Method java/io/InputStream.skip:(J)J
      13: lstore        5
      15: lload         5
      17: lconst_0
      18: lcmp
      19: ifne          71
      22: aload_0
      23: invokevirtual #23                 // Method java/io/InputStream.read:()I
      26: istore        7
      28: iload         7
      30: iconst_m1
      31: if_icmpne     68
      34: new           #24                 // class java/io/EOFException
      37: dup
      38: new           #25                 // class java/lang/StringBuilder
      41: dup
      42: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      45: ldc           #27                 // String Premature EOF from inputStream after skipping
      47: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: lload_1
      51: lload_3
      52: lsub
      53: invokevirtual #29                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      56: ldc           #30                 // String  byte(s).
      58: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: invokespecial #32                 // Method java/io/EOFException."<init>":(Ljava/lang/String;)V
      67: athrow
      68: lconst_1
      69: lstore        5
      71: lload_3
      72: lload         5
      74: lsub
      75: lstore_3
      76: goto          2
      79: return

  public static void cleanup(org.apache.commons.logging.Log, java.io.Closeable...);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     84
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: aload         5
      22: ifnull        78
      25: aload         5
      27: invokeinterface #33,  1           // InterfaceMethod java/io/Closeable.close:()V
      32: goto          78
      35: astore        6
      37: aload_0
      38: ifnull        78
      41: aload_0
      42: invokeinterface #34,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      47: ifeq          78
      50: aload_0
      51: new           #25                 // class java/lang/StringBuilder
      54: dup
      55: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      58: ldc           #35                 // String Exception in closing
      60: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: aload         5
      65: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      68: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: aload         6
      73: invokeinterface #37,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      78: iinc          4, 1
      81: goto          8
      84: return
    Exception table:
       from    to  target type
          25    32    35   Class java/lang/Throwable

  public static void cleanupWithLogger(org.slf4j.Logger, java.io.Closeable...);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     59
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: aload         5
      22: ifnull        53
      25: aload         5
      27: invokeinterface #33,  1           // InterfaceMethod java/io/Closeable.close:()V
      32: goto          53
      35: astore        6
      37: aload_0
      38: ifnull        53
      41: aload_0
      42: ldc           #38                 // String Exception in closing {}
      44: aload         5
      46: aload         6
      48: invokeinterface #39,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      53: iinc          4, 1
      56: goto          8
      59: return
    Exception table:
       from    to  target type
          25    32    35   Class java/lang/Throwable

  public static void closeStream(java.io.Closeable);
    Code:
       0: aload_0
       1: ifnull        16
       4: aconst_null
       5: iconst_1
       6: anewarray     #40                 // class java/io/Closeable
       9: dup
      10: iconst_0
      11: aload_0
      12: aastore
      13: invokestatic  #41                 // Method cleanupWithLogger:(Lorg/slf4j/Logger;[Ljava/io/Closeable;)V
      16: return

  public static void closeStreams(java.io.Closeable...);
    Code:
       0: aload_0
       1: ifnull        9
       4: aconst_null
       5: aload_0
       6: invokestatic  #41                 // Method cleanupWithLogger:(Lorg/slf4j/Logger;[Ljava/io/Closeable;)V
       9: return

  public static void closeSocket(java.net.Socket);
    Code:
       0: aload_0
       1: ifnull        23
       4: aload_0
       5: invokevirtual #42                 // Method java/net/Socket.close:()V
       8: goto          23
      11: astore_1
      12: getstatic     #43                 // Field LOG:Lorg/slf4j/Logger;
      15: ldc           #44                 // String Ignoring exception while closing socket
      17: aload_1
      18: invokeinterface #45,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      23: return
    Exception table:
       from    to  target type
           4     8    11   Class java/io/IOException

  public static void writeFully(java.nio.channels.WritableByteChannel, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #46,  2           // InterfaceMethod java/nio/channels/WritableByteChannel.write:(Ljava/nio/ByteBuffer;)I
       7: pop
       8: aload_1
       9: invokevirtual #47                 // Method java/nio/ByteBuffer.remaining:()I
      12: ifgt          0
      15: return

  public static void writeFully(java.nio.channels.FileChannel, java.nio.ByteBuffer, long) throws java.io.IOException;
    Code:
       0: lload_2
       1: aload_0
       2: aload_1
       3: lload_2
       4: invokevirtual #48                 // Method java/nio/channels/FileChannel.write:(Ljava/nio/ByteBuffer;J)I
       7: i2l
       8: ladd
       9: lstore_2
      10: aload_1
      11: invokevirtual #47                 // Method java/nio/ByteBuffer.remaining:()I
      14: ifgt          0
      17: return

  public static java.util.List<java.lang.String> listDirectory(java.io.File, java.io.FilenameFilter) throws java.io.IOException;
    Code:
       0: new           #49                 // class java/util/ArrayList
       3: dup
       4: invokespecial #50                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_0
       9: invokevirtual #51                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
      12: invokestatic  #52                 // Method java/nio/file/Files.newDirectoryStream:(Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;
      15: astore_3
      16: aconst_null
      17: astore        4
      19: aload_3
      20: invokeinterface #53,  1           // InterfaceMethod java/nio/file/DirectoryStream.iterator:()Ljava/util/Iterator;
      25: astore        5
      27: aload         5
      29: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          98
      37: aload         5
      39: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #56                 // class java/nio/file/Path
      47: astore        6
      49: aload         6
      51: invokeinterface #57,  1           // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;
      56: astore        7
      58: aload         7
      60: ifnull        95
      63: aload         7
      65: invokeinterface #58,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      70: astore        8
      72: aload_1
      73: ifnull        88
      76: aload_1
      77: aload_0
      78: aload         8
      80: invokeinterface #59,  3           // InterfaceMethod java/io/FilenameFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z
      85: ifeq          95
      88: aload_2
      89: aload         8
      91: invokevirtual #60                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      94: pop
      95: goto          27
      98: aload_3
      99: ifnull        187
     102: aload         4
     104: ifnull        128
     107: aload_3
     108: invokeinterface #61,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
     113: goto          187
     116: astore        5
     118: aload         4
     120: aload         5
     122: invokevirtual #62                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     125: goto          187
     128: aload_3
     129: invokeinterface #61,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
     134: goto          187
     137: astore        5
     139: aload         5
     141: astore        4
     143: aload         5
     145: athrow
     146: astore        9
     148: aload_3
     149: ifnull        184
     152: aload         4
     154: ifnull        178
     157: aload_3
     158: invokeinterface #61,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
     163: goto          184
     166: astore        10
     168: aload         4
     170: aload         10
     172: invokevirtual #62                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     175: goto          184
     178: aload_3
     179: invokeinterface #61,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
     184: aload         9
     186: athrow
     187: goto          196
     190: astore_3
     191: aload_3
     192: invokevirtual #64                 // Method java/nio/file/DirectoryIteratorException.getCause:()Ljava/io/IOException;
     195: athrow
     196: aload_2
     197: areturn
    Exception table:
       from    to  target type
         107   113   116   Class java/lang/Throwable
          19    98   137   Class java/lang/Throwable
          19    98   146   any
         157   163   166   Class java/lang/Throwable
         137   148   146   any
           8   187   190   Class java/nio/file/DirectoryIteratorException

  public static void fsync(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #65                 // Method java/io/File.exists:()Z
       4: ifne          42
       7: new           #66                 // class java/io/FileNotFoundException
      10: dup
      11: new           #25                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #67                 // String File/Directory
      20: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_0
      24: invokevirtual #68                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      27: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: ldc           #69                 // String  does not exist
      32: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #70                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_0
      43: invokevirtual #71                 // Method java/io/File.isDirectory:()Z
      46: istore_1
      47: iload_1
      48: ifeq          58
      51: getstatic     #72                 // Field org/apache/hadoop/util/Shell.WINDOWS:Z
      54: ifeq          58
      57: return
      58: aload_0
      59: invokevirtual #51                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
      62: iconst_1
      63: anewarray     #73                 // class java/nio/file/OpenOption
      66: dup
      67: iconst_0
      68: iload_1
      69: ifeq          78
      72: getstatic     #74                 // Field java/nio/file/StandardOpenOption.READ:Ljava/nio/file/StandardOpenOption;
      75: goto          81
      78: getstatic     #75                 // Field java/nio/file/StandardOpenOption.WRITE:Ljava/nio/file/StandardOpenOption;
      81: aastore
      82: invokestatic  #76                 // Method java/nio/channels/FileChannel.open:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/FileChannel;
      85: astore_2
      86: aconst_null
      87: astore_3
      88: aload_2
      89: iload_1
      90: invokestatic  #77                 // Method fsync:(Ljava/nio/channels/FileChannel;Z)V
      93: aload_2
      94: ifnull        169
      97: aload_3
      98: ifnull        119
     101: aload_2
     102: invokevirtual #78                 // Method java/nio/channels/FileChannel.close:()V
     105: goto          169
     108: astore        4
     110: aload_3
     111: aload         4
     113: invokevirtual #62                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     116: goto          169
     119: aload_2
     120: invokevirtual #78                 // Method java/nio/channels/FileChannel.close:()V
     123: goto          169
     126: astore        4
     128: aload         4
     130: astore_3
     131: aload         4
     133: athrow
     134: astore        5
     136: aload_2
     137: ifnull        166
     140: aload_3
     141: ifnull        162
     144: aload_2
     145: invokevirtual #78                 // Method java/nio/channels/FileChannel.close:()V
     148: goto          166
     151: astore        6
     153: aload_3
     154: aload         6
     156: invokevirtual #62                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     159: goto          166
     162: aload_2
     163: invokevirtual #78                 // Method java/nio/channels/FileChannel.close:()V
     166: aload         5
     168: athrow
     169: return
    Exception table:
       from    to  target type
         101   105   108   Class java/lang/Throwable
          88    93   126   Class java/lang/Throwable
          88    93   134   any
         144   148   151   Class java/lang/Throwable
         126   136   134   any

  public static void fsync(java.nio.channels.FileChannel, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #79                 // Method java/nio/channels/FileChannel.force:(Z)V
       5: goto          61
       8: astore_2
       9: iload_1
      10: ifeq          59
      13: getstatic     #80                 // Field $assertionsDisabled:Z
      16: ifne          58
      19: getstatic     #81                 // Field org/apache/hadoop/util/Shell.LINUX:Z
      22: ifne          31
      25: getstatic     #82                 // Field org/apache/hadoop/util/Shell.MAC:Z
      28: ifeq          58
      31: new           #83                 // class java/lang/AssertionError
      34: dup
      35: new           #25                 // class java/lang/StringBuilder
      38: dup
      39: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      42: ldc           #84                 // String On Linux and MacOSX fsyncing a directory should not throw IOException, we just don\'t want to rely on that in production (undocumented). Got:
      44: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: aload_2
      48: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      51: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: invokespecial #85                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      57: athrow
      58: return
      59: aload_2
      60: athrow
      61: return
    Exception table:
       from    to  target type
           0     5     8   Class java/io/IOException

  public static java.io.IOException wrapException(java.lang.String, java.lang.String, java.io.IOException);
    Code:
       0: aload_2
       1: instanceof    #86                 // class java/io/InterruptedIOException
       4: ifne          14
       7: aload_2
       8: instanceof    #87                 // class org/apache/hadoop/fs/PathIOException
      11: ifeq          16
      14: aload_2
      15: areturn
      16: ldc           #88                 // String Failed with %s while processing file/directory :[%s] in method:[%s]
      18: iconst_3
      19: anewarray     #89                 // class java/lang/Object
      22: dup
      23: iconst_0
      24: aload_2
      25: invokevirtual #90                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      28: invokevirtual #91                 // Method java/lang/Class.getName:()Ljava/lang/String;
      31: aastore
      32: dup
      33: iconst_1
      34: aload_0
      35: aastore
      36: dup
      37: iconst_2
      38: aload_1
      39: aastore
      40: invokestatic  #92                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      43: astore_3
      44: aload_2
      45: aload_3
      46: invokestatic  #93                 // Method wrapWithMessage:(Ljava/io/IOException;Ljava/lang/String;)Ljava/io/IOException;
      49: areturn
      50: astore        4
      52: new           #87                 // class org/apache/hadoop/fs/PathIOException
      55: dup
      56: aload_0
      57: aload_2
      58: invokespecial #95                 // Method org/apache/hadoop/fs/PathIOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      61: areturn
    Exception table:
       from    to  target type
          44    49    50   Class java/lang/Exception

  private static <T extends java.io.IOException> T wrapWithMessage(T, java.lang.String) throws T;
    Code:
       0: aload_0
       1: invokevirtual #90                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: astore_2
       5: aload_2
       6: iconst_1
       7: anewarray     #96                 // class java/lang/Class
      10: dup
      11: iconst_0
      12: ldc           #97                 // class java/lang/String
      14: aastore
      15: invokevirtual #98                 // Method java/lang/Class.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
      18: astore_3
      19: aload_3
      20: iconst_1
      21: anewarray     #89                 // class java/lang/Object
      24: dup
      25: iconst_0
      26: aload_1
      27: aastore
      28: invokevirtual #99                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #18                 // class java/lang/Throwable
      34: astore        4
      36: aload         4
      38: aload_0
      39: invokevirtual #100                // Method java/lang/Throwable.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      42: checkcast     #11                 // class java/io/IOException
      45: checkcast     #11                 // class java/io/IOException
      48: areturn
      49: astore_3
      50: getstatic     #43                 // Field LOG:Lorg/slf4j/Logger;
      53: new           #25                 // class java/lang/StringBuilder
      56: dup
      57: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      60: ldc           #101                // String Unable to wrap exception of type
      62: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload_2
      66: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      69: ldc           #102                // String : it has no (String) constructor
      71: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      77: aload_3
      78: invokeinterface #103,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      83: aload_0
      84: athrow
    Exception table:
       from    to  target type
           5    48    49   Class java/lang/Throwable

  public static byte[] readFullyToByteArray(java.io.DataInput) throws java.io.IOException;
    Code:
       0: new           #104                // class java/io/ByteArrayOutputStream
       3: dup
       4: invokespecial #105                // Method java/io/ByteArrayOutputStream."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokeinterface #106,  1          // InterfaceMethod java/io/DataInput.readByte:()B
      15: invokevirtual #107                // Method java/io/ByteArrayOutputStream.write:(I)V
      18: goto          8
      21: astore_2
      22: aload_1
      23: invokevirtual #108                // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      26: areturn
    Exception table:
       from    to  target type
           8    21    21   Class java/io/EOFException

  static {};
    Code:
       0: ldc           #109                // class org/apache/hadoop/io/IOUtils
       2: invokevirtual #110                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #80                 // Field $assertionsDisabled:Z
      16: ldc           #109                // class org/apache/hadoop/io/IOUtils
      18: invokestatic  #111                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      21: putstatic     #43                 // Field LOG:Lorg/slf4j/Logger;
      24: return
}
