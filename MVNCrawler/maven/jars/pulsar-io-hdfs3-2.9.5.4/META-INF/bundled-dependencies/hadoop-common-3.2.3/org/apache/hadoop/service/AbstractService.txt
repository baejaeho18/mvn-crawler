Compiled from "AbstractService.java"
public abstract class org.apache.hadoop.service.AbstractService implements org.apache.hadoop.service.Service {
  private static final org.slf4j.Logger LOG;

  private final java.lang.String name;

  private final org.apache.hadoop.service.ServiceStateModel stateModel;

  private long startTime;

  private volatile org.apache.hadoop.conf.Configuration config;

  private final org.apache.hadoop.service.ServiceOperations$ServiceListeners listeners;

  private static org.apache.hadoop.service.ServiceOperations$ServiceListeners globalListeners;

  private java.lang.Exception failureCause;

  private org.apache.hadoop.service.Service$STATE failureState;

  private final java.util.concurrent.atomic.AtomicBoolean terminationNotification;

  private final java.util.List<org.apache.hadoop.service.LifecycleEvent> lifecycleHistory;

  private final java.util.Map<java.lang.String, java.lang.String> blockerMap;

  private final java.lang.Object stateChangeLock;

  static final boolean $assertionsDisabled;

  public org.apache.hadoop.service.AbstractService(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/apache/hadoop/service/ServiceOperations$ServiceListeners
       8: dup
       9: invokespecial #3                  // Method org/apache/hadoop/service/ServiceOperations$ServiceListeners."<init>":()V
      12: putfield      #4                  // Field listeners:Lorg/apache/hadoop/service/ServiceOperations$ServiceListeners;
      15: aload_0
      16: aconst_null
      17: putfield      #5                  // Field failureState:Lorg/apache/hadoop/service/Service$STATE;
      20: aload_0
      21: new           #6                  // class java/util/concurrent/atomic/AtomicBoolean
      24: dup
      25: iconst_0
      26: invokespecial #7                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      29: putfield      #8                  // Field terminationNotification:Ljava/util/concurrent/atomic/AtomicBoolean;
      32: aload_0
      33: new           #9                  // class java/util/ArrayList
      36: dup
      37: iconst_5
      38: invokespecial #10                 // Method java/util/ArrayList."<init>":(I)V
      41: putfield      #11                 // Field lifecycleHistory:Ljava/util/List;
      44: aload_0
      45: new           #12                 // class java/util/HashMap
      48: dup
      49: invokespecial #13                 // Method java/util/HashMap."<init>":()V
      52: putfield      #14                 // Field blockerMap:Ljava/util/Map;
      55: aload_0
      56: new           #15                 // class java/lang/Object
      59: dup
      60: invokespecial #1                  // Method java/lang/Object."<init>":()V
      63: putfield      #16                 // Field stateChangeLock:Ljava/lang/Object;
      66: aload_0
      67: aload_1
      68: putfield      #17                 // Field name:Ljava/lang/String;
      71: aload_0
      72: new           #18                 // class org/apache/hadoop/service/ServiceStateModel
      75: dup
      76: aload_1
      77: invokespecial #19                 // Method org/apache/hadoop/service/ServiceStateModel."<init>":(Ljava/lang/String;)V
      80: putfield      #20                 // Field stateModel:Lorg/apache/hadoop/service/ServiceStateModel;
      83: return

  public final org.apache.hadoop.service.Service$STATE getServiceState();
    Code:
       0: aload_0
       1: getfield      #20                 // Field stateModel:Lorg/apache/hadoop/service/ServiceStateModel;
       4: invokevirtual #21                 // Method org/apache/hadoop/service/ServiceStateModel.getState:()Lorg/apache/hadoop/service/Service$STATE;
       7: areturn

  public final synchronized java.lang.Throwable getFailureCause();
    Code:
       0: aload_0
       1: getfield      #22                 // Field failureCause:Ljava/lang/Exception;
       4: areturn

  public synchronized org.apache.hadoop.service.Service$STATE getFailureState();
    Code:
       0: aload_0
       1: getfield      #5                  // Field failureState:Lorg/apache/hadoop/service/Service$STATE;
       4: areturn

  protected void setConfig(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field config:Lorg/apache/hadoop/conf/Configuration;
       5: return

  public void init(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_1
       1: ifnonnull     39
       4: new           #24                 // class org/apache/hadoop/service/ServiceStateException
       7: dup
       8: new           #25                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #27                 // String Cannot initialize service
      17: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: aload_0
      21: invokevirtual #29                 // Method getName:()Ljava/lang/String;
      24: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: ldc           #30                 // String : null configuration
      29: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokespecial #32                 // Method org/apache/hadoop/service/ServiceStateException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_0
      40: getstatic     #33                 // Field org/apache/hadoop/service/Service$STATE.INITED:Lorg/apache/hadoop/service/Service$STATE;
      43: invokevirtual #34                 // Method isInState:(Lorg/apache/hadoop/service/Service$STATE;)Z
      46: ifeq          50
      49: return
      50: aload_0
      51: getfield      #16                 // Field stateChangeLock:Ljava/lang/Object;
      54: dup
      55: astore_2
      56: monitorenter
      57: aload_0
      58: getstatic     #33                 // Field org/apache/hadoop/service/Service$STATE.INITED:Lorg/apache/hadoop/service/Service$STATE;
      61: invokespecial #35                 // Method enterState:(Lorg/apache/hadoop/service/Service$STATE;)Lorg/apache/hadoop/service/Service$STATE;
      64: getstatic     #33                 // Field org/apache/hadoop/service/Service$STATE.INITED:Lorg/apache/hadoop/service/Service$STATE;
      67: if_acmpeq     119
      70: aload_0
      71: aload_1
      72: invokevirtual #36                 // Method setConfig:(Lorg/apache/hadoop/conf/Configuration;)V
      75: aload_0
      76: aload_0
      77: getfield      #23                 // Field config:Lorg/apache/hadoop/conf/Configuration;
      80: invokevirtual #37                 // Method serviceInit:(Lorg/apache/hadoop/conf/Configuration;)V
      83: aload_0
      84: getstatic     #33                 // Field org/apache/hadoop/service/Service$STATE.INITED:Lorg/apache/hadoop/service/Service$STATE;
      87: invokevirtual #34                 // Method isInState:(Lorg/apache/hadoop/service/Service$STATE;)Z
      90: ifeq          97
      93: aload_0
      94: invokespecial #38                 // Method notifyListeners:()V
      97: goto          119
     100: astore_3
     101: aload_0
     102: aload_3
     103: invokevirtual #40                 // Method noteFailure:(Ljava/lang/Exception;)V
     106: getstatic     #41                 // Field LOG:Lorg/slf4j/Logger;
     109: aload_0
     110: invokestatic  #42                 // Method org/apache/hadoop/service/ServiceOperations.stopQuietly:(Lorg/slf4j/Logger;Lorg/apache/hadoop/service/Service;)Ljava/lang/Exception;
     113: pop
     114: aload_3
     115: invokestatic  #43                 // Method org/apache/hadoop/service/ServiceStateException.convert:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
     118: athrow
     119: aload_2
     120: monitorexit
     121: goto          131
     124: astore        4
     126: aload_2
     127: monitorexit
     128: aload         4
     130: athrow
     131: return
    Exception table:
       from    to  target type
          75    97   100   Class java/lang/Exception
          57   121   124   any
         124   128   124   any

  public void start();
    Code:
       0: aload_0
       1: getstatic     #44                 // Field org/apache/hadoop/service/Service$STATE.STARTED:Lorg/apache/hadoop/service/Service$STATE;
       4: invokevirtual #34                 // Method isInState:(Lorg/apache/hadoop/service/Service$STATE;)Z
       7: ifeq          11
      10: return
      11: aload_0
      12: getfield      #16                 // Field stateChangeLock:Ljava/lang/Object;
      15: dup
      16: astore_1
      17: monitorenter
      18: aload_0
      19: getfield      #20                 // Field stateModel:Lorg/apache/hadoop/service/ServiceStateModel;
      22: getstatic     #44                 // Field org/apache/hadoop/service/Service$STATE.STARTED:Lorg/apache/hadoop/service/Service$STATE;
      25: invokevirtual #45                 // Method org/apache/hadoop/service/ServiceStateModel.enterState:(Lorg/apache/hadoop/service/Service$STATE;)Lorg/apache/hadoop/service/Service$STATE;
      28: getstatic     #44                 // Field org/apache/hadoop/service/Service$STATE.STARTED:Lorg/apache/hadoop/service/Service$STATE;
      31: if_acmpeq     95
      34: aload_0
      35: invokestatic  #46                 // Method java/lang/System.currentTimeMillis:()J
      38: putfield      #47                 // Field startTime:J
      41: aload_0
      42: invokevirtual #48                 // Method serviceStart:()V
      45: aload_0
      46: getstatic     #44                 // Field org/apache/hadoop/service/Service$STATE.STARTED:Lorg/apache/hadoop/service/Service$STATE;
      49: invokevirtual #34                 // Method isInState:(Lorg/apache/hadoop/service/Service$STATE;)Z
      52: ifeq          73
      55: getstatic     #41                 // Field LOG:Lorg/slf4j/Logger;
      58: ldc           #49                 // String Service {} is started
      60: aload_0
      61: invokevirtual #29                 // Method getName:()Ljava/lang/String;
      64: invokeinterface #50,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      69: aload_0
      70: invokespecial #38                 // Method notifyListeners:()V
      73: goto          95
      76: astore_2
      77: aload_0
      78: aload_2
      79: invokevirtual #40                 // Method noteFailure:(Ljava/lang/Exception;)V
      82: getstatic     #41                 // Field LOG:Lorg/slf4j/Logger;
      85: aload_0
      86: invokestatic  #42                 // Method org/apache/hadoop/service/ServiceOperations.stopQuietly:(Lorg/slf4j/Logger;Lorg/apache/hadoop/service/Service;)Ljava/lang/Exception;
      89: pop
      90: aload_2
      91: invokestatic  #43                 // Method org/apache/hadoop/service/ServiceStateException.convert:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      94: athrow
      95: aload_1
      96: monitorexit
      97: goto          105
     100: astore_3
     101: aload_1
     102: monitorexit
     103: aload_3
     104: athrow
     105: return
    Exception table:
       from    to  target type
          34    73    76   Class java/lang/Exception
          18    97   100   any
         100   103   100   any

  public void stop();
    Code:
       0: aload_0
       1: getstatic     #51                 // Field org/apache/hadoop/service/Service$STATE.STOPPED:Lorg/apache/hadoop/service/Service$STATE;
       4: invokevirtual #34                 // Method isInState:(Lorg/apache/hadoop/service/Service$STATE;)Z
       7: ifeq          11
      10: return
      11: aload_0
      12: getfield      #16                 // Field stateChangeLock:Ljava/lang/Object;
      15: dup
      16: astore_1
      17: monitorenter
      18: aload_0
      19: getstatic     #51                 // Field org/apache/hadoop/service/Service$STATE.STOPPED:Lorg/apache/hadoop/service/Service$STATE;
      22: invokespecial #35                 // Method enterState:(Lorg/apache/hadoop/service/Service$STATE;)Lorg/apache/hadoop/service/Service$STATE;
      25: getstatic     #51                 // Field org/apache/hadoop/service/Service$STATE.STOPPED:Lorg/apache/hadoop/service/Service$STATE;
      28: if_acmpeq     134
      31: aload_0
      32: invokevirtual #52                 // Method serviceStop:()V
      35: aload_0
      36: getfield      #8                  // Field terminationNotification:Ljava/util/concurrent/atomic/AtomicBoolean;
      39: iconst_1
      40: invokevirtual #53                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      43: aload_0
      44: getfield      #8                  // Field terminationNotification:Ljava/util/concurrent/atomic/AtomicBoolean;
      47: dup
      48: astore_2
      49: monitorenter
      50: aload_0
      51: getfield      #8                  // Field terminationNotification:Ljava/util/concurrent/atomic/AtomicBoolean;
      54: invokevirtual #54                 // Method java/lang/Object.notifyAll:()V
      57: aload_2
      58: monitorexit
      59: goto          67
      62: astore_3
      63: aload_2
      64: monitorexit
      65: aload_3
      66: athrow
      67: aload_0
      68: invokespecial #38                 // Method notifyListeners:()V
      71: goto          131
      74: astore_2
      75: aload_0
      76: aload_2
      77: invokevirtual #40                 // Method noteFailure:(Ljava/lang/Exception;)V
      80: aload_2
      81: invokestatic  #43                 // Method org/apache/hadoop/service/ServiceStateException.convert:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      84: athrow
      85: astore        4
      87: aload_0
      88: getfield      #8                  // Field terminationNotification:Ljava/util/concurrent/atomic/AtomicBoolean;
      91: iconst_1
      92: invokevirtual #53                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      95: aload_0
      96: getfield      #8                  // Field terminationNotification:Ljava/util/concurrent/atomic/AtomicBoolean;
      99: dup
     100: astore        5
     102: monitorenter
     103: aload_0
     104: getfield      #8                  // Field terminationNotification:Ljava/util/concurrent/atomic/AtomicBoolean;
     107: invokevirtual #54                 // Method java/lang/Object.notifyAll:()V
     110: aload         5
     112: monitorexit
     113: goto          124
     116: astore        6
     118: aload         5
     120: monitorexit
     121: aload         6
     123: athrow
     124: aload_0
     125: invokespecial #38                 // Method notifyListeners:()V
     128: aload         4
     130: athrow
     131: goto          144
     134: getstatic     #41                 // Field LOG:Lorg/slf4j/Logger;
     137: ldc           #55                 // String Ignoring re-entrant call to stop()
     139: invokeinterface #56,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     144: aload_1
     145: monitorexit
     146: goto          156
     149: astore        7
     151: aload_1
     152: monitorexit
     153: aload         7
     155: athrow
     156: return
    Exception table:
       from    to  target type
          50    59    62   any
          62    65    62   any
          31    35    74   Class java/lang/Exception
          31    35    85   any
         103   113   116   any
         116   121   116   any
          74    87    85   any
          18   146   149   any
         149   153   149   any

  public final void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method stop:()V
       4: return

  protected final void noteFailure(java.lang.Exception);
    Code:
       0: getstatic     #41                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #58                 // String noteFailure
       5: aload_1
       6: invokeinterface #59,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      11: aload_1
      12: ifnonnull     16
      15: return
      16: aload_0
      17: dup
      18: astore_2
      19: monitorenter
      20: aload_0
      21: getfield      #22                 // Field failureCause:Ljava/lang/Exception;
      24: ifnonnull     72
      27: aload_0
      28: aload_1
      29: putfield      #22                 // Field failureCause:Ljava/lang/Exception;
      32: aload_0
      33: aload_0
      34: invokevirtual #60                 // Method getServiceState:()Lorg/apache/hadoop/service/Service$STATE;
      37: putfield      #5                  // Field failureState:Lorg/apache/hadoop/service/Service$STATE;
      40: getstatic     #41                 // Field LOG:Lorg/slf4j/Logger;
      43: ldc           #61                 // String Service {} failed in state {}
      45: iconst_3
      46: anewarray     #15                 // class java/lang/Object
      49: dup
      50: iconst_0
      51: aload_0
      52: invokevirtual #29                 // Method getName:()Ljava/lang/String;
      55: aastore
      56: dup
      57: iconst_1
      58: aload_0
      59: getfield      #5                  // Field failureState:Lorg/apache/hadoop/service/Service$STATE;
      62: aastore
      63: dup
      64: iconst_2
      65: aload_1
      66: aastore
      67: invokeinterface #62,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;[Ljava/lang/Object;)V
      72: aload_2
      73: monitorexit
      74: goto          82
      77: astore_3
      78: aload_2
      79: monitorexit
      80: aload_3
      81: athrow
      82: return
    Exception table:
       from    to  target type
          20    74    77   any
          77    80    77   any

  public final boolean waitForServiceToStop(long);
    Code:
       0: aload_0
       1: getfield      #8                  // Field terminationNotification:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #63                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: istore_3
       8: iload_3
       9: ifne          60
      12: aload_0
      13: getfield      #8                  // Field terminationNotification:Ljava/util/concurrent/atomic/AtomicBoolean;
      16: dup
      17: astore        4
      19: monitorenter
      20: aload_0
      21: getfield      #8                  // Field terminationNotification:Ljava/util/concurrent/atomic/AtomicBoolean;
      24: lload_1
      25: invokevirtual #64                 // Method java/lang/Object.wait:(J)V
      28: aload         4
      30: monitorexit
      31: goto          42
      34: astore        5
      36: aload         4
      38: monitorexit
      39: aload         5
      41: athrow
      42: iconst_1
      43: istore_3
      44: goto          8
      47: astore        4
      49: aload_0
      50: getfield      #8                  // Field terminationNotification:Ljava/util/concurrent/atomic/AtomicBoolean;
      53: invokevirtual #63                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      56: istore_3
      57: goto          8
      60: aload_0
      61: getfield      #8                  // Field terminationNotification:Ljava/util/concurrent/atomic/AtomicBoolean;
      64: invokevirtual #63                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      67: ireturn
    Exception table:
       from    to  target type
          20    31    34   any
          34    39    34   any
          12    44    47   Class java/lang/InterruptedException

  protected void serviceInit(org.apache.hadoop.conf.Configuration) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #23                 // Field config:Lorg/apache/hadoop/conf/Configuration;
       5: if_acmpeq     23
       8: getstatic     #41                 // Field LOG:Lorg/slf4j/Logger;
      11: ldc           #66                 // String Config has been overridden during init
      13: invokeinterface #56,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      18: aload_0
      19: aload_1
      20: invokevirtual #36                 // Method setConfig:(Lorg/apache/hadoop/conf/Configuration;)V
      23: return

  protected void serviceStart() throws java.lang.Exception;
    Code:
       0: return

  protected void serviceStop() throws java.lang.Exception;
    Code:
       0: return

  public void registerServiceListener(org.apache.hadoop.service.ServiceStateChangeListener);
    Code:
       0: aload_0
       1: getfield      #4                  // Field listeners:Lorg/apache/hadoop/service/ServiceOperations$ServiceListeners;
       4: aload_1
       5: invokevirtual #67                 // Method org/apache/hadoop/service/ServiceOperations$ServiceListeners.add:(Lorg/apache/hadoop/service/ServiceStateChangeListener;)V
       8: return

  public void unregisterServiceListener(org.apache.hadoop.service.ServiceStateChangeListener);
    Code:
       0: aload_0
       1: getfield      #4                  // Field listeners:Lorg/apache/hadoop/service/ServiceOperations$ServiceListeners;
       4: aload_1
       5: invokevirtual #68                 // Method org/apache/hadoop/service/ServiceOperations$ServiceListeners.remove:(Lorg/apache/hadoop/service/ServiceStateChangeListener;)Z
       8: pop
       9: return

  public static void registerGlobalListener(org.apache.hadoop.service.ServiceStateChangeListener);
    Code:
       0: getstatic     #69                 // Field globalListeners:Lorg/apache/hadoop/service/ServiceOperations$ServiceListeners;
       3: aload_0
       4: invokevirtual #67                 // Method org/apache/hadoop/service/ServiceOperations$ServiceListeners.add:(Lorg/apache/hadoop/service/ServiceStateChangeListener;)V
       7: return

  public static boolean unregisterGlobalListener(org.apache.hadoop.service.ServiceStateChangeListener);
    Code:
       0: getstatic     #69                 // Field globalListeners:Lorg/apache/hadoop/service/ServiceOperations$ServiceListeners;
       3: aload_0
       4: invokevirtual #68                 // Method org/apache/hadoop/service/ServiceOperations$ServiceListeners.remove:(Lorg/apache/hadoop/service/ServiceStateChangeListener;)Z
       7: ireturn

  static void resetGlobalListeners();
    Code:
       0: getstatic     #69                 // Field globalListeners:Lorg/apache/hadoop/service/ServiceOperations$ServiceListeners;
       3: invokevirtual #70                 // Method org/apache/hadoop/service/ServiceOperations$ServiceListeners.reset:()V
       6: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #17                 // Field name:Ljava/lang/String;
       4: areturn

  public org.apache.hadoop.conf.Configuration getConfig();
    Code:
       0: aload_0
       1: getfield      #23                 // Field config:Lorg/apache/hadoop/conf/Configuration;
       4: areturn

  public long getStartTime();
    Code:
       0: aload_0
       1: getfield      #47                 // Field startTime:J
       4: lreturn

  private void notifyListeners();
    Code:
       0: aload_0
       1: getfield      #4                  // Field listeners:Lorg/apache/hadoop/service/ServiceOperations$ServiceListeners;
       4: aload_0
       5: invokevirtual #71                 // Method org/apache/hadoop/service/ServiceOperations$ServiceListeners.notifyListeners:(Lorg/apache/hadoop/service/Service;)V
       8: getstatic     #69                 // Field globalListeners:Lorg/apache/hadoop/service/ServiceOperations$ServiceListeners;
      11: aload_0
      12: invokevirtual #71                 // Method org/apache/hadoop/service/ServiceOperations$ServiceListeners.notifyListeners:(Lorg/apache/hadoop/service/Service;)V
      15: goto          31
      18: astore_1
      19: getstatic     #41                 // Field LOG:Lorg/slf4j/Logger;
      22: ldc           #73                 // String Exception while notifying listeners of {}
      24: aload_0
      25: aload_1
      26: invokeinterface #74,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      31: return
    Exception table:
       from    to  target type
           0    15    18   Class java/lang/Throwable

  private void recordLifecycleEvent();
    Code:
       0: new           #75                 // class org/apache/hadoop/service/LifecycleEvent
       3: dup
       4: invokespecial #76                 // Method org/apache/hadoop/service/LifecycleEvent."<init>":()V
       7: astore_1
       8: aload_1
       9: invokestatic  #46                 // Method java/lang/System.currentTimeMillis:()J
      12: putfield      #77                 // Field org/apache/hadoop/service/LifecycleEvent.time:J
      15: aload_1
      16: aload_0
      17: invokevirtual #60                 // Method getServiceState:()Lorg/apache/hadoop/service/Service$STATE;
      20: putfield      #78                 // Field org/apache/hadoop/service/LifecycleEvent.state:Lorg/apache/hadoop/service/Service$STATE;
      23: aload_0
      24: getfield      #11                 // Field lifecycleHistory:Ljava/util/List;
      27: aload_1
      28: invokeinterface #79,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      33: pop
      34: return

  public synchronized java.util.List<org.apache.hadoop.service.LifecycleEvent> getLifecycleHistory();
    Code:
       0: new           #9                  // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #11                 // Field lifecycleHistory:Ljava/util/List;
       8: invokespecial #80                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      11: areturn

  private org.apache.hadoop.service.Service$STATE enterState(org.apache.hadoop.service.Service$STATE);
    Code:
       0: getstatic     #81                 // Field $assertionsDisabled:Z
       3: ifne          55
       6: aload_0
       7: getfield      #20                 // Field stateModel:Lorg/apache/hadoop/service/ServiceStateModel;
      10: ifnonnull     55
      13: new           #82                 // class java/lang/AssertionError
      16: dup
      17: new           #25                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #83                 // String null state in
      26: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_0
      30: getfield      #17                 // Field name:Ljava/lang/String;
      33: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: ldc           #84                 // String
      38: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_0
      42: invokevirtual #85                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      45: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      48: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokespecial #87                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      54: athrow
      55: aload_0
      56: getfield      #20                 // Field stateModel:Lorg/apache/hadoop/service/ServiceStateModel;
      59: aload_1
      60: invokevirtual #45                 // Method org/apache/hadoop/service/ServiceStateModel.enterState:(Lorg/apache/hadoop/service/Service$STATE;)Lorg/apache/hadoop/service/Service$STATE;
      63: astore_2
      64: aload_2
      65: aload_1
      66: if_acmpeq     91
      69: getstatic     #41                 // Field LOG:Lorg/slf4j/Logger;
      72: ldc           #88                 // String Service: {} entered state {}
      74: aload_0
      75: invokevirtual #29                 // Method getName:()Ljava/lang/String;
      78: aload_0
      79: invokevirtual #60                 // Method getServiceState:()Lorg/apache/hadoop/service/Service$STATE;
      82: invokeinterface #89,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      87: aload_0
      88: invokespecial #90                 // Method recordLifecycleEvent:()V
      91: aload_2
      92: areturn

  public final boolean isInState(org.apache.hadoop.service.Service$STATE);
    Code:
       0: aload_0
       1: getfield      #20                 // Field stateModel:Lorg/apache/hadoop/service/ServiceStateModel;
       4: aload_1
       5: invokevirtual #91                 // Method org/apache/hadoop/service/ServiceStateModel.isInState:(Lorg/apache/hadoop/service/Service$STATE;)Z
       8: ireturn

  public java.lang.String toString();
    Code:
       0: new           #25                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #92                 // String Service
       9: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #17                 // Field name:Ljava/lang/String;
      16: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #93                 // String  in state
      21: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #20                 // Field stateModel:Lorg/apache/hadoop/service/ServiceStateModel;
      28: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: areturn

  protected void putBlocker(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #14                 // Field blockerMap:Ljava/util/Map;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_0
       8: getfield      #14                 // Field blockerMap:Ljava/util/Map;
      11: aload_1
      12: aload_2
      13: invokeinterface #94,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: aload_3
      20: monitorexit
      21: goto          31
      24: astore        4
      26: aload_3
      27: monitorexit
      28: aload         4
      30: athrow
      31: return
    Exception table:
       from    to  target type
           7    21    24   any
          24    28    24   any

  public void removeBlocker(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #14                 // Field blockerMap:Ljava/util/Map;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #14                 // Field blockerMap:Ljava/util/Map;
      11: aload_1
      12: invokeinterface #95,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      17: pop
      18: aload_2
      19: monitorexit
      20: goto          28
      23: astore_3
      24: aload_2
      25: monitorexit
      26: aload_3
      27: athrow
      28: return
    Exception table:
       from    to  target type
           7    20    23   any
          23    26    23   any

  public java.util.Map<java.lang.String, java.lang.String> getBlockers();
    Code:
       0: aload_0
       1: getfield      #14                 // Field blockerMap:Ljava/util/Map;
       4: dup
       5: astore_1
       6: monitorenter
       7: new           #12                 // class java/util/HashMap
      10: dup
      11: aload_0
      12: getfield      #14                 // Field blockerMap:Ljava/util/Map;
      15: invokespecial #96                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      18: astore_2
      19: aload_2
      20: aload_1
      21: monitorexit
      22: areturn
      23: astore_3
      24: aload_1
      25: monitorexit
      26: aload_3
      27: athrow
    Exception table:
       from    to  target type
           7    22    23   any
          23    26    23   any

  static {};
    Code:
       0: ldc           #97                 // class org/apache/hadoop/service/AbstractService
       2: invokevirtual #98                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #81                 // Field $assertionsDisabled:Z
      16: ldc           #97                 // class org/apache/hadoop/service/AbstractService
      18: invokestatic  #99                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      21: putstatic     #41                 // Field LOG:Lorg/slf4j/Logger;
      24: new           #2                  // class org/apache/hadoop/service/ServiceOperations$ServiceListeners
      27: dup
      28: invokespecial #3                  // Method org/apache/hadoop/service/ServiceOperations$ServiceListeners."<init>":()V
      31: putstatic     #69                 // Field globalListeners:Lorg/apache/hadoop/service/ServiceOperations$ServiceListeners;
      34: return
}
