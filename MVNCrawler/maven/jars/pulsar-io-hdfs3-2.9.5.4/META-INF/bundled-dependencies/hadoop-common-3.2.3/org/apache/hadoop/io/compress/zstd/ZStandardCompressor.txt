Compiled from "ZStandardCompressor.java"
public class org.apache.hadoop.io.compress.zstd.ZStandardCompressor implements org.apache.hadoop.io.compress.Compressor {
  private static final org.slf4j.Logger LOG;

  private long stream;

  private int level;

  private int directBufferSize;

  private byte[] userBuf;

  private int userBufOff;

  private int userBufLen;

  private java.nio.ByteBuffer uncompressedDirectBuf;

  private int uncompressedDirectBufOff;

  private int uncompressedDirectBufLen;

  private boolean keepUncompressedBuf;

  private java.nio.ByteBuffer compressedDirectBuf;

  private boolean finish;

  private boolean finished;

  private long bytesRead;

  private long bytesWritten;

  private static boolean nativeZStandardLoaded;

  public static boolean isNativeCodeLoaded();
    Code:
       0: getstatic     #1                  // Field nativeZStandardLoaded:Z
       3: ireturn

  public static int getRecommendedBufferSize();
    Code:
       0: invokestatic  #2                  // Method getStreamSize:()I
       3: ireturn

  org.apache.hadoop.io.compress.zstd.ZStandardCompressor();
    Code:
       0: aload_0
       1: iconst_3
       2: sipush        4096
       5: invokespecial #5                  // Method "<init>":(II)V
       8: return

  public org.apache.hadoop.io.compress.zstd.ZStandardCompressor(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_2
       4: invokespecial #6                  // Method "<init>":(III)V
       7: return

  org.apache.hadoop.io.compress.zstd.ZStandardCompressor(int, int, int);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #8                  // Field userBuf:[B
       9: aload_0
      10: iconst_0
      11: putfield      #9                  // Field userBufOff:I
      14: aload_0
      15: iconst_0
      16: putfield      #10                 // Field userBufLen:I
      19: aload_0
      20: aconst_null
      21: putfield      #11                 // Field uncompressedDirectBuf:Ljava/nio/ByteBuffer;
      24: aload_0
      25: iconst_0
      26: putfield      #12                 // Field uncompressedDirectBufOff:I
      29: aload_0
      30: iconst_0
      31: putfield      #13                 // Field uncompressedDirectBufLen:I
      34: aload_0
      35: iconst_0
      36: putfield      #14                 // Field keepUncompressedBuf:Z
      39: aload_0
      40: aconst_null
      41: putfield      #15                 // Field compressedDirectBuf:Ljava/nio/ByteBuffer;
      44: aload_0
      45: lconst_0
      46: putfield      #16                 // Field bytesRead:J
      49: aload_0
      50: lconst_0
      51: putfield      #17                 // Field bytesWritten:J
      54: aload_0
      55: iload_1
      56: putfield      #18                 // Field level:I
      59: aload_0
      60: invokestatic  #19                 // Method create:()J
      63: putfield      #20                 // Field stream:J
      66: aload_0
      67: iload_3
      68: putfield      #21                 // Field directBufferSize:I
      71: aload_0
      72: iload_2
      73: invokestatic  #22                 // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
      76: putfield      #11                 // Field uncompressedDirectBuf:Ljava/nio/ByteBuffer;
      79: aload_0
      80: iload_3
      81: invokestatic  #22                 // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
      84: putfield      #15                 // Field compressedDirectBuf:Ljava/nio/ByteBuffer;
      87: aload_0
      88: getfield      #15                 // Field compressedDirectBuf:Ljava/nio/ByteBuffer;
      91: iload_3
      92: invokevirtual #23                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      95: pop
      96: aload_0
      97: invokevirtual #24                 // Method reset:()V
     100: return

  public void reinit(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: aload_1
       7: invokestatic  #25                 // Method org/apache/hadoop/io/compress/ZStandardCodec.getCompressionLevel:(Lorg/apache/hadoop/conf/Configuration;)I
      10: putfield      #18                 // Field level:I
      13: aload_0
      14: invokevirtual #24                 // Method reset:()V
      17: getstatic     #26                 // Field LOG:Lorg/slf4j/Logger;
      20: ldc           #27                 // String Reinit compressor with new compression configuration
      22: invokeinterface #28,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      27: return

  public void setInput(byte[], int, int);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #29                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #30                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: iload_2
      13: iflt          28
      16: iload_3
      17: iflt          28
      20: iload_2
      21: aload_1
      22: arraylength
      23: iload_3
      24: isub
      25: if_icmple     36
      28: new           #31                 // class java/lang/ArrayIndexOutOfBoundsException
      31: dup
      32: invokespecial #32                 // Method java/lang/ArrayIndexOutOfBoundsException."<init>":()V
      35: athrow
      36: aload_0
      37: aload_1
      38: putfield      #8                  // Field userBuf:[B
      41: aload_0
      42: iload_2
      43: putfield      #9                  // Field userBufOff:I
      46: aload_0
      47: iload_3
      48: putfield      #10                 // Field userBufLen:I
      51: aload_0
      52: iconst_0
      53: putfield      #12                 // Field uncompressedDirectBufOff:I
      56: aload_0
      57: invokespecial #33                 // Method setInputFromSavedData:()V
      60: aload_0
      61: getfield      #15                 // Field compressedDirectBuf:Ljava/nio/ByteBuffer;
      64: aload_0
      65: getfield      #21                 // Field directBufferSize:I
      68: invokevirtual #34                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      71: pop
      72: aload_0
      73: getfield      #15                 // Field compressedDirectBuf:Ljava/nio/ByteBuffer;
      76: aload_0
      77: getfield      #21                 // Field directBufferSize:I
      80: invokevirtual #23                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      83: pop
      84: return

  private void setInputFromSavedData();
    Code:
       0: aload_0
       1: getfield      #10                 // Field userBufLen:I
       4: aload_0
       5: getfield      #11                 // Field uncompressedDirectBuf:Ljava/nio/ByteBuffer;
       8: invokevirtual #35                 // Method java/nio/ByteBuffer.remaining:()I
      11: invokestatic  #36                 // Method java/lang/Math.min:(II)I
      14: istore_1
      15: aload_0
      16: getfield      #11                 // Field uncompressedDirectBuf:Ljava/nio/ByteBuffer;
      19: aload_0
      20: getfield      #8                  // Field userBuf:[B
      23: aload_0
      24: getfield      #9                  // Field userBufOff:I
      27: iload_1
      28: invokevirtual #37                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      31: pop
      32: aload_0
      33: dup
      34: getfield      #10                 // Field userBufLen:I
      37: iload_1
      38: isub
      39: putfield      #10                 // Field userBufLen:I
      42: aload_0
      43: dup
      44: getfield      #9                  // Field userBufOff:I
      47: iload_1
      48: iadd
      49: putfield      #9                  // Field userBufOff:I
      52: aload_0
      53: aload_0
      54: getfield      #11                 // Field uncompressedDirectBuf:Ljava/nio/ByteBuffer;
      57: invokevirtual #38                 // Method java/nio/ByteBuffer.position:()I
      60: putfield      #13                 // Field uncompressedDirectBufLen:I
      63: return

  public void setDictionary(byte[], int, int);
    Code:
       0: new           #39                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #40                 // String Dictionary support is not enabled
       6: invokespecial #41                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public boolean needsInput();
    Code:
       0: aload_0
       1: getfield      #15                 // Field compressedDirectBuf:Ljava/nio/ByteBuffer;
       4: invokevirtual #35                 // Method java/nio/ByteBuffer.remaining:()I
       7: ifle          12
      10: iconst_0
      11: ireturn
      12: aload_0
      13: getfield      #14                 // Field keepUncompressedBuf:Z
      16: ifeq          33
      19: aload_0
      20: getfield      #13                 // Field uncompressedDirectBufLen:I
      23: aload_0
      24: getfield      #12                 // Field uncompressedDirectBufOff:I
      27: isub
      28: ifle          33
      31: iconst_0
      32: ireturn
      33: aload_0
      34: getfield      #11                 // Field uncompressedDirectBuf:Ljava/nio/ByteBuffer;
      37: invokevirtual #35                 // Method java/nio/ByteBuffer.remaining:()I
      40: ifle          72
      43: aload_0
      44: getfield      #10                 // Field userBufLen:I
      47: ifgt          52
      50: iconst_1
      51: ireturn
      52: aload_0
      53: invokespecial #33                 // Method setInputFromSavedData:()V
      56: aload_0
      57: getfield      #11                 // Field uncompressedDirectBuf:Ljava/nio/ByteBuffer;
      60: invokevirtual #35                 // Method java/nio/ByteBuffer.remaining:()I
      63: ifle          70
      66: iconst_1
      67: goto          71
      70: iconst_0
      71: ireturn
      72: iconst_0
      73: ireturn

  public void finish();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #42                 // Field finish:Z
       5: return

  public boolean finished();
    Code:
       0: aload_0
       1: getfield      #43                 // Field finished:Z
       4: ifeq          21
       7: aload_0
       8: getfield      #15                 // Field compressedDirectBuf:Ljava/nio/ByteBuffer;
      11: invokevirtual #35                 // Method java/nio/ByteBuffer.remaining:()I
      14: ifne          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public int compress(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #44                 // Method checkStream:()V
       4: aload_1
       5: ifnonnull     16
       8: new           #29                 // class java/lang/NullPointerException
      11: dup
      12: invokespecial #30                 // Method java/lang/NullPointerException."<init>":()V
      15: athrow
      16: iload_2
      17: iflt          32
      20: iload_3
      21: iflt          32
      24: iload_2
      25: aload_1
      26: arraylength
      27: iload_3
      28: isub
      29: if_icmple     40
      32: new           #31                 // class java/lang/ArrayIndexOutOfBoundsException
      35: dup
      36: invokespecial #32                 // Method java/lang/ArrayIndexOutOfBoundsException."<init>":()V
      39: athrow
      40: aload_0
      41: getfield      #15                 // Field compressedDirectBuf:Ljava/nio/ByteBuffer;
      44: invokevirtual #35                 // Method java/nio/ByteBuffer.remaining:()I
      47: istore        4
      49: iload         4
      51: ifle          77
      54: iload         4
      56: iload_3
      57: invokestatic  #36                 // Method java/lang/Math.min:(II)I
      60: istore        4
      62: aload_0
      63: getfield      #15                 // Field compressedDirectBuf:Ljava/nio/ByteBuffer;
      66: aload_1
      67: iload_2
      68: iload         4
      70: invokevirtual #45                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
      73: pop
      74: iload         4
      76: ireturn
      77: aload_0
      78: getfield      #15                 // Field compressedDirectBuf:Ljava/nio/ByteBuffer;
      81: invokevirtual #46                 // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
      84: pop
      85: aload_0
      86: getfield      #15                 // Field compressedDirectBuf:Ljava/nio/ByteBuffer;
      89: aload_0
      90: getfield      #21                 // Field directBufferSize:I
      93: invokevirtual #34                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      96: pop
      97: aload_0
      98: aload_0
      99: getfield      #11                 // Field uncompressedDirectBuf:Ljava/nio/ByteBuffer;
     102: aload_0
     103: getfield      #12                 // Field uncompressedDirectBufOff:I
     106: aload_0
     107: getfield      #13                 // Field uncompressedDirectBufLen:I
     110: aload_0
     111: getfield      #15                 // Field compressedDirectBuf:Ljava/nio/ByteBuffer;
     114: aload_0
     115: getfield      #21                 // Field directBufferSize:I
     118: invokespecial #47                 // Method deflateBytesDirect:(Ljava/nio/ByteBuffer;IILjava/nio/ByteBuffer;I)I
     121: istore        4
     123: aload_0
     124: getfield      #15                 // Field compressedDirectBuf:Ljava/nio/ByteBuffer;
     127: iload         4
     129: invokevirtual #34                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     132: pop
     133: aload_0
     134: getfield      #13                 // Field uncompressedDirectBufLen:I
     137: aload_0
     138: getfield      #12                 // Field uncompressedDirectBufOff:I
     141: isub
     142: ifgt          171
     145: aload_0
     146: iconst_0
     147: putfield      #14                 // Field keepUncompressedBuf:Z
     150: aload_0
     151: getfield      #11                 // Field uncompressedDirectBuf:Ljava/nio/ByteBuffer;
     154: invokevirtual #48                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     157: pop
     158: aload_0
     159: iconst_0
     160: putfield      #12                 // Field uncompressedDirectBufOff:I
     163: aload_0
     164: iconst_0
     165: putfield      #13                 // Field uncompressedDirectBufLen:I
     168: goto          176
     171: aload_0
     172: iconst_1
     173: putfield      #14                 // Field keepUncompressedBuf:Z
     176: iload         4
     178: iload_3
     179: invokestatic  #36                 // Method java/lang/Math.min:(II)I
     182: istore        4
     184: aload_0
     185: getfield      #15                 // Field compressedDirectBuf:Ljava/nio/ByteBuffer;
     188: aload_1
     189: iload_2
     190: iload         4
     192: invokevirtual #45                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
     195: pop
     196: iload         4
     198: ireturn

  public long getBytesWritten();
    Code:
       0: aload_0
       1: invokespecial #44                 // Method checkStream:()V
       4: aload_0
       5: getfield      #17                 // Field bytesWritten:J
       8: lreturn

  public long getBytesRead();
    Code:
       0: aload_0
       1: invokespecial #44                 // Method checkStream:()V
       4: aload_0
       5: getfield      #16                 // Field bytesRead:J
       8: lreturn

  public void reset();
    Code:
       0: aload_0
       1: invokespecial #44                 // Method checkStream:()V
       4: aload_0
       5: getfield      #18                 // Field level:I
       8: aload_0
       9: getfield      #20                 // Field stream:J
      12: invokestatic  #49                 // Method init:(IJ)V
      15: aload_0
      16: iconst_0
      17: putfield      #42                 // Field finish:Z
      20: aload_0
      21: iconst_0
      22: putfield      #43                 // Field finished:Z
      25: aload_0
      26: lconst_0
      27: putfield      #16                 // Field bytesRead:J
      30: aload_0
      31: lconst_0
      32: putfield      #17                 // Field bytesWritten:J
      35: aload_0
      36: getfield      #11                 // Field uncompressedDirectBuf:Ljava/nio/ByteBuffer;
      39: invokevirtual #46                 // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
      42: pop
      43: aload_0
      44: iconst_0
      45: putfield      #12                 // Field uncompressedDirectBufOff:I
      48: aload_0
      49: iconst_0
      50: putfield      #13                 // Field uncompressedDirectBufLen:I
      53: aload_0
      54: iconst_0
      55: putfield      #14                 // Field keepUncompressedBuf:Z
      58: aload_0
      59: getfield      #15                 // Field compressedDirectBuf:Ljava/nio/ByteBuffer;
      62: aload_0
      63: getfield      #21                 // Field directBufferSize:I
      66: invokevirtual #34                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      69: pop
      70: aload_0
      71: getfield      #15                 // Field compressedDirectBuf:Ljava/nio/ByteBuffer;
      74: aload_0
      75: getfield      #21                 // Field directBufferSize:I
      78: invokevirtual #23                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      81: pop
      82: aload_0
      83: iconst_0
      84: putfield      #9                  // Field userBufOff:I
      87: aload_0
      88: iconst_0
      89: putfield      #10                 // Field userBufLen:I
      92: return

  public void end();
    Code:
       0: aload_0
       1: getfield      #20                 // Field stream:J
       4: lconst_0
       5: lcmp
       6: ifeq          21
       9: aload_0
      10: getfield      #20                 // Field stream:J
      13: invokestatic  #50                 // Method end:(J)V
      16: aload_0
      17: lconst_0
      18: putfield      #20                 // Field stream:J
      21: return

  private void checkStream();
    Code:
       0: aload_0
       1: getfield      #20                 // Field stream:J
       4: lconst_0
       5: lcmp
       6: ifne          17
       9: new           #29                 // class java/lang/NullPointerException
      12: dup
      13: invokespecial #30                 // Method java/lang/NullPointerException."<init>":()V
      16: athrow
      17: return

  private static native long create();

  private static native void init(int, long);

  private native int deflateBytesDirect(java.nio.ByteBuffer, int, int, java.nio.ByteBuffer, int);

  private static native int getStreamSize();

  private static native void end(long);

  private static native void initIDs();

  public static native java.lang.String getLibraryName();

  static {};
    Code:
       0: ldc           #51                 // class org/apache/hadoop/io/compress/zstd/ZStandardCompressor
       2: invokestatic  #52                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #26                 // Field LOG:Lorg/slf4j/Logger;
       8: iconst_0
       9: putstatic     #1                  // Field nativeZStandardLoaded:Z
      12: invokestatic  #53                 // Method org/apache/hadoop/util/NativeCodeLoader.isNativeCodeLoaded:()Z
      15: ifeq          56
      18: invokestatic  #54                 // Method initIDs:()V
      21: iconst_1
      22: putstatic     #1                  // Field nativeZStandardLoaded:Z
      25: goto          56
      28: astore_0
      29: getstatic     #26                 // Field LOG:Lorg/slf4j/Logger;
      32: new           #56                 // class java/lang/StringBuilder
      35: dup
      36: invokespecial #57                 // Method java/lang/StringBuilder."<init>":()V
      39: ldc           #58                 // String Error loading zstandard native libraries:
      41: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_0
      45: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      48: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokeinterface #62,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      56: return
    Exception table:
       from    to  target type
          18    25    28   Class java/lang/Throwable
}
