Compiled from "SimpleBufferedOutputStream.java"
public class org.apache.hadoop.io.file.tfile.SimpleBufferedOutputStream extends java.io.FilterOutputStream {
  protected byte[] buf;

  protected int count;

  public org.apache.hadoop.io.file.tfile.SimpleBufferedOutputStream(java.io.OutputStream, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method java/io/FilterOutputStream."<init>":(Ljava/io/OutputStream;)V
       5: aload_0
       6: iconst_0
       7: putfield      #2                  // Field count:I
      10: aload_0
      11: aload_2
      12: putfield      #3                  // Field buf:[B
      15: return

  private void flushBuffer() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field count:I
       4: ifle          28
       7: aload_0
       8: getfield      #4                  // Field out:Ljava/io/OutputStream;
      11: aload_0
      12: getfield      #3                  // Field buf:[B
      15: iconst_0
      16: aload_0
      17: getfield      #2                  // Field count:I
      20: invokevirtual #5                  // Method java/io/OutputStream.write:([BII)V
      23: aload_0
      24: iconst_0
      25: putfield      #2                  // Field count:I
      28: return

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field count:I
       4: aload_0
       5: getfield      #3                  // Field buf:[B
       8: arraylength
       9: if_icmplt     16
      12: aload_0
      13: invokespecial #6                  // Method flushBuffer:()V
      16: aload_0
      17: getfield      #3                  // Field buf:[B
      20: aload_0
      21: dup
      22: getfield      #2                  // Field count:I
      25: dup_x1
      26: iconst_1
      27: iadd
      28: putfield      #2                  // Field count:I
      31: iload_1
      32: i2b
      33: bastore
      34: return

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: aload_0
       2: getfield      #3                  // Field buf:[B
       5: arraylength
       6: if_icmplt     24
       9: aload_0
      10: invokespecial #6                  // Method flushBuffer:()V
      13: aload_0
      14: getfield      #4                  // Field out:Ljava/io/OutputStream;
      17: aload_1
      18: iload_2
      19: iload_3
      20: invokevirtual #5                  // Method java/io/OutputStream.write:([BII)V
      23: return
      24: iload_3
      25: aload_0
      26: getfield      #3                  // Field buf:[B
      29: arraylength
      30: aload_0
      31: getfield      #2                  // Field count:I
      34: isub
      35: if_icmple     42
      38: aload_0
      39: invokespecial #6                  // Method flushBuffer:()V
      42: aload_1
      43: iload_2
      44: aload_0
      45: getfield      #3                  // Field buf:[B
      48: aload_0
      49: getfield      #2                  // Field count:I
      52: iload_3
      53: invokestatic  #7                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      56: aload_0
      57: dup
      58: getfield      #2                  // Field count:I
      61: iload_3
      62: iadd
      63: putfield      #2                  // Field count:I
      66: return

  public synchronized void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method flushBuffer:()V
       4: aload_0
       5: getfield      #4                  // Field out:Ljava/io/OutputStream;
       8: invokevirtual #8                  // Method java/io/OutputStream.flush:()V
      11: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #2                  // Field count:I
       4: ireturn
}
