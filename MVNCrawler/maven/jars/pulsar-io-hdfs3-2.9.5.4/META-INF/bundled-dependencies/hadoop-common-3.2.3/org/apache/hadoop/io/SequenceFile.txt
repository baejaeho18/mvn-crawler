Compiled from "SequenceFile.java"
public class org.apache.hadoop.io.SequenceFile {
  private static final org.slf4j.Logger LOG;

  private static final byte BLOCK_COMPRESS_VERSION;

  private static final byte CUSTOM_COMPRESS_VERSION;

  private static final byte VERSION_WITH_METADATA;

  private static byte[] VERSION;

  private static final int SYNC_ESCAPE;

  private static final int SYNC_HASH_SIZE;

  private static final int SYNC_SIZE;

  public static final int SYNC_INTERVAL;

  private org.apache.hadoop.io.SequenceFile();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: return

  public static org.apache.hadoop.io.SequenceFile$CompressionType getDefaultCompressionType(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: ldc           #7                  // String io.seqfile.compression.type
       3: invokevirtual #8                  // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: ifnonnull     17
      11: getstatic     #9                  // Field org/apache/hadoop/io/SequenceFile$CompressionType.RECORD:Lorg/apache/hadoop/io/SequenceFile$CompressionType;
      14: goto          21
      17: aload_1
      18: invokestatic  #10                 // Method org/apache/hadoop/io/SequenceFile$CompressionType.valueOf:(Ljava/lang/String;)Lorg/apache/hadoop/io/SequenceFile$CompressionType;
      21: areturn

  public static void setDefaultCompressionType(org.apache.hadoop.conf.Configuration, org.apache.hadoop.io.SequenceFile$CompressionType);
    Code:
       0: aload_0
       1: ldc           #7                  // String io.seqfile.compression.type
       3: aload_1
       4: invokevirtual #11                 // Method org/apache/hadoop/io/SequenceFile$CompressionType.toString:()Ljava/lang/String;
       7: invokevirtual #12                 // Method org/apache/hadoop/conf/Configuration.set:(Ljava/lang/String;Ljava/lang/String;)V
      10: return

  public static org.apache.hadoop.io.SequenceFile$Writer createWriter(org.apache.hadoop.conf.Configuration, org.apache.hadoop.io.SequenceFile$Writer$Option...) throws java.io.IOException;
    Code:
       0: ldc           #13                 // class org/apache/hadoop/io/SequenceFile$Writer$CompressionOption
       2: aload_1
       3: invokestatic  #14                 // Method org/apache/hadoop/util/Options.getOption:(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
       6: checkcast     #13                 // class org/apache/hadoop/io/SequenceFile$Writer$CompressionOption
       9: astore_2
      10: aload_2
      11: ifnull        22
      14: aload_2
      15: invokevirtual #15                 // Method org/apache/hadoop/io/SequenceFile$Writer$CompressionOption.getValue:()Lorg/apache/hadoop/io/SequenceFile$CompressionType;
      18: astore_3
      19: goto          46
      22: aload_0
      23: invokestatic  #16                 // Method getDefaultCompressionType:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/io/SequenceFile$CompressionType;
      26: astore_3
      27: aload_1
      28: iconst_1
      29: anewarray     #17                 // class org/apache/hadoop/io/SequenceFile$Writer$Option
      32: dup
      33: iconst_0
      34: aload_3
      35: invokestatic  #18                 // Method org/apache/hadoop/io/SequenceFile$Writer.compression:(Lorg/apache/hadoop/io/SequenceFile$CompressionType;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      38: aastore
      39: invokestatic  #19                 // Method org/apache/hadoop/util/Options.prependOptions:([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;
      42: checkcast     #20                 // class "[Lorg/apache/hadoop/io/SequenceFile$Writer$Option;"
      45: astore_1
      46: getstatic     #21                 // Field org/apache/hadoop/io/SequenceFile$1.$SwitchMap$org$apache$hadoop$io$SequenceFile$CompressionType:[I
      49: aload_3
      50: invokevirtual #22                 // Method org/apache/hadoop/io/SequenceFile$CompressionType.ordinal:()I
      53: iaload
      54: tableswitch   { // 1 to 3
                     1: 80
                     2: 90
                     3: 100
               default: 80
          }
      80: new           #23                 // class org/apache/hadoop/io/SequenceFile$Writer
      83: dup
      84: aload_0
      85: aload_1
      86: invokespecial #24                 // Method org/apache/hadoop/io/SequenceFile$Writer."<init>":(Lorg/apache/hadoop/conf/Configuration;[Lorg/apache/hadoop/io/SequenceFile$Writer$Option;)V
      89: areturn
      90: new           #25                 // class org/apache/hadoop/io/SequenceFile$RecordCompressWriter
      93: dup
      94: aload_0
      95: aload_1
      96: invokespecial #26                 // Method org/apache/hadoop/io/SequenceFile$RecordCompressWriter."<init>":(Lorg/apache/hadoop/conf/Configuration;[Lorg/apache/hadoop/io/SequenceFile$Writer$Option;)V
      99: areturn
     100: new           #27                 // class org/apache/hadoop/io/SequenceFile$BlockCompressWriter
     103: dup
     104: aload_0
     105: aload_1
     106: invokespecial #28                 // Method org/apache/hadoop/io/SequenceFile$BlockCompressWriter."<init>":(Lorg/apache/hadoop/conf/Configuration;[Lorg/apache/hadoop/io/SequenceFile$Writer$Option;)V
     109: areturn

  public static org.apache.hadoop.io.SequenceFile$Writer createWriter(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.Path, java.lang.Class, java.lang.Class) throws java.io.IOException;
    Code:
       0: aload_1
       1: iconst_4
       2: anewarray     #17                 // class org/apache/hadoop/io/SequenceFile$Writer$Option
       5: dup
       6: iconst_0
       7: aload_0
       8: invokestatic  #29                 // Method org/apache/hadoop/io/SequenceFile$Writer.access$000:(Lorg/apache/hadoop/fs/FileSystem;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      11: aastore
      12: dup
      13: iconst_1
      14: aload_2
      15: invokestatic  #30                 // Method org/apache/hadoop/io/SequenceFile$Writer.file:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      18: aastore
      19: dup
      20: iconst_2
      21: aload_3
      22: invokestatic  #31                 // Method org/apache/hadoop/io/SequenceFile$Writer.keyClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      25: aastore
      26: dup
      27: iconst_3
      28: aload         4
      30: invokestatic  #32                 // Method org/apache/hadoop/io/SequenceFile$Writer.valueClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      33: aastore
      34: invokestatic  #33                 // Method createWriter:(Lorg/apache/hadoop/conf/Configuration;[Lorg/apache/hadoop/io/SequenceFile$Writer$Option;)Lorg/apache/hadoop/io/SequenceFile$Writer;
      37: areturn

  public static org.apache.hadoop.io.SequenceFile$Writer createWriter(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.Path, java.lang.Class, java.lang.Class, org.apache.hadoop.io.SequenceFile$CompressionType) throws java.io.IOException;
    Code:
       0: aload_1
       1: iconst_5
       2: anewarray     #17                 // class org/apache/hadoop/io/SequenceFile$Writer$Option
       5: dup
       6: iconst_0
       7: aload_0
       8: invokestatic  #29                 // Method org/apache/hadoop/io/SequenceFile$Writer.access$000:(Lorg/apache/hadoop/fs/FileSystem;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      11: aastore
      12: dup
      13: iconst_1
      14: aload_2
      15: invokestatic  #30                 // Method org/apache/hadoop/io/SequenceFile$Writer.file:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      18: aastore
      19: dup
      20: iconst_2
      21: aload_3
      22: invokestatic  #31                 // Method org/apache/hadoop/io/SequenceFile$Writer.keyClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      25: aastore
      26: dup
      27: iconst_3
      28: aload         4
      30: invokestatic  #32                 // Method org/apache/hadoop/io/SequenceFile$Writer.valueClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      33: aastore
      34: dup
      35: iconst_4
      36: aload         5
      38: invokestatic  #18                 // Method org/apache/hadoop/io/SequenceFile$Writer.compression:(Lorg/apache/hadoop/io/SequenceFile$CompressionType;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      41: aastore
      42: invokestatic  #33                 // Method createWriter:(Lorg/apache/hadoop/conf/Configuration;[Lorg/apache/hadoop/io/SequenceFile$Writer$Option;)Lorg/apache/hadoop/io/SequenceFile$Writer;
      45: areturn

  public static org.apache.hadoop.io.SequenceFile$Writer createWriter(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.Path, java.lang.Class, java.lang.Class, org.apache.hadoop.io.SequenceFile$CompressionType, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: aload_1
       1: bipush        6
       3: anewarray     #17                 // class org/apache/hadoop/io/SequenceFile$Writer$Option
       6: dup
       7: iconst_0
       8: aload_2
       9: invokestatic  #30                 // Method org/apache/hadoop/io/SequenceFile$Writer.file:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      12: aastore
      13: dup
      14: iconst_1
      15: aload_0
      16: invokestatic  #29                 // Method org/apache/hadoop/io/SequenceFile$Writer.access$000:(Lorg/apache/hadoop/fs/FileSystem;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      19: aastore
      20: dup
      21: iconst_2
      22: aload_3
      23: invokestatic  #31                 // Method org/apache/hadoop/io/SequenceFile$Writer.keyClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      26: aastore
      27: dup
      28: iconst_3
      29: aload         4
      31: invokestatic  #32                 // Method org/apache/hadoop/io/SequenceFile$Writer.valueClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      34: aastore
      35: dup
      36: iconst_4
      37: aload         5
      39: invokestatic  #18                 // Method org/apache/hadoop/io/SequenceFile$Writer.compression:(Lorg/apache/hadoop/io/SequenceFile$CompressionType;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      42: aastore
      43: dup
      44: iconst_5
      45: aload         6
      47: invokestatic  #34                 // Method org/apache/hadoop/io/SequenceFile$Writer.progressable:(Lorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      50: aastore
      51: invokestatic  #33                 // Method createWriter:(Lorg/apache/hadoop/conf/Configuration;[Lorg/apache/hadoop/io/SequenceFile$Writer$Option;)Lorg/apache/hadoop/io/SequenceFile$Writer;
      54: areturn

  public static org.apache.hadoop.io.SequenceFile$Writer createWriter(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.Path, java.lang.Class, java.lang.Class, org.apache.hadoop.io.SequenceFile$CompressionType, org.apache.hadoop.io.compress.CompressionCodec) throws java.io.IOException;
    Code:
       0: aload_1
       1: iconst_5
       2: anewarray     #17                 // class org/apache/hadoop/io/SequenceFile$Writer$Option
       5: dup
       6: iconst_0
       7: aload_2
       8: invokestatic  #30                 // Method org/apache/hadoop/io/SequenceFile$Writer.file:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      11: aastore
      12: dup
      13: iconst_1
      14: aload_0
      15: invokestatic  #29                 // Method org/apache/hadoop/io/SequenceFile$Writer.access$000:(Lorg/apache/hadoop/fs/FileSystem;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      18: aastore
      19: dup
      20: iconst_2
      21: aload_3
      22: invokestatic  #31                 // Method org/apache/hadoop/io/SequenceFile$Writer.keyClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      25: aastore
      26: dup
      27: iconst_3
      28: aload         4
      30: invokestatic  #32                 // Method org/apache/hadoop/io/SequenceFile$Writer.valueClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      33: aastore
      34: dup
      35: iconst_4
      36: aload         5
      38: aload         6
      40: invokestatic  #35                 // Method org/apache/hadoop/io/SequenceFile$Writer.compression:(Lorg/apache/hadoop/io/SequenceFile$CompressionType;Lorg/apache/hadoop/io/compress/CompressionCodec;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      43: aastore
      44: invokestatic  #33                 // Method createWriter:(Lorg/apache/hadoop/conf/Configuration;[Lorg/apache/hadoop/io/SequenceFile$Writer$Option;)Lorg/apache/hadoop/io/SequenceFile$Writer;
      47: areturn

  public static org.apache.hadoop.io.SequenceFile$Writer createWriter(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.Path, java.lang.Class, java.lang.Class, org.apache.hadoop.io.SequenceFile$CompressionType, org.apache.hadoop.io.compress.CompressionCodec, org.apache.hadoop.util.Progressable, org.apache.hadoop.io.SequenceFile$Metadata) throws java.io.IOException;
    Code:
       0: aload_1
       1: bipush        7
       3: anewarray     #17                 // class org/apache/hadoop/io/SequenceFile$Writer$Option
       6: dup
       7: iconst_0
       8: aload_2
       9: invokestatic  #30                 // Method org/apache/hadoop/io/SequenceFile$Writer.file:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      12: aastore
      13: dup
      14: iconst_1
      15: aload_0
      16: invokestatic  #29                 // Method org/apache/hadoop/io/SequenceFile$Writer.access$000:(Lorg/apache/hadoop/fs/FileSystem;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      19: aastore
      20: dup
      21: iconst_2
      22: aload_3
      23: invokestatic  #31                 // Method org/apache/hadoop/io/SequenceFile$Writer.keyClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      26: aastore
      27: dup
      28: iconst_3
      29: aload         4
      31: invokestatic  #32                 // Method org/apache/hadoop/io/SequenceFile$Writer.valueClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      34: aastore
      35: dup
      36: iconst_4
      37: aload         5
      39: aload         6
      41: invokestatic  #35                 // Method org/apache/hadoop/io/SequenceFile$Writer.compression:(Lorg/apache/hadoop/io/SequenceFile$CompressionType;Lorg/apache/hadoop/io/compress/CompressionCodec;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      44: aastore
      45: dup
      46: iconst_5
      47: aload         7
      49: invokestatic  #34                 // Method org/apache/hadoop/io/SequenceFile$Writer.progressable:(Lorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      52: aastore
      53: dup
      54: bipush        6
      56: aload         8
      58: invokestatic  #36                 // Method org/apache/hadoop/io/SequenceFile$Writer.metadata:(Lorg/apache/hadoop/io/SequenceFile$Metadata;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      61: aastore
      62: invokestatic  #33                 // Method createWriter:(Lorg/apache/hadoop/conf/Configuration;[Lorg/apache/hadoop/io/SequenceFile$Writer$Option;)Lorg/apache/hadoop/io/SequenceFile$Writer;
      65: areturn

  public static org.apache.hadoop.io.SequenceFile$Writer createWriter(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.Path, java.lang.Class, java.lang.Class, int, short, long, org.apache.hadoop.io.SequenceFile$CompressionType, org.apache.hadoop.io.compress.CompressionCodec, org.apache.hadoop.util.Progressable, org.apache.hadoop.io.SequenceFile$Metadata) throws java.io.IOException;
    Code:
       0: aload_1
       1: bipush        10
       3: anewarray     #17                 // class org/apache/hadoop/io/SequenceFile$Writer$Option
       6: dup
       7: iconst_0
       8: aload_2
       9: invokestatic  #30                 // Method org/apache/hadoop/io/SequenceFile$Writer.file:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      12: aastore
      13: dup
      14: iconst_1
      15: aload_0
      16: invokestatic  #29                 // Method org/apache/hadoop/io/SequenceFile$Writer.access$000:(Lorg/apache/hadoop/fs/FileSystem;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      19: aastore
      20: dup
      21: iconst_2
      22: aload_3
      23: invokestatic  #31                 // Method org/apache/hadoop/io/SequenceFile$Writer.keyClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      26: aastore
      27: dup
      28: iconst_3
      29: aload         4
      31: invokestatic  #32                 // Method org/apache/hadoop/io/SequenceFile$Writer.valueClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      34: aastore
      35: dup
      36: iconst_4
      37: iload         5
      39: invokestatic  #37                 // Method org/apache/hadoop/io/SequenceFile$Writer.bufferSize:(I)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      42: aastore
      43: dup
      44: iconst_5
      45: iload         6
      47: invokestatic  #38                 // Method org/apache/hadoop/io/SequenceFile$Writer.replication:(S)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      50: aastore
      51: dup
      52: bipush        6
      54: lload         7
      56: invokestatic  #39                 // Method org/apache/hadoop/io/SequenceFile$Writer.blockSize:(J)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      59: aastore
      60: dup
      61: bipush        7
      63: aload         9
      65: aload         10
      67: invokestatic  #35                 // Method org/apache/hadoop/io/SequenceFile$Writer.compression:(Lorg/apache/hadoop/io/SequenceFile$CompressionType;Lorg/apache/hadoop/io/compress/CompressionCodec;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      70: aastore
      71: dup
      72: bipush        8
      74: aload         11
      76: invokestatic  #34                 // Method org/apache/hadoop/io/SequenceFile$Writer.progressable:(Lorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      79: aastore
      80: dup
      81: bipush        9
      83: aload         12
      85: invokestatic  #36                 // Method org/apache/hadoop/io/SequenceFile$Writer.metadata:(Lorg/apache/hadoop/io/SequenceFile$Metadata;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      88: aastore
      89: invokestatic  #33                 // Method createWriter:(Lorg/apache/hadoop/conf/Configuration;[Lorg/apache/hadoop/io/SequenceFile$Writer$Option;)Lorg/apache/hadoop/io/SequenceFile$Writer;
      92: areturn

  public static org.apache.hadoop.io.SequenceFile$Writer createWriter(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.Path, java.lang.Class, java.lang.Class, int, short, long, boolean, org.apache.hadoop.io.SequenceFile$CompressionType, org.apache.hadoop.io.compress.CompressionCodec, org.apache.hadoop.io.SequenceFile$Metadata) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method org/apache/hadoop/fs/FileSystem.getUri:()Ljava/net/URI;
       4: aload_1
       5: invokestatic  #41                 // Method org/apache/hadoop/fs/FileContext.getFileContext:(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileContext;
       8: aload_1
       9: aload_2
      10: aload_3
      11: aload         4
      13: aload         10
      15: aload         11
      17: aload         12
      19: getstatic     #42                 // Field org/apache/hadoop/fs/CreateFlag.CREATE:Lorg/apache/hadoop/fs/CreateFlag;
      22: getstatic     #43                 // Field org/apache/hadoop/fs/CreateFlag.OVERWRITE:Lorg/apache/hadoop/fs/CreateFlag;
      25: invokestatic  #44                 // Method java/util/EnumSet.of:(Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/util/EnumSet;
      28: iconst_4
      29: anewarray     #45                 // class org/apache/hadoop/fs/Options$CreateOpts
      32: dup
      33: iconst_0
      34: iload         5
      36: invokestatic  #46                 // Method org/apache/hadoop/fs/Options$CreateOpts.bufferSize:(I)Lorg/apache/hadoop/fs/Options$CreateOpts$BufferSize;
      39: aastore
      40: dup
      41: iconst_1
      42: iload         9
      44: ifeq          53
      47: invokestatic  #47                 // Method org/apache/hadoop/fs/Options$CreateOpts.createParent:()Lorg/apache/hadoop/fs/Options$CreateOpts$CreateParent;
      50: goto          56
      53: invokestatic  #48                 // Method org/apache/hadoop/fs/Options$CreateOpts.donotCreateParent:()Lorg/apache/hadoop/fs/Options$CreateOpts$CreateParent;
      56: aastore
      57: dup
      58: iconst_2
      59: iload         6
      61: invokestatic  #49                 // Method org/apache/hadoop/fs/Options$CreateOpts.repFac:(S)Lorg/apache/hadoop/fs/Options$CreateOpts$ReplicationFactor;
      64: aastore
      65: dup
      66: iconst_3
      67: lload         7
      69: invokestatic  #50                 // Method org/apache/hadoop/fs/Options$CreateOpts.blockSize:(J)Lorg/apache/hadoop/fs/Options$CreateOpts$BlockSize;
      72: aastore
      73: invokestatic  #51                 // Method createWriter:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/io/SequenceFile$CompressionType;Lorg/apache/hadoop/io/compress/CompressionCodec;Lorg/apache/hadoop/io/SequenceFile$Metadata;Ljava/util/EnumSet;[Lorg/apache/hadoop/fs/Options$CreateOpts;)Lorg/apache/hadoop/io/SequenceFile$Writer;
      76: areturn

  public static org.apache.hadoop.io.SequenceFile$Writer createWriter(org.apache.hadoop.fs.FileContext, org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.Path, java.lang.Class, java.lang.Class, org.apache.hadoop.io.SequenceFile$CompressionType, org.apache.hadoop.io.compress.CompressionCodec, org.apache.hadoop.io.SequenceFile$Metadata, java.util.EnumSet<org.apache.hadoop.fs.CreateFlag>, org.apache.hadoop.fs.Options$CreateOpts...) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: aload         8
       5: aload         9
       7: invokevirtual #52                 // Method org/apache/hadoop/fs/FileContext.create:(Lorg/apache/hadoop/fs/Path;Ljava/util/EnumSet;[Lorg/apache/hadoop/fs/Options$CreateOpts;)Lorg/apache/hadoop/fs/FSDataOutputStream;
      10: aload_3
      11: aload         4
      13: aload         5
      15: aload         6
      17: aload         7
      19: invokestatic  #53                 // Method createWriter:(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FSDataOutputStream;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/io/SequenceFile$CompressionType;Lorg/apache/hadoop/io/compress/CompressionCodec;Lorg/apache/hadoop/io/SequenceFile$Metadata;)Lorg/apache/hadoop/io/SequenceFile$Writer;
      22: invokevirtual #54                 // Method org/apache/hadoop/io/SequenceFile$Writer.ownStream:()Lorg/apache/hadoop/io/SequenceFile$Writer;
      25: areturn

  public static org.apache.hadoop.io.SequenceFile$Writer createWriter(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.Path, java.lang.Class, java.lang.Class, org.apache.hadoop.io.SequenceFile$CompressionType, org.apache.hadoop.io.compress.CompressionCodec, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: aload_1
       1: bipush        6
       3: anewarray     #17                 // class org/apache/hadoop/io/SequenceFile$Writer$Option
       6: dup
       7: iconst_0
       8: aload_2
       9: invokestatic  #30                 // Method org/apache/hadoop/io/SequenceFile$Writer.file:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      12: aastore
      13: dup
      14: iconst_1
      15: aload_0
      16: invokestatic  #29                 // Method org/apache/hadoop/io/SequenceFile$Writer.access$000:(Lorg/apache/hadoop/fs/FileSystem;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      19: aastore
      20: dup
      21: iconst_2
      22: aload_3
      23: invokestatic  #31                 // Method org/apache/hadoop/io/SequenceFile$Writer.keyClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      26: aastore
      27: dup
      28: iconst_3
      29: aload         4
      31: invokestatic  #32                 // Method org/apache/hadoop/io/SequenceFile$Writer.valueClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      34: aastore
      35: dup
      36: iconst_4
      37: aload         5
      39: aload         6
      41: invokestatic  #35                 // Method org/apache/hadoop/io/SequenceFile$Writer.compression:(Lorg/apache/hadoop/io/SequenceFile$CompressionType;Lorg/apache/hadoop/io/compress/CompressionCodec;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      44: aastore
      45: dup
      46: iconst_5
      47: aload         7
      49: invokestatic  #34                 // Method org/apache/hadoop/io/SequenceFile$Writer.progressable:(Lorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      52: aastore
      53: invokestatic  #33                 // Method createWriter:(Lorg/apache/hadoop/conf/Configuration;[Lorg/apache/hadoop/io/SequenceFile$Writer$Option;)Lorg/apache/hadoop/io/SequenceFile$Writer;
      56: areturn

  public static org.apache.hadoop.io.SequenceFile$Writer createWriter(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.FSDataOutputStream, java.lang.Class, java.lang.Class, org.apache.hadoop.io.SequenceFile$CompressionType, org.apache.hadoop.io.compress.CompressionCodec, org.apache.hadoop.io.SequenceFile$Metadata) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_5
       2: anewarray     #17                 // class org/apache/hadoop/io/SequenceFile$Writer$Option
       5: dup
       6: iconst_0
       7: aload_1
       8: invokestatic  #55                 // Method org/apache/hadoop/io/SequenceFile$Writer.stream:(Lorg/apache/hadoop/fs/FSDataOutputStream;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      11: aastore
      12: dup
      13: iconst_1
      14: aload_2
      15: invokestatic  #31                 // Method org/apache/hadoop/io/SequenceFile$Writer.keyClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      18: aastore
      19: dup
      20: iconst_2
      21: aload_3
      22: invokestatic  #32                 // Method org/apache/hadoop/io/SequenceFile$Writer.valueClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      25: aastore
      26: dup
      27: iconst_3
      28: aload         4
      30: aload         5
      32: invokestatic  #35                 // Method org/apache/hadoop/io/SequenceFile$Writer.compression:(Lorg/apache/hadoop/io/SequenceFile$CompressionType;Lorg/apache/hadoop/io/compress/CompressionCodec;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      35: aastore
      36: dup
      37: iconst_4
      38: aload         6
      40: invokestatic  #36                 // Method org/apache/hadoop/io/SequenceFile$Writer.metadata:(Lorg/apache/hadoop/io/SequenceFile$Metadata;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      43: aastore
      44: invokestatic  #33                 // Method createWriter:(Lorg/apache/hadoop/conf/Configuration;[Lorg/apache/hadoop/io/SequenceFile$Writer$Option;)Lorg/apache/hadoop/io/SequenceFile$Writer;
      47: areturn

  public static org.apache.hadoop.io.SequenceFile$Writer createWriter(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.FSDataOutputStream, java.lang.Class, java.lang.Class, org.apache.hadoop.io.SequenceFile$CompressionType, org.apache.hadoop.io.compress.CompressionCodec) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_4
       2: anewarray     #17                 // class org/apache/hadoop/io/SequenceFile$Writer$Option
       5: dup
       6: iconst_0
       7: aload_1
       8: invokestatic  #55                 // Method org/apache/hadoop/io/SequenceFile$Writer.stream:(Lorg/apache/hadoop/fs/FSDataOutputStream;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      11: aastore
      12: dup
      13: iconst_1
      14: aload_2
      15: invokestatic  #31                 // Method org/apache/hadoop/io/SequenceFile$Writer.keyClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      18: aastore
      19: dup
      20: iconst_2
      21: aload_3
      22: invokestatic  #32                 // Method org/apache/hadoop/io/SequenceFile$Writer.valueClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      25: aastore
      26: dup
      27: iconst_3
      28: aload         4
      30: aload         5
      32: invokestatic  #35                 // Method org/apache/hadoop/io/SequenceFile$Writer.compression:(Lorg/apache/hadoop/io/SequenceFile$CompressionType;Lorg/apache/hadoop/io/compress/CompressionCodec;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      35: aastore
      36: invokestatic  #33                 // Method createWriter:(Lorg/apache/hadoop/conf/Configuration;[Lorg/apache/hadoop/io/SequenceFile$Writer$Option;)Lorg/apache/hadoop/io/SequenceFile$Writer;
      39: areturn

  private static int getBufferSize(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: ldc           #56                 // String io.file.buffer.size
       3: sipush        4096
       6: invokevirtual #57                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
       9: ireturn

  static int access$100(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: invokestatic  #5                  // Method getBufferSize:(Lorg/apache/hadoop/conf/Configuration;)I
       4: ireturn

  static byte[] access$400();
    Code:
       0: getstatic     #4                  // Field VERSION:[B
       3: areturn

  static org.slf4j.Logger access$500();
    Code:
       0: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static {};
    Code:
       0: ldc           #1                  // class org/apache/hadoop/io/SequenceFile
       2: invokestatic  #58                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
       8: iconst_4
       9: newarray       byte
      11: dup
      12: iconst_0
      13: bipush        83
      15: bastore
      16: dup
      17: iconst_1
      18: bipush        69
      20: bastore
      21: dup
      22: iconst_2
      23: bipush        81
      25: bastore
      26: dup
      27: iconst_3
      28: bipush        6
      30: bastore
      31: putstatic     #4                  // Field VERSION:[B
      34: return
}
