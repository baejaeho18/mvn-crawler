Compiled from "CodecPool.java"
public class org.apache.hadoop.io.compress.CodecPool {
  private static final org.slf4j.Logger LOG;

  private static final java.util.Map<java.lang.Class<org.apache.hadoop.io.compress.Compressor>, java.util.Set<org.apache.hadoop.io.compress.Compressor>> compressorPool;

  private static final java.util.Map<java.lang.Class<org.apache.hadoop.io.compress.Decompressor>, java.util.Set<org.apache.hadoop.io.compress.Decompressor>> decompressorPool;

  private static final com.google.common.cache.LoadingCache<java.lang.Class<org.apache.hadoop.io.compress.Compressor>, java.util.concurrent.atomic.AtomicInteger> compressorCounts;

  private static final com.google.common.cache.LoadingCache<java.lang.Class<org.apache.hadoop.io.compress.Decompressor>, java.util.concurrent.atomic.AtomicInteger> decompressorCounts;

  public org.apache.hadoop.io.compress.CodecPool();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  private static <T> com.google.common.cache.LoadingCache<java.lang.Class<T>, java.util.concurrent.atomic.AtomicInteger> createCache(java.lang.Class<T>);
    Code:
       0: invokestatic  #2                  // Method com/google/common/cache/CacheBuilder.newBuilder:()Lcom/google/common/cache/CacheBuilder;
       3: new           #3                  // class org/apache/hadoop/io/compress/CodecPool$1
       6: dup
       7: invokespecial #4                  // Method org/apache/hadoop/io/compress/CodecPool$1."<init>":()V
      10: invokevirtual #5                  // Method com/google/common/cache/CacheBuilder.build:(Lcom/google/common/cache/CacheLoader;)Lcom/google/common/cache/LoadingCache;
      13: areturn

  private static <T> T borrow(java.util.Map<java.lang.Class<T>, java.util.Set<T>>, java.lang.Class<? extends T>);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: dup
       4: astore        4
       6: monitorenter
       7: aload_0
       8: aload_1
       9: invokeinterface #6,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #7                  // class java/util/Set
      17: astore_3
      18: aload         4
      20: monitorexit
      21: goto          32
      24: astore        5
      26: aload         4
      28: monitorexit
      29: aload         5
      31: athrow
      32: aload_3
      33: ifnull        84
      36: aload_3
      37: dup
      38: astore        4
      40: monitorenter
      41: aload_3
      42: invokeinterface #8,  1            // InterfaceMethod java/util/Set.isEmpty:()Z
      47: ifne          70
      50: aload_3
      51: invokeinterface #9,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      56: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      61: astore_2
      62: aload_3
      63: aload_2
      64: invokeinterface #11,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      69: pop
      70: aload         4
      72: monitorexit
      73: goto          84
      76: astore        6
      78: aload         4
      80: monitorexit
      81: aload         6
      83: athrow
      84: aload_2
      85: areturn
    Exception table:
       from    to  target type
           7    21    24   any
          24    29    24   any
          41    73    76   any
          76    81    76   any

  private static <T> boolean payback(java.util.Map<java.lang.Class<T>, java.util.Set<T>>, T);
    Code:
       0: aload_1
       1: ifnull        84
       4: aload_1
       5: invokestatic  #12                 // Method org/apache/hadoop/util/ReflectionUtils.getClass:(Ljava/lang/Object;)Ljava/lang/Class;
       8: astore_2
       9: aload_0
      10: dup
      11: astore        4
      13: monitorenter
      14: aload_0
      15: aload_2
      16: invokeinterface #6,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #7                  // class java/util/Set
      24: astore_3
      25: aload_3
      26: ifnonnull     46
      29: new           #13                 // class java/util/HashSet
      32: dup
      33: invokespecial #14                 // Method java/util/HashSet."<init>":()V
      36: astore_3
      37: aload_0
      38: aload_2
      39: aload_3
      40: invokeinterface #15,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      45: pop
      46: aload         4
      48: monitorexit
      49: goto          60
      52: astore        5
      54: aload         4
      56: monitorexit
      57: aload         5
      59: athrow
      60: aload_3
      61: dup
      62: astore        4
      64: monitorenter
      65: aload_3
      66: aload_1
      67: invokeinterface #16,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      72: aload         4
      74: monitorexit
      75: ireturn
      76: astore        6
      78: aload         4
      80: monitorexit
      81: aload         6
      83: athrow
      84: iconst_0
      85: ireturn
    Exception table:
       from    to  target type
          14    49    52   any
          52    57    52   any
          65    75    76   any
          76    81    76   any

  private static <T> int getLeaseCount(com.google.common.cache.LoadingCache<java.lang.Class<T>, java.util.concurrent.atomic.AtomicInteger>, java.lang.Class<? extends T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #17,  2           // InterfaceMethod com/google/common/cache/LoadingCache.getUnchecked:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #18                 // class java/util/concurrent/atomic/AtomicInteger
      10: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      13: ireturn

  private static <T> void updateLeaseCount(com.google.common.cache.LoadingCache<java.lang.Class<T>, java.util.concurrent.atomic.AtomicInteger>, T, int);
    Code:
       0: aload_1
       1: ifnull        24
       4: aload_1
       5: invokestatic  #12                 // Method org/apache/hadoop/util/ReflectionUtils.getClass:(Ljava/lang/Object;)Ljava/lang/Class;
       8: astore_3
       9: aload_0
      10: aload_3
      11: invokeinterface #17,  2           // InterfaceMethod com/google/common/cache/LoadingCache.getUnchecked:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #18                 // class java/util/concurrent/atomic/AtomicInteger
      19: iload_2
      20: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicInteger.addAndGet:(I)I
      23: pop
      24: return

  public static org.apache.hadoop.io.compress.Compressor getCompressor(org.apache.hadoop.io.compress.CompressionCodec, org.apache.hadoop.conf.Configuration);
    Code:
       0: getstatic     #21                 // Field compressorPool:Ljava/util/Map;
       3: aload_0
       4: invokeinterface #22,  1           // InterfaceMethod org/apache/hadoop/io/compress/CompressionCodec.getCompressorType:()Ljava/lang/Class;
       9: invokestatic  #23                 // Method borrow:(Ljava/util/Map;Ljava/lang/Class;)Ljava/lang/Object;
      12: checkcast     #24                 // class org/apache/hadoop/io/compress/Compressor
      15: astore_2
      16: aload_2
      17: ifnonnull     67
      20: aload_0
      21: invokeinterface #25,  1           // InterfaceMethod org/apache/hadoop/io/compress/CompressionCodec.createCompressor:()Lorg/apache/hadoop/io/compress/Compressor;
      26: astore_2
      27: getstatic     #26                 // Field LOG:Lorg/slf4j/Logger;
      30: new           #27                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #29                 // String Got brand-new compressor [
      39: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_0
      43: invokeinterface #31,  1           // InterfaceMethod org/apache/hadoop/io/compress/CompressionCodec.getDefaultExtension:()Ljava/lang/String;
      48: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: ldc           #32                 // String ]
      53: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: invokeinterface #34,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      64: goto          95
      67: aload_2
      68: aload_1
      69: invokeinterface #35,  2           // InterfaceMethod org/apache/hadoop/io/compress/Compressor.reinit:(Lorg/apache/hadoop/conf/Configuration;)V
      74: getstatic     #26                 // Field LOG:Lorg/slf4j/Logger;
      77: invokeinterface #36,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      82: ifeq          95
      85: getstatic     #26                 // Field LOG:Lorg/slf4j/Logger;
      88: ldc           #37                 // String Got recycled compressor
      90: invokeinterface #38,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      95: aload_2
      96: ifnull        119
      99: aload_2
     100: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     103: ldc           #40                 // class org/apache/hadoop/io/compress/DoNotPool
     105: invokevirtual #41                 // Method java/lang/Class.isAnnotationPresent:(Ljava/lang/Class;)Z
     108: ifne          119
     111: getstatic     #42                 // Field compressorCounts:Lcom/google/common/cache/LoadingCache;
     114: aload_2
     115: iconst_1
     116: invokestatic  #43                 // Method updateLeaseCount:(Lcom/google/common/cache/LoadingCache;Ljava/lang/Object;I)V
     119: aload_2
     120: areturn

  public static org.apache.hadoop.io.compress.Compressor getCompressor(org.apache.hadoop.io.compress.CompressionCodec);
    Code:
       0: aload_0
       1: aconst_null
       2: invokestatic  #44                 // Method getCompressor:(Lorg/apache/hadoop/io/compress/CompressionCodec;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/io/compress/Compressor;
       5: areturn

  public static org.apache.hadoop.io.compress.Decompressor getDecompressor(org.apache.hadoop.io.compress.CompressionCodec);
    Code:
       0: getstatic     #45                 // Field decompressorPool:Ljava/util/Map;
       3: aload_0
       4: invokeinterface #46,  1           // InterfaceMethod org/apache/hadoop/io/compress/CompressionCodec.getDecompressorType:()Ljava/lang/Class;
       9: invokestatic  #23                 // Method borrow:(Ljava/util/Map;Ljava/lang/Class;)Ljava/lang/Object;
      12: checkcast     #47                 // class org/apache/hadoop/io/compress/Decompressor
      15: astore_1
      16: aload_1
      17: ifnonnull     67
      20: aload_0
      21: invokeinterface #48,  1           // InterfaceMethod org/apache/hadoop/io/compress/CompressionCodec.createDecompressor:()Lorg/apache/hadoop/io/compress/Decompressor;
      26: astore_1
      27: getstatic     #26                 // Field LOG:Lorg/slf4j/Logger;
      30: new           #27                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #49                 // String Got brand-new decompressor [
      39: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_0
      43: invokeinterface #31,  1           // InterfaceMethod org/apache/hadoop/io/compress/CompressionCodec.getDefaultExtension:()Ljava/lang/String;
      48: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: ldc           #32                 // String ]
      53: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: invokeinterface #34,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      64: goto          88
      67: getstatic     #26                 // Field LOG:Lorg/slf4j/Logger;
      70: invokeinterface #36,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      75: ifeq          88
      78: getstatic     #26                 // Field LOG:Lorg/slf4j/Logger;
      81: ldc           #50                 // String Got recycled decompressor
      83: invokeinterface #38,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      88: aload_1
      89: ifnull        112
      92: aload_1
      93: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      96: ldc           #40                 // class org/apache/hadoop/io/compress/DoNotPool
      98: invokevirtual #41                 // Method java/lang/Class.isAnnotationPresent:(Ljava/lang/Class;)Z
     101: ifne          112
     104: getstatic     #51                 // Field decompressorCounts:Lcom/google/common/cache/LoadingCache;
     107: aload_1
     108: iconst_1
     109: invokestatic  #43                 // Method updateLeaseCount:(Lcom/google/common/cache/LoadingCache;Ljava/lang/Object;I)V
     112: aload_1
     113: areturn

  public static void returnCompressor(org.apache.hadoop.io.compress.Compressor);
    Code:
       0: aload_0
       1: ifnonnull     5
       4: return
       5: aload_0
       6: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: ldc           #40                 // class org/apache/hadoop/io/compress/DoNotPool
      11: invokevirtual #41                 // Method java/lang/Class.isAnnotationPresent:(Ljava/lang/Class;)Z
      14: ifeq          18
      17: return
      18: aload_0
      19: invokeinterface #52,  1           // InterfaceMethod org/apache/hadoop/io/compress/Compressor.reset:()V
      24: getstatic     #21                 // Field compressorPool:Ljava/util/Map;
      27: aload_0
      28: invokestatic  #53                 // Method payback:(Ljava/util/Map;Ljava/lang/Object;)Z
      31: ifeq          42
      34: getstatic     #42                 // Field compressorCounts:Lcom/google/common/cache/LoadingCache;
      37: aload_0
      38: iconst_m1
      39: invokestatic  #43                 // Method updateLeaseCount:(Lcom/google/common/cache/LoadingCache;Ljava/lang/Object;I)V
      42: return

  public static void returnDecompressor(org.apache.hadoop.io.compress.Decompressor);
    Code:
       0: aload_0
       1: ifnonnull     5
       4: return
       5: aload_0
       6: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: ldc           #40                 // class org/apache/hadoop/io/compress/DoNotPool
      11: invokevirtual #41                 // Method java/lang/Class.isAnnotationPresent:(Ljava/lang/Class;)Z
      14: ifeq          18
      17: return
      18: aload_0
      19: invokeinterface #54,  1           // InterfaceMethod org/apache/hadoop/io/compress/Decompressor.reset:()V
      24: getstatic     #45                 // Field decompressorPool:Ljava/util/Map;
      27: aload_0
      28: invokestatic  #53                 // Method payback:(Ljava/util/Map;Ljava/lang/Object;)Z
      31: ifeq          42
      34: getstatic     #51                 // Field decompressorCounts:Lcom/google/common/cache/LoadingCache;
      37: aload_0
      38: iconst_m1
      39: invokestatic  #43                 // Method updateLeaseCount:(Lcom/google/common/cache/LoadingCache;Ljava/lang/Object;I)V
      42: return

  public static int getLeasedCompressorsCount(org.apache.hadoop.io.compress.CompressionCodec);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: iconst_0
       5: goto          20
       8: getstatic     #42                 // Field compressorCounts:Lcom/google/common/cache/LoadingCache;
      11: aload_0
      12: invokeinterface #22,  1           // InterfaceMethod org/apache/hadoop/io/compress/CompressionCodec.getCompressorType:()Ljava/lang/Class;
      17: invokestatic  #55                 // Method getLeaseCount:(Lcom/google/common/cache/LoadingCache;Ljava/lang/Class;)I
      20: ireturn

  public static int getLeasedDecompressorsCount(org.apache.hadoop.io.compress.CompressionCodec);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: iconst_0
       5: goto          20
       8: getstatic     #51                 // Field decompressorCounts:Lcom/google/common/cache/LoadingCache;
      11: aload_0
      12: invokeinterface #46,  1           // InterfaceMethod org/apache/hadoop/io/compress/CompressionCodec.getDecompressorType:()Ljava/lang/Class;
      17: invokestatic  #55                 // Method getLeaseCount:(Lcom/google/common/cache/LoadingCache;Ljava/lang/Class;)I
      20: ireturn

  static {};
    Code:
       0: ldc           #56                 // class org/apache/hadoop/io/compress/CodecPool
       2: invokestatic  #57                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #26                 // Field LOG:Lorg/slf4j/Logger;
       8: new           #58                 // class java/util/HashMap
      11: dup
      12: invokespecial #59                 // Method java/util/HashMap."<init>":()V
      15: putstatic     #21                 // Field compressorPool:Ljava/util/Map;
      18: new           #58                 // class java/util/HashMap
      21: dup
      22: invokespecial #59                 // Method java/util/HashMap."<init>":()V
      25: putstatic     #45                 // Field decompressorPool:Ljava/util/Map;
      28: ldc           #24                 // class org/apache/hadoop/io/compress/Compressor
      30: invokestatic  #60                 // Method createCache:(Ljava/lang/Class;)Lcom/google/common/cache/LoadingCache;
      33: putstatic     #42                 // Field compressorCounts:Lcom/google/common/cache/LoadingCache;
      36: ldc           #47                 // class org/apache/hadoop/io/compress/Decompressor
      38: invokestatic  #60                 // Method createCache:(Ljava/lang/Class;)Lcom/google/common/cache/LoadingCache;
      41: putstatic     #51                 // Field decompressorCounts:Lcom/google/common/cache/LoadingCache;
      44: return
}
