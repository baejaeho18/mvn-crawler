Compiled from "ChRootedFs.java"
class org.apache.hadoop.fs.viewfs.ChRootedFs extends org.apache.hadoop.fs.AbstractFileSystem {
  private final org.apache.hadoop.fs.AbstractFileSystem myFs;

  private final java.net.URI myUri;

  private final org.apache.hadoop.fs.Path chRootPathPart;

  private final java.lang.String chRootPathPartString;

  protected org.apache.hadoop.fs.AbstractFileSystem getMyFs();
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: areturn

  protected org.apache.hadoop.fs.Path fullPath(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method org/apache/hadoop/fs/AbstractFileSystem.checkPath:(Lorg/apache/hadoop/fs/Path;)V
       5: new           #3                  // class org/apache/hadoop/fs/Path
       8: dup
       9: new           #4                  // class java/lang/StringBuilder
      12: dup
      13: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      16: aload_0
      17: getfield      #6                  // Field chRootPathPart:Lorg/apache/hadoop/fs/Path;
      20: invokevirtual #7                  // Method org/apache/hadoop/fs/Path.isRoot:()Z
      23: ifeq          31
      26: ldc           #8                  // String
      28: goto          35
      31: aload_0
      32: getfield      #9                  // Field chRootPathPartString:Ljava/lang/String;
      35: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_1
      39: invokevirtual #11                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
      42: invokevirtual #12                 // Method java/net/URI.getPath:()Ljava/lang/String;
      45: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokespecial #14                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      54: areturn

  public boolean isValidName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: aload_0
       5: new           #3                  // class org/apache/hadoop/fs/Path
       8: dup
       9: aload_1
      10: invokespecial #14                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      13: invokevirtual #15                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      16: invokevirtual #11                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
      19: invokevirtual #16                 // Method java/net/URI.toString:()Ljava/lang/String;
      22: invokevirtual #17                 // Method org/apache/hadoop/fs/AbstractFileSystem.isValidName:(Ljava/lang/String;)Z
      25: ireturn

  public org.apache.hadoop.fs.viewfs.ChRootedFs(org.apache.hadoop.fs.AbstractFileSystem, org.apache.hadoop.fs.Path) throws java.net.URISyntaxException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #18                 // Method org/apache/hadoop/fs/AbstractFileSystem.getUri:()Ljava/net/URI;
       5: aload_1
       6: invokevirtual #18                 // Method org/apache/hadoop/fs/AbstractFileSystem.getUri:()Ljava/net/URI;
       9: invokevirtual #19                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      12: iconst_0
      13: aload_1
      14: invokevirtual #20                 // Method org/apache/hadoop/fs/AbstractFileSystem.getUriDefaultPort:()I
      17: invokespecial #21                 // Method org/apache/hadoop/fs/AbstractFileSystem."<init>":(Ljava/net/URI;Ljava/lang/String;ZI)V
      20: aload_0
      21: aload_1
      22: putfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
      25: aload_0
      26: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
      29: aload_2
      30: invokevirtual #2                  // Method org/apache/hadoop/fs/AbstractFileSystem.checkPath:(Lorg/apache/hadoop/fs/Path;)V
      33: aload_0
      34: new           #3                  // class org/apache/hadoop/fs/Path
      37: dup
      38: aload_0
      39: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
      42: aload_2
      43: invokevirtual #22                 // Method org/apache/hadoop/fs/AbstractFileSystem.getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
      46: invokespecial #14                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      49: putfield      #6                  // Field chRootPathPart:Lorg/apache/hadoop/fs/Path;
      52: aload_0
      53: aload_0
      54: getfield      #6                  // Field chRootPathPart:Lorg/apache/hadoop/fs/Path;
      57: invokevirtual #11                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
      60: invokevirtual #12                 // Method java/net/URI.getPath:()Ljava/lang/String;
      63: putfield      #9                  // Field chRootPathPartString:Ljava/lang/String;
      66: aload_0
      67: new           #23                 // class java/net/URI
      70: dup
      71: new           #4                  // class java/lang/StringBuilder
      74: dup
      75: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      78: aload_0
      79: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
      82: invokevirtual #18                 // Method org/apache/hadoop/fs/AbstractFileSystem.getUri:()Ljava/net/URI;
      85: invokevirtual #16                 // Method java/net/URI.toString:()Ljava/lang/String;
      88: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: aload_0
      92: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
      95: invokevirtual #18                 // Method org/apache/hadoop/fs/AbstractFileSystem.getUri:()Ljava/net/URI;
      98: invokevirtual #24                 // Method java/net/URI.getAuthority:()Ljava/lang/String;
     101: ifnonnull     109
     104: ldc           #8                  // String
     106: goto          111
     109: ldc           #25                 // String /
     111: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: aload_0
     115: getfield      #6                  // Field chRootPathPart:Lorg/apache/hadoop/fs/Path;
     118: invokevirtual #11                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
     121: invokevirtual #12                 // Method java/net/URI.getPath:()Ljava/lang/String;
     124: iconst_1
     125: invokevirtual #26                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     128: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     134: invokespecial #27                 // Method java/net/URI."<init>":(Ljava/lang/String;)V
     137: putfield      #28                 // Field myUri:Ljava/net/URI;
     140: aload_0
     141: aload_2
     142: invokespecial #2                  // Method org/apache/hadoop/fs/AbstractFileSystem.checkPath:(Lorg/apache/hadoop/fs/Path;)V
     145: return

  public java.net.URI getUri();
    Code:
       0: aload_0
       1: getfield      #28                 // Field myUri:Ljava/net/URI;
       4: areturn

  public java.lang.String stripOutRoot(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #29                 // Method checkPath:(Lorg/apache/hadoop/fs/Path;)V
       5: goto          48
       8: astore_2
       9: new           #31                 // class java/lang/RuntimeException
      12: dup
      13: new           #4                  // class java/lang/StringBuilder
      16: dup
      17: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #32                 // String Internal Error - path
      22: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_1
      26: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      29: ldc           #34                 // String  should have been with URI
      31: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_0
      35: getfield      #28                 // Field myUri:Ljava/net/URI;
      38: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      41: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokespecial #35                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: aload_1
      49: invokevirtual #11                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
      52: invokevirtual #12                 // Method java/net/URI.getPath:()Ljava/lang/String;
      55: astore_2
      56: aload_2
      57: invokevirtual #36                 // Method java/lang/String.length:()I
      60: aload_0
      61: getfield      #9                  // Field chRootPathPartString:Ljava/lang/String;
      64: invokevirtual #36                 // Method java/lang/String.length:()I
      67: if_icmpne     75
      70: ldc           #8                  // String
      72: goto          102
      75: aload_2
      76: aload_0
      77: getfield      #9                  // Field chRootPathPartString:Ljava/lang/String;
      80: invokevirtual #36                 // Method java/lang/String.length:()I
      83: aload_0
      84: getfield      #6                  // Field chRootPathPart:Lorg/apache/hadoop/fs/Path;
      87: invokevirtual #7                  // Method org/apache/hadoop/fs/Path.isRoot:()Z
      90: ifeq          97
      93: iconst_0
      94: goto          98
      97: iconst_1
      98: iadd
      99: invokevirtual #26                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     102: areturn
    Exception table:
       from    to  target type
           0     5     8   Class java/lang/IllegalArgumentException

  public org.apache.hadoop.fs.Path getHomeDirectory();
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: invokevirtual #37                 // Method org/apache/hadoop/fs/AbstractFileSystem.getHomeDirectory:()Lorg/apache/hadoop/fs/Path;
       7: areturn

  public org.apache.hadoop.fs.Path getInitialWorkingDirectory();
    Code:
       0: aconst_null
       1: areturn

  public org.apache.hadoop.fs.Path getResolvedQualifiedPath(org.apache.hadoop.fs.Path) throws java.io.FileNotFoundException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: new           #3                  // class org/apache/hadoop/fs/Path
       7: dup
       8: new           #4                  // class java/lang/StringBuilder
      11: dup
      12: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      15: aload_0
      16: getfield      #9                  // Field chRootPathPartString:Ljava/lang/String;
      19: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_1
      23: invokevirtual #11                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
      26: invokevirtual #16                 // Method java/net/URI.toString:()Ljava/lang/String;
      29: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokespecial #14                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      38: invokevirtual #38                 // Method org/apache/hadoop/fs/AbstractFileSystem.makeQualified:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      41: areturn

  public org.apache.hadoop.fs.FSDataOutputStream createInternal(org.apache.hadoop.fs.Path, java.util.EnumSet<org.apache.hadoop.fs.CreateFlag>, org.apache.hadoop.fs.permission.FsPermission, int, short, long, org.apache.hadoop.util.Progressable, org.apache.hadoop.fs.Options$ChecksumOpt, boolean) throws java.io.IOException, org.apache.hadoop.fs.UnresolvedLinkException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: aload_0
       5: aload_1
       6: invokevirtual #15                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       9: aload_2
      10: aload_3
      11: iload         4
      13: iload         5
      15: lload         6
      17: aload         8
      19: aload         9
      21: iload         10
      23: invokevirtual #39                 // Method org/apache/hadoop/fs/AbstractFileSystem.createInternal:(Lorg/apache/hadoop/fs/Path;Ljava/util/EnumSet;Lorg/apache/hadoop/fs/permission/FsPermission;ISJLorg/apache/hadoop/util/Progressable;Lorg/apache/hadoop/fs/Options$ChecksumOpt;Z)Lorg/apache/hadoop/fs/FSDataOutputStream;
      26: areturn

  public boolean delete(org.apache.hadoop.fs.Path, boolean) throws java.io.IOException, org.apache.hadoop.fs.UnresolvedLinkException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: aload_0
       5: aload_1
       6: invokevirtual #15                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       9: iload_2
      10: invokevirtual #40                 // Method org/apache/hadoop/fs/AbstractFileSystem.delete:(Lorg/apache/hadoop/fs/Path;Z)Z
      13: ireturn

  public org.apache.hadoop.fs.BlockLocation[] getFileBlockLocations(org.apache.hadoop.fs.Path, long, long) throws java.io.IOException, org.apache.hadoop.fs.UnresolvedLinkException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: aload_0
       5: aload_1
       6: invokevirtual #15                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       9: lload_2
      10: lload         4
      12: invokevirtual #41                 // Method org/apache/hadoop/fs/AbstractFileSystem.getFileBlockLocations:(Lorg/apache/hadoop/fs/Path;JJ)[Lorg/apache/hadoop/fs/BlockLocation;
      15: areturn

  public org.apache.hadoop.fs.FileChecksum getFileChecksum(org.apache.hadoop.fs.Path) throws java.io.IOException, org.apache.hadoop.fs.UnresolvedLinkException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: aload_0
       5: aload_1
       6: invokevirtual #15                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       9: invokevirtual #42                 // Method org/apache/hadoop/fs/AbstractFileSystem.getFileChecksum:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileChecksum;
      12: areturn

  public org.apache.hadoop.fs.FileStatus getFileStatus(org.apache.hadoop.fs.Path) throws java.io.IOException, org.apache.hadoop.fs.UnresolvedLinkException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: aload_0
       5: aload_1
       6: invokevirtual #15                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       9: invokevirtual #43                 // Method org/apache/hadoop/fs/AbstractFileSystem.getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      12: areturn

  public void access(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsAction) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnresolvedLinkException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: aload_0
       5: aload_1
       6: invokevirtual #15                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       9: aload_2
      10: invokevirtual #44                 // Method org/apache/hadoop/fs/AbstractFileSystem.access:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsAction;)V
      13: return

  public org.apache.hadoop.fs.FileStatus getFileLinkStatus(org.apache.hadoop.fs.Path) throws java.io.IOException, org.apache.hadoop.fs.UnresolvedLinkException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: aload_0
       5: aload_1
       6: invokevirtual #15                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       9: invokevirtual #45                 // Method org/apache/hadoop/fs/AbstractFileSystem.getFileLinkStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      12: areturn

  public org.apache.hadoop.fs.FsStatus getFsStatus() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: invokevirtual #46                 // Method org/apache/hadoop/fs/AbstractFileSystem.getFsStatus:()Lorg/apache/hadoop/fs/FsStatus;
       7: areturn

  public org.apache.hadoop.fs.FsServerDefaults getServerDefaults() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: invokevirtual #47                 // Method org/apache/hadoop/fs/AbstractFileSystem.getServerDefaults:()Lorg/apache/hadoop/fs/FsServerDefaults;
       7: areturn

  public org.apache.hadoop.fs.FsServerDefaults getServerDefaults(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: aload_0
       5: aload_1
       6: invokevirtual #15                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       9: invokevirtual #48                 // Method org/apache/hadoop/fs/AbstractFileSystem.getServerDefaults:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FsServerDefaults;
      12: areturn

  public int getUriDefaultPort();
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: invokevirtual #20                 // Method org/apache/hadoop/fs/AbstractFileSystem.getUriDefaultPort:()I
       7: ireturn

  public org.apache.hadoop.fs.FileStatus[] listStatus(org.apache.hadoop.fs.Path) throws java.io.IOException, org.apache.hadoop.fs.UnresolvedLinkException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: aload_0
       5: aload_1
       6: invokevirtual #15                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       9: invokevirtual #49                 // Method org/apache/hadoop/fs/AbstractFileSystem.listStatus:(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
      12: areturn

  public org.apache.hadoop.fs.RemoteIterator<org.apache.hadoop.fs.FileStatus> listStatusIterator(org.apache.hadoop.fs.Path) throws java.io.IOException, org.apache.hadoop.fs.UnresolvedLinkException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: aload_0
       5: aload_1
       6: invokevirtual #15                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       9: invokevirtual #50                 // Method org/apache/hadoop/fs/AbstractFileSystem.listStatusIterator:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/RemoteIterator;
      12: areturn

  public org.apache.hadoop.fs.RemoteIterator<org.apache.hadoop.fs.LocatedFileStatus> listLocatedStatus(org.apache.hadoop.fs.Path) throws java.io.IOException, org.apache.hadoop.fs.UnresolvedLinkException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: aload_0
       5: aload_1
       6: invokevirtual #15                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       9: invokevirtual #51                 // Method org/apache/hadoop/fs/AbstractFileSystem.listLocatedStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/RemoteIterator;
      12: areturn

  public void mkdir(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission, boolean) throws java.io.IOException, org.apache.hadoop.fs.UnresolvedLinkException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: aload_0
       5: aload_1
       6: invokevirtual #15                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       9: aload_2
      10: iload_3
      11: invokevirtual #52                 // Method org/apache/hadoop/fs/AbstractFileSystem.mkdir:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;Z)V
      14: return

  public org.apache.hadoop.fs.FSDataInputStream open(org.apache.hadoop.fs.Path, int) throws java.io.IOException, org.apache.hadoop.fs.UnresolvedLinkException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: aload_0
       5: aload_1
       6: invokevirtual #15                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       9: iload_2
      10: invokevirtual #53                 // Method org/apache/hadoop/fs/AbstractFileSystem.open:(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;
      13: areturn

  public boolean truncate(org.apache.hadoop.fs.Path, long) throws java.io.IOException, org.apache.hadoop.fs.UnresolvedLinkException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: aload_0
       5: aload_1
       6: invokevirtual #15                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       9: lload_2
      10: invokevirtual #54                 // Method org/apache/hadoop/fs/AbstractFileSystem.truncate:(Lorg/apache/hadoop/fs/Path;J)Z
      13: ireturn

  public void renameInternal(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path) throws java.io.IOException, org.apache.hadoop.fs.UnresolvedLinkException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: aload_0
       5: aload_1
       6: invokevirtual #15                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       9: aload_0
      10: aload_2
      11: invokevirtual #15                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      14: invokevirtual #55                 // Method org/apache/hadoop/fs/AbstractFileSystem.renameInternal:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
      17: return

  public void renameInternal(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path, boolean) throws java.io.IOException, org.apache.hadoop.fs.UnresolvedLinkException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: aload_0
       5: aload_1
       6: invokevirtual #15                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       9: aload_0
      10: aload_2
      11: invokevirtual #15                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      14: iload_3
      15: invokevirtual #56                 // Method org/apache/hadoop/fs/AbstractFileSystem.renameInternal:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Z)V
      18: return

  public void setOwner(org.apache.hadoop.fs.Path, java.lang.String, java.lang.String) throws java.io.IOException, org.apache.hadoop.fs.UnresolvedLinkException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: aload_0
       5: aload_1
       6: invokevirtual #15                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       9: aload_2
      10: aload_3
      11: invokevirtual #57                 // Method org/apache/hadoop/fs/AbstractFileSystem.setOwner:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;)V
      14: return

  public void setPermission(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission) throws java.io.IOException, org.apache.hadoop.fs.UnresolvedLinkException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: aload_0
       5: aload_1
       6: invokevirtual #15                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       9: aload_2
      10: invokevirtual #58                 // Method org/apache/hadoop/fs/AbstractFileSystem.setPermission:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)V
      13: return

  public boolean setReplication(org.apache.hadoop.fs.Path, short) throws java.io.IOException, org.apache.hadoop.fs.UnresolvedLinkException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: aload_0
       5: aload_1
       6: invokevirtual #15                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       9: iload_2
      10: invokevirtual #59                 // Method org/apache/hadoop/fs/AbstractFileSystem.setReplication:(Lorg/apache/hadoop/fs/Path;S)Z
      13: ireturn

  public void setTimes(org.apache.hadoop.fs.Path, long, long) throws java.io.IOException, org.apache.hadoop.fs.UnresolvedLinkException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: aload_0
       5: aload_1
       6: invokevirtual #15                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       9: lload_2
      10: lload         4
      12: invokevirtual #60                 // Method org/apache/hadoop/fs/AbstractFileSystem.setTimes:(Lorg/apache/hadoop/fs/Path;JJ)V
      15: return

  public void modifyAclEntries(org.apache.hadoop.fs.Path, java.util.List<org.apache.hadoop.fs.permission.AclEntry>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: aload_0
       5: aload_1
       6: invokevirtual #15                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       9: aload_2
      10: invokevirtual #61                 // Method org/apache/hadoop/fs/AbstractFileSystem.modifyAclEntries:(Lorg/apache/hadoop/fs/Path;Ljava/util/List;)V
      13: return

  public void removeAclEntries(org.apache.hadoop.fs.Path, java.util.List<org.apache.hadoop.fs.permission.AclEntry>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: aload_0
       5: aload_1
       6: invokevirtual #15                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       9: aload_2
      10: invokevirtual #62                 // Method org/apache/hadoop/fs/AbstractFileSystem.removeAclEntries:(Lorg/apache/hadoop/fs/Path;Ljava/util/List;)V
      13: return

  public void removeDefaultAcl(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: aload_0
       5: aload_1
       6: invokevirtual #15                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       9: invokevirtual #63                 // Method org/apache/hadoop/fs/AbstractFileSystem.removeDefaultAcl:(Lorg/apache/hadoop/fs/Path;)V
      12: return

  public void removeAcl(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: aload_0
       5: aload_1
       6: invokevirtual #15                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       9: invokevirtual #64                 // Method org/apache/hadoop/fs/AbstractFileSystem.removeAcl:(Lorg/apache/hadoop/fs/Path;)V
      12: return

  public void setAcl(org.apache.hadoop.fs.Path, java.util.List<org.apache.hadoop.fs.permission.AclEntry>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: aload_0
       5: aload_1
       6: invokevirtual #15                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       9: aload_2
      10: invokevirtual #65                 // Method org/apache/hadoop/fs/AbstractFileSystem.setAcl:(Lorg/apache/hadoop/fs/Path;Ljava/util/List;)V
      13: return

  public org.apache.hadoop.fs.permission.AclStatus getAclStatus(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: aload_0
       5: aload_1
       6: invokevirtual #15                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       9: invokevirtual #66                 // Method org/apache/hadoop/fs/AbstractFileSystem.getAclStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/permission/AclStatus;
      12: areturn

  public void setXAttr(org.apache.hadoop.fs.Path, java.lang.String, byte[], java.util.EnumSet<org.apache.hadoop.fs.XAttrSetFlag>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: aload_0
       5: aload_1
       6: invokevirtual #15                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       9: aload_2
      10: aload_3
      11: aload         4
      13: invokevirtual #67                 // Method org/apache/hadoop/fs/AbstractFileSystem.setXAttr:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;[BLjava/util/EnumSet;)V
      16: return

  public byte[] getXAttr(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: aload_0
       5: aload_1
       6: invokevirtual #15                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       9: aload_2
      10: invokevirtual #68                 // Method org/apache/hadoop/fs/AbstractFileSystem.getXAttr:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)[B
      13: areturn

  public java.util.Map<java.lang.String, byte[]> getXAttrs(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: aload_0
       5: aload_1
       6: invokevirtual #15                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       9: invokevirtual #69                 // Method org/apache/hadoop/fs/AbstractFileSystem.getXAttrs:(Lorg/apache/hadoop/fs/Path;)Ljava/util/Map;
      12: areturn

  public java.util.Map<java.lang.String, byte[]> getXAttrs(org.apache.hadoop.fs.Path, java.util.List<java.lang.String>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: aload_0
       5: aload_1
       6: invokevirtual #15                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       9: aload_2
      10: invokevirtual #70                 // Method org/apache/hadoop/fs/AbstractFileSystem.getXAttrs:(Lorg/apache/hadoop/fs/Path;Ljava/util/List;)Ljava/util/Map;
      13: areturn

  public java.util.List<java.lang.String> listXAttrs(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: aload_0
       5: aload_1
       6: invokevirtual #15                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       9: invokevirtual #71                 // Method org/apache/hadoop/fs/AbstractFileSystem.listXAttrs:(Lorg/apache/hadoop/fs/Path;)Ljava/util/List;
      12: areturn

  public void removeXAttr(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: aload_0
       5: aload_1
       6: invokevirtual #15                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       9: aload_2
      10: invokevirtual #72                 // Method org/apache/hadoop/fs/AbstractFileSystem.removeXAttr:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      13: return

  public org.apache.hadoop.fs.Path createSnapshot(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: aload_0
       5: aload_1
       6: invokevirtual #15                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       9: aload_2
      10: invokevirtual #73                 // Method org/apache/hadoop/fs/AbstractFileSystem.createSnapshot:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
      13: areturn

  public void renameSnapshot(org.apache.hadoop.fs.Path, java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: aload_0
       5: aload_1
       6: invokevirtual #15                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       9: aload_2
      10: aload_3
      11: invokevirtual #74                 // Method org/apache/hadoop/fs/AbstractFileSystem.renameSnapshot:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;)V
      14: return

  public void deleteSnapshot(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: aload_0
       5: aload_1
       6: invokevirtual #15                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       9: aload_2
      10: invokevirtual #75                 // Method org/apache/hadoop/fs/AbstractFileSystem.deleteSnapshot:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      13: return

  public void satisfyStoragePolicy(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: aload_1
       5: invokevirtual #76                 // Method org/apache/hadoop/fs/AbstractFileSystem.satisfyStoragePolicy:(Lorg/apache/hadoop/fs/Path;)V
       8: return

  public void setStoragePolicy(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: aload_0
       5: aload_1
       6: invokevirtual #15                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       9: aload_2
      10: invokevirtual #77                 // Method org/apache/hadoop/fs/AbstractFileSystem.setStoragePolicy:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      13: return

  public void unsetStoragePolicy(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: aload_0
       5: aload_1
       6: invokevirtual #15                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       9: invokevirtual #78                 // Method org/apache/hadoop/fs/AbstractFileSystem.unsetStoragePolicy:(Lorg/apache/hadoop/fs/Path;)V
      12: return

  public org.apache.hadoop.fs.BlockStoragePolicySpi getStoragePolicy(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: aload_1
       5: invokevirtual #79                 // Method org/apache/hadoop/fs/AbstractFileSystem.getStoragePolicy:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/BlockStoragePolicySpi;
       8: areturn

  public java.util.Collection<? extends org.apache.hadoop.fs.BlockStoragePolicySpi> getAllStoragePolicies() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: invokevirtual #80                 // Method org/apache/hadoop/fs/AbstractFileSystem.getAllStoragePolicies:()Ljava/util/Collection;
       7: areturn

  public void setVerifyChecksum(boolean) throws java.io.IOException, org.apache.hadoop.fs.UnresolvedLinkException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: iload_1
       5: invokevirtual #81                 // Method org/apache/hadoop/fs/AbstractFileSystem.setVerifyChecksum:(Z)V
       8: return

  public boolean supportsSymlinks();
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: invokevirtual #82                 // Method org/apache/hadoop/fs/AbstractFileSystem.supportsSymlinks:()Z
       7: ireturn

  public void createSymlink(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path, boolean) throws java.io.IOException, org.apache.hadoop.fs.UnresolvedLinkException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: aload_0
       5: aload_1
       6: invokevirtual #15                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       9: aload_2
      10: iload_3
      11: invokevirtual #83                 // Method org/apache/hadoop/fs/AbstractFileSystem.createSymlink:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Z)V
      14: return

  public org.apache.hadoop.fs.Path getLinkTarget(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: aload_0
       5: aload_1
       6: invokevirtual #15                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       9: invokevirtual #84                 // Method org/apache/hadoop/fs/AbstractFileSystem.getLinkTarget:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      12: areturn

  public java.util.List<org.apache.hadoop.security.token.Token<?>> getDelegationTokens(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field myFs:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: aload_1
       5: invokevirtual #85                 // Method org/apache/hadoop/fs/AbstractFileSystem.getDelegationTokens:(Ljava/lang/String;)Ljava/util/List;
       8: areturn
}
