Compiled from "WritableComparator.java"
public class org.apache.hadoop.io.WritableComparator implements org.apache.hadoop.io.RawComparator,org.apache.hadoop.conf.Configurable {
  private static final java.util.concurrent.ConcurrentHashMap<java.lang.Class, org.apache.hadoop.io.WritableComparator> comparators;

  private org.apache.hadoop.conf.Configuration conf;

  private final java.lang.Class<? extends org.apache.hadoop.io.WritableComparable> keyClass;

  private final org.apache.hadoop.io.WritableComparable key1;

  private final org.apache.hadoop.io.WritableComparable key2;

  private final org.apache.hadoop.io.DataInputBuffer buffer;

  public static org.apache.hadoop.io.WritableComparator get(java.lang.Class<? extends org.apache.hadoop.io.WritableComparable>);
    Code:
       0: aload_0
       1: aconst_null
       2: invokestatic  #1                  // Method get:(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/io/WritableComparator;
       5: areturn

  public static org.apache.hadoop.io.WritableComparator get(java.lang.Class<? extends org.apache.hadoop.io.WritableComparable>, org.apache.hadoop.conf.Configuration);
    Code:
       0: getstatic     #2                  // Field comparators:Ljava/util/concurrent/ConcurrentHashMap;
       3: aload_0
       4: invokevirtual #3                  // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #4                  // class org/apache/hadoop/io/WritableComparator
      10: astore_2
      11: aload_2
      12: ifnonnull     45
      15: aload_0
      16: invokestatic  #5                  // Method forceInit:(Ljava/lang/Class;)V
      19: getstatic     #2                  // Field comparators:Ljava/util/concurrent/ConcurrentHashMap;
      22: aload_0
      23: invokevirtual #3                  // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #4                  // class org/apache/hadoop/io/WritableComparator
      29: astore_2
      30: aload_2
      31: ifnonnull     45
      34: new           #4                  // class org/apache/hadoop/io/WritableComparator
      37: dup
      38: aload_0
      39: aload_1
      40: iconst_1
      41: invokespecial #6                  // Method "<init>":(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;Z)V
      44: astore_2
      45: aload_2
      46: aload_1
      47: invokestatic  #7                  // Method org/apache/hadoop/util/ReflectionUtils.setConf:(Ljava/lang/Object;Lorg/apache/hadoop/conf/Configuration;)V
      50: aload_2
      51: areturn

  public void setConf(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       5: return

  public org.apache.hadoop.conf.Configuration getConf();
    Code:
       0: aload_0
       1: getfield      #8                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       4: areturn

  private static void forceInit(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method java/lang/Class.getName:()Ljava/lang/String;
       4: iconst_1
       5: aload_0
       6: invokevirtual #10                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
       9: invokestatic  #11                 // Method java/lang/Class.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;
      12: pop
      13: goto          45
      16: astore_1
      17: new           #13                 // class java/lang/IllegalArgumentException
      20: dup
      21: new           #14                 // class java/lang/StringBuilder
      24: dup
      25: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      28: ldc           #16                 // String Can\'t initialize class
      30: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_0
      34: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      37: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: aload_1
      41: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      44: athrow
      45: return
    Exception table:
       from    to  target type
           0    13    16   Class java/lang/ClassNotFoundException

  public static void define(java.lang.Class, org.apache.hadoop.io.WritableComparator);
    Code:
       0: getstatic     #2                  // Field comparators:Ljava/util/concurrent/ConcurrentHashMap;
       3: aload_0
       4: aload_1
       5: invokevirtual #21                 // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       8: pop
       9: return

  protected org.apache.hadoop.io.WritableComparator();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #22                 // Method "<init>":(Ljava/lang/Class;)V
       5: return

  protected org.apache.hadoop.io.WritableComparator(java.lang.Class<? extends org.apache.hadoop.io.WritableComparable>);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: iconst_0
       4: invokespecial #6                  // Method "<init>":(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;Z)V
       7: return

  protected org.apache.hadoop.io.WritableComparator(java.lang.Class<? extends org.apache.hadoop.io.WritableComparable>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: iload_2
       4: invokespecial #6                  // Method "<init>":(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;Z)V
       7: return

  protected org.apache.hadoop.io.WritableComparator(java.lang.Class<? extends org.apache.hadoop.io.WritableComparable>, org.apache.hadoop.conf.Configuration, boolean);
    Code:
       0: aload_0
       1: invokespecial #23                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #24                 // Field keyClass:Ljava/lang/Class;
       9: aload_0
      10: aload_2
      11: ifnull        18
      14: aload_2
      15: goto          25
      18: new           #25                 // class org/apache/hadoop/conf/Configuration
      21: dup
      22: invokespecial #26                 // Method org/apache/hadoop/conf/Configuration."<init>":()V
      25: putfield      #8                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      28: iload_3
      29: ifeq          62
      32: aload_0
      33: aload_0
      34: invokevirtual #27                 // Method newKey:()Lorg/apache/hadoop/io/WritableComparable;
      37: putfield      #28                 // Field key1:Lorg/apache/hadoop/io/WritableComparable;
      40: aload_0
      41: aload_0
      42: invokevirtual #27                 // Method newKey:()Lorg/apache/hadoop/io/WritableComparable;
      45: putfield      #29                 // Field key2:Lorg/apache/hadoop/io/WritableComparable;
      48: aload_0
      49: new           #30                 // class org/apache/hadoop/io/DataInputBuffer
      52: dup
      53: invokespecial #31                 // Method org/apache/hadoop/io/DataInputBuffer."<init>":()V
      56: putfield      #32                 // Field buffer:Lorg/apache/hadoop/io/DataInputBuffer;
      59: goto          77
      62: aload_0
      63: aload_0
      64: aconst_null
      65: dup_x1
      66: putfield      #29                 // Field key2:Lorg/apache/hadoop/io/WritableComparable;
      69: putfield      #28                 // Field key1:Lorg/apache/hadoop/io/WritableComparable;
      72: aload_0
      73: aconst_null
      74: putfield      #32                 // Field buffer:Lorg/apache/hadoop/io/DataInputBuffer;
      77: return

  public java.lang.Class<? extends org.apache.hadoop.io.WritableComparable> getKeyClass();
    Code:
       0: aload_0
       1: getfield      #24                 // Field keyClass:Ljava/lang/Class;
       4: areturn

  public org.apache.hadoop.io.WritableComparable newKey();
    Code:
       0: aload_0
       1: getfield      #24                 // Field keyClass:Ljava/lang/Class;
       4: aload_0
       5: getfield      #8                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       8: invokestatic  #33                 // Method org/apache/hadoop/util/ReflectionUtils.newInstance:(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;
      11: checkcast     #34                 // class org/apache/hadoop/io/WritableComparable
      14: areturn

  public int compare(byte[], int, int, byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #32                 // Field buffer:Lorg/apache/hadoop/io/DataInputBuffer;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #35                 // Method org/apache/hadoop/io/DataInputBuffer.reset:([BII)V
      10: aload_0
      11: getfield      #28                 // Field key1:Lorg/apache/hadoop/io/WritableComparable;
      14: aload_0
      15: getfield      #32                 // Field buffer:Lorg/apache/hadoop/io/DataInputBuffer;
      18: invokeinterface #36,  2           // InterfaceMethod org/apache/hadoop/io/WritableComparable.readFields:(Ljava/io/DataInput;)V
      23: aload_0
      24: getfield      #32                 // Field buffer:Lorg/apache/hadoop/io/DataInputBuffer;
      27: aload         4
      29: iload         5
      31: iload         6
      33: invokevirtual #35                 // Method org/apache/hadoop/io/DataInputBuffer.reset:([BII)V
      36: aload_0
      37: getfield      #29                 // Field key2:Lorg/apache/hadoop/io/WritableComparable;
      40: aload_0
      41: getfield      #32                 // Field buffer:Lorg/apache/hadoop/io/DataInputBuffer;
      44: invokeinterface #36,  2           // InterfaceMethod org/apache/hadoop/io/WritableComparable.readFields:(Ljava/io/DataInput;)V
      49: aload_0
      50: getfield      #32                 // Field buffer:Lorg/apache/hadoop/io/DataInputBuffer;
      53: aconst_null
      54: iconst_0
      55: iconst_0
      56: invokevirtual #35                 // Method org/apache/hadoop/io/DataInputBuffer.reset:([BII)V
      59: goto          74
      62: astore        7
      64: new           #38                 // class java/lang/RuntimeException
      67: dup
      68: aload         7
      70: invokespecial #39                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      73: athrow
      74: aload_0
      75: aload_0
      76: getfield      #28                 // Field key1:Lorg/apache/hadoop/io/WritableComparable;
      79: aload_0
      80: getfield      #29                 // Field key2:Lorg/apache/hadoop/io/WritableComparable;
      83: invokevirtual #40                 // Method compare:(Lorg/apache/hadoop/io/WritableComparable;Lorg/apache/hadoop/io/WritableComparable;)I
      86: ireturn
    Exception table:
       from    to  target type
           0    59    62   Class java/io/IOException

  public int compare(org.apache.hadoop.io.WritableComparable, org.apache.hadoop.io.WritableComparable);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #41,  2           // InterfaceMethod org/apache/hadoop/io/WritableComparable.compareTo:(Ljava/lang/Object;)I
       7: ireturn

  public int compare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #34                 // class org/apache/hadoop/io/WritableComparable
       5: aload_2
       6: checkcast     #34                 // class org/apache/hadoop/io/WritableComparable
       9: invokevirtual #40                 // Method compare:(Lorg/apache/hadoop/io/WritableComparable;Lorg/apache/hadoop/io/WritableComparable;)I
      12: ireturn

  public static int compareBytes(byte[], int, int, byte[], int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: aload_3
       4: iload         4
       6: iload         5
       8: invokestatic  #42                 // Method org/apache/hadoop/io/FastByteComparisons.compareTo:([BII[BII)I
      11: ireturn

  public static int hashBytes(byte[], int, int);
    Code:
       0: iconst_1
       1: istore_3
       2: iload_1
       3: istore        4
       5: iload         4
       7: iload_1
       8: iload_2
       9: iadd
      10: if_icmpge     29
      13: bipush        31
      15: iload_3
      16: imul
      17: aload_0
      18: iload         4
      20: baload
      21: iadd
      22: istore_3
      23: iinc          4, 1
      26: goto          5
      29: iload_3
      30: ireturn

  public static int hashBytes(byte[], int);
    Code:
       0: aload_0
       1: iconst_0
       2: iload_1
       3: invokestatic  #43                 // Method hashBytes:([BII)I
       6: ireturn

  public static int readUnsignedShort(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: baload
       3: sipush        255
       6: iand
       7: bipush        8
       9: ishl
      10: aload_0
      11: iload_1
      12: iconst_1
      13: iadd
      14: baload
      15: sipush        255
      18: iand
      19: iadd
      20: ireturn

  public static int readInt(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: baload
       3: sipush        255
       6: iand
       7: bipush        24
       9: ishl
      10: aload_0
      11: iload_1
      12: iconst_1
      13: iadd
      14: baload
      15: sipush        255
      18: iand
      19: bipush        16
      21: ishl
      22: iadd
      23: aload_0
      24: iload_1
      25: iconst_2
      26: iadd
      27: baload
      28: sipush        255
      31: iand
      32: bipush        8
      34: ishl
      35: iadd
      36: aload_0
      37: iload_1
      38: iconst_3
      39: iadd
      40: baload
      41: sipush        255
      44: iand
      45: iadd
      46: ireturn

  public static float readFloat(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #44                 // Method readInt:([BI)I
       5: invokestatic  #45                 // Method java/lang/Float.intBitsToFloat:(I)F
       8: freturn

  public static long readLong(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #44                 // Method readInt:([BI)I
       5: i2l
       6: bipush        32
       8: lshl
       9: aload_0
      10: iload_1
      11: iconst_4
      12: iadd
      13: invokestatic  #44                 // Method readInt:([BI)I
      16: i2l
      17: ldc2_w        #46                 // long 4294967295l
      20: land
      21: ladd
      22: lreturn

  public static double readDouble(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #48                 // Method readLong:([BI)J
       5: invokestatic  #49                 // Method java/lang/Double.longBitsToDouble:(J)D
       8: dreturn

  public static long readVLong(byte[], int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: baload
       3: istore_2
       4: iload_2
       5: bipush        -112
       7: if_icmplt     13
      10: iload_2
      11: i2l
      12: lreturn
      13: iload_2
      14: bipush        -120
      16: if_icmpge     23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: istore_3
      25: iload_3
      26: ifeq          37
      29: iload_2
      30: bipush        120
      32: iadd
      33: ineg
      34: goto          42
      37: iload_2
      38: bipush        112
      40: iadd
      41: ineg
      42: istore_2
      43: iload_1
      44: iconst_1
      45: iadd
      46: iload_2
      47: iadd
      48: aload_0
      49: arraylength
      50: if_icmple     63
      53: new           #37                 // class java/io/IOException
      56: dup
      57: ldc           #50                 // String Not enough number of bytes for a zero-compressed integer
      59: invokespecial #51                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      62: athrow
      63: lconst_0
      64: lstore        4
      66: iconst_0
      67: istore        6
      69: iload         6
      71: iload_2
      72: if_icmpge     106
      75: lload         4
      77: bipush        8
      79: lshl
      80: lstore        4
      82: lload         4
      84: aload_0
      85: iload_1
      86: iconst_1
      87: iadd
      88: iload         6
      90: iadd
      91: baload
      92: sipush        255
      95: iand
      96: i2l
      97: lor
      98: lstore        4
     100: iinc          6, 1
     103: goto          69
     106: iload_3
     107: ifeq          119
     110: lload         4
     112: ldc2_w        #52                 // long -1l
     115: lxor
     116: goto          121
     119: lload         4
     121: lreturn

  public static int readVInt(byte[], int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #54                 // Method readVLong:([BI)J
       5: l2i
       6: ireturn

  static {};
    Code:
       0: new           #55                 // class java/util/concurrent/ConcurrentHashMap
       3: dup
       4: invokespecial #56                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
       7: putstatic     #2                  // Field comparators:Ljava/util/concurrent/ConcurrentHashMap;
      10: return
}
