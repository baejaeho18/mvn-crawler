Compiled from "CallQueueManager.java"
public class org.apache.hadoop.ipc.CallQueueManager<E extends org.apache.hadoop.ipc.Schedulable> extends java.util.AbstractQueue<E> implements java.util.concurrent.BlockingQueue<E> {
  public static final org.slf4j.Logger LOG;

  private static final int CHECKPOINT_NUM;

  private static final long CHECKPOINT_INTERVAL_MS;

  private volatile boolean clientBackOffEnabled;

  private final java.util.concurrent.atomic.AtomicReference<java.util.concurrent.BlockingQueue<E>> putRef;

  private final java.util.concurrent.atomic.AtomicReference<java.util.concurrent.BlockingQueue<E>> takeRef;

  private org.apache.hadoop.ipc.RpcScheduler scheduler;

  static <E> java.lang.Class<? extends java.util.concurrent.BlockingQueue<E>> convertQueueClass(java.lang.Class<?>, java.lang.Class<E>);
    Code:
       0: aload_0
       1: areturn

  static java.lang.Class<? extends org.apache.hadoop.ipc.RpcScheduler> convertSchedulerClass(java.lang.Class<?>);
    Code:
       0: aload_0
       1: areturn

  public org.apache.hadoop.ipc.CallQueueManager(java.lang.Class<? extends java.util.concurrent.BlockingQueue<E>>, java.lang.Class<? extends org.apache.hadoop.ipc.RpcScheduler>, boolean, int, java.lang.String, org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/AbstractQueue."<init>":()V
       4: aload         5
       6: aload         6
       8: invokestatic  #2                  // Method parseNumLevels:(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)I
      11: istore        7
      13: aload_0
      14: aload_2
      15: iload         7
      17: aload         5
      19: aload         6
      21: invokestatic  #3                  // Method createScheduler:(Ljava/lang/Class;ILjava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/ipc/RpcScheduler;
      24: putfield      #4                  // Field scheduler:Lorg/apache/hadoop/ipc/RpcScheduler;
      27: aload_0
      28: aload_1
      29: iload         7
      31: iload         4
      33: aload         5
      35: aload         6
      37: invokespecial #5                  // Method createCallQueueInstance:(Ljava/lang/Class;IILjava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Ljava/util/concurrent/BlockingQueue;
      40: astore        8
      42: aload_0
      43: iload_3
      44: putfield      #6                  // Field clientBackOffEnabled:Z
      47: aload_0
      48: new           #7                  // class java/util/concurrent/atomic/AtomicReference
      51: dup
      52: aload         8
      54: invokespecial #8                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      57: putfield      #9                  // Field putRef:Ljava/util/concurrent/atomic/AtomicReference;
      60: aload_0
      61: new           #7                  // class java/util/concurrent/atomic/AtomicReference
      64: dup
      65: aload         8
      67: invokespecial #8                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      70: putfield      #10                 // Field takeRef:Ljava/util/concurrent/atomic/AtomicReference;
      73: getstatic     #11                 // Field LOG:Lorg/slf4j/Logger;
      76: ldc           #12                 // String Using callQueue: {}, queueCapacity: {}, scheduler: {}, ipcBackoff: {}.
      78: iconst_4
      79: anewarray     #13                 // class java/lang/Object
      82: dup
      83: iconst_0
      84: aload_1
      85: aastore
      86: dup
      87: iconst_1
      88: iload         4
      90: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      93: aastore
      94: dup
      95: iconst_2
      96: aload_2
      97: aastore
      98: dup
      99: iconst_3
     100: iload_3
     101: invokestatic  #15                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     104: aastore
     105: invokeinterface #16,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;[Ljava/lang/Object;)V
     110: return

  org.apache.hadoop.ipc.CallQueueManager(java.util.concurrent.BlockingQueue<E>, org.apache.hadoop.ipc.RpcScheduler, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/AbstractQueue."<init>":()V
       4: aload_0
       5: new           #7                  // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: aload_1
      10: invokespecial #8                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      13: putfield      #9                  // Field putRef:Ljava/util/concurrent/atomic/AtomicReference;
      16: aload_0
      17: new           #7                  // class java/util/concurrent/atomic/AtomicReference
      20: dup
      21: aload_1
      22: invokespecial #8                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      25: putfield      #10                 // Field takeRef:Ljava/util/concurrent/atomic/AtomicReference;
      28: aload_0
      29: aload_2
      30: putfield      #4                  // Field scheduler:Lorg/apache/hadoop/ipc/RpcScheduler;
      33: aload_0
      34: iload_3
      35: putfield      #6                  // Field clientBackOffEnabled:Z
      38: return

  private static <T extends org.apache.hadoop.ipc.RpcScheduler> T createScheduler(java.lang.Class<T>, int, java.lang.String, org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: iconst_3
       2: anewarray     #17                 // class java/lang/Class
       5: dup
       6: iconst_0
       7: getstatic     #18                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      10: aastore
      11: dup
      12: iconst_1
      13: ldc           #19                 // class java/lang/String
      15: aastore
      16: dup
      17: iconst_2
      18: ldc           #20                 // class org/apache/hadoop/conf/Configuration
      20: aastore
      21: invokevirtual #21                 // Method java/lang/Class.getDeclaredConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
      24: astore        4
      26: aload         4
      28: iconst_3
      29: anewarray     #13                 // class java/lang/Object
      32: dup
      33: iconst_0
      34: iload_1
      35: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      38: aastore
      39: dup
      40: iconst_1
      41: aload_2
      42: aastore
      43: dup
      44: iconst_2
      45: aload_3
      46: aastore
      47: invokevirtual #22                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
      50: checkcast     #23                 // class org/apache/hadoop/ipc/RpcScheduler
      53: areturn
      54: astore        4
      56: aload         4
      58: athrow
      59: astore        4
      61: new           #24                 // class java/lang/RuntimeException
      64: dup
      65: new           #26                 // class java/lang/StringBuilder
      68: dup
      69: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      72: aload_0
      73: invokevirtual #28                 // Method java/lang/Class.getName:()Ljava/lang/String;
      76: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: ldc           #30                 // String  could not be constructed.
      81: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      87: aload         4
      89: invokevirtual #32                 // Method java/lang/reflect/InvocationTargetException.getCause:()Ljava/lang/Throwable;
      92: invokespecial #33                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      95: athrow
      96: astore        4
      98: aload_0
      99: iconst_1
     100: anewarray     #17                 // class java/lang/Class
     103: dup
     104: iconst_0
     105: getstatic     #18                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
     108: aastore
     109: invokevirtual #21                 // Method java/lang/Class.getDeclaredConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
     112: astore        4
     114: aload         4
     116: iconst_1
     117: anewarray     #13                 // class java/lang/Object
     120: dup
     121: iconst_0
     122: iload_1
     123: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     126: aastore
     127: invokevirtual #22                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
     130: checkcast     #23                 // class org/apache/hadoop/ipc/RpcScheduler
     133: areturn
     134: astore        4
     136: aload         4
     138: athrow
     139: astore        4
     141: new           #24                 // class java/lang/RuntimeException
     144: dup
     145: new           #26                 // class java/lang/StringBuilder
     148: dup
     149: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     152: aload_0
     153: invokevirtual #28                 // Method java/lang/Class.getName:()Ljava/lang/String;
     156: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: ldc           #30                 // String  could not be constructed.
     161: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     167: aload         4
     169: invokevirtual #32                 // Method java/lang/reflect/InvocationTargetException.getCause:()Ljava/lang/Throwable;
     172: invokespecial #33                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     175: athrow
     176: astore        4
     178: aload_0
     179: iconst_0
     180: anewarray     #17                 // class java/lang/Class
     183: invokevirtual #21                 // Method java/lang/Class.getDeclaredConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
     186: astore        4
     188: aload         4
     190: iconst_0
     191: anewarray     #13                 // class java/lang/Object
     194: invokevirtual #22                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
     197: checkcast     #23                 // class org/apache/hadoop/ipc/RpcScheduler
     200: areturn
     201: astore        4
     203: aload         4
     205: athrow
     206: astore        4
     208: new           #24                 // class java/lang/RuntimeException
     211: dup
     212: new           #26                 // class java/lang/StringBuilder
     215: dup
     216: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     219: aload_0
     220: invokevirtual #28                 // Method java/lang/Class.getName:()Ljava/lang/String;
     223: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     226: ldc           #30                 // String  could not be constructed.
     228: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     231: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     234: aload         4
     236: invokevirtual #32                 // Method java/lang/reflect/InvocationTargetException.getCause:()Ljava/lang/Throwable;
     239: invokespecial #33                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     242: athrow
     243: astore        4
     245: new           #24                 // class java/lang/RuntimeException
     248: dup
     249: new           #26                 // class java/lang/StringBuilder
     252: dup
     253: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     256: aload_0
     257: invokevirtual #28                 // Method java/lang/Class.getName:()Ljava/lang/String;
     260: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     263: ldc           #30                 // String  could not be constructed.
     265: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     268: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     271: invokespecial #35                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     274: athrow
    Exception table:
       from    to  target type
           0    53    54   Class java/lang/RuntimeException
           0    53    59   Class java/lang/reflect/InvocationTargetException
           0    53    96   Class java/lang/Exception
          98   133   134   Class java/lang/RuntimeException
          98   133   139   Class java/lang/reflect/InvocationTargetException
          98   133   176   Class java/lang/Exception
         178   200   201   Class java/lang/RuntimeException
         178   200   206   Class java/lang/reflect/InvocationTargetException
         178   200   243   Class java/lang/Exception

  private <T extends java.util.concurrent.BlockingQueue<E>> T createCallQueueInstance(java.lang.Class<T>, int, int, java.lang.String, org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_1
       1: iconst_4
       2: anewarray     #17                 // class java/lang/Class
       5: dup
       6: iconst_0
       7: getstatic     #18                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      10: aastore
      11: dup
      12: iconst_1
      13: getstatic     #18                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      16: aastore
      17: dup
      18: iconst_2
      19: ldc           #19                 // class java/lang/String
      21: aastore
      22: dup
      23: iconst_3
      24: ldc           #20                 // class org/apache/hadoop/conf/Configuration
      26: aastore
      27: invokevirtual #21                 // Method java/lang/Class.getDeclaredConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
      30: astore        6
      32: aload         6
      34: iconst_4
      35: anewarray     #13                 // class java/lang/Object
      38: dup
      39: iconst_0
      40: iload_2
      41: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      44: aastore
      45: dup
      46: iconst_1
      47: iload_3
      48: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      51: aastore
      52: dup
      53: iconst_2
      54: aload         4
      56: aastore
      57: dup
      58: iconst_3
      59: aload         5
      61: aastore
      62: invokevirtual #22                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
      65: checkcast     #36                 // class java/util/concurrent/BlockingQueue
      68: areturn
      69: astore        6
      71: aload         6
      73: athrow
      74: astore        6
      76: new           #24                 // class java/lang/RuntimeException
      79: dup
      80: new           #26                 // class java/lang/StringBuilder
      83: dup
      84: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      87: aload_1
      88: invokevirtual #28                 // Method java/lang/Class.getName:()Ljava/lang/String;
      91: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: ldc           #30                 // String  could not be constructed.
      96: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     102: aload         6
     104: invokevirtual #32                 // Method java/lang/reflect/InvocationTargetException.getCause:()Ljava/lang/Throwable;
     107: invokespecial #33                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     110: athrow
     111: astore        6
     113: aload_1
     114: iconst_1
     115: anewarray     #17                 // class java/lang/Class
     118: dup
     119: iconst_0
     120: getstatic     #18                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
     123: aastore
     124: invokevirtual #21                 // Method java/lang/Class.getDeclaredConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
     127: astore        6
     129: aload         6
     131: iconst_1
     132: anewarray     #13                 // class java/lang/Object
     135: dup
     136: iconst_0
     137: iload_3
     138: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     141: aastore
     142: invokevirtual #22                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
     145: checkcast     #36                 // class java/util/concurrent/BlockingQueue
     148: areturn
     149: astore        6
     151: aload         6
     153: athrow
     154: astore        6
     156: new           #24                 // class java/lang/RuntimeException
     159: dup
     160: new           #26                 // class java/lang/StringBuilder
     163: dup
     164: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     167: aload_1
     168: invokevirtual #28                 // Method java/lang/Class.getName:()Ljava/lang/String;
     171: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     174: ldc           #30                 // String  could not be constructed.
     176: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     179: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     182: aload         6
     184: invokevirtual #32                 // Method java/lang/reflect/InvocationTargetException.getCause:()Ljava/lang/Throwable;
     187: invokespecial #33                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     190: athrow
     191: astore        6
     193: aload_1
     194: iconst_0
     195: anewarray     #17                 // class java/lang/Class
     198: invokevirtual #21                 // Method java/lang/Class.getDeclaredConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
     201: astore        6
     203: aload         6
     205: iconst_0
     206: anewarray     #13                 // class java/lang/Object
     209: invokevirtual #22                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
     212: checkcast     #36                 // class java/util/concurrent/BlockingQueue
     215: areturn
     216: astore        6
     218: aload         6
     220: athrow
     221: astore        6
     223: new           #24                 // class java/lang/RuntimeException
     226: dup
     227: new           #26                 // class java/lang/StringBuilder
     230: dup
     231: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     234: aload_1
     235: invokevirtual #28                 // Method java/lang/Class.getName:()Ljava/lang/String;
     238: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     241: ldc           #30                 // String  could not be constructed.
     243: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     246: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     249: aload         6
     251: invokevirtual #32                 // Method java/lang/reflect/InvocationTargetException.getCause:()Ljava/lang/Throwable;
     254: invokespecial #33                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     257: athrow
     258: astore        6
     260: new           #24                 // class java/lang/RuntimeException
     263: dup
     264: new           #26                 // class java/lang/StringBuilder
     267: dup
     268: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     271: aload_1
     272: invokevirtual #28                 // Method java/lang/Class.getName:()Ljava/lang/String;
     275: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     278: ldc           #30                 // String  could not be constructed.
     280: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     283: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     286: invokespecial #35                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     289: athrow
    Exception table:
       from    to  target type
           0    68    69   Class java/lang/RuntimeException
           0    68    74   Class java/lang/reflect/InvocationTargetException
           0    68   111   Class java/lang/Exception
         113   148   149   Class java/lang/RuntimeException
         113   148   154   Class java/lang/reflect/InvocationTargetException
         113   148   191   Class java/lang/Exception
         193   215   216   Class java/lang/RuntimeException
         193   215   221   Class java/lang/reflect/InvocationTargetException
         193   215   258   Class java/lang/Exception

  boolean isClientBackoffEnabled();
    Code:
       0: aload_0
       1: getfield      #6                  // Field clientBackOffEnabled:Z
       4: ireturn

  boolean shouldBackOff(org.apache.hadoop.ipc.Schedulable);
    Code:
       0: aload_0
       1: getfield      #4                  // Field scheduler:Lorg/apache/hadoop/ipc/RpcScheduler;
       4: aload_1
       5: invokeinterface #37,  2           // InterfaceMethod org/apache/hadoop/ipc/RpcScheduler.shouldBackOff:(Lorg/apache/hadoop/ipc/Schedulable;)Z
      10: ireturn

  void addResponseTime(java.lang.String, org.apache.hadoop.ipc.Schedulable, org.apache.hadoop.ipc.ProcessingDetails);
    Code:
       0: aload_0
       1: getfield      #4                  // Field scheduler:Lorg/apache/hadoop/ipc/RpcScheduler;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokeinterface #38,  4           // InterfaceMethod org/apache/hadoop/ipc/RpcScheduler.addResponseTime:(Ljava/lang/String;Lorg/apache/hadoop/ipc/Schedulable;Lorg/apache/hadoop/ipc/ProcessingDetails;)V
      12: return

  int getPriorityLevel(org.apache.hadoop.ipc.Schedulable);
    Code:
       0: aload_0
       1: getfield      #4                  // Field scheduler:Lorg/apache/hadoop/ipc/RpcScheduler;
       4: aload_1
       5: invokeinterface #39,  2           // InterfaceMethod org/apache/hadoop/ipc/RpcScheduler.getPriorityLevel:(Lorg/apache/hadoop/ipc/Schedulable;)I
      10: ireturn

  int getPriorityLevel(org.apache.hadoop.security.UserGroupInformation);
    Code:
       0: aload_0
       1: getfield      #4                  // Field scheduler:Lorg/apache/hadoop/ipc/RpcScheduler;
       4: instanceof    #40                 // class org/apache/hadoop/ipc/DecayRpcScheduler
       7: ifeq          22
      10: aload_0
      11: getfield      #4                  // Field scheduler:Lorg/apache/hadoop/ipc/RpcScheduler;
      14: checkcast     #40                 // class org/apache/hadoop/ipc/DecayRpcScheduler
      17: aload_1
      18: invokevirtual #41                 // Method org/apache/hadoop/ipc/DecayRpcScheduler.getPriorityLevel:(Lorg/apache/hadoop/security/UserGroupInformation;)I
      21: ireturn
      22: iconst_0
      23: ireturn

  void setPriorityLevel(org.apache.hadoop.security.UserGroupInformation, int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field scheduler:Lorg/apache/hadoop/ipc/RpcScheduler;
       4: instanceof    #40                 // class org/apache/hadoop/ipc/DecayRpcScheduler
       7: ifeq          22
      10: aload_0
      11: getfield      #4                  // Field scheduler:Lorg/apache/hadoop/ipc/RpcScheduler;
      14: checkcast     #40                 // class org/apache/hadoop/ipc/DecayRpcScheduler
      17: aload_1
      18: iload_2
      19: invokevirtual #42                 // Method org/apache/hadoop/ipc/DecayRpcScheduler.setPriorityLevel:(Lorg/apache/hadoop/security/UserGroupInformation;I)V
      22: return

  void setClientBackoffEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field clientBackOffEnabled:Z
       5: return

  public void put(E) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method isClientBackoffEnabled:()Z
       4: ifne          26
       7: aload_0
       8: getfield      #9                  // Field putRef:Ljava/util/concurrent/atomic/AtomicReference;
      11: invokevirtual #44                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      14: checkcast     #36                 // class java/util/concurrent/BlockingQueue
      17: aload_1
      18: invokeinterface #45,  2           // InterfaceMethod java/util/concurrent/BlockingQueue.put:(Ljava/lang/Object;)V
      23: goto          48
      26: aload_0
      27: aload_1
      28: invokevirtual #46                 // Method shouldBackOff:(Lorg/apache/hadoop/ipc/Schedulable;)Z
      31: ifeq          41
      34: aload_0
      35: invokespecial #47                 // Method throwBackoff:()V
      38: goto          48
      41: aload_0
      42: aload_1
      43: iconst_0
      44: invokevirtual #48                 // Method addInternal:(Lorg/apache/hadoop/ipc/Schedulable;Z)Z
      47: pop
      48: return

  public boolean add(E);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokevirtual #48                 // Method addInternal:(Lorg/apache/hadoop/ipc/Schedulable;Z)Z
       6: ireturn

  boolean addInternal(E, boolean);
    Code:
       0: iload_2
       1: ifeq          23
       4: aload_0
       5: invokevirtual #43                 // Method isClientBackoffEnabled:()Z
       8: ifeq          23
      11: aload_0
      12: aload_1
      13: invokevirtual #46                 // Method shouldBackOff:(Lorg/apache/hadoop/ipc/Schedulable;)Z
      16: ifeq          23
      19: aload_0
      20: invokespecial #47                 // Method throwBackoff:()V
      23: aload_0
      24: getfield      #9                  // Field putRef:Ljava/util/concurrent/atomic/AtomicReference;
      27: invokevirtual #44                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      30: checkcast     #36                 // class java/util/concurrent/BlockingQueue
      33: aload_1
      34: invokeinterface #49,  2           // InterfaceMethod java/util/concurrent/BlockingQueue.add:(Ljava/lang/Object;)Z
      39: ireturn
      40: astore_3
      41: aload_3
      42: athrow
      43: astore_3
      44: aload_0
      45: invokespecial #47                 // Method throwBackoff:()V
      48: iconst_1
      49: ireturn
    Exception table:
       from    to  target type
          23    39    40   Class org/apache/hadoop/ipc/CallQueueManager$CallQueueOverflowException
          23    39    43   Class java/lang/IllegalStateException

  private void throwBackoff() throws java.lang.IllegalStateException;
    Code:
       0: getstatic     #52                 // Field org/apache/hadoop/ipc/CallQueueManager$CallQueueOverflowException.DISCONNECT:Lorg/apache/hadoop/ipc/CallQueueManager$CallQueueOverflowException;
       3: athrow

  public boolean offer(E);
    Code:
       0: aload_0
       1: getfield      #9                  // Field putRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #44                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #36                 // class java/util/concurrent/BlockingQueue
      10: aload_1
      11: invokeinterface #53,  2           // InterfaceMethod java/util/concurrent/BlockingQueue.offer:(Ljava/lang/Object;)Z
      16: ireturn

  public boolean offer(E, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field putRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #44                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #36                 // class java/util/concurrent/BlockingQueue
      10: aload_1
      11: lload_2
      12: aload         4
      14: invokeinterface #54,  5           // InterfaceMethod java/util/concurrent/BlockingQueue.offer:(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z
      19: ireturn

  public E peek();
    Code:
       0: aload_0
       1: getfield      #10                 // Field takeRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #44                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #36                 // class java/util/concurrent/BlockingQueue
      10: invokeinterface #55,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.peek:()Ljava/lang/Object;
      15: checkcast     #56                 // class org/apache/hadoop/ipc/Schedulable
      18: areturn

  public E poll();
    Code:
       0: aload_0
       1: getfield      #10                 // Field takeRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #44                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #36                 // class java/util/concurrent/BlockingQueue
      10: invokeinterface #57,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.poll:()Ljava/lang/Object;
      15: checkcast     #56                 // class org/apache/hadoop/ipc/Schedulable
      18: areturn

  public E poll(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field takeRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #44                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #36                 // class java/util/concurrent/BlockingQueue
      10: lload_1
      11: aload_3
      12: invokeinterface #58,  4           // InterfaceMethod java/util/concurrent/BlockingQueue.poll:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      17: checkcast     #56                 // class org/apache/hadoop/ipc/Schedulable
      20: areturn

  public E take() throws java.lang.InterruptedException;
    Code:
       0: aconst_null
       1: astore_1
       2: aload_1
       3: ifnonnull     34
       6: aload_0
       7: getfield      #10                 // Field takeRef:Ljava/util/concurrent/atomic/AtomicReference;
      10: invokevirtual #44                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      13: checkcast     #36                 // class java/util/concurrent/BlockingQueue
      16: ldc2_w        #59                 // long 1000l
      19: getstatic     #61                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      22: invokeinterface #58,  4           // InterfaceMethod java/util/concurrent/BlockingQueue.poll:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      27: checkcast     #56                 // class org/apache/hadoop/ipc/Schedulable
      30: astore_1
      31: goto          2
      34: aload_1
      35: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #10                 // Field takeRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #44                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #36                 // class java/util/concurrent/BlockingQueue
      10: invokeinterface #62,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.size:()I
      15: ireturn

  public int remainingCapacity();
    Code:
       0: aload_0
       1: getfield      #10                 // Field takeRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #44                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #36                 // class java/util/concurrent/BlockingQueue
      10: invokeinterface #63,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.remainingCapacity:()I
      15: ireturn

  private static int parseNumLevels(java.lang.String, org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_1
       1: new           #26                 // class java/lang/StringBuilder
       4: dup
       5: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
       8: aload_0
       9: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: ldc           #64                 // String .
      14: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #66                 // String faircallqueue.priority-levels
      19: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      25: iconst_0
      26: invokevirtual #67                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      29: istore_2
      30: iload_2
      31: ifne          67
      34: aload_1
      35: new           #26                 // class java/lang/StringBuilder
      38: dup
      39: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      42: aload_0
      43: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: ldc           #64                 // String .
      48: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: ldc           #69                 // String scheduler.priority.levels
      53: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: iconst_4
      60: invokevirtual #67                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      63: istore_2
      64: goto          123
      67: getstatic     #11                 // Field LOG:Lorg/slf4j/Logger;
      70: new           #26                 // class java/lang/StringBuilder
      73: dup
      74: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      77: aload_0
      78: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: ldc           #64                 // String .
      83: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: ldc           #66                 // String faircallqueue.priority-levels
      88: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: ldc           #70                 // String  is deprecated. Please use
      93: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload_0
      97: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: ldc           #64                 // String .
     102: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: ldc           #69                 // String scheduler.priority.levels
     107: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: ldc           #64                 // String .
     112: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     115: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     118: invokeinterface #71,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     123: iload_2
     124: iconst_1
     125: if_icmpge     138
     128: new           #72                 // class java/lang/IllegalArgumentException
     131: dup
     132: ldc           #73                 // String numLevels must be at least 1
     134: invokespecial #74                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     137: athrow
     138: iload_2
     139: ireturn

  public synchronized void swapQueue(java.lang.Class<? extends org.apache.hadoop.ipc.RpcScheduler>, java.lang.Class<? extends java.util.concurrent.BlockingQueue<E>>, int, java.lang.String, org.apache.hadoop.conf.Configuration);
    Code:
       0: aload         4
       2: aload         5
       4: invokestatic  #2                  // Method parseNumLevels:(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)I
       7: istore        6
       9: aload_0
      10: getfield      #4                  // Field scheduler:Lorg/apache/hadoop/ipc/RpcScheduler;
      13: invokeinterface #75,  1           // InterfaceMethod org/apache/hadoop/ipc/RpcScheduler.stop:()V
      18: aload_1
      19: iload         6
      21: aload         4
      23: aload         5
      25: invokestatic  #3                  // Method createScheduler:(Ljava/lang/Class;ILjava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/ipc/RpcScheduler;
      28: astore        7
      30: aload_0
      31: aload_2
      32: iload         6
      34: iload_3
      35: aload         4
      37: aload         5
      39: invokespecial #5                  // Method createCallQueueInstance:(Ljava/lang/Class;IILjava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Ljava/util/concurrent/BlockingQueue;
      42: astore        8
      44: aload_0
      45: getfield      #9                  // Field putRef:Ljava/util/concurrent/atomic/AtomicReference;
      48: invokevirtual #44                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      51: checkcast     #36                 // class java/util/concurrent/BlockingQueue
      54: astore        9
      56: aload_0
      57: getfield      #9                  // Field putRef:Ljava/util/concurrent/atomic/AtomicReference;
      60: aload         8
      62: invokevirtual #76                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      65: aload_0
      66: aload         9
      68: invokespecial #77                 // Method queueIsReallyEmpty:(Ljava/util/concurrent/BlockingQueue;)Z
      71: ifne          77
      74: goto          65
      77: aload_0
      78: getfield      #10                 // Field takeRef:Ljava/util/concurrent/atomic/AtomicReference;
      81: aload         8
      83: invokevirtual #76                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      86: aload_0
      87: aload         7
      89: putfield      #4                  // Field scheduler:Lorg/apache/hadoop/ipc/RpcScheduler;
      92: getstatic     #11                 // Field LOG:Lorg/slf4j/Logger;
      95: new           #26                 // class java/lang/StringBuilder
      98: dup
      99: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     102: ldc           #78                 // String Old Queue:
     104: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: aload_0
     108: aload         9
     110: invokespecial #79                 // Method stringRepr:(Ljava/lang/Object;)Ljava/lang/String;
     113: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: ldc           #80                 // String , Replacement:
     118: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: aload_0
     122: aload         8
     124: invokespecial #79                 // Method stringRepr:(Ljava/lang/Object;)Ljava/lang/String;
     127: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     130: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     133: invokeinterface #81,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     138: return

  private boolean queueIsReallyEmpty(java.util.concurrent.BlockingQueue<?>);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: bipush        20
       5: if_icmpge     37
       8: ldc2_w        #83                 // long 10l
      11: invokestatic  #85                 // Method java/lang/Thread.sleep:(J)V
      14: goto          20
      17: astore_3
      18: iconst_0
      19: ireturn
      20: aload_1
      21: invokeinterface #87,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.isEmpty:()Z
      26: ifne          31
      29: iconst_0
      30: ireturn
      31: iinc          2, 1
      34: goto          2
      37: iconst_1
      38: ireturn
    Exception table:
       from    to  target type
           8    14    17   Class java/lang/InterruptedException

  private java.lang.String stringRepr(java.lang.Object);
    Code:
       0: new           #26                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_1
       8: invokevirtual #88                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: invokevirtual #28                 // Method java/lang/Class.getName:()Ljava/lang/String;
      14: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: bipush        64
      19: invokevirtual #89                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      22: aload_1
      23: invokevirtual #90                 // Method java/lang/Object.hashCode:()I
      26: invokestatic  #91                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      29: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: areturn

  public int drainTo(java.util.Collection<? super E>);
    Code:
       0: aload_0
       1: getfield      #10                 // Field takeRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #44                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #36                 // class java/util/concurrent/BlockingQueue
      10: aload_1
      11: invokeinterface #92,  2           // InterfaceMethod java/util/concurrent/BlockingQueue.drainTo:(Ljava/util/Collection;)I
      16: ireturn

  public int drainTo(java.util.Collection<? super E>, int);
    Code:
       0: aload_0
       1: getfield      #10                 // Field takeRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #44                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #36                 // class java/util/concurrent/BlockingQueue
      10: aload_1
      11: iload_2
      12: invokeinterface #93,  3           // InterfaceMethod java/util/concurrent/BlockingQueue.drainTo:(Ljava/util/Collection;I)I
      17: ireturn

  public java.util.Iterator<E> iterator();
    Code:
       0: aload_0
       1: getfield      #10                 // Field takeRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #44                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #36                 // class java/util/concurrent/BlockingQueue
      10: invokeinterface #94,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.iterator:()Ljava/util/Iterator;
      15: areturn

  public boolean add(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #56                 // class org/apache/hadoop/ipc/Schedulable
       5: invokevirtual #95                 // Method add:(Lorg/apache/hadoop/ipc/Schedulable;)Z
       8: ireturn

  public java.lang.Object peek();
    Code:
       0: aload_0
       1: invokevirtual #96                 // Method peek:()Lorg/apache/hadoop/ipc/Schedulable;
       4: areturn

  public java.lang.Object poll();
    Code:
       0: aload_0
       1: invokevirtual #97                 // Method poll:()Lorg/apache/hadoop/ipc/Schedulable;
       4: areturn

  public boolean offer(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #56                 // class org/apache/hadoop/ipc/Schedulable
       5: invokevirtual #98                 // Method offer:(Lorg/apache/hadoop/ipc/Schedulable;)Z
       8: ireturn

  public java.lang.Object poll(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: invokevirtual #99                 // Method poll:(JLjava/util/concurrent/TimeUnit;)Lorg/apache/hadoop/ipc/Schedulable;
       6: areturn

  public java.lang.Object take() throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: invokevirtual #100                // Method take:()Lorg/apache/hadoop/ipc/Schedulable;
       4: areturn

  public boolean offer(java.lang.Object, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #56                 // class org/apache/hadoop/ipc/Schedulable
       5: lload_2
       6: aload         4
       8: invokevirtual #101                // Method offer:(Lorg/apache/hadoop/ipc/Schedulable;JLjava/util/concurrent/TimeUnit;)Z
      11: ireturn

  public void put(java.lang.Object) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #56                 // class org/apache/hadoop/ipc/Schedulable
       5: invokevirtual #102                // Method put:(Lorg/apache/hadoop/ipc/Schedulable;)V
       8: return

  static {};
    Code:
       0: ldc           #82                 // class org/apache/hadoop/ipc/CallQueueManager
       2: invokestatic  #103                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #11                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
