Compiled from "SequenceFile.java"
class org.apache.hadoop.io.SequenceFile$RecordCompressWriter extends org.apache.hadoop.io.SequenceFile$Writer {
  org.apache.hadoop.io.SequenceFile$RecordCompressWriter(org.apache.hadoop.conf.Configuration, org.apache.hadoop.io.SequenceFile$Writer$Option...) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/apache/hadoop/io/SequenceFile$Writer."<init>":(Lorg/apache/hadoop/conf/Configuration;[Lorg/apache/hadoop/io/SequenceFile$Writer$Option;)V
       6: return

  public synchronized void append(java.lang.Object, java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: aload_0
       5: getfield      #3                  // Field keyClass:Ljava/lang/Class;
       8: if_acmpeq     56
      11: new           #4                  // class java/io/IOException
      14: dup
      15: new           #5                  // class java/lang/StringBuilder
      18: dup
      19: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #7                  // String wrong key class:
      24: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_1
      28: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      31: invokevirtual #9                  // Method java/lang/Class.getName:()Ljava/lang/String;
      34: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: ldc           #10                 // String  is not
      39: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_0
      43: getfield      #3                  // Field keyClass:Ljava/lang/Class;
      46: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      49: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokespecial #13                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: aload_2
      57: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      60: aload_0
      61: getfield      #14                 // Field valClass:Ljava/lang/Class;
      64: if_acmpeq     112
      67: new           #4                  // class java/io/IOException
      70: dup
      71: new           #5                  // class java/lang/StringBuilder
      74: dup
      75: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      78: ldc           #15                 // String wrong value class:
      80: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: aload_2
      84: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      87: invokevirtual #9                  // Method java/lang/Class.getName:()Ljava/lang/String;
      90: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: ldc           #10                 // String  is not
      95: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: aload_0
      99: getfield      #14                 // Field valClass:Ljava/lang/Class;
     102: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     105: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     108: invokespecial #13                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     111: athrow
     112: aload_0
     113: getfield      #16                 // Field buffer:Lorg/apache/hadoop/io/DataOutputBuffer;
     116: invokevirtual #17                 // Method org/apache/hadoop/io/DataOutputBuffer.reset:()Lorg/apache/hadoop/io/DataOutputBuffer;
     119: pop
     120: aload_0
     121: getfield      #18                 // Field keySerializer:Lorg/apache/hadoop/io/serializer/Serializer;
     124: aload_1
     125: invokeinterface #19,  2           // InterfaceMethod org/apache/hadoop/io/serializer/Serializer.serialize:(Ljava/lang/Object;)V
     130: aload_0
     131: getfield      #16                 // Field buffer:Lorg/apache/hadoop/io/DataOutputBuffer;
     134: invokevirtual #20                 // Method org/apache/hadoop/io/DataOutputBuffer.getLength:()I
     137: istore_3
     138: iload_3
     139: ifge          169
     142: new           #4                  // class java/io/IOException
     145: dup
     146: new           #5                  // class java/lang/StringBuilder
     149: dup
     150: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
     153: ldc           #21                 // String negative length keys not allowed:
     155: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     158: aload_1
     159: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     162: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     165: invokespecial #13                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     168: athrow
     169: aload_0
     170: getfield      #22                 // Field deflateFilter:Lorg/apache/hadoop/io/compress/CompressionOutputStream;
     173: invokevirtual #23                 // Method org/apache/hadoop/io/compress/CompressionOutputStream.resetState:()V
     176: aload_0
     177: getfield      #24                 // Field compressedValSerializer:Lorg/apache/hadoop/io/serializer/Serializer;
     180: aload_2
     181: invokeinterface #19,  2           // InterfaceMethod org/apache/hadoop/io/serializer/Serializer.serialize:(Ljava/lang/Object;)V
     186: aload_0
     187: getfield      #25                 // Field deflateOut:Ljava/io/DataOutputStream;
     190: invokevirtual #26                 // Method java/io/DataOutputStream.flush:()V
     193: aload_0
     194: getfield      #22                 // Field deflateFilter:Lorg/apache/hadoop/io/compress/CompressionOutputStream;
     197: invokevirtual #27                 // Method org/apache/hadoop/io/compress/CompressionOutputStream.finish:()V
     200: aload_0
     201: invokevirtual #28                 // Method checkAndWriteSync:()V
     204: aload_0
     205: getfield      #29                 // Field out:Lorg/apache/hadoop/fs/FSDataOutputStream;
     208: aload_0
     209: getfield      #16                 // Field buffer:Lorg/apache/hadoop/io/DataOutputBuffer;
     212: invokevirtual #20                 // Method org/apache/hadoop/io/DataOutputBuffer.getLength:()I
     215: invokevirtual #30                 // Method org/apache/hadoop/fs/FSDataOutputStream.writeInt:(I)V
     218: aload_0
     219: getfield      #29                 // Field out:Lorg/apache/hadoop/fs/FSDataOutputStream;
     222: iload_3
     223: invokevirtual #30                 // Method org/apache/hadoop/fs/FSDataOutputStream.writeInt:(I)V
     226: aload_0
     227: getfield      #29                 // Field out:Lorg/apache/hadoop/fs/FSDataOutputStream;
     230: aload_0
     231: getfield      #16                 // Field buffer:Lorg/apache/hadoop/io/DataOutputBuffer;
     234: invokevirtual #31                 // Method org/apache/hadoop/io/DataOutputBuffer.getData:()[B
     237: iconst_0
     238: aload_0
     239: getfield      #16                 // Field buffer:Lorg/apache/hadoop/io/DataOutputBuffer;
     242: invokevirtual #20                 // Method org/apache/hadoop/io/DataOutputBuffer.getLength:()I
     245: invokevirtual #32                 // Method org/apache/hadoop/fs/FSDataOutputStream.write:([BII)V
     248: return

  public synchronized void appendRaw(byte[], int, int, org.apache.hadoop.io.SequenceFile$ValueBytes) throws java.io.IOException;
    Code:
       0: iload_3
       1: ifge          31
       4: new           #4                  // class java/io/IOException
       7: dup
       8: new           #5                  // class java/lang/StringBuilder
      11: dup
      12: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #21                 // String negative length keys not allowed:
      17: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: iload_3
      21: invokevirtual #33                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      24: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: invokespecial #13                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload         4
      33: invokeinterface #34,  1           // InterfaceMethod org/apache/hadoop/io/SequenceFile$ValueBytes.getSize:()I
      38: istore        5
      40: aload_0
      41: invokevirtual #28                 // Method checkAndWriteSync:()V
      44: aload_0
      45: getfield      #29                 // Field out:Lorg/apache/hadoop/fs/FSDataOutputStream;
      48: iload_3
      49: iload         5
      51: iadd
      52: invokevirtual #30                 // Method org/apache/hadoop/fs/FSDataOutputStream.writeInt:(I)V
      55: aload_0
      56: getfield      #29                 // Field out:Lorg/apache/hadoop/fs/FSDataOutputStream;
      59: iload_3
      60: invokevirtual #30                 // Method org/apache/hadoop/fs/FSDataOutputStream.writeInt:(I)V
      63: aload_0
      64: getfield      #29                 // Field out:Lorg/apache/hadoop/fs/FSDataOutputStream;
      67: aload_1
      68: iload_2
      69: iload_3
      70: invokevirtual #32                 // Method org/apache/hadoop/fs/FSDataOutputStream.write:([BII)V
      73: aload         4
      75: aload_0
      76: getfield      #29                 // Field out:Lorg/apache/hadoop/fs/FSDataOutputStream;
      79: invokeinterface #35,  2           // InterfaceMethod org/apache/hadoop/io/SequenceFile$ValueBytes.writeCompressedBytes:(Ljava/io/DataOutputStream;)V
      84: return
}
