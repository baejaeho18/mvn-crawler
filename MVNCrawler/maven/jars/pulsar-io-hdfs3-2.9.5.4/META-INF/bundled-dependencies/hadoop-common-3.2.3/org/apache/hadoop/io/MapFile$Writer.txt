Compiled from "MapFile.java"
public class org.apache.hadoop.io.MapFile$Writer implements java.io.Closeable {
  private org.apache.hadoop.io.SequenceFile$Writer data;

  private org.apache.hadoop.io.SequenceFile$Writer index;

  private static final java.lang.String INDEX_INTERVAL;

  private int indexInterval;

  private long size;

  private org.apache.hadoop.io.LongWritable position;

  private org.apache.hadoop.io.WritableComparator comparator;

  private org.apache.hadoop.io.DataInputBuffer inBuf;

  private org.apache.hadoop.io.DataOutputBuffer outBuf;

  private org.apache.hadoop.io.WritableComparable lastKey;

  private long lastIndexPos;

  private long lastIndexKeyCount;

  public org.apache.hadoop.io.MapFile$Writer(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.FileSystem, java.lang.String, java.lang.Class<? extends org.apache.hadoop.io.WritableComparable>, java.lang.Class) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: new           #2                  // class org/apache/hadoop/fs/Path
       5: dup
       6: aload_3
       7: invokespecial #3                  // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      10: iconst_2
      11: anewarray     #4                  // class org/apache/hadoop/io/SequenceFile$Writer$Option
      14: dup
      15: iconst_0
      16: aload         4
      18: invokestatic  #5                  // Method keyClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/MapFile$Writer$Option;
      21: aastore
      22: dup
      23: iconst_1
      24: aload         5
      26: invokestatic  #6                  // Method valueClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      29: aastore
      30: invokespecial #7                  // Method "<init>":(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;[Lorg/apache/hadoop/io/SequenceFile$Writer$Option;)V
      33: return

  public org.apache.hadoop.io.MapFile$Writer(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.FileSystem, java.lang.String, java.lang.Class<? extends org.apache.hadoop.io.WritableComparable>, java.lang.Class, org.apache.hadoop.io.SequenceFile$CompressionType, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: new           #2                  // class org/apache/hadoop/fs/Path
       5: dup
       6: aload_3
       7: invokespecial #3                  // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      10: iconst_4
      11: anewarray     #4                  // class org/apache/hadoop/io/SequenceFile$Writer$Option
      14: dup
      15: iconst_0
      16: aload         4
      18: invokestatic  #5                  // Method keyClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/MapFile$Writer$Option;
      21: aastore
      22: dup
      23: iconst_1
      24: aload         5
      26: invokestatic  #6                  // Method valueClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      29: aastore
      30: dup
      31: iconst_2
      32: aload         6
      34: invokestatic  #8                  // Method compression:(Lorg/apache/hadoop/io/SequenceFile$CompressionType;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      37: aastore
      38: dup
      39: iconst_3
      40: aload         7
      42: invokestatic  #9                  // Method progressable:(Lorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      45: aastore
      46: invokespecial #7                  // Method "<init>":(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;[Lorg/apache/hadoop/io/SequenceFile$Writer$Option;)V
      49: return

  public org.apache.hadoop.io.MapFile$Writer(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.FileSystem, java.lang.String, java.lang.Class<? extends org.apache.hadoop.io.WritableComparable>, java.lang.Class, org.apache.hadoop.io.SequenceFile$CompressionType, org.apache.hadoop.io.compress.CompressionCodec, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: new           #2                  // class org/apache/hadoop/fs/Path
       5: dup
       6: aload_3
       7: invokespecial #3                  // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      10: iconst_4
      11: anewarray     #4                  // class org/apache/hadoop/io/SequenceFile$Writer$Option
      14: dup
      15: iconst_0
      16: aload         4
      18: invokestatic  #5                  // Method keyClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/MapFile$Writer$Option;
      21: aastore
      22: dup
      23: iconst_1
      24: aload         5
      26: invokestatic  #6                  // Method valueClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      29: aastore
      30: dup
      31: iconst_2
      32: aload         6
      34: aload         7
      36: invokestatic  #10                 // Method compression:(Lorg/apache/hadoop/io/SequenceFile$CompressionType;Lorg/apache/hadoop/io/compress/CompressionCodec;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      39: aastore
      40: dup
      41: iconst_3
      42: aload         8
      44: invokestatic  #9                  // Method progressable:(Lorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      47: aastore
      48: invokespecial #7                  // Method "<init>":(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;[Lorg/apache/hadoop/io/SequenceFile$Writer$Option;)V
      51: return

  public org.apache.hadoop.io.MapFile$Writer(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.FileSystem, java.lang.String, java.lang.Class<? extends org.apache.hadoop.io.WritableComparable>, java.lang.Class, org.apache.hadoop.io.SequenceFile$CompressionType) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: new           #2                  // class org/apache/hadoop/fs/Path
       5: dup
       6: aload_3
       7: invokespecial #3                  // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      10: iconst_3
      11: anewarray     #4                  // class org/apache/hadoop/io/SequenceFile$Writer$Option
      14: dup
      15: iconst_0
      16: aload         4
      18: invokestatic  #5                  // Method keyClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/MapFile$Writer$Option;
      21: aastore
      22: dup
      23: iconst_1
      24: aload         5
      26: invokestatic  #6                  // Method valueClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      29: aastore
      30: dup
      31: iconst_2
      32: aload         6
      34: invokestatic  #8                  // Method compression:(Lorg/apache/hadoop/io/SequenceFile$CompressionType;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      37: aastore
      38: invokespecial #7                  // Method "<init>":(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;[Lorg/apache/hadoop/io/SequenceFile$Writer$Option;)V
      41: return

  public org.apache.hadoop.io.MapFile$Writer(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.FileSystem, java.lang.String, org.apache.hadoop.io.WritableComparator, java.lang.Class) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: new           #2                  // class org/apache/hadoop/fs/Path
       5: dup
       6: aload_3
       7: invokespecial #3                  // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      10: iconst_2
      11: anewarray     #4                  // class org/apache/hadoop/io/SequenceFile$Writer$Option
      14: dup
      15: iconst_0
      16: aload         4
      18: invokestatic  #11                 // Method comparator:(Lorg/apache/hadoop/io/WritableComparator;)Lorg/apache/hadoop/io/MapFile$Writer$Option;
      21: aastore
      22: dup
      23: iconst_1
      24: aload         5
      26: invokestatic  #6                  // Method valueClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      29: aastore
      30: invokespecial #7                  // Method "<init>":(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;[Lorg/apache/hadoop/io/SequenceFile$Writer$Option;)V
      33: return

  public org.apache.hadoop.io.MapFile$Writer(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.FileSystem, java.lang.String, org.apache.hadoop.io.WritableComparator, java.lang.Class, org.apache.hadoop.io.SequenceFile$CompressionType) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: new           #2                  // class org/apache/hadoop/fs/Path
       5: dup
       6: aload_3
       7: invokespecial #3                  // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      10: iconst_3
      11: anewarray     #4                  // class org/apache/hadoop/io/SequenceFile$Writer$Option
      14: dup
      15: iconst_0
      16: aload         4
      18: invokestatic  #11                 // Method comparator:(Lorg/apache/hadoop/io/WritableComparator;)Lorg/apache/hadoop/io/MapFile$Writer$Option;
      21: aastore
      22: dup
      23: iconst_1
      24: aload         5
      26: invokestatic  #6                  // Method valueClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      29: aastore
      30: dup
      31: iconst_2
      32: aload         6
      34: invokestatic  #8                  // Method compression:(Lorg/apache/hadoop/io/SequenceFile$CompressionType;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      37: aastore
      38: invokespecial #7                  // Method "<init>":(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;[Lorg/apache/hadoop/io/SequenceFile$Writer$Option;)V
      41: return

  public org.apache.hadoop.io.MapFile$Writer(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.FileSystem, java.lang.String, org.apache.hadoop.io.WritableComparator, java.lang.Class, org.apache.hadoop.io.SequenceFile$CompressionType, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: new           #2                  // class org/apache/hadoop/fs/Path
       5: dup
       6: aload_3
       7: invokespecial #3                  // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      10: iconst_4
      11: anewarray     #4                  // class org/apache/hadoop/io/SequenceFile$Writer$Option
      14: dup
      15: iconst_0
      16: aload         4
      18: invokestatic  #11                 // Method comparator:(Lorg/apache/hadoop/io/WritableComparator;)Lorg/apache/hadoop/io/MapFile$Writer$Option;
      21: aastore
      22: dup
      23: iconst_1
      24: aload         5
      26: invokestatic  #6                  // Method valueClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      29: aastore
      30: dup
      31: iconst_2
      32: aload         6
      34: invokestatic  #8                  // Method compression:(Lorg/apache/hadoop/io/SequenceFile$CompressionType;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      37: aastore
      38: dup
      39: iconst_3
      40: aload         7
      42: invokestatic  #9                  // Method progressable:(Lorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      45: aastore
      46: invokespecial #7                  // Method "<init>":(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;[Lorg/apache/hadoop/io/SequenceFile$Writer$Option;)V
      49: return

  public org.apache.hadoop.io.MapFile$Writer(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.FileSystem, java.lang.String, org.apache.hadoop.io.WritableComparator, java.lang.Class, org.apache.hadoop.io.SequenceFile$CompressionType, org.apache.hadoop.io.compress.CompressionCodec, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: new           #2                  // class org/apache/hadoop/fs/Path
       5: dup
       6: aload_3
       7: invokespecial #3                  // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      10: iconst_4
      11: anewarray     #4                  // class org/apache/hadoop/io/SequenceFile$Writer$Option
      14: dup
      15: iconst_0
      16: aload         4
      18: invokestatic  #11                 // Method comparator:(Lorg/apache/hadoop/io/WritableComparator;)Lorg/apache/hadoop/io/MapFile$Writer$Option;
      21: aastore
      22: dup
      23: iconst_1
      24: aload         5
      26: invokestatic  #6                  // Method valueClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      29: aastore
      30: dup
      31: iconst_2
      32: aload         6
      34: aload         7
      36: invokestatic  #10                 // Method compression:(Lorg/apache/hadoop/io/SequenceFile$CompressionType;Lorg/apache/hadoop/io/compress/CompressionCodec;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      39: aastore
      40: dup
      41: iconst_3
      42: aload         8
      44: invokestatic  #9                  // Method progressable:(Lorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      47: aastore
      48: invokespecial #7                  // Method "<init>":(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;[Lorg/apache/hadoop/io/SequenceFile$Writer$Option;)V
      51: return

  public static org.apache.hadoop.io.MapFile$Writer$Option keyClass(java.lang.Class<? extends org.apache.hadoop.io.WritableComparable>);
    Code:
       0: new           #12                 // class org/apache/hadoop/io/MapFile$Writer$KeyClassOption
       3: dup
       4: aload_0
       5: invokespecial #13                 // Method org/apache/hadoop/io/MapFile$Writer$KeyClassOption."<init>":(Ljava/lang/Class;)V
       8: areturn

  public static org.apache.hadoop.io.MapFile$Writer$Option comparator(org.apache.hadoop.io.WritableComparator);
    Code:
       0: new           #14                 // class org/apache/hadoop/io/MapFile$Writer$ComparatorOption
       3: dup
       4: aload_0
       5: invokespecial #15                 // Method org/apache/hadoop/io/MapFile$Writer$ComparatorOption."<init>":(Lorg/apache/hadoop/io/WritableComparator;)V
       8: areturn

  public static org.apache.hadoop.io.SequenceFile$Writer$Option valueClass(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokestatic  #16                 // Method org/apache/hadoop/io/SequenceFile$Writer.valueClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
       4: areturn

  public static org.apache.hadoop.io.SequenceFile$Writer$Option compression(org.apache.hadoop.io.SequenceFile$CompressionType);
    Code:
       0: aload_0
       1: invokestatic  #17                 // Method org/apache/hadoop/io/SequenceFile$Writer.compression:(Lorg/apache/hadoop/io/SequenceFile$CompressionType;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
       4: areturn

  public static org.apache.hadoop.io.SequenceFile$Writer$Option compression(org.apache.hadoop.io.SequenceFile$CompressionType, org.apache.hadoop.io.compress.CompressionCodec);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #18                 // Method org/apache/hadoop/io/SequenceFile$Writer.compression:(Lorg/apache/hadoop/io/SequenceFile$CompressionType;Lorg/apache/hadoop/io/compress/CompressionCodec;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
       5: areturn

  public static org.apache.hadoop.io.SequenceFile$Writer$Option progressable(org.apache.hadoop.util.Progressable);
    Code:
       0: aload_0
       1: invokestatic  #19                 // Method org/apache/hadoop/io/SequenceFile$Writer.progressable:(Lorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
       4: areturn

  public org.apache.hadoop.io.MapFile$Writer(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.Path, org.apache.hadoop.io.SequenceFile$Writer$Option...) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #20                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: sipush        128
       8: putfield      #21                 // Field indexInterval:I
      11: aload_0
      12: new           #22                 // class org/apache/hadoop/io/LongWritable
      15: dup
      16: invokespecial #23                 // Method org/apache/hadoop/io/LongWritable."<init>":()V
      19: putfield      #24                 // Field position:Lorg/apache/hadoop/io/LongWritable;
      22: aload_0
      23: new           #25                 // class org/apache/hadoop/io/DataInputBuffer
      26: dup
      27: invokespecial #26                 // Method org/apache/hadoop/io/DataInputBuffer."<init>":()V
      30: putfield      #27                 // Field inBuf:Lorg/apache/hadoop/io/DataInputBuffer;
      33: aload_0
      34: new           #28                 // class org/apache/hadoop/io/DataOutputBuffer
      37: dup
      38: invokespecial #29                 // Method org/apache/hadoop/io/DataOutputBuffer."<init>":()V
      41: putfield      #30                 // Field outBuf:Lorg/apache/hadoop/io/DataOutputBuffer;
      44: aload_0
      45: ldc2_w        #31                 // long -1l
      48: putfield      #33                 // Field lastIndexPos:J
      51: aload_0
      52: ldc2_w        #35                 // long -9223372036854775808l
      55: putfield      #37                 // Field lastIndexKeyCount:J
      58: ldc           #12                 // class org/apache/hadoop/io/MapFile$Writer$KeyClassOption
      60: aload_3
      61: invokestatic  #38                 // Method org/apache/hadoop/util/Options.getOption:(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
      64: checkcast     #12                 // class org/apache/hadoop/io/MapFile$Writer$KeyClassOption
      67: astore        4
      69: ldc           #14                 // class org/apache/hadoop/io/MapFile$Writer$ComparatorOption
      71: aload_3
      72: invokestatic  #38                 // Method org/apache/hadoop/util/Options.getOption:(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
      75: checkcast     #14                 // class org/apache/hadoop/io/MapFile$Writer$ComparatorOption
      78: astore        5
      80: aload         4
      82: ifnonnull     89
      85: iconst_1
      86: goto          90
      89: iconst_0
      90: aload         5
      92: ifnonnull     99
      95: iconst_1
      96: goto          100
      99: iconst_0
     100: if_icmpne     113
     103: new           #39                 // class java/lang/IllegalArgumentException
     106: dup
     107: ldc           #40                 // String key class or comparator option must be set
     109: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     112: athrow
     113: aload_0
     114: aload_1
     115: ldc           #43                 // String io.map.index.interval
     117: aload_0
     118: getfield      #21                 // Field indexInterval:I
     121: invokevirtual #44                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
     124: putfield      #21                 // Field indexInterval:I
     127: aload         4
     129: ifnonnull     153
     132: aload_0
     133: aload         5
     135: invokevirtual #45                 // Method org/apache/hadoop/io/MapFile$Writer$ComparatorOption.getValue:()Lorg/apache/hadoop/io/WritableComparator;
     138: putfield      #46                 // Field comparator:Lorg/apache/hadoop/io/WritableComparator;
     141: aload_0
     142: getfield      #46                 // Field comparator:Lorg/apache/hadoop/io/WritableComparator;
     145: invokevirtual #47                 // Method org/apache/hadoop/io/WritableComparator.getKeyClass:()Ljava/lang/Class;
     148: astore        6
     150: goto          170
     153: aload         4
     155: invokevirtual #48                 // Method org/apache/hadoop/io/MapFile$Writer$KeyClassOption.getValue:()Ljava/lang/Class;
     158: astore        6
     160: aload_0
     161: aload         6
     163: aload_1
     164: invokestatic  #49                 // Method org/apache/hadoop/io/WritableComparator.get:(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/io/WritableComparator;
     167: putfield      #46                 // Field comparator:Lorg/apache/hadoop/io/WritableComparator;
     170: aload_0
     171: aload_0
     172: getfield      #46                 // Field comparator:Lorg/apache/hadoop/io/WritableComparator;
     175: invokevirtual #50                 // Method org/apache/hadoop/io/WritableComparator.newKey:()Lorg/apache/hadoop/io/WritableComparable;
     178: putfield      #51                 // Field lastKey:Lorg/apache/hadoop/io/WritableComparable;
     181: aload_2
     182: aload_1
     183: invokevirtual #52                 // Method org/apache/hadoop/fs/Path.getFileSystem:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
     186: astore        7
     188: aload         7
     190: aload_2
     191: invokevirtual #53                 // Method org/apache/hadoop/fs/FileSystem.mkdirs:(Lorg/apache/hadoop/fs/Path;)Z
     194: ifne          224
     197: new           #54                 // class java/io/IOException
     200: dup
     201: new           #55                 // class java/lang/StringBuilder
     204: dup
     205: invokespecial #56                 // Method java/lang/StringBuilder."<init>":()V
     208: ldc           #57                 // String Mkdirs failed to create directory
     210: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     213: aload_2
     214: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     217: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     220: invokespecial #61                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     223: athrow
     224: new           #2                  // class org/apache/hadoop/fs/Path
     227: dup
     228: aload_2
     229: ldc           #62                 // String data
     231: invokespecial #63                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
     234: astore        8
     236: new           #2                  // class org/apache/hadoop/fs/Path
     239: dup
     240: aload_2
     241: ldc           #64                 // String index
     243: invokespecial #63                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
     246: astore        9
     248: aload_3
     249: iconst_2
     250: anewarray     #4                  // class org/apache/hadoop/io/SequenceFile$Writer$Option
     253: dup
     254: iconst_0
     255: aload         8
     257: invokestatic  #65                 // Method org/apache/hadoop/io/SequenceFile$Writer.file:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
     260: aastore
     261: dup
     262: iconst_1
     263: aload         6
     265: invokestatic  #66                 // Method org/apache/hadoop/io/SequenceFile$Writer.keyClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
     268: aastore
     269: invokestatic  #67                 // Method org/apache/hadoop/util/Options.prependOptions:([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;
     272: checkcast     #68                 // class "[Lorg/apache/hadoop/io/SequenceFile$Writer$Option;"
     275: astore        10
     277: aload_0
     278: aload_1
     279: aload         10
     281: invokestatic  #69                 // Method org/apache/hadoop/io/SequenceFile.createWriter:(Lorg/apache/hadoop/conf/Configuration;[Lorg/apache/hadoop/io/SequenceFile$Writer$Option;)Lorg/apache/hadoop/io/SequenceFile$Writer;
     284: putfield      #70                 // Field data:Lorg/apache/hadoop/io/SequenceFile$Writer;
     287: aload_3
     288: iconst_4
     289: anewarray     #4                  // class org/apache/hadoop/io/SequenceFile$Writer$Option
     292: dup
     293: iconst_0
     294: aload         9
     296: invokestatic  #65                 // Method org/apache/hadoop/io/SequenceFile$Writer.file:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
     299: aastore
     300: dup
     301: iconst_1
     302: aload         6
     304: invokestatic  #66                 // Method org/apache/hadoop/io/SequenceFile$Writer.keyClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
     307: aastore
     308: dup
     309: iconst_2
     310: ldc           #22                 // class org/apache/hadoop/io/LongWritable
     312: invokestatic  #16                 // Method org/apache/hadoop/io/SequenceFile$Writer.valueClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
     315: aastore
     316: dup
     317: iconst_3
     318: getstatic     #71                 // Field org/apache/hadoop/io/SequenceFile$CompressionType.BLOCK:Lorg/apache/hadoop/io/SequenceFile$CompressionType;
     321: invokestatic  #17                 // Method org/apache/hadoop/io/SequenceFile$Writer.compression:(Lorg/apache/hadoop/io/SequenceFile$CompressionType;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
     324: aastore
     325: invokestatic  #67                 // Method org/apache/hadoop/util/Options.prependOptions:([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;
     328: checkcast     #68                 // class "[Lorg/apache/hadoop/io/SequenceFile$Writer$Option;"
     331: astore        11
     333: aload_0
     334: aload_1
     335: aload         11
     337: invokestatic  #69                 // Method org/apache/hadoop/io/SequenceFile.createWriter:(Lorg/apache/hadoop/conf/Configuration;[Lorg/apache/hadoop/io/SequenceFile$Writer$Option;)Lorg/apache/hadoop/io/SequenceFile$Writer;
     340: putfield      #72                 // Field index:Lorg/apache/hadoop/io/SequenceFile$Writer;
     343: return

  public int getIndexInterval();
    Code:
       0: aload_0
       1: getfield      #21                 // Field indexInterval:I
       4: ireturn

  public void setIndexInterval(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #21                 // Field indexInterval:I
       5: return

  public static void setIndexInterval(org.apache.hadoop.conf.Configuration, int);
    Code:
       0: aload_0
       1: ldc           #43                 // String io.map.index.interval
       3: iload_1
       4: invokevirtual #73                 // Method org/apache/hadoop/conf/Configuration.setInt:(Ljava/lang/String;I)V
       7: return

  public synchronized void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #70                 // Field data:Lorg/apache/hadoop/io/SequenceFile$Writer;
       4: invokevirtual #74                 // Method org/apache/hadoop/io/SequenceFile$Writer.close:()V
       7: aload_0
       8: getfield      #72                 // Field index:Lorg/apache/hadoop/io/SequenceFile$Writer;
      11: invokevirtual #74                 // Method org/apache/hadoop/io/SequenceFile$Writer.close:()V
      14: return

  public synchronized void append(org.apache.hadoop.io.WritableComparable, org.apache.hadoop.io.Writable) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #75                 // Method checkKey:(Lorg/apache/hadoop/io/WritableComparable;)V
       5: aload_0
       6: getfield      #70                 // Field data:Lorg/apache/hadoop/io/SequenceFile$Writer;
       9: invokevirtual #76                 // Method org/apache/hadoop/io/SequenceFile$Writer.getLength:()J
      12: lstore_3
      13: aload_0
      14: getfield      #77                 // Field size:J
      17: aload_0
      18: getfield      #37                 // Field lastIndexKeyCount:J
      21: aload_0
      22: getfield      #21                 // Field indexInterval:I
      25: i2l
      26: ladd
      27: lcmp
      28: iflt          73
      31: lload_3
      32: aload_0
      33: getfield      #33                 // Field lastIndexPos:J
      36: lcmp
      37: ifle          73
      40: aload_0
      41: getfield      #24                 // Field position:Lorg/apache/hadoop/io/LongWritable;
      44: lload_3
      45: invokevirtual #78                 // Method org/apache/hadoop/io/LongWritable.set:(J)V
      48: aload_0
      49: getfield      #72                 // Field index:Lorg/apache/hadoop/io/SequenceFile$Writer;
      52: aload_1
      53: aload_0
      54: getfield      #24                 // Field position:Lorg/apache/hadoop/io/LongWritable;
      57: invokevirtual #79                 // Method org/apache/hadoop/io/SequenceFile$Writer.append:(Lorg/apache/hadoop/io/Writable;Lorg/apache/hadoop/io/Writable;)V
      60: aload_0
      61: lload_3
      62: putfield      #33                 // Field lastIndexPos:J
      65: aload_0
      66: aload_0
      67: getfield      #77                 // Field size:J
      70: putfield      #37                 // Field lastIndexKeyCount:J
      73: aload_0
      74: getfield      #70                 // Field data:Lorg/apache/hadoop/io/SequenceFile$Writer;
      77: aload_1
      78: aload_2
      79: invokevirtual #79                 // Method org/apache/hadoop/io/SequenceFile$Writer.append:(Lorg/apache/hadoop/io/Writable;Lorg/apache/hadoop/io/Writable;)V
      82: aload_0
      83: dup
      84: getfield      #77                 // Field size:J
      87: lconst_1
      88: ladd
      89: putfield      #77                 // Field size:J
      92: return

  private void checkKey(org.apache.hadoop.io.WritableComparable) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #77                 // Field size:J
       4: lconst_0
       5: lcmp
       6: ifeq          63
       9: aload_0
      10: getfield      #46                 // Field comparator:Lorg/apache/hadoop/io/WritableComparator;
      13: aload_0
      14: getfield      #51                 // Field lastKey:Lorg/apache/hadoop/io/WritableComparable;
      17: aload_1
      18: invokevirtual #80                 // Method org/apache/hadoop/io/WritableComparator.compare:(Lorg/apache/hadoop/io/WritableComparable;Lorg/apache/hadoop/io/WritableComparable;)I
      21: ifle          63
      24: new           #54                 // class java/io/IOException
      27: dup
      28: new           #55                 // class java/lang/StringBuilder
      31: dup
      32: invokespecial #56                 // Method java/lang/StringBuilder."<init>":()V
      35: ldc           #81                 // String key out of order:
      37: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_1
      41: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      44: ldc           #82                 // String  after
      46: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: aload_0
      50: getfield      #51                 // Field lastKey:Lorg/apache/hadoop/io/WritableComparable;
      53: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      56: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: invokespecial #61                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      62: athrow
      63: aload_0
      64: getfield      #30                 // Field outBuf:Lorg/apache/hadoop/io/DataOutputBuffer;
      67: invokevirtual #83                 // Method org/apache/hadoop/io/DataOutputBuffer.reset:()Lorg/apache/hadoop/io/DataOutputBuffer;
      70: pop
      71: aload_1
      72: aload_0
      73: getfield      #30                 // Field outBuf:Lorg/apache/hadoop/io/DataOutputBuffer;
      76: invokeinterface #84,  2           // InterfaceMethod org/apache/hadoop/io/WritableComparable.write:(Ljava/io/DataOutput;)V
      81: aload_0
      82: getfield      #27                 // Field inBuf:Lorg/apache/hadoop/io/DataInputBuffer;
      85: aload_0
      86: getfield      #30                 // Field outBuf:Lorg/apache/hadoop/io/DataOutputBuffer;
      89: invokevirtual #85                 // Method org/apache/hadoop/io/DataOutputBuffer.getData:()[B
      92: aload_0
      93: getfield      #30                 // Field outBuf:Lorg/apache/hadoop/io/DataOutputBuffer;
      96: invokevirtual #86                 // Method org/apache/hadoop/io/DataOutputBuffer.getLength:()I
      99: invokevirtual #87                 // Method org/apache/hadoop/io/DataInputBuffer.reset:([BI)V
     102: aload_0
     103: getfield      #51                 // Field lastKey:Lorg/apache/hadoop/io/WritableComparable;
     106: aload_0
     107: getfield      #27                 // Field inBuf:Lorg/apache/hadoop/io/DataInputBuffer;
     110: invokeinterface #88,  2           // InterfaceMethod org/apache/hadoop/io/WritableComparable.readFields:(Ljava/io/DataInput;)V
     115: return
}
