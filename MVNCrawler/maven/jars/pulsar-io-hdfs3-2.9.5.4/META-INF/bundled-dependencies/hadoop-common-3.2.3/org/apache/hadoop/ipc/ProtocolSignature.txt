Compiled from "ProtocolSignature.java"
public class org.apache.hadoop.ipc.ProtocolSignature implements org.apache.hadoop.io.Writable {
  private long version;

  private int[] methods;

  private static final java.util.HashMap<java.lang.String, org.apache.hadoop.ipc.ProtocolSignature$ProtocolSigFingerprint> PROTOCOL_FINGERPRINT_CACHE;

  public org.apache.hadoop.ipc.ProtocolSignature();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field methods:[I
       9: return

  public org.apache.hadoop.ipc.ProtocolSignature(long, int[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field methods:[I
       9: aload_0
      10: lload_1
      11: putfield      #3                  // Field version:J
      14: aload_0
      15: aload_3
      16: putfield      #2                  // Field methods:[I
      19: return

  public long getVersion();
    Code:
       0: aload_0
       1: getfield      #3                  // Field version:J
       4: lreturn

  public int[] getMethods();
    Code:
       0: aload_0
       1: getfield      #2                  // Field methods:[I
       4: areturn

  public void readFields(java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #4,  1            // InterfaceMethod java/io/DataInput.readLong:()J
       7: putfield      #3                  // Field version:J
      10: aload_1
      11: invokeinterface #5,  1            // InterfaceMethod java/io/DataInput.readBoolean:()Z
      16: istore_2
      17: iload_2
      18: ifeq          63
      21: aload_1
      22: invokeinterface #6,  1            // InterfaceMethod java/io/DataInput.readInt:()I
      27: istore_3
      28: aload_0
      29: iload_3
      30: newarray       int
      32: putfield      #2                  // Field methods:[I
      35: iconst_0
      36: istore        4
      38: iload         4
      40: iload_3
      41: if_icmpge     63
      44: aload_0
      45: getfield      #2                  // Field methods:[I
      48: iload         4
      50: aload_1
      51: invokeinterface #6,  1            // InterfaceMethod java/io/DataInput.readInt:()I
      56: iastore
      57: iinc          4, 1
      60: goto          38
      63: return

  public void write(java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #3                  // Field version:J
       5: invokeinterface #7,  3            // InterfaceMethod java/io/DataOutput.writeLong:(J)V
      10: aload_0
      11: getfield      #2                  // Field methods:[I
      14: ifnonnull     27
      17: aload_1
      18: iconst_0
      19: invokeinterface #8,  2            // InterfaceMethod java/io/DataOutput.writeBoolean:(Z)V
      24: goto          82
      27: aload_1
      28: iconst_1
      29: invokeinterface #8,  2            // InterfaceMethod java/io/DataOutput.writeBoolean:(Z)V
      34: aload_1
      35: aload_0
      36: getfield      #2                  // Field methods:[I
      39: arraylength
      40: invokeinterface #9,  2            // InterfaceMethod java/io/DataOutput.writeInt:(I)V
      45: aload_0
      46: getfield      #2                  // Field methods:[I
      49: astore_2
      50: aload_2
      51: arraylength
      52: istore_3
      53: iconst_0
      54: istore        4
      56: iload         4
      58: iload_3
      59: if_icmpge     82
      62: aload_2
      63: iload         4
      65: iaload
      66: istore        5
      68: aload_1
      69: iload         5
      71: invokeinterface #9,  2            // InterfaceMethod java/io/DataOutput.writeInt:(I)V
      76: iinc          4, 1
      79: goto          56
      82: return

  static int getFingerprint(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
       4: invokevirtual #11                 // Method java/lang/String.hashCode:()I
       7: istore_1
       8: iload_1
       9: bipush        31
      11: aload_0
      12: invokevirtual #12                 // Method java/lang/reflect/Method.getReturnType:()Ljava/lang/Class;
      15: invokevirtual #13                 // Method java/lang/Class.getName:()Ljava/lang/String;
      18: invokevirtual #11                 // Method java/lang/String.hashCode:()I
      21: imul
      22: iadd
      23: istore_1
      24: aload_0
      25: invokevirtual #14                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
      28: astore_2
      29: aload_2
      30: arraylength
      31: istore_3
      32: iconst_0
      33: istore        4
      35: iload         4
      37: iload_3
      38: if_icmpge     67
      41: aload_2
      42: iload         4
      44: aaload
      45: astore        5
      47: bipush        31
      49: iload_1
      50: imul
      51: aload         5
      53: invokevirtual #13                 // Method java/lang/Class.getName:()Ljava/lang/String;
      56: invokevirtual #11                 // Method java/lang/String.hashCode:()I
      59: ixor
      60: istore_1
      61: iinc          4, 1
      64: goto          35
      67: iload_1
      68: ireturn

  private static int[] getFingerprints(java.lang.reflect.Method[]);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: arraylength
       8: newarray       int
      10: astore_1
      11: iconst_0
      12: istore_2
      13: iload_2
      14: aload_0
      15: arraylength
      16: if_icmpge     34
      19: aload_1
      20: iload_2
      21: aload_0
      22: iload_2
      23: aaload
      24: invokestatic  #15                 // Method getFingerprint:(Ljava/lang/reflect/Method;)I
      27: iastore
      28: iinc          2, 1
      31: goto          13
      34: aload_1
      35: areturn

  static int getFingerprint(java.lang.reflect.Method[]);
    Code:
       0: aload_0
       1: invokestatic  #16                 // Method getFingerprints:([Ljava/lang/reflect/Method;)[I
       4: invokestatic  #17                 // Method getFingerprint:([I)I
       7: ireturn

  static int getFingerprint(int[]);
    Code:
       0: aload_0
       1: invokestatic  #18                 // Method java/util/Arrays.sort:([I)V
       4: aload_0
       5: invokestatic  #19                 // Method java/util/Arrays.hashCode:([I)I
       8: ireturn

  public static void resetCache();
    Code:
       0: getstatic     #20                 // Field PROTOCOL_FINGERPRINT_CACHE:Ljava/util/HashMap;
       3: invokevirtual #21                 // Method java/util/HashMap.clear:()V
       6: return

  private static org.apache.hadoop.ipc.ProtocolSignature$ProtocolSigFingerprint getSigFingerprint(java.lang.Class<?>, long);
    Code:
       0: aload_0
       1: invokestatic  #22                 // Method org/apache/hadoop/ipc/RPC.getProtocolName:(Ljava/lang/Class;)Ljava/lang/String;
       4: astore_3
       5: getstatic     #20                 // Field PROTOCOL_FINGERPRINT_CACHE:Ljava/util/HashMap;
       8: dup
       9: astore        4
      11: monitorenter
      12: getstatic     #20                 // Field PROTOCOL_FINGERPRINT_CACHE:Ljava/util/HashMap;
      15: aload_3
      16: invokevirtual #23                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #24                 // class org/apache/hadoop/ipc/ProtocolSignature$ProtocolSigFingerprint
      22: astore        5
      24: aload         5
      26: ifnonnull     72
      29: aload_0
      30: invokevirtual #25                 // Method java/lang/Class.getMethods:()[Ljava/lang/reflect/Method;
      33: invokestatic  #16                 // Method getFingerprints:([Ljava/lang/reflect/Method;)[I
      36: astore        6
      38: new           #24                 // class org/apache/hadoop/ipc/ProtocolSignature$ProtocolSigFingerprint
      41: dup
      42: new           #26                 // class org/apache/hadoop/ipc/ProtocolSignature
      45: dup
      46: lload_1
      47: aload         6
      49: invokespecial #27                 // Method "<init>":(J[I)V
      52: aload         6
      54: invokestatic  #17                 // Method getFingerprint:([I)I
      57: invokespecial #28                 // Method org/apache/hadoop/ipc/ProtocolSignature$ProtocolSigFingerprint."<init>":(Lorg/apache/hadoop/ipc/ProtocolSignature;I)V
      60: astore        5
      62: getstatic     #20                 // Field PROTOCOL_FINGERPRINT_CACHE:Ljava/util/HashMap;
      65: aload_3
      66: aload         5
      68: invokevirtual #29                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      71: pop
      72: aload         5
      74: aload         4
      76: monitorexit
      77: areturn
      78: astore        7
      80: aload         4
      82: monitorexit
      83: aload         7
      85: athrow
    Exception table:
       from    to  target type
          12    77    78   any
          78    83    78   any

  public static org.apache.hadoop.ipc.ProtocolSignature getProtocolSignature(int, long, java.lang.Class<? extends org.apache.hadoop.ipc.VersionedProtocol>);
    Code:
       0: aload_3
       1: lload_1
       2: invokestatic  #30                 // Method getSigFingerprint:(Ljava/lang/Class;J)Lorg/apache/hadoop/ipc/ProtocolSignature$ProtocolSigFingerprint;
       5: astore        4
       7: iload_0
       8: aload         4
      10: invokestatic  #31                 // Method org/apache/hadoop/ipc/ProtocolSignature$ProtocolSigFingerprint.access$000:(Lorg/apache/hadoop/ipc/ProtocolSignature$ProtocolSigFingerprint;)I
      13: if_icmpne     26
      16: new           #26                 // class org/apache/hadoop/ipc/ProtocolSignature
      19: dup
      20: lload_1
      21: aconst_null
      22: invokespecial #27                 // Method "<init>":(J[I)V
      25: areturn
      26: aload         4
      28: invokestatic  #32                 // Method org/apache/hadoop/ipc/ProtocolSignature$ProtocolSigFingerprint.access$100:(Lorg/apache/hadoop/ipc/ProtocolSignature$ProtocolSigFingerprint;)Lorg/apache/hadoop/ipc/ProtocolSignature;
      31: areturn

  public static org.apache.hadoop.ipc.ProtocolSignature getProtocolSignature(java.lang.String, long) throws java.lang.ClassNotFoundException;
    Code:
       0: aload_0
       1: invokestatic  #33                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
       4: astore_3
       5: aload_3
       6: lload_1
       7: invokestatic  #30                 // Method getSigFingerprint:(Ljava/lang/Class;J)Lorg/apache/hadoop/ipc/ProtocolSignature$ProtocolSigFingerprint;
      10: invokestatic  #32                 // Method org/apache/hadoop/ipc/ProtocolSignature$ProtocolSigFingerprint.access$100:(Lorg/apache/hadoop/ipc/ProtocolSignature$ProtocolSigFingerprint;)Lorg/apache/hadoop/ipc/ProtocolSignature;
      13: areturn

  public static org.apache.hadoop.ipc.ProtocolSignature getProtocolSignature(org.apache.hadoop.ipc.VersionedProtocol, java.lang.String, long, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #33                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
       4: astore        5
       6: goto          21
       9: astore        6
      11: new           #35                 // class java/io/IOException
      14: dup
      15: aload         6
      17: invokespecial #36                 // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
      20: athrow
      21: aload_0
      22: aload_1
      23: lload_2
      24: invokeinterface #37,  4           // InterfaceMethod org/apache/hadoop/ipc/VersionedProtocol.getProtocolVersion:(Ljava/lang/String;J)J
      29: lstore        6
      31: iload         4
      33: lload         6
      35: aload         5
      37: invokestatic  #38                 // Method getProtocolSignature:(IJLjava/lang/Class;)Lorg/apache/hadoop/ipc/ProtocolSignature;
      40: areturn
    Exception table:
       from    to  target type
           0     6     9   Class java/lang/Exception

  static {};
    Code:
       0: ldc           #26                 // class org/apache/hadoop/ipc/ProtocolSignature
       2: new           #39                 // class org/apache/hadoop/ipc/ProtocolSignature$1
       5: dup
       6: invokespecial #40                 // Method org/apache/hadoop/ipc/ProtocolSignature$1."<init>":()V
       9: invokestatic  #41                 // Method org/apache/hadoop/io/WritableFactories.setFactory:(Ljava/lang/Class;Lorg/apache/hadoop/io/WritableFactory;)V
      12: new           #42                 // class java/util/HashMap
      15: dup
      16: invokespecial #43                 // Method java/util/HashMap."<init>":()V
      19: putstatic     #20                 // Field PROTOCOL_FINGERPRINT_CACHE:Ljava/util/HashMap;
      22: return
}
