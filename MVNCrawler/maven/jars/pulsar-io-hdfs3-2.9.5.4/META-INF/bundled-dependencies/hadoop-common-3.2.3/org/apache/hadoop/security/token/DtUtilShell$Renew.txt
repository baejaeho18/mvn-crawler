Compiled from "DtUtilShell.java"
class org.apache.hadoop.security.token.DtUtilShell$Renew extends org.apache.hadoop.tools.CommandShell$SubCommand {
  public static final java.lang.String RENEW_USAGE;

  final org.apache.hadoop.security.token.DtUtilShell this$0;

  private org.apache.hadoop.security.token.DtUtilShell$Renew(org.apache.hadoop.security.token.DtUtilShell);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/apache/hadoop/security/token/DtUtilShell;
       5: aload_0
       6: aload_1
       7: invokespecial #3                  // Method org/apache/hadoop/tools/CommandShell$SubCommand."<init>":(Lorg/apache/hadoop/tools/CommandShell;)V
      10: return

  public boolean validate();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/apache/hadoop/security/token/DtUtilShell;
       4: invokestatic  #4                  // Method org/apache/hadoop/security/token/DtUtilShell.access$500:(Lorg/apache/hadoop/security/token/DtUtilShell;)Lorg/apache/hadoop/io/Text;
       7: ifnonnull     22
      10: invokestatic  #5                  // Method org/apache/hadoop/security/token/DtUtilShell.access$700:()Lorg/slf4j/Logger;
      13: ldc           #6                  // String -alias flag is not optional for renew
      15: invokeinterface #7,  2            // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
      20: iconst_0
      21: ireturn
      22: iconst_1
      23: ireturn

  public void execute() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/apache/hadoop/security/token/DtUtilShell;
       4: invokestatic  #8                  // Method org/apache/hadoop/security/token/DtUtilShell.access$400:(Lorg/apache/hadoop/security/token/DtUtilShell;)Ljava/util/ArrayList;
       7: invokevirtual #9                  // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      10: astore_1
      11: aload_1
      12: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      17: ifeq          58
      20: aload_1
      21: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      26: checkcast     #12                 // class java/io/File
      29: astore_2
      30: aload_2
      31: aload_0
      32: getfield      #2                  // Field this$0:Lorg/apache/hadoop/security/token/DtUtilShell;
      35: invokestatic  #13                 // Method org/apache/hadoop/security/token/DtUtilShell.access$900:(Lorg/apache/hadoop/security/token/DtUtilShell;)Ljava/lang/String;
      38: aload_0
      39: getfield      #2                  // Field this$0:Lorg/apache/hadoop/security/token/DtUtilShell;
      42: invokestatic  #4                  // Method org/apache/hadoop/security/token/DtUtilShell.access$500:(Lorg/apache/hadoop/security/token/DtUtilShell;)Lorg/apache/hadoop/io/Text;
      45: aload_0
      46: getfield      #2                  // Field this$0:Lorg/apache/hadoop/security/token/DtUtilShell;
      49: invokevirtual #14                 // Method org/apache/hadoop/security/token/DtUtilShell.getConf:()Lorg/apache/hadoop/conf/Configuration;
      52: invokestatic  #15                 // Method org/apache/hadoop/security/token/DtFileOperations.renewTokenFile:(Ljava/io/File;Ljava/lang/String;Lorg/apache/hadoop/io/Text;Lorg/apache/hadoop/conf/Configuration;)V
      55: goto          11
      58: return

  public java.lang.String getUsage();
    Code:
       0: ldc           #17                 // String dtutil renew -alias <alias> filename...
       2: areturn

  org.apache.hadoop.security.token.DtUtilShell$Renew(org.apache.hadoop.security.token.DtUtilShell, org.apache.hadoop.security.token.DtUtilShell$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lorg/apache/hadoop/security/token/DtUtilShell;)V
       5: return
}
