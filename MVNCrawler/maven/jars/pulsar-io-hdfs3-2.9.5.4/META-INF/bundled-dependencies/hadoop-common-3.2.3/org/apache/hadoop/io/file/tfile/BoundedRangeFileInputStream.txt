Compiled from "BoundedRangeFileInputStream.java"
public class org.apache.hadoop.io.file.tfile.BoundedRangeFileInputStream extends java.io.InputStream {
  private org.apache.hadoop.fs.FSDataInputStream in;

  private long pos;

  private long end;

  private long mark;

  private final byte[] oneByte;

  public org.apache.hadoop.io.file.tfile.BoundedRangeFileInputStream(org.apache.hadoop.fs.FSDataInputStream, long, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: iconst_1
       6: newarray       byte
       8: putfield      #2                  // Field oneByte:[B
      11: lload_2
      12: lconst_0
      13: lcmp
      14: iflt          24
      17: lload         4
      19: lconst_0
      20: lcmp
      21: ifge          61
      24: new           #3                  // class java/lang/IndexOutOfBoundsException
      27: dup
      28: new           #4                  // class java/lang/StringBuilder
      31: dup
      32: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      35: ldc           #6                  // String Invalid offset/length:
      37: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: lload_2
      41: invokevirtual #8                  // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      44: ldc           #9                  // String /
      46: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: lload         4
      51: invokevirtual #8                  // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      54: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: invokespecial #11                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      60: athrow
      61: aload_0
      62: aload_1
      63: putfield      #12                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
      66: aload_0
      67: lload_2
      68: putfield      #13                 // Field pos:J
      71: aload_0
      72: lload_2
      73: lload         4
      75: ladd
      76: putfield      #14                 // Field end:J
      79: aload_0
      80: ldc2_w        #15                 // long -1l
      83: putfield      #17                 // Field mark:J
      86: return

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
       4: invokevirtual #18                 // Method org/apache/hadoop/fs/FSDataInputStream.available:()I
       7: istore_1
       8: aload_0
       9: getfield      #13                 // Field pos:J
      12: iload_1
      13: i2l
      14: ladd
      15: aload_0
      16: getfield      #14                 // Field end:J
      19: lcmp
      20: ifle          34
      23: aload_0
      24: getfield      #14                 // Field end:J
      27: aload_0
      28: getfield      #13                 // Field pos:J
      31: lsub
      32: l2i
      33: istore_1
      34: iload_1
      35: ireturn

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field oneByte:[B
       5: invokevirtual #19                 // Method read:([B)I
       8: istore_1
       9: iload_1
      10: iconst_1
      11: if_icmpne     25
      14: aload_0
      15: getfield      #2                  // Field oneByte:[B
      18: iconst_0
      19: baload
      20: sipush        255
      23: iand
      24: ireturn
      25: iconst_m1
      26: ireturn

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #20                 // Method read:([BII)I
       8: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_2
       1: iload_3
       2: ior
       3: iload_2
       4: iload_3
       5: iadd
       6: ior
       7: aload_1
       8: arraylength
       9: iload_2
      10: iload_3
      11: iadd
      12: isub
      13: ior
      14: ifge          25
      17: new           #3                  // class java/lang/IndexOutOfBoundsException
      20: dup
      21: invokespecial #21                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      24: athrow
      25: ldc2_w        #23                 // long 2147483647l
      28: iload_3
      29: i2l
      30: aload_0
      31: getfield      #14                 // Field end:J
      34: aload_0
      35: getfield      #13                 // Field pos:J
      38: lsub
      39: invokestatic  #25                 // Method java/lang/Math.min:(JJ)J
      42: invokestatic  #25                 // Method java/lang/Math.min:(JJ)J
      45: l2i
      46: istore        4
      48: iload         4
      50: ifne          55
      53: iconst_m1
      54: ireturn
      55: iconst_0
      56: istore        5
      58: aload_0
      59: getfield      #12                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
      62: dup
      63: astore        6
      65: monitorenter
      66: aload_0
      67: getfield      #12                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
      70: aload_0
      71: getfield      #13                 // Field pos:J
      74: invokevirtual #26                 // Method org/apache/hadoop/fs/FSDataInputStream.seek:(J)V
      77: aload_0
      78: getfield      #12                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
      81: aload_1
      82: iload_2
      83: iload         4
      85: invokevirtual #27                 // Method org/apache/hadoop/fs/FSDataInputStream.read:([BII)I
      88: istore        5
      90: aload         6
      92: monitorexit
      93: goto          104
      96: astore        7
      98: aload         6
     100: monitorexit
     101: aload         7
     103: athrow
     104: iload         5
     106: ifge          119
     109: aload_0
     110: aload_0
     111: getfield      #13                 // Field pos:J
     114: putfield      #14                 // Field end:J
     117: iconst_m1
     118: ireturn
     119: aload_0
     120: dup
     121: getfield      #13                 // Field pos:J
     124: iload         5
     126: i2l
     127: ladd
     128: putfield      #13                 // Field pos:J
     131: iload         5
     133: ireturn
    Exception table:
       from    to  target type
          66    93    96   any
          96   101    96   any

  public long skip(long) throws java.io.IOException;
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #14                 // Field end:J
       5: aload_0
       6: getfield      #13                 // Field pos:J
       9: lsub
      10: invokestatic  #25                 // Method java/lang/Math.min:(JJ)J
      13: lstore_3
      14: aload_0
      15: dup
      16: getfield      #13                 // Field pos:J
      19: lload_3
      20: ladd
      21: putfield      #13                 // Field pos:J
      24: lload_3
      25: lreturn

  public synchronized void mark(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #13                 // Field pos:J
       5: putfield      #17                 // Field mark:J
       8: return

  public synchronized void reset() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field mark:J
       4: lconst_0
       5: lcmp
       6: ifge          19
       9: new           #28                 // class java/io/IOException
      12: dup
      13: ldc           #29                 // String Resetting to invalid mark
      15: invokespecial #30                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: aload_0
      21: getfield      #17                 // Field mark:J
      24: putfield      #13                 // Field pos:J
      27: return

  public boolean markSupported();
    Code:
       0: iconst_1
       1: ireturn

  public void close();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #12                 // Field in:Lorg/apache/hadoop/fs/FSDataInputStream;
       5: aload_0
       6: aload_0
       7: getfield      #14                 // Field end:J
      10: putfield      #13                 // Field pos:J
      13: aload_0
      14: ldc2_w        #15                 // long -1l
      17: putfield      #17                 // Field mark:J
      20: return
}
