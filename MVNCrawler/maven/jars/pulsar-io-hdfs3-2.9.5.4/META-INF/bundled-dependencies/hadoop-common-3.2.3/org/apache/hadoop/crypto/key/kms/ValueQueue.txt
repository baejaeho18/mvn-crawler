Compiled from "ValueQueue.java"
public class org.apache.hadoop.crypto.key.kms.ValueQueue<E> {
  private static final java.lang.String REFILL_THREAD;

  private static final int LOCK_ARRAY_SIZE;

  private static final int MASK;

  private final com.google.common.cache.LoadingCache<java.lang.String, java.util.concurrent.LinkedBlockingQueue<E>> keyQueues;

  private final java.util.List<java.util.concurrent.locks.ReadWriteLock> lockArray;

  private final java.util.concurrent.ThreadPoolExecutor executor;

  private final org.apache.hadoop.crypto.key.kms.ValueQueue$UniqueKeyBlockingQueue queue;

  private final org.apache.hadoop.crypto.key.kms.ValueQueue$QueueRefiller<E> refiller;

  private final org.apache.hadoop.crypto.key.kms.ValueQueue$SyncGenerationPolicy policy;

  private final int numValues;

  private final float lowWatermark;

  private volatile boolean executorThreadsStarted;

  private void readLock(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method getLock:(Ljava/lang/String;)Ljava/util/concurrent/locks/ReadWriteLock;
       5: invokeinterface #9,  1            // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;
      10: invokeinterface #10,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      15: return

  private void readUnlock(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method getLock:(Ljava/lang/String;)Ljava/util/concurrent/locks/ReadWriteLock;
       5: invokeinterface #9,  1            // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;
      10: invokeinterface #11,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      15: return

  private void writeUnlock(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method getLock:(Ljava/lang/String;)Ljava/util/concurrent/locks/ReadWriteLock;
       5: invokeinterface #12,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
      10: invokeinterface #11,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      15: return

  private void writeLock(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method getLock:(Ljava/lang/String;)Ljava/util/concurrent/locks/ReadWriteLock;
       5: invokeinterface #12,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
      10: invokeinterface #10,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      15: return

  private java.util.concurrent.locks.ReadWriteLock getLock(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #13                 // Field lockArray:Ljava/util/List;
       4: aload_1
       5: invokestatic  #14                 // Method indexFor:(Ljava/lang/String;)I
       8: invokeinterface #15,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      13: checkcast     #16                 // class java/util/concurrent/locks/ReadWriteLock
      16: areturn

  private static int indexFor(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method java/lang/String.hashCode:()I
       4: bipush        15
       6: iand
       7: ireturn

  public org.apache.hadoop.crypto.key.kms.ValueQueue(int, float, long, int, org.apache.hadoop.crypto.key.kms.ValueQueue$SyncGenerationPolicy, org.apache.hadoop.crypto.key.kms.ValueQueue$QueueRefiller<E>);
    Code:
       0: aload_0
       1: invokespecial #18                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #19                 // class java/util/ArrayList
       8: dup
       9: bipush        16
      11: invokespecial #20                 // Method java/util/ArrayList."<init>":(I)V
      14: putfield      #13                 // Field lockArray:Ljava/util/List;
      17: aload_0
      18: new           #21                 // class org/apache/hadoop/crypto/key/kms/ValueQueue$UniqueKeyBlockingQueue
      21: dup
      22: aconst_null
      23: invokespecial #22                 // Method org/apache/hadoop/crypto/key/kms/ValueQueue$UniqueKeyBlockingQueue."<init>":(Lorg/apache/hadoop/crypto/key/kms/ValueQueue$1;)V
      26: putfield      #23                 // Field queue:Lorg/apache/hadoop/crypto/key/kms/ValueQueue$UniqueKeyBlockingQueue;
      29: aload_0
      30: iconst_0
      31: putfield      #24                 // Field executorThreadsStarted:Z
      34: iload_1
      35: ifle          42
      38: iconst_1
      39: goto          43
      42: iconst_0
      43: ldc           #25                 // String \"numValues\" must be > 0
      45: invokestatic  #26                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      48: fload_2
      49: fconst_0
      50: fcmpl
      51: ifle          64
      54: fload_2
      55: fconst_1
      56: fcmpg
      57: ifgt          64
      60: iconst_1
      61: goto          65
      64: iconst_0
      65: ldc           #27                 // String \"lowWatermark\" must be > 0 and <= 1
      67: invokestatic  #26                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      70: iload_1
      71: i2f
      72: fload_2
      73: fmul
      74: f2i
      75: istore        8
      77: iload         8
      79: ifle          86
      82: iconst_1
      83: goto          87
      86: iconst_0
      87: ldc           #28                 // String (int) (\"numValues\" * \"lowWatermark\") must be > 0
      89: invokestatic  #26                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      92: lload_3
      93: lconst_0
      94: lcmp
      95: ifle          102
      98: iconst_1
      99: goto          103
     102: iconst_0
     103: ldc           #29                 // String \"expiry\" must be > 0
     105: invokestatic  #26                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
     108: iload         5
     110: ifle          117
     113: iconst_1
     114: goto          118
     117: iconst_0
     118: ldc           #30                 // String \"numFillerThreads\" must be > 0
     120: invokestatic  #26                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
     123: aload         6
     125: ldc           #31                 // String \"policy\" must not be null
     127: invokestatic  #32                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     130: pop
     131: aload_0
     132: aload         7
     134: putfield      #4                  // Field refiller:Lorg/apache/hadoop/crypto/key/kms/ValueQueue$QueueRefiller;
     137: aload_0
     138: aload         6
     140: putfield      #33                 // Field policy:Lorg/apache/hadoop/crypto/key/kms/ValueQueue$SyncGenerationPolicy;
     143: aload_0
     144: iload_1
     145: putfield      #7                  // Field numValues:I
     148: aload_0
     149: fload_2
     150: putfield      #6                  // Field lowWatermark:F
     153: iconst_0
     154: istore        9
     156: iload         9
     158: bipush        16
     160: if_icmpge     187
     163: aload_0
     164: getfield      #13                 // Field lockArray:Ljava/util/List;
     167: iload         9
     169: new           #34                 // class java/util/concurrent/locks/ReentrantReadWriteLock
     172: dup
     173: invokespecial #35                 // Method java/util/concurrent/locks/ReentrantReadWriteLock."<init>":()V
     176: invokeinterface #36,  3           // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
     181: iinc          9, 1
     184: goto          156
     187: aload_0
     188: invokestatic  #37                 // Method com/google/common/cache/CacheBuilder.newBuilder:()Lcom/google/common/cache/CacheBuilder;
     191: lload_3
     192: getstatic     #38                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     195: invokevirtual #39                 // Method com/google/common/cache/CacheBuilder.expireAfterAccess:(JLjava/util/concurrent/TimeUnit;)Lcom/google/common/cache/CacheBuilder;
     198: new           #40                 // class org/apache/hadoop/crypto/key/kms/ValueQueue$1
     201: dup
     202: aload_0
     203: aload         7
     205: iload         8
     207: invokespecial #41                 // Method org/apache/hadoop/crypto/key/kms/ValueQueue$1."<init>":(Lorg/apache/hadoop/crypto/key/kms/ValueQueue;Lorg/apache/hadoop/crypto/key/kms/ValueQueue$QueueRefiller;I)V
     210: invokevirtual #42                 // Method com/google/common/cache/CacheBuilder.build:(Lcom/google/common/cache/CacheLoader;)Lcom/google/common/cache/LoadingCache;
     213: putfield      #43                 // Field keyQueues:Lcom/google/common/cache/LoadingCache;
     216: aload_0
     217: new           #44                 // class java/util/concurrent/ThreadPoolExecutor
     220: dup
     221: iload         5
     223: iload         5
     225: lconst_0
     226: getstatic     #38                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     229: aload_0
     230: getfield      #23                 // Field queue:Lorg/apache/hadoop/crypto/key/kms/ValueQueue$UniqueKeyBlockingQueue;
     233: new           #45                 // class com/google/common/util/concurrent/ThreadFactoryBuilder
     236: dup
     237: invokespecial #46                 // Method com/google/common/util/concurrent/ThreadFactoryBuilder."<init>":()V
     240: iconst_1
     241: invokevirtual #47                 // Method com/google/common/util/concurrent/ThreadFactoryBuilder.setDaemon:(Z)Lcom/google/common/util/concurrent/ThreadFactoryBuilder;
     244: getstatic     #48                 // Field REFILL_THREAD:Ljava/lang/String;
     247: invokevirtual #49                 // Method com/google/common/util/concurrent/ThreadFactoryBuilder.setNameFormat:(Ljava/lang/String;)Lcom/google/common/util/concurrent/ThreadFactoryBuilder;
     250: invokevirtual #50                 // Method com/google/common/util/concurrent/ThreadFactoryBuilder.build:()Ljava/util/concurrent/ThreadFactory;
     253: invokespecial #51                 // Method java/util/concurrent/ThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V
     256: putfield      #52                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
     259: return

  public org.apache.hadoop.crypto.key.kms.ValueQueue(int, float, long, int, org.apache.hadoop.crypto.key.kms.ValueQueue$QueueRefiller<E>);
    Code:
       0: aload_0
       1: iload_1
       2: fload_2
       3: lload_3
       4: iload         5
       6: getstatic     #53                 // Field org/apache/hadoop/crypto/key/kms/ValueQueue$SyncGenerationPolicy.ALL:Lorg/apache/hadoop/crypto/key/kms/ValueQueue$SyncGenerationPolicy;
       9: aload         6
      11: invokespecial #54                 // Method "<init>":(IFJILorg/apache/hadoop/crypto/key/kms/ValueQueue$SyncGenerationPolicy;Lorg/apache/hadoop/crypto/key/kms/ValueQueue$QueueRefiller;)V
      14: return

  public void initializeQueuesForKeys(java.lang.String...) throws java.util.concurrent.ExecutionException;
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     38
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: aload_0
      21: getfield      #43                 // Field keyQueues:Lcom/google/common/cache/LoadingCache;
      24: aload         5
      26: invokeinterface #55,  2           // InterfaceMethod com/google/common/cache/LoadingCache.get:(Ljava/lang/Object;)Ljava/lang/Object;
      31: pop
      32: iinc          4, 1
      35: goto          8
      38: return

  public E getNext(java.lang.String) throws java.io.IOException, java.util.concurrent.ExecutionException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokevirtual #56                 // Method getAtMost:(Ljava/lang/String;I)Ljava/util/List;
       6: iconst_0
       7: invokeinterface #15,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      12: areturn

  public void drain(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #23                 // Field queue:Lorg/apache/hadoop/crypto/key/kms/ValueQueue$UniqueKeyBlockingQueue;
       4: aload_1
       5: invokevirtual #57                 // Method org/apache/hadoop/crypto/key/kms/ValueQueue$UniqueKeyBlockingQueue.deleteByName:(Ljava/lang/String;)Ljava/lang/Runnable;
       8: dup
       9: astore_2
      10: ifnull        25
      13: aload_0
      14: getfield      #52                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
      17: aload_2
      18: invokevirtual #58                 // Method java/util/concurrent/ThreadPoolExecutor.remove:(Ljava/lang/Runnable;)Z
      21: pop
      22: goto          0
      25: aload_0
      26: aload_1
      27: invokespecial #5                  // Method writeLock:(Ljava/lang/String;)V
      30: aload_0
      31: getfield      #43                 // Field keyQueues:Lcom/google/common/cache/LoadingCache;
      34: aload_1
      35: invokeinterface #55,  2           // InterfaceMethod com/google/common/cache/LoadingCache.get:(Ljava/lang/Object;)Ljava/lang/Object;
      40: checkcast     #59                 // class java/util/concurrent/LinkedBlockingQueue
      43: invokevirtual #60                 // Method java/util/concurrent/LinkedBlockingQueue.clear:()V
      46: aload_0
      47: aload_1
      48: invokespecial #3                  // Method writeUnlock:(Ljava/lang/String;)V
      51: goto          62
      54: astore_3
      55: aload_0
      56: aload_1
      57: invokespecial #3                  // Method writeUnlock:(Ljava/lang/String;)V
      60: aload_3
      61: athrow
      62: goto          66
      65: astore_2
      66: return
    Exception table:
       from    to  target type
          30    46    54   any
           0    62    65   Class java/util/concurrent/ExecutionException

  public int getSize(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #62                 // Method readLock:(Ljava/lang/String;)V
       5: aload_0
       6: getfield      #43                 // Field keyQueues:Lcom/google/common/cache/LoadingCache;
       9: iconst_1
      10: anewarray     #63                 // class java/lang/String
      13: dup
      14: iconst_0
      15: aload_1
      16: aastore
      17: invokestatic  #64                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      20: invokeinterface #65,  2           // InterfaceMethod com/google/common/cache/LoadingCache.getAllPresent:(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableMap;
      25: astore_2
      26: aload_2
      27: aload_1
      28: invokeinterface #66,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      33: ifnonnull     45
      36: iconst_0
      37: istore_3
      38: aload_0
      39: aload_1
      40: invokespecial #67                 // Method readUnlock:(Ljava/lang/String;)V
      43: iload_3
      44: ireturn
      45: aload_2
      46: aload_1
      47: invokeinterface #66,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      52: checkcast     #59                 // class java/util/concurrent/LinkedBlockingQueue
      55: invokevirtual #68                 // Method java/util/concurrent/LinkedBlockingQueue.size:()I
      58: istore_3
      59: aload_0
      60: aload_1
      61: invokespecial #67                 // Method readUnlock:(Ljava/lang/String;)V
      64: iload_3
      65: ireturn
      66: astore        4
      68: aload_0
      69: aload_1
      70: invokespecial #67                 // Method readUnlock:(Ljava/lang/String;)V
      73: aload         4
      75: athrow
    Exception table:
       from    to  target type
           5    38    66   any
          45    59    66   any
          66    68    66   any

  public java.util.List<E> getAtMost(java.lang.String, int) throws java.io.IOException, java.util.concurrent.ExecutionException;
    Code:
       0: aload_0
       1: getfield      #43                 // Field keyQueues:Lcom/google/common/cache/LoadingCache;
       4: aload_1
       5: invokeinterface #55,  2           // InterfaceMethod com/google/common/cache/LoadingCache.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #59                 // class java/util/concurrent/LinkedBlockingQueue
      13: astore_3
      14: new           #69                 // class java/util/LinkedList
      17: dup
      18: invokespecial #70                 // Method java/util/LinkedList."<init>":()V
      21: astore        4
      23: iconst_0
      24: istore        5
      26: iload         5
      28: iload_2
      29: if_icmpge     182
      32: aload_0
      33: aload_1
      34: invokespecial #62                 // Method readLock:(Ljava/lang/String;)V
      37: aload_3
      38: invokevirtual #71                 // Method java/util/concurrent/LinkedBlockingQueue.poll:()Ljava/lang/Object;
      41: astore        6
      43: aload_0
      44: aload_1
      45: invokespecial #67                 // Method readUnlock:(Ljava/lang/String;)V
      48: aload         6
      50: ifnonnull     168
      53: iconst_0
      54: istore        7
      56: getstatic     #72                 // Field org/apache/hadoop/crypto/key/kms/ValueQueue$3.$SwitchMap$org$apache$hadoop$crypto$key$kms$ValueQueue$SyncGenerationPolicy:[I
      59: aload_0
      60: getfield      #33                 // Field policy:Lorg/apache/hadoop/crypto/key/kms/ValueQueue$SyncGenerationPolicy;
      63: invokevirtual #73                 // Method org/apache/hadoop/crypto/key/kms/ValueQueue$SyncGenerationPolicy.ordinal:()I
      66: iaload
      67: tableswitch   { // 1 to 3
                     1: 92
                     2: 111
                     3: 137
               default: 146
          }
      92: aload         4
      94: invokevirtual #74                 // Method java/util/LinkedList.size:()I
      97: iconst_1
      98: if_icmpge     105
     101: iconst_1
     102: goto          106
     105: iconst_0
     106: istore        7
     108: goto          146
     111: iload_2
     112: aload_0
     113: getfield      #6                  // Field lowWatermark:F
     116: aload_0
     117: getfield      #7                  // Field numValues:I
     120: i2f
     121: fmul
     122: f2i
     123: invokestatic  #75                 // Method java/lang/Math.min:(II)I
     126: aload         4
     128: invokevirtual #74                 // Method java/util/LinkedList.size:()I
     131: isub
     132: istore        7
     134: goto          146
     137: iload_2
     138: aload         4
     140: invokevirtual #74                 // Method java/util/LinkedList.size:()I
     143: isub
     144: istore        7
     146: iload         7
     148: ifle          182
     151: aload_0
     152: getfield      #4                  // Field refiller:Lorg/apache/hadoop/crypto/key/kms/ValueQueue$QueueRefiller;
     155: aload_1
     156: aload         4
     158: iload         7
     160: invokeinterface #76,  4           // InterfaceMethod org/apache/hadoop/crypto/key/kms/ValueQueue$QueueRefiller.fillQueueForKey:(Ljava/lang/String;Ljava/util/Queue;I)V
     165: goto          182
     168: aload         4
     170: aload         6
     172: invokevirtual #77                 // Method java/util/LinkedList.add:(Ljava/lang/Object;)Z
     175: pop
     176: iinc          5, 1
     179: goto          26
     182: aload_3
     183: invokevirtual #68                 // Method java/util/concurrent/LinkedBlockingQueue.size:()I
     186: aload_0
     187: getfield      #6                  // Field lowWatermark:F
     190: aload_0
     191: getfield      #7                  // Field numValues:I
     194: i2f
     195: fmul
     196: f2i
     197: if_icmpge     206
     200: aload_0
     201: aload_1
     202: aload_3
     203: invokespecial #78                 // Method submitRefillTask:(Ljava/lang/String;Ljava/util/Queue;)V
     206: goto          223
     209: astore        5
     211: new           #80                 // class java/io/IOException
     214: dup
     215: ldc           #81                 // String Exception while contacting value generator
     217: aload         5
     219: invokespecial #82                 // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     222: athrow
     223: aload         4
     225: areturn
    Exception table:
       from    to  target type
          23   206   209   Class java/lang/Exception

  private void submitRefillTask(java.lang.String, java.util.Queue<E>) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #24                 // Field executorThreadsStarted:Z
       4: ifne          43
       7: aload_0
       8: dup
       9: astore_3
      10: monitorenter
      11: aload_0
      12: getfield      #24                 // Field executorThreadsStarted:Z
      15: ifne          31
      18: aload_0
      19: getfield      #52                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
      22: invokevirtual #83                 // Method java/util/concurrent/ThreadPoolExecutor.prestartAllCoreThreads:()I
      25: pop
      26: aload_0
      27: iconst_1
      28: putfield      #24                 // Field executorThreadsStarted:Z
      31: aload_3
      32: monitorexit
      33: goto          43
      36: astore        4
      38: aload_3
      39: monitorexit
      40: aload         4
      42: athrow
      43: aload_0
      44: getfield      #23                 // Field queue:Lorg/apache/hadoop/crypto/key/kms/ValueQueue$UniqueKeyBlockingQueue;
      47: new           #84                 // class org/apache/hadoop/crypto/key/kms/ValueQueue$2
      50: dup
      51: aload_0
      52: aload_1
      53: aload_1
      54: aload_2
      55: invokespecial #85                 // Method org/apache/hadoop/crypto/key/kms/ValueQueue$2."<init>":(Lorg/apache/hadoop/crypto/key/kms/ValueQueue;Ljava/lang/String;Ljava/lang/String;Ljava/util/Queue;)V
      58: invokevirtual #86                 // Method org/apache/hadoop/crypto/key/kms/ValueQueue$UniqueKeyBlockingQueue.put:(Ljava/lang/Runnable;)V
      61: return
    Exception table:
       from    to  target type
          11    33    36   any
          36    40    36   any

  public void shutdown();
    Code:
       0: aload_0
       1: getfield      #52                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
       4: invokevirtual #87                 // Method java/util/concurrent/ThreadPoolExecutor.shutdownNow:()Ljava/util/List;
       7: pop
       8: return

  static int access$200(org.apache.hadoop.crypto.key.kms.ValueQueue);
    Code:
       0: aload_0
       1: getfield      #7                  // Field numValues:I
       4: ireturn

  static float access$300(org.apache.hadoop.crypto.key.kms.ValueQueue);
    Code:
       0: aload_0
       1: getfield      #6                  // Field lowWatermark:F
       4: freturn

  static void access$400(org.apache.hadoop.crypto.key.kms.ValueQueue, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method writeLock:(Ljava/lang/String;)V
       5: return

  static org.apache.hadoop.crypto.key.kms.ValueQueue$QueueRefiller access$500(org.apache.hadoop.crypto.key.kms.ValueQueue);
    Code:
       0: aload_0
       1: getfield      #4                  // Field refiller:Lorg/apache/hadoop/crypto/key/kms/ValueQueue$QueueRefiller;
       4: areturn

  static void access$600(org.apache.hadoop.crypto.key.kms.ValueQueue, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method writeUnlock:(Ljava/lang/String;)V
       5: return

  static {};
    Code:
       0: new           #88                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #89                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #1                  // class org/apache/hadoop/crypto/key/kms/ValueQueue
       9: invokevirtual #90                 // Method java/lang/Class.getName:()Ljava/lang/String;
      12: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: ldc           #92                 // String _thread
      17: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: invokevirtual #93                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: putstatic     #48                 // Field REFILL_THREAD:Ljava/lang/String;
      26: return
}
