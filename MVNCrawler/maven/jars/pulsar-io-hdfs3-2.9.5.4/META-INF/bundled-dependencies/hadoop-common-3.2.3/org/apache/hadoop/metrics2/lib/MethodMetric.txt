Compiled from "MethodMetric.java"
class org.apache.hadoop.metrics2.lib.MethodMetric extends org.apache.hadoop.metrics2.lib.MutableMetric {
  private static final org.slf4j.Logger LOG;

  private final java.lang.Object obj;

  private final java.lang.reflect.Method method;

  private final org.apache.hadoop.metrics2.MetricsInfo info;

  private final org.apache.hadoop.metrics2.lib.MutableMetric impl;

  org.apache.hadoop.metrics2.lib.MethodMetric(java.lang.Object, java.lang.reflect.Method, org.apache.hadoop.metrics2.MetricsInfo, org.apache.hadoop.metrics2.annotation.Metric$Type);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method org/apache/hadoop/metrics2/lib/MutableMetric."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #6                  // String object
       8: invokestatic  #7                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: putfield      #4                  // Field obj:Ljava/lang/Object;
      14: aload_0
      15: aload_2
      16: aload_2
      17: invokevirtual #8                  // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
      20: arraylength
      21: ifne          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ldc           #9                  // String Metric method should have no arguments
      31: invokestatic  #10                 // Method org/apache/hadoop/metrics2/util/Contracts.checkArg:(Ljava/lang/Object;ZLjava/lang/Object;)Ljava/lang/Object;
      34: checkcast     #11                 // class java/lang/reflect/Method
      37: putfield      #3                  // Field method:Ljava/lang/reflect/Method;
      40: aload_0
      41: getfield      #3                  // Field method:Ljava/lang/reflect/Method;
      44: iconst_1
      45: invokevirtual #12                 // Method java/lang/reflect/Method.setAccessible:(Z)V
      48: aload_0
      49: aload_3
      50: ldc           #13                 // String info
      52: invokestatic  #7                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      55: checkcast     #14                 // class org/apache/hadoop/metrics2/MetricsInfo
      58: putfield      #2                  // Field info:Lorg/apache/hadoop/metrics2/MetricsInfo;
      61: aload_0
      62: aload_0
      63: aload         4
      65: ldc           #15                 // String metric type
      67: invokestatic  #7                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      70: checkcast     #16                 // class org/apache/hadoop/metrics2/annotation/Metric$Type
      73: invokespecial #17                 // Method newImpl:(Lorg/apache/hadoop/metrics2/annotation/Metric$Type;)Lorg/apache/hadoop/metrics2/lib/MutableMetric;
      76: putfield      #18                 // Field impl:Lorg/apache/hadoop/metrics2/lib/MutableMetric;
      79: return

  private org.apache.hadoop.metrics2.lib.MutableMetric newImpl(org.apache.hadoop.metrics2.annotation.Metric$Type);
    Code:
       0: aload_0
       1: getfield      #3                  // Field method:Ljava/lang/reflect/Method;
       4: invokevirtual #19                 // Method java/lang/reflect/Method.getReturnType:()Ljava/lang/Class;
       7: astore_2
       8: getstatic     #20                 // Field org/apache/hadoop/metrics2/lib/MethodMetric$4.$SwitchMap$org$apache$hadoop$metrics2$annotation$Metric$Type:[I
      11: aload_1
      12: invokevirtual #21                 // Method org/apache/hadoop/metrics2/annotation/Metric$Type.ordinal:()I
      15: iaload
      16: tableswitch   { // 1 to 4
                     1: 48
                     2: 54
                     3: 60
                     4: 80
               default: 86
          }
      48: aload_0
      49: aload_2
      50: invokevirtual #22                 // Method newCounter:(Ljava/lang/Class;)Lorg/apache/hadoop/metrics2/lib/MutableMetric;
      53: areturn
      54: aload_0
      55: aload_2
      56: invokevirtual #23                 // Method newGauge:(Ljava/lang/Class;)Lorg/apache/hadoop/metrics2/lib/MutableMetric;
      59: areturn
      60: aload_2
      61: ldc           #24                 // class java/lang/String
      63: if_acmpne     74
      66: aload_0
      67: aload_2
      68: invokevirtual #25                 // Method newTag:(Ljava/lang/Class;)Lorg/apache/hadoop/metrics2/lib/MutableMetric;
      71: goto          79
      74: aload_0
      75: aload_2
      76: invokevirtual #23                 // Method newGauge:(Ljava/lang/Class;)Lorg/apache/hadoop/metrics2/lib/MutableMetric;
      79: areturn
      80: aload_0
      81: aload_2
      82: invokevirtual #25                 // Method newTag:(Ljava/lang/Class;)Lorg/apache/hadoop/metrics2/lib/MutableMetric;
      85: areturn
      86: aload_1
      87: iconst_0
      88: ldc           #26                 // String unsupported metric type
      90: invokestatic  #10                 // Method org/apache/hadoop/metrics2/util/Contracts.checkArg:(Ljava/lang/Object;ZLjava/lang/Object;)Ljava/lang/Object;
      93: pop
      94: aconst_null
      95: areturn

  org.apache.hadoop.metrics2.lib.MutableMetric newCounter(java.lang.Class<?>);
    Code:
       0: aload_1
       1: invokestatic  #27                 // Method isInt:(Ljava/lang/Class;)Z
       4: ifne          14
       7: aload_1
       8: invokestatic  #28                 // Method isLong:(Ljava/lang/Class;)Z
      11: ifeq          24
      14: new           #29                 // class org/apache/hadoop/metrics2/lib/MethodMetric$1
      17: dup
      18: aload_0
      19: aload_1
      20: invokespecial #30                 // Method org/apache/hadoop/metrics2/lib/MethodMetric$1."<init>":(Lorg/apache/hadoop/metrics2/lib/MethodMetric;Ljava/lang/Class;)V
      23: areturn
      24: new           #31                 // class org/apache/hadoop/metrics2/MetricsException
      27: dup
      28: new           #32                 // class java/lang/StringBuilder
      31: dup
      32: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      35: ldc           #34                 // String Unsupported counter type:
      37: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_1
      41: invokevirtual #36                 // Method java/lang/Class.getName:()Ljava/lang/String;
      44: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokespecial #38                 // Method org/apache/hadoop/metrics2/MetricsException."<init>":(Ljava/lang/String;)V
      53: athrow

  static boolean isInt(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getstatic     #39                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
       4: if_acmpeq     13
       7: aload_0
       8: ldc           #40                 // class java/lang/Integer
      10: if_acmpne     17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: istore_1
      19: iload_1
      20: ireturn

  static boolean isLong(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getstatic     #41                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
       4: if_acmpeq     13
       7: aload_0
       8: ldc           #42                 // class java/lang/Long
      10: if_acmpne     17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  static boolean isFloat(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getstatic     #43                 // Field java/lang/Float.TYPE:Ljava/lang/Class;
       4: if_acmpeq     13
       7: aload_0
       8: ldc           #44                 // class java/lang/Float
      10: if_acmpne     17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  static boolean isDouble(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getstatic     #45                 // Field java/lang/Double.TYPE:Ljava/lang/Class;
       4: if_acmpeq     13
       7: aload_0
       8: ldc           #46                 // class java/lang/Double
      10: if_acmpne     17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  org.apache.hadoop.metrics2.lib.MutableMetric newGauge(java.lang.Class<?>);
    Code:
       0: aload_1
       1: invokestatic  #27                 // Method isInt:(Ljava/lang/Class;)Z
       4: ifne          28
       7: aload_1
       8: invokestatic  #28                 // Method isLong:(Ljava/lang/Class;)Z
      11: ifne          28
      14: aload_1
      15: invokestatic  #47                 // Method isFloat:(Ljava/lang/Class;)Z
      18: ifne          28
      21: aload_1
      22: invokestatic  #48                 // Method isDouble:(Ljava/lang/Class;)Z
      25: ifeq          38
      28: new           #49                 // class org/apache/hadoop/metrics2/lib/MethodMetric$2
      31: dup
      32: aload_0
      33: aload_1
      34: invokespecial #50                 // Method org/apache/hadoop/metrics2/lib/MethodMetric$2."<init>":(Lorg/apache/hadoop/metrics2/lib/MethodMetric;Ljava/lang/Class;)V
      37: areturn
      38: new           #31                 // class org/apache/hadoop/metrics2/MetricsException
      41: dup
      42: new           #32                 // class java/lang/StringBuilder
      45: dup
      46: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      49: ldc           #51                 // String Unsupported gauge type:
      51: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_1
      55: invokevirtual #36                 // Method java/lang/Class.getName:()Ljava/lang/String;
      58: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: invokespecial #38                 // Method org/apache/hadoop/metrics2/MetricsException."<init>":(Ljava/lang/String;)V
      67: athrow

  org.apache.hadoop.metrics2.lib.MutableMetric newTag(java.lang.Class<?>);
    Code:
       0: aload_1
       1: ldc           #24                 // class java/lang/String
       3: if_acmpne     15
       6: new           #52                 // class org/apache/hadoop/metrics2/lib/MethodMetric$3
       9: dup
      10: aload_0
      11: invokespecial #53                 // Method org/apache/hadoop/metrics2/lib/MethodMetric$3."<init>":(Lorg/apache/hadoop/metrics2/lib/MethodMetric;)V
      14: areturn
      15: new           #31                 // class org/apache/hadoop/metrics2/MetricsException
      18: dup
      19: new           #32                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #54                 // String Unsupported tag type:
      28: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_1
      32: invokevirtual #36                 // Method java/lang/Class.getName:()Ljava/lang/String;
      35: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: invokespecial #38                 // Method org/apache/hadoop/metrics2/MetricsException."<init>":(Ljava/lang/String;)V
      44: athrow

  public void snapshot(org.apache.hadoop.metrics2.MetricsRecordBuilder, boolean);
    Code:
       0: aload_0
       1: getfield      #18                 // Field impl:Lorg/apache/hadoop/metrics2/lib/MutableMetric;
       4: aload_1
       5: iload_2
       6: invokevirtual #55                 // Method org/apache/hadoop/metrics2/lib/MutableMetric.snapshot:(Lorg/apache/hadoop/metrics2/MetricsRecordBuilder;Z)V
       9: return

  static org.apache.hadoop.metrics2.MetricsInfo metricInfo(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: invokestatic  #56                 // Method nameFrom:(Ljava/lang/reflect/Method;)Ljava/lang/String;
       4: new           #32                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #57                 // String Metric for
      13: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #58                 // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
      20: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: invokestatic  #59                 // Method org/apache/hadoop/metrics2/lib/Interns.info:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/metrics2/MetricsInfo;
      29: areturn

  static java.lang.String nameFrom(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: invokevirtual #58                 // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ldc           #60                 // String get
       8: invokevirtual #61                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      11: ifeq          23
      14: aload_1
      15: iconst_3
      16: invokevirtual #62                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      19: invokestatic  #63                 // Method org/apache/commons/lang3/StringUtils.capitalize:(Ljava/lang/String;)Ljava/lang/String;
      22: areturn
      23: aload_1
      24: invokestatic  #63                 // Method org/apache/commons/lang3/StringUtils.capitalize:(Ljava/lang/String;)Ljava/lang/String;
      27: areturn

  static java.lang.Object access$000(org.apache.hadoop.metrics2.lib.MethodMetric);
    Code:
       0: aload_0
       1: getfield      #4                  // Field obj:Ljava/lang/Object;
       4: areturn

  static java.lang.reflect.Method access$100(org.apache.hadoop.metrics2.lib.MethodMetric);
    Code:
       0: aload_0
       1: getfield      #3                  // Field method:Ljava/lang/reflect/Method;
       4: areturn

  static org.apache.hadoop.metrics2.MetricsInfo access$200(org.apache.hadoop.metrics2.lib.MethodMetric);
    Code:
       0: aload_0
       1: getfield      #2                  // Field info:Lorg/apache/hadoop/metrics2/MetricsInfo;
       4: areturn

  static org.slf4j.Logger access$300();
    Code:
       0: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static {};
    Code:
       0: ldc           #64                 // class org/apache/hadoop/metrics2/lib/MethodMetric
       2: invokestatic  #65                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       8: return
}
