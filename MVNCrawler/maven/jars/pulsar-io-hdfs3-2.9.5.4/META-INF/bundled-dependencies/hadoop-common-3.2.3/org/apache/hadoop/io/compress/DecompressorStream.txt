Compiled from "DecompressorStream.java"
public class org.apache.hadoop.io.compress.DecompressorStream extends org.apache.hadoop.io.compress.CompressionInputStream {
  private static final int MAX_INPUT_BUFFER_SIZE;

  private static final int MAX_SKIP_BUFFER_SIZE;

  private byte[] skipBytes;

  private byte[] oneByte;

  protected org.apache.hadoop.io.compress.Decompressor decompressor;

  protected byte[] buffer;

  protected boolean eof;

  protected boolean closed;

  private int lastBytesSent;

  static final boolean $assertionsDisabled;

  org.apache.hadoop.io.compress.DecompressorStream(java.io.InputStream, org.apache.hadoop.io.compress.Decompressor, int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/hadoop/io/compress/CompressionInputStream."<init>":(Ljava/io/InputStream;)V
       5: aload_0
       6: iconst_1
       7: newarray       byte
       9: putfield      #2                  // Field oneByte:[B
      12: aload_0
      13: aconst_null
      14: putfield      #3                  // Field decompressor:Lorg/apache/hadoop/io/compress/Decompressor;
      17: aload_0
      18: iconst_0
      19: putfield      #4                  // Field eof:Z
      22: aload_0
      23: iconst_0
      24: putfield      #5                  // Field closed:Z
      27: aload_0
      28: iconst_0
      29: putfield      #6                  // Field lastBytesSent:I
      32: aload_2
      33: ifnonnull     44
      36: new           #7                  // class java/lang/NullPointerException
      39: dup
      40: invokespecial #8                  // Method java/lang/NullPointerException."<init>":()V
      43: athrow
      44: iload_3
      45: ifgt          58
      48: new           #9                  // class java/lang/IllegalArgumentException
      51: dup
      52: ldc           #10                 // String Illegal bufferSize
      54: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      57: athrow
      58: aload_0
      59: aload_2
      60: putfield      #3                  // Field decompressor:Lorg/apache/hadoop/io/compress/Decompressor;
      63: aload_0
      64: iload_3
      65: newarray       byte
      67: putfield      #12                 // Field buffer:[B
      70: aload_0
      71: iload         4
      73: newarray       byte
      75: putfield      #13                 // Field skipBytes:[B
      78: return

  public org.apache.hadoop.io.compress.DecompressorStream(java.io.InputStream, org.apache.hadoop.io.compress.Decompressor, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: sipush        2048
       7: invokespecial #15                 // Method "<init>":(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/Decompressor;II)V
      10: return

  public org.apache.hadoop.io.compress.DecompressorStream(java.io.InputStream, org.apache.hadoop.io.compress.Decompressor) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: sipush        512
       6: invokespecial #16                 // Method "<init>":(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/Decompressor;I)V
       9: return

  protected org.apache.hadoop.io.compress.DecompressorStream(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/hadoop/io/compress/CompressionInputStream."<init>":(Ljava/io/InputStream;)V
       5: aload_0
       6: iconst_1
       7: newarray       byte
       9: putfield      #2                  // Field oneByte:[B
      12: aload_0
      13: aconst_null
      14: putfield      #3                  // Field decompressor:Lorg/apache/hadoop/io/compress/Decompressor;
      17: aload_0
      18: iconst_0
      19: putfield      #4                  // Field eof:Z
      22: aload_0
      23: iconst_0
      24: putfield      #5                  // Field closed:Z
      27: aload_0
      28: iconst_0
      29: putfield      #6                  // Field lastBytesSent:I
      32: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method checkStream:()V
       4: aload_0
       5: aload_0
       6: getfield      #2                  // Field oneByte:[B
       9: iconst_0
      10: aload_0
      11: getfield      #2                  // Field oneByte:[B
      14: arraylength
      15: invokevirtual #18                 // Method read:([BII)I
      18: iconst_m1
      19: if_icmpne     26
      22: iconst_m1
      23: goto          36
      26: aload_0
      27: getfield      #2                  // Field oneByte:[B
      30: iconst_0
      31: baload
      32: sipush        255
      35: iand
      36: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method checkStream:()V
       4: iload_2
       5: iload_3
       6: ior
       7: iload_2
       8: iload_3
       9: iadd
      10: ior
      11: aload_1
      12: arraylength
      13: iload_2
      14: iload_3
      15: iadd
      16: isub
      17: ior
      18: ifge          29
      21: new           #19                 // class java/lang/IndexOutOfBoundsException
      24: dup
      25: invokespecial #20                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      28: athrow
      29: iload_3
      30: ifne          35
      33: iconst_0
      34: ireturn
      35: aload_0
      36: aload_1
      37: iload_2
      38: iload_3
      39: invokevirtual #21                 // Method decompress:([BII)I
      42: ireturn

  protected int decompress(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field decompressor:Lorg/apache/hadoop/io/compress/Decompressor;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokeinterface #22,  4           // InterfaceMethod org/apache/hadoop/io/compress/Decompressor.decompress:([BII)I
      12: dup
      13: istore        4
      15: ifne          234
      18: aload_0
      19: getfield      #3                  // Field decompressor:Lorg/apache/hadoop/io/compress/Decompressor;
      22: invokeinterface #23,  1           // InterfaceMethod org/apache/hadoop/io/compress/Decompressor.needsDictionary:()Z
      27: ifeq          37
      30: aload_0
      31: iconst_1
      32: putfield      #4                  // Field eof:Z
      35: iconst_m1
      36: ireturn
      37: aload_0
      38: getfield      #3                  // Field decompressor:Lorg/apache/hadoop/io/compress/Decompressor;
      41: invokeinterface #24,  1           // InterfaceMethod org/apache/hadoop/io/compress/Decompressor.finished:()Z
      46: ifeq          175
      49: aload_0
      50: getfield      #3                  // Field decompressor:Lorg/apache/hadoop/io/compress/Decompressor;
      53: invokeinterface #25,  1           // InterfaceMethod org/apache/hadoop/io/compress/Decompressor.getRemaining:()I
      58: istore        5
      60: iload         5
      62: ifne          118
      65: aload_0
      66: invokevirtual #26                 // Method getCompressedData:()I
      69: istore        6
      71: iload         6
      73: iconst_m1
      74: if_icmpne     84
      77: aload_0
      78: iconst_1
      79: putfield      #4                  // Field eof:Z
      82: iconst_m1
      83: ireturn
      84: aload_0
      85: getfield      #3                  // Field decompressor:Lorg/apache/hadoop/io/compress/Decompressor;
      88: invokeinterface #27,  1           // InterfaceMethod org/apache/hadoop/io/compress/Decompressor.reset:()V
      93: aload_0
      94: getfield      #3                  // Field decompressor:Lorg/apache/hadoop/io/compress/Decompressor;
      97: aload_0
      98: getfield      #12                 // Field buffer:[B
     101: iconst_0
     102: iload         6
     104: invokeinterface #28,  4           // InterfaceMethod org/apache/hadoop/io/compress/Decompressor.setInput:([BII)V
     109: aload_0
     110: iload         6
     112: putfield      #6                  // Field lastBytesSent:I
     115: goto          172
     118: aload_0
     119: getfield      #3                  // Field decompressor:Lorg/apache/hadoop/io/compress/Decompressor;
     122: invokeinterface #27,  1           // InterfaceMethod org/apache/hadoop/io/compress/Decompressor.reset:()V
     127: aload_0
     128: getfield      #6                  // Field lastBytesSent:I
     131: iload         5
     133: isub
     134: istore        6
     136: getstatic     #29                 // Field $assertionsDisabled:Z
     139: ifne          155
     142: iload         6
     144: ifge          155
     147: new           #30                 // class java/lang/AssertionError
     150: dup
     151: invokespecial #31                 // Method java/lang/AssertionError."<init>":()V
     154: athrow
     155: aload_0
     156: getfield      #3                  // Field decompressor:Lorg/apache/hadoop/io/compress/Decompressor;
     159: aload_0
     160: getfield      #12                 // Field buffer:[B
     163: iload         6
     165: iload         5
     167: invokeinterface #28,  4           // InterfaceMethod org/apache/hadoop/io/compress/Decompressor.setInput:([BII)V
     172: goto          0
     175: aload_0
     176: getfield      #3                  // Field decompressor:Lorg/apache/hadoop/io/compress/Decompressor;
     179: invokeinterface #32,  1           // InterfaceMethod org/apache/hadoop/io/compress/Decompressor.needsInput:()Z
     184: ifeq          0
     187: aload_0
     188: invokevirtual #26                 // Method getCompressedData:()I
     191: istore        5
     193: iload         5
     195: iconst_m1
     196: if_icmpne     209
     199: new           #33                 // class java/io/EOFException
     202: dup
     203: ldc           #34                 // String Unexpected end of input stream
     205: invokespecial #35                 // Method java/io/EOFException."<init>":(Ljava/lang/String;)V
     208: athrow
     209: aload_0
     210: getfield      #3                  // Field decompressor:Lorg/apache/hadoop/io/compress/Decompressor;
     213: aload_0
     214: getfield      #12                 // Field buffer:[B
     217: iconst_0
     218: iload         5
     220: invokeinterface #28,  4           // InterfaceMethod org/apache/hadoop/io/compress/Decompressor.setInput:([BII)V
     225: aload_0
     226: iload         5
     228: putfield      #6                  // Field lastBytesSent:I
     231: goto          0
     234: iload         4
     236: ireturn

  protected int getCompressedData() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method checkStream:()V
       4: aload_0
       5: getfield      #36                 // Field in:Ljava/io/InputStream;
       8: aload_0
       9: getfield      #12                 // Field buffer:[B
      12: iconst_0
      13: aload_0
      14: getfield      #12                 // Field buffer:[B
      17: arraylength
      18: invokevirtual #37                 // Method java/io/InputStream.read:([BII)I
      21: ireturn

  protected void checkStream() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field closed:Z
       4: ifeq          17
       7: new           #38                 // class java/io/IOException
      10: dup
      11: ldc           #39                 // String Stream closed
      13: invokespecial #40                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  public void resetState() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field decompressor:Lorg/apache/hadoop/io/compress/Decompressor;
       4: invokeinterface #27,  1           // InterfaceMethod org/apache/hadoop/io/compress/Decompressor.reset:()V
       9: return

  public long skip(long) throws java.io.IOException;
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifge          16
       6: new           #9                  // class java/lang/IllegalArgumentException
       9: dup
      10: ldc           #41                 // String negative skip length
      12: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: aload_0
      17: invokevirtual #17                 // Method checkStream:()V
      20: iconst_0
      21: istore_3
      22: iload_3
      23: i2l
      24: lload_1
      25: lcmp
      26: ifge          78
      29: lload_1
      30: l2i
      31: iload_3
      32: isub
      33: aload_0
      34: getfield      #13                 // Field skipBytes:[B
      37: arraylength
      38: invokestatic  #42                 // Method java/lang/Math.min:(II)I
      41: istore        4
      43: aload_0
      44: aload_0
      45: getfield      #13                 // Field skipBytes:[B
      48: iconst_0
      49: iload         4
      51: invokevirtual #18                 // Method read:([BII)I
      54: istore        4
      56: iload         4
      58: iconst_m1
      59: if_icmpne     70
      62: aload_0
      63: iconst_1
      64: putfield      #4                  // Field eof:Z
      67: goto          78
      70: iload_3
      71: iload         4
      73: iadd
      74: istore_3
      75: goto          22
      78: iload_3
      79: i2l
      80: lreturn

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method checkStream:()V
       4: aload_0
       5: getfield      #4                  // Field eof:Z
       8: ifeq          15
      11: iconst_0
      12: goto          16
      15: iconst_1
      16: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field closed:Z
       4: ifne          27
       7: aload_0
       8: invokespecial #43                 // Method org/apache/hadoop/io/compress/CompressionInputStream.close:()V
      11: aload_0
      12: iconst_1
      13: putfield      #5                  // Field closed:Z
      16: goto          27
      19: astore_1
      20: aload_0
      21: iconst_1
      22: putfield      #5                  // Field closed:Z
      25: aload_1
      26: athrow
      27: return
    Exception table:
       from    to  target type
           7    11    19   any

  public boolean markSupported();
    Code:
       0: iconst_0
       1: ireturn

  public synchronized void mark(int);
    Code:
       0: return

  public synchronized void reset() throws java.io.IOException;
    Code:
       0: new           #38                 // class java/io/IOException
       3: dup
       4: ldc           #44                 // String mark/reset not supported
       6: invokespecial #40                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
       9: athrow

  static {};
    Code:
       0: ldc           #14                 // class org/apache/hadoop/io/compress/DecompressorStream
       2: invokevirtual #45                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #29                 // Field $assertionsDisabled:Z
      16: return
}
