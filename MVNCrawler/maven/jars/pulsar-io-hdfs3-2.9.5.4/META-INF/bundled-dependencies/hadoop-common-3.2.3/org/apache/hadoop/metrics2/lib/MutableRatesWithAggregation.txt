Compiled from "MutableRatesWithAggregation.java"
public class org.apache.hadoop.metrics2.lib.MutableRatesWithAggregation extends org.apache.hadoop.metrics2.lib.MutableMetric {
  static final org.slf4j.Logger LOG;

  private final java.util.Map<java.lang.String, org.apache.hadoop.metrics2.lib.MutableRate> globalMetrics;

  private final java.util.Set<java.lang.Class<?>> protocolCache;

  private final java.util.concurrent.ConcurrentLinkedDeque<java.lang.ref.WeakReference<java.util.concurrent.ConcurrentMap<java.lang.String, org.apache.hadoop.metrics2.lib.MutableRatesWithAggregation$ThreadSafeSampleStat>>> weakReferenceQueue;

  private final java.lang.ThreadLocal<java.util.concurrent.ConcurrentMap<java.lang.String, org.apache.hadoop.metrics2.lib.MutableRatesWithAggregation$ThreadSafeSampleStat>> threadLocalMetricsMap;

  public org.apache.hadoop.metrics2.lib.MutableRatesWithAggregation();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/metrics2/lib/MutableMetric."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field globalMetrics:Ljava/util/Map;
      15: aload_0
      16: invokestatic  #5                  // Method com/google/common/collect/Sets.newHashSet:()Ljava/util/HashSet;
      19: putfield      #6                  // Field protocolCache:Ljava/util/Set;
      22: aload_0
      23: new           #7                  // class java/util/concurrent/ConcurrentLinkedDeque
      26: dup
      27: invokespecial #8                  // Method java/util/concurrent/ConcurrentLinkedDeque."<init>":()V
      30: putfield      #9                  // Field weakReferenceQueue:Ljava/util/concurrent/ConcurrentLinkedDeque;
      33: aload_0
      34: new           #10                 // class java/lang/ThreadLocal
      37: dup
      38: invokespecial #11                 // Method java/lang/ThreadLocal."<init>":()V
      41: putfield      #12                 // Field threadLocalMetricsMap:Ljava/lang/ThreadLocal;
      44: return

  public void init(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field protocolCache:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #13,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      10: ifeq          14
      13: return
      14: aload_0
      15: getfield      #6                  // Field protocolCache:Ljava/util/Set;
      18: aload_1
      19: invokeinterface #14,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      24: pop
      25: aload_1
      26: invokevirtual #15                 // Method java/lang/Class.getDeclaredMethods:()[Ljava/lang/reflect/Method;
      29: astore_2
      30: aload_2
      31: arraylength
      32: istore_3
      33: iconst_0
      34: istore        4
      36: iload         4
      38: iload_3
      39: if_icmpge     78
      42: aload_2
      43: iload         4
      45: aaload
      46: astore        5
      48: aload         5
      50: invokevirtual #16                 // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
      53: astore        6
      55: getstatic     #17                 // Field LOG:Lorg/slf4j/Logger;
      58: aload         6
      60: invokeinterface #18,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      65: aload_0
      66: aload         6
      68: invokespecial #19                 // Method addMetricIfNotExists:(Ljava/lang/String;)Lorg/apache/hadoop/metrics2/lib/MutableRate;
      71: pop
      72: iinc          4, 1
      75: goto          36
      78: return

  public void add(java.lang.String, long);
    Code:
       0: aload_0
       1: getfield      #12                 // Field threadLocalMetricsMap:Ljava/lang/ThreadLocal;
       4: invokevirtual #20                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       7: checkcast     #21                 // class java/util/concurrent/ConcurrentMap
      10: astore        4
      12: aload         4
      14: ifnonnull     52
      17: new           #2                  // class java/util/concurrent/ConcurrentHashMap
      20: dup
      21: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      24: astore        4
      26: aload_0
      27: getfield      #12                 // Field threadLocalMetricsMap:Ljava/lang/ThreadLocal;
      30: aload         4
      32: invokevirtual #22                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      35: aload_0
      36: getfield      #9                  // Field weakReferenceQueue:Ljava/util/concurrent/ConcurrentLinkedDeque;
      39: new           #23                 // class java/lang/ref/WeakReference
      42: dup
      43: aload         4
      45: invokespecial #24                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
      48: invokevirtual #25                 // Method java/util/concurrent/ConcurrentLinkedDeque.add:(Ljava/lang/Object;)Z
      51: pop
      52: aload         4
      54: aload_1
      55: invokeinterface #26,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      60: checkcast     #27                 // class org/apache/hadoop/metrics2/lib/MutableRatesWithAggregation$ThreadSafeSampleStat
      63: astore        5
      65: aload         5
      67: ifnonnull     91
      70: new           #27                 // class org/apache/hadoop/metrics2/lib/MutableRatesWithAggregation$ThreadSafeSampleStat
      73: dup
      74: aconst_null
      75: invokespecial #28                 // Method org/apache/hadoop/metrics2/lib/MutableRatesWithAggregation$ThreadSafeSampleStat."<init>":(Lorg/apache/hadoop/metrics2/lib/MutableRatesWithAggregation$1;)V
      78: astore        5
      80: aload         4
      82: aload_1
      83: aload         5
      85: invokeinterface #29,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      90: pop
      91: aload         5
      93: lload_2
      94: l2d
      95: invokevirtual #30                 // Method org/apache/hadoop/metrics2/lib/MutableRatesWithAggregation$ThreadSafeSampleStat.add:(D)V
      98: return

  public synchronized void snapshot(org.apache.hadoop.metrics2.MetricsRecordBuilder, boolean);
    Code:
       0: aload_0
       1: getfield      #9                  // Field weakReferenceQueue:Ljava/util/concurrent/ConcurrentLinkedDeque;
       4: invokevirtual #31                 // Method java/util/concurrent/ConcurrentLinkedDeque.iterator:()Ljava/util/Iterator;
       7: astore_3
       8: aload_3
       9: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          57
      17: aload_3
      18: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #23                 // class java/lang/ref/WeakReference
      26: invokevirtual #34                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      29: checkcast     #21                 // class java/util/concurrent/ConcurrentMap
      32: astore        4
      34: aload         4
      36: ifnonnull     48
      39: aload_3
      40: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.remove:()V
      45: goto          54
      48: aload_0
      49: aload         4
      51: invokespecial #36                 // Method aggregateLocalStatesToGlobalMetrics:(Ljava/util/concurrent/ConcurrentMap;)V
      54: goto          8
      57: aload_0
      58: getfield      #4                  // Field globalMetrics:Ljava/util/Map;
      61: invokeinterface #37,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      66: invokeinterface #38,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      71: astore        4
      73: aload         4
      75: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      80: ifeq          105
      83: aload         4
      85: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      90: checkcast     #39                 // class org/apache/hadoop/metrics2/lib/MutableRate
      93: astore        5
      95: aload         5
      97: aload_1
      98: iload_2
      99: invokevirtual #40                 // Method org/apache/hadoop/metrics2/lib/MutableRate.snapshot:(Lorg/apache/hadoop/metrics2/MetricsRecordBuilder;Z)V
     102: goto          73
     105: return

  synchronized void collectThreadLocalStates();
    Code:
       0: aload_0
       1: getfield      #12                 // Field threadLocalMetricsMap:Ljava/lang/ThreadLocal;
       4: invokevirtual #20                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       7: checkcast     #21                 // class java/util/concurrent/ConcurrentMap
      10: astore_1
      11: aload_1
      12: ifnull        20
      15: aload_0
      16: aload_1
      17: invokespecial #36                 // Method aggregateLocalStatesToGlobalMetrics:(Ljava/util/concurrent/ConcurrentMap;)V
      20: return

  private void aggregateLocalStatesToGlobalMetrics(java.util.concurrent.ConcurrentMap<java.lang.String, org.apache.hadoop.metrics2.lib.MutableRatesWithAggregation$ThreadSafeSampleStat>);
    Code:
       0: aload_1
       1: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
       6: invokeinterface #42,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          67
      21: aload_2
      22: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #43                 // class java/util/Map$Entry
      30: astore_3
      31: aload_3
      32: invokeinterface #44,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      37: checkcast     #45                 // class java/lang/String
      40: astore        4
      42: aload_0
      43: aload         4
      45: invokespecial #19                 // Method addMetricIfNotExists:(Ljava/lang/String;)Lorg/apache/hadoop/metrics2/lib/MutableRate;
      48: astore        5
      50: aload_3
      51: invokeinterface #46,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      56: checkcast     #27                 // class org/apache/hadoop/metrics2/lib/MutableRatesWithAggregation$ThreadSafeSampleStat
      59: aload         5
      61: invokevirtual #47                 // Method org/apache/hadoop/metrics2/lib/MutableRatesWithAggregation$ThreadSafeSampleStat.snapshotInto:(Lorg/apache/hadoop/metrics2/lib/MutableRate;)V
      64: goto          12
      67: return

  java.util.Map<java.lang.String, org.apache.hadoop.metrics2.lib.MutableRate> getGlobalMetrics();
    Code:
       0: aload_0
       1: getfield      #4                  // Field globalMetrics:Ljava/util/Map;
       4: areturn

  private synchronized org.apache.hadoop.metrics2.lib.MutableRate addMetricIfNotExists(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field globalMetrics:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #48,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #39                 // class org/apache/hadoop/metrics2/lib/MutableRate
      13: astore_2
      14: aload_2
      15: ifnonnull     46
      18: new           #39                 // class org/apache/hadoop/metrics2/lib/MutableRate
      21: dup
      22: aload_1
      23: aload_1
      24: iconst_0
      25: invokespecial #49                 // Method org/apache/hadoop/metrics2/lib/MutableRate."<init>":(Ljava/lang/String;Ljava/lang/String;Z)V
      28: astore_2
      29: aload_2
      30: iconst_1
      31: invokevirtual #50                 // Method org/apache/hadoop/metrics2/lib/MutableRate.setUpdateTimeStamp:(Z)V
      34: aload_0
      35: getfield      #4                  // Field globalMetrics:Ljava/util/Map;
      38: aload_1
      39: aload_2
      40: invokeinterface #51,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      45: pop
      46: aload_2
      47: areturn

  static {};
    Code:
       0: ldc           #52                 // class org/apache/hadoop/metrics2/lib/MutableRatesWithAggregation
       2: invokestatic  #53                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #17                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
