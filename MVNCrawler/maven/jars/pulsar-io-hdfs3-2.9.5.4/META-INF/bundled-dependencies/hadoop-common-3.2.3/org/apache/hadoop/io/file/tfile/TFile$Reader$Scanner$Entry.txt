Compiled from "TFile.java"
public class org.apache.hadoop.io.file.tfile.TFile$Reader$Scanner$Entry implements java.lang.Comparable<org.apache.hadoop.io.file.tfile.RawComparable> {
  final org.apache.hadoop.io.file.tfile.TFile$Reader$Scanner this$0;

  public org.apache.hadoop.io.file.tfile.TFile$Reader$Scanner$Entry(org.apache.hadoop.io.file.tfile.TFile$Reader$Scanner);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: return

  public int getKeyLength();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;
       4: getfield      #4                  // Field org/apache/hadoop/io/file/tfile/TFile$Reader$Scanner.klen:I
       7: ireturn

  byte[] getKeyBuffer();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;
       4: getfield      #5                  // Field org/apache/hadoop/io/file/tfile/TFile$Reader$Scanner.keyBuffer:[B
       7: areturn

  public void get(org.apache.hadoop.io.BytesWritable, org.apache.hadoop.io.BytesWritable) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #6                  // Method getKey:(Lorg/apache/hadoop/io/BytesWritable;)I
       5: pop
       6: aload_0
       7: aload_2
       8: invokevirtual #7                  // Method getValue:(Lorg/apache/hadoop/io/BytesWritable;)J
      11: pop2
      12: return

  public int getKey(org.apache.hadoop.io.BytesWritable) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #8                  // Method getKeyLength:()I
       5: invokevirtual #9                  // Method org/apache/hadoop/io/BytesWritable.setSize:(I)V
       8: aload_0
       9: aload_1
      10: invokevirtual #10                 // Method org/apache/hadoop/io/BytesWritable.getBytes:()[B
      13: invokevirtual #11                 // Method getKey:([B)I
      16: pop
      17: aload_1
      18: invokevirtual #12                 // Method org/apache/hadoop/io/BytesWritable.getLength:()I
      21: ireturn

  public long getValue(org.apache.hadoop.io.BytesWritable) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method getValueStream:()Ljava/io/DataInputStream;
       4: astore_2
       5: iconst_0
       6: istore_3
       7: aload_0
       8: getfield      #2                  // Field this$0:Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;
      11: getfield      #14                 // Field org/apache/hadoop/io/file/tfile/TFile$Reader$Scanner.valueBufferInputStream:Lorg/apache/hadoop/io/file/tfile/Chunk$ChunkDecoder;
      14: invokevirtual #15                 // Method org/apache/hadoop/io/file/tfile/Chunk$ChunkDecoder.getRemain:()I
      17: dup
      18: istore        4
      20: ifle          50
      23: aload_1
      24: iload_3
      25: iload         4
      27: iadd
      28: invokevirtual #9                  // Method org/apache/hadoop/io/BytesWritable.setSize:(I)V
      31: aload_2
      32: aload_1
      33: invokevirtual #10                 // Method org/apache/hadoop/io/BytesWritable.getBytes:()[B
      36: iload_3
      37: iload         4
      39: invokevirtual #16                 // Method java/io/DataInputStream.readFully:([BII)V
      42: iload_3
      43: iload         4
      45: iadd
      46: istore_3
      47: goto          7
      50: aload_1
      51: invokevirtual #12                 // Method org/apache/hadoop/io/BytesWritable.getLength:()I
      54: i2l
      55: lstore        5
      57: aload_2
      58: invokevirtual #17                 // Method java/io/DataInputStream.close:()V
      61: lload         5
      63: lreturn
      64: astore        7
      66: aload_2
      67: invokevirtual #17                 // Method java/io/DataInputStream.close:()V
      70: aload         7
      72: athrow
    Exception table:
       from    to  target type
           7    57    64   any
          64    66    64   any

  public int writeKey(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field this$0:Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;
       5: getfield      #5                  // Field org/apache/hadoop/io/file/tfile/TFile$Reader$Scanner.keyBuffer:[B
       8: iconst_0
       9: aload_0
      10: getfield      #2                  // Field this$0:Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;
      13: getfield      #4                  // Field org/apache/hadoop/io/file/tfile/TFile$Reader$Scanner.klen:I
      16: invokevirtual #18                 // Method java/io/OutputStream.write:([BII)V
      19: aload_0
      20: getfield      #2                  // Field this$0:Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;
      23: getfield      #4                  // Field org/apache/hadoop/io/file/tfile/TFile$Reader$Scanner.klen:I
      26: ireturn

  public long writeValue(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method getValueStream:()Ljava/io/DataInputStream;
       4: astore_2
       5: lconst_0
       6: lstore_3
       7: aload_0
       8: getfield      #2                  // Field this$0:Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;
      11: getfield      #14                 // Field org/apache/hadoop/io/file/tfile/TFile$Reader$Scanner.valueBufferInputStream:Lorg/apache/hadoop/io/file/tfile/Chunk$ChunkDecoder;
      14: invokevirtual #15                 // Method org/apache/hadoop/io/file/tfile/Chunk$ChunkDecoder.getRemain:()I
      17: dup
      18: istore        5
      20: ifle          87
      23: iload         5
      25: ldc           #19                 // int 131072
      27: invokestatic  #20                 // Method java/lang/Math.min:(II)I
      30: istore        5
      32: aload_0
      33: getfield      #2                  // Field this$0:Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;
      36: getfield      #21                 // Field org/apache/hadoop/io/file/tfile/TFile$Reader$Scanner.valTransferBuffer:Lorg/apache/hadoop/io/BytesWritable;
      39: iload         5
      41: invokevirtual #9                  // Method org/apache/hadoop/io/BytesWritable.setSize:(I)V
      44: aload_2
      45: aload_0
      46: getfield      #2                  // Field this$0:Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;
      49: getfield      #21                 // Field org/apache/hadoop/io/file/tfile/TFile$Reader$Scanner.valTransferBuffer:Lorg/apache/hadoop/io/BytesWritable;
      52: invokevirtual #10                 // Method org/apache/hadoop/io/BytesWritable.getBytes:()[B
      55: iconst_0
      56: iload         5
      58: invokevirtual #16                 // Method java/io/DataInputStream.readFully:([BII)V
      61: aload_1
      62: aload_0
      63: getfield      #2                  // Field this$0:Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;
      66: getfield      #21                 // Field org/apache/hadoop/io/file/tfile/TFile$Reader$Scanner.valTransferBuffer:Lorg/apache/hadoop/io/BytesWritable;
      69: invokevirtual #10                 // Method org/apache/hadoop/io/BytesWritable.getBytes:()[B
      72: iconst_0
      73: iload         5
      75: invokevirtual #18                 // Method java/io/OutputStream.write:([BII)V
      78: lload_3
      79: iload         5
      81: i2l
      82: ladd
      83: lstore_3
      84: goto          7
      87: lload_3
      88: lstore        6
      90: aload_2
      91: invokevirtual #17                 // Method java/io/DataInputStream.close:()V
      94: lload         6
      96: lreturn
      97: astore        8
      99: aload_2
     100: invokevirtual #17                 // Method java/io/DataInputStream.close:()V
     103: aload         8
     105: athrow
    Exception table:
       from    to  target type
           7    90    97   any
          97    99    97   any

  public int getKey(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokevirtual #22                 // Method getKey:([BI)I
       6: ireturn

  public int getKey(byte[], int) throws java.io.IOException;
    Code:
       0: iload_2
       1: aload_1
       2: arraylength
       3: iload_2
       4: isub
       5: aload_0
       6: getfield      #2                  // Field this$0:Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;
       9: getfield      #4                  // Field org/apache/hadoop/io/file/tfile/TFile$Reader$Scanner.klen:I
      12: isub
      13: ior
      14: ifge          27
      17: new           #23                 // class java/lang/IndexOutOfBoundsException
      20: dup
      21: ldc           #24                 // String Buffer not enough to store the key
      23: invokespecial #25                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload_0
      28: getfield      #2                  // Field this$0:Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;
      31: getfield      #5                  // Field org/apache/hadoop/io/file/tfile/TFile$Reader$Scanner.keyBuffer:[B
      34: iconst_0
      35: aload_1
      36: iload_2
      37: aload_0
      38: getfield      #2                  // Field this$0:Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;
      41: getfield      #4                  // Field org/apache/hadoop/io/file/tfile/TFile$Reader$Scanner.klen:I
      44: invokestatic  #26                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      47: aload_0
      48: getfield      #2                  // Field this$0:Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;
      51: getfield      #4                  // Field org/apache/hadoop/io/file/tfile/TFile$Reader$Scanner.klen:I
      54: ireturn

  public java.io.DataInputStream getKeyStream();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;
       4: getfield      #27                 // Field org/apache/hadoop/io/file/tfile/TFile$Reader$Scanner.keyDataInputStream:Lorg/apache/hadoop/io/DataInputBuffer;
       7: aload_0
       8: getfield      #2                  // Field this$0:Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;
      11: getfield      #5                  // Field org/apache/hadoop/io/file/tfile/TFile$Reader$Scanner.keyBuffer:[B
      14: aload_0
      15: getfield      #2                  // Field this$0:Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;
      18: getfield      #4                  // Field org/apache/hadoop/io/file/tfile/TFile$Reader$Scanner.klen:I
      21: invokevirtual #28                 // Method org/apache/hadoop/io/DataInputBuffer.reset:([BI)V
      24: aload_0
      25: getfield      #2                  // Field this$0:Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;
      28: getfield      #27                 // Field org/apache/hadoop/io/file/tfile/TFile$Reader$Scanner.keyDataInputStream:Lorg/apache/hadoop/io/DataInputBuffer;
      31: areturn

  public int getValueLength();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;
       4: getfield      #29                 // Field org/apache/hadoop/io/file/tfile/TFile$Reader$Scanner.vlen:I
       7: iflt          18
      10: aload_0
      11: getfield      #2                  // Field this$0:Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;
      14: getfield      #29                 // Field org/apache/hadoop/io/file/tfile/TFile$Reader$Scanner.vlen:I
      17: ireturn
      18: new           #30                 // class java/lang/RuntimeException
      21: dup
      22: ldc           #31                 // String Value length unknown.
      24: invokespecial #32                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      27: athrow

  public int getValue(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokevirtual #33                 // Method getValue:([BI)I
       6: ireturn

  public int getValue(byte[], int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method getValueStream:()Ljava/io/DataInputStream;
       4: astore_3
       5: aload_0
       6: invokevirtual #34                 // Method isValueLengthKnown:()Z
       9: ifeq          68
      12: iload_2
      13: aload_1
      14: arraylength
      15: iload_2
      16: isub
      17: aload_0
      18: getfield      #2                  // Field this$0:Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;
      21: getfield      #29                 // Field org/apache/hadoop/io/file/tfile/TFile$Reader$Scanner.vlen:I
      24: isub
      25: ior
      26: ifge          39
      29: new           #23                 // class java/lang/IndexOutOfBoundsException
      32: dup
      33: ldc           #35                 // String Buffer too small to hold value
      35: invokespecial #25                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_3
      40: aload_1
      41: iload_2
      42: aload_0
      43: getfield      #2                  // Field this$0:Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;
      46: getfield      #29                 // Field org/apache/hadoop/io/file/tfile/TFile$Reader$Scanner.vlen:I
      49: invokevirtual #16                 // Method java/io/DataInputStream.readFully:([BII)V
      52: aload_0
      53: getfield      #2                  // Field this$0:Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;
      56: getfield      #29                 // Field org/apache/hadoop/io/file/tfile/TFile$Reader$Scanner.vlen:I
      59: istore        4
      61: aload_3
      62: invokevirtual #17                 // Method java/io/DataInputStream.close:()V
      65: iload         4
      67: ireturn
      68: iload_2
      69: istore        4
      71: iload         4
      73: aload_1
      74: arraylength
      75: if_icmpge     110
      78: aload_3
      79: aload_1
      80: iload         4
      82: aload_1
      83: arraylength
      84: iload         4
      86: isub
      87: invokevirtual #36                 // Method java/io/DataInputStream.read:([BII)I
      90: istore        5
      92: iload         5
      94: ifge          100
      97: goto          110
     100: iload         4
     102: iload         5
     104: iadd
     105: istore        4
     107: goto          71
     110: aload_3
     111: invokevirtual #37                 // Method java/io/DataInputStream.read:()I
     114: iflt          127
     117: new           #23                 // class java/lang/IndexOutOfBoundsException
     120: dup
     121: ldc           #35                 // String Buffer too small to hold value
     123: invokespecial #25                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
     126: athrow
     127: iload         4
     129: iload_2
     130: isub
     131: istore        5
     133: aload_3
     134: invokevirtual #17                 // Method java/io/DataInputStream.close:()V
     137: iload         5
     139: ireturn
     140: astore        6
     142: aload_3
     143: invokevirtual #17                 // Method java/io/DataInputStream.close:()V
     146: aload         6
     148: athrow
    Exception table:
       from    to  target type
           5    61   140   any
          68   133   140   any
         140   142   140   any

  public java.io.DataInputStream getValueStream() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;
       4: getfield      #38                 // Field org/apache/hadoop/io/file/tfile/TFile$Reader$Scanner.valueChecked:Z
       7: iconst_1
       8: if_icmpne     21
      11: new           #39                 // class java/lang/IllegalStateException
      14: dup
      15: ldc           #40                 // String Attempt to examine value multiple times.
      17: invokespecial #41                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: getfield      #2                  // Field this$0:Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;
      25: iconst_1
      26: putfield      #38                 // Field org/apache/hadoop/io/file/tfile/TFile$Reader$Scanner.valueChecked:Z
      29: aload_0
      30: getfield      #2                  // Field this$0:Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;
      33: getfield      #42                 // Field org/apache/hadoop/io/file/tfile/TFile$Reader$Scanner.valueDataInputStream:Ljava/io/DataInputStream;
      36: areturn

  public boolean isValueLengthKnown();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;
       4: getfield      #29                 // Field org/apache/hadoop/io/file/tfile/TFile$Reader$Scanner.vlen:I
       7: iflt          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public int compareTo(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #43                 // Method compareTo:([BII)I
       8: ireturn

  public int compareTo(byte[], int, int);
    Code:
       0: aload_0
       1: new           #44                 // class org/apache/hadoop/io/file/tfile/ByteArray
       4: dup
       5: aload_1
       6: iload_2
       7: iload_3
       8: invokespecial #45                 // Method org/apache/hadoop/io/file/tfile/ByteArray."<init>":([BII)V
      11: invokevirtual #46                 // Method compareTo:(Lorg/apache/hadoop/io/file/tfile/RawComparable;)I
      14: ireturn

  public int compareTo(org.apache.hadoop.io.file.tfile.RawComparable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;
       4: getfield      #47                 // Field org/apache/hadoop/io/file/tfile/TFile$Reader$Scanner.reader:Lorg/apache/hadoop/io/file/tfile/TFile$Reader;
       7: aload_0
       8: getfield      #2                  // Field this$0:Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;
      11: getfield      #5                  // Field org/apache/hadoop/io/file/tfile/TFile$Reader$Scanner.keyBuffer:[B
      14: iconst_0
      15: aload_0
      16: invokevirtual #8                  // Method getKeyLength:()I
      19: aload_1
      20: invokeinterface #48,  1           // InterfaceMethod org/apache/hadoop/io/file/tfile/RawComparable.buffer:()[B
      25: aload_1
      26: invokeinterface #49,  1           // InterfaceMethod org/apache/hadoop/io/file/tfile/RawComparable.offset:()I
      31: aload_1
      32: invokeinterface #50,  1           // InterfaceMethod org/apache/hadoop/io/file/tfile/RawComparable.size:()I
      37: invokevirtual #51                 // Method org/apache/hadoop/io/file/tfile/TFile$Reader.compareKeys:([BII[BII)I
      40: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #52                 // class org/apache/hadoop/io/file/tfile/TFile$Reader$Scanner$Entry
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #52                 // class org/apache/hadoop/io/file/tfile/TFile$Reader$Scanner$Entry
      20: aload_0
      21: getfield      #2                  // Field this$0:Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;
      24: getfield      #5                  // Field org/apache/hadoop/io/file/tfile/TFile$Reader$Scanner.keyBuffer:[B
      27: iconst_0
      28: aload_0
      29: invokevirtual #8                  // Method getKeyLength:()I
      32: invokevirtual #43                 // Method compareTo:([BII)I
      35: ifne          42
      38: iconst_1
      39: goto          43
      42: iconst_0
      43: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;
       4: getfield      #5                  // Field org/apache/hadoop/io/file/tfile/TFile$Reader$Scanner.keyBuffer:[B
       7: iconst_0
       8: aload_0
       9: invokevirtual #8                  // Method getKeyLength:()I
      12: invokestatic  #53                 // Method org/apache/hadoop/io/WritableComparator.hashBytes:([BII)I
      15: ireturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #54                 // class org/apache/hadoop/io/file/tfile/RawComparable
       5: invokevirtual #46                 // Method compareTo:(Lorg/apache/hadoop/io/file/tfile/RawComparable;)I
       8: ireturn
}
