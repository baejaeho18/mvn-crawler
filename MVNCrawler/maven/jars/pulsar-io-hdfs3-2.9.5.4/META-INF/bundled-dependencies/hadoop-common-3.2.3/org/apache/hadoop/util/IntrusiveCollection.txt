Compiled from "IntrusiveCollection.java"
public class org.apache.hadoop.util.IntrusiveCollection<E extends org.apache.hadoop.util.IntrusiveCollection$Element> implements java.util.Collection<E> {
  private org.apache.hadoop.util.IntrusiveCollection$Element root;

  private int size;

  public static final org.slf4j.Logger LOG;

  public org.apache.hadoop.util.IntrusiveCollection();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class org/apache/hadoop/util/IntrusiveCollection$1
       8: dup
       9: aload_0
      10: invokespecial #5                  // Method org/apache/hadoop/util/IntrusiveCollection$1."<init>":(Lorg/apache/hadoop/util/IntrusiveCollection;)V
      13: putfield      #2                  // Field root:Lorg/apache/hadoop/util/IntrusiveCollection$Element;
      16: aload_0
      17: iconst_0
      18: putfield      #6                  // Field size:I
      21: return

  private org.apache.hadoop.util.IntrusiveCollection$Element removeElement(org.apache.hadoop.util.IntrusiveCollection$Element);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #7,  2            // InterfaceMethod org/apache/hadoop/util/IntrusiveCollection$Element.getPrev:(Lorg/apache/hadoop/util/IntrusiveCollection;)Lorg/apache/hadoop/util/IntrusiveCollection$Element;
       7: astore_2
       8: aload_1
       9: aload_0
      10: invokeinterface #8,  2            // InterfaceMethod org/apache/hadoop/util/IntrusiveCollection$Element.getNext:(Lorg/apache/hadoop/util/IntrusiveCollection;)Lorg/apache/hadoop/util/IntrusiveCollection$Element;
      15: astore_3
      16: aload_1
      17: aload_0
      18: invokeinterface #9,  2            // InterfaceMethod org/apache/hadoop/util/IntrusiveCollection$Element.removeInternal:(Lorg/apache/hadoop/util/IntrusiveCollection;)V
      23: aload_2
      24: aload_0
      25: aload_3
      26: invokeinterface #10,  3           // InterfaceMethod org/apache/hadoop/util/IntrusiveCollection$Element.setNext:(Lorg/apache/hadoop/util/IntrusiveCollection;Lorg/apache/hadoop/util/IntrusiveCollection$Element;)V
      31: aload_3
      32: aload_0
      33: aload_2
      34: invokeinterface #11,  3           // InterfaceMethod org/apache/hadoop/util/IntrusiveCollection$Element.setPrev:(Lorg/apache/hadoop/util/IntrusiveCollection;Lorg/apache/hadoop/util/IntrusiveCollection$Element;)V
      39: aload_0
      40: dup
      41: getfield      #6                  // Field size:I
      44: iconst_1
      45: isub
      46: putfield      #6                  // Field size:I
      49: aload_3
      50: areturn

  public java.util.Iterator<E> iterator();
    Code:
       0: new           #12                 // class org/apache/hadoop/util/IntrusiveCollection$IntrusiveIterator
       3: dup
       4: aload_0
       5: invokespecial #13                 // Method org/apache/hadoop/util/IntrusiveCollection$IntrusiveIterator."<init>":(Lorg/apache/hadoop/util/IntrusiveCollection;)V
       8: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #6                  // Field size:I
       4: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #6                  // Field size:I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #14                 // class org/apache/hadoop/util/IntrusiveCollection$Element
       4: astore_2
       5: aload_2
       6: aload_0
       7: invokeinterface #15,  2           // InterfaceMethod org/apache/hadoop/util/IntrusiveCollection$Element.isInList:(Lorg/apache/hadoop/util/IntrusiveCollection;)Z
      12: ireturn
      13: astore_2
      14: iconst_0
      15: ireturn
    Exception table:
       from    to  target type
           0    12    13   Class java/lang/ClassCastException

  public java.lang.Object[] toArray();
    Code:
       0: aload_0
       1: getfield      #6                  // Field size:I
       4: anewarray     #17                 // class java/lang/Object
       7: astore_1
       8: iconst_0
       9: istore_2
      10: aload_0
      11: invokevirtual #18                 // Method iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          39
      24: aload_1
      25: iload_2
      26: iinc          2, 1
      29: aload_3
      30: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: aastore
      36: goto          15
      39: aload_1
      40: areturn

  public <T> T[] toArray(T[]);
    Code:
       0: aload_1
       1: arraylength
       2: aload_0
       3: getfield      #6                  // Field size:I
       6: if_icmpge     17
       9: aload_0
      10: invokevirtual #21                 // Method toArray:()[Ljava/lang/Object;
      13: checkcast     #22                 // class "[Ljava/lang/Object;"
      16: areturn
      17: iconst_0
      18: istore_2
      19: aload_0
      20: invokevirtual #18                 // Method iterator:()Ljava/util/Iterator;
      23: astore_3
      24: aload_3
      25: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          48
      33: aload_1
      34: iload_2
      35: iinc          2, 1
      38: aload_3
      39: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: aastore
      45: goto          24
      48: aload_1
      49: areturn

  public boolean add(E);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: aload_0
       8: invokeinterface #15,  2           // InterfaceMethod org/apache/hadoop/util/IntrusiveCollection$Element.isInList:(Lorg/apache/hadoop/util/IntrusiveCollection;)Z
      13: ifeq          18
      16: iconst_0
      17: ireturn
      18: aload_0
      19: getfield      #2                  // Field root:Lorg/apache/hadoop/util/IntrusiveCollection$Element;
      22: aload_0
      23: invokeinterface #7,  2            // InterfaceMethod org/apache/hadoop/util/IntrusiveCollection$Element.getPrev:(Lorg/apache/hadoop/util/IntrusiveCollection;)Lorg/apache/hadoop/util/IntrusiveCollection$Element;
      28: astore_2
      29: aload_2
      30: aload_0
      31: aload_1
      32: invokeinterface #10,  3           // InterfaceMethod org/apache/hadoop/util/IntrusiveCollection$Element.setNext:(Lorg/apache/hadoop/util/IntrusiveCollection;Lorg/apache/hadoop/util/IntrusiveCollection$Element;)V
      37: aload_0
      38: getfield      #2                  // Field root:Lorg/apache/hadoop/util/IntrusiveCollection$Element;
      41: aload_0
      42: aload_1
      43: invokeinterface #11,  3           // InterfaceMethod org/apache/hadoop/util/IntrusiveCollection$Element.setPrev:(Lorg/apache/hadoop/util/IntrusiveCollection;Lorg/apache/hadoop/util/IntrusiveCollection$Element;)V
      48: aload_1
      49: aload_0
      50: aload_2
      51: aload_0
      52: getfield      #2                  // Field root:Lorg/apache/hadoop/util/IntrusiveCollection$Element;
      55: invokeinterface #23,  4           // InterfaceMethod org/apache/hadoop/util/IntrusiveCollection$Element.insertInternal:(Lorg/apache/hadoop/util/IntrusiveCollection;Lorg/apache/hadoop/util/IntrusiveCollection$Element;Lorg/apache/hadoop/util/IntrusiveCollection$Element;)V
      60: aload_0
      61: dup
      62: getfield      #6                  // Field size:I
      65: iconst_1
      66: iadd
      67: putfield      #6                  // Field size:I
      70: iconst_1
      71: ireturn

  public boolean addFirst(org.apache.hadoop.util.IntrusiveCollection$Element);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: aload_0
       8: invokeinterface #15,  2           // InterfaceMethod org/apache/hadoop/util/IntrusiveCollection$Element.isInList:(Lorg/apache/hadoop/util/IntrusiveCollection;)Z
      13: ifeq          18
      16: iconst_0
      17: ireturn
      18: aload_0
      19: getfield      #2                  // Field root:Lorg/apache/hadoop/util/IntrusiveCollection$Element;
      22: aload_0
      23: invokeinterface #8,  2            // InterfaceMethod org/apache/hadoop/util/IntrusiveCollection$Element.getNext:(Lorg/apache/hadoop/util/IntrusiveCollection;)Lorg/apache/hadoop/util/IntrusiveCollection$Element;
      28: astore_2
      29: aload_2
      30: aload_0
      31: aload_1
      32: invokeinterface #11,  3           // InterfaceMethod org/apache/hadoop/util/IntrusiveCollection$Element.setPrev:(Lorg/apache/hadoop/util/IntrusiveCollection;Lorg/apache/hadoop/util/IntrusiveCollection$Element;)V
      37: aload_0
      38: getfield      #2                  // Field root:Lorg/apache/hadoop/util/IntrusiveCollection$Element;
      41: aload_0
      42: aload_1
      43: invokeinterface #10,  3           // InterfaceMethod org/apache/hadoop/util/IntrusiveCollection$Element.setNext:(Lorg/apache/hadoop/util/IntrusiveCollection;Lorg/apache/hadoop/util/IntrusiveCollection$Element;)V
      48: aload_1
      49: aload_0
      50: aload_0
      51: getfield      #2                  // Field root:Lorg/apache/hadoop/util/IntrusiveCollection$Element;
      54: aload_2
      55: invokeinterface #23,  4           // InterfaceMethod org/apache/hadoop/util/IntrusiveCollection$Element.insertInternal:(Lorg/apache/hadoop/util/IntrusiveCollection;Lorg/apache/hadoop/util/IntrusiveCollection$Element;Lorg/apache/hadoop/util/IntrusiveCollection$Element;)V
      60: aload_0
      61: dup
      62: getfield      #6                  // Field size:I
      65: iconst_1
      66: iadd
      67: putfield      #6                  // Field size:I
      70: iconst_1
      71: ireturn

  public boolean remove(java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #14                 // class org/apache/hadoop/util/IntrusiveCollection$Element
       4: astore_2
       5: aload_2
       6: aload_0
       7: invokeinterface #15,  2           // InterfaceMethod org/apache/hadoop/util/IntrusiveCollection$Element.isInList:(Lorg/apache/hadoop/util/IntrusiveCollection;)Z
      12: ifne          17
      15: iconst_0
      16: ireturn
      17: aload_0
      18: aload_2
      19: invokespecial #1                  // Method removeElement:(Lorg/apache/hadoop/util/IntrusiveCollection$Element;)Lorg/apache/hadoop/util/IntrusiveCollection$Element;
      22: pop
      23: iconst_1
      24: ireturn
      25: astore_2
      26: iconst_0
      27: ireturn
    Exception table:
       from    to  target type
           0    16    25   Class java/lang/ClassCastException
          17    24    25   Class java/lang/ClassCastException

  public boolean containsAll(java.util.Collection<?>);
    Code:
       0: aload_1
       1: invokeinterface #24,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          36
      16: aload_2
      17: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: astore_3
      23: aload_0
      24: aload_3
      25: invokevirtual #25                 // Method contains:(Ljava/lang/Object;)Z
      28: ifne          33
      31: iconst_0
      32: ireturn
      33: goto          7
      36: iconst_1
      37: ireturn

  public boolean addAll(java.util.Collection<? extends E>);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: invokeinterface #24,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       8: astore_3
       9: aload_3
      10: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          43
      18: aload_3
      19: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: checkcast     #14                 // class org/apache/hadoop/util/IntrusiveCollection$Element
      27: astore        4
      29: aload_0
      30: aload         4
      32: invokevirtual #26                 // Method add:(Lorg/apache/hadoop/util/IntrusiveCollection$Element;)Z
      35: ifeq          40
      38: iconst_1
      39: istore_2
      40: goto          9
      43: iload_2
      44: ireturn

  public boolean removeAll(java.util.Collection<?>);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: invokeinterface #24,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       8: astore_3
       9: aload_3
      10: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          40
      18: aload_3
      19: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: astore        4
      26: aload_0
      27: aload         4
      29: invokevirtual #27                 // Method remove:(Ljava/lang/Object;)Z
      32: ifeq          37
      35: iconst_1
      36: istore_2
      37: goto          9
      40: iload_2
      41: ireturn

  public boolean retainAll(java.util.Collection<?>);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: invokevirtual #18                 // Method iterator:()Ljava/util/Iterator;
       6: astore_3
       7: aload_3
       8: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          49
      16: aload_3
      17: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #14                 // class org/apache/hadoop/util/IntrusiveCollection$Element
      25: astore        4
      27: aload_1
      28: aload         4
      30: invokeinterface #28,  2           // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
      35: ifne          46
      38: aload_3
      39: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.remove:()V
      44: iconst_1
      45: istore_2
      46: goto          7
      49: iload_2
      50: ireturn

  public void clear();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method iterator:()Ljava/util/Iterator;
       4: astore_1
       5: aload_1
       6: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      11: ifeq          30
      14: aload_1
      15: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      20: pop
      21: aload_1
      22: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.remove:()V
      27: goto          5
      30: return

  public boolean add(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #14                 // class org/apache/hadoop/util/IntrusiveCollection$Element
       5: invokevirtual #26                 // Method add:(Lorg/apache/hadoop/util/IntrusiveCollection$Element;)Z
       8: ireturn

  static org.apache.hadoop.util.IntrusiveCollection$Element access$000(org.apache.hadoop.util.IntrusiveCollection);
    Code:
       0: aload_0
       1: getfield      #2                  // Field root:Lorg/apache/hadoop/util/IntrusiveCollection$Element;
       4: areturn

  static org.apache.hadoop.util.IntrusiveCollection$Element access$100(org.apache.hadoop.util.IntrusiveCollection, org.apache.hadoop.util.IntrusiveCollection$Element);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method removeElement:(Lorg/apache/hadoop/util/IntrusiveCollection$Element;)Lorg/apache/hadoop/util/IntrusiveCollection$Element;
       5: areturn

  static {};
    Code:
       0: ldc           #30                 // class org/apache/hadoop/util/IntrusiveCollection
       2: invokestatic  #31                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
