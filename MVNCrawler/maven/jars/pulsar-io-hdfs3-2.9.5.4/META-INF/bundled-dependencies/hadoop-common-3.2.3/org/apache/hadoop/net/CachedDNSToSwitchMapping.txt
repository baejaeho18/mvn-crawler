Compiled from "CachedDNSToSwitchMapping.java"
public class org.apache.hadoop.net.CachedDNSToSwitchMapping extends org.apache.hadoop.net.AbstractDNSToSwitchMapping {
  private java.util.Map<java.lang.String, java.lang.String> cache;

  protected final org.apache.hadoop.net.DNSToSwitchMapping rawMapping;

  public org.apache.hadoop.net.CachedDNSToSwitchMapping(org.apache.hadoop.net.DNSToSwitchMapping);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/net/AbstractDNSToSwitchMapping."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field cache:Ljava/util/Map;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field rawMapping:Lorg/apache/hadoop/net/DNSToSwitchMapping;
      20: return

  private java.util.List<java.lang.String> getUncachedHosts(java.util.List<java.lang.String>);
    Code:
       0: new           #6                  // class java/util/ArrayList
       3: dup
       4: aload_1
       5: invokeinterface #7,  1            // InterfaceMethod java/util/List.size:()I
      10: invokespecial #8                  // Method java/util/ArrayList."<init>":(I)V
      13: astore_2
      14: aload_1
      15: invokeinterface #9,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      20: astore_3
      21: aload_3
      22: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          67
      30: aload_3
      31: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #12                 // class java/lang/String
      39: astore        4
      41: aload_0
      42: getfield      #4                  // Field cache:Ljava/util/Map;
      45: aload         4
      47: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      52: ifnonnull     64
      55: aload_2
      56: aload         4
      58: invokeinterface #14,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      63: pop
      64: goto          21
      67: aload_2
      68: areturn

  private void cacheResolvedHosts(java.util.List<java.lang.String>, java.util.List<java.lang.String>);
    Code:
       0: aload_2
       1: ifnull        46
       4: iconst_0
       5: istore_3
       6: iload_3
       7: aload_1
       8: invokeinterface #7,  1            // InterfaceMethod java/util/List.size:()I
      13: if_icmpge     46
      16: aload_0
      17: getfield      #4                  // Field cache:Ljava/util/Map;
      20: aload_1
      21: iload_3
      22: invokeinterface #15,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      27: aload_2
      28: iload_3
      29: invokeinterface #15,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      34: invokeinterface #16,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      39: pop
      40: iinc          3, 1
      43: goto          6
      46: return

  private java.util.List<java.lang.String> getCachedHosts(java.util.List<java.lang.String>);
    Code:
       0: new           #6                  // class java/util/ArrayList
       3: dup
       4: aload_1
       5: invokeinterface #7,  1            // InterfaceMethod java/util/List.size:()I
      10: invokespecial #8                  // Method java/util/ArrayList."<init>":(I)V
      13: astore_2
      14: aload_1
      15: invokeinterface #9,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      20: astore_3
      21: aload_3
      22: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          79
      30: aload_3
      31: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #12                 // class java/lang/String
      39: astore        4
      41: aload_0
      42: getfield      #4                  // Field cache:Ljava/util/Map;
      45: aload         4
      47: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      52: checkcast     #12                 // class java/lang/String
      55: astore        5
      57: aload         5
      59: ifnull        74
      62: aload_2
      63: aload         5
      65: invokeinterface #14,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      70: pop
      71: goto          76
      74: aconst_null
      75: areturn
      76: goto          21
      79: aload_2
      80: areturn

  public java.util.List<java.lang.String> resolve(java.util.List<java.lang.String>);
    Code:
       0: aload_1
       1: invokestatic  #17                 // Method org/apache/hadoop/net/NetUtils.normalizeHostNames:(Ljava/util/Collection;)Ljava/util/List;
       4: astore_1
       5: new           #6                  // class java/util/ArrayList
       8: dup
       9: aload_1
      10: invokeinterface #7,  1            // InterfaceMethod java/util/List.size:()I
      15: invokespecial #8                  // Method java/util/ArrayList."<init>":(I)V
      18: astore_2
      19: aload_1
      20: invokeinterface #18,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      25: ifeq          30
      28: aload_2
      29: areturn
      30: aload_0
      31: aload_1
      32: invokespecial #19                 // Method getUncachedHosts:(Ljava/util/List;)Ljava/util/List;
      35: astore_3
      36: aload_0
      37: getfield      #5                  // Field rawMapping:Lorg/apache/hadoop/net/DNSToSwitchMapping;
      40: aload_3
      41: invokeinterface #20,  2           // InterfaceMethod org/apache/hadoop/net/DNSToSwitchMapping.resolve:(Ljava/util/List;)Ljava/util/List;
      46: astore        4
      48: aload_0
      49: aload_3
      50: aload         4
      52: invokespecial #21                 // Method cacheResolvedHosts:(Ljava/util/List;Ljava/util/List;)V
      55: aload_0
      56: aload_1
      57: invokespecial #22                 // Method getCachedHosts:(Ljava/util/List;)Ljava/util/List;
      60: areturn

  public java.util.Map<java.lang.String, java.lang.String> getSwitchMap();
    Code:
       0: new           #23                 // class java/util/HashMap
       3: dup
       4: aload_0
       5: getfield      #4                  // Field cache:Ljava/util/Map;
       8: invokespecial #24                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      11: astore_1
      12: aload_1
      13: areturn

  public java.lang.String toString();
    Code:
       0: new           #25                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #27                 // String cached switch mapping relaying to
       9: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #5                  // Field rawMapping:Lorg/apache/hadoop/net/DNSToSwitchMapping;
      16: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn

  public boolean isSingleSwitch();
    Code:
       0: aload_0
       1: getfield      #5                  // Field rawMapping:Lorg/apache/hadoop/net/DNSToSwitchMapping;
       4: invokestatic  #31                 // Method isMappingSingleSwitch:(Lorg/apache/hadoop/net/DNSToSwitchMapping;)Z
       7: ireturn

  public void reloadCachedMappings();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cache:Ljava/util/Map;
       4: invokeinterface #32,  1           // InterfaceMethod java/util/Map.clear:()V
       9: return

  public void reloadCachedMappings(java.util.List<java.lang.String>);
    Code:
       0: aload_1
       1: invokeinterface #9,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          40
      16: aload_2
      17: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #12                 // class java/lang/String
      25: astore_3
      26: aload_0
      27: getfield      #4                  // Field cache:Ljava/util/Map;
      30: aload_3
      31: invokeinterface #33,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      36: pop
      37: goto          7
      40: return
}
