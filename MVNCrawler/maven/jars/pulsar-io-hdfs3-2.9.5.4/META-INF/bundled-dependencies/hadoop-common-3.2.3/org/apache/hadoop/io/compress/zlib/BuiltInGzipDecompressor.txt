Compiled from "BuiltInGzipDecompressor.java"
public class org.apache.hadoop.io.compress.zlib.BuiltInGzipDecompressor implements org.apache.hadoop.io.compress.Decompressor {
  private static final int GZIP_MAGIC_ID;

  private static final int GZIP_DEFLATE_METHOD;

  private static final int GZIP_FLAGBIT_HEADER_CRC;

  private static final int GZIP_FLAGBIT_EXTRA_FIELD;

  private static final int GZIP_FLAGBIT_FILENAME;

  private static final int GZIP_FLAGBIT_COMMENT;

  private static final int GZIP_FLAGBITS_RESERVED;

  private java.util.zip.Inflater inflater;

  private byte[] userBuf;

  private int userBufOff;

  private int userBufLen;

  private byte[] localBuf;

  private int localBufOff;

  private int headerBytesRead;

  private int trailerBytesRead;

  private int numExtraFieldBytesRemaining;

  private java.util.zip.Checksum crc;

  private boolean hasExtraField;

  private boolean hasFilename;

  private boolean hasComment;

  private boolean hasHeaderCRC;

  private org.apache.hadoop.io.compress.zlib.BuiltInGzipDecompressor$GzipStateLabel state;

  static final boolean $assertionsDisabled;

  public org.apache.hadoop.io.compress.zlib.BuiltInGzipDecompressor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/zip/Inflater
       8: dup
       9: iconst_1
      10: invokespecial #3                  // Method java/util/zip/Inflater."<init>":(Z)V
      13: putfield      #4                  // Field inflater:Ljava/util/zip/Inflater;
      16: aload_0
      17: aconst_null
      18: putfield      #5                  // Field userBuf:[B
      21: aload_0
      22: iconst_0
      23: putfield      #6                  // Field userBufOff:I
      26: aload_0
      27: iconst_0
      28: putfield      #7                  // Field userBufLen:I
      31: aload_0
      32: sipush        256
      35: newarray       byte
      37: putfield      #8                  // Field localBuf:[B
      40: aload_0
      41: iconst_0
      42: putfield      #9                  // Field localBufOff:I
      45: aload_0
      46: iconst_0
      47: putfield      #10                 // Field headerBytesRead:I
      50: aload_0
      51: iconst_0
      52: putfield      #11                 // Field trailerBytesRead:I
      55: aload_0
      56: iconst_m1
      57: putfield      #12                 // Field numExtraFieldBytesRemaining:I
      60: aload_0
      61: invokestatic  #13                 // Method org/apache/hadoop/util/DataChecksum.newCrc32:()Ljava/util/zip/Checksum;
      64: putfield      #14                 // Field crc:Ljava/util/zip/Checksum;
      67: aload_0
      68: iconst_0
      69: putfield      #15                 // Field hasExtraField:Z
      72: aload_0
      73: iconst_0
      74: putfield      #16                 // Field hasFilename:Z
      77: aload_0
      78: iconst_0
      79: putfield      #17                 // Field hasComment:Z
      82: aload_0
      83: iconst_0
      84: putfield      #18                 // Field hasHeaderCRC:Z
      87: aload_0
      88: getstatic     #19                 // Field org/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel.HEADER_BASIC:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
      91: putfield      #20                 // Field state:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
      94: aload_0
      95: getfield      #14                 // Field crc:Ljava/util/zip/Checksum;
      98: invokeinterface #21,  1           // InterfaceMethod java/util/zip/Checksum.reset:()V
     103: return

  public synchronized boolean needsInput();
    Code:
       0: aload_0
       1: getfield      #20                 // Field state:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
       4: getstatic     #22                 // Field org/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel.DEFLATE_STREAM:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
       7: if_acmpne     18
      10: aload_0
      11: getfield      #4                  // Field inflater:Ljava/util/zip/Inflater;
      14: invokevirtual #23                 // Method java/util/zip/Inflater.needsInput:()Z
      17: ireturn
      18: aload_0
      19: getfield      #20                 // Field state:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
      22: getstatic     #24                 // Field org/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel.FINISHED:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
      25: if_acmpeq     32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  public synchronized void setInput(byte[], int, int);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #25                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #26                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: iload_2
      13: iflt          28
      16: iload_3
      17: iflt          28
      20: iload_2
      21: aload_1
      22: arraylength
      23: iload_3
      24: isub
      25: if_icmple     36
      28: new           #27                 // class java/lang/ArrayIndexOutOfBoundsException
      31: dup
      32: invokespecial #28                 // Method java/lang/ArrayIndexOutOfBoundsException."<init>":()V
      35: athrow
      36: aload_0
      37: aload_1
      38: putfield      #5                  // Field userBuf:[B
      41: aload_0
      42: iload_2
      43: putfield      #6                  // Field userBufOff:I
      46: aload_0
      47: iload_3
      48: putfield      #7                  // Field userBufLen:I
      51: return

  public synchronized int decompress(byte[], int, int) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore        4
       3: aload_0
       4: getfield      #20                 // Field state:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
       7: getstatic     #22                 // Field org/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel.DEFLATE_STREAM:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
      10: if_acmpeq     27
      13: aload_0
      14: invokespecial #29                 // Method executeHeaderState:()V
      17: aload_0
      18: getfield      #7                  // Field userBufLen:I
      21: ifgt          27
      24: iload         4
      26: ireturn
      27: aload_0
      28: getfield      #20                 // Field state:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
      31: getstatic     #22                 // Field org/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel.DEFLATE_STREAM:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
      34: if_acmpne     194
      37: aload_0
      38: getfield      #7                  // Field userBufLen:I
      41: ifle          81
      44: aload_0
      45: getfield      #4                  // Field inflater:Ljava/util/zip/Inflater;
      48: aload_0
      49: getfield      #5                  // Field userBuf:[B
      52: aload_0
      53: getfield      #6                  // Field userBufOff:I
      56: aload_0
      57: getfield      #7                  // Field userBufLen:I
      60: invokevirtual #30                 // Method java/util/zip/Inflater.setInput:([BII)V
      63: aload_0
      64: dup
      65: getfield      #6                  // Field userBufOff:I
      68: aload_0
      69: getfield      #7                  // Field userBufLen:I
      72: iadd
      73: putfield      #6                  // Field userBufOff:I
      76: aload_0
      77: iconst_0
      78: putfield      #7                  // Field userBufLen:I
      81: aload_0
      82: getfield      #4                  // Field inflater:Ljava/util/zip/Inflater;
      85: aload_1
      86: iload_2
      87: iload_3
      88: invokevirtual #31                 // Method java/util/zip/Inflater.inflate:([BII)I
      91: istore        4
      93: goto          111
      96: astore        5
      98: new           #33                 // class java/io/IOException
     101: dup
     102: aload         5
     104: invokevirtual #34                 // Method java/util/zip/DataFormatException.getMessage:()Ljava/lang/String;
     107: invokespecial #35                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     110: athrow
     111: aload_0
     112: getfield      #14                 // Field crc:Ljava/util/zip/Checksum;
     115: aload_1
     116: iload_2
     117: iload         4
     119: invokeinterface #36,  4           // InterfaceMethod java/util/zip/Checksum.update:([BII)V
     124: aload_0
     125: getfield      #4                  // Field inflater:Ljava/util/zip/Inflater;
     128: invokevirtual #37                 // Method java/util/zip/Inflater.finished:()Z
     131: ifeq          191
     134: aload_0
     135: getstatic     #38                 // Field org/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel.TRAILER_CRC:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
     138: putfield      #20                 // Field state:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
     141: aload_0
     142: getfield      #4                  // Field inflater:Ljava/util/zip/Inflater;
     145: invokevirtual #39                 // Method java/util/zip/Inflater.getRemaining:()I
     148: istore        5
     150: getstatic     #40                 // Field $assertionsDisabled:Z
     153: ifne          171
     156: iload         5
     158: ifge          171
     161: new           #41                 // class java/lang/AssertionError
     164: dup
     165: ldc           #42                 // String logic error: Inflater finished; byte-count is inconsistent
     167: invokespecial #43                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     170: athrow
     171: aload_0
     172: dup
     173: getfield      #6                  // Field userBufOff:I
     176: iload         5
     178: isub
     179: putfield      #6                  // Field userBufOff:I
     182: aload_0
     183: iload         5
     185: putfield      #7                  // Field userBufLen:I
     188: goto          194
     191: iload         4
     193: ireturn
     194: aload_0
     195: invokespecial #44                 // Method executeTrailerState:()V
     198: iload         4
     200: ireturn
    Exception table:
       from    to  target type
          81    93    96   Class java/util/zip/DataFormatException

  private void executeHeaderState() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field userBufLen:I
       4: ifgt          8
       7: return
       8: aload_0
       9: getfield      #20                 // Field state:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
      12: getstatic     #19                 // Field org/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel.HEADER_BASIC:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
      15: if_acmpne     63
      18: aload_0
      19: getfield      #7                  // Field userBufLen:I
      22: bipush        10
      24: aload_0
      25: getfield      #9                  // Field localBufOff:I
      28: isub
      29: invokestatic  #45                 // Method java/lang/Math.min:(II)I
      32: istore_1
      33: aload_0
      34: iload_1
      35: invokespecial #46                 // Method checkAndCopyBytesToLocal:(I)V
      38: aload_0
      39: getfield      #9                  // Field localBufOff:I
      42: bipush        10
      44: if_icmplt     63
      47: aload_0
      48: invokespecial #47                 // Method processBasicHeader:()V
      51: aload_0
      52: iconst_0
      53: putfield      #9                  // Field localBufOff:I
      56: aload_0
      57: getstatic     #48                 // Field org/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel.HEADER_EXTRA_FIELD:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
      60: putfield      #20                 // Field state:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
      63: aload_0
      64: getfield      #7                  // Field userBufLen:I
      67: ifgt          71
      70: return
      71: aload_0
      72: getfield      #20                 // Field state:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
      75: getstatic     #48                 // Field org/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel.HEADER_EXTRA_FIELD:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
      78: if_acmpne     205
      81: aload_0
      82: getfield      #15                 // Field hasExtraField:Z
      85: ifeq          198
      88: aload_0
      89: getfield      #12                 // Field numExtraFieldBytesRemaining:I
      92: ifge          140
      95: aload_0
      96: getfield      #7                  // Field userBufLen:I
      99: iconst_2
     100: aload_0
     101: getfield      #9                  // Field localBufOff:I
     104: isub
     105: invokestatic  #45                 // Method java/lang/Math.min:(II)I
     108: istore_1
     109: aload_0
     110: iload_1
     111: invokespecial #46                 // Method checkAndCopyBytesToLocal:(I)V
     114: aload_0
     115: getfield      #9                  // Field localBufOff:I
     118: iconst_2
     119: if_icmplt     140
     122: aload_0
     123: aload_0
     124: aload_0
     125: getfield      #8                  // Field localBuf:[B
     128: iconst_0
     129: invokespecial #49                 // Method readUShortLE:([BI)I
     132: putfield      #12                 // Field numExtraFieldBytesRemaining:I
     135: aload_0
     136: iconst_0
     137: putfield      #9                  // Field localBufOff:I
     140: aload_0
     141: getfield      #12                 // Field numExtraFieldBytesRemaining:I
     144: ifle          181
     147: aload_0
     148: getfield      #7                  // Field userBufLen:I
     151: ifle          181
     154: aload_0
     155: getfield      #7                  // Field userBufLen:I
     158: aload_0
     159: getfield      #12                 // Field numExtraFieldBytesRemaining:I
     162: invokestatic  #45                 // Method java/lang/Math.min:(II)I
     165: istore_1
     166: aload_0
     167: iload_1
     168: invokespecial #50                 // Method checkAndSkipBytes:(I)V
     171: aload_0
     172: dup
     173: getfield      #12                 // Field numExtraFieldBytesRemaining:I
     176: iload_1
     177: isub
     178: putfield      #12                 // Field numExtraFieldBytesRemaining:I
     181: aload_0
     182: getfield      #12                 // Field numExtraFieldBytesRemaining:I
     185: ifne          205
     188: aload_0
     189: getstatic     #51                 // Field org/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel.HEADER_FILENAME:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
     192: putfield      #20                 // Field state:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
     195: goto          205
     198: aload_0
     199: getstatic     #51                 // Field org/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel.HEADER_FILENAME:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
     202: putfield      #20                 // Field state:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
     205: aload_0
     206: getfield      #7                  // Field userBufLen:I
     209: ifgt          213
     212: return
     213: aload_0
     214: getfield      #20                 // Field state:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
     217: getstatic     #51                 // Field org/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel.HEADER_FILENAME:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
     220: if_acmpne     247
     223: aload_0
     224: getfield      #16                 // Field hasFilename:Z
     227: ifeq          240
     230: aload_0
     231: invokespecial #52                 // Method checkAndSkipBytesUntilNull:()Z
     234: istore_1
     235: iload_1
     236: ifne          240
     239: return
     240: aload_0
     241: getstatic     #53                 // Field org/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel.HEADER_COMMENT:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
     244: putfield      #20                 // Field state:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
     247: aload_0
     248: getfield      #7                  // Field userBufLen:I
     251: ifgt          255
     254: return
     255: aload_0
     256: getfield      #20                 // Field state:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
     259: getstatic     #53                 // Field org/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel.HEADER_COMMENT:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
     262: if_acmpne     289
     265: aload_0
     266: getfield      #17                 // Field hasComment:Z
     269: ifeq          282
     272: aload_0
     273: invokespecial #52                 // Method checkAndSkipBytesUntilNull:()Z
     276: istore_1
     277: iload_1
     278: ifne          282
     281: return
     282: aload_0
     283: getstatic     #54                 // Field org/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel.HEADER_CRC:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
     286: putfield      #20                 // Field state:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
     289: aload_0
     290: getfield      #7                  // Field userBufLen:I
     293: ifgt          297
     296: return
     297: aload_0
     298: getfield      #20                 // Field state:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
     301: getstatic     #54                 // Field org/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel.HEADER_CRC:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
     304: if_acmpne     442
     307: aload_0
     308: getfield      #18                 // Field hasHeaderCRC:Z
     311: ifeq          426
     314: getstatic     #40                 // Field $assertionsDisabled:Z
     317: ifne          336
     320: aload_0
     321: getfield      #9                  // Field localBufOff:I
     324: iconst_2
     325: if_icmplt     336
     328: new           #41                 // class java/lang/AssertionError
     331: dup
     332: invokespecial #55                 // Method java/lang/AssertionError."<init>":()V
     335: athrow
     336: aload_0
     337: getfield      #7                  // Field userBufLen:I
     340: iconst_2
     341: aload_0
     342: getfield      #9                  // Field localBufOff:I
     345: isub
     346: invokestatic  #45                 // Method java/lang/Math.min:(II)I
     349: istore_1
     350: aload_0
     351: iload_1
     352: invokespecial #56                 // Method copyBytesToLocal:(I)V
     355: aload_0
     356: getfield      #9                  // Field localBufOff:I
     359: iconst_2
     360: if_icmplt     423
     363: aload_0
     364: aload_0
     365: getfield      #8                  // Field localBuf:[B
     368: iconst_0
     369: invokespecial #49                 // Method readUShortLE:([BI)I
     372: i2l
     373: lstore_2
     374: lload_2
     375: aload_0
     376: getfield      #14                 // Field crc:Ljava/util/zip/Checksum;
     379: invokeinterface #57,  1           // InterfaceMethod java/util/zip/Checksum.getValue:()J
     384: ldc2_w        #58                 // long 65535l
     387: land
     388: lcmp
     389: ifeq          402
     392: new           #33                 // class java/io/IOException
     395: dup
     396: ldc           #60                 // String gzip header CRC failure
     398: invokespecial #35                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     401: athrow
     402: aload_0
     403: iconst_0
     404: putfield      #9                  // Field localBufOff:I
     407: aload_0
     408: getfield      #14                 // Field crc:Ljava/util/zip/Checksum;
     411: invokeinterface #21,  1           // InterfaceMethod java/util/zip/Checksum.reset:()V
     416: aload_0
     417: getstatic     #22                 // Field org/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel.DEFLATE_STREAM:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
     420: putfield      #20                 // Field state:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
     423: goto          442
     426: aload_0
     427: getfield      #14                 // Field crc:Ljava/util/zip/Checksum;
     430: invokeinterface #21,  1           // InterfaceMethod java/util/zip/Checksum.reset:()V
     435: aload_0
     436: getstatic     #22                 // Field org/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel.DEFLATE_STREAM:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
     439: putfield      #20                 // Field state:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
     442: return

  private void executeTrailerState() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field userBufLen:I
       4: ifgt          8
       7: return
       8: aload_0
       9: getfield      #20                 // Field state:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
      12: getstatic     #38                 // Field org/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel.TRAILER_CRC:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
      15: if_acmpne     122
      18: getstatic     #40                 // Field $assertionsDisabled:Z
      21: ifne          40
      24: aload_0
      25: getfield      #9                  // Field localBufOff:I
      28: iconst_4
      29: if_icmplt     40
      32: new           #41                 // class java/lang/AssertionError
      35: dup
      36: invokespecial #55                 // Method java/lang/AssertionError."<init>":()V
      39: athrow
      40: aload_0
      41: getfield      #7                  // Field userBufLen:I
      44: iconst_4
      45: aload_0
      46: getfield      #9                  // Field localBufOff:I
      49: isub
      50: invokestatic  #45                 // Method java/lang/Math.min:(II)I
      53: istore_1
      54: aload_0
      55: iload_1
      56: invokespecial #56                 // Method copyBytesToLocal:(I)V
      59: aload_0
      60: getfield      #9                  // Field localBufOff:I
      63: iconst_4
      64: if_icmplt     122
      67: aload_0
      68: aload_0
      69: getfield      #8                  // Field localBuf:[B
      72: iconst_0
      73: invokespecial #61                 // Method readUIntLE:([BI)J
      76: lstore_2
      77: lload_2
      78: aload_0
      79: getfield      #14                 // Field crc:Ljava/util/zip/Checksum;
      82: invokeinterface #57,  1           // InterfaceMethod java/util/zip/Checksum.getValue:()J
      87: lcmp
      88: ifeq          101
      91: new           #33                 // class java/io/IOException
      94: dup
      95: ldc           #62                 // String gzip stream CRC failure
      97: invokespecial #35                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     100: athrow
     101: aload_0
     102: iconst_0
     103: putfield      #9                  // Field localBufOff:I
     106: aload_0
     107: getfield      #14                 // Field crc:Ljava/util/zip/Checksum;
     110: invokeinterface #21,  1           // InterfaceMethod java/util/zip/Checksum.reset:()V
     115: aload_0
     116: getstatic     #63                 // Field org/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel.TRAILER_SIZE:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
     119: putfield      #20                 // Field state:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
     122: aload_0
     123: getfield      #7                  // Field userBufLen:I
     126: ifgt          130
     129: return
     130: aload_0
     131: getfield      #20                 // Field state:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
     134: getstatic     #63                 // Field org/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel.TRAILER_SIZE:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
     137: if_acmpne     237
     140: getstatic     #40                 // Field $assertionsDisabled:Z
     143: ifne          162
     146: aload_0
     147: getfield      #9                  // Field localBufOff:I
     150: iconst_4
     151: if_icmplt     162
     154: new           #41                 // class java/lang/AssertionError
     157: dup
     158: invokespecial #55                 // Method java/lang/AssertionError."<init>":()V
     161: athrow
     162: aload_0
     163: getfield      #7                  // Field userBufLen:I
     166: iconst_4
     167: aload_0
     168: getfield      #9                  // Field localBufOff:I
     171: isub
     172: invokestatic  #45                 // Method java/lang/Math.min:(II)I
     175: istore_1
     176: aload_0
     177: iload_1
     178: invokespecial #56                 // Method copyBytesToLocal:(I)V
     181: aload_0
     182: getfield      #9                  // Field localBufOff:I
     185: iconst_4
     186: if_icmplt     237
     189: aload_0
     190: aload_0
     191: getfield      #8                  // Field localBuf:[B
     194: iconst_0
     195: invokespecial #61                 // Method readUIntLE:([BI)J
     198: lstore_2
     199: lload_2
     200: aload_0
     201: getfield      #4                  // Field inflater:Ljava/util/zip/Inflater;
     204: invokevirtual #64                 // Method java/util/zip/Inflater.getBytesWritten:()J
     207: ldc2_w        #65                 // long 4294967295l
     210: land
     211: lcmp
     212: ifeq          225
     215: new           #33                 // class java/io/IOException
     218: dup
     219: ldc           #67                 // String stored gzip size doesn\'t match decompressed size
     221: invokespecial #35                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     224: athrow
     225: aload_0
     226: iconst_0
     227: putfield      #9                  // Field localBufOff:I
     230: aload_0
     231: getstatic     #24                 // Field org/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel.FINISHED:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
     234: putfield      #20                 // Field state:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
     237: aload_0
     238: getfield      #20                 // Field state:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
     241: getstatic     #24                 // Field org/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel.FINISHED:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
     244: if_acmpne     248
     247: return
     248: return

  public synchronized long getBytesRead();
    Code:
       0: aload_0
       1: getfield      #10                 // Field headerBytesRead:I
       4: i2l
       5: aload_0
       6: getfield      #4                  // Field inflater:Ljava/util/zip/Inflater;
       9: invokevirtual #68                 // Method java/util/zip/Inflater.getBytesRead:()J
      12: ladd
      13: aload_0
      14: getfield      #11                 // Field trailerBytesRead:I
      17: i2l
      18: ladd
      19: lreturn

  public synchronized int getRemaining();
    Code:
       0: aload_0
       1: getfield      #7                  // Field userBufLen:I
       4: ireturn

  public synchronized boolean needsDictionary();
    Code:
       0: aload_0
       1: getfield      #4                  // Field inflater:Ljava/util/zip/Inflater;
       4: invokevirtual #69                 // Method java/util/zip/Inflater.needsDictionary:()Z
       7: ireturn

  public synchronized void setDictionary(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field inflater:Ljava/util/zip/Inflater;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #70                 // Method java/util/zip/Inflater.setDictionary:([BII)V
      10: return

  public synchronized boolean finished();
    Code:
       0: aload_0
       1: getfield      #20                 // Field state:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
       4: getstatic     #24                 // Field org/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel.FINISHED:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public synchronized void reset();
    Code:
       0: aload_0
       1: getfield      #4                  // Field inflater:Ljava/util/zip/Inflater;
       4: invokevirtual #71                 // Method java/util/zip/Inflater.reset:()V
       7: aload_0
       8: getstatic     #19                 // Field org/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel.HEADER_BASIC:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
      11: putfield      #20                 // Field state:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
      14: aload_0
      15: getfield      #14                 // Field crc:Ljava/util/zip/Checksum;
      18: invokeinterface #21,  1           // InterfaceMethod java/util/zip/Checksum.reset:()V
      23: aload_0
      24: aload_0
      25: iconst_0
      26: dup_x1
      27: putfield      #7                  // Field userBufLen:I
      30: putfield      #6                  // Field userBufOff:I
      33: aload_0
      34: iconst_0
      35: putfield      #9                  // Field localBufOff:I
      38: aload_0
      39: iconst_0
      40: putfield      #10                 // Field headerBytesRead:I
      43: aload_0
      44: iconst_0
      45: putfield      #11                 // Field trailerBytesRead:I
      48: aload_0
      49: iconst_m1
      50: putfield      #12                 // Field numExtraFieldBytesRemaining:I
      53: aload_0
      54: iconst_0
      55: putfield      #15                 // Field hasExtraField:Z
      58: aload_0
      59: iconst_0
      60: putfield      #16                 // Field hasFilename:Z
      63: aload_0
      64: iconst_0
      65: putfield      #17                 // Field hasComment:Z
      68: aload_0
      69: iconst_0
      70: putfield      #18                 // Field hasHeaderCRC:Z
      73: return

  public synchronized void end();
    Code:
       0: aload_0
       1: getfield      #4                  // Field inflater:Ljava/util/zip/Inflater;
       4: invokevirtual #72                 // Method java/util/zip/Inflater.end:()V
       7: return

  private void processBasicHeader() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #8                  // Field localBuf:[B
       5: iconst_0
       6: invokespecial #49                 // Method readUShortLE:([BI)I
       9: ldc           #74                 // int 35615
      11: if_icmpeq     24
      14: new           #33                 // class java/io/IOException
      17: dup
      18: ldc           #75                 // String not a gzip file
      20: invokespecial #35                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: aload_0
      26: getfield      #8                  // Field localBuf:[B
      29: iconst_2
      30: invokespecial #76                 // Method readUByte:([BI)I
      33: bipush        8
      35: if_icmpeq     48
      38: new           #33                 // class java/io/IOException
      41: dup
      42: ldc           #77                 // String gzip data not compressed with deflate method
      44: invokespecial #35                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: aload_0
      49: aload_0
      50: getfield      #8                  // Field localBuf:[B
      53: iconst_3
      54: invokespecial #76                 // Method readUByte:([BI)I
      57: istore_1
      58: iload_1
      59: sipush        224
      62: iand
      63: ifeq          76
      66: new           #33                 // class java/io/IOException
      69: dup
      70: ldc           #78                 // String unknown gzip format (reserved flagbits set)
      72: invokespecial #35                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      75: athrow
      76: aload_0
      77: iload_1
      78: iconst_4
      79: iand
      80: ifeq          87
      83: iconst_1
      84: goto          88
      87: iconst_0
      88: putfield      #15                 // Field hasExtraField:Z
      91: aload_0
      92: iload_1
      93: bipush        8
      95: iand
      96: ifeq          103
      99: iconst_1
     100: goto          104
     103: iconst_0
     104: putfield      #16                 // Field hasFilename:Z
     107: aload_0
     108: iload_1
     109: bipush        16
     111: iand
     112: ifeq          119
     115: iconst_1
     116: goto          120
     119: iconst_0
     120: putfield      #17                 // Field hasComment:Z
     123: aload_0
     124: iload_1
     125: iconst_2
     126: iand
     127: ifeq          134
     130: iconst_1
     131: goto          135
     134: iconst_0
     135: putfield      #18                 // Field hasHeaderCRC:Z
     138: return

  private void checkAndCopyBytesToLocal(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field userBuf:[B
       4: aload_0
       5: getfield      #6                  // Field userBufOff:I
       8: aload_0
       9: getfield      #8                  // Field localBuf:[B
      12: aload_0
      13: getfield      #9                  // Field localBufOff:I
      16: iload_1
      17: invokestatic  #79                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      20: aload_0
      21: dup
      22: getfield      #9                  // Field localBufOff:I
      25: iload_1
      26: iadd
      27: putfield      #9                  // Field localBufOff:I
      30: aload_0
      31: getfield      #14                 // Field crc:Ljava/util/zip/Checksum;
      34: aload_0
      35: getfield      #5                  // Field userBuf:[B
      38: aload_0
      39: getfield      #6                  // Field userBufOff:I
      42: iload_1
      43: invokeinterface #36,  4           // InterfaceMethod java/util/zip/Checksum.update:([BII)V
      48: aload_0
      49: dup
      50: getfield      #6                  // Field userBufOff:I
      53: iload_1
      54: iadd
      55: putfield      #6                  // Field userBufOff:I
      58: aload_0
      59: dup
      60: getfield      #7                  // Field userBufLen:I
      63: iload_1
      64: isub
      65: putfield      #7                  // Field userBufLen:I
      68: aload_0
      69: dup
      70: getfield      #10                 // Field headerBytesRead:I
      73: iload_1
      74: iadd
      75: putfield      #10                 // Field headerBytesRead:I
      78: return

  private void checkAndSkipBytes(int);
    Code:
       0: aload_0
       1: getfield      #14                 // Field crc:Ljava/util/zip/Checksum;
       4: aload_0
       5: getfield      #5                  // Field userBuf:[B
       8: aload_0
       9: getfield      #6                  // Field userBufOff:I
      12: iload_1
      13: invokeinterface #36,  4           // InterfaceMethod java/util/zip/Checksum.update:([BII)V
      18: aload_0
      19: dup
      20: getfield      #6                  // Field userBufOff:I
      23: iload_1
      24: iadd
      25: putfield      #6                  // Field userBufOff:I
      28: aload_0
      29: dup
      30: getfield      #7                  // Field userBufLen:I
      33: iload_1
      34: isub
      35: putfield      #7                  // Field userBufLen:I
      38: aload_0
      39: dup
      40: getfield      #10                 // Field headerBytesRead:I
      43: iload_1
      44: iadd
      45: putfield      #10                 // Field headerBytesRead:I
      48: return

  private boolean checkAndSkipBytesUntilNull();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #7                  // Field userBufLen:I
       6: ifle          86
       9: aload_0
      10: getfield      #5                  // Field userBuf:[B
      13: aload_0
      14: getfield      #6                  // Field userBufOff:I
      17: baload
      18: ifne          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: istore_1
      27: aload_0
      28: getfield      #14                 // Field crc:Ljava/util/zip/Checksum;
      31: aload_0
      32: getfield      #5                  // Field userBuf:[B
      35: aload_0
      36: getfield      #6                  // Field userBufOff:I
      39: baload
      40: invokeinterface #80,  2           // InterfaceMethod java/util/zip/Checksum.update:(I)V
      45: aload_0
      46: dup
      47: getfield      #6                  // Field userBufOff:I
      50: iconst_1
      51: iadd
      52: putfield      #6                  // Field userBufOff:I
      55: aload_0
      56: dup
      57: getfield      #7                  // Field userBufLen:I
      60: iconst_1
      61: isub
      62: putfield      #7                  // Field userBufLen:I
      65: aload_0
      66: dup
      67: getfield      #10                 // Field headerBytesRead:I
      70: iconst_1
      71: iadd
      72: putfield      #10                 // Field headerBytesRead:I
      75: aload_0
      76: getfield      #7                  // Field userBufLen:I
      79: ifle          86
      82: iload_1
      83: ifeq          9
      86: iload_1
      87: ireturn

  private void copyBytesToLocal(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field userBuf:[B
       4: aload_0
       5: getfield      #6                  // Field userBufOff:I
       8: aload_0
       9: getfield      #8                  // Field localBuf:[B
      12: aload_0
      13: getfield      #9                  // Field localBufOff:I
      16: iload_1
      17: invokestatic  #79                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      20: aload_0
      21: dup
      22: getfield      #9                  // Field localBufOff:I
      25: iload_1
      26: iadd
      27: putfield      #9                  // Field localBufOff:I
      30: aload_0
      31: dup
      32: getfield      #6                  // Field userBufOff:I
      35: iload_1
      36: iadd
      37: putfield      #6                  // Field userBufOff:I
      40: aload_0
      41: dup
      42: getfield      #7                  // Field userBufLen:I
      45: iload_1
      46: isub
      47: putfield      #7                  // Field userBufLen:I
      50: aload_0
      51: getfield      #20                 // Field state:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
      54: getstatic     #38                 // Field org/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel.TRAILER_CRC:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
      57: if_acmpeq     70
      60: aload_0
      61: getfield      #20                 // Field state:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
      64: getstatic     #63                 // Field org/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel.TRAILER_SIZE:Lorg/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor$GzipStateLabel;
      67: if_acmpne     83
      70: aload_0
      71: dup
      72: getfield      #11                 // Field trailerBytesRead:I
      75: iload_1
      76: iadd
      77: putfield      #11                 // Field trailerBytesRead:I
      80: goto          93
      83: aload_0
      84: dup
      85: getfield      #10                 // Field headerBytesRead:I
      88: iload_1
      89: iadd
      90: putfield      #10                 // Field headerBytesRead:I
      93: return

  private int readUByte(byte[], int);
    Code:
       0: aload_1
       1: iload_2
       2: baload
       3: sipush        255
       6: iand
       7: ireturn

  private int readUShortLE(byte[], int);
    Code:
       0: aload_1
       1: iload_2
       2: iconst_1
       3: iadd
       4: baload
       5: sipush        255
       8: iand
       9: bipush        8
      11: ishl
      12: aload_1
      13: iload_2
      14: baload
      15: sipush        255
      18: iand
      19: ior
      20: ldc           #81                 // int 65535
      22: iand
      23: ireturn

  private long readUIntLE(byte[], int);
    Code:
       0: aload_1
       1: iload_2
       2: iconst_3
       3: iadd
       4: baload
       5: sipush        255
       8: iand
       9: i2l
      10: bipush        24
      12: lshl
      13: aload_1
      14: iload_2
      15: iconst_2
      16: iadd
      17: baload
      18: sipush        255
      21: iand
      22: i2l
      23: bipush        16
      25: lshl
      26: lor
      27: aload_1
      28: iload_2
      29: iconst_1
      30: iadd
      31: baload
      32: sipush        255
      35: iand
      36: i2l
      37: bipush        8
      39: lshl
      40: lor
      41: aload_1
      42: iload_2
      43: baload
      44: sipush        255
      47: iand
      48: i2l
      49: lor
      50: ldc2_w        #65                 // long 4294967295l
      53: land
      54: lreturn

  static {};
    Code:
       0: ldc           #73                 // class org/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor
       2: invokevirtual #82                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #40                 // Field $assertionsDisabled:Z
      16: return
}
