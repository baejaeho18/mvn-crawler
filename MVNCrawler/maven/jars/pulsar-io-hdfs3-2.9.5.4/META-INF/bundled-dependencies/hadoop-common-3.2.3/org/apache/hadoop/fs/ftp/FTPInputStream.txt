Compiled from "FTPInputStream.java"
public class org.apache.hadoop.fs.ftp.FTPInputStream extends org.apache.hadoop.fs.FSInputStream {
  java.io.InputStream wrappedStream;

  org.apache.commons.net.ftp.FTPClient client;

  org.apache.hadoop.fs.FileSystem$Statistics stats;

  boolean closed;

  long pos;

  public org.apache.hadoop.fs.ftp.FTPInputStream(java.io.InputStream, org.apache.commons.net.ftp.FTPClient, org.apache.hadoop.fs.FileSystem$Statistics);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/fs/FSInputStream."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #2                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #3                  // String Null InputStream
      14: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_2
      19: ifnull        29
      22: aload_2
      23: invokevirtual #5                  // Method org/apache/commons/net/ftp/FTPClient.isConnected:()Z
      26: ifne          39
      29: new           #2                  // class java/lang/IllegalArgumentException
      32: dup
      33: ldc           #6                  // String FTP client null or not connected
      35: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_0
      40: aload_1
      41: putfield      #7                  // Field wrappedStream:Ljava/io/InputStream;
      44: aload_0
      45: aload_2
      46: putfield      #8                  // Field client:Lorg/apache/commons/net/ftp/FTPClient;
      49: aload_0
      50: aload_3
      51: putfield      #9                  // Field stats:Lorg/apache/hadoop/fs/FileSystem$Statistics;
      54: aload_0
      55: lconst_0
      56: putfield      #10                 // Field pos:J
      59: aload_0
      60: iconst_0
      61: putfield      #11                 // Field closed:Z
      64: return

  public long getPos() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field pos:J
       4: lreturn

  public void seek(long) throws java.io.IOException;
    Code:
       0: new           #12                 // class java/io/IOException
       3: dup
       4: ldc           #13                 // String Seek not supported
       6: invokespecial #14                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
       9: athrow

  public boolean seekToNewSource(long) throws java.io.IOException;
    Code:
       0: new           #12                 // class java/io/IOException
       3: dup
       4: ldc           #13                 // String Seek not supported
       6: invokespecial #14                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
       9: athrow

  public synchronized int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field closed:Z
       4: ifeq          17
       7: new           #12                 // class java/io/IOException
      10: dup
      11: ldc           #15                 // String Stream closed
      13: invokespecial #14                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #7                  // Field wrappedStream:Ljava/io/InputStream;
      21: invokevirtual #16                 // Method java/io/InputStream.read:()I
      24: istore_1
      25: iload_1
      26: iflt          39
      29: aload_0
      30: dup
      31: getfield      #10                 // Field pos:J
      34: lconst_1
      35: ladd
      36: putfield      #10                 // Field pos:J
      39: aload_0
      40: getfield      #9                  // Field stats:Lorg/apache/hadoop/fs/FileSystem$Statistics;
      43: ifnull        58
      46: iload_1
      47: iflt          58
      50: aload_0
      51: getfield      #9                  // Field stats:Lorg/apache/hadoop/fs/FileSystem$Statistics;
      54: lconst_1
      55: invokevirtual #17                 // Method org/apache/hadoop/fs/FileSystem$Statistics.incrementBytesRead:(J)V
      58: iload_1
      59: ireturn

  public synchronized int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field closed:Z
       4: ifeq          17
       7: new           #12                 // class java/io/IOException
      10: dup
      11: ldc           #15                 // String Stream closed
      13: invokespecial #14                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #7                  // Field wrappedStream:Ljava/io/InputStream;
      21: aload_1
      22: iload_2
      23: iload_3
      24: invokevirtual #18                 // Method java/io/InputStream.read:([BII)I
      27: istore        4
      29: iload         4
      31: ifle          46
      34: aload_0
      35: dup
      36: getfield      #10                 // Field pos:J
      39: iload         4
      41: i2l
      42: ladd
      43: putfield      #10                 // Field pos:J
      46: aload_0
      47: getfield      #9                  // Field stats:Lorg/apache/hadoop/fs/FileSystem$Statistics;
      50: ifnull        68
      53: iload         4
      55: ifle          68
      58: aload_0
      59: getfield      #9                  // Field stats:Lorg/apache/hadoop/fs/FileSystem$Statistics;
      62: iload         4
      64: i2l
      65: invokevirtual #17                 // Method org/apache/hadoop/fs/FileSystem$Statistics.incrementBytesRead:(J)V
      68: iload         4
      70: ireturn

  public synchronized void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field closed:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: invokespecial #19                 // Method org/apache/hadoop/fs/FSInputStream.close:()V
      12: aload_0
      13: iconst_1
      14: putfield      #11                 // Field closed:Z
      17: aload_0
      18: getfield      #8                  // Field client:Lorg/apache/commons/net/ftp/FTPClient;
      21: invokevirtual #5                  // Method org/apache/commons/net/ftp/FTPClient.isConnected:()Z
      24: ifne          37
      27: new           #20                 // class org/apache/hadoop/fs/ftp/FTPException
      30: dup
      31: ldc           #21                 // String Client not connected
      33: invokespecial #22                 // Method org/apache/hadoop/fs/ftp/FTPException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: aload_0
      38: getfield      #8                  // Field client:Lorg/apache/commons/net/ftp/FTPClient;
      41: invokevirtual #23                 // Method org/apache/commons/net/ftp/FTPClient.completePendingCommand:()Z
      44: istore_1
      45: aload_0
      46: getfield      #8                  // Field client:Lorg/apache/commons/net/ftp/FTPClient;
      49: invokevirtual #24                 // Method org/apache/commons/net/ftp/FTPClient.logout:()Z
      52: pop
      53: aload_0
      54: getfield      #8                  // Field client:Lorg/apache/commons/net/ftp/FTPClient;
      57: invokevirtual #25                 // Method org/apache/commons/net/ftp/FTPClient.disconnect:()V
      60: iload_1
      61: ifne          97
      64: new           #20                 // class org/apache/hadoop/fs/ftp/FTPException
      67: dup
      68: new           #26                 // class java/lang/StringBuilder
      71: dup
      72: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      75: ldc           #28                 // String Could not complete transfer, Reply Code -
      77: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: aload_0
      81: getfield      #8                  // Field client:Lorg/apache/commons/net/ftp/FTPClient;
      84: invokevirtual #30                 // Method org/apache/commons/net/ftp/FTPClient.getReplyCode:()I
      87: invokevirtual #31                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      90: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      93: invokespecial #22                 // Method org/apache/hadoop/fs/ftp/FTPException."<init>":(Ljava/lang/String;)V
      96: athrow
      97: return

  public boolean markSupported();
    Code:
       0: iconst_0
       1: ireturn

  public void mark(int);
    Code:
       0: return

  public void reset() throws java.io.IOException;
    Code:
       0: new           #12                 // class java/io/IOException
       3: dup
       4: ldc           #33                 // String Mark not supported
       6: invokespecial #14                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
       9: athrow
}
