Compiled from "HttpServer2.java"
public class org.apache.hadoop.http.HttpServer2$Builder {
  private java.util.ArrayList<java.net.URI> endpoints;

  private java.lang.String name;

  private org.apache.hadoop.conf.Configuration conf;

  private org.apache.hadoop.conf.Configuration sslConf;

  private java.lang.String[] pathSpecs;

  private org.apache.hadoop.security.authorize.AccessControlList adminsAcl;

  private boolean securityEnabled;

  private java.lang.String usernameConfKey;

  private java.lang.String keytabConfKey;

  private boolean needsClientAuth;

  private java.lang.String trustStore;

  private java.lang.String trustStorePassword;

  private java.lang.String trustStoreType;

  private java.lang.String keyStore;

  private java.lang.String keyStorePassword;

  private java.lang.String keyStoreType;

  private java.lang.String keyPassword;

  private boolean findPort;

  private org.apache.hadoop.conf.Configuration$IntegerRanges portRanges;

  private java.lang.String hostName;

  private boolean disallowFallbackToRandomSignerSecretProvider;

  private java.lang.String authFilterConfigurationPrefix;

  private java.lang.String excludeCiphers;

  private boolean xFrameEnabled;

  private org.apache.hadoop.http.HttpServer2$XFrameOption xFrameOption;

  private boolean sniHostCheckEnabled;

  public org.apache.hadoop.http.HttpServer2$Builder();
    Code:
       0: aload_0
       1: invokespecial #13                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #14                 // Method com/google/common/collect/Lists.newArrayList:()Ljava/util/ArrayList;
       8: putfield      #15                 // Field endpoints:Ljava/util/ArrayList;
      11: aload_0
      12: iconst_0
      13: putfield      #16                 // Field securityEnabled:Z
      16: aload_0
      17: aconst_null
      18: putfield      #7                  // Field portRanges:Lorg/apache/hadoop/conf/Configuration$IntegerRanges;
      21: aload_0
      22: ldc           #17                 // String hadoop.http.authentication.
      24: putfield      #3                  // Field authFilterConfigurationPrefix:Ljava/lang/String;
      27: aload_0
      28: getstatic     #18                 // Field org/apache/hadoop/http/HttpServer2$XFrameOption.SAMEORIGIN:Lorg/apache/hadoop/http/HttpServer2$XFrameOption;
      31: putfield      #9                  // Field xFrameOption:Lorg/apache/hadoop/http/HttpServer2$XFrameOption;
      34: return

  public org.apache.hadoop.http.HttpServer2$Builder setName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field name:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.hadoop.http.HttpServer2$Builder addEndpoint(java.net.URI);
    Code:
       0: aload_0
       1: getfield      #15                 // Field endpoints:Ljava/util/ArrayList;
       4: aload_1
       5: invokevirtual #19                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
       8: pop
       9: aload_0
      10: areturn

  public org.apache.hadoop.http.HttpServer2$Builder hostName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field hostName:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.hadoop.http.HttpServer2$Builder trustStore(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field trustStore:Ljava/lang/String;
       5: aload_0
       6: aload_2
       7: putfield      #21                 // Field trustStorePassword:Ljava/lang/String;
      10: aload_0
      11: aload_3
      12: putfield      #22                 // Field trustStoreType:Ljava/lang/String;
      15: aload_0
      16: areturn

  public org.apache.hadoop.http.HttpServer2$Builder keyStore(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field keyStore:Ljava/lang/String;
       5: aload_0
       6: aload_2
       7: putfield      #24                 // Field keyStorePassword:Ljava/lang/String;
      10: aload_0
      11: aload_3
      12: putfield      #25                 // Field keyStoreType:Ljava/lang/String;
      15: aload_0
      16: areturn

  public org.apache.hadoop.http.HttpServer2$Builder keyPassword(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #26                 // Field keyPassword:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.hadoop.http.HttpServer2$Builder needsClientAuth(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #27                 // Field needsClientAuth:Z
       5: aload_0
       6: areturn

  public org.apache.hadoop.http.HttpServer2$Builder setFindPort(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field findPort:Z
       5: aload_0
       6: areturn

  public org.apache.hadoop.http.HttpServer2$Builder setPortRanges(org.apache.hadoop.conf.Configuration$IntegerRanges);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field portRanges:Lorg/apache/hadoop/conf/Configuration$IntegerRanges;
       5: aload_0
       6: areturn

  public org.apache.hadoop.http.HttpServer2$Builder setConf(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       5: aload_0
       6: areturn

  public org.apache.hadoop.http.HttpServer2$Builder setSSLConf(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #28                 // Field sslConf:Lorg/apache/hadoop/conf/Configuration;
       5: aload_0
       6: areturn

  public org.apache.hadoop.http.HttpServer2$Builder setPathSpec(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field pathSpecs:[Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.hadoop.http.HttpServer2$Builder setACL(org.apache.hadoop.security.authorize.AccessControlList);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field adminsAcl:Lorg/apache/hadoop/security/authorize/AccessControlList;
       5: aload_0
       6: areturn

  public org.apache.hadoop.http.HttpServer2$Builder setSecurityEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #16                 // Field securityEnabled:Z
       5: aload_0
       6: areturn

  public org.apache.hadoop.http.HttpServer2$Builder setUsernameConfKey(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #29                 // Field usernameConfKey:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.hadoop.http.HttpServer2$Builder setKeytabConfKey(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #30                 // Field keytabConfKey:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.hadoop.http.HttpServer2$Builder disallowFallbackToRandomSingerSecretProvider(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field disallowFallbackToRandomSignerSecretProvider:Z
       5: aload_0
       6: areturn

  public org.apache.hadoop.http.HttpServer2$Builder authFilterConfigurationPrefix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field authFilterConfigurationPrefix:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.hadoop.http.HttpServer2$Builder excludeCiphers(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #31                 // Field excludeCiphers:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.hadoop.http.HttpServer2$Builder configureXFrame(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field xFrameEnabled:Z
       5: aload_0
       6: areturn

  public org.apache.hadoop.http.HttpServer2$Builder setXFrameOption(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #32                 // Method org/apache/hadoop/http/HttpServer2$XFrameOption.access$000:(Ljava/lang/String;)Lorg/apache/hadoop/http/HttpServer2$XFrameOption;
       5: putfield      #9                  // Field xFrameOption:Lorg/apache/hadoop/http/HttpServer2$XFrameOption;
       8: aload_0
       9: areturn

  public org.apache.hadoop.http.HttpServer2$Builder setSniHostCheckEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #33                 // Field sniHostCheckEnabled:Z
       5: aload_0
       6: areturn

  private static java.lang.String getPasswordString(org.apache.hadoop.conf.Configuration, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #34                 // Method org/apache/hadoop/conf/Configuration.getPassword:(Ljava/lang/String;)[C
       5: astore_2
       6: aload_2
       7: ifnonnull     12
      10: aconst_null
      11: areturn
      12: new           #35                 // class java/lang/String
      15: dup
      16: aload_2
      17: invokespecial #36                 // Method java/lang/String."<init>":([C)V
      20: areturn

  private void loadSSLConfiguration() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #28                 // Field sslConf:Lorg/apache/hadoop/conf/Configuration;
       4: ifnonnull     8
       7: return
       8: aload_0
       9: aload_0
      10: getfield      #28                 // Field sslConf:Lorg/apache/hadoop/conf/Configuration;
      13: ldc           #38                 // String ssl.server.need.client.auth
      15: iconst_0
      16: invokevirtual #39                 // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
      19: putfield      #27                 // Field needsClientAuth:Z
      22: aload_0
      23: aload_0
      24: getfield      #28                 // Field sslConf:Lorg/apache/hadoop/conf/Configuration;
      27: ldc           #40                 // String ssl.server.keystore.location
      29: invokevirtual #41                 // Method org/apache/hadoop/conf/Configuration.getTrimmed:(Ljava/lang/String;)Ljava/lang/String;
      32: putfield      #23                 // Field keyStore:Ljava/lang/String;
      35: aload_0
      36: getfield      #23                 // Field keyStore:Ljava/lang/String;
      39: ifnull        52
      42: aload_0
      43: getfield      #23                 // Field keyStore:Ljava/lang/String;
      46: invokevirtual #42                 // Method java/lang/String.isEmpty:()Z
      49: ifeq          74
      52: new           #43                 // class java/io/IOException
      55: dup
      56: ldc           #44                 // String Property %s not specified
      58: iconst_1
      59: anewarray     #45                 // class java/lang/Object
      62: dup
      63: iconst_0
      64: ldc           #40                 // String ssl.server.keystore.location
      66: aastore
      67: invokestatic  #46                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      70: invokespecial #47                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      73: athrow
      74: aload_0
      75: aload_0
      76: getfield      #28                 // Field sslConf:Lorg/apache/hadoop/conf/Configuration;
      79: ldc           #48                 // String ssl.server.keystore.password
      81: invokestatic  #49                 // Method getPasswordString:(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Ljava/lang/String;
      84: putfield      #24                 // Field keyStorePassword:Ljava/lang/String;
      87: aload_0
      88: getfield      #24                 // Field keyStorePassword:Ljava/lang/String;
      91: ifnonnull     116
      94: new           #43                 // class java/io/IOException
      97: dup
      98: ldc           #44                 // String Property %s not specified
     100: iconst_1
     101: anewarray     #45                 // class java/lang/Object
     104: dup
     105: iconst_0
     106: ldc           #48                 // String ssl.server.keystore.password
     108: aastore
     109: invokestatic  #46                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     112: invokespecial #47                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     115: athrow
     116: aload_0
     117: aload_0
     118: getfield      #28                 // Field sslConf:Lorg/apache/hadoop/conf/Configuration;
     121: ldc           #50                 // String ssl.server.keystore.type
     123: ldc           #51                 // String jks
     125: invokevirtual #52                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     128: putfield      #25                 // Field keyStoreType:Ljava/lang/String;
     131: aload_0
     132: aload_0
     133: getfield      #28                 // Field sslConf:Lorg/apache/hadoop/conf/Configuration;
     136: ldc           #53                 // String ssl.server.keystore.keypassword
     138: invokestatic  #49                 // Method getPasswordString:(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Ljava/lang/String;
     141: putfield      #26                 // Field keyPassword:Ljava/lang/String;
     144: aload_0
     145: aload_0
     146: getfield      #28                 // Field sslConf:Lorg/apache/hadoop/conf/Configuration;
     149: ldc           #54                 // String ssl.server.truststore.location
     151: invokevirtual #55                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;)Ljava/lang/String;
     154: putfield      #20                 // Field trustStore:Ljava/lang/String;
     157: aload_0
     158: aload_0
     159: getfield      #28                 // Field sslConf:Lorg/apache/hadoop/conf/Configuration;
     162: ldc           #56                 // String ssl.server.truststore.password
     164: invokestatic  #49                 // Method getPasswordString:(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Ljava/lang/String;
     167: putfield      #21                 // Field trustStorePassword:Ljava/lang/String;
     170: aload_0
     171: aload_0
     172: getfield      #28                 // Field sslConf:Lorg/apache/hadoop/conf/Configuration;
     175: ldc           #57                 // String ssl.server.truststore.type
     177: ldc           #51                 // String jks
     179: invokevirtual #52                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     182: putfield      #22                 // Field trustStoreType:Ljava/lang/String;
     185: aload_0
     186: aload_0
     187: getfield      #28                 // Field sslConf:Lorg/apache/hadoop/conf/Configuration;
     190: ldc           #58                 // String ssl.server.exclude.cipher.list
     192: invokevirtual #55                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;)Ljava/lang/String;
     195: putfield      #31                 // Field excludeCiphers:Ljava/lang/String;
     198: return

  public org.apache.hadoop.http.HttpServer2 build() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field name:Ljava/lang/String;
       4: ldc           #59                 // String name is not set
       6: invokestatic  #60                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: getfield      #15                 // Field endpoints:Ljava/util/ArrayList;
      14: invokevirtual #61                 // Method java/util/ArrayList.isEmpty:()Z
      17: ifne          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ldc           #62                 // String No endpoints specified
      27: invokestatic  #63                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      30: aload_0
      31: getfield      #6                  // Field hostName:Ljava/lang/String;
      34: ifnonnull     55
      37: aload_0
      38: aload_0
      39: getfield      #15                 // Field endpoints:Ljava/util/ArrayList;
      42: iconst_0
      43: invokevirtual #64                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      46: checkcast     #65                 // class java/net/URI
      49: invokevirtual #66                 // Method java/net/URI.getHost:()Ljava/lang/String;
      52: putfield      #6                  // Field hostName:Ljava/lang/String;
      55: aload_0
      56: getfield      #5                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      59: ifnonnull     73
      62: aload_0
      63: new           #67                 // class org/apache/hadoop/conf/Configuration
      66: dup
      67: invokespecial #68                 // Method org/apache/hadoop/conf/Configuration."<init>":()V
      70: putfield      #5                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      73: new           #1                  // class org/apache/hadoop/http/HttpServer2
      76: dup
      77: aload_0
      78: aconst_null
      79: invokespecial #69                 // Method org/apache/hadoop/http/HttpServer2."<init>":(Lorg/apache/hadoop/http/HttpServer2$Builder;Lorg/apache/hadoop/http/HttpServer2$1;)V
      82: astore_1
      83: aload_0
      84: getfield      #16                 // Field securityEnabled:Z
      87: ifeq          110
      90: aload_1
      91: aload_0
      92: getfield      #5                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      95: aload_0
      96: getfield      #6                  // Field hostName:Ljava/lang/String;
      99: aload_0
     100: getfield      #29                 // Field usernameConfKey:Ljava/lang/String;
     103: aload_0
     104: getfield      #30                 // Field keytabConfKey:Ljava/lang/String;
     107: invokestatic  #70                 // Method org/apache/hadoop/http/HttpServer2.access$200:(Lorg/apache/hadoop/http/HttpServer2;Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     110: aload_0
     111: getfield      #15                 // Field endpoints:Ljava/util/ArrayList;
     114: invokevirtual #71                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
     117: astore_2
     118: aload_2
     119: invokeinterface #72,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     124: ifeq          159
     127: aload_2
     128: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     133: checkcast     #65                 // class java/net/URI
     136: astore_3
     137: ldc           #74                 // String https
     139: aload_3
     140: invokevirtual #75                 // Method java/net/URI.getScheme:()Ljava/lang/String;
     143: invokevirtual #76                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     146: ifeq          156
     149: aload_0
     150: invokespecial #77                 // Method loadSSLConfiguration:()V
     153: goto          159
     156: goto          118
     159: aload_0
     160: getfield      #5                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
     163: ldc           #78                 // String hadoop.http.max.request.header.size
     165: ldc           #79                 // int 65536
     167: invokevirtual #80                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
     170: istore_2
     171: aload_0
     172: getfield      #5                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
     175: ldc           #81                 // String hadoop.http.max.response.header.size
     177: ldc           #79                 // int 65536
     179: invokevirtual #80                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
     182: istore_3
     183: aload_0
     184: getfield      #5                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
     187: ldc           #82                 // String hadoop.http.idle_timeout.ms
     189: ldc           #83                 // int 60000
     191: invokevirtual #80                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
     194: istore        4
     196: new           #84                 // class org/eclipse/jetty/server/HttpConfiguration
     199: dup
     200: invokespecial #85                 // Method org/eclipse/jetty/server/HttpConfiguration."<init>":()V
     203: astore        5
     205: aload         5
     207: iload_2
     208: invokevirtual #86                 // Method org/eclipse/jetty/server/HttpConfiguration.setRequestHeaderSize:(I)V
     211: aload         5
     213: iload_3
     214: invokevirtual #87                 // Method org/eclipse/jetty/server/HttpConfiguration.setResponseHeaderSize:(I)V
     217: aload         5
     219: iconst_0
     220: invokevirtual #88                 // Method org/eclipse/jetty/server/HttpConfiguration.setSendServerVersion:(Z)V
     223: aload_0
     224: getfield      #5                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
     227: ldc           #89                 // String hadoop.http.socket.backlog.size
     229: sipush        128
     232: invokevirtual #80                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
     235: istore        6
     237: aload_0
     238: getfield      #33                 // Field sniHostCheckEnabled:Z
     241: ifne          258
     244: aload_0
     245: aload_0
     246: getfield      #5                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
     249: ldc           #90                 // String hadoop.http.sni.host.check.enabled
     251: iconst_0
     252: invokevirtual #39                 // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
     255: putfield      #33                 // Field sniHostCheckEnabled:Z
     258: aload_0
     259: getfield      #15                 // Field endpoints:Ljava/util/ArrayList;
     262: invokevirtual #71                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
     265: astore        7
     267: aload         7
     269: invokeinterface #72,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     274: ifeq          431
     277: aload         7
     279: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     284: checkcast     #65                 // class java/net/URI
     287: astore        8
     289: aload         8
     291: invokevirtual #75                 // Method java/net/URI.getScheme:()Ljava/lang/String;
     294: astore        10
     296: ldc           #91                 // String http
     298: aload         10
     300: invokevirtual #76                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     303: ifeq          321
     306: aload_0
     307: aload_1
     308: getfield      #92                 // Field org/apache/hadoop/http/HttpServer2.webServer:Lorg/eclipse/jetty/server/Server;
     311: aload         5
     313: invokespecial #93                 // Method createHttpChannelConnector:(Lorg/eclipse/jetty/server/Server;Lorg/eclipse/jetty/server/HttpConfiguration;)Lorg/eclipse/jetty/server/ServerConnector;
     316: astore        9
     318: goto          374
     321: ldc           #74                 // String https
     323: aload         10
     325: invokevirtual #76                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     328: ifeq          346
     331: aload_0
     332: aload_1
     333: getfield      #92                 // Field org/apache/hadoop/http/HttpServer2.webServer:Lorg/eclipse/jetty/server/Server;
     336: aload         5
     338: invokespecial #94                 // Method createHttpsChannelConnector:(Lorg/eclipse/jetty/server/Server;Lorg/eclipse/jetty/server/HttpConfiguration;)Lorg/eclipse/jetty/server/ServerConnector;
     341: astore        9
     343: goto          374
     346: new           #95                 // class org/apache/hadoop/HadoopIllegalArgumentException
     349: dup
     350: new           #96                 // class java/lang/StringBuilder
     353: dup
     354: invokespecial #97                 // Method java/lang/StringBuilder."<init>":()V
     357: ldc           #98                 // String unknown scheme for endpoint:
     359: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     362: aload         8
     364: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     367: invokevirtual #101                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     370: invokespecial #102                // Method org/apache/hadoop/HadoopIllegalArgumentException."<init>":(Ljava/lang/String;)V
     373: athrow
     374: aload         9
     376: aload         8
     378: invokevirtual #66                 // Method java/net/URI.getHost:()Ljava/lang/String;
     381: invokevirtual #103                // Method org/eclipse/jetty/server/ServerConnector.setHost:(Ljava/lang/String;)V
     384: aload         9
     386: aload         8
     388: invokevirtual #104                // Method java/net/URI.getPort:()I
     391: iconst_m1
     392: if_icmpne     399
     395: iconst_0
     396: goto          404
     399: aload         8
     401: invokevirtual #104                // Method java/net/URI.getPort:()I
     404: invokevirtual #105                // Method org/eclipse/jetty/server/ServerConnector.setPort:(I)V
     407: aload         9
     409: iload         6
     411: invokevirtual #106                // Method org/eclipse/jetty/server/ServerConnector.setAcceptQueueSize:(I)V
     414: aload         9
     416: iload         4
     418: i2l
     419: invokevirtual #107                // Method org/eclipse/jetty/server/ServerConnector.setIdleTimeout:(J)V
     422: aload_1
     423: aload         9
     425: invokestatic  #108                // Method org/apache/hadoop/http/HttpServer2.access$300:(Lorg/apache/hadoop/http/HttpServer2;Lorg/eclipse/jetty/server/ServerConnector;)V
     428: goto          267
     431: aload_1
     432: invokestatic  #109                // Method org/apache/hadoop/http/HttpServer2.access$400:(Lorg/apache/hadoop/http/HttpServer2;)V
     435: aload_1
     436: areturn

  private org.eclipse.jetty.server.ServerConnector createHttpChannelConnector(org.eclipse.jetty.server.Server, org.eclipse.jetty.server.HttpConfiguration);
    Code:
       0: new           #110                // class org/eclipse/jetty/server/ServerConnector
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #5                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       9: ldc           #111                // String hadoop.http.acceptor.count
      11: iconst_m1
      12: invokevirtual #80                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      15: aload_0
      16: getfield      #5                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      19: ldc           #112                // String hadoop.http.selector.count
      21: iconst_m1
      22: invokevirtual #80                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      25: invokespecial #113                // Method org/eclipse/jetty/server/ServerConnector."<init>":(Lorg/eclipse/jetty/server/Server;II)V
      28: astore_3
      29: new           #114                // class org/eclipse/jetty/server/HttpConnectionFactory
      32: dup
      33: aload_2
      34: invokespecial #115                // Method org/eclipse/jetty/server/HttpConnectionFactory."<init>":(Lorg/eclipse/jetty/server/HttpConfiguration;)V
      37: astore        4
      39: aload_3
      40: aload         4
      42: invokevirtual #116                // Method org/eclipse/jetty/server/ServerConnector.addConnectionFactory:(Lorg/eclipse/jetty/server/ConnectionFactory;)V
      45: getstatic     #117                // Field org/apache/hadoop/util/Shell.WINDOWS:Z
      48: ifeq          56
      51: aload_3
      52: iconst_0
      53: invokevirtual #118                // Method org/eclipse/jetty/server/ServerConnector.setReuseAddress:(Z)V
      56: aload_3
      57: areturn

  private org.eclipse.jetty.server.ServerConnector createHttpsChannelConnector(org.eclipse.jetty.server.Server, org.eclipse.jetty.server.HttpConfiguration);
    Code:
       0: aload_2
       1: ldc           #74                 // String https
       3: invokevirtual #119                // Method org/eclipse/jetty/server/HttpConfiguration.setSecureScheme:(Ljava/lang/String;)V
       6: aload_2
       7: new           #120                // class org/eclipse/jetty/server/SecureRequestCustomizer
      10: dup
      11: aload_0
      12: getfield      #33                 // Field sniHostCheckEnabled:Z
      15: invokespecial #121                // Method org/eclipse/jetty/server/SecureRequestCustomizer."<init>":(Z)V
      18: invokevirtual #122                // Method org/eclipse/jetty/server/HttpConfiguration.addCustomizer:(Lorg/eclipse/jetty/server/HttpConfiguration$Customizer;)V
      21: aload_0
      22: aload_1
      23: aload_2
      24: invokespecial #93                 // Method createHttpChannelConnector:(Lorg/eclipse/jetty/server/Server;Lorg/eclipse/jetty/server/HttpConfiguration;)Lorg/eclipse/jetty/server/ServerConnector;
      27: astore_3
      28: new           #123                // class org/eclipse/jetty/util/ssl/SslContextFactory$Server
      31: dup
      32: invokespecial #124                // Method org/eclipse/jetty/util/ssl/SslContextFactory$Server."<init>":()V
      35: astore        4
      37: aload         4
      39: aload_0
      40: getfield      #27                 // Field needsClientAuth:Z
      43: invokevirtual #125                // Method org/eclipse/jetty/util/ssl/SslContextFactory$Server.setNeedClientAuth:(Z)V
      46: aload         4
      48: aload_0
      49: getfield      #26                 // Field keyPassword:Ljava/lang/String;
      52: invokevirtual #126                // Method org/eclipse/jetty/util/ssl/SslContextFactory$Server.setKeyManagerPassword:(Ljava/lang/String;)V
      55: aload_0
      56: getfield      #23                 // Field keyStore:Ljava/lang/String;
      59: ifnull        89
      62: aload         4
      64: aload_0
      65: getfield      #23                 // Field keyStore:Ljava/lang/String;
      68: invokevirtual #127                // Method org/eclipse/jetty/util/ssl/SslContextFactory$Server.setKeyStorePath:(Ljava/lang/String;)V
      71: aload         4
      73: aload_0
      74: getfield      #25                 // Field keyStoreType:Ljava/lang/String;
      77: invokevirtual #128                // Method org/eclipse/jetty/util/ssl/SslContextFactory$Server.setKeyStoreType:(Ljava/lang/String;)V
      80: aload         4
      82: aload_0
      83: getfield      #24                 // Field keyStorePassword:Ljava/lang/String;
      86: invokevirtual #129                // Method org/eclipse/jetty/util/ssl/SslContextFactory$Server.setKeyStorePassword:(Ljava/lang/String;)V
      89: aload_0
      90: getfield      #20                 // Field trustStore:Ljava/lang/String;
      93: ifnull        123
      96: aload         4
      98: aload_0
      99: getfield      #20                 // Field trustStore:Ljava/lang/String;
     102: invokevirtual #130                // Method org/eclipse/jetty/util/ssl/SslContextFactory$Server.setTrustStorePath:(Ljava/lang/String;)V
     105: aload         4
     107: aload_0
     108: getfield      #22                 // Field trustStoreType:Ljava/lang/String;
     111: invokevirtual #131                // Method org/eclipse/jetty/util/ssl/SslContextFactory$Server.setTrustStoreType:(Ljava/lang/String;)V
     114: aload         4
     116: aload_0
     117: getfield      #21                 // Field trustStorePassword:Ljava/lang/String;
     120: invokevirtual #132                // Method org/eclipse/jetty/util/ssl/SslContextFactory$Server.setTrustStorePassword:(Ljava/lang/String;)V
     123: aconst_null
     124: aload_0
     125: getfield      #31                 // Field excludeCiphers:Ljava/lang/String;
     128: if_acmpeq     183
     131: aload_0
     132: getfield      #31                 // Field excludeCiphers:Ljava/lang/String;
     135: invokevirtual #42                 // Method java/lang/String.isEmpty:()Z
     138: ifne          183
     141: aload         4
     143: aload_0
     144: getfield      #31                 // Field excludeCiphers:Ljava/lang/String;
     147: invokestatic  #133                // Method org/apache/hadoop/util/StringUtils.getTrimmedStrings:(Ljava/lang/String;)[Ljava/lang/String;
     150: invokevirtual #134                // Method org/eclipse/jetty/util/ssl/SslContextFactory$Server.setExcludeCipherSuites:([Ljava/lang/String;)V
     153: getstatic     #135                // Field org/apache/hadoop/http/HttpServer2.LOG:Lorg/slf4j/Logger;
     156: new           #96                 // class java/lang/StringBuilder
     159: dup
     160: invokespecial #97                 // Method java/lang/StringBuilder."<init>":()V
     163: ldc           #136                // String Excluded Cipher List:
     165: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     168: aload_0
     169: getfield      #31                 // Field excludeCiphers:Ljava/lang/String;
     172: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     175: invokevirtual #101                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     178: invokeinterface #137,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     183: aload_3
     184: new           #138                // class org/eclipse/jetty/server/SslConnectionFactory
     187: dup
     188: aload         4
     190: getstatic     #139                // Field org/eclipse/jetty/http/HttpVersion.HTTP_1_1:Lorg/eclipse/jetty/http/HttpVersion;
     193: invokevirtual #140                // Method org/eclipse/jetty/http/HttpVersion.asString:()Ljava/lang/String;
     196: invokespecial #141                // Method org/eclipse/jetty/server/SslConnectionFactory."<init>":(Lorg/eclipse/jetty/util/ssl/SslContextFactory;Ljava/lang/String;)V
     199: invokevirtual #142                // Method org/eclipse/jetty/server/ServerConnector.addFirstConnectionFactory:(Lorg/eclipse/jetty/server/ConnectionFactory;)V
     202: aload_3
     203: areturn

  static java.lang.String access$500(org.apache.hadoop.http.HttpServer2$Builder);
    Code:
       0: aload_0
       1: getfield      #12                 // Field name:Ljava/lang/String;
       4: areturn

  static org.apache.hadoop.security.authorize.AccessControlList access$600(org.apache.hadoop.http.HttpServer2$Builder);
    Code:
       0: aload_0
       1: getfield      #11                 // Field adminsAcl:Lorg/apache/hadoop/security/authorize/AccessControlList;
       4: areturn

  static boolean access$700(org.apache.hadoop.http.HttpServer2$Builder);
    Code:
       0: aload_0
       1: getfield      #10                 // Field xFrameEnabled:Z
       4: ireturn

  static org.apache.hadoop.http.HttpServer2$XFrameOption access$800(org.apache.hadoop.http.HttpServer2$Builder);
    Code:
       0: aload_0
       1: getfield      #9                  // Field xFrameOption:Lorg/apache/hadoop/http/HttpServer2$XFrameOption;
       4: areturn

  static boolean access$900(org.apache.hadoop.http.HttpServer2$Builder);
    Code:
       0: aload_0
       1: getfield      #8                  // Field findPort:Z
       4: ireturn

  static org.apache.hadoop.conf.Configuration$IntegerRanges access$1000(org.apache.hadoop.http.HttpServer2$Builder);
    Code:
       0: aload_0
       1: getfield      #7                  // Field portRanges:Lorg/apache/hadoop/conf/Configuration$IntegerRanges;
       4: areturn

  static java.lang.String access$1100(org.apache.hadoop.http.HttpServer2$Builder);
    Code:
       0: aload_0
       1: getfield      #6                  // Field hostName:Ljava/lang/String;
       4: areturn

  static org.apache.hadoop.conf.Configuration access$1200(org.apache.hadoop.http.HttpServer2$Builder);
    Code:
       0: aload_0
       1: getfield      #5                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       4: areturn

  static java.lang.String[] access$1300(org.apache.hadoop.http.HttpServer2$Builder);
    Code:
       0: aload_0
       1: getfield      #4                  // Field pathSpecs:[Ljava/lang/String;
       4: areturn

  static java.lang.String access$1400(org.apache.hadoop.http.HttpServer2$Builder);
    Code:
       0: aload_0
       1: getfield      #3                  // Field authFilterConfigurationPrefix:Ljava/lang/String;
       4: areturn

  static boolean access$1500(org.apache.hadoop.http.HttpServer2$Builder);
    Code:
       0: aload_0
       1: getfield      #2                  // Field disallowFallbackToRandomSignerSecretProvider:Z
       4: ireturn
}
