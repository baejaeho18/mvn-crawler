Compiled from "ShellCommandFencer.java"
public class org.apache.hadoop.ha.ShellCommandFencer extends org.apache.hadoop.conf.Configured implements org.apache.hadoop.ha.FenceMethod {
  private static final int ABBREV_LENGTH;

  private static final java.lang.String TARGET_PREFIX;

  private static final java.lang.String SOURCE_PREFIX;

  private static final java.lang.String ARG_DELIMITER;

  static org.slf4j.Logger LOG;

  public org.apache.hadoop.ha.ShellCommandFencer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/conf/Configured."<init>":()V
       4: return

  public void checkArgs(java.lang.String) throws org.apache.hadoop.ha.BadFencingConfigurationException;
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #2                  // Method java/lang/String.isEmpty:()Z
       8: ifeq          21
      11: new           #3                  // class org/apache/hadoop/ha/BadFencingConfigurationException
      14: dup
      15: ldc           #4                  // String No argument passed to \'shell\' fencing method
      17: invokespecial #5                  // Method org/apache/hadoop/ha/BadFencingConfigurationException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: return

  public boolean tryFence(org.apache.hadoop.ha.HAServiceTarget, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #6                  // Method org/apache/hadoop/ha/HAServiceTarget.getTransitionTargetHAStatus:()Lorg/apache/hadoop/ha/HAServiceProtocol$HAServiceState;
       5: aload_2
       6: invokespecial #7                  // Method parseArgs:(Lorg/apache/hadoop/ha/HAServiceProtocol$HAServiceState;Ljava/lang/String;)Ljava/lang/String;
       9: astore        4
      11: getstatic     #8                  // Field org/apache/hadoop/util/Shell.WINDOWS:Z
      14: ifne          52
      17: new           #9                  // class java/lang/ProcessBuilder
      20: dup
      21: iconst_4
      22: anewarray     #10                 // class java/lang/String
      25: dup
      26: iconst_0
      27: ldc           #11                 // String bash
      29: aastore
      30: dup
      31: iconst_1
      32: ldc           #12                 // String -e
      34: aastore
      35: dup
      36: iconst_2
      37: ldc           #13                 // String -c
      39: aastore
      40: dup
      41: iconst_3
      42: aload         4
      44: aastore
      45: invokespecial #14                 // Method java/lang/ProcessBuilder."<init>":([Ljava/lang/String;)V
      48: astore_3
      49: goto          79
      52: new           #9                  // class java/lang/ProcessBuilder
      55: dup
      56: iconst_3
      57: anewarray     #10                 // class java/lang/String
      60: dup
      61: iconst_0
      62: ldc           #15                 // String cmd.exe
      64: aastore
      65: dup
      66: iconst_1
      67: ldc           #16                 // String /c
      69: aastore
      70: dup
      71: iconst_2
      72: aload         4
      74: aastore
      75: invokespecial #14                 // Method java/lang/ProcessBuilder."<init>":([Ljava/lang/String;)V
      78: astore_3
      79: aload_0
      80: aload_3
      81: invokevirtual #17                 // Method java/lang/ProcessBuilder.environment:()Ljava/util/Map;
      84: invokespecial #18                 // Method setConfAsEnvVars:(Ljava/util/Map;)V
      87: aload_0
      88: aload_1
      89: aload_3
      90: invokevirtual #17                 // Method java/lang/ProcessBuilder.environment:()Ljava/util/Map;
      93: invokespecial #19                 // Method addTargetInfoAsEnvVars:(Lorg/apache/hadoop/ha/HAServiceTarget;Ljava/util/Map;)V
      96: aload_3
      97: invokevirtual #20                 // Method java/lang/ProcessBuilder.start:()Ljava/lang/Process;
     100: astore        5
     102: aload         5
     104: invokevirtual #21                 // Method java/lang/Process.getOutputStream:()Ljava/io/OutputStream;
     107: invokevirtual #22                 // Method java/io/OutputStream.close:()V
     110: goto          147
     113: astore        6
     115: getstatic     #24                 // Field LOG:Lorg/slf4j/Logger;
     118: new           #25                 // class java/lang/StringBuilder
     121: dup
     122: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     125: ldc           #27                 // String Unable to execute
     127: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     130: aload         4
     132: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     138: aload         6
     140: invokeinterface #30,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     145: iconst_0
     146: ireturn
     147: aload         5
     149: invokestatic  #31                 // Method tryGetPid:(Ljava/lang/Process;)Ljava/lang/String;
     152: astore        6
     154: getstatic     #24                 // Field LOG:Lorg/slf4j/Logger;
     157: new           #25                 // class java/lang/StringBuilder
     160: dup
     161: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     164: ldc           #32                 // String Launched fencing command \'
     166: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     169: aload         4
     171: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     174: ldc           #33                 // String \' with
     176: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     179: aload         6
     181: ifnull        207
     184: new           #25                 // class java/lang/StringBuilder
     187: dup
     188: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     191: ldc           #34                 // String pid
     193: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     196: aload         6
     198: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     201: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     204: goto          209
     207: ldc           #35                 // String unknown pid
     209: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     212: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     215: invokeinterface #36,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     220: aload         4
     222: bipush        20
     224: invokestatic  #38                 // Method abbreviate:(Ljava/lang/String;I)Ljava/lang/String;
     227: astore        7
     229: aload         6
     231: ifnull        266
     234: new           #25                 // class java/lang/StringBuilder
     237: dup
     238: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     241: ldc           #39                 // String [PID
     243: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     246: aload         6
     248: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     251: ldc           #40                 // String ]
     253: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     256: aload         7
     258: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     261: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     264: astore        7
     266: new           #41                 // class org/apache/hadoop/ha/StreamPumper
     269: dup
     270: getstatic     #24                 // Field LOG:Lorg/slf4j/Logger;
     273: aload         7
     275: aload         5
     277: invokevirtual #42                 // Method java/lang/Process.getErrorStream:()Ljava/io/InputStream;
     280: getstatic     #43                 // Field org/apache/hadoop/ha/StreamPumper$StreamType.STDERR:Lorg/apache/hadoop/ha/StreamPumper$StreamType;
     283: invokespecial #44                 // Method org/apache/hadoop/ha/StreamPumper."<init>":(Lorg/slf4j/Logger;Ljava/lang/String;Ljava/io/InputStream;Lorg/apache/hadoop/ha/StreamPumper$StreamType;)V
     286: astore        8
     288: aload         8
     290: invokevirtual #45                 // Method org/apache/hadoop/ha/StreamPumper.start:()V
     293: new           #41                 // class org/apache/hadoop/ha/StreamPumper
     296: dup
     297: getstatic     #24                 // Field LOG:Lorg/slf4j/Logger;
     300: aload         7
     302: aload         5
     304: invokevirtual #46                 // Method java/lang/Process.getInputStream:()Ljava/io/InputStream;
     307: getstatic     #47                 // Field org/apache/hadoop/ha/StreamPumper$StreamType.STDOUT:Lorg/apache/hadoop/ha/StreamPumper$StreamType;
     310: invokespecial #44                 // Method org/apache/hadoop/ha/StreamPumper."<init>":(Lorg/slf4j/Logger;Ljava/lang/String;Ljava/io/InputStream;Lorg/apache/hadoop/ha/StreamPumper$StreamType;)V
     313: astore        9
     315: aload         9
     317: invokevirtual #45                 // Method org/apache/hadoop/ha/StreamPumper.start:()V
     320: aload         5
     322: invokevirtual #48                 // Method java/lang/Process.waitFor:()I
     325: istore        10
     327: aload         8
     329: invokevirtual #49                 // Method org/apache/hadoop/ha/StreamPumper.join:()V
     332: aload         9
     334: invokevirtual #49                 // Method org/apache/hadoop/ha/StreamPumper.join:()V
     337: goto          372
     340: astore        11
     342: getstatic     #24                 // Field LOG:Lorg/slf4j/Logger;
     345: new           #25                 // class java/lang/StringBuilder
     348: dup
     349: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     352: ldc           #51                 // String Interrupted while waiting for fencing command:
     354: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     357: aload         4
     359: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     362: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     365: invokeinterface #52,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     370: iconst_0
     371: ireturn
     372: iload         10
     374: ifne          381
     377: iconst_1
     378: goto          382
     381: iconst_0
     382: ireturn
    Exception table:
       from    to  target type
          96   110   113   Class java/io/IOException
         320   337   340   Class java/lang/InterruptedException

  private java.lang.String parseArgs(org.apache.hadoop.ha.HAServiceProtocol$HAServiceState, java.lang.String);
    Code:
       0: aload_2
       1: ldc           #53                 // String ,
       3: invokevirtual #54                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
       6: astore_3
       7: aload_3
       8: arraylength
       9: iconst_1
      10: if_icmpne     17
      13: aload_3
      14: iconst_0
      15: aaload
      16: areturn
      17: aload_3
      18: arraylength
      19: iconst_2
      20: if_icmple     53
      23: new           #55                 // class java/lang/IllegalArgumentException
      26: dup
      27: new           #25                 // class java/lang/StringBuilder
      30: dup
      31: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      34: ldc           #56                 // String Expecting arguments size of at most two, getting
      36: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_3
      40: invokestatic  #57                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      43: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      46: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokespecial #59                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      52: athrow
      53: getstatic     #60                 // Field org/apache/hadoop/ha/HAServiceProtocol$HAServiceState.ACTIVE:Lorg/apache/hadoop/ha/HAServiceProtocol$HAServiceState;
      56: aload_1
      57: invokevirtual #61                 // Method org/apache/hadoop/ha/HAServiceProtocol$HAServiceState.equals:(Ljava/lang/Object;)Z
      60: ifeq          67
      63: aload_3
      64: iconst_0
      65: aaload
      66: areturn
      67: getstatic     #62                 // Field org/apache/hadoop/ha/HAServiceProtocol$HAServiceState.STANDBY:Lorg/apache/hadoop/ha/HAServiceProtocol$HAServiceState;
      70: aload_1
      71: invokevirtual #61                 // Method org/apache/hadoop/ha/HAServiceProtocol$HAServiceState.equals:(Ljava/lang/Object;)Z
      74: ifeq          81
      77: aload_3
      78: iconst_1
      79: aaload
      80: areturn
      81: new           #55                 // class java/lang/IllegalArgumentException
      84: dup
      85: new           #25                 // class java/lang/StringBuilder
      88: dup
      89: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      92: ldc           #63                 // String Unexpected HA service state:
      94: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: aload_1
      98: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     101: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     104: invokespecial #59                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     107: athrow

  static java.lang.String abbreviate(java.lang.String, int);
    Code:
       0: aload_0
       1: invokevirtual #64                 // Method java/lang/String.length:()I
       4: iload_1
       5: if_icmple     63
       8: iload_1
       9: iconst_5
      10: if_icmplt     63
      13: iload_1
      14: iconst_3
      15: isub
      16: iconst_2
      17: idiv
      18: istore_2
      19: iload_1
      20: iload_2
      21: isub
      22: iconst_3
      23: isub
      24: istore_3
      25: new           #25                 // class java/lang/StringBuilder
      28: dup
      29: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      32: aload_0
      33: iconst_0
      34: iload_2
      35: invokevirtual #65                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      38: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: ldc           #66                 // String ...
      43: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_0
      47: aload_0
      48: invokevirtual #64                 // Method java/lang/String.length:()I
      51: iload_3
      52: isub
      53: invokevirtual #67                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      56: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: areturn
      63: aload_0
      64: areturn

  private static java.lang.String tryGetPid(java.lang.Process);
    Code:
       0: aload_0
       1: invokevirtual #68                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: astore_1
       5: aload_1
       6: invokevirtual #69                 // Method java/lang/Class.getName:()Ljava/lang/String;
       9: ldc           #70                 // String java.lang.UNIXProcess
      11: invokevirtual #71                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      14: ifeq          38
      17: aload_1
      18: ldc           #72                 // String pid
      20: invokevirtual #73                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      23: astore_2
      24: aload_2
      25: iconst_1
      26: invokevirtual #74                 // Method java/lang/reflect/Field.setAccessible:(Z)V
      29: aload_2
      30: aload_0
      31: invokevirtual #75                 // Method java/lang/reflect/Field.getInt:(Ljava/lang/Object;)I
      34: invokestatic  #76                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;
      37: areturn
      38: getstatic     #24                 // Field LOG:Lorg/slf4j/Logger;
      41: new           #25                 // class java/lang/StringBuilder
      44: dup
      45: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      48: ldc           #77                 // String Unable to determine pid for
      50: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_0
      54: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      57: ldc           #78                 // String  since it is not a UNIXProcess
      59: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: invokeinterface #79,  2           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      70: aconst_null
      71: areturn
      72: astore_1
      73: getstatic     #24                 // Field LOG:Lorg/slf4j/Logger;
      76: new           #25                 // class java/lang/StringBuilder
      79: dup
      80: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      83: ldc           #77                 // String Unable to determine pid for
      85: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: aload_0
      89: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      92: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      95: aload_1
      96: invokeinterface #81,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Throwable;)V
     101: aconst_null
     102: areturn
    Exception table:
       from    to  target type
           0    37    72   Class java/lang/Throwable
          38    71    72   Class java/lang/Throwable

  private void setConfAsEnvVars(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: invokevirtual #82                 // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
       4: invokevirtual #83                 // Method org/apache/hadoop/conf/Configuration.iterator:()Ljava/util/Iterator;
       7: astore_2
       8: aload_2
       9: invokeinterface #84,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          59
      17: aload_2
      18: invokeinterface #85,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #86                 // class java/util/Map$Entry
      26: astore_3
      27: aload_1
      28: aload_3
      29: invokeinterface #87,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      34: checkcast     #10                 // class java/lang/String
      37: bipush        46
      39: bipush        95
      41: invokevirtual #88                 // Method java/lang/String.replace:(CC)Ljava/lang/String;
      44: aload_3
      45: invokeinterface #89,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      50: invokeinterface #90,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      55: pop
      56: goto          8
      59: return

  private void addTargetInfoAsEnvVars(org.apache.hadoop.ha.HAServiceTarget, java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_1
       1: invokevirtual #6                  // Method org/apache/hadoop/ha/HAServiceTarget.getTransitionTargetHAStatus:()Lorg/apache/hadoop/ha/HAServiceProtocol$HAServiceState;
       4: astore        4
       6: aload         4
       8: ifnull        22
      11: getstatic     #60                 // Field org/apache/hadoop/ha/HAServiceProtocol$HAServiceState.ACTIVE:Lorg/apache/hadoop/ha/HAServiceProtocol$HAServiceState;
      14: aload         4
      16: invokevirtual #61                 // Method org/apache/hadoop/ha/HAServiceProtocol$HAServiceState.equals:(Ljava/lang/Object;)Z
      19: ifeq          28
      22: ldc           #91                 // String target_
      24: astore_3
      25: goto          73
      28: getstatic     #62                 // Field org/apache/hadoop/ha/HAServiceProtocol$HAServiceState.STANDBY:Lorg/apache/hadoop/ha/HAServiceProtocol$HAServiceState;
      31: aload         4
      33: invokevirtual #61                 // Method org/apache/hadoop/ha/HAServiceProtocol$HAServiceState.equals:(Ljava/lang/Object;)Z
      36: ifeq          45
      39: ldc           #92                 // String source_
      41: astore_3
      42: goto          73
      45: new           #55                 // class java/lang/IllegalArgumentException
      48: dup
      49: new           #25                 // class java/lang/StringBuilder
      52: dup
      53: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      56: ldc           #63                 // String Unexpected HA service state:
      58: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload         4
      63: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      66: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      69: invokespecial #59                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      72: athrow
      73: aload_1
      74: invokevirtual #93                 // Method org/apache/hadoop/ha/HAServiceTarget.getFencingParameters:()Ljava/util/Map;
      77: invokeinterface #94,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      82: invokeinterface #95,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      87: astore        5
      89: aload         5
      91: invokeinterface #84,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      96: ifeq          170
      99: aload         5
     101: invokeinterface #85,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     106: checkcast     #86                 // class java/util/Map$Entry
     109: astore        6
     111: new           #25                 // class java/lang/StringBuilder
     114: dup
     115: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     118: aload_3
     119: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: aload         6
     124: invokeinterface #87,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     129: checkcast     #10                 // class java/lang/String
     132: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     138: astore        7
     140: aload         7
     142: bipush        46
     144: bipush        95
     146: invokevirtual #88                 // Method java/lang/String.replace:(CC)Ljava/lang/String;
     149: astore        7
     151: aload_2
     152: aload         7
     154: aload         6
     156: invokeinterface #89,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     161: invokeinterface #90,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     166: pop
     167: goto          89
     170: return

  static {};
    Code:
       0: ldc           #37                 // class org/apache/hadoop/ha/ShellCommandFencer
       2: invokestatic  #96                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #24                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
