Compiled from "OsSecureRandom.java"
public class org.apache.hadoop.crypto.random.OsSecureRandom extends java.util.Random implements java.io.Closeable,org.apache.hadoop.conf.Configurable {
  public static final org.slf4j.Logger LOG;

  private static final long serialVersionUID;

  private transient org.apache.hadoop.conf.Configuration conf;

  private final int RESERVOIR_LENGTH;

  private java.lang.String randomDevPath;

  private transient java.io.FileInputStream stream;

  private final byte[] reservoir;

  private int pos;

  private void fillReservoir(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field pos:I
       4: aload_0
       5: getfield      #3                  // Field reservoir:[B
       8: arraylength
       9: iload_1
      10: isub
      11: if_icmplt     80
      14: aload_0
      15: getfield      #4                  // Field stream:Ljava/io/FileInputStream;
      18: ifnonnull     43
      21: aload_0
      22: new           #5                  // class java/io/FileInputStream
      25: dup
      26: new           #6                  // class java/io/File
      29: dup
      30: aload_0
      31: getfield      #7                  // Field randomDevPath:Ljava/lang/String;
      34: invokespecial #8                  // Method java/io/File."<init>":(Ljava/lang/String;)V
      37: invokespecial #9                  // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      40: putfield      #4                  // Field stream:Ljava/io/FileInputStream;
      43: aload_0
      44: getfield      #4                  // Field stream:Ljava/io/FileInputStream;
      47: aload_0
      48: getfield      #3                  // Field reservoir:[B
      51: iconst_0
      52: aload_0
      53: getfield      #3                  // Field reservoir:[B
      56: arraylength
      57: invokestatic  #10                 // Method org/apache/hadoop/io/IOUtils.readFully:(Ljava/io/InputStream;[BII)V
      60: goto          75
      63: astore_2
      64: new           #12                 // class java/lang/RuntimeException
      67: dup
      68: ldc           #13                 // String failed to fill reservoir
      70: aload_2
      71: invokespecial #14                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      74: athrow
      75: aload_0
      76: iconst_0
      77: putfield      #2                  // Field pos:I
      80: return
    Exception table:
       from    to  target type
          14    60    63   Class java/io/IOException

  public org.apache.hadoop.crypto.random.OsSecureRandom();
    Code:
       0: aload_0
       1: invokespecial #15                 // Method java/util/Random."<init>":()V
       4: aload_0
       5: sipush        8192
       8: putfield      #16                 // Field RESERVOIR_LENGTH:I
      11: aload_0
      12: sipush        8192
      15: newarray       byte
      17: putfield      #3                  // Field reservoir:[B
      20: aload_0
      21: aload_0
      22: getfield      #3                  // Field reservoir:[B
      25: arraylength
      26: putfield      #2                  // Field pos:I
      29: return

  public synchronized void setConf(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
       5: aload_0
       6: aload_1
       7: ldc           #19                 // String hadoop.security.random.device.file.path
       9: ldc           #20                 // String /dev/urandom
      11: invokevirtual #21                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      14: putfield      #7                  // Field randomDevPath:Ljava/lang/String;
      17: aload_0
      18: invokevirtual #22                 // Method close:()V
      21: return

  public synchronized org.apache.hadoop.conf.Configuration getConf();
    Code:
       0: aload_0
       1: getfield      #18                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
       4: areturn

  public synchronized void nextBytes(byte[]);
    Code:
       0: iconst_0
       1: istore_2
       2: iconst_0
       3: istore_3
       4: iload_2
       5: aload_1
       6: arraylength
       7: if_icmpge     64
      10: aload_0
      11: iconst_0
      12: invokespecial #23                 // Method fillReservoir:(I)V
      15: aload_1
      16: arraylength
      17: iload_2
      18: isub
      19: aload_0
      20: getfield      #3                  // Field reservoir:[B
      23: arraylength
      24: aload_0
      25: getfield      #2                  // Field pos:I
      28: isub
      29: invokestatic  #24                 // Method java/lang/Math.min:(II)I
      32: istore_3
      33: aload_0
      34: getfield      #3                  // Field reservoir:[B
      37: aload_0
      38: getfield      #2                  // Field pos:I
      41: aload_1
      42: iload_2
      43: iload_3
      44: invokestatic  #25                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      47: iload_2
      48: iload_3
      49: iadd
      50: istore_2
      51: aload_0
      52: dup
      53: getfield      #2                  // Field pos:I
      56: iload_3
      57: iadd
      58: putfield      #2                  // Field pos:I
      61: goto          4
      64: return

  protected synchronized int next(int);
    Code:
       0: aload_0
       1: iconst_4
       2: invokespecial #23                 // Method fillReservoir:(I)V
       5: iconst_0
       6: istore_2
       7: iconst_0
       8: istore_3
       9: iload_3
      10: iconst_4
      11: if_icmpge     46
      14: iload_2
      15: bipush        8
      17: ishl
      18: aload_0
      19: getfield      #3                  // Field reservoir:[B
      22: aload_0
      23: dup
      24: getfield      #2                  // Field pos:I
      27: dup_x1
      28: iconst_1
      29: iadd
      30: putfield      #2                  // Field pos:I
      33: baload
      34: sipush        255
      37: iand
      38: ior
      39: istore_2
      40: iinc          3, 1
      43: goto          9
      46: iload_2
      47: iconst_m1
      48: bipush        32
      50: iload_1
      51: isub
      52: ishr
      53: iand
      54: ireturn

  public synchronized void close();
    Code:
       0: aload_0
       1: getfield      #4                  // Field stream:Ljava/io/FileInputStream;
       4: ifnull        29
       7: getstatic     #26                 // Field LOG:Lorg/slf4j/Logger;
      10: iconst_1
      11: anewarray     #27                 // class java/io/Closeable
      14: dup
      15: iconst_0
      16: aload_0
      17: getfield      #4                  // Field stream:Ljava/io/FileInputStream;
      20: aastore
      21: invokestatic  #28                 // Method org/apache/hadoop/io/IOUtils.cleanupWithLogger:(Lorg/slf4j/Logger;[Ljava/io/Closeable;)V
      24: aload_0
      25: aconst_null
      26: putfield      #4                  // Field stream:Ljava/io/FileInputStream;
      29: return

  protected void finalize() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method close:()V
       4: return

  static {};
    Code:
       0: ldc           #17                 // class org/apache/hadoop/crypto/random/OsSecureRandom
       2: invokestatic  #29                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #26                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
