Compiled from "ECChunk.java"
public class org.apache.hadoop.io.erasurecode.ECChunk {
  private java.nio.ByteBuffer chunkBuffer;

  private boolean allZero;

  public org.apache.hadoop.io.erasurecode.ECChunk(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field allZero:Z
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field chunkBuffer:Ljava/nio/ByteBuffer;
      14: return

  public org.apache.hadoop.io.erasurecode.ECChunk(java.nio.ByteBuffer, int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field allZero:Z
       9: aload_1
      10: invokevirtual #4                  // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      13: astore        4
      15: aload         4
      17: iload_2
      18: invokevirtual #5                  // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      21: pop
      22: aload         4
      24: iload_2
      25: iload_3
      26: iadd
      27: invokevirtual #6                  // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      30: pop
      31: aload_0
      32: aload         4
      34: invokevirtual #7                  // Method java/nio/ByteBuffer.slice:()Ljava/nio/ByteBuffer;
      37: putfield      #3                  // Field chunkBuffer:Ljava/nio/ByteBuffer;
      40: return

  public org.apache.hadoop.io.erasurecode.ECChunk(byte[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field allZero:Z
       9: aload_0
      10: aload_1
      11: invokestatic  #8                  // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      14: putfield      #3                  // Field chunkBuffer:Ljava/nio/ByteBuffer;
      17: return

  public org.apache.hadoop.io.erasurecode.ECChunk(byte[], int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field allZero:Z
       9: aload_0
      10: aload_1
      11: iload_2
      12: iload_3
      13: invokestatic  #9                  // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
      16: putfield      #3                  // Field chunkBuffer:Ljava/nio/ByteBuffer;
      19: return

  public boolean isAllZero();
    Code:
       0: aload_0
       1: getfield      #2                  // Field allZero:Z
       4: ireturn

  public void setAllZero(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field allZero:Z
       5: return

  public java.nio.ByteBuffer getBuffer();
    Code:
       0: aload_0
       1: getfield      #3                  // Field chunkBuffer:Ljava/nio/ByteBuffer;
       4: areturn

  public static java.nio.ByteBuffer[] toBuffers(org.apache.hadoop.io.erasurecode.ECChunk[]);
    Code:
       0: aload_0
       1: arraylength
       2: anewarray     #10                 // class java/nio/ByteBuffer
       5: astore_1
       6: iconst_0
       7: istore_3
       8: iload_3
       9: aload_0
      10: arraylength
      11: if_icmpge     42
      14: aload_0
      15: iload_3
      16: aaload
      17: astore_2
      18: aload_2
      19: ifnonnull     29
      22: aload_1
      23: iload_3
      24: aconst_null
      25: aastore
      26: goto          36
      29: aload_1
      30: iload_3
      31: aload_2
      32: invokevirtual #11                 // Method getBuffer:()Ljava/nio/ByteBuffer;
      35: aastore
      36: iinc          3, 1
      39: goto          8
      42: aload_1
      43: areturn

  public byte[] toBytesArray();
    Code:
       0: aload_0
       1: getfield      #3                  // Field chunkBuffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #12                 // Method java/nio/ByteBuffer.remaining:()I
       7: newarray       byte
       9: astore_1
      10: aload_0
      11: getfield      #3                  // Field chunkBuffer:Ljava/nio/ByteBuffer;
      14: invokevirtual #13                 // Method java/nio/ByteBuffer.mark:()Ljava/nio/Buffer;
      17: pop
      18: aload_0
      19: getfield      #3                  // Field chunkBuffer:Ljava/nio/ByteBuffer;
      22: aload_1
      23: invokevirtual #14                 // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
      26: pop
      27: aload_0
      28: getfield      #3                  // Field chunkBuffer:Ljava/nio/ByteBuffer;
      31: invokevirtual #15                 // Method java/nio/ByteBuffer.reset:()Ljava/nio/Buffer;
      34: pop
      35: aload_1
      36: areturn
}
