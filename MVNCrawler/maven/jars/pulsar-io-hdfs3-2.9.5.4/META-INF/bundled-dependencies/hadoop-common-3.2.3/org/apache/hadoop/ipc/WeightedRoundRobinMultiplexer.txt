Compiled from "WeightedRoundRobinMultiplexer.java"
public class org.apache.hadoop.ipc.WeightedRoundRobinMultiplexer implements org.apache.hadoop.ipc.RpcMultiplexer {
  public static final java.lang.String IPC_CALLQUEUE_WRRMUX_WEIGHTS_KEY;

  public static final org.slf4j.Logger LOG;

  private final int numQueues;

  private final java.util.concurrent.atomic.AtomicInteger currentQueueIndex;

  private final java.util.concurrent.atomic.AtomicInteger requestsLeft;

  private int[] queueWeights;

  public org.apache.hadoop.ipc.WeightedRoundRobinMultiplexer(int, java.lang.String, org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: iload_1
       5: ifgt          40
       8: new           #2                  // class java/lang/IllegalArgumentException
      11: dup
      12: new           #3                  // class java/lang/StringBuilder
      15: dup
      16: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #5                  // String Requested queues (
      21: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: iload_1
      25: invokevirtual #7                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      28: ldc           #8                  // String ) must be greater than zero.
      30: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokespecial #10                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_0
      41: iload_1
      42: putfield      #11                 // Field numQueues:I
      45: aload_0
      46: aload_3
      47: new           #3                  // class java/lang/StringBuilder
      50: dup
      51: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      54: aload_2
      55: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: ldc           #12                 // String .
      60: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: ldc           #14                 // String faircallqueue.multiplexer.weights
      65: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: invokevirtual #15                 // Method org/apache/hadoop/conf/Configuration.getInts:(Ljava/lang/String;)[I
      74: putfield      #16                 // Field queueWeights:[I
      77: aload_0
      78: getfield      #16                 // Field queueWeights:[I
      81: arraylength
      82: ifne          100
      85: aload_0
      86: aload_0
      87: aload_0
      88: getfield      #11                 // Field numQueues:I
      91: invokespecial #17                 // Method getDefaultQueueWeights:(I)[I
      94: putfield      #16                 // Field queueWeights:[I
      97: goto          161
     100: aload_0
     101: getfield      #16                 // Field queueWeights:[I
     104: arraylength
     105: aload_0
     106: getfield      #11                 // Field numQueues:I
     109: if_icmpeq     161
     112: new           #2                  // class java/lang/IllegalArgumentException
     115: dup
     116: new           #3                  // class java/lang/StringBuilder
     119: dup
     120: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
     123: aload_2
     124: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: ldc           #12                 // String .
     129: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: ldc           #14                 // String faircallqueue.multiplexer.weights
     134: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     137: ldc           #18                 // String  must specify exactly
     139: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     142: aload_0
     143: getfield      #11                 // Field numQueues:I
     146: invokevirtual #7                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     149: ldc           #19                 // String  weights: one for each priority level.
     151: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     154: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     157: invokespecial #10                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     160: athrow
     161: aload_0
     162: new           #20                 // class java/util/concurrent/atomic/AtomicInteger
     165: dup
     166: iconst_0
     167: invokespecial #21                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     170: putfield      #22                 // Field currentQueueIndex:Ljava/util/concurrent/atomic/AtomicInteger;
     173: aload_0
     174: new           #20                 // class java/util/concurrent/atomic/AtomicInteger
     177: dup
     178: aload_0
     179: getfield      #16                 // Field queueWeights:[I
     182: iconst_0
     183: iaload
     184: invokespecial #21                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     187: putfield      #23                 // Field requestsLeft:Ljava/util/concurrent/atomic/AtomicInteger;
     190: getstatic     #24                 // Field LOG:Lorg/slf4j/Logger;
     193: ldc           #25                 // String WeightedRoundRobinMultiplexer is being used.
     195: invokeinterface #26,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     200: return

  private int[] getDefaultQueueWeights(int);
    Code:
       0: iload_1
       1: newarray       int
       3: astore_2
       4: iconst_1
       5: istore_3
       6: iload_1
       7: iconst_1
       8: isub
       9: istore        4
      11: iload         4
      13: iflt          31
      16: aload_2
      17: iload         4
      19: iload_3
      20: iastore
      21: iload_3
      22: iconst_2
      23: imul
      24: istore_3
      25: iinc          4, -1
      28: goto          11
      31: aload_2
      32: areturn

  private void moveToNextQueue();
    Code:
       0: aload_0
       1: getfield      #22                 // Field currentQueueIndex:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: istore_1
       8: iload_1
       9: iconst_1
      10: iadd
      11: aload_0
      12: getfield      #11                 // Field numQueues:I
      15: irem
      16: istore_2
      17: aload_0
      18: getfield      #22                 // Field currentQueueIndex:Ljava/util/concurrent/atomic/AtomicInteger;
      21: iload_2
      22: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      25: aload_0
      26: getfield      #23                 // Field requestsLeft:Ljava/util/concurrent/atomic/AtomicInteger;
      29: aload_0
      30: getfield      #16                 // Field queueWeights:[I
      33: iload_2
      34: iaload
      35: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      38: getstatic     #24                 // Field LOG:Lorg/slf4j/Logger;
      41: ldc           #29                 // String Moving to next queue from queue index {} to index {}, number of requests left for current queue: {}.
      43: iconst_3
      44: anewarray     #30                 // class java/lang/Object
      47: dup
      48: iconst_0
      49: iload_1
      50: invokestatic  #31                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      53: aastore
      54: dup
      55: iconst_1
      56: iload_2
      57: invokestatic  #31                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      60: aastore
      61: dup
      62: iconst_2
      63: aload_0
      64: getfield      #23                 // Field requestsLeft:Ljava/util/concurrent/atomic/AtomicInteger;
      67: aastore
      68: invokeinterface #32,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      73: return

  private void advanceIndex();
    Code:
       0: aload_0
       1: getfield      #23                 // Field requestsLeft:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #33                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
       7: istore_1
       8: iload_1
       9: ifne          16
      12: aload_0
      13: invokespecial #34                 // Method moveToNextQueue:()V
      16: return

  private int getCurrentIndex();
    Code:
       0: aload_0
       1: getfield      #22                 // Field currentQueueIndex:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public int getAndAdvanceCurrentIndex();
    Code:
       0: aload_0
       1: invokespecial #35                 // Method getCurrentIndex:()I
       4: istore_1
       5: aload_0
       6: invokespecial #36                 // Method advanceIndex:()V
       9: iload_1
      10: ireturn

  static {};
    Code:
       0: ldc           #13                 // class org/apache/hadoop/ipc/WeightedRoundRobinMultiplexer
       2: invokestatic  #37                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #24                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
