Compiled from "MultipartUploader.java"
public abstract class org.apache.hadoop.fs.MultipartUploader implements java.io.Closeable {
  public static final org.slf4j.Logger LOG;

  public org.apache.hadoop.fs.MultipartUploader();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void close() throws java.io.IOException;
    Code:
       0: return

  public abstract org.apache.hadoop.fs.UploadHandle initialize(org.apache.hadoop.fs.Path) throws java.io.IOException;

  public abstract org.apache.hadoop.fs.PartHandle putPart(org.apache.hadoop.fs.Path, java.io.InputStream, int, org.apache.hadoop.fs.UploadHandle, long) throws java.io.IOException;

  public abstract org.apache.hadoop.fs.PathHandle complete(org.apache.hadoop.fs.Path, java.util.Map<java.lang.Integer, org.apache.hadoop.fs.PartHandle>, org.apache.hadoop.fs.UploadHandle) throws java.io.IOException;

  public abstract void abort(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.UploadHandle) throws java.io.IOException;

  protected void checkUploadId(byte[]) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_1
       1: ifnull        8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #2                  // String null uploadId
      11: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      14: aload_1
      15: arraylength
      16: ifle          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ldc           #4                  // String Empty UploadId is not valid
      26: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      29: return

  protected void checkPartHandles(java.util.Map<java.lang.Integer, org.apache.hadoop.fs.PartHandle>);
    Code:
       0: aload_1
       1: invokeinterface #5,  1            // InterfaceMethod java/util/Map.isEmpty:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ldc           #6                  // String Empty upload
      16: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      19: aload_1
      20: invokeinterface #7,  1            // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      25: invokeinterface #8,  1            // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      30: invokedynamic #9,  0              // InvokeDynamic #0:accept:()Ljava/util/function/Consumer;
      35: invokeinterface #10,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      40: return

  protected void checkPutArguments(org.apache.hadoop.fs.Path, java.io.InputStream, int, org.apache.hadoop.fs.UploadHandle, long) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_1
       1: ifnull        8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #11                 // String null filePath
      11: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      14: aload_2
      15: ifnull        22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ldc           #12                 // String null inputStream
      25: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      28: iload_3
      29: ifle          36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ldc           #13                 // String Invalid part number: %d
      39: iload_3
      40: invokestatic  #14                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;I)V
      43: aload         4
      45: ifnull        52
      48: iconst_1
      49: goto          53
      52: iconst_0
      53: ldc           #2                  // String null uploadId
      55: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      58: lload         5
      60: lconst_0
      61: lcmp
      62: iflt          69
      65: iconst_1
      66: goto          70
      69: iconst_0
      70: ldc           #15                 // String Invalid part length: %d
      72: lload         5
      74: invokestatic  #16                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;J)V
      77: return

  private static void lambda$checkPartHandles$0(java.lang.Integer);
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method java/lang/Integer.intValue:()I
       4: ifle          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #18                 // String Invalid part handle index %s
      14: aload_0
      15: invokestatic  #19                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;Ljava/lang/Object;)V
      18: return

  static {};
    Code:
       0: ldc           #20                 // class org/apache/hadoop/fs/MultipartUploader
       2: invokestatic  #21                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #22                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
