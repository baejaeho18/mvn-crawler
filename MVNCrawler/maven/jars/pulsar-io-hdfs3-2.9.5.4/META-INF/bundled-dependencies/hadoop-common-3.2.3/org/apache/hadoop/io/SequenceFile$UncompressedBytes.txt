Compiled from "SequenceFile.java"
class org.apache.hadoop.io.SequenceFile$UncompressedBytes implements org.apache.hadoop.io.SequenceFile$ValueBytes {
  private int dataSize;

  private byte[] data;

  private org.apache.hadoop.io.SequenceFile$UncompressedBytes();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #4                  // Field data:[B
       9: aload_0
      10: iconst_0
      11: putfield      #5                  // Field dataSize:I
      14: return

  private void reset(java.io.DataInputStream, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field data:[B
       4: ifnonnull     17
       7: aload_0
       8: iload_2
       9: newarray       byte
      11: putfield      #4                  // Field data:[B
      14: goto          43
      17: iload_2
      18: aload_0
      19: getfield      #4                  // Field data:[B
      22: arraylength
      23: if_icmple     43
      26: aload_0
      27: iload_2
      28: aload_0
      29: getfield      #4                  // Field data:[B
      32: arraylength
      33: iconst_2
      34: imul
      35: invokestatic  #6                  // Method java/lang/Math.max:(II)I
      38: newarray       byte
      40: putfield      #4                  // Field data:[B
      43: aload_0
      44: iconst_m1
      45: putfield      #5                  // Field dataSize:I
      48: aload_1
      49: aload_0
      50: getfield      #4                  // Field data:[B
      53: iconst_0
      54: iload_2
      55: invokevirtual #7                  // Method java/io/DataInputStream.readFully:([BII)V
      58: aload_0
      59: iload_2
      60: putfield      #5                  // Field dataSize:I
      63: return

  public int getSize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field dataSize:I
       4: ireturn

  public void writeUncompressedBytes(java.io.DataOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #4                  // Field data:[B
       5: iconst_0
       6: aload_0
       7: getfield      #5                  // Field dataSize:I
      10: invokevirtual #8                  // Method java/io/DataOutputStream.write:([BII)V
      13: return

  public void writeCompressedBytes(java.io.DataOutputStream) throws java.lang.IllegalArgumentException, java.io.IOException;
    Code:
       0: new           #9                  // class java/lang/IllegalArgumentException
       3: dup
       4: ldc           #10                 // String UncompressedBytes cannot be compressed!
       6: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
       9: athrow

  org.apache.hadoop.io.SequenceFile$UncompressedBytes(org.apache.hadoop.io.SequenceFile$1);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method "<init>":()V
       4: return

  static void access$1700(org.apache.hadoop.io.SequenceFile$UncompressedBytes, java.io.DataInputStream, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #1                  // Method reset:(Ljava/io/DataInputStream;I)V
       6: return
}
