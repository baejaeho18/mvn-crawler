Compiled from "AsyncCallHandler.java"
class org.apache.hadoop.io.retry.AsyncCallHandler$AsyncCallQueue$Processor {
  static final long GRACE_PERIOD;

  static final long MAX_WAIT_PERIOD;

  private final java.util.concurrent.atomic.AtomicReference<java.lang.Thread> running;

  final org.apache.hadoop.io.retry.AsyncCallHandler$AsyncCallQueue this$1;

  private org.apache.hadoop.io.retry.AsyncCallHandler$AsyncCallQueue$Processor(org.apache.hadoop.io.retry.AsyncCallHandler$AsyncCallQueue);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$1:Lorg/apache/hadoop/io/retry/AsyncCallHandler$AsyncCallQueue;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #4                  // class java/util/concurrent/atomic/AtomicReference
      13: dup
      14: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      17: putfield      #6                  // Field running:Ljava/util/concurrent/atomic/AtomicReference;
      20: return

  boolean isRunning(org.apache.hadoop.util.Daemon);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #6                  // Field running:Ljava/util/concurrent/atomic/AtomicReference;
       5: invokevirtual #7                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       8: if_acmpne     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  void tryStart();
    Code:
       0: invokestatic  #8                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: astore_1
       4: aload_0
       5: getfield      #6                  // Field running:Ljava/util/concurrent/atomic/AtomicReference;
       8: aconst_null
       9: aload_1
      10: invokevirtual #9                  // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      13: ifeq          81
      16: new           #10                 // class org/apache/hadoop/io/retry/AsyncCallHandler$AsyncCallQueue$Processor$1
      19: dup
      20: aload_0
      21: invokespecial #11                 // Method org/apache/hadoop/io/retry/AsyncCallHandler$AsyncCallQueue$Processor$1."<init>":(Lorg/apache/hadoop/io/retry/AsyncCallHandler$AsyncCallQueue$Processor;)V
      24: astore_2
      25: aload_0
      26: getfield      #6                  // Field running:Ljava/util/concurrent/atomic/AtomicReference;
      29: aload_1
      30: aload_2
      31: invokevirtual #9                  // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      34: istore_3
      35: iload_3
      36: invokestatic  #12                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      39: getstatic     #13                 // Field org/apache/hadoop/io/retry/AsyncCallHandler.LOG:Lorg/slf4j/Logger;
      42: invokeinterface #14,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      47: ifeq          77
      50: getstatic     #13                 // Field org/apache/hadoop/io/retry/AsyncCallHandler.LOG:Lorg/slf4j/Logger;
      53: new           #15                 // class java/lang/StringBuilder
      56: dup
      57: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      60: ldc           #17                 // String Starting AsyncCallQueue.Processor
      62: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload_2
      66: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      69: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: invokeinterface #21,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      77: aload_2
      78: invokevirtual #22                 // Method org/apache/hadoop/util/Daemon.start:()V
      81: return

  void tryStop(org.apache.hadoop.util.Daemon);
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$1:Lorg/apache/hadoop/io/retry/AsyncCallHandler$AsyncCallQueue;
       4: invokestatic  #23                 // Method org/apache/hadoop/io/retry/AsyncCallHandler$AsyncCallQueue.access$100:(Lorg/apache/hadoop/io/retry/AsyncCallHandler$AsyncCallQueue;)Lorg/apache/hadoop/io/retry/AsyncCallHandler$ConcurrentQueue;
       7: ldc2_w        #25                 // long 3000l
      10: invokevirtual #27                 // Method org/apache/hadoop/io/retry/AsyncCallHandler$ConcurrentQueue.isEmpty:(J)Z
      13: ifeq          21
      16: aload_0
      17: aload_1
      18: invokevirtual #28                 // Method kill:(Lorg/apache/hadoop/util/Daemon;)V
      21: return

  void kill(org.apache.hadoop.util.Daemon);
    Code:
       0: getstatic     #13                 // Field org/apache/hadoop/io/retry/AsyncCallHandler.LOG:Lorg/slf4j/Logger;
       3: invokeinterface #14,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
       8: ifeq          38
      11: getstatic     #13                 // Field org/apache/hadoop/io/retry/AsyncCallHandler.LOG:Lorg/slf4j/Logger;
      14: new           #15                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #29                 // String Killing
      23: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_1
      27: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      30: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokeinterface #21,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      38: aload_0
      39: getfield      #6                  // Field running:Ljava/util/concurrent/atomic/AtomicReference;
      42: aload_1
      43: aconst_null
      44: invokevirtual #9                  // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      47: istore_2
      48: iload_2
      49: invokestatic  #12                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      52: return

  org.apache.hadoop.io.retry.AsyncCallHandler$AsyncCallQueue$Processor(org.apache.hadoop.io.retry.AsyncCallHandler$AsyncCallQueue, org.apache.hadoop.io.retry.AsyncCallHandler$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lorg/apache/hadoop/io/retry/AsyncCallHandler$AsyncCallQueue;)V
       5: return
}
