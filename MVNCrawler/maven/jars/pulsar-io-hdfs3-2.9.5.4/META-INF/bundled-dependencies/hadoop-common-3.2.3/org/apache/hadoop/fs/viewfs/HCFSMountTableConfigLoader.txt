Compiled from "HCFSMountTableConfigLoader.java"
public class org.apache.hadoop.fs.viewfs.HCFSMountTableConfigLoader implements org.apache.hadoop.fs.viewfs.MountTableConfigLoader {
  private static final java.lang.String REGEX_DOT;

  private static final org.slf4j.Logger LOGGER;

  private org.apache.hadoop.fs.Path mountTable;

  public org.apache.hadoop.fs.viewfs.HCFSMountTableConfigLoader();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field mountTable:Lorg/apache/hadoop/fs/Path;
       9: return

  public void load(java.lang.String, org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #3                  // class org/apache/hadoop/fs/Path
       4: dup
       5: aload_1
       6: invokespecial #4                  // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
       9: putfield      #2                  // Field mountTable:Lorg/apache/hadoop/fs/Path;
      12: aload_0
      13: getfield      #2                  // Field mountTable:Lorg/apache/hadoop/fs/Path;
      16: invokevirtual #5                  // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
      19: invokevirtual #6                  // Method java/net/URI.getScheme:()Ljava/lang/String;
      22: astore_3
      23: new           #7                  // class org/apache/hadoop/fs/viewfs/ViewFileSystemOverloadScheme$ChildFsGetter
      26: dup
      27: aload_3
      28: invokespecial #8                  // Method org/apache/hadoop/fs/viewfs/ViewFileSystemOverloadScheme$ChildFsGetter."<init>":(Ljava/lang/String;)V
      31: astore        4
      33: aload         4
      35: aload_0
      36: getfield      #2                  // Field mountTable:Lorg/apache/hadoop/fs/Path;
      39: invokevirtual #5                  // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
      42: aload_2
      43: invokevirtual #9                  // Method org/apache/hadoop/fs/viewfs/FsGetter.getNewInstance:(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
      46: astore        5
      48: aconst_null
      49: astore        6
      51: aload         5
      53: aload_0
      54: getfield      #2                  // Field mountTable:Lorg/apache/hadoop/fs/Path;
      57: iconst_0
      58: invokevirtual #10                 // Method org/apache/hadoop/fs/FileSystem.listFiles:(Lorg/apache/hadoop/fs/Path;Z)Lorg/apache/hadoop/fs/RemoteIterator;
      61: astore        7
      63: aconst_null
      64: astore        8
      66: iconst_m1
      67: istore        9
      69: aload         7
      71: invokeinterface #11,  1           // InterfaceMethod org/apache/hadoop/fs/RemoteIterator.hasNext:()Z
      76: ifeq          175
      79: aload         7
      81: invokeinterface #12,  1           // InterfaceMethod org/apache/hadoop/fs/RemoteIterator.next:()Ljava/lang/Object;
      86: checkcast     #13                 // class org/apache/hadoop/fs/LocatedFileStatus
      89: astore        10
      91: aload         10
      93: invokevirtual #14                 // Method org/apache/hadoop/fs/LocatedFileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
      96: invokevirtual #15                 // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
      99: astore        11
     101: aload         11
     103: ldc           #17                 // String [.]
     105: invokevirtual #18                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
     108: astore        12
     110: aload         12
     112: arraylength
     113: iconst_2
     114: if_icmpge     126
     117: aload_0
     118: aload         11
     120: invokespecial #19                 // Method logInvalidFileNameFormat:(Ljava/lang/String;)V
     123: goto          69
     126: iload         9
     128: istore        13
     130: aload         12
     132: aload         12
     134: arraylength
     135: iconst_2
     136: isub
     137: aaload
     138: invokestatic  #20                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     141: istore        13
     143: goto          157
     146: astore        14
     148: aload_0
     149: aload         11
     151: invokespecial #19                 // Method logInvalidFileNameFormat:(Ljava/lang/String;)V
     154: goto          69
     157: iload         13
     159: iload         9
     161: if_icmple     172
     164: iload         13
     166: istore        9
     168: aload         10
     170: astore        8
     172: goto          69
     175: aload         8
     177: ifnonnull     227
     180: getstatic     #22                 // Field LOGGER:Lorg/slf4j/Logger;
     183: ldc           #23                 // String No valid mount-table file exist at: {}. At least one mount-table file should present with the name format: mount-table.<versionNumber>.xml
     185: aload_1
     186: invokeinterface #24,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
     191: aload         5
     193: ifnull        226
     196: aload         6
     198: ifnull        221
     201: aload         5
     203: invokevirtual #25                 // Method org/apache/hadoop/fs/FileSystem.close:()V
     206: goto          226
     209: astore        10
     211: aload         6
     213: aload         10
     215: invokevirtual #27                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     218: goto          226
     221: aload         5
     223: invokevirtual #25                 // Method org/apache/hadoop/fs/FileSystem.close:()V
     226: return
     227: aload         8
     229: invokevirtual #14                 // Method org/apache/hadoop/fs/LocatedFileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
     232: astore        10
     234: getstatic     #22                 // Field LOGGER:Lorg/slf4j/Logger;
     237: invokeinterface #28,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     242: ifeq          257
     245: getstatic     #22                 // Field LOGGER:Lorg/slf4j/Logger;
     248: ldc           #29                 // String Loading the mount-table {} into configuration.
     250: aload         10
     252: invokeinterface #30,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     257: aload         5
     259: aload         10
     261: invokevirtual #31                 // Method org/apache/hadoop/fs/FileSystem.open:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FSDataInputStream;
     264: astore        11
     266: aconst_null
     267: astore        12
     269: new           #32                 // class org/apache/hadoop/conf/Configuration
     272: dup
     273: iconst_0
     274: invokespecial #33                 // Method org/apache/hadoop/conf/Configuration."<init>":(Z)V
     277: astore        13
     279: aload         13
     281: aload         11
     283: invokevirtual #34                 // Method org/apache/hadoop/conf/Configuration.addResource:(Ljava/io/InputStream;)V
     286: aload_2
     287: aload         13
     289: invokevirtual #35                 // Method org/apache/hadoop/conf/Configuration.addResource:(Lorg/apache/hadoop/conf/Configuration;)V
     292: aload         11
     294: ifnull        379
     297: aload         12
     299: ifnull        322
     302: aload         11
     304: invokevirtual #36                 // Method org/apache/hadoop/fs/FSDataInputStream.close:()V
     307: goto          379
     310: astore        13
     312: aload         12
     314: aload         13
     316: invokevirtual #27                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     319: goto          379
     322: aload         11
     324: invokevirtual #36                 // Method org/apache/hadoop/fs/FSDataInputStream.close:()V
     327: goto          379
     330: astore        13
     332: aload         13
     334: astore        12
     336: aload         13
     338: athrow
     339: astore        15
     341: aload         11
     343: ifnull        376
     346: aload         12
     348: ifnull        371
     351: aload         11
     353: invokevirtual #36                 // Method org/apache/hadoop/fs/FSDataInputStream.close:()V
     356: goto          376
     359: astore        16
     361: aload         12
     363: aload         16
     365: invokevirtual #27                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     368: goto          376
     371: aload         11
     373: invokevirtual #36                 // Method org/apache/hadoop/fs/FSDataInputStream.close:()V
     376: aload         15
     378: athrow
     379: aload         5
     381: ifnull        466
     384: aload         6
     386: ifnull        409
     389: aload         5
     391: invokevirtual #25                 // Method org/apache/hadoop/fs/FileSystem.close:()V
     394: goto          466
     397: astore        7
     399: aload         6
     401: aload         7
     403: invokevirtual #27                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     406: goto          466
     409: aload         5
     411: invokevirtual #25                 // Method org/apache/hadoop/fs/FileSystem.close:()V
     414: goto          466
     417: astore        7
     419: aload         7
     421: astore        6
     423: aload         7
     425: athrow
     426: astore        17
     428: aload         5
     430: ifnull        463
     433: aload         6
     435: ifnull        458
     438: aload         5
     440: invokevirtual #25                 // Method org/apache/hadoop/fs/FileSystem.close:()V
     443: goto          463
     446: astore        18
     448: aload         6
     450: aload         18
     452: invokevirtual #27                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     455: goto          463
     458: aload         5
     460: invokevirtual #25                 // Method org/apache/hadoop/fs/FileSystem.close:()V
     463: aload         17
     465: athrow
     466: return
    Exception table:
       from    to  target type
         130   143   146   Class java/lang/NumberFormatException
         201   206   209   Class java/lang/Throwable
         302   307   310   Class java/lang/Throwable
         269   292   330   Class java/lang/Throwable
         269   292   339   any
         351   356   359   Class java/lang/Throwable
         330   341   339   any
         389   394   397   Class java/lang/Throwable
          51   191   417   Class java/lang/Throwable
         227   379   417   Class java/lang/Throwable
          51   191   426   any
         227   379   426   any
         438   443   446   Class java/lang/Throwable
         417   428   426   any

  private void logInvalidFileNameFormat(java.lang.String);
    Code:
       0: getstatic     #22                 // Field LOGGER:Lorg/slf4j/Logger;
       3: ldc           #37                 // String Invalid file name format for mount-table version file: {}. The valid file name format is mount-table-name.<versionNumber>.xml
       5: aload_1
       6: invokeinterface #24,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      11: return

  static {};
    Code:
       0: ldc           #16                 // class org/apache/hadoop/fs/viewfs/HCFSMountTableConfigLoader
       2: invokestatic  #38                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #22                 // Field LOGGER:Lorg/slf4j/Logger;
       8: return
}
