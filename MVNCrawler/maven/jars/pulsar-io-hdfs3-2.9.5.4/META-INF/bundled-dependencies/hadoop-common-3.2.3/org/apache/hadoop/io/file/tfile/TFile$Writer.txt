Compiled from "TFile.java"
public class org.apache.hadoop.io.file.tfile.TFile$Writer implements java.io.Closeable {
  private final int sizeMinBlock;

  final org.apache.hadoop.io.file.tfile.TFile$TFileIndex tfileIndex;

  final org.apache.hadoop.io.file.tfile.TFile$TFileMeta tfileMeta;

  private org.apache.hadoop.io.file.tfile.BCFile$Writer writerBCF;

  org.apache.hadoop.io.file.tfile.BCFile$Writer$BlockAppender blkAppender;

  long blkRecordCount;

  org.apache.hadoop.io.BoundedByteArrayOutputStream currentKeyBufferOS;

  org.apache.hadoop.io.BoundedByteArrayOutputStream lastKeyBufferOS;

  private byte[] valueBuffer;

  org.apache.hadoop.io.file.tfile.TFile$Writer$State state;

  org.apache.hadoop.conf.Configuration conf;

  long errorCount;

  public org.apache.hadoop.io.file.tfile.TFile$Writer(org.apache.hadoop.fs.FSDataOutputStream, int, java.lang.String, java.lang.String, org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #3                  // Field org/apache/hadoop/io/file/tfile/TFile$Writer$State.READY:Lorg/apache/hadoop/io/file/tfile/TFile$Writer$State;
       8: putfield      #4                  // Field state:Lorg/apache/hadoop/io/file/tfile/TFile$Writer$State;
      11: aload_0
      12: lconst_0
      13: putfield      #5                  // Field errorCount:J
      16: aload_0
      17: iload_2
      18: putfield      #6                  // Field sizeMinBlock:I
      21: aload_0
      22: new           #7                  // class org/apache/hadoop/io/file/tfile/TFile$TFileMeta
      25: dup
      26: aload         4
      28: invokespecial #8                  // Method org/apache/hadoop/io/file/tfile/TFile$TFileMeta."<init>":(Ljava/lang/String;)V
      31: putfield      #9                  // Field tfileMeta:Lorg/apache/hadoop/io/file/tfile/TFile$TFileMeta;
      34: aload_0
      35: new           #10                 // class org/apache/hadoop/io/file/tfile/TFile$TFileIndex
      38: dup
      39: aload_0
      40: getfield      #9                  // Field tfileMeta:Lorg/apache/hadoop/io/file/tfile/TFile$TFileMeta;
      43: invokevirtual #11                 // Method org/apache/hadoop/io/file/tfile/TFile$TFileMeta.getComparator:()Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;
      46: invokespecial #12                 // Method org/apache/hadoop/io/file/tfile/TFile$TFileIndex."<init>":(Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;)V
      49: putfield      #13                 // Field tfileIndex:Lorg/apache/hadoop/io/file/tfile/TFile$TFileIndex;
      52: aload_0
      53: new           #14                 // class org/apache/hadoop/io/file/tfile/BCFile$Writer
      56: dup
      57: aload_1
      58: aload_3
      59: aload         5
      61: invokespecial #15                 // Method org/apache/hadoop/io/file/tfile/BCFile$Writer."<init>":(Lorg/apache/hadoop/fs/FSDataOutputStream;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V
      64: putfield      #16                 // Field writerBCF:Lorg/apache/hadoop/io/file/tfile/BCFile$Writer;
      67: aload_0
      68: new           #17                 // class org/apache/hadoop/io/BoundedByteArrayOutputStream
      71: dup
      72: ldc           #18                 // int 65536
      74: invokespecial #19                 // Method org/apache/hadoop/io/BoundedByteArrayOutputStream."<init>":(I)V
      77: putfield      #20                 // Field currentKeyBufferOS:Lorg/apache/hadoop/io/BoundedByteArrayOutputStream;
      80: aload_0
      81: new           #17                 // class org/apache/hadoop/io/BoundedByteArrayOutputStream
      84: dup
      85: ldc           #18                 // int 65536
      87: invokespecial #19                 // Method org/apache/hadoop/io/BoundedByteArrayOutputStream."<init>":(I)V
      90: putfield      #21                 // Field lastKeyBufferOS:Lorg/apache/hadoop/io/BoundedByteArrayOutputStream;
      93: aload_0
      94: aload         5
      96: putfield      #22                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      99: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:Lorg/apache/hadoop/io/file/tfile/TFile$Writer$State;
       4: getstatic     #23                 // Field org/apache/hadoop/io/file/tfile/TFile$Writer$State.CLOSED:Lorg/apache/hadoop/io/file/tfile/TFile$Writer$State;
       7: if_acmpne     11
      10: return
      11: aload_0
      12: getfield      #5                  // Field errorCount:J
      15: lconst_0
      16: lcmp
      17: ifne          118
      20: aload_0
      21: getfield      #4                  // Field state:Lorg/apache/hadoop/io/file/tfile/TFile$Writer$State;
      24: getstatic     #3                  // Field org/apache/hadoop/io/file/tfile/TFile$Writer$State.READY:Lorg/apache/hadoop/io/file/tfile/TFile$Writer$State;
      27: if_acmpeq     40
      30: new           #24                 // class java/lang/IllegalStateException
      33: dup
      34: ldc           #25                 // String Cannot close TFile in the middle of key-value insertion.
      36: invokespecial #26                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_0
      41: iconst_1
      42: invokevirtual #27                 // Method finishDataBlock:(Z)V
      45: aload_0
      46: getfield      #16                 // Field writerBCF:Lorg/apache/hadoop/io/file/tfile/BCFile$Writer;
      49: ldc           #28                 // String TFile.meta
      51: ldc           #29                 // String none
      53: invokevirtual #30                 // Method org/apache/hadoop/io/file/tfile/BCFile$Writer.prepareMetaBlock:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;
      56: astore_1
      57: aload_0
      58: getfield      #9                  // Field tfileMeta:Lorg/apache/hadoop/io/file/tfile/TFile$TFileMeta;
      61: aload_1
      62: invokevirtual #31                 // Method org/apache/hadoop/io/file/tfile/TFile$TFileMeta.write:(Ljava/io/DataOutput;)V
      65: aload_1
      66: invokevirtual #32                 // Method org/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender.close:()V
      69: goto          79
      72: astore_2
      73: aload_1
      74: invokevirtual #32                 // Method org/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender.close:()V
      77: aload_2
      78: athrow
      79: aload_0
      80: getfield      #16                 // Field writerBCF:Lorg/apache/hadoop/io/file/tfile/BCFile$Writer;
      83: ldc           #33                 // String TFile.index
      85: invokevirtual #34                 // Method org/apache/hadoop/io/file/tfile/BCFile$Writer.prepareMetaBlock:(Ljava/lang/String;)Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;
      88: astore_2
      89: aload_0
      90: getfield      #13                 // Field tfileIndex:Lorg/apache/hadoop/io/file/tfile/TFile$TFileIndex;
      93: aload_2
      94: invokevirtual #35                 // Method org/apache/hadoop/io/file/tfile/TFile$TFileIndex.write:(Ljava/io/DataOutput;)V
      97: aload_2
      98: invokevirtual #32                 // Method org/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender.close:()V
     101: goto          111
     104: astore_3
     105: aload_2
     106: invokevirtual #32                 // Method org/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender.close:()V
     109: aload_3
     110: athrow
     111: aload_0
     112: getfield      #16                 // Field writerBCF:Lorg/apache/hadoop/io/file/tfile/BCFile$Writer;
     115: invokevirtual #36                 // Method org/apache/hadoop/io/file/tfile/BCFile$Writer.close:()V
     118: getstatic     #37                 // Field org/apache/hadoop/io/file/tfile/TFile.LOG:Lorg/slf4j/Logger;
     121: iconst_2
     122: anewarray     #38                 // class java/io/Closeable
     125: dup
     126: iconst_0
     127: aload_0
     128: getfield      #39                 // Field blkAppender:Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;
     131: aastore
     132: dup
     133: iconst_1
     134: aload_0
     135: getfield      #16                 // Field writerBCF:Lorg/apache/hadoop/io/file/tfile/BCFile$Writer;
     138: aastore
     139: invokestatic  #40                 // Method org/apache/hadoop/io/IOUtils.cleanupWithLogger:(Lorg/slf4j/Logger;[Ljava/io/Closeable;)V
     142: aload_0
     143: aconst_null
     144: putfield      #39                 // Field blkAppender:Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;
     147: aload_0
     148: aconst_null
     149: putfield      #16                 // Field writerBCF:Lorg/apache/hadoop/io/file/tfile/BCFile$Writer;
     152: aload_0
     153: getstatic     #23                 // Field org/apache/hadoop/io/file/tfile/TFile$Writer$State.CLOSED:Lorg/apache/hadoop/io/file/tfile/TFile$Writer$State;
     156: putfield      #4                  // Field state:Lorg/apache/hadoop/io/file/tfile/TFile$Writer$State;
     159: goto          208
     162: astore        4
     164: getstatic     #37                 // Field org/apache/hadoop/io/file/tfile/TFile.LOG:Lorg/slf4j/Logger;
     167: iconst_2
     168: anewarray     #38                 // class java/io/Closeable
     171: dup
     172: iconst_0
     173: aload_0
     174: getfield      #39                 // Field blkAppender:Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;
     177: aastore
     178: dup
     179: iconst_1
     180: aload_0
     181: getfield      #16                 // Field writerBCF:Lorg/apache/hadoop/io/file/tfile/BCFile$Writer;
     184: aastore
     185: invokestatic  #40                 // Method org/apache/hadoop/io/IOUtils.cleanupWithLogger:(Lorg/slf4j/Logger;[Ljava/io/Closeable;)V
     188: aload_0
     189: aconst_null
     190: putfield      #39                 // Field blkAppender:Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;
     193: aload_0
     194: aconst_null
     195: putfield      #16                 // Field writerBCF:Lorg/apache/hadoop/io/file/tfile/BCFile$Writer;
     198: aload_0
     199: getstatic     #23                 // Field org/apache/hadoop/io/file/tfile/TFile$Writer$State.CLOSED:Lorg/apache/hadoop/io/file/tfile/TFile$Writer$State;
     202: putfield      #4                  // Field state:Lorg/apache/hadoop/io/file/tfile/TFile$Writer$State;
     205: aload         4
     207: athrow
     208: return
    Exception table:
       from    to  target type
          57    65    72   any
          89    97   104   any
          11   118   162   any
         162   164   162   any

  public void append(byte[], byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: aload_2
       6: iconst_0
       7: aload_2
       8: arraylength
       9: invokevirtual #41                 // Method append:([BII[BII)V
      12: return

  public void append(byte[], int, int, byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_2
       1: iload_3
       2: ior
       3: iload_2
       4: iload_3
       5: iadd
       6: ior
       7: aload_1
       8: arraylength
       9: iload_2
      10: iload_3
      11: iadd
      12: isub
      13: ior
      14: ifge          27
      17: new           #42                 // class java/lang/IndexOutOfBoundsException
      20: dup
      21: ldc           #43                 // String Bad key buffer offset-length combination.
      23: invokespecial #44                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: iload         5
      29: iload         6
      31: ior
      32: iload         5
      34: iload         6
      36: iadd
      37: ior
      38: aload         4
      40: arraylength
      41: iload         5
      43: iload         6
      45: iadd
      46: isub
      47: ior
      48: ifge          61
      51: new           #42                 // class java/lang/IndexOutOfBoundsException
      54: dup
      55: ldc           #45                 // String Bad value buffer offset-length combination.
      57: invokespecial #44                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      60: athrow
      61: aload_0
      62: iload_3
      63: invokevirtual #46                 // Method prepareAppendKey:(I)Ljava/io/DataOutputStream;
      66: astore        7
      68: aload_0
      69: dup
      70: getfield      #5                  // Field errorCount:J
      73: lconst_1
      74: ladd
      75: putfield      #5                  // Field errorCount:J
      78: aload         7
      80: aload_1
      81: iload_2
      82: iload_3
      83: invokevirtual #47                 // Method java/io/DataOutputStream.write:([BII)V
      86: aload_0
      87: dup
      88: getfield      #5                  // Field errorCount:J
      91: lconst_1
      92: lsub
      93: putfield      #5                  // Field errorCount:J
      96: aload         7
      98: invokevirtual #48                 // Method java/io/DataOutputStream.close:()V
     101: goto          114
     104: astore        8
     106: aload         7
     108: invokevirtual #48                 // Method java/io/DataOutputStream.close:()V
     111: aload         8
     113: athrow
     114: aload_0
     115: iload         6
     117: invokevirtual #49                 // Method prepareAppendValue:(I)Ljava/io/DataOutputStream;
     120: astore        8
     122: aload_0
     123: dup
     124: getfield      #5                  // Field errorCount:J
     127: lconst_1
     128: ladd
     129: putfield      #5                  // Field errorCount:J
     132: aload         8
     134: aload         4
     136: iload         5
     138: iload         6
     140: invokevirtual #47                 // Method java/io/DataOutputStream.write:([BII)V
     143: aload_0
     144: dup
     145: getfield      #5                  // Field errorCount:J
     148: lconst_1
     149: lsub
     150: putfield      #5                  // Field errorCount:J
     153: aload         8
     155: invokevirtual #48                 // Method java/io/DataOutputStream.close:()V
     158: goto          171
     161: astore        9
     163: aload         8
     165: invokevirtual #48                 // Method java/io/DataOutputStream.close:()V
     168: aload         9
     170: athrow
     171: aload_0
     172: getstatic     #3                  // Field org/apache/hadoop/io/file/tfile/TFile$Writer$State.READY:Lorg/apache/hadoop/io/file/tfile/TFile$Writer$State;
     175: putfield      #4                  // Field state:Lorg/apache/hadoop/io/file/tfile/TFile$Writer$State;
     178: goto          193
     181: astore        10
     183: aload_0
     184: getstatic     #3                  // Field org/apache/hadoop/io/file/tfile/TFile$Writer$State.READY:Lorg/apache/hadoop/io/file/tfile/TFile$Writer$State;
     187: putfield      #4                  // Field state:Lorg/apache/hadoop/io/file/tfile/TFile$Writer$State;
     190: aload         10
     192: athrow
     193: return
    Exception table:
       from    to  target type
          68    96   104   any
         104   106   104   any
         122   153   161   any
         161   163   161   any
          61   171   181   any
         181   183   181   any

  public java.io.DataOutputStream prepareAppendKey(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:Lorg/apache/hadoop/io/file/tfile/TFile$Writer$State;
       4: getstatic     #3                  // Field org/apache/hadoop/io/file/tfile/TFile$Writer$State.READY:Lorg/apache/hadoop/io/file/tfile/TFile$Writer$State;
       7: if_acmpeq     43
      10: new           #24                 // class java/lang/IllegalStateException
      13: dup
      14: new           #50                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #52                 // String Incorrect state to start a new key:
      23: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: getfield      #4                  // Field state:Lorg/apache/hadoop/io/file/tfile/TFile$Writer$State;
      30: invokevirtual #54                 // Method org/apache/hadoop/io/file/tfile/TFile$Writer$State.name:()Ljava/lang/String;
      33: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #55                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: invokespecial #26                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_0
      44: invokespecial #56                 // Method initDataBlock:()V
      47: new           #57                 // class org/apache/hadoop/io/file/tfile/TFile$Writer$KeyRegister
      50: dup
      51: aload_0
      52: iload_1
      53: invokespecial #58                 // Method org/apache/hadoop/io/file/tfile/TFile$Writer$KeyRegister."<init>":(Lorg/apache/hadoop/io/file/tfile/TFile$Writer;I)V
      56: astore_2
      57: aload_0
      58: getstatic     #59                 // Field org/apache/hadoop/io/file/tfile/TFile$Writer$State.IN_KEY:Lorg/apache/hadoop/io/file/tfile/TFile$Writer$State;
      61: putfield      #4                  // Field state:Lorg/apache/hadoop/io/file/tfile/TFile$Writer$State;
      64: aload_2
      65: areturn

  public java.io.DataOutputStream prepareAppendValue(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:Lorg/apache/hadoop/io/file/tfile/TFile$Writer$State;
       4: getstatic     #60                 // Field org/apache/hadoop/io/file/tfile/TFile$Writer$State.END_KEY:Lorg/apache/hadoop/io/file/tfile/TFile$Writer$State;
       7: if_acmpeq     43
      10: new           #24                 // class java/lang/IllegalStateException
      13: dup
      14: new           #50                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #61                 // String Incorrect state to start a new value:
      23: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: getfield      #4                  // Field state:Lorg/apache/hadoop/io/file/tfile/TFile$Writer$State;
      30: invokevirtual #54                 // Method org/apache/hadoop/io/file/tfile/TFile$Writer$State.name:()Ljava/lang/String;
      33: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #55                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: invokespecial #26                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: iload_1
      44: ifge          94
      47: aload_0
      48: getfield      #62                 // Field valueBuffer:[B
      51: ifnonnull     67
      54: aload_0
      55: aload_0
      56: getfield      #22                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      59: invokestatic  #63                 // Method org/apache/hadoop/io/file/tfile/TFile.getChunkBufferSize:(Lorg/apache/hadoop/conf/Configuration;)I
      62: newarray       byte
      64: putfield      #62                 // Field valueBuffer:[B
      67: new           #64                 // class org/apache/hadoop/io/file/tfile/TFile$Writer$ValueRegister
      70: dup
      71: aload_0
      72: new           #65                 // class org/apache/hadoop/io/file/tfile/Chunk$ChunkEncoder
      75: dup
      76: aload_0
      77: getfield      #39                 // Field blkAppender:Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;
      80: aload_0
      81: getfield      #62                 // Field valueBuffer:[B
      84: invokespecial #66                 // Method org/apache/hadoop/io/file/tfile/Chunk$ChunkEncoder."<init>":(Ljava/io/DataOutputStream;[B)V
      87: invokespecial #67                 // Method org/apache/hadoop/io/file/tfile/TFile$Writer$ValueRegister."<init>":(Lorg/apache/hadoop/io/file/tfile/TFile$Writer;Ljava/io/OutputStream;)V
      90: astore_2
      91: goto          115
      94: new           #64                 // class org/apache/hadoop/io/file/tfile/TFile$Writer$ValueRegister
      97: dup
      98: aload_0
      99: new           #68                 // class org/apache/hadoop/io/file/tfile/Chunk$SingleChunkEncoder
     102: dup
     103: aload_0
     104: getfield      #39                 // Field blkAppender:Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;
     107: iload_1
     108: invokespecial #69                 // Method org/apache/hadoop/io/file/tfile/Chunk$SingleChunkEncoder."<init>":(Ljava/io/DataOutputStream;I)V
     111: invokespecial #67                 // Method org/apache/hadoop/io/file/tfile/TFile$Writer$ValueRegister."<init>":(Lorg/apache/hadoop/io/file/tfile/TFile$Writer;Ljava/io/OutputStream;)V
     114: astore_2
     115: aload_0
     116: getstatic     #70                 // Field org/apache/hadoop/io/file/tfile/TFile$Writer$State.IN_VALUE:Lorg/apache/hadoop/io/file/tfile/TFile$Writer$State;
     119: putfield      #4                  // Field state:Lorg/apache/hadoop/io/file/tfile/TFile$Writer$State;
     122: aload_2
     123: areturn

  public java.io.DataOutputStream prepareMetaBlock(java.lang.String, java.lang.String) throws java.io.IOException, org.apache.hadoop.io.file.tfile.MetaBlockAlreadyExists;
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:Lorg/apache/hadoop/io/file/tfile/TFile$Writer$State;
       4: getstatic     #3                  // Field org/apache/hadoop/io/file/tfile/TFile$Writer$State.READY:Lorg/apache/hadoop/io/file/tfile/TFile$Writer$State;
       7: if_acmpeq     43
      10: new           #24                 // class java/lang/IllegalStateException
      13: dup
      14: new           #50                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #71                 // String Incorrect state to start a Meta Block:
      23: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: getfield      #4                  // Field state:Lorg/apache/hadoop/io/file/tfile/TFile$Writer$State;
      30: invokevirtual #54                 // Method org/apache/hadoop/io/file/tfile/TFile$Writer$State.name:()Ljava/lang/String;
      33: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #55                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: invokespecial #26                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_0
      44: iconst_1
      45: invokevirtual #27                 // Method finishDataBlock:(Z)V
      48: aload_0
      49: getfield      #16                 // Field writerBCF:Lorg/apache/hadoop/io/file/tfile/BCFile$Writer;
      52: aload_1
      53: aload_2
      54: invokevirtual #30                 // Method org/apache/hadoop/io/file/tfile/BCFile$Writer.prepareMetaBlock:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;
      57: astore_3
      58: aload_3
      59: areturn

  public java.io.DataOutputStream prepareMetaBlock(java.lang.String) throws java.io.IOException, org.apache.hadoop.io.file.tfile.MetaBlockAlreadyExists;
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:Lorg/apache/hadoop/io/file/tfile/TFile$Writer$State;
       4: getstatic     #3                  // Field org/apache/hadoop/io/file/tfile/TFile$Writer$State.READY:Lorg/apache/hadoop/io/file/tfile/TFile$Writer$State;
       7: if_acmpeq     43
      10: new           #24                 // class java/lang/IllegalStateException
      13: dup
      14: new           #50                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #71                 // String Incorrect state to start a Meta Block:
      23: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: getfield      #4                  // Field state:Lorg/apache/hadoop/io/file/tfile/TFile$Writer$State;
      30: invokevirtual #54                 // Method org/apache/hadoop/io/file/tfile/TFile$Writer$State.name:()Ljava/lang/String;
      33: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #55                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: invokespecial #26                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_0
      44: iconst_1
      45: invokevirtual #27                 // Method finishDataBlock:(Z)V
      48: aload_0
      49: getfield      #16                 // Field writerBCF:Lorg/apache/hadoop/io/file/tfile/BCFile$Writer;
      52: aload_1
      53: invokevirtual #34                 // Method org/apache/hadoop/io/file/tfile/BCFile$Writer.prepareMetaBlock:(Ljava/lang/String;)Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;
      56: areturn

  private void initDataBlock() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #39                 // Field blkAppender:Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;
       4: ifnonnull     18
       7: aload_0
       8: aload_0
       9: getfield      #16                 // Field writerBCF:Lorg/apache/hadoop/io/file/tfile/BCFile$Writer;
      12: invokevirtual #72                 // Method org/apache/hadoop/io/file/tfile/BCFile$Writer.prepareDataBlock:()Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;
      15: putfield      #39                 // Field blkAppender:Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;
      18: return

  void finishDataBlock(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #39                 // Field blkAppender:Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;
       4: ifnonnull     8
       7: return
       8: iload_1
       9: ifne          28
      12: aload_0
      13: getfield      #39                 // Field blkAppender:Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;
      16: invokevirtual #73                 // Method org/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender.getCompressedSize:()J
      19: aload_0
      20: getfield      #6                  // Field sizeMinBlock:I
      23: i2l
      24: lcmp
      25: iflt          80
      28: new           #74                 // class org/apache/hadoop/io/file/tfile/TFile$TFileIndexEntry
      31: dup
      32: aload_0
      33: getfield      #21                 // Field lastKeyBufferOS:Lorg/apache/hadoop/io/BoundedByteArrayOutputStream;
      36: invokevirtual #75                 // Method org/apache/hadoop/io/BoundedByteArrayOutputStream.getBuffer:()[B
      39: iconst_0
      40: aload_0
      41: getfield      #21                 // Field lastKeyBufferOS:Lorg/apache/hadoop/io/BoundedByteArrayOutputStream;
      44: invokevirtual #76                 // Method org/apache/hadoop/io/BoundedByteArrayOutputStream.size:()I
      47: aload_0
      48: getfield      #77                 // Field blkRecordCount:J
      51: invokespecial #78                 // Method org/apache/hadoop/io/file/tfile/TFile$TFileIndexEntry."<init>":([BIIJ)V
      54: astore_2
      55: aload_0
      56: getfield      #13                 // Field tfileIndex:Lorg/apache/hadoop/io/file/tfile/TFile$TFileIndex;
      59: aload_2
      60: invokevirtual #79                 // Method org/apache/hadoop/io/file/tfile/TFile$TFileIndex.addEntry:(Lorg/apache/hadoop/io/file/tfile/TFile$TFileIndexEntry;)V
      63: aload_0
      64: getfield      #39                 // Field blkAppender:Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;
      67: invokevirtual #32                 // Method org/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender.close:()V
      70: aload_0
      71: aconst_null
      72: putfield      #39                 // Field blkAppender:Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;
      75: aload_0
      76: lconst_0
      77: putfield      #77                 // Field blkRecordCount:J
      80: return
}
