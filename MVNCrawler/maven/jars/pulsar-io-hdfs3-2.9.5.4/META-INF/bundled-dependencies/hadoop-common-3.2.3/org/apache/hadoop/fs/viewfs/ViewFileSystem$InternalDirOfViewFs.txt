Compiled from "ViewFileSystem.java"
class org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs extends org.apache.hadoop.fs.FileSystem {
  final org.apache.hadoop.fs.viewfs.InodeTree$INodeDir<org.apache.hadoop.fs.FileSystem> theInternalDir;

  final long creationTime;

  final org.apache.hadoop.security.UserGroupInformation ugi;

  final java.net.URI myUri;

  private final boolean showMountLinksAsSymlinks;

  private org.apache.hadoop.fs.viewfs.InodeTree<org.apache.hadoop.fs.FileSystem> fsState;

  public org.apache.hadoop.fs.viewfs.ViewFileSystem$InternalDirOfViewFs(org.apache.hadoop.fs.viewfs.InodeTree$INodeDir<org.apache.hadoop.fs.FileSystem>, long, org.apache.hadoop.security.UserGroupInformation, java.net.URI, org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.viewfs.InodeTree) throws java.net.URISyntaxException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/apache/hadoop/fs/FileSystem."<init>":()V
       4: aload_0
       5: aload         5
       7: putfield      #3                  // Field myUri:Ljava/net/URI;
      10: aload_0
      11: aload         7
      13: putfield      #4                  // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
      16: aload_0
      17: aload_0
      18: getfield      #3                  // Field myUri:Ljava/net/URI;
      21: aload         6
      23: invokevirtual #5                  // Method initialize:(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V
      26: goto          41
      29: astore        8
      31: new           #7                  // class java/lang/RuntimeException
      34: dup
      35: ldc           #8                  // String Cannot occur
      37: invokespecial #9                  // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: aload_0
      42: aload_1
      43: putfield      #10                 // Field theInternalDir:Lorg/apache/hadoop/fs/viewfs/InodeTree$INodeDir;
      46: aload_0
      47: lload_2
      48: putfield      #11                 // Field creationTime:J
      51: aload_0
      52: aload         4
      54: putfield      #12                 // Field ugi:Lorg/apache/hadoop/security/UserGroupInformation;
      57: aload_0
      58: aload         6
      60: ldc           #13                 // String fs.viewfs.mount.links.as.symlinks
      62: iconst_1
      63: invokevirtual #14                 // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
      66: putfield      #15                 // Field showMountLinksAsSymlinks:Z
      69: return
    Exception table:
       from    to  target type
          16    26    29   Class java/io/IOException

  private static void checkPathIsSlash(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #16                 // Field org/apache/hadoop/fs/viewfs/InodeTree.SlashPath:Lorg/apache/hadoop/fs/Path;
       4: if_acmpeq     17
       7: new           #6                  // class java/io/IOException
      10: dup
      11: ldc           #17                 // String Internal implementation error: expected file name to be /
      13: invokespecial #18                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  public java.net.URI getUri();
    Code:
       0: aload_0
       1: getfield      #3                  // Field myUri:Ljava/net/URI;
       4: areturn

  public org.apache.hadoop.fs.Path getWorkingDirectory();
    Code:
       0: new           #7                  // class java/lang/RuntimeException
       3: dup
       4: ldc           #19                 // String Internal impl error: getWorkingDir should not have been called
       6: invokespecial #9                  // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void setWorkingDirectory(org.apache.hadoop.fs.Path);
    Code:
       0: new           #7                  // class java/lang/RuntimeException
       3: dup
       4: ldc           #19                 // String Internal impl error: getWorkingDir should not have been called
       6: invokespecial #9                  // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
       9: athrow

  public org.apache.hadoop.fs.FSDataOutputStream append(org.apache.hadoop.fs.Path, int, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: ldc           #20                 // String append
       2: aload_1
       3: invokestatic  #21                 // Method org/apache/hadoop/fs/viewfs/ViewFileSystem.readOnlyMountTable:(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/security/AccessControlException;
       6: athrow

  public org.apache.hadoop.fs.FSDataOutputStream create(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission, boolean, int, short, long, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #22                 // String File cannot be null.
       3: invokestatic  #23                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: getstatic     #16                 // Field org/apache/hadoop/fs/viewfs/InodeTree.SlashPath:Lorg/apache/hadoop/fs/Path;
      10: aload_1
      11: invokevirtual #24                 // Method org/apache/hadoop/fs/Path.equals:(Ljava/lang/Object;)Z
      14: ifeq          50
      17: new           #25                 // class org/apache/hadoop/fs/FileAlreadyExistsException
      20: dup
      21: new           #26                 // class java/lang/StringBuilder
      24: dup
      25: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      28: ldc           #28                 // String / is not a file. The directory / already exist at:
      30: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_0
      34: getfield      #10                 // Field theInternalDir:Lorg/apache/hadoop/fs/viewfs/InodeTree$INodeDir;
      37: getfield      #30                 // Field org/apache/hadoop/fs/viewfs/InodeTree$INodeDir.fullPath:Ljava/lang/String;
      40: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokespecial #32                 // Method org/apache/hadoop/fs/FileAlreadyExistsException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: aload_0
      51: getfield      #4                  // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
      54: invokevirtual #33                 // Method org/apache/hadoop/fs/viewfs/InodeTree.getRootFallbackLink:()Lorg/apache/hadoop/fs/viewfs/InodeTree$INodeLink;
      57: ifnull        247
      60: aload_0
      61: getfield      #10                 // Field theInternalDir:Lorg/apache/hadoop/fs/viewfs/InodeTree$INodeDir;
      64: invokevirtual #34                 // Method org/apache/hadoop/fs/viewfs/InodeTree$INodeDir.getChildren:()Ljava/util/Map;
      67: aload_1
      68: invokevirtual #35                 // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
      71: invokeinterface #36,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      76: ifeq          127
      79: new           #25                 // class org/apache/hadoop/fs/FileAlreadyExistsException
      82: dup
      83: new           #26                 // class java/lang/StringBuilder
      86: dup
      87: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      90: ldc           #37                 // String A mount path(file/dir) already exist with the requested path:
      92: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: aload_0
      96: getfield      #10                 // Field theInternalDir:Lorg/apache/hadoop/fs/viewfs/InodeTree$INodeDir;
      99: invokevirtual #34                 // Method org/apache/hadoop/fs/viewfs/InodeTree$INodeDir.getChildren:()Ljava/util/Map;
     102: aload_1
     103: invokevirtual #35                 // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
     106: invokeinterface #38,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     111: checkcast     #39                 // class org/apache/hadoop/fs/viewfs/InodeTree$INode
     114: getfield      #40                 // Field org/apache/hadoop/fs/viewfs/InodeTree$INode.fullPath:Ljava/lang/String;
     117: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     123: invokespecial #32                 // Method org/apache/hadoop/fs/FileAlreadyExistsException."<init>":(Ljava/lang/String;)V
     126: athrow
     127: aload_0
     128: getfield      #4                  // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
     131: invokevirtual #33                 // Method org/apache/hadoop/fs/viewfs/InodeTree.getRootFallbackLink:()Lorg/apache/hadoop/fs/viewfs/InodeTree$INodeLink;
     134: invokevirtual #41                 // Method org/apache/hadoop/fs/viewfs/InodeTree$INodeLink.getTargetFileSystem:()Ljava/lang/Object;
     137: checkcast     #42                 // class org/apache/hadoop/fs/FileSystem
     140: astore        9
     142: new           #43                 // class org/apache/hadoop/fs/Path
     145: dup
     146: aload_0
     147: getfield      #10                 // Field theInternalDir:Lorg/apache/hadoop/fs/viewfs/InodeTree$INodeDir;
     150: getfield      #30                 // Field org/apache/hadoop/fs/viewfs/InodeTree$INodeDir.fullPath:Ljava/lang/String;
     153: invokespecial #44                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
     156: invokestatic  #45                 // Method org/apache/hadoop/fs/Path.getPathWithoutSchemeAndAuthority:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
     159: astore        10
     161: aload_1
     162: invokevirtual #35                 // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
     165: astore        11
     167: new           #43                 // class org/apache/hadoop/fs/Path
     170: dup
     171: aload         10
     173: aload         11
     175: invokespecial #46                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
     178: astore        12
     180: aload         9
     182: aload         12
     184: aload_2
     185: iload_3
     186: iload         4
     188: iload         5
     190: lload         6
     192: aload         8
     194: invokevirtual #47                 // Method org/apache/hadoop/fs/FileSystem.create:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
     197: areturn
     198: astore        13
     200: new           #26                 // class java/lang/StringBuilder
     203: dup
     204: ldc           #48                 // String Failed to create file:
     206: invokespecial #49                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
     209: aload         12
     211: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     214: ldc           #51                 // String  at fallback :
     216: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     219: aload         9
     221: invokevirtual #52                 // Method org/apache/hadoop/fs/FileSystem.getUri:()Ljava/net/URI;
     224: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     227: astore        14
     229: getstatic     #53                 // Field LOG:Lorg/apache/commons/logging/Log;
     232: aload         14
     234: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     237: aload         13
     239: invokeinterface #54,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     244: aload         13
     246: athrow
     247: ldc           #55                 // String create
     249: aload_1
     250: invokestatic  #21                 // Method org/apache/hadoop/fs/viewfs/ViewFileSystem.readOnlyMountTable:(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/security/AccessControlException;
     253: athrow
    Exception table:
       from    to  target type
         180   197   198   Class java/io/IOException

  public boolean delete(org.apache.hadoop.fs.Path, boolean) throws org.apache.hadoop.security.AccessControlException, java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #56                 // Method checkPathIsSlash:(Lorg/apache/hadoop/fs/Path;)V
       4: ldc           #57                 // String delete
       6: aload_1
       7: invokestatic  #21                 // Method org/apache/hadoop/fs/viewfs/ViewFileSystem.readOnlyMountTable:(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/security/AccessControlException;
      10: athrow

  public boolean delete(org.apache.hadoop.fs.Path) throws org.apache.hadoop.security.AccessControlException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokevirtual #58                 // Method delete:(Lorg/apache/hadoop/fs/Path;Z)Z
       6: ireturn

  public org.apache.hadoop.fs.BlockLocation[] getFileBlockLocations(org.apache.hadoop.fs.FileStatus, long, long) throws java.io.FileNotFoundException, java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #59                 // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
       4: invokestatic  #56                 // Method checkPathIsSlash:(Lorg/apache/hadoop/fs/Path;)V
       7: new           #60                 // class java/io/FileNotFoundException
      10: dup
      11: ldc           #61                 // String Path points to dir not a file
      13: invokespecial #62                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
      16: athrow

  public org.apache.hadoop.fs.FileChecksum getFileChecksum(org.apache.hadoop.fs.Path) throws java.io.FileNotFoundException, java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #56                 // Method checkPathIsSlash:(Lorg/apache/hadoop/fs/Path;)V
       4: new           #60                 // class java/io/FileNotFoundException
       7: dup
       8: ldc           #61                 // String Path points to dir not a file
      10: invokespecial #62                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
      13: athrow

  public org.apache.hadoop.fs.FileStatus getFileStatus(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #56                 // Method checkPathIsSlash:(Lorg/apache/hadoop/fs/Path;)V
       4: new           #63                 // class org/apache/hadoop/fs/FileStatus
       7: dup
       8: lconst_0
       9: iconst_1
      10: iconst_0
      11: lconst_0
      12: aload_0
      13: getfield      #11                 // Field creationTime:J
      16: aload_0
      17: getfield      #11                 // Field creationTime:J
      20: getstatic     #64                 // Field org/apache/hadoop/fs/viewfs/Constants.PERMISSION_555:Lorg/apache/hadoop/fs/permission/FsPermission;
      23: aload_0
      24: getfield      #12                 // Field ugi:Lorg/apache/hadoop/security/UserGroupInformation;
      27: invokevirtual #65                 // Method org/apache/hadoop/security/UserGroupInformation.getShortUserName:()Ljava/lang/String;
      30: aload_0
      31: getfield      #12                 // Field ugi:Lorg/apache/hadoop/security/UserGroupInformation;
      34: invokevirtual #66                 // Method org/apache/hadoop/security/UserGroupInformation.getPrimaryGroupName:()Ljava/lang/String;
      37: new           #43                 // class org/apache/hadoop/fs/Path
      40: dup
      41: aload_0
      42: getfield      #10                 // Field theInternalDir:Lorg/apache/hadoop/fs/viewfs/InodeTree$INodeDir;
      45: getfield      #30                 // Field org/apache/hadoop/fs/viewfs/InodeTree$INodeDir.fullPath:Ljava/lang/String;
      48: invokespecial #44                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      51: aload_0
      52: getfield      #3                  // Field myUri:Ljava/net/URI;
      55: invokestatic  #67                 // Method org/apache/hadoop/fs/viewfs/ViewFileSystem.access$500:()Lorg/apache/hadoop/fs/Path;
      58: invokevirtual #68                 // Method org/apache/hadoop/fs/Path.makeQualified:(Ljava/net/URI;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      61: invokespecial #69                 // Method org/apache/hadoop/fs/FileStatus."<init>":(JZIJJJLorg/apache/hadoop/fs/permission/FsPermission;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)V
      64: areturn

  public org.apache.hadoop.fs.FileStatus[] listStatus(org.apache.hadoop.fs.Path) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #56                 // Method checkPathIsSlash:(Lorg/apache/hadoop/fs/Path;)V
       4: aload_0
       5: invokespecial #70                 // Method listStatusForFallbackLink:()[Lorg/apache/hadoop/fs/FileStatus;
       8: astore_2
       9: new           #71                 // class java/util/HashSet
      12: dup
      13: invokespecial #72                 // Method java/util/HashSet."<init>":()V
      16: astore_3
      17: new           #71                 // class java/util/HashSet
      20: dup
      21: invokespecial #72                 // Method java/util/HashSet."<init>":()V
      24: astore        4
      26: iconst_0
      27: istore        5
      29: aload_0
      30: getfield      #10                 // Field theInternalDir:Lorg/apache/hadoop/fs/viewfs/InodeTree$INodeDir;
      33: invokevirtual #34                 // Method org/apache/hadoop/fs/viewfs/InodeTree$INodeDir.getChildren:()Ljava/util/Map;
      36: invokeinterface #73,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      41: invokeinterface #74,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      46: astore        6
      48: aload         6
      50: invokeinterface #75,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      55: ifeq          410
      58: aload         6
      60: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      65: checkcast     #77                 // class java/util/Map$Entry
      68: astore        7
      70: aload         7
      72: invokeinterface #78,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      77: checkcast     #39                 // class org/apache/hadoop/fs/viewfs/InodeTree$INode
      80: astore        8
      82: new           #43                 // class org/apache/hadoop/fs/Path
      85: dup
      86: aload         8
      88: getfield      #40                 // Field org/apache/hadoop/fs/viewfs/InodeTree$INode.fullPath:Ljava/lang/String;
      91: invokespecial #44                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      94: aload_0
      95: getfield      #3                  // Field myUri:Ljava/net/URI;
      98: aconst_null
      99: invokevirtual #68                 // Method org/apache/hadoop/fs/Path.makeQualified:(Ljava/net/URI;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
     102: astore        9
     104: aload         8
     106: invokevirtual #79                 // Method org/apache/hadoop/fs/viewfs/InodeTree$INode.isLink:()Z
     109: ifeq          361
     112: aload         8
     114: checkcast     #80                 // class org/apache/hadoop/fs/viewfs/InodeTree$INodeLink
     117: astore        10
     119: aload_0
     120: getfield      #15                 // Field showMountLinksAsSymlinks:Z
     123: ifeq          179
     126: aload_3
     127: new           #63                 // class org/apache/hadoop/fs/FileStatus
     130: dup
     131: lconst_0
     132: iconst_0
     133: iconst_0
     134: lconst_0
     135: aload_0
     136: getfield      #11                 // Field creationTime:J
     139: aload_0
     140: getfield      #11                 // Field creationTime:J
     143: getstatic     #64                 // Field org/apache/hadoop/fs/viewfs/Constants.PERMISSION_555:Lorg/apache/hadoop/fs/permission/FsPermission;
     146: aload_0
     147: getfield      #12                 // Field ugi:Lorg/apache/hadoop/security/UserGroupInformation;
     150: invokevirtual #65                 // Method org/apache/hadoop/security/UserGroupInformation.getShortUserName:()Ljava/lang/String;
     153: aload_0
     154: getfield      #12                 // Field ugi:Lorg/apache/hadoop/security/UserGroupInformation;
     157: invokevirtual #66                 // Method org/apache/hadoop/security/UserGroupInformation.getPrimaryGroupName:()Ljava/lang/String;
     160: aload         10
     162: invokevirtual #81                 // Method org/apache/hadoop/fs/viewfs/InodeTree$INodeLink.getTargetLink:()Lorg/apache/hadoop/fs/Path;
     165: aload         9
     167: invokespecial #82                 // Method org/apache/hadoop/fs/FileStatus."<init>":(JZIJJJLorg/apache/hadoop/fs/permission/FsPermission;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
     170: invokeinterface #83,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     175: pop
     176: goto          48
     179: aload         10
     181: invokevirtual #41                 // Method org/apache/hadoop/fs/viewfs/InodeTree$INodeLink.getTargetFileSystem:()Ljava/lang/Object;
     184: checkcast     #42                 // class org/apache/hadoop/fs/FileSystem
     187: invokevirtual #52                 // Method org/apache/hadoop/fs/FileSystem.getUri:()Ljava/net/URI;
     190: invokevirtual #84                 // Method java/net/URI.getPath:()Ljava/lang/String;
     193: astore        11
     195: ldc           #85                 // String
     197: aload         11
     199: invokevirtual #86                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     202: ifeq          209
     205: ldc           #87                 // String /
     207: astore        11
     209: aload         10
     211: invokevirtual #41                 // Method org/apache/hadoop/fs/viewfs/InodeTree$INodeLink.getTargetFileSystem:()Ljava/lang/Object;
     214: checkcast     #88                 // class org/apache/hadoop/fs/viewfs/ChRootedFileSystem
     217: invokevirtual #89                 // Method org/apache/hadoop/fs/viewfs/ChRootedFileSystem.getMyFs:()Lorg/apache/hadoop/fs/FileSystem;
     220: new           #43                 // class org/apache/hadoop/fs/Path
     223: dup
     224: aload         11
     226: invokespecial #44                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
     229: invokevirtual #90                 // Method org/apache/hadoop/fs/FileSystem.getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
     232: astore        12
     234: aload_3
     235: new           #63                 // class org/apache/hadoop/fs/FileStatus
     238: dup
     239: aload         12
     241: invokevirtual #91                 // Method org/apache/hadoop/fs/FileStatus.getLen:()J
     244: aload         12
     246: invokevirtual #92                 // Method org/apache/hadoop/fs/FileStatus.isDirectory:()Z
     249: aload         12
     251: invokevirtual #93                 // Method org/apache/hadoop/fs/FileStatus.getReplication:()S
     254: aload         12
     256: invokevirtual #94                 // Method org/apache/hadoop/fs/FileStatus.getBlockSize:()J
     259: aload         12
     261: invokevirtual #95                 // Method org/apache/hadoop/fs/FileStatus.getModificationTime:()J
     264: aload         12
     266: invokevirtual #96                 // Method org/apache/hadoop/fs/FileStatus.getAccessTime:()J
     269: aload         12
     271: invokevirtual #97                 // Method org/apache/hadoop/fs/FileStatus.getPermission:()Lorg/apache/hadoop/fs/permission/FsPermission;
     274: aload         12
     276: invokevirtual #98                 // Method org/apache/hadoop/fs/FileStatus.getOwner:()Ljava/lang/String;
     279: aload         12
     281: invokevirtual #99                 // Method org/apache/hadoop/fs/FileStatus.getGroup:()Ljava/lang/String;
     284: aconst_null
     285: aload         9
     287: invokespecial #82                 // Method org/apache/hadoop/fs/FileStatus."<init>":(JZIJJJLorg/apache/hadoop/fs/permission/FsPermission;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
     290: invokeinterface #83,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     295: pop
     296: goto          358
     299: astore        12
     301: getstatic     #53                 // Field LOG:Lorg/apache/commons/logging/Log;
     304: new           #26                 // class java/lang/StringBuilder
     307: dup
     308: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     311: ldc           #100                // String Cannot get one of the children\'s(
     313: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     316: aload         9
     318: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     321: ldc           #101                // String )  target path(
     323: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     326: aload         10
     328: invokevirtual #41                 // Method org/apache/hadoop/fs/viewfs/InodeTree$INodeLink.getTargetFileSystem:()Ljava/lang/Object;
     331: checkcast     #42                 // class org/apache/hadoop/fs/FileSystem
     334: invokevirtual #52                 // Method org/apache/hadoop/fs/FileSystem.getUri:()Ljava/net/URI;
     337: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     340: ldc           #102                // String ) file status.
     342: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     345: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     348: aload         12
     350: invokeinterface #103,  3          // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     355: aload         12
     357: athrow
     358: goto          407
     361: aload         4
     363: new           #63                 // class org/apache/hadoop/fs/FileStatus
     366: dup
     367: lconst_0
     368: iconst_1
     369: iconst_0
     370: lconst_0
     371: aload_0
     372: getfield      #11                 // Field creationTime:J
     375: aload_0
     376: getfield      #11                 // Field creationTime:J
     379: getstatic     #64                 // Field org/apache/hadoop/fs/viewfs/Constants.PERMISSION_555:Lorg/apache/hadoop/fs/permission/FsPermission;
     382: aload_0
     383: getfield      #12                 // Field ugi:Lorg/apache/hadoop/security/UserGroupInformation;
     386: invokevirtual #65                 // Method org/apache/hadoop/security/UserGroupInformation.getShortUserName:()Ljava/lang/String;
     389: aload_0
     390: getfield      #12                 // Field ugi:Lorg/apache/hadoop/security/UserGroupInformation;
     393: invokevirtual #66                 // Method org/apache/hadoop/security/UserGroupInformation.getPrimaryGroupName:()Ljava/lang/String;
     396: aload         9
     398: invokespecial #69                 // Method org/apache/hadoop/fs/FileStatus."<init>":(JZIJJJLorg/apache/hadoop/fs/permission/FsPermission;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)V
     401: invokeinterface #83,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     406: pop
     407: goto          48
     410: aload         4
     412: aload         4
     414: invokeinterface #104,  1          // InterfaceMethod java/util/Set.size:()I
     419: anewarray     #63                 // class org/apache/hadoop/fs/FileStatus
     422: invokeinterface #105,  2          // InterfaceMethod java/util/Set.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     427: checkcast     #106                // class "[Lorg/apache/hadoop/fs/FileStatus;"
     430: astore        6
     432: aload_2
     433: arraylength
     434: ifle          446
     437: aload_0
     438: aload_2
     439: aload         6
     441: invokespecial #107                // Method merge:([Lorg/apache/hadoop/fs/FileStatus;[Lorg/apache/hadoop/fs/FileStatus;)[Lorg/apache/hadoop/fs/FileStatus;
     444: astore        6
     446: aload_0
     447: aload_3
     448: aload_3
     449: invokeinterface #104,  1          // InterfaceMethod java/util/Set.size:()I
     454: anewarray     #63                 // class org/apache/hadoop/fs/FileStatus
     457: invokeinterface #105,  2          // InterfaceMethod java/util/Set.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     462: checkcast     #106                // class "[Lorg/apache/hadoop/fs/FileStatus;"
     465: aload         6
     467: invokespecial #107                // Method merge:([Lorg/apache/hadoop/fs/FileStatus;[Lorg/apache/hadoop/fs/FileStatus;)[Lorg/apache/hadoop/fs/FileStatus;
     470: areturn
    Exception table:
       from    to  target type
         209   296   299   Class java/io/FileNotFoundException

  private org.apache.hadoop.fs.FileStatus[] merge(org.apache.hadoop.fs.FileStatus[], org.apache.hadoop.fs.FileStatus[]);
    Code:
       0: new           #108                // class java/util/ArrayList
       3: dup
       4: invokespecial #109                // Method java/util/ArrayList."<init>":()V
       7: astore_3
       8: new           #71                 // class java/util/HashSet
      11: dup
      12: invokespecial #72                 // Method java/util/HashSet."<init>":()V
      15: astore        4
      17: aload_1
      18: astore        5
      20: aload         5
      22: arraylength
      23: istore        6
      25: iconst_0
      26: istore        7
      28: iload         7
      30: iload         6
      32: if_icmpge     71
      35: aload         5
      37: iload         7
      39: aaload
      40: astore        8
      42: aload_3
      43: aload         8
      45: invokevirtual #110                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      48: pop
      49: aload         4
      51: aload         8
      53: invokevirtual #59                 // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
      56: invokevirtual #35                 // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
      59: invokeinterface #83,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      64: pop
      65: iinc          7, 1
      68: goto          28
      71: aload_2
      72: astore        5
      74: aload         5
      76: arraylength
      77: istore        6
      79: iconst_0
      80: istore        7
      82: iload         7
      84: iload         6
      86: if_icmpge     127
      89: aload         5
      91: iload         7
      93: aaload
      94: astore        8
      96: aload         4
      98: aload         8
     100: invokevirtual #59                 // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
     103: invokevirtual #35                 // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
     106: invokeinterface #111,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     111: ifne          121
     114: aload_3
     115: aload         8
     117: invokevirtual #110                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     120: pop
     121: iinc          7, 1
     124: goto          82
     127: aload_3
     128: aload_3
     129: invokevirtual #112                // Method java/util/ArrayList.size:()I
     132: anewarray     #63                 // class org/apache/hadoop/fs/FileStatus
     135: invokevirtual #113                // Method java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     138: checkcast     #106                // class "[Lorg/apache/hadoop/fs/FileStatus;"
     141: areturn

  private org.apache.hadoop.fs.FileStatus[] listStatusForFallbackLink() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: invokevirtual #33                 // Method org/apache/hadoop/fs/viewfs/InodeTree.getRootFallbackLink:()Lorg/apache/hadoop/fs/viewfs/InodeTree$INodeLink;
       7: ifnull        138
      10: aload_0
      11: getfield      #4                  // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
      14: invokevirtual #33                 // Method org/apache/hadoop/fs/viewfs/InodeTree.getRootFallbackLink:()Lorg/apache/hadoop/fs/viewfs/InodeTree$INodeLink;
      17: invokevirtual #41                 // Method org/apache/hadoop/fs/viewfs/InodeTree$INodeLink.getTargetFileSystem:()Ljava/lang/Object;
      20: checkcast     #42                 // class org/apache/hadoop/fs/FileSystem
      23: astore_1
      24: new           #43                 // class org/apache/hadoop/fs/Path
      27: dup
      28: aload_0
      29: getfield      #10                 // Field theInternalDir:Lorg/apache/hadoop/fs/viewfs/InodeTree$INodeDir;
      32: getfield      #30                 // Field org/apache/hadoop/fs/viewfs/InodeTree$INodeDir.fullPath:Ljava/lang/String;
      35: invokespecial #44                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      38: invokestatic  #45                 // Method org/apache/hadoop/fs/Path.getPathWithoutSchemeAndAuthority:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      41: astore_2
      42: aload_0
      43: getfield      #10                 // Field theInternalDir:Lorg/apache/hadoop/fs/viewfs/InodeTree$INodeDir;
      46: invokevirtual #114                // Method org/apache/hadoop/fs/viewfs/InodeTree$INodeDir.isRoot:()Z
      49: ifne          60
      52: aload_1
      53: aload_2
      54: invokevirtual #115                // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
      57: ifeq          138
      60: aload_1
      61: aload_2
      62: invokevirtual #116                // Method org/apache/hadoop/fs/FileSystem.listStatus:(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
      65: astore_3
      66: aload_3
      67: astore        4
      69: aload         4
      71: arraylength
      72: istore        5
      74: iconst_0
      75: istore        6
      77: iload         6
      79: iload         5
      81: if_icmpge     136
      84: aload         4
      86: iload         6
      88: aaload
      89: astore        7
      91: new           #43                 // class org/apache/hadoop/fs/Path
      94: dup
      95: aload_2
      96: aload         7
      98: invokevirtual #59                 // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
     101: invokevirtual #35                 // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
     104: invokespecial #46                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
     107: astore        8
     109: aload         7
     111: new           #43                 // class org/apache/hadoop/fs/Path
     114: dup
     115: aload_0
     116: getfield      #3                  // Field myUri:Ljava/net/URI;
     119: invokevirtual #117                // Method java/net/URI.toString:()Ljava/lang/String;
     122: aload         8
     124: invokespecial #118                // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)V
     127: invokevirtual #119                // Method org/apache/hadoop/fs/FileStatus.setPath:(Lorg/apache/hadoop/fs/Path;)V
     130: iinc          6, 1
     133: goto          77
     136: aload_3
     137: areturn
     138: iconst_0
     139: anewarray     #63                 // class org/apache/hadoop/fs/FileStatus
     142: areturn

  public org.apache.hadoop.fs.ContentSummary getContentSummary(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: iconst_3
       1: newarray       long
       3: dup
       4: iconst_0
       5: lconst_0
       6: lastore
       7: dup
       8: iconst_1
       9: lconst_0
      10: lastore
      11: dup
      12: iconst_2
      13: lconst_1
      14: lastore
      15: astore_2
      16: aload_0
      17: aload_1
      18: invokevirtual #120                // Method listStatus:(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
      21: astore_3
      22: aload_3
      23: arraylength
      24: istore        4
      26: iconst_0
      27: istore        5
      29: iload         5
      31: iload         4
      33: if_icmpge     124
      36: aload_3
      37: iload         5
      39: aaload
      40: astore        6
      42: aload         6
      44: invokevirtual #59                 // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
      47: invokestatic  #45                 // Method org/apache/hadoop/fs/Path.getPathWithoutSchemeAndAuthority:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      50: astore        7
      52: aload_0
      53: getfield      #4                  // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
      56: aload         7
      58: invokevirtual #121                // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
      61: iconst_1
      62: invokevirtual #122                // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      65: astore        8
      67: aload         8
      69: getfield      #123                // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      72: checkcast     #42                 // class org/apache/hadoop/fs/FileSystem
      75: aload         8
      77: getfield      #124                // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      80: invokevirtual #125                // Method org/apache/hadoop/fs/FileSystem.getContentSummary:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/ContentSummary;
      83: astore        9
      85: aload_2
      86: iconst_0
      87: dup2
      88: laload
      89: aload         9
      91: invokevirtual #126                // Method org/apache/hadoop/fs/ContentSummary.getLength:()J
      94: ladd
      95: lastore
      96: aload_2
      97: iconst_1
      98: dup2
      99: laload
     100: aload         9
     102: invokevirtual #127                // Method org/apache/hadoop/fs/ContentSummary.getFileCount:()J
     105: ladd
     106: lastore
     107: aload_2
     108: iconst_2
     109: dup2
     110: laload
     111: aload         9
     113: invokevirtual #128                // Method org/apache/hadoop/fs/ContentSummary.getDirectoryCount:()J
     116: ladd
     117: lastore
     118: iinc          5, 1
     121: goto          29
     124: new           #129                // class org/apache/hadoop/fs/ContentSummary$Builder
     127: dup
     128: invokespecial #130                // Method org/apache/hadoop/fs/ContentSummary$Builder."<init>":()V
     131: aload_2
     132: iconst_0
     133: laload
     134: invokevirtual #131                // Method org/apache/hadoop/fs/ContentSummary$Builder.length:(J)Lorg/apache/hadoop/fs/ContentSummary$Builder;
     137: aload_2
     138: iconst_1
     139: laload
     140: invokevirtual #132                // Method org/apache/hadoop/fs/ContentSummary$Builder.fileCount:(J)Lorg/apache/hadoop/fs/ContentSummary$Builder;
     143: aload_2
     144: iconst_2
     145: laload
     146: invokevirtual #133                // Method org/apache/hadoop/fs/ContentSummary$Builder.directoryCount:(J)Lorg/apache/hadoop/fs/ContentSummary$Builder;
     149: invokevirtual #134                // Method org/apache/hadoop/fs/ContentSummary$Builder.build:()Lorg/apache/hadoop/fs/ContentSummary;
     152: areturn

  public org.apache.hadoop.fs.FsStatus getStatus(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: iconst_3
       1: newarray       long
       3: dup
       4: iconst_0
       5: lconst_0
       6: lastore
       7: dup
       8: iconst_1
       9: lconst_0
      10: lastore
      11: dup
      12: iconst_2
      13: lconst_0
      14: lastore
      15: astore_2
      16: aload_0
      17: aload_1
      18: invokevirtual #120                // Method listStatus:(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
      21: astore_3
      22: aload_3
      23: arraylength
      24: istore        4
      26: iconst_0
      27: istore        5
      29: iload         5
      31: iload         4
      33: if_icmpge     124
      36: aload_3
      37: iload         5
      39: aaload
      40: astore        6
      42: aload         6
      44: invokevirtual #59                 // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
      47: invokestatic  #45                 // Method org/apache/hadoop/fs/Path.getPathWithoutSchemeAndAuthority:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      50: astore        7
      52: aload_0
      53: getfield      #4                  // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
      56: aload         7
      58: invokevirtual #121                // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
      61: iconst_1
      62: invokevirtual #122                // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      65: astore        8
      67: aload         8
      69: getfield      #123                // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      72: checkcast     #42                 // class org/apache/hadoop/fs/FileSystem
      75: aload         8
      77: getfield      #124                // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      80: invokevirtual #135                // Method org/apache/hadoop/fs/FileSystem.getStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FsStatus;
      83: astore        9
      85: aload_2
      86: iconst_0
      87: dup2
      88: laload
      89: aload         9
      91: invokevirtual #136                // Method org/apache/hadoop/fs/FsStatus.getCapacity:()J
      94: ladd
      95: lastore
      96: aload_2
      97: iconst_1
      98: dup2
      99: laload
     100: aload         9
     102: invokevirtual #137                // Method org/apache/hadoop/fs/FsStatus.getUsed:()J
     105: ladd
     106: lastore
     107: aload_2
     108: iconst_2
     109: dup2
     110: laload
     111: aload         9
     113: invokevirtual #138                // Method org/apache/hadoop/fs/FsStatus.getRemaining:()J
     116: ladd
     117: lastore
     118: iinc          5, 1
     121: goto          29
     124: new           #139                // class org/apache/hadoop/fs/FsStatus
     127: dup
     128: aload_2
     129: iconst_0
     130: laload
     131: aload_2
     132: iconst_1
     133: laload
     134: aload_2
     135: iconst_2
     136: laload
     137: invokespecial #140                // Method org/apache/hadoop/fs/FsStatus."<init>":(JJJ)V
     140: areturn

  public boolean mkdirs(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field theInternalDir:Lorg/apache/hadoop/fs/viewfs/InodeTree$INodeDir;
       4: invokevirtual #114                // Method org/apache/hadoop/fs/viewfs/InodeTree$INodeDir.isRoot:()Z
       7: ifeq          24
      10: aload_1
      11: ifnonnull     24
      14: new           #25                 // class org/apache/hadoop/fs/FileAlreadyExistsException
      17: dup
      18: ldc           #141                // String / already exits
      20: invokespecial #32                 // Method org/apache/hadoop/fs/FileAlreadyExistsException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: getfield      #10                 // Field theInternalDir:Lorg/apache/hadoop/fs/viewfs/InodeTree$INodeDir;
      28: invokevirtual #34                 // Method org/apache/hadoop/fs/viewfs/InodeTree$INodeDir.getChildren:()Ljava/util/Map;
      31: aload_1
      32: invokevirtual #121                // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
      35: iconst_1
      36: invokevirtual #142                // Method java/lang/String.substring:(I)Ljava/lang/String;
      39: invokeinterface #36,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      44: ifeq          49
      47: iconst_1
      48: ireturn
      49: aload_0
      50: getfield      #4                  // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
      53: invokevirtual #33                 // Method org/apache/hadoop/fs/viewfs/InodeTree.getRootFallbackLink:()Lorg/apache/hadoop/fs/viewfs/InodeTree$INodeLink;
      56: ifnull        197
      59: aload_0
      60: getfield      #4                  // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
      63: invokevirtual #33                 // Method org/apache/hadoop/fs/viewfs/InodeTree.getRootFallbackLink:()Lorg/apache/hadoop/fs/viewfs/InodeTree$INodeLink;
      66: invokevirtual #41                 // Method org/apache/hadoop/fs/viewfs/InodeTree$INodeLink.getTargetFileSystem:()Ljava/lang/Object;
      69: checkcast     #42                 // class org/apache/hadoop/fs/FileSystem
      72: astore_3
      73: new           #43                 // class org/apache/hadoop/fs/Path
      76: dup
      77: aload_0
      78: getfield      #10                 // Field theInternalDir:Lorg/apache/hadoop/fs/viewfs/InodeTree$INodeDir;
      81: getfield      #30                 // Field org/apache/hadoop/fs/viewfs/InodeTree$INodeDir.fullPath:Ljava/lang/String;
      84: invokespecial #44                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      87: invokestatic  #45                 // Method org/apache/hadoop/fs/Path.getPathWithoutSchemeAndAuthority:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      90: astore        4
      92: getstatic     #16                 // Field org/apache/hadoop/fs/viewfs/InodeTree.SlashPath:Lorg/apache/hadoop/fs/Path;
      95: aload_1
      96: invokevirtual #24                 // Method org/apache/hadoop/fs/Path.equals:(Ljava/lang/Object;)Z
      99: ifeq          111
     102: getstatic     #16                 // Field org/apache/hadoop/fs/viewfs/InodeTree.SlashPath:Lorg/apache/hadoop/fs/Path;
     105: invokevirtual #121                // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
     108: goto          115
     111: aload_1
     112: invokevirtual #35                 // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
     115: astore        5
     117: new           #43                 // class org/apache/hadoop/fs/Path
     120: dup
     121: aload         4
     123: aload         5
     125: invokespecial #46                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
     128: astore        6
     130: aload_3
     131: aload         6
     133: aload_2
     134: invokevirtual #143                // Method org/apache/hadoop/fs/FileSystem.mkdirs:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z
     137: ireturn
     138: astore        7
     140: getstatic     #53                 // Field LOG:Lorg/apache/commons/logging/Log;
     143: invokeinterface #144,  1          // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     148: ifeq          194
     151: new           #26                 // class java/lang/StringBuilder
     154: dup
     155: ldc           #145                // String Failed to create
     157: invokespecial #49                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
     160: aload         6
     162: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     165: ldc           #51                 // String  at fallback :
     167: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: aload_3
     171: invokevirtual #52                 // Method org/apache/hadoop/fs/FileSystem.getUri:()Ljava/net/URI;
     174: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     177: astore        8
     179: getstatic     #53                 // Field LOG:Lorg/apache/commons/logging/Log;
     182: aload         8
     184: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     187: aload         7
     189: invokeinterface #146,  3          // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     194: aload         7
     196: athrow
     197: ldc           #147                // String mkdirs
     199: aload_1
     200: invokestatic  #21                 // Method org/apache/hadoop/fs/viewfs/ViewFileSystem.readOnlyMountTable:(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/security/AccessControlException;
     203: athrow
    Exception table:
       from    to  target type
         130   137   138   Class java/io/IOException

  public boolean mkdirs(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #148                // Method mkdirs:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z
       6: ireturn

  public org.apache.hadoop.fs.FSDataInputStream open(org.apache.hadoop.fs.Path, int) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #56                 // Method checkPathIsSlash:(Lorg/apache/hadoop/fs/Path;)V
       4: new           #60                 // class java/io/FileNotFoundException
       7: dup
       8: ldc           #61                 // String Path points to dir not a file
      10: invokespecial #62                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
      13: athrow

  public boolean rename(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path) throws org.apache.hadoop.security.AccessControlException, java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #56                 // Method checkPathIsSlash:(Lorg/apache/hadoop/fs/Path;)V
       4: aload_2
       5: invokestatic  #56                 // Method checkPathIsSlash:(Lorg/apache/hadoop/fs/Path;)V
       8: ldc           #149                // String rename
      10: aload_1
      11: invokestatic  #21                 // Method org/apache/hadoop/fs/viewfs/ViewFileSystem.readOnlyMountTable:(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/security/AccessControlException;
      14: athrow

  public boolean truncate(org.apache.hadoop.fs.Path, long) throws java.io.IOException;
    Code:
       0: ldc           #150                // String truncate
       2: aload_1
       3: invokestatic  #21                 // Method org/apache/hadoop/fs/viewfs/ViewFileSystem.readOnlyMountTable:(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/security/AccessControlException;
       6: athrow

  public void setOwner(org.apache.hadoop.fs.Path, java.lang.String, java.lang.String) throws org.apache.hadoop.security.AccessControlException, java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #56                 // Method checkPathIsSlash:(Lorg/apache/hadoop/fs/Path;)V
       4: ldc           #151                // String setOwner
       6: aload_1
       7: invokestatic  #21                 // Method org/apache/hadoop/fs/viewfs/ViewFileSystem.readOnlyMountTable:(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/security/AccessControlException;
      10: athrow

  public void setPermission(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission) throws org.apache.hadoop.security.AccessControlException, java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #56                 // Method checkPathIsSlash:(Lorg/apache/hadoop/fs/Path;)V
       4: ldc           #152                // String setPermission
       6: aload_1
       7: invokestatic  #21                 // Method org/apache/hadoop/fs/viewfs/ViewFileSystem.readOnlyMountTable:(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/security/AccessControlException;
      10: athrow

  public boolean setReplication(org.apache.hadoop.fs.Path, short) throws org.apache.hadoop.security.AccessControlException, java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #56                 // Method checkPathIsSlash:(Lorg/apache/hadoop/fs/Path;)V
       4: ldc           #153                // String setReplication
       6: aload_1
       7: invokestatic  #21                 // Method org/apache/hadoop/fs/viewfs/ViewFileSystem.readOnlyMountTable:(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/security/AccessControlException;
      10: athrow

  public void setTimes(org.apache.hadoop.fs.Path, long, long) throws org.apache.hadoop.security.AccessControlException, java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #56                 // Method checkPathIsSlash:(Lorg/apache/hadoop/fs/Path;)V
       4: ldc           #154                // String setTimes
       6: aload_1
       7: invokestatic  #21                 // Method org/apache/hadoop/fs/viewfs/ViewFileSystem.readOnlyMountTable:(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/security/AccessControlException;
      10: athrow

  public void setVerifyChecksum(boolean);
    Code:
       0: return

  public org.apache.hadoop.fs.FsServerDefaults getServerDefaults(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #155                // class org/apache/hadoop/fs/viewfs/NotInMountpointException
       3: dup
       4: aload_1
       5: ldc           #156                // String getServerDefaults
       7: invokespecial #157                // Method org/apache/hadoop/fs/viewfs/NotInMountpointException."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      10: athrow

  public long getDefaultBlockSize(org.apache.hadoop.fs.Path);
    Code:
       0: new           #155                // class org/apache/hadoop/fs/viewfs/NotInMountpointException
       3: dup
       4: aload_1
       5: ldc           #158                // String getDefaultBlockSize
       7: invokespecial #157                // Method org/apache/hadoop/fs/viewfs/NotInMountpointException."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      10: athrow

  public short getDefaultReplication(org.apache.hadoop.fs.Path);
    Code:
       0: new           #155                // class org/apache/hadoop/fs/viewfs/NotInMountpointException
       3: dup
       4: aload_1
       5: ldc           #159                // String getDefaultReplication
       7: invokespecial #157                // Method org/apache/hadoop/fs/viewfs/NotInMountpointException."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      10: athrow

  public void modifyAclEntries(org.apache.hadoop.fs.Path, java.util.List<org.apache.hadoop.fs.permission.AclEntry>) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #56                 // Method checkPathIsSlash:(Lorg/apache/hadoop/fs/Path;)V
       4: ldc           #160                // String modifyAclEntries
       6: aload_1
       7: invokestatic  #21                 // Method org/apache/hadoop/fs/viewfs/ViewFileSystem.readOnlyMountTable:(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/security/AccessControlException;
      10: athrow

  public void removeAclEntries(org.apache.hadoop.fs.Path, java.util.List<org.apache.hadoop.fs.permission.AclEntry>) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #56                 // Method checkPathIsSlash:(Lorg/apache/hadoop/fs/Path;)V
       4: ldc           #161                // String removeAclEntries
       6: aload_1
       7: invokestatic  #21                 // Method org/apache/hadoop/fs/viewfs/ViewFileSystem.readOnlyMountTable:(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/security/AccessControlException;
      10: athrow

  public void removeDefaultAcl(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #56                 // Method checkPathIsSlash:(Lorg/apache/hadoop/fs/Path;)V
       4: ldc           #162                // String removeDefaultAcl
       6: aload_1
       7: invokestatic  #21                 // Method org/apache/hadoop/fs/viewfs/ViewFileSystem.readOnlyMountTable:(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/security/AccessControlException;
      10: athrow

  public void removeAcl(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #56                 // Method checkPathIsSlash:(Lorg/apache/hadoop/fs/Path;)V
       4: ldc           #163                // String removeAcl
       6: aload_1
       7: invokestatic  #21                 // Method org/apache/hadoop/fs/viewfs/ViewFileSystem.readOnlyMountTable:(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/security/AccessControlException;
      10: athrow

  public void setAcl(org.apache.hadoop.fs.Path, java.util.List<org.apache.hadoop.fs.permission.AclEntry>) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #56                 // Method checkPathIsSlash:(Lorg/apache/hadoop/fs/Path;)V
       4: ldc           #164                // String setAcl
       6: aload_1
       7: invokestatic  #21                 // Method org/apache/hadoop/fs/viewfs/ViewFileSystem.readOnlyMountTable:(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/security/AccessControlException;
      10: athrow

  public org.apache.hadoop.fs.permission.AclStatus getAclStatus(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #56                 // Method checkPathIsSlash:(Lorg/apache/hadoop/fs/Path;)V
       4: new           #165                // class org/apache/hadoop/fs/permission/AclStatus$Builder
       7: dup
       8: invokespecial #166                // Method org/apache/hadoop/fs/permission/AclStatus$Builder."<init>":()V
      11: aload_0
      12: getfield      #12                 // Field ugi:Lorg/apache/hadoop/security/UserGroupInformation;
      15: invokevirtual #65                 // Method org/apache/hadoop/security/UserGroupInformation.getShortUserName:()Ljava/lang/String;
      18: invokevirtual #167                // Method org/apache/hadoop/fs/permission/AclStatus$Builder.owner:(Ljava/lang/String;)Lorg/apache/hadoop/fs/permission/AclStatus$Builder;
      21: aload_0
      22: getfield      #12                 // Field ugi:Lorg/apache/hadoop/security/UserGroupInformation;
      25: invokevirtual #66                 // Method org/apache/hadoop/security/UserGroupInformation.getPrimaryGroupName:()Ljava/lang/String;
      28: invokevirtual #168                // Method org/apache/hadoop/fs/permission/AclStatus$Builder.group:(Ljava/lang/String;)Lorg/apache/hadoop/fs/permission/AclStatus$Builder;
      31: getstatic     #64                 // Field org/apache/hadoop/fs/viewfs/Constants.PERMISSION_555:Lorg/apache/hadoop/fs/permission/FsPermission;
      34: invokestatic  #169                // Method org/apache/hadoop/fs/permission/AclUtil.getMinimalAcl:(Lorg/apache/hadoop/fs/permission/FsPermission;)Ljava/util/List;
      37: invokevirtual #170                // Method org/apache/hadoop/fs/permission/AclStatus$Builder.addEntries:(Ljava/lang/Iterable;)Lorg/apache/hadoop/fs/permission/AclStatus$Builder;
      40: iconst_0
      41: invokevirtual #171                // Method org/apache/hadoop/fs/permission/AclStatus$Builder.stickyBit:(Z)Lorg/apache/hadoop/fs/permission/AclStatus$Builder;
      44: invokevirtual #172                // Method org/apache/hadoop/fs/permission/AclStatus$Builder.build:()Lorg/apache/hadoop/fs/permission/AclStatus;
      47: areturn

  public void setXAttr(org.apache.hadoop.fs.Path, java.lang.String, byte[], java.util.EnumSet<org.apache.hadoop.fs.XAttrSetFlag>) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #56                 // Method checkPathIsSlash:(Lorg/apache/hadoop/fs/Path;)V
       4: ldc           #173                // String setXAttr
       6: aload_1
       7: invokestatic  #21                 // Method org/apache/hadoop/fs/viewfs/ViewFileSystem.readOnlyMountTable:(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/security/AccessControlException;
      10: athrow

  public byte[] getXAttr(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: new           #155                // class org/apache/hadoop/fs/viewfs/NotInMountpointException
       3: dup
       4: aload_1
       5: ldc           #174                // String getXAttr
       7: invokespecial #157                // Method org/apache/hadoop/fs/viewfs/NotInMountpointException."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      10: athrow

  public java.util.Map<java.lang.String, byte[]> getXAttrs(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #155                // class org/apache/hadoop/fs/viewfs/NotInMountpointException
       3: dup
       4: aload_1
       5: ldc           #175                // String getXAttrs
       7: invokespecial #157                // Method org/apache/hadoop/fs/viewfs/NotInMountpointException."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      10: athrow

  public java.util.Map<java.lang.String, byte[]> getXAttrs(org.apache.hadoop.fs.Path, java.util.List<java.lang.String>) throws java.io.IOException;
    Code:
       0: new           #155                // class org/apache/hadoop/fs/viewfs/NotInMountpointException
       3: dup
       4: aload_1
       5: ldc           #175                // String getXAttrs
       7: invokespecial #157                // Method org/apache/hadoop/fs/viewfs/NotInMountpointException."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      10: athrow

  public java.util.List<java.lang.String> listXAttrs(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #155                // class org/apache/hadoop/fs/viewfs/NotInMountpointException
       3: dup
       4: aload_1
       5: ldc           #176                // String listXAttrs
       7: invokespecial #157                // Method org/apache/hadoop/fs/viewfs/NotInMountpointException."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      10: athrow

  public void removeXAttr(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #56                 // Method checkPathIsSlash:(Lorg/apache/hadoop/fs/Path;)V
       4: ldc           #177                // String removeXAttr
       6: aload_1
       7: invokestatic  #21                 // Method org/apache/hadoop/fs/viewfs/ViewFileSystem.readOnlyMountTable:(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/security/AccessControlException;
      10: athrow

  public org.apache.hadoop.fs.Path createSnapshot(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #56                 // Method checkPathIsSlash:(Lorg/apache/hadoop/fs/Path;)V
       4: ldc           #178                // String createSnapshot
       6: aload_1
       7: invokestatic  #21                 // Method org/apache/hadoop/fs/viewfs/ViewFileSystem.readOnlyMountTable:(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/security/AccessControlException;
      10: athrow

  public void renameSnapshot(org.apache.hadoop.fs.Path, java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #56                 // Method checkPathIsSlash:(Lorg/apache/hadoop/fs/Path;)V
       4: ldc           #179                // String renameSnapshot
       6: aload_1
       7: invokestatic  #21                 // Method org/apache/hadoop/fs/viewfs/ViewFileSystem.readOnlyMountTable:(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/security/AccessControlException;
      10: athrow

  public void deleteSnapshot(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #56                 // Method checkPathIsSlash:(Lorg/apache/hadoop/fs/Path;)V
       4: ldc           #180                // String deleteSnapshot
       6: aload_1
       7: invokestatic  #21                 // Method org/apache/hadoop/fs/viewfs/ViewFileSystem.readOnlyMountTable:(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/security/AccessControlException;
      10: athrow

  public org.apache.hadoop.fs.QuotaUsage getQuotaUsage(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #155                // class org/apache/hadoop/fs/viewfs/NotInMountpointException
       3: dup
       4: aload_1
       5: ldc           #181                // String getQuotaUsage
       7: invokespecial #157                // Method org/apache/hadoop/fs/viewfs/NotInMountpointException."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      10: athrow

  public void satisfyStoragePolicy(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #56                 // Method checkPathIsSlash:(Lorg/apache/hadoop/fs/Path;)V
       4: ldc           #182                // String satisfyStoragePolicy
       6: aload_1
       7: invokestatic  #21                 // Method org/apache/hadoop/fs/viewfs/ViewFileSystem.readOnlyMountTable:(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/security/AccessControlException;
      10: athrow

  public void setStoragePolicy(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #56                 // Method checkPathIsSlash:(Lorg/apache/hadoop/fs/Path;)V
       4: ldc           #183                // String setStoragePolicy
       6: aload_1
       7: invokestatic  #21                 // Method org/apache/hadoop/fs/viewfs/ViewFileSystem.readOnlyMountTable:(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/security/AccessControlException;
      10: athrow

  public void unsetStoragePolicy(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #56                 // Method checkPathIsSlash:(Lorg/apache/hadoop/fs/Path;)V
       4: ldc           #184                // String unsetStoragePolicy
       6: aload_1
       7: invokestatic  #21                 // Method org/apache/hadoop/fs/viewfs/ViewFileSystem.readOnlyMountTable:(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/security/AccessControlException;
      10: athrow

  public org.apache.hadoop.fs.BlockStoragePolicySpi getStoragePolicy(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #155                // class org/apache/hadoop/fs/viewfs/NotInMountpointException
       3: dup
       4: aload_1
       5: ldc           #185                // String getStoragePolicy
       7: invokespecial #157                // Method org/apache/hadoop/fs/viewfs/NotInMountpointException."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      10: athrow

  public java.util.Collection<? extends org.apache.hadoop.fs.BlockStoragePolicySpi> getAllStoragePolicies() throws java.io.IOException;
    Code:
       0: new           #71                 // class java/util/HashSet
       3: dup
       4: invokespecial #72                 // Method java/util/HashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #186                // Method getChildFileSystems:()[Lorg/apache/hadoop/fs/FileSystem;
      12: astore_2
      13: aload_2
      14: arraylength
      15: istore_3
      16: iconst_0
      17: istore        4
      19: iload         4
      21: iload_3
      22: if_icmpge     58
      25: aload_2
      26: iload         4
      28: aaload
      29: astore        5
      31: aload         5
      33: invokevirtual #187                // Method org/apache/hadoop/fs/FileSystem.getAllStoragePolicies:()Ljava/util/Collection;
      36: astore        6
      38: aload_1
      39: aload         6
      41: invokeinterface #188,  2          // InterfaceMethod java/util/Collection.addAll:(Ljava/util/Collection;)Z
      46: pop
      47: goto          52
      50: astore        6
      52: iinc          4, 1
      55: goto          19
      58: aload_1
      59: areturn
    Exception table:
       from    to  target type
          31    47    50   Class java/lang/UnsupportedOperationException
}
