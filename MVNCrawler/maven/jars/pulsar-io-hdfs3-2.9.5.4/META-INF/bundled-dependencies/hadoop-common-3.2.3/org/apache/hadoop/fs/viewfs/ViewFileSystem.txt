Compiled from "ViewFileSystem.java"
public class org.apache.hadoop.fs.viewfs.ViewFileSystem extends org.apache.hadoop.fs.FileSystem {
  private static final org.apache.hadoop.fs.Path ROOT_PATH;

  final long creationTime;

  final org.apache.hadoop.security.UserGroupInformation ugi;

  private java.net.URI myUri;

  private org.apache.hadoop.fs.Path workingDir;

  org.apache.hadoop.conf.Configuration config;

  org.apache.hadoop.fs.viewfs.InodeTree<org.apache.hadoop.fs.FileSystem> fsState;

  org.apache.hadoop.fs.Path homeDir;

  private boolean enableInnerCache;

  private org.apache.hadoop.fs.viewfs.ViewFileSystem$InnerCache cache;

  private org.apache.hadoop.fs.viewfs.ViewFileSystem$RenameStrategy renameStrategy;

  static final boolean $assertionsDisabled;

  static org.apache.hadoop.security.AccessControlException readOnlyMountTable(java.lang.String, java.lang.String);
    Code:
       0: new           #8                  // class org/apache/hadoop/security/AccessControlException
       3: dup
       4: new           #9                  // class java/lang/StringBuilder
       7: dup
       8: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #11                 // String InternalDir of ViewFileSystem is readonly; operation=
      13: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: ldc           #13                 // String Path=
      22: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_1
      26: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokespecial #15                 // Method org/apache/hadoop/security/AccessControlException."<init>":(Ljava/lang/String;)V
      35: areturn

  static org.apache.hadoop.security.AccessControlException readOnlyMountTable(java.lang.String, org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #16                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
       5: invokestatic  #17                 // Method readOnlyMountTable:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/security/AccessControlException;
       8: areturn

  protected org.apache.hadoop.fs.viewfs.FsGetter fsGetter();
    Code:
       0: new           #18                 // class org/apache/hadoop/fs/viewfs/FsGetter
       3: dup
       4: invokespecial #19                 // Method org/apache/hadoop/fs/viewfs/FsGetter."<init>":()V
       7: areturn

  java.lang.String getUriPath(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method checkPath:(Lorg/apache/hadoop/fs/Path;)V
       5: aload_0
       6: aload_1
       7: invokespecial #21                 // Method makeAbsolute:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      10: invokevirtual #22                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
      13: invokevirtual #23                 // Method java/net/URI.getPath:()Ljava/lang/String;
      16: areturn

  private org.apache.hadoop.fs.Path makeAbsolute(org.apache.hadoop.fs.Path);
    Code:
       0: aload_1
       1: invokevirtual #24                 // Method org/apache/hadoop/fs/Path.isAbsolute:()Z
       4: ifeq          11
       7: aload_1
       8: goto          23
      11: new           #25                 // class org/apache/hadoop/fs/Path
      14: dup
      15: aload_0
      16: getfield      #26                 // Field workingDir:Lorg/apache/hadoop/fs/Path;
      19: aload_1
      20: invokespecial #27                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
      23: areturn

  public org.apache.hadoop.fs.viewfs.ViewFileSystem() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #28                 // Method org/apache/hadoop/fs/FileSystem."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #29                 // Field homeDir:Lorg/apache/hadoop/fs/Path;
       9: aload_0
      10: iconst_0
      11: putfield      #7                  // Field enableInnerCache:Z
      14: aload_0
      15: getstatic     #30                 // Field org/apache/hadoop/fs/viewfs/ViewFileSystem$RenameStrategy.SAME_MOUNTPOINT:Lorg/apache/hadoop/fs/viewfs/ViewFileSystem$RenameStrategy;
      18: putfield      #31                 // Field renameStrategy:Lorg/apache/hadoop/fs/viewfs/ViewFileSystem$RenameStrategy;
      21: aload_0
      22: invokestatic  #32                 // Method org/apache/hadoop/security/UserGroupInformation.getCurrentUser:()Lorg/apache/hadoop/security/UserGroupInformation;
      25: putfield      #33                 // Field ugi:Lorg/apache/hadoop/security/UserGroupInformation;
      28: aload_0
      29: invokestatic  #34                 // Method org/apache/hadoop/util/Time.now:()J
      32: putfield      #35                 // Field creationTime:J
      35: return

  public java.lang.String getScheme();
    Code:
       0: ldc           #37                 // String viewfs
       2: areturn

  java.lang.String getType();
    Code:
       0: ldc           #37                 // String viewfs
       2: areturn

  public void initialize(java.net.URI, org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #38                 // Method org/apache/hadoop/fs/FileSystem.initialize:(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V
       6: aload_0
       7: aload_2
       8: invokevirtual #39                 // Method setConf:(Lorg/apache/hadoop/conf/Configuration;)V
      11: aload_0
      12: aload_2
      13: putfield      #40                 // Field config:Lorg/apache/hadoop/conf/Configuration;
      16: aload_0
      17: aload_0
      18: getfield      #40                 // Field config:Lorg/apache/hadoop/conf/Configuration;
      21: ldc           #41                 // String fs.viewfs.enable.inner.cache
      23: iconst_1
      24: invokevirtual #42                 // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
      27: putfield      #7                  // Field enableInnerCache:Z
      30: aload_0
      31: invokevirtual #43                 // Method fsGetter:()Lorg/apache/hadoop/fs/viewfs/FsGetter;
      34: astore_3
      35: aload_0
      36: new           #44                 // class org/apache/hadoop/fs/viewfs/ViewFileSystem$InnerCache
      39: dup
      40: aload_3
      41: invokespecial #45                 // Method org/apache/hadoop/fs/viewfs/ViewFileSystem$InnerCache."<init>":(Lorg/apache/hadoop/fs/viewfs/FsGetter;)V
      44: putfield      #6                  // Field cache:Lorg/apache/hadoop/fs/viewfs/ViewFileSystem$InnerCache;
      47: aload_1
      48: invokevirtual #46                 // Method java/net/URI.getAuthority:()Ljava/lang/String;
      51: astore        4
      53: aload         4
      55: astore        5
      57: aload_1
      58: invokevirtual #47                 // Method java/net/URI.getPort:()I
      61: iconst_m1
      62: if_icmpeq     84
      65: aload_0
      66: getfield      #40                 // Field config:Lorg/apache/hadoop/conf/Configuration;
      69: ldc           #48                 // String fs.viewfs.ignore.port.in.mount.table.name
      71: iconst_0
      72: invokevirtual #42                 // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
      75: ifeq          84
      78: aload_1
      79: invokevirtual #49                 // Method java/net/URI.getHost:()Ljava/lang/String;
      82: astore        5
      84: aload_0
      85: new           #50                 // class java/net/URI
      88: dup
      89: aload_0
      90: invokevirtual #51                 // Method getScheme:()Ljava/lang/String;
      93: aload         4
      95: ldc           #52                 // String /
      97: aconst_null
      98: aconst_null
      99: invokespecial #53                 // Method java/net/URI."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     102: putfield      #5                  // Field myUri:Ljava/net/URI;
     105: ldc           #37                 // String viewfs
     107: aload_0
     108: invokevirtual #54                 // Method getType:()Ljava/lang/String;
     111: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     114: ifne          121
     117: iconst_1
     118: goto          122
     121: iconst_0
     122: istore        6
     124: aload_0
     125: new           #56                 // class org/apache/hadoop/fs/viewfs/ViewFileSystem$1
     128: dup
     129: aload_0
     130: aload_2
     131: aload         5
     133: aload_0
     134: getfield      #5                  // Field myUri:Ljava/net/URI;
     137: iload         6
     139: aload_3
     140: invokespecial #57                 // Method org/apache/hadoop/fs/viewfs/ViewFileSystem$1."<init>":(Lorg/apache/hadoop/fs/viewfs/ViewFileSystem;Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/net/URI;ZLorg/apache/hadoop/fs/viewfs/FsGetter;)V
     143: putfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
     146: aload_0
     147: aload_0
     148: invokevirtual #59                 // Method getHomeDirectory:()Lorg/apache/hadoop/fs/Path;
     151: putfield      #26                 // Field workingDir:Lorg/apache/hadoop/fs/Path;
     154: aload_0
     155: aload_2
     156: ldc           #60                 // String fs.viewfs.rename.strategy
     158: getstatic     #30                 // Field org/apache/hadoop/fs/viewfs/ViewFileSystem$RenameStrategy.SAME_MOUNTPOINT:Lorg/apache/hadoop/fs/viewfs/ViewFileSystem$RenameStrategy;
     161: invokevirtual #61                 // Method org/apache/hadoop/fs/viewfs/ViewFileSystem$RenameStrategy.toString:()Ljava/lang/String;
     164: invokevirtual #62                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     167: invokestatic  #63                 // Method org/apache/hadoop/fs/viewfs/ViewFileSystem$RenameStrategy.valueOf:(Ljava/lang/String;)Lorg/apache/hadoop/fs/viewfs/ViewFileSystem$RenameStrategy;
     170: putfield      #31                 // Field renameStrategy:Lorg/apache/hadoop/fs/viewfs/ViewFileSystem$RenameStrategy;
     173: goto          205
     176: astore        6
     178: new           #65                 // class java/io/IOException
     181: dup
     182: new           #9                  // class java/lang/StringBuilder
     185: dup
     186: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
     189: ldc           #66                 // String URISyntax exception:
     191: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     194: aload_1
     195: invokevirtual #67                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     198: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     201: invokespecial #68                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     204: athrow
     205: return
    Exception table:
       from    to  target type
          84   173   176   Class java/net/URISyntaxException

  org.apache.hadoop.fs.viewfs.ViewFileSystem(java.net.URI, org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #69                 // Method "<init>":()V
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokevirtual #70                 // Method initialize:(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V
      10: return

  public org.apache.hadoop.fs.viewfs.ViewFileSystem(org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #71                 // Field org/apache/hadoop/fs/FsConstants.VIEWFS_URI:Ljava/net/URI;
       4: aload_1
       5: invokespecial #72                 // Method "<init>":(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V
       8: return

  public java.net.URI getUri();
    Code:
       0: aload_0
       1: getfield      #5                  // Field myUri:Ljava/net/URI;
       4: areturn

  public org.apache.hadoop.fs.Path resolvePath(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_2
      14: aload_2
      15: invokevirtual #75                 // Method org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.isInternalDir:()Z
      18: ifeq          23
      21: aload_1
      22: areturn
      23: aload_2
      24: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      27: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      30: aload_2
      31: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      34: invokevirtual #79                 // Method org/apache/hadoop/fs/FileSystem.resolvePath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      37: areturn

  public org.apache.hadoop.fs.Path getHomeDirectory();
    Code:
       0: aload_0
       1: getfield      #29                 // Field homeDir:Lorg/apache/hadoop/fs/Path;
       4: ifnonnull     113
       7: aload_0
       8: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
      11: invokevirtual #80                 // Method org/apache/hadoop/fs/viewfs/InodeTree.getHomeDirPrefixValue:()Ljava/lang/String;
      14: astore_1
      15: aload_1
      16: ifnonnull     22
      19: ldc           #81                 // String /user
      21: astore_1
      22: aload_0
      23: aload_1
      24: ldc           #52                 // String /
      26: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      29: ifeq          70
      32: aload_0
      33: new           #25                 // class org/apache/hadoop/fs/Path
      36: dup
      37: new           #9                  // class java/lang/StringBuilder
      40: dup
      41: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      44: aload_1
      45: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #33                 // Field ugi:Lorg/apache/hadoop/security/UserGroupInformation;
      52: invokevirtual #82                 // Method org/apache/hadoop/security/UserGroupInformation.getShortUserName:()Ljava/lang/String;
      55: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: invokespecial #83                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      64: invokevirtual #84                 // Method makeQualified:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      67: goto          110
      70: aload_0
      71: new           #25                 // class org/apache/hadoop/fs/Path
      74: dup
      75: new           #9                  // class java/lang/StringBuilder
      78: dup
      79: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      82: aload_1
      83: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: ldc           #52                 // String /
      88: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: aload_0
      92: getfield      #33                 // Field ugi:Lorg/apache/hadoop/security/UserGroupInformation;
      95: invokevirtual #82                 // Method org/apache/hadoop/security/UserGroupInformation.getShortUserName:()Ljava/lang/String;
      98: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     104: invokespecial #83                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
     107: invokevirtual #84                 // Method makeQualified:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
     110: putfield      #29                 // Field homeDir:Lorg/apache/hadoop/fs/Path;
     113: aload_0
     114: getfield      #29                 // Field homeDir:Lorg/apache/hadoop/fs/Path;
     117: areturn

  public org.apache.hadoop.fs.Path getWorkingDirectory();
    Code:
       0: aload_0
       1: getfield      #26                 // Field workingDir:Lorg/apache/hadoop/fs/Path;
       4: areturn

  public void setWorkingDirectory(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       5: pop
       6: aload_0
       7: aload_0
       8: aload_1
       9: invokespecial #21                 // Method makeAbsolute:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      12: putfield      #26                 // Field workingDir:Lorg/apache/hadoop/fs/Path;
      15: return

  public org.apache.hadoop.fs.FSDataOutputStream append(org.apache.hadoop.fs.Path, int, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore        4
      15: aload         4
      17: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      20: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      23: aload         4
      25: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      28: iload_2
      29: aload_3
      30: invokevirtual #85                 // Method org/apache/hadoop/fs/FileSystem.append:(Lorg/apache/hadoop/fs/Path;ILorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
      33: areturn

  public org.apache.hadoop.fs.FSDataOutputStream createNonRecursive(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission, java.util.EnumSet<org.apache.hadoop.fs.CreateFlag>, int, short, long, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_0
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore        9
      15: goto          27
      18: astore        10
      20: ldc           #87                 // String create
      22: aload_1
      23: invokestatic  #88                 // Method readOnlyMountTable:(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/security/AccessControlException;
      26: athrow
      27: getstatic     #89                 // Field $assertionsDisabled:Z
      30: ifne          49
      33: aload         9
      35: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      38: ifnonnull     49
      41: new           #90                 // class java/lang/AssertionError
      44: dup
      45: invokespecial #91                 // Method java/lang/AssertionError."<init>":()V
      48: athrow
      49: aload         9
      51: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      54: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      57: aload         9
      59: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      62: aload_2
      63: aload_3
      64: iload         4
      66: iload         5
      68: lload         6
      70: aload         8
      72: invokevirtual #92                 // Method org/apache/hadoop/fs/FileSystem.createNonRecursive:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;Ljava/util/EnumSet;ISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
      75: areturn
    Exception table:
       from    to  target type
           0    15    18   Class java/io/FileNotFoundException

  public org.apache.hadoop.fs.FSDataOutputStream create(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission, boolean, int, short, long, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_0
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore        9
      15: goto          27
      18: astore        10
      20: ldc           #87                 // String create
      22: aload_1
      23: invokestatic  #88                 // Method readOnlyMountTable:(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/security/AccessControlException;
      26: athrow
      27: getstatic     #89                 // Field $assertionsDisabled:Z
      30: ifne          49
      33: aload         9
      35: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      38: ifnonnull     49
      41: new           #90                 // class java/lang/AssertionError
      44: dup
      45: invokespecial #91                 // Method java/lang/AssertionError."<init>":()V
      48: athrow
      49: aload         9
      51: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      54: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      57: aload         9
      59: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      62: aload_2
      63: iload_3
      64: iload         4
      66: iload         5
      68: lload         6
      70: aload         8
      72: invokevirtual #93                 // Method org/apache/hadoop/fs/FileSystem.create:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
      75: areturn
    Exception table:
       from    to  target type
           0    15    18   Class java/io/FileNotFoundException

  public boolean delete(org.apache.hadoop.fs.Path, boolean) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_3
      14: aload_3
      15: invokevirtual #75                 // Method org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.isInternalDir:()Z
      18: ifne          31
      21: aload_3
      22: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: getstatic     #94                 // Field org/apache/hadoop/fs/viewfs/InodeTree.SlashPath:Lorg/apache/hadoop/fs/Path;
      28: if_acmpne     38
      31: ldc           #95                 // String delete
      33: aload_1
      34: invokestatic  #88                 // Method readOnlyMountTable:(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/security/AccessControlException;
      37: athrow
      38: aload_3
      39: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      42: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      45: aload_3
      46: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      49: iload_2
      50: invokevirtual #96                 // Method org/apache/hadoop/fs/FileSystem.delete:(Lorg/apache/hadoop/fs/Path;Z)Z
      53: ireturn

  public boolean delete(org.apache.hadoop.fs.Path) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokevirtual #97                 // Method delete:(Lorg/apache/hadoop/fs/Path;Z)Z
       6: ireturn

  public org.apache.hadoop.fs.BlockLocation[] getFileBlockLocations(org.apache.hadoop.fs.FileStatus, long, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #98                 // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
       9: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
      12: iconst_1
      13: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      16: astore        6
      18: aload         6
      20: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      23: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      26: new           #99                 // class org/apache/hadoop/fs/viewfs/ViewFsFileStatus
      29: dup
      30: aload_1
      31: aload         6
      33: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      36: invokespecial #100                // Method org/apache/hadoop/fs/viewfs/ViewFsFileStatus."<init>":(Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/fs/Path;)V
      39: lload_2
      40: lload         4
      42: invokevirtual #101                // Method org/apache/hadoop/fs/FileSystem.getFileBlockLocations:(Lorg/apache/hadoop/fs/FileStatus;JJ)[Lorg/apache/hadoop/fs/BlockLocation;
      45: areturn

  public org.apache.hadoop.fs.FileChecksum getFileChecksum(org.apache.hadoop.fs.Path) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_2
      14: aload_2
      15: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      21: aload_2
      22: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: invokevirtual #102                // Method org/apache/hadoop/fs/FileSystem.getFileChecksum:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileChecksum;
      28: areturn

  public org.apache.hadoop.fs.FileChecksum getFileChecksum(org.apache.hadoop.fs.Path, long) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore        4
      15: aload         4
      17: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      20: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      23: aload         4
      25: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      28: lload_2
      29: invokevirtual #103                // Method org/apache/hadoop/fs/FileSystem.getFileChecksum:(Lorg/apache/hadoop/fs/Path;J)Lorg/apache/hadoop/fs/FileChecksum;
      32: areturn

  private static org.apache.hadoop.fs.FileStatus fixFileStatus(org.apache.hadoop.fs.FileStatus, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: ldc           #104                // String file
       2: aload_0
       3: invokevirtual #98                 // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
       6: invokevirtual #22                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
       9: invokevirtual #105                // Method java/net/URI.getScheme:()Ljava/lang/String;
      12: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      15: ifeq          24
      18: aload_0
      19: aload_1
      20: invokestatic  #106                // Method wrapLocalFileStatus:(Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      23: astore_0
      24: aload_0
      25: aload_1
      26: invokevirtual #107                // Method org/apache/hadoop/fs/FileStatus.setPath:(Lorg/apache/hadoop/fs/Path;)V
      29: aload_0
      30: areturn

  private static org.apache.hadoop.fs.FileStatus wrapLocalFileStatus(org.apache.hadoop.fs.FileStatus, org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: instanceof    #108                // class org/apache/hadoop/fs/LocatedFileStatus
       4: ifeq          22
       7: new           #109                // class org/apache/hadoop/fs/viewfs/ViewFsLocatedFileStatus
      10: dup
      11: aload_0
      12: checkcast     #108                // class org/apache/hadoop/fs/LocatedFileStatus
      15: aload_1
      16: invokespecial #110                // Method org/apache/hadoop/fs/viewfs/ViewFsLocatedFileStatus."<init>":(Lorg/apache/hadoop/fs/LocatedFileStatus;Lorg/apache/hadoop/fs/Path;)V
      19: goto          31
      22: new           #99                 // class org/apache/hadoop/fs/viewfs/ViewFsFileStatus
      25: dup
      26: aload_0
      27: aload_1
      28: invokespecial #100                // Method org/apache/hadoop/fs/viewfs/ViewFsFileStatus."<init>":(Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/fs/Path;)V
      31: areturn

  public org.apache.hadoop.fs.FileStatus getFileStatus(org.apache.hadoop.fs.Path) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_2
      14: aload_2
      15: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      21: aload_2
      22: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: invokevirtual #111                // Method org/apache/hadoop/fs/FileSystem.getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      28: astore_3
      29: aload_3
      30: aload_0
      31: aload_1
      32: invokevirtual #84                 // Method makeQualified:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      35: invokestatic  #3                  // Method fixFileStatus:(Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      38: areturn

  public void access(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsAction) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_3
      14: aload_3
      15: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      21: aload_3
      22: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: aload_2
      26: invokevirtual #112                // Method org/apache/hadoop/fs/FileSystem.access:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsAction;)V
      29: return

  public org.apache.hadoop.fs.FileStatus[] listStatus(org.apache.hadoop.fs.Path) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_2
      14: aload_2
      15: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      21: aload_2
      22: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: invokevirtual #113                // Method org/apache/hadoop/fs/FileSystem.listStatus:(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
      28: astore_3
      29: aload_2
      30: invokevirtual #75                 // Method org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.isInternalDir:()Z
      33: ifne          90
      36: iconst_0
      37: istore        4
      39: aload_3
      40: astore        5
      42: aload         5
      44: arraylength
      45: istore        6
      47: iconst_0
      48: istore        7
      50: iload         7
      52: iload         6
      54: if_icmpge     90
      57: aload         5
      59: iload         7
      61: aaload
      62: astore        8
      64: aload_3
      65: iload         4
      67: iinc          4, 1
      70: aload         8
      72: aload_0
      73: aload_2
      74: aload         8
      76: aload_1
      77: invokespecial #4                  // Method getChrootedPath:(Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      80: invokestatic  #3                  // Method fixFileStatus:(Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      83: aastore
      84: iinc          7, 1
      87: goto          50
      90: aload_3
      91: areturn

  public org.apache.hadoop.fs.RemoteIterator<org.apache.hadoop.fs.LocatedFileStatus> listLocatedStatus(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.PathFilter) throws java.io.FileNotFoundException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_3
      14: aload_3
      15: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      21: aload_3
      22: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: invokevirtual #114                // Method org/apache/hadoop/fs/FileSystem.listLocatedStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/RemoteIterator;
      28: astore        4
      30: aload_3
      31: invokevirtual #75                 // Method org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.isInternalDir:()Z
      34: ifeq          40
      37: aload         4
      39: areturn
      40: new           #115                // class org/apache/hadoop/fs/viewfs/ViewFileSystem$2
      43: dup
      44: aload_0
      45: aload         4
      47: aload_3
      48: aload_1
      49: invokespecial #116                // Method org/apache/hadoop/fs/viewfs/ViewFileSystem$2."<init>":(Lorg/apache/hadoop/fs/viewfs/ViewFileSystem;Lorg/apache/hadoop/fs/RemoteIterator;Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;Lorg/apache/hadoop/fs/Path;)V
      52: areturn

  private org.apache.hadoop.fs.Path getChrootedPath(org.apache.hadoop.fs.viewfs.InodeTree$ResolveResult<org.apache.hadoop.fs.FileSystem>, org.apache.hadoop.fs.FileStatus, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_1
       1: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
       4: instanceof    #117                // class org/apache/hadoop/fs/viewfs/ChRootedFileSystem
       7: ifeq          29
      10: aload_1
      11: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      14: checkcast     #117                // class org/apache/hadoop/fs/viewfs/ChRootedFileSystem
      17: aload_2
      18: invokevirtual #98                 // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
      21: invokevirtual #118                // Method org/apache/hadoop/fs/viewfs/ChRootedFileSystem.stripOutRoot:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
      24: astore        4
      26: goto          38
      29: aload_2
      30: checkcast     #119                // class org/apache/hadoop/fs/viewfs/NflyFSystem$NflyStatus
      33: invokevirtual #120                // Method org/apache/hadoop/fs/viewfs/NflyFSystem$NflyStatus.stripRoot:()Ljava/lang/String;
      36: astore        4
      38: aload_0
      39: aload         4
      41: invokevirtual #121                // Method java/lang/String.length:()I
      44: ifne          51
      47: aload_3
      48: goto          64
      51: new           #25                 // class org/apache/hadoop/fs/Path
      54: dup
      55: aload_1
      56: getfield      #122                // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.resolvedPath:Ljava/lang/String;
      59: aload         4
      61: invokespecial #123                // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      64: invokevirtual #84                 // Method makeQualified:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      67: areturn

  public boolean mkdirs(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_0
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_2
      14: aload_2
      15: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      21: aload_2
      22: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: invokevirtual #124                // Method org/apache/hadoop/fs/FileSystem.mkdirs:(Lorg/apache/hadoop/fs/Path;)Z
      28: ireturn

  public boolean mkdirs(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_0
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_3
      14: aload_3
      15: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      21: aload_3
      22: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: aload_2
      26: invokevirtual #125                // Method org/apache/hadoop/fs/FileSystem.mkdirs:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z
      29: ireturn

  public org.apache.hadoop.fs.FSDataInputStream open(org.apache.hadoop.fs.Path, int) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_3
      14: aload_3
      15: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      21: aload_3
      22: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: iload_2
      26: invokevirtual #126                // Method org/apache/hadoop/fs/FileSystem.open:(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;
      29: areturn

  public boolean rename(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_0
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_3
      14: aload_3
      15: invokevirtual #75                 // Method org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.isInternalDir:()Z
      18: ifeq          28
      21: ldc           #127                // String rename
      23: aload_1
      24: invokestatic  #88                 // Method readOnlyMountTable:(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/security/AccessControlException;
      27: athrow
      28: aload_0
      29: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
      32: aload_0
      33: aload_2
      34: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
      37: iconst_0
      38: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      41: astore        4
      43: aload         4
      45: invokevirtual #75                 // Method org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.isInternalDir:()Z
      48: ifeq          58
      51: ldc           #127                // String rename
      53: aload_2
      54: invokestatic  #88                 // Method readOnlyMountTable:(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/security/AccessControlException;
      57: athrow
      58: aload_3
      59: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      62: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      65: invokevirtual #128                // Method org/apache/hadoop/fs/FileSystem.getUri:()Ljava/net/URI;
      68: astore        5
      70: aload         4
      72: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      75: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      78: invokevirtual #128                // Method org/apache/hadoop/fs/FileSystem.getUri:()Ljava/net/URI;
      81: astore        6
      83: aload         5
      85: aload         6
      87: aload_3
      88: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      91: aload         4
      93: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      96: if_acmpne     103
      99: iconst_1
     100: goto          104
     103: iconst_0
     104: aload_0
     105: getfield      #31                 // Field renameStrategy:Lorg/apache/hadoop/fs/viewfs/ViewFileSystem$RenameStrategy;
     108: invokestatic  #129                // Method verifyRenameStrategy:(Ljava/net/URI;Ljava/net/URI;ZLorg/apache/hadoop/fs/viewfs/ViewFileSystem$RenameStrategy;)V
     111: aload_3
     112: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
     115: instanceof    #117                // class org/apache/hadoop/fs/viewfs/ChRootedFileSystem
     118: ifeq          179
     121: aload         4
     123: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
     126: instanceof    #117                // class org/apache/hadoop/fs/viewfs/ChRootedFileSystem
     129: ifeq          179
     132: aload_3
     133: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
     136: checkcast     #117                // class org/apache/hadoop/fs/viewfs/ChRootedFileSystem
     139: astore        7
     141: aload         4
     143: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
     146: checkcast     #117                // class org/apache/hadoop/fs/viewfs/ChRootedFileSystem
     149: astore        8
     151: aload         7
     153: invokevirtual #130                // Method org/apache/hadoop/fs/viewfs/ChRootedFileSystem.getMyFs:()Lorg/apache/hadoop/fs/FileSystem;
     156: aload         7
     158: aload_3
     159: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
     162: invokevirtual #131                // Method org/apache/hadoop/fs/viewfs/ChRootedFileSystem.fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
     165: aload         8
     167: aload         4
     169: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
     172: invokevirtual #131                // Method org/apache/hadoop/fs/viewfs/ChRootedFileSystem.fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
     175: invokevirtual #132                // Method org/apache/hadoop/fs/FileSystem.rename:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
     178: ireturn
     179: aload_3
     180: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
     183: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
     186: aload_3
     187: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
     190: aload         4
     192: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
     195: invokevirtual #132                // Method org/apache/hadoop/fs/FileSystem.rename:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
     198: ireturn

  static void verifyRenameStrategy(java.net.URI, java.net.URI, boolean, org.apache.hadoop.fs.viewfs.ViewFileSystem$RenameStrategy) throws java.io.IOException;
    Code:
       0: getstatic     #133                // Field org/apache/hadoop/fs/viewfs/ViewFileSystem$3.$SwitchMap$org$apache$hadoop$fs$viewfs$ViewFileSystem$RenameStrategy:[I
       3: aload_3
       4: invokevirtual #134                // Method org/apache/hadoop/fs/viewfs/ViewFileSystem$RenameStrategy.ordinal:()I
       7: iaload
       8: tableswitch   { // 1 to 3
                     1: 36
                     2: 81
                     3: 99
               default: 113
          }
      36: aload_0
      37: invokevirtual #46                 // Method java/net/URI.getAuthority:()Ljava/lang/String;
      40: ifnull        123
      43: aload_0
      44: invokevirtual #105                // Method java/net/URI.getScheme:()Ljava/lang/String;
      47: aload_1
      48: invokevirtual #105                // Method java/net/URI.getScheme:()Ljava/lang/String;
      51: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      54: ifeq          71
      57: aload_0
      58: invokevirtual #46                 // Method java/net/URI.getAuthority:()Ljava/lang/String;
      61: aload_1
      62: invokevirtual #46                 // Method java/net/URI.getAuthority:()Ljava/lang/String;
      65: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      68: ifne          123
      71: new           #65                 // class java/io/IOException
      74: dup
      75: ldc           #135                // String Renames across Mount points not supported
      77: invokespecial #68                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      80: athrow
      81: aload_0
      82: aload_1
      83: invokevirtual #136                // Method java/net/URI.equals:(Ljava/lang/Object;)Z
      86: ifne          123
      89: new           #65                 // class java/io/IOException
      92: dup
      93: ldc           #135                // String Renames across Mount points not supported
      95: invokespecial #68                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      98: athrow
      99: iload_2
     100: ifne          123
     103: new           #65                 // class java/io/IOException
     106: dup
     107: ldc           #135                // String Renames across Mount points not supported
     109: invokespecial #68                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     112: athrow
     113: new           #137                // class java/lang/IllegalArgumentException
     116: dup
     117: ldc           #138                // String Unexpected rename strategy
     119: invokespecial #139                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     122: athrow
     123: return

  public boolean truncate(org.apache.hadoop.fs.Path, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore        4
      15: aload         4
      17: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      20: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      23: aload         4
      25: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      28: lload_2
      29: invokevirtual #140                // Method org/apache/hadoop/fs/FileSystem.truncate:(Lorg/apache/hadoop/fs/Path;J)Z
      32: ireturn

  public void setOwner(org.apache.hadoop.fs.Path, java.lang.String, java.lang.String) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore        4
      15: aload         4
      17: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      20: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      23: aload         4
      25: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      28: aload_2
      29: aload_3
      30: invokevirtual #141                // Method org/apache/hadoop/fs/FileSystem.setOwner:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;)V
      33: return

  public void setPermission(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_3
      14: aload_3
      15: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      21: aload_3
      22: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: aload_2
      26: invokevirtual #142                // Method org/apache/hadoop/fs/FileSystem.setPermission:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)V
      29: return

  public boolean setReplication(org.apache.hadoop.fs.Path, short) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_3
      14: aload_3
      15: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      21: aload_3
      22: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: iload_2
      26: invokevirtual #143                // Method org/apache/hadoop/fs/FileSystem.setReplication:(Lorg/apache/hadoop/fs/Path;S)Z
      29: ireturn

  public void setTimes(org.apache.hadoop.fs.Path, long, long) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore        6
      15: aload         6
      17: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      20: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      23: aload         6
      25: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      28: lload_2
      29: lload         4
      31: invokevirtual #144                // Method org/apache/hadoop/fs/FileSystem.setTimes:(Lorg/apache/hadoop/fs/Path;JJ)V
      34: return

  public void modifyAclEntries(org.apache.hadoop.fs.Path, java.util.List<org.apache.hadoop.fs.permission.AclEntry>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_3
      14: aload_3
      15: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      21: aload_3
      22: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: aload_2
      26: invokevirtual #145                // Method org/apache/hadoop/fs/FileSystem.modifyAclEntries:(Lorg/apache/hadoop/fs/Path;Ljava/util/List;)V
      29: return

  public void removeAclEntries(org.apache.hadoop.fs.Path, java.util.List<org.apache.hadoop.fs.permission.AclEntry>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_3
      14: aload_3
      15: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      21: aload_3
      22: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: aload_2
      26: invokevirtual #146                // Method org/apache/hadoop/fs/FileSystem.removeAclEntries:(Lorg/apache/hadoop/fs/Path;Ljava/util/List;)V
      29: return

  public void removeDefaultAcl(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_2
      14: aload_2
      15: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      21: aload_2
      22: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: invokevirtual #147                // Method org/apache/hadoop/fs/FileSystem.removeDefaultAcl:(Lorg/apache/hadoop/fs/Path;)V
      28: return

  public void removeAcl(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_2
      14: aload_2
      15: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      21: aload_2
      22: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: invokevirtual #148                // Method org/apache/hadoop/fs/FileSystem.removeAcl:(Lorg/apache/hadoop/fs/Path;)V
      28: return

  public void setAcl(org.apache.hadoop.fs.Path, java.util.List<org.apache.hadoop.fs.permission.AclEntry>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_3
      14: aload_3
      15: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      21: aload_3
      22: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: aload_2
      26: invokevirtual #149                // Method org/apache/hadoop/fs/FileSystem.setAcl:(Lorg/apache/hadoop/fs/Path;Ljava/util/List;)V
      29: return

  public org.apache.hadoop.fs.permission.AclStatus getAclStatus(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_2
      14: aload_2
      15: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      21: aload_2
      22: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: invokevirtual #150                // Method org/apache/hadoop/fs/FileSystem.getAclStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/permission/AclStatus;
      28: areturn

  public void setXAttr(org.apache.hadoop.fs.Path, java.lang.String, byte[], java.util.EnumSet<org.apache.hadoop.fs.XAttrSetFlag>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore        5
      15: aload         5
      17: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      20: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      23: aload         5
      25: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      28: aload_2
      29: aload_3
      30: aload         4
      32: invokevirtual #151                // Method org/apache/hadoop/fs/FileSystem.setXAttr:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;[BLjava/util/EnumSet;)V
      35: return

  public byte[] getXAttr(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_3
      14: aload_3
      15: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      21: aload_3
      22: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: aload_2
      26: invokevirtual #152                // Method org/apache/hadoop/fs/FileSystem.getXAttr:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)[B
      29: areturn

  public java.util.Map<java.lang.String, byte[]> getXAttrs(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_2
      14: aload_2
      15: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      21: aload_2
      22: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: invokevirtual #153                // Method org/apache/hadoop/fs/FileSystem.getXAttrs:(Lorg/apache/hadoop/fs/Path;)Ljava/util/Map;
      28: areturn

  public java.util.Map<java.lang.String, byte[]> getXAttrs(org.apache.hadoop.fs.Path, java.util.List<java.lang.String>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_3
      14: aload_3
      15: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      21: aload_3
      22: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: aload_2
      26: invokevirtual #154                // Method org/apache/hadoop/fs/FileSystem.getXAttrs:(Lorg/apache/hadoop/fs/Path;Ljava/util/List;)Ljava/util/Map;
      29: areturn

  public java.util.List<java.lang.String> listXAttrs(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_2
      14: aload_2
      15: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      21: aload_2
      22: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: invokevirtual #155                // Method org/apache/hadoop/fs/FileSystem.listXAttrs:(Lorg/apache/hadoop/fs/Path;)Ljava/util/List;
      28: areturn

  public void removeXAttr(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_3
      14: aload_3
      15: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      21: aload_3
      22: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: aload_2
      26: invokevirtual #156                // Method org/apache/hadoop/fs/FileSystem.removeXAttr:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      29: return

  public void setVerifyChecksum(boolean);
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: invokevirtual #157                // Method org/apache/hadoop/fs/viewfs/InodeTree.getMountPoints:()Ljava/util/List;
       7: astore_2
       8: aload_0
       9: aload_2
      10: invokespecial #158                // Method initializeMountedFileSystems:(Ljava/util/List;)Ljava/util/Map;
      13: astore_3
      14: aload_2
      15: invokeinterface #159,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      20: astore        4
      22: aload         4
      24: invokeinterface #160,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          65
      32: aload         4
      34: invokeinterface #161,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #162                // class org/apache/hadoop/fs/viewfs/InodeTree$MountPoint
      42: astore        5
      44: aload_3
      45: aload         5
      47: getfield      #163                // Field org/apache/hadoop/fs/viewfs/InodeTree$MountPoint.src:Ljava/lang/String;
      50: invokeinterface #164,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      55: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      58: iload_1
      59: invokevirtual #165                // Method org/apache/hadoop/fs/FileSystem.setVerifyChecksum:(Z)V
      62: goto          22
      65: return

  private java.util.Map<java.lang.String, org.apache.hadoop.fs.FileSystem> initializeMountedFileSystems(java.util.List<org.apache.hadoop.fs.viewfs.InodeTree$MountPoint<org.apache.hadoop.fs.FileSystem>>);
    Code:
       0: aconst_null
       1: astore_2
       2: new           #166                // class java/util/HashMap
       5: dup
       6: aload_1
       7: invokeinterface #167,  1          // InterfaceMethod java/util/List.size:()I
      12: invokespecial #168                // Method java/util/HashMap."<init>":(I)V
      15: astore_3
      16: aload_1
      17: invokeinterface #159,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      22: astore        4
      24: aload         4
      26: invokeinterface #160,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          136
      34: aload         4
      36: invokeinterface #161,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #162                // class org/apache/hadoop/fs/viewfs/InodeTree$MountPoint
      44: astore        5
      46: aload         5
      48: getfield      #169                // Field org/apache/hadoop/fs/viewfs/InodeTree$MountPoint.target:Lorg/apache/hadoop/fs/viewfs/InodeTree$INodeLink;
      51: invokevirtual #170                // Method org/apache/hadoop/fs/viewfs/InodeTree$INodeLink.getTargetFileSystem:()Ljava/lang/Object;
      54: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      57: astore_2
      58: aload_3
      59: aload         5
      61: getfield      #163                // Field org/apache/hadoop/fs/viewfs/InodeTree$MountPoint.src:Ljava/lang/String;
      64: aload_2
      65: invokeinterface #171,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      70: pop
      71: goto          133
      74: astore        6
      76: new           #9                  // class java/lang/StringBuilder
      79: dup
      80: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      83: ldc           #172                // String Not able to initialize FileSystem for mount path
      85: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: aload         5
      90: getfield      #163                // Field org/apache/hadoop/fs/viewfs/InodeTree$MountPoint.src:Ljava/lang/String;
      93: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: ldc           #173                // String  with exception
      98: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: aload         6
     103: invokevirtual #67                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     106: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     109: astore        7
     111: getstatic     #174                // Field LOG:Lorg/apache/commons/logging/Log;
     114: aload         7
     116: invokeinterface #175,  2          // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;)V
     121: new           #176                // class java/lang/RuntimeException
     124: dup
     125: aload         7
     127: aload         6
     129: invokespecial #177                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     132: athrow
     133: goto          24
     136: aload_3
     137: areturn
    Exception table:
       from    to  target type
          46    71    74   Class java/io/IOException

  public long getDefaultBlockSize();
    Code:
       0: new           #178                // class org/apache/hadoop/fs/viewfs/NotInMountpointException
       3: dup
       4: ldc           #179                // String getDefaultBlockSize
       6: invokespecial #180                // Method org/apache/hadoop/fs/viewfs/NotInMountpointException."<init>":(Ljava/lang/String;)V
       9: athrow

  public short getDefaultReplication();
    Code:
       0: new           #178                // class org/apache/hadoop/fs/viewfs/NotInMountpointException
       3: dup
       4: ldc           #181                // String getDefaultReplication
       6: invokespecial #180                // Method org/apache/hadoop/fs/viewfs/NotInMountpointException."<init>":(Ljava/lang/String;)V
       9: athrow

  public org.apache.hadoop.fs.FsServerDefaults getServerDefaults() throws java.io.IOException;
    Code:
       0: new           #178                // class org/apache/hadoop/fs/viewfs/NotInMountpointException
       3: dup
       4: ldc           #182                // String getServerDefaults
       6: invokespecial #180                // Method org/apache/hadoop/fs/viewfs/NotInMountpointException."<init>":(Ljava/lang/String;)V
       9: athrow

  public long getDefaultBlockSize(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_2
      14: aload_2
      15: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      21: aload_2
      22: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: invokevirtual #183                // Method org/apache/hadoop/fs/FileSystem.getDefaultBlockSize:(Lorg/apache/hadoop/fs/Path;)J
      28: lreturn
      29: astore_2
      30: new           #178                // class org/apache/hadoop/fs/viewfs/NotInMountpointException
      33: dup
      34: aload_1
      35: ldc           #179                // String getDefaultBlockSize
      37: invokespecial #184                // Method org/apache/hadoop/fs/viewfs/NotInMountpointException."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      40: athrow
      41: astore_2
      42: new           #176                // class java/lang/RuntimeException
      45: dup
      46: new           #9                  // class java/lang/StringBuilder
      49: dup
      50: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      53: ldc           #185                // String Not able to initialize fs in  getDefaultBlockSize for path
      55: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: aload_1
      59: invokevirtual #67                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      62: ldc           #186                // String  with exception
      64: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: aload_2
      71: invokespecial #177                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      74: athrow
    Exception table:
       from    to  target type
           0    28    29   Class java/io/FileNotFoundException
           0    28    41   Class java/io/IOException

  public short getDefaultReplication(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_2
      14: aload_2
      15: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      21: aload_2
      22: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: invokevirtual #187                // Method org/apache/hadoop/fs/FileSystem.getDefaultReplication:(Lorg/apache/hadoop/fs/Path;)S
      28: ireturn
      29: astore_2
      30: new           #178                // class org/apache/hadoop/fs/viewfs/NotInMountpointException
      33: dup
      34: aload_1
      35: ldc           #181                // String getDefaultReplication
      37: invokespecial #184                // Method org/apache/hadoop/fs/viewfs/NotInMountpointException."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      40: athrow
      41: astore_2
      42: new           #176                // class java/lang/RuntimeException
      45: dup
      46: new           #9                  // class java/lang/StringBuilder
      49: dup
      50: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      53: ldc           #188                // String Not able to initialize fs in  getDefaultReplication for path
      55: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: aload_1
      59: invokevirtual #67                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      62: ldc           #186                // String  with exception
      64: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: aload_2
      71: invokespecial #177                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      74: athrow
    Exception table:
       from    to  target type
           0    28    29   Class java/io/FileNotFoundException
           0    28    41   Class java/io/IOException

  public org.apache.hadoop.fs.FsServerDefaults getServerDefaults(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_2
      14: aload_2
      15: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      21: aload_2
      22: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: invokevirtual #189                // Method org/apache/hadoop/fs/FileSystem.getServerDefaults:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FsServerDefaults;
      28: areturn
      29: astore_2
      30: new           #178                // class org/apache/hadoop/fs/viewfs/NotInMountpointException
      33: dup
      34: aload_1
      35: ldc           #182                // String getServerDefaults
      37: invokespecial #184                // Method org/apache/hadoop/fs/viewfs/NotInMountpointException."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      40: athrow
    Exception table:
       from    to  target type
           0    28    29   Class java/io/FileNotFoundException

  public org.apache.hadoop.fs.ContentSummary getContentSummary(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_2
      14: aload_2
      15: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      21: aload_2
      22: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: invokevirtual #190                // Method org/apache/hadoop/fs/FileSystem.getContentSummary:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/ContentSummary;
      28: areturn

  public org.apache.hadoop.fs.QuotaUsage getQuotaUsage(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_2
      14: aload_2
      15: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      21: aload_2
      22: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: invokevirtual #191                // Method org/apache/hadoop/fs/FileSystem.getQuotaUsage:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/QuotaUsage;
      28: areturn

  public void setWriteChecksum(boolean);
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: invokevirtual #157                // Method org/apache/hadoop/fs/viewfs/InodeTree.getMountPoints:()Ljava/util/List;
       7: astore_2
       8: aload_0
       9: aload_2
      10: invokespecial #158                // Method initializeMountedFileSystems:(Ljava/util/List;)Ljava/util/Map;
      13: astore_3
      14: aload_2
      15: invokeinterface #159,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      20: astore        4
      22: aload         4
      24: invokeinterface #160,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          65
      32: aload         4
      34: invokeinterface #161,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #162                // class org/apache/hadoop/fs/viewfs/InodeTree$MountPoint
      42: astore        5
      44: aload_3
      45: aload         5
      47: getfield      #163                // Field org/apache/hadoop/fs/viewfs/InodeTree$MountPoint.src:Ljava/lang/String;
      50: invokeinterface #164,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      55: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      58: iload_1
      59: invokevirtual #192                // Method org/apache/hadoop/fs/FileSystem.setWriteChecksum:(Z)V
      62: goto          22
      65: return

  public org.apache.hadoop.fs.FileSystem[] getChildFileSystems();
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: invokevirtual #157                // Method org/apache/hadoop/fs/viewfs/InodeTree.getMountPoints:()Ljava/util/List;
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokespecial #158                // Method initializeMountedFileSystems:(Ljava/util/List;)Ljava/util/Map;
      13: astore_2
      14: new           #193                // class java/util/HashSet
      17: dup
      18: invokespecial #194                // Method java/util/HashSet."<init>":()V
      21: astore_3
      22: aload_1
      23: invokeinterface #159,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      28: astore        4
      30: aload         4
      32: invokeinterface #160,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ifeq          86
      40: aload         4
      42: invokeinterface #161,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #162                // class org/apache/hadoop/fs/viewfs/InodeTree$MountPoint
      50: astore        5
      52: aload_2
      53: aload         5
      55: getfield      #163                // Field org/apache/hadoop/fs/viewfs/InodeTree$MountPoint.src:Ljava/lang/String;
      58: invokeinterface #164,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      63: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      66: astore        6
      68: aload_3
      69: aload         6
      71: invokevirtual #195                // Method org/apache/hadoop/fs/FileSystem.getChildFileSystems:()[Lorg/apache/hadoop/fs/FileSystem;
      74: invokestatic  #196                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      77: invokeinterface #197,  2          // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      82: pop
      83: goto          30
      86: aload_3
      87: iconst_0
      88: anewarray     #77                 // class org/apache/hadoop/fs/FileSystem
      91: invokeinterface #198,  2          // InterfaceMethod java/util/Set.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      96: checkcast     #199                // class "[Lorg/apache/hadoop/fs/FileSystem;"
      99: areturn

  public org.apache.hadoop.fs.viewfs.ViewFileSystem$MountPoint[] getMountPoints();
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: invokevirtual #157                // Method org/apache/hadoop/fs/viewfs/InodeTree.getMountPoints:()Ljava/util/List;
       7: astore_1
       8: aload_1
       9: invokeinterface #167,  1          // InterfaceMethod java/util/List.size:()I
      14: anewarray     #200                // class org/apache/hadoop/fs/viewfs/ViewFileSystem$MountPoint
      17: astore_2
      18: iconst_0
      19: istore_3
      20: iload_3
      21: aload_1
      22: invokeinterface #167,  1          // InterfaceMethod java/util/List.size:()I
      27: if_icmpge     82
      30: aload_2
      31: iload_3
      32: new           #200                // class org/apache/hadoop/fs/viewfs/ViewFileSystem$MountPoint
      35: dup
      36: new           #25                 // class org/apache/hadoop/fs/Path
      39: dup
      40: aload_1
      41: iload_3
      42: invokeinterface #201,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      47: checkcast     #162                // class org/apache/hadoop/fs/viewfs/InodeTree$MountPoint
      50: getfield      #163                // Field org/apache/hadoop/fs/viewfs/InodeTree$MountPoint.src:Ljava/lang/String;
      53: invokespecial #83                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      56: aload_1
      57: iload_3
      58: invokeinterface #201,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      63: checkcast     #162                // class org/apache/hadoop/fs/viewfs/InodeTree$MountPoint
      66: getfield      #169                // Field org/apache/hadoop/fs/viewfs/InodeTree$MountPoint.target:Lorg/apache/hadoop/fs/viewfs/InodeTree$INodeLink;
      69: getfield      #202                // Field org/apache/hadoop/fs/viewfs/InodeTree$INodeLink.targetDirLinkList:[Ljava/net/URI;
      72: invokespecial #203                // Method org/apache/hadoop/fs/viewfs/ViewFileSystem$MountPoint."<init>":(Lorg/apache/hadoop/fs/Path;[Ljava/net/URI;)V
      75: aastore
      76: iinc          3, 1
      79: goto          20
      82: aload_2
      83: areturn

  public org.apache.hadoop.fs.Path createSnapshot(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_3
      14: aload_3
      15: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      21: aload_3
      22: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: aload_2
      26: invokevirtual #204                // Method org/apache/hadoop/fs/FileSystem.createSnapshot:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
      29: areturn

  public void renameSnapshot(org.apache.hadoop.fs.Path, java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore        4
      15: aload         4
      17: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      20: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      23: aload         4
      25: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      28: aload_2
      29: aload_3
      30: invokevirtual #205                // Method org/apache/hadoop/fs/FileSystem.renameSnapshot:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;)V
      33: return

  public void deleteSnapshot(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_3
      14: aload_3
      15: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      21: aload_3
      22: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: aload_2
      26: invokevirtual #206                // Method org/apache/hadoop/fs/FileSystem.deleteSnapshot:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      29: return

  public void satisfyStoragePolicy(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_2
      14: aload_2
      15: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      21: aload_2
      22: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: invokevirtual #207                // Method org/apache/hadoop/fs/FileSystem.satisfyStoragePolicy:(Lorg/apache/hadoop/fs/Path;)V
      28: return

  public void setStoragePolicy(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_3
      14: aload_3
      15: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      21: aload_3
      22: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: aload_2
      26: invokevirtual #208                // Method org/apache/hadoop/fs/FileSystem.setStoragePolicy:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      29: return

  public void unsetStoragePolicy(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_2
      14: aload_2
      15: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      21: aload_2
      22: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: invokevirtual #209                // Method org/apache/hadoop/fs/FileSystem.unsetStoragePolicy:(Lorg/apache/hadoop/fs/Path;)V
      28: return

  public org.apache.hadoop.fs.BlockStoragePolicySpi getStoragePolicy(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_2
      14: aload_2
      15: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      21: aload_2
      22: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: invokevirtual #210                // Method org/apache/hadoop/fs/FileSystem.getStoragePolicy:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/BlockStoragePolicySpi;
      28: areturn

  public java.util.Collection<? extends org.apache.hadoop.fs.BlockStoragePolicySpi> getAllStoragePolicies() throws java.io.IOException;
    Code:
       0: new           #193                // class java/util/HashSet
       3: dup
       4: invokespecial #194                // Method java/util/HashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #211                // Method getChildFileSystems:()[Lorg/apache/hadoop/fs/FileSystem;
      12: astore_2
      13: aload_2
      14: arraylength
      15: istore_3
      16: iconst_0
      17: istore        4
      19: iload         4
      21: iload_3
      22: if_icmpge     58
      25: aload_2
      26: iload         4
      28: aaload
      29: astore        5
      31: aload         5
      33: invokevirtual #212                // Method org/apache/hadoop/fs/FileSystem.getAllStoragePolicies:()Ljava/util/Collection;
      36: astore        6
      38: aload_1
      39: aload         6
      41: invokeinterface #213,  2          // InterfaceMethod java/util/Collection.addAll:(Ljava/util/Collection;)Z
      46: pop
      47: goto          52
      50: astore        6
      52: iinc          4, 1
      55: goto          19
      58: aload_1
      59: areturn
    Exception table:
       from    to  target type
          31    47    50   Class java/lang/UnsupportedOperationException

  public org.apache.hadoop.fs.Path getTrashRoot(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_2
      14: aload_2
      15: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      21: aload_2
      22: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: invokevirtual #215                // Method org/apache/hadoop/fs/FileSystem.getTrashRoot:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      28: areturn
      29: astore_2
      30: new           #178                // class org/apache/hadoop/fs/viewfs/NotInMountpointException
      33: dup
      34: aload_1
      35: ldc           #217                // String getTrashRoot
      37: invokespecial #184                // Method org/apache/hadoop/fs/viewfs/NotInMountpointException."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      40: athrow
    Exception table:
       from    to  target type
           0    28    29   Class java/lang/Exception

  public java.util.Collection<org.apache.hadoop.fs.FileStatus> getTrashRoots(boolean);
    Code:
       0: new           #218                // class java/util/ArrayList
       3: dup
       4: invokespecial #219                // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_0
       9: invokevirtual #211                // Method getChildFileSystems:()[Lorg/apache/hadoop/fs/FileSystem;
      12: astore_3
      13: aload_3
      14: arraylength
      15: istore        4
      17: iconst_0
      18: istore        5
      20: iload         5
      22: iload         4
      24: if_icmpge     52
      27: aload_3
      28: iload         5
      30: aaload
      31: astore        6
      33: aload_2
      34: aload         6
      36: iload_1
      37: invokevirtual #220                // Method org/apache/hadoop/fs/FileSystem.getTrashRoots:(Z)Ljava/util/Collection;
      40: invokeinterface #221,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      45: pop
      46: iinc          5, 1
      49: goto          20
      52: aload_2
      53: areturn

  public org.apache.hadoop.fs.FsStatus getStatus() throws java.io.IOException;
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #222                // Method getStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FsStatus;
       5: areturn

  public org.apache.hadoop.fs.FsStatus getStatus(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     8
       4: getstatic     #94                 // Field org/apache/hadoop/fs/viewfs/InodeTree.SlashPath:Lorg/apache/hadoop/fs/Path;
       7: astore_1
       8: aload_0
       9: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
      12: aload_0
      13: aload_1
      14: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
      17: iconst_1
      18: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      21: astore_2
      22: aload_2
      23: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      26: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      29: aload_1
      30: invokevirtual #223                // Method org/apache/hadoop/fs/FileSystem.getStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FsStatus;
      33: areturn

  public long getUsed() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: getstatic     #94                 // Field org/apache/hadoop/fs/viewfs/InodeTree.SlashPath:Lorg/apache/hadoop/fs/Path;
       8: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
      11: iconst_1
      12: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      15: astore_1
      16: aload_1
      17: invokevirtual #75                 // Method org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.isInternalDir:()Z
      20: ifeq          36
      23: new           #178                // class org/apache/hadoop/fs/viewfs/NotInMountpointException
      26: dup
      27: getstatic     #94                 // Field org/apache/hadoop/fs/viewfs/InodeTree.SlashPath:Lorg/apache/hadoop/fs/Path;
      30: ldc           #224                // String getUsed
      32: invokespecial #184                // Method org/apache/hadoop/fs/viewfs/NotInMountpointException."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      35: athrow
      36: aload_1
      37: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      40: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      43: invokevirtual #225                // Method org/apache/hadoop/fs/FileSystem.getUsed:()J
      46: lreturn

  public org.apache.hadoop.fs.Path getLinkTarget(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_2
      14: goto          29
      17: astore_3
      18: new           #178                // class org/apache/hadoop/fs/viewfs/NotInMountpointException
      21: dup
      22: aload_1
      23: ldc           #226                // String getLinkTarget
      25: invokespecial #184                // Method org/apache/hadoop/fs/viewfs/NotInMountpointException."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      28: athrow
      29: aload_2
      30: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      33: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      36: aload_2
      37: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      40: invokevirtual #227                // Method org/apache/hadoop/fs/FileSystem.getLinkTarget:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      43: areturn
    Exception table:
       from    to  target type
           0    14    17   Class java/io/FileNotFoundException

  public boolean hasPathCapability(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #84                 // Method makeQualified:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: astore_3
       6: aload_3
       7: aload_2
       8: invokestatic  #228                // Method org/apache/hadoop/fs/impl/PathCapabilitiesSupport.validatePathCapabilityArgs:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Ljava/lang/String;
      11: astore        4
      13: iconst_m1
      14: istore        5
      16: aload         4
      18: invokevirtual #229                // Method java/lang/String.hashCode:()I
      21: lookupswitch  { // 1
             607855369: 40
               default: 53
          }
      40: aload         4
      42: ldc           #230                // String fs.capability.paths.concat
      44: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      47: ifeq          53
      50: iconst_0
      51: istore        5
      53: iload         5
      55: lookupswitch  { // 1
                     0: 72
               default: 74
          }
      72: iconst_0
      73: ireturn
      74: aload_0
      75: getfield      #58                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
      78: aload_0
      79: aload_3
      80: invokevirtual #73                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
      83: iconst_1
      84: invokevirtual #74                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      87: astore        4
      89: aload         4
      91: getfield      #76                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      94: checkcast     #77                 // class org/apache/hadoop/fs/FileSystem
      97: aload         4
      99: getfield      #78                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
     102: aload_2
     103: invokevirtual #231                // Method org/apache/hadoop/fs/FileSystem.hasPathCapability:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Z
     106: ireturn
     107: astore        4
     109: new           #178                // class org/apache/hadoop/fs/viewfs/NotInMountpointException
     112: dup
     113: aload_3
     114: ldc           #232                // String hasPathCapability
     116: invokespecial #184                // Method org/apache/hadoop/fs/viewfs/NotInMountpointException."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
     119: athrow
    Exception table:
       from    to  target type
          74   106   107   Class java/io/FileNotFoundException

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #233                // Method org/apache/hadoop/fs/FileSystem.close:()V
       4: aload_0
       5: getfield      #7                  // Field enableInnerCache:Z
       8: ifeq          25
      11: aload_0
      12: getfield      #6                  // Field cache:Lorg/apache/hadoop/fs/viewfs/ViewFileSystem$InnerCache;
      15: ifnull        25
      18: aload_0
      19: getfield      #6                  // Field cache:Lorg/apache/hadoop/fs/viewfs/ViewFileSystem$InnerCache;
      22: invokevirtual #234                // Method org/apache/hadoop/fs/viewfs/ViewFileSystem$InnerCache.closeAll:()V
      25: return

  static boolean access$000(org.apache.hadoop.fs.viewfs.ViewFileSystem);
    Code:
       0: aload_0
       1: getfield      #7                  // Field enableInnerCache:Z
       4: ireturn

  static org.apache.hadoop.fs.viewfs.ViewFileSystem$InnerCache access$100(org.apache.hadoop.fs.viewfs.ViewFileSystem);
    Code:
       0: aload_0
       1: getfield      #6                  // Field cache:Lorg/apache/hadoop/fs/viewfs/ViewFileSystem$InnerCache;
       4: areturn

  static java.net.URI access$200(org.apache.hadoop.fs.viewfs.ViewFileSystem);
    Code:
       0: aload_0
       1: getfield      #5                  // Field myUri:Ljava/net/URI;
       4: areturn

  static org.apache.hadoop.fs.Path access$300(org.apache.hadoop.fs.viewfs.ViewFileSystem, org.apache.hadoop.fs.viewfs.InodeTree$ResolveResult, org.apache.hadoop.fs.FileStatus, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #4                  // Method getChrootedPath:(Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       7: areturn

  static org.apache.hadoop.fs.FileStatus access$400(org.apache.hadoop.fs.FileStatus, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #3                  // Method fixFileStatus:(Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
       5: areturn

  static org.apache.hadoop.fs.Path access$500();
    Code:
       0: getstatic     #2                  // Field ROOT_PATH:Lorg/apache/hadoop/fs/Path;
       3: areturn

  static {};
    Code:
       0: ldc           #235                // class org/apache/hadoop/fs/viewfs/ViewFileSystem
       2: invokevirtual #236                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #89                 // Field $assertionsDisabled:Z
      16: new           #25                 // class org/apache/hadoop/fs/Path
      19: dup
      20: ldc           #52                 // String /
      22: invokespecial #83                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      25: putstatic     #2                  // Field ROOT_PATH:Lorg/apache/hadoop/fs/Path;
      28: return
}
