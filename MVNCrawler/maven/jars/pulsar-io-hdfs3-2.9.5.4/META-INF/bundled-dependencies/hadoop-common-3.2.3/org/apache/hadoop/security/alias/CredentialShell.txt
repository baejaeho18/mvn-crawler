Compiled from "CredentialShell.java"
public class org.apache.hadoop.security.alias.CredentialShell extends org.apache.hadoop.tools.CommandShell {
  private static final java.lang.String USAGE_PREFIX;

  private static final java.lang.String COMMANDS;

  public static final java.lang.String NO_VALID_PROVIDERS;

  private boolean interactive;

  private boolean strict;

  private boolean userSuppliedProvider;

  private java.lang.String value;

  private org.apache.hadoop.security.alias.CredentialShell$PasswordReader passwordReader;

  public org.apache.hadoop.security.alias.CredentialShell();
    Code:
       0: aload_0
       1: invokespecial #9                  // Method org/apache/hadoop/tools/CommandShell."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #6                  // Field interactive:Z
       9: aload_0
      10: iconst_0
      11: putfield      #5                  // Field strict:Z
      14: aload_0
      15: iconst_0
      16: putfield      #8                  // Field userSuppliedProvider:Z
      19: aload_0
      20: aconst_null
      21: putfield      #4                  // Field value:Ljava/lang/String;
      24: return

  protected int init(java.lang.String[]) throws java.io.IOException;
    Code:
       0: iconst_0
       1: aload_1
       2: arraylength
       3: if_icmpne     15
       6: aload_0
       7: invokevirtual #10                 // Method getErr:()Ljava/io/PrintStream;
      10: invokestatic  #11                 // Method org/apache/hadoop/util/ToolRunner.printGenericCommandUsage:(Ljava/io/PrintStream;)V
      13: iconst_1
      14: ireturn
      15: iconst_0
      16: istore_2
      17: iload_2
      18: aload_1
      19: arraylength
      20: if_icmpge     294
      23: aload_1
      24: iload_2
      25: aaload
      26: ldc           #12                 // String create
      28: invokevirtual #13                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      31: ifeq          65
      34: iload_2
      35: aload_1
      36: arraylength
      37: iconst_1
      38: isub
      39: if_icmpne     44
      42: iconst_1
      43: ireturn
      44: aload_0
      45: new           #1                  // class org/apache/hadoop/security/alias/CredentialShell$CreateCommand
      48: dup
      49: aload_0
      50: aload_1
      51: iinc          2, 1
      54: iload_2
      55: aaload
      56: invokespecial #14                 // Method org/apache/hadoop/security/alias/CredentialShell$CreateCommand."<init>":(Lorg/apache/hadoop/security/alias/CredentialShell;Ljava/lang/String;)V
      59: invokevirtual #15                 // Method setSubCommand:(Lorg/apache/hadoop/tools/CommandShell$SubCommand;)V
      62: goto          288
      65: aload_1
      66: iload_2
      67: aaload
      68: ldc           #16                 // String delete
      70: invokevirtual #13                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      73: ifeq          107
      76: iload_2
      77: aload_1
      78: arraylength
      79: iconst_1
      80: isub
      81: if_icmpne     86
      84: iconst_1
      85: ireturn
      86: aload_0
      87: new           #2                  // class org/apache/hadoop/security/alias/CredentialShell$DeleteCommand
      90: dup
      91: aload_0
      92: aload_1
      93: iinc          2, 1
      96: iload_2
      97: aaload
      98: invokespecial #17                 // Method org/apache/hadoop/security/alias/CredentialShell$DeleteCommand."<init>":(Lorg/apache/hadoop/security/alias/CredentialShell;Ljava/lang/String;)V
     101: invokevirtual #15                 // Method setSubCommand:(Lorg/apache/hadoop/tools/CommandShell$SubCommand;)V
     104: goto          288
     107: aload_1
     108: iload_2
     109: aaload
     110: ldc           #18                 // String list
     112: invokevirtual #13                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     115: ifeq          134
     118: aload_0
     119: new           #3                  // class org/apache/hadoop/security/alias/CredentialShell$ListCommand
     122: dup
     123: aload_0
     124: aconst_null
     125: invokespecial #19                 // Method org/apache/hadoop/security/alias/CredentialShell$ListCommand."<init>":(Lorg/apache/hadoop/security/alias/CredentialShell;Lorg/apache/hadoop/security/alias/CredentialShell$1;)V
     128: invokevirtual #15                 // Method setSubCommand:(Lorg/apache/hadoop/tools/CommandShell$SubCommand;)V
     131: goto          288
     134: aload_1
     135: iload_2
     136: aaload
     137: ldc           #20                 // String -provider
     139: invokevirtual #13                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     142: ifeq          178
     145: iload_2
     146: aload_1
     147: arraylength
     148: iconst_1
     149: isub
     150: if_icmpne     155
     153: iconst_1
     154: ireturn
     155: aload_0
     156: iconst_1
     157: putfield      #8                  // Field userSuppliedProvider:Z
     160: aload_0
     161: invokevirtual #21                 // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
     164: ldc           #23                 // String hadoop.security.credential.provider.path
     166: aload_1
     167: iinc          2, 1
     170: iload_2
     171: aaload
     172: invokevirtual #24                 // Method org/apache/hadoop/conf/Configuration.set:(Ljava/lang/String;Ljava/lang/String;)V
     175: goto          288
     178: aload_1
     179: iload_2
     180: aaload
     181: ldc           #25                 // String -f
     183: invokevirtual #13                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     186: ifne          200
     189: aload_1
     190: iload_2
     191: aaload
     192: ldc           #26                 // String -force
     194: invokevirtual #13                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     197: ifeq          208
     200: aload_0
     201: iconst_0
     202: putfield      #6                  // Field interactive:Z
     205: goto          288
     208: aload_1
     209: iload_2
     210: aaload
     211: ldc           #27                 // String -strict
     213: invokevirtual #13                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     216: ifeq          227
     219: aload_0
     220: iconst_1
     221: putfield      #5                  // Field strict:Z
     224: goto          288
     227: aload_1
     228: iload_2
     229: aaload
     230: ldc           #28                 // String -v
     232: invokevirtual #13                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     235: ifne          249
     238: aload_1
     239: iload_2
     240: aaload
     241: ldc           #29                 // String -value
     243: invokevirtual #13                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     246: ifeq          262
     249: aload_0
     250: aload_1
     251: iinc          2, 1
     254: iload_2
     255: aaload
     256: putfield      #4                  // Field value:Ljava/lang/String;
     259: goto          288
     262: aload_1
     263: iload_2
     264: aaload
     265: ldc           #30                 // String -help
     267: invokevirtual #13                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     270: ifeq          279
     273: aload_0
     274: invokevirtual #7                  // Method printShellUsage:()V
     277: iconst_0
     278: ireturn
     279: aload_0
     280: invokevirtual #10                 // Method getErr:()Ljava/io/PrintStream;
     283: invokestatic  #11                 // Method org/apache/hadoop/util/ToolRunner.printGenericCommandUsage:(Ljava/io/PrintStream;)V
     286: iconst_1
     287: ireturn
     288: iinc          2, 1
     291: goto          17
     294: iconst_0
     295: ireturn

  public java.lang.String getCommandUsage();
    Code:
       0: new           #31                 // class java/lang/StringBuffer
       3: dup
       4: ldc           #33                 // String Usage: hadoop credential [generic options]\n   [-help]\n   [create <alias> [-value alias-value] [-provider provider-path] [-strict]]\n   [delete <alias> [-f] [-provider provider-path] [-strict]]\n   [list [-provider provider-path] [-strict]]\n
       6: invokespecial #34                 // Method java/lang/StringBuffer."<init>":(Ljava/lang/String;)V
       9: astore_1
      10: ldc           #35                 // String =
      12: bipush        66
      14: invokestatic  #36                 // Method org/apache/commons/lang3/StringUtils.repeat:(Ljava/lang/String;I)Ljava/lang/String;
      17: astore_2
      18: aload_1
      19: new           #37                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      26: aload_2
      27: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: ldc           #40                 // String \n
      32: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokevirtual #42                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      41: pop
      42: aload_1
      43: ldc           #43                 // String create <alias> [-value alias-value] [-provider provider-path] [-strict]:\n\nThe create subcommand creates a new credential for the name\nspecified as the <alias> argument within the provider indicated\nthrough the -provider argument. If -strict is supplied, fail\nimmediately if the provider requires a password and none is given.\nIf -value is provided, use that for the value of the credential\ninstead of prompting the user.\n
      45: invokevirtual #42                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      48: pop
      49: aload_1
      50: new           #37                 // class java/lang/StringBuilder
      53: dup
      54: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      57: aload_2
      58: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: ldc           #40                 // String \n
      63: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      69: invokevirtual #42                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      72: pop
      73: aload_1
      74: ldc           #44                 // String delete <alias> [-f] [-provider provider-path] [-strict]:\n\nThe delete subcommand deletes the credential\nspecified as the <alias> argument from within the provider\nindicated through the -provider argument. The command asks for\nconfirmation unless the -f option is specified. If -strict is\nsupplied, fail immediately if the provider requires a password\nand none is given.\n
      76: invokevirtual #42                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      79: pop
      80: aload_1
      81: new           #37                 // class java/lang/StringBuilder
      84: dup
      85: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      88: aload_2
      89: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: ldc           #40                 // String \n
      94: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     100: invokevirtual #42                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     103: pop
     104: aload_1
     105: ldc           #45                 // String list [-provider provider-path] [-strict]:\n\nThe list subcommand displays the aliases contained within \na particular provider - as configured in core-site.xml or\nindicated through the -provider argument. If -strict is supplied,\nfail immediately if the provider requires a password and none is\nprovided.\n
     107: invokevirtual #42                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     110: pop
     111: aload_1
     112: invokevirtual #46                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     115: areturn

  protected char[] promptForCredential() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method getPasswordReader:()Lorg/apache/hadoop/security/alias/CredentialShell$PasswordReader;
       4: astore_1
       5: aload_1
       6: ifnonnull     19
       9: new           #48                 // class java/io/IOException
      12: dup
      13: ldc           #49                 // String No console available for prompting user.
      15: invokespecial #50                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aconst_null
      20: astore_2
      21: aload_1
      22: ldc           #51                 // String Enter alias password:
      24: invokevirtual #52                 // Method org/apache/hadoop/security/alias/CredentialShell$PasswordReader.readPassword:(Ljava/lang/String;)[C
      27: astore        4
      29: aload_1
      30: ldc           #53                 // String Enter alias password again:
      32: invokevirtual #52                 // Method org/apache/hadoop/security/alias/CredentialShell$PasswordReader.readPassword:(Ljava/lang/String;)[C
      35: astore        5
      37: aload         4
      39: aload         5
      41: invokestatic  #54                 // Method java/util/Arrays.equals:([C[C)Z
      44: ifne          51
      47: iconst_1
      48: goto          52
      51: iconst_0
      52: istore_3
      53: iload_3
      54: ifeq          78
      57: aload         4
      59: ifnull        69
      62: aload         4
      64: bipush        32
      66: invokestatic  #55                 // Method java/util/Arrays.fill:([CC)V
      69: aload_1
      70: ldc           #56                 // String Passwords don\'t match. Try again.%n
      72: invokevirtual #57                 // Method org/apache/hadoop/security/alias/CredentialShell$PasswordReader.format:(Ljava/lang/String;)V
      75: goto          81
      78: aload         4
      80: astore_2
      81: aload         5
      83: ifnull        93
      86: aload         5
      88: bipush        32
      90: invokestatic  #55                 // Method java/util/Arrays.fill:([CC)V
      93: iload_3
      94: ifne          21
      97: aload_2
      98: areturn

  public org.apache.hadoop.security.alias.CredentialShell$PasswordReader getPasswordReader();
    Code:
       0: aload_0
       1: getfield      #58                 // Field passwordReader:Lorg/apache/hadoop/security/alias/CredentialShell$PasswordReader;
       4: ifnonnull     18
       7: aload_0
       8: new           #59                 // class org/apache/hadoop/security/alias/CredentialShell$PasswordReader
      11: dup
      12: invokespecial #60                 // Method org/apache/hadoop/security/alias/CredentialShell$PasswordReader."<init>":()V
      15: putfield      #58                 // Field passwordReader:Lorg/apache/hadoop/security/alias/CredentialShell$PasswordReader;
      18: aload_0
      19: getfield      #58                 // Field passwordReader:Lorg/apache/hadoop/security/alias/CredentialShell$PasswordReader;
      22: areturn

  public void setPasswordReader(org.apache.hadoop.security.alias.CredentialShell$PasswordReader);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #58                 // Field passwordReader:Lorg/apache/hadoop/security/alias/CredentialShell$PasswordReader;
       5: return

  public static void main(java.lang.String[]) throws java.lang.Exception;
    Code:
       0: new           #61                 // class org/apache/hadoop/conf/Configuration
       3: dup
       4: invokespecial #62                 // Method org/apache/hadoop/conf/Configuration."<init>":()V
       7: new           #32                 // class org/apache/hadoop/security/alias/CredentialShell
      10: dup
      11: invokespecial #63                 // Method "<init>":()V
      14: aload_0
      15: invokestatic  #64                 // Method org/apache/hadoop/util/ToolRunner.run:(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/util/Tool;[Ljava/lang/String;)I
      18: istore_1
      19: iload_1
      20: invokestatic  #65                 // Method java/lang/System.exit:(I)V
      23: return

  static boolean access$100(org.apache.hadoop.security.alias.CredentialShell);
    Code:
       0: aload_0
       1: getfield      #8                  // Field userSuppliedProvider:Z
       4: ireturn

  static void access$200(org.apache.hadoop.security.alias.CredentialShell);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method printShellUsage:()V
       4: return

  static boolean access$400(org.apache.hadoop.security.alias.CredentialShell);
    Code:
       0: aload_0
       1: getfield      #6                  // Field interactive:Z
       4: ireturn

  static boolean access$500(org.apache.hadoop.security.alias.CredentialShell);
    Code:
       0: aload_0
       1: getfield      #5                  // Field strict:Z
       4: ireturn

  static java.lang.String access$600(org.apache.hadoop.security.alias.CredentialShell);
    Code:
       0: aload_0
       1: getfield      #4                  // Field value:Ljava/lang/String;
       4: areturn
}
