Compiled from "CleanerUtil.java"
public final class org.apache.hadoop.util.CleanerUtil {
  public static final boolean UNMAP_SUPPORTED;

  public static final java.lang.String UNMAP_NOT_SUPPORTED_REASON;

  private static final org.apache.hadoop.util.CleanerUtil$BufferCleaner CLEANER;

  static final boolean $assertionsDisabled;

  private org.apache.hadoop.util.CleanerUtil();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static org.apache.hadoop.util.CleanerUtil$BufferCleaner getCleaner();
    Code:
       0: getstatic     #2                  // Field CLEANER:Lorg/apache/hadoop/util/CleanerUtil$BufferCleaner;
       3: areturn

  private static java.lang.Object unmapHackImpl();
    Code:
       0: invokestatic  #3                  // Method java/lang/invoke/MethodHandles.lookup:()Ljava/lang/invoke/MethodHandles$Lookup;
       3: astore_0
       4: ldc           #4                  // String sun.misc.Unsafe
       6: invokestatic  #5                  // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
       9: astore_1
      10: aload_0
      11: aload_1
      12: ldc           #6                  // String invokeCleaner
      14: getstatic     #7                  // Field java/lang/Void.TYPE:Ljava/lang/Class;
      17: ldc           #8                  // class java/nio/ByteBuffer
      19: invokestatic  #9                  // Method java/lang/invoke/MethodType.methodType:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/invoke/MethodType;
      22: invokevirtual #10                 // Method java/lang/invoke/MethodHandles$Lookup.findVirtual:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;
      25: astore_2
      26: aload_1
      27: ldc           #11                 // String theUnsafe
      29: invokevirtual #12                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      32: astore_3
      33: aload_3
      34: iconst_1
      35: invokevirtual #13                 // Method java/lang/reflect/Field.setAccessible:(Z)V
      38: aload_3
      39: aconst_null
      40: invokevirtual #14                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
      43: astore        4
      45: ldc           #8                  // class java/nio/ByteBuffer
      47: aload_2
      48: aload         4
      50: invokevirtual #15                 // Method java/lang/invoke/MethodHandle.bindTo:(Ljava/lang/Object;)Ljava/lang/invoke/MethodHandle;
      53: invokestatic  #16                 // Method newBufferCleaner:(Ljava/lang/Class;Ljava/lang/invoke/MethodHandle;)Lorg/apache/hadoop/util/CleanerUtil$BufferCleaner;
      56: areturn
      57: astore_1
      58: aload_1
      59: athrow
      60: astore_1
      61: ldc           #20                 // String java.nio.DirectByteBuffer
      63: invokestatic  #5                  // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
      66: astore_2
      67: aload_2
      68: ldc           #21                 // String cleaner
      70: iconst_0
      71: anewarray     #22                 // class java/lang/Class
      74: invokevirtual #23                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      77: astore_3
      78: aload_3
      79: iconst_1
      80: invokevirtual #24                 // Method java/lang/reflect/Method.setAccessible:(Z)V
      83: aload_0
      84: aload_3
      85: invokevirtual #25                 // Method java/lang/invoke/MethodHandles$Lookup.unreflect:(Ljava/lang/reflect/Method;)Ljava/lang/invoke/MethodHandle;
      88: astore        4
      90: aload         4
      92: invokevirtual #26                 // Method java/lang/invoke/MethodHandle.type:()Ljava/lang/invoke/MethodType;
      95: invokevirtual #27                 // Method java/lang/invoke/MethodType.returnType:()Ljava/lang/Class;
      98: astore        5
     100: aload_0
     101: aload         5
     103: ldc           #28                 // String clean
     105: getstatic     #7                  // Field java/lang/Void.TYPE:Ljava/lang/Class;
     108: invokestatic  #29                 // Method java/lang/invoke/MethodType.methodType:(Ljava/lang/Class;)Ljava/lang/invoke/MethodType;
     111: invokevirtual #10                 // Method java/lang/invoke/MethodHandles$Lookup.findVirtual:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;
     114: astore        6
     116: aload_0
     117: ldc           #30                 // class java/util/Objects
     119: ldc           #31                 // String nonNull
     121: getstatic     #32                 // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
     124: ldc           #33                 // class java/lang/Object
     126: invokestatic  #9                  // Method java/lang/invoke/MethodType.methodType:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/invoke/MethodType;
     129: invokevirtual #34                 // Method java/lang/invoke/MethodHandles$Lookup.findStatic:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;
     132: getstatic     #32                 // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
     135: aload         5
     137: invokestatic  #9                  // Method java/lang/invoke/MethodType.methodType:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/invoke/MethodType;
     140: invokevirtual #35                 // Method java/lang/invoke/MethodHandle.asType:(Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;
     143: astore        7
     145: ldc           #36                 // class java/lang/Void
     147: aconst_null
     148: invokestatic  #37                 // Method java/lang/invoke/MethodHandles.constant:(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/invoke/MethodHandle;
     151: getstatic     #7                  // Field java/lang/Void.TYPE:Ljava/lang/Class;
     154: invokestatic  #29                 // Method java/lang/invoke/MethodType.methodType:(Ljava/lang/Class;)Ljava/lang/invoke/MethodType;
     157: invokevirtual #35                 // Method java/lang/invoke/MethodHandle.asType:(Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;
     160: iconst_0
     161: iconst_1
     162: anewarray     #22                 // class java/lang/Class
     165: dup
     166: iconst_0
     167: aload         5
     169: aastore
     170: invokestatic  #38                 // Method java/lang/invoke/MethodHandles.dropArguments:(Ljava/lang/invoke/MethodHandle;I[Ljava/lang/Class;)Ljava/lang/invoke/MethodHandle;
     173: astore        8
     175: aload         4
     177: aload         7
     179: aload         6
     181: aload         8
     183: invokestatic  #39                 // Method java/lang/invoke/MethodHandles.guardWithTest:(Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/MethodHandle;
     186: invokestatic  #40                 // Method java/lang/invoke/MethodHandles.filterReturnValue:(Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/MethodHandle;
     189: getstatic     #7                  // Field java/lang/Void.TYPE:Ljava/lang/Class;
     192: ldc           #8                  // class java/nio/ByteBuffer
     194: invokestatic  #9                  // Method java/lang/invoke/MethodType.methodType:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/invoke/MethodType;
     197: invokevirtual #35                 // Method java/lang/invoke/MethodHandle.asType:(Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;
     200: astore        9
     202: aload_2
     203: aload         9
     205: invokestatic  #16                 // Method newBufferCleaner:(Ljava/lang/Class;Ljava/lang/invoke/MethodHandle;)Lorg/apache/hadoop/util/CleanerUtil$BufferCleaner;
     208: areturn
     209: astore_1
     210: new           #41                 // class java/lang/StringBuilder
     213: dup
     214: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
     217: ldc           #43                 // String Unmapping is not supported, because not all required permissions are given to the Hadoop JAR file:
     219: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     222: aload_1
     223: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     226: ldc           #46                 // String  [Please grant at least the following permissions: RuntimePermission(\"accessClassInPackage.sun.misc\")  and ReflectPermission(\"suppressAccessChecks\")]
     228: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     231: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     234: areturn
     235: astore_1
     236: new           #41                 // class java/lang/StringBuilder
     239: dup
     240: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
     243: ldc           #48                 // String Unmapping is not supported on this platform, because internal Java APIs are not compatible with this Hadoop version:
     245: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     248: aload_1
     249: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     252: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     255: areturn
    Exception table:
       from    to  target type
           4    56    57   Class java/lang/SecurityException
           4    56    60   Class java/lang/ReflectiveOperationException
           4    56    60   Class java/lang/RuntimeException
           4    56   209   Class java/lang/SecurityException
          57   208   209   Class java/lang/SecurityException
           4    56   235   Class java/lang/ReflectiveOperationException
           4    56   235   Class java/lang/RuntimeException
          57   208   235   Class java/lang/ReflectiveOperationException
          57   208   235   Class java/lang/RuntimeException

  private static org.apache.hadoop.util.CleanerUtil$BufferCleaner newBufferCleaner(java.lang.Class<?>, java.lang.invoke.MethodHandle);
    Code:
       0: getstatic     #49                 // Field $assertionsDisabled:Z
       3: ifne          32
       6: getstatic     #7                  // Field java/lang/Void.TYPE:Ljava/lang/Class;
       9: ldc           #8                  // class java/nio/ByteBuffer
      11: invokestatic  #9                  // Method java/lang/invoke/MethodType.methodType:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/invoke/MethodType;
      14: aload_1
      15: invokevirtual #26                 // Method java/lang/invoke/MethodHandle.type:()Ljava/lang/invoke/MethodType;
      18: invokestatic  #50                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      21: ifne          32
      24: new           #51                 // class java/lang/AssertionError
      27: dup
      28: invokespecial #52                 // Method java/lang/AssertionError."<init>":()V
      31: athrow
      32: aload_0
      33: aload_1
      34: invokedynamic #53,  0             // InvokeDynamic #0:freeBuffer:(Ljava/lang/Class;Ljava/lang/invoke/MethodHandle;)Lorg/apache/hadoop/util/CleanerUtil$BufferCleaner;
      39: areturn

  private static void lambda$newBufferCleaner$1(java.lang.Class, java.lang.invoke.MethodHandle, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokevirtual #54                 // Method java/nio/ByteBuffer.isDirect:()Z
       4: ifne          17
       7: new           #55                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #56                 // String unmapping only works with direct buffers
      13: invokespecial #57                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_2
      19: invokevirtual #58                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      22: ifne          55
      25: new           #55                 // class java/lang/IllegalArgumentException
      28: dup
      29: new           #41                 // class java/lang/StringBuilder
      32: dup
      33: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #59                 // String buffer is not an instance of
      38: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_0
      42: invokevirtual #60                 // Method java/lang/Class.getName:()Ljava/lang/String;
      45: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokespecial #57                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: aload_1
      56: aload_2
      57: invokedynamic #61,  0             // InvokeDynamic #1:run:(Ljava/lang/invoke/MethodHandle;Ljava/nio/ByteBuffer;)Ljava/security/PrivilegedAction;
      62: invokestatic  #62                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      65: checkcast     #63                 // class java/lang/Throwable
      68: astore_3
      69: aload_3
      70: ifnull        84
      73: new           #64                 // class java/io/IOException
      76: dup
      77: ldc           #65                 // String Unable to unmap the mapped buffer
      79: aload_3
      80: invokespecial #66                 // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      83: athrow
      84: return

  private static java.lang.Throwable lambda$null$0(java.lang.invoke.MethodHandle, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #67                 // Method java/lang/invoke/MethodHandle.invokeExact:(Ljava/nio/ByteBuffer;)V
       5: aconst_null
       6: areturn
       7: astore_2
       8: aload_2
       9: areturn
    Exception table:
       from    to  target type
           0     6     7   Class java/lang/Throwable

  static {};
    Code:
       0: ldc           #68                 // class org/apache/hadoop/util/CleanerUtil
       2: invokevirtual #69                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #49                 // Field $assertionsDisabled:Z
      16: invokedynamic #70,  0             // InvokeDynamic #2:run:()Ljava/security/PrivilegedAction;
      21: invokestatic  #62                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      24: astore_0
      25: aload_0
      26: instanceof    #71                 // class org/apache/hadoop/util/CleanerUtil$BufferCleaner
      29: ifeq          50
      32: aload_0
      33: checkcast     #71                 // class org/apache/hadoop/util/CleanerUtil$BufferCleaner
      36: putstatic     #2                  // Field CLEANER:Lorg/apache/hadoop/util/CleanerUtil$BufferCleaner;
      39: iconst_1
      40: putstatic     #72                 // Field UNMAP_SUPPORTED:Z
      43: aconst_null
      44: putstatic     #73                 // Field UNMAP_NOT_SUPPORTED_REASON:Ljava/lang/String;
      47: goto          65
      50: aconst_null
      51: putstatic     #2                  // Field CLEANER:Lorg/apache/hadoop/util/CleanerUtil$BufferCleaner;
      54: iconst_0
      55: putstatic     #72                 // Field UNMAP_SUPPORTED:Z
      58: aload_0
      59: invokevirtual #74                 // Method java/lang/Object.toString:()Ljava/lang/String;
      62: putstatic     #73                 // Field UNMAP_NOT_SUPPORTED_REASON:Ljava/lang/String;
      65: return
}
