Compiled from "NativeIO.java"
public class org.apache.hadoop.io.nativeio.NativeIO$POSIX {
  public static int O_RDONLY;

  public static int O_WRONLY;

  public static int O_RDWR;

  public static int O_CREAT;

  public static int O_EXCL;

  public static int O_NOCTTY;

  public static int O_TRUNC;

  public static int O_APPEND;

  public static int O_NONBLOCK;

  public static int O_SYNC;

  public static int POSIX_FADV_NORMAL;

  public static int POSIX_FADV_RANDOM;

  public static int POSIX_FADV_SEQUENTIAL;

  public static int POSIX_FADV_WILLNEED;

  public static int POSIX_FADV_DONTNEED;

  public static int POSIX_FADV_NOREUSE;

  public static int SYNC_FILE_RANGE_WAIT_BEFORE;

  public static int SYNC_FILE_RANGE_WRITE;

  public static int SYNC_FILE_RANGE_WAIT_AFTER;

  private static org.apache.hadoop.io.nativeio.NativeIO$POSIX$SupportState pmdkSupportState;

  private static final org.slf4j.Logger LOG;

  public static boolean fadvisePossible;

  private static boolean nativeLoaded;

  private static boolean syncFileRangePossible;

  static final java.lang.String WORKAROUND_NON_THREADSAFE_CALLS_KEY;

  static final boolean WORKAROUND_NON_THREADSAFE_CALLS_DEFAULT;

  private static long cacheTimeout;

  private static org.apache.hadoop.io.nativeio.NativeIO$POSIX$CacheManipulator cacheManipulator;

  private static final java.util.Map<java.lang.Integer, org.apache.hadoop.io.nativeio.NativeIO$POSIX$CachedName> USER_ID_NAME_CACHE;

  private static final java.util.Map<java.lang.Integer, org.apache.hadoop.io.nativeio.NativeIO$POSIX$CachedName> GROUP_ID_NAME_CACHE;

  public static final int MMAP_PROT_READ;

  public static final int MMAP_PROT_WRITE;

  public static final int MMAP_PROT_EXEC;

  public org.apache.hadoop.io.nativeio.NativeIO$POSIX();
    Code:
       0: aload_0
       1: invokespecial #11                 // Method java/lang/Object."<init>":()V
       4: return

  public static org.apache.hadoop.io.nativeio.NativeIO$POSIX$CacheManipulator getCacheManipulator();
    Code:
       0: getstatic     #12                 // Field cacheManipulator:Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$CacheManipulator;
       3: areturn

  public static void setCacheManipulator(org.apache.hadoop.io.nativeio.NativeIO$POSIX$CacheManipulator);
    Code:
       0: aload_0
       1: putstatic     #12                 // Field cacheManipulator:Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$CacheManipulator;
       4: return

  public static void setPmdkSupportState(int);
    Code:
       0: invokestatic  #13                 // Method org/apache/hadoop/io/nativeio/NativeIO$POSIX$SupportState.values:()[Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$SupportState;
       3: astore_1
       4: aload_1
       5: arraylength
       6: istore_2
       7: iconst_0
       8: istore_3
       9: iload_3
      10: iload_2
      11: if_icmpge     40
      14: aload_1
      15: iload_3
      16: aaload
      17: astore        4
      19: aload         4
      21: invokevirtual #14                 // Method org/apache/hadoop/io/nativeio/NativeIO$POSIX$SupportState.getStateCode:()I
      24: iload_0
      25: if_icmpne     34
      28: aload         4
      30: putstatic     #15                 // Field pmdkSupportState:Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$SupportState;
      33: return
      34: iinc          3, 1
      37: goto          9
      40: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      43: new           #16                 // class java/lang/StringBuilder
      46: dup
      47: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      50: ldc           #18                 // String The state code:
      52: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: iload_0
      56: invokevirtual #20                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      59: ldc           #21                 // String  is unrecognized!
      61: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: invokeinterface #23,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
      72: return

  public static java.lang.String getPmdkSupportStateMessage();
    Code:
       0: invokestatic  #4                  // Method getPmdkLibPath:()Ljava/lang/String;
       3: ifnull        37
       6: new           #16                 // class java/lang/StringBuilder
       9: dup
      10: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      13: getstatic     #15                 // Field pmdkSupportState:Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$SupportState;
      16: invokevirtual #24                 // Method org/apache/hadoop/io/nativeio/NativeIO$POSIX$SupportState.getMessage:()Ljava/lang/String;
      19: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: ldc           #25                 // String  The pmdk lib path:
      24: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokestatic  #4                  // Method getPmdkLibPath:()Ljava/lang/String;
      30: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: areturn
      37: getstatic     #15                 // Field pmdkSupportState:Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$SupportState;
      40: invokevirtual #24                 // Method org/apache/hadoop/io/nativeio/NativeIO$POSIX$SupportState.getMessage:()Ljava/lang/String;
      43: areturn

  public static boolean isPmdkAvailable();
    Code:
       0: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
       3: getstatic     #15                 // Field pmdkSupportState:Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$SupportState;
       6: invokevirtual #24                 // Method org/apache/hadoop/io/nativeio/NativeIO$POSIX$SupportState.getMessage:()Ljava/lang/String;
       9: invokeinterface #26,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      14: getstatic     #15                 // Field pmdkSupportState:Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$SupportState;
      17: getstatic     #27                 // Field org/apache/hadoop/io/nativeio/NativeIO$POSIX$SupportState.SUPPORTED:Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$SupportState;
      20: if_acmpne     27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  private static native java.lang.String getPmdkLibPath();

  private static native boolean isPmemCheck(long, long);

  private static native org.apache.hadoop.io.nativeio.NativeIO$POSIX$PmemMappedRegion pmemMapFile(java.lang.String, long, boolean);

  private static native boolean pmemUnMap(long, long);

  private static native void pmemCopy(byte[], long, boolean, long);

  private static native void pmemDrain();

  private static native void pmemSync(long, long);

  public static boolean isAvailable();
    Code:
       0: invokestatic  #28                 // Method org/apache/hadoop/util/NativeCodeLoader.isNativeCodeLoaded:()Z
       3: ifeq          16
       6: getstatic     #29                 // Field nativeLoaded:Z
       9: ifeq          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  private static void assertCodeLoaded() throws java.io.IOException;
    Code:
       0: invokestatic  #30                 // Method isAvailable:()Z
       3: ifne          16
       6: new           #31                 // class java/io/IOException
       9: dup
      10: ldc           #32                 // String NativeIO was not loaded
      12: invokespecial #33                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: return

  public static native java.io.FileDescriptor open(java.lang.String, int, int) throws java.io.IOException;

  private static native org.apache.hadoop.io.nativeio.NativeIO$POSIX$Stat fstat(java.io.FileDescriptor) throws java.io.IOException;

  private static native org.apache.hadoop.io.nativeio.NativeIO$POSIX$Stat stat(java.lang.String) throws java.io.IOException;

  private static native void chmodImpl(java.lang.String, int) throws java.io.IOException;

  public static void chmod(java.lang.String, int) throws java.io.IOException;
    Code:
       0: getstatic     #34                 // Field org/apache/hadoop/util/Shell.WINDOWS:Z
       3: ifne          14
       6: aload_0
       7: iload_1
       8: invokestatic  #35                 // Method chmodImpl:(Ljava/lang/String;I)V
      11: goto          94
      14: aload_0
      15: iload_1
      16: invokestatic  #35                 // Method chmodImpl:(Ljava/lang/String;I)V
      19: goto          94
      22: astore_2
      23: aload_2
      24: invokevirtual #37                 // Method org/apache/hadoop/io/nativeio/NativeIOException.getErrorCode:()J
      27: ldc2_w        #38                 // long 3l
      30: lcmp
      31: ifne          47
      34: new           #36                 // class org/apache/hadoop/io/nativeio/NativeIOException
      37: dup
      38: ldc           #40                 // String No such file or directory
      40: getstatic     #41                 // Field org/apache/hadoop/io/nativeio/Errno.ENOENT:Lorg/apache/hadoop/io/nativeio/Errno;
      43: invokespecial #42                 // Method org/apache/hadoop/io/nativeio/NativeIOException."<init>":(Ljava/lang/String;Lorg/apache/hadoop/io/nativeio/Errno;)V
      46: athrow
      47: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      50: ldc           #43                 // String NativeIO.chmod error (%d): %s
      52: iconst_2
      53: anewarray     #44                 // class java/lang/Object
      56: dup
      57: iconst_0
      58: aload_2
      59: invokevirtual #37                 // Method org/apache/hadoop/io/nativeio/NativeIOException.getErrorCode:()J
      62: invokestatic  #45                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      65: aastore
      66: dup
      67: iconst_1
      68: aload_2
      69: invokevirtual #46                 // Method org/apache/hadoop/io/nativeio/NativeIOException.getMessage:()Ljava/lang/String;
      72: aastore
      73: invokestatic  #47                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      76: invokeinterface #48,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      81: new           #36                 // class org/apache/hadoop/io/nativeio/NativeIOException
      84: dup
      85: ldc           #49                 // String Unknown error
      87: getstatic     #50                 // Field org/apache/hadoop/io/nativeio/Errno.UNKNOWN:Lorg/apache/hadoop/io/nativeio/Errno;
      90: invokespecial #42                 // Method org/apache/hadoop/io/nativeio/NativeIOException."<init>":(Ljava/lang/String;Lorg/apache/hadoop/io/nativeio/Errno;)V
      93: athrow
      94: return
    Exception table:
       from    to  target type
          14    19    22   Class org/apache/hadoop/io/nativeio/NativeIOException

  static native void posix_fadvise(java.io.FileDescriptor, long, long, int) throws org.apache.hadoop.io.nativeio.NativeIOException;

  static native void sync_file_range(java.io.FileDescriptor, long, long, int) throws org.apache.hadoop.io.nativeio.NativeIOException;

  static void posixFadviseIfPossible(java.lang.String, java.io.FileDescriptor, long, long, int) throws org.apache.hadoop.io.nativeio.NativeIOException;
    Code:
       0: getstatic     #29                 // Field nativeLoaded:Z
       3: ifeq          30
       6: getstatic     #51                 // Field fadvisePossible:Z
       9: ifeq          30
      12: aload_1
      13: lload_2
      14: lload         4
      16: iload         6
      18: invokestatic  #52                 // Method posix_fadvise:(Ljava/io/FileDescriptor;JJI)V
      21: goto          30
      24: astore        7
      26: iconst_0
      27: putstatic     #51                 // Field fadvisePossible:Z
      30: return
    Exception table:
       from    to  target type
          12    21    24   Class java/lang/UnsatisfiedLinkError

  public static void syncFileRangeIfPossible(java.io.FileDescriptor, long, long, int) throws org.apache.hadoop.io.nativeio.NativeIOException;
    Code:
       0: getstatic     #29                 // Field nativeLoaded:Z
       3: ifeq          38
       6: getstatic     #54                 // Field syncFileRangePossible:Z
       9: ifeq          38
      12: aload_0
      13: lload_1
      14: lload_3
      15: iload         5
      17: invokestatic  #55                 // Method sync_file_range:(Ljava/io/FileDescriptor;JJI)V
      20: goto          38
      23: astore        6
      25: iconst_0
      26: putstatic     #54                 // Field syncFileRangePossible:Z
      29: goto          38
      32: astore        6
      34: iconst_0
      35: putstatic     #54                 // Field syncFileRangePossible:Z
      38: return
    Exception table:
       from    to  target type
          12    20    23   Class java/lang/UnsupportedOperationException
          12    20    32   Class java/lang/UnsatisfiedLinkError

  static native void mlock_native(java.nio.ByteBuffer, long) throws org.apache.hadoop.io.nativeio.NativeIOException;

  static void mlock(java.nio.ByteBuffer, long) throws java.io.IOException;
    Code:
       0: invokestatic  #57                 // Method assertCodeLoaded:()V
       3: aload_0
       4: invokevirtual #58                 // Method java/nio/ByteBuffer.isDirect:()Z
       7: ifne          20
      10: new           #31                 // class java/io/IOException
      13: dup
      14: ldc           #59                 // String Cannot mlock a non-direct ByteBuffer
      16: invokespecial #33                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: lload_1
      22: invokestatic  #60                 // Method mlock_native:(Ljava/nio/ByteBuffer;J)V
      25: return

  public static void munmap(java.nio.MappedByteBuffer);
    Code:
       0: getstatic     #61                 // Field org/apache/hadoop/util/CleanerUtil.UNMAP_SUPPORTED:Z
       3: ifeq          33
       6: invokestatic  #62                 // Method org/apache/hadoop/util/CleanerUtil.getCleaner:()Lorg/apache/hadoop/util/CleanerUtil$BufferCleaner;
       9: aload_0
      10: invokeinterface #63,  2           // InterfaceMethod org/apache/hadoop/util/CleanerUtil$BufferCleaner.freeBuffer:(Ljava/nio/ByteBuffer;)V
      15: goto          44
      18: astore_1
      19: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      22: ldc           #64                 // String Failed to unmap the buffer
      24: aload_1
      25: invokeinterface #65,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Throwable;)V
      30: goto          44
      33: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      36: getstatic     #66                 // Field org/apache/hadoop/util/CleanerUtil.UNMAP_NOT_SUPPORTED_REASON:Ljava/lang/String;
      39: invokeinterface #67,  2           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      44: return
    Exception table:
       from    to  target type
           6    15    18   Class java/io/IOException

  private static native long getUIDforFDOwnerforOwner(java.io.FileDescriptor) throws java.io.IOException;

  private static native java.lang.String getUserName(long) throws java.io.IOException;

  public static org.apache.hadoop.io.nativeio.NativeIO$POSIX$Stat getFstat(java.io.FileDescriptor) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_1
       2: getstatic     #34                 // Field org/apache/hadoop/util/Shell.WINDOWS:Z
       5: ifne          46
       8: aload_0
       9: invokestatic  #68                 // Method fstat:(Ljava/io/FileDescriptor;)Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$Stat;
      12: astore_1
      13: aload_1
      14: getstatic     #69                 // Field org/apache/hadoop/io/nativeio/NativeIO$POSIX$IdCache.USER:Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$IdCache;
      17: aload_1
      18: invokestatic  #70                 // Method org/apache/hadoop/io/nativeio/NativeIO$POSIX$Stat.access$1200:(Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$Stat;)I
      21: invokestatic  #71                 // Method getName:(Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$IdCache;I)Ljava/lang/String;
      24: invokestatic  #72                 // Method org/apache/hadoop/io/nativeio/NativeIO$POSIX$Stat.access$1102:(Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$Stat;Ljava/lang/String;)Ljava/lang/String;
      27: pop
      28: aload_1
      29: getstatic     #73                 // Field org/apache/hadoop/io/nativeio/NativeIO$POSIX$IdCache.GROUP:Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$IdCache;
      32: aload_1
      33: invokestatic  #74                 // Method org/apache/hadoop/io/nativeio/NativeIO$POSIX$Stat.access$1400:(Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$Stat;)I
      36: invokestatic  #71                 // Method getName:(Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$IdCache;I)Ljava/lang/String;
      39: invokestatic  #75                 // Method org/apache/hadoop/io/nativeio/NativeIO$POSIX$Stat.access$1302:(Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$Stat;Ljava/lang/String;)Ljava/lang/String;
      42: pop
      43: goto          126
      46: aload_0
      47: invokestatic  #68                 // Method fstat:(Ljava/io/FileDescriptor;)Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$Stat;
      50: astore_1
      51: goto          126
      54: astore_2
      55: aload_2
      56: invokevirtual #37                 // Method org/apache/hadoop/io/nativeio/NativeIOException.getErrorCode:()J
      59: ldc2_w        #76                 // long 6l
      62: lcmp
      63: ifne          79
      66: new           #36                 // class org/apache/hadoop/io/nativeio/NativeIOException
      69: dup
      70: ldc           #78                 // String The handle is invalid.
      72: getstatic     #79                 // Field org/apache/hadoop/io/nativeio/Errno.EBADF:Lorg/apache/hadoop/io/nativeio/Errno;
      75: invokespecial #42                 // Method org/apache/hadoop/io/nativeio/NativeIOException."<init>":(Ljava/lang/String;Lorg/apache/hadoop/io/nativeio/Errno;)V
      78: athrow
      79: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      82: ldc           #80                 // String NativeIO.getFstat error (%d): %s
      84: iconst_2
      85: anewarray     #44                 // class java/lang/Object
      88: dup
      89: iconst_0
      90: aload_2
      91: invokevirtual #37                 // Method org/apache/hadoop/io/nativeio/NativeIOException.getErrorCode:()J
      94: invokestatic  #45                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      97: aastore
      98: dup
      99: iconst_1
     100: aload_2
     101: invokevirtual #46                 // Method org/apache/hadoop/io/nativeio/NativeIOException.getMessage:()Ljava/lang/String;
     104: aastore
     105: invokestatic  #47                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     108: invokeinterface #48,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     113: new           #36                 // class org/apache/hadoop/io/nativeio/NativeIOException
     116: dup
     117: ldc           #49                 // String Unknown error
     119: getstatic     #50                 // Field org/apache/hadoop/io/nativeio/Errno.UNKNOWN:Lorg/apache/hadoop/io/nativeio/Errno;
     122: invokespecial #42                 // Method org/apache/hadoop/io/nativeio/NativeIOException."<init>":(Ljava/lang/String;Lorg/apache/hadoop/io/nativeio/Errno;)V
     125: athrow
     126: aload_1
     127: areturn
    Exception table:
       from    to  target type
          46    51    54   Class org/apache/hadoop/io/nativeio/NativeIOException

  public static org.apache.hadoop.io.nativeio.NativeIO$POSIX$Stat getStat(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: ifnonnull     25
       4: ldc           #81                 // String Path is null
       6: astore_1
       7: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      10: aload_1
      11: invokeinterface #48,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      16: new           #31                 // class java/io/IOException
      19: dup
      20: aload_1
      21: invokespecial #33                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: aconst_null
      26: astore_1
      27: getstatic     #34                 // Field org/apache/hadoop/util/Shell.WINDOWS:Z
      30: ifne          71
      33: aload_0
      34: invokestatic  #82                 // Method stat:(Ljava/lang/String;)Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$Stat;
      37: astore_1
      38: aload_1
      39: getstatic     #69                 // Field org/apache/hadoop/io/nativeio/NativeIO$POSIX$IdCache.USER:Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$IdCache;
      42: aload_1
      43: invokestatic  #70                 // Method org/apache/hadoop/io/nativeio/NativeIO$POSIX$Stat.access$1200:(Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$Stat;)I
      46: invokestatic  #71                 // Method getName:(Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$IdCache;I)Ljava/lang/String;
      49: invokestatic  #72                 // Method org/apache/hadoop/io/nativeio/NativeIO$POSIX$Stat.access$1102:(Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$Stat;Ljava/lang/String;)Ljava/lang/String;
      52: pop
      53: aload_1
      54: getstatic     #73                 // Field org/apache/hadoop/io/nativeio/NativeIO$POSIX$IdCache.GROUP:Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$IdCache;
      57: aload_1
      58: invokestatic  #74                 // Method org/apache/hadoop/io/nativeio/NativeIO$POSIX$Stat.access$1400:(Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$Stat;)I
      61: invokestatic  #71                 // Method getName:(Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$IdCache;I)Ljava/lang/String;
      64: invokestatic  #75                 // Method org/apache/hadoop/io/nativeio/NativeIO$POSIX$Stat.access$1302:(Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$Stat;Ljava/lang/String;)Ljava/lang/String;
      67: pop
      68: goto          76
      71: aload_0
      72: invokestatic  #82                 // Method stat:(Ljava/lang/String;)Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$Stat;
      75: astore_1
      76: goto          125
      79: astore_2
      80: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      83: ldc           #83                 // String NativeIO.getStat error ({}): {} -- file path: {}
      85: iconst_3
      86: anewarray     #44                 // class java/lang/Object
      89: dup
      90: iconst_0
      91: aload_2
      92: invokevirtual #37                 // Method org/apache/hadoop/io/nativeio/NativeIOException.getErrorCode:()J
      95: invokestatic  #45                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      98: aastore
      99: dup
     100: iconst_1
     101: aload_2
     102: invokevirtual #46                 // Method org/apache/hadoop/io/nativeio/NativeIOException.getMessage:()Ljava/lang/String;
     105: aastore
     106: dup
     107: iconst_2
     108: aload_0
     109: aastore
     110: invokeinterface #84,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;[Ljava/lang/Object;)V
     115: new           #85                 // class org/apache/hadoop/fs/PathIOException
     118: dup
     119: aload_0
     120: aload_2
     121: invokespecial #86                 // Method org/apache/hadoop/fs/PathIOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     124: athrow
     125: aload_1
     126: areturn
    Exception table:
       from    to  target type
          27    76    79   Class org/apache/hadoop/io/nativeio/NativeIOException

  private static java.lang.String getName(org.apache.hadoop.io.nativeio.NativeIO$POSIX$IdCache, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #69                 // Field org/apache/hadoop/io/nativeio/NativeIO$POSIX$IdCache.USER:Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$IdCache;
       4: if_acmpne     13
       7: getstatic     #87                 // Field USER_ID_NAME_CACHE:Ljava/util/Map;
      10: goto          16
      13: getstatic     #88                 // Field GROUP_ID_NAME_CACHE:Ljava/util/Map;
      16: astore_2
      17: aload_2
      18: iload_1
      19: invokestatic  #89                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      22: invokeinterface #90,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      27: checkcast     #91                 // class org/apache/hadoop/io/nativeio/NativeIO$POSIX$CachedName
      30: astore        4
      32: invokestatic  #92                 // Method java/lang/System.currentTimeMillis:()J
      35: lstore        5
      37: aload         4
      39: ifnull        66
      42: aload         4
      44: getfield      #93                 // Field org/apache/hadoop/io/nativeio/NativeIO$POSIX$CachedName.timestamp:J
      47: getstatic     #94                 // Field cacheTimeout:J
      50: ladd
      51: lload         5
      53: lcmp
      54: ifle          66
      57: aload         4
      59: getfield      #95                 // Field org/apache/hadoop/io/nativeio/NativeIO$POSIX$CachedName.name:Ljava/lang/String;
      62: astore_3
      63: goto          188
      66: aload_0
      67: getstatic     #69                 // Field org/apache/hadoop/io/nativeio/NativeIO$POSIX$IdCache.USER:Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$IdCache;
      70: if_acmpne     80
      73: iload_1
      74: invokestatic  #96                 // Method getUserName:(I)Ljava/lang/String;
      77: goto          84
      80: iload_1
      81: invokestatic  #97                 // Method getGroupName:(I)Ljava/lang/String;
      84: astore_3
      85: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      88: invokeinterface #98,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      93: ifeq          163
      96: aload_0
      97: getstatic     #69                 // Field org/apache/hadoop/io/nativeio/NativeIO$POSIX$IdCache.USER:Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$IdCache;
     100: if_acmpne     108
     103: ldc           #99                 // String UserName
     105: goto          110
     108: ldc           #100                // String GroupName
     110: astore        7
     112: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     115: new           #16                 // class java/lang/StringBuilder
     118: dup
     119: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
     122: ldc           #101                // String Got
     124: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: aload         7
     129: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: ldc           #102                // String
     134: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     137: aload_3
     138: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: ldc           #103                // String  for ID
     143: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     146: iload_1
     147: invokevirtual #20                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     150: ldc           #104                // String  from the native implementation
     152: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     155: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     158: invokeinterface #105,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     163: new           #91                 // class org/apache/hadoop/io/nativeio/NativeIO$POSIX$CachedName
     166: dup
     167: aload_3
     168: lload         5
     170: invokespecial #106                // Method org/apache/hadoop/io/nativeio/NativeIO$POSIX$CachedName."<init>":(Ljava/lang/String;J)V
     173: astore        4
     175: aload_2
     176: iload_1
     177: invokestatic  #89                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     180: aload         4
     182: invokeinterface #107,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     187: pop
     188: aload_3
     189: areturn

  static native java.lang.String getUserName(int) throws java.io.IOException;

  static native java.lang.String getGroupName(int) throws java.io.IOException;

  public static native long mmap(java.io.FileDescriptor, int, boolean, long) throws java.io.IOException;

  public static native void munmap(long, long) throws java.io.IOException;

  static boolean access$000(long, long);
    Code:
       0: lload_0
       1: lload_2
       2: invokestatic  #10                 // Method isPmemCheck:(JJ)Z
       5: ireturn

  static org.apache.hadoop.io.nativeio.NativeIO$POSIX$PmemMappedRegion access$100(java.lang.String, long, boolean);
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokestatic  #9                  // Method pmemMapFile:(Ljava/lang/String;JZ)Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$PmemMappedRegion;
       6: areturn

  static boolean access$200(long, long);
    Code:
       0: lload_0
       1: lload_2
       2: invokestatic  #8                  // Method pmemUnMap:(JJ)Z
       5: ireturn

  static void access$300(byte[], long, boolean, long);
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: lload         4
       5: invokestatic  #7                  // Method pmemCopy:([BJZJ)V
       8: return

  static void access$400();
    Code:
       0: invokestatic  #6                  // Method pmemDrain:()V
       3: return

  static void access$500(long, long);
    Code:
       0: lload_0
       1: lload_2
       2: invokestatic  #5                  // Method pmemSync:(JJ)V
       5: return

  static java.lang.String access$600();
    Code:
       0: invokestatic  #4                  // Method getPmdkLibPath:()Ljava/lang/String;
       3: areturn

  static org.slf4j.Logger access$700();
    Code:
       0: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static long access$1700(java.io.FileDescriptor) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method getUIDforFDOwnerforOwner:(Ljava/io/FileDescriptor;)J
       4: lreturn

  static java.lang.String access$1800(long) throws java.io.IOException;
    Code:
       0: lload_0
       1: invokestatic  #1                  // Method getUserName:(J)Ljava/lang/String;
       4: areturn

  static {};
    Code:
       0: iconst_m1
       1: putstatic     #108                // Field O_RDONLY:I
       4: iconst_m1
       5: putstatic     #109                // Field O_WRONLY:I
       8: iconst_m1
       9: putstatic     #110                // Field O_RDWR:I
      12: iconst_m1
      13: putstatic     #111                // Field O_CREAT:I
      16: iconst_m1
      17: putstatic     #112                // Field O_EXCL:I
      20: iconst_m1
      21: putstatic     #113                // Field O_NOCTTY:I
      24: iconst_m1
      25: putstatic     #114                // Field O_TRUNC:I
      28: iconst_m1
      29: putstatic     #115                // Field O_APPEND:I
      32: iconst_m1
      33: putstatic     #116                // Field O_NONBLOCK:I
      36: iconst_m1
      37: putstatic     #117                // Field O_SYNC:I
      40: iconst_m1
      41: putstatic     #118                // Field POSIX_FADV_NORMAL:I
      44: iconst_m1
      45: putstatic     #119                // Field POSIX_FADV_RANDOM:I
      48: iconst_m1
      49: putstatic     #120                // Field POSIX_FADV_SEQUENTIAL:I
      52: iconst_m1
      53: putstatic     #121                // Field POSIX_FADV_WILLNEED:I
      56: iconst_m1
      57: putstatic     #122                // Field POSIX_FADV_DONTNEED:I
      60: iconst_m1
      61: putstatic     #123                // Field POSIX_FADV_NOREUSE:I
      64: iconst_1
      65: putstatic     #124                // Field SYNC_FILE_RANGE_WAIT_BEFORE:I
      68: iconst_2
      69: putstatic     #125                // Field SYNC_FILE_RANGE_WRITE:I
      72: iconst_4
      73: putstatic     #126                // Field SYNC_FILE_RANGE_WAIT_AFTER:I
      76: getstatic     #127                // Field org/apache/hadoop/io/nativeio/NativeIO$POSIX$SupportState.UNSUPPORTED:Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$SupportState;
      79: putstatic     #15                 // Field pmdkSupportState:Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$SupportState;
      82: ldc           #128                // class org/apache/hadoop/io/nativeio/NativeIO
      84: invokestatic  #129                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      87: putstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      90: iconst_0
      91: putstatic     #51                 // Field fadvisePossible:Z
      94: iconst_0
      95: putstatic     #29                 // Field nativeLoaded:Z
      98: iconst_1
      99: putstatic     #54                 // Field syncFileRangePossible:Z
     102: ldc2_w        #130                // long -1l
     105: putstatic     #94                 // Field cacheTimeout:J
     108: new           #132                // class org/apache/hadoop/io/nativeio/NativeIO$POSIX$CacheManipulator
     111: dup
     112: invokespecial #133                // Method org/apache/hadoop/io/nativeio/NativeIO$POSIX$CacheManipulator."<init>":()V
     115: putstatic     #12                 // Field cacheManipulator:Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$CacheManipulator;
     118: invokestatic  #28                 // Method org/apache/hadoop/util/NativeCodeLoader.isNativeCodeLoaded:()Z
     121: ifeq          219
     124: new           #134                // class org/apache/hadoop/conf/Configuration
     127: dup
     128: invokespecial #135                // Method org/apache/hadoop/conf/Configuration."<init>":()V
     131: astore_0
     132: aload_0
     133: ldc           #137                // String hadoop.workaround.non.threadsafe.getpwuid
     135: iconst_1
     136: invokevirtual #138                // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
     139: invokestatic  #139                // Method org/apache/hadoop/io/nativeio/NativeIO.access$802:(Z)Z
     142: pop
     143: invokestatic  #140                // Method org/apache/hadoop/io/nativeio/NativeIO.access$900:()V
     146: iconst_1
     147: putstatic     #29                 // Field nativeLoaded:Z
     150: aload_0
     151: ldc           #142                // String hadoop.security.uid.cache.secs
     153: ldc2_w        #143                // long 14400l
     156: invokevirtual #145                // Method org/apache/hadoop/conf/Configuration.getLong:(Ljava/lang/String;J)J
     159: ldc2_w        #146                // long 1000l
     162: lmul
     163: putstatic     #94                 // Field cacheTimeout:J
     166: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     169: new           #16                 // class java/lang/StringBuilder
     172: dup
     173: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
     176: ldc           #148                // String Initialized cache for IDs to User/Group mapping with a  cache timeout of
     178: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     181: getstatic     #94                 // Field cacheTimeout:J
     184: ldc2_w        #146                // long 1000l
     187: ldiv
     188: invokevirtual #149                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     191: ldc           #150                // String  seconds.
     193: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     196: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     199: invokeinterface #105,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     204: goto          219
     207: astore_0
     208: getstatic     #152                // Field org/apache/hadoop/util/PerformanceAdvisory.LOG:Lorg/slf4j/Logger;
     211: ldc           #153                // String Unable to initialize NativeIO libraries
     213: aload_0
     214: invokeinterface #154,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
     219: new           #155                // class java/util/concurrent/ConcurrentHashMap
     222: dup
     223: invokespecial #156                // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
     226: putstatic     #87                 // Field USER_ID_NAME_CACHE:Ljava/util/Map;
     229: new           #155                // class java/util/concurrent/ConcurrentHashMap
     232: dup
     233: invokespecial #156                // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
     236: putstatic     #88                 // Field GROUP_ID_NAME_CACHE:Ljava/util/Map;
     239: return
    Exception table:
       from    to  target type
         124   204   207   Class java/lang/Throwable
}
