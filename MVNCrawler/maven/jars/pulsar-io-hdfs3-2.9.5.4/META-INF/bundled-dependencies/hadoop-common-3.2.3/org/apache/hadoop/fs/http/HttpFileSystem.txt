Compiled from "HttpFileSystem.java"
public class org.apache.hadoop.fs.http.HttpFileSystem extends org.apache.hadoop.fs.http.AbstractHttpFileSystem {
  public org.apache.hadoop.fs.http.HttpFileSystem();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/fs/http/AbstractHttpFileSystem."<init>":()V
       4: return

  public java.lang.String getScheme();
    Code:
       0: ldc           #2                  // String http
       2: areturn

  public boolean hasPathCapability(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #3                  // Method org/apache/hadoop/fs/http/AbstractHttpFileSystem.hasPathCapability:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Z
       6: ireturn

  public org.apache.hadoop.fs.FileStatus getFileStatus(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method org/apache/hadoop/fs/http/AbstractHttpFileSystem.getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
       5: areturn

  public boolean mkdirs(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #5                  // Method org/apache/hadoop/fs/http/AbstractHttpFileSystem.mkdirs:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z
       6: ireturn

  public org.apache.hadoop.fs.Path getWorkingDirectory();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method org/apache/hadoop/fs/http/AbstractHttpFileSystem.getWorkingDirectory:()Lorg/apache/hadoop/fs/Path;
       4: areturn

  public void setWorkingDirectory(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #7                  // Method org/apache/hadoop/fs/http/AbstractHttpFileSystem.setWorkingDirectory:(Lorg/apache/hadoop/fs/Path;)V
       5: return

  public org.apache.hadoop.fs.FileStatus[] listStatus(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method org/apache/hadoop/fs/http/AbstractHttpFileSystem.listStatus:(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
       5: areturn

  public boolean delete(org.apache.hadoop.fs.Path, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #9                  // Method org/apache/hadoop/fs/http/AbstractHttpFileSystem.delete:(Lorg/apache/hadoop/fs/Path;Z)Z
       6: ireturn

  public boolean rename(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #10                 // Method org/apache/hadoop/fs/http/AbstractHttpFileSystem.rename:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
       6: ireturn

  public org.apache.hadoop.fs.FSDataOutputStream append(org.apache.hadoop.fs.Path, int, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: invokespecial #11                 // Method org/apache/hadoop/fs/http/AbstractHttpFileSystem.append:(Lorg/apache/hadoop/fs/Path;ILorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
       7: areturn

  public org.apache.hadoop.fs.FSDataOutputStream create(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission, boolean, int, short, long, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iload         4
       6: iload         5
       8: lload         6
      10: aload         8
      12: invokespecial #12                 // Method org/apache/hadoop/fs/http/AbstractHttpFileSystem.create:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
      15: areturn

  public org.apache.hadoop.fs.FSDataInputStream open(org.apache.hadoop.fs.Path, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #13                 // Method org/apache/hadoop/fs/http/AbstractHttpFileSystem.open:(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;
       6: areturn

  public java.net.URI getUri();
    Code:
       0: aload_0
       1: invokespecial #14                 // Method org/apache/hadoop/fs/http/AbstractHttpFileSystem.getUri:()Ljava/net/URI;
       4: areturn

  public void initialize(java.net.URI, org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #15                 // Method org/apache/hadoop/fs/http/AbstractHttpFileSystem.initialize:(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V
       6: return
}
