Compiled from "Compression.java"
final class org.apache.hadoop.io.file.tfile.Compression$Algorithm$2 extends org.apache.hadoop.io.file.tfile.Compression$Algorithm {
  private transient org.apache.hadoop.io.compress.DefaultCodec codec;

  org.apache.hadoop.io.file.tfile.Compression$Algorithm$2(java.lang.String, int, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: aconst_null
       5: invokespecial #3                  // Method org/apache/hadoop/io/file/tfile/Compression$Algorithm."<init>":(Ljava/lang/String;ILjava/lang/String;Lorg/apache/hadoop/io/file/tfile/Compression$1;)V
       8: return

  org.apache.hadoop.io.compress.CompressionCodec getCodec();
    Code:
       0: aload_0
       1: getfield      #4                  // Field codec:Lorg/apache/hadoop/io/compress/DefaultCodec;
       4: ifnonnull     28
       7: aload_0
       8: new           #5                  // class org/apache/hadoop/io/compress/DefaultCodec
      11: dup
      12: invokespecial #6                  // Method org/apache/hadoop/io/compress/DefaultCodec."<init>":()V
      15: putfield      #4                  // Field codec:Lorg/apache/hadoop/io/compress/DefaultCodec;
      18: aload_0
      19: getfield      #4                  // Field codec:Lorg/apache/hadoop/io/compress/DefaultCodec;
      22: getstatic     #7                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      25: invokevirtual #8                  // Method org/apache/hadoop/io/compress/DefaultCodec.setConf:(Lorg/apache/hadoop/conf/Configuration;)V
      28: aload_0
      29: getfield      #4                  // Field codec:Lorg/apache/hadoop/io/compress/DefaultCodec;
      32: areturn

  public synchronized java.io.InputStream createDecompressionStream(java.io.InputStream, org.apache.hadoop.io.compress.Decompressor, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: ifle          17
       4: aload_0
       5: getfield      #4                  // Field codec:Lorg/apache/hadoop/io/compress/DefaultCodec;
       8: invokevirtual #9                  // Method org/apache/hadoop/io/compress/DefaultCodec.getConf:()Lorg/apache/hadoop/conf/Configuration;
      11: ldc           #10                 // String io.file.buffer.size
      13: iload_3
      14: invokevirtual #11                 // Method org/apache/hadoop/conf/Configuration.setInt:(Ljava/lang/String;I)V
      17: aload_0
      18: getfield      #4                  // Field codec:Lorg/apache/hadoop/io/compress/DefaultCodec;
      21: aload_1
      22: aload_2
      23: invokevirtual #12                 // Method org/apache/hadoop/io/compress/DefaultCodec.createInputStream:(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/Decompressor;)Lorg/apache/hadoop/io/compress/CompressionInputStream;
      26: astore        4
      28: new           #13                 // class java/io/BufferedInputStream
      31: dup
      32: aload         4
      34: sipush        1024
      37: invokespecial #14                 // Method java/io/BufferedInputStream."<init>":(Ljava/io/InputStream;I)V
      40: astore        5
      42: aload         5
      44: areturn

  public synchronized java.io.OutputStream createCompressionStream(java.io.OutputStream, org.apache.hadoop.io.compress.Compressor, int) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore        4
       3: iload_3
       4: ifle          21
       7: new           #15                 // class java/io/BufferedOutputStream
      10: dup
      11: aload_1
      12: iload_3
      13: invokespecial #16                 // Method java/io/BufferedOutputStream."<init>":(Ljava/io/OutputStream;I)V
      16: astore        4
      18: goto          24
      21: aload_1
      22: astore        4
      24: aload_0
      25: getfield      #4                  // Field codec:Lorg/apache/hadoop/io/compress/DefaultCodec;
      28: invokevirtual #9                  // Method org/apache/hadoop/io/compress/DefaultCodec.getConf:()Lorg/apache/hadoop/conf/Configuration;
      31: ldc           #10                 // String io.file.buffer.size
      33: ldc           #17                 // int 32768
      35: invokevirtual #11                 // Method org/apache/hadoop/conf/Configuration.setInt:(Ljava/lang/String;I)V
      38: aload_0
      39: getfield      #4                  // Field codec:Lorg/apache/hadoop/io/compress/DefaultCodec;
      42: aload         4
      44: aload_2
      45: invokevirtual #18                 // Method org/apache/hadoop/io/compress/DefaultCodec.createOutputStream:(Ljava/io/OutputStream;Lorg/apache/hadoop/io/compress/Compressor;)Lorg/apache/hadoop/io/compress/CompressionOutputStream;
      48: astore        5
      50: new           #15                 // class java/io/BufferedOutputStream
      53: dup
      54: new           #19                 // class org/apache/hadoop/io/file/tfile/Compression$FinishOnFlushCompressionStream
      57: dup
      58: aload         5
      60: invokespecial #20                 // Method org/apache/hadoop/io/file/tfile/Compression$FinishOnFlushCompressionStream."<init>":(Lorg/apache/hadoop/io/compress/CompressionOutputStream;)V
      63: sipush        4096
      66: invokespecial #16                 // Method java/io/BufferedOutputStream."<init>":(Ljava/io/OutputStream;I)V
      69: astore        6
      71: aload         6
      73: areturn

  public boolean isSupported();
    Code:
       0: iconst_1
       1: ireturn
}
