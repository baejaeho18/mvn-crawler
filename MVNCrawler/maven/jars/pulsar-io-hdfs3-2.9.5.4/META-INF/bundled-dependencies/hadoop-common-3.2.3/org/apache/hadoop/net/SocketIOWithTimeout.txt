Compiled from "SocketIOWithTimeout.java"
abstract class org.apache.hadoop.net.SocketIOWithTimeout {
  static final org.slf4j.Logger LOG;

  private java.nio.channels.SelectableChannel channel;

  private long timeout;

  private boolean closed;

  org.apache.hadoop.net.SocketIOWithTimeout(java.nio.channels.SelectableChannel, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field closed:Z
       9: aload_1
      10: invokestatic  #3                  // Method checkChannelValidity:(Ljava/lang/Object;)V
      13: aload_0
      14: aload_1
      15: putfield      #4                  // Field channel:Ljava/nio/channels/SelectableChannel;
      18: aload_0
      19: lload_2
      20: putfield      #5                  // Field timeout:J
      23: aload_1
      24: iconst_0
      25: invokevirtual #6                  // Method java/nio/channels/SelectableChannel.configureBlocking:(Z)Ljava/nio/channels/SelectableChannel;
      28: pop
      29: return

  void close();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #2                  // Field closed:Z
       5: return

  boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #2                  // Field closed:Z
       4: ifne          21
       7: aload_0
       8: getfield      #4                  // Field channel:Ljava/nio/channels/SelectableChannel;
      11: invokevirtual #7                  // Method java/nio/channels/SelectableChannel.isOpen:()Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  java.nio.channels.SelectableChannel getChannel();
    Code:
       0: aload_0
       1: getfield      #4                  // Field channel:Ljava/nio/channels/SelectableChannel;
       4: areturn

  static void checkChannelValidity(java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #8                  // class java/io/IOException
       7: dup
       8: ldc           #9                  // String Channel is null. Check how the channel or socket is created.
      10: invokespecial #10                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: instanceof    #11                 // class java/nio/channels/SelectableChannel
      18: ifne          31
      21: new           #8                  // class java/io/IOException
      24: dup
      25: ldc           #12                 // String Channel should be a SelectableChannel
      27: invokespecial #10                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: return

  abstract int performIO(java.nio.ByteBuffer) throws java.io.IOException;

  int doIO(java.nio.ByteBuffer, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #13                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifne          17
       7: new           #14                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #15                 // String Buffer has no data left.
      13: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: invokevirtual #13                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      21: ifeq          121
      24: aload_0
      25: getfield      #2                  // Field closed:Z
      28: ifeq          33
      31: iconst_m1
      32: ireturn
      33: aload_0
      34: aload_1
      35: invokevirtual #17                 // Method performIO:(Ljava/nio/ByteBuffer;)I
      38: istore_3
      39: iload_3
      40: ifeq          45
      43: iload_3
      44: ireturn
      45: goto          66
      48: astore_3
      49: aload_0
      50: getfield      #4                  // Field channel:Ljava/nio/channels/SelectableChannel;
      53: invokevirtual #7                  // Method java/nio/channels/SelectableChannel.isOpen:()Z
      56: ifne          64
      59: aload_0
      60: iconst_1
      61: putfield      #2                  // Field closed:Z
      64: aload_3
      65: athrow
      66: iconst_0
      67: istore_3
      68: aload_0
      69: getfield      #4                  // Field channel:Ljava/nio/channels/SelectableChannel;
      72: iload_2
      73: aload_0
      74: getfield      #5                  // Field timeout:J
      77: invokestatic  #18                 // Method org/apache/hadoop/net/SocketIOWithTimeout$SelectorPool.select:(Ljava/nio/channels/SelectableChannel;IJ)I
      80: istore_3
      81: goto          94
      84: astore        4
      86: aload_0
      87: iconst_1
      88: putfield      #2                  // Field closed:Z
      91: aload         4
      93: athrow
      94: iload_3
      95: ifne          118
      98: new           #19                 // class java/net/SocketTimeoutException
     101: dup
     102: aload_0
     103: getfield      #4                  // Field channel:Ljava/nio/channels/SelectableChannel;
     106: aload_0
     107: getfield      #5                  // Field timeout:J
     110: iload_2
     111: invokestatic  #20                 // Method timeoutExceptionString:(Ljava/nio/channels/SelectableChannel;JI)Ljava/lang/String;
     114: invokespecial #21                 // Method java/net/SocketTimeoutException."<init>":(Ljava/lang/String;)V
     117: athrow
     118: goto          17
     121: iconst_0
     122: ireturn
    Exception table:
       from    to  target type
          33    44    48   Class java/io/IOException
          68    81    84   Class java/io/IOException

  static void connect(java.nio.channels.SocketChannel, java.net.SocketAddress, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method java/nio/channels/SocketChannel.isBlocking:()Z
       4: istore_3
       5: iload_3
       6: ifeq          15
       9: aload_0
      10: iconst_0
      11: invokevirtual #23                 // Method java/nio/channels/SocketChannel.configureBlocking:(Z)Ljava/nio/channels/SelectableChannel;
      14: pop
      15: aload_0
      16: aload_1
      17: invokevirtual #24                 // Method java/nio/channels/SocketChannel.connect:(Ljava/net/SocketAddress;)Z
      20: ifeq          41
      23: iload_3
      24: ifeq          40
      27: aload_0
      28: invokevirtual #25                 // Method java/nio/channels/SocketChannel.isOpen:()Z
      31: ifeq          40
      34: aload_0
      35: iconst_1
      36: invokevirtual #23                 // Method java/nio/channels/SocketChannel.configureBlocking:(Z)Ljava/nio/channels/SelectableChannel;
      39: pop
      40: return
      41: iload_2
      42: i2l
      43: lstore        4
      45: iload_2
      46: ifle          58
      49: invokestatic  #26                 // Method org/apache/hadoop/util/Time.now:()J
      52: iload_2
      53: i2l
      54: ladd
      55: goto          59
      58: lconst_0
      59: lstore        6
      61: aload_0
      62: bipush        8
      64: lload         4
      66: invokestatic  #18                 // Method org/apache/hadoop/net/SocketIOWithTimeout$SelectorPool.select:(Ljava/nio/channels/SelectableChannel;IJ)I
      69: istore        8
      71: iload         8
      73: ifle          101
      76: aload_0
      77: invokevirtual #28                 // Method java/nio/channels/SocketChannel.finishConnect:()Z
      80: ifeq          101
      83: iload_3
      84: ifeq          100
      87: aload_0
      88: invokevirtual #25                 // Method java/nio/channels/SocketChannel.isOpen:()Z
      91: ifeq          100
      94: aload_0
      95: iconst_1
      96: invokevirtual #23                 // Method java/nio/channels/SocketChannel.configureBlocking:(Z)Ljava/nio/channels/SelectableChannel;
      99: pop
     100: return
     101: iload         8
     103: ifeq          124
     106: iload_2
     107: ifle          140
     110: lload         6
     112: invokestatic  #26                 // Method org/apache/hadoop/util/Time.now:()J
     115: lsub
     116: dup2
     117: lstore        4
     119: lconst_0
     120: lcmp
     121: ifgt          140
     124: new           #19                 // class java/net/SocketTimeoutException
     127: dup
     128: aload_0
     129: iload_2
     130: i2l
     131: bipush        8
     133: invokestatic  #20                 // Method timeoutExceptionString:(Ljava/nio/channels/SelectableChannel;JI)Ljava/lang/String;
     136: invokespecial #21                 // Method java/net/SocketTimeoutException."<init>":(Ljava/lang/String;)V
     139: athrow
     140: goto          61
     143: astore        4
     145: aload_0
     146: invokevirtual #29                 // Method java/nio/channels/SocketChannel.close:()V
     149: goto          154
     152: astore        5
     154: aload         4
     156: athrow
     157: astore        9
     159: iload_3
     160: ifeq          176
     163: aload_0
     164: invokevirtual #25                 // Method java/nio/channels/SocketChannel.isOpen:()Z
     167: ifeq          176
     170: aload_0
     171: iconst_1
     172: invokevirtual #23                 // Method java/nio/channels/SocketChannel.configureBlocking:(Z)Ljava/nio/channels/SelectableChannel;
     175: pop
     176: aload         9
     178: athrow
    Exception table:
       from    to  target type
          15    23   143   Class java/io/IOException
          41    83   143   Class java/io/IOException
         101   143   143   Class java/io/IOException
         145   149   152   Class java/io/IOException
          15    23   157   any
          41    83   157   any
         101   159   157   any

  void waitForIO(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field channel:Ljava/nio/channels/SelectableChannel;
       4: iload_1
       5: aload_0
       6: getfield      #5                  // Field timeout:J
       9: invokestatic  #18                 // Method org/apache/hadoop/net/SocketIOWithTimeout$SelectorPool.select:(Ljava/nio/channels/SelectableChannel;IJ)I
      12: ifne          35
      15: new           #19                 // class java/net/SocketTimeoutException
      18: dup
      19: aload_0
      20: getfield      #4                  // Field channel:Ljava/nio/channels/SelectableChannel;
      23: aload_0
      24: getfield      #5                  // Field timeout:J
      27: iload_1
      28: invokestatic  #20                 // Method timeoutExceptionString:(Ljava/nio/channels/SelectableChannel;JI)Ljava/lang/String;
      31: invokespecial #21                 // Method java/net/SocketTimeoutException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: return

  public void setTimeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #5                  // Field timeout:J
       5: return

  private static java.lang.String timeoutExceptionString(java.nio.channels.SelectableChannel, long, int);
    Code:
       0: iload_3
       1: lookupswitch  { // 3
                     1: 36
                     4: 43
                     8: 50
               default: 57
          }
      36: ldc           #30                 // String read
      38: astore        4
      40: goto          78
      43: ldc           #31                 // String write
      45: astore        4
      47: goto          78
      50: ldc           #32                 // String connect
      52: astore        4
      54: goto          78
      57: new           #33                 // class java/lang/StringBuilder
      60: dup
      61: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      64: ldc           #35                 // String
      66: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: iload_3
      70: invokevirtual #37                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      73: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      76: astore        4
      78: new           #33                 // class java/lang/StringBuilder
      81: dup
      82: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      85: lload_1
      86: invokevirtual #39                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      89: ldc           #40                 // String  millis timeout while waiting for channel to be ready for
      91: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: aload         4
      96: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: ldc           #41                 // String . ch :
     101: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: aload_0
     105: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     108: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     111: areturn

  static {};
    Code:
       0: ldc           #43                 // class org/apache/hadoop/net/SocketIOWithTimeout
       2: invokestatic  #44                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #45                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
