Compiled from "AsyncCallHandler.java"
class org.apache.hadoop.io.retry.AsyncCallHandler$AsyncCallQueue {
  private final org.apache.hadoop.io.retry.AsyncCallHandler$ConcurrentQueue<org.apache.hadoop.io.retry.AsyncCallHandler$AsyncCall> queue;

  private final org.apache.hadoop.io.retry.AsyncCallHandler$AsyncCallQueue$Processor processor;

  final org.apache.hadoop.io.retry.AsyncCallHandler this$0;

  org.apache.hadoop.io.retry.AsyncCallHandler$AsyncCallQueue(org.apache.hadoop.io.retry.AsyncCallHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/apache/hadoop/io/retry/AsyncCallHandler;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #4                  // class org/apache/hadoop/io/retry/AsyncCallHandler$ConcurrentQueue
      13: dup
      14: invokespecial #5                  // Method org/apache/hadoop/io/retry/AsyncCallHandler$ConcurrentQueue."<init>":()V
      17: putfield      #1                  // Field queue:Lorg/apache/hadoop/io/retry/AsyncCallHandler$ConcurrentQueue;
      20: aload_0
      21: new           #6                  // class org/apache/hadoop/io/retry/AsyncCallHandler$AsyncCallQueue$Processor
      24: dup
      25: aload_0
      26: aconst_null
      27: invokespecial #7                  // Method org/apache/hadoop/io/retry/AsyncCallHandler$AsyncCallQueue$Processor."<init>":(Lorg/apache/hadoop/io/retry/AsyncCallHandler$AsyncCallQueue;Lorg/apache/hadoop/io/retry/AsyncCallHandler$1;)V
      30: putfield      #8                  // Field processor:Lorg/apache/hadoop/io/retry/AsyncCallHandler$AsyncCallQueue$Processor;
      33: return

  void addCall(org.apache.hadoop.io.retry.AsyncCallHandler$AsyncCall);
    Code:
       0: getstatic     #9                  // Field org/apache/hadoop/io/retry/AsyncCallHandler.LOG:Lorg/slf4j/Logger;
       3: invokeinterface #10,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
       8: ifeq          38
      11: getstatic     #9                  // Field org/apache/hadoop/io/retry/AsyncCallHandler.LOG:Lorg/slf4j/Logger;
      14: new           #11                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #13                 // String add
      23: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_1
      27: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      30: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokeinterface #17,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      38: aload_0
      39: getfield      #1                  // Field queue:Lorg/apache/hadoop/io/retry/AsyncCallHandler$ConcurrentQueue;
      42: aload_1
      43: invokevirtual #18                 // Method org/apache/hadoop/io/retry/AsyncCallHandler$ConcurrentQueue.offer:(Ljava/lang/Object;)V
      46: aload_0
      47: getfield      #8                  // Field processor:Lorg/apache/hadoop/io/retry/AsyncCallHandler$AsyncCallQueue$Processor;
      50: invokevirtual #19                 // Method org/apache/hadoop/io/retry/AsyncCallHandler$AsyncCallQueue$Processor.tryStart:()V
      53: return

  long checkCalls();
    Code:
       0: invokestatic  #20                 // Method org/apache/hadoop/util/Time.monotonicNow:()J
       3: lstore_1
       4: ldc2_w        #21                 // long 100l
       7: lstore_3
       8: aload_0
       9: getfield      #1                  // Field queue:Lorg/apache/hadoop/io/retry/AsyncCallHandler$ConcurrentQueue;
      12: invokevirtual #23                 // Method org/apache/hadoop/io/retry/AsyncCallHandler$ConcurrentQueue.iterator:()Ljava/util/Iterator;
      15: astore        5
      17: aload         5
      19: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          106
      27: aload         5
      29: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #26                 // class org/apache/hadoop/io/retry/AsyncCallHandler$AsyncCall
      37: astore        6
      39: aload         6
      41: invokevirtual #27                 // Method org/apache/hadoop/io/retry/AsyncCallHandler$AsyncCall.isDone:()Z
      44: ifeq          64
      47: aload         5
      49: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.remove:()V
      54: aload_0
      55: getfield      #1                  // Field queue:Lorg/apache/hadoop/io/retry/AsyncCallHandler$ConcurrentQueue;
      58: invokevirtual #29                 // Method org/apache/hadoop/io/retry/AsyncCallHandler$ConcurrentQueue.checkEmpty:()V
      61: goto          103
      64: aload         6
      66: lload_1
      67: invokevirtual #30                 // Method org/apache/hadoop/io/retry/AsyncCallHandler$AsyncCall.getWaitTime:(J)Ljava/lang/Long;
      70: astore        7
      72: aload         7
      74: ifnull        103
      77: aload         7
      79: invokevirtual #31                 // Method java/lang/Long.longValue:()J
      82: lconst_0
      83: lcmp
      84: ifle          103
      87: aload         7
      89: invokevirtual #31                 // Method java/lang/Long.longValue:()J
      92: lload_3
      93: lcmp
      94: ifge          103
      97: aload         7
      99: invokevirtual #31                 // Method java/lang/Long.longValue:()J
     102: lstore_3
     103: goto          17
     106: lload_3
     107: lreturn

  static org.apache.hadoop.io.retry.AsyncCallHandler$ConcurrentQueue access$100(org.apache.hadoop.io.retry.AsyncCallHandler$AsyncCallQueue);
    Code:
       0: aload_0
       1: getfield      #1                  // Field queue:Lorg/apache/hadoop/io/retry/AsyncCallHandler$ConcurrentQueue;
       4: areturn
}
