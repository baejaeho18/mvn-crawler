Compiled from "StringUtils.java"
public final class org.apache.hadoop.util.StringUtils$TraditionalBinaryPrefix extends java.lang.Enum<org.apache.hadoop.util.StringUtils$TraditionalBinaryPrefix> {
  public static final org.apache.hadoop.util.StringUtils$TraditionalBinaryPrefix KILO;

  public static final org.apache.hadoop.util.StringUtils$TraditionalBinaryPrefix MEGA;

  public static final org.apache.hadoop.util.StringUtils$TraditionalBinaryPrefix GIGA;

  public static final org.apache.hadoop.util.StringUtils$TraditionalBinaryPrefix TERA;

  public static final org.apache.hadoop.util.StringUtils$TraditionalBinaryPrefix PETA;

  public static final org.apache.hadoop.util.StringUtils$TraditionalBinaryPrefix EXA;

  public final long value;

  public final char symbol;

  public final int bitShift;

  public final long bitMask;

  private static final org.apache.hadoop.util.StringUtils$TraditionalBinaryPrefix[] $VALUES;

  public static org.apache.hadoop.util.StringUtils$TraditionalBinaryPrefix[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lorg/apache/hadoop/util/StringUtils$TraditionalBinaryPrefix;
       3: invokevirtual #2                  // Method "[Lorg/apache/hadoop/util/StringUtils$TraditionalBinaryPrefix;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lorg/apache/hadoop/util/StringUtils$TraditionalBinaryPrefix;"
       9: areturn

  public static org.apache.hadoop.util.StringUtils$TraditionalBinaryPrefix valueOf(java.lang.String);
    Code:
       0: ldc           #4                  // class org/apache/hadoop/util/StringUtils$TraditionalBinaryPrefix
       2: aload_0
       3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #4                  // class org/apache/hadoop/util/StringUtils$TraditionalBinaryPrefix
       9: areturn

  private org.apache.hadoop.util.StringUtils$TraditionalBinaryPrefix(int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: aload_0
       7: iload_3
       8: putfield      #7                  // Field bitShift:I
      11: aload_0
      12: lconst_1
      13: iload_3
      14: lshl
      15: putfield      #8                  // Field value:J
      18: aload_0
      19: aload_0
      20: getfield      #8                  // Field value:J
      23: lconst_1
      24: lsub
      25: putfield      #9                  // Field bitMask:J
      28: aload_0
      29: aload_0
      30: invokevirtual #10                 // Method toString:()Ljava/lang/String;
      33: iconst_0
      34: invokevirtual #11                 // Method java/lang/String.charAt:(I)C
      37: putfield      #12                 // Field symbol:C
      40: return

  public static org.apache.hadoop.util.StringUtils$TraditionalBinaryPrefix valueOf(char);
    Code:
       0: iload_0
       1: invokestatic  #13                 // Method java/lang/Character.toUpperCase:(C)C
       4: istore_0
       5: invokestatic  #14                 // Method values:()[Lorg/apache/hadoop/util/StringUtils$TraditionalBinaryPrefix;
       8: astore_1
       9: aload_1
      10: arraylength
      11: istore_2
      12: iconst_0
      13: istore_3
      14: iload_3
      15: iload_2
      16: if_icmpge     42
      19: aload_1
      20: iload_3
      21: aaload
      22: astore        4
      24: iload_0
      25: aload         4
      27: getfield      #12                 // Field symbol:C
      30: if_icmpne     36
      33: aload         4
      35: areturn
      36: iinc          3, 1
      39: goto          14
      42: new           #15                 // class java/lang/IllegalArgumentException
      45: dup
      46: new           #16                 // class java/lang/StringBuilder
      49: dup
      50: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      53: ldc           #18                 // String Unknown symbol \'
      55: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: iload_0
      59: invokevirtual #20                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      62: ldc           #21                 // String \'
      64: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: invokespecial #23                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      73: athrow

  public static long string2long(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method java/lang/String.trim:()Ljava/lang/String;
       4: astore_0
       5: aload_0
       6: invokevirtual #25                 // Method java/lang/String.length:()I
       9: iconst_1
      10: isub
      11: istore_1
      12: aload_0
      13: iload_1
      14: invokevirtual #11                 // Method java/lang/String.charAt:(I)C
      17: istore_2
      18: iload_2
      19: invokestatic  #26                 // Method java/lang/Character.isDigit:(C)Z
      22: ifeq          30
      25: aload_0
      26: invokestatic  #27                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      29: lreturn
      30: iload_2
      31: invokestatic  #28                 // Method valueOf:(C)Lorg/apache/hadoop/util/StringUtils$TraditionalBinaryPrefix;
      34: getfield      #8                  // Field value:J
      37: lstore_3
      38: goto          84
      41: astore        5
      43: new           #15                 // class java/lang/IllegalArgumentException
      46: dup
      47: new           #16                 // class java/lang/StringBuilder
      50: dup
      51: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      54: ldc           #29                 // String Invalid size prefix \'
      56: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: iload_2
      60: invokevirtual #20                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      63: ldc           #30                 // String \' in \'
      65: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_0
      69: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: ldc           #31                 // String \'. Allowed prefixes are k, m, g, t, p, e(case insensitive)
      74: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      80: invokespecial #23                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      83: athrow
      84: aload_0
      85: iconst_0
      86: iload_1
      87: invokevirtual #32                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      90: invokestatic  #27                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      93: lstore        5
      95: lload         5
      97: ldc2_w        #34                 // long 9223372036854775807l
     100: lload_3
     101: ldiv
     102: lcmp
     103: ifgt          117
     106: lload         5
     108: ldc2_w        #36                 // long -9223372036854775808l
     111: lload_3
     112: ldiv
     113: lcmp
     114: ifge          144
     117: new           #15                 // class java/lang/IllegalArgumentException
     120: dup
     121: new           #16                 // class java/lang/StringBuilder
     124: dup
     125: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
     128: aload_0
     129: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: ldc           #38                 // String  does not fit in a Long
     134: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     137: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     140: invokespecial #23                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     143: athrow
     144: lload         5
     146: lload_3
     147: lmul
     148: lreturn
    Exception table:
       from    to  target type
          30    38    41   Class java/lang/IllegalArgumentException

  public static java.lang.String long2String(long, java.lang.String, int);
    Code:
       0: aload_2
       1: ifnonnull     7
       4: ldc           #39                 // String
       6: astore_2
       7: lload_0
       8: ldc2_w        #36                 // long -9223372036854775808l
      11: lcmp
      12: ifne          44
      15: new           #16                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #40                 // String -8
      24: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: getstatic     #41                 // Field EXA:Lorg/apache/hadoop/util/StringUtils$TraditionalBinaryPrefix;
      30: getfield      #12                 // Field symbol:C
      33: invokevirtual #20                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      36: aload_2
      37: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: areturn
      44: new           #16                 // class java/lang/StringBuilder
      47: dup
      48: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      51: astore        4
      53: lload_0
      54: lconst_0
      55: lcmp
      56: ifge          70
      59: aload         4
      61: bipush        45
      63: invokevirtual #20                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      66: pop
      67: lload_0
      68: lneg
      69: lstore_0
      70: lload_0
      71: getstatic     #42                 // Field KILO:Lorg/apache/hadoop/util/StringUtils$TraditionalBinaryPrefix;
      74: getfield      #8                  // Field value:J
      77: lcmp
      78: ifge          115
      81: aload         4
      83: lload_0
      84: invokevirtual #43                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      87: pop
      88: aload_2
      89: invokevirtual #44                 // Method java/lang/String.isEmpty:()Z
      92: ifeq          100
      95: aload         4
      97: goto          111
     100: aload         4
     102: ldc           #45                 // String
     104: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: aload_2
     108: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     114: areturn
     115: iconst_0
     116: istore        5
     118: iload         5
     120: invokestatic  #14                 // Method values:()[Lorg/apache/hadoop/util/StringUtils$TraditionalBinaryPrefix;
     123: arraylength
     124: if_icmpge     147
     127: lload_0
     128: invokestatic  #14                 // Method values:()[Lorg/apache/hadoop/util/StringUtils$TraditionalBinaryPrefix;
     131: iload         5
     133: aaload
     134: getfield      #8                  // Field value:J
     137: lcmp
     138: iflt          147
     141: iinc          5, 1
     144: goto          118
     147: invokestatic  #14                 // Method values:()[Lorg/apache/hadoop/util/StringUtils$TraditionalBinaryPrefix;
     150: iload         5
     152: iconst_1
     153: isub
     154: aaload
     155: astore        6
     157: lload_0
     158: aload         6
     160: getfield      #9                  // Field bitMask:J
     163: land
     164: lconst_0
     165: lcmp
     166: ifne          185
     169: aload         4
     171: lload_0
     172: aload         6
     174: getfield      #7                  // Field bitShift:I
     177: lshr
     178: invokevirtual #43                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     181: pop
     182: goto          289
     185: new           #16                 // class java/lang/StringBuilder
     188: dup
     189: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
     192: ldc           #46                 // String %.
     194: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     197: iload_3
     198: invokevirtual #47                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     201: ldc           #48                 // String f
     203: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     206: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     209: astore        7
     211: aload         7
     213: iconst_1
     214: anewarray     #49                 // class java/lang/Object
     217: dup
     218: iconst_0
     219: lload_0
     220: l2d
     221: aload         6
     223: getfield      #8                  // Field value:J
     226: l2d
     227: ddiv
     228: invokestatic  #50                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
     231: aastore
     232: invokestatic  #51                 // Method org/apache/hadoop/util/StringUtils.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     235: astore        8
     237: aload         8
     239: ldc           #52                 // String 1024
     241: invokevirtual #53                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     244: ifeq          281
     247: invokestatic  #14                 // Method values:()[Lorg/apache/hadoop/util/StringUtils$TraditionalBinaryPrefix;
     250: iload         5
     252: aaload
     253: astore        6
     255: aload         7
     257: iconst_1
     258: anewarray     #49                 // class java/lang/Object
     261: dup
     262: iconst_0
     263: lload_0
     264: l2d
     265: aload         6
     267: getfield      #8                  // Field value:J
     270: l2d
     271: ddiv
     272: invokestatic  #50                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
     275: aastore
     276: invokestatic  #51                 // Method org/apache/hadoop/util/StringUtils.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     279: astore        8
     281: aload         4
     283: aload         8
     285: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     288: pop
     289: aload         4
     291: bipush        32
     293: invokevirtual #20                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     296: aload         6
     298: getfield      #12                 // Field symbol:C
     301: invokevirtual #20                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     304: aload_2
     305: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     308: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     311: areturn

  static {};
    Code:
       0: new           #4                  // class org/apache/hadoop/util/StringUtils$TraditionalBinaryPrefix
       3: dup
       4: ldc           #54                 // String KILO
       6: iconst_0
       7: bipush        10
       9: invokespecial #55                 // Method "<init>":(Ljava/lang/String;II)V
      12: putstatic     #42                 // Field KILO:Lorg/apache/hadoop/util/StringUtils$TraditionalBinaryPrefix;
      15: new           #4                  // class org/apache/hadoop/util/StringUtils$TraditionalBinaryPrefix
      18: dup
      19: ldc           #56                 // String MEGA
      21: iconst_1
      22: getstatic     #42                 // Field KILO:Lorg/apache/hadoop/util/StringUtils$TraditionalBinaryPrefix;
      25: getfield      #7                  // Field bitShift:I
      28: bipush        10
      30: iadd
      31: invokespecial #55                 // Method "<init>":(Ljava/lang/String;II)V
      34: putstatic     #57                 // Field MEGA:Lorg/apache/hadoop/util/StringUtils$TraditionalBinaryPrefix;
      37: new           #4                  // class org/apache/hadoop/util/StringUtils$TraditionalBinaryPrefix
      40: dup
      41: ldc           #58                 // String GIGA
      43: iconst_2
      44: getstatic     #57                 // Field MEGA:Lorg/apache/hadoop/util/StringUtils$TraditionalBinaryPrefix;
      47: getfield      #7                  // Field bitShift:I
      50: bipush        10
      52: iadd
      53: invokespecial #55                 // Method "<init>":(Ljava/lang/String;II)V
      56: putstatic     #59                 // Field GIGA:Lorg/apache/hadoop/util/StringUtils$TraditionalBinaryPrefix;
      59: new           #4                  // class org/apache/hadoop/util/StringUtils$TraditionalBinaryPrefix
      62: dup
      63: ldc           #60                 // String TERA
      65: iconst_3
      66: getstatic     #59                 // Field GIGA:Lorg/apache/hadoop/util/StringUtils$TraditionalBinaryPrefix;
      69: getfield      #7                  // Field bitShift:I
      72: bipush        10
      74: iadd
      75: invokespecial #55                 // Method "<init>":(Ljava/lang/String;II)V
      78: putstatic     #61                 // Field TERA:Lorg/apache/hadoop/util/StringUtils$TraditionalBinaryPrefix;
      81: new           #4                  // class org/apache/hadoop/util/StringUtils$TraditionalBinaryPrefix
      84: dup
      85: ldc           #62                 // String PETA
      87: iconst_4
      88: getstatic     #61                 // Field TERA:Lorg/apache/hadoop/util/StringUtils$TraditionalBinaryPrefix;
      91: getfield      #7                  // Field bitShift:I
      94: bipush        10
      96: iadd
      97: invokespecial #55                 // Method "<init>":(Ljava/lang/String;II)V
     100: putstatic     #63                 // Field PETA:Lorg/apache/hadoop/util/StringUtils$TraditionalBinaryPrefix;
     103: new           #4                  // class org/apache/hadoop/util/StringUtils$TraditionalBinaryPrefix
     106: dup
     107: ldc           #64                 // String EXA
     109: iconst_5
     110: getstatic     #63                 // Field PETA:Lorg/apache/hadoop/util/StringUtils$TraditionalBinaryPrefix;
     113: getfield      #7                  // Field bitShift:I
     116: bipush        10
     118: iadd
     119: invokespecial #55                 // Method "<init>":(Ljava/lang/String;II)V
     122: putstatic     #41                 // Field EXA:Lorg/apache/hadoop/util/StringUtils$TraditionalBinaryPrefix;
     125: bipush        6
     127: anewarray     #4                  // class org/apache/hadoop/util/StringUtils$TraditionalBinaryPrefix
     130: dup
     131: iconst_0
     132: getstatic     #42                 // Field KILO:Lorg/apache/hadoop/util/StringUtils$TraditionalBinaryPrefix;
     135: aastore
     136: dup
     137: iconst_1
     138: getstatic     #57                 // Field MEGA:Lorg/apache/hadoop/util/StringUtils$TraditionalBinaryPrefix;
     141: aastore
     142: dup
     143: iconst_2
     144: getstatic     #59                 // Field GIGA:Lorg/apache/hadoop/util/StringUtils$TraditionalBinaryPrefix;
     147: aastore
     148: dup
     149: iconst_3
     150: getstatic     #61                 // Field TERA:Lorg/apache/hadoop/util/StringUtils$TraditionalBinaryPrefix;
     153: aastore
     154: dup
     155: iconst_4
     156: getstatic     #63                 // Field PETA:Lorg/apache/hadoop/util/StringUtils$TraditionalBinaryPrefix;
     159: aastore
     160: dup
     161: iconst_5
     162: getstatic     #41                 // Field EXA:Lorg/apache/hadoop/util/StringUtils$TraditionalBinaryPrefix;
     165: aastore
     166: putstatic     #1                  // Field $VALUES:[Lorg/apache/hadoop/util/StringUtils$TraditionalBinaryPrefix;
     169: return
}
