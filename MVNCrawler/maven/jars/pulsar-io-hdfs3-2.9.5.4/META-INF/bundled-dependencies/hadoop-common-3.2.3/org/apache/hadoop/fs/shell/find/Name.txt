Compiled from "Name.java"
final class org.apache.hadoop.fs.shell.find.Name extends org.apache.hadoop.fs.shell.find.BaseExpression {
  private static final java.lang.String[] USAGE;

  private static final java.lang.String[] HELP;

  private org.apache.hadoop.fs.GlobPattern globPattern;

  private boolean caseSensitive;

  public static void registerExpression(org.apache.hadoop.fs.shell.find.ExpressionFactory) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #2                  // class org/apache/hadoop/fs/shell/find/Name
       3: iconst_1
       4: anewarray     #3                  // class java/lang/String
       7: dup
       8: iconst_0
       9: ldc           #4                  // String -name
      11: aastore
      12: invokevirtual #5                  // Method org/apache/hadoop/fs/shell/find/ExpressionFactory.addClass:(Ljava/lang/Class;[Ljava/lang/String;)V
      15: aload_0
      16: ldc           #6                  // class org/apache/hadoop/fs/shell/find/Name$Iname
      18: iconst_1
      19: anewarray     #3                  // class java/lang/String
      22: dup
      23: iconst_0
      24: ldc           #7                  // String -iname
      26: aastore
      27: invokevirtual #5                  // Method org/apache/hadoop/fs/shell/find/ExpressionFactory.addClass:(Ljava/lang/Class;[Ljava/lang/String;)V
      30: return

  public org.apache.hadoop.fs.shell.find.Name();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #1                  // Method "<init>":(Z)V
       5: return

  private org.apache.hadoop.fs.shell.find.Name(boolean);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method org/apache/hadoop/fs/shell/find/BaseExpression."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #9                  // Field caseSensitive:Z
       9: aload_0
      10: getstatic     #10                 // Field USAGE:[Ljava/lang/String;
      13: invokevirtual #11                 // Method setUsage:([Ljava/lang/String;)V
      16: aload_0
      17: getstatic     #12                 // Field HELP:[Ljava/lang/String;
      20: invokevirtual #13                 // Method setHelp:([Ljava/lang/String;)V
      23: aload_0
      24: iload_1
      25: invokespecial #14                 // Method setCaseSensitive:(Z)V
      28: return

  private void setCaseSensitive(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field caseSensitive:Z
       5: return

  public void addArguments(java.util.Deque<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokevirtual #15                 // Method addArguments:(Ljava/util/Deque;I)V
       6: return

  public void prepare() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #16                 // Method getArgument:(I)Ljava/lang/String;
       5: astore_1
       6: aload_0
       7: getfield      #9                  // Field caseSensitive:Z
      10: ifne          18
      13: aload_1
      14: invokestatic  #17                 // Method org/apache/hadoop/util/StringUtils.toLowerCase:(Ljava/lang/String;)Ljava/lang/String;
      17: astore_1
      18: aload_0
      19: new           #18                 // class org/apache/hadoop/fs/GlobPattern
      22: dup
      23: aload_1
      24: invokespecial #19                 // Method org/apache/hadoop/fs/GlobPattern."<init>":(Ljava/lang/String;)V
      27: putfield      #20                 // Field globPattern:Lorg/apache/hadoop/fs/GlobPattern;
      30: return

  public org.apache.hadoop.fs.shell.find.Result apply(org.apache.hadoop.fs.shell.PathData, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #21                 // Method getPath:(Lorg/apache/hadoop/fs/shell/PathData;)Lorg/apache/hadoop/fs/Path;
       5: invokevirtual #22                 // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
       8: astore_3
       9: aload_0
      10: getfield      #9                  // Field caseSensitive:Z
      13: ifne          21
      16: aload_3
      17: invokestatic  #17                 // Method org/apache/hadoop/util/StringUtils.toLowerCase:(Ljava/lang/String;)Ljava/lang/String;
      20: astore_3
      21: aload_0
      22: getfield      #20                 // Field globPattern:Lorg/apache/hadoop/fs/GlobPattern;
      25: aload_3
      26: invokevirtual #23                 // Method org/apache/hadoop/fs/GlobPattern.matches:(Ljava/lang/CharSequence;)Z
      29: ifeq          36
      32: getstatic     #24                 // Field org/apache/hadoop/fs/shell/find/Result.PASS:Lorg/apache/hadoop/fs/shell/find/Result;
      35: areturn
      36: getstatic     #25                 // Field org/apache/hadoop/fs/shell/find/Result.FAIL:Lorg/apache/hadoop/fs/shell/find/Result;
      39: areturn

  org.apache.hadoop.fs.shell.find.Name(boolean, org.apache.hadoop.fs.shell.find.Name$1);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #1                  // Method "<init>":(Z)V
       5: return

  static {};
    Code:
       0: iconst_2
       1: anewarray     #3                  // class java/lang/String
       4: dup
       5: iconst_0
       6: ldc           #26                 // String -name pattern
       8: aastore
       9: dup
      10: iconst_1
      11: ldc           #27                 // String -iname pattern
      13: aastore
      14: putstatic     #10                 // Field USAGE:[Ljava/lang/String;
      17: iconst_3
      18: anewarray     #3                  // class java/lang/String
      21: dup
      22: iconst_0
      23: ldc           #28                 // String Evaluates as true if the basename of the file matches the
      25: aastore
      26: dup
      27: iconst_1
      28: ldc           #29                 // String pattern using standard file system globbing.
      30: aastore
      31: dup
      32: iconst_2
      33: ldc           #30                 // String If -iname is used then the match is case insensitive.
      35: aastore
      36: putstatic     #12                 // Field HELP:[Ljava/lang/String;
      39: return
}
