Compiled from "FileContext.java"
public class org.apache.hadoop.fs.FileContext implements org.apache.hadoop.fs.PathCapabilities {
  public static final org.slf4j.Logger LOG;

  public static final org.apache.hadoop.fs.permission.FsPermission DEFAULT_PERM;

  public static final org.apache.hadoop.fs.permission.FsPermission DIR_DEFAULT_PERM;

  public static final org.apache.hadoop.fs.permission.FsPermission FILE_DEFAULT_PERM;

  public static final int SHUTDOWN_HOOK_PRIORITY;

  static final java.util.Map<org.apache.hadoop.fs.FileContext, java.util.Set<org.apache.hadoop.fs.Path>> DELETE_ON_EXIT;

  static final org.apache.hadoop.fs.FileContext$FileContextFinalizer FINALIZER;

  private static final org.apache.hadoop.fs.PathFilter DEFAULT_FILTER;

  private final org.apache.hadoop.fs.AbstractFileSystem defaultFS;

  private org.apache.hadoop.fs.Path workingDir;

  private org.apache.hadoop.fs.permission.FsPermission umask;

  private final org.apache.hadoop.conf.Configuration conf;

  private final org.apache.hadoop.security.UserGroupInformation ugi;

  final boolean resolveSymlinks;

  private final org.apache.htrace.core.Tracer tracer;

  private final org.apache.hadoop.fs.FileContext$Util util;

  private org.apache.hadoop.fs.FileContext(org.apache.hadoop.fs.AbstractFileSystem, org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #7                  // Field defaultFS:Lorg/apache/hadoop/fs/AbstractFileSystem;
       9: aload_0
      10: aload_2
      11: putfield      #2                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      14: aload_0
      15: aload_2
      16: invokestatic  #8                  // Method org/apache/hadoop/fs/FsTracer.get:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/htrace/core/Tracer;
      19: putfield      #9                  // Field tracer:Lorg/apache/htrace/core/Tracer;
      22: aload_0
      23: invokestatic  #10                 // Method org/apache/hadoop/security/UserGroupInformation.getCurrentUser:()Lorg/apache/hadoop/security/UserGroupInformation;
      26: putfield      #11                 // Field ugi:Lorg/apache/hadoop/security/UserGroupInformation;
      29: goto          55
      32: astore_3
      33: getstatic     #13                 // Field LOG:Lorg/slf4j/Logger;
      36: ldc           #14                 // String Exception in getCurrentUser:
      38: aload_3
      39: invokeinterface #15,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      44: new           #16                 // class java/lang/RuntimeException
      47: dup
      48: ldc           #17                 // String Failed to get the current user while creating a FileContext
      50: aload_3
      51: invokespecial #18                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      54: athrow
      55: aload_0
      56: aload_0
      57: getfield      #7                  // Field defaultFS:Lorg/apache/hadoop/fs/AbstractFileSystem;
      60: invokevirtual #19                 // Method org/apache/hadoop/fs/AbstractFileSystem.getInitialWorkingDirectory:()Lorg/apache/hadoop/fs/Path;
      63: putfield      #20                 // Field workingDir:Lorg/apache/hadoop/fs/Path;
      66: aload_0
      67: getfield      #20                 // Field workingDir:Lorg/apache/hadoop/fs/Path;
      70: ifnonnull     84
      73: aload_0
      74: aload_0
      75: getfield      #7                  // Field defaultFS:Lorg/apache/hadoop/fs/AbstractFileSystem;
      78: invokevirtual #21                 // Method org/apache/hadoop/fs/AbstractFileSystem.getHomeDirectory:()Lorg/apache/hadoop/fs/Path;
      81: putfield      #20                 // Field workingDir:Lorg/apache/hadoop/fs/Path;
      84: aload_0
      85: aload_0
      86: getfield      #2                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      89: ldc           #23                 // String fs.client.resolve.remote.symlinks
      91: iconst_1
      92: invokevirtual #24                 // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
      95: putfield      #25                 // Field resolveSymlinks:Z
      98: aload_0
      99: new           #26                 // class org/apache/hadoop/fs/FileContext$Util
     102: dup
     103: aload_0
     104: invokespecial #27                 // Method org/apache/hadoop/fs/FileContext$Util."<init>":(Lorg/apache/hadoop/fs/FileContext;)V
     107: putfield      #28                 // Field util:Lorg/apache/hadoop/fs/FileContext$Util;
     110: return
    Exception table:
       from    to  target type
          22    29    32   Class java/io/IOException

  org.apache.hadoop.fs.Path fixRelativePart(org.apache.hadoop.fs.Path);
    Code:
       0: aload_1
       1: ldc           #29                 // String path cannot be null
       3: invokestatic  #30                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_1
       8: invokevirtual #31                 // Method org/apache/hadoop/fs/Path.isUriPathAbsolute:()Z
      11: ifeq          16
      14: aload_1
      15: areturn
      16: new           #32                 // class org/apache/hadoop/fs/Path
      19: dup
      20: aload_0
      21: getfield      #20                 // Field workingDir:Lorg/apache/hadoop/fs/Path;
      24: aload_1
      25: invokespecial #33                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
      28: areturn

  static void processDeleteOnExit();
    Code:
       0: getstatic     #34                 // Field DELETE_ON_EXIT:Ljava/util/Map;
       3: dup
       4: astore_0
       5: monitorenter
       6: getstatic     #34                 // Field DELETE_ON_EXIT:Ljava/util/Map;
       9: invokeinterface #35,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      14: astore_1
      15: aload_1
      16: invokeinterface #36,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      21: astore_2
      22: aload_2
      23: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          142
      31: aload_2
      32: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #39                 // class java/util/Map$Entry
      40: astore_3
      41: aload_3
      42: invokeinterface #40,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      47: checkcast     #41                 // class org/apache/hadoop/fs/FileContext
      50: astore        4
      52: aload_3
      53: invokeinterface #42,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      58: checkcast     #43                 // class java/util/Set
      61: astore        5
      63: aload         5
      65: invokeinterface #36,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      70: astore        6
      72: aload         6
      74: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      79: ifeq          139
      82: aload         6
      84: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      89: checkcast     #32                 // class org/apache/hadoop/fs/Path
      92: astore        7
      94: aload         4
      96: aload         7
      98: iconst_1
      99: invokevirtual #44                 // Method delete:(Lorg/apache/hadoop/fs/Path;Z)Z
     102: pop
     103: goto          136
     106: astore        8
     108: getstatic     #13                 // Field LOG:Lorg/slf4j/Logger;
     111: new           #45                 // class java/lang/StringBuilder
     114: dup
     115: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
     118: ldc           #47                 // String Ignoring failure to deleteOnExit for path
     120: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: aload         7
     125: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     128: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     131: invokeinterface #51,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     136: goto          72
     139: goto          22
     142: getstatic     #34                 // Field DELETE_ON_EXIT:Ljava/util/Map;
     145: invokeinterface #52,  1           // InterfaceMethod java/util/Map.clear:()V
     150: aload_0
     151: monitorexit
     152: goto          162
     155: astore        9
     157: aload_0
     158: monitorexit
     159: aload         9
     161: athrow
     162: return
    Exception table:
       from    to  target type
          94   103   106   Class java/io/IOException
           6   152   155   any
         155   159   155   any

  protected org.apache.hadoop.fs.AbstractFileSystem getFSofPath(org.apache.hadoop.fs.Path) throws org.apache.hadoop.fs.UnsupportedFileSystemException, java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #53                 // Method org/apache/hadoop/fs/Path.checkNotSchemeWithRelative:()V
       4: aload_1
       5: invokevirtual #54                 // Method org/apache/hadoop/fs/Path.checkNotRelative:()V
       8: aload_0
       9: getfield      #7                  // Field defaultFS:Lorg/apache/hadoop/fs/AbstractFileSystem;
      12: aload_1
      13: invokevirtual #55                 // Method org/apache/hadoop/fs/AbstractFileSystem.checkPath:(Lorg/apache/hadoop/fs/Path;)V
      16: aload_0
      17: getfield      #7                  // Field defaultFS:Lorg/apache/hadoop/fs/AbstractFileSystem;
      20: areturn
      21: astore_2
      22: aload_0
      23: getfield      #11                 // Field ugi:Lorg/apache/hadoop/security/UserGroupInformation;
      26: aload_1
      27: invokevirtual #57                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
      30: aload_0
      31: getfield      #2                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      34: invokestatic  #58                 // Method getAbstractFileSystem:(Lorg/apache/hadoop/security/UserGroupInformation;Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/AbstractFileSystem;
      37: areturn
    Exception table:
       from    to  target type
           8    20    21   Class java/lang/Exception

  private static org.apache.hadoop.fs.AbstractFileSystem getAbstractFileSystem(org.apache.hadoop.security.UserGroupInformation, java.net.URI, org.apache.hadoop.conf.Configuration) throws org.apache.hadoop.fs.UnsupportedFileSystemException, java.io.IOException;
    Code:
       0: aload_0
       1: new           #59                 // class org/apache/hadoop/fs/FileContext$2
       4: dup
       5: aload_1
       6: aload_2
       7: invokespecial #60                 // Method org/apache/hadoop/fs/FileContext$2."<init>":(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V
      10: invokevirtual #61                 // Method org/apache/hadoop/security/UserGroupInformation.doAs:(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;
      13: checkcast     #62                 // class org/apache/hadoop/fs/AbstractFileSystem
      16: areturn
      17: astore_3
      18: aload_3
      19: invokevirtual #63                 // Method java/lang/RuntimeException.getCause:()Ljava/lang/Throwable;
      22: astore        4
      24: aload         4
      26: instanceof    #12                 // class java/io/IOException
      29: ifeq          38
      32: aload         4
      34: checkcast     #12                 // class java/io/IOException
      37: athrow
      38: aload_3
      39: athrow
      40: astore_3
      41: getstatic     #13                 // Field LOG:Lorg/slf4j/Logger;
      44: aload_3
      45: invokevirtual #65                 // Method java/lang/InterruptedException.toString:()Ljava/lang/String;
      48: invokeinterface #66,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
      53: new           #12                 // class java/io/IOException
      56: dup
      57: new           #45                 // class java/lang/StringBuilder
      60: dup
      61: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      64: ldc           #67                 // String Failed to get the AbstractFileSystem for path:
      66: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: aload_1
      70: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      73: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      76: aload_3
      77: invokespecial #68                 // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      80: athrow
    Exception table:
       from    to  target type
           0    16    17   Class java/lang/RuntimeException
           0    16    40   Class java/lang/InterruptedException

  public static org.apache.hadoop.fs.FileContext getFileContext(org.apache.hadoop.fs.AbstractFileSystem, org.apache.hadoop.conf.Configuration);
    Code:
       0: new           #41                 // class org/apache/hadoop/fs/FileContext
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #69                 // Method "<init>":(Lorg/apache/hadoop/fs/AbstractFileSystem;Lorg/apache/hadoop/conf/Configuration;)V
       9: areturn

  protected static org.apache.hadoop.fs.FileContext getFileContext(org.apache.hadoop.fs.AbstractFileSystem);
    Code:
       0: aload_0
       1: new           #70                 // class org/apache/hadoop/conf/Configuration
       4: dup
       5: invokespecial #71                 // Method org/apache/hadoop/conf/Configuration."<init>":()V
       8: invokestatic  #72                 // Method getFileContext:(Lorg/apache/hadoop/fs/AbstractFileSystem;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileContext;
      11: areturn

  public static org.apache.hadoop.fs.FileContext getFileContext() throws org.apache.hadoop.fs.UnsupportedFileSystemException;
    Code:
       0: new           #70                 // class org/apache/hadoop/conf/Configuration
       3: dup
       4: invokespecial #71                 // Method org/apache/hadoop/conf/Configuration."<init>":()V
       7: invokestatic  #73                 // Method getFileContext:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileContext;
      10: areturn

  public static org.apache.hadoop.fs.FileContext getLocalFSFileContext() throws org.apache.hadoop.fs.UnsupportedFileSystemException;
    Code:
       0: getstatic     #74                 // Field org/apache/hadoop/fs/FsConstants.LOCAL_FS_URI:Ljava/net/URI;
       3: invokestatic  #75                 // Method getFileContext:(Ljava/net/URI;)Lorg/apache/hadoop/fs/FileContext;
       6: areturn

  public static org.apache.hadoop.fs.FileContext getFileContext(java.net.URI) throws org.apache.hadoop.fs.UnsupportedFileSystemException;
    Code:
       0: aload_0
       1: new           #70                 // class org/apache/hadoop/conf/Configuration
       4: dup
       5: invokespecial #71                 // Method org/apache/hadoop/conf/Configuration."<init>":()V
       8: invokestatic  #76                 // Method getFileContext:(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileContext;
      11: areturn

  public static org.apache.hadoop.fs.FileContext getFileContext(java.net.URI, org.apache.hadoop.conf.Configuration) throws org.apache.hadoop.fs.UnsupportedFileSystemException;
    Code:
       0: aconst_null
       1: astore_2
       2: aconst_null
       3: astore_3
       4: aload_0
       5: invokevirtual #77                 // Method java/net/URI.getScheme:()Ljava/lang/String;
       8: ifnonnull     16
      11: aload_1
      12: invokestatic  #73                 // Method getFileContext:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileContext;
      15: areturn
      16: invokestatic  #10                 // Method org/apache/hadoop/security/UserGroupInformation.getCurrentUser:()Lorg/apache/hadoop/security/UserGroupInformation;
      19: astore_2
      20: aload_2
      21: aload_0
      22: aload_1
      23: invokestatic  #58                 // Method getAbstractFileSystem:(Lorg/apache/hadoop/security/UserGroupInformation;Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/AbstractFileSystem;
      26: astore_3
      27: goto          60
      30: astore        4
      32: aload         4
      34: athrow
      35: astore        4
      37: getstatic     #13                 // Field LOG:Lorg/slf4j/Logger;
      40: aload         4
      42: invokevirtual #79                 // Method java/io/IOException.toString:()Ljava/lang/String;
      45: invokeinterface #66,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
      50: new           #16                 // class java/lang/RuntimeException
      53: dup
      54: aload         4
      56: invokespecial #80                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      59: athrow
      60: aload_3
      61: aload_1
      62: invokestatic  #72                 // Method getFileContext:(Lorg/apache/hadoop/fs/AbstractFileSystem;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileContext;
      65: areturn
    Exception table:
       from    to  target type
          16    27    30   Class org/apache/hadoop/fs/UnsupportedFileSystemException
          16    27    35   Class java/io/IOException

  public static org.apache.hadoop.fs.FileContext getFileContext(org.apache.hadoop.conf.Configuration) throws org.apache.hadoop.fs.UnsupportedFileSystemException;
    Code:
       0: aload_0
       1: ldc           #81                 // String fs.defaultFS
       3: ldc           #82                 // String file:///
       5: invokevirtual #83                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: invokestatic  #84                 // Method java/net/URI.create:(Ljava/lang/String;)Ljava/net/URI;
      11: astore_1
      12: aload_1
      13: invokevirtual #77                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      16: ifnull        38
      19: aload_1
      20: invokevirtual #77                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      23: invokevirtual #85                 // Method java/lang/String.trim:()Ljava/lang/String;
      26: invokevirtual #86                 // Method java/lang/String.isEmpty:()Z
      29: ifne          38
      32: aload_1
      33: aload_0
      34: invokestatic  #76                 // Method getFileContext:(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileContext;
      37: areturn
      38: new           #78                 // class org/apache/hadoop/fs/UnsupportedFileSystemException
      41: dup
      42: ldc           #87                 // String %s: URI configured via %s carries no scheme
      44: iconst_2
      45: anewarray     #88                 // class java/lang/Object
      48: dup
      49: iconst_0
      50: aload_1
      51: aastore
      52: dup
      53: iconst_1
      54: ldc           #81                 // String fs.defaultFS
      56: aastore
      57: invokestatic  #89                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      60: invokespecial #90                 // Method org/apache/hadoop/fs/UnsupportedFileSystemException."<init>":(Ljava/lang/String;)V
      63: athrow

  public static org.apache.hadoop.fs.FileContext getLocalFSFileContext(org.apache.hadoop.conf.Configuration) throws org.apache.hadoop.fs.UnsupportedFileSystemException;
    Code:
       0: getstatic     #74                 // Field org/apache/hadoop/fs/FsConstants.LOCAL_FS_URI:Ljava/net/URI;
       3: aload_0
       4: invokestatic  #76                 // Method getFileContext:(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileContext;
       7: areturn

  public org.apache.hadoop.fs.AbstractFileSystem getDefaultFileSystem();
    Code:
       0: aload_0
       1: getfield      #7                  // Field defaultFS:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: areturn

  public void setWorkingDirectory(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #53                 // Method org/apache/hadoop/fs/Path.checkNotSchemeWithRelative:()V
       4: new           #32                 // class org/apache/hadoop/fs/Path
       7: dup
       8: aload_0
       9: getfield      #20                 // Field workingDir:Lorg/apache/hadoop/fs/Path;
      12: aload_1
      13: invokespecial #33                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
      16: astore_2
      17: aload_0
      18: aload_2
      19: invokevirtual #91                 // Method getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      22: astore_3
      23: aload_3
      24: invokevirtual #92                 // Method org/apache/hadoop/fs/FileStatus.isFile:()Z
      27: ifeq          40
      30: new           #93                 // class java/io/FileNotFoundException
      33: dup
      34: ldc           #94                 // String Cannot setWD to a file
      36: invokespecial #95                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_0
      41: aload_2
      42: putfield      #20                 // Field workingDir:Lorg/apache/hadoop/fs/Path;
      45: return

  public org.apache.hadoop.fs.Path getWorkingDirectory();
    Code:
       0: aload_0
       1: getfield      #20                 // Field workingDir:Lorg/apache/hadoop/fs/Path;
       4: areturn

  public org.apache.hadoop.security.UserGroupInformation getUgi();
    Code:
       0: aload_0
       1: getfield      #11                 // Field ugi:Lorg/apache/hadoop/security/UserGroupInformation;
       4: areturn

  public org.apache.hadoop.fs.Path getHomeDirectory();
    Code:
       0: aload_0
       1: getfield      #7                  // Field defaultFS:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: invokevirtual #21                 // Method org/apache/hadoop/fs/AbstractFileSystem.getHomeDirectory:()Lorg/apache/hadoop/fs/Path;
       7: areturn

  public org.apache.hadoop.fs.permission.FsPermission getUMask();
    Code:
       0: aload_0
       1: getfield      #96                 // Field umask:Lorg/apache/hadoop/fs/permission/FsPermission;
       4: ifnull        14
       7: aload_0
       8: getfield      #96                 // Field umask:Lorg/apache/hadoop/fs/permission/FsPermission;
      11: goto          21
      14: aload_0
      15: getfield      #2                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      18: invokestatic  #97                 // Method org/apache/hadoop/fs/permission/FsPermission.getUMask:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/permission/FsPermission;
      21: areturn

  public void setUMask(org.apache.hadoop.fs.permission.FsPermission);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #96                 // Field umask:Lorg/apache/hadoop/fs/permission/FsPermission;
       5: return

  public org.apache.hadoop.fs.Path resolvePath(org.apache.hadoop.fs.Path) throws java.io.FileNotFoundException, org.apache.hadoop.fs.UnresolvedLinkException, org.apache.hadoop.security.AccessControlException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #98                 // Method resolve:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: areturn

  public org.apache.hadoop.fs.Path makeQualified(org.apache.hadoop.fs.Path);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #7                  // Field defaultFS:Lorg/apache/hadoop/fs/AbstractFileSystem;
       5: invokevirtual #99                 // Method org/apache/hadoop/fs/AbstractFileSystem.getUri:()Ljava/net/URI;
       8: aload_0
       9: invokevirtual #100                // Method getWorkingDirectory:()Lorg/apache/hadoop/fs/Path;
      12: invokevirtual #101                // Method org/apache/hadoop/fs/Path.makeQualified:(Ljava/net/URI;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      15: areturn

  public org.apache.hadoop.fs.FSDataOutputStream create(org.apache.hadoop.fs.Path, java.util.EnumSet<org.apache.hadoop.fs.CreateFlag>, org.apache.hadoop.fs.Options$CreateOpts...) throws org.apache.hadoop.security.AccessControlException, org.apache.hadoop.fs.FileAlreadyExistsException, java.io.FileNotFoundException, org.apache.hadoop.fs.ParentNotDirectoryException, org.apache.hadoop.fs.UnsupportedFileSystemException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #102                // Method fixRelativePart:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: astore        4
       7: ldc           #103                // class org/apache/hadoop/fs/Options$CreateOpts$Perms
       9: aload_3
      10: invokestatic  #104                // Method org/apache/hadoop/fs/Options$CreateOpts.getOpt:(Ljava/lang/Class;[Lorg/apache/hadoop/fs/Options$CreateOpts;)Lorg/apache/hadoop/fs/Options$CreateOpts;
      13: checkcast     #103                // class org/apache/hadoop/fs/Options$CreateOpts$Perms
      16: astore        5
      18: aload         5
      20: ifnull        31
      23: aload         5
      25: invokevirtual #105                // Method org/apache/hadoop/fs/Options$CreateOpts$Perms.getValue:()Lorg/apache/hadoop/fs/permission/FsPermission;
      28: goto          34
      31: getstatic     #106                // Field FILE_DEFAULT_PERM:Lorg/apache/hadoop/fs/permission/FsPermission;
      34: astore        6
      36: aload         6
      38: aload_0
      39: invokevirtual #107                // Method getUMask:()Lorg/apache/hadoop/fs/permission/FsPermission;
      42: invokestatic  #108                // Method org/apache/hadoop/fs/permission/FsCreateModes.applyUMask:(Lorg/apache/hadoop/fs/permission/FsPermission;Lorg/apache/hadoop/fs/permission/FsPermission;)Lorg/apache/hadoop/fs/permission/FsPermission;
      45: astore        6
      47: aload         6
      49: invokestatic  #109                // Method org/apache/hadoop/fs/Options$CreateOpts.perms:(Lorg/apache/hadoop/fs/permission/FsPermission;)Lorg/apache/hadoop/fs/Options$CreateOpts$Perms;
      52: aload_3
      53: invokestatic  #110                // Method org/apache/hadoop/fs/Options$CreateOpts.setOpt:(Lorg/apache/hadoop/fs/Options$CreateOpts;[Lorg/apache/hadoop/fs/Options$CreateOpts;)[Lorg/apache/hadoop/fs/Options$CreateOpts;
      56: astore        7
      58: new           #111                // class org/apache/hadoop/fs/FileContext$3
      61: dup
      62: aload_0
      63: aload_2
      64: aload         7
      66: invokespecial #112                // Method org/apache/hadoop/fs/FileContext$3."<init>":(Lorg/apache/hadoop/fs/FileContext;Ljava/util/EnumSet;[Lorg/apache/hadoop/fs/Options$CreateOpts;)V
      69: aload_0
      70: aload         4
      72: invokevirtual #113                // Method org/apache/hadoop/fs/FileContext$3.resolve:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Object;
      75: checkcast     #114                // class org/apache/hadoop/fs/FSDataOutputStream
      78: areturn

  public org.apache.hadoop.fs.FSDataOutputStreamBuilder<org.apache.hadoop.fs.FSDataOutputStream, ?> create(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #115                // class org/apache/hadoop/fs/FileContext$FCDataOutputStreamBuilder
       3: dup
       4: aload_0
       5: aload_1
       6: aconst_null
       7: invokespecial #116                // Method org/apache/hadoop/fs/FileContext$FCDataOutputStreamBuilder."<init>":(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileContext$1;)V
      10: invokevirtual #117                // Method org/apache/hadoop/fs/FileContext$FCDataOutputStreamBuilder.create:()Lorg/apache/hadoop/fs/FSDataOutputStreamBuilder;
      13: areturn

  public void mkdir(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission, boolean) throws org.apache.hadoop.security.AccessControlException, org.apache.hadoop.fs.FileAlreadyExistsException, java.io.FileNotFoundException, org.apache.hadoop.fs.ParentNotDirectoryException, org.apache.hadoop.fs.UnsupportedFileSystemException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #102                // Method fixRelativePart:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: astore        4
       7: aload_2
       8: ifnonnull     17
      11: invokestatic  #118                // Method org/apache/hadoop/fs/permission/FsPermission.getDirDefault:()Lorg/apache/hadoop/fs/permission/FsPermission;
      14: goto          18
      17: aload_2
      18: aload_0
      19: invokevirtual #107                // Method getUMask:()Lorg/apache/hadoop/fs/permission/FsPermission;
      22: invokestatic  #108                // Method org/apache/hadoop/fs/permission/FsCreateModes.applyUMask:(Lorg/apache/hadoop/fs/permission/FsPermission;Lorg/apache/hadoop/fs/permission/FsPermission;)Lorg/apache/hadoop/fs/permission/FsPermission;
      25: astore        5
      27: new           #119                // class org/apache/hadoop/fs/FileContext$4
      30: dup
      31: aload_0
      32: aload         5
      34: iload_3
      35: invokespecial #120                // Method org/apache/hadoop/fs/FileContext$4."<init>":(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/permission/FsPermission;Z)V
      38: aload_0
      39: aload         4
      41: invokevirtual #121                // Method org/apache/hadoop/fs/FileContext$4.resolve:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Object;
      44: pop
      45: return

  public boolean delete(org.apache.hadoop.fs.Path, boolean) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnsupportedFileSystemException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #102                // Method fixRelativePart:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: astore_3
       6: new           #122                // class org/apache/hadoop/fs/FileContext$5
       9: dup
      10: aload_0
      11: iload_2
      12: invokespecial #123                // Method org/apache/hadoop/fs/FileContext$5."<init>":(Lorg/apache/hadoop/fs/FileContext;Z)V
      15: aload_0
      16: aload_3
      17: invokevirtual #124                // Method org/apache/hadoop/fs/FileContext$5.resolve:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Object;
      20: checkcast     #125                // class java/lang/Boolean
      23: invokevirtual #126                // Method java/lang/Boolean.booleanValue:()Z
      26: ireturn

  public org.apache.hadoop.fs.FSDataInputStream open(org.apache.hadoop.fs.Path) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnsupportedFileSystemException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #102                // Method fixRelativePart:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: astore_2
       6: new           #127                // class org/apache/hadoop/fs/FileContext$6
       9: dup
      10: aload_0
      11: invokespecial #128                // Method org/apache/hadoop/fs/FileContext$6."<init>":(Lorg/apache/hadoop/fs/FileContext;)V
      14: aload_0
      15: aload_2
      16: invokevirtual #129                // Method org/apache/hadoop/fs/FileContext$6.resolve:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Object;
      19: checkcast     #130                // class org/apache/hadoop/fs/FSDataInputStream
      22: areturn

  public org.apache.hadoop.fs.FSDataInputStream open(org.apache.hadoop.fs.Path, int) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnsupportedFileSystemException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #102                // Method fixRelativePart:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: astore_3
       6: new           #131                // class org/apache/hadoop/fs/FileContext$7
       9: dup
      10: aload_0
      11: iload_2
      12: invokespecial #132                // Method org/apache/hadoop/fs/FileContext$7."<init>":(Lorg/apache/hadoop/fs/FileContext;I)V
      15: aload_0
      16: aload_3
      17: invokevirtual #133                // Method org/apache/hadoop/fs/FileContext$7.resolve:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Object;
      20: checkcast     #130                // class org/apache/hadoop/fs/FSDataInputStream
      23: areturn

  public boolean truncate(org.apache.hadoop.fs.Path, long) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnsupportedFileSystemException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #102                // Method fixRelativePart:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: astore        4
       7: new           #134                // class org/apache/hadoop/fs/FileContext$8
      10: dup
      11: aload_0
      12: lload_2
      13: invokespecial #135                // Method org/apache/hadoop/fs/FileContext$8."<init>":(Lorg/apache/hadoop/fs/FileContext;J)V
      16: aload_0
      17: aload         4
      19: invokevirtual #136                // Method org/apache/hadoop/fs/FileContext$8.resolve:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Object;
      22: checkcast     #125                // class java/lang/Boolean
      25: invokevirtual #126                // Method java/lang/Boolean.booleanValue:()Z
      28: ireturn

  public boolean setReplication(org.apache.hadoop.fs.Path, short) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #102                // Method fixRelativePart:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: astore_3
       6: new           #137                // class org/apache/hadoop/fs/FileContext$9
       9: dup
      10: aload_0
      11: iload_2
      12: invokespecial #138                // Method org/apache/hadoop/fs/FileContext$9."<init>":(Lorg/apache/hadoop/fs/FileContext;S)V
      15: aload_0
      16: aload_3
      17: invokevirtual #139                // Method org/apache/hadoop/fs/FileContext$9.resolve:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Object;
      20: checkcast     #125                // class java/lang/Boolean
      23: invokevirtual #126                // Method java/lang/Boolean.booleanValue:()Z
      26: ireturn

  public void rename(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Options$Rename...) throws org.apache.hadoop.security.AccessControlException, org.apache.hadoop.fs.FileAlreadyExistsException, java.io.FileNotFoundException, org.apache.hadoop.fs.ParentNotDirectoryException, org.apache.hadoop.fs.UnsupportedFileSystemException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #102                // Method fixRelativePart:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: astore        4
       7: aload_0
       8: aload_2
       9: invokevirtual #102                // Method fixRelativePart:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      12: astore        5
      14: aload_0
      15: aload         4
      17: invokevirtual #140                // Method getFSofPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/AbstractFileSystem;
      20: astore        6
      22: aload_0
      23: aload         5
      25: invokevirtual #140                // Method getFSofPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/AbstractFileSystem;
      28: astore        7
      30: aload         6
      32: invokevirtual #99                 // Method org/apache/hadoop/fs/AbstractFileSystem.getUri:()Ljava/net/URI;
      35: aload         7
      37: invokevirtual #99                 // Method org/apache/hadoop/fs/AbstractFileSystem.getUri:()Ljava/net/URI;
      40: invokevirtual #141                // Method java/net/URI.equals:(Ljava/lang/Object;)Z
      43: ifne          56
      46: new           #12                 // class java/io/IOException
      49: dup
      50: ldc           #142                // String Renames across AbstractFileSystems not supported
      52: invokespecial #143                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: aload         6
      58: aload         4
      60: aload         5
      62: aload_3
      63: invokevirtual #144                // Method org/apache/hadoop/fs/AbstractFileSystem.rename:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;[Lorg/apache/hadoop/fs/Options$Rename;)V
      66: goto          97
      69: astore        8
      71: aload_0
      72: aload         4
      74: invokevirtual #146                // Method resolveIntermediate:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      77: astore        9
      79: new           #147                // class org/apache/hadoop/fs/FileContext$10
      82: dup
      83: aload_0
      84: aload         9
      86: aload_3
      87: invokespecial #148                // Method org/apache/hadoop/fs/FileContext$10."<init>":(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;[Lorg/apache/hadoop/fs/Options$Rename;)V
      90: aload_0
      91: aload         5
      93: invokevirtual #149                // Method org/apache/hadoop/fs/FileContext$10.resolve:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Object;
      96: pop
      97: return
    Exception table:
       from    to  target type
          56    66    69   Class org/apache/hadoop/fs/UnresolvedLinkException

  public void setPermission(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnsupportedFileSystemException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #102                // Method fixRelativePart:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: astore_3
       6: new           #150                // class org/apache/hadoop/fs/FileContext$11
       9: dup
      10: aload_0
      11: aload_2
      12: invokespecial #151                // Method org/apache/hadoop/fs/FileContext$11."<init>":(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/permission/FsPermission;)V
      15: aload_0
      16: aload_3
      17: invokevirtual #152                // Method org/apache/hadoop/fs/FileContext$11.resolve:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Object;
      20: pop
      21: return

  public void setOwner(org.apache.hadoop.fs.Path, java.lang.String, java.lang.String) throws org.apache.hadoop.security.AccessControlException, org.apache.hadoop.fs.UnsupportedFileSystemException, java.io.FileNotFoundException, java.io.IOException;
    Code:
       0: aload_2
       1: ifnonnull     18
       4: aload_3
       5: ifnonnull     18
       8: new           #153                // class org/apache/hadoop/HadoopIllegalArgumentException
      11: dup
      12: ldc           #154                // String username and groupname cannot both be null
      14: invokespecial #155                // Method org/apache/hadoop/HadoopIllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: invokevirtual #102                // Method fixRelativePart:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      23: astore        4
      25: new           #156                // class org/apache/hadoop/fs/FileContext$12
      28: dup
      29: aload_0
      30: aload_2
      31: aload_3
      32: invokespecial #157                // Method org/apache/hadoop/fs/FileContext$12."<init>":(Lorg/apache/hadoop/fs/FileContext;Ljava/lang/String;Ljava/lang/String;)V
      35: aload_0
      36: aload         4
      38: invokevirtual #158                // Method org/apache/hadoop/fs/FileContext$12.resolve:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Object;
      41: pop
      42: return

  public void setTimes(org.apache.hadoop.fs.Path, long, long) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnsupportedFileSystemException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #102                // Method fixRelativePart:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: astore        6
       7: new           #159                // class org/apache/hadoop/fs/FileContext$13
      10: dup
      11: aload_0
      12: lload_2
      13: lload         4
      15: invokespecial #160                // Method org/apache/hadoop/fs/FileContext$13."<init>":(Lorg/apache/hadoop/fs/FileContext;JJ)V
      18: aload_0
      19: aload         6
      21: invokevirtual #161                // Method org/apache/hadoop/fs/FileContext$13.resolve:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Object;
      24: pop
      25: return

  public org.apache.hadoop.fs.FileChecksum getFileChecksum(org.apache.hadoop.fs.Path) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #102                // Method fixRelativePart:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: astore_2
       6: new           #162                // class org/apache/hadoop/fs/FileContext$14
       9: dup
      10: aload_0
      11: invokespecial #163                // Method org/apache/hadoop/fs/FileContext$14."<init>":(Lorg/apache/hadoop/fs/FileContext;)V
      14: aload_0
      15: aload_2
      16: invokevirtual #164                // Method org/apache/hadoop/fs/FileContext$14.resolve:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Object;
      19: checkcast     #165                // class org/apache/hadoop/fs/FileChecksum
      22: areturn

  public void setVerifyChecksum(boolean, org.apache.hadoop.fs.Path) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnsupportedFileSystemException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_2
       3: invokevirtual #102                // Method fixRelativePart:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: invokevirtual #98                 // Method resolve:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       9: astore_3
      10: aload_0
      11: aload_3
      12: invokevirtual #140                // Method getFSofPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/AbstractFileSystem;
      15: iload_1
      16: invokevirtual #166                // Method org/apache/hadoop/fs/AbstractFileSystem.setVerifyChecksum:(Z)V
      19: return

  public org.apache.hadoop.fs.FileStatus getFileStatus(org.apache.hadoop.fs.Path) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnsupportedFileSystemException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #102                // Method fixRelativePart:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: astore_2
       6: new           #167                // class org/apache/hadoop/fs/FileContext$15
       9: dup
      10: aload_0
      11: invokespecial #168                // Method org/apache/hadoop/fs/FileContext$15."<init>":(Lorg/apache/hadoop/fs/FileContext;)V
      14: aload_0
      15: aload_2
      16: invokevirtual #169                // Method org/apache/hadoop/fs/FileContext$15.resolve:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Object;
      19: checkcast     #170                // class org/apache/hadoop/fs/FileStatus
      22: areturn

  public void msync() throws java.io.IOException, java.lang.UnsupportedOperationException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field defaultFS:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: invokevirtual #171                // Method org/apache/hadoop/fs/AbstractFileSystem.msync:()V
       7: return

  public void access(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsAction) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnsupportedFileSystemException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #102                // Method fixRelativePart:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: astore_3
       6: new           #172                // class org/apache/hadoop/fs/FileContext$16
       9: dup
      10: aload_0
      11: aload_2
      12: invokespecial #173                // Method org/apache/hadoop/fs/FileContext$16."<init>":(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/permission/FsAction;)V
      15: aload_0
      16: aload_3
      17: invokevirtual #174                // Method org/apache/hadoop/fs/FileContext$16.resolve:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Object;
      20: pop
      21: return

  public org.apache.hadoop.fs.FileStatus getFileLinkStatus(org.apache.hadoop.fs.Path) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnsupportedFileSystemException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #102                // Method fixRelativePart:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: astore_2
       6: new           #175                // class org/apache/hadoop/fs/FileContext$17
       9: dup
      10: aload_0
      11: invokespecial #176                // Method org/apache/hadoop/fs/FileContext$17."<init>":(Lorg/apache/hadoop/fs/FileContext;)V
      14: aload_0
      15: aload_2
      16: invokevirtual #177                // Method org/apache/hadoop/fs/FileContext$17.resolve:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Object;
      19: checkcast     #170                // class org/apache/hadoop/fs/FileStatus
      22: areturn

  public org.apache.hadoop.fs.Path getLinkTarget(org.apache.hadoop.fs.Path) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnsupportedFileSystemException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #102                // Method fixRelativePart:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: astore_2
       6: new           #178                // class org/apache/hadoop/fs/FileContext$18
       9: dup
      10: aload_0
      11: invokespecial #179                // Method org/apache/hadoop/fs/FileContext$18."<init>":(Lorg/apache/hadoop/fs/FileContext;)V
      14: aload_0
      15: aload_2
      16: invokevirtual #180                // Method org/apache/hadoop/fs/FileContext$18.resolve:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Object;
      19: checkcast     #32                 // class org/apache/hadoop/fs/Path
      22: areturn

  public org.apache.hadoop.fs.BlockLocation[] getFileBlockLocations(org.apache.hadoop.fs.Path, long, long) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnsupportedFileSystemException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #102                // Method fixRelativePart:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: astore        6
       7: new           #181                // class org/apache/hadoop/fs/FileContext$19
      10: dup
      11: aload_0
      12: lload_2
      13: lload         4
      15: invokespecial #182                // Method org/apache/hadoop/fs/FileContext$19."<init>":(Lorg/apache/hadoop/fs/FileContext;JJ)V
      18: aload_0
      19: aload         6
      21: invokevirtual #183                // Method org/apache/hadoop/fs/FileContext$19.resolve:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Object;
      24: checkcast     #184                // class "[Lorg/apache/hadoop/fs/BlockLocation;"
      27: areturn

  public org.apache.hadoop.fs.FsStatus getFsStatus(org.apache.hadoop.fs.Path) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnsupportedFileSystemException, java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     12
       4: aload_0
       5: getfield      #7                  // Field defaultFS:Lorg/apache/hadoop/fs/AbstractFileSystem;
       8: invokevirtual #185                // Method org/apache/hadoop/fs/AbstractFileSystem.getFsStatus:()Lorg/apache/hadoop/fs/FsStatus;
      11: areturn
      12: aload_0
      13: aload_1
      14: invokevirtual #102                // Method fixRelativePart:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      17: astore_2
      18: new           #186                // class org/apache/hadoop/fs/FileContext$20
      21: dup
      22: aload_0
      23: invokespecial #187                // Method org/apache/hadoop/fs/FileContext$20."<init>":(Lorg/apache/hadoop/fs/FileContext;)V
      26: aload_0
      27: aload_2
      28: invokevirtual #188                // Method org/apache/hadoop/fs/FileContext$20.resolve:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Object;
      31: checkcast     #189                // class org/apache/hadoop/fs/FsStatus
      34: areturn

  public void createSymlink(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path, boolean) throws org.apache.hadoop.security.AccessControlException, org.apache.hadoop.fs.FileAlreadyExistsException, java.io.FileNotFoundException, org.apache.hadoop.fs.ParentNotDirectoryException, org.apache.hadoop.fs.UnsupportedFileSystemException, java.io.IOException;
    Code:
       0: invokestatic  #190                // Method org/apache/hadoop/fs/FileSystem.areSymlinksEnabled:()Z
       3: ifne          16
       6: new           #191                // class java/lang/UnsupportedOperationException
       9: dup
      10: ldc           #192                // String Symlinks not supported
      12: invokespecial #193                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: aload_0
      17: aload_2
      18: invokevirtual #102                // Method fixRelativePart:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      21: astore        4
      23: new           #194                // class org/apache/hadoop/fs/FileContext$21
      26: dup
      27: aload_0
      28: aload_1
      29: iload_3
      30: invokespecial #195                // Method org/apache/hadoop/fs/FileContext$21."<init>":(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;Z)V
      33: aload_0
      34: aload         4
      36: invokevirtual #196                // Method org/apache/hadoop/fs/FileContext$21.resolve:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Object;
      39: pop
      40: return

  public org.apache.hadoop.fs.RemoteIterator<org.apache.hadoop.fs.FileStatus> listStatus(org.apache.hadoop.fs.Path) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnsupportedFileSystemException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #102                // Method fixRelativePart:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: astore_2
       6: new           #197                // class org/apache/hadoop/fs/FileContext$22
       9: dup
      10: aload_0
      11: invokespecial #198                // Method org/apache/hadoop/fs/FileContext$22."<init>":(Lorg/apache/hadoop/fs/FileContext;)V
      14: aload_0
      15: aload_2
      16: invokevirtual #199                // Method org/apache/hadoop/fs/FileContext$22.resolve:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Object;
      19: checkcast     #200                // class org/apache/hadoop/fs/RemoteIterator
      22: areturn

  public org.apache.hadoop.fs.RemoteIterator<org.apache.hadoop.fs.Path> listCorruptFileBlocks(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #102                // Method fixRelativePart:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: astore_2
       6: new           #201                // class org/apache/hadoop/fs/FileContext$23
       9: dup
      10: aload_0
      11: invokespecial #202                // Method org/apache/hadoop/fs/FileContext$23."<init>":(Lorg/apache/hadoop/fs/FileContext;)V
      14: aload_0
      15: aload_2
      16: invokevirtual #203                // Method org/apache/hadoop/fs/FileContext$23.resolve:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Object;
      19: checkcast     #200                // class org/apache/hadoop/fs/RemoteIterator
      22: areturn

  public org.apache.hadoop.fs.RemoteIterator<org.apache.hadoop.fs.LocatedFileStatus> listLocatedStatus(org.apache.hadoop.fs.Path) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnsupportedFileSystemException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #102                // Method fixRelativePart:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: astore_2
       6: new           #204                // class org/apache/hadoop/fs/FileContext$24
       9: dup
      10: aload_0
      11: invokespecial #205                // Method org/apache/hadoop/fs/FileContext$24."<init>":(Lorg/apache/hadoop/fs/FileContext;)V
      14: aload_0
      15: aload_2
      16: invokevirtual #206                // Method org/apache/hadoop/fs/FileContext$24.resolve:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Object;
      19: checkcast     #200                // class org/apache/hadoop/fs/RemoteIterator
      22: areturn

  public boolean deleteOnExit(org.apache.hadoop.fs.Path) throws org.apache.hadoop.security.AccessControlException, java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #207                // Method util:()Lorg/apache/hadoop/fs/FileContext$Util;
       4: aload_1
       5: invokevirtual #208                // Method org/apache/hadoop/fs/FileContext$Util.exists:(Lorg/apache/hadoop/fs/Path;)Z
       8: ifne          13
      11: iconst_0
      12: ireturn
      13: getstatic     #34                 // Field DELETE_ON_EXIT:Ljava/util/Map;
      16: dup
      17: astore_2
      18: monitorenter
      19: getstatic     #34                 // Field DELETE_ON_EXIT:Ljava/util/Map;
      22: invokeinterface #209,  1          // InterfaceMethod java/util/Map.isEmpty:()Z
      27: ifeq          41
      30: invokestatic  #210                // Method org/apache/hadoop/util/ShutdownHookManager.get:()Lorg/apache/hadoop/util/ShutdownHookManager;
      33: getstatic     #211                // Field FINALIZER:Lorg/apache/hadoop/fs/FileContext$FileContextFinalizer;
      36: bipush        20
      38: invokevirtual #212                // Method org/apache/hadoop/util/ShutdownHookManager.addShutdownHook:(Ljava/lang/Runnable;I)V
      41: getstatic     #34                 // Field DELETE_ON_EXIT:Ljava/util/Map;
      44: aload_0
      45: invokeinterface #213,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      50: checkcast     #43                 // class java/util/Set
      53: astore_3
      54: aload_3
      55: ifnonnull     77
      58: new           #214                // class java/util/TreeSet
      61: dup
      62: invokespecial #215                // Method java/util/TreeSet."<init>":()V
      65: astore_3
      66: getstatic     #34                 // Field DELETE_ON_EXIT:Ljava/util/Map;
      69: aload_0
      70: aload_3
      71: invokeinterface #216,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      76: pop
      77: aload_3
      78: aload_1
      79: invokeinterface #217,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      84: pop
      85: aload_2
      86: monitorexit
      87: goto          97
      90: astore        4
      92: aload_2
      93: monitorexit
      94: aload         4
      96: athrow
      97: iconst_1
      98: ireturn
    Exception table:
       from    to  target type
          19    87    90   any
          90    94    90   any

  public org.apache.hadoop.fs.FileContext$Util util();
    Code:
       0: aload_0
       1: getfield      #28                 // Field util:Lorg/apache/hadoop/fs/FileContext$Util;
       4: areturn

  private void checkDest(java.lang.String, org.apache.hadoop.fs.Path, boolean) throws org.apache.hadoop.security.AccessControlException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #91                 // Method getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
       5: astore        4
       7: aload         4
       9: invokevirtual #218                // Method org/apache/hadoop/fs/FileStatus.isDirectory:()Z
      12: ifeq          70
      15: aconst_null
      16: aload_1
      17: if_acmpne     52
      20: new           #12                 // class java/io/IOException
      23: dup
      24: new           #45                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #219                // String Target
      33: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_2
      37: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      40: ldc           #220                // String  is a directory
      42: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: invokespecial #143                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: aload_0
      53: aconst_null
      54: new           #32                 // class org/apache/hadoop/fs/Path
      57: dup
      58: aload_2
      59: aload_1
      60: invokespecial #221                // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      63: iload_3
      64: invokespecial #4                  // Method checkDest:(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;Z)V
      67: goto          114
      70: iload_3
      71: ifne          114
      74: new           #12                 // class java/io/IOException
      77: dup
      78: new           #45                 // class java/lang/StringBuilder
      81: dup
      82: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      85: ldc           #219                // String Target
      87: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: new           #32                 // class org/apache/hadoop/fs/Path
      93: dup
      94: aload_2
      95: aload_1
      96: invokespecial #221                // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      99: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     102: ldc           #222                // String  already exists
     104: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     110: invokespecial #143                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     113: athrow
     114: goto          119
     117: astore        4
     119: return
    Exception table:
       from    to  target type
           0   114   117   Class java/io/FileNotFoundException

  private static void checkDependencies(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #223                // Method isSameFS:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
       5: ifeq          141
       8: new           #45                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      15: aload_0
      16: invokevirtual #224                // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
      19: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: ldc           #225                // String /
      24: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: astore_2
      31: new           #45                 // class java/lang/StringBuilder
      34: dup
      35: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      38: aload_1
      39: invokevirtual #224                // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
      42: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: ldc           #225                // String /
      47: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: astore_3
      54: aload_3
      55: aload_2
      56: invokevirtual #226                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      59: ifeq          141
      62: aload_2
      63: invokevirtual #227                // Method java/lang/String.length:()I
      66: aload_3
      67: invokevirtual #227                // Method java/lang/String.length:()I
      70: if_icmpne     105
      73: new           #12                 // class java/io/IOException
      76: dup
      77: new           #45                 // class java/lang/StringBuilder
      80: dup
      81: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      84: ldc           #228                // String Cannot copy
      86: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: aload_0
      90: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      93: ldc           #229                // String  to itself.
      95: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     101: invokespecial #143                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     104: athrow
     105: new           #12                 // class java/io/IOException
     108: dup
     109: new           #45                 // class java/lang/StringBuilder
     112: dup
     113: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
     116: ldc           #228                // String Cannot copy
     118: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: aload_0
     122: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     125: ldc           #230                // String  to its subdirectory
     127: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     130: aload_1
     131: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     134: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     137: invokespecial #143                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     140: athrow
     141: return

  private static boolean isSameFS(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
       4: astore_2
       5: aload_1
       6: invokevirtual #57                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
       9: astore_3
      10: aload_2
      11: invokevirtual #77                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      14: aload_3
      15: invokevirtual #77                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      18: invokevirtual #231                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      21: ifeq          56
      24: aload_2
      25: invokevirtual #232                // Method java/net/URI.getAuthority:()Ljava/lang/String;
      28: ifnull        52
      31: aload_3
      32: invokevirtual #232                // Method java/net/URI.getAuthority:()Ljava/lang/String;
      35: ifnull        52
      38: aload_2
      39: invokevirtual #232                // Method java/net/URI.getAuthority:()Ljava/lang/String;
      42: aload_3
      43: invokevirtual #232                // Method java/net/URI.getAuthority:()Ljava/lang/String;
      46: invokevirtual #231                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      49: ifne          56
      52: iconst_1
      53: goto          57
      56: iconst_0
      57: ireturn

  protected org.apache.hadoop.fs.Path resolve(org.apache.hadoop.fs.Path) throws java.io.FileNotFoundException, org.apache.hadoop.fs.UnresolvedLinkException, org.apache.hadoop.security.AccessControlException, java.io.IOException;
    Code:
       0: new           #233                // class org/apache/hadoop/fs/FileContext$25
       3: dup
       4: aload_0
       5: invokespecial #234                // Method org/apache/hadoop/fs/FileContext$25."<init>":(Lorg/apache/hadoop/fs/FileContext;)V
       8: aload_0
       9: aload_1
      10: invokevirtual #235                // Method org/apache/hadoop/fs/FileContext$25.resolve:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Object;
      13: checkcast     #32                 // class org/apache/hadoop/fs/Path
      16: areturn

  protected org.apache.hadoop.fs.Path resolveIntermediate(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #236                // class org/apache/hadoop/fs/FileContext$26
       3: dup
       4: aload_0
       5: invokespecial #237                // Method org/apache/hadoop/fs/FileContext$26."<init>":(Lorg/apache/hadoop/fs/FileContext;)V
       8: aload_0
       9: aload_1
      10: invokevirtual #238                // Method org/apache/hadoop/fs/FileContext$26.resolve:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Object;
      13: checkcast     #170                // class org/apache/hadoop/fs/FileStatus
      16: invokevirtual #239                // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
      19: areturn

  java.util.Set<org.apache.hadoop.fs.AbstractFileSystem> resolveAbstractFileSystems(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #102                // Method fixRelativePart:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: astore_2
       6: new           #240                // class java/util/HashSet
       9: dup
      10: invokespecial #241                // Method java/util/HashSet."<init>":()V
      13: astore_3
      14: new           #242                // class org/apache/hadoop/fs/FileContext$27
      17: dup
      18: aload_0
      19: aload_3
      20: invokespecial #243                // Method org/apache/hadoop/fs/FileContext$27."<init>":(Lorg/apache/hadoop/fs/FileContext;Ljava/util/HashSet;)V
      23: aload_0
      24: aload_2
      25: invokevirtual #244                // Method org/apache/hadoop/fs/FileContext$27.resolve:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Object;
      28: pop
      29: aload_3
      30: areturn

  public static org.apache.hadoop.fs.FileSystem$Statistics getStatistics(java.net.URI);
    Code:
       0: aload_0
       1: invokestatic  #245                // Method org/apache/hadoop/fs/AbstractFileSystem.getStatistics:(Ljava/net/URI;)Lorg/apache/hadoop/fs/FileSystem$Statistics;
       4: areturn

  public static void clearStatistics();
    Code:
       0: invokestatic  #246                // Method org/apache/hadoop/fs/AbstractFileSystem.clearStatistics:()V
       3: return

  public static void printStatistics();
    Code:
       0: invokestatic  #247                // Method org/apache/hadoop/fs/AbstractFileSystem.printStatistics:()V
       3: return

  public static java.util.Map<java.net.URI, org.apache.hadoop.fs.FileSystem$Statistics> getAllStatistics();
    Code:
       0: invokestatic  #248                // Method org/apache/hadoop/fs/AbstractFileSystem.getAllStatistics:()Ljava/util/Map;
       3: areturn

  public java.util.List<org.apache.hadoop.security.token.Token<?>> getDelegationTokens(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #249                // Method resolveAbstractFileSystems:(Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;
       5: astore_3
       6: new           #250                // class java/util/ArrayList
       9: dup
      10: invokespecial #251                // Method java/util/ArrayList."<init>":()V
      13: astore        4
      15: aload_3
      16: invokeinterface #36,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      21: astore        5
      23: aload         5
      25: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          66
      33: aload         5
      35: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #62                 // class org/apache/hadoop/fs/AbstractFileSystem
      43: astore        6
      45: aload         6
      47: aload_2
      48: invokevirtual #252                // Method org/apache/hadoop/fs/AbstractFileSystem.getDelegationTokens:(Ljava/lang/String;)Ljava/util/List;
      51: astore        7
      53: aload         4
      55: aload         7
      57: invokeinterface #253,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      62: pop
      63: goto          23
      66: aload         4
      68: areturn

  public void modifyAclEntries(org.apache.hadoop.fs.Path, java.util.List<org.apache.hadoop.fs.permission.AclEntry>) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #102                // Method fixRelativePart:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: astore_3
       6: new           #254                // class org/apache/hadoop/fs/FileContext$28
       9: dup
      10: aload_0
      11: aload_2
      12: invokespecial #255                // Method org/apache/hadoop/fs/FileContext$28."<init>":(Lorg/apache/hadoop/fs/FileContext;Ljava/util/List;)V
      15: aload_0
      16: aload_3
      17: invokevirtual #256                // Method org/apache/hadoop/fs/FileContext$28.resolve:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Object;
      20: pop
      21: return

  public void removeAclEntries(org.apache.hadoop.fs.Path, java.util.List<org.apache.hadoop.fs.permission.AclEntry>) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #102                // Method fixRelativePart:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: astore_3
       6: new           #257                // class org/apache/hadoop/fs/FileContext$29
       9: dup
      10: aload_0
      11: aload_2
      12: invokespecial #258                // Method org/apache/hadoop/fs/FileContext$29."<init>":(Lorg/apache/hadoop/fs/FileContext;Ljava/util/List;)V
      15: aload_0
      16: aload_3
      17: invokevirtual #259                // Method org/apache/hadoop/fs/FileContext$29.resolve:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Object;
      20: pop
      21: return

  public void removeDefaultAcl(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #102                // Method fixRelativePart:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: astore_2
       6: new           #260                // class org/apache/hadoop/fs/FileContext$30
       9: dup
      10: aload_0
      11: invokespecial #261                // Method org/apache/hadoop/fs/FileContext$30."<init>":(Lorg/apache/hadoop/fs/FileContext;)V
      14: aload_0
      15: aload_2
      16: invokevirtual #262                // Method org/apache/hadoop/fs/FileContext$30.resolve:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Object;
      19: pop
      20: return

  public void removeAcl(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #102                // Method fixRelativePart:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: astore_2
       6: new           #263                // class org/apache/hadoop/fs/FileContext$31
       9: dup
      10: aload_0
      11: invokespecial #264                // Method org/apache/hadoop/fs/FileContext$31."<init>":(Lorg/apache/hadoop/fs/FileContext;)V
      14: aload_0
      15: aload_2
      16: invokevirtual #265                // Method org/apache/hadoop/fs/FileContext$31.resolve:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Object;
      19: pop
      20: return

  public void setAcl(org.apache.hadoop.fs.Path, java.util.List<org.apache.hadoop.fs.permission.AclEntry>) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #102                // Method fixRelativePart:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: astore_3
       6: new           #266                // class org/apache/hadoop/fs/FileContext$32
       9: dup
      10: aload_0
      11: aload_2
      12: invokespecial #267                // Method org/apache/hadoop/fs/FileContext$32."<init>":(Lorg/apache/hadoop/fs/FileContext;Ljava/util/List;)V
      15: aload_0
      16: aload_3
      17: invokevirtual #268                // Method org/apache/hadoop/fs/FileContext$32.resolve:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Object;
      20: pop
      21: return

  public org.apache.hadoop.fs.permission.AclStatus getAclStatus(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #102                // Method fixRelativePart:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: astore_2
       6: new           #269                // class org/apache/hadoop/fs/FileContext$33
       9: dup
      10: aload_0
      11: invokespecial #270                // Method org/apache/hadoop/fs/FileContext$33."<init>":(Lorg/apache/hadoop/fs/FileContext;)V
      14: aload_0
      15: aload_2
      16: invokevirtual #271                // Method org/apache/hadoop/fs/FileContext$33.resolve:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Object;
      19: checkcast     #272                // class org/apache/hadoop/fs/permission/AclStatus
      22: areturn

  public void setXAttr(org.apache.hadoop.fs.Path, java.lang.String, byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: getstatic     #273                // Field org/apache/hadoop/fs/XAttrSetFlag.CREATE:Lorg/apache/hadoop/fs/XAttrSetFlag;
       7: getstatic     #274                // Field org/apache/hadoop/fs/XAttrSetFlag.REPLACE:Lorg/apache/hadoop/fs/XAttrSetFlag;
      10: invokestatic  #275                // Method java/util/EnumSet.of:(Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/util/EnumSet;
      13: invokevirtual #276                // Method setXAttr:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;[BLjava/util/EnumSet;)V
      16: return

  public void setXAttr(org.apache.hadoop.fs.Path, java.lang.String, byte[], java.util.EnumSet<org.apache.hadoop.fs.XAttrSetFlag>) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #102                // Method fixRelativePart:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: astore        5
       7: new           #277                // class org/apache/hadoop/fs/FileContext$34
      10: dup
      11: aload_0
      12: aload_2
      13: aload_3
      14: aload         4
      16: invokespecial #278                // Method org/apache/hadoop/fs/FileContext$34."<init>":(Lorg/apache/hadoop/fs/FileContext;Ljava/lang/String;[BLjava/util/EnumSet;)V
      19: aload_0
      20: aload         5
      22: invokevirtual #279                // Method org/apache/hadoop/fs/FileContext$34.resolve:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Object;
      25: pop
      26: return

  public byte[] getXAttr(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #102                // Method fixRelativePart:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: astore_3
       6: new           #280                // class org/apache/hadoop/fs/FileContext$35
       9: dup
      10: aload_0
      11: aload_2
      12: invokespecial #281                // Method org/apache/hadoop/fs/FileContext$35."<init>":(Lorg/apache/hadoop/fs/FileContext;Ljava/lang/String;)V
      15: aload_0
      16: aload_3
      17: invokevirtual #282                // Method org/apache/hadoop/fs/FileContext$35.resolve:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Object;
      20: checkcast     #283                // class "[B"
      23: areturn

  public java.util.Map<java.lang.String, byte[]> getXAttrs(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #102                // Method fixRelativePart:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: astore_2
       6: new           #284                // class org/apache/hadoop/fs/FileContext$36
       9: dup
      10: aload_0
      11: invokespecial #285                // Method org/apache/hadoop/fs/FileContext$36."<init>":(Lorg/apache/hadoop/fs/FileContext;)V
      14: aload_0
      15: aload_2
      16: invokevirtual #286                // Method org/apache/hadoop/fs/FileContext$36.resolve:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Object;
      19: checkcast     #287                // class java/util/Map
      22: areturn

  public java.util.Map<java.lang.String, byte[]> getXAttrs(org.apache.hadoop.fs.Path, java.util.List<java.lang.String>) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #102                // Method fixRelativePart:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: astore_3
       6: new           #288                // class org/apache/hadoop/fs/FileContext$37
       9: dup
      10: aload_0
      11: aload_2
      12: invokespecial #289                // Method org/apache/hadoop/fs/FileContext$37."<init>":(Lorg/apache/hadoop/fs/FileContext;Ljava/util/List;)V
      15: aload_0
      16: aload_3
      17: invokevirtual #290                // Method org/apache/hadoop/fs/FileContext$37.resolve:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Object;
      20: checkcast     #287                // class java/util/Map
      23: areturn

  public void removeXAttr(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #102                // Method fixRelativePart:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: astore_3
       6: new           #291                // class org/apache/hadoop/fs/FileContext$38
       9: dup
      10: aload_0
      11: aload_2
      12: invokespecial #292                // Method org/apache/hadoop/fs/FileContext$38."<init>":(Lorg/apache/hadoop/fs/FileContext;Ljava/lang/String;)V
      15: aload_0
      16: aload_3
      17: invokevirtual #293                // Method org/apache/hadoop/fs/FileContext$38.resolve:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Object;
      20: pop
      21: return

  public java.util.List<java.lang.String> listXAttrs(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #102                // Method fixRelativePart:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: astore_2
       6: new           #294                // class org/apache/hadoop/fs/FileContext$39
       9: dup
      10: aload_0
      11: invokespecial #295                // Method org/apache/hadoop/fs/FileContext$39."<init>":(Lorg/apache/hadoop/fs/FileContext;)V
      14: aload_0
      15: aload_2
      16: invokevirtual #296                // Method org/apache/hadoop/fs/FileContext$39.resolve:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Object;
      19: checkcast     #297                // class java/util/List
      22: areturn

  public final org.apache.hadoop.fs.Path createSnapshot(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #298                // Method createSnapshot:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
       6: areturn

  public org.apache.hadoop.fs.Path createSnapshot(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #102                // Method fixRelativePart:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: astore_3
       6: new           #299                // class org/apache/hadoop/fs/FileContext$40
       9: dup
      10: aload_0
      11: aload_2
      12: invokespecial #300                // Method org/apache/hadoop/fs/FileContext$40."<init>":(Lorg/apache/hadoop/fs/FileContext;Ljava/lang/String;)V
      15: aload_0
      16: aload_3
      17: invokevirtual #301                // Method org/apache/hadoop/fs/FileContext$40.resolve:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Object;
      20: checkcast     #32                 // class org/apache/hadoop/fs/Path
      23: areturn

  public void renameSnapshot(org.apache.hadoop.fs.Path, java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #102                // Method fixRelativePart:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: astore        4
       7: new           #302                // class org/apache/hadoop/fs/FileContext$41
      10: dup
      11: aload_0
      12: aload_2
      13: aload_3
      14: invokespecial #303                // Method org/apache/hadoop/fs/FileContext$41."<init>":(Lorg/apache/hadoop/fs/FileContext;Ljava/lang/String;Ljava/lang/String;)V
      17: aload_0
      18: aload         4
      20: invokevirtual #304                // Method org/apache/hadoop/fs/FileContext$41.resolve:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Object;
      23: pop
      24: return

  public void deleteSnapshot(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #102                // Method fixRelativePart:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: astore_3
       6: new           #305                // class org/apache/hadoop/fs/FileContext$42
       9: dup
      10: aload_0
      11: aload_2
      12: invokespecial #306                // Method org/apache/hadoop/fs/FileContext$42."<init>":(Lorg/apache/hadoop/fs/FileContext;Ljava/lang/String;)V
      15: aload_0
      16: aload_3
      17: invokevirtual #307                // Method org/apache/hadoop/fs/FileContext$42.resolve:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Object;
      20: pop
      21: return

  public void satisfyStoragePolicy(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #102                // Method fixRelativePart:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: astore_2
       6: new           #308                // class org/apache/hadoop/fs/FileContext$43
       9: dup
      10: aload_0
      11: aload_1
      12: invokespecial #309                // Method org/apache/hadoop/fs/FileContext$43."<init>":(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)V
      15: aload_0
      16: aload_2
      17: invokevirtual #310                // Method org/apache/hadoop/fs/FileContext$43.resolve:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Object;
      20: pop
      21: return

  public void setStoragePolicy(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #102                // Method fixRelativePart:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: astore_3
       6: new           #311                // class org/apache/hadoop/fs/FileContext$44
       9: dup
      10: aload_0
      11: aload_1
      12: aload_2
      13: invokespecial #312                // Method org/apache/hadoop/fs/FileContext$44."<init>":(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      16: aload_0
      17: aload_3
      18: invokevirtual #313                // Method org/apache/hadoop/fs/FileContext$44.resolve:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Object;
      21: pop
      22: return

  public void unsetStoragePolicy(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #102                // Method fixRelativePart:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: astore_2
       6: new           #314                // class org/apache/hadoop/fs/FileContext$45
       9: dup
      10: aload_0
      11: aload_1
      12: invokespecial #315                // Method org/apache/hadoop/fs/FileContext$45."<init>":(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)V
      15: aload_0
      16: aload_2
      17: invokevirtual #316                // Method org/apache/hadoop/fs/FileContext$45.resolve:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Object;
      20: pop
      21: return

  public org.apache.hadoop.fs.BlockStoragePolicySpi getStoragePolicy(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #102                // Method fixRelativePart:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: astore_2
       6: new           #317                // class org/apache/hadoop/fs/FileContext$46
       9: dup
      10: aload_0
      11: invokespecial #318                // Method org/apache/hadoop/fs/FileContext$46."<init>":(Lorg/apache/hadoop/fs/FileContext;)V
      14: aload_0
      15: aload_2
      16: invokevirtual #319                // Method org/apache/hadoop/fs/FileContext$46.resolve:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Object;
      19: checkcast     #320                // class org/apache/hadoop/fs/BlockStoragePolicySpi
      22: areturn

  public java.util.Collection<? extends org.apache.hadoop.fs.BlockStoragePolicySpi> getAllStoragePolicies() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field defaultFS:Lorg/apache/hadoop/fs/AbstractFileSystem;
       4: invokevirtual #321                // Method org/apache/hadoop/fs/AbstractFileSystem.getAllStoragePolicies:()Ljava/util/Collection;
       7: areturn

  org.apache.htrace.core.Tracer getTracer();
    Code:
       0: aload_0
       1: getfield      #9                  // Field tracer:Lorg/apache/htrace/core/Tracer;
       4: areturn

  public boolean hasPathCapability(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #322                // Method org/apache/hadoop/fs/impl/PathCapabilitiesSupport.validatePathCapabilityArgs:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Ljava/lang/String;
       5: pop
       6: aload_0
       7: aload_0
       8: aload_1
       9: invokevirtual #102                // Method fixRelativePart:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      12: aload_2
      13: invokedynamic #323,  0            // InvokeDynamic #0:apply:(Ljava/lang/String;)Lorg/apache/hadoop/fs/impl/FsLinkResolution$FsLinkResolutionFunction;
      18: invokestatic  #324                // Method org/apache/hadoop/fs/impl/FsLinkResolution.resolve:(Lorg/apache/hadoop/fs/FileContext;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/impl/FsLinkResolution$FsLinkResolutionFunction;)Ljava/lang/Object;
      21: checkcast     #125                // class java/lang/Boolean
      24: invokevirtual #126                // Method java/lang/Boolean.booleanValue:()Z
      27: ireturn

  private static java.lang.Boolean lambda$hasPathCapability$0(java.lang.String, org.apache.hadoop.fs.AbstractFileSystem, org.apache.hadoop.fs.Path) throws java.io.IOException, org.apache.hadoop.fs.UnresolvedLinkException;
    Code:
       0: aload_1
       1: aload_2
       2: aload_0
       3: invokevirtual #325                // Method org/apache/hadoop/fs/AbstractFileSystem.hasPathCapability:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Z
       6: invokestatic  #326                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       9: areturn

  static org.apache.hadoop.fs.PathFilter access$100();
    Code:
       0: getstatic     #5                  // Field DEFAULT_FILTER:Lorg/apache/hadoop/fs/PathFilter;
       3: areturn

  static void access$200(org.apache.hadoop.fs.FileContext, java.lang.String, org.apache.hadoop.fs.Path, boolean) throws org.apache.hadoop.security.AccessControlException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokespecial #4                  // Method checkDest:(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;Z)V
       7: return

  static void access$300(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #3                  // Method checkDependencies:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
       5: return

  static org.apache.hadoop.conf.Configuration access$400(org.apache.hadoop.fs.FileContext);
    Code:
       0: aload_0
       1: getfield      #2                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       4: areturn

  static {};
    Code:
       0: ldc           #41                 // class org/apache/hadoop/fs/FileContext
       2: invokestatic  #327                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #13                 // Field LOG:Lorg/slf4j/Logger;
       8: invokestatic  #328                // Method org/apache/hadoop/fs/permission/FsPermission.getDefault:()Lorg/apache/hadoop/fs/permission/FsPermission;
      11: putstatic     #329                // Field DEFAULT_PERM:Lorg/apache/hadoop/fs/permission/FsPermission;
      14: invokestatic  #118                // Method org/apache/hadoop/fs/permission/FsPermission.getDirDefault:()Lorg/apache/hadoop/fs/permission/FsPermission;
      17: putstatic     #330                // Field DIR_DEFAULT_PERM:Lorg/apache/hadoop/fs/permission/FsPermission;
      20: invokestatic  #331                // Method org/apache/hadoop/fs/permission/FsPermission.getFileDefault:()Lorg/apache/hadoop/fs/permission/FsPermission;
      23: putstatic     #106                // Field FILE_DEFAULT_PERM:Lorg/apache/hadoop/fs/permission/FsPermission;
      26: new           #332                // class java/util/IdentityHashMap
      29: dup
      30: invokespecial #333                // Method java/util/IdentityHashMap."<init>":()V
      33: putstatic     #34                 // Field DELETE_ON_EXIT:Ljava/util/Map;
      36: new           #334                // class org/apache/hadoop/fs/FileContext$FileContextFinalizer
      39: dup
      40: invokespecial #335                // Method org/apache/hadoop/fs/FileContext$FileContextFinalizer."<init>":()V
      43: putstatic     #211                // Field FINALIZER:Lorg/apache/hadoop/fs/FileContext$FileContextFinalizer;
      46: new           #336                // class org/apache/hadoop/fs/FileContext$1
      49: dup
      50: invokespecial #337                // Method org/apache/hadoop/fs/FileContext$1."<init>":()V
      53: putstatic     #5                  // Field DEFAULT_FILTER:Lorg/apache/hadoop/fs/PathFilter;
      56: return
}
