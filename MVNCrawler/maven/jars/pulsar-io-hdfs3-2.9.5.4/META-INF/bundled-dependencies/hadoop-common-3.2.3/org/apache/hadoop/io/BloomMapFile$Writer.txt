Compiled from "BloomMapFile.java"
public class org.apache.hadoop.io.BloomMapFile$Writer extends org.apache.hadoop.io.MapFile$Writer {
  private org.apache.hadoop.util.bloom.DynamicBloomFilter bloomFilter;

  private int numKeys;

  private int vectorSize;

  private org.apache.hadoop.util.bloom.Key bloomKey;

  private org.apache.hadoop.io.DataOutputBuffer buf;

  private org.apache.hadoop.fs.FileSystem fs;

  private org.apache.hadoop.fs.Path dir;

  public org.apache.hadoop.io.BloomMapFile$Writer(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.FileSystem, java.lang.String, java.lang.Class<? extends org.apache.hadoop.io.WritableComparable>, java.lang.Class<? extends org.apache.hadoop.io.Writable>, org.apache.hadoop.io.SequenceFile$CompressionType, org.apache.hadoop.io.compress.CompressionCodec, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: new           #3                  // class org/apache/hadoop/fs/Path
       5: dup
       6: aload_3
       7: invokespecial #4                  // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      10: iconst_4
      11: anewarray     #5                  // class org/apache/hadoop/io/SequenceFile$Writer$Option
      14: dup
      15: iconst_0
      16: aload         4
      18: invokestatic  #6                  // Method keyClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/MapFile$Writer$Option;
      21: aastore
      22: dup
      23: iconst_1
      24: aload         5
      26: invokestatic  #7                  // Method valueClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      29: aastore
      30: dup
      31: iconst_2
      32: aload         6
      34: aload         7
      36: invokestatic  #8                  // Method compression:(Lorg/apache/hadoop/io/SequenceFile$CompressionType;Lorg/apache/hadoop/io/compress/CompressionCodec;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      39: aastore
      40: dup
      41: iconst_3
      42: aload         8
      44: invokestatic  #9                  // Method progressable:(Lorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      47: aastore
      48: invokespecial #10                 // Method "<init>":(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;[Lorg/apache/hadoop/io/SequenceFile$Writer$Option;)V
      51: return

  public org.apache.hadoop.io.BloomMapFile$Writer(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.FileSystem, java.lang.String, java.lang.Class<? extends org.apache.hadoop.io.WritableComparable>, java.lang.Class, org.apache.hadoop.io.SequenceFile$CompressionType, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: new           #3                  // class org/apache/hadoop/fs/Path
       5: dup
       6: aload_3
       7: invokespecial #4                  // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      10: iconst_4
      11: anewarray     #5                  // class org/apache/hadoop/io/SequenceFile$Writer$Option
      14: dup
      15: iconst_0
      16: aload         4
      18: invokestatic  #6                  // Method keyClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/MapFile$Writer$Option;
      21: aastore
      22: dup
      23: iconst_1
      24: aload         5
      26: invokestatic  #7                  // Method valueClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      29: aastore
      30: dup
      31: iconst_2
      32: aload         6
      34: invokestatic  #11                 // Method compression:(Lorg/apache/hadoop/io/SequenceFile$CompressionType;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      37: aastore
      38: dup
      39: iconst_3
      40: aload         7
      42: invokestatic  #9                  // Method progressable:(Lorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      45: aastore
      46: invokespecial #10                 // Method "<init>":(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;[Lorg/apache/hadoop/io/SequenceFile$Writer$Option;)V
      49: return

  public org.apache.hadoop.io.BloomMapFile$Writer(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.FileSystem, java.lang.String, java.lang.Class<? extends org.apache.hadoop.io.WritableComparable>, java.lang.Class, org.apache.hadoop.io.SequenceFile$CompressionType) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: new           #3                  // class org/apache/hadoop/fs/Path
       5: dup
       6: aload_3
       7: invokespecial #4                  // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      10: iconst_3
      11: anewarray     #5                  // class org/apache/hadoop/io/SequenceFile$Writer$Option
      14: dup
      15: iconst_0
      16: aload         4
      18: invokestatic  #6                  // Method keyClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/MapFile$Writer$Option;
      21: aastore
      22: dup
      23: iconst_1
      24: aload         5
      26: invokestatic  #7                  // Method valueClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      29: aastore
      30: dup
      31: iconst_2
      32: aload         6
      34: invokestatic  #11                 // Method compression:(Lorg/apache/hadoop/io/SequenceFile$CompressionType;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      37: aastore
      38: invokespecial #10                 // Method "<init>":(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;[Lorg/apache/hadoop/io/SequenceFile$Writer$Option;)V
      41: return

  public org.apache.hadoop.io.BloomMapFile$Writer(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.FileSystem, java.lang.String, org.apache.hadoop.io.WritableComparator, java.lang.Class, org.apache.hadoop.io.SequenceFile$CompressionType, org.apache.hadoop.io.compress.CompressionCodec, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: new           #3                  // class org/apache/hadoop/fs/Path
       5: dup
       6: aload_3
       7: invokespecial #4                  // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      10: iconst_4
      11: anewarray     #5                  // class org/apache/hadoop/io/SequenceFile$Writer$Option
      14: dup
      15: iconst_0
      16: aload         4
      18: invokestatic  #12                 // Method comparator:(Lorg/apache/hadoop/io/WritableComparator;)Lorg/apache/hadoop/io/MapFile$Writer$Option;
      21: aastore
      22: dup
      23: iconst_1
      24: aload         5
      26: invokestatic  #7                  // Method valueClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      29: aastore
      30: dup
      31: iconst_2
      32: aload         6
      34: aload         7
      36: invokestatic  #8                  // Method compression:(Lorg/apache/hadoop/io/SequenceFile$CompressionType;Lorg/apache/hadoop/io/compress/CompressionCodec;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      39: aastore
      40: dup
      41: iconst_3
      42: aload         8
      44: invokestatic  #9                  // Method progressable:(Lorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      47: aastore
      48: invokespecial #10                 // Method "<init>":(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;[Lorg/apache/hadoop/io/SequenceFile$Writer$Option;)V
      51: return

  public org.apache.hadoop.io.BloomMapFile$Writer(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.FileSystem, java.lang.String, org.apache.hadoop.io.WritableComparator, java.lang.Class, org.apache.hadoop.io.SequenceFile$CompressionType, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: new           #3                  // class org/apache/hadoop/fs/Path
       5: dup
       6: aload_3
       7: invokespecial #4                  // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      10: iconst_4
      11: anewarray     #5                  // class org/apache/hadoop/io/SequenceFile$Writer$Option
      14: dup
      15: iconst_0
      16: aload         4
      18: invokestatic  #12                 // Method comparator:(Lorg/apache/hadoop/io/WritableComparator;)Lorg/apache/hadoop/io/MapFile$Writer$Option;
      21: aastore
      22: dup
      23: iconst_1
      24: aload         5
      26: invokestatic  #7                  // Method valueClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      29: aastore
      30: dup
      31: iconst_2
      32: aload         6
      34: invokestatic  #11                 // Method compression:(Lorg/apache/hadoop/io/SequenceFile$CompressionType;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      37: aastore
      38: dup
      39: iconst_3
      40: aload         7
      42: invokestatic  #9                  // Method progressable:(Lorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      45: aastore
      46: invokespecial #10                 // Method "<init>":(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;[Lorg/apache/hadoop/io/SequenceFile$Writer$Option;)V
      49: return

  public org.apache.hadoop.io.BloomMapFile$Writer(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.FileSystem, java.lang.String, org.apache.hadoop.io.WritableComparator, java.lang.Class, org.apache.hadoop.io.SequenceFile$CompressionType) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: new           #3                  // class org/apache/hadoop/fs/Path
       5: dup
       6: aload_3
       7: invokespecial #4                  // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      10: iconst_3
      11: anewarray     #5                  // class org/apache/hadoop/io/SequenceFile$Writer$Option
      14: dup
      15: iconst_0
      16: aload         4
      18: invokestatic  #12                 // Method comparator:(Lorg/apache/hadoop/io/WritableComparator;)Lorg/apache/hadoop/io/MapFile$Writer$Option;
      21: aastore
      22: dup
      23: iconst_1
      24: aload         5
      26: invokestatic  #7                  // Method valueClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      29: aastore
      30: dup
      31: iconst_2
      32: aload         6
      34: invokestatic  #11                 // Method compression:(Lorg/apache/hadoop/io/SequenceFile$CompressionType;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      37: aastore
      38: invokespecial #10                 // Method "<init>":(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;[Lorg/apache/hadoop/io/SequenceFile$Writer$Option;)V
      41: return

  public org.apache.hadoop.io.BloomMapFile$Writer(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.FileSystem, java.lang.String, org.apache.hadoop.io.WritableComparator, java.lang.Class) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: new           #3                  // class org/apache/hadoop/fs/Path
       5: dup
       6: aload_3
       7: invokespecial #4                  // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      10: iconst_2
      11: anewarray     #5                  // class org/apache/hadoop/io/SequenceFile$Writer$Option
      14: dup
      15: iconst_0
      16: aload         4
      18: invokestatic  #12                 // Method comparator:(Lorg/apache/hadoop/io/WritableComparator;)Lorg/apache/hadoop/io/MapFile$Writer$Option;
      21: aastore
      22: dup
      23: iconst_1
      24: aload         5
      26: invokestatic  #7                  // Method valueClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      29: aastore
      30: invokespecial #10                 // Method "<init>":(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;[Lorg/apache/hadoop/io/SequenceFile$Writer$Option;)V
      33: return

  public org.apache.hadoop.io.BloomMapFile$Writer(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.FileSystem, java.lang.String, java.lang.Class<? extends org.apache.hadoop.io.WritableComparable>, java.lang.Class) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: new           #3                  // class org/apache/hadoop/fs/Path
       5: dup
       6: aload_3
       7: invokespecial #4                  // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      10: iconst_2
      11: anewarray     #5                  // class org/apache/hadoop/io/SequenceFile$Writer$Option
      14: dup
      15: iconst_0
      16: aload         4
      18: invokestatic  #6                  // Method keyClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/MapFile$Writer$Option;
      21: aastore
      22: dup
      23: iconst_1
      24: aload         5
      26: invokestatic  #7                  // Method valueClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      29: aastore
      30: invokespecial #10                 // Method "<init>":(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;[Lorg/apache/hadoop/io/SequenceFile$Writer$Option;)V
      33: return

  public org.apache.hadoop.io.BloomMapFile$Writer(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.Path, org.apache.hadoop.io.SequenceFile$Writer$Option...) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #13                 // Method org/apache/hadoop/io/MapFile$Writer."<init>":(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;[Lorg/apache/hadoop/io/SequenceFile$Writer$Option;)V
       7: aload_0
       8: new           #14                 // class org/apache/hadoop/util/bloom/Key
      11: dup
      12: invokespecial #15                 // Method org/apache/hadoop/util/bloom/Key."<init>":()V
      15: putfield      #16                 // Field bloomKey:Lorg/apache/hadoop/util/bloom/Key;
      18: aload_0
      19: new           #17                 // class org/apache/hadoop/io/DataOutputBuffer
      22: dup
      23: invokespecial #18                 // Method org/apache/hadoop/io/DataOutputBuffer."<init>":()V
      26: putfield      #19                 // Field buf:Lorg/apache/hadoop/io/DataOutputBuffer;
      29: aload_0
      30: aload_2
      31: aload_1
      32: invokevirtual #20                 // Method org/apache/hadoop/fs/Path.getFileSystem:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
      35: putfield      #21                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      38: aload_0
      39: aload_2
      40: putfield      #22                 // Field dir:Lorg/apache/hadoop/fs/Path;
      43: aload_0
      44: aload_1
      45: invokespecial #23                 // Method initBloomFilter:(Lorg/apache/hadoop/conf/Configuration;)V
      48: return

  private synchronized void initBloomFilter(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #24                 // String io.mapfile.bloom.size
       4: ldc           #25                 // int 1048576
       6: invokevirtual #26                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
       9: putfield      #27                 // Field numKeys:I
      12: aload_1
      13: ldc           #28                 // String io.mapfile.bloom.error.rate
      15: ldc           #29                 // float 0.005f
      17: invokevirtual #30                 // Method org/apache/hadoop/conf/Configuration.getFloat:(Ljava/lang/String;F)F
      20: fstore_2
      21: aload_0
      22: bipush        -5
      24: aload_0
      25: getfield      #27                 // Field numKeys:I
      28: imul
      29: i2d
      30: dconst_1
      31: fload_2
      32: f2d
      33: ldc2_w        #31                 // double 0.2d
      36: invokestatic  #33                 // Method java/lang/Math.pow:(DD)D
      39: dsub
      40: invokestatic  #34                 // Method java/lang/Math.log:(D)D
      43: ddiv
      44: invokestatic  #35                 // Method java/lang/Math.ceil:(D)D
      47: d2i
      48: putfield      #36                 // Field vectorSize:I
      51: aload_0
      52: new           #37                 // class org/apache/hadoop/util/bloom/DynamicBloomFilter
      55: dup
      56: aload_0
      57: getfield      #36                 // Field vectorSize:I
      60: iconst_5
      61: aload_1
      62: invokestatic  #38                 // Method org/apache/hadoop/util/hash/Hash.getHashType:(Lorg/apache/hadoop/conf/Configuration;)I
      65: aload_0
      66: getfield      #27                 // Field numKeys:I
      69: invokespecial #39                 // Method org/apache/hadoop/util/bloom/DynamicBloomFilter."<init>":(IIII)V
      72: putfield      #40                 // Field bloomFilter:Lorg/apache/hadoop/util/bloom/DynamicBloomFilter;
      75: return

  public synchronized void append(org.apache.hadoop.io.WritableComparable, org.apache.hadoop.io.Writable) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #41                 // Method org/apache/hadoop/io/MapFile$Writer.append:(Lorg/apache/hadoop/io/WritableComparable;Lorg/apache/hadoop/io/Writable;)V
       6: aload_0
       7: getfield      #19                 // Field buf:Lorg/apache/hadoop/io/DataOutputBuffer;
      10: invokevirtual #42                 // Method org/apache/hadoop/io/DataOutputBuffer.reset:()Lorg/apache/hadoop/io/DataOutputBuffer;
      13: pop
      14: aload_1
      15: aload_0
      16: getfield      #19                 // Field buf:Lorg/apache/hadoop/io/DataOutputBuffer;
      19: invokeinterface #43,  2           // InterfaceMethod org/apache/hadoop/io/WritableComparable.write:(Ljava/io/DataOutput;)V
      24: aload_0
      25: getfield      #16                 // Field bloomKey:Lorg/apache/hadoop/util/bloom/Key;
      28: aload_0
      29: getfield      #19                 // Field buf:Lorg/apache/hadoop/io/DataOutputBuffer;
      32: invokestatic  #44                 // Method org/apache/hadoop/io/BloomMapFile.access$000:(Lorg/apache/hadoop/io/DataOutputBuffer;)[B
      35: dconst_1
      36: invokevirtual #45                 // Method org/apache/hadoop/util/bloom/Key.set:([BD)V
      39: aload_0
      40: getfield      #40                 // Field bloomFilter:Lorg/apache/hadoop/util/bloom/DynamicBloomFilter;
      43: aload_0
      44: getfield      #16                 // Field bloomKey:Lorg/apache/hadoop/util/bloom/Key;
      47: invokevirtual #46                 // Method org/apache/hadoop/util/bloom/DynamicBloomFilter.add:(Lorg/apache/hadoop/util/bloom/Key;)V
      50: return

  public synchronized void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #47                 // Method org/apache/hadoop/io/MapFile$Writer.close:()V
       4: aload_0
       5: getfield      #21                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       8: new           #3                  // class org/apache/hadoop/fs/Path
      11: dup
      12: aload_0
      13: getfield      #22                 // Field dir:Lorg/apache/hadoop/fs/Path;
      16: ldc           #48                 // String bloom
      18: invokespecial #49                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      21: iconst_1
      22: invokevirtual #50                 // Method org/apache/hadoop/fs/FileSystem.create:(Lorg/apache/hadoop/fs/Path;Z)Lorg/apache/hadoop/fs/FSDataOutputStream;
      25: astore_1
      26: aload_0
      27: getfield      #40                 // Field bloomFilter:Lorg/apache/hadoop/util/bloom/DynamicBloomFilter;
      30: aload_1
      31: invokevirtual #51                 // Method org/apache/hadoop/util/bloom/DynamicBloomFilter.write:(Ljava/io/DataOutput;)V
      34: aload_1
      35: invokevirtual #52                 // Method java/io/DataOutputStream.flush:()V
      38: aload_1
      39: invokevirtual #53                 // Method java/io/DataOutputStream.close:()V
      42: aconst_null
      43: astore_1
      44: aload_1
      45: invokestatic  #54                 // Method org/apache/hadoop/io/IOUtils.closeStream:(Ljava/io/Closeable;)V
      48: goto          58
      51: astore_2
      52: aload_1
      53: invokestatic  #54                 // Method org/apache/hadoop/io/IOUtils.closeStream:(Ljava/io/Closeable;)V
      56: aload_2
      57: athrow
      58: return
    Exception table:
       from    to  target type
          26    44    51   any
}
