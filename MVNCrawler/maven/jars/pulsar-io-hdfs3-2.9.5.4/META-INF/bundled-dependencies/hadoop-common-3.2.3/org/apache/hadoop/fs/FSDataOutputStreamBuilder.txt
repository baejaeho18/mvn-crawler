Compiled from "FSDataOutputStreamBuilder.java"
public abstract class org.apache.hadoop.fs.FSDataOutputStreamBuilder<S extends org.apache.hadoop.fs.FSDataOutputStream, B extends org.apache.hadoop.fs.FSDataOutputStreamBuilder<S, B>> {
  private final org.apache.hadoop.fs.FileSystem fs;

  private final org.apache.hadoop.fs.Path path;

  private org.apache.hadoop.fs.permission.FsPermission permission;

  private int bufferSize;

  private short replication;

  private long blockSize;

  private boolean recursive;

  private final java.util.EnumSet<org.apache.hadoop.fs.CreateFlag> flags;

  private org.apache.hadoop.util.Progressable progress;

  private org.apache.hadoop.fs.Options$ChecksumOpt checksumOpt;

  private final org.apache.hadoop.conf.Configuration options;

  private final java.util.Set<java.lang.String> mandatoryKeys;

  protected abstract B getThisBuilder();

  org.apache.hadoop.fs.FSDataOutputStreamBuilder(org.apache.hadoop.fs.FileContext, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #3                  // Field permission:Lorg/apache/hadoop/fs/permission/FsPermission;
       9: aload_0
      10: iconst_0
      11: putfield      #4                  // Field recursive:Z
      14: aload_0
      15: ldc           #5                  // class org/apache/hadoop/fs/CreateFlag
      17: invokestatic  #6                  // Method java/util/EnumSet.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;
      20: putfield      #7                  // Field flags:Ljava/util/EnumSet;
      23: aload_0
      24: aconst_null
      25: putfield      #8                  // Field progress:Lorg/apache/hadoop/util/Progressable;
      28: aload_0
      29: aconst_null
      30: putfield      #9                  // Field checksumOpt:Lorg/apache/hadoop/fs/Options$ChecksumOpt;
      33: aload_0
      34: new           #10                 // class org/apache/hadoop/conf/Configuration
      37: dup
      38: iconst_0
      39: invokespecial #11                 // Method org/apache/hadoop/conf/Configuration."<init>":(Z)V
      42: putfield      #12                 // Field options:Lorg/apache/hadoop/conf/Configuration;
      45: aload_0
      46: new           #13                 // class java/util/HashSet
      49: dup
      50: invokespecial #14                 // Method java/util/HashSet."<init>":()V
      53: putfield      #15                 // Field mandatoryKeys:Ljava/util/Set;
      56: aload_1
      57: invokestatic  #16                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      60: pop
      61: aload_2
      62: invokestatic  #16                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      65: pop
      66: aload_0
      67: aconst_null
      68: putfield      #17                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      71: aload_0
      72: aload_2
      73: putfield      #18                 // Field path:Lorg/apache/hadoop/fs/Path;
      76: aload_1
      77: aload_2
      78: invokevirtual #19                 // Method org/apache/hadoop/fs/FileContext.getFSofPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/AbstractFileSystem;
      81: astore_3
      82: aload_3
      83: aload_2
      84: invokevirtual #20                 // Method org/apache/hadoop/fs/AbstractFileSystem.getServerDefaults:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FsServerDefaults;
      87: astore        4
      89: aload_0
      90: aload         4
      92: invokevirtual #21                 // Method org/apache/hadoop/fs/FsServerDefaults.getFileBufferSize:()I
      95: putfield      #22                 // Field bufferSize:I
      98: aload_0
      99: aload         4
     101: invokevirtual #23                 // Method org/apache/hadoop/fs/FsServerDefaults.getReplication:()S
     104: putfield      #24                 // Field replication:S
     107: aload_0
     108: aload         4
     110: invokevirtual #25                 // Method org/apache/hadoop/fs/FsServerDefaults.getBlockSize:()J
     113: putfield      #26                 // Field blockSize:J
     116: return

  protected org.apache.hadoop.fs.FSDataOutputStreamBuilder(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #3                  // Field permission:Lorg/apache/hadoop/fs/permission/FsPermission;
       9: aload_0
      10: iconst_0
      11: putfield      #4                  // Field recursive:Z
      14: aload_0
      15: ldc           #5                  // class org/apache/hadoop/fs/CreateFlag
      17: invokestatic  #6                  // Method java/util/EnumSet.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;
      20: putfield      #7                  // Field flags:Ljava/util/EnumSet;
      23: aload_0
      24: aconst_null
      25: putfield      #8                  // Field progress:Lorg/apache/hadoop/util/Progressable;
      28: aload_0
      29: aconst_null
      30: putfield      #9                  // Field checksumOpt:Lorg/apache/hadoop/fs/Options$ChecksumOpt;
      33: aload_0
      34: new           #10                 // class org/apache/hadoop/conf/Configuration
      37: dup
      38: iconst_0
      39: invokespecial #11                 // Method org/apache/hadoop/conf/Configuration."<init>":(Z)V
      42: putfield      #12                 // Field options:Lorg/apache/hadoop/conf/Configuration;
      45: aload_0
      46: new           #13                 // class java/util/HashSet
      49: dup
      50: invokespecial #14                 // Method java/util/HashSet."<init>":()V
      53: putfield      #15                 // Field mandatoryKeys:Ljava/util/Set;
      56: aload_1
      57: invokestatic  #16                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      60: pop
      61: aload_2
      62: invokestatic  #16                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      65: pop
      66: aload_0
      67: aload_1
      68: putfield      #17                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      71: aload_0
      72: aload_2
      73: putfield      #18                 // Field path:Lorg/apache/hadoop/fs/Path;
      76: aload_0
      77: aload_0
      78: getfield      #17                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      81: invokevirtual #27                 // Method org/apache/hadoop/fs/FileSystem.getConf:()Lorg/apache/hadoop/conf/Configuration;
      84: ldc           #28                 // String io.file.buffer.size
      86: sipush        4096
      89: invokevirtual #29                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      92: putfield      #22                 // Field bufferSize:I
      95: aload_0
      96: aload_0
      97: getfield      #17                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     100: aload_0
     101: getfield      #18                 // Field path:Lorg/apache/hadoop/fs/Path;
     104: invokevirtual #30                 // Method org/apache/hadoop/fs/FileSystem.getDefaultReplication:(Lorg/apache/hadoop/fs/Path;)S
     107: putfield      #24                 // Field replication:S
     110: aload_0
     111: aload_0
     112: getfield      #17                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     115: aload_2
     116: invokevirtual #31                 // Method org/apache/hadoop/fs/FileSystem.getDefaultBlockSize:(Lorg/apache/hadoop/fs/Path;)J
     119: putfield      #26                 // Field blockSize:J
     122: return

  protected org.apache.hadoop.fs.FileSystem getFS();
    Code:
       0: aload_0
       1: getfield      #17                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: invokestatic  #16                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       7: pop
       8: aload_0
       9: getfield      #17                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      12: areturn

  protected org.apache.hadoop.fs.Path getPath();
    Code:
       0: aload_0
       1: getfield      #18                 // Field path:Lorg/apache/hadoop/fs/Path;
       4: areturn

  protected org.apache.hadoop.fs.permission.FsPermission getPermission();
    Code:
       0: aload_0
       1: getfield      #3                  // Field permission:Lorg/apache/hadoop/fs/permission/FsPermission;
       4: ifnonnull     14
       7: aload_0
       8: invokestatic  #32                 // Method org/apache/hadoop/fs/permission/FsPermission.getFileDefault:()Lorg/apache/hadoop/fs/permission/FsPermission;
      11: putfield      #3                  // Field permission:Lorg/apache/hadoop/fs/permission/FsPermission;
      14: aload_0
      15: getfield      #3                  // Field permission:Lorg/apache/hadoop/fs/permission/FsPermission;
      18: areturn

  public B permission(org.apache.hadoop.fs.permission.FsPermission);
    Code:
       0: aload_1
       1: invokestatic  #16                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: putfield      #3                  // Field permission:Lorg/apache/hadoop/fs/permission/FsPermission;
      10: aload_0
      11: invokevirtual #33                 // Method getThisBuilder:()Lorg/apache/hadoop/fs/FSDataOutputStreamBuilder;
      14: areturn

  protected int getBufferSize();
    Code:
       0: aload_0
       1: getfield      #22                 // Field bufferSize:I
       4: ireturn

  public B bufferSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #22                 // Field bufferSize:I
       5: aload_0
       6: invokevirtual #33                 // Method getThisBuilder:()Lorg/apache/hadoop/fs/FSDataOutputStreamBuilder;
       9: areturn

  protected short getReplication();
    Code:
       0: aload_0
       1: getfield      #24                 // Field replication:S
       4: ireturn

  public B replication(short);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #24                 // Field replication:S
       5: aload_0
       6: invokevirtual #33                 // Method getThisBuilder:()Lorg/apache/hadoop/fs/FSDataOutputStreamBuilder;
       9: areturn

  protected long getBlockSize();
    Code:
       0: aload_0
       1: getfield      #26                 // Field blockSize:J
       4: lreturn

  public B blockSize(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #26                 // Field blockSize:J
       5: aload_0
       6: invokevirtual #33                 // Method getThisBuilder:()Lorg/apache/hadoop/fs/FSDataOutputStreamBuilder;
       9: areturn

  protected boolean isRecursive();
    Code:
       0: aload_0
       1: getfield      #4                  // Field recursive:Z
       4: ireturn

  public B recursive();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #4                  // Field recursive:Z
       5: aload_0
       6: invokevirtual #33                 // Method getThisBuilder:()Lorg/apache/hadoop/fs/FSDataOutputStreamBuilder;
       9: areturn

  protected org.apache.hadoop.util.Progressable getProgress();
    Code:
       0: aload_0
       1: getfield      #8                  // Field progress:Lorg/apache/hadoop/util/Progressable;
       4: areturn

  public B progress(org.apache.hadoop.util.Progressable);
    Code:
       0: aload_1
       1: invokestatic  #16                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: putfield      #8                  // Field progress:Lorg/apache/hadoop/util/Progressable;
      10: aload_0
      11: invokevirtual #33                 // Method getThisBuilder:()Lorg/apache/hadoop/fs/FSDataOutputStreamBuilder;
      14: areturn

  protected java.util.EnumSet<org.apache.hadoop.fs.CreateFlag> getFlags();
    Code:
       0: aload_0
       1: getfield      #7                  // Field flags:Ljava/util/EnumSet;
       4: areturn

  public B create();
    Code:
       0: aload_0
       1: getfield      #7                  // Field flags:Ljava/util/EnumSet;
       4: getstatic     #34                 // Field org/apache/hadoop/fs/CreateFlag.CREATE:Lorg/apache/hadoop/fs/CreateFlag;
       7: invokevirtual #35                 // Method java/util/EnumSet.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: invokevirtual #33                 // Method getThisBuilder:()Lorg/apache/hadoop/fs/FSDataOutputStreamBuilder;
      15: areturn

  public B overwrite(boolean);
    Code:
       0: iload_1
       1: ifeq          18
       4: aload_0
       5: getfield      #7                  // Field flags:Ljava/util/EnumSet;
       8: getstatic     #36                 // Field org/apache/hadoop/fs/CreateFlag.OVERWRITE:Lorg/apache/hadoop/fs/CreateFlag;
      11: invokevirtual #35                 // Method java/util/EnumSet.add:(Ljava/lang/Object;)Z
      14: pop
      15: goto          29
      18: aload_0
      19: getfield      #7                  // Field flags:Ljava/util/EnumSet;
      22: getstatic     #36                 // Field org/apache/hadoop/fs/CreateFlag.OVERWRITE:Lorg/apache/hadoop/fs/CreateFlag;
      25: invokevirtual #37                 // Method java/util/EnumSet.remove:(Ljava/lang/Object;)Z
      28: pop
      29: aload_0
      30: invokevirtual #33                 // Method getThisBuilder:()Lorg/apache/hadoop/fs/FSDataOutputStreamBuilder;
      33: areturn

  public B append();
    Code:
       0: aload_0
       1: getfield      #7                  // Field flags:Ljava/util/EnumSet;
       4: getstatic     #38                 // Field org/apache/hadoop/fs/CreateFlag.APPEND:Lorg/apache/hadoop/fs/CreateFlag;
       7: invokevirtual #35                 // Method java/util/EnumSet.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: invokevirtual #33                 // Method getThisBuilder:()Lorg/apache/hadoop/fs/FSDataOutputStreamBuilder;
      15: areturn

  protected org.apache.hadoop.fs.Options$ChecksumOpt getChecksumOpt();
    Code:
       0: aload_0
       1: getfield      #9                  // Field checksumOpt:Lorg/apache/hadoop/fs/Options$ChecksumOpt;
       4: areturn

  public B checksumOpt(org.apache.hadoop.fs.Options$ChecksumOpt);
    Code:
       0: aload_1
       1: invokestatic  #16                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: putfield      #9                  // Field checksumOpt:Lorg/apache/hadoop/fs/Options$ChecksumOpt;
      10: aload_0
      11: invokevirtual #33                 // Method getThisBuilder:()Lorg/apache/hadoop/fs/FSDataOutputStreamBuilder;
      14: areturn

  public B opt(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #15                 // Field mandatoryKeys:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #39,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: getfield      #12                 // Field options:Lorg/apache/hadoop/conf/Configuration;
      15: aload_1
      16: aload_2
      17: invokevirtual #40                 // Method org/apache/hadoop/conf/Configuration.set:(Ljava/lang/String;Ljava/lang/String;)V
      20: aload_0
      21: invokevirtual #33                 // Method getThisBuilder:()Lorg/apache/hadoop/fs/FSDataOutputStreamBuilder;
      24: areturn

  public B opt(java.lang.String, boolean);
    Code:
       0: aload_0
       1: getfield      #15                 // Field mandatoryKeys:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #39,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: getfield      #12                 // Field options:Lorg/apache/hadoop/conf/Configuration;
      15: aload_1
      16: iload_2
      17: invokevirtual #41                 // Method org/apache/hadoop/conf/Configuration.setBoolean:(Ljava/lang/String;Z)V
      20: aload_0
      21: invokevirtual #33                 // Method getThisBuilder:()Lorg/apache/hadoop/fs/FSDataOutputStreamBuilder;
      24: areturn

  public B opt(java.lang.String, int);
    Code:
       0: aload_0
       1: getfield      #15                 // Field mandatoryKeys:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #39,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: getfield      #12                 // Field options:Lorg/apache/hadoop/conf/Configuration;
      15: aload_1
      16: iload_2
      17: invokevirtual #42                 // Method org/apache/hadoop/conf/Configuration.setInt:(Ljava/lang/String;I)V
      20: aload_0
      21: invokevirtual #33                 // Method getThisBuilder:()Lorg/apache/hadoop/fs/FSDataOutputStreamBuilder;
      24: areturn

  public B opt(java.lang.String, float);
    Code:
       0: aload_0
       1: getfield      #15                 // Field mandatoryKeys:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #39,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: getfield      #12                 // Field options:Lorg/apache/hadoop/conf/Configuration;
      15: aload_1
      16: fload_2
      17: invokevirtual #43                 // Method org/apache/hadoop/conf/Configuration.setFloat:(Ljava/lang/String;F)V
      20: aload_0
      21: invokevirtual #33                 // Method getThisBuilder:()Lorg/apache/hadoop/fs/FSDataOutputStreamBuilder;
      24: areturn

  public B opt(java.lang.String, double);
    Code:
       0: aload_0
       1: getfield      #15                 // Field mandatoryKeys:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #39,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: getfield      #12                 // Field options:Lorg/apache/hadoop/conf/Configuration;
      15: aload_1
      16: dload_2
      17: invokevirtual #44                 // Method org/apache/hadoop/conf/Configuration.setDouble:(Ljava/lang/String;D)V
      20: aload_0
      21: invokevirtual #33                 // Method getThisBuilder:()Lorg/apache/hadoop/fs/FSDataOutputStreamBuilder;
      24: areturn

  public B opt(java.lang.String, java.lang.String...);
    Code:
       0: aload_0
       1: getfield      #15                 // Field mandatoryKeys:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #39,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: getfield      #12                 // Field options:Lorg/apache/hadoop/conf/Configuration;
      15: aload_1
      16: aload_2
      17: invokevirtual #45                 // Method org/apache/hadoop/conf/Configuration.setStrings:(Ljava/lang/String;[Ljava/lang/String;)V
      20: aload_0
      21: invokevirtual #33                 // Method getThisBuilder:()Lorg/apache/hadoop/fs/FSDataOutputStreamBuilder;
      24: areturn

  public B must(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #15                 // Field mandatoryKeys:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #46,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: getfield      #12                 // Field options:Lorg/apache/hadoop/conf/Configuration;
      15: aload_1
      16: aload_2
      17: invokevirtual #40                 // Method org/apache/hadoop/conf/Configuration.set:(Ljava/lang/String;Ljava/lang/String;)V
      20: aload_0
      21: invokevirtual #33                 // Method getThisBuilder:()Lorg/apache/hadoop/fs/FSDataOutputStreamBuilder;
      24: areturn

  public B must(java.lang.String, boolean);
    Code:
       0: aload_0
       1: getfield      #15                 // Field mandatoryKeys:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #46,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: getfield      #12                 // Field options:Lorg/apache/hadoop/conf/Configuration;
      15: aload_1
      16: iload_2
      17: invokevirtual #41                 // Method org/apache/hadoop/conf/Configuration.setBoolean:(Ljava/lang/String;Z)V
      20: aload_0
      21: invokevirtual #33                 // Method getThisBuilder:()Lorg/apache/hadoop/fs/FSDataOutputStreamBuilder;
      24: areturn

  public B must(java.lang.String, int);
    Code:
       0: aload_0
       1: getfield      #15                 // Field mandatoryKeys:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #46,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: getfield      #12                 // Field options:Lorg/apache/hadoop/conf/Configuration;
      15: aload_1
      16: iload_2
      17: invokevirtual #42                 // Method org/apache/hadoop/conf/Configuration.setInt:(Ljava/lang/String;I)V
      20: aload_0
      21: invokevirtual #33                 // Method getThisBuilder:()Lorg/apache/hadoop/fs/FSDataOutputStreamBuilder;
      24: areturn

  public B must(java.lang.String, float);
    Code:
       0: aload_0
       1: getfield      #15                 // Field mandatoryKeys:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #46,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: getfield      #12                 // Field options:Lorg/apache/hadoop/conf/Configuration;
      15: aload_1
      16: fload_2
      17: invokevirtual #43                 // Method org/apache/hadoop/conf/Configuration.setFloat:(Ljava/lang/String;F)V
      20: aload_0
      21: invokevirtual #33                 // Method getThisBuilder:()Lorg/apache/hadoop/fs/FSDataOutputStreamBuilder;
      24: areturn

  public B must(java.lang.String, double);
    Code:
       0: aload_0
       1: getfield      #15                 // Field mandatoryKeys:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #46,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: getfield      #12                 // Field options:Lorg/apache/hadoop/conf/Configuration;
      15: aload_1
      16: dload_2
      17: invokevirtual #44                 // Method org/apache/hadoop/conf/Configuration.setDouble:(Ljava/lang/String;D)V
      20: aload_0
      21: invokevirtual #33                 // Method getThisBuilder:()Lorg/apache/hadoop/fs/FSDataOutputStreamBuilder;
      24: areturn

  public B must(java.lang.String, java.lang.String...);
    Code:
       0: aload_0
       1: getfield      #15                 // Field mandatoryKeys:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #46,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: getfield      #12                 // Field options:Lorg/apache/hadoop/conf/Configuration;
      15: aload_1
      16: aload_2
      17: invokevirtual #45                 // Method org/apache/hadoop/conf/Configuration.setStrings:(Ljava/lang/String;[Ljava/lang/String;)V
      20: aload_0
      21: invokevirtual #33                 // Method getThisBuilder:()Lorg/apache/hadoop/fs/FSDataOutputStreamBuilder;
      24: areturn

  protected org.apache.hadoop.conf.Configuration getOptions();
    Code:
       0: aload_0
       1: getfield      #12                 // Field options:Lorg/apache/hadoop/conf/Configuration;
       4: areturn

  protected java.util.Set<java.lang.String> getMandatoryKeys();
    Code:
       0: aload_0
       1: getfield      #15                 // Field mandatoryKeys:Ljava/util/Set;
       4: invokestatic  #47                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
       7: areturn

  public abstract S build() throws java.lang.IllegalArgumentException, java.io.IOException;
}
