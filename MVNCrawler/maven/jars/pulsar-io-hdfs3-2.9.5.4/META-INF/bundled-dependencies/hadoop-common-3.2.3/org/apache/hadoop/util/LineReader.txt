Compiled from "LineReader.java"
public class org.apache.hadoop.util.LineReader implements java.io.Closeable {
  private static final int DEFAULT_BUFFER_SIZE;

  private int bufferSize;

  private java.io.InputStream in;

  private byte[] buffer;

  private int bufferLength;

  private int bufferPosn;

  private static final byte CR;

  private static final byte LF;

  private final byte[] recordDelimiterBytes;

  public org.apache.hadoop.util.LineReader(java.io.InputStream);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #3                  // int 65536
       4: invokespecial #4                  // Method "<init>":(Ljava/io/InputStream;I)V
       7: return

  public org.apache.hadoop.util.LineReader(java.io.InputStream, int);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #3                  // int 65536
       7: putfield      #6                  // Field bufferSize:I
      10: aload_0
      11: iconst_0
      12: putfield      #7                  // Field bufferLength:I
      15: aload_0
      16: iconst_0
      17: putfield      #8                  // Field bufferPosn:I
      20: aload_0
      21: aload_1
      22: putfield      #9                  // Field in:Ljava/io/InputStream;
      25: aload_0
      26: iload_2
      27: putfield      #6                  // Field bufferSize:I
      30: aload_0
      31: aload_0
      32: getfield      #6                  // Field bufferSize:I
      35: newarray       byte
      37: putfield      #10                 // Field buffer:[B
      40: aload_0
      41: aconst_null
      42: putfield      #11                 // Field recordDelimiterBytes:[B
      45: return

  public org.apache.hadoop.util.LineReader(java.io.InputStream, org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: ldc           #12                 // String io.file.buffer.size
       5: ldc           #3                  // int 65536
       7: invokevirtual #13                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      10: invokespecial #4                  // Method "<init>":(Ljava/io/InputStream;I)V
      13: return

  public org.apache.hadoop.util.LineReader(java.io.InputStream, byte[]);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #3                  // int 65536
       7: putfield      #6                  // Field bufferSize:I
      10: aload_0
      11: iconst_0
      12: putfield      #7                  // Field bufferLength:I
      15: aload_0
      16: iconst_0
      17: putfield      #8                  // Field bufferPosn:I
      20: aload_0
      21: aload_1
      22: putfield      #9                  // Field in:Ljava/io/InputStream;
      25: aload_0
      26: ldc           #3                  // int 65536
      28: putfield      #6                  // Field bufferSize:I
      31: aload_0
      32: aload_0
      33: getfield      #6                  // Field bufferSize:I
      36: newarray       byte
      38: putfield      #10                 // Field buffer:[B
      41: aload_0
      42: aload_2
      43: putfield      #11                 // Field recordDelimiterBytes:[B
      46: return

  public org.apache.hadoop.util.LineReader(java.io.InputStream, int, byte[]);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #3                  // int 65536
       7: putfield      #6                  // Field bufferSize:I
      10: aload_0
      11: iconst_0
      12: putfield      #7                  // Field bufferLength:I
      15: aload_0
      16: iconst_0
      17: putfield      #8                  // Field bufferPosn:I
      20: aload_0
      21: aload_1
      22: putfield      #9                  // Field in:Ljava/io/InputStream;
      25: aload_0
      26: iload_2
      27: putfield      #6                  // Field bufferSize:I
      30: aload_0
      31: aload_0
      32: getfield      #6                  // Field bufferSize:I
      35: newarray       byte
      37: putfield      #10                 // Field buffer:[B
      40: aload_0
      41: aload_3
      42: putfield      #11                 // Field recordDelimiterBytes:[B
      45: return

  public org.apache.hadoop.util.LineReader(java.io.InputStream, org.apache.hadoop.conf.Configuration, byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #3                  // int 65536
       7: putfield      #6                  // Field bufferSize:I
      10: aload_0
      11: iconst_0
      12: putfield      #7                  // Field bufferLength:I
      15: aload_0
      16: iconst_0
      17: putfield      #8                  // Field bufferPosn:I
      20: aload_0
      21: aload_1
      22: putfield      #9                  // Field in:Ljava/io/InputStream;
      25: aload_0
      26: aload_2
      27: ldc           #12                 // String io.file.buffer.size
      29: ldc           #3                  // int 65536
      31: invokevirtual #13                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      34: putfield      #6                  // Field bufferSize:I
      37: aload_0
      38: aload_0
      39: getfield      #6                  // Field bufferSize:I
      42: newarray       byte
      44: putfield      #10                 // Field buffer:[B
      47: aload_0
      48: aload_3
      49: putfield      #11                 // Field recordDelimiterBytes:[B
      52: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field in:Ljava/io/InputStream;
       4: invokevirtual #14                 // Method java/io/InputStream.close:()V
       7: return

  public int readLine(org.apache.hadoop.io.Text, int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field recordDelimiterBytes:[B
       4: ifnull        15
       7: aload_0
       8: aload_1
       9: iload_2
      10: iload_3
      11: invokespecial #15                 // Method readCustomLine:(Lorg/apache/hadoop/io/Text;II)I
      14: ireturn
      15: aload_0
      16: aload_1
      17: iload_2
      18: iload_3
      19: invokespecial #16                 // Method readDefaultLine:(Lorg/apache/hadoop/io/Text;II)I
      22: ireturn

  protected int fillBuffer(java.io.InputStream, byte[], boolean) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #17                 // Method java/io/InputStream.read:([B)I
       5: ireturn

  private int readDefaultLine(org.apache.hadoop.io.Text, int, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #18                 // Method org/apache/hadoop/io/Text.clear:()V
       4: iconst_0
       5: istore        4
       7: iconst_0
       8: istore        5
      10: iconst_0
      11: istore        6
      13: lconst_0
      14: lstore        7
      16: aload_0
      17: getfield      #8                  // Field bufferPosn:I
      20: istore        9
      22: aload_0
      23: getfield      #8                  // Field bufferPosn:I
      26: aload_0
      27: getfield      #7                  // Field bufferLength:I
      30: if_icmplt     80
      33: aload_0
      34: iconst_0
      35: dup_x1
      36: putfield      #8                  // Field bufferPosn:I
      39: istore        9
      41: iload         6
      43: ifeq          52
      46: lload         7
      48: lconst_1
      49: ladd
      50: lstore        7
      52: aload_0
      53: aload_0
      54: aload_0
      55: getfield      #9                  // Field in:Ljava/io/InputStream;
      58: aload_0
      59: getfield      #10                 // Field buffer:[B
      62: iload         6
      64: invokevirtual #19                 // Method fillBuffer:(Ljava/io/InputStream;[BZ)I
      67: putfield      #7                  // Field bufferLength:I
      70: aload_0
      71: getfield      #7                  // Field bufferLength:I
      74: ifgt          80
      77: goto          264
      80: aload_0
      81: getfield      #8                  // Field bufferPosn:I
      84: aload_0
      85: getfield      #7                  // Field bufferLength:I
      88: if_icmpge     175
      91: aload_0
      92: getfield      #10                 // Field buffer:[B
      95: aload_0
      96: getfield      #8                  // Field bufferPosn:I
      99: baload
     100: bipush        10
     102: if_icmpne     130
     105: iload         6
     107: ifeq          114
     110: iconst_2
     111: goto          115
     114: iconst_1
     115: istore        5
     117: aload_0
     118: dup
     119: getfield      #8                  // Field bufferPosn:I
     122: iconst_1
     123: iadd
     124: putfield      #8                  // Field bufferPosn:I
     127: goto          175
     130: iload         6
     132: ifeq          141
     135: iconst_1
     136: istore        5
     138: goto          175
     141: aload_0
     142: getfield      #10                 // Field buffer:[B
     145: aload_0
     146: getfield      #8                  // Field bufferPosn:I
     149: baload
     150: bipush        13
     152: if_icmpne     159
     155: iconst_1
     156: goto          160
     159: iconst_0
     160: istore        6
     162: aload_0
     163: dup
     164: getfield      #8                  // Field bufferPosn:I
     167: iconst_1
     168: iadd
     169: putfield      #8                  // Field bufferPosn:I
     172: goto          80
     175: aload_0
     176: getfield      #8                  // Field bufferPosn:I
     179: iload         9
     181: isub
     182: istore        10
     184: iload         6
     186: ifeq          197
     189: iload         5
     191: ifne          197
     194: iinc          10, -1
     197: lload         7
     199: iload         10
     201: i2l
     202: ladd
     203: lstore        7
     205: iload         10
     207: iload         5
     209: isub
     210: istore        11
     212: iload         11
     214: iload_2
     215: iload         4
     217: isub
     218: if_icmple     227
     221: iload_2
     222: iload         4
     224: isub
     225: istore        11
     227: iload         11
     229: ifle          251
     232: aload_1
     233: aload_0
     234: getfield      #10                 // Field buffer:[B
     237: iload         9
     239: iload         11
     241: invokevirtual #20                 // Method org/apache/hadoop/io/Text.append:([BII)V
     244: iload         4
     246: iload         11
     248: iadd
     249: istore        4
     251: iload         5
     253: ifne          264
     256: lload         7
     258: iload_3
     259: i2l
     260: lcmp
     261: iflt          16
     264: lload         7
     266: ldc2_w        #22                 // long 2147483647l
     269: lcmp
     270: ifle          301
     273: new           #24                 // class java/io/IOException
     276: dup
     277: new           #25                 // class java/lang/StringBuilder
     280: dup
     281: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     284: ldc           #27                 // String Too many bytes before newline:
     286: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     289: lload         7
     291: invokevirtual #29                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     294: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     297: invokespecial #31                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     300: athrow
     301: lload         7
     303: l2i
     304: ireturn

  private int readCustomLine(org.apache.hadoop.io.Text, int, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #18                 // Method org/apache/hadoop/io/Text.clear:()V
       4: iconst_0
       5: istore        4
       7: lconst_0
       8: lstore        5
      10: iconst_0
      11: istore        7
      13: iconst_0
      14: istore        8
      16: aload_0
      17: getfield      #8                  // Field bufferPosn:I
      20: istore        9
      22: aload_0
      23: getfield      #8                  // Field bufferPosn:I
      26: aload_0
      27: getfield      #7                  // Field bufferLength:I
      30: if_icmplt     101
      33: aload_0
      34: iconst_0
      35: dup_x1
      36: putfield      #8                  // Field bufferPosn:I
      39: istore        9
      41: aload_0
      42: aload_0
      43: aload_0
      44: getfield      #9                  // Field in:Ljava/io/InputStream;
      47: aload_0
      48: getfield      #10                 // Field buffer:[B
      51: iload         8
      53: ifle          60
      56: iconst_1
      57: goto          61
      60: iconst_0
      61: invokevirtual #19                 // Method fillBuffer:(Ljava/io/InputStream;[BZ)I
      64: putfield      #7                  // Field bufferLength:I
      67: aload_0
      68: getfield      #7                  // Field bufferLength:I
      71: ifgt          101
      74: iload         8
      76: ifle          357
      79: aload_1
      80: aload_0
      81: getfield      #11                 // Field recordDelimiterBytes:[B
      84: iconst_0
      85: iload         8
      87: invokevirtual #20                 // Method org/apache/hadoop/io/Text.append:([BII)V
      90: lload         5
      92: iload         8
      94: i2l
      95: ladd
      96: lstore        5
      98: goto          357
     101: aload_0
     102: getfield      #8                  // Field bufferPosn:I
     105: aload_0
     106: getfield      #7                  // Field bufferLength:I
     109: if_icmpge     202
     112: aload_0
     113: getfield      #10                 // Field buffer:[B
     116: aload_0
     117: getfield      #8                  // Field bufferPosn:I
     120: baload
     121: aload_0
     122: getfield      #11                 // Field recordDelimiterBytes:[B
     125: iload         7
     127: baload
     128: if_icmpne     157
     131: iinc          7, 1
     134: iload         7
     136: aload_0
     137: getfield      #11                 // Field recordDelimiterBytes:[B
     140: arraylength
     141: if_icmplt     189
     144: aload_0
     145: dup
     146: getfield      #8                  // Field bufferPosn:I
     149: iconst_1
     150: iadd
     151: putfield      #8                  // Field bufferPosn:I
     154: goto          202
     157: iload         7
     159: ifeq          189
     162: aload_0
     163: dup
     164: getfield      #8                  // Field bufferPosn:I
     167: iload         7
     169: isub
     170: putfield      #8                  // Field bufferPosn:I
     173: aload_0
     174: getfield      #8                  // Field bufferPosn:I
     177: iconst_m1
     178: if_icmpge     186
     181: aload_0
     182: iconst_m1
     183: putfield      #8                  // Field bufferPosn:I
     186: iconst_0
     187: istore        7
     189: aload_0
     190: dup
     191: getfield      #8                  // Field bufferPosn:I
     194: iconst_1
     195: iadd
     196: putfield      #8                  // Field bufferPosn:I
     199: goto          101
     202: aload_0
     203: getfield      #8                  // Field bufferPosn:I
     206: iload         9
     208: isub
     209: istore        10
     211: lload         5
     213: iload         10
     215: i2l
     216: ladd
     217: lstore        5
     219: iload         10
     221: iload         7
     223: isub
     224: istore        11
     226: iload         11
     228: iload_2
     229: iload         4
     231: isub
     232: if_icmple     241
     235: iload_2
     236: iload         4
     238: isub
     239: istore        11
     241: lload         5
     243: iload         8
     245: i2l
     246: ladd
     247: lstore        5
     249: iload         11
     251: iflt          277
     254: iload         8
     256: ifle          277
     259: aload_1
     260: aload_0
     261: getfield      #11                 // Field recordDelimiterBytes:[B
     264: iconst_0
     265: iload         8
     267: invokevirtual #20                 // Method org/apache/hadoop/io/Text.append:([BII)V
     270: iconst_0
     271: istore        8
     273: aload_0
     274: invokevirtual #32                 // Method unsetNeedAdditionalRecordAfterSplit:()V
     277: iload         11
     279: ifle          301
     282: aload_1
     283: aload_0
     284: getfield      #10                 // Field buffer:[B
     287: iload         9
     289: iload         11
     291: invokevirtual #20                 // Method org/apache/hadoop/io/Text.append:([BII)V
     294: iload         4
     296: iload         11
     298: iadd
     299: istore        4
     301: aload_0
     302: getfield      #8                  // Field bufferPosn:I
     305: aload_0
     306: getfield      #7                  // Field bufferLength:I
     309: if_icmplt     339
     312: iload         7
     314: ifle          339
     317: iload         7
     319: aload_0
     320: getfield      #11                 // Field recordDelimiterBytes:[B
     323: arraylength
     324: if_icmpge     339
     327: iload         7
     329: istore        8
     331: lload         5
     333: iload         8
     335: i2l
     336: lsub
     337: lstore        5
     339: iload         7
     341: aload_0
     342: getfield      #11                 // Field recordDelimiterBytes:[B
     345: arraylength
     346: if_icmpge     357
     349: lload         5
     351: iload_3
     352: i2l
     353: lcmp
     354: iflt          16
     357: lload         5
     359: ldc2_w        #22                 // long 2147483647l
     362: lcmp
     363: ifle          394
     366: new           #24                 // class java/io/IOException
     369: dup
     370: new           #25                 // class java/lang/StringBuilder
     373: dup
     374: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     377: ldc           #33                 // String Too many bytes before delimiter:
     379: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     382: lload         5
     384: invokevirtual #29                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     387: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     390: invokespecial #31                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     393: athrow
     394: lload         5
     396: l2i
     397: ireturn

  public int readLine(org.apache.hadoop.io.Text, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: ldc           #34                 // int 2147483647
       5: invokevirtual #35                 // Method readLine:(Lorg/apache/hadoop/io/Text;II)I
       8: ireturn

  public int readLine(org.apache.hadoop.io.Text) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #34                 // int 2147483647
       4: ldc           #34                 // int 2147483647
       6: invokevirtual #35                 // Method readLine:(Lorg/apache/hadoop/io/Text;II)I
       9: ireturn

  protected int getBufferPosn();
    Code:
       0: aload_0
       1: getfield      #8                  // Field bufferPosn:I
       4: ireturn

  protected int getBufferSize();
    Code:
       0: aload_0
       1: getfield      #6                  // Field bufferSize:I
       4: ireturn

  protected void unsetNeedAdditionalRecordAfterSplit();
    Code:
       0: return
}
