Compiled from "Token.java"
public class org.apache.hadoop.security.token.Token<T extends org.apache.hadoop.security.token.TokenIdentifier> implements org.apache.hadoop.io.Writable {
  public static final org.slf4j.Logger LOG;

  private static java.util.Map<org.apache.hadoop.io.Text, java.lang.Class<? extends org.apache.hadoop.security.token.TokenIdentifier>> tokenKindMap;

  private byte[] identifier;

  private byte[] password;

  private org.apache.hadoop.io.Text kind;

  private org.apache.hadoop.io.Text service;

  private org.apache.hadoop.security.token.TokenRenewer renewer;

  private static java.util.ServiceLoader<org.apache.hadoop.security.token.TokenRenewer> renewers;

  private static final org.apache.hadoop.security.token.TokenRenewer TRIVIAL_RENEWER;

  public org.apache.hadoop.security.token.Token(T, org.apache.hadoop.security.token.SecretManager<T>);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_2
       6: aload_1
       7: invokevirtual #6                  // Method org/apache/hadoop/security/token/SecretManager.createPassword:(Lorg/apache/hadoop/security/token/TokenIdentifier;)[B
      10: putfield      #3                  // Field password:[B
      13: aload_0
      14: aload_1
      15: invokevirtual #7                  // Method org/apache/hadoop/security/token/TokenIdentifier.getBytes:()[B
      18: putfield      #4                  // Field identifier:[B
      21: aload_0
      22: aload_1
      23: invokevirtual #8                  // Method org/apache/hadoop/security/token/TokenIdentifier.getKind:()Lorg/apache/hadoop/io/Text;
      26: putfield      #2                  // Field kind:Lorg/apache/hadoop/io/Text;
      29: aload_0
      30: new           #9                  // class org/apache/hadoop/io/Text
      33: dup
      34: invokespecial #10                 // Method org/apache/hadoop/io/Text."<init>":()V
      37: putfield      #1                  // Field service:Lorg/apache/hadoop/io/Text;
      40: return

  public void setID(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field identifier:[B
       5: return

  public void setPassword(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field password:[B
       5: return

  public org.apache.hadoop.security.token.Token(byte[], byte[], org.apache.hadoop.io.Text, org.apache.hadoop.io.Text);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: ifnonnull     15
       9: iconst_0
      10: newarray       byte
      12: goto          16
      15: aload_1
      16: putfield      #4                  // Field identifier:[B
      19: aload_0
      20: aload_2
      21: ifnonnull     30
      24: iconst_0
      25: newarray       byte
      27: goto          31
      30: aload_2
      31: putfield      #3                  // Field password:[B
      34: aload_0
      35: aload_3
      36: ifnonnull     49
      39: new           #9                  // class org/apache/hadoop/io/Text
      42: dup
      43: invokespecial #10                 // Method org/apache/hadoop/io/Text."<init>":()V
      46: goto          50
      49: aload_3
      50: putfield      #2                  // Field kind:Lorg/apache/hadoop/io/Text;
      53: aload_0
      54: aload         4
      56: ifnonnull     69
      59: new           #9                  // class org/apache/hadoop/io/Text
      62: dup
      63: invokespecial #10                 // Method org/apache/hadoop/io/Text."<init>":()V
      66: goto          71
      69: aload         4
      71: putfield      #1                  // Field service:Lorg/apache/hadoop/io/Text;
      74: return

  public org.apache.hadoop.security.token.Token();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: newarray       byte
       8: putfield      #4                  // Field identifier:[B
      11: aload_0
      12: iconst_0
      13: newarray       byte
      15: putfield      #3                  // Field password:[B
      18: aload_0
      19: new           #9                  // class org/apache/hadoop/io/Text
      22: dup
      23: invokespecial #10                 // Method org/apache/hadoop/io/Text."<init>":()V
      26: putfield      #2                  // Field kind:Lorg/apache/hadoop/io/Text;
      29: aload_0
      30: new           #9                  // class org/apache/hadoop/io/Text
      33: dup
      34: invokespecial #10                 // Method org/apache/hadoop/io/Text."<init>":()V
      37: putfield      #1                  // Field service:Lorg/apache/hadoop/io/Text;
      40: return

  public org.apache.hadoop.security.token.Token(org.apache.hadoop.security.token.Token<T>);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: getfield      #4                  // Field identifier:[B
       9: invokevirtual #11                 // Method "[B".clone:()Ljava/lang/Object;
      12: checkcast     #12                 // class "[B"
      15: putfield      #4                  // Field identifier:[B
      18: aload_0
      19: aload_1
      20: getfield      #3                  // Field password:[B
      23: invokevirtual #13                 // Method "[B".clone:()Ljava/lang/Object;
      26: checkcast     #12                 // class "[B"
      29: putfield      #3                  // Field password:[B
      32: aload_0
      33: new           #9                  // class org/apache/hadoop/io/Text
      36: dup
      37: aload_1
      38: getfield      #2                  // Field kind:Lorg/apache/hadoop/io/Text;
      41: invokespecial #14                 // Method org/apache/hadoop/io/Text."<init>":(Lorg/apache/hadoop/io/Text;)V
      44: putfield      #2                  // Field kind:Lorg/apache/hadoop/io/Text;
      47: aload_0
      48: new           #9                  // class org/apache/hadoop/io/Text
      51: dup
      52: aload_1
      53: getfield      #1                  // Field service:Lorg/apache/hadoop/io/Text;
      56: invokespecial #14                 // Method org/apache/hadoop/io/Text."<init>":(Lorg/apache/hadoop/io/Text;)V
      59: putfield      #1                  // Field service:Lorg/apache/hadoop/io/Text;
      62: return

  public org.apache.hadoop.security.token.Token<T> copyToken();
    Code:
       0: new           #15                 // class org/apache/hadoop/security/token/Token
       3: dup
       4: aload_0
       5: invokespecial #16                 // Method "<init>":(Lorg/apache/hadoop/security/token/Token;)V
       8: areturn

  public org.apache.hadoop.security.token.Token(org.apache.hadoop.security.proto.SecurityProtos$TokenProto);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #17                 // Method org/apache/hadoop/security/proto/SecurityProtos$TokenProto.getIdentifier:()Lcom/google/protobuf/ByteString;
       9: invokevirtual #18                 // Method com/google/protobuf/ByteString.toByteArray:()[B
      12: putfield      #4                  // Field identifier:[B
      15: aload_0
      16: aload_1
      17: invokevirtual #19                 // Method org/apache/hadoop/security/proto/SecurityProtos$TokenProto.getPassword:()Lcom/google/protobuf/ByteString;
      20: invokevirtual #18                 // Method com/google/protobuf/ByteString.toByteArray:()[B
      23: putfield      #3                  // Field password:[B
      26: aload_0
      27: new           #9                  // class org/apache/hadoop/io/Text
      30: dup
      31: aload_1
      32: invokevirtual #20                 // Method org/apache/hadoop/security/proto/SecurityProtos$TokenProto.getKindBytes:()Lcom/google/protobuf/ByteString;
      35: invokevirtual #18                 // Method com/google/protobuf/ByteString.toByteArray:()[B
      38: invokespecial #21                 // Method org/apache/hadoop/io/Text."<init>":([B)V
      41: putfield      #2                  // Field kind:Lorg/apache/hadoop/io/Text;
      44: aload_0
      45: new           #9                  // class org/apache/hadoop/io/Text
      48: dup
      49: aload_1
      50: invokevirtual #22                 // Method org/apache/hadoop/security/proto/SecurityProtos$TokenProto.getServiceBytes:()Lcom/google/protobuf/ByteString;
      53: invokevirtual #18                 // Method com/google/protobuf/ByteString.toByteArray:()[B
      56: invokespecial #21                 // Method org/apache/hadoop/io/Text."<init>":([B)V
      59: putfield      #1                  // Field service:Lorg/apache/hadoop/io/Text;
      62: return

  public org.apache.hadoop.security.proto.SecurityProtos$TokenProto toTokenProto();
    Code:
       0: invokestatic  #23                 // Method org/apache/hadoop/security/proto/SecurityProtos$TokenProto.newBuilder:()Lorg/apache/hadoop/security/proto/SecurityProtos$TokenProto$Builder;
       3: aload_0
       4: invokevirtual #24                 // Method getIdentifier:()[B
       7: invokestatic  #25                 // Method com/google/protobuf/ByteString.copyFrom:([B)Lcom/google/protobuf/ByteString;
      10: invokevirtual #26                 // Method org/apache/hadoop/security/proto/SecurityProtos$TokenProto$Builder.setIdentifier:(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/security/proto/SecurityProtos$TokenProto$Builder;
      13: aload_0
      14: invokevirtual #27                 // Method getPassword:()[B
      17: invokestatic  #25                 // Method com/google/protobuf/ByteString.copyFrom:([B)Lcom/google/protobuf/ByteString;
      20: invokevirtual #28                 // Method org/apache/hadoop/security/proto/SecurityProtos$TokenProto$Builder.setPassword:(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/security/proto/SecurityProtos$TokenProto$Builder;
      23: aload_0
      24: invokevirtual #29                 // Method getKind:()Lorg/apache/hadoop/io/Text;
      27: invokevirtual #30                 // Method org/apache/hadoop/io/Text.getBytes:()[B
      30: iconst_0
      31: aload_0
      32: invokevirtual #29                 // Method getKind:()Lorg/apache/hadoop/io/Text;
      35: invokevirtual #31                 // Method org/apache/hadoop/io/Text.getLength:()I
      38: invokestatic  #32                 // Method com/google/protobuf/ByteString.copyFrom:([BII)Lcom/google/protobuf/ByteString;
      41: invokevirtual #33                 // Method org/apache/hadoop/security/proto/SecurityProtos$TokenProto$Builder.setKindBytes:(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/security/proto/SecurityProtos$TokenProto$Builder;
      44: aload_0
      45: invokevirtual #34                 // Method getService:()Lorg/apache/hadoop/io/Text;
      48: invokevirtual #30                 // Method org/apache/hadoop/io/Text.getBytes:()[B
      51: iconst_0
      52: aload_0
      53: invokevirtual #34                 // Method getService:()Lorg/apache/hadoop/io/Text;
      56: invokevirtual #31                 // Method org/apache/hadoop/io/Text.getLength:()I
      59: invokestatic  #32                 // Method com/google/protobuf/ByteString.copyFrom:([BII)Lcom/google/protobuf/ByteString;
      62: invokevirtual #35                 // Method org/apache/hadoop/security/proto/SecurityProtos$TokenProto$Builder.setServiceBytes:(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/security/proto/SecurityProtos$TokenProto$Builder;
      65: invokevirtual #36                 // Method org/apache/hadoop/security/proto/SecurityProtos$TokenProto$Builder.build:()Lorg/apache/hadoop/security/proto/SecurityProtos$TokenProto;
      68: areturn

  public byte[] getIdentifier();
    Code:
       0: aload_0
       1: getfield      #4                  // Field identifier:[B
       4: areturn

  private static java.lang.Class<? extends org.apache.hadoop.security.token.TokenIdentifier> getClassForIdentifier(org.apache.hadoop.io.Text);
    Code:
       0: aconst_null
       1: astore_1
       2: ldc           #15                 // class org/apache/hadoop/security/token/Token
       4: dup
       5: astore_2
       6: monitorenter
       7: getstatic     #37                 // Field tokenKindMap:Ljava/util/Map;
      10: ifnonnull     87
      13: invokestatic  #38                 // Method com/google/common/collect/Maps.newHashMap:()Ljava/util/HashMap;
      16: putstatic     #37                 // Field tokenKindMap:Ljava/util/Map;
      19: ldc           #39                 // class org/apache/hadoop/security/token/TokenIdentifier
      21: invokestatic  #40                 // Method java/util/ServiceLoader.load:(Ljava/lang/Class;)Ljava/util/ServiceLoader;
      24: invokevirtual #41                 // Method java/util/ServiceLoader.iterator:()Ljava/util/Iterator;
      27: astore_3
      28: aload_3
      29: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          87
      37: aload_3
      38: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #39                 // class org/apache/hadoop/security/token/TokenIdentifier
      46: astore        4
      48: getstatic     #37                 // Field tokenKindMap:Ljava/util/Map;
      51: aload         4
      53: invokevirtual #8                  // Method org/apache/hadoop/security/token/TokenIdentifier.getKind:()Lorg/apache/hadoop/io/Text;
      56: aload         4
      58: invokevirtual #44                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      61: invokeinterface #45,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      66: pop
      67: goto          28
      70: astore        4
      72: getstatic     #48                 // Field LOG:Lorg/slf4j/Logger;
      75: ldc           #49                 // String Failed to load token identifier implementation
      77: aload         4
      79: invokeinterface #50,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      84: goto          28
      87: getstatic     #37                 // Field tokenKindMap:Ljava/util/Map;
      90: aload_0
      91: invokeinterface #51,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      96: checkcast     #52                 // class java/lang/Class
      99: astore_1
     100: aload_2
     101: monitorexit
     102: goto          112
     105: astore        5
     107: aload_2
     108: monitorexit
     109: aload         5
     111: athrow
     112: aload_1
     113: ifnonnull     129
     116: getstatic     #48                 // Field LOG:Lorg/slf4j/Logger;
     119: ldc           #53                 // String Cannot find class for token kind {}
     121: aload_0
     122: invokeinterface #54,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     127: aconst_null
     128: areturn
     129: aload_1
     130: areturn
    Exception table:
       from    to  target type
          37    67    70   Class java/util/ServiceConfigurationError
          37    67    70   Class java/lang/LinkageError
           7   102   105   any
         105   109   105   any

  public T decodeIdentifier() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method getKind:()Lorg/apache/hadoop/io/Text;
       4: invokestatic  #55                 // Method getClassForIdentifier:(Lorg/apache/hadoop/io/Text;)Ljava/lang/Class;
       7: astore_1
       8: aload_1
       9: ifnonnull     14
      12: aconst_null
      13: areturn
      14: aload_1
      15: aconst_null
      16: invokestatic  #56                 // Method org/apache/hadoop/util/ReflectionUtils.newInstance:(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;
      19: checkcast     #39                 // class org/apache/hadoop/security/token/TokenIdentifier
      22: astore_2
      23: new           #57                 // class java/io/ByteArrayInputStream
      26: dup
      27: aload_0
      28: getfield      #4                  // Field identifier:[B
      31: invokespecial #58                 // Method java/io/ByteArrayInputStream."<init>":([B)V
      34: astore_3
      35: new           #59                 // class java/io/DataInputStream
      38: dup
      39: aload_3
      40: invokespecial #60                 // Method java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
      43: astore        4
      45: aload_2
      46: aload         4
      48: invokevirtual #61                 // Method org/apache/hadoop/security/token/TokenIdentifier.readFields:(Ljava/io/DataInput;)V
      51: aload         4
      53: invokevirtual #62                 // Method java/io/DataInputStream.close:()V
      56: aload_2
      57: areturn

  public byte[] getPassword();
    Code:
       0: aload_0
       1: getfield      #3                  // Field password:[B
       4: areturn

  public synchronized org.apache.hadoop.io.Text getKind();
    Code:
       0: aload_0
       1: getfield      #2                  // Field kind:Lorg/apache/hadoop/io/Text;
       4: areturn

  public synchronized void setKind(org.apache.hadoop.io.Text);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field kind:Lorg/apache/hadoop/io/Text;
       5: aload_0
       6: aconst_null
       7: putfield      #63                 // Field renewer:Lorg/apache/hadoop/security/token/TokenRenewer;
      10: return

  public org.apache.hadoop.io.Text getService();
    Code:
       0: aload_0
       1: getfield      #1                  // Field service:Lorg/apache/hadoop/io/Text;
       4: areturn

  public void setService(org.apache.hadoop.io.Text);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field service:Lorg/apache/hadoop/io/Text;
       5: return

  public boolean isPrivate();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isPrivateCloneOf(org.apache.hadoop.io.Text);
    Code:
       0: iconst_0
       1: ireturn

  public org.apache.hadoop.security.token.Token<T> privateClone(org.apache.hadoop.io.Text);
    Code:
       0: new           #64                 // class org/apache/hadoop/security/token/Token$PrivateToken
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #65                 // Method org/apache/hadoop/security/token/Token$PrivateToken."<init>":(Lorg/apache/hadoop/security/token/Token;Lorg/apache/hadoop/io/Text;)V
       9: areturn

  public void readFields(java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #66                 // Method org/apache/hadoop/io/WritableUtils.readVInt:(Ljava/io/DataInput;)I
       4: istore_2
       5: aload_0
       6: getfield      #4                  // Field identifier:[B
       9: ifnull        21
      12: aload_0
      13: getfield      #4                  // Field identifier:[B
      16: arraylength
      17: iload_2
      18: if_icmpeq     28
      21: aload_0
      22: iload_2
      23: newarray       byte
      25: putfield      #4                  // Field identifier:[B
      28: aload_1
      29: aload_0
      30: getfield      #4                  // Field identifier:[B
      33: invokeinterface #67,  2           // InterfaceMethod java/io/DataInput.readFully:([B)V
      38: aload_1
      39: invokestatic  #66                 // Method org/apache/hadoop/io/WritableUtils.readVInt:(Ljava/io/DataInput;)I
      42: istore_2
      43: aload_0
      44: getfield      #3                  // Field password:[B
      47: ifnull        59
      50: aload_0
      51: getfield      #3                  // Field password:[B
      54: arraylength
      55: iload_2
      56: if_icmpeq     66
      59: aload_0
      60: iload_2
      61: newarray       byte
      63: putfield      #3                  // Field password:[B
      66: aload_1
      67: aload_0
      68: getfield      #3                  // Field password:[B
      71: invokeinterface #67,  2           // InterfaceMethod java/io/DataInput.readFully:([B)V
      76: aload_0
      77: getfield      #2                  // Field kind:Lorg/apache/hadoop/io/Text;
      80: aload_1
      81: invokevirtual #68                 // Method org/apache/hadoop/io/Text.readFields:(Ljava/io/DataInput;)V
      84: aload_0
      85: getfield      #1                  // Field service:Lorg/apache/hadoop/io/Text;
      88: aload_1
      89: invokevirtual #68                 // Method org/apache/hadoop/io/Text.readFields:(Ljava/io/DataInput;)V
      92: return

  public void write(java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #4                  // Field identifier:[B
       5: arraylength
       6: invokestatic  #69                 // Method org/apache/hadoop/io/WritableUtils.writeVInt:(Ljava/io/DataOutput;I)V
       9: aload_1
      10: aload_0
      11: getfield      #4                  // Field identifier:[B
      14: invokeinterface #70,  2           // InterfaceMethod java/io/DataOutput.write:([B)V
      19: aload_1
      20: aload_0
      21: getfield      #3                  // Field password:[B
      24: arraylength
      25: invokestatic  #69                 // Method org/apache/hadoop/io/WritableUtils.writeVInt:(Ljava/io/DataOutput;I)V
      28: aload_1
      29: aload_0
      30: getfield      #3                  // Field password:[B
      33: invokeinterface #70,  2           // InterfaceMethod java/io/DataOutput.write:([B)V
      38: aload_0
      39: getfield      #2                  // Field kind:Lorg/apache/hadoop/io/Text;
      42: aload_1
      43: invokevirtual #71                 // Method org/apache/hadoop/io/Text.write:(Ljava/io/DataOutput;)V
      46: aload_0
      47: getfield      #1                  // Field service:Lorg/apache/hadoop/io/Text;
      50: aload_1
      51: invokevirtual #71                 // Method org/apache/hadoop/io/Text.write:(Ljava/io/DataOutput;)V
      54: return

  private static java.lang.String encodeWritable(org.apache.hadoop.io.Writable) throws java.io.IOException;
    Code:
       0: new           #72                 // class org/apache/hadoop/io/DataOutputBuffer
       3: dup
       4: invokespecial #73                 // Method org/apache/hadoop/io/DataOutputBuffer."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokeinterface #74,  2           // InterfaceMethod org/apache/hadoop/io/Writable.write:(Ljava/io/DataOutput;)V
      15: new           #75                 // class org/apache/commons/codec/binary/Base64
      18: dup
      19: iconst_0
      20: aconst_null
      21: iconst_1
      22: invokespecial #76                 // Method org/apache/commons/codec/binary/Base64."<init>":(I[BZ)V
      25: astore_2
      26: aload_1
      27: invokevirtual #77                 // Method org/apache/hadoop/io/DataOutputBuffer.getLength:()I
      30: newarray       byte
      32: astore_3
      33: aload_1
      34: invokevirtual #78                 // Method org/apache/hadoop/io/DataOutputBuffer.getData:()[B
      37: iconst_0
      38: aload_3
      39: iconst_0
      40: aload_1
      41: invokevirtual #77                 // Method org/apache/hadoop/io/DataOutputBuffer.getLength:()I
      44: invokestatic  #79                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      47: aload_2
      48: aload_3
      49: invokevirtual #80                 // Method org/apache/commons/codec/binary/Base64.encodeToString:([B)Ljava/lang/String;
      52: areturn

  private static void decodeWritable(org.apache.hadoop.io.Writable, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #81                 // class org/apache/hadoop/HadoopIllegalArgumentException
       7: dup
       8: ldc           #82                 // String Invalid argument, newValue is null
      10: invokespecial #83                 // Method org/apache/hadoop/HadoopIllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: new           #75                 // class org/apache/commons/codec/binary/Base64
      17: dup
      18: iconst_0
      19: aconst_null
      20: iconst_1
      21: invokespecial #76                 // Method org/apache/commons/codec/binary/Base64."<init>":(I[BZ)V
      24: astore_2
      25: new           #84                 // class org/apache/hadoop/io/DataInputBuffer
      28: dup
      29: invokespecial #85                 // Method org/apache/hadoop/io/DataInputBuffer."<init>":()V
      32: astore_3
      33: aload_2
      34: aload_1
      35: invokevirtual #86                 // Method org/apache/commons/codec/binary/Base64.decode:(Ljava/lang/String;)[B
      38: astore        4
      40: aload_3
      41: aload         4
      43: aload         4
      45: arraylength
      46: invokevirtual #87                 // Method org/apache/hadoop/io/DataInputBuffer.reset:([BI)V
      49: aload_0
      50: aload_3
      51: invokeinterface #88,  2           // InterfaceMethod org/apache/hadoop/io/Writable.readFields:(Ljava/io/DataInput;)V
      56: return

  public java.lang.String encodeToUrlString() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #89                 // Method encodeWritable:(Lorg/apache/hadoop/io/Writable;)Ljava/lang/String;
       4: areturn

  public void decodeFromUrlString(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #90                 // Method decodeWritable:(Lorg/apache/hadoop/io/Writable;Ljava/lang/String;)V
       5: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #44                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #44                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #15                 // class org/apache/hadoop/security/token/Token
      28: astore_2
      29: aload_0
      30: getfield      #4                  // Field identifier:[B
      33: aload_2
      34: getfield      #4                  // Field identifier:[B
      37: invokestatic  #91                 // Method java/security/MessageDigest.isEqual:([B[B)Z
      40: ifeq          89
      43: aload_0
      44: getfield      #3                  // Field password:[B
      47: aload_2
      48: getfield      #3                  // Field password:[B
      51: invokestatic  #91                 // Method java/security/MessageDigest.isEqual:([B[B)Z
      54: ifeq          89
      57: aload_0
      58: getfield      #2                  // Field kind:Lorg/apache/hadoop/io/Text;
      61: aload_2
      62: getfield      #2                  // Field kind:Lorg/apache/hadoop/io/Text;
      65: invokevirtual #92                 // Method org/apache/hadoop/io/Text.equals:(Ljava/lang/Object;)Z
      68: ifeq          89
      71: aload_0
      72: getfield      #1                  // Field service:Lorg/apache/hadoop/io/Text;
      75: aload_2
      76: getfield      #1                  // Field service:Lorg/apache/hadoop/io/Text;
      79: invokevirtual #92                 // Method org/apache/hadoop/io/Text.equals:(Ljava/lang/Object;)Z
      82: ifeq          89
      85: iconst_1
      86: goto          90
      89: iconst_0
      90: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #4                  // Field identifier:[B
       4: aload_0
       5: getfield      #4                  // Field identifier:[B
       8: arraylength
       9: invokestatic  #93                 // Method org/apache/hadoop/io/WritableComparator.hashBytes:([BI)I
      12: ireturn

  private static void addBinaryBuffer(java.lang.StringBuilder, byte[]);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_1
       4: arraylength
       5: if_icmpge     57
       8: iload_2
       9: ifeq          19
      12: aload_0
      13: bipush        32
      15: invokevirtual #94                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      18: pop
      19: sipush        255
      22: aload_1
      23: iload_2
      24: baload
      25: iand
      26: invokestatic  #95                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      29: astore_3
      30: aload_3
      31: invokevirtual #96                 // Method java/lang/String.length:()I
      34: iconst_2
      35: if_icmpge     45
      38: aload_0
      39: bipush        48
      41: invokevirtual #94                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      44: pop
      45: aload_0
      46: aload_3
      47: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: pop
      51: iinc          2, 1
      54: goto          2
      57: return

  private void identifierToString(java.lang.StringBuilder);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: invokevirtual #98                 // Method decodeIdentifier:()Lorg/apache/hadoop/security/token/TokenIdentifier;
       6: astore_2
       7: aload_2
       8: ifnull        30
      11: aload_1
      12: ldc           #99                 // String (
      14: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: aload_2
      18: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      21: ldc           #101                // String )
      23: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: pop
      27: goto          112
      30: aload_1
      31: aload_0
      32: getfield      #4                  // Field identifier:[B
      35: invokestatic  #102                // Method addBinaryBuffer:(Ljava/lang/StringBuilder;[B)V
      38: goto          112
      41: astore_3
      42: aload_2
      43: ifnull        65
      46: aload_1
      47: ldc           #99                 // String (
      49: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_2
      53: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      56: ldc           #101                // String )
      58: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: pop
      62: goto          112
      65: aload_1
      66: aload_0
      67: getfield      #4                  // Field identifier:[B
      70: invokestatic  #102                // Method addBinaryBuffer:(Ljava/lang/StringBuilder;[B)V
      73: goto          112
      76: astore        4
      78: aload_2
      79: ifnull        101
      82: aload_1
      83: ldc           #99                 // String (
      85: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: aload_2
      89: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      92: ldc           #101                // String )
      94: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: pop
      98: goto          109
     101: aload_1
     102: aload_0
     103: getfield      #4                  // Field identifier:[B
     106: invokestatic  #102                // Method addBinaryBuffer:(Ljava/lang/StringBuilder;[B)V
     109: aload         4
     111: athrow
     112: return
    Exception table:
       from    to  target type
           2     7    41   Class java/io/IOException
           2     7    76   any
          76    78    76   any

  public java.lang.String toString();
    Code:
       0: new           #104                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #106                // String Kind:
      11: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_1
      16: aload_0
      17: getfield      #2                  // Field kind:Lorg/apache/hadoop/io/Text;
      20: invokevirtual #107                // Method org/apache/hadoop/io/Text.toString:()Ljava/lang/String;
      23: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: pop
      27: aload_1
      28: ldc           #108                // String , Service:
      30: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: pop
      34: aload_1
      35: aload_0
      36: getfield      #1                  // Field service:Lorg/apache/hadoop/io/Text;
      39: invokevirtual #107                // Method org/apache/hadoop/io/Text.toString:()Ljava/lang/String;
      42: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: pop
      46: aload_1
      47: ldc           #109                // String , Ident:
      49: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: pop
      53: aload_0
      54: aload_1
      55: invokespecial #110                // Method identifierToString:(Ljava/lang/StringBuilder;)V
      58: aload_1
      59: invokevirtual #111                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: areturn

  public java.lang.String buildCacheKey();
    Code:
       0: iconst_3
       1: anewarray     #12                 // class "[B"
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #2                  // Field kind:Lorg/apache/hadoop/io/Text;
      10: invokevirtual #30                 // Method org/apache/hadoop/io/Text.getBytes:()[B
      13: aastore
      14: dup
      15: iconst_1
      16: aload_0
      17: getfield      #4                  // Field identifier:[B
      20: aastore
      21: dup
      22: iconst_2
      23: aload_0
      24: getfield      #3                  // Field password:[B
      27: aastore
      28: invokestatic  #112                // Method com/google/common/primitives/Bytes.concat:([[B)[B
      31: invokestatic  #113                // Method java/util/UUID.nameUUIDFromBytes:([B)Ljava/util/UUID;
      34: invokevirtual #114                // Method java/util/UUID.toString:()Ljava/lang/String;
      37: areturn

  private synchronized org.apache.hadoop.security.token.TokenRenewer getRenewer() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #63                 // Field renewer:Lorg/apache/hadoop/security/token/TokenRenewer;
       4: ifnull        12
       7: aload_0
       8: getfield      #63                 // Field renewer:Lorg/apache/hadoop/security/token/TokenRenewer;
      11: areturn
      12: aload_0
      13: getstatic     #115                // Field TRIVIAL_RENEWER:Lorg/apache/hadoop/security/token/TokenRenewer;
      16: putfield      #63                 // Field renewer:Lorg/apache/hadoop/security/token/TokenRenewer;
      19: getstatic     #116                // Field renewers:Ljava/util/ServiceLoader;
      22: dup
      23: astore_1
      24: monitorenter
      25: getstatic     #116                // Field renewers:Ljava/util/ServiceLoader;
      28: invokevirtual #41                 // Method java/util/ServiceLoader.iterator:()Ljava/util/Iterator;
      31: astore_2
      32: aload_2
      33: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      38: ifeq          92
      41: aload_2
      42: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #117                // class org/apache/hadoop/security/token/TokenRenewer
      50: astore_3
      51: aload_3
      52: aload_0
      53: getfield      #2                  // Field kind:Lorg/apache/hadoop/io/Text;
      56: invokevirtual #118                // Method org/apache/hadoop/security/token/TokenRenewer.handleKind:(Lorg/apache/hadoop/io/Text;)Z
      59: ifeq          74
      62: aload_0
      63: aload_3
      64: putfield      #63                 // Field renewer:Lorg/apache/hadoop/security/token/TokenRenewer;
      67: aload_0
      68: getfield      #63                 // Field renewer:Lorg/apache/hadoop/security/token/TokenRenewer;
      71: aload_1
      72: monitorexit
      73: areturn
      74: goto          32
      77: astore_3
      78: getstatic     #48                 // Field LOG:Lorg/slf4j/Logger;
      81: ldc           #119                // String Failed to load token renewer implementation
      83: aload_3
      84: invokeinterface #50,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      89: goto          32
      92: aload_1
      93: monitorexit
      94: goto          104
      97: astore        4
      99: aload_1
     100: monitorexit
     101: aload         4
     103: athrow
     104: getstatic     #48                 // Field LOG:Lorg/slf4j/Logger;
     107: ldc           #120                // String No TokenRenewer defined for token kind {}
     109: aload_0
     110: getfield      #2                  // Field kind:Lorg/apache/hadoop/io/Text;
     113: invokeinterface #121,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
     118: aload_0
     119: getfield      #63                 // Field renewer:Lorg/apache/hadoop/security/token/TokenRenewer;
     122: areturn
    Exception table:
       from    to  target type
          41    71    77   Class java/util/ServiceConfigurationError
          25    73    97   any
          74    94    97   any
          97   101    97   any

  public boolean isManaged() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #122                // Method getRenewer:()Lorg/apache/hadoop/security/token/TokenRenewer;
       4: aload_0
       5: invokevirtual #123                // Method org/apache/hadoop/security/token/TokenRenewer.isManaged:(Lorg/apache/hadoop/security/token/Token;)Z
       8: ireturn

  public long renew(org.apache.hadoop.conf.Configuration) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: invokespecial #122                // Method getRenewer:()Lorg/apache/hadoop/security/token/TokenRenewer;
       4: aload_0
       5: aload_1
       6: invokevirtual #124                // Method org/apache/hadoop/security/token/TokenRenewer.renew:(Lorg/apache/hadoop/security/token/Token;Lorg/apache/hadoop/conf/Configuration;)J
       9: lreturn

  public void cancel(org.apache.hadoop.conf.Configuration) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: invokespecial #122                // Method getRenewer:()Lorg/apache/hadoop/security/token/TokenRenewer;
       4: aload_0
       5: aload_1
       6: invokevirtual #125                // Method org/apache/hadoop/security/token/TokenRenewer.cancel:(Lorg/apache/hadoop/security/token/Token;Lorg/apache/hadoop/conf/Configuration;)V
       9: return

  static byte[] access$000(org.apache.hadoop.security.token.Token);
    Code:
       0: aload_0
       1: getfield      #4                  // Field identifier:[B
       4: areturn

  static byte[] access$100(org.apache.hadoop.security.token.Token);
    Code:
       0: aload_0
       1: getfield      #3                  // Field password:[B
       4: areturn

  static org.apache.hadoop.io.Text access$200(org.apache.hadoop.security.token.Token);
    Code:
       0: aload_0
       1: getfield      #2                  // Field kind:Lorg/apache/hadoop/io/Text;
       4: areturn

  static org.apache.hadoop.io.Text access$300(org.apache.hadoop.security.token.Token);
    Code:
       0: aload_0
       1: getfield      #1                  // Field service:Lorg/apache/hadoop/io/Text;
       4: areturn

  static {};
    Code:
       0: ldc           #15                 // class org/apache/hadoop/security/token/Token
       2: invokestatic  #126                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #48                 // Field LOG:Lorg/slf4j/Logger;
       8: ldc           #117                // class org/apache/hadoop/security/token/TokenRenewer
      10: invokestatic  #40                 // Method java/util/ServiceLoader.load:(Ljava/lang/Class;)Ljava/util/ServiceLoader;
      13: putstatic     #116                // Field renewers:Ljava/util/ServiceLoader;
      16: new           #127                // class org/apache/hadoop/security/token/Token$TrivialRenewer
      19: dup
      20: invokespecial #128                // Method org/apache/hadoop/security/token/Token$TrivialRenewer."<init>":()V
      23: putstatic     #115                // Field TRIVIAL_RENEWER:Lorg/apache/hadoop/security/token/TokenRenewer;
      26: return
}
