Compiled from "CopyCommandWithMultiThread.java"
public abstract class org.apache.hadoop.fs.shell.CopyCommandWithMultiThread extends org.apache.hadoop.fs.shell.CommandWithDestination {
  private int threadCount;

  private java.util.concurrent.ThreadPoolExecutor executor;

  private int threadPoolQueueSize;

  public static final int DEFAULT_QUEUE_SIZE;

  public org.apache.hadoop.fs.shell.CopyCommandWithMultiThread();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/fs/shell/CommandWithDestination."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field threadCount:I
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
      14: aload_0
      15: sipush        1024
      18: putfield      #5                  // Field threadPoolQueueSize:I
      21: return

  protected void setThreadCount(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        16
       4: aload_0
       5: aload_1
       6: invokestatic  #6                  // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
       9: iconst_1
      10: invokestatic  #7                  // Method java/lang/Math.max:(II)I
      13: putfield      #2                  // Field threadCount:I
      16: return

  protected void setThreadPoolQueueSize(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        25
       4: aload_1
       5: invokestatic  #6                  // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
       8: istore_2
       9: aload_0
      10: iload_2
      11: iconst_1
      12: if_icmpge     21
      15: sipush        1024
      18: goto          22
      21: iload_2
      22: putfield      #5                  // Field threadPoolQueueSize:I
      25: return

  protected int getThreadCount();
    Code:
       0: aload_0
       1: getfield      #2                  // Field threadCount:I
       4: ireturn

  protected int getThreadPoolQueueSize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field threadPoolQueueSize:I
       4: ireturn

  protected java.util.concurrent.ThreadPoolExecutor getExecutor();
    Code:
       0: aload_0
       1: getfield      #3                  // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
       4: areturn

  protected void processArguments(java.util.LinkedList<org.apache.hadoop.fs.shell.PathData>) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #8                  // Method isMultiThreadNecessary:(Ljava/util/LinkedList;)Z
       5: ifeq          12
       8: aload_0
       9: invokespecial #9                  // Method initThreadPoolExecutor:()V
      12: aload_0
      13: aload_1
      14: invokespecial #10                 // Method org/apache/hadoop/fs/shell/CommandWithDestination.processArguments:(Ljava/util/LinkedList;)V
      17: aload_0
      18: getfield      #3                  // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
      21: ifnull        28
      24: aload_0
      25: invokespecial #11                 // Method waitForCompletion:()V
      28: return

  protected boolean isMultiThreadNecessary(java.util.LinkedList<org.apache.hadoop.fs.shell.PathData>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field threadCount:I
       4: iconst_1
       5: if_icmple     20
       8: aload_0
       9: aload_1
      10: invokespecial #12                 // Method hasMoreThanOneSourcePaths:(Ljava/util/LinkedList;)Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  private boolean hasMoreThanOneSourcePaths(java.util.LinkedList<org.apache.hadoop.fs.shell.PathData>) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #13                 // Method java/util/LinkedList.size:()I
       4: iconst_1
       5: if_icmple     10
       8: iconst_1
       9: ireturn
      10: aload_1
      11: invokevirtual #13                 // Method java/util/LinkedList.size:()I
      14: iconst_1
      15: if_icmpne     45
      18: aload_1
      19: iconst_0
      20: invokevirtual #14                 // Method java/util/LinkedList.get:(I)Ljava/lang/Object;
      23: checkcast     #15                 // class org/apache/hadoop/fs/shell/PathData
      26: astore_2
      27: aload_2
      28: getfield      #16                 // Field org/apache/hadoop/fs/shell/PathData.stat:Lorg/apache/hadoop/fs/FileStatus;
      31: ifnonnull     39
      34: aload_2
      35: invokevirtual #17                 // Method org/apache/hadoop/fs/shell/PathData.refreshStatus:()Lorg/apache/hadoop/fs/FileStatus;
      38: pop
      39: aload_0
      40: aload_2
      41: invokevirtual #18                 // Method isPathRecursable:(Lorg/apache/hadoop/fs/shell/PathData;)Z
      44: ireturn
      45: iconst_0
      46: ireturn

  private void initThreadPoolExecutor();
    Code:
       0: aload_0
       1: new           #19                 // class java/util/concurrent/ThreadPoolExecutor
       4: dup
       5: aload_0
       6: getfield      #2                  // Field threadCount:I
       9: aload_0
      10: getfield      #2                  // Field threadCount:I
      13: lconst_1
      14: getstatic     #20                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      17: new           #21                 // class java/util/concurrent/ArrayBlockingQueue
      20: dup
      21: aload_0
      22: getfield      #5                  // Field threadPoolQueueSize:I
      25: invokespecial #22                 // Method java/util/concurrent/ArrayBlockingQueue."<init>":(I)V
      28: new           #23                 // class java/util/concurrent/ThreadPoolExecutor$CallerRunsPolicy
      31: dup
      32: invokespecial #24                 // Method java/util/concurrent/ThreadPoolExecutor$CallerRunsPolicy."<init>":()V
      35: invokespecial #25                 // Method java/util/concurrent/ThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/RejectedExecutionHandler;)V
      38: putfield      #3                  // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
      41: return

  private void waitForCompletion();
    Code:
       0: aload_0
       1: getfield      #3                  // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
       4: ifnull        51
       7: aload_0
       8: getfield      #3                  // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
      11: invokevirtual #26                 // Method java/util/concurrent/ThreadPoolExecutor.shutdown:()V
      14: aload_0
      15: getfield      #3                  // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
      18: ldc2_w        #28                 // long 9223372036854775807l
      21: getstatic     #30                 // Field java/util/concurrent/TimeUnit.MINUTES:Ljava/util/concurrent/TimeUnit;
      24: invokevirtual #31                 // Method java/util/concurrent/ThreadPoolExecutor.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
      27: pop
      28: goto          51
      31: astore_1
      32: aload_0
      33: getfield      #3                  // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
      36: invokevirtual #33                 // Method java/util/concurrent/ThreadPoolExecutor.shutdownNow:()Ljava/util/List;
      39: pop
      40: aload_0
      41: aload_1
      42: invokevirtual #34                 // Method displayError:(Ljava/lang/Exception;)V
      45: invokestatic  #35                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      48: invokevirtual #36                 // Method java/lang/Thread.interrupt:()V
      51: return
    Exception table:
       from    to  target type
          14    28    31   Class java/lang/InterruptedException

  protected void copyFileToTarget(org.apache.hadoop.fs.shell.PathData, org.apache.hadoop.fs.shell.PathData) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
       4: ifnonnull     16
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokespecial #37                 // Method org/apache/hadoop/fs/shell/CommandWithDestination.copyFileToTarget:(Lorg/apache/hadoop/fs/shell/PathData;Lorg/apache/hadoop/fs/shell/PathData;)V
      13: goto          32
      16: aload_0
      17: getfield      #3                  // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
      20: aload_0
      21: aload_1
      22: aload_2
      23: invokedynamic #38,  0             // InvokeDynamic #0:run:(Lorg/apache/hadoop/fs/shell/CopyCommandWithMultiThread;Lorg/apache/hadoop/fs/shell/PathData;Lorg/apache/hadoop/fs/shell/PathData;)Ljava/lang/Runnable;
      28: invokevirtual #39                 // Method java/util/concurrent/ThreadPoolExecutor.submit:(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
      31: pop
      32: return

  private void lambda$copyFileToTarget$0(org.apache.hadoop.fs.shell.PathData, org.apache.hadoop.fs.shell.PathData);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #37                 // Method org/apache/hadoop/fs/shell/CommandWithDestination.copyFileToTarget:(Lorg/apache/hadoop/fs/shell/PathData;Lorg/apache/hadoop/fs/shell/PathData;)V
       6: goto          15
       9: astore_3
      10: aload_0
      11: aload_3
      12: invokevirtual #34                 // Method displayError:(Ljava/lang/Exception;)V
      15: return
    Exception table:
       from    to  target type
           0     6     9   Class java/io/IOException
}
