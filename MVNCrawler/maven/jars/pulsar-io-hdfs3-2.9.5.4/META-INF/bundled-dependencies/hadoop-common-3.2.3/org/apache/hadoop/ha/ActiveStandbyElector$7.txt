Compiled from "ActiveStandbyElector.java"
class org.apache.hadoop.ha.ActiveStandbyElector$7 implements org.apache.hadoop.ha.ActiveStandbyElector$ZKAction<java.lang.Void> {
  final java.lang.String val$path;

  final org.apache.zookeeper.data.Stat val$stat;

  final org.apache.hadoop.ha.ActiveStandbyElector this$0;

  org.apache.hadoop.ha.ActiveStandbyElector$7(org.apache.hadoop.ha.ActiveStandbyElector, java.lang.String, org.apache.zookeeper.data.Stat);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/hadoop/ha/ActiveStandbyElector;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$path:Ljava/lang/String;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$stat:Lorg/apache/zookeeper/data/Stat;
      15: aload_0
      16: invokespecial #4                  // Method java/lang/Object."<init>":()V
      19: return

  public java.lang.Void run() throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/apache/hadoop/ha/ActiveStandbyElector;
       4: invokestatic  #5                  // Method org/apache/hadoop/ha/ActiveStandbyElector.access$000:(Lorg/apache/hadoop/ha/ActiveStandbyElector;)Lorg/apache/zookeeper/ZooKeeper;
       7: aload_0
       8: getfield      #2                  // Field val$path:Ljava/lang/String;
      11: aload_0
      12: getfield      #3                  // Field val$stat:Lorg/apache/zookeeper/data/Stat;
      15: invokevirtual #6                  // Method org/apache/zookeeper/ZooKeeper.getACL:(Ljava/lang/String;Lorg/apache/zookeeper/data/Stat;)Ljava/util/List;
      18: astore_1
      19: aload_1
      20: ifnull        55
      23: aload_1
      24: aload_0
      25: getfield      #1                  // Field this$0:Lorg/apache/hadoop/ha/ActiveStandbyElector;
      28: invokestatic  #7                  // Method org/apache/hadoop/ha/ActiveStandbyElector.access$600:(Lorg/apache/hadoop/ha/ActiveStandbyElector;)Ljava/util/List;
      31: invokeinterface #8,  2            // InterfaceMethod java/util/List.containsAll:(Ljava/util/Collection;)Z
      36: ifeq          55
      39: aload_0
      40: getfield      #1                  // Field this$0:Lorg/apache/hadoop/ha/ActiveStandbyElector;
      43: invokestatic  #7                  // Method org/apache/hadoop/ha/ActiveStandbyElector.access$600:(Lorg/apache/hadoop/ha/ActiveStandbyElector;)Ljava/util/List;
      46: aload_1
      47: invokeinterface #8,  2            // InterfaceMethod java/util/List.containsAll:(Ljava/util/Collection;)Z
      52: ifne          84
      55: aload_0
      56: getfield      #1                  // Field this$0:Lorg/apache/hadoop/ha/ActiveStandbyElector;
      59: invokestatic  #5                  // Method org/apache/hadoop/ha/ActiveStandbyElector.access$000:(Lorg/apache/hadoop/ha/ActiveStandbyElector;)Lorg/apache/zookeeper/ZooKeeper;
      62: aload_0
      63: getfield      #2                  // Field val$path:Ljava/lang/String;
      66: aload_0
      67: getfield      #1                  // Field this$0:Lorg/apache/hadoop/ha/ActiveStandbyElector;
      70: invokestatic  #7                  // Method org/apache/hadoop/ha/ActiveStandbyElector.access$600:(Lorg/apache/hadoop/ha/ActiveStandbyElector;)Ljava/util/List;
      73: aload_0
      74: getfield      #3                  // Field val$stat:Lorg/apache/zookeeper/data/Stat;
      77: invokevirtual #9                  // Method org/apache/zookeeper/data/Stat.getAversion:()I
      80: invokevirtual #10                 // Method org/apache/zookeeper/ZooKeeper.setACL:(Ljava/lang/String;Ljava/util/List;I)Lorg/apache/zookeeper/data/Stat;
      83: pop
      84: aconst_null
      85: areturn

  public java.lang.Object run() throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method run:()Ljava/lang/Void;
       4: areturn
}
