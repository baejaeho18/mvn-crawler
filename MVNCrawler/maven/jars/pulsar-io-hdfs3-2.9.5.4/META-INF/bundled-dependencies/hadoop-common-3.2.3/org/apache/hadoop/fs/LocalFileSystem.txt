Compiled from "LocalFileSystem.java"
public class org.apache.hadoop.fs.LocalFileSystem extends org.apache.hadoop.fs.ChecksumFileSystem {
  static final java.net.URI NAME;

  private static java.util.Random rand;

  public org.apache.hadoop.fs.LocalFileSystem();
    Code:
       0: aload_0
       1: new           #1                  // class org/apache/hadoop/fs/RawLocalFileSystem
       4: dup
       5: invokespecial #2                  // Method org/apache/hadoop/fs/RawLocalFileSystem."<init>":()V
       8: invokespecial #3                  // Method "<init>":(Lorg/apache/hadoop/fs/FileSystem;)V
      11: return

  public void initialize(java.net.URI, org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: invokevirtual #5                  // Method org/apache/hadoop/fs/FileSystem.getConf:()Lorg/apache/hadoop/conf/Configuration;
       7: ifnonnull     19
      10: aload_0
      11: getfield      #4                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      14: aload_1
      15: aload_2
      16: invokevirtual #6                  // Method org/apache/hadoop/fs/FileSystem.initialize:(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V
      19: aload_1
      20: invokevirtual #7                  // Method java/net/URI.getScheme:()Ljava/lang/String;
      23: astore_3
      24: aload_3
      25: aload_0
      26: getfield      #4                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      29: invokevirtual #8                  // Method org/apache/hadoop/fs/FileSystem.getUri:()Ljava/net/URI;
      32: invokevirtual #7                  // Method java/net/URI.getScheme:()Ljava/lang/String;
      35: invokevirtual #9                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      38: ifne          46
      41: aload_0
      42: aload_3
      43: putfield      #10                 // Field swapScheme:Ljava/lang/String;
      46: return

  public java.lang.String getScheme();
    Code:
       0: ldc           #11                 // String file
       2: areturn

  public org.apache.hadoop.fs.FileSystem getRaw();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method getRawFileSystem:()Lorg/apache/hadoop/fs/FileSystem;
       4: areturn

  public org.apache.hadoop.fs.LocalFileSystem(org.apache.hadoop.fs.FileSystem);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #13                 // Method org/apache/hadoop/fs/ChecksumFileSystem."<init>":(Lorg/apache/hadoop/fs/FileSystem;)V
       5: return

  public java.io.File pathToFile(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: getfield      #4                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: checkcast     #1                  // class org/apache/hadoop/fs/RawLocalFileSystem
       7: aload_1
       8: invokevirtual #14                 // Method org/apache/hadoop/fs/RawLocalFileSystem.pathToFile:(Lorg/apache/hadoop/fs/Path;)Ljava/io/File;
      11: areturn

  public void copyFromLocalFile(boolean, org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_2
       2: aload_0
       3: aload_3
       4: iload_1
       5: aload_0
       6: invokevirtual #15                 // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
       9: invokestatic  #16                 // Method org/apache/hadoop/fs/FileUtil.copy:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZLorg/apache/hadoop/conf/Configuration;)Z
      12: pop
      13: return

  public void copyToLocalFile(boolean, org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_2
       2: aload_0
       3: aload_3
       4: iload_1
       5: aload_0
       6: invokevirtual #15                 // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
       9: invokestatic  #16                 // Method org/apache/hadoop/fs/FileUtil.copy:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZLorg/apache/hadoop/conf/Configuration;)Z
      12: pop
      13: return

  public boolean reportChecksumFailure(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.FSDataInputStream, long, org.apache.hadoop.fs.FSDataInputStream, long);
    Code:
       0: aload_0
       1: getfield      #4                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: checkcast     #1                  // class org/apache/hadoop/fs/RawLocalFileSystem
       7: aload_1
       8: invokevirtual #14                 // Method org/apache/hadoop/fs/RawLocalFileSystem.pathToFile:(Lorg/apache/hadoop/fs/Path;)Ljava/io/File;
      11: invokevirtual #17                 // Method java/io/File.getCanonicalFile:()Ljava/io/File;
      14: astore        8
      16: new           #18                 // class org/apache/hadoop/fs/DF
      19: dup
      20: aload         8
      22: aload_0
      23: invokevirtual #15                 // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
      26: invokespecial #19                 // Method org/apache/hadoop/fs/DF."<init>":(Ljava/io/File;Lorg/apache/hadoop/conf/Configuration;)V
      29: invokevirtual #20                 // Method org/apache/hadoop/fs/DF.getMount:()Ljava/lang/String;
      32: astore        9
      34: aload         8
      36: invokevirtual #21                 // Method java/io/File.getParentFile:()Ljava/io/File;
      39: astore        10
      41: aconst_null
      42: astore        11
      44: aload         10
      46: ifnull        84
      49: aload         10
      51: invokestatic  #22                 // Method org/apache/hadoop/fs/FileUtil.canWrite:(Ljava/io/File;)Z
      54: ifeq          84
      57: aload         10
      59: invokevirtual #23                 // Method java/io/File.toString:()Ljava/lang/String;
      62: aload         9
      64: invokevirtual #24                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      67: ifeq          84
      70: aload         10
      72: astore        11
      74: aload         10
      76: invokevirtual #21                 // Method java/io/File.getParentFile:()Ljava/io/File;
      79: astore        10
      81: goto          44
      84: aload         11
      86: ifnonnull     99
      89: new           #25                 // class java/io/IOException
      92: dup
      93: ldc           #26                 // String not able to find the highest writable parent dir
      95: invokespecial #27                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      98: athrow
      99: new           #28                 // class java/io/File
     102: dup
     103: aload         11
     105: ldc           #29                 // String bad_files
     107: invokespecial #30                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
     110: astore        12
     112: aload         12
     114: invokevirtual #31                 // Method java/io/File.mkdirs:()Z
     117: ifne          159
     120: aload         12
     122: invokevirtual #32                 // Method java/io/File.isDirectory:()Z
     125: ifne          159
     128: new           #25                 // class java/io/IOException
     131: dup
     132: new           #33                 // class java/lang/StringBuilder
     135: dup
     136: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     139: ldc           #35                 // String Mkdirs failed to create
     141: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: aload         12
     146: invokevirtual #23                 // Method java/io/File.toString:()Ljava/lang/String;
     149: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     155: invokespecial #27                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     158: athrow
     159: new           #33                 // class java/lang/StringBuilder
     162: dup
     163: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     166: ldc           #38                 // String .
     168: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     171: getstatic     #39                 // Field rand:Ljava/util/Random;
     174: invokevirtual #40                 // Method java/util/Random.nextInt:()I
     177: invokevirtual #41                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     180: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     183: astore        13
     185: new           #28                 // class java/io/File
     188: dup
     189: aload         12
     191: new           #33                 // class java/lang/StringBuilder
     194: dup
     195: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     198: aload         8
     200: invokevirtual #42                 // Method java/io/File.getName:()Ljava/lang/String;
     203: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     206: aload         13
     208: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     211: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     214: invokespecial #30                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
     217: astore        14
     219: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
     222: new           #33                 // class java/lang/StringBuilder
     225: dup
     226: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     229: ldc           #44                 // String Moving bad file
     231: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     234: aload         8
     236: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     239: ldc           #46                 // String  to
     241: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     244: aload         14
     246: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     249: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     252: invokeinterface #47,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
     257: aload_2
     258: invokevirtual #48                 // Method org/apache/hadoop/fs/FSDataInputStream.close:()V
     261: aload         8
     263: aload         14
     265: invokevirtual #49                 // Method java/io/File.renameTo:(Ljava/io/File;)Z
     268: istore        15
     270: iload         15
     272: ifne          285
     275: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
     278: ldc           #50                 // String Ignoring failure of renameTo
     280: invokeinterface #47,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
     285: aload_0
     286: getfield      #4                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     289: checkcast     #1                  // class org/apache/hadoop/fs/RawLocalFileSystem
     292: aload_0
     293: aload_1
     294: invokevirtual #51                 // Method getChecksumFile:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
     297: invokevirtual #14                 // Method org/apache/hadoop/fs/RawLocalFileSystem.pathToFile:(Lorg/apache/hadoop/fs/Path;)Ljava/io/File;
     300: astore        16
     302: aload         5
     304: invokevirtual #48                 // Method org/apache/hadoop/fs/FSDataInputStream.close:()V
     307: aload         16
     309: new           #28                 // class java/io/File
     312: dup
     313: aload         12
     315: new           #33                 // class java/lang/StringBuilder
     318: dup
     319: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     322: aload         16
     324: invokevirtual #42                 // Method java/io/File.getName:()Ljava/lang/String;
     327: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     330: aload         13
     332: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     335: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     338: invokespecial #30                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
     341: invokevirtual #49                 // Method java/io/File.renameTo:(Ljava/io/File;)Z
     344: istore        15
     346: iload         15
     348: ifne          361
     351: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
     354: ldc           #50                 // String Ignoring failure of renameTo
     356: invokeinterface #47,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
     361: goto          395
     364: astore        8
     366: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
     369: new           #33                 // class java/lang/StringBuilder
     372: dup
     373: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     376: ldc           #52                 // String Error moving bad file
     378: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     381: aload_1
     382: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     385: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     388: aload         8
     390: invokeinterface #53,  3           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     395: iconst_0
     396: ireturn
    Exception table:
       from    to  target type
           0   361   364   Class java/io/IOException

  public boolean supportsSymlinks();
    Code:
       0: iconst_1
       1: ireturn

  public void createSymlink(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: aload_1
       5: aload_2
       6: iload_3
       7: invokevirtual #54                 // Method org/apache/hadoop/fs/FileSystem.createSymlink:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Z)V
      10: return

  public org.apache.hadoop.fs.FileStatus getFileLinkStatus(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: aload_1
       5: invokevirtual #55                 // Method org/apache/hadoop/fs/FileSystem.getFileLinkStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
       8: areturn

  public org.apache.hadoop.fs.Path getLinkTarget(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: aload_1
       5: invokevirtual #56                 // Method org/apache/hadoop/fs/FileSystem.getLinkTarget:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       8: areturn

  static {};
    Code:
       0: ldc           #57                 // String file:///
       2: invokestatic  #58                 // Method java/net/URI.create:(Ljava/lang/String;)Ljava/net/URI;
       5: putstatic     #59                 // Field NAME:Ljava/net/URI;
       8: new           #60                 // class java/util/Random
      11: dup
      12: invokespecial #61                 // Method java/util/Random."<init>":()V
      15: putstatic     #39                 // Field rand:Ljava/util/Random;
      18: return
}
