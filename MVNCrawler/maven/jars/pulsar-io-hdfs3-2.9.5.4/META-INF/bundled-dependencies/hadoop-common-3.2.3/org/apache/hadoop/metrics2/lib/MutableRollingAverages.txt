Compiled from "MutableRollingAverages.java"
public class org.apache.hadoop.metrics2.lib.MutableRollingAverages extends org.apache.hadoop.metrics2.lib.MutableMetric implements java.io.Closeable {
  private org.apache.hadoop.metrics2.lib.MutableRatesWithAggregation innerMetrics;

  static final java.util.concurrent.ScheduledExecutorService SCHEDULER;

  private java.util.concurrent.ScheduledFuture<?> scheduledTask;

  private java.util.Map<java.lang.String, org.apache.hadoop.metrics2.lib.MutableRate> currentSnapshot;

  private final java.lang.String avgInfoNameTemplate;

  private final java.lang.String avgInfoDescTemplate;

  private int numWindows;

  private java.util.Map<java.lang.String, java.util.concurrent.LinkedBlockingDeque<org.apache.hadoop.metrics2.lib.MutableRollingAverages$SumAndCount>> averages;

  private static final long WINDOW_SIZE_MS_DEFAULT;

  private static final int NUM_WINDOWS_DEFAULT;

  private long recordValidityMs;

  public org.apache.hadoop.metrics2.lib.MutableRollingAverages(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method org/apache/hadoop/metrics2/lib/MutableMetric."<init>":()V
       4: aload_0
       5: new           #6                  // class org/apache/hadoop/metrics2/lib/MutableRatesWithAggregation
       8: dup
       9: invokespecial #7                  // Method org/apache/hadoop/metrics2/lib/MutableRatesWithAggregation."<init>":()V
      12: putfield      #4                  // Field innerMetrics:Lorg/apache/hadoop/metrics2/lib/MutableRatesWithAggregation;
      15: aload_0
      16: aconst_null
      17: putfield      #8                  // Field scheduledTask:Ljava/util/concurrent/ScheduledFuture;
      20: aload_0
      21: new           #9                  // class java/util/concurrent/ConcurrentHashMap
      24: dup
      25: invokespecial #10                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      28: putfield      #11                 // Field averages:Ljava/util/Map;
      31: aload_0
      32: ldc2_w        #13                 // long 10800000l
      35: putfield      #15                 // Field recordValidityMs:J
      38: aload_1
      39: ifnonnull     45
      42: ldc           #16                 // String
      44: astore_1
      45: aload_0
      46: new           #17                 // class java/lang/StringBuilder
      49: dup
      50: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      53: ldc           #19                 // String [%s]RollingAvg
      55: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: aload_1
      59: invokestatic  #21                 // Method org/apache/commons/lang3/StringUtils.capitalize:(Ljava/lang/String;)Ljava/lang/String;
      62: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: putfield      #23                 // Field avgInfoNameTemplate:Ljava/lang/String;
      71: aload_0
      72: new           #17                 // class java/lang/StringBuilder
      75: dup
      76: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      79: ldc           #24                 // String Rolling average
      81: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_1
      85: invokestatic  #25                 // Method org/apache/commons/lang3/StringUtils.uncapitalize:(Ljava/lang/String;)Ljava/lang/String;
      88: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: ldc           #26                 // String  for %s
      93: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      99: putfield      #27                 // Field avgInfoDescTemplate:Ljava/lang/String;
     102: aload_0
     103: bipush        36
     105: putfield      #1                  // Field numWindows:I
     108: aload_0
     109: getstatic     #28                 // Field SCHEDULER:Ljava/util/concurrent/ScheduledExecutorService;
     112: new           #29                 // class org/apache/hadoop/metrics2/lib/MutableRollingAverages$RatesRoller
     115: dup
     116: aload_0
     117: invokespecial #30                 // Method org/apache/hadoop/metrics2/lib/MutableRollingAverages$RatesRoller."<init>":(Lorg/apache/hadoop/metrics2/lib/MutableRollingAverages;)V
     120: ldc2_w        #31                 // long 300000l
     123: ldc2_w        #31                 // long 300000l
     126: getstatic     #33                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     129: invokeinterface #34,  7           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
     134: putfield      #8                  // Field scheduledTask:Ljava/util/concurrent/ScheduledFuture;
     137: return

  synchronized void replaceScheduledTask(int, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #1                  // Field numWindows:I
       5: aload_0
       6: getfield      #8                  // Field scheduledTask:Ljava/util/concurrent/ScheduledFuture;
       9: iconst_1
      10: invokeinterface #35,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      15: pop
      16: aload_0
      17: getstatic     #28                 // Field SCHEDULER:Ljava/util/concurrent/ScheduledExecutorService;
      20: new           #29                 // class org/apache/hadoop/metrics2/lib/MutableRollingAverages$RatesRoller
      23: dup
      24: aload_0
      25: invokespecial #30                 // Method org/apache/hadoop/metrics2/lib/MutableRollingAverages$RatesRoller."<init>":(Lorg/apache/hadoop/metrics2/lib/MutableRollingAverages;)V
      28: lload_2
      29: lload_2
      30: aload         4
      32: invokeinterface #34,  7           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      37: putfield      #8                  // Field scheduledTask:Ljava/util/concurrent/ScheduledFuture;
      40: return

  public void snapshot(org.apache.hadoop.metrics2.MetricsRecordBuilder, boolean);
    Code:
       0: iload_2
       1: ifne          11
       4: aload_0
       5: invokevirtual #36                 // Method changed:()Z
       8: ifeq          201
      11: aload_0
      12: getfield      #11                 // Field averages:Ljava/util/Map;
      15: invokeinterface #37,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      20: invokeinterface #38,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      25: astore_3
      26: aload_3
      27: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          190
      35: aload_3
      36: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #41                 // class java/util/Map$Entry
      44: astore        4
      46: aload         4
      48: invokeinterface #42,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      53: checkcast     #43                 // class java/lang/String
      56: astore        5
      58: aload_0
      59: getfield      #23                 // Field avgInfoNameTemplate:Ljava/lang/String;
      62: iconst_1
      63: anewarray     #44                 // class java/lang/Object
      66: dup
      67: iconst_0
      68: aload         5
      70: invokestatic  #21                 // Method org/apache/commons/lang3/StringUtils.capitalize:(Ljava/lang/String;)Ljava/lang/String;
      73: aastore
      74: invokestatic  #45                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      77: aload_0
      78: getfield      #27                 // Field avgInfoDescTemplate:Ljava/lang/String;
      81: iconst_1
      82: anewarray     #44                 // class java/lang/Object
      85: dup
      86: iconst_0
      87: aload         5
      89: invokestatic  #25                 // Method org/apache/commons/lang3/StringUtils.uncapitalize:(Ljava/lang/String;)Ljava/lang/String;
      92: aastore
      93: invokestatic  #45                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      96: invokestatic  #46                 // Method org/apache/hadoop/metrics2/lib/Interns.info:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/metrics2/MetricsInfo;
      99: astore        6
     101: dconst_0
     102: dstore        7
     104: lconst_0
     105: lstore        9
     107: aload         4
     109: invokeinterface #47,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     114: checkcast     #48                 // class java/util/concurrent/LinkedBlockingDeque
     117: invokevirtual #49                 // Method java/util/concurrent/LinkedBlockingDeque.iterator:()Ljava/util/Iterator;
     120: astore        11
     122: aload         11
     124: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     129: ifeq          167
     132: aload         11
     134: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     139: checkcast     #50                 // class org/apache/hadoop/metrics2/lib/MutableRollingAverages$SumAndCount
     142: astore        12
     144: lload         9
     146: aload         12
     148: invokevirtual #51                 // Method org/apache/hadoop/metrics2/lib/MutableRollingAverages$SumAndCount.getCount:()J
     151: ladd
     152: lstore        9
     154: dload         7
     156: aload         12
     158: invokevirtual #52                 // Method org/apache/hadoop/metrics2/lib/MutableRollingAverages$SumAndCount.getSum:()D
     161: dadd
     162: dstore        7
     164: goto          122
     167: lload         9
     169: lconst_0
     170: lcmp
     171: ifeq          187
     174: aload_1
     175: aload         6
     177: dload         7
     179: lload         9
     181: l2d
     182: ddiv
     183: invokevirtual #53                 // Method org/apache/hadoop/metrics2/MetricsRecordBuilder.addGauge:(Lorg/apache/hadoop/metrics2/MetricsInfo;D)Lorg/apache/hadoop/metrics2/MetricsRecordBuilder;
     186: pop
     187: goto          26
     190: aload_0
     191: invokevirtual #36                 // Method changed:()Z
     194: ifeq          201
     197: aload_0
     198: invokevirtual #54                 // Method clearChanged:()V
     201: return

  public void collectThreadLocalStates();
    Code:
       0: aload_0
       1: getfield      #4                  // Field innerMetrics:Lorg/apache/hadoop/metrics2/lib/MutableRatesWithAggregation;
       4: invokevirtual #55                 // Method org/apache/hadoop/metrics2/lib/MutableRatesWithAggregation.collectThreadLocalStates:()V
       7: return

  public void add(java.lang.String, long);
    Code:
       0: aload_0
       1: getfield      #4                  // Field innerMetrics:Lorg/apache/hadoop/metrics2/lib/MutableRatesWithAggregation;
       4: aload_1
       5: lload_2
       6: invokevirtual #56                 // Method org/apache/hadoop/metrics2/lib/MutableRatesWithAggregation.add:(Ljava/lang/String;J)V
       9: return

  private synchronized void rollOverAvgs();
    Code:
       0: aload_0
       1: getfield      #3                  // Field currentSnapshot:Ljava/util/Map;
       4: ifnonnull     8
       7: return
       8: aload_0
       9: getfield      #3                  // Field currentSnapshot:Ljava/util/Map;
      12: invokeinterface #37,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      17: invokeinterface #38,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore_1
      23: aload_1
      24: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          134
      32: aload_1
      33: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #41                 // class java/util/Map$Entry
      41: astore_2
      42: aload_2
      43: invokeinterface #47,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      48: checkcast     #57                 // class org/apache/hadoop/metrics2/lib/MutableRate
      51: astore_3
      52: aload_0
      53: getfield      #11                 // Field averages:Ljava/util/Map;
      56: aload_2
      57: invokeinterface #42,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      62: new           #58                 // class org/apache/hadoop/metrics2/lib/MutableRollingAverages$1
      65: dup
      66: aload_0
      67: invokespecial #59                 // Method org/apache/hadoop/metrics2/lib/MutableRollingAverages$1."<init>":(Lorg/apache/hadoop/metrics2/lib/MutableRollingAverages;)V
      70: invokeinterface #60,  3           // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      75: checkcast     #48                 // class java/util/concurrent/LinkedBlockingDeque
      78: astore        4
      80: new           #50                 // class org/apache/hadoop/metrics2/lib/MutableRollingAverages$SumAndCount
      83: dup
      84: aload_3
      85: invokevirtual #61                 // Method org/apache/hadoop/metrics2/lib/MutableRate.lastStat:()Lorg/apache/hadoop/metrics2/util/SampleStat;
      88: invokevirtual #62                 // Method org/apache/hadoop/metrics2/util/SampleStat.total:()D
      91: aload_3
      92: invokevirtual #61                 // Method org/apache/hadoop/metrics2/lib/MutableRate.lastStat:()Lorg/apache/hadoop/metrics2/util/SampleStat;
      95: invokevirtual #63                 // Method org/apache/hadoop/metrics2/util/SampleStat.numSamples:()J
      98: aload_3
      99: invokevirtual #64                 // Method org/apache/hadoop/metrics2/lib/MutableRate.getSnapshotTimeStamp:()J
     102: invokespecial #65                 // Method org/apache/hadoop/metrics2/lib/MutableRollingAverages$SumAndCount."<init>":(DJJ)V
     105: astore        5
     107: aload         4
     109: aload         5
     111: invokevirtual #66                 // Method java/util/concurrent/LinkedBlockingDeque.offerLast:(Ljava/lang/Object;)Z
     114: ifne          131
     117: aload         4
     119: invokevirtual #67                 // Method java/util/concurrent/LinkedBlockingDeque.pollFirst:()Ljava/lang/Object;
     122: pop
     123: aload         4
     125: aload         5
     127: invokevirtual #66                 // Method java/util/concurrent/LinkedBlockingDeque.offerLast:(Ljava/lang/Object;)Z
     130: pop
     131: goto          23
     134: aload_0
     135: invokevirtual #68                 // Method setChanged:()V
     138: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field scheduledTask:Ljava/util/concurrent/ScheduledFuture;
       4: ifnull        18
       7: aload_0
       8: getfield      #8                  // Field scheduledTask:Ljava/util/concurrent/ScheduledFuture;
      11: iconst_0
      12: invokeinterface #35,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      17: pop
      18: aload_0
      19: aconst_null
      20: putfield      #8                  // Field scheduledTask:Ljava/util/concurrent/ScheduledFuture;
      23: return

  public synchronized java.util.Map<java.lang.String, java.lang.Double> getStats(long);
    Code:
       0: new           #69                 // class java/util/HashMap
       3: dup
       4: invokespecial #70                 // Method java/util/HashMap."<init>":()V
       7: astore_3
       8: aload_0
       9: getfield      #11                 // Field averages:Ljava/util/Map;
      12: invokeinterface #37,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      17: invokeinterface #38,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore        4
      24: aload         4
      26: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          169
      34: aload         4
      36: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #41                 // class java/util/Map$Entry
      44: astore        5
      46: aload         5
      48: invokeinterface #42,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      53: checkcast     #43                 // class java/lang/String
      56: astore        6
      58: dconst_0
      59: dstore        7
      61: lconst_0
      62: lstore        9
      64: aload         5
      66: invokeinterface #47,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      71: checkcast     #48                 // class java/util/concurrent/LinkedBlockingDeque
      74: invokevirtual #49                 // Method java/util/concurrent/LinkedBlockingDeque.iterator:()Ljava/util/Iterator;
      77: astore        11
      79: aload         11
      81: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      86: ifeq          141
      89: aload         11
      91: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      96: checkcast     #50                 // class org/apache/hadoop/metrics2/lib/MutableRollingAverages$SumAndCount
      99: astore        12
     101: invokestatic  #71                 // Method org/apache/hadoop/util/Time.monotonicNow:()J
     104: aload         12
     106: invokevirtual #72                 // Method org/apache/hadoop/metrics2/lib/MutableRollingAverages$SumAndCount.getSnapshotTimeStamp:()J
     109: lsub
     110: aload_0
     111: getfield      #15                 // Field recordValidityMs:J
     114: lcmp
     115: ifge          138
     118: lload         9
     120: aload         12
     122: invokevirtual #51                 // Method org/apache/hadoop/metrics2/lib/MutableRollingAverages$SumAndCount.getCount:()J
     125: ladd
     126: lstore        9
     128: dload         7
     130: aload         12
     132: invokevirtual #52                 // Method org/apache/hadoop/metrics2/lib/MutableRollingAverages$SumAndCount.getSum:()D
     135: dadd
     136: dstore        7
     138: goto          79
     141: lload         9
     143: lload_1
     144: lcmp
     145: ifle          166
     148: aload_3
     149: aload         6
     151: dload         7
     153: lload         9
     155: l2d
     156: ddiv
     157: invokestatic  #73                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
     160: invokeinterface #74,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     165: pop
     166: goto          24
     169: aload_3
     170: areturn

  public synchronized void setRecordValidityMs(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #15                 // Field recordValidityMs:J
       5: return

  static org.apache.hadoop.metrics2.lib.MutableRatesWithAggregation access$000(org.apache.hadoop.metrics2.lib.MutableRollingAverages);
    Code:
       0: aload_0
       1: getfield      #4                  // Field innerMetrics:Lorg/apache/hadoop/metrics2/lib/MutableRatesWithAggregation;
       4: areturn

  static java.util.Map access$102(org.apache.hadoop.metrics2.lib.MutableRollingAverages, java.util.Map);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #3                  // Field currentSnapshot:Ljava/util/Map;
       6: areturn

  static void access$200(org.apache.hadoop.metrics2.lib.MutableRollingAverages);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method rollOverAvgs:()V
       4: return

  static int access$300(org.apache.hadoop.metrics2.lib.MutableRollingAverages);
    Code:
       0: aload_0
       1: getfield      #1                  // Field numWindows:I
       4: ireturn

  static {};
    Code:
       0: iconst_1
       1: new           #75                 // class com/google/common/util/concurrent/ThreadFactoryBuilder
       4: dup
       5: invokespecial #76                 // Method com/google/common/util/concurrent/ThreadFactoryBuilder."<init>":()V
       8: iconst_1
       9: invokevirtual #77                 // Method com/google/common/util/concurrent/ThreadFactoryBuilder.setDaemon:(Z)Lcom/google/common/util/concurrent/ThreadFactoryBuilder;
      12: ldc           #78                 // String MutableRollingAverages-%d
      14: invokevirtual #79                 // Method com/google/common/util/concurrent/ThreadFactoryBuilder.setNameFormat:(Ljava/lang/String;)Lcom/google/common/util/concurrent/ThreadFactoryBuilder;
      17: invokevirtual #80                 // Method com/google/common/util/concurrent/ThreadFactoryBuilder.build:()Ljava/util/concurrent/ThreadFactory;
      20: invokestatic  #81                 // Method java/util/concurrent/Executors.newScheduledThreadPool:(ILjava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;
      23: putstatic     #28                 // Field SCHEDULER:Ljava/util/concurrent/ScheduledExecutorService;
      26: return
}
