Compiled from "BlockingThreadPoolExecutorService.java"
public final class org.apache.hadoop.util.BlockingThreadPoolExecutorService extends org.apache.hadoop.util.SemaphoredDelegatingExecutor {
  private static final org.slf4j.Logger LOG;

  private static final java.util.concurrent.atomic.AtomicInteger POOLNUMBER;

  private final java.util.concurrent.ThreadPoolExecutor eventProcessingExecutor;

  static java.util.concurrent.ThreadFactory getNamedThreadFactory(java.lang.String);
    Code:
       0: invokestatic  #3                  // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
       3: astore_1
       4: aload_1
       5: ifnull        15
       8: aload_1
       9: invokevirtual #4                  // Method java/lang/SecurityManager.getThreadGroup:()Ljava/lang/ThreadGroup;
      12: goto          21
      15: invokestatic  #5                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      18: invokevirtual #6                  // Method java/lang/Thread.getThreadGroup:()Ljava/lang/ThreadGroup;
      21: astore_2
      22: new           #7                  // class org/apache/hadoop/util/BlockingThreadPoolExecutorService$1
      25: dup
      26: aload_2
      27: aload_0
      28: invokespecial #8                  // Method org/apache/hadoop/util/BlockingThreadPoolExecutorService$1."<init>":(Ljava/lang/ThreadGroup;Ljava/lang/String;)V
      31: areturn

  public static java.util.concurrent.ThreadFactory newDaemonThreadFactory(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #9                  // Method getNamedThreadFactory:(Ljava/lang/String;)Ljava/util/concurrent/ThreadFactory;
       4: astore_1
       5: new           #10                 // class org/apache/hadoop/util/BlockingThreadPoolExecutorService$2
       8: dup
       9: aload_1
      10: invokespecial #11                 // Method org/apache/hadoop/util/BlockingThreadPoolExecutorService$2."<init>":(Ljava/util/concurrent/ThreadFactory;)V
      13: areturn

  private org.apache.hadoop.util.BlockingThreadPoolExecutorService(int, java.util.concurrent.ThreadPoolExecutor);
    Code:
       0: aload_0
       1: aload_2
       2: iload_1
       3: iconst_0
       4: invokespecial #12                 // Method org/apache/hadoop/util/SemaphoredDelegatingExecutor."<init>":(Ljava/util/concurrent/ExecutorService;IZ)V
       7: aload_0
       8: aload_2
       9: putfield      #13                 // Field eventProcessingExecutor:Ljava/util/concurrent/ThreadPoolExecutor;
      12: return

  public static org.apache.hadoop.util.BlockingThreadPoolExecutorService newInstance(int, int, long, java.util.concurrent.TimeUnit, java.lang.String);
    Code:
       0: new           #14                 // class java/util/concurrent/LinkedBlockingQueue
       3: dup
       4: iload_1
       5: iload_0
       6: iadd
       7: invokespecial #15                 // Method java/util/concurrent/LinkedBlockingQueue."<init>":(I)V
      10: astore        6
      12: new           #16                 // class java/util/concurrent/ThreadPoolExecutor
      15: dup
      16: iload_0
      17: iload_0
      18: lload_2
      19: aload         4
      21: aload         6
      23: aload         5
      25: invokestatic  #17                 // Method newDaemonThreadFactory:(Ljava/lang/String;)Ljava/util/concurrent/ThreadFactory;
      28: new           #18                 // class org/apache/hadoop/util/BlockingThreadPoolExecutorService$3
      31: dup
      32: invokespecial #19                 // Method org/apache/hadoop/util/BlockingThreadPoolExecutorService$3."<init>":()V
      35: invokespecial #20                 // Method java/util/concurrent/ThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;Ljava/util/concurrent/RejectedExecutionHandler;)V
      38: astore        7
      40: aload         7
      42: iconst_1
      43: invokevirtual #21                 // Method java/util/concurrent/ThreadPoolExecutor.allowCoreThreadTimeOut:(Z)V
      46: new           #22                 // class org/apache/hadoop/util/BlockingThreadPoolExecutorService
      49: dup
      50: iload_1
      51: iload_0
      52: iadd
      53: aload         7
      55: invokespecial #23                 // Method "<init>":(ILjava/util/concurrent/ThreadPoolExecutor;)V
      58: areturn

  int getActiveCount();
    Code:
       0: aload_0
       1: getfield      #13                 // Field eventProcessingExecutor:Ljava/util/concurrent/ThreadPoolExecutor;
       4: invokevirtual #24                 // Method java/util/concurrent/ThreadPoolExecutor.getActiveCount:()I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: new           #25                 // class java/lang/StringBuilder
       3: dup
       4: ldc           #26                 // String BlockingThreadPoolExecutorService{
       6: invokespecial #27                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
       9: astore_1
      10: aload_1
      11: aload_0
      12: invokespecial #28                 // Method org/apache/hadoop/util/SemaphoredDelegatingExecutor.toString:()Ljava/lang/String;
      15: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: pop
      19: aload_1
      20: ldc           #30                 // String , activeCount=
      22: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_0
      26: invokevirtual #31                 // Method getActiveCount:()I
      29: invokevirtual #32                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      32: pop
      33: aload_1
      34: bipush        125
      36: invokevirtual #33                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      39: pop
      40: aload_1
      41: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: areturn

  static java.util.concurrent.atomic.AtomicInteger access$000();
    Code:
       0: getstatic     #2                  // Field POOLNUMBER:Ljava/util/concurrent/atomic/AtomicInteger;
       3: areturn

  static org.slf4j.Logger access$100();
    Code:
       0: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static {};
    Code:
       0: ldc           #22                 // class org/apache/hadoop/util/BlockingThreadPoolExecutorService
       2: invokestatic  #35                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       8: new           #36                 // class java/util/concurrent/atomic/AtomicInteger
      11: dup
      12: iconst_1
      13: invokespecial #37                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      16: putstatic     #2                  // Field POOLNUMBER:Ljava/util/concurrent/atomic/AtomicInteger;
      19: return
}
