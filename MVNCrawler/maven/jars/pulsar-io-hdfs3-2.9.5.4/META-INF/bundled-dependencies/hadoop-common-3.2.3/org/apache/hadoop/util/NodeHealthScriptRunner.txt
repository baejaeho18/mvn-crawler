Compiled from "NodeHealthScriptRunner.java"
public class org.apache.hadoop.util.NodeHealthScriptRunner extends org.apache.hadoop.service.AbstractService {
  private static final org.slf4j.Logger LOG;

  private java.lang.String nodeHealthScript;

  private long intervalTime;

  private long scriptTimeout;

  private java.util.Timer nodeHealthScriptScheduler;

  org.apache.hadoop.util.Shell$ShellCommandExecutor shexec;

  private static final java.lang.String ERROR_PATTERN;

  public static final java.lang.String NODE_HEALTH_SCRIPT_TIMED_OUT_MSG;

  private boolean isHealthy;

  private java.lang.String healthReport;

  private long lastReportedTime;

  private java.util.TimerTask timer;

  private boolean runBeforeStartup;

  public org.apache.hadoop.util.NodeHealthScriptRunner(java.lang.String, long, long, java.lang.String[], boolean);
    Code:
       0: aload_0
       1: ldc           #6                  // class org/apache/hadoop/util/NodeHealthScriptRunner
       3: invokevirtual #7                  // Method java/lang/Class.getName:()Ljava/lang/String;
       6: invokespecial #8                  // Method org/apache/hadoop/service/AbstractService."<init>":(Ljava/lang/String;)V
       9: aload_0
      10: aconst_null
      11: putfield      #9                  // Field shexec:Lorg/apache/hadoop/util/Shell$ShellCommandExecutor;
      14: aload_0
      15: invokestatic  #10                 // Method java/lang/System.currentTimeMillis:()J
      18: putfield      #11                 // Field lastReportedTime:J
      21: aload_0
      22: iconst_1
      23: putfield      #12                 // Field isHealthy:Z
      26: aload_0
      27: ldc           #13                 // String
      29: putfield      #14                 // Field healthReport:Ljava/lang/String;
      32: aload_0
      33: aload_1
      34: putfield      #5                  // Field nodeHealthScript:Ljava/lang/String;
      37: aload_0
      38: lload_2
      39: putfield      #15                 // Field intervalTime:J
      42: aload_0
      43: lload         4
      45: putfield      #4                  // Field scriptTimeout:J
      48: aload_0
      49: new           #16                 // class org/apache/hadoop/util/NodeHealthScriptRunner$NodeHealthMonitorExecutor
      52: dup
      53: aload_0
      54: aload         6
      56: invokespecial #17                 // Method org/apache/hadoop/util/NodeHealthScriptRunner$NodeHealthMonitorExecutor."<init>":(Lorg/apache/hadoop/util/NodeHealthScriptRunner;[Ljava/lang/String;)V
      59: putfield      #18                 // Field timer:Ljava/util/TimerTask;
      62: aload_0
      63: iload         7
      65: putfield      #19                 // Field runBeforeStartup:Z
      68: return

  protected void serviceInit(org.apache.hadoop.conf.Configuration) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #20                 // Method org/apache/hadoop/service/AbstractService.serviceInit:(Lorg/apache/hadoop/conf/Configuration;)V
       5: return

  protected void serviceStart() throws java.lang.Exception;
    Code:
       0: aload_0
       1: new           #21                 // class java/util/Timer
       4: dup
       5: ldc           #22                 // String NodeHealthMonitor-Timer
       7: iconst_1
       8: invokespecial #23                 // Method java/util/Timer."<init>":(Ljava/lang/String;Z)V
      11: putfield      #24                 // Field nodeHealthScriptScheduler:Ljava/util/Timer;
      14: lconst_0
      15: lstore_1
      16: aload_0
      17: getfield      #19                 // Field runBeforeStartup:Z
      20: ifeq          35
      23: aload_0
      24: getfield      #18                 // Field timer:Ljava/util/TimerTask;
      27: invokevirtual #25                 // Method java/util/TimerTask.run:()V
      30: aload_0
      31: getfield      #15                 // Field intervalTime:J
      34: lstore_1
      35: aload_0
      36: getfield      #24                 // Field nodeHealthScriptScheduler:Ljava/util/Timer;
      39: aload_0
      40: getfield      #18                 // Field timer:Ljava/util/TimerTask;
      43: lload_1
      44: aload_0
      45: getfield      #15                 // Field intervalTime:J
      48: invokevirtual #26                 // Method java/util/Timer.scheduleAtFixedRate:(Ljava/util/TimerTask;JJ)V
      51: aload_0
      52: invokespecial #27                 // Method org/apache/hadoop/service/AbstractService.serviceStart:()V
      55: return

  protected void serviceStop();
    Code:
       0: aload_0
       1: getfield      #24                 // Field nodeHealthScriptScheduler:Ljava/util/Timer;
       4: ifnull        14
       7: aload_0
       8: getfield      #24                 // Field nodeHealthScriptScheduler:Ljava/util/Timer;
      11: invokevirtual #28                 // Method java/util/Timer.cancel:()V
      14: aload_0
      15: getfield      #9                  // Field shexec:Lorg/apache/hadoop/util/Shell$ShellCommandExecutor;
      18: ifnull        37
      21: aload_0
      22: getfield      #9                  // Field shexec:Lorg/apache/hadoop/util/Shell$ShellCommandExecutor;
      25: invokevirtual #29                 // Method org/apache/hadoop/util/Shell$ShellCommandExecutor.getProcess:()Ljava/lang/Process;
      28: astore_1
      29: aload_1
      30: ifnull        37
      33: aload_1
      34: invokevirtual #30                 // Method java/lang/Process.destroy:()V
      37: return

  public boolean isHealthy();
    Code:
       0: aload_0
       1: getfield      #12                 // Field isHealthy:Z
       4: ireturn

  private synchronized void setHealthy(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field isHealthy:Z
       5: return

  public java.lang.String getHealthReport();
    Code:
       0: aload_0
       1: getfield      #14                 // Field healthReport:Ljava/lang/String;
       4: areturn

  private synchronized void setHealthReport(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field healthReport:Ljava/lang/String;
       5: return

  public long getLastReportedTime();
    Code:
       0: aload_0
       1: getfield      #11                 // Field lastReportedTime:J
       4: lreturn

  private synchronized void setLastReportedTime(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #11                 // Field lastReportedTime:J
       5: return

  public static boolean shouldRun(java.lang.String);
    Code:
       0: aload_0
       1: ifnull        14
       4: aload_0
       5: invokevirtual #31                 // Method java/lang/String.trim:()Ljava/lang/String;
       8: invokevirtual #32                 // Method java/lang/String.isEmpty:()Z
      11: ifeq          16
      14: iconst_0
      15: ireturn
      16: new           #33                 // class java/io/File
      19: dup
      20: aload_0
      21: invokespecial #34                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      24: astore_1
      25: aload_1
      26: invokevirtual #35                 // Method java/io/File.exists:()Z
      29: ifeq          43
      32: aload_1
      33: invokestatic  #36                 // Method org/apache/hadoop/fs/FileUtil.canExecute:(Ljava/io/File;)Z
      36: ifeq          43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: ireturn

  private synchronized void setHealthStatus(boolean, java.lang.String);
    Code:
       0: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
       3: new           #37                 // class java/lang/StringBuilder
       6: dup
       7: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      10: ldc           #39                 // String health status being set as
      12: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: aload_2
      16: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: invokeinterface #42,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      27: aload_0
      28: iload_1
      29: invokespecial #43                 // Method setHealthy:(Z)V
      32: aload_0
      33: aload_2
      34: invokespecial #44                 // Method setHealthReport:(Ljava/lang/String;)V
      37: return

  private synchronized void setHealthStatus(boolean, java.lang.String, long);
    Code:
       0: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
       3: new           #37                 // class java/lang/StringBuilder
       6: dup
       7: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      10: ldc           #39                 // String health status being set as
      12: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: aload_2
      16: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: invokeinterface #42,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      27: aload_0
      28: iload_1
      29: aload_2
      30: invokespecial #1                  // Method setHealthStatus:(ZLjava/lang/String;)V
      33: aload_0
      34: lload_3
      35: invokespecial #45                 // Method setLastReportedTime:(J)V
      38: return

  public java.util.TimerTask getTimerTask();
    Code:
       0: aload_0
       1: getfield      #18                 // Field timer:Ljava/util/TimerTask;
       4: areturn

  static java.lang.String access$000(org.apache.hadoop.util.NodeHealthScriptRunner);
    Code:
       0: aload_0
       1: getfield      #5                  // Field nodeHealthScript:Ljava/lang/String;
       4: areturn

  static long access$100(org.apache.hadoop.util.NodeHealthScriptRunner);
    Code:
       0: aload_0
       1: getfield      #4                  // Field scriptTimeout:J
       4: lreturn

  static org.slf4j.Logger access$200();
    Code:
       0: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static void access$300(org.apache.hadoop.util.NodeHealthScriptRunner, boolean, java.lang.String, long);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: lload_3
       4: invokespecial #2                  // Method setHealthStatus:(ZLjava/lang/String;J)V
       7: return

  static void access$400(org.apache.hadoop.util.NodeHealthScriptRunner, boolean, java.lang.String);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #1                  // Method setHealthStatus:(ZLjava/lang/String;)V
       6: return

  static {};
    Code:
       0: ldc           #6                  // class org/apache/hadoop/util/NodeHealthScriptRunner
       2: invokestatic  #46                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
       8: return
}
