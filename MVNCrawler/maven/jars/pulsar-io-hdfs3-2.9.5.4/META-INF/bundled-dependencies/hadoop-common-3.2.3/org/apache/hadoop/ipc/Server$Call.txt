Compiled from "Server.java"
public class org.apache.hadoop.ipc.Server$Call implements org.apache.hadoop.ipc.Schedulable, java.security.PrivilegedExceptionAction<java.lang.Void> {
  private final org.apache.hadoop.ipc.ProcessingDetails processingDetails;

  private volatile java.lang.String detailedMetricsName;

  final int callId;

  final int retryCount;

  long timestampNanos;

  long responseTimestampNanos;

  private java.util.concurrent.atomic.AtomicInteger responseWaitCount;

  final org.apache.hadoop.ipc.RPC$RpcKind rpcKind;

  final byte[] clientId;

  private final org.apache.htrace.core.TraceScope traceScope;

  private final org.apache.hadoop.ipc.CallerContext callerContext;

  private boolean deferredResponse;

  private int priorityLevel;

  private long clientStateId;

  private boolean isCallCoordinated;

  static final boolean $assertionsDisabled;

  org.apache.hadoop.ipc.Server$Call();
    Code:
       0: aload_0
       1: bipush        -2
       3: iconst_m1
       4: getstatic     #4                  // Field org/apache/hadoop/ipc/RPC$RpcKind.RPC_BUILTIN:Lorg/apache/hadoop/ipc/RPC$RpcKind;
       7: getstatic     #5                  // Field org/apache/hadoop/ipc/RpcConstants.DUMMY_CLIENT_ID:[B
      10: invokespecial #6                  // Method "<init>":(IILorg/apache/hadoop/ipc/RPC$RpcKind;[B)V
      13: return

  org.apache.hadoop.ipc.Server$Call(org.apache.hadoop.ipc.Server$Call);
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #7                  // Field callId:I
       5: aload_1
       6: getfield      #8                  // Field retryCount:I
       9: aload_1
      10: getfield      #9                  // Field rpcKind:Lorg/apache/hadoop/ipc/RPC$RpcKind;
      13: aload_1
      14: getfield      #10                 // Field clientId:[B
      17: aload_1
      18: getfield      #2                  // Field traceScope:Lorg/apache/htrace/core/TraceScope;
      21: aload_1
      22: getfield      #1                  // Field callerContext:Lorg/apache/hadoop/ipc/CallerContext;
      25: invokespecial #11                 // Method "<init>":(IILorg/apache/hadoop/ipc/RPC$RpcKind;[BLorg/apache/htrace/core/TraceScope;Lorg/apache/hadoop/ipc/CallerContext;)V
      28: return

  org.apache.hadoop.ipc.Server$Call(int, int, org.apache.hadoop.ipc.RPC$RpcKind, byte[]);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: aload_3
       4: aload         4
       6: aconst_null
       7: aconst_null
       8: invokespecial #11                 // Method "<init>":(IILorg/apache/hadoop/ipc/RPC$RpcKind;[BLorg/apache/htrace/core/TraceScope;Lorg/apache/hadoop/ipc/CallerContext;)V
      11: return

  public org.apache.hadoop.ipc.Server$Call(int, int, java.lang.Void, java.lang.Void, org.apache.hadoop.ipc.RPC$RpcKind, byte[]);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: aload         5
       5: aload         6
       7: aconst_null
       8: aconst_null
       9: invokespecial #11                 // Method "<init>":(IILorg/apache/hadoop/ipc/RPC$RpcKind;[BLorg/apache/htrace/core/TraceScope;Lorg/apache/hadoop/ipc/CallerContext;)V
      12: return

  org.apache.hadoop.ipc.Server$Call(int, int, org.apache.hadoop.ipc.RPC$RpcKind, byte[], org.apache.htrace.core.TraceScope, org.apache.hadoop.ipc.CallerContext);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #13                 // class org/apache/hadoop/ipc/ProcessingDetails
       8: dup
       9: getstatic     #14                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      12: invokespecial #15                 // Method org/apache/hadoop/ipc/ProcessingDetails."<init>":(Ljava/util/concurrent/TimeUnit;)V
      15: putfield      #16                 // Field processingDetails:Lorg/apache/hadoop/ipc/ProcessingDetails;
      18: aload_0
      19: ldc           #17                 // String
      21: putfield      #18                 // Field detailedMetricsName:Ljava/lang/String;
      24: aload_0
      25: new           #19                 // class java/util/concurrent/atomic/AtomicInteger
      28: dup
      29: iconst_1
      30: invokespecial #20                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      33: putfield      #21                 // Field responseWaitCount:Ljava/util/concurrent/atomic/AtomicInteger;
      36: aload_0
      37: iconst_0
      38: putfield      #22                 // Field deferredResponse:Z
      41: aload_0
      42: iload_1
      43: putfield      #7                  // Field callId:I
      46: aload_0
      47: iload_2
      48: putfield      #8                  // Field retryCount:I
      51: aload_0
      52: invokestatic  #23                 // Method org/apache/hadoop/util/Time.monotonicNowNanos:()J
      55: putfield      #24                 // Field timestampNanos:J
      58: aload_0
      59: aload_0
      60: getfield      #24                 // Field timestampNanos:J
      63: putfield      #25                 // Field responseTimestampNanos:J
      66: aload_0
      67: aload_3
      68: putfield      #9                  // Field rpcKind:Lorg/apache/hadoop/ipc/RPC$RpcKind;
      71: aload_0
      72: aload         4
      74: putfield      #10                 // Field clientId:[B
      77: aload_0
      78: aload         5
      80: putfield      #2                  // Field traceScope:Lorg/apache/htrace/core/TraceScope;
      83: aload_0
      84: aload         6
      86: putfield      #1                  // Field callerContext:Lorg/apache/hadoop/ipc/CallerContext;
      89: aload_0
      90: ldc2_w        #27                 // long -9223372036854775808l
      93: putfield      #29                 // Field clientStateId:J
      96: aload_0
      97: iconst_0
      98: putfield      #30                 // Field isCallCoordinated:Z
     101: return

  boolean isOpen();
    Code:
       0: iconst_1
       1: ireturn

  java.lang.String getDetailedMetricsName();
    Code:
       0: aload_0
       1: getfield      #18                 // Field detailedMetricsName:Ljava/lang/String;
       4: areturn

  void setDetailedMetricsName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field detailedMetricsName:Ljava/lang/String;
       5: return

  public org.apache.hadoop.ipc.ProcessingDetails getProcessingDetails();
    Code:
       0: aload_0
       1: getfield      #16                 // Field processingDetails:Lorg/apache/hadoop/ipc/ProcessingDetails;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #31                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #33                 // String Call#
       9: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #7                  // Field callId:I
      16: invokevirtual #35                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      19: ldc           #36                 // String  Retry#
      21: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #8                  // Field retryCount:I
      28: invokevirtual #35                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: areturn

  public java.lang.Void run() throws java.lang.Exception;
    Code:
       0: aconst_null
       1: areturn

  public org.apache.hadoop.security.UserGroupInformation getRemoteUser();
    Code:
       0: aconst_null
       1: areturn

  public java.net.InetAddress getHostInetAddress();
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String getHostAddress();
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method getHostInetAddress:()Ljava/net/InetAddress;
       4: astore_1
       5: aload_1
       6: ifnull        16
       9: aload_1
      10: invokevirtual #39                 // Method java/net/InetAddress.getHostAddress:()Ljava/lang/String;
      13: goto          17
      16: aconst_null
      17: areturn

  public java.lang.String getProtocol();
    Code:
       0: aconst_null
       1: areturn

  public final void postponeResponse();
    Code:
       0: aload_0
       1: getfield      #21                 // Field responseWaitCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #40                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: istore_1
       8: getstatic     #41                 // Field $assertionsDisabled:Z
      11: ifne          28
      14: iload_1
      15: ifgt          28
      18: new           #42                 // class java/lang/AssertionError
      21: dup
      22: ldc           #43                 // String response has already been sent
      24: invokespecial #44                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      27: athrow
      28: return

  public final void sendResponse() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #21                 // Field responseWaitCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #45                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
       7: istore_1
       8: getstatic     #41                 // Field $assertionsDisabled:Z
      11: ifne          28
      14: iload_1
      15: ifge          28
      18: new           #42                 // class java/lang/AssertionError
      21: dup
      22: ldc           #43                 // String response has already been sent
      24: invokespecial #44                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      27: athrow
      28: iload_1
      29: ifne          37
      32: aload_0
      33: aconst_null
      34: invokevirtual #46                 // Method doResponse:(Ljava/lang/Throwable;)V
      37: return

  public final void abortResponse(java.lang.Throwable) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #21                 // Field responseWaitCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: iconst_m1
       5: invokevirtual #47                 // Method java/util/concurrent/atomic/AtomicInteger.getAndSet:(I)I
       8: ifle          16
      11: aload_0
      12: aload_1
      13: invokevirtual #46                 // Method doResponse:(Ljava/lang/Throwable;)V
      16: return

  void doResponse(java.lang.Throwable) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #48                 // Field org/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$RpcStatusProto.FATAL:Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$RpcStatusProto;
       5: invokevirtual #49                 // Method doResponse:(Ljava/lang/Throwable;Lorg/apache/hadoop/ipc/protobuf/RpcHeaderProtos$RpcResponseHeaderProto$RpcStatusProto;)V
       8: return

  void doResponse(java.lang.Throwable, org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcResponseHeaderProto$RpcStatusProto) throws java.io.IOException;
    Code:
       0: return

  public org.apache.hadoop.security.UserGroupInformation getUserGroupInformation();
    Code:
       0: aload_0
       1: invokevirtual #50                 // Method getRemoteUser:()Lorg/apache/hadoop/security/UserGroupInformation;
       4: areturn

  public int getPriorityLevel();
    Code:
       0: aload_0
       1: getfield      #51                 // Field priorityLevel:I
       4: ireturn

  public void setPriorityLevel(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #51                 // Field priorityLevel:I
       5: return

  public long getClientStateId();
    Code:
       0: aload_0
       1: getfield      #29                 // Field clientStateId:J
       4: lreturn

  public void setClientStateId(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #29                 // Field clientStateId:J
       5: return

  public void markCallCoordinated(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #30                 // Field isCallCoordinated:Z
       5: return

  public boolean isCallCoordinated();
    Code:
       0: aload_0
       1: getfield      #30                 // Field isCallCoordinated:Z
       4: ireturn

  public void deferResponse();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #22                 // Field deferredResponse:Z
       5: return

  public boolean isResponseDeferred();
    Code:
       0: aload_0
       1: getfield      #22                 // Field deferredResponse:Z
       4: ireturn

  public void setDeferredResponse(org.apache.hadoop.io.Writable);
    Code:
       0: return

  public void setDeferredError(java.lang.Throwable);
    Code:
       0: return

  public java.lang.Object run() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method run:()Ljava/lang/Void;
       4: areturn

  static org.apache.htrace.core.TraceScope access$3800(org.apache.hadoop.ipc.Server$Call);
    Code:
       0: aload_0
       1: getfield      #2                  // Field traceScope:Lorg/apache/htrace/core/TraceScope;
       4: areturn

  static org.apache.hadoop.ipc.CallerContext access$3900(org.apache.hadoop.ipc.Server$Call);
    Code:
       0: aload_0
       1: getfield      #1                  // Field callerContext:Lorg/apache/hadoop/ipc/CallerContext;
       4: areturn

  static {};
    Code:
       0: ldc           #53                 // class org/apache/hadoop/ipc/Server
       2: invokevirtual #54                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #41                 // Field $assertionsDisabled:Z
      16: return
}
