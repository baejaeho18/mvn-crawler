Compiled from "FileSystem.java"
public abstract class org.apache.hadoop.fs.FileSystem extends org.apache.hadoop.conf.Configured implements java.io.Closeable,org.apache.hadoop.security.token.DelegationTokenIssuer,org.apache.hadoop.fs.PathCapabilities {
  public static final java.lang.String FS_DEFAULT_NAME_KEY;

  public static final java.lang.String DEFAULT_FS;

  public static final org.apache.commons.logging.Log LOG;

  private static final org.slf4j.Logger LOGGER;

  public static final int SHUTDOWN_HOOK_PRIORITY;

  public static final java.lang.String TRASH_PREFIX;

  public static final java.lang.String USER_HOME_PREFIX;

  static final org.apache.hadoop.fs.FileSystem$Cache CACHE;

  private org.apache.hadoop.fs.FileSystem$Cache$Key key;

  private static final java.util.Map<java.lang.Class<? extends org.apache.hadoop.fs.FileSystem>, org.apache.hadoop.fs.FileSystem$Statistics> statisticsTable;

  protected org.apache.hadoop.fs.FileSystem$Statistics statistics;

  private final java.util.Set<org.apache.hadoop.fs.Path> deleteOnExit;

  boolean resolveSymlinks;

  private static final org.apache.hadoop.fs.PathFilter DEFAULT_FILTER;

  private static volatile boolean FILE_SYSTEMS_LOADED;

  private static final java.util.Map<java.lang.String, java.lang.Class<? extends org.apache.hadoop.fs.FileSystem>> SERVICE_FILE_SYSTEMS;

  private static boolean symlinksEnabled;

  static void addFileSystemForTesting(java.net.URI, org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.FileSystem) throws java.io.IOException;
    Code:
       0: getstatic     #6                  // Field CACHE:Lorg/apache/hadoop/fs/FileSystem$Cache;
       3: invokestatic  #7                  // Method org/apache/hadoop/fs/FileSystem$Cache.access$000:(Lorg/apache/hadoop/fs/FileSystem$Cache;)Ljava/util/Map;
       6: new           #8                  // class org/apache/hadoop/fs/FileSystem$Cache$Key
       9: dup
      10: aload_0
      11: aload_1
      12: invokespecial #9                  // Method org/apache/hadoop/fs/FileSystem$Cache$Key."<init>":(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V
      15: aload_2
      16: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      21: pop
      22: return

  static int cacheSize();
    Code:
       0: getstatic     #6                  // Field CACHE:Lorg/apache/hadoop/fs/FileSystem$Cache;
       3: invokestatic  #7                  // Method org/apache/hadoop/fs/FileSystem$Cache.access$000:(Lorg/apache/hadoop/fs/FileSystem$Cache;)Ljava/util/Map;
       6: invokeinterface #11,  1           // InterfaceMethod java/util/Map.size:()I
      11: ireturn

  public static org.apache.hadoop.fs.FileSystem get(java.net.URI, org.apache.hadoop.conf.Configuration, java.lang.String) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_1
       1: ldc           #12                 // String hadoop.security.kerberos.ticket.cache.path
       3: invokevirtual #13                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_3
       7: aload_3
       8: aload_2
       9: invokestatic  #14                 // Method org/apache/hadoop/security/UserGroupInformation.getBestUGI:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/security/UserGroupInformation;
      12: astore        4
      14: aload         4
      16: new           #15                 // class org/apache/hadoop/fs/FileSystem$1
      19: dup
      20: aload_0
      21: aload_1
      22: invokespecial #16                 // Method org/apache/hadoop/fs/FileSystem$1."<init>":(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V
      25: invokevirtual #17                 // Method org/apache/hadoop/security/UserGroupInformation.doAs:(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;
      28: checkcast     #18                 // class org/apache/hadoop/fs/FileSystem
      31: areturn

  public static org.apache.hadoop.fs.FileSystem get(org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #19                 // Method getDefaultUri:(Lorg/apache/hadoop/conf/Configuration;)Ljava/net/URI;
       4: aload_0
       5: invokestatic  #20                 // Method get:(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
       8: areturn

  public static java.net.URI getDefaultUri(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: ldc           #21                 // String fs.defaultFS
       3: ldc           #22                 // String file:///
       5: invokevirtual #23                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: invokestatic  #24                 // Method fixName:(Ljava/lang/String;)Ljava/lang/String;
      11: invokestatic  #25                 // Method java/net/URI.create:(Ljava/lang/String;)Ljava/net/URI;
      14: astore_1
      15: aload_1
      16: invokevirtual #26                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      19: ifnonnull     49
      22: new           #27                 // class java/lang/IllegalArgumentException
      25: dup
      26: new           #28                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #30                 // String No scheme in default FS:
      35: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_1
      39: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      42: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: aload_1
      50: areturn

  public static void setDefaultUri(org.apache.hadoop.conf.Configuration, java.net.URI);
    Code:
       0: aload_0
       1: ldc           #21                 // String fs.defaultFS
       3: aload_1
       4: invokevirtual #35                 // Method java/net/URI.toString:()Ljava/lang/String;
       7: invokevirtual #36                 // Method org/apache/hadoop/conf/Configuration.set:(Ljava/lang/String;Ljava/lang/String;)V
      10: return

  public static void setDefaultUri(org.apache.hadoop.conf.Configuration, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #24                 // Method fixName:(Ljava/lang/String;)Ljava/lang/String;
       5: invokestatic  #25                 // Method java/net/URI.create:(Ljava/lang/String;)Ljava/net/URI;
       8: invokestatic  #37                 // Method setDefaultUri:(Lorg/apache/hadoop/conf/Configuration;Ljava/net/URI;)V
      11: return

  public void initialize(java.net.URI, org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #26                 // Method java/net/URI.getScheme:()Ljava/lang/String;
       4: ifnull        17
       7: aload_1
       8: invokevirtual #26                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      11: invokevirtual #38                 // Method java/lang/String.isEmpty:()Z
      14: ifeq          28
      17: aload_2
      18: invokestatic  #19                 // Method getDefaultUri:(Lorg/apache/hadoop/conf/Configuration;)Ljava/net/URI;
      21: invokevirtual #26                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      24: astore_3
      25: goto          33
      28: aload_1
      29: invokevirtual #26                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      32: astore_3
      33: aload_0
      34: aload_3
      35: aload_0
      36: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      39: invokestatic  #40                 // Method getStatistics:(Ljava/lang/String;Ljava/lang/Class;)Lorg/apache/hadoop/fs/FileSystem$Statistics;
      42: putfield      #41                 // Field statistics:Lorg/apache/hadoop/fs/FileSystem$Statistics;
      45: aload_0
      46: aload_2
      47: ldc           #42                 // String fs.client.resolve.remote.symlinks
      49: iconst_1
      50: invokevirtual #43                 // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
      53: putfield      #44                 // Field resolveSymlinks:Z
      56: return

  public java.lang.String getScheme();
    Code:
       0: new           #45                 // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #28                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #46                 // String Not implemented by the
      13: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: invokevirtual #47                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      23: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc           #48                 // String  FileSystem implementation
      28: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #49                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      37: athrow

  public abstract java.net.URI getUri();

  protected java.net.URI getCanonicalUri();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #50                 // Method getUri:()Ljava/net/URI;
       5: invokevirtual #51                 // Method canonicalizeUri:(Ljava/net/URI;)Ljava/net/URI;
       8: areturn

  protected java.net.URI canonicalizeUri(java.net.URI);
    Code:
       0: aload_1
       1: invokevirtual #52                 // Method java/net/URI.getPort:()I
       4: iconst_m1
       5: if_icmpne     82
       8: aload_0
       9: invokevirtual #53                 // Method getDefaultPort:()I
      12: ifle          82
      15: new           #54                 // class java/net/URI
      18: dup
      19: aload_1
      20: invokevirtual #26                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      23: aload_1
      24: invokevirtual #55                 // Method java/net/URI.getUserInfo:()Ljava/lang/String;
      27: aload_1
      28: invokevirtual #56                 // Method java/net/URI.getHost:()Ljava/lang/String;
      31: aload_0
      32: invokevirtual #53                 // Method getDefaultPort:()I
      35: aload_1
      36: invokevirtual #57                 // Method java/net/URI.getPath:()Ljava/lang/String;
      39: aload_1
      40: invokevirtual #58                 // Method java/net/URI.getQuery:()Ljava/lang/String;
      43: aload_1
      44: invokevirtual #59                 // Method java/net/URI.getFragment:()Ljava/lang/String;
      47: invokespecial #60                 // Method java/net/URI."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      50: astore_1
      51: goto          82
      54: astore_2
      55: new           #62                 // class java/lang/AssertionError
      58: dup
      59: new           #28                 // class java/lang/StringBuilder
      62: dup
      63: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      66: ldc           #63                 // String Valid URI became unparseable:
      68: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: aload_1
      72: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      75: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      78: invokespecial #64                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      81: athrow
      82: aload_1
      83: areturn
    Exception table:
       from    to  target type
          15    51    54   Class java/net/URISyntaxException

  protected int getDefaultPort();
    Code:
       0: iconst_0
       1: ireturn

  protected static org.apache.hadoop.fs.FileSystem getFSofPath(org.apache.hadoop.fs.Path, org.apache.hadoop.conf.Configuration) throws org.apache.hadoop.fs.UnsupportedFileSystemException, java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #65                 // Method org/apache/hadoop/fs/Path.checkNotSchemeWithRelative:()V
       4: aload_0
       5: invokevirtual #66                 // Method org/apache/hadoop/fs/Path.checkNotRelative:()V
       8: aload_0
       9: invokevirtual #67                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
      12: aload_1
      13: invokestatic  #20                 // Method get:(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
      16: areturn

  public java.lang.String getCanonicalServiceName();
    Code:
       0: aload_0
       1: invokevirtual #68                 // Method getChildFileSystems:()[Lorg/apache/hadoop/fs/FileSystem;
       4: ifnonnull     21
       7: aload_0
       8: invokevirtual #50                 // Method getUri:()Ljava/net/URI;
      11: aload_0
      12: invokevirtual #53                 // Method getDefaultPort:()I
      15: invokestatic  #69                 // Method org/apache/hadoop/security/SecurityUtil.buildDTServiceName:(Ljava/net/URI;I)Ljava/lang/String;
      18: goto          22
      21: aconst_null
      22: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: invokevirtual #50                 // Method getUri:()Ljava/net/URI;
       4: invokevirtual #35                 // Method java/net/URI.toString:()Ljava/lang/String;
       7: areturn

  public static org.apache.hadoop.fs.FileSystem getNamed(java.lang.String, org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #24                 // Method fixName:(Ljava/lang/String;)Ljava/lang/String;
       4: invokestatic  #25                 // Method java/net/URI.create:(Ljava/lang/String;)Ljava/net/URI;
       7: aload_1
       8: invokestatic  #20                 // Method get:(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
      11: areturn

  private static java.lang.String fixName(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #70                 // String local
       3: invokevirtual #71                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifeq          25
       9: getstatic     #3                  // Field LOGGER:Lorg/slf4j/Logger;
      12: ldc           #72                 // String \"local\" is a deprecated filesystem name. Use \"file:///\" instead.
      14: invokeinterface #73,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      19: ldc           #22                 // String file:///
      21: astore_0
      22: goto          96
      25: aload_0
      26: bipush        47
      28: invokevirtual #74                 // Method java/lang/String.indexOf:(I)I
      31: iconst_m1
      32: if_icmpne     96
      35: getstatic     #3                  // Field LOGGER:Lorg/slf4j/Logger;
      38: new           #28                 // class java/lang/StringBuilder
      41: dup
      42: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      45: ldc           #75                 // String \"
      47: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_0
      51: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: ldc           #76                 // String \" is a deprecated filesystem name. Use \"hdfs://
      56: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: aload_0
      60: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: ldc           #77                 // String /\" instead.
      65: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: invokeinterface #73,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      76: new           #28                 // class java/lang/StringBuilder
      79: dup
      80: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      83: ldc           #78                 // String hdfs://
      85: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: aload_0
      89: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      95: astore_0
      96: aload_0
      97: areturn

  public static org.apache.hadoop.fs.LocalFileSystem getLocal(org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: getstatic     #79                 // Field org/apache/hadoop/fs/LocalFileSystem.NAME:Ljava/net/URI;
       3: aload_0
       4: invokestatic  #20                 // Method get:(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
       7: checkcast     #80                 // class org/apache/hadoop/fs/LocalFileSystem
      10: areturn

  public static org.apache.hadoop.fs.FileSystem get(java.net.URI, org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method java/net/URI.getScheme:()Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: invokevirtual #81                 // Method java/net/URI.getAuthority:()Ljava/lang/String;
       9: astore_3
      10: aload_2
      11: ifnonnull     23
      14: aload_3
      15: ifnonnull     23
      18: aload_1
      19: invokestatic  #82                 // Method get:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
      22: areturn
      23: aload_2
      24: ifnull        64
      27: aload_3
      28: ifnonnull     64
      31: aload_1
      32: invokestatic  #19                 // Method getDefaultUri:(Lorg/apache/hadoop/conf/Configuration;)Ljava/net/URI;
      35: astore        4
      37: aload_2
      38: aload         4
      40: invokevirtual #26                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      43: invokevirtual #71                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      46: ifeq          64
      49: aload         4
      51: invokevirtual #81                 // Method java/net/URI.getAuthority:()Ljava/lang/String;
      54: ifnull        64
      57: aload         4
      59: aload_1
      60: invokestatic  #20                 // Method get:(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
      63: areturn
      64: ldc           #83                 // String fs.%s.impl.disable.cache
      66: iconst_1
      67: anewarray     #84                 // class java/lang/Object
      70: dup
      71: iconst_0
      72: aload_2
      73: aastore
      74: invokestatic  #85                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      77: astore        4
      79: aload_1
      80: aload         4
      82: iconst_0
      83: invokevirtual #43                 // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
      86: ifeq          106
      89: getstatic     #3                  // Field LOGGER:Lorg/slf4j/Logger;
      92: ldc           #86                 // String Bypassing cache to create filesystem {}
      94: aload_0
      95: invokeinterface #87,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     100: aload_0
     101: aload_1
     102: invokestatic  #5                  // Method createFileSystem:(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
     105: areturn
     106: getstatic     #6                  // Field CACHE:Lorg/apache/hadoop/fs/FileSystem$Cache;
     109: aload_0
     110: aload_1
     111: invokevirtual #88                 // Method org/apache/hadoop/fs/FileSystem$Cache.get:(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
     114: areturn

  public static org.apache.hadoop.fs.FileSystem newInstance(java.net.URI, org.apache.hadoop.conf.Configuration, java.lang.String) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_1
       1: ldc           #12                 // String hadoop.security.kerberos.ticket.cache.path
       3: invokevirtual #13                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_3
       7: aload_3
       8: aload_2
       9: invokestatic  #14                 // Method org/apache/hadoop/security/UserGroupInformation.getBestUGI:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/security/UserGroupInformation;
      12: astore        4
      14: aload         4
      16: new           #89                 // class org/apache/hadoop/fs/FileSystem$2
      19: dup
      20: aload_0
      21: aload_1
      22: invokespecial #90                 // Method org/apache/hadoop/fs/FileSystem$2."<init>":(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V
      25: invokevirtual #17                 // Method org/apache/hadoop/security/UserGroupInformation.doAs:(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;
      28: checkcast     #18                 // class org/apache/hadoop/fs/FileSystem
      31: areturn

  public static org.apache.hadoop.fs.FileSystem newInstance(java.net.URI, org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method java/net/URI.getScheme:()Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: invokevirtual #81                 // Method java/net/URI.getAuthority:()Ljava/lang/String;
       9: astore_3
      10: aload_2
      11: ifnonnull     19
      14: aload_1
      15: invokestatic  #91                 // Method newInstance:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
      18: areturn
      19: aload_3
      20: ifnonnull     56
      23: aload_1
      24: invokestatic  #19                 // Method getDefaultUri:(Lorg/apache/hadoop/conf/Configuration;)Ljava/net/URI;
      27: astore        4
      29: aload_2
      30: aload         4
      32: invokevirtual #26                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      35: invokevirtual #71                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      38: ifeq          56
      41: aload         4
      43: invokevirtual #81                 // Method java/net/URI.getAuthority:()Ljava/lang/String;
      46: ifnull        56
      49: aload         4
      51: aload_1
      52: invokestatic  #92                 // Method newInstance:(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
      55: areturn
      56: getstatic     #6                  // Field CACHE:Lorg/apache/hadoop/fs/FileSystem$Cache;
      59: aload_0
      60: aload_1
      61: invokevirtual #93                 // Method org/apache/hadoop/fs/FileSystem$Cache.getUnique:(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
      64: areturn

  public static org.apache.hadoop.fs.FileSystem newInstance(org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #19                 // Method getDefaultUri:(Lorg/apache/hadoop/conf/Configuration;)Ljava/net/URI;
       4: aload_0
       5: invokestatic  #92                 // Method newInstance:(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
       8: areturn

  public static org.apache.hadoop.fs.LocalFileSystem newInstanceLocal(org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: getstatic     #79                 // Field org/apache/hadoop/fs/LocalFileSystem.NAME:Ljava/net/URI;
       3: aload_0
       4: invokestatic  #92                 // Method newInstance:(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
       7: checkcast     #80                 // class org/apache/hadoop/fs/LocalFileSystem
      10: areturn

  public static void closeAll() throws java.io.IOException;
    Code:
       0: getstatic     #6                  // Field CACHE:Lorg/apache/hadoop/fs/FileSystem$Cache;
       3: invokevirtual #94                 // Method org/apache/hadoop/fs/FileSystem$Cache.closeAll:()V
       6: return

  public static void closeAllForUGI(org.apache.hadoop.security.UserGroupInformation) throws java.io.IOException;
    Code:
       0: getstatic     #6                  // Field CACHE:Lorg/apache/hadoop/fs/FileSystem$Cache;
       3: aload_0
       4: invokevirtual #95                 // Method org/apache/hadoop/fs/FileSystem$Cache.closeAll:(Lorg/apache/hadoop/security/UserGroupInformation;)V
       7: return

  public org.apache.hadoop.fs.Path makeQualified(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #96                 // Method checkPath:(Lorg/apache/hadoop/fs/Path;)V
       5: aload_1
       6: aload_0
       7: invokevirtual #50                 // Method getUri:()Ljava/net/URI;
      10: aload_0
      11: invokevirtual #97                 // Method getWorkingDirectory:()Lorg/apache/hadoop/fs/Path;
      14: invokevirtual #98                 // Method org/apache/hadoop/fs/Path.makeQualified:(Ljava/net/URI;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      17: areturn

  public org.apache.hadoop.security.token.Token<?> getDelegationToken(java.lang.String) throws java.io.IOException;
    Code:
       0: aconst_null
       1: areturn

  public org.apache.hadoop.fs.FileSystem[] getChildFileSystems();
    Code:
       0: aconst_null
       1: areturn

  public org.apache.hadoop.security.token.DelegationTokenIssuer[] getAdditionalTokenIssuers() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #68                 // Method getChildFileSystems:()[Lorg/apache/hadoop/fs/FileSystem;
       4: areturn

  public static org.apache.hadoop.fs.FSDataOutputStream create(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #99                 // Method create:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FSDataOutputStream;
       5: astore_3
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokevirtual #100                // Method setPermission:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)V
      12: aload_3
      13: areturn

  public static boolean mkdirs(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #101                // Method mkdirs:(Lorg/apache/hadoop/fs/Path;)Z
       5: istore_3
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokevirtual #100                // Method setPermission:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)V
      12: iload_3
      13: ireturn

  protected org.apache.hadoop.fs.FileSystem();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #102                // Method org/apache/hadoop/conf/Configured."<init>":(Lorg/apache/hadoop/conf/Configuration;)V
       5: aload_0
       6: new           #103                // class java/util/TreeSet
       9: dup
      10: invokespecial #104                // Method java/util/TreeSet."<init>":()V
      13: putfield      #105                // Field deleteOnExit:Ljava/util/Set;
      16: return

  protected void checkPath(org.apache.hadoop.fs.Path);
    Code:
       0: aload_1
       1: ifnull        8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #106                // String null path
      11: invokestatic  #107                // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      14: aload_1
      15: invokevirtual #67                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
      18: astore_2
      19: aload_2
      20: invokevirtual #26                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      23: astore_3
      24: aload_3
      25: ifnonnull     29
      28: return
      29: aload_0
      30: invokevirtual #108                // Method getCanonicalUri:()Ljava/net/URI;
      33: astore        4
      35: aload         4
      37: invokevirtual #26                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      40: astore        5
      42: aload         5
      44: aload_3
      45: invokevirtual #109                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      48: ifeq          143
      51: aload         4
      53: invokevirtual #81                 // Method java/net/URI.getAuthority:()Ljava/lang/String;
      56: astore        6
      58: aload_2
      59: invokevirtual #81                 // Method java/net/URI.getAuthority:()Ljava/lang/String;
      62: astore        7
      64: aload         7
      66: ifnonnull     104
      69: aload         6
      71: ifnull        104
      74: aload_0
      75: invokevirtual #110                // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
      78: invokestatic  #19                 // Method getDefaultUri:(Lorg/apache/hadoop/conf/Configuration;)Ljava/net/URI;
      81: astore        8
      83: aload         5
      85: aload         8
      87: invokevirtual #26                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      90: invokevirtual #109                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      93: ifeq          102
      96: aload         8
      98: astore_2
      99: goto          104
     102: aconst_null
     103: astore_2
     104: aload_2
     105: ifnull        143
     108: aload_0
     109: aload_2
     110: invokevirtual #51                 // Method canonicalizeUri:(Ljava/net/URI;)Ljava/net/URI;
     113: astore_2
     114: aload_2
     115: invokevirtual #81                 // Method java/net/URI.getAuthority:()Ljava/lang/String;
     118: astore        7
     120: aload         6
     122: aload         7
     124: if_acmpeq     142
     127: aload         6
     129: ifnull        143
     132: aload         6
     134: aload         7
     136: invokevirtual #109                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     139: ifeq          143
     142: return
     143: new           #27                 // class java/lang/IllegalArgumentException
     146: dup
     147: new           #28                 // class java/lang/StringBuilder
     150: dup
     151: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
     154: ldc           #111                // String Wrong FS:
     156: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: aload_1
     160: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     163: ldc           #112                // String , expected:
     165: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     168: aload_0
     169: invokevirtual #50                 // Method getUri:()Ljava/net/URI;
     172: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     175: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     178: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     181: athrow

  public org.apache.hadoop.fs.BlockLocation[] getFileBlockLocations(org.apache.hadoop.fs.FileStatus, long, long) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: lload_2
       7: lconst_0
       8: lcmp
       9: iflt          19
      12: lload         4
      14: lconst_0
      15: lcmp
      16: ifge          29
      19: new           #27                 // class java/lang/IllegalArgumentException
      22: dup
      23: ldc           #113                // String Invalid start or len parameter
      25: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload_1
      30: invokevirtual #114                // Method org/apache/hadoop/fs/FileStatus.getLen:()J
      33: lload_2
      34: lcmp
      35: ifgt          43
      38: iconst_0
      39: anewarray     #115                // class org/apache/hadoop/fs/BlockLocation
      42: areturn
      43: iconst_1
      44: anewarray     #116                // class java/lang/String
      47: dup
      48: iconst_0
      49: ldc           #117                // String localhost:9866
      51: aastore
      52: astore        6
      54: iconst_1
      55: anewarray     #116                // class java/lang/String
      58: dup
      59: iconst_0
      60: ldc           #118                // String localhost
      62: aastore
      63: astore        7
      65: iconst_1
      66: anewarray     #115                // class org/apache/hadoop/fs/BlockLocation
      69: dup
      70: iconst_0
      71: new           #115                // class org/apache/hadoop/fs/BlockLocation
      74: dup
      75: aload         6
      77: aload         7
      79: lconst_0
      80: aload_1
      81: invokevirtual #114                // Method org/apache/hadoop/fs/FileStatus.getLen:()J
      84: invokespecial #119                // Method org/apache/hadoop/fs/BlockLocation."<init>":([Ljava/lang/String;[Ljava/lang/String;JJ)V
      87: aastore
      88: areturn

  public org.apache.hadoop.fs.BlockLocation[] getFileBlockLocations(org.apache.hadoop.fs.Path, long, long) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #120                // class java/lang/NullPointerException
       7: dup
       8: invokespecial #121                // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: aload_0
      13: aload_1
      14: invokevirtual #122                // Method getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      17: astore        6
      19: aload_0
      20: aload         6
      22: lload_2
      23: lload         4
      25: invokevirtual #123                // Method getFileBlockLocations:(Lorg/apache/hadoop/fs/FileStatus;JJ)[Lorg/apache/hadoop/fs/BlockLocation;
      28: areturn

  public org.apache.hadoop.fs.FsServerDefaults getServerDefaults() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #110                // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
       4: astore_1
       5: new           #124                // class org/apache/hadoop/fs/FsServerDefaults
       8: dup
       9: aload_0
      10: invokevirtual #125                // Method getDefaultBlockSize:()J
      13: aload_1
      14: ldc           #126                // String io.bytes.per.checksum
      16: sipush        512
      19: invokevirtual #127                // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      22: ldc           #128                // int 65536
      24: aload_0
      25: invokevirtual #129                // Method getDefaultReplication:()S
      28: aload_1
      29: ldc           #130                // String io.file.buffer.size
      31: sipush        4096
      34: invokevirtual #127                // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      37: iconst_0
      38: lconst_0
      39: getstatic     #131                // Field org/apache/hadoop/util/DataChecksum$Type.CRC32:Lorg/apache/hadoop/util/DataChecksum$Type;
      42: ldc           #132                // String
      44: invokespecial #133                // Method org/apache/hadoop/fs/FsServerDefaults."<init>":(JIISIZJLorg/apache/hadoop/util/DataChecksum$Type;Ljava/lang/String;)V
      47: areturn

  public org.apache.hadoop.fs.FsServerDefaults getServerDefaults(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #134                // Method getServerDefaults:()Lorg/apache/hadoop/fs/FsServerDefaults;
       4: areturn

  public org.apache.hadoop.fs.Path resolvePath(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #96                 // Method checkPath:(Lorg/apache/hadoop/fs/Path;)V
       5: aload_0
       6: aload_1
       7: invokevirtual #122                // Method getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      10: invokevirtual #135                // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
      13: areturn

  public abstract org.apache.hadoop.fs.FSDataInputStream open(org.apache.hadoop.fs.Path, int) throws java.io.IOException;

  public org.apache.hadoop.fs.FSDataInputStream open(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #110                // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
       6: ldc           #130                // String io.file.buffer.size
       8: sipush        4096
      11: invokevirtual #127                // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      14: invokevirtual #136                // Method open:(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;
      17: areturn

  public org.apache.hadoop.fs.FSDataInputStream open(org.apache.hadoop.fs.PathHandle) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #110                // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
       6: ldc           #130                // String io.file.buffer.size
       8: sipush        4096
      11: invokevirtual #127                // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      14: invokevirtual #137                // Method open:(Lorg/apache/hadoop/fs/PathHandle;I)Lorg/apache/hadoop/fs/FSDataInputStream;
      17: areturn

  public org.apache.hadoop.fs.FSDataInputStream open(org.apache.hadoop.fs.PathHandle, int) throws java.io.IOException;
    Code:
       0: new           #45                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #138                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public final org.apache.hadoop.fs.PathHandle getPathHandle(org.apache.hadoop.fs.FileStatus, org.apache.hadoop.fs.Options$HandleOpt...);
    Code:
       0: aconst_null
       1: aload_2
       2: if_acmpeq     11
       5: iconst_0
       6: aload_2
       7: arraylength
       8: if_icmpne     20
      11: aload_0
      12: aload_1
      13: invokestatic  #139                // Method org/apache/hadoop/fs/Options$HandleOpt.path:()[Lorg/apache/hadoop/fs/Options$HandleOpt;
      16: invokevirtual #140                // Method createPathHandle:(Lorg/apache/hadoop/fs/FileStatus;[Lorg/apache/hadoop/fs/Options$HandleOpt;)Lorg/apache/hadoop/fs/PathHandle;
      19: areturn
      20: aload_0
      21: aload_1
      22: aload_2
      23: invokevirtual #140                // Method createPathHandle:(Lorg/apache/hadoop/fs/FileStatus;[Lorg/apache/hadoop/fs/Options$HandleOpt;)Lorg/apache/hadoop/fs/PathHandle;
      26: areturn

  protected org.apache.hadoop.fs.PathHandle createPathHandle(org.apache.hadoop.fs.FileStatus, org.apache.hadoop.fs.Options$HandleOpt...);
    Code:
       0: new           #45                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #138                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public org.apache.hadoop.fs.FSDataOutputStream create(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokevirtual #141                // Method create:(Lorg/apache/hadoop/fs/Path;Z)Lorg/apache/hadoop/fs/FSDataOutputStream;
       6: areturn

  public org.apache.hadoop.fs.FSDataOutputStream create(org.apache.hadoop.fs.Path, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_0
       4: invokevirtual #110                // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
       7: ldc           #130                // String io.file.buffer.size
       9: sipush        4096
      12: invokevirtual #127                // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      15: aload_0
      16: aload_1
      17: invokevirtual #142                // Method getDefaultReplication:(Lorg/apache/hadoop/fs/Path;)S
      20: aload_0
      21: aload_1
      22: invokevirtual #143                // Method getDefaultBlockSize:(Lorg/apache/hadoop/fs/Path;)J
      25: invokevirtual #144                // Method create:(Lorg/apache/hadoop/fs/Path;ZISJ)Lorg/apache/hadoop/fs/FSDataOutputStream;
      28: areturn

  public org.apache.hadoop.fs.FSDataOutputStream create(org.apache.hadoop.fs.Path, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: aload_0
       4: invokevirtual #110                // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
       7: ldc           #130                // String io.file.buffer.size
       9: sipush        4096
      12: invokevirtual #127                // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      15: aload_0
      16: aload_1
      17: invokevirtual #142                // Method getDefaultReplication:(Lorg/apache/hadoop/fs/Path;)S
      20: aload_0
      21: aload_1
      22: invokevirtual #143                // Method getDefaultBlockSize:(Lorg/apache/hadoop/fs/Path;)J
      25: aload_2
      26: invokevirtual #145                // Method create:(Lorg/apache/hadoop/fs/Path;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
      29: areturn

  public org.apache.hadoop.fs.FSDataOutputStream create(org.apache.hadoop.fs.Path, short) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: aload_0
       4: invokevirtual #110                // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
       7: ldc           #130                // String io.file.buffer.size
       9: sipush        4096
      12: invokevirtual #127                // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      15: iload_2
      16: aload_0
      17: aload_1
      18: invokevirtual #143                // Method getDefaultBlockSize:(Lorg/apache/hadoop/fs/Path;)J
      21: invokevirtual #144                // Method create:(Lorg/apache/hadoop/fs/Path;ZISJ)Lorg/apache/hadoop/fs/FSDataOutputStream;
      24: areturn

  public org.apache.hadoop.fs.FSDataOutputStream create(org.apache.hadoop.fs.Path, short, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: aload_0
       4: invokevirtual #110                // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
       7: ldc           #130                // String io.file.buffer.size
       9: sipush        4096
      12: invokevirtual #127                // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      15: iload_2
      16: aload_0
      17: aload_1
      18: invokevirtual #143                // Method getDefaultBlockSize:(Lorg/apache/hadoop/fs/Path;)J
      21: aload_3
      22: invokevirtual #145                // Method create:(Lorg/apache/hadoop/fs/Path;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
      25: areturn

  public org.apache.hadoop.fs.FSDataOutputStream create(org.apache.hadoop.fs.Path, boolean, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: aload_0
       5: aload_1
       6: invokevirtual #142                // Method getDefaultReplication:(Lorg/apache/hadoop/fs/Path;)S
       9: aload_0
      10: aload_1
      11: invokevirtual #143                // Method getDefaultBlockSize:(Lorg/apache/hadoop/fs/Path;)J
      14: invokevirtual #144                // Method create:(Lorg/apache/hadoop/fs/Path;ZISJ)Lorg/apache/hadoop/fs/FSDataOutputStream;
      17: areturn

  public org.apache.hadoop.fs.FSDataOutputStream create(org.apache.hadoop.fs.Path, boolean, int, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: aload_0
       5: aload_1
       6: invokevirtual #142                // Method getDefaultReplication:(Lorg/apache/hadoop/fs/Path;)S
       9: aload_0
      10: aload_1
      11: invokevirtual #143                // Method getDefaultBlockSize:(Lorg/apache/hadoop/fs/Path;)J
      14: aload         4
      16: invokevirtual #145                // Method create:(Lorg/apache/hadoop/fs/Path;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
      19: areturn

  public org.apache.hadoop.fs.FSDataOutputStream create(org.apache.hadoop.fs.Path, boolean, int, short, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: lload         5
       8: aconst_null
       9: invokevirtual #145                // Method create:(Lorg/apache/hadoop/fs/Path;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
      12: areturn

  public org.apache.hadoop.fs.FSDataOutputStream create(org.apache.hadoop.fs.Path, boolean, int, short, long, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #146                // Method org/apache/hadoop/fs/permission/FsPermission.getFileDefault:()Lorg/apache/hadoop/fs/permission/FsPermission;
       5: aload_0
       6: invokevirtual #110                // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
       9: invokestatic  #147                // Method org/apache/hadoop/fs/permission/FsPermission.getUMask:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/permission/FsPermission;
      12: invokestatic  #148                // Method org/apache/hadoop/fs/permission/FsCreateModes.applyUMask:(Lorg/apache/hadoop/fs/permission/FsPermission;Lorg/apache/hadoop/fs/permission/FsPermission;)Lorg/apache/hadoop/fs/permission/FsPermission;
      15: iload_2
      16: iload_3
      17: iload         4
      19: lload         5
      21: aload         7
      23: invokevirtual #149                // Method create:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
      26: areturn

  public abstract org.apache.hadoop.fs.FSDataOutputStream create(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission, boolean, int, short, long, org.apache.hadoop.util.Progressable) throws java.io.IOException;

  public org.apache.hadoop.fs.FSDataOutputStream create(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission, java.util.EnumSet<org.apache.hadoop.fs.CreateFlag>, int, short, long, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: iload         5
       8: lload         6
      10: aload         8
      12: aconst_null
      13: invokevirtual #150                // Method create:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;Ljava/util/EnumSet;ISJLorg/apache/hadoop/util/Progressable;Lorg/apache/hadoop/fs/Options$ChecksumOpt;)Lorg/apache/hadoop/fs/FSDataOutputStream;
      16: areturn

  public org.apache.hadoop.fs.FSDataOutputStream create(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission, java.util.EnumSet<org.apache.hadoop.fs.CreateFlag>, int, short, long, org.apache.hadoop.util.Progressable, org.apache.hadoop.fs.Options$ChecksumOpt) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: getstatic     #151                // Field org/apache/hadoop/fs/CreateFlag.OVERWRITE:Lorg/apache/hadoop/fs/CreateFlag;
       7: invokevirtual #152                // Method java/util/EnumSet.contains:(Ljava/lang/Object;)Z
      10: iload         4
      12: iload         5
      14: lload         6
      16: aload         8
      18: invokevirtual #149                // Method create:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
      21: areturn

  protected org.apache.hadoop.fs.FSDataOutputStream primitiveCreate(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission, java.util.EnumSet<org.apache.hadoop.fs.CreateFlag>, int, short, long, org.apache.hadoop.util.Progressable, org.apache.hadoop.fs.Options$ChecksumOpt) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #153                // Method exists:(Lorg/apache/hadoop/fs/Path;)Z
       5: istore        10
       7: aload_1
       8: iload         10
      10: aload_3
      11: invokestatic  #154                // Method org/apache/hadoop/fs/CreateFlag.validate:(Ljava/lang/Object;ZLjava/util/EnumSet;)V
      14: iload         10
      16: ifeq          39
      19: aload_3
      20: getstatic     #155                // Field org/apache/hadoop/fs/CreateFlag.APPEND:Lorg/apache/hadoop/fs/CreateFlag;
      23: invokevirtual #152                // Method java/util/EnumSet.contains:(Ljava/lang/Object;)Z
      26: ifeq          39
      29: aload_0
      30: aload_1
      31: iload         4
      33: aload         8
      35: invokevirtual #156                // Method append:(Lorg/apache/hadoop/fs/Path;ILorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
      38: areturn
      39: aload_0
      40: aload_1
      41: aload_2
      42: aload_3
      43: getstatic     #151                // Field org/apache/hadoop/fs/CreateFlag.OVERWRITE:Lorg/apache/hadoop/fs/CreateFlag;
      46: invokevirtual #152                // Method java/util/EnumSet.contains:(Ljava/lang/Object;)Z
      49: iload         4
      51: iload         5
      53: lload         6
      55: aload         8
      57: invokevirtual #149                // Method create:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
      60: areturn

  protected boolean primitiveMkdir(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #157                // Method mkdirs:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z
       6: ireturn

  protected void primitiveMkdir(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission, boolean) throws java.io.IOException;
    Code:
       0: iload_3
       1: ifne          64
       4: aload_0
       5: aload_1
       6: invokevirtual #158                // Method org/apache/hadoop/fs/Path.getParent:()Lorg/apache/hadoop/fs/Path;
       9: invokevirtual #122                // Method getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      12: astore        4
      14: aload         4
      16: ifnonnull     46
      19: new           #159                // class java/io/FileNotFoundException
      22: dup
      23: new           #28                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #160                // String Missing parent:
      32: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_1
      36: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      39: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokespecial #161                // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: aload         4
      48: invokevirtual #162                // Method org/apache/hadoop/fs/FileStatus.isDirectory:()Z
      51: ifne          64
      54: new           #163                // class org/apache/hadoop/fs/ParentNotDirectoryException
      57: dup
      58: ldc           #164                // String parent is not a dir
      60: invokespecial #165                // Method org/apache/hadoop/fs/ParentNotDirectoryException."<init>":(Ljava/lang/String;)V
      63: athrow
      64: aload_0
      65: aload_1
      66: aload_2
      67: invokevirtual #157                // Method mkdirs:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z
      70: ifne          105
      73: new           #166                // class java/io/IOException
      76: dup
      77: new           #28                 // class java/lang/StringBuilder
      80: dup
      81: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      84: ldc           #167                // String mkdir of
      86: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: aload_1
      90: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      93: ldc           #168                // String  failed
      95: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     101: invokespecial #169                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     104: athrow
     105: return

  public org.apache.hadoop.fs.FSDataOutputStream createNonRecursive(org.apache.hadoop.fs.Path, boolean, int, short, long, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #146                // Method org/apache/hadoop/fs/permission/FsPermission.getFileDefault:()Lorg/apache/hadoop/fs/permission/FsPermission;
       5: iload_2
       6: iload_3
       7: iload         4
       9: lload         5
      11: aload         7
      13: invokevirtual #170                // Method createNonRecursive:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
      16: areturn

  public org.apache.hadoop.fs.FSDataOutputStream createNonRecursive(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission, boolean, int, short, long, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: ifeq          19
       7: getstatic     #171                // Field org/apache/hadoop/fs/CreateFlag.CREATE:Lorg/apache/hadoop/fs/CreateFlag;
      10: getstatic     #151                // Field org/apache/hadoop/fs/CreateFlag.OVERWRITE:Lorg/apache/hadoop/fs/CreateFlag;
      13: invokestatic  #172                // Method java/util/EnumSet.of:(Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/util/EnumSet;
      16: goto          25
      19: getstatic     #171                // Field org/apache/hadoop/fs/CreateFlag.CREATE:Lorg/apache/hadoop/fs/CreateFlag;
      22: invokestatic  #173                // Method java/util/EnumSet.of:(Ljava/lang/Enum;)Ljava/util/EnumSet;
      25: iload         4
      27: iload         5
      29: lload         6
      31: aload         8
      33: invokevirtual #174                // Method createNonRecursive:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;Ljava/util/EnumSet;ISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
      36: areturn

  public org.apache.hadoop.fs.FSDataOutputStream createNonRecursive(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission, java.util.EnumSet<org.apache.hadoop.fs.CreateFlag>, int, short, long, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: new           #166                // class java/io/IOException
       3: dup
       4: new           #28                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #175                // String createNonRecursive unsupported for this filesystem
      13: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      23: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: invokespecial #169                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      29: athrow

  public boolean createNewFile(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #153                // Method exists:(Lorg/apache/hadoop/fs/Path;)Z
       5: ifeq          10
       8: iconst_0
       9: ireturn
      10: aload_0
      11: aload_1
      12: iconst_0
      13: aload_0
      14: invokevirtual #110                // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
      17: ldc           #130                // String io.file.buffer.size
      19: sipush        4096
      22: invokevirtual #127                // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      25: invokevirtual #176                // Method create:(Lorg/apache/hadoop/fs/Path;ZI)Lorg/apache/hadoop/fs/FSDataOutputStream;
      28: invokevirtual #177                // Method org/apache/hadoop/fs/FSDataOutputStream.close:()V
      31: iconst_1
      32: ireturn

  public org.apache.hadoop.fs.FSDataOutputStream append(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #110                // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
       6: ldc           #130                // String io.file.buffer.size
       8: sipush        4096
      11: invokevirtual #127                // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      14: aconst_null
      15: invokevirtual #156                // Method append:(Lorg/apache/hadoop/fs/Path;ILorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
      18: areturn

  public org.apache.hadoop.fs.FSDataOutputStream append(org.apache.hadoop.fs.Path, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aconst_null
       4: invokevirtual #156                // Method append:(Lorg/apache/hadoop/fs/Path;ILorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
       7: areturn

  public abstract org.apache.hadoop.fs.FSDataOutputStream append(org.apache.hadoop.fs.Path, int, org.apache.hadoop.util.Progressable) throws java.io.IOException;

  public void concat(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path[]) throws java.io.IOException;
    Code:
       0: new           #45                 // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #28                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #46                 // String Not implemented by the
      13: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: invokevirtual #47                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      23: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc           #48                 // String  FileSystem implementation
      28: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #49                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      37: athrow

  public short getReplication(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #122                // Method getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
       5: invokevirtual #178                // Method org/apache/hadoop/fs/FileStatus.getReplication:()S
       8: ireturn

  public boolean setReplication(org.apache.hadoop.fs.Path, short) throws java.io.IOException;
    Code:
       0: iconst_1
       1: ireturn

  public abstract boolean rename(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path) throws java.io.IOException;

  protected void rename(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Options$Rename...) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #179                // Method getFileLinkStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
       5: astore        4
       7: aload         4
       9: ifnonnull     44
      12: new           #159                // class java/io/FileNotFoundException
      15: dup
      16: new           #28                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #180                // String rename source
      25: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_1
      29: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      32: ldc           #181                // String  not found.
      34: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokespecial #161                // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: iconst_0
      45: istore        5
      47: aconst_null
      48: aload_3
      49: if_acmpeq     94
      52: aload_3
      53: astore        6
      55: aload         6
      57: arraylength
      58: istore        7
      60: iconst_0
      61: istore        8
      63: iload         8
      65: iload         7
      67: if_icmpge     94
      70: aload         6
      72: iload         8
      74: aaload
      75: astore        9
      77: aload         9
      79: getstatic     #182                // Field org/apache/hadoop/fs/Options$Rename.OVERWRITE:Lorg/apache/hadoop/fs/Options$Rename;
      82: if_acmpne     88
      85: iconst_1
      86: istore        5
      88: iinc          8, 1
      91: goto          63
      94: aload_0
      95: aload_2
      96: invokevirtual #179                // Method getFileLinkStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      99: astore        6
     101: goto          109
     104: astore        7
     106: aconst_null
     107: astore        6
     109: aload         6
     111: ifnull        268
     114: aload         4
     116: invokevirtual #162                // Method org/apache/hadoop/fs/FileStatus.isDirectory:()Z
     119: aload         6
     121: invokevirtual #162                // Method org/apache/hadoop/fs/FileStatus.isDirectory:()Z
     124: if_icmpeq     168
     127: new           #166                // class java/io/IOException
     130: dup
     131: new           #28                 // class java/lang/StringBuilder
     134: dup
     135: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
     138: ldc           #183                // String Source
     140: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     143: aload_1
     144: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     147: ldc           #184                // String  Destination
     149: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: aload_2
     153: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     156: ldc           #185                // String  both should be either file or directory
     158: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     161: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     164: invokespecial #169                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     167: athrow
     168: iload         5
     170: ifne          205
     173: new           #186                // class org/apache/hadoop/fs/FileAlreadyExistsException
     176: dup
     177: new           #28                 // class java/lang/StringBuilder
     180: dup
     181: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
     184: ldc           #187                // String rename destination
     186: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     189: aload_2
     190: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     193: ldc           #188                // String  already exists.
     195: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     198: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     201: invokespecial #189                // Method org/apache/hadoop/fs/FileAlreadyExistsException."<init>":(Ljava/lang/String;)V
     204: athrow
     205: aload         6
     207: invokevirtual #162                // Method org/apache/hadoop/fs/FileStatus.isDirectory:()Z
     210: ifeq          258
     213: aload_0
     214: aload_2
     215: invokevirtual #190                // Method listStatus:(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
     218: astore        7
     220: aload         7
     222: ifnull        258
     225: aload         7
     227: arraylength
     228: ifeq          258
     231: new           #166                // class java/io/IOException
     234: dup
     235: new           #28                 // class java/lang/StringBuilder
     238: dup
     239: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
     242: ldc           #191                // String rename cannot overwrite non empty destination directory
     244: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     247: aload_2
     248: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     251: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     254: invokespecial #169                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     257: athrow
     258: aload_0
     259: aload_2
     260: iconst_0
     261: invokevirtual #192                // Method delete:(Lorg/apache/hadoop/fs/Path;Z)Z
     264: pop
     265: goto          361
     268: aload_2
     269: invokevirtual #158                // Method org/apache/hadoop/fs/Path.getParent:()Lorg/apache/hadoop/fs/Path;
     272: astore        7
     274: aload_0
     275: aload         7
     277: invokevirtual #122                // Method getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
     280: astore        8
     282: aload         8
     284: ifnonnull     320
     287: new           #159                // class java/io/FileNotFoundException
     290: dup
     291: new           #28                 // class java/lang/StringBuilder
     294: dup
     295: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
     298: ldc           #193                // String rename destination parent
     300: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     303: aload         7
     305: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     308: ldc           #181                // String  not found.
     310: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     313: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     316: invokespecial #161                // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
     319: athrow
     320: aload         8
     322: invokevirtual #162                // Method org/apache/hadoop/fs/FileStatus.isDirectory:()Z
     325: ifne          361
     328: new           #163                // class org/apache/hadoop/fs/ParentNotDirectoryException
     331: dup
     332: new           #28                 // class java/lang/StringBuilder
     335: dup
     336: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
     339: ldc           #193                // String rename destination parent
     341: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     344: aload         7
     346: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     349: ldc           #194                // String  is a file.
     351: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     354: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     357: invokespecial #165                // Method org/apache/hadoop/fs/ParentNotDirectoryException."<init>":(Ljava/lang/String;)V
     360: athrow
     361: aload_0
     362: aload_1
     363: aload_2
     364: invokevirtual #195                // Method rename:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
     367: ifne          411
     370: new           #166                // class java/io/IOException
     373: dup
     374: new           #28                 // class java/lang/StringBuilder
     377: dup
     378: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
     381: ldc           #196                // String rename from
     383: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     386: aload_1
     387: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     390: ldc           #197                // String  to
     392: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     395: aload_2
     396: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     399: ldc           #198                // String  failed.
     401: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     404: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     407: invokespecial #169                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     410: athrow
     411: return
    Exception table:
       from    to  target type
          94   101   104   Class java/io/IOException

  public boolean truncate(org.apache.hadoop.fs.Path, long) throws java.io.IOException;
    Code:
       0: new           #45                 // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #28                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #46                 // String Not implemented by the
      13: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: invokevirtual #47                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      23: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc           #48                 // String  FileSystem implementation
      28: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #49                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      37: athrow

  public boolean delete(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokevirtual #192                // Method delete:(Lorg/apache/hadoop/fs/Path;Z)Z
       6: ireturn

  public abstract boolean delete(org.apache.hadoop.fs.Path, boolean) throws java.io.IOException;

  public boolean deleteOnExit(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #153                // Method exists:(Lorg/apache/hadoop/fs/Path;)Z
       5: ifne          10
       8: iconst_0
       9: ireturn
      10: aload_0
      11: getfield      #105                // Field deleteOnExit:Ljava/util/Set;
      14: dup
      15: astore_2
      16: monitorenter
      17: aload_0
      18: getfield      #105                // Field deleteOnExit:Ljava/util/Set;
      21: aload_1
      22: invokeinterface #199,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      27: pop
      28: aload_2
      29: monitorexit
      30: goto          38
      33: astore_3
      34: aload_2
      35: monitorexit
      36: aload_3
      37: athrow
      38: iconst_1
      39: ireturn
    Exception table:
       from    to  target type
          17    30    33   any
          33    36    33   any

  public boolean cancelDeleteOnExit(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: getfield      #105                // Field deleteOnExit:Ljava/util/Set;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #105                // Field deleteOnExit:Ljava/util/Set;
      11: aload_1
      12: invokeinterface #200,  2          // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      17: aload_2
      18: monitorexit
      19: ireturn
      20: astore_3
      21: aload_2
      22: monitorexit
      23: aload_3
      24: athrow
    Exception table:
       from    to  target type
           7    19    20   any
          20    23    20   any

  protected void processDeleteOnExit();
    Code:
       0: aload_0
       1: getfield      #105                // Field deleteOnExit:Ljava/util/Set;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #105                // Field deleteOnExit:Ljava/util/Set;
      11: invokeinterface #201,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      16: astore_2
      17: aload_2
      18: invokeinterface #202,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          76
      26: aload_2
      27: invokeinterface #203,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #204                // class org/apache/hadoop/fs/Path
      35: astore_3
      36: aload_0
      37: aload_3
      38: invokevirtual #153                // Method exists:(Lorg/apache/hadoop/fs/Path;)Z
      41: ifeq          51
      44: aload_0
      45: aload_3
      46: iconst_1
      47: invokevirtual #192                // Method delete:(Lorg/apache/hadoop/fs/Path;Z)Z
      50: pop
      51: goto          67
      54: astore        4
      56: getstatic     #3                  // Field LOGGER:Lorg/slf4j/Logger;
      59: ldc           #205                // String Ignoring failure to deleteOnExit for path {}
      61: aload_3
      62: invokeinterface #206,  3          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      67: aload_2
      68: invokeinterface #207,  1          // InterfaceMethod java/util/Iterator.remove:()V
      73: goto          17
      76: aload_1
      77: monitorexit
      78: goto          88
      81: astore        5
      83: aload_1
      84: monitorexit
      85: aload         5
      87: athrow
      88: return
    Exception table:
       from    to  target type
          36    51    54   Class java/io/IOException
           7    78    81   any
          81    85    81   any

  public boolean exists(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #122                // Method getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
       5: ifnull        12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn
      14: astore_2
      15: iconst_0
      16: ireturn
    Exception table:
       from    to  target type
           0    13    14   Class java/io/FileNotFoundException

  public boolean isDirectory(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #122                // Method getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
       5: invokevirtual #162                // Method org/apache/hadoop/fs/FileStatus.isDirectory:()Z
       8: ireturn
       9: astore_2
      10: iconst_0
      11: ireturn
    Exception table:
       from    to  target type
           0     8     9   Class java/io/FileNotFoundException

  public boolean isFile(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #122                // Method getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
       5: invokevirtual #208                // Method org/apache/hadoop/fs/FileStatus.isFile:()Z
       8: ireturn
       9: astore_2
      10: iconst_0
      11: ireturn
    Exception table:
       from    to  target type
           0     8     9   Class java/io/FileNotFoundException

  public long getLength(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #122                // Method getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
       5: invokevirtual #114                // Method org/apache/hadoop/fs/FileStatus.getLen:()J
       8: lreturn

  public org.apache.hadoop.fs.ContentSummary getContentSummary(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #122                // Method getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
       5: astore_2
       6: aload_2
       7: invokevirtual #208                // Method org/apache/hadoop/fs/FileStatus.isFile:()Z
      10: ifeq          45
      13: aload_2
      14: invokevirtual #114                // Method org/apache/hadoop/fs/FileStatus.getLen:()J
      17: lstore_3
      18: new           #209                // class org/apache/hadoop/fs/ContentSummary$Builder
      21: dup
      22: invokespecial #210                // Method org/apache/hadoop/fs/ContentSummary$Builder."<init>":()V
      25: lload_3
      26: invokevirtual #211                // Method org/apache/hadoop/fs/ContentSummary$Builder.length:(J)Lorg/apache/hadoop/fs/ContentSummary$Builder;
      29: lconst_1
      30: invokevirtual #212                // Method org/apache/hadoop/fs/ContentSummary$Builder.fileCount:(J)Lorg/apache/hadoop/fs/ContentSummary$Builder;
      33: lconst_0
      34: invokevirtual #213                // Method org/apache/hadoop/fs/ContentSummary$Builder.directoryCount:(J)Lorg/apache/hadoop/fs/ContentSummary$Builder;
      37: lload_3
      38: invokevirtual #214                // Method org/apache/hadoop/fs/ContentSummary$Builder.spaceConsumed:(J)Lorg/apache/hadoop/fs/ContentSummary$Builder;
      41: invokevirtual #215                // Method org/apache/hadoop/fs/ContentSummary$Builder.build:()Lorg/apache/hadoop/fs/ContentSummary;
      44: areturn
      45: iconst_3
      46: newarray       long
      48: dup
      49: iconst_0
      50: lconst_0
      51: lastore
      52: dup
      53: iconst_1
      54: lconst_0
      55: lastore
      56: dup
      57: iconst_2
      58: lconst_1
      59: lastore
      60: astore_3
      61: aload_0
      62: aload_1
      63: invokevirtual #190                // Method listStatus:(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
      66: astore        4
      68: aload         4
      70: arraylength
      71: istore        5
      73: iconst_0
      74: istore        6
      76: iload         6
      78: iload         5
      80: if_icmpge     186
      83: aload         4
      85: iload         6
      87: aaload
      88: astore        7
      90: aload         7
      92: invokevirtual #114                // Method org/apache/hadoop/fs/FileStatus.getLen:()J
      95: lstore        8
      97: aload         7
      99: invokevirtual #162                // Method org/apache/hadoop/fs/FileStatus.isDirectory:()Z
     102: ifeq          117
     105: aload_0
     106: aload         7
     108: invokevirtual #135                // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
     111: invokevirtual #216                // Method getContentSummary:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/ContentSummary;
     114: goto          145
     117: new           #209                // class org/apache/hadoop/fs/ContentSummary$Builder
     120: dup
     121: invokespecial #210                // Method org/apache/hadoop/fs/ContentSummary$Builder."<init>":()V
     124: lload         8
     126: invokevirtual #211                // Method org/apache/hadoop/fs/ContentSummary$Builder.length:(J)Lorg/apache/hadoop/fs/ContentSummary$Builder;
     129: lconst_1
     130: invokevirtual #212                // Method org/apache/hadoop/fs/ContentSummary$Builder.fileCount:(J)Lorg/apache/hadoop/fs/ContentSummary$Builder;
     133: lconst_0
     134: invokevirtual #213                // Method org/apache/hadoop/fs/ContentSummary$Builder.directoryCount:(J)Lorg/apache/hadoop/fs/ContentSummary$Builder;
     137: lload         8
     139: invokevirtual #214                // Method org/apache/hadoop/fs/ContentSummary$Builder.spaceConsumed:(J)Lorg/apache/hadoop/fs/ContentSummary$Builder;
     142: invokevirtual #215                // Method org/apache/hadoop/fs/ContentSummary$Builder.build:()Lorg/apache/hadoop/fs/ContentSummary;
     145: astore        10
     147: aload_3
     148: iconst_0
     149: dup2
     150: laload
     151: aload         10
     153: invokevirtual #217                // Method org/apache/hadoop/fs/ContentSummary.getLength:()J
     156: ladd
     157: lastore
     158: aload_3
     159: iconst_1
     160: dup2
     161: laload
     162: aload         10
     164: invokevirtual #218                // Method org/apache/hadoop/fs/ContentSummary.getFileCount:()J
     167: ladd
     168: lastore
     169: aload_3
     170: iconst_2
     171: dup2
     172: laload
     173: aload         10
     175: invokevirtual #219                // Method org/apache/hadoop/fs/ContentSummary.getDirectoryCount:()J
     178: ladd
     179: lastore
     180: iinc          6, 1
     183: goto          76
     186: new           #209                // class org/apache/hadoop/fs/ContentSummary$Builder
     189: dup
     190: invokespecial #210                // Method org/apache/hadoop/fs/ContentSummary$Builder."<init>":()V
     193: aload_3
     194: iconst_0
     195: laload
     196: invokevirtual #211                // Method org/apache/hadoop/fs/ContentSummary$Builder.length:(J)Lorg/apache/hadoop/fs/ContentSummary$Builder;
     199: aload_3
     200: iconst_1
     201: laload
     202: invokevirtual #212                // Method org/apache/hadoop/fs/ContentSummary$Builder.fileCount:(J)Lorg/apache/hadoop/fs/ContentSummary$Builder;
     205: aload_3
     206: iconst_2
     207: laload
     208: invokevirtual #213                // Method org/apache/hadoop/fs/ContentSummary$Builder.directoryCount:(J)Lorg/apache/hadoop/fs/ContentSummary$Builder;
     211: aload_3
     212: iconst_0
     213: laload
     214: invokevirtual #214                // Method org/apache/hadoop/fs/ContentSummary$Builder.spaceConsumed:(J)Lorg/apache/hadoop/fs/ContentSummary$Builder;
     217: invokevirtual #215                // Method org/apache/hadoop/fs/ContentSummary$Builder.build:()Lorg/apache/hadoop/fs/ContentSummary;
     220: areturn

  public org.apache.hadoop.fs.QuotaUsage getQuotaUsage(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #216                // Method getContentSummary:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/ContentSummary;
       5: areturn

  public void setQuota(org.apache.hadoop.fs.Path, long, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #220                // Method methodNotSupported:()V
       4: return

  public void setQuotaByStorageType(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.StorageType, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #220                // Method methodNotSupported:()V
       4: return

  public abstract org.apache.hadoop.fs.FileStatus[] listStatus(org.apache.hadoop.fs.Path) throws java.io.FileNotFoundException, java.io.IOException;

  protected org.apache.hadoop.fs.FileSystem$DirectoryEntries listStatusBatch(org.apache.hadoop.fs.Path, byte[]) throws java.io.FileNotFoundException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #190                // Method listStatus:(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
       5: astore_3
       6: new           #221                // class org/apache/hadoop/fs/FileSystem$DirectoryEntries
       9: dup
      10: aload_3
      11: aconst_null
      12: iconst_0
      13: invokespecial #222                // Method org/apache/hadoop/fs/FileSystem$DirectoryEntries."<init>":([Lorg/apache/hadoop/fs/FileStatus;[BZ)V
      16: areturn

  private void listStatus(java.util.ArrayList<org.apache.hadoop.fs.FileStatus>, org.apache.hadoop.fs.Path, org.apache.hadoop.fs.PathFilter) throws java.io.FileNotFoundException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #190                // Method listStatus:(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
       5: astore        4
       7: aload         4
       9: ldc           #223                // String listStatus should not return NULL
      11: invokestatic  #224                // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: iconst_0
      16: istore        5
      18: iload         5
      20: aload         4
      22: arraylength
      23: if_icmpge     59
      26: aload_3
      27: aload         4
      29: iload         5
      31: aaload
      32: invokevirtual #135                // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
      35: invokeinterface #225,  2          // InterfaceMethod org/apache/hadoop/fs/PathFilter.accept:(Lorg/apache/hadoop/fs/Path;)Z
      40: ifeq          53
      43: aload_1
      44: aload         4
      46: iload         5
      48: aaload
      49: invokevirtual #226                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      52: pop
      53: iinc          5, 1
      56: goto          18
      59: return

  public org.apache.hadoop.fs.RemoteIterator<org.apache.hadoop.fs.Path> listCorruptFileBlocks(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #45                 // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #28                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #227                // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
      18: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc           #228                // String  does not support listCorruptFileBlocks
      23: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokespecial #49                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      32: athrow

  public org.apache.hadoop.fs.FileStatus[] listStatus(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.PathFilter) throws java.io.FileNotFoundException, java.io.IOException;
    Code:
       0: new           #229                // class java/util/ArrayList
       3: dup
       4: invokespecial #230                // Method java/util/ArrayList."<init>":()V
       7: astore_3
       8: aload_0
       9: aload_3
      10: aload_1
      11: aload_2
      12: invokespecial #231                // Method listStatus:(Ljava/util/ArrayList;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/PathFilter;)V
      15: aload_3
      16: aload_3
      17: invokevirtual #232                // Method java/util/ArrayList.size:()I
      20: anewarray     #233                // class org/apache/hadoop/fs/FileStatus
      23: invokevirtual #234                // Method java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      26: checkcast     #235                // class "[Lorg/apache/hadoop/fs/FileStatus;"
      29: areturn

  public org.apache.hadoop.fs.FileStatus[] listStatus(org.apache.hadoop.fs.Path[]) throws java.io.FileNotFoundException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #236                // Field DEFAULT_FILTER:Lorg/apache/hadoop/fs/PathFilter;
       5: invokevirtual #237                // Method listStatus:([Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/PathFilter;)[Lorg/apache/hadoop/fs/FileStatus;
       8: areturn

  public org.apache.hadoop.fs.FileStatus[] listStatus(org.apache.hadoop.fs.Path[], org.apache.hadoop.fs.PathFilter) throws java.io.FileNotFoundException, java.io.IOException;
    Code:
       0: new           #229                // class java/util/ArrayList
       3: dup
       4: invokespecial #230                // Method java/util/ArrayList."<init>":()V
       7: astore_3
       8: iconst_0
       9: istore        4
      11: iload         4
      13: aload_1
      14: arraylength
      15: if_icmpge     34
      18: aload_0
      19: aload_3
      20: aload_1
      21: iload         4
      23: aaload
      24: aload_2
      25: invokespecial #231                // Method listStatus:(Ljava/util/ArrayList;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/PathFilter;)V
      28: iinc          4, 1
      31: goto          11
      34: aload_3
      35: aload_3
      36: invokevirtual #232                // Method java/util/ArrayList.size:()I
      39: anewarray     #233                // class org/apache/hadoop/fs/FileStatus
      42: invokevirtual #234                // Method java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      45: checkcast     #235                // class "[Lorg/apache/hadoop/fs/FileStatus;"
      48: areturn

  public org.apache.hadoop.fs.FileStatus[] globStatus(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #238                // class org/apache/hadoop/fs/Globber
       3: dup
       4: aload_0
       5: aload_1
       6: getstatic     #236                // Field DEFAULT_FILTER:Lorg/apache/hadoop/fs/PathFilter;
       9: invokespecial #239                // Method org/apache/hadoop/fs/Globber."<init>":(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/PathFilter;)V
      12: invokevirtual #240                // Method org/apache/hadoop/fs/Globber.glob:()[Lorg/apache/hadoop/fs/FileStatus;
      15: areturn

  public org.apache.hadoop.fs.FileStatus[] globStatus(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.PathFilter) throws java.io.IOException;
    Code:
       0: new           #238                // class org/apache/hadoop/fs/Globber
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #239                // Method org/apache/hadoop/fs/Globber."<init>":(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/PathFilter;)V
      10: invokevirtual #240                // Method org/apache/hadoop/fs/Globber.glob:()[Lorg/apache/hadoop/fs/FileStatus;
      13: areturn

  public org.apache.hadoop.fs.RemoteIterator<org.apache.hadoop.fs.LocatedFileStatus> listLocatedStatus(org.apache.hadoop.fs.Path) throws java.io.FileNotFoundException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #236                // Field DEFAULT_FILTER:Lorg/apache/hadoop/fs/PathFilter;
       5: invokevirtual #241                // Method listLocatedStatus:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/PathFilter;)Lorg/apache/hadoop/fs/RemoteIterator;
       8: areturn

  protected org.apache.hadoop.fs.RemoteIterator<org.apache.hadoop.fs.LocatedFileStatus> listLocatedStatus(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.PathFilter) throws java.io.FileNotFoundException, java.io.IOException;
    Code:
       0: new           #242                // class org/apache/hadoop/fs/FileSystem$4
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #243                // Method org/apache/hadoop/fs/FileSystem$4."<init>":(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/PathFilter;)V
      10: areturn

  public org.apache.hadoop.fs.RemoteIterator<org.apache.hadoop.fs.FileStatus> listStatusIterator(org.apache.hadoop.fs.Path) throws java.io.FileNotFoundException, java.io.IOException;
    Code:
       0: new           #244                // class org/apache/hadoop/fs/FileSystem$DirListingIterator
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #245                // Method org/apache/hadoop/fs/FileSystem$DirListingIterator."<init>":(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)V
       9: areturn

  public org.apache.hadoop.fs.RemoteIterator<org.apache.hadoop.fs.LocatedFileStatus> listFiles(org.apache.hadoop.fs.Path, boolean) throws java.io.FileNotFoundException, java.io.IOException;
    Code:
       0: new           #246                // class org/apache/hadoop/fs/FileSystem$5
       3: dup
       4: aload_0
       5: aload_1
       6: iload_2
       7: invokespecial #247                // Method org/apache/hadoop/fs/FileSystem$5."<init>":(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Z)V
      10: areturn

  public org.apache.hadoop.fs.Path getHomeDirectory();
    Code:
       0: aload_0
       1: new           #204                // class org/apache/hadoop/fs/Path
       4: dup
       5: new           #28                 // class java/lang/StringBuilder
       8: dup
       9: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      12: ldc           #248                // String /user/
      14: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #249                // String user.name
      19: invokestatic  #250                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      22: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: invokespecial #251                // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      31: invokevirtual #252                // Method makeQualified:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      34: areturn

  public abstract void setWorkingDirectory(org.apache.hadoop.fs.Path);

  public abstract org.apache.hadoop.fs.Path getWorkingDirectory();

  protected org.apache.hadoop.fs.Path getInitialWorkingDirectory();
    Code:
       0: aconst_null
       1: areturn

  public boolean mkdirs(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #253                // Method org/apache/hadoop/fs/permission/FsPermission.getDirDefault:()Lorg/apache/hadoop/fs/permission/FsPermission;
       5: invokevirtual #157                // Method mkdirs:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z
       8: ireturn

  public abstract boolean mkdirs(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission) throws java.io.IOException;

  public void copyFromLocalFile(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: aload_1
       3: aload_2
       4: invokevirtual #254                // Method copyFromLocalFile:(ZLorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
       7: return

  public void moveFromLocalFile(org.apache.hadoop.fs.Path[], org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: iconst_1
       3: aload_1
       4: aload_2
       5: invokevirtual #255                // Method copyFromLocalFile:(ZZ[Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
       8: return

  public void moveFromLocalFile(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: aload_1
       3: aload_2
       4: invokevirtual #254                // Method copyFromLocalFile:(ZLorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
       7: return

  public void copyFromLocalFile(boolean, org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: iconst_1
       3: aload_2
       4: aload_3
       5: invokevirtual #256                // Method copyFromLocalFile:(ZZLorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
       8: return

  public void copyFromLocalFile(boolean, boolean, org.apache.hadoop.fs.Path[], org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #110                // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
       4: astore        5
       6: aload         5
       8: invokestatic  #257                // Method getLocal:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/LocalFileSystem;
      11: aload_3
      12: aload_0
      13: aload         4
      15: iload_1
      16: iload_2
      17: aload         5
      19: invokestatic  #258                // Method org/apache/hadoop/fs/FileUtil.copy:(Lorg/apache/hadoop/fs/FileSystem;[Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZZLorg/apache/hadoop/conf/Configuration;)Z
      22: pop
      23: return

  public void copyFromLocalFile(boolean, boolean, org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #110                // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
       4: astore        5
       6: aload         5
       8: invokestatic  #257                // Method getLocal:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/LocalFileSystem;
      11: aload_3
      12: aload_0
      13: aload         4
      15: iload_1
      16: iload_2
      17: aload         5
      19: invokestatic  #259                // Method org/apache/hadoop/fs/FileUtil.copy:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZZLorg/apache/hadoop/conf/Configuration;)Z
      22: pop
      23: return

  public void copyToLocalFile(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: aload_1
       3: aload_2
       4: invokevirtual #260                // Method copyToLocalFile:(ZLorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
       7: return

  public void moveToLocalFile(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: aload_1
       3: aload_2
       4: invokevirtual #260                // Method copyToLocalFile:(ZLorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
       7: return

  public void copyToLocalFile(boolean, org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: iconst_0
       5: invokevirtual #261                // Method copyToLocalFile:(ZLorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Z)V
       8: return

  public void copyToLocalFile(boolean, org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #110                // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
       4: astore        5
       6: aconst_null
       7: astore        6
       9: iload         4
      11: ifeq          27
      14: aload         5
      16: invokestatic  #257                // Method getLocal:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/LocalFileSystem;
      19: invokevirtual #262                // Method org/apache/hadoop/fs/LocalFileSystem.getRawFileSystem:()Lorg/apache/hadoop/fs/FileSystem;
      22: astore        6
      24: goto          34
      27: aload         5
      29: invokestatic  #257                // Method getLocal:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/LocalFileSystem;
      32: astore        6
      34: aload_0
      35: aload_2
      36: aload         6
      38: aload_3
      39: iload_1
      40: aload         5
      42: invokestatic  #263                // Method org/apache/hadoop/fs/FileUtil.copy:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZLorg/apache/hadoop/conf/Configuration;)Z
      45: pop
      46: return

  public org.apache.hadoop.fs.Path startLocalOutput(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_2
       1: areturn

  public void completeLocalOutput(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokevirtual #264                // Method moveFromLocalFile:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
       6: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #265                // Method processDeleteOnExit:()V
       4: getstatic     #6                  // Field CACHE:Lorg/apache/hadoop/fs/FileSystem$Cache;
       7: aload_0
       8: getfield      #4                  // Field key:Lorg/apache/hadoop/fs/FileSystem$Cache$Key;
      11: aload_0
      12: invokevirtual #266                // Method org/apache/hadoop/fs/FileSystem$Cache.remove:(Lorg/apache/hadoop/fs/FileSystem$Cache$Key;Lorg/apache/hadoop/fs/FileSystem;)V
      15: return

  public long getUsed() throws java.io.IOException;
    Code:
       0: new           #204                // class org/apache/hadoop/fs/Path
       3: dup
       4: ldc_w         #267                // String /
       7: invokespecial #251                // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      10: astore_1
      11: aload_0
      12: aload_1
      13: invokevirtual #268                // Method getUsed:(Lorg/apache/hadoop/fs/Path;)J
      16: lreturn

  public long getUsed(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #216                // Method getContentSummary:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/ContentSummary;
       5: invokevirtual #217                // Method org/apache/hadoop/fs/ContentSummary.getLength:()J
       8: lreturn

  public long getBlockSize(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #122                // Method getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
       5: invokevirtual #269                // Method org/apache/hadoop/fs/FileStatus.getBlockSize:()J
       8: lreturn

  public long getDefaultBlockSize();
    Code:
       0: aload_0
       1: invokevirtual #110                // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
       4: ldc_w         #270                // String fs.local.block.size
       7: ldc2_w        #271                // long 33554432l
      10: invokevirtual #273                // Method org/apache/hadoop/conf/Configuration.getLong:(Ljava/lang/String;J)J
      13: lreturn

  public long getDefaultBlockSize(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: invokevirtual #125                // Method getDefaultBlockSize:()J
       4: lreturn

  public short getDefaultReplication();
    Code:
       0: iconst_1
       1: ireturn

  public short getDefaultReplication(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: invokevirtual #129                // Method getDefaultReplication:()S
       4: ireturn

  public abstract org.apache.hadoop.fs.FileStatus getFileStatus(org.apache.hadoop.fs.Path) throws java.io.IOException;

  public void msync() throws java.io.IOException, java.lang.UnsupportedOperationException;
    Code:
       0: new           #45                 // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #28                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #227                // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
      18: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc_w         #274                // String  does not support method msync
      24: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokespecial #49                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      33: athrow

  public void access(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsAction) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #122                // Method getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
       5: aload_2
       6: invokestatic  #275                // Method checkAccessPermissions:(Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/fs/permission/FsAction;)V
       9: return

  static void checkAccessPermissions(org.apache.hadoop.fs.FileStatus, org.apache.hadoop.fs.permission.FsAction) throws org.apache.hadoop.security.AccessControlException, java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #276                // Method org/apache/hadoop/fs/FileStatus.getPermission:()Lorg/apache/hadoop/fs/permission/FsPermission;
       4: astore_2
       5: invokestatic  #277                // Method org/apache/hadoop/security/UserGroupInformation.getCurrentUser:()Lorg/apache/hadoop/security/UserGroupInformation;
       8: astore_3
       9: aload_3
      10: invokevirtual #278                // Method org/apache/hadoop/security/UserGroupInformation.getShortUserName:()Ljava/lang/String;
      13: astore        4
      15: aload         4
      17: aload_0
      18: invokevirtual #279                // Method org/apache/hadoop/fs/FileStatus.getOwner:()Ljava/lang/String;
      21: invokevirtual #71                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      24: ifeq          39
      27: aload_2
      28: invokevirtual #280                // Method org/apache/hadoop/fs/permission/FsPermission.getUserAction:()Lorg/apache/hadoop/fs/permission/FsAction;
      31: aload_1
      32: invokevirtual #281                // Method org/apache/hadoop/fs/permission/FsAction.implies:(Lorg/apache/hadoop/fs/permission/FsAction;)Z
      35: ifeq          79
      38: return
      39: aload_3
      40: invokevirtual #282                // Method org/apache/hadoop/security/UserGroupInformation.getGroups:()Ljava/util/List;
      43: aload_0
      44: invokevirtual #283                // Method org/apache/hadoop/fs/FileStatus.getGroup:()Ljava/lang/String;
      47: invokeinterface #284,  2          // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      52: ifeq          67
      55: aload_2
      56: invokevirtual #285                // Method org/apache/hadoop/fs/permission/FsPermission.getGroupAction:()Lorg/apache/hadoop/fs/permission/FsAction;
      59: aload_1
      60: invokevirtual #281                // Method org/apache/hadoop/fs/permission/FsAction.implies:(Lorg/apache/hadoop/fs/permission/FsAction;)Z
      63: ifeq          79
      66: return
      67: aload_2
      68: invokevirtual #286                // Method org/apache/hadoop/fs/permission/FsPermission.getOtherAction:()Lorg/apache/hadoop/fs/permission/FsAction;
      71: aload_1
      72: invokevirtual #281                // Method org/apache/hadoop/fs/permission/FsAction.implies:(Lorg/apache/hadoop/fs/permission/FsAction;)Z
      75: ifeq          79
      78: return
      79: new           #287                // class org/apache/hadoop/security/AccessControlException
      82: dup
      83: ldc_w         #288                // String Permission denied: user=%s, path=\"%s\":%s:%s:%s%s
      86: bipush        6
      88: anewarray     #84                 // class java/lang/Object
      91: dup
      92: iconst_0
      93: aload         4
      95: aastore
      96: dup
      97: iconst_1
      98: aload_0
      99: invokevirtual #135                // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
     102: aastore
     103: dup
     104: iconst_2
     105: aload_0
     106: invokevirtual #279                // Method org/apache/hadoop/fs/FileStatus.getOwner:()Ljava/lang/String;
     109: aastore
     110: dup
     111: iconst_3
     112: aload_0
     113: invokevirtual #283                // Method org/apache/hadoop/fs/FileStatus.getGroup:()Ljava/lang/String;
     116: aastore
     117: dup
     118: iconst_4
     119: aload_0
     120: invokevirtual #162                // Method org/apache/hadoop/fs/FileStatus.isDirectory:()Z
     123: ifeq          132
     126: ldc_w         #289                // String d
     129: goto          135
     132: ldc_w         #290                // String -
     135: aastore
     136: dup
     137: iconst_5
     138: aload_2
     139: aastore
     140: invokestatic  #85                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     143: invokespecial #291                // Method org/apache/hadoop/security/AccessControlException."<init>":(Ljava/lang/String;)V
     146: athrow

  protected org.apache.hadoop.fs.Path fixRelativePart(org.apache.hadoop.fs.Path);
    Code:
       0: aload_1
       1: invokevirtual #292                // Method org/apache/hadoop/fs/Path.isUriPathAbsolute:()Z
       4: ifeq          9
       7: aload_1
       8: areturn
       9: new           #204                // class org/apache/hadoop/fs/Path
      12: dup
      13: aload_0
      14: invokevirtual #97                 // Method getWorkingDirectory:()Lorg/apache/hadoop/fs/Path;
      17: aload_1
      18: invokespecial #293                // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
      21: areturn

  public void createSymlink(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path, boolean) throws org.apache.hadoop.security.AccessControlException, org.apache.hadoop.fs.FileAlreadyExistsException, java.io.FileNotFoundException, org.apache.hadoop.fs.ParentNotDirectoryException, org.apache.hadoop.fs.UnsupportedFileSystemException, java.io.IOException;
    Code:
       0: new           #45                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc_w         #294                // String Filesystem does not support symlinks!
       7: invokespecial #49                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      10: athrow

  public org.apache.hadoop.fs.FileStatus getFileLinkStatus(org.apache.hadoop.fs.Path) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnsupportedFileSystemException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #122                // Method getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
       5: areturn

  public boolean supportsSymlinks();
    Code:
       0: iconst_0
       1: ireturn

  public org.apache.hadoop.fs.Path getLinkTarget(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #45                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc_w         #294                // String Filesystem does not support symlinks!
       7: invokespecial #49                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      10: athrow

  protected org.apache.hadoop.fs.Path resolveLink(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #45                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc_w         #294                // String Filesystem does not support symlinks!
       7: invokespecial #49                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      10: athrow

  public org.apache.hadoop.fs.FileChecksum getFileChecksum(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc2_w        #296                // long 9223372036854775807l
       5: invokevirtual #298                // Method getFileChecksum:(Lorg/apache/hadoop/fs/Path;J)Lorg/apache/hadoop/fs/FileChecksum;
       8: areturn

  public org.apache.hadoop.fs.FileChecksum getFileChecksum(org.apache.hadoop.fs.Path, long) throws java.io.IOException;
    Code:
       0: aconst_null
       1: areturn

  public void setVerifyChecksum(boolean);
    Code:
       0: return

  public void setWriteChecksum(boolean);
    Code:
       0: return

  public org.apache.hadoop.fs.FsStatus getStatus() throws java.io.IOException;
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #299                // Method getStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FsStatus;
       5: areturn

  public org.apache.hadoop.fs.FsStatus getStatus(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #300                // class org/apache/hadoop/fs/FsStatus
       3: dup
       4: ldc2_w        #296                // long 9223372036854775807l
       7: lconst_0
       8: ldc2_w        #296                // long 9223372036854775807l
      11: invokespecial #301                // Method org/apache/hadoop/fs/FsStatus."<init>":(JJJ)V
      14: areturn

  public void setPermission(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission) throws java.io.IOException;
    Code:
       0: return

  public void setOwner(org.apache.hadoop.fs.Path, java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: return

  public void setTimes(org.apache.hadoop.fs.Path, long, long) throws java.io.IOException;
    Code:
       0: return

  public final org.apache.hadoop.fs.Path createSnapshot(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #302                // Method createSnapshot:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
       6: areturn

  public org.apache.hadoop.fs.Path createSnapshot(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: new           #45                 // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #28                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #47                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      18: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc_w         #303                // String  doesn\'t support createSnapshot
      24: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokespecial #49                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      33: athrow

  public void renameSnapshot(org.apache.hadoop.fs.Path, java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: new           #45                 // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #28                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #47                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      18: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc_w         #304                // String  doesn\'t support renameSnapshot
      24: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokespecial #49                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      33: athrow

  public void deleteSnapshot(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: new           #45                 // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #28                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #47                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      18: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc_w         #305                // String  doesn\'t support deleteSnapshot
      24: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokespecial #49                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      33: athrow

  public void modifyAclEntries(org.apache.hadoop.fs.Path, java.util.List<org.apache.hadoop.fs.permission.AclEntry>) throws java.io.IOException;
    Code:
       0: new           #45                 // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #28                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #47                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      18: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc_w         #306                // String  doesn\'t support modifyAclEntries
      24: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokespecial #49                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      33: athrow

  public void removeAclEntries(org.apache.hadoop.fs.Path, java.util.List<org.apache.hadoop.fs.permission.AclEntry>) throws java.io.IOException;
    Code:
       0: new           #45                 // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #28                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #47                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      18: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc_w         #307                // String  doesn\'t support removeAclEntries
      24: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokespecial #49                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      33: athrow

  public void removeDefaultAcl(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #45                 // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #28                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #47                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      18: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc_w         #308                // String  doesn\'t support removeDefaultAcl
      24: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokespecial #49                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      33: athrow

  public void removeAcl(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #45                 // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #28                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #47                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      18: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc_w         #309                // String  doesn\'t support removeAcl
      24: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokespecial #49                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      33: athrow

  public void setAcl(org.apache.hadoop.fs.Path, java.util.List<org.apache.hadoop.fs.permission.AclEntry>) throws java.io.IOException;
    Code:
       0: new           #45                 // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #28                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #47                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      18: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc_w         #310                // String  doesn\'t support setAcl
      24: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokespecial #49                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      33: athrow

  public org.apache.hadoop.fs.permission.AclStatus getAclStatus(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #45                 // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #28                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #47                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      18: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc_w         #311                // String  doesn\'t support getAclStatus
      24: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokespecial #49                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      33: athrow

  public void setXAttr(org.apache.hadoop.fs.Path, java.lang.String, byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: getstatic     #312                // Field org/apache/hadoop/fs/XAttrSetFlag.CREATE:Lorg/apache/hadoop/fs/XAttrSetFlag;
       7: getstatic     #313                // Field org/apache/hadoop/fs/XAttrSetFlag.REPLACE:Lorg/apache/hadoop/fs/XAttrSetFlag;
      10: invokestatic  #172                // Method java/util/EnumSet.of:(Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/util/EnumSet;
      13: invokevirtual #314                // Method setXAttr:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;[BLjava/util/EnumSet;)V
      16: return

  public void setXAttr(org.apache.hadoop.fs.Path, java.lang.String, byte[], java.util.EnumSet<org.apache.hadoop.fs.XAttrSetFlag>) throws java.io.IOException;
    Code:
       0: new           #45                 // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #28                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #47                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      18: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc_w         #315                // String  doesn\'t support setXAttr
      24: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokespecial #49                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      33: athrow

  public byte[] getXAttr(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: new           #45                 // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #28                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #47                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      18: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc_w         #316                // String  doesn\'t support getXAttr
      24: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokespecial #49                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      33: athrow

  public java.util.Map<java.lang.String, byte[]> getXAttrs(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #45                 // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #28                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #47                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      18: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc_w         #317                // String  doesn\'t support getXAttrs
      24: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokespecial #49                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      33: athrow

  public java.util.Map<java.lang.String, byte[]> getXAttrs(org.apache.hadoop.fs.Path, java.util.List<java.lang.String>) throws java.io.IOException;
    Code:
       0: new           #45                 // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #28                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #47                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      18: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc_w         #317                // String  doesn\'t support getXAttrs
      24: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokespecial #49                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      33: athrow

  public java.util.List<java.lang.String> listXAttrs(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #45                 // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #28                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #47                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      18: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc_w         #318                // String  doesn\'t support listXAttrs
      24: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokespecial #49                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      33: athrow

  public void removeXAttr(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: new           #45                 // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #28                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #47                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      18: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc_w         #319                // String  doesn\'t support removeXAttr
      24: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokespecial #49                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      33: athrow

  public void satisfyStoragePolicy(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #45                 // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #28                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #47                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      18: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc_w         #320                // String  doesn\'t support setStoragePolicy
      24: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokespecial #49                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      33: athrow

  public void setStoragePolicy(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: new           #45                 // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #28                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #47                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      18: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc_w         #320                // String  doesn\'t support setStoragePolicy
      24: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokespecial #49                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      33: athrow

  public void unsetStoragePolicy(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #45                 // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #28                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #47                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      18: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc_w         #321                // String  doesn\'t support unsetStoragePolicy
      24: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokespecial #49                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      33: athrow

  public org.apache.hadoop.fs.BlockStoragePolicySpi getStoragePolicy(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #45                 // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #28                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #47                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      18: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc_w         #322                // String  doesn\'t support getStoragePolicy
      24: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokespecial #49                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      33: athrow

  public java.util.Collection<? extends org.apache.hadoop.fs.BlockStoragePolicySpi> getAllStoragePolicies() throws java.io.IOException;
    Code:
       0: new           #45                 // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #28                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #47                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      18: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc_w         #323                // String  doesn\'t support getAllStoragePolicies
      24: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokespecial #49                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      33: athrow

  public org.apache.hadoop.fs.Path getTrashRoot(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: new           #204                // class org/apache/hadoop/fs/Path
       4: dup
       5: aload_0
       6: invokevirtual #324                // Method getHomeDirectory:()Lorg/apache/hadoop/fs/Path;
       9: invokevirtual #67                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
      12: invokevirtual #57                 // Method java/net/URI.getPath:()Ljava/lang/String;
      15: ldc_w         #325                // String .Trash
      18: invokespecial #326                // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      21: invokevirtual #252                // Method makeQualified:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      24: areturn

  public java.util.Collection<org.apache.hadoop.fs.FileStatus> getTrashRoots(boolean);
    Code:
       0: new           #204                // class org/apache/hadoop/fs/Path
       3: dup
       4: aload_0
       5: invokevirtual #324                // Method getHomeDirectory:()Lorg/apache/hadoop/fs/Path;
       8: invokevirtual #67                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
      11: invokevirtual #57                 // Method java/net/URI.getPath:()Ljava/lang/String;
      14: invokespecial #251                // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      17: astore_2
      18: new           #229                // class java/util/ArrayList
      21: dup
      22: invokespecial #230                // Method java/util/ArrayList."<init>":()V
      25: astore_3
      26: iload_1
      27: ifne          68
      30: new           #204                // class org/apache/hadoop/fs/Path
      33: dup
      34: aload_2
      35: ldc_w         #325                // String .Trash
      38: invokespecial #327                // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      41: astore        4
      43: aload_0
      44: aload         4
      46: invokevirtual #153                // Method exists:(Lorg/apache/hadoop/fs/Path;)Z
      49: ifeq          65
      52: aload_3
      53: aload_0
      54: aload         4
      56: invokevirtual #122                // Method getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      59: invokeinterface #328,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      64: pop
      65: goto          165
      68: aload_2
      69: invokevirtual #158                // Method org/apache/hadoop/fs/Path.getParent:()Lorg/apache/hadoop/fs/Path;
      72: astore        4
      74: aload_0
      75: aload         4
      77: invokevirtual #153                // Method exists:(Lorg/apache/hadoop/fs/Path;)Z
      80: ifeq          165
      83: aload_0
      84: aload         4
      86: invokevirtual #190                // Method listStatus:(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
      89: astore        5
      91: aload         5
      93: astore        6
      95: aload         6
      97: arraylength
      98: istore        7
     100: iconst_0
     101: istore        8
     103: iload         8
     105: iload         7
     107: if_icmpge     165
     110: aload         6
     112: iload         8
     114: aaload
     115: astore        9
     117: new           #204                // class org/apache/hadoop/fs/Path
     120: dup
     121: aload         9
     123: invokevirtual #135                // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
     126: ldc_w         #325                // String .Trash
     129: invokespecial #327                // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
     132: astore        10
     134: aload_0
     135: aload         10
     137: invokevirtual #153                // Method exists:(Lorg/apache/hadoop/fs/Path;)Z
     140: ifeq          159
     143: aload         9
     145: aload         10
     147: invokevirtual #329                // Method org/apache/hadoop/fs/FileStatus.setPath:(Lorg/apache/hadoop/fs/Path;)V
     150: aload_3
     151: aload         9
     153: invokeinterface #328,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     158: pop
     159: iinc          8, 1
     162: goto          103
     165: goto          183
     168: astore        4
     170: getstatic     #3                  // Field LOGGER:Lorg/slf4j/Logger;
     173: ldc_w         #330                // String Cannot get all trash roots
     176: aload         4
     178: invokeinterface #331,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     183: aload_3
     184: areturn
    Exception table:
       from    to  target type
          26   165   168   Class java/io/IOException

  public boolean hasPathCapability(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #252                // Method makeQualified:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: aload_2
       6: invokestatic  #332                // Method org/apache/hadoop/fs/impl/PathCapabilitiesSupport.validatePathCapabilityArgs:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Ljava/lang/String;
       9: astore_3
      10: iconst_m1
      11: istore        4
      13: aload_3
      14: invokevirtual #333                // Method java/lang/String.hashCode:()I
      17: lookupswitch  { // 1
           -1881327609: 36
               default: 49
          }
      36: aload_3
      37: ldc_w         #334                // String fs.capability.paths.symlinks
      40: invokevirtual #71                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      43: ifeq          49
      46: iconst_0
      47: istore        4
      49: iload         4
      51: lookupswitch  { // 1
                     0: 68
               default: 87
          }
      68: aload_0
      69: invokevirtual #335                // Method supportsSymlinks:()Z
      72: ifeq          85
      75: invokestatic  #336                // Method areSymlinksEnabled:()Z
      78: ifeq          85
      81: iconst_1
      82: goto          86
      85: iconst_0
      86: ireturn
      87: iconst_0
      88: ireturn

  private static void loadFileSystems();
    Code:
       0: getstatic     #3                  // Field LOGGER:Lorg/slf4j/Logger;
       3: ldc_w         #337                // String Loading filesystems
       6: invokeinterface #338,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      11: ldc           #18                 // class org/apache/hadoop/fs/FileSystem
      13: dup
      14: astore_0
      15: monitorenter
      16: getstatic     #339                // Field FILE_SYSTEMS_LOADED:Z
      19: ifne          246
      22: ldc           #18                 // class org/apache/hadoop/fs/FileSystem
      24: invokestatic  #340                // Method java/util/ServiceLoader.load:(Ljava/lang/Class;)Ljava/util/ServiceLoader;
      27: astore_1
      28: aload_1
      29: invokevirtual #341                // Method java/util/ServiceLoader.iterator:()Ljava/util/Iterator;
      32: astore_2
      33: aload_2
      34: invokeinterface #202,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      39: ifeq          242
      42: aload_2
      43: invokeinterface #203,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      48: checkcast     #18                 // class org/apache/hadoop/fs/FileSystem
      51: astore_3
      52: getstatic     #342                // Field SERVICE_FILE_SYSTEMS:Ljava/util/Map;
      55: aload_3
      56: invokevirtual #343                // Method getScheme:()Ljava/lang/String;
      59: aload_3
      60: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      63: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      68: pop
      69: getstatic     #3                  // Field LOGGER:Lorg/slf4j/Logger;
      72: invokeinterface #344,  1          // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      77: ifeq          119
      80: getstatic     #3                  // Field LOGGER:Lorg/slf4j/Logger;
      83: ldc_w         #345                // String {}:// = {} from {}
      86: iconst_3
      87: anewarray     #84                 // class java/lang/Object
      90: dup
      91: iconst_0
      92: aload_3
      93: invokevirtual #343                // Method getScheme:()Ljava/lang/String;
      96: aastore
      97: dup
      98: iconst_1
      99: aload_3
     100: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     103: aastore
     104: dup
     105: iconst_2
     106: aload_3
     107: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     110: invokestatic  #346                // Method org/apache/hadoop/util/ClassUtil.findContainingJar:(Ljava/lang/Class;)Ljava/lang/String;
     113: aastore
     114: invokeinterface #347,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     119: goto          157
     122: astore        4
     124: getstatic     #3                  // Field LOGGER:Lorg/slf4j/Logger;
     127: ldc_w         #349                // String Cannot load: {} from {}
     130: aload_3
     131: aload_3
     132: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     135: invokestatic  #346                // Method org/apache/hadoop/util/ClassUtil.findContainingJar:(Ljava/lang/Class;)Ljava/lang/String;
     138: invokeinterface #350,  4          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     143: getstatic     #3                  // Field LOGGER:Lorg/slf4j/Logger;
     146: ldc_w         #351                // String Full exception loading: {}
     149: aload_3
     150: aload         4
     152: invokeinterface #352,  4          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     157: goto          33
     160: astore        4
     162: getstatic     #354                // Field LOG:Lorg/apache/commons/logging/Log;
     165: new           #28                 // class java/lang/StringBuilder
     168: dup
     169: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
     172: ldc_w         #355                // String Cannot load filesystem:
     175: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     178: aload         4
     180: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     183: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     186: invokeinterface #356,  2          // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
     191: aload         4
     193: invokevirtual #357                // Method java/util/ServiceConfigurationError.getCause:()Ljava/lang/Throwable;
     196: astore        5
     198: aload         5
     200: ifnull        226
     203: getstatic     #354                // Field LOG:Lorg/apache/commons/logging/Log;
     206: aload         5
     208: invokevirtual #358                // Method java/lang/Throwable.toString:()Ljava/lang/String;
     211: invokeinterface #356,  2          // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
     216: aload         5
     218: invokevirtual #359                // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
     221: astore        5
     223: goto          198
     226: getstatic     #354                // Field LOG:Lorg/apache/commons/logging/Log;
     229: ldc_w         #360                // String Stack Trace
     232: aload         4
     234: invokeinterface #361,  3          // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     239: goto          33
     242: iconst_1
     243: putstatic     #339                // Field FILE_SYSTEMS_LOADED:Z
     246: aload_0
     247: monitorexit
     248: goto          258
     251: astore        6
     253: aload_0
     254: monitorexit
     255: aload         6
     257: athrow
     258: return
    Exception table:
       from    to  target type
          52   119   122   Class java/lang/Exception
          42   157   160   Class java/util/ServiceConfigurationError
          16   248   251   any
         251   255   251   any

  public static java.lang.Class<? extends org.apache.hadoop.fs.FileSystem> getFileSystemClass(java.lang.String, org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: getstatic     #339                // Field FILE_SYSTEMS_LOADED:Z
       3: ifne          9
       6: invokestatic  #362                // Method loadFileSystems:()V
       9: getstatic     #3                  // Field LOGGER:Lorg/slf4j/Logger;
      12: ldc_w         #363                // String Looking for FS supporting {}
      15: aload_0
      16: invokeinterface #87,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      21: aconst_null
      22: astore_2
      23: aload_1
      24: ifnull        76
      27: new           #28                 // class java/lang/StringBuilder
      30: dup
      31: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      34: ldc_w         #364                // String fs.
      37: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_0
      41: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: ldc_w         #365                // String .impl
      47: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: astore_3
      54: getstatic     #3                  // Field LOGGER:Lorg/slf4j/Logger;
      57: ldc_w         #366                // String looking for configuration option {}
      60: aload_3
      61: invokeinterface #87,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      66: aload_1
      67: aload_3
      68: aconst_null
      69: invokevirtual #367                // Method org/apache/hadoop/conf/Configuration.getClass:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;
      72: astore_2
      73: goto          88
      76: getstatic     #3                  // Field LOGGER:Lorg/slf4j/Logger;
      79: ldc_w         #368                // String No configuration: skipping check for fs.{}.impl
      82: aload_0
      83: invokeinterface #87,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      88: aload_2
      89: ifnonnull     119
      92: getstatic     #3                  // Field LOGGER:Lorg/slf4j/Logger;
      95: ldc_w         #369                // String Looking in service filesystems for implementation class
      98: invokeinterface #338,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     103: getstatic     #342                // Field SERVICE_FILE_SYSTEMS:Ljava/util/Map;
     106: aload_0
     107: invokeinterface #370,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     112: checkcast     #371                // class java/lang/Class
     115: astore_2
     116: goto          131
     119: getstatic     #3                  // Field LOGGER:Lorg/slf4j/Logger;
     122: ldc_w         #372                // String Filesystem {} defined in configuration option
     125: aload_0
     126: invokeinterface #87,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     131: aload_2
     132: ifnonnull     168
     135: new           #373                // class org/apache/hadoop/fs/UnsupportedFileSystemException
     138: dup
     139: new           #28                 // class java/lang/StringBuilder
     142: dup
     143: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
     146: ldc_w         #374                // String No FileSystem for scheme \"
     149: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: aload_0
     153: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     156: ldc           #75                 // String \"
     158: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     161: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     164: invokespecial #375                // Method org/apache/hadoop/fs/UnsupportedFileSystemException."<init>":(Ljava/lang/String;)V
     167: athrow
     168: getstatic     #3                  // Field LOGGER:Lorg/slf4j/Logger;
     171: ldc_w         #376                // String FS for {} is {}
     174: aload_0
     175: aload_2
     176: invokeinterface #377,  4          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     181: aload_2
     182: areturn

  private static org.apache.hadoop.fs.FileSystem createFileSystem(java.net.URI, org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #378                // Method org/apache/hadoop/fs/FsTracer.get:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/htrace/core/Tracer;
       4: astore_2
       5: aload_2
       6: ldc_w         #379                // String FileSystem#createFileSystem
       9: invokevirtual #380                // Method org/apache/htrace/core/Tracer.newScope:(Ljava/lang/String;)Lorg/apache/htrace/core/TraceScope;
      12: astore_3
      13: aconst_null
      14: astore        4
      16: aload_3
      17: ldc_w         #381                // String scheme
      20: aload_0
      21: invokevirtual #26                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      24: invokevirtual #382                // Method org/apache/htrace/core/TraceScope.addKVAnnotation:(Ljava/lang/String;Ljava/lang/String;)V
      27: aload_0
      28: invokevirtual #26                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      31: aload_1
      32: invokestatic  #383                // Method getFileSystemClass:(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;
      35: astore        5
      37: aload         5
      39: aload_1
      40: invokestatic  #384                // Method org/apache/hadoop/util/ReflectionUtils.newInstance:(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;
      43: checkcast     #18                 // class org/apache/hadoop/fs/FileSystem
      46: astore        6
      48: aload         6
      50: aload_0
      51: aload_1
      52: invokevirtual #385                // Method initialize:(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V
      55: aload         6
      57: astore        7
      59: aload_3
      60: ifnull        91
      63: aload         4
      65: ifnull        87
      68: aload_3
      69: invokevirtual #386                // Method org/apache/htrace/core/TraceScope.close:()V
      72: goto          91
      75: astore        8
      77: aload         4
      79: aload         8
      81: invokevirtual #388                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      84: goto          91
      87: aload_3
      88: invokevirtual #386                // Method org/apache/htrace/core/TraceScope.close:()V
      91: aload         7
      93: areturn
      94: astore        5
      96: aload         5
      98: astore        4
     100: aload         5
     102: athrow
     103: astore        9
     105: aload_3
     106: ifnull        137
     109: aload         4
     111: ifnull        133
     114: aload_3
     115: invokevirtual #386                // Method org/apache/htrace/core/TraceScope.close:()V
     118: goto          137
     121: astore        10
     123: aload         4
     125: aload         10
     127: invokevirtual #388                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     130: goto          137
     133: aload_3
     134: invokevirtual #386                // Method org/apache/htrace/core/TraceScope.close:()V
     137: aload         9
     139: athrow
    Exception table:
       from    to  target type
          68    72    75   Class java/lang/Throwable
          16    59    94   Class java/lang/Throwable
          16    59   103   any
         114   118   121   Class java/lang/Throwable
          94   105   103   any

  public static synchronized java.util.Map<java.lang.String, org.apache.hadoop.fs.FileSystem$Statistics> getStatistics();
    Code:
       0: new           #389                // class java/util/HashMap
       3: dup
       4: invokespecial #390                // Method java/util/HashMap."<init>":()V
       7: astore_0
       8: getstatic     #391                // Field statisticsTable:Ljava/util/Map;
      11: invokeinterface #392,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      16: invokeinterface #393,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      21: astore_1
      22: aload_1
      23: invokeinterface #202,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          56
      31: aload_1
      32: invokeinterface #203,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #394                // class org/apache/hadoop/fs/FileSystem$Statistics
      40: astore_2
      41: aload_0
      42: aload_2
      43: invokevirtual #395                // Method org/apache/hadoop/fs/FileSystem$Statistics.getScheme:()Ljava/lang/String;
      46: aload_2
      47: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      52: pop
      53: goto          22
      56: aload_0
      57: areturn

  public static synchronized java.util.List<org.apache.hadoop.fs.FileSystem$Statistics> getAllStatistics();
    Code:
       0: new           #229                // class java/util/ArrayList
       3: dup
       4: getstatic     #391                // Field statisticsTable:Ljava/util/Map;
       7: invokeinterface #392,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      12: invokespecial #396                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      15: areturn

  public static synchronized org.apache.hadoop.fs.FileSystem$Statistics getStatistics(java.lang.String, java.lang.Class<? extends org.apache.hadoop.fs.FileSystem>);
    Code:
       0: aload_0
       1: ifnull        8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc_w         #397                // String No statistics is allowed for a file system with null scheme!
      12: invokestatic  #107                // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      15: getstatic     #391                // Field statisticsTable:Ljava/util/Map;
      18: aload_1
      19: invokeinterface #370,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #394                // class org/apache/hadoop/fs/FileSystem$Statistics
      27: astore_2
      28: aload_2
      29: ifnonnull     71
      32: new           #394                // class org/apache/hadoop/fs/FileSystem$Statistics
      35: dup
      36: aload_0
      37: invokespecial #398                // Method org/apache/hadoop/fs/FileSystem$Statistics."<init>":(Ljava/lang/String;)V
      40: astore_3
      41: getstatic     #391                // Field statisticsTable:Ljava/util/Map;
      44: aload_1
      45: aload_3
      46: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      51: pop
      52: aload_3
      53: astore_2
      54: getstatic     #399                // Field org/apache/hadoop/fs/GlobalStorageStatistics.INSTANCE:Lorg/apache/hadoop/fs/GlobalStorageStatistics;
      57: aload_0
      58: new           #400                // class org/apache/hadoop/fs/FileSystem$6
      61: dup
      62: aload_0
      63: aload_3
      64: invokespecial #401                // Method org/apache/hadoop/fs/FileSystem$6."<init>":(Ljava/lang/String;Lorg/apache/hadoop/fs/FileSystem$Statistics;)V
      67: invokevirtual #402                // Method org/apache/hadoop/fs/GlobalStorageStatistics.put:(Ljava/lang/String;Lorg/apache/hadoop/fs/GlobalStorageStatistics$StorageStatisticsProvider;)Lorg/apache/hadoop/fs/StorageStatistics;
      70: pop
      71: aload_2
      72: areturn

  public static synchronized void clearStatistics();
    Code:
       0: getstatic     #399                // Field org/apache/hadoop/fs/GlobalStorageStatistics.INSTANCE:Lorg/apache/hadoop/fs/GlobalStorageStatistics;
       3: invokevirtual #403                // Method org/apache/hadoop/fs/GlobalStorageStatistics.reset:()V
       6: return

  public static synchronized void printStatistics() throws java.io.IOException;
    Code:
       0: getstatic     #391                // Field statisticsTable:Ljava/util/Map;
       3: invokeinterface #404,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       8: invokeinterface #201,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      13: astore_0
      14: aload_0
      15: invokeinterface #202,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          88
      23: aload_0
      24: invokeinterface #203,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #405                // class java/util/Map$Entry
      32: astore_1
      33: getstatic     #406                // Field java/lang/System.out:Ljava/io/PrintStream;
      36: new           #28                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      43: ldc_w         #407                // String   FileSystem
      46: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: aload_1
      50: invokeinterface #408,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      55: checkcast     #371                // class java/lang/Class
      58: invokevirtual #409                // Method java/lang/Class.getName:()Ljava/lang/String;
      61: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: ldc_w         #410                // String :
      67: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: aload_1
      71: invokeinterface #411,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      76: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      79: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      82: invokevirtual #412                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      85: goto          14
      88: return

  public static boolean areSymlinksEnabled();
    Code:
       0: getstatic     #413                // Field symlinksEnabled:Z
       3: ireturn

  public static void enableSymlinks();
    Code:
       0: iconst_1
       1: putstatic     #413                // Field symlinksEnabled:Z
       4: return

  public org.apache.hadoop.fs.StorageStatistics getStorageStatistics();
    Code:
       0: new           #414                // class org/apache/hadoop/fs/EmptyStorageStatistics
       3: dup
       4: aload_0
       5: invokevirtual #50                 // Method getUri:()Ljava/net/URI;
       8: invokevirtual #35                 // Method java/net/URI.toString:()Ljava/lang/String;
      11: invokespecial #415                // Method org/apache/hadoop/fs/EmptyStorageStatistics."<init>":(Ljava/lang/String;)V
      14: areturn

  public static org.apache.hadoop.fs.GlobalStorageStatistics getGlobalStorageStatistics();
    Code:
       0: getstatic     #399                // Field org/apache/hadoop/fs/GlobalStorageStatistics.INSTANCE:Lorg/apache/hadoop/fs/GlobalStorageStatistics;
       3: areturn

  public org.apache.hadoop.fs.FSDataOutputStreamBuilder createFile(org.apache.hadoop.fs.Path);
    Code:
       0: new           #416                // class org/apache/hadoop/fs/FileSystem$FileSystemDataOutputStreamBuilder
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #417                // Method org/apache/hadoop/fs/FileSystem$FileSystemDataOutputStreamBuilder."<init>":(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)V
       9: invokevirtual #418                // Method org/apache/hadoop/fs/FileSystem$FileSystemDataOutputStreamBuilder.create:()Lorg/apache/hadoop/fs/FSDataOutputStreamBuilder;
      12: checkcast     #416                // class org/apache/hadoop/fs/FileSystem$FileSystemDataOutputStreamBuilder
      15: iconst_1
      16: invokevirtual #419                // Method org/apache/hadoop/fs/FileSystem$FileSystemDataOutputStreamBuilder.overwrite:(Z)Lorg/apache/hadoop/fs/FSDataOutputStreamBuilder;
      19: areturn

  private void methodNotSupported();
    Code:
       0: invokestatic  #420                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: invokevirtual #421                // Method java/lang/Thread.getStackTrace:()[Ljava/lang/StackTraceElement;
       6: iconst_2
       7: aaload
       8: invokevirtual #422                // Method java/lang/StackTraceElement.getMethodName:()Ljava/lang/String;
      11: astore_1
      12: new           #45                 // class java/lang/UnsupportedOperationException
      15: dup
      16: new           #28                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      23: aload_0
      24: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      27: invokevirtual #227                // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
      30: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: ldc_w         #423                // String  does not support method
      36: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_1
      40: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokespecial #49                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      49: athrow

  public org.apache.hadoop.fs.FSDataOutputStreamBuilder appendFile(org.apache.hadoop.fs.Path);
    Code:
       0: new           #416                // class org/apache/hadoop/fs/FileSystem$FileSystemDataOutputStreamBuilder
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #417                // Method org/apache/hadoop/fs/FileSystem$FileSystemDataOutputStreamBuilder."<init>":(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)V
       9: invokevirtual #424                // Method org/apache/hadoop/fs/FileSystem$FileSystemDataOutputStreamBuilder.append:()Lorg/apache/hadoop/fs/FSDataOutputStreamBuilder;
      12: areturn

  static org.apache.hadoop.fs.FileSystem access$200(java.net.URI, org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #5                  // Method createFileSystem:(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
       5: areturn

  static org.apache.hadoop.fs.FileSystem$Cache$Key access$302(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.FileSystem$Cache$Key);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #4                  // Field key:Lorg/apache/hadoop/fs/FileSystem$Cache$Key;
       6: areturn

  static org.slf4j.Logger access$400();
    Code:
       0: getstatic     #3                  // Field LOGGER:Lorg/slf4j/Logger;
       3: areturn

  static {};
    Code:
       0: ldc           #18                 // class org/apache/hadoop/fs/FileSystem
       2: invokestatic  #425                // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #354                // Field LOG:Lorg/apache/commons/logging/Log;
       8: ldc           #18                 // class org/apache/hadoop/fs/FileSystem
      10: invokestatic  #426                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      13: putstatic     #3                  // Field LOGGER:Lorg/slf4j/Logger;
      16: new           #427                // class org/apache/hadoop/fs/FileSystem$Cache
      19: dup
      20: invokespecial #428                // Method org/apache/hadoop/fs/FileSystem$Cache."<init>":()V
      23: putstatic     #6                  // Field CACHE:Lorg/apache/hadoop/fs/FileSystem$Cache;
      26: new           #429                // class java/util/IdentityHashMap
      29: dup
      30: invokespecial #430                // Method java/util/IdentityHashMap."<init>":()V
      33: putstatic     #391                // Field statisticsTable:Ljava/util/Map;
      36: new           #431                // class org/apache/hadoop/fs/FileSystem$3
      39: dup
      40: invokespecial #432                // Method org/apache/hadoop/fs/FileSystem$3."<init>":()V
      43: putstatic     #236                // Field DEFAULT_FILTER:Lorg/apache/hadoop/fs/PathFilter;
      46: iconst_0
      47: putstatic     #339                // Field FILE_SYSTEMS_LOADED:Z
      50: new           #389                // class java/util/HashMap
      53: dup
      54: invokespecial #390                // Method java/util/HashMap."<init>":()V
      57: putstatic     #342                // Field SERVICE_FILE_SYSTEMS:Ljava/util/Map;
      60: iconst_0
      61: putstatic     #413                // Field symlinksEnabled:Z
      64: return
}
