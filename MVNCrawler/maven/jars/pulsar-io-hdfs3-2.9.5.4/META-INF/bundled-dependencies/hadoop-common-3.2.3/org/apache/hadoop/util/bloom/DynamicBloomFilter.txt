Compiled from "DynamicBloomFilter.java"
public class org.apache.hadoop.util.bloom.DynamicBloomFilter extends org.apache.hadoop.util.bloom.Filter {
  private int nr;

  private int currentNbRecord;

  private org.apache.hadoop.util.bloom.BloomFilter[] matrix;

  public org.apache.hadoop.util.bloom.DynamicBloomFilter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/util/bloom/Filter."<init>":()V
       4: return

  public org.apache.hadoop.util.bloom.DynamicBloomFilter(int, int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: invokespecial #2                  // Method org/apache/hadoop/util/bloom/Filter."<init>":(III)V
       7: aload_0
       8: iload         4
      10: putfield      #3                  // Field nr:I
      13: aload_0
      14: iconst_0
      15: putfield      #4                  // Field currentNbRecord:I
      18: aload_0
      19: iconst_1
      20: anewarray     #5                  // class org/apache/hadoop/util/bloom/BloomFilter
      23: putfield      #6                  // Field matrix:[Lorg/apache/hadoop/util/bloom/BloomFilter;
      26: aload_0
      27: getfield      #6                  // Field matrix:[Lorg/apache/hadoop/util/bloom/BloomFilter;
      30: iconst_0
      31: new           #5                  // class org/apache/hadoop/util/bloom/BloomFilter
      34: dup
      35: aload_0
      36: getfield      #7                  // Field vectorSize:I
      39: aload_0
      40: getfield      #8                  // Field nbHash:I
      43: aload_0
      44: getfield      #9                  // Field hashType:I
      47: invokespecial #10                 // Method org/apache/hadoop/util/bloom/BloomFilter."<init>":(III)V
      50: aastore
      51: return

  public void add(org.apache.hadoop.util.bloom.Key);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #11                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #12                 // String Key can not be null
      10: invokespecial #13                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokespecial #14                 // Method getActiveStandardBF:()Lorg/apache/hadoop/util/bloom/BloomFilter;
      18: astore_2
      19: aload_2
      20: ifnonnull     45
      23: aload_0
      24: invokespecial #15                 // Method addRow:()V
      27: aload_0
      28: getfield      #6                  // Field matrix:[Lorg/apache/hadoop/util/bloom/BloomFilter;
      31: aload_0
      32: getfield      #6                  // Field matrix:[Lorg/apache/hadoop/util/bloom/BloomFilter;
      35: arraylength
      36: iconst_1
      37: isub
      38: aaload
      39: astore_2
      40: aload_0
      41: iconst_0
      42: putfield      #4                  // Field currentNbRecord:I
      45: aload_2
      46: aload_1
      47: invokevirtual #16                 // Method org/apache/hadoop/util/bloom/BloomFilter.add:(Lorg/apache/hadoop/util/bloom/Key;)V
      50: aload_0
      51: dup
      52: getfield      #4                  // Field currentNbRecord:I
      55: iconst_1
      56: iadd
      57: putfield      #4                  // Field currentNbRecord:I
      60: return

  public void and(org.apache.hadoop.util.bloom.Filter);
    Code:
       0: aload_1
       1: ifnull        33
       4: aload_1
       5: instanceof    #17                 // class org/apache/hadoop/util/bloom/DynamicBloomFilter
       8: ifeq          33
      11: aload_1
      12: getfield      #18                 // Field org/apache/hadoop/util/bloom/Filter.vectorSize:I
      15: aload_0
      16: getfield      #7                  // Field vectorSize:I
      19: if_icmpne     33
      22: aload_1
      23: getfield      #19                 // Field org/apache/hadoop/util/bloom/Filter.nbHash:I
      26: aload_0
      27: getfield      #8                  // Field nbHash:I
      30: if_icmpeq     43
      33: new           #20                 // class java/lang/IllegalArgumentException
      36: dup
      37: ldc           #21                 // String filters cannot be and-ed
      39: invokespecial #22                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_1
      44: checkcast     #17                 // class org/apache/hadoop/util/bloom/DynamicBloomFilter
      47: astore_2
      48: aload_2
      49: getfield      #6                  // Field matrix:[Lorg/apache/hadoop/util/bloom/BloomFilter;
      52: arraylength
      53: aload_0
      54: getfield      #6                  // Field matrix:[Lorg/apache/hadoop/util/bloom/BloomFilter;
      57: arraylength
      58: if_icmpne     72
      61: aload_2
      62: getfield      #3                  // Field nr:I
      65: aload_0
      66: getfield      #3                  // Field nr:I
      69: if_icmpeq     82
      72: new           #20                 // class java/lang/IllegalArgumentException
      75: dup
      76: ldc           #21                 // String filters cannot be and-ed
      78: invokespecial #22                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      81: athrow
      82: iconst_0
      83: istore_3
      84: iload_3
      85: aload_0
      86: getfield      #6                  // Field matrix:[Lorg/apache/hadoop/util/bloom/BloomFilter;
      89: arraylength
      90: if_icmpge     114
      93: aload_0
      94: getfield      #6                  // Field matrix:[Lorg/apache/hadoop/util/bloom/BloomFilter;
      97: iload_3
      98: aaload
      99: aload_2
     100: getfield      #6                  // Field matrix:[Lorg/apache/hadoop/util/bloom/BloomFilter;
     103: iload_3
     104: aaload
     105: invokevirtual #23                 // Method org/apache/hadoop/util/bloom/BloomFilter.and:(Lorg/apache/hadoop/util/bloom/Filter;)V
     108: iinc          3, 1
     111: goto          84
     114: return

  public boolean membershipTest(org.apache.hadoop.util.bloom.Key);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_1
       5: ireturn
       6: iconst_0
       7: istore_2
       8: iload_2
       9: aload_0
      10: getfield      #6                  // Field matrix:[Lorg/apache/hadoop/util/bloom/BloomFilter;
      13: arraylength
      14: if_icmpge     38
      17: aload_0
      18: getfield      #6                  // Field matrix:[Lorg/apache/hadoop/util/bloom/BloomFilter;
      21: iload_2
      22: aaload
      23: aload_1
      24: invokevirtual #24                 // Method org/apache/hadoop/util/bloom/BloomFilter.membershipTest:(Lorg/apache/hadoop/util/bloom/Key;)Z
      27: ifeq          32
      30: iconst_1
      31: ireturn
      32: iinc          2, 1
      35: goto          8
      38: iconst_0
      39: ireturn

  public void not();
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: getfield      #6                  // Field matrix:[Lorg/apache/hadoop/util/bloom/BloomFilter;
       7: arraylength
       8: if_icmpge     26
      11: aload_0
      12: getfield      #6                  // Field matrix:[Lorg/apache/hadoop/util/bloom/BloomFilter;
      15: iload_1
      16: aaload
      17: invokevirtual #25                 // Method org/apache/hadoop/util/bloom/BloomFilter.not:()V
      20: iinc          1, 1
      23: goto          2
      26: return

  public void or(org.apache.hadoop.util.bloom.Filter);
    Code:
       0: aload_1
       1: ifnull        33
       4: aload_1
       5: instanceof    #17                 // class org/apache/hadoop/util/bloom/DynamicBloomFilter
       8: ifeq          33
      11: aload_1
      12: getfield      #18                 // Field org/apache/hadoop/util/bloom/Filter.vectorSize:I
      15: aload_0
      16: getfield      #7                  // Field vectorSize:I
      19: if_icmpne     33
      22: aload_1
      23: getfield      #19                 // Field org/apache/hadoop/util/bloom/Filter.nbHash:I
      26: aload_0
      27: getfield      #8                  // Field nbHash:I
      30: if_icmpeq     43
      33: new           #20                 // class java/lang/IllegalArgumentException
      36: dup
      37: ldc           #26                 // String filters cannot be or-ed
      39: invokespecial #22                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_1
      44: checkcast     #17                 // class org/apache/hadoop/util/bloom/DynamicBloomFilter
      47: astore_2
      48: aload_2
      49: getfield      #6                  // Field matrix:[Lorg/apache/hadoop/util/bloom/BloomFilter;
      52: arraylength
      53: aload_0
      54: getfield      #6                  // Field matrix:[Lorg/apache/hadoop/util/bloom/BloomFilter;
      57: arraylength
      58: if_icmpne     72
      61: aload_2
      62: getfield      #3                  // Field nr:I
      65: aload_0
      66: getfield      #3                  // Field nr:I
      69: if_icmpeq     82
      72: new           #20                 // class java/lang/IllegalArgumentException
      75: dup
      76: ldc           #26                 // String filters cannot be or-ed
      78: invokespecial #22                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      81: athrow
      82: iconst_0
      83: istore_3
      84: iload_3
      85: aload_0
      86: getfield      #6                  // Field matrix:[Lorg/apache/hadoop/util/bloom/BloomFilter;
      89: arraylength
      90: if_icmpge     114
      93: aload_0
      94: getfield      #6                  // Field matrix:[Lorg/apache/hadoop/util/bloom/BloomFilter;
      97: iload_3
      98: aaload
      99: aload_2
     100: getfield      #6                  // Field matrix:[Lorg/apache/hadoop/util/bloom/BloomFilter;
     103: iload_3
     104: aaload
     105: invokevirtual #27                 // Method org/apache/hadoop/util/bloom/BloomFilter.or:(Lorg/apache/hadoop/util/bloom/Filter;)V
     108: iinc          3, 1
     111: goto          84
     114: return

  public void xor(org.apache.hadoop.util.bloom.Filter);
    Code:
       0: aload_1
       1: ifnull        33
       4: aload_1
       5: instanceof    #17                 // class org/apache/hadoop/util/bloom/DynamicBloomFilter
       8: ifeq          33
      11: aload_1
      12: getfield      #18                 // Field org/apache/hadoop/util/bloom/Filter.vectorSize:I
      15: aload_0
      16: getfield      #7                  // Field vectorSize:I
      19: if_icmpne     33
      22: aload_1
      23: getfield      #19                 // Field org/apache/hadoop/util/bloom/Filter.nbHash:I
      26: aload_0
      27: getfield      #8                  // Field nbHash:I
      30: if_icmpeq     43
      33: new           #20                 // class java/lang/IllegalArgumentException
      36: dup
      37: ldc           #28                 // String filters cannot be xor-ed
      39: invokespecial #22                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_1
      44: checkcast     #17                 // class org/apache/hadoop/util/bloom/DynamicBloomFilter
      47: astore_2
      48: aload_2
      49: getfield      #6                  // Field matrix:[Lorg/apache/hadoop/util/bloom/BloomFilter;
      52: arraylength
      53: aload_0
      54: getfield      #6                  // Field matrix:[Lorg/apache/hadoop/util/bloom/BloomFilter;
      57: arraylength
      58: if_icmpne     72
      61: aload_2
      62: getfield      #3                  // Field nr:I
      65: aload_0
      66: getfield      #3                  // Field nr:I
      69: if_icmpeq     82
      72: new           #20                 // class java/lang/IllegalArgumentException
      75: dup
      76: ldc           #28                 // String filters cannot be xor-ed
      78: invokespecial #22                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      81: athrow
      82: iconst_0
      83: istore_3
      84: iload_3
      85: aload_0
      86: getfield      #6                  // Field matrix:[Lorg/apache/hadoop/util/bloom/BloomFilter;
      89: arraylength
      90: if_icmpge     114
      93: aload_0
      94: getfield      #6                  // Field matrix:[Lorg/apache/hadoop/util/bloom/BloomFilter;
      97: iload_3
      98: aaload
      99: aload_2
     100: getfield      #6                  // Field matrix:[Lorg/apache/hadoop/util/bloom/BloomFilter;
     103: iload_3
     104: aaload
     105: invokevirtual #29                 // Method org/apache/hadoop/util/bloom/BloomFilter.xor:(Lorg/apache/hadoop/util/bloom/Filter;)V
     108: iinc          3, 1
     111: goto          84
     114: return

  public java.lang.String toString();
    Code:
       0: new           #30                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: iconst_0
       9: istore_2
      10: iload_2
      11: aload_0
      12: getfield      #6                  // Field matrix:[Lorg/apache/hadoop/util/bloom/BloomFilter;
      15: arraylength
      16: if_icmpge     43
      19: aload_1
      20: aload_0
      21: getfield      #6                  // Field matrix:[Lorg/apache/hadoop/util/bloom/BloomFilter;
      24: iload_2
      25: aaload
      26: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      29: pop
      30: aload_1
      31: bipush        13
      33: invokevirtual #34                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      36: pop
      37: iinc          2, 1
      40: goto          10
      43: aload_1
      44: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: areturn

  public void write(java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #36                 // Method org/apache/hadoop/util/bloom/Filter.write:(Ljava/io/DataOutput;)V
       5: aload_1
       6: aload_0
       7: getfield      #3                  // Field nr:I
      10: invokeinterface #37,  2           // InterfaceMethod java/io/DataOutput.writeInt:(I)V
      15: aload_1
      16: aload_0
      17: getfield      #4                  // Field currentNbRecord:I
      20: invokeinterface #37,  2           // InterfaceMethod java/io/DataOutput.writeInt:(I)V
      25: aload_1
      26: aload_0
      27: getfield      #6                  // Field matrix:[Lorg/apache/hadoop/util/bloom/BloomFilter;
      30: arraylength
      31: invokeinterface #37,  2           // InterfaceMethod java/io/DataOutput.writeInt:(I)V
      36: iconst_0
      37: istore_2
      38: iload_2
      39: aload_0
      40: getfield      #6                  // Field matrix:[Lorg/apache/hadoop/util/bloom/BloomFilter;
      43: arraylength
      44: if_icmpge     63
      47: aload_0
      48: getfield      #6                  // Field matrix:[Lorg/apache/hadoop/util/bloom/BloomFilter;
      51: iload_2
      52: aaload
      53: aload_1
      54: invokevirtual #38                 // Method org/apache/hadoop/util/bloom/BloomFilter.write:(Ljava/io/DataOutput;)V
      57: iinc          2, 1
      60: goto          38
      63: return

  public void readFields(java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #39                 // Method org/apache/hadoop/util/bloom/Filter.readFields:(Ljava/io/DataInput;)V
       5: aload_0
       6: aload_1
       7: invokeinterface #40,  1           // InterfaceMethod java/io/DataInput.readInt:()I
      12: putfield      #3                  // Field nr:I
      15: aload_0
      16: aload_1
      17: invokeinterface #40,  1           // InterfaceMethod java/io/DataInput.readInt:()I
      22: putfield      #4                  // Field currentNbRecord:I
      25: aload_1
      26: invokeinterface #40,  1           // InterfaceMethod java/io/DataInput.readInt:()I
      31: istore_2
      32: aload_0
      33: iload_2
      34: anewarray     #5                  // class org/apache/hadoop/util/bloom/BloomFilter
      37: putfield      #6                  // Field matrix:[Lorg/apache/hadoop/util/bloom/BloomFilter;
      40: iconst_0
      41: istore_3
      42: iload_3
      43: aload_0
      44: getfield      #6                  // Field matrix:[Lorg/apache/hadoop/util/bloom/BloomFilter;
      47: arraylength
      48: if_icmpge     80
      51: aload_0
      52: getfield      #6                  // Field matrix:[Lorg/apache/hadoop/util/bloom/BloomFilter;
      55: iload_3
      56: new           #5                  // class org/apache/hadoop/util/bloom/BloomFilter
      59: dup
      60: invokespecial #41                 // Method org/apache/hadoop/util/bloom/BloomFilter."<init>":()V
      63: aastore
      64: aload_0
      65: getfield      #6                  // Field matrix:[Lorg/apache/hadoop/util/bloom/BloomFilter;
      68: iload_3
      69: aaload
      70: aload_1
      71: invokevirtual #42                 // Method org/apache/hadoop/util/bloom/BloomFilter.readFields:(Ljava/io/DataInput;)V
      74: iinc          3, 1
      77: goto          42
      80: return

  private void addRow();
    Code:
       0: aload_0
       1: getfield      #6                  // Field matrix:[Lorg/apache/hadoop/util/bloom/BloomFilter;
       4: arraylength
       5: iconst_1
       6: iadd
       7: anewarray     #5                  // class org/apache/hadoop/util/bloom/BloomFilter
      10: astore_1
      11: iconst_0
      12: istore_2
      13: iload_2
      14: aload_0
      15: getfield      #6                  // Field matrix:[Lorg/apache/hadoop/util/bloom/BloomFilter;
      18: arraylength
      19: if_icmpge     37
      22: aload_1
      23: iload_2
      24: aload_0
      25: getfield      #6                  // Field matrix:[Lorg/apache/hadoop/util/bloom/BloomFilter;
      28: iload_2
      29: aaload
      30: aastore
      31: iinc          2, 1
      34: goto          13
      37: aload_1
      38: aload_1
      39: arraylength
      40: iconst_1
      41: isub
      42: new           #5                  // class org/apache/hadoop/util/bloom/BloomFilter
      45: dup
      46: aload_0
      47: getfield      #7                  // Field vectorSize:I
      50: aload_0
      51: getfield      #8                  // Field nbHash:I
      54: aload_0
      55: getfield      #9                  // Field hashType:I
      58: invokespecial #10                 // Method org/apache/hadoop/util/bloom/BloomFilter."<init>":(III)V
      61: aastore
      62: aload_0
      63: aload_1
      64: putfield      #6                  // Field matrix:[Lorg/apache/hadoop/util/bloom/BloomFilter;
      67: return

  private org.apache.hadoop.util.bloom.BloomFilter getActiveStandardBF();
    Code:
       0: aload_0
       1: getfield      #4                  // Field currentNbRecord:I
       4: aload_0
       5: getfield      #3                  // Field nr:I
       8: if_icmplt     13
      11: aconst_null
      12: areturn
      13: aload_0
      14: getfield      #6                  // Field matrix:[Lorg/apache/hadoop/util/bloom/BloomFilter;
      17: aload_0
      18: getfield      #6                  // Field matrix:[Lorg/apache/hadoop/util/bloom/BloomFilter;
      21: arraylength
      22: iconst_1
      23: isub
      24: aaload
      25: areturn
}
