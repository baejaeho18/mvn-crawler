Compiled from "IrqHandler.java"
public final class org.apache.hadoop.service.launcher.IrqHandler implements sun.misc.SignalHandler {
  private static final org.slf4j.Logger LOG;

  public static final java.lang.String CONTROL_C;

  public static final java.lang.String SIGTERM;

  private final java.lang.String name;

  private final org.apache.hadoop.service.launcher.IrqHandler$Interrupted handler;

  private final java.util.concurrent.atomic.AtomicInteger signalCount;

  private sun.misc.Signal signal;

  public org.apache.hadoop.service.launcher.IrqHandler(java.lang.String, org.apache.hadoop.service.launcher.IrqHandler$Interrupted);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
       8: dup
       9: iconst_0
      10: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      13: putfield      #4                  // Field signalCount:Ljava/util/concurrent/atomic/AtomicInteger;
      16: aload_1
      17: ifnull        24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ldc           #5                  // String Null \"name\"
      27: invokestatic  #6                  // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      30: aload_2
      31: ifnull        38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: ldc           #7                  // String Null \"handler\"
      41: invokestatic  #6                  // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      44: aload_0
      45: aload_2
      46: putfield      #8                  // Field handler:Lorg/apache/hadoop/service/launcher/IrqHandler$Interrupted;
      49: aload_0
      50: aload_1
      51: putfield      #9                  // Field name:Ljava/lang/String;
      54: return

  public void bind();
    Code:
       0: aload_0
       1: getfield      #10                 // Field signal:Lsun/misc/Signal;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #11                 // String Handler already bound
      14: invokestatic  #12                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      17: aload_0
      18: new           #13                 // class sun/misc/Signal
      21: dup
      22: aload_0
      23: getfield      #9                  // Field name:Ljava/lang/String;
      26: invokespecial #14                 // Method sun/misc/Signal."<init>":(Ljava/lang/String;)V
      29: putfield      #10                 // Field signal:Lsun/misc/Signal;
      32: aload_0
      33: getfield      #10                 // Field signal:Lsun/misc/Signal;
      36: aload_0
      37: invokestatic  #15                 // Method sun/misc/Signal.handle:(Lsun/misc/Signal;Lsun/misc/SignalHandler;)Lsun/misc/SignalHandler;
      40: pop
      41: goto          81
      44: astore_1
      45: new           #16                 // class java/lang/IllegalArgumentException
      48: dup
      49: new           #17                 // class java/lang/StringBuilder
      52: dup
      53: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      56: ldc           #19                 // String Could not set handler for signal \"
      58: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload_0
      62: getfield      #9                  // Field name:Ljava/lang/String;
      65: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: ldc           #21                 // String \".This can happen if the JVM has the -Xrs set.
      70: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      76: aload_1
      77: invokespecial #23                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      80: athrow
      81: return
    Exception table:
       from    to  target type
          17    41    44   Class java/lang/IllegalArgumentException

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #9                  // Field name:Ljava/lang/String;
       4: areturn

  public void raise();
    Code:
       0: aload_0
       1: getfield      #10                 // Field signal:Lsun/misc/Signal;
       4: invokestatic  #24                 // Method sun/misc/Signal.raise:(Lsun/misc/Signal;)V
       7: return

  public java.lang.String toString();
    Code:
       0: new           #17                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #25                 // String IrqHandler for signal
       9: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #9                  // Field name:Ljava/lang/String;
      16: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn

  public void handle(sun.misc.Signal);
    Code:
       0: aload_0
       1: getfield      #4                  // Field signalCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: new           #27                 // class org/apache/hadoop/service/launcher/IrqHandler$InterruptData
      11: dup
      12: aload_1
      13: invokevirtual #28                 // Method sun/misc/Signal.getName:()Ljava/lang/String;
      16: aload_1
      17: invokevirtual #29                 // Method sun/misc/Signal.getNumber:()I
      20: invokespecial #30                 // Method org/apache/hadoop/service/launcher/IrqHandler$InterruptData."<init>":(Ljava/lang/String;I)V
      23: astore_2
      24: getstatic     #31                 // Field LOG:Lorg/slf4j/Logger;
      27: ldc           #32                 // String Interrupted: {}
      29: aload_2
      30: invokeinterface #33,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      35: aload_0
      36: getfield      #8                  // Field handler:Lorg/apache/hadoop/service/launcher/IrqHandler$Interrupted;
      39: aload_2
      40: invokeinterface #34,  2           // InterfaceMethod org/apache/hadoop/service/launcher/IrqHandler$Interrupted.interrupted:(Lorg/apache/hadoop/service/launcher/IrqHandler$InterruptData;)V
      45: return

  public int getSignalCount();
    Code:
       0: aload_0
       1: getfield      #4                  // Field signalCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #35                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  static {};
    Code:
       0: ldc           #36                 // class org/apache/hadoop/service/launcher/IrqHandler
       2: invokestatic  #37                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #31                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
