Compiled from "SocketInputStream.java"
public class org.apache.hadoop.net.SocketInputStream extends java.io.InputStream implements java.nio.channels.ReadableByteChannel {
  private org.apache.hadoop.net.SocketInputStream$Reader reader;

  public org.apache.hadoop.net.SocketInputStream(java.nio.channels.ReadableByteChannel, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
       4: aload_1
       5: invokestatic  #2                  // Method org/apache/hadoop/net/SocketIOWithTimeout.checkChannelValidity:(Ljava/lang/Object;)V
       8: aload_0
       9: new           #3                  // class org/apache/hadoop/net/SocketInputStream$Reader
      12: dup
      13: aload_1
      14: lload_2
      15: invokespecial #4                  // Method org/apache/hadoop/net/SocketInputStream$Reader."<init>":(Ljava/nio/channels/ReadableByteChannel;J)V
      18: putfield      #5                  // Field reader:Lorg/apache/hadoop/net/SocketInputStream$Reader;
      21: return

  public org.apache.hadoop.net.SocketInputStream(java.net.Socket, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #6                  // Method java/net/Socket.getChannel:()Ljava/nio/channels/SocketChannel;
       5: lload_2
       6: invokespecial #7                  // Method "<init>":(Ljava/nio/channels/ReadableByteChannel;J)V
       9: return

  public org.apache.hadoop.net.SocketInputStream(java.net.Socket) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #6                  // Method java/net/Socket.getChannel:()Ljava/nio/channels/SocketChannel;
       5: aload_1
       6: invokevirtual #8                  // Method java/net/Socket.getSoTimeout:()I
       9: i2l
      10: invokespecial #7                  // Method "<init>":(Ljava/nio/channels/ReadableByteChannel;J)V
      13: return

  public int read() throws java.io.IOException;
    Code:
       0: iconst_1
       1: newarray       byte
       3: astore_1
       4: aload_0
       5: aload_1
       6: iconst_0
       7: iconst_1
       8: invokevirtual #9                  // Method read:([BII)I
      11: istore_2
      12: iload_2
      13: ifle          24
      16: aload_1
      17: iconst_0
      18: baload
      19: sipush        255
      22: iand
      23: ireturn
      24: iload_2
      25: iconst_m1
      26: if_icmpeq     39
      29: new           #10                 // class java/io/IOException
      32: dup
      33: ldc           #11                 // String Could not read from stream
      35: invokespecial #12                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: iload_2
      40: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #13                 // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
       7: invokevirtual #14                 // Method read:(Ljava/nio/ByteBuffer;)I
      10: ireturn

  public synchronized void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field reader:Lorg/apache/hadoop/net/SocketInputStream$Reader;
       4: getfield      #15                 // Field org/apache/hadoop/net/SocketInputStream$Reader.channel:Ljava/nio/channels/ReadableByteChannel;
       7: invokeinterface #16,  1           // InterfaceMethod java/nio/channels/ReadableByteChannel.close:()V
      12: aload_0
      13: getfield      #5                  // Field reader:Lorg/apache/hadoop/net/SocketInputStream$Reader;
      16: invokevirtual #17                 // Method org/apache/hadoop/net/SocketInputStream$Reader.close:()V
      19: return

  public java.nio.channels.ReadableByteChannel getChannel();
    Code:
       0: aload_0
       1: getfield      #5                  // Field reader:Lorg/apache/hadoop/net/SocketInputStream$Reader;
       4: getfield      #15                 // Field org/apache/hadoop/net/SocketInputStream$Reader.channel:Ljava/nio/channels/ReadableByteChannel;
       7: areturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #5                  // Field reader:Lorg/apache/hadoop/net/SocketInputStream$Reader;
       4: invokevirtual #18                 // Method org/apache/hadoop/net/SocketInputStream$Reader.isOpen:()Z
       7: ireturn

  public int read(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field reader:Lorg/apache/hadoop/net/SocketInputStream$Reader;
       4: aload_1
       5: iconst_1
       6: invokevirtual #20                 // Method org/apache/hadoop/net/SocketInputStream$Reader.doIO:(Ljava/nio/ByteBuffer;I)I
       9: ireturn

  public void waitForReadable() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field reader:Lorg/apache/hadoop/net/SocketInputStream$Reader;
       4: iconst_1
       5: invokevirtual #21                 // Method org/apache/hadoop/net/SocketInputStream$Reader.waitForIO:(I)V
       8: return

  public void setTimeout(long);
    Code:
       0: aload_0
       1: getfield      #5                  // Field reader:Lorg/apache/hadoop/net/SocketInputStream$Reader;
       4: lload_1
       5: invokevirtual #22                 // Method org/apache/hadoop/net/SocketInputStream$Reader.setTimeout:(J)V
       8: return
}
