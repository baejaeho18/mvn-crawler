Compiled from "DecodingValidator.java"
public class org.apache.hadoop.io.erasurecode.rawcoder.DecodingValidator {
  private final org.apache.hadoop.io.erasurecode.rawcoder.RawErasureDecoder decoder;

  private java.nio.ByteBuffer buffer;

  private int[] newValidIndexes;

  private int newErasedIndex;

  public org.apache.hadoop.io.erasurecode.rawcoder.DecodingValidator(org.apache.hadoop.io.erasurecode.rawcoder.RawErasureDecoder);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field decoder:Lorg/apache/hadoop/io/erasurecode/rawcoder/RawErasureDecoder;
       9: return

  public void validate(java.nio.ByteBuffer[], int[], java.nio.ByteBuffer[]) throws java.io.IOException;
    Code:
       0: aload_3
       1: invokestatic  #3                  // Method markBuffers:([Ljava/nio/ByteBuffer;)V
       4: aload_1
       5: invokestatic  #4                  // Method org/apache/hadoop/io/erasurecode/rawcoder/CoderUtil.findFirstValidInput:([Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #5                  // class java/nio/ByteBuffer
      11: astore        4
      13: aload         4
      15: invokevirtual #6                  // Method java/nio/ByteBuffer.isDirect:()Z
      18: istore        5
      20: aload         4
      22: invokevirtual #7                  // Method java/nio/ByteBuffer.capacity:()I
      25: istore        6
      27: aload         4
      29: invokevirtual #8                  // Method java/nio/ByteBuffer.remaining:()I
      32: istore        7
      34: aload_0
      35: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
      38: ifnull        65
      41: aload_0
      42: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
      45: invokevirtual #6                  // Method java/nio/ByteBuffer.isDirect:()Z
      48: iload         5
      50: if_icmpne     65
      53: aload_0
      54: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
      57: invokevirtual #7                  // Method java/nio/ByteBuffer.capacity:()I
      60: iload         7
      62: if_icmpge     77
      65: aload_0
      66: aload_0
      67: iload         5
      69: iload         6
      71: invokespecial #10                 // Method allocateBuffer:(ZI)Ljava/nio/ByteBuffer;
      74: putfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
      77: aload_0
      78: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
      81: invokevirtual #11                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      84: iload         7
      86: invokevirtual #12                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      89: pop
      90: aload_1
      91: arraylength
      92: anewarray     #5                  // class java/nio/ByteBuffer
      95: astore        8
      97: iconst_0
      98: istore        9
     100: iconst_0
     101: istore        10
     103: iload         10
     105: aload_2
     106: arraylength
     107: if_icmpge     130
     110: aload         8
     112: aload_2
     113: iload         10
     115: iaload
     116: aload_3
     117: iload         10
     119: aaload
     120: aastore
     121: iinc          9, 1
     124: iinc          10, 1
     127: goto          103
     130: aload_0
     131: iconst_m1
     132: putfield      #13                 // Field newErasedIndex:I
     135: iconst_0
     136: istore        10
     138: aload_1
     139: invokestatic  #14                 // Method org/apache/hadoop/io/erasurecode/rawcoder/CoderUtil.getValidIndexes:([Ljava/lang/Object;)[I
     142: arraylength
     143: istore        11
     145: iconst_0
     146: istore        12
     148: iload         12
     150: aload         8
     152: arraylength
     153: if_icmpge     229
     156: iload         9
     158: iload         11
     160: if_icmpne     166
     163: goto          229
     166: iload         10
     168: ifne          196
     171: aload_1
     172: iload         12
     174: aaload
     175: ifnull        196
     178: aload_0
     179: iload         12
     181: putfield      #13                 // Field newErasedIndex:I
     184: aload         8
     186: iload         12
     188: aconst_null
     189: aastore
     190: iconst_1
     191: istore        10
     193: goto          223
     196: aload         8
     198: iload         12
     200: aaload
     201: ifnonnull     223
     204: aload         8
     206: iload         12
     208: aload_1
     209: iload         12
     211: aaload
     212: aastore
     213: aload_1
     214: iload         12
     216: aaload
     217: ifnull        223
     220: iinc          9, 1
     223: iinc          12, 1
     226: goto          148
     229: aload_0
     230: aload         8
     232: invokestatic  #14                 // Method org/apache/hadoop/io/erasurecode/rawcoder/CoderUtil.getValidIndexes:([Ljava/lang/Object;)[I
     235: putfield      #15                 // Field newValidIndexes:[I
     238: aload_0
     239: getfield      #2                  // Field decoder:Lorg/apache/hadoop/io/erasurecode/rawcoder/RawErasureDecoder;
     242: aload         8
     244: iconst_1
     245: newarray       int
     247: dup
     248: iconst_0
     249: aload_0
     250: getfield      #13                 // Field newErasedIndex:I
     253: iastore
     254: iconst_1
     255: anewarray     #5                  // class java/nio/ByteBuffer
     258: dup
     259: iconst_0
     260: aload_0
     261: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
     264: aastore
     265: invokevirtual #16                 // Method org/apache/hadoop/io/erasurecode/rawcoder/RawErasureDecoder.decode:([Ljava/nio/ByteBuffer;[I[Ljava/nio/ByteBuffer;)V
     268: aload_0
     269: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
     272: aload_1
     273: aload_0
     274: getfield      #13                 // Field newErasedIndex:I
     277: aaload
     278: invokevirtual #17                 // Method java/nio/ByteBuffer.equals:(Ljava/lang/Object;)Z
     281: ifne          294
     284: new           #18                 // class org/apache/hadoop/io/erasurecode/rawcoder/InvalidDecodingException
     287: dup
     288: ldc           #19                 // String Failed to validate decoding
     290: invokespecial #20                 // Method org/apache/hadoop/io/erasurecode/rawcoder/InvalidDecodingException."<init>":(Ljava/lang/String;)V
     293: athrow
     294: aload_1
     295: invokestatic  #21                 // Method toLimits:([Ljava/nio/ByteBuffer;)V
     298: aload_3
     299: invokestatic  #22                 // Method resetBuffers:([Ljava/nio/ByteBuffer;)V
     302: goto          318
     305: astore        13
     307: aload_1
     308: invokestatic  #21                 // Method toLimits:([Ljava/nio/ByteBuffer;)V
     311: aload_3
     312: invokestatic  #22                 // Method resetBuffers:([Ljava/nio/ByteBuffer;)V
     315: aload         13
     317: athrow
     318: return
    Exception table:
       from    to  target type
           4   294   305   any
         305   307   305   any

  public void validate(org.apache.hadoop.io.erasurecode.ECChunk[], int[], org.apache.hadoop.io.erasurecode.ECChunk[]) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #23                 // Method org/apache/hadoop/io/erasurecode/rawcoder/CoderUtil.toBuffers:([Lorg/apache/hadoop/io/erasurecode/ECChunk;)[Ljava/nio/ByteBuffer;
       4: astore        4
       6: aload_3
       7: invokestatic  #23                 // Method org/apache/hadoop/io/erasurecode/rawcoder/CoderUtil.toBuffers:([Lorg/apache/hadoop/io/erasurecode/ECChunk;)[Ljava/nio/ByteBuffer;
      10: astore        5
      12: aload_0
      13: aload         4
      15: aload_2
      16: aload         5
      18: invokevirtual #24                 // Method validate:([Ljava/nio/ByteBuffer;[I[Ljava/nio/ByteBuffer;)V
      21: return

  private java.nio.ByteBuffer allocateBuffer(boolean, int);
    Code:
       0: iload_1
       1: ifeq          15
       4: aload_0
       5: iload_2
       6: invokestatic  #25                 // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
       9: putfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
      12: goto          23
      15: aload_0
      16: iload_2
      17: invokestatic  #26                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      20: putfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
      23: aload_0
      24: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
      27: areturn

  private static void markBuffers(java.nio.ByteBuffer[]);
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: arraylength
       4: istore_2
       5: iconst_0
       6: istore_3
       7: iload_3
       8: iload_2
       9: if_icmpge     34
      12: aload_1
      13: iload_3
      14: aaload
      15: astore        4
      17: aload         4
      19: ifnull        28
      22: aload         4
      24: invokevirtual #27                 // Method java/nio/ByteBuffer.mark:()Ljava/nio/Buffer;
      27: pop
      28: iinc          3, 1
      31: goto          7
      34: return

  private static void resetBuffers(java.nio.ByteBuffer[]);
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: arraylength
       4: istore_2
       5: iconst_0
       6: istore_3
       7: iload_3
       8: iload_2
       9: if_icmpge     34
      12: aload_1
      13: iload_3
      14: aaload
      15: astore        4
      17: aload         4
      19: ifnull        28
      22: aload         4
      24: invokevirtual #28                 // Method java/nio/ByteBuffer.reset:()Ljava/nio/Buffer;
      27: pop
      28: iinc          3, 1
      31: goto          7
      34: return

  private static void toLimits(java.nio.ByteBuffer[]);
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: arraylength
       4: istore_2
       5: iconst_0
       6: istore_3
       7: iload_3
       8: iload_2
       9: if_icmpge     39
      12: aload_1
      13: iload_3
      14: aaload
      15: astore        4
      17: aload         4
      19: ifnull        33
      22: aload         4
      24: aload         4
      26: invokevirtual #29                 // Method java/nio/ByteBuffer.limit:()I
      29: invokevirtual #30                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      32: pop
      33: iinc          3, 1
      36: goto          7
      39: return

  protected int[] getNewValidIndexes();
    Code:
       0: aload_0
       1: getfield      #15                 // Field newValidIndexes:[I
       4: areturn

  protected int getNewErasedIndex();
    Code:
       0: aload_0
       1: getfield      #13                 // Field newErasedIndex:I
       4: ireturn
}
