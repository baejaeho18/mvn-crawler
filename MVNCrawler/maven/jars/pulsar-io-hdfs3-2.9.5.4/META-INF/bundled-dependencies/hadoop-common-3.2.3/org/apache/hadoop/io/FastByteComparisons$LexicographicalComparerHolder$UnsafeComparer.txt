Compiled from "FastByteComparisons.java"
final class org.apache.hadoop.io.FastByteComparisons$LexicographicalComparerHolder$UnsafeComparer extends java.lang.Enum<org.apache.hadoop.io.FastByteComparisons$LexicographicalComparerHolder$UnsafeComparer> implements org.apache.hadoop.io.FastByteComparisons$Comparer<byte[]> {
  public static final org.apache.hadoop.io.FastByteComparisons$LexicographicalComparerHolder$UnsafeComparer INSTANCE;

  static final sun.misc.Unsafe theUnsafe;

  static final int BYTE_ARRAY_BASE_OFFSET;

  static final boolean littleEndian;

  private static final org.apache.hadoop.io.FastByteComparisons$LexicographicalComparerHolder$UnsafeComparer[] $VALUES;

  public static org.apache.hadoop.io.FastByteComparisons$LexicographicalComparerHolder$UnsafeComparer[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lorg/apache/hadoop/io/FastByteComparisons$LexicographicalComparerHolder$UnsafeComparer;
       3: invokevirtual #2                  // Method "[Lorg/apache/hadoop/io/FastByteComparisons$LexicographicalComparerHolder$UnsafeComparer;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lorg/apache/hadoop/io/FastByteComparisons$LexicographicalComparerHolder$UnsafeComparer;"
       9: areturn

  public static org.apache.hadoop.io.FastByteComparisons$LexicographicalComparerHolder$UnsafeComparer valueOf(java.lang.String);
    Code:
       0: ldc           #4                  // class org/apache/hadoop/io/FastByteComparisons$LexicographicalComparerHolder$UnsafeComparer
       2: aload_0
       3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #4                  // class org/apache/hadoop/io/FastByteComparisons$LexicographicalComparerHolder$UnsafeComparer
       9: areturn

  private org.apache.hadoop.io.FastByteComparisons$LexicographicalComparerHolder$UnsafeComparer();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: return

  static boolean lessThanUnsigned(long, long);
    Code:
       0: lload_0
       1: ldc2_w        #8                  // long -9223372036854775808l
       4: ladd
       5: lload_2
       6: ldc2_w        #8                  // long -9223372036854775808l
       9: ladd
      10: lcmp
      11: ifge          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public int compareTo(byte[], int, int, byte[], int, int);
    Code:
       0: aload_1
       1: aload         4
       3: if_acmpne     20
       6: iload_2
       7: iload         5
       9: if_icmpne     20
      12: iload_3
      13: iload         6
      15: if_icmpne     20
      18: iconst_0
      19: ireturn
      20: bipush        8
      22: istore        7
      24: iload_3
      25: iload         6
      27: invokestatic  #10                 // Method java/lang/Math.min:(II)I
      30: istore        8
      32: iload         8
      34: bipush        -8
      36: iand
      37: istore        9
      39: iload_2
      40: getstatic     #11                 // Field BYTE_ARRAY_BASE_OFFSET:I
      43: iadd
      44: istore        10
      46: iload         5
      48: getstatic     #11                 // Field BYTE_ARRAY_BASE_OFFSET:I
      51: iadd
      52: istore        11
      54: iconst_0
      55: istore        12
      57: iload         12
      59: iload         9
      61: if_icmpge     168
      64: getstatic     #12                 // Field theUnsafe:Lsun/misc/Unsafe;
      67: aload_1
      68: iload         10
      70: i2l
      71: iload         12
      73: i2l
      74: ladd
      75: invokevirtual #13                 // Method sun/misc/Unsafe.getLong:(Ljava/lang/Object;J)J
      78: lstore        13
      80: getstatic     #12                 // Field theUnsafe:Lsun/misc/Unsafe;
      83: aload         4
      85: iload         11
      87: i2l
      88: iload         12
      90: i2l
      91: ladd
      92: invokevirtual #13                 // Method sun/misc/Unsafe.getLong:(Ljava/lang/Object;J)J
      95: lstore        15
      97: lload         13
      99: lload         15
     101: lcmp
     102: ifeq          162
     105: getstatic     #14                 // Field littleEndian:Z
     108: ifne          127
     111: lload         13
     113: lload         15
     115: invokestatic  #15                 // Method lessThanUnsigned:(JJ)Z
     118: ifeq          125
     121: iconst_m1
     122: goto          126
     125: iconst_1
     126: ireturn
     127: lload         13
     129: lload         15
     131: lxor
     132: invokestatic  #16                 // Method java/lang/Long.numberOfTrailingZeros:(J)I
     135: bipush        -8
     137: iand
     138: istore        17
     140: lload         13
     142: iload         17
     144: lushr
     145: ldc2_w        #17                 // long 255l
     148: land
     149: l2i
     150: lload         15
     152: iload         17
     154: lushr
     155: ldc2_w        #17                 // long 255l
     158: land
     159: l2i
     160: isub
     161: ireturn
     162: iinc          12, 8
     165: goto          57
     168: iload         12
     170: iload         8
     172: if_icmpge     208
     175: aload_1
     176: iload_2
     177: iload         12
     179: iadd
     180: baload
     181: aload         4
     183: iload         5
     185: iload         12
     187: iadd
     188: baload
     189: invokestatic  #19                 // Method com/google/common/primitives/UnsignedBytes.compare:(BB)I
     192: istore        13
     194: iload         13
     196: ifeq          202
     199: iload         13
     201: ireturn
     202: iinc          12, 1
     205: goto          168
     208: iload_3
     209: iload         6
     211: isub
     212: ireturn

  public int compareTo(java.lang.Object, int, int, java.lang.Object, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #20                 // class "[B"
       5: iload_2
       6: iload_3
       7: aload         4
       9: checkcast     #20                 // class "[B"
      12: iload         5
      14: iload         6
      16: invokevirtual #21                 // Method compareTo:([BII[BII)I
      19: ireturn

  static {};
    Code:
       0: new           #4                  // class org/apache/hadoop/io/FastByteComparisons$LexicographicalComparerHolder$UnsafeComparer
       3: dup
       4: ldc           #22                 // String INSTANCE
       6: iconst_0
       7: invokespecial #23                 // Method "<init>":(Ljava/lang/String;I)V
      10: putstatic     #24                 // Field INSTANCE:Lorg/apache/hadoop/io/FastByteComparisons$LexicographicalComparerHolder$UnsafeComparer;
      13: iconst_1
      14: anewarray     #4                  // class org/apache/hadoop/io/FastByteComparisons$LexicographicalComparerHolder$UnsafeComparer
      17: dup
      18: iconst_0
      19: getstatic     #24                 // Field INSTANCE:Lorg/apache/hadoop/io/FastByteComparisons$LexicographicalComparerHolder$UnsafeComparer;
      22: aastore
      23: putstatic     #1                  // Field $VALUES:[Lorg/apache/hadoop/io/FastByteComparisons$LexicographicalComparerHolder$UnsafeComparer;
      26: new           #25                 // class org/apache/hadoop/io/FastByteComparisons$LexicographicalComparerHolder$UnsafeComparer$1
      29: dup
      30: invokespecial #26                 // Method org/apache/hadoop/io/FastByteComparisons$LexicographicalComparerHolder$UnsafeComparer$1."<init>":()V
      33: invokestatic  #27                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      36: checkcast     #28                 // class sun/misc/Unsafe
      39: putstatic     #12                 // Field theUnsafe:Lsun/misc/Unsafe;
      42: getstatic     #12                 // Field theUnsafe:Lsun/misc/Unsafe;
      45: ldc           #20                 // class "[B"
      47: invokevirtual #29                 // Method sun/misc/Unsafe.arrayBaseOffset:(Ljava/lang/Class;)I
      50: putstatic     #11                 // Field BYTE_ARRAY_BASE_OFFSET:I
      53: getstatic     #12                 // Field theUnsafe:Lsun/misc/Unsafe;
      56: ldc           #20                 // class "[B"
      58: invokevirtual #30                 // Method sun/misc/Unsafe.arrayIndexScale:(Ljava/lang/Class;)I
      61: iconst_1
      62: if_icmpeq     73
      65: new           #31                 // class java/lang/AssertionError
      68: dup
      69: invokespecial #32                 // Method java/lang/AssertionError."<init>":()V
      72: athrow
      73: invokestatic  #33                 // Method java/nio/ByteOrder.nativeOrder:()Ljava/nio/ByteOrder;
      76: getstatic     #34                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
      79: invokevirtual #35                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      82: putstatic     #14                 // Field littleEndian:Z
      85: return
}
