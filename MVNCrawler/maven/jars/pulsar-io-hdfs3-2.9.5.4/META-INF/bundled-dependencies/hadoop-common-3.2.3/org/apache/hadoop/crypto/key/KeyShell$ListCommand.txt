Compiled from "KeyShell.java"
class org.apache.hadoop.crypto.key.KeyShell$ListCommand extends org.apache.hadoop.crypto.key.KeyShell$Command {
  public static final java.lang.String USAGE;

  public static final java.lang.String DESC;

  private boolean metadata;

  final org.apache.hadoop.crypto.key.KeyShell this$0;

  private org.apache.hadoop.crypto.key.KeyShell$ListCommand(org.apache.hadoop.crypto.key.KeyShell);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field this$0:Lorg/apache/hadoop/crypto/key/KeyShell;
       5: aload_0
       6: aload_1
       7: aconst_null
       8: invokespecial #4                  // Method org/apache/hadoop/crypto/key/KeyShell$Command."<init>":(Lorg/apache/hadoop/crypto/key/KeyShell;Lorg/apache/hadoop/crypto/key/KeyShell$1;)V
      11: aload_0
      12: iconst_0
      13: putfield      #5                  // Field metadata:Z
      16: return

  public boolean validate();
    Code:
       0: iconst_1
       1: istore_1
       2: aload_0
       3: aload_0
       4: invokevirtual #6                  // Method getKeyProvider:()Lorg/apache/hadoop/crypto/key/KeyProvider;
       7: putfield      #7                  // Field provider:Lorg/apache/hadoop/crypto/key/KeyProvider;
      10: aload_0
      11: getfield      #7                  // Field provider:Lorg/apache/hadoop/crypto/key/KeyProvider;
      14: ifnonnull     19
      17: iconst_0
      18: istore_1
      19: aload_0
      20: aload_0
      21: getfield      #3                  // Field this$0:Lorg/apache/hadoop/crypto/key/KeyShell;
      24: invokevirtual #8                  // Method org/apache/hadoop/crypto/key/KeyShell.getConf:()Lorg/apache/hadoop/conf/Configuration;
      27: ldc           #9                  // String keyShell.list.metadata
      29: iconst_0
      30: invokevirtual #10                 // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
      33: putfield      #5                  // Field metadata:Z
      36: iload_1
      37: ireturn

  public void execute() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field provider:Lorg/apache/hadoop/crypto/key/KeyProvider;
       4: invokevirtual #11                 // Method org/apache/hadoop/crypto/key/KeyProvider.getKeys:()Ljava/util/List;
       7: astore_1
       8: aload_0
       9: getfield      #3                  // Field this$0:Lorg/apache/hadoop/crypto/key/KeyShell;
      12: invokevirtual #12                 // Method org/apache/hadoop/crypto/key/KeyShell.getOut:()Ljava/io/PrintStream;
      15: new           #13                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #15                 // String Listing keys for KeyProvider:
      24: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: getfield      #7                  // Field provider:Lorg/apache/hadoop/crypto/key/KeyProvider;
      31: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      34: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: invokevirtual #19                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      40: aload_0
      41: getfield      #5                  // Field metadata:Z
      44: ifeq          134
      47: aload_0
      48: getfield      #7                  // Field provider:Lorg/apache/hadoop/crypto/key/KeyProvider;
      51: aload_1
      52: aload_1
      53: invokeinterface #20,  1           // InterfaceMethod java/util/List.size:()I
      58: anewarray     #21                 // class java/lang/String
      61: invokeinterface #22,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      66: checkcast     #23                 // class "[Ljava/lang/String;"
      69: invokevirtual #24                 // Method org/apache/hadoop/crypto/key/KeyProvider.getKeysMetadata:([Ljava/lang/String;)[Lorg/apache/hadoop/crypto/key/KeyProvider$Metadata;
      72: astore_2
      73: iconst_0
      74: istore_3
      75: iload_3
      76: aload_2
      77: arraylength
      78: if_icmpge     131
      81: aload_0
      82: getfield      #3                  // Field this$0:Lorg/apache/hadoop/crypto/key/KeyShell;
      85: invokevirtual #12                 // Method org/apache/hadoop/crypto/key/KeyShell.getOut:()Ljava/io/PrintStream;
      88: new           #13                 // class java/lang/StringBuilder
      91: dup
      92: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      95: aload_1
      96: iload_3
      97: invokeinterface #25,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     102: checkcast     #21                 // class java/lang/String
     105: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: ldc           #26                 // String  :
     110: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: aload_2
     114: iload_3
     115: aaload
     116: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     119: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     122: invokevirtual #19                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     125: iinc          3, 1
     128: goto          75
     131: goto          174
     134: aload_1
     135: invokeinterface #27,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     140: astore_2
     141: aload_2
     142: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     147: ifeq          174
     150: aload_2
     151: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     156: checkcast     #21                 // class java/lang/String
     159: astore_3
     160: aload_0
     161: getfield      #3                  // Field this$0:Lorg/apache/hadoop/crypto/key/KeyShell;
     164: invokevirtual #12                 // Method org/apache/hadoop/crypto/key/KeyShell.getOut:()Ljava/io/PrintStream;
     167: aload_3
     168: invokevirtual #19                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     171: goto          141
     174: goto          212
     177: astore_1
     178: aload_0
     179: getfield      #3                  // Field this$0:Lorg/apache/hadoop/crypto/key/KeyShell;
     182: invokevirtual #12                 // Method org/apache/hadoop/crypto/key/KeyShell.getOut:()Ljava/io/PrintStream;
     185: new           #13                 // class java/lang/StringBuilder
     188: dup
     189: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
     192: ldc           #31                 // String Cannot list keys for KeyProvider:
     194: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     197: aload_0
     198: getfield      #7                  // Field provider:Lorg/apache/hadoop/crypto/key/KeyProvider;
     201: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     204: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     207: invokevirtual #19                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     210: aload_1
     211: athrow
     212: return
    Exception table:
       from    to  target type
           0   174   177   Class java/io/IOException

  public java.lang.String getUsage();
    Code:
       0: ldc           #33                 // String list [-provider <provider>] [-strict] [-metadata] [-help]:\n\nThe list subcommand displays the keynames contained within\na particular provider as configured in core-site.xml or\nspecified with the -provider argument. -metadata displays\nthe metadata. If -strict is supplied, fail immediately if\nthe provider requires a password and none is given.
       2: areturn

  org.apache.hadoop.crypto.key.KeyShell$ListCommand(org.apache.hadoop.crypto.key.KeyShell, org.apache.hadoop.crypto.key.KeyShell$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method "<init>":(Lorg/apache/hadoop/crypto/key/KeyShell;)V
       5: return
}
