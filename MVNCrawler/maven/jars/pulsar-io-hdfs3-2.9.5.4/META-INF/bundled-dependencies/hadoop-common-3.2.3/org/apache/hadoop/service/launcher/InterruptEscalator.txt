Compiled from "InterruptEscalator.java"
public class org.apache.hadoop.service.launcher.InterruptEscalator implements org.apache.hadoop.service.launcher.IrqHandler$Interrupted {
  private static final org.slf4j.Logger LOG;

  private final java.util.concurrent.atomic.AtomicBoolean signalAlreadyReceived;

  private final java.lang.ref.WeakReference<org.apache.hadoop.service.launcher.ServiceLauncher> ownerRef;

  private final int shutdownTimeMillis;

  private final java.util.List<org.apache.hadoop.service.launcher.IrqHandler> interruptHandlers;

  private boolean forcedShutdownTimedOut;

  public org.apache.hadoop.service.launcher.InterruptEscalator(org.apache.hadoop.service.launcher.ServiceLauncher, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: iconst_0
      10: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      13: putfield      #5                  // Field signalAlreadyReceived:Ljava/util/concurrent/atomic/AtomicBoolean;
      16: aload_0
      17: new           #6                  // class java/util/ArrayList
      20: dup
      21: iconst_2
      22: invokespecial #7                  // Method java/util/ArrayList."<init>":(I)V
      25: putfield      #8                  // Field interruptHandlers:Ljava/util/List;
      28: aload_1
      29: ifnull        36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ldc           #9                  // String null owner
      39: invokestatic  #10                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      42: aload_0
      43: new           #11                 // class java/lang/ref/WeakReference
      46: dup
      47: aload_1
      48: invokespecial #12                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
      51: putfield      #13                 // Field ownerRef:Ljava/lang/ref/WeakReference;
      54: aload_0
      55: iload_2
      56: putfield      #14                 // Field shutdownTimeMillis:I
      59: return

  private org.apache.hadoop.service.launcher.ServiceLauncher getOwner();
    Code:
       0: aload_0
       1: getfield      #13                 // Field ownerRef:Ljava/lang/ref/WeakReference;
       4: invokevirtual #15                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
       7: checkcast     #16                 // class org/apache/hadoop/service/launcher/ServiceLauncher
      10: areturn

  private org.apache.hadoop.service.Service getService();
    Code:
       0: aload_0
       1: invokespecial #17                 // Method getOwner:()Lorg/apache/hadoop/service/launcher/ServiceLauncher;
       4: astore_1
       5: aload_1
       6: ifnull        16
       9: aload_1
      10: invokevirtual #18                 // Method org/apache/hadoop/service/launcher/ServiceLauncher.getService:()Lorg/apache/hadoop/service/Service;
      13: goto          17
      16: aconst_null
      17: areturn

  public java.lang.String toString();
    Code:
       0: new           #19                 // class java/lang/StringBuilder
       3: dup
       4: ldc           #20                 // String InterruptEscalator{
       6: invokespecial #21                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
       9: astore_1
      10: aload_1
      11: ldc           #22                 // String  signalAlreadyReceived=
      13: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: getfield      #5                  // Field signalAlreadyReceived:Ljava/util/concurrent/atomic/AtomicBoolean;
      20: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      23: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      26: pop
      27: aload_0
      28: getfield      #13                 // Field ownerRef:Ljava/lang/ref/WeakReference;
      31: invokevirtual #15                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      34: checkcast     #16                 // class org/apache/hadoop/service/launcher/ServiceLauncher
      37: astore_2
      38: aload_2
      39: ifnull        56
      42: aload_1
      43: ldc           #26                 // String , owner=
      45: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_2
      49: invokevirtual #27                 // Method org/apache/hadoop/service/launcher/ServiceLauncher.toString:()Ljava/lang/String;
      52: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: pop
      56: aload_1
      57: ldc           #28                 // String , shutdownTimeMillis=
      59: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_0
      63: getfield      #14                 // Field shutdownTimeMillis:I
      66: invokevirtual #29                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      69: pop
      70: aload_1
      71: ldc           #30                 // String , forcedShutdownTimedOut=
      73: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: aload_0
      77: getfield      #31                 // Field forcedShutdownTimedOut:Z
      80: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      83: pop
      84: aload_1
      85: bipush        125
      87: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      90: pop
      91: aload_1
      92: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      95: areturn

  public void interrupted(org.apache.hadoop.service.launcher.IrqHandler$InterruptData);
    Code:
       0: new           #19                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #35                 // String Service interrupted by
       9: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_1
      13: invokevirtual #36                 // Method org/apache/hadoop/service/launcher/IrqHandler$InterruptData.toString:()Ljava/lang/String;
      16: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: astore_2
      23: getstatic     #37                 // Field LOG:Lorg/slf4j/Logger;
      26: aload_2
      27: invokeinterface #38,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      32: aload_0
      33: getfield      #5                  // Field signalAlreadyReceived:Ljava/util/concurrent/atomic/AtomicBoolean;
      36: iconst_0
      37: iconst_1
      38: invokevirtual #39                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      41: ifne          61
      44: ldc           #40                 // String Repeated interrupt: escalating to a JVM halt
      46: astore_2
      47: getstatic     #37                 // Field LOG:Lorg/slf4j/Logger;
      50: aload_2
      51: invokeinterface #38,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      56: iconst_3
      57: aload_2
      58: invokestatic  #41                 // Method org/apache/hadoop/util/ExitUtil.halt:(ILjava/lang/String;)V
      61: aload_0
      62: invokespecial #42                 // Method getService:()Lorg/apache/hadoop/service/Service;
      65: astore_3
      66: aload_3
      67: ifnull        162
      70: new           #43                 // class org/apache/hadoop/service/launcher/InterruptEscalator$ServiceForcedShutdown
      73: dup
      74: aload_3
      75: aload_0
      76: getfield      #14                 // Field shutdownTimeMillis:I
      79: invokespecial #44                 // Method org/apache/hadoop/service/launcher/InterruptEscalator$ServiceForcedShutdown."<init>":(Lorg/apache/hadoop/service/Service;I)V
      82: astore        4
      84: new           #45                 // class java/lang/Thread
      87: dup
      88: aload         4
      90: invokespecial #46                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
      93: astore        5
      95: aload         5
      97: iconst_1
      98: invokevirtual #47                 // Method java/lang/Thread.setDaemon:(Z)V
     101: aload         5
     103: ldc           #48                 // String Service Forced Shutdown
     105: invokevirtual #49                 // Method java/lang/Thread.setName:(Ljava/lang/String;)V
     108: aload         5
     110: invokevirtual #50                 // Method java/lang/Thread.start:()V
     113: aload         5
     115: aload_0
     116: getfield      #14                 // Field shutdownTimeMillis:I
     119: i2l
     120: invokevirtual #51                 // Method java/lang/Thread.join:(J)V
     123: goto          128
     126: astore        6
     128: aload_0
     129: aload         4
     131: invokestatic  #53                 // Method org/apache/hadoop/service/launcher/InterruptEscalator$ServiceForcedShutdown.access$000:(Lorg/apache/hadoop/service/launcher/InterruptEscalator$ServiceForcedShutdown;)Z
     134: ifne          141
     137: iconst_1
     138: goto          142
     141: iconst_0
     142: putfield      #31                 // Field forcedShutdownTimedOut:Z
     145: aload_0
     146: getfield      #31                 // Field forcedShutdownTimedOut:Z
     149: ifeq          162
     152: getstatic     #37                 // Field LOG:Lorg/slf4j/Logger;
     155: ldc           #54                 // String Service did not shut down in time
     157: invokeinterface #38,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     162: iconst_3
     163: aload_2
     164: invokestatic  #55                 // Method org/apache/hadoop/util/ExitUtil.terminate:(ILjava/lang/String;)V
     167: return
    Exception table:
       from    to  target type
         113   123   126   Class java/lang/InterruptedException

  public synchronized void register(java.lang.String);
    Code:
       0: new           #56                 // class org/apache/hadoop/service/launcher/IrqHandler
       3: dup
       4: aload_1
       5: aload_0
       6: invokespecial #57                 // Method org/apache/hadoop/service/launcher/IrqHandler."<init>":(Ljava/lang/String;Lorg/apache/hadoop/service/launcher/IrqHandler$Interrupted;)V
       9: astore_2
      10: aload_2
      11: invokevirtual #58                 // Method org/apache/hadoop/service/launcher/IrqHandler.bind:()V
      14: aload_0
      15: getfield      #8                  // Field interruptHandlers:Ljava/util/List;
      18: aload_2
      19: invokeinterface #59,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      24: pop
      25: return

  public synchronized org.apache.hadoop.service.launcher.IrqHandler lookup(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field interruptHandlers:Ljava/util/List;
       4: invokeinterface #60,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          45
      19: aload_2
      20: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #56                 // class org/apache/hadoop/service/launcher/IrqHandler
      28: astore_3
      29: aload_3
      30: invokevirtual #63                 // Method org/apache/hadoop/service/launcher/IrqHandler.getName:()Ljava/lang/String;
      33: aload_1
      34: invokevirtual #64                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      37: ifeq          42
      40: aload_3
      41: areturn
      42: goto          10
      45: aconst_null
      46: areturn

  public boolean isForcedShutdownTimedOut();
    Code:
       0: aload_0
       1: getfield      #31                 // Field forcedShutdownTimedOut:Z
       4: ireturn

  public boolean isSignalAlreadyReceived();
    Code:
       0: aload_0
       1: getfield      #5                  // Field signalAlreadyReceived:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  static {};
    Code:
       0: ldc           #65                 // class org/apache/hadoop/service/launcher/InterruptEscalator
       2: invokestatic  #66                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #37                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
