Compiled from "ZKFailoverController.java"
public abstract class org.apache.hadoop.ha.ZKFailoverController {
  static final org.slf4j.Logger LOG;

  public static final java.lang.String ZK_QUORUM_KEY;

  private static final java.lang.String ZK_SESSION_TIMEOUT_KEY;

  private static final int ZK_SESSION_TIMEOUT_DEFAULT;

  private static final java.lang.String ZK_PARENT_ZNODE_KEY;

  public static final java.lang.String ZK_ACL_KEY;

  private static final java.lang.String ZK_ACL_DEFAULT;

  public static final java.lang.String ZK_AUTH_KEY;

  static final java.lang.String ZK_PARENT_ZNODE_DEFAULT;

  protected static final java.lang.String[] ZKFC_CONF_KEYS;

  protected static final java.lang.String USAGE;

  static final int ERR_CODE_FORMAT_DENIED;

  static final int ERR_CODE_NO_PARENT_ZNODE;

  static final int ERR_CODE_NO_FENCER;

  static final int ERR_CODE_AUTO_FAILOVER_NOT_ENABLED;

  static final int ERR_CODE_NO_ZK;

  protected org.apache.hadoop.conf.Configuration conf;

  private java.lang.String zkQuorum;

  protected final org.apache.hadoop.ha.HAServiceTarget localTarget;

  private org.apache.hadoop.ha.HealthMonitor healthMonitor;

  private org.apache.hadoop.ha.ActiveStandbyElector elector;

  protected org.apache.hadoop.ha.ZKFCRpcServer rpcServer;

  private org.apache.hadoop.ha.HealthMonitor$State lastHealthState;

  private volatile org.apache.hadoop.ha.HAServiceProtocol$HAServiceState serviceState;

  private java.lang.String fatalError;

  private long delayJoiningUntilNanotime;

  private java.util.concurrent.ScheduledExecutorService delayExecutor;

  private org.apache.hadoop.ha.ZKFailoverController$ActiveAttemptRecord lastActiveAttemptRecord;

  private java.lang.Object activeAttemptRecordLock;

  int serviceStateMismatchCount;

  boolean quitElectionOnBadState;

  static final boolean $assertionsDisabled;

  protected org.apache.hadoop.ha.ZKFailoverController(org.apache.hadoop.conf.Configuration, org.apache.hadoop.ha.HAServiceTarget);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #11                 // Field org/apache/hadoop/ha/HealthMonitor$State.INITIALIZING:Lorg/apache/hadoop/ha/HealthMonitor$State;
       8: putfield      #12                 // Field lastHealthState:Lorg/apache/hadoop/ha/HealthMonitor$State;
      11: aload_0
      12: getstatic     #13                 // Field org/apache/hadoop/ha/HAServiceProtocol$HAServiceState.INITIALIZING:Lorg/apache/hadoop/ha/HAServiceProtocol$HAServiceState;
      15: putfield      #14                 // Field serviceState:Lorg/apache/hadoop/ha/HAServiceProtocol$HAServiceState;
      18: aload_0
      19: aconst_null
      20: putfield      #15                 // Field fatalError:Ljava/lang/String;
      23: aload_0
      24: lconst_0
      25: putfield      #16                 // Field delayJoiningUntilNanotime:J
      28: aload_0
      29: iconst_1
      30: new           #17                 // class com/google/common/util/concurrent/ThreadFactoryBuilder
      33: dup
      34: invokespecial #18                 // Method com/google/common/util/concurrent/ThreadFactoryBuilder."<init>":()V
      37: iconst_1
      38: invokevirtual #19                 // Method com/google/common/util/concurrent/ThreadFactoryBuilder.setDaemon:(Z)Lcom/google/common/util/concurrent/ThreadFactoryBuilder;
      41: ldc           #20                 // String ZKFC Delay timer #%d
      43: invokevirtual #21                 // Method com/google/common/util/concurrent/ThreadFactoryBuilder.setNameFormat:(Ljava/lang/String;)Lcom/google/common/util/concurrent/ThreadFactoryBuilder;
      46: invokevirtual #22                 // Method com/google/common/util/concurrent/ThreadFactoryBuilder.build:()Ljava/util/concurrent/ThreadFactory;
      49: invokestatic  #23                 // Method java/util/concurrent/Executors.newScheduledThreadPool:(ILjava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;
      52: putfield      #24                 // Field delayExecutor:Ljava/util/concurrent/ScheduledExecutorService;
      55: aload_0
      56: new           #25                 // class java/lang/Object
      59: dup
      60: invokespecial #10                 // Method java/lang/Object."<init>":()V
      63: putfield      #26                 // Field activeAttemptRecordLock:Ljava/lang/Object;
      66: aload_0
      67: iconst_0
      68: putfield      #27                 // Field serviceStateMismatchCount:I
      71: aload_0
      72: iconst_0
      73: putfield      #28                 // Field quitElectionOnBadState:Z
      76: aload_0
      77: aload_2
      78: putfield      #29                 // Field localTarget:Lorg/apache/hadoop/ha/HAServiceTarget;
      81: aload_0
      82: aload_1
      83: putfield      #30                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      86: return

  protected abstract byte[] targetToData(org.apache.hadoop.ha.HAServiceTarget);

  protected abstract org.apache.hadoop.ha.HAServiceTarget dataToTarget(byte[]);

  protected abstract void loginAsFCUser() throws java.io.IOException;

  protected abstract void checkRpcAdminAccess() throws org.apache.hadoop.security.AccessControlException, java.io.IOException;

  protected abstract java.net.InetSocketAddress getRpcAddressToBindTo();

  protected abstract org.apache.hadoop.security.authorize.PolicyProvider getPolicyProvider();

  protected abstract java.util.List<org.apache.hadoop.ha.HAServiceTarget> getAllOtherNodes();

  protected abstract java.lang.String getScopeInsideParentNode();

  public org.apache.hadoop.ha.HAServiceTarget getLocalTarget();
    Code:
       0: aload_0
       1: getfield      #29                 // Field localTarget:Lorg/apache/hadoop/ha/HAServiceTarget;
       4: areturn

  org.apache.hadoop.ha.HAServiceProtocol$HAServiceState getServiceState();
    Code:
       0: aload_0
       1: getfield      #14                 // Field serviceState:Lorg/apache/hadoop/ha/HAServiceProtocol$HAServiceState;
       4: areturn

  public int run(java.lang.String[]) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #29                 // Field localTarget:Lorg/apache/hadoop/ha/HAServiceTarget;
       4: invokevirtual #31                 // Method org/apache/hadoop/ha/HAServiceTarget.isAutoFailoverEnabled:()Z
       7: ifne          47
      10: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
      13: new           #33                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #35                 // String Automatic failover is not enabled for
      22: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_0
      26: getfield      #29                 // Field localTarget:Lorg/apache/hadoop/ha/HAServiceTarget;
      29: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      32: ldc           #38                 // String . Please ensure that automatic failover is enabled in the configuration before running the ZK failover controller.
      34: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokeinterface #40,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
      45: iconst_5
      46: ireturn
      47: aload_0
      48: invokevirtual #42                 // Method loginAsFCUser:()V
      51: new           #43                 // class org/apache/hadoop/ha/ZKFailoverController$1
      54: dup
      55: aload_0
      56: aload_1
      57: invokespecial #44                 // Method org/apache/hadoop/ha/ZKFailoverController$1."<init>":(Lorg/apache/hadoop/ha/ZKFailoverController;[Ljava/lang/String;)V
      60: invokestatic  #45                 // Method org/apache/hadoop/security/SecurityUtil.doAsLoginUserOrFatal:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      63: checkcast     #46                 // class java/lang/Integer
      66: invokevirtual #47                 // Method java/lang/Integer.intValue:()I
      69: ireturn
      70: astore_2
      71: aload_2
      72: invokevirtual #49                 // Method java/lang/RuntimeException.getCause:()Ljava/lang/Throwable;
      75: checkcast     #50                 // class java/lang/Exception
      78: athrow
    Exception table:
       from    to  target type
          51    69    70   Class java/lang/RuntimeException

  private int doRun(java.lang.String[]) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #51                 // Method initZK:()V
       4: goto          57
       7: astore_2
       8: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
      11: new           #33                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #53                 // String Unable to start failover controller. Unable to connect to ZooKeeper quorum at
      20: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_0
      24: getfield      #54                 // Field zkQuorum:Ljava/lang/String;
      27: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: ldc           #55                 // String . Please check the configured value for
      32: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #56                 // String ha.zookeeper.quorum
      37: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: ldc           #57                 // String  and ensure that ZooKeeper is running.
      42: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: aload_2
      49: invokeinterface #58,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      54: bipush        6
      56: ireturn
      57: aload_1
      58: arraylength
      59: ifle          149
      62: ldc           #59                 // String -formatZK
      64: aload_1
      65: iconst_0
      66: aaload
      67: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      70: ifeq          142
      73: iconst_0
      74: istore_2
      75: iconst_1
      76: istore_3
      77: iconst_1
      78: istore        4
      80: iload         4
      82: aload_1
      83: arraylength
      84: if_icmpge     135
      87: ldc           #61                 // String -force
      89: aload_1
      90: iload         4
      92: aaload
      93: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      96: ifeq          104
      99: iconst_1
     100: istore_2
     101: goto          129
     104: ldc           #62                 // String -nonInteractive
     106: aload_1
     107: iload         4
     109: aaload
     110: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     113: ifeq          121
     116: iconst_0
     117: istore_3
     118: goto          129
     121: aload_0
     122: aload_1
     123: iload         4
     125: aaload
     126: invokespecial #63                 // Method badArg:(Ljava/lang/String;)V
     129: iinc          4, 1
     132: goto          80
     135: aload_0
     136: iload_2
     137: iload_3
     138: invokespecial #64                 // Method formatZK:(ZZ)I
     141: ireturn
     142: aload_0
     143: aload_1
     144: iconst_0
     145: aaload
     146: invokespecial #63                 // Method badArg:(Ljava/lang/String;)V
     149: goto          166
     152: astore_2
     153: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
     156: ldc           #65                 // String The failover controller encounters runtime error
     158: aload_2
     159: invokeinterface #58,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     164: aload_2
     165: athrow
     166: aload_0
     167: getfield      #8                  // Field elector:Lorg/apache/hadoop/ha/ActiveStandbyElector;
     170: invokevirtual #66                 // Method org/apache/hadoop/ha/ActiveStandbyElector.parentZNodeExists:()Z
     173: ifne          188
     176: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
     179: ldc           #67                 // String Unable to start failover controller. Parent znode does not exist.\nRun with -formatZK flag to initialize ZooKeeper.
     181: invokeinterface #40,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
     186: iconst_3
     187: ireturn
     188: aload_0
     189: getfield      #29                 // Field localTarget:Lorg/apache/hadoop/ha/HAServiceTarget;
     192: invokevirtual #68                 // Method org/apache/hadoop/ha/HAServiceTarget.checkFencingConfigured:()V
     195: goto          237
     198: astore_2
     199: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
     202: new           #33                 // class java/lang/StringBuilder
     205: dup
     206: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     209: ldc           #70                 // String Fencing is not configured for
     211: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     214: aload_0
     215: getfield      #29                 // Field localTarget:Lorg/apache/hadoop/ha/HAServiceTarget;
     218: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     221: ldc           #71                 // String .\nYou must configure a fencing method before using automatic failover.
     223: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     226: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     229: aload_2
     230: invokeinterface #58,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     235: iconst_4
     236: ireturn
     237: aload_0
     238: invokevirtual #72                 // Method initRPC:()V
     241: aload_0
     242: invokespecial #73                 // Method initHM:()V
     245: aload_0
     246: invokevirtual #74                 // Method startRPC:()V
     249: aload_0
     250: invokespecial #75                 // Method mainLoop:()V
     253: aload_0
     254: getfield      #76                 // Field rpcServer:Lorg/apache/hadoop/ha/ZKFCRpcServer;
     257: invokevirtual #77                 // Method org/apache/hadoop/ha/ZKFCRpcServer.stopAndJoin:()V
     260: aload_0
     261: getfield      #8                  // Field elector:Lorg/apache/hadoop/ha/ActiveStandbyElector;
     264: iconst_1
     265: invokevirtual #78                 // Method org/apache/hadoop/ha/ActiveStandbyElector.quitElection:(Z)V
     268: aload_0
     269: getfield      #79                 // Field healthMonitor:Lorg/apache/hadoop/ha/HealthMonitor;
     272: invokevirtual #80                 // Method org/apache/hadoop/ha/HealthMonitor.shutdown:()V
     275: aload_0
     276: getfield      #79                 // Field healthMonitor:Lorg/apache/hadoop/ha/HealthMonitor;
     279: invokevirtual #81                 // Method org/apache/hadoop/ha/HealthMonitor.join:()V
     282: goto          333
     285: astore_2
     286: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
     289: ldc           #82                 // String The failover controller encounters runtime error:
     291: aload_2
     292: invokeinterface #58,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     297: aload_2
     298: athrow
     299: astore        5
     301: aload_0
     302: getfield      #76                 // Field rpcServer:Lorg/apache/hadoop/ha/ZKFCRpcServer;
     305: invokevirtual #77                 // Method org/apache/hadoop/ha/ZKFCRpcServer.stopAndJoin:()V
     308: aload_0
     309: getfield      #8                  // Field elector:Lorg/apache/hadoop/ha/ActiveStandbyElector;
     312: iconst_1
     313: invokevirtual #78                 // Method org/apache/hadoop/ha/ActiveStandbyElector.quitElection:(Z)V
     316: aload_0
     317: getfield      #79                 // Field healthMonitor:Lorg/apache/hadoop/ha/HealthMonitor;
     320: invokevirtual #80                 // Method org/apache/hadoop/ha/HealthMonitor.shutdown:()V
     323: aload_0
     324: getfield      #79                 // Field healthMonitor:Lorg/apache/hadoop/ha/HealthMonitor;
     327: invokevirtual #81                 // Method org/apache/hadoop/ha/HealthMonitor.join:()V
     330: aload         5
     332: athrow
     333: iconst_0
     334: ireturn
    Exception table:
       from    to  target type
           0     4     7   Class org/apache/zookeeper/KeeperException
          57   141   152   Class java/lang/Exception
         142   149   152   Class java/lang/Exception
         188   195   198   Class org/apache/hadoop/ha/BadFencingConfigurationException
         237   253   285   Class java/lang/Exception
         237   253   299   any
         285   301   299   any

  private void badArg(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #83                 // Method printUsage:()V
       4: new           #84                 // class org/apache/hadoop/HadoopIllegalArgumentException
       7: dup
       8: new           #33                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #85                 // String Bad argument:
      17: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: aload_1
      21: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: invokespecial #86                 // Method org/apache/hadoop/HadoopIllegalArgumentException."<init>":(Ljava/lang/String;)V
      30: athrow

  private void printUsage();
    Code:
       0: getstatic     #87                 // Field java/lang/System.err:Ljava/io/PrintStream;
       3: ldc           #88                 // String Usage: hdfs zkfc [ -formatZK [-force] [-nonInteractive] ]\n\t-force: formats the znode if the znode exists.\n\t-nonInteractive: formats the znode aborts if the znode exists,\n\tunless -force option is specified.\n
       5: invokevirtual #89                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       8: return

  private int formatZK(boolean, boolean) throws java.io.IOException, java.lang.InterruptedException, org.apache.zookeeper.KeeperException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field elector:Lorg/apache/hadoop/ha/ActiveStandbyElector;
       4: invokevirtual #66                 // Method org/apache/hadoop/ha/ActiveStandbyElector.parentZNodeExists:()Z
       7: ifeq          51
      10: iload_1
      11: ifne          27
      14: iload_2
      15: ifeq          25
      18: aload_0
      19: invokespecial #90                 // Method confirmFormat:()Z
      22: ifne          27
      25: iconst_2
      26: ireturn
      27: aload_0
      28: getfield      #8                  // Field elector:Lorg/apache/hadoop/ha/ActiveStandbyElector;
      31: invokevirtual #91                 // Method org/apache/hadoop/ha/ActiveStandbyElector.clearParentZNode:()V
      34: goto          51
      37: astore_3
      38: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
      41: ldc           #93                 // String Unable to clear zk parent znode
      43: aload_3
      44: invokeinterface #58,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      49: iconst_1
      50: ireturn
      51: aload_0
      52: getfield      #8                  // Field elector:Lorg/apache/hadoop/ha/ActiveStandbyElector;
      55: invokevirtual #94                 // Method org/apache/hadoop/ha/ActiveStandbyElector.ensureParentZNode:()V
      58: iconst_0
      59: ireturn
    Exception table:
       from    to  target type
          27    34    37   Class java/io/IOException

  private boolean confirmFormat();
    Code:
       0: aload_0
       1: invokespecial #95                 // Method getParentZnode:()Ljava/lang/String;
       4: astore_1
       5: getstatic     #87                 // Field java/lang/System.err:Ljava/io/PrintStream;
       8: new           #33                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #96                 // String ===============================================\nThe configured parent znode
      17: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: aload_1
      21: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: ldc           #97                 // String  already exists.\nAre you sure you want to clear all failover information from\nZooKeeper?\nWARNING: Before proceeding, ensure that all HDFS services and\nfailover controllers are stopped!\n===============================================
      26: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokevirtual #89                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      35: new           #33                 // class java/lang/StringBuilder
      38: dup
      39: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      42: ldc           #98                 // String Proceed formatting
      44: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: aload_1
      48: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: ldc           #99                 // String ?
      53: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: invokestatic  #100                // Method org/apache/hadoop/util/ToolRunner.confirmPrompt:(Ljava/lang/String;)Z
      62: ireturn
      63: astore_2
      64: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
      67: ldc           #101                // String Failed to confirm
      69: aload_2
      70: invokeinterface #102,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      75: iconst_0
      76: ireturn
    Exception table:
       from    to  target type
          35    62    63   Class java/io/IOException

  private void initHM();
    Code:
       0: aload_0
       1: new           #103                // class org/apache/hadoop/ha/HealthMonitor
       4: dup
       5: aload_0
       6: getfield      #30                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
       9: aload_0
      10: getfield      #29                 // Field localTarget:Lorg/apache/hadoop/ha/HAServiceTarget;
      13: invokespecial #104                // Method org/apache/hadoop/ha/HealthMonitor."<init>":(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/ha/HAServiceTarget;)V
      16: putfield      #79                 // Field healthMonitor:Lorg/apache/hadoop/ha/HealthMonitor;
      19: aload_0
      20: getfield      #79                 // Field healthMonitor:Lorg/apache/hadoop/ha/HealthMonitor;
      23: new           #105                // class org/apache/hadoop/ha/ZKFailoverController$HealthCallbacks
      26: dup
      27: aload_0
      28: invokespecial #106                // Method org/apache/hadoop/ha/ZKFailoverController$HealthCallbacks."<init>":(Lorg/apache/hadoop/ha/ZKFailoverController;)V
      31: invokevirtual #107                // Method org/apache/hadoop/ha/HealthMonitor.addCallback:(Lorg/apache/hadoop/ha/HealthMonitor$Callback;)V
      34: aload_0
      35: getfield      #79                 // Field healthMonitor:Lorg/apache/hadoop/ha/HealthMonitor;
      38: new           #108                // class org/apache/hadoop/ha/ZKFailoverController$ServiceStateCallBacks
      41: dup
      42: aload_0
      43: invokespecial #109                // Method org/apache/hadoop/ha/ZKFailoverController$ServiceStateCallBacks."<init>":(Lorg/apache/hadoop/ha/ZKFailoverController;)V
      46: invokevirtual #110                // Method org/apache/hadoop/ha/HealthMonitor.addServiceStateCallback:(Lorg/apache/hadoop/ha/HealthMonitor$ServiceStateCallback;)V
      49: aload_0
      50: getfield      #79                 // Field healthMonitor:Lorg/apache/hadoop/ha/HealthMonitor;
      53: invokevirtual #111                // Method org/apache/hadoop/ha/HealthMonitor.start:()V
      56: return

  protected void initRPC() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #112                // Method getRpcAddressToBindTo:()Ljava/net/InetSocketAddress;
       4: astore_1
       5: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
       8: ldc           #113                // String ZKFC RpcServer binding to {}
      10: aload_1
      11: invokeinterface #114,  3          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      16: aload_0
      17: new           #115                // class org/apache/hadoop/ha/ZKFCRpcServer
      20: dup
      21: aload_0
      22: getfield      #30                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      25: aload_1
      26: aload_0
      27: aload_0
      28: invokevirtual #116                // Method getPolicyProvider:()Lorg/apache/hadoop/security/authorize/PolicyProvider;
      31: invokespecial #117                // Method org/apache/hadoop/ha/ZKFCRpcServer."<init>":(Lorg/apache/hadoop/conf/Configuration;Ljava/net/InetSocketAddress;Lorg/apache/hadoop/ha/ZKFailoverController;Lorg/apache/hadoop/security/authorize/PolicyProvider;)V
      34: putfield      #76                 // Field rpcServer:Lorg/apache/hadoop/ha/ZKFCRpcServer;
      37: return

  protected void startRPC() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #76                 // Field rpcServer:Lorg/apache/hadoop/ha/ZKFCRpcServer;
       4: invokevirtual #118                // Method org/apache/hadoop/ha/ZKFCRpcServer.start:()V
       7: return

  private void initZK() throws org.apache.hadoop.HadoopIllegalArgumentException, java.io.IOException, org.apache.zookeeper.KeeperException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #30                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
       5: ldc           #56                 // String ha.zookeeper.quorum
       7: invokevirtual #119                // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;)Ljava/lang/String;
      10: putfield      #54                 // Field zkQuorum:Ljava/lang/String;
      13: aload_0
      14: getfield      #30                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      17: ldc           #120                // String ha.zookeeper.session-timeout.ms
      19: sipush        10000
      22: invokevirtual #121                // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      25: istore_1
      26: aload_0
      27: getfield      #30                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      30: ldc           #122                // String ha.zookeeper.acl
      32: ldc           #123                // String world:anyone:rwcda
      34: invokevirtual #124                // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      37: astore_2
      38: aload_2
      39: invokestatic  #125                // Method org/apache/hadoop/util/ZKUtil.resolveConfIndirection:(Ljava/lang/String;)Ljava/lang/String;
      42: astore_2
      43: aload_2
      44: invokestatic  #126                // Method org/apache/hadoop/util/ZKUtil.parseACLs:(Ljava/lang/String;)Ljava/util/List;
      47: astore_3
      48: aload_3
      49: invokeinterface #127,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      54: ifeq          61
      57: getstatic     #128                // Field org/apache/zookeeper/ZooDefs$Ids.CREATOR_ALL_ACL:Ljava/util/ArrayList;
      60: astore_3
      61: aload_0
      62: getfield      #30                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      65: astore        4
      67: aload_0
      68: getfield      #30                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      71: ldc           #129                // String hdfs
      73: aload_0
      74: getfield      #30                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      77: invokestatic  #130                // Method org/apache/hadoop/fs/FileSystem.getFileSystemClass:(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;
      80: invokestatic  #131                // Method org/apache/hadoop/security/ProviderUtils.excludeIncompatibleCredentialProviders:(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/Class;)Lorg/apache/hadoop/conf/Configuration;
      83: astore        4
      85: goto          102
      88: astore        5
      90: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
      93: ldc           #133                // String No filesystem found for the hdfs scheme
      95: aload         5
      97: invokeinterface #102,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
     102: aload         4
     104: ldc           #134                // String ha.zookeeper.auth
     106: invokestatic  #135                // Method org/apache/hadoop/security/SecurityUtil.getZKAuthInfos:(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Ljava/util/List;
     109: astore        5
     111: aload_0
     112: getfield      #54                 // Field zkQuorum:Ljava/lang/String;
     115: ifnull        122
     118: iconst_1
     119: goto          123
     122: iconst_0
     123: ldc           #136                // String Missing required configuration \'%s\' for ZooKeeper quorum
     125: ldc           #56                 // String ha.zookeeper.quorum
     127: invokestatic  #137                // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;Ljava/lang/Object;)V
     130: iload_1
     131: ifle          138
     134: iconst_1
     135: goto          139
     138: iconst_0
     139: ldc           #138                // String Invalid ZK session timeout %s
     141: iload_1
     142: invokestatic  #139                // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;I)V
     145: aload_0
     146: getfield      #30                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
     149: ldc           #141                // String ha.failover-controller.active-standby-elector.zk.op.retries
     151: iconst_3
     152: invokevirtual #121                // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
     155: istore        6
     157: aload_0
     158: new           #142                // class org/apache/hadoop/ha/ActiveStandbyElector
     161: dup
     162: aload_0
     163: getfield      #54                 // Field zkQuorum:Ljava/lang/String;
     166: iload_1
     167: aload_0
     168: invokespecial #95                 // Method getParentZnode:()Ljava/lang/String;
     171: aload_3
     172: aload         5
     174: new           #143                // class org/apache/hadoop/ha/ZKFailoverController$ElectorCallbacks
     177: dup
     178: aload_0
     179: invokespecial #144                // Method org/apache/hadoop/ha/ZKFailoverController$ElectorCallbacks."<init>":(Lorg/apache/hadoop/ha/ZKFailoverController;)V
     182: iload         6
     184: invokespecial #145                // Method org/apache/hadoop/ha/ActiveStandbyElector."<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/util/List;Ljava/util/List;Lorg/apache/hadoop/ha/ActiveStandbyElector$ActiveStandbyElectorCallback;I)V
     187: putfield      #8                  // Field elector:Lorg/apache/hadoop/ha/ActiveStandbyElector;
     190: return
    Exception table:
       from    to  target type
          67    85    88   Class org/apache/hadoop/fs/UnsupportedFileSystemException

  private java.lang.String getParentZnode();
    Code:
       0: aload_0
       1: getfield      #30                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
       4: ldc           #146                // String ha.zookeeper.parent-znode
       6: ldc           #147                // String /hadoop-ha
       8: invokevirtual #124                // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      11: astore_1
      12: aload_1
      13: ldc           #148                // String /
      15: invokevirtual #149                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      18: ifne          41
      21: new           #33                 // class java/lang/StringBuilder
      24: dup
      25: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      28: aload_1
      29: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: ldc           #148                // String /
      34: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: astore_1
      41: new           #33                 // class java/lang/StringBuilder
      44: dup
      45: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      48: aload_1
      49: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_0
      53: invokevirtual #150                // Method getScopeInsideParentNode:()Ljava/lang/String;
      56: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: areturn

  private synchronized void mainLoop() throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #15                 // Field fatalError:Ljava/lang/String;
       4: ifnonnull     14
       7: aload_0
       8: invokevirtual #151                // Method java/lang/Object.wait:()V
      11: goto          0
      14: getstatic     #152                // Field $assertionsDisabled:Z
      17: ifne          35
      20: aload_0
      21: getfield      #15                 // Field fatalError:Ljava/lang/String;
      24: ifnonnull     35
      27: new           #153                // class java/lang/AssertionError
      30: dup
      31: invokespecial #154                // Method java/lang/AssertionError."<init>":()V
      34: athrow
      35: new           #48                 // class java/lang/RuntimeException
      38: dup
      39: new           #33                 // class java/lang/StringBuilder
      42: dup
      43: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      46: ldc           #155                // String ZK Failover Controller failed:
      48: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_0
      52: getfield      #15                 // Field fatalError:Ljava/lang/String;
      55: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: invokespecial #156                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      64: athrow

  private synchronized void fatalError(java.lang.String);
    Code:
       0: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
       3: new           #33                 // class java/lang/StringBuilder
       6: dup
       7: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      10: ldc           #157                // String Fatal error occurred:
      12: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: aload_1
      16: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: invokeinterface #40,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
      27: aload_0
      28: aload_1
      29: putfield      #15                 // Field fatalError:Ljava/lang/String;
      32: aload_0
      33: invokevirtual #158                // Method java/lang/Object.notifyAll:()V
      36: return

  private synchronized void becomeActive() throws org.apache.hadoop.ha.ServiceFailedException;
    Code:
       0: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
       3: new           #33                 // class java/lang/StringBuilder
       6: dup
       7: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      10: ldc           #159                // String Trying to make
      12: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: aload_0
      16: getfield      #29                 // Field localTarget:Lorg/apache/hadoop/ha/HAServiceTarget;
      19: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      22: ldc           #160                // String  active...
      24: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokeinterface #161,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      35: aload_0
      36: getfield      #29                 // Field localTarget:Lorg/apache/hadoop/ha/HAServiceTarget;
      39: aload_0
      40: getfield      #30                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      43: aload_0
      44: getfield      #30                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      47: invokestatic  #162                // Method org/apache/hadoop/ha/FailoverController.getRpcTimeoutToNewActive:(Lorg/apache/hadoop/conf/Configuration;)I
      50: invokevirtual #163                // Method org/apache/hadoop/ha/HAServiceTarget.getProxy:(Lorg/apache/hadoop/conf/Configuration;I)Lorg/apache/hadoop/ha/HAServiceProtocol;
      53: aload_0
      54: invokespecial #164                // Method createReqInfo:()Lorg/apache/hadoop/ha/HAServiceProtocol$StateChangeRequestInfo;
      57: invokestatic  #165                // Method org/apache/hadoop/ha/HAServiceProtocolHelper.transitionToActive:(Lorg/apache/hadoop/ha/HAServiceProtocol;Lorg/apache/hadoop/ha/HAServiceProtocol$StateChangeRequestInfo;)V
      60: new           #33                 // class java/lang/StringBuilder
      63: dup
      64: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      67: ldc           #166                // String Successfully transitioned
      69: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: getfield      #29                 // Field localTarget:Lorg/apache/hadoop/ha/HAServiceTarget;
      76: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      79: ldc           #167                // String  to active state
      81: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      87: astore_1
      88: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
      91: aload_1
      92: invokeinterface #161,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      97: aload_0
      98: getstatic     #168                // Field org/apache/hadoop/ha/HAServiceProtocol$HAServiceState.ACTIVE:Lorg/apache/hadoop/ha/HAServiceProtocol$HAServiceState;
     101: putfield      #14                 // Field serviceState:Lorg/apache/hadoop/ha/HAServiceProtocol$HAServiceState;
     104: aload_0
     105: new           #169                // class org/apache/hadoop/ha/ZKFailoverController$ActiveAttemptRecord
     108: dup
     109: iconst_1
     110: aload_1
     111: invokespecial #170                // Method org/apache/hadoop/ha/ZKFailoverController$ActiveAttemptRecord."<init>":(ZLjava/lang/String;)V
     114: invokespecial #171                // Method recordActiveAttempt:(Lorg/apache/hadoop/ha/ZKFailoverController$ActiveAttemptRecord;)V
     117: goto          220
     120: astore_1
     121: new           #33                 // class java/lang/StringBuilder
     124: dup
     125: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     128: ldc           #173                // String Couldn\'t make
     130: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: aload_0
     134: getfield      #29                 // Field localTarget:Lorg/apache/hadoop/ha/HAServiceTarget;
     137: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     140: ldc           #174                // String  active
     142: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     145: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     148: astore_2
     149: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
     152: aload_2
     153: aload_1
     154: invokeinterface #58,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     159: aload_0
     160: new           #169                // class org/apache/hadoop/ha/ZKFailoverController$ActiveAttemptRecord
     163: dup
     164: iconst_0
     165: new           #33                 // class java/lang/StringBuilder
     168: dup
     169: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     172: aload_2
     173: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     176: ldc           #175                // String \n
     178: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     181: aload_1
     182: invokestatic  #176                // Method org/apache/hadoop/util/StringUtils.stringifyException:(Ljava/lang/Throwable;)Ljava/lang/String;
     185: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     188: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     191: invokespecial #170                // Method org/apache/hadoop/ha/ZKFailoverController$ActiveAttemptRecord."<init>":(ZLjava/lang/String;)V
     194: invokespecial #171                // Method recordActiveAttempt:(Lorg/apache/hadoop/ha/ZKFailoverController$ActiveAttemptRecord;)V
     197: aload_1
     198: instanceof    #177                // class org/apache/hadoop/ha/ServiceFailedException
     201: ifeq          209
     204: aload_1
     205: checkcast     #177                // class org/apache/hadoop/ha/ServiceFailedException
     208: athrow
     209: new           #177                // class org/apache/hadoop/ha/ServiceFailedException
     212: dup
     213: ldc           #178                // String Couldn\'t transition to active
     215: aload_1
     216: invokespecial #179                // Method org/apache/hadoop/ha/ServiceFailedException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     219: athrow
     220: return
    Exception table:
       from    to  target type
          35   117   120   Class java/lang/Throwable

  private void recordActiveAttempt(org.apache.hadoop.ha.ZKFailoverController$ActiveAttemptRecord);
    Code:
       0: aload_0
       1: getfield      #26                 // Field activeAttemptRecordLock:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: aload_1
       9: putfield      #180                // Field lastActiveAttemptRecord:Lorg/apache/hadoop/ha/ZKFailoverController$ActiveAttemptRecord;
      12: aload_0
      13: getfield      #26                 // Field activeAttemptRecordLock:Ljava/lang/Object;
      16: invokevirtual #158                // Method java/lang/Object.notifyAll:()V
      19: aload_2
      20: monitorexit
      21: goto          29
      24: astore_3
      25: aload_2
      26: monitorexit
      27: aload_3
      28: athrow
      29: return
    Exception table:
       from    to  target type
           7    21    24   any
          24    27    24   any

  private org.apache.hadoop.ha.ZKFailoverController$ActiveAttemptRecord waitForActiveAttempt(int) throws java.lang.InterruptedException;
    Code:
       0: invokestatic  #181                // Method java/lang/System.nanoTime:()J
       3: lstore_2
       4: lload_2
       5: getstatic     #182                // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
       8: iload_1
       9: i2l
      10: getstatic     #183                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      13: invokevirtual #184                // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      16: ladd
      17: lstore        4
      19: aload_0
      20: dup
      21: astore        6
      23: monitorenter
      24: aload_0
      25: getfield      #12                 // Field lastHealthState:Lorg/apache/hadoop/ha/HealthMonitor$State;
      28: getstatic     #185                // Field org/apache/hadoop/ha/HealthMonitor$State.SERVICE_HEALTHY:Lorg/apache/hadoop/ha/HealthMonitor$State;
      31: if_acmpeq     39
      34: aconst_null
      35: aload         6
      37: monitorexit
      38: areturn
      39: aload         6
      41: monitorexit
      42: goto          53
      45: astore        7
      47: aload         6
      49: monitorexit
      50: aload         7
      52: athrow
      53: aload_0
      54: getfield      #26                 // Field activeAttemptRecordLock:Ljava/lang/Object;
      57: dup
      58: astore        6
      60: monitorenter
      61: aload_0
      62: getfield      #180                // Field lastActiveAttemptRecord:Lorg/apache/hadoop/ha/ZKFailoverController$ActiveAttemptRecord;
      65: ifnull        88
      68: aload_0
      69: getfield      #180                // Field lastActiveAttemptRecord:Lorg/apache/hadoop/ha/ZKFailoverController$ActiveAttemptRecord;
      72: invokestatic  #186                // Method org/apache/hadoop/ha/ZKFailoverController$ActiveAttemptRecord.access$200:(Lorg/apache/hadoop/ha/ZKFailoverController$ActiveAttemptRecord;)J
      75: lload_2
      76: lcmp
      77: iflt          88
      80: aload_0
      81: getfield      #180                // Field lastActiveAttemptRecord:Lorg/apache/hadoop/ha/ZKFailoverController$ActiveAttemptRecord;
      84: aload         6
      86: monitorexit
      87: areturn
      88: aload_0
      89: getfield      #26                 // Field activeAttemptRecordLock:Ljava/lang/Object;
      92: ldc2_w        #187                // long 1000l
      95: invokevirtual #189                // Method java/lang/Object.wait:(J)V
      98: aload         6
     100: monitorexit
     101: goto          112
     104: astore        8
     106: aload         6
     108: monitorexit
     109: aload         8
     111: athrow
     112: invokestatic  #181                // Method java/lang/System.nanoTime:()J
     115: lload         4
     117: lcmp
     118: iflt          19
     121: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
     124: new           #33                 // class java/lang/StringBuilder
     127: dup
     128: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     131: iload_1
     132: invokevirtual #190                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     135: ldc           #191                // String ms timeout elapsed waiting for an attempt to become active
     137: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     143: invokeinterface #192,  2          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     148: aconst_null
     149: areturn
    Exception table:
       from    to  target type
          24    38    45   any
          39    42    45   any
          45    50    45   any
          61    87   104   any
          88   101   104   any
         104   109   104   any

  private org.apache.hadoop.ha.HAServiceProtocol$StateChangeRequestInfo createReqInfo();
    Code:
       0: new           #193                // class org/apache/hadoop/ha/HAServiceProtocol$StateChangeRequestInfo
       3: dup
       4: getstatic     #194                // Field org/apache/hadoop/ha/HAServiceProtocol$RequestSource.REQUEST_BY_ZKFC:Lorg/apache/hadoop/ha/HAServiceProtocol$RequestSource;
       7: invokespecial #195                // Method org/apache/hadoop/ha/HAServiceProtocol$StateChangeRequestInfo."<init>":(Lorg/apache/hadoop/ha/HAServiceProtocol$RequestSource;)V
      10: areturn

  private synchronized void becomeStandby();
    Code:
       0: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
       3: new           #33                 // class java/lang/StringBuilder
       6: dup
       7: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      10: ldc           #196                // String ZK Election indicated that
      12: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: aload_0
      16: getfield      #29                 // Field localTarget:Lorg/apache/hadoop/ha/HAServiceTarget;
      19: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      22: ldc           #197                // String  should become standby
      24: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokeinterface #161,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      35: aload_0
      36: getfield      #30                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      39: invokestatic  #198                // Method org/apache/hadoop/ha/FailoverController.getGracefulFenceTimeout:(Lorg/apache/hadoop/conf/Configuration;)I
      42: istore_1
      43: aload_0
      44: getfield      #29                 // Field localTarget:Lorg/apache/hadoop/ha/HAServiceTarget;
      47: aload_0
      48: getfield      #30                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      51: iload_1
      52: invokevirtual #163                // Method org/apache/hadoop/ha/HAServiceTarget.getProxy:(Lorg/apache/hadoop/conf/Configuration;I)Lorg/apache/hadoop/ha/HAServiceProtocol;
      55: aload_0
      56: invokespecial #164                // Method createReqInfo:()Lorg/apache/hadoop/ha/HAServiceProtocol$StateChangeRequestInfo;
      59: invokeinterface #199,  2          // InterfaceMethod org/apache/hadoop/ha/HAServiceProtocol.transitionToStandby:(Lorg/apache/hadoop/ha/HAServiceProtocol$StateChangeRequestInfo;)V
      64: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
      67: new           #33                 // class java/lang/StringBuilder
      70: dup
      71: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      74: ldc           #166                // String Successfully transitioned
      76: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: aload_0
      80: getfield      #29                 // Field localTarget:Lorg/apache/hadoop/ha/HAServiceTarget;
      83: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      86: ldc           #200                // String  to standby state
      88: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      94: invokeinterface #161,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      99: goto          139
     102: astore_1
     103: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
     106: new           #33                 // class java/lang/StringBuilder
     109: dup
     110: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     113: ldc           #201                // String Couldn\'t transition
     115: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: aload_0
     119: getfield      #29                 // Field localTarget:Lorg/apache/hadoop/ha/HAServiceTarget;
     122: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     125: ldc           #200                // String  to standby state
     127: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     130: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     133: aload_1
     134: invokeinterface #58,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     139: aload_0
     140: getstatic     #202                // Field org/apache/hadoop/ha/HAServiceProtocol$HAServiceState.STANDBY:Lorg/apache/hadoop/ha/HAServiceProtocol$HAServiceState;
     143: putfield      #14                 // Field serviceState:Lorg/apache/hadoop/ha/HAServiceProtocol$HAServiceState;
     146: return
    Exception table:
       from    to  target type
          35    99   102   Class java/lang/Exception

  private synchronized void fenceOldActive(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #203                // Method dataToTarget:([B)Lorg/apache/hadoop/ha/HAServiceTarget;
       5: astore_2
       6: aload_0
       7: aload_2
       8: invokespecial #204                // Method doFence:(Lorg/apache/hadoop/ha/HAServiceTarget;)V
      11: goto          51
      14: astore_3
      15: aload_0
      16: new           #169                // class org/apache/hadoop/ha/ZKFailoverController$ActiveAttemptRecord
      19: dup
      20: iconst_0
      21: new           #33                 // class java/lang/StringBuilder
      24: dup
      25: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      28: ldc           #205                // String Unable to fence old active:
      30: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_3
      34: invokestatic  #176                // Method org/apache/hadoop/util/StringUtils.stringifyException:(Ljava/lang/Throwable;)Ljava/lang/String;
      37: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokespecial #170                // Method org/apache/hadoop/ha/ZKFailoverController$ActiveAttemptRecord."<init>":(ZLjava/lang/String;)V
      46: invokespecial #171                // Method recordActiveAttempt:(Lorg/apache/hadoop/ha/ZKFailoverController$ActiveAttemptRecord;)V
      49: aload_3
      50: athrow
      51: return
    Exception table:
       from    to  target type
           6    11    14   Class java/lang/Throwable

  private void doFence(org.apache.hadoop.ha.HAServiceTarget);
    Code:
       0: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
       3: new           #33                 // class java/lang/StringBuilder
       6: dup
       7: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      10: ldc           #206                // String Should fence:
      12: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: aload_1
      16: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: invokeinterface #161,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      27: new           #207                // class org/apache/hadoop/ha/FailoverController
      30: dup
      31: aload_0
      32: getfield      #30                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      35: getstatic     #194                // Field org/apache/hadoop/ha/HAServiceProtocol$RequestSource.REQUEST_BY_ZKFC:Lorg/apache/hadoop/ha/HAServiceProtocol$RequestSource;
      38: invokespecial #208                // Method org/apache/hadoop/ha/FailoverController."<init>":(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/ha/HAServiceProtocol$RequestSource;)V
      41: aload_1
      42: invokevirtual #209                // Method org/apache/hadoop/ha/FailoverController.tryGracefulFence:(Lorg/apache/hadoop/ha/HAServiceTarget;)Z
      45: istore_2
      46: iload_2
      47: ifeq          83
      50: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
      53: new           #33                 // class java/lang/StringBuilder
      56: dup
      57: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      60: ldc           #166                // String Successfully transitioned
      62: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload_1
      66: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      69: ldc           #210                // String  to standby state without fencing
      71: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      77: invokeinterface #161,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      82: return
      83: aload_1
      84: invokevirtual #68                 // Method org/apache/hadoop/ha/HAServiceTarget.checkFencingConfigured:()V
      87: goto          142
      90: astore_3
      91: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
      94: new           #33                 // class java/lang/StringBuilder
      97: dup
      98: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     101: ldc           #211                // String Couldn\'t fence old active
     103: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: aload_1
     107: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     110: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     113: aload_3
     114: invokeinterface #58,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     119: aload_0
     120: new           #169                // class org/apache/hadoop/ha/ZKFailoverController$ActiveAttemptRecord
     123: dup
     124: iconst_0
     125: ldc           #212                // String Unable to fence old active
     127: invokespecial #170                // Method org/apache/hadoop/ha/ZKFailoverController$ActiveAttemptRecord."<init>":(ZLjava/lang/String;)V
     130: invokespecial #171                // Method recordActiveAttempt:(Lorg/apache/hadoop/ha/ZKFailoverController$ActiveAttemptRecord;)V
     133: new           #48                 // class java/lang/RuntimeException
     136: dup
     137: aload_3
     138: invokespecial #213                // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     141: athrow
     142: aload_1
     143: invokevirtual #214                // Method org/apache/hadoop/ha/HAServiceTarget.getFencer:()Lorg/apache/hadoop/ha/NodeFencer;
     146: aload_1
     147: invokevirtual #215                // Method org/apache/hadoop/ha/NodeFencer.fence:(Lorg/apache/hadoop/ha/HAServiceTarget;)Z
     150: ifne          180
     153: new           #48                 // class java/lang/RuntimeException
     156: dup
     157: new           #33                 // class java/lang/StringBuilder
     160: dup
     161: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     164: ldc           #216                // String Unable to fence
     166: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     169: aload_1
     170: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     173: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     176: invokespecial #156                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     179: athrow
     180: return
    Exception table:
       from    to  target type
          83    87    90   Class org/apache/hadoop/ha/BadFencingConfigurationException

  void cedeActive(int) throws org.apache.hadoop.security.AccessControlException, org.apache.hadoop.ha.ServiceFailedException, java.io.IOException;
    Code:
       0: invokestatic  #217                // Method org/apache/hadoop/security/UserGroupInformation.getLoginUser:()Lorg/apache/hadoop/security/UserGroupInformation;
       3: new           #218                // class org/apache/hadoop/ha/ZKFailoverController$2
       6: dup
       7: aload_0
       8: iload_1
       9: invokespecial #219                // Method org/apache/hadoop/ha/ZKFailoverController$2."<init>":(Lorg/apache/hadoop/ha/ZKFailoverController;I)V
      12: invokevirtual #220                // Method org/apache/hadoop/security/UserGroupInformation.doAs:(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;
      15: pop
      16: goto          29
      19: astore_2
      20: new           #92                 // class java/io/IOException
      23: dup
      24: aload_2
      25: invokespecial #222                // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
      28: athrow
      29: return
    Exception table:
       from    to  target type
           0    16    19   Class java/lang/InterruptedException

  private void doCedeActive(int) throws org.apache.hadoop.security.AccessControlException, org.apache.hadoop.ha.ServiceFailedException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #30                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
       4: invokestatic  #198                // Method org/apache/hadoop/ha/FailoverController.getGracefulFenceTimeout:(Lorg/apache/hadoop/conf/Configuration;)I
       7: istore_2
       8: aload_0
       9: getfield      #8                  // Field elector:Lorg/apache/hadoop/ha/ActiveStandbyElector;
      12: dup
      13: astore_3
      14: monitorenter
      15: aload_0
      16: dup
      17: astore        4
      19: monitorenter
      20: iload_1
      21: ifgt          39
      24: aload_0
      25: lconst_0
      26: putfield      #16                 // Field delayJoiningUntilNanotime:J
      29: aload_0
      30: invokespecial #5                  // Method recheckElectability:()V
      33: aload         4
      35: monitorexit
      36: aload_3
      37: monitorexit
      38: return
      39: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
      42: new           #33                 // class java/lang/StringBuilder
      45: dup
      46: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      49: ldc           #223                // String Requested by
      51: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: invokestatic  #224                // Method org/apache/hadoop/security/UserGroupInformation.getCurrentUser:()Lorg/apache/hadoop/security/UserGroupInformation;
      57: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      60: ldc           #225                // String  at
      62: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: invokestatic  #226                // Method org/apache/hadoop/ipc/Server.getRemoteAddress:()Ljava/lang/String;
      68: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: ldc           #227                // String  to cede active role.
      73: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: invokeinterface #161,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      84: iconst_0
      85: istore        5
      87: aload_0
      88: getfield      #29                 // Field localTarget:Lorg/apache/hadoop/ha/HAServiceTarget;
      91: aload_0
      92: getfield      #30                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      95: iload_2
      96: invokevirtual #163                // Method org/apache/hadoop/ha/HAServiceTarget.getProxy:(Lorg/apache/hadoop/conf/Configuration;I)Lorg/apache/hadoop/ha/HAServiceProtocol;
      99: aload_0
     100: invokespecial #164                // Method createReqInfo:()Lorg/apache/hadoop/ha/HAServiceProtocol$StateChangeRequestInfo;
     103: invokeinterface #199,  2          // InterfaceMethod org/apache/hadoop/ha/HAServiceProtocol.transitionToStandby:(Lorg/apache/hadoop/ha/HAServiceProtocol$StateChangeRequestInfo;)V
     108: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
     111: ldc           #228                // String Successfully ensured local node is in standby mode
     113: invokeinterface #161,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     118: goto          167
     121: astore        6
     123: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
     126: new           #33                 // class java/lang/StringBuilder
     129: dup
     130: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     133: ldc           #229                // String Unable to transition local node to standby:
     135: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: aload         6
     140: invokevirtual #230                // Method java/io/IOException.getLocalizedMessage:()Ljava/lang/String;
     143: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     146: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     149: invokeinterface #192,  2          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     154: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
     157: ldc           #231                // String Quitting election but indicating that fencing is necessary
     159: invokeinterface #192,  2          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     164: iconst_1
     165: istore        5
     167: aload_0
     168: invokestatic  #181                // Method java/lang/System.nanoTime:()J
     171: getstatic     #183                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     174: iload_1
     175: i2l
     176: invokevirtual #232                // Method java/util/concurrent/TimeUnit.toNanos:(J)J
     179: ladd
     180: putfield      #16                 // Field delayJoiningUntilNanotime:J
     183: aload_0
     184: getfield      #8                  // Field elector:Lorg/apache/hadoop/ha/ActiveStandbyElector;
     187: iload         5
     189: invokevirtual #78                 // Method org/apache/hadoop/ha/ActiveStandbyElector.quitElection:(Z)V
     192: aload_0
     193: getstatic     #13                 // Field org/apache/hadoop/ha/HAServiceProtocol$HAServiceState.INITIALIZING:Lorg/apache/hadoop/ha/HAServiceProtocol$HAServiceState;
     196: putfield      #14                 // Field serviceState:Lorg/apache/hadoop/ha/HAServiceProtocol$HAServiceState;
     199: aload         4
     201: monitorexit
     202: goto          213
     205: astore        7
     207: aload         4
     209: monitorexit
     210: aload         7
     212: athrow
     213: aload_3
     214: monitorexit
     215: goto          225
     218: astore        8
     220: aload_3
     221: monitorexit
     222: aload         8
     224: athrow
     225: aload_0
     226: invokespecial #5                  // Method recheckElectability:()V
     229: return
    Exception table:
       from    to  target type
          87   118   121   Class java/io/IOException
          20    36   205   any
          39   202   205   any
         205   210   205   any
          15    38   218   any
          39   215   218   any
         218   222   218   any

  void gracefulFailoverToYou() throws org.apache.hadoop.ha.ServiceFailedException, java.io.IOException;
    Code:
       0: invokestatic  #217                // Method org/apache/hadoop/security/UserGroupInformation.getLoginUser:()Lorg/apache/hadoop/security/UserGroupInformation;
       3: new           #233                // class org/apache/hadoop/ha/ZKFailoverController$3
       6: dup
       7: aload_0
       8: invokespecial #234                // Method org/apache/hadoop/ha/ZKFailoverController$3."<init>":(Lorg/apache/hadoop/ha/ZKFailoverController;)V
      11: invokevirtual #220                // Method org/apache/hadoop/security/UserGroupInformation.doAs:(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;
      14: pop
      15: goto          28
      18: astore_1
      19: new           #92                 // class java/io/IOException
      22: dup
      23: aload_1
      24: invokespecial #222                // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
      27: athrow
      28: return
    Exception table:
       from    to  target type
           0    15    18   Class java/lang/InterruptedException

  private void doGracefulFailover() throws org.apache.hadoop.ha.ServiceFailedException, java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #30                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
       4: invokestatic  #198                // Method org/apache/hadoop/ha/FailoverController.getGracefulFenceTimeout:(Lorg/apache/hadoop/conf/Configuration;)I
       7: iconst_2
       8: imul
       9: istore_1
      10: aload_0
      11: invokespecial #235                // Method checkEligibleForFailover:()V
      14: aload_0
      15: invokespecial #236                // Method getCurrentActive:()Lorg/apache/hadoop/ha/HAServiceTarget;
      18: astore_2
      19: aload_2
      20: ifnonnull     33
      23: new           #177                // class org/apache/hadoop/ha/ServiceFailedException
      26: dup
      27: ldc           #237                // String No other node is currently active.
      29: invokespecial #238                // Method org/apache/hadoop/ha/ServiceFailedException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: aload_2
      34: invokevirtual #239                // Method org/apache/hadoop/ha/HAServiceTarget.getAddress:()Ljava/net/InetSocketAddress;
      37: aload_0
      38: getfield      #29                 // Field localTarget:Lorg/apache/hadoop/ha/HAServiceTarget;
      41: invokevirtual #239                // Method org/apache/hadoop/ha/HAServiceTarget.getAddress:()Ljava/net/InetSocketAddress;
      44: invokevirtual #240                // Method java/net/InetSocketAddress.equals:(Ljava/lang/Object;)Z
      47: ifeq          86
      50: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
      53: new           #33                 // class java/lang/StringBuilder
      56: dup
      57: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      60: ldc           #241                // String Local node
      62: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload_0
      66: getfield      #29                 // Field localTarget:Lorg/apache/hadoop/ha/HAServiceTarget;
      69: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      72: ldc           #242                // String  is already active. No need to failover. Returning success.
      74: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      80: invokeinterface #161,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      85: return
      86: aload_0
      87: invokevirtual #243                // Method getAllOtherNodes:()Ljava/util/List;
      90: astore_3
      91: new           #244                // class java/util/ArrayList
      94: dup
      95: aload_3
      96: invokeinterface #245,  1          // InterfaceMethod java/util/List.size:()I
     101: invokespecial #246                // Method java/util/ArrayList."<init>":(I)V
     104: astore        4
     106: aconst_null
     107: astore        5
     109: aload_3
     110: invokeinterface #247,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     115: astore        6
     117: aload         6
     119: invokeinterface #248,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     124: ifeq          179
     127: aload         6
     129: invokeinterface #249,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     134: checkcast     #250                // class org/apache/hadoop/ha/HAServiceTarget
     137: astore        7
     139: aload         7
     141: invokevirtual #239                // Method org/apache/hadoop/ha/HAServiceTarget.getAddress:()Ljava/net/InetSocketAddress;
     144: aload_2
     145: invokevirtual #239                // Method org/apache/hadoop/ha/HAServiceTarget.getAddress:()Ljava/net/InetSocketAddress;
     148: invokevirtual #240                // Method java/net/InetSocketAddress.equals:(Ljava/lang/Object;)Z
     151: ifeq          161
     154: aload         7
     156: astore        5
     158: goto          117
     161: aload         4
     163: aload_0
     164: aload         7
     166: iload_1
     167: invokespecial #251                // Method cedeRemoteActive:(Lorg/apache/hadoop/ha/HAServiceTarget;I)Lorg/apache/hadoop/ha/ZKFCProtocol;
     170: invokeinterface #252,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     175: pop
     176: goto          117
     179: getstatic     #152                // Field $assertionsDisabled:Z
     182: ifne          200
     185: aload         5
     187: ifnonnull     200
     190: new           #153                // class java/lang/AssertionError
     193: dup
     194: ldc           #253                // String Active node does not match any known remote node
     196: invokespecial #254                // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     199: athrow
     200: aload         4
     202: aload_0
     203: aload         5
     205: iload_1
     206: invokespecial #251                // Method cedeRemoteActive:(Lorg/apache/hadoop/ha/HAServiceTarget;I)Lorg/apache/hadoop/ha/ZKFCProtocol;
     209: invokeinterface #252,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     214: pop
     215: aload_0
     216: iload_1
     217: ldc           #255                // int 60000
     219: iadd
     220: invokespecial #256                // Method waitForActiveAttempt:(I)Lorg/apache/hadoop/ha/ZKFailoverController$ActiveAttemptRecord;
     223: astore        6
     225: aload         6
     227: ifnonnull     281
     230: aload_0
     231: dup
     232: astore        7
     234: monitorenter
     235: aload_0
     236: getfield      #12                 // Field lastHealthState:Lorg/apache/hadoop/ha/HealthMonitor$State;
     239: getstatic     #185                // Field org/apache/hadoop/ha/HealthMonitor$State.SERVICE_HEALTHY:Lorg/apache/hadoop/ha/HealthMonitor$State;
     242: if_acmpeq     256
     245: new           #177                // class org/apache/hadoop/ha/ServiceFailedException
     248: dup
     249: ldc_w         #257                // String Unable to become active. Service became unhealthy while trying to failover.
     252: invokespecial #238                // Method org/apache/hadoop/ha/ServiceFailedException."<init>":(Ljava/lang/String;)V
     255: athrow
     256: aload         7
     258: monitorexit
     259: goto          270
     262: astore        8
     264: aload         7
     266: monitorexit
     267: aload         8
     269: athrow
     270: new           #177                // class org/apache/hadoop/ha/ServiceFailedException
     273: dup
     274: ldc_w         #258                // String Unable to become active. Local node did not get an opportunity to do so from ZooKeeper, or the local node took too long to transition to active.
     277: invokespecial #238                // Method org/apache/hadoop/ha/ServiceFailedException."<init>":(Ljava/lang/String;)V
     280: athrow
     281: aload         4
     283: invokeinterface #247,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     288: astore        7
     290: aload         7
     292: invokeinterface #248,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     297: ifeq          323
     300: aload         7
     302: invokeinterface #249,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     307: checkcast     #259                // class org/apache/hadoop/ha/ZKFCProtocol
     310: astore        8
     312: aload         8
     314: iconst_m1
     315: invokeinterface #260,  2          // InterfaceMethod org/apache/hadoop/ha/ZKFCProtocol.cedeActive:(I)V
     320: goto          290
     323: aload         6
     325: invokestatic  #261                // Method org/apache/hadoop/ha/ZKFailoverController$ActiveAttemptRecord.access$500:(Lorg/apache/hadoop/ha/ZKFailoverController$ActiveAttemptRecord;)Z
     328: ifeq          366
     331: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
     334: new           #33                 // class java/lang/StringBuilder
     337: dup
     338: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     341: ldc_w         #262                // String Successfully became active.
     344: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     347: aload         6
     349: invokestatic  #263                // Method org/apache/hadoop/ha/ZKFailoverController$ActiveAttemptRecord.access$600:(Lorg/apache/hadoop/ha/ZKFailoverController$ActiveAttemptRecord;)Ljava/lang/String;
     352: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     355: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     358: invokeinterface #161,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     363: goto          402
     366: new           #33                 // class java/lang/StringBuilder
     369: dup
     370: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     373: ldc_w         #264                // String Failed to become active.
     376: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     379: aload         6
     381: invokestatic  #263                // Method org/apache/hadoop/ha/ZKFailoverController$ActiveAttemptRecord.access$600:(Lorg/apache/hadoop/ha/ZKFailoverController$ActiveAttemptRecord;)Ljava/lang/String;
     384: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     387: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     390: astore        7
     392: new           #177                // class org/apache/hadoop/ha/ServiceFailedException
     395: dup
     396: aload         7
     398: invokespecial #238                // Method org/apache/hadoop/ha/ServiceFailedException."<init>":(Ljava/lang/String;)V
     401: athrow
     402: return
    Exception table:
       from    to  target type
         235   259   262   any
         262   267   262   any

  private org.apache.hadoop.ha.ZKFCProtocol cedeRemoteActive(org.apache.hadoop.ha.HAServiceTarget, int) throws java.io.IOException;
    Code:
       0: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
       3: new           #33                 // class java/lang/StringBuilder
       6: dup
       7: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      10: ldc_w         #265                // String Asking
      13: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_1
      17: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      20: ldc_w         #266                // String  to cede its active state for
      23: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: iload_2
      27: invokevirtual #190                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      30: ldc_w         #267                // String ms
      33: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: invokeinterface #161,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      44: aload_1
      45: aload_0
      46: getfield      #30                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      49: iload_2
      50: invokevirtual #268                // Method org/apache/hadoop/ha/HAServiceTarget.getZKFCProxy:(Lorg/apache/hadoop/conf/Configuration;I)Lorg/apache/hadoop/ha/ZKFCProtocol;
      53: astore_3
      54: aload_3
      55: iload_2
      56: invokeinterface #260,  2          // InterfaceMethod org/apache/hadoop/ha/ZKFCProtocol.cedeActive:(I)V
      61: aload_3
      62: areturn

  private synchronized void checkEligibleForFailover() throws org.apache.hadoop.ha.ServiceFailedException;
    Code:
       0: aload_0
       1: invokevirtual #269                // Method getLastHealthState:()Lorg/apache/hadoop/ha/HealthMonitor$State;
       4: getstatic     #185                // Field org/apache/hadoop/ha/HealthMonitor$State.SERVICE_HEALTHY:Lorg/apache/hadoop/ha/HealthMonitor$State;
       7: if_acmpeq     41
      10: new           #177                // class org/apache/hadoop/ha/ServiceFailedException
      13: dup
      14: new           #33                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      21: aload_0
      22: getfield      #29                 // Field localTarget:Lorg/apache/hadoop/ha/HAServiceTarget;
      25: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      28: ldc_w         #270                // String  is not currently healthy. Cannot be failover target
      31: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: invokespecial #238                // Method org/apache/hadoop/ha/ServiceFailedException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: return

  private org.apache.hadoop.ha.HAServiceTarget getCurrentActive() throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field elector:Lorg/apache/hadoop/ha/ActiveStandbyElector;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: dup
       9: astore_2
      10: monitorenter
      11: aload_0
      12: getfield      #8                  // Field elector:Lorg/apache/hadoop/ha/ActiveStandbyElector;
      15: invokevirtual #271                // Method org/apache/hadoop/ha/ActiveStandbyElector.getActiveData:()[B
      18: astore_3
      19: goto          45
      22: astore        4
      24: aconst_null
      25: aload_2
      26: monitorexit
      27: aload_1
      28: monitorexit
      29: areturn
      30: astore        4
      32: new           #92                 // class java/io/IOException
      35: dup
      36: ldc_w         #273                // String Unexpected ZooKeeper issue fetching active node info
      39: aload         4
      41: invokespecial #274                // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      44: athrow
      45: aload_0
      46: aload_3
      47: invokevirtual #203                // Method dataToTarget:([B)Lorg/apache/hadoop/ha/HAServiceTarget;
      50: astore        4
      52: aload         4
      54: aload_2
      55: monitorexit
      56: aload_1
      57: monitorexit
      58: areturn
      59: astore        5
      61: aload_2
      62: monitorexit
      63: aload         5
      65: athrow
      66: astore        6
      68: aload_1
      69: monitorexit
      70: aload         6
      72: athrow
    Exception table:
       from    to  target type
          11    19    22   Class org/apache/hadoop/ha/ActiveStandbyElector$ActiveNotFoundException
          11    19    30   Class org/apache/zookeeper/KeeperException
          11    27    59   any
          30    56    59   any
          59    63    59   any
           7    29    66   any
          30    58    66   any
          59    70    66   any

  private void recheckElectability();
    Code:
       0: aload_0
       1: getfield      #8                  // Field elector:Lorg/apache/hadoop/ha/ActiveStandbyElector;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: dup
       9: astore_2
      10: monitorenter
      11: aload_0
      12: getfield      #12                 // Field lastHealthState:Lorg/apache/hadoop/ha/HealthMonitor$State;
      15: getstatic     #185                // Field org/apache/hadoop/ha/HealthMonitor$State.SERVICE_HEALTHY:Lorg/apache/hadoop/ha/HealthMonitor$State;
      18: if_acmpne     25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: istore_3
      27: aload_0
      28: getfield      #16                 // Field delayJoiningUntilNanotime:J
      31: invokestatic  #181                // Method java/lang/System.nanoTime:()J
      34: lsub
      35: lstore        4
      37: lload         4
      39: lconst_0
      40: lcmp
      41: ifle          100
      44: iload_3
      45: ifeq          89
      48: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
      51: new           #33                 // class java/lang/StringBuilder
      54: dup
      55: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      58: ldc_w         #275                // String Would have joined master election, but this node is prohibited from doing so for
      61: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: getstatic     #182                // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      67: lload         4
      69: invokevirtual #276                // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      72: invokevirtual #277                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      75: ldc_w         #278                // String  more ms
      78: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      84: invokeinterface #161,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      89: aload_0
      90: lload         4
      92: invokespecial #279                // Method scheduleRecheck:(J)V
      95: aload_2
      96: monitorexit
      97: aload_1
      98: monitorexit
      99: return
     100: getstatic     #280                // Field org/apache/hadoop/ha/ZKFailoverController$5.$SwitchMap$org$apache$hadoop$ha$HealthMonitor$State:[I
     103: aload_0
     104: getfield      #12                 // Field lastHealthState:Lorg/apache/hadoop/ha/HealthMonitor$State;
     107: invokevirtual #281                // Method org/apache/hadoop/ha/HealthMonitor$State.ordinal:()I
     110: iaload
     111: tableswitch   { // 1 to 5
                     1: 144
                     2: 174
                     3: 229
                     4: 229
                     5: 284
               default: 294
          }
     144: aload_0
     145: getfield      #8                  // Field elector:Lorg/apache/hadoop/ha/ActiveStandbyElector;
     148: aload_0
     149: aload_0
     150: getfield      #29                 // Field localTarget:Lorg/apache/hadoop/ha/HAServiceTarget;
     153: invokevirtual #282                // Method targetToData:(Lorg/apache/hadoop/ha/HAServiceTarget;)[B
     156: invokevirtual #283                // Method org/apache/hadoop/ha/ActiveStandbyElector.joinElection:([B)V
     159: aload_0
     160: getfield      #28                 // Field quitElectionOnBadState:Z
     163: ifeq          325
     166: aload_0
     167: iconst_0
     168: putfield      #28                 // Field quitElectionOnBadState:Z
     171: goto          325
     174: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
     177: new           #33                 // class java/lang/StringBuilder
     180: dup
     181: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     184: ldc_w         #284                // String Ensuring that
     187: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     190: aload_0
     191: getfield      #29                 // Field localTarget:Lorg/apache/hadoop/ha/HAServiceTarget;
     194: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     197: ldc_w         #285                // String  does not participate in active master election
     200: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     203: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     206: invokeinterface #161,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     211: aload_0
     212: getfield      #8                  // Field elector:Lorg/apache/hadoop/ha/ActiveStandbyElector;
     215: iconst_0
     216: invokevirtual #78                 // Method org/apache/hadoop/ha/ActiveStandbyElector.quitElection:(Z)V
     219: aload_0
     220: getstatic     #13                 // Field org/apache/hadoop/ha/HAServiceProtocol$HAServiceState.INITIALIZING:Lorg/apache/hadoop/ha/HAServiceProtocol$HAServiceState;
     223: putfield      #14                 // Field serviceState:Lorg/apache/hadoop/ha/HAServiceProtocol$HAServiceState;
     226: goto          325
     229: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
     232: new           #33                 // class java/lang/StringBuilder
     235: dup
     236: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     239: ldc_w         #286                // String Quitting master election for
     242: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     245: aload_0
     246: getfield      #29                 // Field localTarget:Lorg/apache/hadoop/ha/HAServiceTarget;
     249: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     252: ldc_w         #287                // String  and marking that fencing is necessary
     255: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     258: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     261: invokeinterface #161,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     266: aload_0
     267: getfield      #8                  // Field elector:Lorg/apache/hadoop/ha/ActiveStandbyElector;
     270: iconst_1
     271: invokevirtual #78                 // Method org/apache/hadoop/ha/ActiveStandbyElector.quitElection:(Z)V
     274: aload_0
     275: getstatic     #13                 // Field org/apache/hadoop/ha/HAServiceProtocol$HAServiceState.INITIALIZING:Lorg/apache/hadoop/ha/HAServiceProtocol$HAServiceState;
     278: putfield      #14                 // Field serviceState:Lorg/apache/hadoop/ha/HAServiceProtocol$HAServiceState;
     281: goto          325
     284: aload_0
     285: ldc_w         #288                // String Health monitor failed!
     288: invokespecial #4                  // Method fatalError:(Ljava/lang/String;)V
     291: goto          325
     294: new           #289                // class java/lang/IllegalArgumentException
     297: dup
     298: new           #33                 // class java/lang/StringBuilder
     301: dup
     302: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     305: ldc_w         #290                // String Unhandled state:
     308: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     311: aload_0
     312: getfield      #12                 // Field lastHealthState:Lorg/apache/hadoop/ha/HealthMonitor$State;
     315: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     318: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     321: invokespecial #291                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     324: athrow
     325: aload_2
     326: monitorexit
     327: goto          337
     330: astore        6
     332: aload_2
     333: monitorexit
     334: aload         6
     336: athrow
     337: aload_1
     338: monitorexit
     339: goto          349
     342: astore        7
     344: aload_1
     345: monitorexit
     346: aload         7
     348: athrow
     349: return
    Exception table:
       from    to  target type
          11    97   330   any
         100   327   330   any
         330   334   330   any
           7    99   342   any
         100   339   342   any
         342   346   342   any

  private void scheduleRecheck(long);
    Code:
       0: aload_0
       1: getfield      #24                 // Field delayExecutor:Ljava/util/concurrent/ScheduledExecutorService;
       4: new           #292                // class org/apache/hadoop/ha/ZKFailoverController$4
       7: dup
       8: aload_0
       9: invokespecial #293                // Method org/apache/hadoop/ha/ZKFailoverController$4."<init>":(Lorg/apache/hadoop/ha/ZKFailoverController;)V
      12: lload_1
      13: getstatic     #182                // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      16: invokeinterface #294,  5          // InterfaceMethod java/util/concurrent/ScheduledExecutorService.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      21: pop
      22: return

  void verifyChangedServiceState(org.apache.hadoop.ha.HAServiceProtocol$HAServiceState);
    Code:
       0: aload_0
       1: getfield      #8                  // Field elector:Lorg/apache/hadoop/ha/ActiveStandbyElector;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: dup
       9: astore_3
      10: monitorenter
      11: aload_0
      12: getfield      #14                 // Field serviceState:Lorg/apache/hadoop/ha/HAServiceProtocol$HAServiceState;
      15: getstatic     #13                 // Field org/apache/hadoop/ha/HAServiceProtocol$HAServiceState.INITIALIZING:Lorg/apache/hadoop/ha/HAServiceProtocol$HAServiceState;
      18: if_acmpne     48
      21: aload_0
      22: getfield      #28                 // Field quitElectionOnBadState:Z
      25: ifeq          43
      28: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
      31: ldc_w         #295                // String rechecking for electability from bad state
      34: invokeinterface #296,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      39: aload_0
      40: invokespecial #5                  // Method recheckElectability:()V
      43: aload_3
      44: monitorexit
      45: aload_2
      46: monitorexit
      47: return
      48: aload_1
      49: aload_0
      50: getfield      #14                 // Field serviceState:Lorg/apache/hadoop/ha/HAServiceProtocol$HAServiceState;
      53: if_acmpne     66
      56: aload_0
      57: iconst_0
      58: putfield      #27                 // Field serviceStateMismatchCount:I
      61: aload_3
      62: monitorexit
      63: aload_2
      64: monitorexit
      65: return
      66: aload_0
      67: getfield      #27                 // Field serviceStateMismatchCount:I
      70: ifne          88
      73: aload_0
      74: dup
      75: getfield      #27                 // Field serviceStateMismatchCount:I
      78: iconst_1
      79: iadd
      80: putfield      #27                 // Field serviceStateMismatchCount:I
      83: aload_3
      84: monitorexit
      85: aload_2
      86: monitorexit
      87: return
      88: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
      91: new           #33                 // class java/lang/StringBuilder
      94: dup
      95: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      98: ldc_w         #297                // String Local service
     101: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: aload_0
     105: getfield      #29                 // Field localTarget:Lorg/apache/hadoop/ha/HAServiceTarget;
     108: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     111: ldc_w         #298                // String  has changed the serviceState to
     114: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: aload_1
     118: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     121: ldc_w         #299                // String . Expected was
     124: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: aload_0
     128: getfield      #14                 // Field serviceState:Lorg/apache/hadoop/ha/HAServiceProtocol$HAServiceState;
     131: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     134: ldc_w         #300                // String . Quitting election marking fencing necessary.
     137: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     143: invokeinterface #40,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
     148: aload_0
     149: invokestatic  #181                // Method java/lang/System.nanoTime:()J
     152: getstatic     #183                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     155: ldc2_w        #187                // long 1000l
     158: invokevirtual #232                // Method java/util/concurrent/TimeUnit.toNanos:(J)J
     161: ladd
     162: putfield      #16                 // Field delayJoiningUntilNanotime:J
     165: aload_0
     166: getfield      #8                  // Field elector:Lorg/apache/hadoop/ha/ActiveStandbyElector;
     169: iconst_1
     170: invokevirtual #78                 // Method org/apache/hadoop/ha/ActiveStandbyElector.quitElection:(Z)V
     173: aload_0
     174: iconst_1
     175: putfield      #28                 // Field quitElectionOnBadState:Z
     178: aload_0
     179: iconst_0
     180: putfield      #27                 // Field serviceStateMismatchCount:I
     183: aload_0
     184: getstatic     #13                 // Field org/apache/hadoop/ha/HAServiceProtocol$HAServiceState.INITIALIZING:Lorg/apache/hadoop/ha/HAServiceProtocol$HAServiceState;
     187: putfield      #14                 // Field serviceState:Lorg/apache/hadoop/ha/HAServiceProtocol$HAServiceState;
     190: aload_3
     191: monitorexit
     192: goto          202
     195: astore        4
     197: aload_3
     198: monitorexit
     199: aload         4
     201: athrow
     202: aload_2
     203: monitorexit
     204: goto          214
     207: astore        5
     209: aload_2
     210: monitorexit
     211: aload         5
     213: athrow
     214: return
    Exception table:
       from    to  target type
          11    45   195   any
          48    63   195   any
          66    85   195   any
          88   192   195   any
         195   199   195   any
           7    47   207   any
          48    65   207   any
          66    87   207   any
          88   204   207   any
         207   211   207   any

  protected synchronized org.apache.hadoop.ha.HealthMonitor$State getLastHealthState();
    Code:
       0: aload_0
       1: getfield      #12                 // Field lastHealthState:Lorg/apache/hadoop/ha/HealthMonitor$State;
       4: areturn

  protected synchronized void setLastHealthState(org.apache.hadoop.ha.HealthMonitor$State);
    Code:
       0: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
       3: new           #33                 // class java/lang/StringBuilder
       6: dup
       7: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      10: ldc_w         #297                // String Local service
      13: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: getfield      #29                 // Field localTarget:Lorg/apache/hadoop/ha/HAServiceTarget;
      20: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      23: ldc_w         #301                // String  entered state:
      26: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_1
      30: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      33: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokeinterface #161,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      41: aload_0
      42: aload_1
      43: putfield      #12                 // Field lastHealthState:Lorg/apache/hadoop/ha/HealthMonitor$State;
      46: return

  org.apache.hadoop.ha.ActiveStandbyElector getElectorForTests();
    Code:
       0: aload_0
       1: getfield      #8                  // Field elector:Lorg/apache/hadoop/ha/ActiveStandbyElector;
       4: areturn

  org.apache.hadoop.ha.ZKFCRpcServer getRpcServerForTests();
    Code:
       0: aload_0
       1: getfield      #76                 // Field rpcServer:Lorg/apache/hadoop/ha/ZKFCRpcServer;
       4: areturn

  static int access$000(org.apache.hadoop.ha.ZKFailoverController, java.lang.String[]) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method doRun:([Ljava/lang/String;)I
       5: ireturn

  static org.apache.hadoop.ha.ActiveStandbyElector access$100(org.apache.hadoop.ha.ZKFailoverController);
    Code:
       0: aload_0
       1: getfield      #8                  // Field elector:Lorg/apache/hadoop/ha/ActiveStandbyElector;
       4: areturn

  static void access$300(org.apache.hadoop.ha.ZKFailoverController, int) throws org.apache.hadoop.security.AccessControlException, org.apache.hadoop.ha.ServiceFailedException, java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #7                  // Method doCedeActive:(I)V
       5: return

  static void access$400(org.apache.hadoop.ha.ZKFailoverController) throws org.apache.hadoop.ha.ServiceFailedException, java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method doGracefulFailover:()V
       4: return

  static void access$700(org.apache.hadoop.ha.ZKFailoverController);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method recheckElectability:()V
       4: return

  static void access$800(org.apache.hadoop.ha.ZKFailoverController, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method fatalError:(Ljava/lang/String;)V
       5: return

  static void access$900(org.apache.hadoop.ha.ZKFailoverController) throws org.apache.hadoop.ha.ServiceFailedException;
    Code:
       0: aload_0
       1: invokespecial #3                  // Method becomeActive:()V
       4: return

  static void access$1000(org.apache.hadoop.ha.ZKFailoverController);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method becomeStandby:()V
       4: return

  static void access$1100(org.apache.hadoop.ha.ZKFailoverController, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method fenceOldActive:([B)V
       5: return

  static {};
    Code:
       0: ldc           #41                 // class org/apache/hadoop/ha/ZKFailoverController
       2: invokevirtual #302                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #152                // Field $assertionsDisabled:Z
      16: ldc           #41                 // class org/apache/hadoop/ha/ZKFailoverController
      18: invokestatic  #303                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      21: putstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
      24: iconst_5
      25: anewarray     #304                // class java/lang/String
      28: dup
      29: iconst_0
      30: ldc           #56                 // String ha.zookeeper.quorum
      32: aastore
      33: dup
      34: iconst_1
      35: ldc           #120                // String ha.zookeeper.session-timeout.ms
      37: aastore
      38: dup
      39: iconst_2
      40: ldc           #146                // String ha.zookeeper.parent-znode
      42: aastore
      43: dup
      44: iconst_3
      45: ldc           #122                // String ha.zookeeper.acl
      47: aastore
      48: dup
      49: iconst_4
      50: ldc           #134                // String ha.zookeeper.auth
      52: aastore
      53: putstatic     #305                // Field ZKFC_CONF_KEYS:[Ljava/lang/String;
      56: return
}
