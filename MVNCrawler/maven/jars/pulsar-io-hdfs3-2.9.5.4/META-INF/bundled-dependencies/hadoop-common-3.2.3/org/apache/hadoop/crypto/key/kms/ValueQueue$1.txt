Compiled from "ValueQueue.java"
class org.apache.hadoop.crypto.key.kms.ValueQueue$1 extends com.google.common.cache.CacheLoader<java.lang.String, java.util.concurrent.LinkedBlockingQueue<E>> {
  final org.apache.hadoop.crypto.key.kms.ValueQueue$QueueRefiller val$refiller;

  final int val$watermarkValue;

  final org.apache.hadoop.crypto.key.kms.ValueQueue this$0;

  org.apache.hadoop.crypto.key.kms.ValueQueue$1(org.apache.hadoop.crypto.key.kms.ValueQueue, org.apache.hadoop.crypto.key.kms.ValueQueue$QueueRefiller, int);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/hadoop/crypto/key/kms/ValueQueue;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$refiller:Lorg/apache/hadoop/crypto/key/kms/ValueQueue$QueueRefiller;
      10: aload_0
      11: iload_3
      12: putfield      #3                  // Field val$watermarkValue:I
      15: aload_0
      16: invokespecial #4                  // Method com/google/common/cache/CacheLoader."<init>":()V
      19: return

  public java.util.concurrent.LinkedBlockingQueue<E> load(java.lang.String) throws java.lang.Exception;
    Code:
       0: new           #5                  // class java/util/concurrent/LinkedBlockingQueue
       3: dup
       4: invokespecial #6                  // Method java/util/concurrent/LinkedBlockingQueue."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #2                  // Field val$refiller:Lorg/apache/hadoop/crypto/key/kms/ValueQueue$QueueRefiller;
      12: aload_1
      13: aload_2
      14: aload_0
      15: getfield      #3                  // Field val$watermarkValue:I
      18: invokeinterface #7,  4            // InterfaceMethod org/apache/hadoop/crypto/key/kms/ValueQueue$QueueRefiller.fillQueueForKey:(Ljava/lang/String;Ljava/util/Queue;I)V
      23: aload_2
      24: areturn

  public java.lang.Object load(java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #8                  // class java/lang/String
       5: invokevirtual #9                  // Method load:(Ljava/lang/String;)Ljava/util/concurrent/LinkedBlockingQueue;
       8: areturn
}
