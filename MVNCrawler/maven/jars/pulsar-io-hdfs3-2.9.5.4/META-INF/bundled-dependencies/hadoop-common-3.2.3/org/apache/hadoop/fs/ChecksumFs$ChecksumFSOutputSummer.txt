Compiled from "ChecksumFs.java"
class org.apache.hadoop.fs.ChecksumFs$ChecksumFSOutputSummer extends org.apache.hadoop.fs.FSOutputSummer {
  private org.apache.hadoop.fs.FSDataOutputStream datas;

  private org.apache.hadoop.fs.FSDataOutputStream sums;

  private static final float CHKSUM_AS_FRACTION;

  private boolean isClosed;

  public org.apache.hadoop.fs.ChecksumFs$ChecksumFSOutputSummer(org.apache.hadoop.fs.ChecksumFs, org.apache.hadoop.fs.Path, java.util.EnumSet<org.apache.hadoop.fs.CreateFlag>, org.apache.hadoop.fs.permission.FsPermission, int, short, long, org.apache.hadoop.util.Progressable, org.apache.hadoop.fs.Options$ChecksumOpt, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #1                  // Field org/apache/hadoop/util/DataChecksum$Type.CRC32:Lorg/apache/hadoop/util/DataChecksum$Type;
       4: aload_1
       5: invokevirtual #2                  // Method org/apache/hadoop/fs/ChecksumFs.getBytesPerSum:()I
       8: invokestatic  #3                  // Method org/apache/hadoop/util/DataChecksum.newDataChecksum:(Lorg/apache/hadoop/util/DataChecksum$Type;I)Lorg/apache/hadoop/util/DataChecksum;
      11: invokespecial #4                  // Method org/apache/hadoop/fs/FSOutputSummer."<init>":(Lorg/apache/hadoop/util/DataChecksum;)V
      14: aload_0
      15: iconst_0
      16: putfield      #5                  // Field isClosed:Z
      19: aload_0
      20: aload_1
      21: invokevirtual #6                  // Method org/apache/hadoop/fs/ChecksumFs.getRawFs:()Lorg/apache/hadoop/fs/AbstractFileSystem;
      24: aload_2
      25: aload_3
      26: aload         4
      28: iload         5
      30: iload         6
      32: lload         7
      34: aload         9
      36: aload         10
      38: iload         11
      40: invokevirtual #7                  // Method org/apache/hadoop/fs/AbstractFileSystem.createInternal:(Lorg/apache/hadoop/fs/Path;Ljava/util/EnumSet;Lorg/apache/hadoop/fs/permission/FsPermission;ISJLorg/apache/hadoop/util/Progressable;Lorg/apache/hadoop/fs/Options$ChecksumOpt;Z)Lorg/apache/hadoop/fs/FSDataOutputStream;
      43: putfield      #8                  // Field datas:Lorg/apache/hadoop/fs/FSDataOutputStream;
      46: aload_1
      47: invokevirtual #2                  // Method org/apache/hadoop/fs/ChecksumFs.getBytesPerSum:()I
      50: istore        12
      52: aload_1
      53: iload         12
      55: iload         5
      57: aload_2
      58: invokestatic  #9                  // Method org/apache/hadoop/fs/ChecksumFs.access$000:(Lorg/apache/hadoop/fs/ChecksumFs;IILorg/apache/hadoop/fs/Path;)I
      61: istore        13
      63: aload_0
      64: aload_1
      65: invokevirtual #6                  // Method org/apache/hadoop/fs/ChecksumFs.getRawFs:()Lorg/apache/hadoop/fs/AbstractFileSystem;
      68: aload_1
      69: aload_2
      70: invokevirtual #10                 // Method org/apache/hadoop/fs/ChecksumFs.getChecksumFile:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      73: getstatic     #11                 // Field org/apache/hadoop/fs/CreateFlag.CREATE:Lorg/apache/hadoop/fs/CreateFlag;
      76: getstatic     #12                 // Field org/apache/hadoop/fs/CreateFlag.OVERWRITE:Lorg/apache/hadoop/fs/CreateFlag;
      79: invokestatic  #13                 // Method java/util/EnumSet.of:(Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/util/EnumSet;
      82: aload         4
      84: iload         13
      86: iload         6
      88: lload         7
      90: aload         9
      92: aload         10
      94: iload         11
      96: invokevirtual #7                  // Method org/apache/hadoop/fs/AbstractFileSystem.createInternal:(Lorg/apache/hadoop/fs/Path;Ljava/util/EnumSet;Lorg/apache/hadoop/fs/permission/FsPermission;ISJLorg/apache/hadoop/util/Progressable;Lorg/apache/hadoop/fs/Options$ChecksumOpt;Z)Lorg/apache/hadoop/fs/FSDataOutputStream;
      99: putfield      #14                 // Field sums:Lorg/apache/hadoop/fs/FSDataOutputStream;
     102: aload_0
     103: getfield      #14                 // Field sums:Lorg/apache/hadoop/fs/FSDataOutputStream;
     106: invokestatic  #15                 // Method org/apache/hadoop/fs/ChecksumFs.access$100:()[B
     109: iconst_0
     110: invokestatic  #15                 // Method org/apache/hadoop/fs/ChecksumFs.access$100:()[B
     113: arraylength
     114: invokevirtual #16                 // Method org/apache/hadoop/fs/FSDataOutputStream.write:([BII)V
     117: aload_0
     118: getfield      #14                 // Field sums:Lorg/apache/hadoop/fs/FSDataOutputStream;
     121: iload         12
     123: invokevirtual #17                 // Method org/apache/hadoop/fs/FSDataOutputStream.writeInt:(I)V
     126: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method flushBuffer:()V
       4: aload_0
       5: getfield      #14                 // Field sums:Lorg/apache/hadoop/fs/FSDataOutputStream;
       8: invokevirtual #19                 // Method org/apache/hadoop/fs/FSDataOutputStream.close:()V
      11: aload_0
      12: getfield      #8                  // Field datas:Lorg/apache/hadoop/fs/FSDataOutputStream;
      15: invokevirtual #19                 // Method org/apache/hadoop/fs/FSDataOutputStream.close:()V
      18: aload_0
      19: iconst_1
      20: putfield      #5                  // Field isClosed:Z
      23: goto          34
      26: astore_1
      27: aload_0
      28: iconst_1
      29: putfield      #5                  // Field isClosed:Z
      32: aload_1
      33: athrow
      34: return
    Exception table:
       from    to  target type
           0    18    26   any

  protected void writeChunk(byte[], int, int, byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field datas:Lorg/apache/hadoop/fs/FSDataOutputStream;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #16                 // Method org/apache/hadoop/fs/FSDataOutputStream.write:([BII)V
      10: aload_0
      11: getfield      #14                 // Field sums:Lorg/apache/hadoop/fs/FSDataOutputStream;
      14: aload         4
      16: iload         5
      18: iload         6
      20: invokevirtual #16                 // Method org/apache/hadoop/fs/FSDataOutputStream.write:([BII)V
      23: return

  protected void checkClosed() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field isClosed:Z
       4: ifeq          15
       7: new           #20                 // class java/nio/channels/ClosedChannelException
      10: dup
      11: invokespecial #21                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      14: athrow
      15: return
}
