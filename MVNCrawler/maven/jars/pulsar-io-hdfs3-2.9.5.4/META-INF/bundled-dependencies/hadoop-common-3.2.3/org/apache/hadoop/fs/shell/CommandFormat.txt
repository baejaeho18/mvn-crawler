Compiled from "CommandFormat.java"
public class org.apache.hadoop.fs.shell.CommandFormat {
  final int minPar;

  final int maxPar;

  final java.util.Map<java.lang.String, java.lang.Boolean> options;

  final java.util.Map<java.lang.String, java.lang.String> optionsWithValue;

  boolean ignoreUnknownOpts;

  public org.apache.hadoop.fs.shell.CommandFormat(java.lang.String, int, int, java.lang.String...);
    Code:
       0: aload_0
       1: iload_2
       2: iload_3
       3: aload         4
       5: invokespecial #1                  // Method "<init>":(II[Ljava/lang/String;)V
       8: return

  public org.apache.hadoop.fs.shell.CommandFormat(int, int, java.lang.String...);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/HashMap
       8: dup
       9: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      12: putfield      #5                  // Field options:Ljava/util/Map;
      15: aload_0
      16: new           #3                  // class java/util/HashMap
      19: dup
      20: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      23: putfield      #6                  // Field optionsWithValue:Ljava/util/Map;
      26: aload_0
      27: iconst_0
      28: putfield      #7                  // Field ignoreUnknownOpts:Z
      31: aload_0
      32: iload_1
      33: putfield      #8                  // Field minPar:I
      36: aload_0
      37: iload_2
      38: putfield      #9                  // Field maxPar:I
      41: aload_3
      42: astore        4
      44: aload         4
      46: arraylength
      47: istore        5
      49: iconst_0
      50: istore        6
      52: iload         6
      54: iload         5
      56: if_icmpge     100
      59: aload         4
      61: iload         6
      63: aaload
      64: astore        7
      66: aload         7
      68: ifnonnull     79
      71: aload_0
      72: iconst_1
      73: putfield      #7                  // Field ignoreUnknownOpts:Z
      76: goto          94
      79: aload_0
      80: getfield      #5                  // Field options:Ljava/util/Map;
      83: aload         7
      85: getstatic     #10                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      88: invokeinterface #11,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      93: pop
      94: iinc          6, 1
      97: goto          52
     100: return

  public void addOptionWithValue(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field options:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #12,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          22
      13: new           #13                 // class org/apache/hadoop/fs/shell/CommandFormat$DuplicatedOptionException
      16: dup
      17: aload_1
      18: invokespecial #14                 // Method org/apache/hadoop/fs/shell/CommandFormat$DuplicatedOptionException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: aload_0
      23: getfield      #6                  // Field optionsWithValue:Ljava/util/Map;
      26: aload_1
      27: aconst_null
      28: invokeinterface #11,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      33: pop
      34: return

  public java.util.List<java.lang.String> parse(java.lang.String[], int);
    Code:
       0: new           #15                 // class java/util/ArrayList
       3: dup
       4: aload_1
       5: invokestatic  #16                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       8: invokespecial #17                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      11: astore_3
      12: aload_3
      13: iconst_0
      14: iload_2
      15: invokeinterface #18,  3           // InterfaceMethod java/util/List.subList:(II)Ljava/util/List;
      20: invokeinterface #19,  1           // InterfaceMethod java/util/List.clear:()V
      25: aload_0
      26: aload_3
      27: invokevirtual #20                 // Method parse:(Ljava/util/List;)V
      30: aload_3
      31: areturn

  public void parse(java.util.List<java.lang.String>);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_1
       4: invokeinterface #21,  1           // InterfaceMethod java/util/List.size:()I
       9: if_icmpge     258
      12: aload_1
      13: iload_2
      14: invokeinterface #22,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      19: checkcast     #23                 // class java/lang/String
      22: astore_3
      23: aload_3
      24: ldc           #24                 // String -
      26: invokevirtual #25                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      29: ifeq          258
      32: aload_3
      33: ldc           #24                 // String -
      35: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      38: ifeq          44
      41: goto          258
      44: aload_3
      45: ldc           #27                 // String --
      47: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      50: ifeq          64
      53: aload_1
      54: iload_2
      55: invokeinterface #28,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
      60: pop
      61: goto          258
      64: aload_3
      65: iconst_1
      66: invokevirtual #29                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      69: astore        4
      71: aload_0
      72: getfield      #5                  // Field options:Ljava/util/Map;
      75: aload         4
      77: invokeinterface #12,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      82: ifeq          111
      85: aload_1
      86: iload_2
      87: invokeinterface #28,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
      92: pop
      93: aload_0
      94: getfield      #5                  // Field options:Ljava/util/Map;
      97: aload         4
      99: getstatic     #30                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
     102: invokeinterface #11,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     107: pop
     108: goto          255
     111: aload_0
     112: getfield      #6                  // Field optionsWithValue:Ljava/util/Map;
     115: aload         4
     117: invokeinterface #12,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     122: ifeq          233
     125: aload_1
     126: iload_2
     127: invokeinterface #28,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
     132: pop
     133: iload_2
     134: aload_1
     135: invokeinterface #21,  1           // InterfaceMethod java/util/List.size:()I
     140: if_icmpge     196
     143: aload_1
     144: invokeinterface #21,  1           // InterfaceMethod java/util/List.size:()I
     149: aload_0
     150: getfield      #8                  // Field minPar:I
     153: if_icmple     196
     156: aload_1
     157: iload_2
     158: invokeinterface #22,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     163: checkcast     #23                 // class java/lang/String
     166: ldc           #24                 // String -
     168: invokevirtual #25                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     171: ifne          196
     174: aload_1
     175: iload_2
     176: invokeinterface #22,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     181: checkcast     #23                 // class java/lang/String
     184: astore_3
     185: aload_1
     186: iload_2
     187: invokeinterface #28,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
     192: pop
     193: goto          199
     196: ldc           #31                 // String
     198: astore_3
     199: aload_3
     200: ldc           #24                 // String -
     202: invokevirtual #25                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     205: ifeq          217
     208: aload_3
     209: ldc           #24                 // String -
     211: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     214: ifeq          255
     217: aload_0
     218: getfield      #6                  // Field optionsWithValue:Ljava/util/Map;
     221: aload         4
     223: aload_3
     224: invokeinterface #11,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     229: pop
     230: goto          255
     233: aload_0
     234: getfield      #7                  // Field ignoreUnknownOpts:Z
     237: ifeq          246
     240: iinc          2, 1
     243: goto          255
     246: new           #32                 // class org/apache/hadoop/fs/shell/CommandFormat$UnknownOptionException
     249: dup
     250: aload_3
     251: invokespecial #33                 // Method org/apache/hadoop/fs/shell/CommandFormat$UnknownOptionException."<init>":(Ljava/lang/String;)V
     254: athrow
     255: goto          2
     258: aload_1
     259: invokeinterface #21,  1           // InterfaceMethod java/util/List.size:()I
     264: istore_3
     265: iload_3
     266: aload_0
     267: getfield      #8                  // Field minPar:I
     270: if_icmpge     286
     273: new           #34                 // class org/apache/hadoop/fs/shell/CommandFormat$NotEnoughArgumentsException
     276: dup
     277: aload_0
     278: getfield      #8                  // Field minPar:I
     281: iload_3
     282: invokespecial #35                 // Method org/apache/hadoop/fs/shell/CommandFormat$NotEnoughArgumentsException."<init>":(II)V
     285: athrow
     286: iload_3
     287: aload_0
     288: getfield      #9                  // Field maxPar:I
     291: if_icmple     307
     294: new           #36                 // class org/apache/hadoop/fs/shell/CommandFormat$TooManyArgumentsException
     297: dup
     298: aload_0
     299: getfield      #9                  // Field maxPar:I
     302: iload_3
     303: invokespecial #37                 // Method org/apache/hadoop/fs/shell/CommandFormat$TooManyArgumentsException."<init>":(II)V
     306: athrow
     307: return

  public boolean getOpt(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field options:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #12,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          32
      13: aload_0
      14: getfield      #5                  // Field options:Ljava/util/Map;
      17: aload_1
      18: invokeinterface #38,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #39                 // class java/lang/Boolean
      26: invokevirtual #40                 // Method java/lang/Boolean.booleanValue:()Z
      29: goto          33
      32: iconst_0
      33: ireturn

  public java.lang.String getOptValue(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field optionsWithValue:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #38,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #23                 // class java/lang/String
      13: areturn

  public java.util.Set<java.lang.String> getOpts();
    Code:
       0: new           #41                 // class java/util/HashSet
       3: dup
       4: invokespecial #42                 // Method java/util/HashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #5                  // Field options:Ljava/util/Map;
      12: invokeinterface #43,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      17: invokeinterface #44,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore_2
      23: aload_2
      24: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          73
      32: aload_2
      33: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #47                 // class java/util/Map$Entry
      41: astore_3
      42: aload_3
      43: invokeinterface #48,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      48: checkcast     #39                 // class java/lang/Boolean
      51: invokevirtual #40                 // Method java/lang/Boolean.booleanValue:()Z
      54: ifeq          70
      57: aload_1
      58: aload_3
      59: invokeinterface #49,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      64: invokeinterface #50,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      69: pop
      70: goto          23
      73: aload_1
      74: areturn
}
