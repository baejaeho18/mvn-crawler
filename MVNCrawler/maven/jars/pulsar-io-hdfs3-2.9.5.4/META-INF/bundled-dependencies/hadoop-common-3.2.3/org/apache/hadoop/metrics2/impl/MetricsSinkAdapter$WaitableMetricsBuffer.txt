Compiled from "MetricsSinkAdapter.java"
class org.apache.hadoop.metrics2.impl.MetricsSinkAdapter$WaitableMetricsBuffer extends org.apache.hadoop.metrics2.impl.MetricsBuffer {
  private final java.util.concurrent.Semaphore notificationSemaphore;

  public org.apache.hadoop.metrics2.impl.MetricsSinkAdapter$WaitableMetricsBuffer(org.apache.hadoop.metrics2.impl.MetricsBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/hadoop/metrics2/impl/MetricsBuffer."<init>":(Ljava/lang/Iterable;)V
       5: aload_0
       6: new           #2                  // class java/util/concurrent/Semaphore
       9: dup
      10: iconst_0
      11: invokespecial #3                  // Method java/util/concurrent/Semaphore."<init>":(I)V
      14: putfield      #4                  // Field notificationSemaphore:Ljava/util/concurrent/Semaphore;
      17: return

  public boolean waitTillNotified(long);
    Code:
       0: aload_0
       1: getfield      #4                  // Field notificationSemaphore:Ljava/util/concurrent/Semaphore;
       4: lload_1
       5: getstatic     #5                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       8: invokevirtual #6                  // Method java/util/concurrent/Semaphore.tryAcquire:(JLjava/util/concurrent/TimeUnit;)Z
      11: ireturn
      12: astore_3
      13: iconst_0
      14: ireturn
    Exception table:
       from    to  target type
           0    11    12   Class java/lang/InterruptedException

  public void notifyAnyWaiters();
    Code:
       0: aload_0
       1: getfield      #4                  // Field notificationSemaphore:Ljava/util/concurrent/Semaphore;
       4: invokevirtual #8                  // Method java/util/concurrent/Semaphore.release:()V
       7: return
}
