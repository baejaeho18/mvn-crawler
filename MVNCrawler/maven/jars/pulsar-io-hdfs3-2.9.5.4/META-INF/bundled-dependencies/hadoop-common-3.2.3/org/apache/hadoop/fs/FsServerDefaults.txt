Compiled from "FsServerDefaults.java"
public class org.apache.hadoop.fs.FsServerDefaults implements org.apache.hadoop.io.Writable {
  private long blockSize;

  private int bytesPerChecksum;

  private int writePacketSize;

  private short replication;

  private int fileBufferSize;

  private boolean encryptDataTransfer;

  private long trashInterval;

  private org.apache.hadoop.util.DataChecksum$Type checksumType;

  private java.lang.String keyProviderUri;

  private byte storagepolicyId;

  public org.apache.hadoop.fs.FsServerDefaults();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public org.apache.hadoop.fs.FsServerDefaults(long, int, int, short, int, boolean, long, org.apache.hadoop.util.DataChecksum$Type);
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: iload         4
       5: iload         5
       7: iload         6
       9: iload         7
      11: lload         8
      13: aload         10
      15: aconst_null
      16: iconst_0
      17: invokespecial #2                  // Method "<init>":(JIISIZJLorg/apache/hadoop/util/DataChecksum$Type;Ljava/lang/String;B)V
      20: return

  public org.apache.hadoop.fs.FsServerDefaults(long, int, int, short, int, boolean, long, org.apache.hadoop.util.DataChecksum$Type, java.lang.String);
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: iload         4
       5: iload         5
       7: iload         6
       9: iload         7
      11: lload         8
      13: aload         10
      15: aload         11
      17: iconst_0
      18: invokespecial #2                  // Method "<init>":(JIISIZJLorg/apache/hadoop/util/DataChecksum$Type;Ljava/lang/String;B)V
      21: return

  public org.apache.hadoop.fs.FsServerDefaults(long, int, int, short, int, boolean, long, org.apache.hadoop.util.DataChecksum$Type, java.lang.String, byte);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lload_1
       6: putfield      #3                  // Field blockSize:J
       9: aload_0
      10: iload_3
      11: putfield      #4                  // Field bytesPerChecksum:I
      14: aload_0
      15: iload         4
      17: putfield      #5                  // Field writePacketSize:I
      20: aload_0
      21: iload         5
      23: putfield      #6                  // Field replication:S
      26: aload_0
      27: iload         6
      29: putfield      #7                  // Field fileBufferSize:I
      32: aload_0
      33: iload         7
      35: putfield      #8                  // Field encryptDataTransfer:Z
      38: aload_0
      39: lload         8
      41: putfield      #9                  // Field trashInterval:J
      44: aload_0
      45: aload         10
      47: putfield      #10                 // Field checksumType:Lorg/apache/hadoop/util/DataChecksum$Type;
      50: aload_0
      51: aload         11
      53: putfield      #11                 // Field keyProviderUri:Ljava/lang/String;
      56: aload_0
      57: iload         12
      59: putfield      #12                 // Field storagepolicyId:B
      62: return

  public long getBlockSize();
    Code:
       0: aload_0
       1: getfield      #3                  // Field blockSize:J
       4: lreturn

  public int getBytesPerChecksum();
    Code:
       0: aload_0
       1: getfield      #4                  // Field bytesPerChecksum:I
       4: ireturn

  public int getWritePacketSize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field writePacketSize:I
       4: ireturn

  public short getReplication();
    Code:
       0: aload_0
       1: getfield      #6                  // Field replication:S
       4: ireturn

  public int getFileBufferSize();
    Code:
       0: aload_0
       1: getfield      #7                  // Field fileBufferSize:I
       4: ireturn

  public boolean getEncryptDataTransfer();
    Code:
       0: aload_0
       1: getfield      #8                  // Field encryptDataTransfer:Z
       4: ireturn

  public long getTrashInterval();
    Code:
       0: aload_0
       1: getfield      #9                  // Field trashInterval:J
       4: lreturn

  public org.apache.hadoop.util.DataChecksum$Type getChecksumType();
    Code:
       0: aload_0
       1: getfield      #10                 // Field checksumType:Lorg/apache/hadoop/util/DataChecksum$Type;
       4: areturn

  public java.lang.String getKeyProviderUri();
    Code:
       0: aload_0
       1: getfield      #11                 // Field keyProviderUri:Ljava/lang/String;
       4: areturn

  public byte getDefaultStoragePolicyId();
    Code:
       0: aload_0
       1: getfield      #12                 // Field storagepolicyId:B
       4: ireturn

  public void write(java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #3                  // Field blockSize:J
       5: invokeinterface #13,  3           // InterfaceMethod java/io/DataOutput.writeLong:(J)V
      10: aload_1
      11: aload_0
      12: getfield      #4                  // Field bytesPerChecksum:I
      15: invokeinterface #14,  2           // InterfaceMethod java/io/DataOutput.writeInt:(I)V
      20: aload_1
      21: aload_0
      22: getfield      #5                  // Field writePacketSize:I
      25: invokeinterface #14,  2           // InterfaceMethod java/io/DataOutput.writeInt:(I)V
      30: aload_1
      31: aload_0
      32: getfield      #6                  // Field replication:S
      35: invokeinterface #15,  2           // InterfaceMethod java/io/DataOutput.writeShort:(I)V
      40: aload_1
      41: aload_0
      42: getfield      #7                  // Field fileBufferSize:I
      45: invokeinterface #14,  2           // InterfaceMethod java/io/DataOutput.writeInt:(I)V
      50: aload_1
      51: aload_0
      52: getfield      #10                 // Field checksumType:Lorg/apache/hadoop/util/DataChecksum$Type;
      55: invokestatic  #16                 // Method org/apache/hadoop/io/WritableUtils.writeEnum:(Ljava/io/DataOutput;Ljava/lang/Enum;)V
      58: aload_1
      59: aload_0
      60: getfield      #12                 // Field storagepolicyId:B
      63: invokeinterface #17,  2           // InterfaceMethod java/io/DataOutput.writeByte:(I)V
      68: return

  public void readFields(java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #18,  1           // InterfaceMethod java/io/DataInput.readLong:()J
       7: putfield      #3                  // Field blockSize:J
      10: aload_0
      11: aload_1
      12: invokeinterface #19,  1           // InterfaceMethod java/io/DataInput.readInt:()I
      17: putfield      #4                  // Field bytesPerChecksum:I
      20: aload_0
      21: aload_1
      22: invokeinterface #19,  1           // InterfaceMethod java/io/DataInput.readInt:()I
      27: putfield      #5                  // Field writePacketSize:I
      30: aload_0
      31: aload_1
      32: invokeinterface #20,  1           // InterfaceMethod java/io/DataInput.readShort:()S
      37: putfield      #6                  // Field replication:S
      40: aload_0
      41: aload_1
      42: invokeinterface #19,  1           // InterfaceMethod java/io/DataInput.readInt:()I
      47: putfield      #7                  // Field fileBufferSize:I
      50: aload_0
      51: aload_1
      52: ldc           #21                 // class org/apache/hadoop/util/DataChecksum$Type
      54: invokestatic  #22                 // Method org/apache/hadoop/io/WritableUtils.readEnum:(Ljava/io/DataInput;Ljava/lang/Class;)Ljava/lang/Enum;
      57: checkcast     #21                 // class org/apache/hadoop/util/DataChecksum$Type
      60: putfield      #10                 // Field checksumType:Lorg/apache/hadoop/util/DataChecksum$Type;
      63: aload_0
      64: aload_1
      65: invokeinterface #23,  1           // InterfaceMethod java/io/DataInput.readByte:()B
      70: putfield      #12                 // Field storagepolicyId:B
      73: return

  static {};
    Code:
       0: ldc           #24                 // class org/apache/hadoop/fs/FsServerDefaults
       2: new           #25                 // class org/apache/hadoop/fs/FsServerDefaults$1
       5: dup
       6: invokespecial #26                 // Method org/apache/hadoop/fs/FsServerDefaults$1."<init>":()V
       9: invokestatic  #27                 // Method org/apache/hadoop/io/WritableFactories.setFactory:(Ljava/lang/Class;Lorg/apache/hadoop/io/WritableFactory;)V
      12: return
}
