Compiled from "ElasticByteBufferPool.java"
public final class org.apache.hadoop.io.ElasticByteBufferPool implements org.apache.hadoop.io.ByteBufferPool {
  private final java.util.TreeMap<org.apache.hadoop.io.ElasticByteBufferPool$Key, java.nio.ByteBuffer> buffers;

  private final java.util.TreeMap<org.apache.hadoop.io.ElasticByteBufferPool$Key, java.nio.ByteBuffer> directBuffers;

  public org.apache.hadoop.io.ElasticByteBufferPool();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/TreeMap
       8: dup
       9: invokespecial #3                  // Method java/util/TreeMap."<init>":()V
      12: putfield      #4                  // Field buffers:Ljava/util/TreeMap;
      15: aload_0
      16: new           #2                  // class java/util/TreeMap
      19: dup
      20: invokespecial #3                  // Method java/util/TreeMap."<init>":()V
      23: putfield      #5                  // Field directBuffers:Ljava/util/TreeMap;
      26: return

  private final java.util.TreeMap<org.apache.hadoop.io.ElasticByteBufferPool$Key, java.nio.ByteBuffer> getBufferTree(boolean);
    Code:
       0: iload_1
       1: ifeq          11
       4: aload_0
       5: getfield      #5                  // Field directBuffers:Ljava/util/TreeMap;
       8: goto          15
      11: aload_0
      12: getfield      #4                  // Field buffers:Ljava/util/TreeMap;
      15: areturn

  public synchronized java.nio.ByteBuffer getBuffer(boolean, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #6                  // Method getBufferTree:(Z)Ljava/util/TreeMap;
       5: astore_3
       6: aload_3
       7: new           #7                  // class org/apache/hadoop/io/ElasticByteBufferPool$Key
      10: dup
      11: iload_2
      12: lconst_0
      13: invokespecial #8                  // Method org/apache/hadoop/io/ElasticByteBufferPool$Key."<init>":(IJ)V
      16: invokevirtual #9                  // Method java/util/TreeMap.ceilingEntry:(Ljava/lang/Object;)Ljava/util/Map$Entry;
      19: astore        4
      21: aload         4
      23: ifnonnull     42
      26: iload_1
      27: ifeq          37
      30: iload_2
      31: invokestatic  #10                 // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
      34: goto          41
      37: iload_2
      38: invokestatic  #11                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      41: areturn
      42: aload_3
      43: aload         4
      45: invokeinterface #12,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      50: invokevirtual #13                 // Method java/util/TreeMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      53: pop
      54: aload         4
      56: invokeinterface #14,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      61: checkcast     #15                 // class java/nio/ByteBuffer
      64: invokevirtual #16                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      67: pop
      68: aload         4
      70: invokeinterface #14,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      75: checkcast     #15                 // class java/nio/ByteBuffer
      78: areturn

  public synchronized void putBuffer(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: invokevirtual #16                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
       4: pop
       5: aload_0
       6: aload_1
       7: invokevirtual #17                 // Method java/nio/ByteBuffer.isDirect:()Z
      10: invokespecial #6                  // Method getBufferTree:(Z)Ljava/util/TreeMap;
      13: astore_2
      14: new           #7                  // class org/apache/hadoop/io/ElasticByteBufferPool$Key
      17: dup
      18: aload_1
      19: invokevirtual #18                 // Method java/nio/ByteBuffer.capacity:()I
      22: invokestatic  #19                 // Method java/lang/System.nanoTime:()J
      25: invokespecial #8                  // Method org/apache/hadoop/io/ElasticByteBufferPool$Key."<init>":(IJ)V
      28: astore_3
      29: aload_2
      30: aload_3
      31: invokevirtual #20                 // Method java/util/TreeMap.containsKey:(Ljava/lang/Object;)Z
      34: ifne          45
      37: aload_2
      38: aload_3
      39: aload_1
      40: invokevirtual #21                 // Method java/util/TreeMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      43: pop
      44: return
      45: goto          14

  public int size(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #6                  // Method getBufferTree:(Z)Ljava/util/TreeMap;
       5: invokevirtual #22                 // Method java/util/TreeMap.size:()I
       8: ireturn
}
