Compiled from "Progress.java"
public class org.apache.hadoop.util.Progress {
  private static final org.slf4j.Logger LOG;

  private java.lang.String status;

  private float progress;

  private int currentPhase;

  private java.util.ArrayList<org.apache.hadoop.util.Progress> phases;

  private org.apache.hadoop.util.Progress parent;

  private boolean fixedWeightageForAllPhases;

  private float progressPerPhase;

  private java.util.ArrayList<java.lang.Float> progressWeightagesForPhases;

  public org.apache.hadoop.util.Progress();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #2                  // String
       7: putfield      #3                  // Field status:Ljava/lang/String;
      10: aload_0
      11: new           #4                  // class java/util/ArrayList
      14: dup
      15: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      18: putfield      #6                  // Field phases:Ljava/util/ArrayList;
      21: aload_0
      22: iconst_0
      23: putfield      #7                  // Field fixedWeightageForAllPhases:Z
      26: aload_0
      27: fconst_0
      28: putfield      #8                  // Field progressPerPhase:F
      31: aload_0
      32: new           #4                  // class java/util/ArrayList
      35: dup
      36: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      39: putfield      #9                  // Field progressWeightagesForPhases:Ljava/util/ArrayList;
      42: return

  public org.apache.hadoop.util.Progress addPhase(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method addPhase:()Lorg/apache/hadoop/util/Progress;
       4: astore_2
       5: aload_2
       6: aload_1
       7: invokevirtual #11                 // Method setStatus:(Ljava/lang/String;)V
      10: aload_2
      11: areturn

  public synchronized org.apache.hadoop.util.Progress addPhase();
    Code:
       0: aload_0
       1: invokespecial #12                 // Method addNewPhase:()Lorg/apache/hadoop/util/Progress;
       4: astore_1
       5: aload_0
       6: fconst_1
       7: aload_0
       8: getfield      #6                  // Field phases:Ljava/util/ArrayList;
      11: invokevirtual #13                 // Method java/util/ArrayList.size:()I
      14: i2f
      15: fdiv
      16: putfield      #8                  // Field progressPerPhase:F
      19: aload_0
      20: iconst_1
      21: putfield      #7                  // Field fixedWeightageForAllPhases:Z
      24: aload_1
      25: areturn

  private synchronized org.apache.hadoop.util.Progress addNewPhase();
    Code:
       0: new           #14                 // class org/apache/hadoop/util/Progress
       3: dup
       4: invokespecial #15                 // Method "<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #6                  // Field phases:Ljava/util/ArrayList;
      12: aload_1
      13: invokevirtual #16                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      16: pop
      17: aload_1
      18: aload_0
      19: invokevirtual #17                 // Method setParent:(Lorg/apache/hadoop/util/Progress;)V
      22: aload_1
      23: areturn

  public org.apache.hadoop.util.Progress addPhase(java.lang.String, float);
    Code:
       0: aload_0
       1: fload_2
       2: invokevirtual #18                 // Method addPhase:(F)Lorg/apache/hadoop/util/Progress;
       5: astore_3
       6: aload_3
       7: aload_1
       8: invokevirtual #11                 // Method setStatus:(Ljava/lang/String;)V
      11: aload_3
      12: areturn

  public synchronized org.apache.hadoop.util.Progress addPhase(float);
    Code:
       0: new           #14                 // class org/apache/hadoop/util/Progress
       3: dup
       4: invokespecial #15                 // Method "<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #9                  // Field progressWeightagesForPhases:Ljava/util/ArrayList;
      12: fload_1
      13: invokestatic  #19                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      16: invokevirtual #16                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      19: pop
      20: aload_0
      21: getfield      #6                  // Field phases:Ljava/util/ArrayList;
      24: aload_2
      25: invokevirtual #16                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      28: pop
      29: aload_2
      30: aload_0
      31: invokevirtual #17                 // Method setParent:(Lorg/apache/hadoop/util/Progress;)V
      34: fconst_0
      35: fstore_3
      36: iconst_0
      37: istore        4
      39: iload         4
      41: aload_0
      42: getfield      #6                  // Field phases:Ljava/util/ArrayList;
      45: invokevirtual #13                 // Method java/util/ArrayList.size:()I
      48: if_icmpge     75
      51: fload_3
      52: aload_0
      53: getfield      #9                  // Field progressWeightagesForPhases:Ljava/util/ArrayList;
      56: iload         4
      58: invokevirtual #20                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      61: checkcast     #21                 // class java/lang/Float
      64: invokevirtual #22                 // Method java/lang/Float.floatValue:()F
      67: fadd
      68: fstore_3
      69: iinc          4, 1
      72: goto          39
      75: fload_3
      76: f2d
      77: dconst_1
      78: dcmpl
      79: ifle          109
      82: getstatic     #23                 // Field LOG:Lorg/slf4j/Logger;
      85: new           #24                 // class java/lang/StringBuilder
      88: dup
      89: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      92: ldc           #26                 // String Sum of weightages can not be more than 1.0; But sum =
      94: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: fload_3
      98: invokevirtual #28                 // Method java/lang/StringBuilder.append:(F)Ljava/lang/StringBuilder;
     101: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     104: invokeinterface #30,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     109: aload_2
     110: areturn

  public synchronized void addPhases(int);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: iload_1
       4: if_icmpge     18
       7: aload_0
       8: invokespecial #12                 // Method addNewPhase:()Lorg/apache/hadoop/util/Progress;
      11: pop
      12: iinc          2, 1
      15: goto          2
      18: aload_0
      19: fconst_1
      20: aload_0
      21: getfield      #6                  // Field phases:Ljava/util/ArrayList;
      24: invokevirtual #13                 // Method java/util/ArrayList.size:()I
      27: i2f
      28: fdiv
      29: putfield      #8                  // Field progressPerPhase:F
      32: aload_0
      33: iconst_1
      34: putfield      #7                  // Field fixedWeightageForAllPhases:Z
      37: return

  float getProgressWeightage(int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field fixedWeightageForAllPhases:Z
       4: ifeq          12
       7: aload_0
       8: getfield      #8                  // Field progressPerPhase:F
      11: freturn
      12: aload_0
      13: getfield      #9                  // Field progressWeightagesForPhases:Ljava/util/ArrayList;
      16: iload_1
      17: invokevirtual #20                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      20: checkcast     #21                 // class java/lang/Float
      23: invokevirtual #22                 // Method java/lang/Float.floatValue:()F
      26: freturn

  synchronized org.apache.hadoop.util.Progress getParent();
    Code:
       0: aload_0
       1: getfield      #31                 // Field parent:Lorg/apache/hadoop/util/Progress;
       4: areturn

  synchronized void setParent(org.apache.hadoop.util.Progress);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #31                 // Field parent:Lorg/apache/hadoop/util/Progress;
       5: return

  public synchronized void startNextPhase();
    Code:
       0: aload_0
       1: dup
       2: getfield      #32                 // Field currentPhase:I
       5: iconst_1
       6: iadd
       7: putfield      #32                 // Field currentPhase:I
      10: return

  public synchronized org.apache.hadoop.util.Progress phase();
    Code:
       0: aload_0
       1: getfield      #6                  // Field phases:Ljava/util/ArrayList;
       4: aload_0
       5: getfield      #32                 // Field currentPhase:I
       8: invokevirtual #20                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      11: checkcast     #14                 // class org/apache/hadoop/util/Progress
      14: areturn

  public void complete();
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: fconst_1
       6: putfield      #33                 // Field progress:F
       9: aload_0
      10: getfield      #31                 // Field parent:Lorg/apache/hadoop/util/Progress;
      13: astore_1
      14: aload_2
      15: monitorexit
      16: goto          24
      19: astore_3
      20: aload_2
      21: monitorexit
      22: aload_3
      23: athrow
      24: aload_1
      25: ifnull        32
      28: aload_1
      29: invokevirtual #34                 // Method startNextPhase:()V
      32: return
    Exception table:
       from    to  target type
           4    16    19   any
          19    22    19   any

  public synchronized void set(float);
    Code:
       0: fload_1
       1: invokestatic  #35                 // Method java/lang/Float.isNaN:(F)Z
       4: ifeq          22
       7: fconst_0
       8: fstore_1
       9: getstatic     #23                 // Field LOG:Lorg/slf4j/Logger;
      12: ldc           #36                 // String Illegal progress value found, progress is Float.NaN. Progress will be changed to 0
      14: invokeinterface #37,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      19: goto          105
      22: fload_1
      23: ldc           #38                 // float -Infinityf
      25: fcmpl
      26: ifne          44
      29: fconst_0
      30: fstore_1
      31: getstatic     #23                 // Field LOG:Lorg/slf4j/Logger;
      34: ldc           #39                 // String Illegal progress value found, progress is Float.NEGATIVE_INFINITY. Progress will be changed to 0
      36: invokeinterface #37,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      41: goto          105
      44: fload_1
      45: fconst_0
      46: fcmpg
      47: ifge          65
      50: fconst_0
      51: fstore_1
      52: getstatic     #23                 // Field LOG:Lorg/slf4j/Logger;
      55: ldc           #40                 // String Illegal progress value found, progress is less than 0. Progress will be changed to 0
      57: invokeinterface #37,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      62: goto          105
      65: fload_1
      66: fconst_1
      67: fcmpl
      68: ifle          86
      71: fconst_1
      72: fstore_1
      73: getstatic     #23                 // Field LOG:Lorg/slf4j/Logger;
      76: ldc           #41                 // String Illegal progress value found, progress is larger than 1. Progress will be changed to 1
      78: invokeinterface #37,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      83: goto          105
      86: fload_1
      87: ldc           #42                 // float Infinityf
      89: fcmpl
      90: ifne          105
      93: fconst_1
      94: fstore_1
      95: getstatic     #23                 // Field LOG:Lorg/slf4j/Logger;
      98: ldc           #43                 // String Illegal progress value found, progress is Float.POSITIVE_INFINITY. Progress will be changed to 1
     100: invokeinterface #37,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     105: aload_0
     106: fload_1
     107: putfield      #33                 // Field progress:F
     110: return

  public synchronized float get();
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: invokevirtual #44                 // Method getParent:()Lorg/apache/hadoop/util/Progress;
       6: ifnull        17
       9: aload_0
      10: getfield      #31                 // Field parent:Lorg/apache/hadoop/util/Progress;
      13: astore_1
      14: goto          2
      17: aload_1
      18: invokespecial #45                 // Method getInternal:()F
      21: freturn

  public synchronized float getProgress();
    Code:
       0: aload_0
       1: invokespecial #45                 // Method getInternal:()F
       4: freturn

  private synchronized float getInternal();
    Code:
       0: aload_0
       1: getfield      #6                  // Field phases:Ljava/util/ArrayList;
       4: invokevirtual #13                 // Method java/util/ArrayList.size:()I
       7: istore_1
       8: iload_1
       9: ifeq          102
      12: fconst_0
      13: fstore_2
      14: fconst_0
      15: fstore_3
      16: aload_0
      17: getfield      #32                 // Field currentPhase:I
      20: iload_1
      21: if_icmpge     43
      24: aload_0
      25: invokevirtual #46                 // Method phase:()Lorg/apache/hadoop/util/Progress;
      28: invokespecial #45                 // Method getInternal:()F
      31: fstore_2
      32: aload_0
      33: aload_0
      34: getfield      #32                 // Field currentPhase:I
      37: invokevirtual #47                 // Method getProgressWeightage:(I)F
      40: fload_2
      41: fmul
      42: fstore_3
      43: fconst_0
      44: fstore        4
      46: aload_0
      47: getfield      #7                  // Field fixedWeightageForAllPhases:Z
      50: ifeq          68
      53: aload_0
      54: getfield      #8                  // Field progressPerPhase:F
      57: aload_0
      58: getfield      #32                 // Field currentPhase:I
      61: i2f
      62: fmul
      63: fstore        4
      65: goto          97
      68: iconst_0
      69: istore        5
      71: iload         5
      73: aload_0
      74: getfield      #32                 // Field currentPhase:I
      77: if_icmpge     97
      80: fload         4
      82: aload_0
      83: iload         5
      85: invokevirtual #47                 // Method getProgressWeightage:(I)F
      88: fadd
      89: fstore        4
      91: iinc          5, 1
      94: goto          71
      97: fload         4
      99: fload_3
     100: fadd
     101: freturn
     102: aload_0
     103: getfield      #33                 // Field progress:F
     106: freturn

  public synchronized void setStatus(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field status:Ljava/lang/String;
       5: return

  public java.lang.String toString();
    Code:
       0: new           #24                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokespecial #48                 // Method toString:(Ljava/lang/StringBuilder;)V
      13: aload_1
      14: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      17: areturn

  private synchronized void toString(java.lang.StringBuilder);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #3                  // Field status:Ljava/lang/String;
       5: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       8: pop
       9: aload_0
      10: getfield      #6                  // Field phases:Ljava/util/ArrayList;
      13: invokevirtual #13                 // Method java/util/ArrayList.size:()I
      16: ifeq          48
      19: aload_0
      20: getfield      #32                 // Field currentPhase:I
      23: aload_0
      24: getfield      #6                  // Field phases:Ljava/util/ArrayList;
      27: invokevirtual #13                 // Method java/util/ArrayList.size:()I
      30: if_icmpge     48
      33: aload_1
      34: ldc           #49                 // String  >
      36: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: pop
      40: aload_0
      41: invokevirtual #46                 // Method phase:()Lorg/apache/hadoop/util/Progress;
      44: aload_1
      45: invokespecial #48                 // Method toString:(Ljava/lang/StringBuilder;)V
      48: return

  static {};
    Code:
       0: ldc           #14                 // class org/apache/hadoop/util/Progress
       2: invokestatic  #50                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #23                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
