Compiled from "CloseableReferenceCount.java"
public class org.apache.hadoop.util.CloseableReferenceCount {
  private static final int STATUS_CLOSED_MASK;

  private final java.util.concurrent.atomic.AtomicInteger status;

  public org.apache.hadoop.util.CloseableReferenceCount();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
       8: dup
       9: iconst_0
      10: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      13: putfield      #4                  // Field status:Ljava/util/concurrent/atomic/AtomicInteger;
      16: return

  public void reference() throws java.nio.channels.ClosedChannelException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field status:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #5                  // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: istore_1
       8: iload_1
       9: ldc           #7                  // int 1073741824
      11: iand
      12: ifeq          31
      15: aload_0
      16: getfield      #4                  // Field status:Ljava/util/concurrent/atomic/AtomicInteger;
      19: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
      22: pop
      23: new           #9                  // class java/nio/channels/ClosedChannelException
      26: dup
      27: invokespecial #10                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      30: athrow
      31: return

  public boolean unreference();
    Code:
       0: aload_0
       1: getfield      #4                  // Field status:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
       7: istore_1
       8: iload_1
       9: iconst_m1
      10: if_icmpeq     17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ldc           #11                 // String called unreference when the reference count was already at 0.
      20: invokestatic  #12                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      23: iload_1
      24: ldc           #7                  // int 1073741824
      26: if_icmpne     33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: ireturn

  public void unreferenceCheckClosed() throws java.nio.channels.ClosedChannelException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field status:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
       7: istore_1
       8: iload_1
       9: ldc           #7                  // int 1073741824
      11: iand
      12: ifeq          23
      15: new           #13                 // class java/nio/channels/AsynchronousCloseException
      18: dup
      19: invokespecial #14                 // Method java/nio/channels/AsynchronousCloseException."<init>":()V
      22: athrow
      23: return

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #4                  // Field status:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ldc           #7                  // int 1073741824
       9: iand
      10: ifne          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  public int setClosed() throws java.nio.channels.ClosedChannelException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field status:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: istore_1
       8: iload_1
       9: ldc           #7                  // int 1073741824
      11: iand
      12: ifeq          23
      15: new           #9                  // class java/nio/channels/ClosedChannelException
      18: dup
      19: invokespecial #10                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      22: athrow
      23: aload_0
      24: getfield      #4                  // Field status:Ljava/util/concurrent/atomic/AtomicInteger;
      27: iload_1
      28: iload_1
      29: ldc           #7                  // int 1073741824
      31: ior
      32: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicInteger.compareAndSet:(II)Z
      35: ifeq          43
      38: iload_1
      39: ldc           #17                 // int -1073741825
      41: iand
      42: ireturn
      43: goto          0

  public int getReferenceCount();
    Code:
       0: aload_0
       1: getfield      #4                  // Field status:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ldc           #17                 // int -1073741825
       9: iand
      10: ireturn
}
