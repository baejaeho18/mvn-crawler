Compiled from "Chunk.java"
public class org.apache.hadoop.io.file.tfile.Chunk$ChunkEncoder extends java.io.OutputStream {
  private java.io.DataOutputStream out;

  private byte[] buf;

  private int count;

  public org.apache.hadoop.io.file.tfile.Chunk$ChunkEncoder(java.io.DataOutputStream, byte[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/OutputStream."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field out:Ljava/io/DataOutputStream;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field buf:[B
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field count:I
      19: return

  private void writeChunk(byte[], int, int, boolean) throws java.io.IOException;
    Code:
       0: iload         4
       2: ifeq          30
       5: aload_0
       6: getfield      #2                  // Field out:Ljava/io/DataOutputStream;
       9: iload_3
      10: invokestatic  #5                  // Method org/apache/hadoop/io/file/tfile/Utils.writeVInt:(Ljava/io/DataOutput;I)V
      13: iload_3
      14: ifle          53
      17: aload_0
      18: getfield      #2                  // Field out:Ljava/io/DataOutputStream;
      21: aload_1
      22: iload_2
      23: iload_3
      24: invokevirtual #6                  // Method java/io/DataOutputStream.write:([BII)V
      27: goto          53
      30: iload_3
      31: ifle          53
      34: aload_0
      35: getfield      #2                  // Field out:Ljava/io/DataOutputStream;
      38: iload_3
      39: ineg
      40: invokestatic  #5                  // Method org/apache/hadoop/io/file/tfile/Utils.writeVInt:(Ljava/io/DataOutput;I)V
      43: aload_0
      44: getfield      #2                  // Field out:Ljava/io/DataOutputStream;
      47: aload_1
      48: iload_2
      49: iload_3
      50: invokevirtual #6                  // Method java/io/DataOutputStream.write:([BII)V
      53: return

  private void writeBufData(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field count:I
       4: iload_3
       5: iadd
       6: ifle          54
       9: aload_0
      10: getfield      #2                  // Field out:Ljava/io/DataOutputStream;
      13: aload_0
      14: getfield      #4                  // Field count:I
      17: iload_3
      18: iadd
      19: ineg
      20: invokestatic  #5                  // Method org/apache/hadoop/io/file/tfile/Utils.writeVInt:(Ljava/io/DataOutput;I)V
      23: aload_0
      24: getfield      #2                  // Field out:Ljava/io/DataOutputStream;
      27: aload_0
      28: getfield      #3                  // Field buf:[B
      31: iconst_0
      32: aload_0
      33: getfield      #4                  // Field count:I
      36: invokevirtual #6                  // Method java/io/DataOutputStream.write:([BII)V
      39: aload_0
      40: iconst_0
      41: putfield      #4                  // Field count:I
      44: aload_0
      45: getfield      #2                  // Field out:Ljava/io/DataOutputStream;
      48: aload_1
      49: iload_2
      50: iload_3
      51: invokevirtual #6                  // Method java/io/DataOutputStream.write:([BII)V
      54: return

  private void flushBuffer() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field count:I
       4: ifle          26
       7: aload_0
       8: aload_0
       9: getfield      #3                  // Field buf:[B
      12: iconst_0
      13: aload_0
      14: getfield      #4                  // Field count:I
      17: iconst_0
      18: invokespecial #7                  // Method writeChunk:([BIIZ)V
      21: aload_0
      22: iconst_0
      23: putfield      #4                  // Field count:I
      26: return

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field count:I
       4: aload_0
       5: getfield      #3                  // Field buf:[B
       8: arraylength
       9: if_icmplt     16
      12: aload_0
      13: invokespecial #8                  // Method flushBuffer:()V
      16: aload_0
      17: getfield      #3                  // Field buf:[B
      20: aload_0
      21: dup
      22: getfield      #4                  // Field count:I
      25: dup_x1
      26: iconst_1
      27: iadd
      28: putfield      #4                  // Field count:I
      31: iload_1
      32: i2b
      33: bastore
      34: return

  public void write(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #9                  // Method write:([BII)V
       8: return

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: aload_0
       2: getfield      #4                  // Field count:I
       5: iadd
       6: aload_0
       7: getfield      #3                  // Field buf:[B
      10: arraylength
      11: if_icmplt     22
      14: aload_0
      15: aload_1
      16: iload_2
      17: iload_3
      18: invokespecial #10                 // Method writeBufData:([BII)V
      21: return
      22: aload_1
      23: iload_2
      24: aload_0
      25: getfield      #3                  // Field buf:[B
      28: aload_0
      29: getfield      #4                  // Field count:I
      32: iload_3
      33: invokestatic  #11                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      36: aload_0
      37: dup
      38: getfield      #4                  // Field count:I
      41: iload_3
      42: iadd
      43: putfield      #4                  // Field count:I
      46: return

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #8                  // Method flushBuffer:()V
       4: aload_0
       5: getfield      #2                  // Field out:Ljava/io/DataOutputStream;
       8: invokevirtual #12                 // Method java/io/DataOutputStream.flush:()V
      11: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field buf:[B
       4: ifnull        47
       7: aload_0
       8: aload_0
       9: getfield      #3                  // Field buf:[B
      12: iconst_0
      13: aload_0
      14: getfield      #4                  // Field count:I
      17: iconst_1
      18: invokespecial #7                  // Method writeChunk:([BIIZ)V
      21: aload_0
      22: aconst_null
      23: putfield      #3                  // Field buf:[B
      26: aload_0
      27: aconst_null
      28: putfield      #2                  // Field out:Ljava/io/DataOutputStream;
      31: goto          47
      34: astore_1
      35: aload_0
      36: aconst_null
      37: putfield      #3                  // Field buf:[B
      40: aload_0
      41: aconst_null
      42: putfield      #2                  // Field out:Ljava/io/DataOutputStream;
      45: aload_1
      46: athrow
      47: return
    Exception table:
       from    to  target type
           7    21    34   any
}
