Compiled from "MetricsCache.java"
public class org.apache.hadoop.metrics2.util.MetricsCache {
  static final org.slf4j.Logger LOG;

  static final int MAX_RECS_PER_NAME_DEFAULT;

  private final java.util.Map<java.lang.String, org.apache.hadoop.metrics2.util.MetricsCache$RecordCache> map;

  private final int maxRecsPerName;

  public org.apache.hadoop.metrics2.util.MetricsCache();
    Code:
       0: aload_0
       1: sipush        1000
       4: invokespecial #3                  // Method "<init>":(I)V
       7: return

  public org.apache.hadoop.metrics2.util.MetricsCache(int);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #5                  // Method com/google/common/collect/Maps.newHashMap:()Ljava/util/HashMap;
       8: putfield      #6                  // Field map:Ljava/util/Map;
      11: aload_0
      12: iload_1
      13: putfield      #1                  // Field maxRecsPerName:I
      16: return

  public org.apache.hadoop.metrics2.util.MetricsCache$Record update(org.apache.hadoop.metrics2.MetricsRecord, boolean);
    Code:
       0: aload_1
       1: invokeinterface #7,  1            // InterfaceMethod org/apache/hadoop/metrics2/MetricsRecord.name:()Ljava/lang/String;
       6: astore_3
       7: aload_0
       8: getfield      #6                  // Field map:Ljava/util/Map;
      11: aload_3
      12: invokeinterface #8,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #9                  // class org/apache/hadoop/metrics2/util/MetricsCache$RecordCache
      20: astore        4
      22: aload         4
      24: ifnonnull     50
      27: new           #9                  // class org/apache/hadoop/metrics2/util/MetricsCache$RecordCache
      30: dup
      31: aload_0
      32: invokespecial #10                 // Method org/apache/hadoop/metrics2/util/MetricsCache$RecordCache."<init>":(Lorg/apache/hadoop/metrics2/util/MetricsCache;)V
      35: astore        4
      37: aload_0
      38: getfield      #6                  // Field map:Ljava/util/Map;
      41: aload_3
      42: aload         4
      44: invokeinterface #11,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      49: pop
      50: aload_1
      51: invokeinterface #12,  1           // InterfaceMethod org/apache/hadoop/metrics2/MetricsRecord.tags:()Ljava/util/Collection;
      56: astore        5
      58: aload         4
      60: aload         5
      62: invokevirtual #13                 // Method org/apache/hadoop/metrics2/util/MetricsCache$RecordCache.get:(Ljava/lang/Object;)Ljava/lang/Object;
      65: checkcast     #14                 // class org/apache/hadoop/metrics2/util/MetricsCache$Record
      68: astore        6
      70: aload         6
      72: ifnonnull     94
      75: new           #14                 // class org/apache/hadoop/metrics2/util/MetricsCache$Record
      78: dup
      79: invokespecial #15                 // Method org/apache/hadoop/metrics2/util/MetricsCache$Record."<init>":()V
      82: astore        6
      84: aload         4
      86: aload         5
      88: aload         6
      90: invokevirtual #16                 // Method org/apache/hadoop/metrics2/util/MetricsCache$RecordCache.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      93: pop
      94: aload_1
      95: invokeinterface #17,  1           // InterfaceMethod org/apache/hadoop/metrics2/MetricsRecord.metrics:()Ljava/lang/Iterable;
     100: invokeinterface #18,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
     105: astore        7
     107: aload         7
     109: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     114: ifeq          150
     117: aload         7
     119: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     124: checkcast     #21                 // class org/apache/hadoop/metrics2/AbstractMetric
     127: astore        8
     129: aload         6
     131: getfield      #22                 // Field org/apache/hadoop/metrics2/util/MetricsCache$Record.metrics:Ljava/util/Map;
     134: aload         8
     136: invokevirtual #23                 // Method org/apache/hadoop/metrics2/AbstractMetric.name:()Ljava/lang/String;
     139: aload         8
     141: invokeinterface #11,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     146: pop
     147: goto          107
     150: iload_2
     151: ifeq          213
     154: aload_1
     155: invokeinterface #12,  1           // InterfaceMethod org/apache/hadoop/metrics2/MetricsRecord.tags:()Ljava/util/Collection;
     160: invokeinterface #24,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     165: astore        7
     167: aload         7
     169: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     174: ifeq          213
     177: aload         7
     179: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     184: checkcast     #25                 // class org/apache/hadoop/metrics2/MetricsTag
     187: astore        8
     189: aload         6
     191: getfield      #26                 // Field org/apache/hadoop/metrics2/util/MetricsCache$Record.tags:Ljava/util/Map;
     194: aload         8
     196: invokevirtual #27                 // Method org/apache/hadoop/metrics2/MetricsTag.name:()Ljava/lang/String;
     199: aload         8
     201: invokevirtual #28                 // Method org/apache/hadoop/metrics2/MetricsTag.value:()Ljava/lang/String;
     204: invokeinterface #11,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     209: pop
     210: goto          167
     213: aload         6
     215: areturn

  public org.apache.hadoop.metrics2.util.MetricsCache$Record update(org.apache.hadoop.metrics2.MetricsRecord);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokevirtual #29                 // Method update:(Lorg/apache/hadoop/metrics2/MetricsRecord;Z)Lorg/apache/hadoop/metrics2/util/MetricsCache$Record;
       6: areturn

  public org.apache.hadoop.metrics2.util.MetricsCache$Record get(java.lang.String, java.util.Collection<org.apache.hadoop.metrics2.MetricsTag>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field map:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #8,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #9                  // class org/apache/hadoop/metrics2/util/MetricsCache$RecordCache
      13: astore_3
      14: aload_3
      15: ifnonnull     20
      18: aconst_null
      19: areturn
      20: aload_3
      21: aload_2
      22: invokevirtual #13                 // Method org/apache/hadoop/metrics2/util/MetricsCache$RecordCache.get:(Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #14                 // class org/apache/hadoop/metrics2/util/MetricsCache$Record
      28: areturn

  static int access$000(org.apache.hadoop.metrics2.util.MetricsCache);
    Code:
       0: aload_0
       1: getfield      #1                  // Field maxRecsPerName:I
       4: ireturn

  static {};
    Code:
       0: ldc           #2                  // class org/apache/hadoop/metrics2/util/MetricsCache
       2: invokestatic  #30                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #31                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
