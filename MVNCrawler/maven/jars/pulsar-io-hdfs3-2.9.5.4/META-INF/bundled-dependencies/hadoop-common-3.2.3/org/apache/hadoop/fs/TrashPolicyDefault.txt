Compiled from "TrashPolicyDefault.java"
public class org.apache.hadoop.fs.TrashPolicyDefault extends org.apache.hadoop.fs.TrashPolicy {
  private static final org.slf4j.Logger LOG;

  private static final org.apache.hadoop.fs.Path CURRENT;

  private static final org.apache.hadoop.fs.permission.FsPermission PERMISSION;

  private static final java.text.DateFormat CHECKPOINT;

  private static final java.text.DateFormat OLD_CHECKPOINT;

  private static final int MSECS_PER_MINUTE;

  private long emptierInterval;

  public org.apache.hadoop.fs.TrashPolicyDefault();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method org/apache/hadoop/fs/TrashPolicy."<init>":()V
       4: return

  private org.apache.hadoop.fs.TrashPolicyDefault(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method org/apache/hadoop/fs/TrashPolicy."<init>":()V
       4: aload_0
       5: aload_2
       6: aload_1
       7: invokevirtual #7                  // Method initialize:(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;)V
      10: return

  public void initialize(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       5: aload_0
       6: aload_1
       7: ldc           #9                  // String fs.trash.interval
       9: fconst_0
      10: invokevirtual #10                 // Method org/apache/hadoop/conf/Configuration.getFloat:(Ljava/lang/String;F)F
      13: ldc           #12                 // float 60000.0f
      15: fmul
      16: f2l
      17: putfield      #13                 // Field deletionInterval:J
      20: aload_0
      21: aload_1
      22: ldc           #14                 // String fs.trash.checkpoint.interval
      24: fconst_0
      25: invokevirtual #10                 // Method org/apache/hadoop/conf/Configuration.getFloat:(Ljava/lang/String;F)F
      28: ldc           #12                 // float 60000.0f
      30: fmul
      31: f2l
      32: putfield      #15                 // Field emptierInterval:J
      35: return

  public void initialize(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.FileSystem);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       5: aload_0
       6: aload_1
       7: ldc           #9                  // String fs.trash.interval
       9: fconst_0
      10: invokevirtual #10                 // Method org/apache/hadoop/conf/Configuration.getFloat:(Ljava/lang/String;F)F
      13: ldc           #12                 // float 60000.0f
      15: fmul
      16: f2l
      17: putfield      #13                 // Field deletionInterval:J
      20: aload_0
      21: aload_1
      22: ldc           #14                 // String fs.trash.checkpoint.interval
      24: fconst_0
      25: invokevirtual #10                 // Method org/apache/hadoop/conf/Configuration.getFloat:(Ljava/lang/String;F)F
      28: ldc           #12                 // float 60000.0f
      30: fmul
      31: f2l
      32: putfield      #15                 // Field emptierInterval:J
      35: aload_0
      36: getfield      #13                 // Field deletionInterval:J
      39: lconst_0
      40: lcmp
      41: ifge          66
      44: getstatic     #5                  // Field LOG:Lorg/slf4j/Logger;
      47: ldc           #16                 // String Invalid value {} for deletion interval, deletion interaval can not be negative.Changing to default value 0
      49: aload_0
      50: getfield      #13                 // Field deletionInterval:J
      53: invokestatic  #17                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      56: invokeinterface #18,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      61: aload_0
      62: lconst_0
      63: putfield      #13                 // Field deletionInterval:J
      66: return

  private org.apache.hadoop.fs.Path makeTrashRelativePath(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #19                 // Method org/apache/hadoop/fs/Path.mergePaths:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: areturn

  public boolean isEnabled();
    Code:
       0: aload_0
       1: getfield      #13                 // Field deletionInterval:J
       4: lconst_0
       5: lcmp
       6: ifle          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean moveToTrash(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method isEnabled:()Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: invokevirtual #21                 // Method org/apache/hadoop/fs/Path.isAbsolute:()Z
      13: ifne          32
      16: new           #22                 // class org/apache/hadoop/fs/Path
      19: dup
      20: aload_0
      21: getfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      24: invokevirtual #23                 // Method org/apache/hadoop/fs/FileSystem.getWorkingDirectory:()Lorg/apache/hadoop/fs/Path;
      27: aload_1
      28: invokespecial #24                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
      31: astore_1
      32: aload_0
      33: getfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      36: aload_1
      37: invokevirtual #25                 // Method org/apache/hadoop/fs/FileSystem.getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      40: pop
      41: aload_0
      42: getfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      45: aload_1
      46: invokevirtual #26                 // Method org/apache/hadoop/fs/FileSystem.makeQualified:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      49: invokevirtual #27                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
      52: astore_2
      53: aload_0
      54: getfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      57: aload_1
      58: invokevirtual #28                 // Method org/apache/hadoop/fs/FileSystem.getTrashRoot:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      61: astore_3
      62: new           #22                 // class org/apache/hadoop/fs/Path
      65: dup
      66: aload_3
      67: getstatic     #29                 // Field CURRENT:Lorg/apache/hadoop/fs/Path;
      70: invokespecial #24                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
      73: astore        4
      75: aload_2
      76: aload_3
      77: invokevirtual #27                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
      80: invokevirtual #30                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      83: ifeq          88
      86: iconst_0
      87: ireturn
      88: aload_3
      89: invokevirtual #31                 // Method org/apache/hadoop/fs/Path.getParent:()Lorg/apache/hadoop/fs/Path;
      92: invokevirtual #27                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
      95: aload_2
      96: invokevirtual #30                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      99: ifeq          134
     102: new           #32                 // class java/io/IOException
     105: dup
     106: new           #33                 // class java/lang/StringBuilder
     109: dup
     110: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     113: ldc           #35                 // String Cannot move \"
     115: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: aload_1
     119: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     122: ldc           #38                 // String \" to the trash, as it contains the trash
     124: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     130: invokespecial #40                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     133: athrow
     134: aload_0
     135: aload         4
     137: aload_1
     138: invokespecial #41                 // Method makeTrashRelativePath:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
     141: astore        5
     143: aload_0
     144: aload         4
     146: aload_1
     147: invokevirtual #31                 // Method org/apache/hadoop/fs/Path.getParent:()Lorg/apache/hadoop/fs/Path;
     150: invokespecial #41                 // Method makeTrashRelativePath:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
     153: astore        6
     155: aconst_null
     156: astore        7
     158: iconst_0
     159: istore        8
     161: iload         8
     163: iconst_2
     164: if_icmpge     473
     167: aload_0
     168: getfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     171: aload         6
     173: getstatic     #42                 // Field PERMISSION:Lorg/apache/hadoop/fs/permission/FsPermission;
     176: invokevirtual #43                 // Method org/apache/hadoop/fs/FileSystem.mkdirs:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z
     179: ifne          212
     182: getstatic     #5                  // Field LOG:Lorg/slf4j/Logger;
     185: new           #33                 // class java/lang/StringBuilder
     188: dup
     189: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     192: ldc           #44                 // String Can\'t create(mkdir) trash directory:
     194: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     197: aload         6
     199: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     202: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     205: invokeinterface #45,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     210: iconst_0
     211: ireturn
     212: goto          350
     215: astore        9
     217: aload         6
     219: astore        10
     221: aload_0
     222: getfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     225: aload         10
     227: invokevirtual #47                 // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
     230: ifne          243
     233: aload         10
     235: invokevirtual #31                 // Method org/apache/hadoop/fs/Path.getParent:()Lorg/apache/hadoop/fs/Path;
     238: astore        10
     240: goto          221
     243: new           #22                 // class org/apache/hadoop/fs/Path
     246: dup
     247: aload         6
     249: invokevirtual #27                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
     252: aload         10
     254: invokevirtual #27                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
     257: new           #33                 // class java/lang/StringBuilder
     260: dup
     261: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     264: aload         10
     266: invokevirtual #27                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
     269: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     272: invokestatic  #48                 // Method org/apache/hadoop/util/Time.now:()J
     275: invokevirtual #49                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     278: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     281: invokevirtual #50                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
     284: invokespecial #51                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
     287: astore        6
     289: new           #22                 // class org/apache/hadoop/fs/Path
     292: dup
     293: aload         6
     295: aload         5
     297: invokevirtual #52                 // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
     300: invokespecial #53                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
     303: astore        5
     305: iinc          8, -1
     308: goto          467
     311: astore        9
     313: getstatic     #5                  // Field LOG:Lorg/slf4j/Logger;
     316: new           #33                 // class java/lang/StringBuilder
     319: dup
     320: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     323: ldc           #54                 // String Can\'t create trash directory:
     325: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     328: aload         6
     330: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     333: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     336: aload         9
     338: invokeinterface #55,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     343: aload         9
     345: astore        7
     347: goto          473
     350: aload         5
     352: invokevirtual #27                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
     355: astore        9
     357: aload_0
     358: getfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     361: aload         5
     363: invokevirtual #47                 // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
     366: ifeq          402
     369: new           #22                 // class org/apache/hadoop/fs/Path
     372: dup
     373: new           #33                 // class java/lang/StringBuilder
     376: dup
     377: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     380: aload         9
     382: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     385: invokestatic  #48                 // Method org/apache/hadoop/util/Time.now:()J
     388: invokevirtual #49                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     391: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     394: invokespecial #51                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
     397: astore        5
     399: goto          357
     402: aload_0
     403: getfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     406: aload_1
     407: aload         5
     409: iconst_1
     410: anewarray     #56                 // class org/apache/hadoop/fs/Options$Rename
     413: dup
     414: iconst_0
     415: getstatic     #57                 // Field org/apache/hadoop/fs/Options$Rename.TO_TRASH:Lorg/apache/hadoop/fs/Options$Rename;
     418: aastore
     419: invokevirtual #58                 // Method org/apache/hadoop/fs/FileSystem.rename:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;[Lorg/apache/hadoop/fs/Options$Rename;)V
     422: getstatic     #5                  // Field LOG:Lorg/slf4j/Logger;
     425: new           #33                 // class java/lang/StringBuilder
     428: dup
     429: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     432: ldc           #59                 // String Moved: \'
     434: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     437: aload_1
     438: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     441: ldc           #60                 // String \' to trash at:
     443: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     446: aload         5
     448: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     451: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     454: invokeinterface #61,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     459: iconst_1
     460: ireturn
     461: astore        9
     463: aload         9
     465: astore        7
     467: iinc          8, 1
     470: goto          161
     473: new           #32                 // class java/io/IOException
     476: dup
     477: new           #33                 // class java/lang/StringBuilder
     480: dup
     481: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     484: ldc           #62                 // String Failed to move to trash:
     486: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     489: aload_1
     490: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     493: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     496: invokespecial #40                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     499: aload         7
     501: invokevirtual #63                 // Method java/io/IOException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
     504: checkcast     #32                 // class java/io/IOException
     507: athrow
    Exception table:
       from    to  target type
         167   211   215   Class org/apache/hadoop/fs/FileAlreadyExistsException
         167   211   311   Class java/io/IOException
         350   460   461   Class java/io/IOException

  public void createCheckpoint() throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #64                 // class java/util/Date
       4: dup
       5: invokespecial #65                 // Method java/util/Date."<init>":()V
       8: invokevirtual #66                 // Method createCheckpoint:(Ljava/util/Date;)V
      11: return

  public void createCheckpoint(java.util.Date) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: iconst_0
       5: invokevirtual #67                 // Method org/apache/hadoop/fs/FileSystem.getTrashRoots:(Z)Ljava/util/Collection;
       8: astore_2
       9: aload_2
      10: invokeinterface #68,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      15: astore_3
      16: aload_3
      17: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          80
      25: aload_3
      26: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #71                 // class org/apache/hadoop/fs/FileStatus
      34: astore        4
      36: getstatic     #5                  // Field LOG:Lorg/slf4j/Logger;
      39: new           #33                 // class java/lang/StringBuilder
      42: dup
      43: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      46: ldc           #72                 // String TrashPolicyDefault#createCheckpoint for trashRoot:
      48: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload         4
      53: invokevirtual #73                 // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
      56: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      59: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: invokeinterface #61,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      67: aload_0
      68: aload         4
      70: invokevirtual #73                 // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
      73: aload_1
      74: invokespecial #2                  // Method createCheckpoint:(Lorg/apache/hadoop/fs/Path;Ljava/util/Date;)V
      77: goto          16
      80: return

  public void deleteCheckpoint() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #74                 // Method deleteCheckpoint:(Z)V
       5: return

  public void deleteCheckpointsImmediately() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #74                 // Method deleteCheckpoint:(Z)V
       5: return

  private void deleteCheckpoint(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: iconst_0
       5: invokevirtual #67                 // Method org/apache/hadoop/fs/FileSystem.getTrashRoots:(Z)Ljava/util/Collection;
       8: astore_2
       9: aload_2
      10: invokeinterface #68,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      15: astore_3
      16: aload_3
      17: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          80
      25: aload_3
      26: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #71                 // class org/apache/hadoop/fs/FileStatus
      34: astore        4
      36: getstatic     #5                  // Field LOG:Lorg/slf4j/Logger;
      39: new           #33                 // class java/lang/StringBuilder
      42: dup
      43: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      46: ldc           #75                 // String TrashPolicyDefault#deleteCheckpoint for trashRoot:
      48: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload         4
      53: invokevirtual #73                 // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
      56: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      59: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: invokeinterface #61,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      67: aload_0
      68: aload         4
      70: invokevirtual #73                 // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
      73: iload_1
      74: invokespecial #3                  // Method deleteCheckpoint:(Lorg/apache/hadoop/fs/Path;Z)V
      77: goto          16
      80: return

  public org.apache.hadoop.fs.Path getCurrentTrashDir();
    Code:
       0: new           #22                 // class org/apache/hadoop/fs/Path
       3: dup
       4: aload_0
       5: getfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       8: aconst_null
       9: invokevirtual #28                 // Method org/apache/hadoop/fs/FileSystem.getTrashRoot:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      12: getstatic     #29                 // Field CURRENT:Lorg/apache/hadoop/fs/Path;
      15: invokespecial #24                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
      18: areturn

  public org.apache.hadoop.fs.Path getCurrentTrashDir(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #22                 // class org/apache/hadoop/fs/Path
       3: dup
       4: aload_0
       5: getfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       8: aload_1
       9: invokevirtual #28                 // Method org/apache/hadoop/fs/FileSystem.getTrashRoot:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      12: getstatic     #29                 // Field CURRENT:Lorg/apache/hadoop/fs/Path;
      15: invokespecial #24                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
      18: areturn

  public java.lang.Runnable getEmptier() throws java.io.IOException;
    Code:
       0: new           #76                 // class org/apache/hadoop/fs/TrashPolicyDefault$Emptier
       3: dup
       4: aload_0
       5: aload_0
       6: invokevirtual #77                 // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
       9: aload_0
      10: getfield      #15                 // Field emptierInterval:J
      13: invokespecial #78                 // Method org/apache/hadoop/fs/TrashPolicyDefault$Emptier."<init>":(Lorg/apache/hadoop/fs/TrashPolicyDefault;Lorg/apache/hadoop/conf/Configuration;J)V
      16: areturn

  private void createCheckpoint(org.apache.hadoop.fs.Path, java.util.Date) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: new           #22                 // class org/apache/hadoop/fs/Path
       7: dup
       8: aload_1
       9: getstatic     #29                 // Field CURRENT:Lorg/apache/hadoop/fs/Path;
      12: invokespecial #24                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
      15: invokevirtual #47                 // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
      18: ifne          22
      21: return
      22: getstatic     #79                 // Field CHECKPOINT:Ljava/text/DateFormat;
      25: dup
      26: astore        4
      28: monitorenter
      29: new           #22                 // class org/apache/hadoop/fs/Path
      32: dup
      33: aload_1
      34: getstatic     #79                 // Field CHECKPOINT:Ljava/text/DateFormat;
      37: aload_2
      38: invokevirtual #80                 // Method java/text/DateFormat.format:(Ljava/util/Date;)Ljava/lang/String;
      41: invokespecial #53                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      44: astore_3
      45: aload         4
      47: monitorexit
      48: goto          59
      51: astore        5
      53: aload         4
      55: monitorexit
      56: aload         5
      58: athrow
      59: aload_3
      60: astore        4
      62: new           #22                 // class org/apache/hadoop/fs/Path
      65: dup
      66: aload_1
      67: getstatic     #29                 // Field CURRENT:Lorg/apache/hadoop/fs/Path;
      70: invokespecial #24                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
      73: astore        5
      75: iconst_0
      76: istore        6
      78: aload_0
      79: getfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      82: aload         5
      84: aload         4
      86: iconst_1
      87: anewarray     #56                 // class org/apache/hadoop/fs/Options$Rename
      90: dup
      91: iconst_0
      92: getstatic     #81                 // Field org/apache/hadoop/fs/Options$Rename.NONE:Lorg/apache/hadoop/fs/Options$Rename;
      95: aastore
      96: invokevirtual #58                 // Method org/apache/hadoop/fs/FileSystem.rename:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;[Lorg/apache/hadoop/fs/Options$Rename;)V
      99: getstatic     #5                  // Field LOG:Lorg/slf4j/Logger;
     102: new           #33                 // class java/lang/StringBuilder
     105: dup
     106: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     109: ldc           #82                 // String Created trash checkpoint:
     111: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: aload         4
     116: invokevirtual #83                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
     119: invokevirtual #84                 // Method java/net/URI.getPath:()Ljava/lang/String;
     122: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     128: invokeinterface #61,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     133: goto          206
     136: astore        7
     138: iinc          6, 1
     141: iload         6
     143: sipush        1000
     146: if_icmple     177
     149: new           #32                 // class java/io/IOException
     152: dup
     153: new           #33                 // class java/lang/StringBuilder
     156: dup
     157: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     160: ldc           #85                 // String Failed to checkpoint trash:
     162: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     165: aload         4
     167: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     170: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     173: invokespecial #40                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     176: athrow
     177: aload_3
     178: new           #33                 // class java/lang/StringBuilder
     181: dup
     182: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     185: ldc           #86                 // String -
     187: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     190: iload         6
     192: invokevirtual #87                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     195: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     198: invokevirtual #88                 // Method org/apache/hadoop/fs/Path.suffix:(Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
     201: astore        4
     203: goto          78
     206: return
    Exception table:
       from    to  target type
          29    48    51   any
          51    56    51   any
          78   133   136   Class org/apache/hadoop/fs/FileAlreadyExistsException

  private void deleteCheckpoint(org.apache.hadoop.fs.Path, boolean) throws java.io.IOException;
    Code:
       0: getstatic     #5                  // Field LOG:Lorg/slf4j/Logger;
       3: new           #33                 // class java/lang/StringBuilder
       6: dup
       7: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      10: ldc           #75                 // String TrashPolicyDefault#deleteCheckpoint for trashRoot:
      12: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: aload_1
      16: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: invokeinterface #61,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      27: aconst_null
      28: astore_3
      29: aload_0
      30: getfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      33: aload_1
      34: invokevirtual #89                 // Method org/apache/hadoop/fs/FileSystem.listStatus:(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
      37: astore_3
      38: goto          44
      41: astore        4
      43: return
      44: invokestatic  #48                 // Method org/apache/hadoop/util/Time.now:()J
      47: lstore        4
      49: iconst_0
      50: istore        6
      52: iload         6
      54: aload_3
      55: arraylength
      56: if_icmpge     251
      59: aload_3
      60: iload         6
      62: aaload
      63: invokevirtual #73                 // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
      66: astore        7
      68: aload         7
      70: invokevirtual #83                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
      73: invokevirtual #84                 // Method java/net/URI.getPath:()Ljava/lang/String;
      76: astore        8
      78: aload         7
      80: invokevirtual #52                 // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
      83: astore        9
      85: aload         9
      87: getstatic     #29                 // Field CURRENT:Lorg/apache/hadoop/fs/Path;
      90: invokevirtual #52                 // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
      93: invokevirtual #91                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      96: ifeq          102
      99: goto          245
     102: aload_0
     103: aload         9
     105: invokespecial #92                 // Method getTimeFromCheckpoint:(Ljava/lang/String;)J
     108: lstore        10
     110: goto          151
     113: astore        12
     115: getstatic     #5                  // Field LOG:Lorg/slf4j/Logger;
     118: new           #33                 // class java/lang/StringBuilder
     121: dup
     122: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     125: ldc           #94                 // String Unexpected item in trash:
     127: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     130: aload         8
     132: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: ldc           #95                 // String . Ignoring.
     137: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     143: invokeinterface #45,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     148: goto          245
     151: lload         4
     153: aload_0
     154: getfield      #13                 // Field deletionInterval:J
     157: lsub
     158: lload         10
     160: lcmp
     161: ifgt          168
     164: iload_2
     165: ifeq          245
     168: aload_0
     169: getfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     172: aload         7
     174: iconst_1
     175: invokevirtual #96                 // Method org/apache/hadoop/fs/FileSystem.delete:(Lorg/apache/hadoop/fs/Path;Z)Z
     178: ifeq          212
     181: getstatic     #5                  // Field LOG:Lorg/slf4j/Logger;
     184: new           #33                 // class java/lang/StringBuilder
     187: dup
     188: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     191: ldc           #97                 // String Deleted trash checkpoint:
     193: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     196: aload         8
     198: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     201: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     204: invokeinterface #61,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     209: goto          245
     212: getstatic     #5                  // Field LOG:Lorg/slf4j/Logger;
     215: new           #33                 // class java/lang/StringBuilder
     218: dup
     219: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     222: ldc           #98                 // String Couldn\'t delete checkpoint:
     224: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     227: aload         8
     229: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     232: ldc           #99                 // String  Ignoring.
     234: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     237: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     240: invokeinterface #45,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     245: iinc          6, 1
     248: goto          52
     251: return
    Exception table:
       from    to  target type
          29    38    41   Class java/io/FileNotFoundException
         102   110   113   Class java/text/ParseException

  private long getTimeFromCheckpoint(java.lang.String) throws java.text.ParseException;
    Code:
       0: getstatic     #79                 // Field CHECKPOINT:Ljava/text/DateFormat;
       3: dup
       4: astore        4
       6: monitorenter
       7: getstatic     #79                 // Field CHECKPOINT:Ljava/text/DateFormat;
      10: aload_1
      11: invokevirtual #100                // Method java/text/DateFormat.parse:(Ljava/lang/String;)Ljava/util/Date;
      14: invokevirtual #101                // Method java/util/Date.getTime:()J
      17: lstore_2
      18: aload         4
      20: monitorexit
      21: goto          32
      24: astore        5
      26: aload         4
      28: monitorexit
      29: aload         5
      31: athrow
      32: goto          69
      35: astore        4
      37: getstatic     #102                // Field OLD_CHECKPOINT:Ljava/text/DateFormat;
      40: dup
      41: astore        5
      43: monitorenter
      44: getstatic     #102                // Field OLD_CHECKPOINT:Ljava/text/DateFormat;
      47: aload_1
      48: invokevirtual #100                // Method java/text/DateFormat.parse:(Ljava/lang/String;)Ljava/util/Date;
      51: invokevirtual #101                // Method java/util/Date.getTime:()J
      54: lstore_2
      55: aload         5
      57: monitorexit
      58: goto          69
      61: astore        6
      63: aload         5
      65: monitorexit
      66: aload         6
      68: athrow
      69: lload_2
      70: lreturn
    Exception table:
       from    to  target type
           7    21    24   any
          24    29    24   any
           0    32    35   Class java/text/ParseException
          44    58    61   any
          61    66    61   any

  static org.slf4j.Logger access$000();
    Code:
       0: getstatic     #5                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  org.apache.hadoop.fs.TrashPolicyDefault(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.TrashPolicyDefault$1) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #4                  // Method "<init>":(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;)V
       6: return

  static void access$200(org.apache.hadoop.fs.TrashPolicyDefault, org.apache.hadoop.fs.Path, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #3                  // Method deleteCheckpoint:(Lorg/apache/hadoop/fs/Path;Z)V
       6: return

  static void access$300(org.apache.hadoop.fs.TrashPolicyDefault, org.apache.hadoop.fs.Path, java.util.Date) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method createCheckpoint:(Lorg/apache/hadoop/fs/Path;Ljava/util/Date;)V
       6: return

  static {};
    Code:
       0: ldc           #11                 // class org/apache/hadoop/fs/TrashPolicyDefault
       2: invokestatic  #103                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #5                  // Field LOG:Lorg/slf4j/Logger;
       8: new           #22                 // class org/apache/hadoop/fs/Path
      11: dup
      12: ldc           #104                // String Current
      14: invokespecial #51                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      17: putstatic     #29                 // Field CURRENT:Lorg/apache/hadoop/fs/Path;
      20: new           #105                // class org/apache/hadoop/fs/permission/FsPermission
      23: dup
      24: getstatic     #106                // Field org/apache/hadoop/fs/permission/FsAction.ALL:Lorg/apache/hadoop/fs/permission/FsAction;
      27: getstatic     #107                // Field org/apache/hadoop/fs/permission/FsAction.NONE:Lorg/apache/hadoop/fs/permission/FsAction;
      30: getstatic     #107                // Field org/apache/hadoop/fs/permission/FsAction.NONE:Lorg/apache/hadoop/fs/permission/FsAction;
      33: invokespecial #108                // Method org/apache/hadoop/fs/permission/FsPermission."<init>":(Lorg/apache/hadoop/fs/permission/FsAction;Lorg/apache/hadoop/fs/permission/FsAction;Lorg/apache/hadoop/fs/permission/FsAction;)V
      36: putstatic     #42                 // Field PERMISSION:Lorg/apache/hadoop/fs/permission/FsPermission;
      39: new           #109                // class java/text/SimpleDateFormat
      42: dup
      43: ldc           #110                // String yyMMddHHmmss
      45: invokespecial #111                // Method java/text/SimpleDateFormat."<init>":(Ljava/lang/String;)V
      48: putstatic     #79                 // Field CHECKPOINT:Ljava/text/DateFormat;
      51: new           #109                // class java/text/SimpleDateFormat
      54: dup
      55: ldc           #112                // String yyMMddHHmm
      57: invokespecial #111                // Method java/text/SimpleDateFormat."<init>":(Ljava/lang/String;)V
      60: putstatic     #102                // Field OLD_CHECKPOINT:Ljava/text/DateFormat;
      63: return
}
