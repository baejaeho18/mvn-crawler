Compiled from "BlockingThreadPoolExecutorService.java"
final class org.apache.hadoop.util.BlockingThreadPoolExecutorService$1 implements java.util.concurrent.ThreadFactory {
  private final java.util.concurrent.atomic.AtomicInteger threadNumber;

  private final int poolNum;

  private final java.lang.ThreadGroup group;

  final java.lang.ThreadGroup val$threadGroup;

  final java.lang.String val$prefix;

  org.apache.hadoop.util.BlockingThreadPoolExecutorService$1(java.lang.ThreadGroup, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field val$threadGroup:Ljava/lang/ThreadGroup;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$prefix:Ljava/lang/String;
      10: aload_0
      11: invokespecial #3                  // Method java/lang/Object."<init>":()V
      14: aload_0
      15: new           #4                  // class java/util/concurrent/atomic/AtomicInteger
      18: dup
      19: iconst_1
      20: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      23: putfield      #6                  // Field threadNumber:Ljava/util/concurrent/atomic/AtomicInteger;
      26: aload_0
      27: invokestatic  #7                  // Method org/apache/hadoop/util/BlockingThreadPoolExecutorService.access$000:()Ljava/util/concurrent/atomic/AtomicInteger;
      30: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      33: putfield      #9                  // Field poolNum:I
      36: aload_0
      37: aload_0
      38: getfield      #1                  // Field val$threadGroup:Ljava/lang/ThreadGroup;
      41: putfield      #10                 // Field group:Ljava/lang/ThreadGroup;
      44: return

  public java.lang.Thread newThread(java.lang.Runnable);
    Code:
       0: new           #11                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #2                  // Field val$prefix:Ljava/lang/String;
      11: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #14                 // String -pool
      16: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #9                  // Field poolNum:I
      23: invokevirtual #15                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      26: ldc           #16                 // String -t
      28: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: getfield      #6                  // Field threadNumber:Ljava/util/concurrent/atomic/AtomicInteger;
      35: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      38: invokevirtual #15                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      41: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: astore_2
      45: new           #18                 // class java/lang/Thread
      48: dup
      49: aload_0
      50: getfield      #10                 // Field group:Ljava/lang/ThreadGroup;
      53: aload_1
      54: aload_2
      55: invokespecial #19                 // Method java/lang/Thread."<init>":(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;)V
      58: areturn
}
