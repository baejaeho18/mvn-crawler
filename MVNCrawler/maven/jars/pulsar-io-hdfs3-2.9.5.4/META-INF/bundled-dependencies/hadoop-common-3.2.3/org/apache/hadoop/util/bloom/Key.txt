Compiled from "Key.java"
public class org.apache.hadoop.util.bloom.Key implements org.apache.hadoop.io.WritableComparable<org.apache.hadoop.util.bloom.Key> {
  byte[] bytes;

  double weight;

  public org.apache.hadoop.util.bloom.Key();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public org.apache.hadoop.util.bloom.Key(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: dconst_1
       3: invokespecial #2                  // Method "<init>":([BD)V
       6: return

  public org.apache.hadoop.util.bloom.Key(byte[], double);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: dload_2
       7: invokevirtual #3                  // Method set:([BD)V
      10: return

  public void set(byte[], double);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #4                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #5                  // String value can not be null
      10: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: putfield      #7                  // Field bytes:[B
      19: aload_0
      20: dload_2
      21: putfield      #8                  // Field weight:D
      24: return

  public byte[] getBytes();
    Code:
       0: aload_0
       1: getfield      #7                  // Field bytes:[B
       4: areturn

  public double getWeight();
    Code:
       0: aload_0
       1: getfield      #8                  // Field weight:D
       4: dreturn

  public void incrementWeight(double);
    Code:
       0: aload_0
       1: dup
       2: getfield      #8                  // Field weight:D
       5: dload_1
       6: dadd
       7: putfield      #8                  // Field weight:D
      10: return

  public void incrementWeight();
    Code:
       0: aload_0
       1: dup
       2: getfield      #8                  // Field weight:D
       5: dconst_1
       6: dadd
       7: putfield      #8                  // Field weight:D
      10: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #9                  // class org/apache/hadoop/util/bloom/Key
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: aload_1
      11: checkcast     #9                  // class org/apache/hadoop/util/bloom/Key
      14: invokevirtual #10                 // Method compareTo:(Lorg/apache/hadoop/util/bloom/Key;)I
      17: ifne          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public int hashCode();
    Code:
       0: iconst_0
       1: istore_1
       2: iconst_0
       3: istore_2
       4: iload_2
       5: aload_0
       6: getfield      #7                  // Field bytes:[B
       9: arraylength
      10: if_icmpge     34
      13: iload_1
      14: aload_0
      15: getfield      #7                  // Field bytes:[B
      18: iload_2
      19: baload
      20: invokestatic  #11                 // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
      23: invokevirtual #12                 // Method java/lang/Byte.hashCode:()I
      26: ixor
      27: istore_1
      28: iinc          2, 1
      31: goto          4
      34: iload_1
      35: aload_0
      36: getfield      #8                  // Field weight:D
      39: invokestatic  #13                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      42: invokevirtual #14                 // Method java/lang/Double.hashCode:()I
      45: ixor
      46: istore_1
      47: iload_1
      48: ireturn

  public void write(java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #7                  // Field bytes:[B
       5: arraylength
       6: invokeinterface #15,  2           // InterfaceMethod java/io/DataOutput.writeInt:(I)V
      11: aload_1
      12: aload_0
      13: getfield      #7                  // Field bytes:[B
      16: invokeinterface #16,  2           // InterfaceMethod java/io/DataOutput.write:([B)V
      21: aload_1
      22: aload_0
      23: getfield      #8                  // Field weight:D
      26: invokeinterface #17,  3           // InterfaceMethod java/io/DataOutput.writeDouble:(D)V
      31: return

  public void readFields(java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #18,  1           // InterfaceMethod java/io/DataInput.readInt:()I
       7: newarray       byte
       9: putfield      #7                  // Field bytes:[B
      12: aload_1
      13: aload_0
      14: getfield      #7                  // Field bytes:[B
      17: invokeinterface #19,  2           // InterfaceMethod java/io/DataInput.readFully:([B)V
      22: aload_0
      23: aload_1
      24: invokeinterface #20,  1           // InterfaceMethod java/io/DataInput.readDouble:()D
      29: putfield      #8                  // Field weight:D
      32: return

  public int compareTo(org.apache.hadoop.util.bloom.Key);
    Code:
       0: aload_0
       1: getfield      #7                  // Field bytes:[B
       4: arraylength
       5: aload_1
       6: invokevirtual #21                 // Method getBytes:()[B
       9: arraylength
      10: isub
      11: istore_2
      12: iconst_0
      13: istore_3
      14: iload_2
      15: ifne          47
      18: iload_3
      19: aload_0
      20: getfield      #7                  // Field bytes:[B
      23: arraylength
      24: if_icmpge     47
      27: aload_0
      28: getfield      #7                  // Field bytes:[B
      31: iload_3
      32: baload
      33: aload_1
      34: getfield      #7                  // Field bytes:[B
      37: iload_3
      38: baload
      39: isub
      40: istore_2
      41: iinc          3, 1
      44: goto          14
      47: iload_2
      48: ifne          62
      51: aload_0
      52: getfield      #8                  // Field weight:D
      55: aload_1
      56: getfield      #8                  // Field weight:D
      59: dsub
      60: d2i
      61: istore_2
      62: iload_2
      63: ireturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #9                  // class org/apache/hadoop/util/bloom/Key
       5: invokevirtual #10                 // Method compareTo:(Lorg/apache/hadoop/util/bloom/Key;)I
       8: ireturn
}
