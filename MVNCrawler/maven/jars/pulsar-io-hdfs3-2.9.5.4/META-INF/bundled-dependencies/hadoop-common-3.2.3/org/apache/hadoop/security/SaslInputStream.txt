Compiled from "SaslInputStream.java"
public class org.apache.hadoop.security.SaslInputStream extends java.io.InputStream implements java.nio.channels.ReadableByteChannel {
  public static final org.slf4j.Logger LOG;

  private final java.io.DataInputStream inStream;

  private final boolean useWrap;

  private byte[] saslToken;

  private final javax.security.sasl.SaslClient saslClient;

  private final javax.security.sasl.SaslServer saslServer;

  private byte[] lengthBuf;

  private byte[] obuffer;

  private int ostart;

  private int ofinish;

  private boolean isOpen;

  private static int unsignedBytesToInt(byte[]);
    Code:
       0: aload_0
       1: arraylength
       2: iconst_4
       3: if_icmpeq     16
       6: new           #1                  // class java/lang/IllegalArgumentException
       9: dup
      10: ldc           #2                  // String Cannot handle byte array other than 4 bytes
      12: invokespecial #3                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: iconst_0
      17: istore_1
      18: iconst_0
      19: istore_2
      20: iload_2
      21: iconst_4
      22: if_icmpge     46
      25: iload_1
      26: bipush        8
      28: ishl
      29: istore_1
      30: iload_1
      31: aload_0
      32: iload_2
      33: baload
      34: sipush        255
      37: iand
      38: ior
      39: istore_1
      40: iinc          2, 1
      43: goto          20
      46: iload_1
      47: ireturn

  private int readMoreData() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field inStream:Ljava/io/DataInputStream;
       4: aload_0
       5: getfield      #5                  // Field lengthBuf:[B
       8: invokevirtual #6                  // Method java/io/DataInputStream.readFully:([B)V
      11: aload_0
      12: getfield      #5                  // Field lengthBuf:[B
      15: invokestatic  #7                  // Method unsignedBytesToInt:([B)I
      18: istore_1
      19: getstatic     #8                  // Field LOG:Lorg/slf4j/Logger;
      22: invokeinterface #9,  1            // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      27: ifeq          57
      30: getstatic     #8                  // Field LOG:Lorg/slf4j/Logger;
      33: new           #10                 // class java/lang/StringBuilder
      36: dup
      37: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      40: ldc           #12                 // String Actual length is
      42: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: iload_1
      46: invokevirtual #14                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      49: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokeinterface #16,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      57: aload_0
      58: iload_1
      59: newarray       byte
      61: putfield      #17                 // Field saslToken:[B
      64: aload_0
      65: getfield      #4                  // Field inStream:Ljava/io/DataInputStream;
      68: aload_0
      69: getfield      #17                 // Field saslToken:[B
      72: invokevirtual #6                  // Method java/io/DataInputStream.readFully:([B)V
      75: goto          81
      78: astore_1
      79: iconst_m1
      80: ireturn
      81: aload_0
      82: getfield      #19                 // Field saslServer:Ljavax/security/sasl/SaslServer;
      85: ifnull        114
      88: aload_0
      89: aload_0
      90: getfield      #19                 // Field saslServer:Ljavax/security/sasl/SaslServer;
      93: aload_0
      94: getfield      #17                 // Field saslToken:[B
      97: iconst_0
      98: aload_0
      99: getfield      #17                 // Field saslToken:[B
     102: arraylength
     103: invokeinterface #20,  4           // InterfaceMethod javax/security/sasl/SaslServer.unwrap:([BII)[B
     108: putfield      #21                 // Field obuffer:[B
     111: goto          137
     114: aload_0
     115: aload_0
     116: getfield      #22                 // Field saslClient:Ljavax/security/sasl/SaslClient;
     119: aload_0
     120: getfield      #17                 // Field saslToken:[B
     123: iconst_0
     124: aload_0
     125: getfield      #17                 // Field saslToken:[B
     128: arraylength
     129: invokeinterface #23,  4           // InterfaceMethod javax/security/sasl/SaslClient.unwrap:([BII)[B
     134: putfield      #21                 // Field obuffer:[B
     137: goto          151
     140: astore_1
     141: aload_0
     142: invokespecial #25                 // Method disposeSasl:()V
     145: goto          149
     148: astore_2
     149: aload_1
     150: athrow
     151: aload_0
     152: iconst_0
     153: putfield      #26                 // Field ostart:I
     156: aload_0
     157: getfield      #21                 // Field obuffer:[B
     160: ifnonnull     171
     163: aload_0
     164: iconst_0
     165: putfield      #27                 // Field ofinish:I
     168: goto          180
     171: aload_0
     172: aload_0
     173: getfield      #21                 // Field obuffer:[B
     176: arraylength
     177: putfield      #27                 // Field ofinish:I
     180: aload_0
     181: getfield      #27                 // Field ofinish:I
     184: ireturn
    Exception table:
       from    to  target type
           0    75    78   Class java/io/EOFException
          81   137   140   Class javax/security/sasl/SaslException
         141   145   148   Class javax/security/sasl/SaslException

  private void disposeSasl() throws javax.security.sasl.SaslException;
    Code:
       0: aload_0
       1: getfield      #22                 // Field saslClient:Ljavax/security/sasl/SaslClient;
       4: ifnull        16
       7: aload_0
       8: getfield      #22                 // Field saslClient:Ljavax/security/sasl/SaslClient;
      11: invokeinterface #28,  1           // InterfaceMethod javax/security/sasl/SaslClient.dispose:()V
      16: aload_0
      17: getfield      #19                 // Field saslServer:Ljavax/security/sasl/SaslServer;
      20: ifnull        32
      23: aload_0
      24: getfield      #19                 // Field saslServer:Ljavax/security/sasl/SaslServer;
      27: invokeinterface #29,  1           // InterfaceMethod javax/security/sasl/SaslServer.dispose:()V
      32: return

  public org.apache.hadoop.security.SaslInputStream(java.io.InputStream, javax.security.sasl.SaslServer);
    Code:
       0: aload_0
       1: invokespecial #30                 // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: iconst_4
       6: newarray       byte
       8: putfield      #5                  // Field lengthBuf:[B
      11: aload_0
      12: iconst_0
      13: putfield      #26                 // Field ostart:I
      16: aload_0
      17: iconst_0
      18: putfield      #27                 // Field ofinish:I
      21: aload_0
      22: iconst_1
      23: putfield      #31                 // Field isOpen:Z
      26: aload_0
      27: new           #32                 // class java/io/DataInputStream
      30: dup
      31: aload_1
      32: invokespecial #33                 // Method java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
      35: putfield      #4                  // Field inStream:Ljava/io/DataInputStream;
      38: aload_0
      39: aload_2
      40: putfield      #19                 // Field saslServer:Ljavax/security/sasl/SaslServer;
      43: aload_0
      44: aconst_null
      45: putfield      #22                 // Field saslClient:Ljavax/security/sasl/SaslClient;
      48: aload_2
      49: ldc           #35                 // String javax.security.sasl.qop
      51: invokeinterface #36,  2           // InterfaceMethod javax/security/sasl/SaslServer.getNegotiatedProperty:(Ljava/lang/String;)Ljava/lang/Object;
      56: checkcast     #37                 // class java/lang/String
      59: astore_3
      60: aload_0
      61: aload_3
      62: ifnull        78
      65: ldc           #38                 // String auth
      67: aload_3
      68: invokevirtual #39                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      71: ifne          78
      74: iconst_1
      75: goto          79
      78: iconst_0
      79: putfield      #40                 // Field useWrap:Z
      82: return

  public org.apache.hadoop.security.SaslInputStream(java.io.InputStream, javax.security.sasl.SaslClient);
    Code:
       0: aload_0
       1: invokespecial #30                 // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: iconst_4
       6: newarray       byte
       8: putfield      #5                  // Field lengthBuf:[B
      11: aload_0
      12: iconst_0
      13: putfield      #26                 // Field ostart:I
      16: aload_0
      17: iconst_0
      18: putfield      #27                 // Field ofinish:I
      21: aload_0
      22: iconst_1
      23: putfield      #31                 // Field isOpen:Z
      26: aload_0
      27: new           #32                 // class java/io/DataInputStream
      30: dup
      31: aload_1
      32: invokespecial #33                 // Method java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
      35: putfield      #4                  // Field inStream:Ljava/io/DataInputStream;
      38: aload_0
      39: aconst_null
      40: putfield      #19                 // Field saslServer:Ljavax/security/sasl/SaslServer;
      43: aload_0
      44: aload_2
      45: putfield      #22                 // Field saslClient:Ljavax/security/sasl/SaslClient;
      48: aload_2
      49: ldc           #35                 // String javax.security.sasl.qop
      51: invokeinterface #41,  2           // InterfaceMethod javax/security/sasl/SaslClient.getNegotiatedProperty:(Ljava/lang/String;)Ljava/lang/Object;
      56: checkcast     #37                 // class java/lang/String
      59: astore_3
      60: aload_0
      61: aload_3
      62: ifnull        78
      65: ldc           #38                 // String auth
      67: aload_3
      68: invokevirtual #39                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      71: ifne          78
      74: iconst_1
      75: goto          79
      78: iconst_0
      79: putfield      #40                 // Field useWrap:Z
      82: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #40                 // Field useWrap:Z
       4: ifne          15
       7: aload_0
       8: getfield      #4                  // Field inStream:Ljava/io/DataInputStream;
      11: invokevirtual #42                 // Method java/io/DataInputStream.read:()I
      14: ireturn
      15: aload_0
      16: getfield      #26                 // Field ostart:I
      19: aload_0
      20: getfield      #27                 // Field ofinish:I
      23: if_icmplt     47
      26: iconst_0
      27: istore_1
      28: iload_1
      29: ifne          40
      32: aload_0
      33: invokespecial #43                 // Method readMoreData:()I
      36: istore_1
      37: goto          28
      40: iload_1
      41: iconst_m1
      42: if_icmpne     47
      45: iconst_m1
      46: ireturn
      47: aload_0
      48: getfield      #21                 // Field obuffer:[B
      51: aload_0
      52: dup
      53: getfield      #26                 // Field ostart:I
      56: dup_x1
      57: iconst_1
      58: iadd
      59: putfield      #26                 // Field ostart:I
      62: baload
      63: sipush        255
      66: iand
      67: ireturn

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #44                 // Method read:([BII)I
       8: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: ifne          6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: getfield      #40                 // Field useWrap:Z
      10: ifne          24
      13: aload_0
      14: getfield      #4                  // Field inStream:Ljava/io/DataInputStream;
      17: aload_1
      18: iload_2
      19: iload_3
      20: invokevirtual #45                 // Method java/io/DataInputStream.read:([BII)I
      23: ireturn
      24: aload_0
      25: getfield      #26                 // Field ostart:I
      28: aload_0
      29: getfield      #27                 // Field ofinish:I
      32: if_icmplt     60
      35: iconst_0
      36: istore        4
      38: iload         4
      40: ifne          52
      43: aload_0
      44: invokespecial #43                 // Method readMoreData:()I
      47: istore        4
      49: goto          38
      52: iload         4
      54: iconst_m1
      55: if_icmpne     60
      58: iconst_m1
      59: ireturn
      60: iload_3
      61: ifgt          66
      64: iconst_0
      65: ireturn
      66: aload_0
      67: getfield      #27                 // Field ofinish:I
      70: aload_0
      71: getfield      #26                 // Field ostart:I
      74: isub
      75: istore        4
      77: iload_3
      78: iload         4
      80: if_icmpge     86
      83: iload_3
      84: istore        4
      86: aload_1
      87: ifnull        105
      90: aload_0
      91: getfield      #21                 // Field obuffer:[B
      94: aload_0
      95: getfield      #26                 // Field ostart:I
      98: aload_1
      99: iload_2
     100: iload         4
     102: invokestatic  #46                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     105: aload_0
     106: aload_0
     107: getfield      #26                 // Field ostart:I
     110: iload         4
     112: iadd
     113: putfield      #26                 // Field ostart:I
     116: iload         4
     118: ireturn

  public long skip(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #40                 // Field useWrap:Z
       4: ifne          16
       7: aload_0
       8: getfield      #4                  // Field inStream:Ljava/io/DataInputStream;
      11: lload_1
      12: invokevirtual #47                 // Method java/io/DataInputStream.skip:(J)J
      15: lreturn
      16: aload_0
      17: getfield      #27                 // Field ofinish:I
      20: aload_0
      21: getfield      #26                 // Field ostart:I
      24: isub
      25: istore_3
      26: lload_1
      27: iload_3
      28: i2l
      29: lcmp
      30: ifle          36
      33: iload_3
      34: i2l
      35: lstore_1
      36: lload_1
      37: lconst_0
      38: lcmp
      39: ifge          44
      42: lconst_0
      43: lreturn
      44: aload_0
      45: dup
      46: getfield      #26                 // Field ostart:I
      49: i2l
      50: lload_1
      51: ladd
      52: l2i
      53: putfield      #26                 // Field ostart:I
      56: lload_1
      57: lreturn

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #40                 // Field useWrap:Z
       4: ifne          15
       7: aload_0
       8: getfield      #4                  // Field inStream:Ljava/io/DataInputStream;
      11: invokevirtual #48                 // Method java/io/DataInputStream.available:()I
      14: ireturn
      15: aload_0
      16: getfield      #27                 // Field ofinish:I
      19: aload_0
      20: getfield      #26                 // Field ostart:I
      23: isub
      24: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #25                 // Method disposeSasl:()V
       4: aload_0
       5: iconst_0
       6: putfield      #26                 // Field ostart:I
       9: aload_0
      10: iconst_0
      11: putfield      #27                 // Field ofinish:I
      14: aload_0
      15: getfield      #4                  // Field inStream:Ljava/io/DataInputStream;
      18: invokevirtual #49                 // Method java/io/DataInputStream.close:()V
      21: aload_0
      22: iconst_0
      23: putfield      #31                 // Field isOpen:Z
      26: return

  public boolean markSupported();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #31                 // Field isOpen:Z
       4: ireturn

  public int read(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: invokevirtual #50                 // Method java/nio/ByteBuffer.hasArray:()Z
       6: ifeq          50
       9: aload_0
      10: aload_1
      11: invokevirtual #51                 // Method java/nio/ByteBuffer.array:()[B
      14: aload_1
      15: invokevirtual #52                 // Method java/nio/ByteBuffer.arrayOffset:()I
      18: aload_1
      19: invokevirtual #53                 // Method java/nio/ByteBuffer.position:()I
      22: iadd
      23: aload_1
      24: invokevirtual #54                 // Method java/nio/ByteBuffer.remaining:()I
      27: invokevirtual #44                 // Method read:([BII)I
      30: istore_2
      31: iload_2
      32: iconst_m1
      33: if_icmple     76
      36: aload_1
      37: aload_1
      38: invokevirtual #53                 // Method java/nio/ByteBuffer.position:()I
      41: iload_2
      42: iadd
      43: invokevirtual #55                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      46: pop
      47: goto          76
      50: aload_1
      51: invokevirtual #54                 // Method java/nio/ByteBuffer.remaining:()I
      54: newarray       byte
      56: astore_3
      57: aload_0
      58: aload_3
      59: invokevirtual #56                 // Method read:([B)I
      62: istore_2
      63: iload_2
      64: iconst_m1
      65: if_icmple     76
      68: aload_1
      69: aload_3
      70: iconst_0
      71: iload_2
      72: invokevirtual #57                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      75: pop
      76: iload_2
      77: ireturn

  static {};
    Code:
       0: ldc           #58                 // class org/apache/hadoop/security/SaslInputStream
       2: invokestatic  #59                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #8                  // Field LOG:Lorg/slf4j/Logger;
       8: return
}
