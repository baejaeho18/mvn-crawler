Compiled from "AbstractHttpFileSystem.java"
abstract class org.apache.hadoop.fs.http.AbstractHttpFileSystem extends org.apache.hadoop.fs.FileSystem {
  private static final long DEFAULT_BLOCK_SIZE;

  private static final org.apache.hadoop.fs.Path WORKING_DIR;

  private java.net.URI uri;

  org.apache.hadoop.fs.http.AbstractHttpFileSystem();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/fs/FileSystem."<init>":()V
       4: return

  public void initialize(java.net.URI, org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method org/apache/hadoop/fs/FileSystem.initialize:(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V
       6: aload_0
       7: aload_1
       8: putfield      #3                  // Field uri:Ljava/net/URI;
      11: return

  public abstract java.lang.String getScheme();

  public java.net.URI getUri();
    Code:
       0: aload_0
       1: getfield      #3                  // Field uri:Ljava/net/URI;
       4: areturn

  public org.apache.hadoop.fs.FSDataInputStream open(org.apache.hadoop.fs.Path, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #4                  // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
       4: invokevirtual #5                  // Method java/net/URI.toURL:()Ljava/net/URL;
       7: invokevirtual #6                  // Method java/net/URL.openConnection:()Ljava/net/URLConnection;
      10: astore_3
      11: aload_3
      12: invokevirtual #7                  // Method java/net/URLConnection.getInputStream:()Ljava/io/InputStream;
      15: astore        4
      17: new           #8                  // class org/apache/hadoop/fs/FSDataInputStream
      20: dup
      21: new           #9                  // class org/apache/hadoop/fs/http/AbstractHttpFileSystem$HttpDataInputStream
      24: dup
      25: aload         4
      27: invokespecial #10                 // Method org/apache/hadoop/fs/http/AbstractHttpFileSystem$HttpDataInputStream."<init>":(Ljava/io/InputStream;)V
      30: invokespecial #11                 // Method org/apache/hadoop/fs/FSDataInputStream."<init>":(Ljava/io/InputStream;)V
      33: areturn

  public org.apache.hadoop.fs.FSDataOutputStream create(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission, boolean, int, short, long, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: new           #12                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #13                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public org.apache.hadoop.fs.FSDataOutputStream append(org.apache.hadoop.fs.Path, int, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: new           #12                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #13                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean rename(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #12                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #13                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean delete(org.apache.hadoop.fs.Path, boolean) throws java.io.IOException;
    Code:
       0: new           #12                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #13                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public org.apache.hadoop.fs.FileStatus[] listStatus(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #12                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #13                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void setWorkingDirectory(org.apache.hadoop.fs.Path);
    Code:
       0: return

  public org.apache.hadoop.fs.Path getWorkingDirectory();
    Code:
       0: getstatic     #14                 // Field WORKING_DIR:Lorg/apache/hadoop/fs/Path;
       3: areturn

  public boolean mkdirs(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission) throws java.io.IOException;
    Code:
       0: iconst_0
       1: ireturn

  public org.apache.hadoop.fs.FileStatus getFileStatus(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #15                 // class org/apache/hadoop/fs/FileStatus
       3: dup
       4: ldc2_w        #16                 // long -1l
       7: iconst_0
       8: iconst_1
       9: ldc2_w        #19                 // long 4096l
      12: lconst_0
      13: aload_1
      14: invokespecial #21                 // Method org/apache/hadoop/fs/FileStatus."<init>":(JZIJJLorg/apache/hadoop/fs/Path;)V
      17: areturn

  public boolean hasPathCapability(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #22                 // Method org/apache/hadoop/fs/impl/PathCapabilitiesSupport.validatePathCapabilityArgs:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Ljava/lang/String;
       5: astore_3
       6: iconst_m1
       7: istore        4
       9: aload_3
      10: invokevirtual #23                 // Method java/lang/String.hashCode:()I
      13: lookupswitch  { // 1
            2131734190: 32
               default: 44
          }
      32: aload_3
      33: ldc           #24                 // String fs.capability.paths.read-only-connector
      35: invokevirtual #25                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      38: ifeq          44
      41: iconst_0
      42: istore        4
      44: iload         4
      46: lookupswitch  { // 1
                     0: 64
               default: 66
          }
      64: iconst_1
      65: ireturn
      66: aload_0
      67: aload_1
      68: aload_2
      69: invokespecial #26                 // Method org/apache/hadoop/fs/FileSystem.hasPathCapability:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Z
      72: ireturn

  static {};
    Code:
       0: new           #27                 // class org/apache/hadoop/fs/Path
       3: dup
       4: ldc           #28                 // String /
       6: invokespecial #29                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
       9: putstatic     #14                 // Field WORKING_DIR:Lorg/apache/hadoop/fs/Path;
      12: return
}
