Compiled from "RuleBasedLdapGroupsMapping.java"
public class org.apache.hadoop.security.RuleBasedLdapGroupsMapping extends org.apache.hadoop.security.LdapGroupsMapping {
  public static final java.lang.String CONVERSION_RULE_KEY;

  private static final java.lang.String CONVERSION_RULE_DEFAULT;

  private static final org.slf4j.Logger LOG;

  private org.apache.hadoop.security.RuleBasedLdapGroupsMapping$Rule rule;

  public org.apache.hadoop.security.RuleBasedLdapGroupsMapping();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/apache/hadoop/security/LdapGroupsMapping."<init>":()V
       4: return

  public synchronized void setConf(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method org/apache/hadoop/security/LdapGroupsMapping.setConf:(Lorg/apache/hadoop/conf/Configuration;)V
       5: aload_1
       6: ldc           #5                  // String hadoop.security.group.mapping.ldap.conversion.rule
       8: ldc           #6                  // String none
      10: invokevirtual #7                  // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      13: astore_2
      14: aload_0
      15: aload_2
      16: invokevirtual #8                  // Method java/lang/String.toUpperCase:()Ljava/lang/String;
      19: invokestatic  #9                  // Method org/apache/hadoop/security/RuleBasedLdapGroupsMapping$Rule.valueOf:(Ljava/lang/String;)Lorg/apache/hadoop/security/RuleBasedLdapGroupsMapping$Rule;
      22: putfield      #10                 // Field rule:Lorg/apache/hadoop/security/RuleBasedLdapGroupsMapping$Rule;
      25: goto          57
      28: astore_3
      29: getstatic     #12                 // Field LOG:Lorg/slf4j/Logger;
      32: ldc           #13                 // String Invalid {} configured: \'{}\'. Using default value: \'{}\'
      34: iconst_3
      35: anewarray     #14                 // class java/lang/Object
      38: dup
      39: iconst_0
      40: ldc           #5                  // String hadoop.security.group.mapping.ldap.conversion.rule
      42: aastore
      43: dup
      44: iconst_1
      45: aload_2
      46: aastore
      47: dup
      48: iconst_2
      49: ldc           #6                  // String none
      51: aastore
      52: invokeinterface #15,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;[Ljava/lang/Object;)V
      57: return
    Exception table:
       from    to  target type
          14    25    28   Class java/lang/IllegalArgumentException

  public synchronized java.util.List<java.lang.String> getGroups(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #16                 // Method org/apache/hadoop/security/LdapGroupsMapping.getGroups:(Ljava/lang/String;)Ljava/util/List;
       5: astore_2
       6: getstatic     #17                 // Field org/apache/hadoop/security/RuleBasedLdapGroupsMapping$1.$SwitchMap$org$apache$hadoop$security$RuleBasedLdapGroupsMapping$Rule:[I
       9: aload_0
      10: getfield      #10                 // Field rule:Lorg/apache/hadoop/security/RuleBasedLdapGroupsMapping$Rule;
      13: invokevirtual #18                 // Method org/apache/hadoop/security/RuleBasedLdapGroupsMapping$Rule.ordinal:()I
      16: iaload
      17: tableswitch   { // 1 to 3
                     1: 44
                     2: 72
                     3: 100
               default: 100
          }
      44: aload_2
      45: invokeinterface #19,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      50: invokedynamic #20,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      55: invokeinterface #21,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      60: invokestatic  #22                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      63: invokeinterface #23,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      68: checkcast     #24                 // class java/util/List
      71: areturn
      72: aload_2
      73: invokeinterface #19,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      78: invokedynamic #25,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      83: invokeinterface #21,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      88: invokestatic  #22                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      91: invokeinterface #23,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      96: checkcast     #24                 // class java/util/List
      99: areturn
     100: aload_2
     101: areturn

  static {};
    Code:
       0: ldc           #4                  // class org/apache/hadoop/security/RuleBasedLdapGroupsMapping
       2: invokestatic  #26                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #12                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
