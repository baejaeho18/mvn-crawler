Compiled from "ReadaheadPool.java"
public class org.apache.hadoop.io.ReadaheadPool {
  static final org.slf4j.Logger LOG;

  private static final int POOL_SIZE;

  private static final int MAX_POOL_SIZE;

  private static final int CAPACITY;

  private final java.util.concurrent.ThreadPoolExecutor pool;

  private static org.apache.hadoop.io.ReadaheadPool instance;

  public static org.apache.hadoop.io.ReadaheadPool getInstance();
    Code:
       0: ldc           #1                  // class org/apache/hadoop/io/ReadaheadPool
       2: dup
       3: astore_0
       4: monitorenter
       5: getstatic     #2                  // Field instance:Lorg/apache/hadoop/io/ReadaheadPool;
       8: ifnonnull     27
      11: invokestatic  #3                  // Method org/apache/hadoop/io/nativeio/NativeIO.isAvailable:()Z
      14: ifeq          27
      17: new           #1                  // class org/apache/hadoop/io/ReadaheadPool
      20: dup
      21: invokespecial #4                  // Method "<init>":()V
      24: putstatic     #2                  // Field instance:Lorg/apache/hadoop/io/ReadaheadPool;
      27: getstatic     #2                  // Field instance:Lorg/apache/hadoop/io/ReadaheadPool;
      30: aload_0
      31: monitorexit
      32: areturn
      33: astore_1
      34: aload_0
      35: monitorexit
      36: aload_1
      37: athrow
    Exception table:
       from    to  target type
           5    32    33   any
          33    36    33   any

  public static void resetInstance();
    Code:
       0: ldc           #1                  // class org/apache/hadoop/io/ReadaheadPool
       2: dup
       3: astore_0
       4: monitorenter
       5: getstatic     #2                  // Field instance:Lorg/apache/hadoop/io/ReadaheadPool;
       8: ifnull        25
      11: getstatic     #2                  // Field instance:Lorg/apache/hadoop/io/ReadaheadPool;
      14: getfield      #5                  // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
      17: invokevirtual #6                  // Method java/util/concurrent/ThreadPoolExecutor.shutdownNow:()Ljava/util/List;
      20: pop
      21: aconst_null
      22: putstatic     #2                  // Field instance:Lorg/apache/hadoop/io/ReadaheadPool;
      25: aload_0
      26: monitorexit
      27: goto          35
      30: astore_1
      31: aload_0
      32: monitorexit
      33: aload_1
      34: athrow
      35: return
    Exception table:
       from    to  target type
           5    27    30   any
          30    33    30   any

  private org.apache.hadoop.io.ReadaheadPool();
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #8                  // class java/util/concurrent/ThreadPoolExecutor
       8: dup
       9: iconst_4
      10: bipush        16
      12: ldc2_w        #9                  // long 3l
      15: getstatic     #11                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      18: new           #12                 // class java/util/concurrent/ArrayBlockingQueue
      21: dup
      22: sipush        1024
      25: invokespecial #13                 // Method java/util/concurrent/ArrayBlockingQueue."<init>":(I)V
      28: invokespecial #14                 // Method java/util/concurrent/ThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;)V
      31: putfield      #5                  // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
      34: aload_0
      35: getfield      #5                  // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
      38: new           #15                 // class java/util/concurrent/ThreadPoolExecutor$DiscardOldestPolicy
      41: dup
      42: invokespecial #16                 // Method java/util/concurrent/ThreadPoolExecutor$DiscardOldestPolicy."<init>":()V
      45: invokevirtual #17                 // Method java/util/concurrent/ThreadPoolExecutor.setRejectedExecutionHandler:(Ljava/util/concurrent/RejectedExecutionHandler;)V
      48: aload_0
      49: getfield      #5                  // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
      52: new           #18                 // class com/google/common/util/concurrent/ThreadFactoryBuilder
      55: dup
      56: invokespecial #19                 // Method com/google/common/util/concurrent/ThreadFactoryBuilder."<init>":()V
      59: iconst_1
      60: invokevirtual #20                 // Method com/google/common/util/concurrent/ThreadFactoryBuilder.setDaemon:(Z)Lcom/google/common/util/concurrent/ThreadFactoryBuilder;
      63: ldc           #21                 // String Readahead Thread #%d
      65: invokevirtual #22                 // Method com/google/common/util/concurrent/ThreadFactoryBuilder.setNameFormat:(Ljava/lang/String;)Lcom/google/common/util/concurrent/ThreadFactoryBuilder;
      68: invokevirtual #23                 // Method com/google/common/util/concurrent/ThreadFactoryBuilder.build:()Ljava/util/concurrent/ThreadFactory;
      71: invokevirtual #24                 // Method java/util/concurrent/ThreadPoolExecutor.setThreadFactory:(Ljava/util/concurrent/ThreadFactory;)V
      74: return

  public org.apache.hadoop.io.ReadaheadPool$ReadaheadRequest readaheadStream(java.lang.String, java.io.FileDescriptor, long, long, long, org.apache.hadoop.io.ReadaheadPool$ReadaheadRequest);
    Code:
       0: lload_3
       1: lload         7
       3: lcmp
       4: ifgt          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #25                 // String Readahead position %s higher than maxOffsetToRead %s
      14: lload_3
      15: lload         7
      17: invokestatic  #26                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;JJ)V
      20: lload         5
      22: lconst_0
      23: lcmp
      24: ifgt          29
      27: aconst_null
      28: areturn
      29: ldc2_w        #28                 // long -9223372036854775808l
      32: lstore        10
      34: aload         9
      36: ifnull        48
      39: aload         9
      41: invokeinterface #30,  1           // InterfaceMethod org/apache/hadoop/io/ReadaheadPool$ReadaheadRequest.getOffset:()J
      46: lstore        10
      48: lload         10
      50: lload         5
      52: ldc2_w        #31                 // long 2l
      55: ldiv
      56: ladd
      57: lstore        12
      59: lload_3
      60: lload         12
      62: lcmp
      63: iflt          111
      66: aload         9
      68: ifnull        81
      71: aload         9
      73: invokeinterface #33,  1           // InterfaceMethod org/apache/hadoop/io/ReadaheadPool$ReadaheadRequest.cancel:()V
      78: aconst_null
      79: astore        9
      81: lload         5
      83: lload         7
      85: lload_3
      86: lsub
      87: invokestatic  #34                 // Method java/lang/Math.min:(JJ)J
      90: lstore        14
      92: lload         14
      94: lconst_0
      95: lcmp
      96: ifgt          101
      99: aconst_null
     100: areturn
     101: aload_0
     102: aload_1
     103: aload_2
     104: lload_3
     105: lload         14
     107: invokevirtual #35                 // Method submitReadahead:(Ljava/lang/String;Ljava/io/FileDescriptor;JJ)Lorg/apache/hadoop/io/ReadaheadPool$ReadaheadRequest;
     110: areturn
     111: aload         9
     113: areturn

  public org.apache.hadoop.io.ReadaheadPool$ReadaheadRequest submitReadahead(java.lang.String, java.io.FileDescriptor, long, long);
    Code:
       0: new           #36                 // class org/apache/hadoop/io/ReadaheadPool$ReadaheadRequestImpl
       3: dup
       4: aload_1
       5: aload_2
       6: lload_3
       7: lload         5
       9: aconst_null
      10: invokespecial #37                 // Method org/apache/hadoop/io/ReadaheadPool$ReadaheadRequestImpl."<init>":(Ljava/lang/String;Ljava/io/FileDescriptor;JJLorg/apache/hadoop/io/ReadaheadPool$1;)V
      13: astore        7
      15: aload_0
      16: getfield      #5                  // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
      19: aload         7
      21: invokevirtual #38                 // Method java/util/concurrent/ThreadPoolExecutor.execute:(Ljava/lang/Runnable;)V
      24: getstatic     #39                 // Field LOG:Lorg/slf4j/Logger;
      27: invokeinterface #40,  1           // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
      32: ifeq          63
      35: getstatic     #39                 // Field LOG:Lorg/slf4j/Logger;
      38: new           #41                 // class java/lang/StringBuilder
      41: dup
      42: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
      45: ldc           #43                 // String submit readahead:
      47: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload         7
      52: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      58: invokeinterface #47,  2           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      63: aload         7
      65: areturn

  static {};
    Code:
       0: ldc           #1                  // class org/apache/hadoop/io/ReadaheadPool
       2: invokestatic  #48                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #39                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
