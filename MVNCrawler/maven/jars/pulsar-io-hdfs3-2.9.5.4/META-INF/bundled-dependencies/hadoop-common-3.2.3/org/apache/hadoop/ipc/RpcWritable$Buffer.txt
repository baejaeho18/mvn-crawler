Compiled from "RpcWritable.java"
public class org.apache.hadoop.ipc.RpcWritable$Buffer extends org.apache.hadoop.ipc.RpcWritable {
  private java.nio.ByteBuffer bb;

  public static org.apache.hadoop.ipc.RpcWritable$Buffer wrap(java.nio.ByteBuffer);
    Code:
       0: new           #1                  // class org/apache/hadoop/ipc/RpcWritable$Buffer
       3: dup
       4: aload_0
       5: invokespecial #2                  // Method "<init>":(Ljava/nio/ByteBuffer;)V
       8: areturn

  org.apache.hadoop.ipc.RpcWritable$Buffer();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/apache/hadoop/ipc/RpcWritable."<init>":()V
       4: return

  org.apache.hadoop.ipc.RpcWritable$Buffer(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/apache/hadoop/ipc/RpcWritable."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field bb:Ljava/nio/ByteBuffer;
       9: return

  java.nio.ByteBuffer getByteBuffer();
    Code:
       0: aload_0
       1: getfield      #4                  // Field bb:Ljava/nio/ByteBuffer;
       4: areturn

  void writeTo(org.apache.hadoop.ipc.ResponseBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #4                  // Field bb:Ljava/nio/ByteBuffer;
       5: invokevirtual #5                  // Method java/nio/ByteBuffer.remaining:()I
       8: invokevirtual #6                  // Method org/apache/hadoop/ipc/ResponseBuffer.ensureCapacity:(I)V
      11: aload_1
      12: aload_0
      13: getfield      #4                  // Field bb:Ljava/nio/ByteBuffer;
      16: invokevirtual #7                  // Method java/nio/ByteBuffer.array:()[B
      19: aload_0
      20: getfield      #4                  // Field bb:Ljava/nio/ByteBuffer;
      23: invokevirtual #8                  // Method java/nio/ByteBuffer.position:()I
      26: aload_0
      27: getfield      #4                  // Field bb:Ljava/nio/ByteBuffer;
      30: invokevirtual #9                  // Method java/nio/ByteBuffer.arrayOffset:()I
      33: iadd
      34: aload_0
      35: getfield      #4                  // Field bb:Ljava/nio/ByteBuffer;
      38: invokevirtual #5                  // Method java/nio/ByteBuffer.remaining:()I
      41: invokevirtual #10                 // Method org/apache/hadoop/ipc/ResponseBuffer.write:([BII)V
      44: return

  <T> T readFrom(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method java/nio/ByteBuffer.slice:()Ljava/nio/ByteBuffer;
       5: putfield      #4                  // Field bb:Ljava/nio/ByteBuffer;
       8: aload_1
       9: aload_1
      10: invokevirtual #8                  // Method java/nio/ByteBuffer.position:()I
      13: invokevirtual #12                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      16: pop
      17: aload_0
      18: areturn

  public <T> T newInstance(java.lang.Class<T>, org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #13                 // Method java/lang/Class.newInstance:()Ljava/lang/Object;
       4: astore_3
       5: aload_3
       6: instanceof    #14                 // class org/apache/hadoop/conf/Configurable
       9: ifeq          22
      12: aload_3
      13: checkcast     #14                 // class org/apache/hadoop/conf/Configurable
      16: aload_2
      17: invokeinterface #15,  2           // InterfaceMethod org/apache/hadoop/conf/Configurable.setConf:(Lorg/apache/hadoop/conf/Configuration;)V
      22: goto          37
      25: astore        4
      27: new           #17                 // class java/lang/RuntimeException
      30: dup
      31: aload         4
      33: invokespecial #18                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      36: athrow
      37: aload_0
      38: aload_3
      39: invokevirtual #19                 // Method getValue:(Ljava/lang/Object;)Ljava/lang/Object;
      42: areturn
    Exception table:
       from    to  target type
           0    22    25   Class java/lang/Exception

  public <T> T getValue(T) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #20                 // Method org/apache/hadoop/ipc/RpcWritable.wrap:(Ljava/lang/Object;)Lorg/apache/hadoop/ipc/RpcWritable;
       4: aload_0
       5: getfield      #4                  // Field bb:Ljava/nio/ByteBuffer;
       8: invokevirtual #21                 // Method org/apache/hadoop/ipc/RpcWritable.readFrom:(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
      11: areturn

  public int remaining();
    Code:
       0: aload_0
       1: getfield      #4                  // Field bb:Ljava/nio/ByteBuffer;
       4: invokevirtual #5                  // Method java/nio/ByteBuffer.remaining:()I
       7: ireturn
}
