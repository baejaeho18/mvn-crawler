Compiled from "HostsFileReader.java"
public class org.apache.hadoop.util.HostsFileReader {
  private static final org.slf4j.Logger LOG;

  private final java.util.concurrent.atomic.AtomicReference<org.apache.hadoop.util.HostsFileReader$HostDetails> current;

  private final java.util.concurrent.atomic.AtomicReference<org.apache.hadoop.util.HostsFileReader$HostDetails> lazyLoaded;

  public org.apache.hadoop.util.HostsFileReader(java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      12: putfield      #4                  // Field lazyLoaded:Ljava/util/concurrent/atomic/AtomicReference;
      15: new           #5                  // class org/apache/hadoop/util/HostsFileReader$HostDetails
      18: dup
      19: aload_1
      20: invokestatic  #6                  // Method java/util/Collections.emptySet:()Ljava/util/Set;
      23: aload_2
      24: invokestatic  #7                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      27: invokespecial #8                  // Method org/apache/hadoop/util/HostsFileReader$HostDetails."<init>":(Ljava/lang/String;Ljava/util/Set;Ljava/lang/String;Ljava/util/Map;)V
      30: astore_3
      31: aload_0
      32: new           #2                  // class java/util/concurrent/atomic/AtomicReference
      35: dup
      36: aload_3
      37: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      40: putfield      #10                 // Field current:Ljava/util/concurrent/atomic/AtomicReference;
      43: aload_0
      44: aload_1
      45: aload_2
      46: invokevirtual #11                 // Method refresh:(Ljava/lang/String;Ljava/lang/String;)V
      49: return

  public org.apache.hadoop.util.HostsFileReader(java.lang.String, java.io.InputStream, java.lang.String, java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      12: putfield      #4                  // Field lazyLoaded:Ljava/util/concurrent/atomic/AtomicReference;
      15: new           #5                  // class org/apache/hadoop/util/HostsFileReader$HostDetails
      18: dup
      19: aload_1
      20: invokestatic  #6                  // Method java/util/Collections.emptySet:()Ljava/util/Set;
      23: aload_3
      24: invokestatic  #7                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      27: invokespecial #8                  // Method org/apache/hadoop/util/HostsFileReader$HostDetails."<init>":(Ljava/lang/String;Ljava/util/Set;Ljava/lang/String;Ljava/util/Map;)V
      30: astore        5
      32: aload_0
      33: new           #2                  // class java/util/concurrent/atomic/AtomicReference
      36: dup
      37: aload         5
      39: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      42: putfield      #10                 // Field current:Ljava/util/concurrent/atomic/AtomicReference;
      45: aload_0
      46: aload_2
      47: aload         4
      49: invokevirtual #12                 // Method refresh:(Ljava/io/InputStream;Ljava/io/InputStream;)V
      52: return

  public static void readFileToSet(java.lang.String, java.lang.String, java.util.Set<java.lang.String>) throws java.io.IOException;
    Code:
       0: new           #13                 // class java/io/File
       3: dup
       4: aload_1
       5: invokespecial #14                 // Method java/io/File."<init>":(Ljava/lang/String;)V
       8: astore_3
       9: new           #15                 // class java/io/FileInputStream
      12: dup
      13: aload_3
      14: invokespecial #16                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      17: astore        4
      19: aload_0
      20: aload_1
      21: aload         4
      23: aload_2
      24: invokestatic  #17                 // Method readFileToSetWithFileInputStream:(Ljava/lang/String;Ljava/lang/String;Ljava/io/InputStream;Ljava/util/Set;)V
      27: return

  public static void readFileToSetWithFileInputStream(java.lang.String, java.lang.String, java.io.InputStream, java.util.Set<java.lang.String>) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore        4
       3: new           #18                 // class java/io/BufferedReader
       6: dup
       7: new           #19                 // class java/io/InputStreamReader
      10: dup
      11: aload_2
      12: getstatic     #20                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      15: invokespecial #21                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V
      18: invokespecial #22                 // Method java/io/BufferedReader."<init>":(Ljava/io/Reader;)V
      21: astore        4
      23: aload         4
      25: invokevirtual #23                 // Method java/io/BufferedReader.readLine:()Ljava/lang/String;
      28: dup
      29: astore        5
      31: ifnull        169
      34: aload         5
      36: ldc           #24                 // String [ \t\n\f\r]+
      38: invokevirtual #25                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      41: astore        6
      43: aload         6
      45: ifnull        166
      48: iconst_0
      49: istore        7
      51: iload         7
      53: aload         6
      55: arraylength
      56: if_icmpge     166
      59: aload         6
      61: iload         7
      63: aload         6
      65: iload         7
      67: aaload
      68: invokevirtual #26                 // Method java/lang/String.trim:()Ljava/lang/String;
      71: aastore
      72: aload         6
      74: iload         7
      76: aaload
      77: ldc           #27                 // String #
      79: invokevirtual #28                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      82: ifeq          88
      85: goto          166
      88: aload         6
      90: iload         7
      92: aaload
      93: invokevirtual #29                 // Method java/lang/String.isEmpty:()Z
      96: ifne          160
      99: getstatic     #30                 // Field LOG:Lorg/slf4j/Logger;
     102: new           #31                 // class java/lang/StringBuilder
     105: dup
     106: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
     109: ldc           #33                 // String Adding a node \"
     111: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: aload         6
     116: iload         7
     118: aaload
     119: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: ldc           #35                 // String \" to the list of
     124: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: aload_0
     128: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: ldc           #36                 // String  hosts from
     133: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: aload_1
     137: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     143: invokeinterface #38,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     148: aload_3
     149: aload         6
     151: iload         7
     153: aaload
     154: invokeinterface #39,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     159: pop
     160: iinc          7, 1
     163: goto          51
     166: goto          23
     169: aload         4
     171: ifnull        179
     174: aload         4
     176: invokevirtual #40                 // Method java/io/BufferedReader.close:()V
     179: aload_2
     180: invokevirtual #41                 // Method java/io/InputStream.close:()V
     183: goto          205
     186: astore        8
     188: aload         4
     190: ifnull        198
     193: aload         4
     195: invokevirtual #40                 // Method java/io/BufferedReader.close:()V
     198: aload_2
     199: invokevirtual #41                 // Method java/io/InputStream.close:()V
     202: aload         8
     204: athrow
     205: return
    Exception table:
       from    to  target type
           3   169   186   any
         186   188   186   any

  public void refresh() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field current:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #5                  // class org/apache/hadoop/util/HostsFileReader$HostDetails
      10: astore_1
      11: aload_0
      12: aload_1
      13: invokestatic  #43                 // Method org/apache/hadoop/util/HostsFileReader$HostDetails.access$000:(Lorg/apache/hadoop/util/HostsFileReader$HostDetails;)Ljava/lang/String;
      16: aload_1
      17: invokestatic  #44                 // Method org/apache/hadoop/util/HostsFileReader$HostDetails.access$100:(Lorg/apache/hadoop/util/HostsFileReader$HostDetails;)Ljava/lang/String;
      20: invokevirtual #11                 // Method refresh:(Ljava/lang/String;Ljava/lang/String;)V
      23: return

  public static void readFileToMap(java.lang.String, java.lang.String, java.util.Map<java.lang.String, java.lang.Integer>) throws java.io.IOException;
    Code:
       0: new           #13                 // class java/io/File
       3: dup
       4: aload_1
       5: invokespecial #14                 // Method java/io/File."<init>":(Ljava/lang/String;)V
       8: astore_3
       9: new           #15                 // class java/io/FileInputStream
      12: dup
      13: aload_3
      14: invokespecial #16                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      17: astore        4
      19: aload_0
      20: aload_1
      21: aload         4
      23: aload_2
      24: invokestatic  #45                 // Method readFileToMapWithFileInputStream:(Ljava/lang/String;Ljava/lang/String;Ljava/io/InputStream;Ljava/util/Map;)V
      27: return

  public static void readFileToMapWithFileInputStream(java.lang.String, java.lang.String, java.io.InputStream, java.util.Map<java.lang.String, java.lang.Integer>) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #46                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
       4: ldc           #47                 // String .xml
       6: invokevirtual #48                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
       9: istore        4
      11: iload         4
      13: ifeq          26
      16: aload_0
      17: aload_1
      18: aload_2
      19: aload_3
      20: invokestatic  #49                 // Method readXmlFileToMapWithFileInputStream:(Ljava/lang/String;Ljava/lang/String;Ljava/io/InputStream;Ljava/util/Map;)V
      23: goto          85
      26: new           #50                 // class java/util/HashSet
      29: dup
      30: invokespecial #51                 // Method java/util/HashSet."<init>":()V
      33: astore        5
      35: aload_0
      36: aload_1
      37: aload_2
      38: aload         5
      40: invokestatic  #17                 // Method readFileToSetWithFileInputStream:(Ljava/lang/String;Ljava/lang/String;Ljava/io/InputStream;Ljava/util/Set;)V
      43: aload         5
      45: invokevirtual #52                 // Method java/util/HashSet.iterator:()Ljava/util/Iterator;
      48: astore        6
      50: aload         6
      52: invokeinterface #53,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      57: ifeq          85
      60: aload         6
      62: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      67: checkcast     #55                 // class java/lang/String
      70: astore        7
      72: aload_3
      73: aload         7
      75: aconst_null
      76: invokeinterface #56,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      81: pop
      82: goto          50
      85: return

  public static void readXmlFileToMapWithFileInputStream(java.lang.String, java.lang.String, java.io.InputStream, java.util.Map<java.lang.String, java.lang.Integer>) throws java.io.IOException;
    Code:
       0: invokestatic  #57                 // Method javax/xml/parsers/DocumentBuilderFactory.newInstance:()Ljavax/xml/parsers/DocumentBuilderFactory;
       3: astore        5
       5: aload         5
       7: invokevirtual #58                 // Method javax/xml/parsers/DocumentBuilderFactory.newDocumentBuilder:()Ljavax/xml/parsers/DocumentBuilder;
      10: astore        6
      12: aload         6
      14: aload_2
      15: invokevirtual #59                 // Method javax/xml/parsers/DocumentBuilder.parse:(Ljava/io/InputStream;)Lorg/w3c/dom/Document;
      18: astore        4
      20: aload         4
      22: invokeinterface #60,  1           // InterfaceMethod org/w3c/dom/Document.getDocumentElement:()Lorg/w3c/dom/Element;
      27: astore        7
      29: aload         7
      31: ldc           #61                 // String host
      33: invokeinterface #62,  2           // InterfaceMethod org/w3c/dom/Element.getElementsByTagName:(Ljava/lang/String;)Lorg/w3c/dom/NodeList;
      38: astore        8
      40: iconst_0
      41: istore        9
      43: iload         9
      45: aload         8
      47: invokeinterface #63,  1           // InterfaceMethod org/w3c/dom/NodeList.getLength:()I
      52: if_icmpge     223
      55: aload         8
      57: iload         9
      59: invokeinterface #64,  2           // InterfaceMethod org/w3c/dom/NodeList.item:(I)Lorg/w3c/dom/Node;
      64: astore        10
      66: aload         10
      68: invokeinterface #65,  1           // InterfaceMethod org/w3c/dom/Node.getNodeType:()S
      73: iconst_1
      74: if_icmpne     217
      77: aload         10
      79: checkcast     #67                 // class org/w3c/dom/Element
      82: astore        11
      84: aload         11
      86: ldc           #68                 // String name
      88: invokestatic  #69                 // Method readFirstTagValue:(Lorg/w3c/dom/Element;Ljava/lang/String;)Ljava/lang/String;
      91: astore        12
      93: aload         12
      95: invokestatic  #70                 // Method org/apache/hadoop/util/StringUtils.getTrimmedStrings:(Ljava/lang/String;)[Ljava/lang/String;
      98: astore        13
     100: aload         11
     102: ldc           #71                 // String timeout
     104: invokestatic  #69                 // Method readFirstTagValue:(Lorg/w3c/dom/Element;Ljava/lang/String;)Ljava/lang/String;
     107: astore        14
     109: aload         14
     111: ifnonnull     118
     114: aconst_null
     115: goto          126
     118: aload         14
     120: invokestatic  #72                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     123: invokestatic  #73                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     126: astore        15
     128: aload         13
     130: astore        16
     132: aload         16
     134: arraylength
     135: istore        17
     137: iconst_0
     138: istore        18
     140: iload         18
     142: iload         17
     144: if_icmpge     217
     147: aload         16
     149: iload         18
     151: aaload
     152: astore        19
     154: aload_3
     155: aload         19
     157: aload         15
     159: invokeinterface #56,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     164: pop
     165: getstatic     #30                 // Field LOG:Lorg/slf4j/Logger;
     168: new           #31                 // class java/lang/StringBuilder
     171: dup
     172: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
     175: ldc           #33                 // String Adding a node \"
     177: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     180: aload         19
     182: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     185: ldc           #35                 // String \" to the list of
     187: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     190: aload_0
     191: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     194: ldc           #36                 // String  hosts from
     196: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     199: aload_1
     200: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     203: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     206: invokeinterface #38,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     211: iinc          18, 1
     214: goto          140
     217: iinc          9, 1
     220: goto          43
     223: aload_2
     224: invokevirtual #41                 // Method java/io/InputStream.close:()V
     227: goto          280
     230: astore        6
     232: getstatic     #30                 // Field LOG:Lorg/slf4j/Logger;
     235: new           #31                 // class java/lang/StringBuilder
     238: dup
     239: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
     242: ldc           #77                 // String error parsing
     244: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     247: aload_1
     248: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     251: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     254: aload         6
     256: invokeinterface #78,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     261: new           #79                 // class java/lang/RuntimeException
     264: dup
     265: aload         6
     267: invokespecial #80                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     270: athrow
     271: astore        20
     273: aload_2
     274: invokevirtual #41                 // Method java/io/InputStream.close:()V
     277: aload         20
     279: athrow
     280: return
    Exception table:
       from    to  target type
           5   223   230   Class java/io/IOException
           5   223   230   Class org/xml/sax/SAXException
           5   223   230   Class javax/xml/parsers/ParserConfigurationException
           5   223   271   any
         230   273   271   any

  static java.lang.String readFirstTagValue(org.w3c.dom.Element, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #62,  2           // InterfaceMethod org/w3c/dom/Element.getElementsByTagName:(Ljava/lang/String;)Lorg/w3c/dom/NodeList;
       7: astore_2
       8: aload_2
       9: invokeinterface #63,  1           // InterfaceMethod org/w3c/dom/NodeList.getLength:()I
      14: ifne          21
      17: aconst_null
      18: goto          33
      21: aload_2
      22: iconst_0
      23: invokeinterface #64,  2           // InterfaceMethod org/w3c/dom/NodeList.item:(I)Lorg/w3c/dom/Node;
      28: invokeinterface #81,  1           // InterfaceMethod org/w3c/dom/Node.getTextContent:()Ljava/lang/String;
      33: areturn

  public void refresh(java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokespecial #82                 // Method refreshInternal:(Ljava/lang/String;Ljava/lang/String;Z)V
       7: return

  public void lazyRefresh(java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokespecial #82                 // Method refreshInternal:(Ljava/lang/String;Ljava/lang/String;Z)V
       7: return

  private void refreshInternal(java.lang.String, java.lang.String, boolean) throws java.io.IOException;
    Code:
       0: getstatic     #30                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #83                 // String Refreshing hosts (include/exclude) list (lazy refresh = {})
       5: iload_3
       6: invokestatic  #84                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       9: invokeinterface #85,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      14: aload_0
      15: getfield      #10                 // Field current:Ljava/util/concurrent/atomic/AtomicReference;
      18: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      21: checkcast     #5                  // class org/apache/hadoop/util/HostsFileReader$HostDetails
      24: astore        4
      26: aload         4
      28: invokestatic  #86                 // Method org/apache/hadoop/util/HostsFileReader$HostDetails.access$200:(Lorg/apache/hadoop/util/HostsFileReader$HostDetails;)Ljava/util/Set;
      31: astore        5
      33: aload         4
      35: invokestatic  #87                 // Method org/apache/hadoop/util/HostsFileReader$HostDetails.access$300:(Lorg/apache/hadoop/util/HostsFileReader$HostDetails;)Ljava/util/Map;
      38: astore        6
      40: aload_1
      41: ifnull        75
      44: aload_1
      45: invokevirtual #29                 // Method java/lang/String.isEmpty:()Z
      48: ifne          75
      51: new           #50                 // class java/util/HashSet
      54: dup
      55: invokespecial #51                 // Method java/util/HashSet."<init>":()V
      58: astore        5
      60: ldc           #88                 // String included
      62: aload_1
      63: aload         5
      65: invokestatic  #89                 // Method readFileToSet:(Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;)V
      68: aload         5
      70: invokestatic  #90                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      73: astore        5
      75: aload_2
      76: ifnull        110
      79: aload_2
      80: invokevirtual #29                 // Method java/lang/String.isEmpty:()Z
      83: ifne          110
      86: new           #91                 // class java/util/HashMap
      89: dup
      90: invokespecial #92                 // Method java/util/HashMap."<init>":()V
      93: astore        6
      95: ldc           #93                 // String excluded
      97: aload_2
      98: aload         6
     100: invokestatic  #94                 // Method readFileToMap:(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
     103: aload         6
     105: invokestatic  #95                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     108: astore        6
     110: new           #5                  // class org/apache/hadoop/util/HostsFileReader$HostDetails
     113: dup
     114: aload_1
     115: aload         5
     117: aload_2
     118: aload         6
     120: invokespecial #8                  // Method org/apache/hadoop/util/HostsFileReader$HostDetails."<init>":(Ljava/lang/String;Ljava/util/Set;Ljava/lang/String;Ljava/util/Map;)V
     123: astore        7
     125: iload_3
     126: ifeq          141
     129: aload_0
     130: getfield      #4                  // Field lazyLoaded:Ljava/util/concurrent/atomic/AtomicReference;
     133: aload         7
     135: invokevirtual #96                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
     138: goto          150
     141: aload_0
     142: getfield      #10                 // Field current:Ljava/util/concurrent/atomic/AtomicReference;
     145: aload         7
     147: invokevirtual #96                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
     150: return

  public void finishRefresh();
    Code:
       0: aload_0
       1: getfield      #4                  // Field lazyLoaded:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: ifnonnull     20
      10: new           #97                 // class java/lang/IllegalStateException
      13: dup
      14: ldc           #98                 // String Cannot finish refresh - call lazyRefresh() first
      16: invokespecial #99                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #10                 // Field current:Ljava/util/concurrent/atomic/AtomicReference;
      24: aload_0
      25: getfield      #4                  // Field lazyLoaded:Ljava/util/concurrent/atomic/AtomicReference;
      28: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      31: invokevirtual #96                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      34: aload_0
      35: getfield      #4                  // Field lazyLoaded:Ljava/util/concurrent/atomic/AtomicReference;
      38: aconst_null
      39: invokevirtual #96                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      42: return

  public void refresh(java.io.InputStream, java.io.InputStream) throws java.io.IOException;
    Code:
       0: getstatic     #30                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #100                // String Refreshing hosts (include/exclude) list
       5: invokeinterface #38,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      10: aload_0
      11: getfield      #10                 // Field current:Ljava/util/concurrent/atomic/AtomicReference;
      14: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      17: checkcast     #5                  // class org/apache/hadoop/util/HostsFileReader$HostDetails
      20: astore_3
      21: aload_3
      22: invokestatic  #86                 // Method org/apache/hadoop/util/HostsFileReader$HostDetails.access$200:(Lorg/apache/hadoop/util/HostsFileReader$HostDetails;)Ljava/util/Set;
      25: astore        4
      27: aload_3
      28: invokestatic  #87                 // Method org/apache/hadoop/util/HostsFileReader$HostDetails.access$300:(Lorg/apache/hadoop/util/HostsFileReader$HostDetails;)Ljava/util/Map;
      31: astore        5
      33: aload_1
      34: ifnull        65
      37: new           #50                 // class java/util/HashSet
      40: dup
      41: invokespecial #51                 // Method java/util/HashSet."<init>":()V
      44: astore        4
      46: ldc           #88                 // String included
      48: aload_3
      49: invokestatic  #43                 // Method org/apache/hadoop/util/HostsFileReader$HostDetails.access$000:(Lorg/apache/hadoop/util/HostsFileReader$HostDetails;)Ljava/lang/String;
      52: aload_1
      53: aload         4
      55: invokestatic  #17                 // Method readFileToSetWithFileInputStream:(Ljava/lang/String;Ljava/lang/String;Ljava/io/InputStream;Ljava/util/Set;)V
      58: aload         4
      60: invokestatic  #90                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      63: astore        4
      65: aload_2
      66: ifnull        97
      69: new           #91                 // class java/util/HashMap
      72: dup
      73: invokespecial #92                 // Method java/util/HashMap."<init>":()V
      76: astore        5
      78: ldc           #93                 // String excluded
      80: aload_3
      81: invokestatic  #44                 // Method org/apache/hadoop/util/HostsFileReader$HostDetails.access$100:(Lorg/apache/hadoop/util/HostsFileReader$HostDetails;)Ljava/lang/String;
      84: aload_2
      85: aload         5
      87: invokestatic  #45                 // Method readFileToMapWithFileInputStream:(Ljava/lang/String;Ljava/lang/String;Ljava/io/InputStream;Ljava/util/Map;)V
      90: aload         5
      92: invokestatic  #95                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      95: astore        5
      97: new           #5                  // class org/apache/hadoop/util/HostsFileReader$HostDetails
     100: dup
     101: aload_3
     102: invokestatic  #43                 // Method org/apache/hadoop/util/HostsFileReader$HostDetails.access$000:(Lorg/apache/hadoop/util/HostsFileReader$HostDetails;)Ljava/lang/String;
     105: aload         4
     107: aload_3
     108: invokestatic  #44                 // Method org/apache/hadoop/util/HostsFileReader$HostDetails.access$100:(Lorg/apache/hadoop/util/HostsFileReader$HostDetails;)Ljava/lang/String;
     111: aload         5
     113: invokespecial #8                  // Method org/apache/hadoop/util/HostsFileReader$HostDetails."<init>":(Ljava/lang/String;Ljava/util/Set;Ljava/lang/String;Ljava/util/Map;)V
     116: astore        6
     118: aload_0
     119: getfield      #10                 // Field current:Ljava/util/concurrent/atomic/AtomicReference;
     122: aload         6
     124: invokevirtual #96                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
     127: return

  public java.util.Set<java.lang.String> getHosts();
    Code:
       0: aload_0
       1: getfield      #10                 // Field current:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #5                  // class org/apache/hadoop/util/HostsFileReader$HostDetails
      10: astore_1
      11: aload_1
      12: invokevirtual #101                // Method org/apache/hadoop/util/HostsFileReader$HostDetails.getIncludedHosts:()Ljava/util/Set;
      15: areturn

  public java.util.Set<java.lang.String> getExcludedHosts();
    Code:
       0: aload_0
       1: getfield      #10                 // Field current:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #5                  // class org/apache/hadoop/util/HostsFileReader$HostDetails
      10: astore_1
      11: aload_1
      12: invokevirtual #102                // Method org/apache/hadoop/util/HostsFileReader$HostDetails.getExcludedHosts:()Ljava/util/Set;
      15: areturn

  public void getHostDetails(java.util.Set<java.lang.String>, java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #10                 // Field current:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #5                  // class org/apache/hadoop/util/HostsFileReader$HostDetails
      10: astore_3
      11: aload_1
      12: aload_3
      13: invokevirtual #101                // Method org/apache/hadoop/util/HostsFileReader$HostDetails.getIncludedHosts:()Ljava/util/Set;
      16: invokeinterface #103,  2          // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      21: pop
      22: aload_2
      23: aload_3
      24: invokevirtual #102                // Method org/apache/hadoop/util/HostsFileReader$HostDetails.getExcludedHosts:()Ljava/util/Set;
      27: invokeinterface #103,  2          // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      32: pop
      33: return

  public void getHostDetails(java.util.Set<java.lang.String>, java.util.Map<java.lang.String, java.lang.Integer>);
    Code:
       0: aload_0
       1: getfield      #10                 // Field current:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #5                  // class org/apache/hadoop/util/HostsFileReader$HostDetails
      10: astore_3
      11: aload_1
      12: aload_3
      13: invokevirtual #101                // Method org/apache/hadoop/util/HostsFileReader$HostDetails.getIncludedHosts:()Ljava/util/Set;
      16: invokeinterface #103,  2          // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      21: pop
      22: aload_2
      23: aload_3
      24: invokevirtual #104                // Method org/apache/hadoop/util/HostsFileReader$HostDetails.getExcludedMap:()Ljava/util/Map;
      27: invokeinterface #105,  2          // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      32: return

  public org.apache.hadoop.util.HostsFileReader$HostDetails getHostDetails();
    Code:
       0: aload_0
       1: getfield      #10                 // Field current:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #5                  // class org/apache/hadoop/util/HostsFileReader$HostDetails
      10: areturn

  public org.apache.hadoop.util.HostsFileReader$HostDetails getLazyLoadedHostDetails();
    Code:
       0: aload_0
       1: getfield      #4                  // Field lazyLoaded:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #5                  // class org/apache/hadoop/util/HostsFileReader$HostDetails
      10: areturn

  public void setIncludesFile(java.lang.String);
    Code:
       0: getstatic     #30                 // Field LOG:Lorg/slf4j/Logger;
       3: new           #31                 // class java/lang/StringBuilder
       6: dup
       7: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      10: ldc           #106                // String Setting the includes file to
      12: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: aload_1
      16: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: invokeinterface #38,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      27: aload_0
      28: getfield      #10                 // Field current:Ljava/util/concurrent/atomic/AtomicReference;
      31: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      34: checkcast     #5                  // class org/apache/hadoop/util/HostsFileReader$HostDetails
      37: astore_2
      38: new           #5                  // class org/apache/hadoop/util/HostsFileReader$HostDetails
      41: dup
      42: aload_1
      43: aload_2
      44: invokestatic  #86                 // Method org/apache/hadoop/util/HostsFileReader$HostDetails.access$200:(Lorg/apache/hadoop/util/HostsFileReader$HostDetails;)Ljava/util/Set;
      47: aload_2
      48: invokestatic  #44                 // Method org/apache/hadoop/util/HostsFileReader$HostDetails.access$100:(Lorg/apache/hadoop/util/HostsFileReader$HostDetails;)Ljava/lang/String;
      51: aload_2
      52: invokestatic  #87                 // Method org/apache/hadoop/util/HostsFileReader$HostDetails.access$300:(Lorg/apache/hadoop/util/HostsFileReader$HostDetails;)Ljava/util/Map;
      55: invokespecial #8                  // Method org/apache/hadoop/util/HostsFileReader$HostDetails."<init>":(Ljava/lang/String;Ljava/util/Set;Ljava/lang/String;Ljava/util/Map;)V
      58: astore_3
      59: aload_0
      60: getfield      #10                 // Field current:Ljava/util/concurrent/atomic/AtomicReference;
      63: aload_3
      64: invokevirtual #96                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      67: return

  public void setExcludesFile(java.lang.String);
    Code:
       0: getstatic     #30                 // Field LOG:Lorg/slf4j/Logger;
       3: new           #31                 // class java/lang/StringBuilder
       6: dup
       7: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      10: ldc           #107                // String Setting the excludes file to
      12: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: aload_1
      16: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: invokeinterface #38,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      27: aload_0
      28: getfield      #10                 // Field current:Ljava/util/concurrent/atomic/AtomicReference;
      31: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      34: checkcast     #5                  // class org/apache/hadoop/util/HostsFileReader$HostDetails
      37: astore_2
      38: new           #5                  // class org/apache/hadoop/util/HostsFileReader$HostDetails
      41: dup
      42: aload_2
      43: invokestatic  #43                 // Method org/apache/hadoop/util/HostsFileReader$HostDetails.access$000:(Lorg/apache/hadoop/util/HostsFileReader$HostDetails;)Ljava/lang/String;
      46: aload_2
      47: invokestatic  #86                 // Method org/apache/hadoop/util/HostsFileReader$HostDetails.access$200:(Lorg/apache/hadoop/util/HostsFileReader$HostDetails;)Ljava/util/Set;
      50: aload_1
      51: aload_2
      52: invokestatic  #87                 // Method org/apache/hadoop/util/HostsFileReader$HostDetails.access$300:(Lorg/apache/hadoop/util/HostsFileReader$HostDetails;)Ljava/util/Map;
      55: invokespecial #8                  // Method org/apache/hadoop/util/HostsFileReader$HostDetails."<init>":(Ljava/lang/String;Ljava/util/Set;Ljava/lang/String;Ljava/util/Map;)V
      58: astore_3
      59: aload_0
      60: getfield      #10                 // Field current:Ljava/util/concurrent/atomic/AtomicReference;
      63: aload_3
      64: invokevirtual #96                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      67: return

  public void updateFileNames(java.lang.String, java.lang.String);
    Code:
       0: getstatic     #30                 // Field LOG:Lorg/slf4j/Logger;
       3: new           #31                 // class java/lang/StringBuilder
       6: dup
       7: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      10: ldc           #106                // String Setting the includes file to
      12: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: aload_1
      16: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: invokeinterface #38,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      27: getstatic     #30                 // Field LOG:Lorg/slf4j/Logger;
      30: new           #31                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #107                // String Setting the excludes file to
      39: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_2
      43: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokeinterface #38,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      54: aload_0
      55: getfield      #10                 // Field current:Ljava/util/concurrent/atomic/AtomicReference;
      58: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      61: checkcast     #5                  // class org/apache/hadoop/util/HostsFileReader$HostDetails
      64: astore_3
      65: new           #5                  // class org/apache/hadoop/util/HostsFileReader$HostDetails
      68: dup
      69: aload_1
      70: aload_3
      71: invokestatic  #86                 // Method org/apache/hadoop/util/HostsFileReader$HostDetails.access$200:(Lorg/apache/hadoop/util/HostsFileReader$HostDetails;)Ljava/util/Set;
      74: aload_2
      75: aload_3
      76: invokestatic  #87                 // Method org/apache/hadoop/util/HostsFileReader$HostDetails.access$300:(Lorg/apache/hadoop/util/HostsFileReader$HostDetails;)Ljava/util/Map;
      79: invokespecial #8                  // Method org/apache/hadoop/util/HostsFileReader$HostDetails."<init>":(Ljava/lang/String;Ljava/util/Set;Ljava/lang/String;Ljava/util/Map;)V
      82: astore        4
      84: aload_0
      85: getfield      #10                 // Field current:Ljava/util/concurrent/atomic/AtomicReference;
      88: aload         4
      90: invokevirtual #96                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      93: return

  static {};
    Code:
       0: ldc           #108                // class org/apache/hadoop/util/HostsFileReader
       2: invokestatic  #109                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #30                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
