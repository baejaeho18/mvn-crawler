Compiled from "RawLocalFileSystem.java"
class org.apache.hadoop.fs.RawLocalFileSystem$LocalFSFileInputStream extends org.apache.hadoop.fs.FSInputStream implements org.apache.hadoop.fs.HasFileDescriptor {
  private java.io.FileInputStream fis;

  private long position;

  final org.apache.hadoop.fs.RawLocalFileSystem this$0;

  public org.apache.hadoop.fs.RawLocalFileSystem$LocalFSFileInputStream(org.apache.hadoop.fs.RawLocalFileSystem, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/hadoop/fs/RawLocalFileSystem;
       5: aload_0
       6: invokespecial #2                  // Method org/apache/hadoop/fs/FSInputStream."<init>":()V
       9: aload_0
      10: new           #3                  // class java/io/FileInputStream
      13: dup
      14: aload_1
      15: aload_2
      16: invokevirtual #4                  // Method org/apache/hadoop/fs/RawLocalFileSystem.pathToFile:(Lorg/apache/hadoop/fs/Path;)Ljava/io/File;
      19: invokespecial #5                  // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      22: putfield      #6                  // Field fis:Ljava/io/FileInputStream;
      25: return

  public void seek(long) throws java.io.IOException;
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifge          16
       6: new           #7                  // class java/io/EOFException
       9: dup
      10: ldc           #9                  // String Cannot seek to a negative offset
      12: invokespecial #10                 // Method java/io/EOFException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: aload_0
      17: getfield      #6                  // Field fis:Ljava/io/FileInputStream;
      20: invokevirtual #11                 // Method java/io/FileInputStream.getChannel:()Ljava/nio/channels/FileChannel;
      23: lload_1
      24: invokevirtual #12                 // Method java/nio/channels/FileChannel.position:(J)Ljava/nio/channels/FileChannel;
      27: pop
      28: aload_0
      29: lload_1
      30: putfield      #13                 // Field position:J
      33: return

  public long getPos() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field position:J
       4: lreturn

  public boolean seekToNewSource(long) throws java.io.IOException;
    Code:
       0: iconst_0
       1: ireturn

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field fis:Ljava/io/FileInputStream;
       4: invokevirtual #14                 // Method java/io/FileInputStream.available:()I
       7: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field fis:Ljava/io/FileInputStream;
       4: invokevirtual #15                 // Method java/io/FileInputStream.close:()V
       7: return

  public boolean markSupported();
    Code:
       0: iconst_0
       1: ireturn

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field fis:Ljava/io/FileInputStream;
       4: invokevirtual #16                 // Method java/io/FileInputStream.read:()I
       7: istore_1
       8: iload_1
       9: iflt          33
      12: aload_0
      13: dup
      14: getfield      #13                 // Field position:J
      17: lconst_1
      18: ladd
      19: putfield      #13                 // Field position:J
      22: aload_0
      23: getfield      #1                  // Field this$0:Lorg/apache/hadoop/fs/RawLocalFileSystem;
      26: getfield      #17                 // Field org/apache/hadoop/fs/RawLocalFileSystem.statistics:Lorg/apache/hadoop/fs/FileSystem$Statistics;
      29: lconst_1
      30: invokevirtual #18                 // Method org/apache/hadoop/fs/FileSystem$Statistics.incrementBytesRead:(J)V
      33: iload_1
      34: ireturn
      35: astore_1
      36: new           #20                 // class org/apache/hadoop/fs/FSError
      39: dup
      40: aload_1
      41: invokespecial #21                 // Method org/apache/hadoop/fs/FSError."<init>":(Ljava/lang/Throwable;)V
      44: athrow
    Exception table:
       from    to  target type
           0    34    35   Class java/io/IOException

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #13                 // Field position:J
       5: aload_1
       6: iload_2
       7: iload_3
       8: invokevirtual #22                 // Method validatePositionedReadArgs:(J[BII)V
      11: aload_0
      12: getfield      #6                  // Field fis:Ljava/io/FileInputStream;
      15: aload_1
      16: iload_2
      17: iload_3
      18: invokevirtual #23                 // Method java/io/FileInputStream.read:([BII)I
      21: istore        4
      23: iload         4
      25: ifle          53
      28: aload_0
      29: dup
      30: getfield      #13                 // Field position:J
      33: iload         4
      35: i2l
      36: ladd
      37: putfield      #13                 // Field position:J
      40: aload_0
      41: getfield      #1                  // Field this$0:Lorg/apache/hadoop/fs/RawLocalFileSystem;
      44: getfield      #17                 // Field org/apache/hadoop/fs/RawLocalFileSystem.statistics:Lorg/apache/hadoop/fs/FileSystem$Statistics;
      47: iload         4
      49: i2l
      50: invokevirtual #18                 // Method org/apache/hadoop/fs/FileSystem$Statistics.incrementBytesRead:(J)V
      53: iload         4
      55: ireturn
      56: astore        4
      58: new           #20                 // class org/apache/hadoop/fs/FSError
      61: dup
      62: aload         4
      64: invokespecial #21                 // Method org/apache/hadoop/fs/FSError."<init>":(Ljava/lang/Throwable;)V
      67: athrow
    Exception table:
       from    to  target type
          11    55    56   Class java/io/IOException

  public int read(long, byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: iload         4
       5: iload         5
       7: invokevirtual #22                 // Method validatePositionedReadArgs:(J[BII)V
      10: iload         5
      12: ifne          17
      15: iconst_0
      16: ireturn
      17: aload_3
      18: iload         4
      20: iload         5
      22: invokestatic  #24                 // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
      25: astore        6
      27: aload_0
      28: getfield      #6                  // Field fis:Ljava/io/FileInputStream;
      31: invokevirtual #11                 // Method java/io/FileInputStream.getChannel:()Ljava/nio/channels/FileChannel;
      34: aload         6
      36: lload_1
      37: invokevirtual #25                 // Method java/nio/channels/FileChannel.read:(Ljava/nio/ByteBuffer;J)I
      40: istore        7
      42: iload         7
      44: ifle          60
      47: aload_0
      48: getfield      #1                  // Field this$0:Lorg/apache/hadoop/fs/RawLocalFileSystem;
      51: getfield      #17                 // Field org/apache/hadoop/fs/RawLocalFileSystem.statistics:Lorg/apache/hadoop/fs/FileSystem$Statistics;
      54: iload         7
      56: i2l
      57: invokevirtual #18                 // Method org/apache/hadoop/fs/FileSystem$Statistics.incrementBytesRead:(J)V
      60: iload         7
      62: ireturn
      63: astore        7
      65: new           #20                 // class org/apache/hadoop/fs/FSError
      68: dup
      69: aload         7
      71: invokespecial #21                 // Method org/apache/hadoop/fs/FSError."<init>":(Ljava/lang/Throwable;)V
      74: athrow
    Exception table:
       from    to  target type
          27    62    63   Class java/io/IOException

  public long skip(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field fis:Ljava/io/FileInputStream;
       4: lload_1
       5: invokevirtual #26                 // Method java/io/FileInputStream.skip:(J)J
       8: lstore_3
       9: lload_3
      10: lconst_0
      11: lcmp
      12: ifle          25
      15: aload_0
      16: dup
      17: getfield      #13                 // Field position:J
      20: lload_3
      21: ladd
      22: putfield      #13                 // Field position:J
      25: lload_3
      26: lreturn

  public java.io.FileDescriptor getFileDescriptor() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field fis:Ljava/io/FileInputStream;
       4: invokevirtual #27                 // Method java/io/FileInputStream.getFD:()Ljava/io/FileDescriptor;
       7: areturn
}
