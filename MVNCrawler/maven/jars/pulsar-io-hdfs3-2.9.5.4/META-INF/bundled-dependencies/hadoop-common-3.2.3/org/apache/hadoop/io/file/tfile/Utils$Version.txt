Compiled from "Utils.java"
public final class org.apache.hadoop.io.file.tfile.Utils$Version implements java.lang.Comparable<org.apache.hadoop.io.file.tfile.Utils$Version> {
  private final short major;

  private final short minor;

  public org.apache.hadoop.io.file.tfile.Utils$Version(java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokeinterface #2,  1            // InterfaceMethod java/io/DataInput.readShort:()S
      11: putfield      #3                  // Field major:S
      14: aload_0
      15: aload_1
      16: invokeinterface #2,  1            // InterfaceMethod java/io/DataInput.readShort:()S
      21: putfield      #4                  // Field minor:S
      24: return

  public org.apache.hadoop.io.file.tfile.Utils$Version(short, short);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #3                  // Field major:S
       9: aload_0
      10: iload_2
      11: putfield      #4                  // Field minor:S
      14: return

  public void write(java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #3                  // Field major:S
       5: invokeinterface #5,  2            // InterfaceMethod java/io/DataOutput.writeShort:(I)V
      10: aload_1
      11: aload_0
      12: getfield      #4                  // Field minor:S
      15: invokeinterface #5,  2            // InterfaceMethod java/io/DataOutput.writeShort:(I)V
      20: return

  public int getMajor();
    Code:
       0: aload_0
       1: getfield      #3                  // Field major:S
       4: ireturn

  public int getMinor();
    Code:
       0: aload_0
       1: getfield      #4                  // Field minor:S
       4: ireturn

  public static int size();
    Code:
       0: iconst_4
       1: ireturn

  public java.lang.String toString();
    Code:
       0: new           #8                  // class java/lang/StringBuilder
       3: dup
       4: ldc           #9                  // String v
       6: invokespecial #10                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
       9: aload_0
      10: getfield      #3                  // Field major:S
      13: invokevirtual #11                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      16: ldc           #12                 // String .
      18: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_0
      22: getfield      #4                  // Field minor:S
      25: invokevirtual #11                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      28: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: areturn

  public boolean compatibleWith(org.apache.hadoop.io.file.tfile.Utils$Version);
    Code:
       0: aload_0
       1: getfield      #3                  // Field major:S
       4: aload_1
       5: getfield      #3                  // Field major:S
       8: if_icmpne     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public int compareTo(org.apache.hadoop.io.file.tfile.Utils$Version);
    Code:
       0: aload_0
       1: getfield      #3                  // Field major:S
       4: aload_1
       5: getfield      #3                  // Field major:S
       8: if_icmpeq     21
      11: aload_0
      12: getfield      #3                  // Field major:S
      15: aload_1
      16: getfield      #3                  // Field major:S
      19: isub
      20: ireturn
      21: aload_0
      22: getfield      #4                  // Field minor:S
      25: aload_1
      26: getfield      #4                  // Field minor:S
      29: isub
      30: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #15                 // class org/apache/hadoop/io/file/tfile/Utils$Version
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_0
      17: aload_1
      18: checkcast     #15                 // class org/apache/hadoop/io/file/tfile/Utils$Version
      21: invokevirtual #16                 // Method compareTo:(Lorg/apache/hadoop/io/file/tfile/Utils$Version;)I
      24: ifne          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #3                  // Field major:S
       4: bipush        16
       6: ishl
       7: aload_0
       8: getfield      #4                  // Field minor:S
      11: iadd
      12: ireturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #15                 // class org/apache/hadoop/io/file/tfile/Utils$Version
       5: invokevirtual #16                 // Method compareTo:(Lorg/apache/hadoop/io/file/tfile/Utils$Version;)I
       8: ireturn
}
