Compiled from "HarFileSystem.java"
class org.apache.hadoop.fs.HarFileSystem$HarFSDataInputStream$HarFsInputStream extends org.apache.hadoop.fs.FSInputStream implements org.apache.hadoop.fs.CanSetDropBehind,org.apache.hadoop.fs.CanSetReadahead {
  private long position;

  private long start;

  private long end;

  private final org.apache.hadoop.fs.FSDataInputStream underLyingStream;

  private final byte[] oneBytebuff;

  org.apache.hadoop.fs.HarFileSystem$HarFSDataInputStream$HarFsInputStream(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, long, long, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/fs/FSInputStream."<init>":()V
       4: aload_0
       5: iconst_1
       6: newarray       byte
       8: putfield      #2                  // Field oneBytebuff:[B
      11: lload         5
      13: lconst_0
      14: lcmp
      15: ifge          51
      18: new           #3                  // class java/lang/IllegalArgumentException
      21: dup
      22: new           #4                  // class java/lang/StringBuilder
      25: dup
      26: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      29: ldc           #6                  // String Negative length [
      31: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: lload         5
      36: invokevirtual #8                  // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      39: ldc           #9                  // String ]
      41: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      50: athrow
      51: aload_0
      52: aload_1
      53: aload_2
      54: iload         7
      56: invokevirtual #12                 // Method org/apache/hadoop/fs/FileSystem.open:(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;
      59: putfield      #13                 // Field underLyingStream:Lorg/apache/hadoop/fs/FSDataInputStream;
      62: aload_0
      63: getfield      #13                 // Field underLyingStream:Lorg/apache/hadoop/fs/FSDataInputStream;
      66: lload_3
      67: invokevirtual #14                 // Method org/apache/hadoop/fs/FSDataInputStream.seek:(J)V
      70: aload_0
      71: lload_3
      72: putfield      #15                 // Field start:J
      75: aload_0
      76: lload_3
      77: putfield      #16                 // Field position:J
      80: aload_0
      81: lload_3
      82: lload         5
      84: ladd
      85: putfield      #17                 // Field end:J
      88: return

  public synchronized int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field end:J
       4: aload_0
       5: getfield      #13                 // Field underLyingStream:Lorg/apache/hadoop/fs/FSDataInputStream;
       8: invokevirtual #18                 // Method org/apache/hadoop/fs/FSDataInputStream.getPos:()J
      11: lsub
      12: lstore_1
      13: lload_1
      14: ldc2_w        #20                 // long 2147483647l
      17: lcmp
      18: ifle          24
      21: ldc           #22                 // int 2147483647
      23: ireturn
      24: lload_1
      25: l2i
      26: ireturn

  public synchronized void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field underLyingStream:Lorg/apache/hadoop/fs/FSDataInputStream;
       4: invokevirtual #23                 // Method org/apache/hadoop/fs/FSDataInputStream.close:()V
       7: aload_0
       8: invokespecial #24                 // Method org/apache/hadoop/fs/FSInputStream.close:()V
      11: return

  public void mark(int);
    Code:
       0: return

  public void reset() throws java.io.IOException;
    Code:
       0: new           #25                 // class java/io/IOException
       3: dup
       4: ldc           #26                 // String reset not implemented.
       6: invokespecial #27                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
       9: athrow

  public synchronized int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field oneBytebuff:[B
       5: iconst_0
       6: iconst_1
       7: invokevirtual #28                 // Method read:([BII)I
      10: istore_1
      11: iload_1
      12: ifgt          19
      15: iconst_m1
      16: goto          29
      19: aload_0
      20: getfield      #2                  // Field oneBytebuff:[B
      23: iconst_0
      24: baload
      25: sipush        255
      28: iand
      29: ireturn

  public synchronized int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #28                 // Method read:([BII)I
       8: istore_2
       9: iload_2
      10: ireturn

  public synchronized int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: ifne          6
       4: iconst_0
       5: ireturn
       6: iload_3
       7: istore        4
       9: iconst_m1
      10: istore        5
      12: aload_0
      13: getfield      #16                 // Field position:J
      16: iload_3
      17: i2l
      18: ladd
      19: aload_0
      20: getfield      #17                 // Field end:J
      23: lcmp
      24: ifle          39
      27: aload_0
      28: getfield      #17                 // Field end:J
      31: aload_0
      32: getfield      #16                 // Field position:J
      35: lsub
      36: l2i
      37: istore        4
      39: iload         4
      41: ifne          47
      44: iload         5
      46: ireturn
      47: aload_0
      48: getfield      #13                 // Field underLyingStream:Lorg/apache/hadoop/fs/FSDataInputStream;
      51: aload_1
      52: iload_2
      53: iload         4
      55: invokevirtual #29                 // Method org/apache/hadoop/fs/FSDataInputStream.read:([BII)I
      58: istore        5
      60: aload_0
      61: dup
      62: getfield      #16                 // Field position:J
      65: iload         5
      67: i2l
      68: ladd
      69: putfield      #16                 // Field position:J
      72: iload         5
      74: ireturn

  public synchronized long skip(long) throws java.io.IOException;
    Code:
       0: lload_1
       1: lstore_3
       2: lload_3
       3: lconst_0
       4: lcmp
       5: ifle          54
       8: aload_0
       9: getfield      #17                 // Field end:J
      12: aload_0
      13: getfield      #16                 // Field position:J
      16: lsub
      17: lstore        5
      19: lload_3
      20: lload         5
      22: lcmp
      23: ifle          29
      26: lload         5
      28: lstore_3
      29: aload_0
      30: getfield      #13                 // Field underLyingStream:Lorg/apache/hadoop/fs/FSDataInputStream;
      33: lload_3
      34: aload_0
      35: getfield      #16                 // Field position:J
      38: ladd
      39: invokevirtual #14                 // Method org/apache/hadoop/fs/FSDataInputStream.seek:(J)V
      42: aload_0
      43: dup
      44: getfield      #16                 // Field position:J
      47: lload_3
      48: ladd
      49: putfield      #16                 // Field position:J
      52: lload_3
      53: lreturn
      54: lconst_0
      55: lreturn

  public synchronized long getPos() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #16                 // Field position:J
       4: aload_0
       5: getfield      #15                 // Field start:J
       8: lsub
       9: lreturn

  public synchronized void seek(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #30                 // Method validatePosition:(J)V
       5: aload_0
       6: aload_0
       7: getfield      #15                 // Field start:J
      10: lload_1
      11: ladd
      12: putfield      #16                 // Field position:J
      15: aload_0
      16: getfield      #13                 // Field underLyingStream:Lorg/apache/hadoop/fs/FSDataInputStream;
      19: aload_0
      20: getfield      #16                 // Field position:J
      23: invokevirtual #14                 // Method org/apache/hadoop/fs/FSDataInputStream.seek:(J)V
      26: return

  private void validatePosition(long) throws java.io.IOException;
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifge          33
       6: new           #25                 // class java/io/IOException
       9: dup
      10: new           #4                  // class java/lang/StringBuilder
      13: dup
      14: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #31                 // String Negative position:
      19: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: lload_1
      23: invokevirtual #8                  // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      26: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokespecial #27                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: aload_0
      34: getfield      #17                 // Field end:J
      37: aload_0
      38: getfield      #15                 // Field start:J
      41: lsub
      42: lstore_3
      43: lload_1
      44: lload_3
      45: lcmp
      46: ifle          85
      49: new           #25                 // class java/io/IOException
      52: dup
      53: new           #4                  // class java/lang/StringBuilder
      56: dup
      57: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      60: ldc           #32                 // String Position behind the end of the stream (length =
      62: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: lload_3
      66: invokevirtual #8                  // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      69: ldc           #33                 // String ):
      71: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: lload_1
      75: invokevirtual #8                  // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      78: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      81: invokespecial #27                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      84: athrow
      85: return

  public boolean seekToNewSource(long) throws java.io.IOException;
    Code:
       0: iconst_0
       1: ireturn

  public int read(long, byte[], int, int) throws java.io.IOException;
    Code:
       0: iload         5
       2: istore        6
       4: aload_0
       5: getfield      #15                 // Field start:J
       8: iload         6
      10: i2l
      11: ladd
      12: lload_1
      13: ladd
      14: aload_0
      15: getfield      #17                 // Field end:J
      18: lcmp
      19: ifle          36
      22: aload_0
      23: getfield      #17                 // Field end:J
      26: aload_0
      27: getfield      #15                 // Field start:J
      30: lsub
      31: lload_1
      32: lsub
      33: l2i
      34: istore        6
      36: iload         6
      38: ifgt          43
      41: iconst_m1
      42: ireturn
      43: aload_0
      44: getfield      #13                 // Field underLyingStream:Lorg/apache/hadoop/fs/FSDataInputStream;
      47: lload_1
      48: aload_0
      49: getfield      #15                 // Field start:J
      52: ladd
      53: aload_3
      54: iload         4
      56: iload         6
      58: invokevirtual #34                 // Method org/apache/hadoop/fs/FSDataInputStream.read:(J[BII)I
      61: ireturn

  public void readFully(long, byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: iload         4
       5: iload         5
       7: invokevirtual #35                 // Method validatePositionedReadArgs:(J[BII)V
      10: iload         5
      12: ifne          16
      15: return
      16: aload_0
      17: getfield      #15                 // Field start:J
      20: iload         5
      22: i2l
      23: ladd
      24: lload_1
      25: ladd
      26: aload_0
      27: getfield      #17                 // Field end:J
      30: lcmp
      31: ifle          44
      34: new           #36                 // class java/io/EOFException
      37: dup
      38: ldc           #37                 // String Not enough bytes to read.
      40: invokespecial #38                 // Method java/io/EOFException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: aload_0
      45: getfield      #13                 // Field underLyingStream:Lorg/apache/hadoop/fs/FSDataInputStream;
      48: lload_1
      49: aload_0
      50: getfield      #15                 // Field start:J
      53: ladd
      54: aload_3
      55: iload         4
      57: iload         5
      59: invokevirtual #39                 // Method org/apache/hadoop/fs/FSDataInputStream.readFully:(J[BII)V
      62: return

  public void setReadahead(java.lang.Long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field underLyingStream:Lorg/apache/hadoop/fs/FSDataInputStream;
       4: aload_1
       5: invokevirtual #40                 // Method org/apache/hadoop/fs/FSDataInputStream.setReadahead:(Ljava/lang/Long;)V
       8: return

  public void setDropBehind(java.lang.Boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field underLyingStream:Lorg/apache/hadoop/fs/FSDataInputStream;
       4: aload_1
       5: invokevirtual #41                 // Method org/apache/hadoop/fs/FSDataInputStream.setDropBehind:(Ljava/lang/Boolean;)V
       8: return
}
