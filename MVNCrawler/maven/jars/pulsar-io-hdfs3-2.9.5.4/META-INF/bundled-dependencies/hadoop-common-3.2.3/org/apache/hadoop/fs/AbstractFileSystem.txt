Compiled from "AbstractFileSystem.java"
public abstract class org.apache.hadoop.fs.AbstractFileSystem implements org.apache.hadoop.fs.PathCapabilities {
  static final org.slf4j.Logger LOG;

  private static final java.util.Map<java.net.URI, org.apache.hadoop.fs.FileSystem$Statistics> STATISTICS_TABLE;

  private static final java.util.Map<java.lang.Class<?>, java.lang.reflect.Constructor<?>> CONSTRUCTOR_CACHE;

  private static final java.lang.Class<?>[] URI_CONFIG_ARGS;

  protected org.apache.hadoop.fs.FileSystem$Statistics statistics;

  static final java.lang.String NO_ABSTRACT_FS_ERROR;

  private final java.net.URI myUri;

  public org.apache.hadoop.fs.FileSystem$Statistics getStatistics();
    Code:
       0: aload_0
       1: getfield      #1                  // Field statistics:Lorg/apache/hadoop/fs/FileSystem$Statistics;
       4: areturn

  public boolean isValidName(java.lang.String);
    Code:
       0: new           #2                  // class java/util/StringTokenizer
       3: dup
       4: aload_1
       5: ldc           #4                  // String /
       7: invokespecial #5                  // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      10: astore_2
      11: aload_2
      12: invokevirtual #6                  // Method java/util/StringTokenizer.hasMoreTokens:()Z
      15: ifeq          55
      18: aload_2
      19: invokevirtual #7                  // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      22: astore_3
      23: aload_3
      24: ldc           #8                  // String ..
      26: invokevirtual #9                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      29: ifne          50
      32: aload_3
      33: ldc           #10                 // String .
      35: invokevirtual #9                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      38: ifne          50
      41: aload_3
      42: ldc           #11                 // String :
      44: invokevirtual #12                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      47: iflt          52
      50: iconst_0
      51: ireturn
      52: goto          11
      55: iconst_1
      56: ireturn

  static <T> T newInstance(java.lang.Class<T>, java.net.URI, org.apache.hadoop.conf.Configuration);
    Code:
       0: getstatic     #13                 // Field CONSTRUCTOR_CACHE:Ljava/util/Map;
       3: aload_0
       4: invokeinterface #14,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #15                 // class java/lang/reflect/Constructor
      12: astore        4
      14: aload         4
      16: ifnonnull     46
      19: aload_0
      20: getstatic     #16                 // Field URI_CONFIG_ARGS:[Ljava/lang/Class;
      23: invokevirtual #17                 // Method java/lang/Class.getDeclaredConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
      26: astore        4
      28: aload         4
      30: iconst_1
      31: invokevirtual #18                 // Method java/lang/reflect/Constructor.setAccessible:(Z)V
      34: getstatic     #13                 // Field CONSTRUCTOR_CACHE:Ljava/util/Map;
      37: aload_0
      38: aload         4
      40: invokeinterface #19,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      45: pop
      46: aload         4
      48: iconst_2
      49: anewarray     #20                 // class java/lang/Object
      52: dup
      53: iconst_0
      54: aload_1
      55: aastore
      56: dup
      57: iconst_1
      58: aload_2
      59: aastore
      60: invokevirtual #21                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
      63: astore_3
      64: goto          112
      67: astore        4
      69: aload         4
      71: invokevirtual #23                 // Method java/lang/reflect/InvocationTargetException.getCause:()Ljava/lang/Throwable;
      74: astore        5
      76: aload         5
      78: instanceof    #24                 // class java/lang/RuntimeException
      81: ifeq          90
      84: aload         5
      86: checkcast     #24                 // class java/lang/RuntimeException
      89: athrow
      90: new           #24                 // class java/lang/RuntimeException
      93: dup
      94: aload         5
      96: invokespecial #25                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      99: athrow
     100: astore        4
     102: new           #24                 // class java/lang/RuntimeException
     105: dup
     106: aload         4
     108: invokespecial #25                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     111: athrow
     112: aload_3
     113: areturn
    Exception table:
       from    to  target type
           0    64    67   Class java/lang/reflect/InvocationTargetException
           0    64   100   Class java/lang/Exception

  public static org.apache.hadoop.fs.AbstractFileSystem createFileSystem(java.net.URI, org.apache.hadoop.conf.Configuration) throws org.apache.hadoop.fs.UnsupportedFileSystemException;
    Code:
       0: ldc           #27                 // String fs.AbstractFileSystem.%s.impl
       2: iconst_1
       3: anewarray     #20                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: invokevirtual #28                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      12: aastore
      13: invokestatic  #29                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      16: astore_2
      17: aload_1
      18: aload_2
      19: aconst_null
      20: invokevirtual #30                 // Method org/apache/hadoop/conf/Configuration.getClass:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;
      23: astore_3
      24: aload_3
      25: ifnonnull     61
      28: new           #31                 // class org/apache/hadoop/fs/UnsupportedFileSystemException
      31: dup
      32: ldc           #32                 // String %s=null: %s: %s
      34: iconst_3
      35: anewarray     #20                 // class java/lang/Object
      38: dup
      39: iconst_0
      40: aload_2
      41: aastore
      42: dup
      43: iconst_1
      44: ldc           #34                 // String No AbstractFileSystem configured for scheme
      46: aastore
      47: dup
      48: iconst_2
      49: aload_0
      50: invokevirtual #28                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      53: aastore
      54: invokestatic  #29                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      57: invokespecial #35                 // Method org/apache/hadoop/fs/UnsupportedFileSystemException."<init>":(Ljava/lang/String;)V
      60: athrow
      61: aload_3
      62: aload_0
      63: aload_1
      64: invokestatic  #36                 // Method newInstance:(Ljava/lang/Class;Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;
      67: checkcast     #33                 // class org/apache/hadoop/fs/AbstractFileSystem
      70: areturn

  protected static synchronized org.apache.hadoop.fs.FileSystem$Statistics getStatistics(java.net.URI);
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method java/net/URI.getScheme:()Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ifnonnull     36
       9: new           #37                 // class java/lang/IllegalArgumentException
      12: dup
      13: new           #38                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #40                 // String Scheme not defined in the uri:
      22: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_0
      26: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      29: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokespecial #44                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_0
      37: invokestatic  #45                 // Method getBaseUri:(Ljava/net/URI;)Ljava/net/URI;
      40: astore_2
      41: getstatic     #46                 // Field STATISTICS_TABLE:Ljava/util/Map;
      44: aload_2
      45: invokeinterface #14,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      50: checkcast     #47                 // class org/apache/hadoop/fs/FileSystem$Statistics
      53: astore_3
      54: aload_3
      55: ifnonnull     78
      58: new           #47                 // class org/apache/hadoop/fs/FileSystem$Statistics
      61: dup
      62: aload_1
      63: invokespecial #48                 // Method org/apache/hadoop/fs/FileSystem$Statistics."<init>":(Ljava/lang/String;)V
      66: astore_3
      67: getstatic     #46                 // Field STATISTICS_TABLE:Ljava/util/Map;
      70: aload_2
      71: aload_3
      72: invokeinterface #19,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      77: pop
      78: aload_3
      79: areturn

  private static java.net.URI getBaseUri(java.net.URI);
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method java/net/URI.getScheme:()Ljava/lang/String;
       4: astore_1
       5: aload_0
       6: invokevirtual #49                 // Method java/net/URI.getAuthority:()Ljava/lang/String;
       9: astore_2
      10: new           #38                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      17: aload_1
      18: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc           #50                 // String ://
      23: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: astore_3
      30: aload_2
      31: ifnull        56
      34: new           #38                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      41: aload_3
      42: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_2
      46: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: astore_3
      53: goto          76
      56: new           #38                 // class java/lang/StringBuilder
      59: dup
      60: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      63: aload_3
      64: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: ldc           #4                  // String /
      69: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: astore_3
      76: aload_3
      77: invokestatic  #51                 // Method java/net/URI.create:(Ljava/lang/String;)Ljava/net/URI;
      80: areturn

  public static synchronized void clearStatistics();
    Code:
       0: getstatic     #46                 // Field STATISTICS_TABLE:Ljava/util/Map;
       3: invokeinterface #52,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       8: invokeinterface #53,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      13: astore_0
      14: aload_0
      15: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          40
      23: aload_0
      24: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #47                 // class org/apache/hadoop/fs/FileSystem$Statistics
      32: astore_1
      33: aload_1
      34: invokevirtual #56                 // Method org/apache/hadoop/fs/FileSystem$Statistics.reset:()V
      37: goto          14
      40: return

  public static synchronized void printStatistics();
    Code:
       0: getstatic     #46                 // Field STATISTICS_TABLE:Ljava/util/Map;
       3: invokeinterface #57,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       8: invokeinterface #58,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      13: astore_0
      14: aload_0
      15: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          106
      23: aload_0
      24: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #59                 // class java/util/Map$Entry
      32: astore_1
      33: getstatic     #60                 // Field java/lang/System.out:Ljava/io/PrintStream;
      36: new           #38                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #61                 // String   FileSystem
      45: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_1
      49: invokeinterface #62,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      54: checkcast     #63                 // class java/net/URI
      57: invokevirtual #28                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      60: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: ldc           #50                 // String ://
      65: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_1
      69: invokeinterface #62,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      74: checkcast     #63                 // class java/net/URI
      77: invokevirtual #49                 // Method java/net/URI.getAuthority:()Ljava/lang/String;
      80: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: ldc           #64                 // String :
      85: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: aload_1
      89: invokeinterface #65,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      94: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      97: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     100: invokevirtual #66                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     103: goto          14
     106: return

  protected static synchronized java.util.Map<java.net.URI, org.apache.hadoop.fs.FileSystem$Statistics> getAllStatistics();
    Code:
       0: new           #67                 // class java/util/HashMap
       3: dup
       4: getstatic     #46                 // Field STATISTICS_TABLE:Ljava/util/Map;
       7: invokeinterface #68,  1           // InterfaceMethod java/util/Map.size:()I
      12: invokespecial #69                 // Method java/util/HashMap."<init>":(I)V
      15: astore_0
      16: getstatic     #46                 // Field STATISTICS_TABLE:Ljava/util/Map;
      19: invokeinterface #57,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      24: invokeinterface #58,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      29: astore_1
      30: aload_1
      31: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          100
      39: aload_1
      40: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #59                 // class java/util/Map$Entry
      48: astore_2
      49: aload_2
      50: invokeinterface #62,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      55: checkcast     #63                 // class java/net/URI
      58: astore_3
      59: aload_2
      60: invokeinterface #65,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      65: checkcast     #47                 // class org/apache/hadoop/fs/FileSystem$Statistics
      68: astore        4
      70: new           #47                 // class org/apache/hadoop/fs/FileSystem$Statistics
      73: dup
      74: aload         4
      76: invokespecial #70                 // Method org/apache/hadoop/fs/FileSystem$Statistics."<init>":(Lorg/apache/hadoop/fs/FileSystem$Statistics;)V
      79: astore        5
      81: aload_0
      82: aload_3
      83: invokevirtual #71                 // Method java/net/URI.toString:()Ljava/lang/String;
      86: invokestatic  #51                 // Method java/net/URI.create:(Ljava/lang/String;)Ljava/net/URI;
      89: aload         5
      91: invokeinterface #19,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      96: pop
      97: goto          30
     100: aload_0
     101: areturn

  public static org.apache.hadoop.fs.AbstractFileSystem get(java.net.URI, org.apache.hadoop.conf.Configuration) throws org.apache.hadoop.fs.UnsupportedFileSystemException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #72                 // Method createFileSystem:(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/AbstractFileSystem;
       5: areturn

  public org.apache.hadoop.fs.AbstractFileSystem(java.net.URI, java.lang.String, boolean, int) throws java.net.URISyntaxException;
    Code:
       0: aload_0
       1: invokespecial #73                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: aload_1
       7: aload_2
       8: iload_3
       9: iload         4
      11: invokespecial #74                 // Method getUri:(Ljava/net/URI;Ljava/lang/String;ZI)Ljava/net/URI;
      14: putfield      #75                 // Field myUri:Ljava/net/URI;
      17: aload_0
      18: aload_1
      19: invokestatic  #76                 // Method getStatistics:(Ljava/net/URI;)Lorg/apache/hadoop/fs/FileSystem$Statistics;
      22: putfield      #1                  // Field statistics:Lorg/apache/hadoop/fs/FileSystem$Statistics;
      25: return

  public void checkScheme(java.net.URI, java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #28                 // Method java/net/URI.getScheme:()Ljava/lang/String;
       4: astore_3
       5: aload_3
       6: ifnonnull     36
       9: new           #77                 // class org/apache/hadoop/HadoopIllegalArgumentException
      12: dup
      13: new           #38                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #78                 // String Uri without scheme:
      22: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_1
      26: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      29: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokespecial #79                 // Method org/apache/hadoop/HadoopIllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_3
      37: aload_2
      38: invokevirtual #9                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      41: ifne          80
      44: new           #77                 // class org/apache/hadoop/HadoopIllegalArgumentException
      47: dup
      48: new           #38                 // class java/lang/StringBuilder
      51: dup
      52: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      55: ldc           #80                 // String Uri scheme
      57: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_1
      61: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      64: ldc           #81                 // String  does not match the scheme
      66: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: aload_2
      70: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      76: invokespecial #79                 // Method org/apache/hadoop/HadoopIllegalArgumentException."<init>":(Ljava/lang/String;)V
      79: athrow
      80: return

  private java.net.URI getUri(java.net.URI, java.lang.String, boolean, int) throws java.net.URISyntaxException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #82                 // Method checkScheme:(Ljava/net/URI;Ljava/lang/String;)V
       6: iload         4
       8: ifge          48
      11: iload_3
      12: ifeq          48
      15: new           #77                 // class org/apache/hadoop/HadoopIllegalArgumentException
      18: dup
      19: new           #38                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #83                 // String FileSystem implementation error -  default port
      28: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: iload         4
      33: invokevirtual #84                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      36: ldc           #85                 // String  is not valid
      38: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokespecial #79                 // Method org/apache/hadoop/HadoopIllegalArgumentException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: aload_1
      49: invokevirtual #49                 // Method java/net/URI.getAuthority:()Ljava/lang/String;
      52: astore        5
      54: aload         5
      56: ifnonnull     117
      59: iload_3
      60: ifeq          90
      63: new           #77                 // class org/apache/hadoop/HadoopIllegalArgumentException
      66: dup
      67: new           #38                 // class java/lang/StringBuilder
      70: dup
      71: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      74: ldc           #86                 // String Uri without authority:
      76: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: aload_1
      80: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      83: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      86: invokespecial #79                 // Method org/apache/hadoop/HadoopIllegalArgumentException."<init>":(Ljava/lang/String;)V
      89: athrow
      90: new           #63                 // class java/net/URI
      93: dup
      94: new           #38                 // class java/lang/StringBuilder
      97: dup
      98: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
     101: aload_2
     102: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: ldc           #87                 // String :///
     107: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     113: invokespecial #88                 // Method java/net/URI."<init>":(Ljava/lang/String;)V
     116: areturn
     117: aload_1
     118: invokevirtual #89                 // Method java/net/URI.getPort:()I
     121: istore        6
     123: iload         6
     125: iconst_m1
     126: if_icmpne     134
     129: iload         4
     131: goto          136
     134: iload         6
     136: istore        6
     138: iload         6
     140: iconst_m1
     141: if_icmpne     158
     144: new           #63                 // class java/net/URI
     147: dup
     148: aload_2
     149: aload         5
     151: ldc           #4                  // String /
     153: aconst_null
     154: invokespecial #90                 // Method java/net/URI."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     157: areturn
     158: new           #63                 // class java/net/URI
     161: dup
     162: new           #38                 // class java/lang/StringBuilder
     165: dup
     166: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
     169: aload_2
     170: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     173: ldc           #50                 // String ://
     175: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     178: aload_1
     179: invokevirtual #91                 // Method java/net/URI.getHost:()Ljava/lang/String;
     182: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     185: ldc           #11                 // String :
     187: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     190: iload         6
     192: invokevirtual #84                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     195: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     198: invokespecial #88                 // Method java/net/URI."<init>":(Ljava/lang/String;)V
     201: areturn

  public abstract int getUriDefaultPort();

  public java.net.URI getUri();
    Code:
       0: aload_0
       1: getfield      #75                 // Field myUri:Ljava/net/URI;
       4: areturn

  public void checkPath(org.apache.hadoop.fs.Path);
    Code:
       0: aload_1
       1: invokevirtual #92                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
       4: astore_2
       5: aload_2
       6: invokevirtual #28                 // Method java/net/URI.getScheme:()Ljava/lang/String;
       9: astore_3
      10: aload_2
      11: invokevirtual #49                 // Method java/net/URI.getAuthority:()Ljava/lang/String;
      14: astore        4
      16: aload_3
      17: ifnonnull     87
      20: aload         4
      22: ifnonnull     60
      25: aload_1
      26: invokevirtual #93                 // Method org/apache/hadoop/fs/Path.isUriPathAbsolute:()Z
      29: ifeq          33
      32: return
      33: new           #94                 // class org/apache/hadoop/fs/InvalidPathException
      36: dup
      37: new           #38                 // class java/lang/StringBuilder
      40: dup
      41: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      44: ldc           #95                 // String relative paths not allowed:
      46: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: aload_1
      50: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      53: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: invokespecial #96                 // Method org/apache/hadoop/fs/InvalidPathException."<init>":(Ljava/lang/String;)V
      59: athrow
      60: new           #94                 // class org/apache/hadoop/fs/InvalidPathException
      63: dup
      64: new           #38                 // class java/lang/StringBuilder
      67: dup
      68: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      71: ldc           #97                 // String Path without scheme with non-null authority:
      73: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: aload_1
      77: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      80: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      83: invokespecial #96                 // Method org/apache/hadoop/fs/InvalidPathException."<init>":(Ljava/lang/String;)V
      86: athrow
      87: aload_0
      88: invokevirtual #98                 // Method getUri:()Ljava/net/URI;
      91: invokevirtual #28                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      94: astore        5
      96: aload_0
      97: invokevirtual #98                 // Method getUri:()Ljava/net/URI;
     100: invokevirtual #91                 // Method java/net/URI.getHost:()Ljava/lang/String;
     103: astore        6
     105: aload_2
     106: invokevirtual #91                 // Method java/net/URI.getHost:()Ljava/lang/String;
     109: astore        7
     111: aload         5
     113: aload_3
     114: invokevirtual #99                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     117: ifeq          145
     120: aload         6
     122: ifnull        135
     125: aload         6
     127: aload         7
     129: invokevirtual #99                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     132: ifeq          145
     135: aload         6
     137: ifnonnull     184
     140: aload         7
     142: ifnull        184
     145: new           #94                 // class org/apache/hadoop/fs/InvalidPathException
     148: dup
     149: new           #38                 // class java/lang/StringBuilder
     152: dup
     153: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
     156: ldc           #100                // String Wrong FS:
     158: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     161: aload_1
     162: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     165: ldc           #101                // String , expected:
     167: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: aload_0
     171: invokevirtual #98                 // Method getUri:()Ljava/net/URI;
     174: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     177: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     180: invokespecial #96                 // Method org/apache/hadoop/fs/InvalidPathException."<init>":(Ljava/lang/String;)V
     183: athrow
     184: aload_0
     185: invokevirtual #98                 // Method getUri:()Ljava/net/URI;
     188: invokevirtual #89                 // Method java/net/URI.getPort:()I
     191: istore        8
     193: aload_2
     194: invokevirtual #89                 // Method java/net/URI.getPort:()I
     197: istore        9
     199: iload         9
     201: iconst_m1
     202: if_icmpne     211
     205: aload_0
     206: invokevirtual #102                // Method getUriDefaultPort:()I
     209: istore        9
     211: iload         8
     213: iload         9
     215: if_icmpeq     257
     218: new           #94                 // class org/apache/hadoop/fs/InvalidPathException
     221: dup
     222: new           #38                 // class java/lang/StringBuilder
     225: dup
     226: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
     229: ldc           #100                // String Wrong FS:
     231: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     234: aload_1
     235: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     238: ldc           #101                // String , expected:
     240: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     243: aload_0
     244: invokevirtual #98                 // Method getUri:()Ljava/net/URI;
     247: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     250: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     253: invokespecial #96                 // Method org/apache/hadoop/fs/InvalidPathException."<init>":(Ljava/lang/String;)V
     256: athrow
     257: return

  public java.lang.String getUriPath(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #103                // Method checkPath:(Lorg/apache/hadoop/fs/Path;)V
       5: aload_1
       6: invokevirtual #92                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
       9: invokevirtual #104                // Method java/net/URI.getPath:()Ljava/lang/String;
      12: astore_2
      13: aload_0
      14: aload_2
      15: invokevirtual #105                // Method isValidName:(Ljava/lang/String;)Z
      18: ifne          62
      21: new           #94                 // class org/apache/hadoop/fs/InvalidPathException
      24: dup
      25: new           #38                 // class java/lang/StringBuilder
      28: dup
      29: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      32: ldc           #106                // String Path part
      34: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_2
      38: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: ldc           #107                // String  from URI
      43: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_1
      47: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      50: ldc           #108                // String  is not a valid filename.
      52: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      58: invokespecial #96                 // Method org/apache/hadoop/fs/InvalidPathException."<init>":(Ljava/lang/String;)V
      61: athrow
      62: aload_2
      63: areturn

  public org.apache.hadoop.fs.Path makeQualified(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #103                // Method checkPath:(Lorg/apache/hadoop/fs/Path;)V
       5: aload_1
       6: aload_0
       7: invokevirtual #98                 // Method getUri:()Ljava/net/URI;
      10: aconst_null
      11: invokevirtual #109                // Method org/apache/hadoop/fs/Path.makeQualified:(Ljava/net/URI;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      14: areturn

  public org.apache.hadoop.fs.Path getInitialWorkingDirectory();
    Code:
       0: aconst_null
       1: areturn

  public org.apache.hadoop.fs.Path getHomeDirectory();
    Code:
       0: new           #3                  // class org/apache/hadoop/fs/Path
       3: dup
       4: new           #38                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #110                // String /user/
      13: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: ldc           #111                // String user.name
      18: invokestatic  #112                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      21: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: invokespecial #113                // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      30: aload_0
      31: invokevirtual #98                 // Method getUri:()Ljava/net/URI;
      34: aconst_null
      35: invokevirtual #109                // Method org/apache/hadoop/fs/Path.makeQualified:(Ljava/net/URI;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      38: areturn

  public abstract org.apache.hadoop.fs.FsServerDefaults getServerDefaults() throws java.io.IOException;

  public org.apache.hadoop.fs.FsServerDefaults getServerDefaults(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #114                // Method getServerDefaults:()Lorg/apache/hadoop/fs/FsServerDefaults;
       4: areturn

  public org.apache.hadoop.fs.Path resolvePath(org.apache.hadoop.fs.Path) throws java.io.FileNotFoundException, org.apache.hadoop.fs.UnresolvedLinkException, org.apache.hadoop.security.AccessControlException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #103                // Method checkPath:(Lorg/apache/hadoop/fs/Path;)V
       5: aload_0
       6: aload_1
       7: invokevirtual #115                // Method getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      10: invokevirtual #116                // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
      13: areturn

  public final org.apache.hadoop.fs.FSDataOutputStream create(org.apache.hadoop.fs.Path, java.util.EnumSet<org.apache.hadoop.fs.CreateFlag>, org.apache.hadoop.fs.Options$CreateOpts...) throws org.apache.hadoop.security.AccessControlException, org.apache.hadoop.fs.FileAlreadyExistsException, java.io.FileNotFoundException, org.apache.hadoop.fs.ParentNotDirectoryException, org.apache.hadoop.fs.UnsupportedFileSystemException, org.apache.hadoop.fs.UnresolvedLinkException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #103                // Method checkPath:(Lorg/apache/hadoop/fs/Path;)V
       5: iconst_m1
       6: istore        4
       8: iconst_m1
       9: istore        5
      11: ldc2_w        #117                // long -1l
      14: lstore        6
      16: iconst_m1
      17: istore        8
      19: aconst_null
      20: astore        9
      22: aconst_null
      23: astore        10
      25: aconst_null
      26: astore        11
      28: aconst_null
      29: astore        12
      31: aload_3
      32: astore        13
      34: aload         13
      36: arraylength
      37: istore        14
      39: iconst_0
      40: istore        15
      42: iload         15
      44: iload         14
      46: if_icmpge     410
      49: aload         13
      51: iload         15
      53: aaload
      54: astore        16
      56: ldc           #119                // class org/apache/hadoop/fs/Options$CreateOpts$BlockSize
      58: aload         16
      60: invokevirtual #120                // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      63: ifeq          98
      66: lload         6
      68: ldc2_w        #117                // long -1l
      71: lcmp
      72: ifeq          85
      75: new           #77                 // class org/apache/hadoop/HadoopIllegalArgumentException
      78: dup
      79: ldc           #121                // String BlockSize option is set multiple times
      81: invokespecial #79                 // Method org/apache/hadoop/HadoopIllegalArgumentException."<init>":(Ljava/lang/String;)V
      84: athrow
      85: aload         16
      87: checkcast     #119                // class org/apache/hadoop/fs/Options$CreateOpts$BlockSize
      90: invokevirtual #122                // Method org/apache/hadoop/fs/Options$CreateOpts$BlockSize.getValue:()J
      93: lstore        6
      95: goto          404
      98: ldc           #123                // class org/apache/hadoop/fs/Options$CreateOpts$BufferSize
     100: aload         16
     102: invokevirtual #120                // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
     105: ifeq          137
     108: iload         4
     110: iconst_m1
     111: if_icmpeq     124
     114: new           #77                 // class org/apache/hadoop/HadoopIllegalArgumentException
     117: dup
     118: ldc           #124                // String BufferSize option is set multiple times
     120: invokespecial #79                 // Method org/apache/hadoop/HadoopIllegalArgumentException."<init>":(Ljava/lang/String;)V
     123: athrow
     124: aload         16
     126: checkcast     #123                // class org/apache/hadoop/fs/Options$CreateOpts$BufferSize
     129: invokevirtual #125                // Method org/apache/hadoop/fs/Options$CreateOpts$BufferSize.getValue:()I
     132: istore        4
     134: goto          404
     137: ldc           #126                // class org/apache/hadoop/fs/Options$CreateOpts$ReplicationFactor
     139: aload         16
     141: invokevirtual #120                // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
     144: ifeq          176
     147: iload         5
     149: iconst_m1
     150: if_icmpeq     163
     153: new           #77                 // class org/apache/hadoop/HadoopIllegalArgumentException
     156: dup
     157: ldc           #127                // String ReplicationFactor option is set multiple times
     159: invokespecial #79                 // Method org/apache/hadoop/HadoopIllegalArgumentException."<init>":(Ljava/lang/String;)V
     162: athrow
     163: aload         16
     165: checkcast     #126                // class org/apache/hadoop/fs/Options$CreateOpts$ReplicationFactor
     168: invokevirtual #128                // Method org/apache/hadoop/fs/Options$CreateOpts$ReplicationFactor.getValue:()S
     171: istore        5
     173: goto          404
     176: ldc           #129                // class org/apache/hadoop/fs/Options$CreateOpts$BytesPerChecksum
     178: aload         16
     180: invokevirtual #120                // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
     183: ifeq          215
     186: iload         8
     188: iconst_m1
     189: if_icmpeq     202
     192: new           #77                 // class org/apache/hadoop/HadoopIllegalArgumentException
     195: dup
     196: ldc           #130                // String BytesPerChecksum option is set multiple times
     198: invokespecial #79                 // Method org/apache/hadoop/HadoopIllegalArgumentException."<init>":(Ljava/lang/String;)V
     201: athrow
     202: aload         16
     204: checkcast     #129                // class org/apache/hadoop/fs/Options$CreateOpts$BytesPerChecksum
     207: invokevirtual #131                // Method org/apache/hadoop/fs/Options$CreateOpts$BytesPerChecksum.getValue:()I
     210: istore        8
     212: goto          404
     215: ldc           #132                // class org/apache/hadoop/fs/Options$CreateOpts$ChecksumParam
     217: aload         16
     219: invokevirtual #120                // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
     222: ifeq          253
     225: aload         9
     227: ifnull        240
     230: new           #77                 // class org/apache/hadoop/HadoopIllegalArgumentException
     233: dup
     234: ldc           #133                // String CreateChecksumType option is set multiple times
     236: invokespecial #79                 // Method org/apache/hadoop/HadoopIllegalArgumentException."<init>":(Ljava/lang/String;)V
     239: athrow
     240: aload         16
     242: checkcast     #132                // class org/apache/hadoop/fs/Options$CreateOpts$ChecksumParam
     245: invokevirtual #134                // Method org/apache/hadoop/fs/Options$CreateOpts$ChecksumParam.getValue:()Lorg/apache/hadoop/fs/Options$ChecksumOpt;
     248: astore        9
     250: goto          404
     253: ldc           #135                // class org/apache/hadoop/fs/Options$CreateOpts$Perms
     255: aload         16
     257: invokevirtual #120                // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
     260: ifeq          291
     263: aload         10
     265: ifnull        278
     268: new           #77                 // class org/apache/hadoop/HadoopIllegalArgumentException
     271: dup
     272: ldc           #136                // String Perms option is set multiple times
     274: invokespecial #79                 // Method org/apache/hadoop/HadoopIllegalArgumentException."<init>":(Ljava/lang/String;)V
     277: athrow
     278: aload         16
     280: checkcast     #135                // class org/apache/hadoop/fs/Options$CreateOpts$Perms
     283: invokevirtual #137                // Method org/apache/hadoop/fs/Options$CreateOpts$Perms.getValue:()Lorg/apache/hadoop/fs/permission/FsPermission;
     286: astore        10
     288: goto          404
     291: ldc           #138                // class org/apache/hadoop/fs/Options$CreateOpts$Progress
     293: aload         16
     295: invokevirtual #120                // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
     298: ifeq          329
     301: aload         11
     303: ifnull        316
     306: new           #77                 // class org/apache/hadoop/HadoopIllegalArgumentException
     309: dup
     310: ldc           #139                // String Progress option is set multiple times
     312: invokespecial #79                 // Method org/apache/hadoop/HadoopIllegalArgumentException."<init>":(Ljava/lang/String;)V
     315: athrow
     316: aload         16
     318: checkcast     #138                // class org/apache/hadoop/fs/Options$CreateOpts$Progress
     321: invokevirtual #140                // Method org/apache/hadoop/fs/Options$CreateOpts$Progress.getValue:()Lorg/apache/hadoop/util/Progressable;
     324: astore        11
     326: goto          404
     329: ldc           #141                // class org/apache/hadoop/fs/Options$CreateOpts$CreateParent
     331: aload         16
     333: invokevirtual #120                // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
     336: ifeq          370
     339: aload         12
     341: ifnull        354
     344: new           #77                 // class org/apache/hadoop/HadoopIllegalArgumentException
     347: dup
     348: ldc           #142                // String CreateParent option is set multiple times
     350: invokespecial #79                 // Method org/apache/hadoop/HadoopIllegalArgumentException."<init>":(Ljava/lang/String;)V
     353: athrow
     354: aload         16
     356: checkcast     #141                // class org/apache/hadoop/fs/Options$CreateOpts$CreateParent
     359: invokevirtual #143                // Method org/apache/hadoop/fs/Options$CreateOpts$CreateParent.getValue:()Z
     362: invokestatic  #144                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     365: astore        12
     367: goto          404
     370: new           #77                 // class org/apache/hadoop/HadoopIllegalArgumentException
     373: dup
     374: new           #38                 // class java/lang/StringBuilder
     377: dup
     378: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
     381: ldc           #145                // String Unkown CreateOpts of type
     383: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     386: aload         16
     388: invokevirtual #146                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     391: invokevirtual #147                // Method java/lang/Class.getName:()Ljava/lang/String;
     394: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     397: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     400: invokespecial #79                 // Method org/apache/hadoop/HadoopIllegalArgumentException."<init>":(Ljava/lang/String;)V
     403: athrow
     404: iinc          15, 1
     407: goto          42
     410: aload         10
     412: ifnonnull     425
     415: new           #77                 // class org/apache/hadoop/HadoopIllegalArgumentException
     418: dup
     419: ldc           #148                // String no permission supplied
     421: invokespecial #79                 // Method org/apache/hadoop/HadoopIllegalArgumentException."<init>":(Ljava/lang/String;)V
     424: athrow
     425: aload_0
     426: aload_1
     427: invokevirtual #149                // Method getServerDefaults:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FsServerDefaults;
     430: astore        13
     432: aload         13
     434: invokevirtual #150                // Method org/apache/hadoop/fs/FsServerDefaults.getBlockSize:()J
     437: aload         13
     439: invokevirtual #151                // Method org/apache/hadoop/fs/FsServerDefaults.getBytesPerChecksum:()I
     442: i2l
     443: lrem
     444: lconst_0
     445: lcmp
     446: ifeq          459
     449: new           #152                // class java/io/IOException
     452: dup
     453: ldc           #153                // String Internal error: default blockSize is not a multiple of default bytesPerChecksum
     455: invokespecial #154                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     458: athrow
     459: lload         6
     461: ldc2_w        #117                // long -1l
     464: lcmp
     465: ifne          475
     468: aload         13
     470: invokevirtual #150                // Method org/apache/hadoop/fs/FsServerDefaults.getBlockSize:()J
     473: lstore        6
     475: new           #155                // class org/apache/hadoop/fs/Options$ChecksumOpt
     478: dup
     479: aload         13
     481: invokevirtual #156                // Method org/apache/hadoop/fs/FsServerDefaults.getChecksumType:()Lorg/apache/hadoop/util/DataChecksum$Type;
     484: aload         13
     486: invokevirtual #151                // Method org/apache/hadoop/fs/FsServerDefaults.getBytesPerChecksum:()I
     489: invokespecial #157                // Method org/apache/hadoop/fs/Options$ChecksumOpt."<init>":(Lorg/apache/hadoop/util/DataChecksum$Type;I)V
     492: astore        14
     494: aload         14
     496: aload         9
     498: iload         8
     500: invokestatic  #158                // Method org/apache/hadoop/fs/Options$ChecksumOpt.processChecksumOpt:(Lorg/apache/hadoop/fs/Options$ChecksumOpt;Lorg/apache/hadoop/fs/Options$ChecksumOpt;I)Lorg/apache/hadoop/fs/Options$ChecksumOpt;
     503: astore        9
     505: iload         4
     507: iconst_m1
     508: if_icmpne     518
     511: aload         13
     513: invokevirtual #159                // Method org/apache/hadoop/fs/FsServerDefaults.getFileBufferSize:()I
     516: istore        4
     518: iload         5
     520: iconst_m1
     521: if_icmpne     531
     524: aload         13
     526: invokevirtual #160                // Method org/apache/hadoop/fs/FsServerDefaults.getReplication:()S
     529: istore        5
     531: aload         12
     533: ifnonnull     542
     536: iconst_0
     537: invokestatic  #144                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     540: astore        12
     542: lload         6
     544: iload         8
     546: i2l
     547: lrem
     548: lconst_0
     549: lcmp
     550: ifeq          563
     553: new           #77                 // class org/apache/hadoop/HadoopIllegalArgumentException
     556: dup
     557: ldc           #161                // String blockSize should be a multiple of checksumsize
     559: invokespecial #79                 // Method org/apache/hadoop/HadoopIllegalArgumentException."<init>":(Ljava/lang/String;)V
     562: athrow
     563: aload_0
     564: aload_1
     565: aload_2
     566: aload         10
     568: iload         4
     570: iload         5
     572: lload         6
     574: aload         11
     576: aload         9
     578: aload         12
     580: invokevirtual #162                // Method java/lang/Boolean.booleanValue:()Z
     583: invokevirtual #163                // Method createInternal:(Lorg/apache/hadoop/fs/Path;Ljava/util/EnumSet;Lorg/apache/hadoop/fs/permission/FsPermission;ISJLorg/apache/hadoop/util/Progressable;Lorg/apache/hadoop/fs/Options$ChecksumOpt;Z)Lorg/apache/hadoop/fs/FSDataOutputStream;
     586: areturn

  public abstract org.apache.hadoop.fs.FSDataOutputStream createInternal(org.apache.hadoop.fs.Path, java.util.EnumSet<org.apache.hadoop.fs.CreateFlag>, org.apache.hadoop.fs.permission.FsPermission, int, short, long, org.apache.hadoop.util.Progressable, org.apache.hadoop.fs.Options$ChecksumOpt, boolean) throws org.apache.hadoop.security.AccessControlException, org.apache.hadoop.fs.FileAlreadyExistsException, java.io.FileNotFoundException, org.apache.hadoop.fs.ParentNotDirectoryException, org.apache.hadoop.fs.UnsupportedFileSystemException, org.apache.hadoop.fs.UnresolvedLinkException, java.io.IOException;

  public abstract void mkdir(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission, boolean) throws org.apache.hadoop.security.AccessControlException, org.apache.hadoop.fs.FileAlreadyExistsException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnresolvedLinkException, java.io.IOException;

  public abstract boolean delete(org.apache.hadoop.fs.Path, boolean) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnresolvedLinkException, java.io.IOException;

  public org.apache.hadoop.fs.FSDataInputStream open(org.apache.hadoop.fs.Path) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnresolvedLinkException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: aload_1
       4: invokevirtual #149                // Method getServerDefaults:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FsServerDefaults;
       7: invokevirtual #159                // Method org/apache/hadoop/fs/FsServerDefaults.getFileBufferSize:()I
      10: invokevirtual #164                // Method open:(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;
      13: areturn

  public abstract org.apache.hadoop.fs.FSDataInputStream open(org.apache.hadoop.fs.Path, int) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnresolvedLinkException, java.io.IOException;

  public boolean truncate(org.apache.hadoop.fs.Path, long) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnresolvedLinkException, java.io.IOException;
    Code:
       0: new           #165                // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #38                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #146                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #166                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      18: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc           #167                // String  doesn\'t support truncate
      23: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokespecial #168                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      32: athrow

  public abstract boolean setReplication(org.apache.hadoop.fs.Path, short) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnresolvedLinkException, java.io.IOException;

  public final void rename(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Options$Rename...) throws org.apache.hadoop.security.AccessControlException, org.apache.hadoop.fs.FileAlreadyExistsException, java.io.FileNotFoundException, org.apache.hadoop.fs.ParentNotDirectoryException, org.apache.hadoop.fs.UnresolvedLinkException, java.io.IOException;
    Code:
       0: iconst_0
       1: istore        4
       3: aconst_null
       4: aload_3
       5: if_acmpeq     50
       8: aload_3
       9: astore        5
      11: aload         5
      13: arraylength
      14: istore        6
      16: iconst_0
      17: istore        7
      19: iload         7
      21: iload         6
      23: if_icmpge     50
      26: aload         5
      28: iload         7
      30: aaload
      31: astore        8
      33: aload         8
      35: getstatic     #169                // Field org/apache/hadoop/fs/Options$Rename.OVERWRITE:Lorg/apache/hadoop/fs/Options$Rename;
      38: if_acmpne     44
      41: iconst_1
      42: istore        4
      44: iinc          7, 1
      47: goto          19
      50: aload_0
      51: aload_1
      52: aload_2
      53: iload         4
      55: invokevirtual #170                // Method renameInternal:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Z)V
      58: return

  public abstract void renameInternal(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path) throws org.apache.hadoop.security.AccessControlException, org.apache.hadoop.fs.FileAlreadyExistsException, java.io.FileNotFoundException, org.apache.hadoop.fs.ParentNotDirectoryException, org.apache.hadoop.fs.UnresolvedLinkException, java.io.IOException;

  public void renameInternal(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path, boolean) throws org.apache.hadoop.security.AccessControlException, org.apache.hadoop.fs.FileAlreadyExistsException, java.io.FileNotFoundException, org.apache.hadoop.fs.ParentNotDirectoryException, org.apache.hadoop.fs.UnresolvedLinkException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #171                // Method getFileLinkStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
       5: astore        4
       7: aload_0
       8: aload_2
       9: invokevirtual #171                // Method getFileLinkStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      12: astore        5
      14: goto          22
      17: astore        6
      19: aconst_null
      20: astore        5
      22: aload         5
      24: ifnull        289
      27: aload_2
      28: aload_1
      29: invokevirtual #172                // Method org/apache/hadoop/fs/Path.equals:(Ljava/lang/Object;)Z
      32: ifeq          76
      35: new           #173                // class org/apache/hadoop/fs/FileAlreadyExistsException
      38: dup
      39: new           #38                 // class java/lang/StringBuilder
      42: dup
      43: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      46: ldc           #174                // String The source
      48: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_1
      52: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: ldc           #175                // String  and destination
      57: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_2
      61: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      64: ldc           #176                // String  are the same
      66: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: invokespecial #177                // Method org/apache/hadoop/fs/FileAlreadyExistsException."<init>":(Ljava/lang/String;)V
      75: athrow
      76: aload         4
      78: invokevirtual #178                // Method org/apache/hadoop/fs/FileStatus.isSymlink:()Z
      81: ifeq          132
      84: aload_2
      85: aload         4
      87: invokevirtual #179                // Method org/apache/hadoop/fs/FileStatus.getSymlink:()Lorg/apache/hadoop/fs/Path;
      90: invokevirtual #172                // Method org/apache/hadoop/fs/Path.equals:(Ljava/lang/Object;)Z
      93: ifeq          132
      96: new           #173                // class org/apache/hadoop/fs/FileAlreadyExistsException
      99: dup
     100: new           #38                 // class java/lang/StringBuilder
     103: dup
     104: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
     107: ldc           #180                // String Cannot rename symlink
     109: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: aload_1
     113: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     116: ldc           #181                // String  to its target
     118: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: aload_2
     122: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     125: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     128: invokespecial #177                // Method org/apache/hadoop/fs/FileAlreadyExistsException."<init>":(Ljava/lang/String;)V
     131: athrow
     132: aload         4
     134: invokevirtual #182                // Method org/apache/hadoop/fs/FileStatus.isDirectory:()Z
     137: aload         5
     139: invokevirtual #182                // Method org/apache/hadoop/fs/FileStatus.isDirectory:()Z
     142: if_icmpeq     186
     145: new           #152                // class java/io/IOException
     148: dup
     149: new           #38                 // class java/lang/StringBuilder
     152: dup
     153: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
     156: ldc           #183                // String Source
     158: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     161: aload_1
     162: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     165: ldc           #175                // String  and destination
     167: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: aload_2
     171: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     174: ldc           #184                // String  must both be directories
     176: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     179: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     182: invokespecial #154                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     185: athrow
     186: iload_3
     187: ifne          222
     190: new           #173                // class org/apache/hadoop/fs/FileAlreadyExistsException
     193: dup
     194: new           #38                 // class java/lang/StringBuilder
     197: dup
     198: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
     201: ldc           #185                // String Rename destination
     203: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     206: aload_2
     207: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     210: ldc           #186                // String  already exists.
     212: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     215: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     218: invokespecial #177                // Method org/apache/hadoop/fs/FileAlreadyExistsException."<init>":(Ljava/lang/String;)V
     221: athrow
     222: aload         5
     224: invokevirtual #182                // Method org/apache/hadoop/fs/FileStatus.isDirectory:()Z
     227: ifeq          279
     230: aload_0
     231: aload_2
     232: invokevirtual #187                // Method listStatusIterator:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/RemoteIterator;
     235: astore        6
     237: aload         6
     239: ifnull        279
     242: aload         6
     244: invokeinterface #188,  1          // InterfaceMethod org/apache/hadoop/fs/RemoteIterator.hasNext:()Z
     249: ifeq          279
     252: new           #152                // class java/io/IOException
     255: dup
     256: new           #38                 // class java/lang/StringBuilder
     259: dup
     260: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
     263: ldc           #189                // String Rename cannot overwrite non empty destination directory
     265: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     268: aload_2
     269: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     272: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     275: invokespecial #154                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     278: athrow
     279: aload_0
     280: aload_2
     281: iconst_0
     282: invokevirtual #190                // Method delete:(Lorg/apache/hadoop/fs/Path;Z)Z
     285: pop
     286: goto          344
     289: aload_2
     290: invokevirtual #191                // Method org/apache/hadoop/fs/Path.getParent:()Lorg/apache/hadoop/fs/Path;
     293: astore        6
     295: aload_0
     296: aload         6
     298: invokevirtual #115                // Method getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
     301: astore        7
     303: aload         7
     305: invokevirtual #192                // Method org/apache/hadoop/fs/FileStatus.isFile:()Z
     308: ifeq          344
     311: new           #193                // class org/apache/hadoop/fs/ParentNotDirectoryException
     314: dup
     315: new           #38                 // class java/lang/StringBuilder
     318: dup
     319: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
     322: ldc           #194                // String Rename destination parent
     324: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     327: aload         6
     329: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     332: ldc           #195                // String  is a file.
     334: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     337: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     340: invokespecial #196                // Method org/apache/hadoop/fs/ParentNotDirectoryException."<init>":(Ljava/lang/String;)V
     343: athrow
     344: aload_0
     345: aload_1
     346: aload_2
     347: invokevirtual #197                // Method renameInternal:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
     350: return
    Exception table:
       from    to  target type
           7    14    17   Class java/io/IOException

  public boolean supportsSymlinks();
    Code:
       0: iconst_0
       1: ireturn

  public void createSymlink(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path, boolean) throws java.io.IOException, org.apache.hadoop.fs.UnresolvedLinkException;
    Code:
       0: new           #152                // class java/io/IOException
       3: dup
       4: ldc           #198                // String File system does not support symlinks
       6: invokespecial #154                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
       9: athrow

  public org.apache.hadoop.fs.Path getLinkTarget(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #199                // class java/lang/AssertionError
       3: dup
       4: new           #38                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #200                // String Implementation Error:
      13: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #146                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      23: ldc           #201                // String  that threw an UnresolvedLinkException, causing this method to be called, needs to override this method.
      25: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: invokespecial #202                // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      34: athrow

  public abstract void setPermission(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnresolvedLinkException, java.io.IOException;

  public abstract void setOwner(org.apache.hadoop.fs.Path, java.lang.String, java.lang.String) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnresolvedLinkException, java.io.IOException;

  public abstract void setTimes(org.apache.hadoop.fs.Path, long, long) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnresolvedLinkException, java.io.IOException;

  public abstract org.apache.hadoop.fs.FileChecksum getFileChecksum(org.apache.hadoop.fs.Path) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnresolvedLinkException, java.io.IOException;

  public abstract org.apache.hadoop.fs.FileStatus getFileStatus(org.apache.hadoop.fs.Path) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnresolvedLinkException, java.io.IOException;

  public void msync() throws java.io.IOException, java.lang.UnsupportedOperationException;
    Code:
       0: new           #165                // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #38                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #146                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #203                // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
      18: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc           #204                // String  does not support method msync
      23: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokespecial #168                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      32: athrow

  public void access(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsAction) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnresolvedLinkException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #115                // Method getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
       5: aload_2
       6: invokestatic  #205                // Method org/apache/hadoop/fs/FileSystem.checkAccessPermissions:(Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/fs/permission/FsAction;)V
       9: return

  public org.apache.hadoop.fs.FileStatus getFileLinkStatus(org.apache.hadoop.fs.Path) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnsupportedFileSystemException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #115                // Method getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
       5: areturn

  public abstract org.apache.hadoop.fs.BlockLocation[] getFileBlockLocations(org.apache.hadoop.fs.Path, long, long) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnresolvedLinkException, java.io.IOException;

  public org.apache.hadoop.fs.FsStatus getFsStatus(org.apache.hadoop.fs.Path) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnresolvedLinkException, java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #206                // Method getFsStatus:()Lorg/apache/hadoop/fs/FsStatus;
       4: areturn

  public abstract org.apache.hadoop.fs.FsStatus getFsStatus() throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, java.io.IOException;

  public org.apache.hadoop.fs.RemoteIterator<org.apache.hadoop.fs.FileStatus> listStatusIterator(org.apache.hadoop.fs.Path) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnresolvedLinkException, java.io.IOException;
    Code:
       0: new           #207                // class org/apache/hadoop/fs/AbstractFileSystem$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #208                // Method org/apache/hadoop/fs/AbstractFileSystem$1."<init>":(Lorg/apache/hadoop/fs/AbstractFileSystem;Lorg/apache/hadoop/fs/Path;)V
       9: areturn

  public org.apache.hadoop.fs.RemoteIterator<org.apache.hadoop.fs.LocatedFileStatus> listLocatedStatus(org.apache.hadoop.fs.Path) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnresolvedLinkException, java.io.IOException;
    Code:
       0: new           #209                // class org/apache/hadoop/fs/AbstractFileSystem$2
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #210                // Method org/apache/hadoop/fs/AbstractFileSystem$2."<init>":(Lorg/apache/hadoop/fs/AbstractFileSystem;Lorg/apache/hadoop/fs/Path;)V
       9: areturn

  public abstract org.apache.hadoop.fs.FileStatus[] listStatus(org.apache.hadoop.fs.Path) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnresolvedLinkException, java.io.IOException;

  public org.apache.hadoop.fs.RemoteIterator<org.apache.hadoop.fs.Path> listCorruptFileBlocks(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #165                // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #38                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #146                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #203                // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
      18: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc           #211                // String  does not support listCorruptFileBlocks
      23: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokespecial #168                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      32: athrow

  public abstract void setVerifyChecksum(boolean) throws org.apache.hadoop.security.AccessControlException, java.io.IOException;

  public java.lang.String getCanonicalServiceName();
    Code:
       0: aload_0
       1: invokevirtual #98                 // Method getUri:()Ljava/net/URI;
       4: aload_0
       5: invokevirtual #102                // Method getUriDefaultPort:()I
       8: invokestatic  #212                // Method org/apache/hadoop/security/SecurityUtil.buildDTServiceName:(Ljava/net/URI;I)Ljava/lang/String;
      11: areturn

  public java.util.List<org.apache.hadoop.security.token.Token<?>> getDelegationTokens(java.lang.String) throws java.io.IOException;
    Code:
       0: new           #213                // class java/util/ArrayList
       3: dup
       4: iconst_0
       5: invokespecial #214                // Method java/util/ArrayList."<init>":(I)V
       8: areturn

  public void modifyAclEntries(org.apache.hadoop.fs.Path, java.util.List<org.apache.hadoop.fs.permission.AclEntry>) throws java.io.IOException;
    Code:
       0: new           #165                // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #38                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #146                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #166                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      18: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc           #215                // String  doesn\'t support modifyAclEntries
      23: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokespecial #168                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      32: athrow

  public void removeAclEntries(org.apache.hadoop.fs.Path, java.util.List<org.apache.hadoop.fs.permission.AclEntry>) throws java.io.IOException;
    Code:
       0: new           #165                // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #38                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #146                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #166                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      18: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc           #216                // String  doesn\'t support removeAclEntries
      23: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokespecial #168                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      32: athrow

  public void removeDefaultAcl(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #165                // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #38                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #146                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #166                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      18: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc           #217                // String  doesn\'t support removeDefaultAcl
      23: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokespecial #168                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      32: athrow

  public void removeAcl(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #165                // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #38                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #146                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #166                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      18: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc           #218                // String  doesn\'t support removeAcl
      23: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokespecial #168                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      32: athrow

  public void setAcl(org.apache.hadoop.fs.Path, java.util.List<org.apache.hadoop.fs.permission.AclEntry>) throws java.io.IOException;
    Code:
       0: new           #165                // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #38                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #146                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #166                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      18: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc           #219                // String  doesn\'t support setAcl
      23: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokespecial #168                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      32: athrow

  public org.apache.hadoop.fs.permission.AclStatus getAclStatus(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #165                // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #38                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #146                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #166                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      18: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc           #220                // String  doesn\'t support getAclStatus
      23: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokespecial #168                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      32: athrow

  public void setXAttr(org.apache.hadoop.fs.Path, java.lang.String, byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: getstatic     #221                // Field org/apache/hadoop/fs/XAttrSetFlag.CREATE:Lorg/apache/hadoop/fs/XAttrSetFlag;
       7: getstatic     #222                // Field org/apache/hadoop/fs/XAttrSetFlag.REPLACE:Lorg/apache/hadoop/fs/XAttrSetFlag;
      10: invokestatic  #223                // Method java/util/EnumSet.of:(Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/util/EnumSet;
      13: invokevirtual #224                // Method setXAttr:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;[BLjava/util/EnumSet;)V
      16: return

  public void setXAttr(org.apache.hadoop.fs.Path, java.lang.String, byte[], java.util.EnumSet<org.apache.hadoop.fs.XAttrSetFlag>) throws java.io.IOException;
    Code:
       0: new           #165                // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #38                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #146                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #166                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      18: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc           #225                // String  doesn\'t support setXAttr
      23: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokespecial #168                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      32: athrow

  public byte[] getXAttr(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: new           #165                // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #38                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #146                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #166                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      18: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc           #226                // String  doesn\'t support getXAttr
      23: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokespecial #168                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      32: athrow

  public java.util.Map<java.lang.String, byte[]> getXAttrs(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #165                // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #38                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #146                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #166                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      18: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc           #227                // String  doesn\'t support getXAttrs
      23: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokespecial #168                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      32: athrow

  public java.util.Map<java.lang.String, byte[]> getXAttrs(org.apache.hadoop.fs.Path, java.util.List<java.lang.String>) throws java.io.IOException;
    Code:
       0: new           #165                // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #38                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #146                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #166                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      18: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc           #227                // String  doesn\'t support getXAttrs
      23: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokespecial #168                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      32: athrow

  public java.util.List<java.lang.String> listXAttrs(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #165                // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #38                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #146                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #166                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      18: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc           #228                // String  doesn\'t support listXAttrs
      23: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokespecial #168                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      32: athrow

  public void removeXAttr(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: new           #165                // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #38                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #146                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #166                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      18: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc           #229                // String  doesn\'t support removeXAttr
      23: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokespecial #168                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      32: athrow

  public org.apache.hadoop.fs.Path createSnapshot(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: new           #165                // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #38                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #146                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #166                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      18: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc           #230                // String  doesn\'t support createSnapshot
      23: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokespecial #168                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      32: athrow

  public void renameSnapshot(org.apache.hadoop.fs.Path, java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: new           #165                // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #38                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #146                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #166                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      18: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc           #231                // String  doesn\'t support renameSnapshot
      23: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokespecial #168                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      32: athrow

  public void deleteSnapshot(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: new           #165                // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #38                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #146                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #166                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      18: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc           #232                // String  doesn\'t support deleteSnapshot
      23: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokespecial #168                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      32: athrow

  public void satisfyStoragePolicy(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #165                // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #38                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #146                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #166                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      18: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc           #233                // String  doesn\'t support satisfyStoragePolicy
      23: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokespecial #168                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      32: athrow

  public void setStoragePolicy(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: new           #165                // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #38                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #146                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #166                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      18: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc           #234                // String  doesn\'t support setStoragePolicy
      23: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokespecial #168                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      32: athrow

  public void unsetStoragePolicy(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #165                // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #38                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #146                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #166                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      18: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc           #235                // String  doesn\'t support unsetStoragePolicy
      23: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokespecial #168                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      32: athrow

  public org.apache.hadoop.fs.BlockStoragePolicySpi getStoragePolicy(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #165                // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #38                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #146                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #166                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      18: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc           #236                // String  doesn\'t support getStoragePolicy
      23: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokespecial #168                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      32: athrow

  public java.util.Collection<? extends org.apache.hadoop.fs.BlockStoragePolicySpi> getAllStoragePolicies() throws java.io.IOException;
    Code:
       0: new           #165                // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #38                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #146                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #166                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      18: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc           #237                // String  doesn\'t support getAllStoragePolicies
      23: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokespecial #168                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      32: athrow

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #75                 // Field myUri:Ljava/net/URI;
       4: invokevirtual #238                // Method java/net/URI.hashCode:()I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: instanceof    #33                 // class org/apache/hadoop/fs/AbstractFileSystem
       8: ifne          13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: getfield      #75                 // Field myUri:Ljava/net/URI;
      17: aload_1
      18: checkcast     #33                 // class org/apache/hadoop/fs/AbstractFileSystem
      21: getfield      #75                 // Field myUri:Ljava/net/URI;
      24: invokevirtual #239                // Method java/net/URI.equals:(Ljava/lang/Object;)Z
      27: ireturn

  public boolean hasPathCapability(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #240                // Method makeQualified:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: aload_2
       6: invokestatic  #241                // Method org/apache/hadoop/fs/impl/PathCapabilitiesSupport.validatePathCapabilityArgs:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Ljava/lang/String;
       9: astore_3
      10: iconst_m1
      11: istore        4
      13: aload_3
      14: invokevirtual #242                // Method java/lang/String.hashCode:()I
      17: lookupswitch  { // 1
           -1881327609: 36
               default: 48
          }
      36: aload_3
      37: ldc           #243                // String fs.capability.paths.symlinks
      39: invokevirtual #9                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      42: ifeq          48
      45: iconst_0
      46: istore        4
      48: iload         4
      50: lookupswitch  { // 1
                     0: 68
               default: 73
          }
      68: aload_0
      69: invokevirtual #244                // Method supportsSymlinks:()Z
      72: ireturn
      73: iconst_0
      74: ireturn

  static {};
    Code:
       0: ldc           #33                 // class org/apache/hadoop/fs/AbstractFileSystem
       2: invokestatic  #245                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #246                // Field LOG:Lorg/slf4j/Logger;
       8: new           #67                 // class java/util/HashMap
      11: dup
      12: invokespecial #247                // Method java/util/HashMap."<init>":()V
      15: putstatic     #46                 // Field STATISTICS_TABLE:Ljava/util/Map;
      18: new           #248                // class java/util/concurrent/ConcurrentHashMap
      21: dup
      22: invokespecial #249                // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      25: putstatic     #13                 // Field CONSTRUCTOR_CACHE:Ljava/util/Map;
      28: iconst_2
      29: anewarray     #250                // class java/lang/Class
      32: dup
      33: iconst_0
      34: ldc           #63                 // class java/net/URI
      36: aastore
      37: dup
      38: iconst_1
      39: ldc           #251                // class org/apache/hadoop/conf/Configuration
      41: aastore
      42: putstatic     #16                 // Field URI_CONFIG_ARGS:[Ljava/lang/Class;
      45: return
}
