Compiled from "RawLocalFileSystem.java"
public class org.apache.hadoop.fs.RawLocalFileSystem extends org.apache.hadoop.fs.FileSystem {
  static final java.net.URI NAME;

  private org.apache.hadoop.fs.Path workingDir;

  private static boolean useDeprecatedFileStatus;

  public static void useStatIfAvailable();
    Code:
       0: invokestatic  #1                  // Method org/apache/hadoop/fs/Stat.isAvailable:()Z
       3: ifne          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: putstatic     #2                  // Field useDeprecatedFileStatus:Z
      14: return

  public org.apache.hadoop.fs.RawLocalFileSystem();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/apache/hadoop/fs/FileSystem."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #4                  // Method getInitialWorkingDirectory:()Lorg/apache/hadoop/fs/Path;
       9: putfield      #5                  // Field workingDir:Lorg/apache/hadoop/fs/Path;
      12: return

  private org.apache.hadoop.fs.Path makeAbsolute(org.apache.hadoop.fs.Path);
    Code:
       0: aload_1
       1: invokevirtual #6                  // Method org/apache/hadoop/fs/Path.isAbsolute:()Z
       4: ifeq          9
       7: aload_1
       8: areturn
       9: new           #7                  // class org/apache/hadoop/fs/Path
      12: dup
      13: aload_0
      14: getfield      #5                  // Field workingDir:Lorg/apache/hadoop/fs/Path;
      17: aload_1
      18: invokespecial #8                  // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
      21: areturn

  public java.io.File pathToFile(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #9                  // Method checkPath:(Lorg/apache/hadoop/fs/Path;)V
       5: aload_1
       6: invokevirtual #6                  // Method org/apache/hadoop/fs/Path.isAbsolute:()Z
       9: ifne          25
      12: new           #7                  // class org/apache/hadoop/fs/Path
      15: dup
      16: aload_0
      17: invokevirtual #10                 // Method getWorkingDirectory:()Lorg/apache/hadoop/fs/Path;
      20: aload_1
      21: invokespecial #8                  // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
      24: astore_1
      25: new           #11                 // class java/io/File
      28: dup
      29: aload_1
      30: invokevirtual #12                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
      33: invokevirtual #13                 // Method java/net/URI.getPath:()Ljava/lang/String;
      36: invokespecial #14                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      39: areturn

  public java.net.URI getUri();
    Code:
       0: getstatic     #15                 // Field NAME:Ljava/net/URI;
       3: areturn

  public void initialize(java.net.URI, org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #16                 // Method org/apache/hadoop/fs/FileSystem.initialize:(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V
       6: aload_0
       7: aload_2
       8: invokevirtual #17                 // Method setConf:(Lorg/apache/hadoop/conf/Configuration;)V
      11: return

  public org.apache.hadoop.fs.FSDataInputStream open(org.apache.hadoop.fs.Path, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #18                 // Method getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
       5: pop
       6: new           #19                 // class org/apache/hadoop/fs/FSDataInputStream
       9: dup
      10: new           #20                 // class org/apache/hadoop/fs/BufferedFSInputStream
      13: dup
      14: new           #21                 // class org/apache/hadoop/fs/RawLocalFileSystem$LocalFSFileInputStream
      17: dup
      18: aload_0
      19: aload_1
      20: invokespecial #22                 // Method org/apache/hadoop/fs/RawLocalFileSystem$LocalFSFileInputStream."<init>":(Lorg/apache/hadoop/fs/RawLocalFileSystem;Lorg/apache/hadoop/fs/Path;)V
      23: iload_2
      24: invokespecial #23                 // Method org/apache/hadoop/fs/BufferedFSInputStream."<init>":(Lorg/apache/hadoop/fs/FSInputStream;I)V
      27: invokespecial #24                 // Method org/apache/hadoop/fs/FSDataInputStream."<init>":(Ljava/io/InputStream;)V
      30: areturn

  public org.apache.hadoop.fs.FSDataInputStream open(org.apache.hadoop.fs.PathHandle, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: instanceof    #25                 // class org/apache/hadoop/fs/LocalFileSystemPathHandle
       4: ifne          21
       7: new           #25                 // class org/apache/hadoop/fs/LocalFileSystemPathHandle
      10: dup
      11: aload_1
      12: invokeinterface #26,  1           // InterfaceMethod org/apache/hadoop/fs/PathHandle.bytes:()Ljava/nio/ByteBuffer;
      17: invokespecial #27                 // Method org/apache/hadoop/fs/LocalFileSystemPathHandle."<init>":(Ljava/nio/ByteBuffer;)V
      20: astore_1
      21: aload_1
      22: checkcast     #25                 // class org/apache/hadoop/fs/LocalFileSystemPathHandle
      25: astore_3
      26: aload_3
      27: aload_0
      28: new           #7                  // class org/apache/hadoop/fs/Path
      31: dup
      32: aload_3
      33: invokevirtual #28                 // Method org/apache/hadoop/fs/LocalFileSystemPathHandle.getPath:()Ljava/lang/String;
      36: invokespecial #29                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      39: invokevirtual #18                 // Method getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      42: invokevirtual #30                 // Method org/apache/hadoop/fs/LocalFileSystemPathHandle.verify:(Lorg/apache/hadoop/fs/FileStatus;)V
      45: new           #19                 // class org/apache/hadoop/fs/FSDataInputStream
      48: dup
      49: new           #20                 // class org/apache/hadoop/fs/BufferedFSInputStream
      52: dup
      53: new           #21                 // class org/apache/hadoop/fs/RawLocalFileSystem$LocalFSFileInputStream
      56: dup
      57: aload_0
      58: new           #7                  // class org/apache/hadoop/fs/Path
      61: dup
      62: aload_3
      63: invokevirtual #28                 // Method org/apache/hadoop/fs/LocalFileSystemPathHandle.getPath:()Ljava/lang/String;
      66: invokespecial #29                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      69: invokespecial #22                 // Method org/apache/hadoop/fs/RawLocalFileSystem$LocalFSFileInputStream."<init>":(Lorg/apache/hadoop/fs/RawLocalFileSystem;Lorg/apache/hadoop/fs/Path;)V
      72: iload_2
      73: invokespecial #23                 // Method org/apache/hadoop/fs/BufferedFSInputStream."<init>":(Lorg/apache/hadoop/fs/FSInputStream;I)V
      76: invokespecial #24                 // Method org/apache/hadoop/fs/FSDataInputStream."<init>":(Ljava/io/InputStream;)V
      79: areturn

  public org.apache.hadoop.fs.FSDataOutputStream append(org.apache.hadoop.fs.Path, int, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #18                 // Method getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
       5: astore        4
       7: aload         4
       9: invokevirtual #31                 // Method org/apache/hadoop/fs/FileStatus.isDirectory:()Z
      12: ifeq          47
      15: new           #32                 // class java/io/IOException
      18: dup
      19: new           #33                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #35                 // String Cannot append to a diretory (=
      28: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_1
      32: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      35: ldc           #38                 // String  )
      37: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokespecial #40                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: new           #41                 // class org/apache/hadoop/fs/FSDataOutputStream
      50: dup
      51: new           #42                 // class java/io/BufferedOutputStream
      54: dup
      55: aload_0
      56: aload_1
      57: iconst_1
      58: aconst_null
      59: invokevirtual #43                 // Method createOutputStreamWithMode:(Lorg/apache/hadoop/fs/Path;ZLorg/apache/hadoop/fs/permission/FsPermission;)Ljava/io/OutputStream;
      62: iload_2
      63: invokespecial #44                 // Method java/io/BufferedOutputStream."<init>":(Ljava/io/OutputStream;I)V
      66: aload_0
      67: getfield      #45                 // Field statistics:Lorg/apache/hadoop/fs/FileSystem$Statistics;
      70: aload         4
      72: invokevirtual #46                 // Method org/apache/hadoop/fs/FileStatus.getLen:()J
      75: invokespecial #47                 // Method org/apache/hadoop/fs/FSDataOutputStream."<init>":(Ljava/io/OutputStream;Lorg/apache/hadoop/fs/FileSystem$Statistics;J)V
      78: areturn

  public org.apache.hadoop.fs.FSDataOutputStream create(org.apache.hadoop.fs.Path, boolean, int, short, long, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iconst_1
       4: iload_3
       5: iload         4
       7: lload         5
       9: aload         7
      11: aconst_null
      12: invokespecial #48                 // Method create:(Lorg/apache/hadoop/fs/Path;ZZISJLorg/apache/hadoop/util/Progressable;Lorg/apache/hadoop/fs/permission/FsPermission;)Lorg/apache/hadoop/fs/FSDataOutputStream;
      15: areturn

  private org.apache.hadoop.fs.FSDataOutputStream create(org.apache.hadoop.fs.Path, boolean, boolean, int, short, long, org.apache.hadoop.util.Progressable, org.apache.hadoop.fs.permission.FsPermission) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #49                 // Method exists:(Lorg/apache/hadoop/fs/Path;)Z
       5: ifeq          39
       8: iload_2
       9: ifne          39
      12: new           #50                 // class org/apache/hadoop/fs/FileAlreadyExistsException
      15: dup
      16: new           #33                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #51                 // String File already exists:
      25: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_1
      29: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      32: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokespecial #52                 // Method org/apache/hadoop/fs/FileAlreadyExistsException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_1
      40: invokevirtual #53                 // Method org/apache/hadoop/fs/Path.getParent:()Lorg/apache/hadoop/fs/Path;
      43: astore        10
      45: aload         10
      47: ifnull        90
      50: aload_0
      51: aload         10
      53: invokevirtual #54                 // Method mkdirs:(Lorg/apache/hadoop/fs/Path;)Z
      56: ifne          90
      59: new           #32                 // class java/io/IOException
      62: dup
      63: new           #33                 // class java/lang/StringBuilder
      66: dup
      67: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      70: ldc           #55                 // String Mkdirs failed to create
      72: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: aload         10
      77: invokevirtual #56                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
      80: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      86: invokespecial #40                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      89: athrow
      90: new           #41                 // class org/apache/hadoop/fs/FSDataOutputStream
      93: dup
      94: new           #42                 // class java/io/BufferedOutputStream
      97: dup
      98: aload_0
      99: aload_1
     100: iconst_0
     101: aload         9
     103: invokevirtual #43                 // Method createOutputStreamWithMode:(Lorg/apache/hadoop/fs/Path;ZLorg/apache/hadoop/fs/permission/FsPermission;)Ljava/io/OutputStream;
     106: iload         4
     108: invokespecial #44                 // Method java/io/BufferedOutputStream."<init>":(Ljava/io/OutputStream;I)V
     111: aload_0
     112: getfield      #45                 // Field statistics:Lorg/apache/hadoop/fs/FileSystem$Statistics;
     115: invokespecial #57                 // Method org/apache/hadoop/fs/FSDataOutputStream."<init>":(Ljava/io/OutputStream;Lorg/apache/hadoop/fs/FileSystem$Statistics;)V
     118: areturn

  protected java.io.OutputStream createOutputStream(org.apache.hadoop.fs.Path, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aconst_null
       4: invokevirtual #43                 // Method createOutputStreamWithMode:(Lorg/apache/hadoop/fs/Path;ZLorg/apache/hadoop/fs/permission/FsPermission;)Ljava/io/OutputStream;
       7: areturn

  protected java.io.OutputStream createOutputStreamWithMode(org.apache.hadoop.fs.Path, boolean, org.apache.hadoop.fs.permission.FsPermission) throws java.io.IOException;
    Code:
       0: new           #58                 // class org/apache/hadoop/fs/RawLocalFileSystem$LocalFSFileOutputStream
       3: dup
       4: aload_0
       5: aload_1
       6: iload_2
       7: aload_3
       8: aconst_null
       9: invokespecial #59                 // Method org/apache/hadoop/fs/RawLocalFileSystem$LocalFSFileOutputStream."<init>":(Lorg/apache/hadoop/fs/RawLocalFileSystem;Lorg/apache/hadoop/fs/Path;ZLorg/apache/hadoop/fs/permission/FsPermission;Lorg/apache/hadoop/fs/RawLocalFileSystem$1;)V
      12: areturn

  public org.apache.hadoop.fs.FSDataOutputStream createNonRecursive(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission, java.util.EnumSet<org.apache.hadoop.fs.CreateFlag>, int, short, long, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #49                 // Method exists:(Lorg/apache/hadoop/fs/Path;)Z
       5: ifeq          45
       8: aload_3
       9: getstatic     #60                 // Field org/apache/hadoop/fs/CreateFlag.OVERWRITE:Lorg/apache/hadoop/fs/CreateFlag;
      12: invokevirtual #61                 // Method java/util/EnumSet.contains:(Ljava/lang/Object;)Z
      15: ifne          45
      18: new           #50                 // class org/apache/hadoop/fs/FileAlreadyExistsException
      21: dup
      22: new           #33                 // class java/lang/StringBuilder
      25: dup
      26: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      29: ldc           #51                 // String File already exists:
      31: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_1
      35: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      38: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: invokespecial #52                 // Method org/apache/hadoop/fs/FileAlreadyExistsException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: new           #41                 // class org/apache/hadoop/fs/FSDataOutputStream
      48: dup
      49: new           #42                 // class java/io/BufferedOutputStream
      52: dup
      53: aload_0
      54: aload_1
      55: iconst_0
      56: aload_2
      57: invokevirtual #43                 // Method createOutputStreamWithMode:(Lorg/apache/hadoop/fs/Path;ZLorg/apache/hadoop/fs/permission/FsPermission;)Ljava/io/OutputStream;
      60: iload         4
      62: invokespecial #44                 // Method java/io/BufferedOutputStream."<init>":(Ljava/io/OutputStream;I)V
      65: aload_0
      66: getfield      #45                 // Field statistics:Lorg/apache/hadoop/fs/FileSystem$Statistics;
      69: invokespecial #57                 // Method org/apache/hadoop/fs/FSDataOutputStream."<init>":(Ljava/io/OutputStream;Lorg/apache/hadoop/fs/FileSystem$Statistics;)V
      72: areturn

  public org.apache.hadoop.fs.FSDataOutputStream create(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission, boolean, int, short, long, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_3
       3: iconst_1
       4: iload         4
       6: iload         5
       8: lload         6
      10: aload         8
      12: aload_2
      13: invokespecial #48                 // Method create:(Lorg/apache/hadoop/fs/Path;ZZISJLorg/apache/hadoop/util/Progressable;Lorg/apache/hadoop/fs/permission/FsPermission;)Lorg/apache/hadoop/fs/FSDataOutputStream;
      16: astore        9
      18: aload         9
      20: areturn

  public org.apache.hadoop.fs.FSDataOutputStream createNonRecursive(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission, boolean, int, short, long, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_3
       3: iconst_0
       4: iload         4
       6: iload         5
       8: lload         6
      10: aload         8
      12: aload_2
      13: invokespecial #48                 // Method create:(Lorg/apache/hadoop/fs/Path;ZZISJLorg/apache/hadoop/util/Progressable;Lorg/apache/hadoop/fs/permission/FsPermission;)Lorg/apache/hadoop/fs/FSDataOutputStream;
      16: astore        9
      18: aload         9
      20: areturn

  public void concat(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path[]) throws java.io.IOException;
    Code:
       0: sipush        4096
       3: istore_3
       4: aload_0
       5: aload_1
       6: invokevirtual #62                 // Method create:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FSDataOutputStream;
       9: astore        4
      11: aconst_null
      12: astore        5
      14: aload_2
      15: astore        6
      17: aload         6
      19: arraylength
      20: istore        7
      22: iconst_0
      23: istore        8
      25: iload         8
      27: iload         7
      29: if_icmpge     154
      32: aload         6
      34: iload         8
      36: aaload
      37: astore        9
      39: aload_0
      40: aload         9
      42: invokevirtual #63                 // Method open:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FSDataInputStream;
      45: astore        10
      47: aconst_null
      48: astore        11
      50: aload         10
      52: aload         4
      54: sipush        4096
      57: iconst_0
      58: invokestatic  #64                 // Method org/apache/hadoop/io/IOUtils.copyBytes:(Ljava/io/InputStream;Ljava/io/OutputStream;IZ)V
      61: aload         10
      63: ifnull        148
      66: aload         11
      68: ifnull        91
      71: aload         10
      73: invokevirtual #65                 // Method org/apache/hadoop/fs/FSDataInputStream.close:()V
      76: goto          148
      79: astore        12
      81: aload         11
      83: aload         12
      85: invokevirtual #67                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      88: goto          148
      91: aload         10
      93: invokevirtual #65                 // Method org/apache/hadoop/fs/FSDataInputStream.close:()V
      96: goto          148
      99: astore        12
     101: aload         12
     103: astore        11
     105: aload         12
     107: athrow
     108: astore        13
     110: aload         10
     112: ifnull        145
     115: aload         11
     117: ifnull        140
     120: aload         10
     122: invokevirtual #65                 // Method org/apache/hadoop/fs/FSDataInputStream.close:()V
     125: goto          145
     128: astore        14
     130: aload         11
     132: aload         14
     134: invokevirtual #67                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     137: goto          145
     140: aload         10
     142: invokevirtual #65                 // Method org/apache/hadoop/fs/FSDataInputStream.close:()V
     145: aload         13
     147: athrow
     148: iinc          8, 1
     151: goto          25
     154: aload         4
     156: ifnull        241
     159: aload         5
     161: ifnull        184
     164: aload         4
     166: invokevirtual #68                 // Method org/apache/hadoop/fs/FSDataOutputStream.close:()V
     169: goto          241
     172: astore        6
     174: aload         5
     176: aload         6
     178: invokevirtual #67                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     181: goto          241
     184: aload         4
     186: invokevirtual #68                 // Method org/apache/hadoop/fs/FSDataOutputStream.close:()V
     189: goto          241
     192: astore        6
     194: aload         6
     196: astore        5
     198: aload         6
     200: athrow
     201: astore        15
     203: aload         4
     205: ifnull        238
     208: aload         5
     210: ifnull        233
     213: aload         4
     215: invokevirtual #68                 // Method org/apache/hadoop/fs/FSDataOutputStream.close:()V
     218: goto          238
     221: astore        16
     223: aload         5
     225: aload         16
     227: invokevirtual #67                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     230: goto          238
     233: aload         4
     235: invokevirtual #68                 // Method org/apache/hadoop/fs/FSDataOutputStream.close:()V
     238: aload         15
     240: athrow
     241: return
    Exception table:
       from    to  target type
          71    76    79   Class java/lang/Throwable
          50    61    99   Class java/lang/Throwable
          50    61   108   any
         120   125   128   Class java/lang/Throwable
          99   110   108   any
         164   169   172   Class java/lang/Throwable
          14   154   192   Class java/lang/Throwable
          14   154   201   any
         213   218   221   Class java/lang/Throwable
         192   203   201   any

  public boolean rename(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #69                 // Method pathToFile:(Lorg/apache/hadoop/fs/Path;)Ljava/io/File;
       5: astore_3
       6: aload_0
       7: aload_2
       8: invokevirtual #69                 // Method pathToFile:(Lorg/apache/hadoop/fs/Path;)Ljava/io/File;
      11: astore        4
      13: aload_3
      14: aload         4
      16: invokevirtual #70                 // Method java/io/File.renameTo:(Ljava/io/File;)Z
      19: ifeq          24
      22: iconst_1
      23: ireturn
      24: getstatic     #71                 // Field org/apache/hadoop/util/Shell.WINDOWS:Z
      27: ifeq          44
      30: aload_0
      31: aload_1
      32: aload_3
      33: aload_2
      34: aload         4
      36: invokevirtual #72                 // Method handleEmptyDstDirectoryOnWindows:(Lorg/apache/hadoop/fs/Path;Ljava/io/File;Lorg/apache/hadoop/fs/Path;Ljava/io/File;)Z
      39: ifeq          44
      42: iconst_1
      43: ireturn
      44: getstatic     #73                 // Field LOG:Lorg/apache/commons/logging/Log;
      47: invokeinterface #74,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      52: ifeq          91
      55: getstatic     #73                 // Field LOG:Lorg/apache/commons/logging/Log;
      58: new           #33                 // class java/lang/StringBuilder
      61: dup
      62: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      65: ldc           #75                 // String Falling through to a copy of
      67: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: aload_1
      71: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      74: ldc           #76                 // String  to
      76: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: aload_2
      80: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      83: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      86: invokeinterface #77,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      91: aload_0
      92: aload_1
      93: aload_0
      94: aload_2
      95: iconst_1
      96: aload_0
      97: invokevirtual #78                 // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
     100: invokestatic  #79                 // Method org/apache/hadoop/fs/FileUtil.copy:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZLorg/apache/hadoop/conf/Configuration;)Z
     103: ireturn

  public final boolean handleEmptyDstDirectoryOnWindows(org.apache.hadoop.fs.Path, java.io.File, org.apache.hadoop.fs.Path, java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_3
       2: invokevirtual #18                 // Method getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
       5: astore        5
       7: aload         4
       9: invokevirtual #80                 // Method java/io/File.list:()[Ljava/lang/String;
      12: astore        6
      14: aload         6
      16: ifnull        100
      19: aload         5
      21: invokevirtual #31                 // Method org/apache/hadoop/fs/FileStatus.isDirectory:()Z
      24: ifeq          100
      27: aload         6
      29: arraylength
      30: ifne          100
      33: getstatic     #73                 // Field LOG:Lorg/apache/commons/logging/Log;
      36: invokeinterface #74,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      41: ifeq          80
      44: getstatic     #73                 // Field LOG:Lorg/apache/commons/logging/Log;
      47: new           #33                 // class java/lang/StringBuilder
      50: dup
      51: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      54: ldc           #81                 // String Deleting empty destination and renaming
      56: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: aload_1
      60: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      63: ldc           #76                 // String  to
      65: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_3
      69: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      72: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: invokeinterface #77,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      80: aload_0
      81: aload_3
      82: iconst_0
      83: invokevirtual #82                 // Method delete:(Lorg/apache/hadoop/fs/Path;Z)Z
      86: ifeq          100
      89: aload_2
      90: aload         4
      92: invokevirtual #70                 // Method java/io/File.renameTo:(Ljava/io/File;)Z
      95: ifeq          100
      98: iconst_1
      99: ireturn
     100: goto          105
     103: astore        5
     105: iconst_0
     106: ireturn
    Exception table:
       from    to  target type
           0    99   103   Class java/io/FileNotFoundException

  public boolean truncate(org.apache.hadoop.fs.Path, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #18                 // Method getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
       5: astore        4
       7: aload         4
       9: ifnonnull     44
      12: new           #83                 // class java/io/FileNotFoundException
      15: dup
      16: new           #33                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #84                 // String File
      25: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_1
      29: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      32: ldc           #85                 // String  not found
      34: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokespecial #86                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: aload         4
      46: invokevirtual #31                 // Method org/apache/hadoop/fs/FileStatus.isDirectory:()Z
      49: ifeq          84
      52: new           #32                 // class java/io/IOException
      55: dup
      56: new           #33                 // class java/lang/StringBuilder
      59: dup
      60: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      63: ldc           #87                 // String Cannot truncate a directory (=
      65: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_1
      69: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      72: ldc           #88                 // String )
      74: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      80: invokespecial #40                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      83: athrow
      84: aload         4
      86: invokevirtual #46                 // Method org/apache/hadoop/fs/FileStatus.getLen:()J
      89: lstore        5
      91: lload_2
      92: lload         5
      94: lcmp
      95: ifle          140
      98: new           #89                 // class java/lang/IllegalArgumentException
     101: dup
     102: new           #33                 // class java/lang/StringBuilder
     105: dup
     106: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     109: ldc           #90                 // String Cannot truncate to a larger file size. Current size:
     111: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: lload         5
     116: invokevirtual #91                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     119: ldc           #92                 // String , truncate size:
     121: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: lload_2
     125: invokevirtual #91                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     128: ldc           #93                 // String .
     130: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     136: invokespecial #94                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     139: athrow
     140: new           #95                 // class java/io/FileOutputStream
     143: dup
     144: aload_0
     145: aload_1
     146: invokevirtual #69                 // Method pathToFile:(Lorg/apache/hadoop/fs/Path;)Ljava/io/File;
     149: iconst_1
     150: invokespecial #96                 // Method java/io/FileOutputStream."<init>":(Ljava/io/File;Z)V
     153: astore        7
     155: aconst_null
     156: astore        8
     158: aload         7
     160: invokevirtual #97                 // Method java/io/FileOutputStream.getChannel:()Ljava/nio/channels/FileChannel;
     163: lload_2
     164: invokevirtual #98                 // Method java/nio/channels/FileChannel.truncate:(J)Ljava/nio/channels/FileChannel;
     167: pop
     168: goto          183
     171: astore        9
     173: new           #99                 // class org/apache/hadoop/fs/FSError
     176: dup
     177: aload         9
     179: invokespecial #100                // Method org/apache/hadoop/fs/FSError."<init>":(Ljava/lang/Throwable;)V
     182: athrow
     183: aload         7
     185: ifnull        270
     188: aload         8
     190: ifnull        213
     193: aload         7
     195: invokevirtual #101                // Method java/io/FileOutputStream.close:()V
     198: goto          270
     201: astore        9
     203: aload         8
     205: aload         9
     207: invokevirtual #67                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     210: goto          270
     213: aload         7
     215: invokevirtual #101                // Method java/io/FileOutputStream.close:()V
     218: goto          270
     221: astore        9
     223: aload         9
     225: astore        8
     227: aload         9
     229: athrow
     230: astore        10
     232: aload         7
     234: ifnull        267
     237: aload         8
     239: ifnull        262
     242: aload         7
     244: invokevirtual #101                // Method java/io/FileOutputStream.close:()V
     247: goto          267
     250: astore        11
     252: aload         8
     254: aload         11
     256: invokevirtual #67                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     259: goto          267
     262: aload         7
     264: invokevirtual #101                // Method java/io/FileOutputStream.close:()V
     267: aload         10
     269: athrow
     270: iconst_1
     271: ireturn
    Exception table:
       from    to  target type
         158   168   171   Class java/io/IOException
         193   198   201   Class java/lang/Throwable
         158   183   221   Class java/lang/Throwable
         158   183   230   any
         242   247   250   Class java/lang/Throwable
         221   232   230   any

  public boolean delete(org.apache.hadoop.fs.Path, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #69                 // Method pathToFile:(Lorg/apache/hadoop/fs/Path;)Ljava/io/File;
       5: astore_3
       6: aload_3
       7: invokevirtual #102                // Method java/io/File.exists:()Z
      10: ifne          15
      13: iconst_0
      14: ireturn
      15: aload_3
      16: invokevirtual #103                // Method java/io/File.isFile:()Z
      19: ifeq          27
      22: aload_3
      23: invokevirtual #104                // Method java/io/File.delete:()Z
      26: ireturn
      27: iload_2
      28: ifne          81
      31: aload_3
      32: invokevirtual #105                // Method java/io/File.isDirectory:()Z
      35: ifeq          81
      38: aload_3
      39: invokestatic  #106                // Method org/apache/hadoop/fs/FileUtil.listFiles:(Ljava/io/File;)[Ljava/io/File;
      42: arraylength
      43: ifeq          81
      46: new           #32                 // class java/io/IOException
      49: dup
      50: new           #33                 // class java/lang/StringBuilder
      53: dup
      54: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      57: ldc           #107                // String Directory
      59: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_3
      63: invokevirtual #108                // Method java/io/File.toString:()Ljava/lang/String;
      66: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: ldc           #109                // String  is not empty
      71: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      77: invokespecial #40                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      80: athrow
      81: aload_3
      82: invokestatic  #110                // Method org/apache/hadoop/fs/FileUtil.fullyDelete:(Ljava/io/File;)Z
      85: ireturn

  public org.apache.hadoop.fs.FileStatus[] listStatus(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #69                 // Method pathToFile:(Lorg/apache/hadoop/fs/Path;)Ljava/io/File;
       5: astore_2
       6: aload_2
       7: invokevirtual #102                // Method java/io/File.exists:()Z
      10: ifne          45
      13: new           #83                 // class java/io/FileNotFoundException
      16: dup
      17: new           #33                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #84                 // String File
      26: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_1
      30: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      33: ldc           #111                // String  does not exist
      35: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: invokespecial #86                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: aload_2
      46: invokevirtual #105                // Method java/io/File.isDirectory:()Z
      49: ifeq          143
      52: aload_2
      53: invokestatic  #112                // Method org/apache/hadoop/fs/FileUtil.list:(Ljava/io/File;)[Ljava/lang/String;
      56: astore        4
      58: aload         4
      60: arraylength
      61: anewarray     #113                // class org/apache/hadoop/fs/FileStatus
      64: astore_3
      65: iconst_0
      66: istore        5
      68: iconst_0
      69: istore        6
      71: iload         6
      73: aload         4
      75: arraylength
      76: if_icmpge     123
      79: aload_3
      80: iload         5
      82: aload_0
      83: new           #7                  // class org/apache/hadoop/fs/Path
      86: dup
      87: aload_1
      88: new           #7                  // class org/apache/hadoop/fs/Path
      91: dup
      92: aconst_null
      93: aconst_null
      94: aload         4
      96: iload         6
      98: aaload
      99: invokespecial #114                // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     102: invokespecial #8                  // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
     105: invokevirtual #18                 // Method getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
     108: aastore
     109: iinc          5, 1
     112: goto          117
     115: astore        7
     117: iinc          6, 1
     120: goto          71
     123: iload         5
     125: aload         4
     127: arraylength
     128: if_icmpne     133
     131: aload_3
     132: areturn
     133: aload_3
     134: iload         5
     136: invokestatic  #115                // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
     139: checkcast     #116                // class "[Lorg/apache/hadoop/fs/FileStatus;"
     142: areturn
     143: getstatic     #2                  // Field useDeprecatedFileStatus:Z
     146: ifne          162
     149: iconst_1
     150: anewarray     #113                // class org/apache/hadoop/fs/FileStatus
     153: dup
     154: iconst_0
     155: aload_0
     156: aload_1
     157: invokevirtual #18                 // Method getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
     160: aastore
     161: areturn
     162: iconst_1
     163: anewarray     #113                // class org/apache/hadoop/fs/FileStatus
     166: dup
     167: iconst_0
     168: new           #117                // class org/apache/hadoop/fs/RawLocalFileSystem$DeprecatedRawLocalFileStatus
     171: dup
     172: aload_2
     173: aload_0
     174: aload_1
     175: invokevirtual #118                // Method getDefaultBlockSize:(Lorg/apache/hadoop/fs/Path;)J
     178: aload_0
     179: invokespecial #119                // Method org/apache/hadoop/fs/RawLocalFileSystem$DeprecatedRawLocalFileStatus."<init>":(Ljava/io/File;JLorg/apache/hadoop/fs/FileSystem;)V
     182: aastore
     183: areturn
    Exception table:
       from    to  target type
          79   112   115   Class java/io/FileNotFoundException

  protected boolean mkOneDir(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #7                  // class org/apache/hadoop/fs/Path
       4: dup
       5: aload_1
       6: invokevirtual #120                // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
       9: invokespecial #29                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      12: aload_1
      13: aconst_null
      14: invokevirtual #121                // Method mkOneDirWithMode:(Lorg/apache/hadoop/fs/Path;Ljava/io/File;Lorg/apache/hadoop/fs/permission/FsPermission;)Z
      17: ireturn

  protected boolean mkOneDirWithMode(org.apache.hadoop.fs.Path, java.io.File, org.apache.hadoop.fs.permission.FsPermission) throws java.io.IOException;
    Code:
       0: aload_3
       1: ifnonnull     8
       4: invokestatic  #122                // Method org/apache/hadoop/fs/permission/FsPermission.getDirDefault:()Lorg/apache/hadoop/fs/permission/FsPermission;
       7: astore_3
       8: aload_3
       9: aload_0
      10: invokevirtual #78                 // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
      13: invokestatic  #123                // Method org/apache/hadoop/fs/permission/FsPermission.getUMask:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/permission/FsPermission;
      16: invokevirtual #124                // Method org/apache/hadoop/fs/permission/FsPermission.applyUMask:(Lorg/apache/hadoop/fs/permission/FsPermission;)Lorg/apache/hadoop/fs/permission/FsPermission;
      19: astore_3
      20: getstatic     #71                 // Field org/apache/hadoop/util/Shell.WINDOWS:Z
      23: ifeq          90
      26: invokestatic  #125                // Method org/apache/hadoop/io/nativeio/NativeIO.isAvailable:()Z
      29: ifeq          90
      32: aload_2
      33: aload_3
      34: invokevirtual #126                // Method org/apache/hadoop/fs/permission/FsPermission.toShort:()S
      37: invokestatic  #127                // Method org/apache/hadoop/io/nativeio/NativeIO$Windows.createDirectoryWithMode:(Ljava/io/File;I)V
      40: iconst_1
      41: ireturn
      42: astore        4
      44: getstatic     #73                 // Field LOG:Lorg/apache/commons/logging/Log;
      47: invokeinterface #74,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      52: ifeq          88
      55: getstatic     #73                 // Field LOG:Lorg/apache/commons/logging/Log;
      58: ldc           #128                // String NativeIO.createDirectoryWithMode error, path = %s, mode = %o
      60: iconst_2
      61: anewarray     #129                // class java/lang/Object
      64: dup
      65: iconst_0
      66: aload_2
      67: aastore
      68: dup
      69: iconst_1
      70: aload_3
      71: invokevirtual #126                // Method org/apache/hadoop/fs/permission/FsPermission.toShort:()S
      74: invokestatic  #130                // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;
      77: aastore
      78: invokestatic  #131                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      81: aload         4
      83: invokeinterface #132,  3          // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      88: iconst_0
      89: ireturn
      90: aload_2
      91: invokevirtual #133                // Method java/io/File.mkdir:()Z
      94: istore        4
      96: iload         4
      98: ifeq          107
     101: aload_0
     102: aload_1
     103: aload_3
     104: invokevirtual #134                // Method setPermission:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)V
     107: iload         4
     109: ireturn
    Exception table:
       from    to  target type
          32    41    42   Class java/io/IOException

  public boolean mkdirs(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #135                // Method mkdirsWithOptionalPermission:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z
       6: ireturn

  public boolean mkdirs(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #135                // Method mkdirsWithOptionalPermission:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z
       6: ireturn

  private boolean mkdirsWithOptionalPermission(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #89                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #136                // String mkdirs path arg is null
      10: invokespecial #94                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_1
      15: invokevirtual #53                 // Method org/apache/hadoop/fs/Path.getParent:()Lorg/apache/hadoop/fs/Path;
      18: astore_3
      19: aload_0
      20: aload_1
      21: invokevirtual #69                 // Method pathToFile:(Lorg/apache/hadoop/fs/Path;)Ljava/io/File;
      24: astore        4
      26: aconst_null
      27: astore        5
      29: aload_3
      30: ifnull        88
      33: aload_0
      34: aload_3
      35: invokevirtual #69                 // Method pathToFile:(Lorg/apache/hadoop/fs/Path;)Ljava/io/File;
      38: astore        5
      40: aload         5
      42: ifnull        88
      45: aload         5
      47: invokevirtual #102                // Method java/io/File.exists:()Z
      50: ifeq          88
      53: aload         5
      55: invokevirtual #105                // Method java/io/File.isDirectory:()Z
      58: ifne          88
      61: new           #137                // class org/apache/hadoop/fs/ParentNotDirectoryException
      64: dup
      65: new           #33                 // class java/lang/StringBuilder
      68: dup
      69: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      72: ldc           #138                // String Parent path is not a directory:
      74: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: aload_3
      78: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      81: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      84: invokespecial #139                // Method org/apache/hadoop/fs/ParentNotDirectoryException."<init>":(Ljava/lang/String;)V
      87: athrow
      88: aload         4
      90: invokevirtual #102                // Method java/io/File.exists:()Z
      93: ifeq          135
      96: aload         4
      98: invokevirtual #105                // Method java/io/File.isDirectory:()Z
     101: ifne          135
     104: new           #50                 // class org/apache/hadoop/fs/FileAlreadyExistsException
     107: dup
     108: new           #33                 // class java/lang/StringBuilder
     111: dup
     112: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     115: ldc           #140                // String Destination exists and is not a directory:
     117: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: aload         4
     122: invokevirtual #141                // Method java/io/File.getCanonicalPath:()Ljava/lang/String;
     125: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     131: invokespecial #52                 // Method org/apache/hadoop/fs/FileAlreadyExistsException."<init>":(Ljava/lang/String;)V
     134: athrow
     135: aload_3
     136: ifnull        155
     139: aload         5
     141: invokevirtual #102                // Method java/io/File.exists:()Z
     144: ifne          155
     147: aload_0
     148: aload_3
     149: invokevirtual #54                 // Method mkdirs:(Lorg/apache/hadoop/fs/Path;)Z
     152: ifeq          178
     155: aload_0
     156: aload_1
     157: aload         4
     159: aload_2
     160: invokevirtual #121                // Method mkOneDirWithMode:(Lorg/apache/hadoop/fs/Path;Ljava/io/File;Lorg/apache/hadoop/fs/permission/FsPermission;)Z
     163: ifne          174
     166: aload         4
     168: invokevirtual #105                // Method java/io/File.isDirectory:()Z
     171: ifeq          178
     174: iconst_1
     175: goto          179
     178: iconst_0
     179: ireturn

  public org.apache.hadoop.fs.Path getHomeDirectory();
    Code:
       0: aload_0
       1: new           #7                  // class org/apache/hadoop/fs/Path
       4: dup
       5: ldc           #142                // String user.home
       7: invokestatic  #143                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      10: invokespecial #29                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      13: invokevirtual #144                // Method makeQualified:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      16: areturn

  public void setWorkingDirectory(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokespecial #145                // Method makeAbsolute:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: putfield      #5                  // Field workingDir:Lorg/apache/hadoop/fs/Path;
       9: aload_0
      10: aload_0
      11: getfield      #5                  // Field workingDir:Lorg/apache/hadoop/fs/Path;
      14: invokevirtual #9                  // Method checkPath:(Lorg/apache/hadoop/fs/Path;)V
      17: return

  public org.apache.hadoop.fs.Path getWorkingDirectory();
    Code:
       0: aload_0
       1: getfield      #5                  // Field workingDir:Lorg/apache/hadoop/fs/Path;
       4: areturn

  protected org.apache.hadoop.fs.Path getInitialWorkingDirectory();
    Code:
       0: aload_0
       1: new           #7                  // class org/apache/hadoop/fs/Path
       4: dup
       5: ldc           #146                // String user.dir
       7: invokestatic  #143                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      10: invokespecial #29                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      13: invokevirtual #144                // Method makeQualified:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      16: areturn

  public org.apache.hadoop.fs.FsStatus getStatus(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     17
       5: new           #7                  // class org/apache/hadoop/fs/Path
       8: dup
       9: ldc           #147                // String /
      11: invokespecial #29                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      14: goto          18
      17: aload_1
      18: invokevirtual #69                 // Method pathToFile:(Lorg/apache/hadoop/fs/Path;)Ljava/io/File;
      21: astore_2
      22: new           #148                // class org/apache/hadoop/fs/FsStatus
      25: dup
      26: aload_2
      27: invokevirtual #149                // Method java/io/File.getTotalSpace:()J
      30: aload_2
      31: invokevirtual #149                // Method java/io/File.getTotalSpace:()J
      34: aload_2
      35: invokevirtual #150                // Method java/io/File.getFreeSpace:()J
      38: lsub
      39: aload_2
      40: invokevirtual #150                // Method java/io/File.getFreeSpace:()J
      43: invokespecial #151                // Method org/apache/hadoop/fs/FsStatus."<init>":(JJJ)V
      46: areturn

  public void moveFromLocalFile(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #152                // Method rename:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
       6: pop
       7: return

  public org.apache.hadoop.fs.Path startLocalOutput(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_1
       1: areturn

  public void completeLocalOutput(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #153                // Method org/apache/hadoop/fs/FileSystem.close:()V
       4: return

  public java.lang.String toString();
    Code:
       0: ldc           #154                // String LocalFS
       2: areturn

  public org.apache.hadoop.fs.FileStatus getFileStatus(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #155                // Method getFileLinkStatusInternal:(Lorg/apache/hadoop/fs/Path;Z)Lorg/apache/hadoop/fs/FileStatus;
       6: areturn

  private org.apache.hadoop.fs.FileStatus deprecatedGetFileStatus(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #69                 // Method pathToFile:(Lorg/apache/hadoop/fs/Path;)Ljava/io/File;
       5: astore_2
       6: aload_2
       7: invokevirtual #102                // Method java/io/File.exists:()Z
      10: ifeq          32
      13: new           #117                // class org/apache/hadoop/fs/RawLocalFileSystem$DeprecatedRawLocalFileStatus
      16: dup
      17: aload_0
      18: aload_1
      19: invokevirtual #69                 // Method pathToFile:(Lorg/apache/hadoop/fs/Path;)Ljava/io/File;
      22: aload_0
      23: aload_1
      24: invokevirtual #118                // Method getDefaultBlockSize:(Lorg/apache/hadoop/fs/Path;)J
      27: aload_0
      28: invokespecial #119                // Method org/apache/hadoop/fs/RawLocalFileSystem$DeprecatedRawLocalFileStatus."<init>":(Ljava/io/File;JLorg/apache/hadoop/fs/FileSystem;)V
      31: areturn
      32: new           #83                 // class java/io/FileNotFoundException
      35: dup
      36: new           #33                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #84                 // String File
      45: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_1
      49: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      52: ldc           #111                // String  does not exist
      54: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokespecial #86                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
      63: athrow

  public void setOwner(org.apache.hadoop.fs.Path, java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #69                 // Method pathToFile:(Lorg/apache/hadoop/fs/Path;)Ljava/io/File;
       5: aload_2
       6: aload_3
       7: invokestatic  #156                // Method org/apache/hadoop/fs/FileUtil.setOwner:(Ljava/io/File;Ljava/lang/String;Ljava/lang/String;)V
      10: return

  public void setPermission(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission) throws java.io.IOException;
    Code:
       0: invokestatic  #125                // Method org/apache/hadoop/io/nativeio/NativeIO.isAvailable:()Z
       3: ifeq          24
       6: aload_0
       7: aload_1
       8: invokevirtual #69                 // Method pathToFile:(Lorg/apache/hadoop/fs/Path;)Ljava/io/File;
      11: invokevirtual #141                // Method java/io/File.getCanonicalPath:()Ljava/lang/String;
      14: aload_2
      15: invokevirtual #126                // Method org/apache/hadoop/fs/permission/FsPermission.toShort:()S
      18: invokestatic  #157                // Method org/apache/hadoop/io/nativeio/NativeIO$POSIX.chmod:(Ljava/lang/String;I)V
      21: goto          62
      24: ldc           #158                // String %04o
      26: iconst_1
      27: anewarray     #129                // class java/lang/Object
      30: dup
      31: iconst_0
      32: aload_2
      33: invokevirtual #126                // Method org/apache/hadoop/fs/permission/FsPermission.toShort:()S
      36: invokestatic  #130                // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;
      39: aastore
      40: invokestatic  #131                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      43: astore_3
      44: aload_3
      45: iconst_0
      46: aload_0
      47: aload_1
      48: invokevirtual #69                 // Method pathToFile:(Lorg/apache/hadoop/fs/Path;)Ljava/io/File;
      51: iconst_1
      52: invokestatic  #159                // Method org/apache/hadoop/fs/FileUtil.makeShellPath:(Ljava/io/File;Z)Ljava/lang/String;
      55: invokestatic  #160                // Method org/apache/hadoop/util/Shell.getSetPermissionCommand:(Ljava/lang/String;ZLjava/lang/String;)[Ljava/lang/String;
      58: invokestatic  #161                // Method org/apache/hadoop/util/Shell.execCommand:([Ljava/lang/String;)Ljava/lang/String;
      61: pop
      62: return

  public void setTimes(org.apache.hadoop.fs.Path, long, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #69                 // Method pathToFile:(Lorg/apache/hadoop/fs/Path;)Ljava/io/File;
       5: invokevirtual #162                // Method java/io/File.toPath:()Ljava/nio/file/Path;
       8: ldc           #163                // class java/nio/file/attribute/BasicFileAttributeView
      10: iconst_0
      11: anewarray     #164                // class java/nio/file/LinkOption
      14: invokestatic  #165                // Method java/nio/file/Files.getFileAttributeView:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;
      17: checkcast     #163                // class java/nio/file/attribute/BasicFileAttributeView
      20: astore        6
      22: lload_2
      23: lconst_0
      24: lcmp
      25: iflt          35
      28: lload_2
      29: invokestatic  #166                // Method java/nio/file/attribute/FileTime.fromMillis:(J)Ljava/nio/file/attribute/FileTime;
      32: goto          36
      35: aconst_null
      36: astore        7
      38: lload         4
      40: lconst_0
      41: lcmp
      42: iflt          53
      45: lload         4
      47: invokestatic  #166                // Method java/nio/file/attribute/FileTime.fromMillis:(J)Ljava/nio/file/attribute/FileTime;
      50: goto          54
      53: aconst_null
      54: astore        8
      56: aload         6
      58: aload         7
      60: aload         8
      62: aconst_null
      63: invokeinterface #167,  4          // InterfaceMethod java/nio/file/attribute/BasicFileAttributeView.setTimes:(Ljava/nio/file/attribute/FileTime;Ljava/nio/file/attribute/FileTime;Ljava/nio/file/attribute/FileTime;)V
      68: goto          105
      71: astore        6
      73: new           #83                 // class java/io/FileNotFoundException
      76: dup
      77: new           #33                 // class java/lang/StringBuilder
      80: dup
      81: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      84: ldc           #84                 // String File
      86: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: aload_1
      90: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      93: ldc           #111                // String  does not exist
      95: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     101: invokespecial #86                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
     104: athrow
     105: return
    Exception table:
       from    to  target type
           0    68    71   Class java/nio/file/NoSuchFileException

  protected org.apache.hadoop.fs.PathHandle createPathHandle(org.apache.hadoop.fs.FileStatus, org.apache.hadoop.fs.Options$HandleOpt...);
    Code:
       0: aload_1
       1: invokevirtual #31                 // Method org/apache/hadoop/fs/FileStatus.isDirectory:()Z
       4: ifne          14
       7: aload_1
       8: invokevirtual #169                // Method org/apache/hadoop/fs/FileStatus.isSymlink:()Z
      11: ifeq          24
      14: new           #89                 // class java/lang/IllegalArgumentException
      17: dup
      18: ldc           #170                // String PathHandle only available for files
      20: invokespecial #94                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_1
      25: invokevirtual #171                // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
      28: invokevirtual #12                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
      31: invokevirtual #172                // Method java/net/URI.getAuthority:()Ljava/lang/String;
      34: astore_3
      35: aload_3
      36: ifnull        78
      39: aload_3
      40: ldc           #173                // String file://
      42: invokevirtual #174                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      45: ifne          78
      48: new           #89                 // class java/lang/IllegalArgumentException
      51: dup
      52: new           #33                 // class java/lang/StringBuilder
      55: dup
      56: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      59: ldc           #175                // String Wrong FileSystem:
      61: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: aload_1
      65: invokevirtual #171                // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
      68: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      71: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      74: invokespecial #94                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      77: athrow
      78: ldc           #176                // class org/apache/hadoop/fs/Options$HandleOpt$Data
      80: aload_2
      81: invokestatic  #177                // Method org/apache/hadoop/fs/Options$HandleOpt.getOpt:(Ljava/lang/Class;[Lorg/apache/hadoop/fs/Options$HandleOpt;)Ljava/util/Optional;
      84: iconst_0
      85: invokestatic  #178                // Method org/apache/hadoop/fs/Options$HandleOpt.changed:(Z)Lorg/apache/hadoop/fs/Options$HandleOpt$Data;
      88: invokevirtual #179                // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      91: checkcast     #176                // class org/apache/hadoop/fs/Options$HandleOpt$Data
      94: astore        4
      96: ldc           #180                // class org/apache/hadoop/fs/Options$HandleOpt$Location
      98: aload_2
      99: invokestatic  #177                // Method org/apache/hadoop/fs/Options$HandleOpt.getOpt:(Ljava/lang/Class;[Lorg/apache/hadoop/fs/Options$HandleOpt;)Ljava/util/Optional;
     102: iconst_0
     103: invokestatic  #181                // Method org/apache/hadoop/fs/Options$HandleOpt.moved:(Z)Lorg/apache/hadoop/fs/Options$HandleOpt$Location;
     106: invokevirtual #179                // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
     109: checkcast     #180                // class org/apache/hadoop/fs/Options$HandleOpt$Location
     112: astore        5
     114: aload         5
     116: invokevirtual #182                // Method org/apache/hadoop/fs/Options$HandleOpt$Location.allowChange:()Z
     119: ifeq          132
     122: new           #183                // class java/lang/UnsupportedOperationException
     125: dup
     126: ldc           #184                // String Tracking file movement in basic FileSystem is not supported
     128: invokespecial #185                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
     131: athrow
     132: aload_1
     133: invokevirtual #171                // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
     136: astore        6
     138: aload         4
     140: invokevirtual #186                // Method org/apache/hadoop/fs/Options$HandleOpt$Data.allowChange:()Z
     143: ifne          159
     146: aload_1
     147: invokevirtual #187                // Method org/apache/hadoop/fs/FileStatus.getModificationTime:()J
     150: invokestatic  #188                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     153: invokestatic  #189                // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
     156: goto          162
     159: invokestatic  #190                // Method java/util/Optional.empty:()Ljava/util/Optional;
     162: astore        7
     164: new           #25                 // class org/apache/hadoop/fs/LocalFileSystemPathHandle
     167: dup
     168: aload         6
     170: invokevirtual #56                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
     173: aload         7
     175: invokespecial #191                // Method org/apache/hadoop/fs/LocalFileSystemPathHandle."<init>":(Ljava/lang/String;Ljava/util/Optional;)V
     178: areturn

  public boolean supportsSymlinks();
    Code:
       0: iconst_1
       1: ireturn

  public void createSymlink(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path, boolean) throws java.io.IOException;
    Code:
       0: invokestatic  #192                // Method org/apache/hadoop/fs/FileSystem.areSymlinksEnabled:()Z
       3: ifne          16
       6: new           #183                // class java/lang/UnsupportedOperationException
       9: dup
      10: ldc           #193                // String Symlinks not supported
      12: invokespecial #185                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: aload_1
      17: invokevirtual #12                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
      20: invokevirtual #194                // Method java/net/URI.getScheme:()Ljava/lang/String;
      23: astore        4
      25: aload         4
      27: ifnull        70
      30: ldc           #195                // String file
      32: aload         4
      34: invokevirtual #174                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      37: ifne          70
      40: new           #32                 // class java/io/IOException
      43: dup
      44: new           #33                 // class java/lang/StringBuilder
      47: dup
      48: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      51: ldc           #196                // String Unable to create symlink to non-local file system:
      53: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload_1
      57: invokevirtual #56                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
      60: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: invokespecial #40                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      69: athrow
      70: iload_3
      71: ifeq          83
      74: aload_0
      75: aload_2
      76: invokevirtual #53                 // Method org/apache/hadoop/fs/Path.getParent:()Lorg/apache/hadoop/fs/Path;
      79: invokevirtual #54                 // Method mkdirs:(Lorg/apache/hadoop/fs/Path;)Z
      82: pop
      83: aload_1
      84: invokevirtual #56                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
      87: aload_0
      88: aload_2
      89: invokespecial #145                // Method makeAbsolute:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      92: invokevirtual #56                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
      95: invokestatic  #197                // Method org/apache/hadoop/fs/FileUtil.symLink:(Ljava/lang/String;Ljava/lang/String;)I
      98: istore        5
     100: iload         5
     102: ifeq          151
     105: new           #32                 // class java/io/IOException
     108: dup
     109: new           #33                 // class java/lang/StringBuilder
     112: dup
     113: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     116: ldc           #198                // String Error
     118: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: iload         5
     123: invokevirtual #199                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     126: ldc           #200                // String  creating symlink
     128: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: aload_2
     132: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     135: ldc           #76                 // String  to
     137: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: aload_1
     141: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     144: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     147: invokespecial #40                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     150: athrow
     151: return

  public org.apache.hadoop.fs.FileStatus getFileLinkStatus(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #155                // Method getFileLinkStatusInternal:(Lorg/apache/hadoop/fs/Path;Z)Lorg/apache/hadoop/fs/FileStatus;
       6: astore_2
       7: aload_2
       8: invokevirtual #169                // Method org/apache/hadoop/fs/FileStatus.isSymlink:()Z
      11: ifeq          35
      14: aload_0
      15: invokevirtual #201                // Method getUri:()Ljava/net/URI;
      18: aload_2
      19: invokevirtual #171                // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
      22: aload_2
      23: invokevirtual #202                // Method org/apache/hadoop/fs/FileStatus.getSymlink:()Lorg/apache/hadoop/fs/Path;
      26: invokestatic  #203                // Method org/apache/hadoop/fs/FSLinkResolver.qualifySymlinkTarget:(Ljava/net/URI;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      29: astore_3
      30: aload_2
      31: aload_3
      32: invokevirtual #204                // Method org/apache/hadoop/fs/FileStatus.setSymlink:(Lorg/apache/hadoop/fs/Path;)V
      35: aload_2
      36: areturn

  private org.apache.hadoop.fs.FileStatus getFileLinkStatusInternal(org.apache.hadoop.fs.Path, boolean) throws java.io.IOException;
    Code:
       0: getstatic     #2                  // Field useDeprecatedFileStatus:Z
       3: ifne          13
       6: aload_0
       7: aload_1
       8: iload_2
       9: invokespecial #205                // Method getNativeFileLinkStatus:(Lorg/apache/hadoop/fs/Path;Z)Lorg/apache/hadoop/fs/FileStatus;
      12: areturn
      13: iload_2
      14: ifeq          23
      17: aload_0
      18: aload_1
      19: invokespecial #206                // Method deprecatedGetFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      22: areturn
      23: aload_0
      24: aload_1
      25: invokespecial #207                // Method deprecatedGetFileLinkStatusInternal:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      28: areturn

  private org.apache.hadoop.fs.FileStatus deprecatedGetFileLinkStatusInternal(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #11                 // class java/io/File
       3: dup
       4: aload_1
       5: invokevirtual #56                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
       8: invokespecial #14                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      11: invokestatic  #208                // Method org/apache/hadoop/fs/FileUtil.readLink:(Ljava/io/File;)Ljava/lang/String;
      14: astore_2
      15: aload_0
      16: aload_1
      17: invokevirtual #18                 // Method getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      20: astore_3
      21: aload_2
      22: invokevirtual #209                // Method java/lang/String.isEmpty:()Z
      25: ifeq          30
      28: aload_3
      29: areturn
      30: new           #113                // class org/apache/hadoop/fs/FileStatus
      33: dup
      34: aload_3
      35: invokevirtual #46                 // Method org/apache/hadoop/fs/FileStatus.getLen:()J
      38: iconst_0
      39: aload_3
      40: invokevirtual #210                // Method org/apache/hadoop/fs/FileStatus.getReplication:()S
      43: aload_3
      44: invokevirtual #211                // Method org/apache/hadoop/fs/FileStatus.getBlockSize:()J
      47: aload_3
      48: invokevirtual #187                // Method org/apache/hadoop/fs/FileStatus.getModificationTime:()J
      51: aload_3
      52: invokevirtual #212                // Method org/apache/hadoop/fs/FileStatus.getAccessTime:()J
      55: aload_3
      56: invokevirtual #213                // Method org/apache/hadoop/fs/FileStatus.getPermission:()Lorg/apache/hadoop/fs/permission/FsPermission;
      59: aload_3
      60: invokevirtual #214                // Method org/apache/hadoop/fs/FileStatus.getOwner:()Ljava/lang/String;
      63: aload_3
      64: invokevirtual #215                // Method org/apache/hadoop/fs/FileStatus.getGroup:()Ljava/lang/String;
      67: new           #7                  // class org/apache/hadoop/fs/Path
      70: dup
      71: aload_2
      72: invokespecial #29                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      75: aload_1
      76: invokespecial #216                // Method org/apache/hadoop/fs/FileStatus."<init>":(JZIJJJLorg/apache/hadoop/fs/permission/FsPermission;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
      79: areturn
      80: astore_3
      81: aload_2
      82: invokevirtual #209                // Method java/lang/String.isEmpty:()Z
      85: ifne          118
      88: new           #113                // class org/apache/hadoop/fs/FileStatus
      91: dup
      92: lconst_0
      93: iconst_0
      94: iconst_0
      95: lconst_0
      96: lconst_0
      97: lconst_0
      98: invokestatic  #217                // Method org/apache/hadoop/fs/permission/FsPermission.getDefault:()Lorg/apache/hadoop/fs/permission/FsPermission;
     101: ldc           #218                // String
     103: ldc           #218                // String
     105: new           #7                  // class org/apache/hadoop/fs/Path
     108: dup
     109: aload_2
     110: invokespecial #29                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
     113: aload_1
     114: invokespecial #216                // Method org/apache/hadoop/fs/FileStatus."<init>":(JZIJJJLorg/apache/hadoop/fs/permission/FsPermission;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
     117: areturn
     118: aload_3
     119: athrow
    Exception table:
       from    to  target type
          15    29    80   Class java/io/FileNotFoundException
          30    79    80   Class java/io/FileNotFoundException

  private org.apache.hadoop.fs.FileStatus getNativeFileLinkStatus(org.apache.hadoop.fs.Path, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #9                  // Method checkPath:(Lorg/apache/hadoop/fs/Path;)V
       5: new           #219                // class org/apache/hadoop/fs/Stat
       8: dup
       9: aload_1
      10: aload_0
      11: aload_1
      12: invokevirtual #118                // Method getDefaultBlockSize:(Lorg/apache/hadoop/fs/Path;)J
      15: iload_2
      16: aload_0
      17: invokespecial #220                // Method org/apache/hadoop/fs/Stat."<init>":(Lorg/apache/hadoop/fs/Path;JZLorg/apache/hadoop/fs/FileSystem;)V
      20: astore_3
      21: aload_3
      22: invokevirtual #221                // Method org/apache/hadoop/fs/Stat.getFileStatus:()Lorg/apache/hadoop/fs/FileStatus;
      25: astore        4
      27: aload         4
      29: areturn

  public org.apache.hadoop.fs.Path getLinkTarget(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #155                // Method getFileLinkStatusInternal:(Lorg/apache/hadoop/fs/Path;Z)Lorg/apache/hadoop/fs/FileStatus;
       6: astore_2
       7: aload_2
       8: invokevirtual #202                // Method org/apache/hadoop/fs/FileStatus.getSymlink:()Lorg/apache/hadoop/fs/Path;
      11: areturn

  public boolean hasPathCapability(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #144                // Method makeQualified:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: aload_2
       6: invokestatic  #222                // Method org/apache/hadoop/fs/impl/PathCapabilitiesSupport.validatePathCapabilityArgs:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Ljava/lang/String;
       9: astore_3
      10: iconst_m1
      11: istore        4
      13: aload_3
      14: invokevirtual #223                // Method java/lang/String.hashCode:()I
      17: lookupswitch  { // 6
           -1881327609: 151
           -1825386469: 136
             508851377: 106
             551582479: 76
             574454191: 121
             607855369: 91
               default: 163
          }
      76: aload_3
      77: ldc           #224                // String fs.capability.paths.append
      79: invokevirtual #174                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      82: ifeq          163
      85: iconst_0
      86: istore        4
      88: goto          163
      91: aload_3
      92: ldc           #225                // String fs.capability.paths.concat
      94: invokevirtual #174                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      97: ifeq          163
     100: iconst_1
     101: istore        4
     103: goto          163
     106: aload_3
     107: ldc           #226                // String fs.capability.paths.pathhandles
     109: invokevirtual #174                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     112: ifeq          163
     115: iconst_2
     116: istore        4
     118: goto          163
     121: aload_3
     122: ldc           #227                // String fs.capability.paths.permissions
     124: invokevirtual #174                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     127: ifeq          163
     130: iconst_3
     131: istore        4
     133: goto          163
     136: aload_3
     137: ldc           #228                // String fs.capability.paths.truncate
     139: invokevirtual #174                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     142: ifeq          163
     145: iconst_4
     146: istore        4
     148: goto          163
     151: aload_3
     152: ldc           #229                // String fs.capability.paths.symlinks
     154: invokevirtual #174                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     157: ifeq          163
     160: iconst_5
     161: istore        4
     163: iload         4
     165: tableswitch   { // 0 to 5
                     0: 204
                     1: 204
                     2: 204
                     3: 204
                     4: 204
                     5: 206
               default: 210
          }
     204: iconst_1
     205: ireturn
     206: invokestatic  #192                // Method org/apache/hadoop/fs/FileSystem.areSymlinksEnabled:()Z
     209: ireturn
     210: aload_0
     211: aload_1
     212: aload_2
     213: invokespecial #230                // Method org/apache/hadoop/fs/FileSystem.hasPathCapability:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Z
     216: ireturn

  static {};
    Code:
       0: ldc           #231                // String file:///
       2: invokestatic  #232                // Method java/net/URI.create:(Ljava/lang/String;)Ljava/net/URI;
       5: putstatic     #15                 // Field NAME:Ljava/net/URI;
       8: iconst_1
       9: putstatic     #2                  // Field useDeprecatedFileStatus:Z
      12: return
}
