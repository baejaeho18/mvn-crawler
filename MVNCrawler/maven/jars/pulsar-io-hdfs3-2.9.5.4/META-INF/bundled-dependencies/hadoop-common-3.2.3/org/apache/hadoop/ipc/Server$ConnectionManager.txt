Compiled from "Server.java"
class org.apache.hadoop.ipc.Server$ConnectionManager {
  private final java.util.concurrent.atomic.AtomicInteger count;

  private final java.util.concurrent.atomic.AtomicLong droppedConnections;

  private final java.util.Set<org.apache.hadoop.ipc.Server$Connection> connections;

  private final java.util.Map<java.lang.String, java.lang.Integer> userToConnectionsMap;

  private final java.lang.Object userToConnectionsMapLock;

  private final java.util.Timer idleScanTimer;

  private final int idleScanThreshold;

  private final int idleScanInterval;

  private final int maxIdleTime;

  private final int maxIdleToClose;

  private final int maxConnections;

  final org.apache.hadoop.ipc.Server this$0;

  org.apache.hadoop.ipc.Server$ConnectionManager(org.apache.hadoop.ipc.Server);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field this$0:Lorg/apache/hadoop/ipc/Server;
       5: aload_0
       6: invokespecial #5                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #6                  // class java/util/concurrent/atomic/AtomicInteger
      13: dup
      14: invokespecial #7                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      17: putfield      #8                  // Field count:Ljava/util/concurrent/atomic/AtomicInteger;
      20: aload_0
      21: new           #9                  // class java/util/concurrent/atomic/AtomicLong
      24: dup
      25: invokespecial #10                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      28: putfield      #3                  // Field droppedConnections:Ljava/util/concurrent/atomic/AtomicLong;
      31: aload_0
      32: new           #11                 // class java/lang/Object
      35: dup
      36: invokespecial #5                  // Method java/lang/Object."<init>":()V
      39: putfield      #12                 // Field userToConnectionsMapLock:Ljava/lang/Object;
      42: aload_0
      43: new           #13                 // class java/util/Timer
      46: dup
      47: new           #14                 // class java/lang/StringBuilder
      50: dup
      51: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      54: ldc           #16                 // String IPC Server idle connection scanner for port
      56: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: aload_1
      60: invokevirtual #18                 // Method org/apache/hadoop/ipc/Server.getPort:()I
      63: invokevirtual #19                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      66: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      69: iconst_1
      70: invokespecial #21                 // Method java/util/Timer."<init>":(Ljava/lang/String;Z)V
      73: putfield      #22                 // Field idleScanTimer:Ljava/util/Timer;
      76: aload_0
      77: aload_1
      78: invokestatic  #23                 // Method org/apache/hadoop/ipc/Server.access$500:(Lorg/apache/hadoop/ipc/Server;)Lorg/apache/hadoop/conf/Configuration;
      81: ldc           #25                 // String ipc.client.idlethreshold
      83: sipush        4000
      86: invokevirtual #26                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      89: putfield      #27                 // Field idleScanThreshold:I
      92: aload_0
      93: aload_1
      94: invokestatic  #23                 // Method org/apache/hadoop/ipc/Server.access$500:(Lorg/apache/hadoop/ipc/Server;)Lorg/apache/hadoop/conf/Configuration;
      97: ldc           #29                 // String ipc.client.connection.idle-scan-interval.ms
      99: sipush        10000
     102: invokevirtual #26                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
     105: putfield      #30                 // Field idleScanInterval:I
     108: aload_0
     109: iconst_2
     110: aload_1
     111: invokestatic  #23                 // Method org/apache/hadoop/ipc/Server.access$500:(Lorg/apache/hadoop/ipc/Server;)Lorg/apache/hadoop/conf/Configuration;
     114: ldc           #31                 // String ipc.client.connection.maxidletime
     116: sipush        10000
     119: invokevirtual #26                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
     122: imul
     123: putfield      #1                  // Field maxIdleTime:I
     126: aload_0
     127: aload_1
     128: invokestatic  #23                 // Method org/apache/hadoop/ipc/Server.access$500:(Lorg/apache/hadoop/ipc/Server;)Lorg/apache/hadoop/conf/Configuration;
     131: ldc           #32                 // String ipc.client.kill.max
     133: bipush        10
     135: invokevirtual #26                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
     138: putfield      #33                 // Field maxIdleToClose:I
     141: aload_0
     142: aload_1
     143: invokestatic  #23                 // Method org/apache/hadoop/ipc/Server.access$500:(Lorg/apache/hadoop/ipc/Server;)Lorg/apache/hadoop/conf/Configuration;
     146: ldc           #34                 // String ipc.server.max.connections
     148: iconst_0
     149: invokevirtual #26                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
     152: putfield      #35                 // Field maxConnections:I
     155: aload_0
     156: new           #36                 // class java/util/concurrent/ConcurrentHashMap
     159: dup
     160: aload_1
     161: invokestatic  #37                 // Method org/apache/hadoop/ipc/Server.access$4100:(Lorg/apache/hadoop/ipc/Server;)I
     164: ldc           #38                 // float 0.75f
     166: aload_1
     167: invokestatic  #39                 // Method org/apache/hadoop/ipc/Server.access$800:(Lorg/apache/hadoop/ipc/Server;)I
     170: iconst_2
     171: iadd
     172: invokespecial #40                 // Method java/util/concurrent/ConcurrentHashMap."<init>":(IFI)V
     175: invokestatic  #41                 // Method java/util/Collections.newSetFromMap:(Ljava/util/Map;)Ljava/util/Set;
     178: putfield      #42                 // Field connections:Ljava/util/Set;
     181: aload_0
     182: new           #36                 // class java/util/concurrent/ConcurrentHashMap
     185: dup
     186: invokespecial #43                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
     189: putfield      #44                 // Field userToConnectionsMap:Ljava/util/Map;
     192: return

  private boolean add(org.apache.hadoop.ipc.Server$Connection);
    Code:
       0: aload_0
       1: getfield      #42                 // Field connections:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #45,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: istore_2
      11: iload_2
      12: ifeq          23
      15: aload_0
      16: getfield      #8                  // Field count:Ljava/util/concurrent/atomic/AtomicInteger;
      19: invokevirtual #46                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      22: pop
      23: iload_2
      24: ireturn

  private boolean remove(org.apache.hadoop.ipc.Server$Connection);
    Code:
       0: aload_0
       1: getfield      #42                 // Field connections:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #47,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      10: istore_2
      11: iload_2
      12: ifeq          23
      15: aload_0
      16: getfield      #8                  // Field count:Ljava/util/concurrent/atomic/AtomicInteger;
      19: invokevirtual #48                 // Method java/util/concurrent/atomic/AtomicInteger.getAndDecrement:()I
      22: pop
      23: iload_2
      24: ireturn

  void incrUserConnections(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #12                 // Field userToConnectionsMapLock:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #44                 // Field userToConnectionsMap:Ljava/util/Map;
      11: aload_1
      12: invokeinterface #49,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #50                 // class java/lang/Integer
      20: astore_3
      21: aload_3
      22: ifnonnull     33
      25: iconst_1
      26: invokestatic  #51                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      29: astore_3
      30: goto          43
      33: aload_3
      34: invokevirtual #52                 // Method java/lang/Integer.intValue:()I
      37: iconst_1
      38: iadd
      39: invokestatic  #51                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      42: astore_3
      43: aload_0
      44: getfield      #44                 // Field userToConnectionsMap:Ljava/util/Map;
      47: aload_1
      48: aload_3
      49: invokeinterface #53,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      54: pop
      55: aload_2
      56: monitorexit
      57: goto          67
      60: astore        4
      62: aload_2
      63: monitorexit
      64: aload         4
      66: athrow
      67: return
    Exception table:
       from    to  target type
           7    57    60   any
          60    64    60   any

  void decrUserConnections(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #12                 // Field userToConnectionsMapLock:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #44                 // Field userToConnectionsMap:Ljava/util/Map;
      11: aload_1
      12: invokeinterface #49,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #50                 // class java/lang/Integer
      20: astore_3
      21: aload_3
      22: ifnonnull     28
      25: aload_2
      26: monitorexit
      27: return
      28: aload_3
      29: invokevirtual #52                 // Method java/lang/Integer.intValue:()I
      32: iconst_1
      33: isub
      34: invokestatic  #51                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      37: astore_3
      38: aload_3
      39: invokevirtual #52                 // Method java/lang/Integer.intValue:()I
      42: ifne          59
      45: aload_0
      46: getfield      #44                 // Field userToConnectionsMap:Ljava/util/Map;
      49: aload_1
      50: invokeinterface #54,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      55: pop
      56: goto          71
      59: aload_0
      60: getfield      #44                 // Field userToConnectionsMap:Ljava/util/Map;
      63: aload_1
      64: aload_3
      65: invokeinterface #53,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      70: pop
      71: aload_2
      72: monitorexit
      73: goto          83
      76: astore        4
      78: aload_2
      79: monitorexit
      80: aload         4
      82: athrow
      83: return
    Exception table:
       from    to  target type
           7    27    76   any
          28    73    76   any
          76    80    76   any

  java.util.Map<java.lang.String, java.lang.Integer> getUserToConnectionsMap();
    Code:
       0: aload_0
       1: getfield      #44                 // Field userToConnectionsMap:Ljava/util/Map;
       4: areturn

  long getDroppedConnections();
    Code:
       0: aload_0
       1: getfield      #3                  // Field droppedConnections:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #55                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  int size();
    Code:
       0: aload_0
       1: getfield      #8                  // Field count:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #56                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  boolean isFull();
    Code:
       0: aload_0
       1: getfield      #35                 // Field maxConnections:I
       4: ifle          22
       7: aload_0
       8: invokevirtual #57                 // Method size:()I
      11: aload_0
      12: getfield      #35                 // Field maxConnections:I
      15: if_icmplt     22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  org.apache.hadoop.ipc.Server$Connection[] toArray();
    Code:
       0: aload_0
       1: getfield      #42                 // Field connections:Ljava/util/Set;
       4: iconst_0
       5: anewarray     #58                 // class org/apache/hadoop/ipc/Server$Connection
       8: invokeinterface #59,  2           // InterfaceMethod java/util/Set.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      13: checkcast     #60                 // class "[Lorg/apache/hadoop/ipc/Server$Connection;"
      16: areturn

  org.apache.hadoop.ipc.Server$Connection register(java.nio.channels.SocketChannel, int, boolean);
    Code:
       0: aload_0
       1: invokevirtual #61                 // Method isFull:()Z
       4: ifeq          9
       7: aconst_null
       8: areturn
       9: new           #58                 // class org/apache/hadoop/ipc/Server$Connection
      12: dup
      13: aload_0
      14: getfield      #4                  // Field this$0:Lorg/apache/hadoop/ipc/Server;
      17: aload_1
      18: invokestatic  #62                 // Method org/apache/hadoop/util/Time.now:()J
      21: iload_2
      22: iload_3
      23: invokespecial #63                 // Method org/apache/hadoop/ipc/Server$Connection."<init>":(Lorg/apache/hadoop/ipc/Server;Ljava/nio/channels/SocketChannel;JIZ)V
      26: astore        4
      28: aload_0
      29: aload         4
      31: invokespecial #64                 // Method add:(Lorg/apache/hadoop/ipc/Server$Connection;)Z
      34: pop
      35: getstatic     #65                 // Field org/apache/hadoop/ipc/Server.LOG:Lorg/slf4j/Logger;
      38: invokeinterface #66,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      43: ifeq          104
      46: getstatic     #65                 // Field org/apache/hadoop/ipc/Server.LOG:Lorg/slf4j/Logger;
      49: new           #14                 // class java/lang/StringBuilder
      52: dup
      53: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      56: ldc           #67                 // String Server connection from
      58: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload         4
      63: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      66: ldc           #69                 // String ; # active connections:
      68: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: aload_0
      72: invokevirtual #57                 // Method size:()I
      75: invokevirtual #19                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      78: ldc           #70                 // String ; # queued calls:
      80: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: aload_0
      84: getfield      #4                  // Field this$0:Lorg/apache/hadoop/ipc/Server;
      87: invokestatic  #71                 // Method org/apache/hadoop/ipc/Server.access$3100:(Lorg/apache/hadoop/ipc/Server;)Lorg/apache/hadoop/ipc/CallQueueManager;
      90: invokevirtual #72                 // Method org/apache/hadoop/ipc/CallQueueManager.size:()I
      93: invokevirtual #19                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      96: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      99: invokeinterface #73,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     104: aload         4
     106: areturn

  boolean close(org.apache.hadoop.ipc.Server$Connection);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #74                 // Method remove:(Lorg/apache/hadoop/ipc/Server$Connection;)Z
       5: istore_2
       6: iload_2
       7: ifeq          98
      10: getstatic     #65                 // Field org/apache/hadoop/ipc/Server.LOG:Lorg/slf4j/Logger;
      13: invokeinterface #66,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      18: ifeq          69
      21: getstatic     #65                 // Field org/apache/hadoop/ipc/Server.LOG:Lorg/slf4j/Logger;
      24: new           #14                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      31: invokestatic  #75                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      34: invokevirtual #76                 // Method java/lang/Thread.getName:()Ljava/lang/String;
      37: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: ldc           #77                 // String : disconnecting client
      42: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_1
      46: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      49: ldc           #78                 // String . Number of active connections:
      51: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_0
      55: invokevirtual #57                 // Method size:()I
      58: invokevirtual #19                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      61: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: invokeinterface #73,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      69: aload_1
      70: invokestatic  #79                 // Method org/apache/hadoop/ipc/Server$Connection.access$4200:(Lorg/apache/hadoop/ipc/Server$Connection;)V
      73: aload_1
      74: getfield      #80                 // Field org/apache/hadoop/ipc/Server$Connection.user:Lorg/apache/hadoop/security/UserGroupInformation;
      77: ifnull        98
      80: aload_1
      81: invokestatic  #81                 // Method org/apache/hadoop/ipc/Server$Connection.access$4300:(Lorg/apache/hadoop/ipc/Server$Connection;)Z
      84: ifeq          98
      87: aload_0
      88: aload_1
      89: getfield      #80                 // Field org/apache/hadoop/ipc/Server$Connection.user:Lorg/apache/hadoop/security/UserGroupInformation;
      92: invokevirtual #82                 // Method org/apache/hadoop/security/UserGroupInformation.getShortUserName:()Ljava/lang/String;
      95: invokevirtual #83                 // Method decrUserConnections:(Ljava/lang/String;)V
      98: iload_2
      99: ireturn

  synchronized void closeIdle(boolean);
    Code:
       0: invokestatic  #62                 // Method org/apache/hadoop/util/Time.now:()J
       3: aload_0
       4: getfield      #1                  // Field maxIdleTime:I
       7: i2l
       8: lsub
       9: lstore_2
      10: iconst_0
      11: istore        4
      13: aload_0
      14: getfield      #42                 // Field connections:Ljava/util/Set;
      17: invokeinterface #84,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore        5
      24: aload         5
      26: invokeinterface #85,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          113
      34: aload         5
      36: invokeinterface #86,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #58                 // class org/apache/hadoop/ipc/Server$Connection
      44: astore        6
      46: iload_1
      47: ifne          64
      50: aload_0
      51: invokevirtual #57                 // Method size:()I
      54: aload_0
      55: getfield      #27                 // Field idleScanThreshold:I
      58: if_icmpge     64
      61: goto          113
      64: aload         6
      66: invokestatic  #87                 // Method org/apache/hadoop/ipc/Server$Connection.access$4400:(Lorg/apache/hadoop/ipc/Server$Connection;)Z
      69: ifeq          110
      72: aload         6
      74: invokevirtual #88                 // Method org/apache/hadoop/ipc/Server$Connection.getLastContact:()J
      77: lload_2
      78: lcmp
      79: ifge          110
      82: aload_0
      83: aload         6
      85: invokevirtual #89                 // Method close:(Lorg/apache/hadoop/ipc/Server$Connection;)Z
      88: ifeq          110
      91: iload_1
      92: ifne          110
      95: iinc          4, 1
      98: iload         4
     100: aload_0
     101: getfield      #33                 // Field maxIdleToClose:I
     104: if_icmpne     110
     107: goto          113
     110: goto          24
     113: return

  void closeAll();
    Code:
       0: aload_0
       1: invokevirtual #90                 // Method toArray:()[Lorg/apache/hadoop/ipc/Server$Connection;
       4: astore_1
       5: aload_1
       6: arraylength
       7: istore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: iload_2
      12: if_icmpge     33
      15: aload_1
      16: iload_3
      17: aaload
      18: astore        4
      20: aload_0
      21: aload         4
      23: invokevirtual #89                 // Method close:(Lorg/apache/hadoop/ipc/Server$Connection;)Z
      26: pop
      27: iinc          3, 1
      30: goto          10
      33: return

  void startIdleScan();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method scheduleIdleScanTask:()V
       4: return

  void stopIdleScan();
    Code:
       0: aload_0
       1: getfield      #22                 // Field idleScanTimer:Ljava/util/Timer;
       4: invokevirtual #91                 // Method java/util/Timer.cancel:()V
       7: return

  private void scheduleIdleScanTask();
    Code:
       0: aload_0
       1: getfield      #4                  // Field this$0:Lorg/apache/hadoop/ipc/Server;
       4: invokestatic  #92                 // Method org/apache/hadoop/ipc/Server.access$400:(Lorg/apache/hadoop/ipc/Server;)Z
       7: ifne          11
      10: return
      11: new           #93                 // class org/apache/hadoop/ipc/Server$ConnectionManager$1
      14: dup
      15: aload_0
      16: invokespecial #94                 // Method org/apache/hadoop/ipc/Server$ConnectionManager$1."<init>":(Lorg/apache/hadoop/ipc/Server$ConnectionManager;)V
      19: astore_1
      20: aload_0
      21: getfield      #22                 // Field idleScanTimer:Ljava/util/Timer;
      24: aload_1
      25: aload_0
      26: getfield      #30                 // Field idleScanInterval:I
      29: i2l
      30: invokevirtual #95                 // Method java/util/Timer.schedule:(Ljava/util/TimerTask;J)V
      33: return

  static java.util.concurrent.atomic.AtomicLong access$1400(org.apache.hadoop.ipc.Server$ConnectionManager);
    Code:
       0: aload_0
       1: getfield      #3                  // Field droppedConnections:Ljava/util/concurrent/atomic/AtomicLong;
       4: areturn

  static void access$4500(org.apache.hadoop.ipc.Server$ConnectionManager);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method scheduleIdleScanTask:()V
       4: return

  static int access$4600(org.apache.hadoop.ipc.Server$ConnectionManager);
    Code:
       0: aload_0
       1: getfield      #1                  // Field maxIdleTime:I
       4: ireturn
}
