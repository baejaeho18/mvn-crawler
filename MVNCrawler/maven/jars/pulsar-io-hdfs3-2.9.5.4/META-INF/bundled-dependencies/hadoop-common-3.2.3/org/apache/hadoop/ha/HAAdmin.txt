Compiled from "HAAdmin.java"
public abstract class org.apache.hadoop.ha.HAAdmin extends org.apache.hadoop.conf.Configured implements org.apache.hadoop.util.Tool {
  protected static final java.lang.String FORCEACTIVE;

  protected static final java.lang.String FORCEMANUAL;

  private static final org.slf4j.Logger LOG;

  private int rpcTimeoutForChecks;

  protected static final java.util.Map<java.lang.String, org.apache.hadoop.ha.HAAdmin$UsageInfo> USAGE;

  protected java.io.PrintStream errOut;

  protected java.io.PrintStream out;

  private org.apache.hadoop.ha.HAServiceProtocol$RequestSource requestSource;

  protected org.apache.hadoop.ha.HAServiceProtocol$RequestSource getRequestSource();
    Code:
       0: aload_0
       1: getfield      #1                  // Field requestSource:Lorg/apache/hadoop/ha/HAServiceProtocol$RequestSource;
       4: areturn

  protected void setRequestSource(org.apache.hadoop.ha.HAServiceProtocol$RequestSource);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field requestSource:Lorg/apache/hadoop/ha/HAServiceProtocol$RequestSource;
       5: return

  protected org.apache.hadoop.ha.HAAdmin();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/apache/hadoop/conf/Configured."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #3                  // Field rpcTimeoutForChecks:I
       9: aload_0
      10: getstatic     #4                  // Field java/lang/System.err:Ljava/io/PrintStream;
      13: putfield      #5                  // Field errOut:Ljava/io/PrintStream;
      16: aload_0
      17: getstatic     #6                  // Field java/lang/System.out:Ljava/io/PrintStream;
      20: putfield      #7                  // Field out:Ljava/io/PrintStream;
      23: aload_0
      24: getstatic     #8                  // Field org/apache/hadoop/ha/HAServiceProtocol$RequestSource.REQUEST_BY_USER:Lorg/apache/hadoop/ha/HAServiceProtocol$RequestSource;
      27: putfield      #1                  // Field requestSource:Lorg/apache/hadoop/ha/HAServiceProtocol$RequestSource;
      30: return

  protected org.apache.hadoop.ha.HAAdmin(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method org/apache/hadoop/conf/Configured."<init>":(Lorg/apache/hadoop/conf/Configuration;)V
       5: aload_0
       6: iconst_m1
       7: putfield      #3                  // Field rpcTimeoutForChecks:I
      10: aload_0
      11: getstatic     #4                  // Field java/lang/System.err:Ljava/io/PrintStream;
      14: putfield      #5                  // Field errOut:Ljava/io/PrintStream;
      17: aload_0
      18: getstatic     #6                  // Field java/lang/System.out:Ljava/io/PrintStream;
      21: putfield      #7                  // Field out:Ljava/io/PrintStream;
      24: aload_0
      25: getstatic     #8                  // Field org/apache/hadoop/ha/HAServiceProtocol$RequestSource.REQUEST_BY_USER:Lorg/apache/hadoop/ha/HAServiceProtocol$RequestSource;
      28: putfield      #1                  // Field requestSource:Lorg/apache/hadoop/ha/HAServiceProtocol$RequestSource;
      31: return

  protected abstract org.apache.hadoop.ha.HAServiceTarget resolveTarget(java.lang.String);

  protected java.util.Collection<java.lang.String> getTargetIds(java.lang.String);
    Code:
       0: new           #10                 // class java/util/ArrayList
       3: dup
       4: iconst_1
       5: anewarray     #11                 // class java/lang/String
       8: dup
       9: iconst_0
      10: aload_1
      11: aastore
      12: invokestatic  #12                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      15: invokespecial #13                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      18: areturn

  protected java.lang.String getUsageString();
    Code:
       0: ldc           #14                 // String Usage: HAAdmin
       2: areturn

  protected void printUsage(java.io.PrintStream, java.util.Map<java.lang.String, org.apache.hadoop.ha.HAAdmin$UsageInfo>);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #15                 // Method getUsageString:()Ljava/lang/String;
       5: invokevirtual #16                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       8: aload_2
       9: invokeinterface #17,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      14: invokeinterface #18,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      19: astore_3
      20: aload_3
      21: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          149
      29: aload_3
      30: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #21                 // class java/util/Map$Entry
      38: astore        4
      40: aload         4
      42: invokeinterface #22,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      47: checkcast     #11                 // class java/lang/String
      50: astore        5
      52: aload         4
      54: invokeinterface #23,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      59: checkcast     #24                 // class org/apache/hadoop/ha/HAAdmin$UsageInfo
      62: astore        6
      64: aload         6
      66: getfield      #25                 // Field org/apache/hadoop/ha/HAAdmin$UsageInfo.args:Ljava/lang/String;
      69: ifnonnull     104
      72: aload_1
      73: new           #26                 // class java/lang/StringBuilder
      76: dup
      77: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      80: ldc           #28                 // String     [
      82: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: aload         5
      87: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: ldc           #30                 // String ]
      92: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      98: invokevirtual #16                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     101: goto          146
     104: aload_1
     105: new           #26                 // class java/lang/StringBuilder
     108: dup
     109: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     112: ldc           #28                 // String     [
     114: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: aload         5
     119: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: ldc           #32                 // String
     124: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: aload         6
     129: getfield      #25                 // Field org/apache/hadoop/ha/HAAdmin$UsageInfo.args:Ljava/lang/String;
     132: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: ldc           #30                 // String ]
     137: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     143: invokevirtual #16                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     146: goto          20
     149: aload_1
     150: invokevirtual #33                 // Method java/io/PrintStream.println:()V
     153: aload_1
     154: invokestatic  #34                 // Method org/apache/hadoop/util/ToolRunner.printGenericCommandUsage:(Ljava/io/PrintStream;)V
     157: return

  protected void printUsage(java.io.PrintStream);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #35                 // Field USAGE:Ljava/util/Map;
       5: invokevirtual #36                 // Method printUsage:(Ljava/io/PrintStream;Ljava/util/Map;)V
       8: return

  protected void printUsage(java.io.PrintStream, java.lang.String, java.util.Map<java.lang.String, org.apache.hadoop.ha.HAAdmin$UsageInfo>);
    Code:
       0: aload_3
       1: aload_2
       2: invokeinterface #37,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #24                 // class org/apache/hadoop/ha/HAAdmin$UsageInfo
      10: astore        4
      12: aload         4
      14: ifnonnull     44
      17: new           #38                 // class java/lang/RuntimeException
      20: dup
      21: new           #26                 // class java/lang/StringBuilder
      24: dup
      25: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      28: ldc           #39                 // String No usage for cmd
      30: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_2
      34: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokespecial #40                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: aload         4
      46: getfield      #25                 // Field org/apache/hadoop/ha/HAAdmin$UsageInfo.args:Ljava/lang/String;
      49: ifnonnull     90
      52: aload_1
      53: new           #26                 // class java/lang/StringBuilder
      56: dup
      57: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      60: aload_0
      61: invokevirtual #15                 // Method getUsageString:()Ljava/lang/String;
      64: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: ldc           #41                 // String  [
      69: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_2
      73: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: ldc           #30                 // String ]
      78: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      84: invokevirtual #16                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      87: goto          138
      90: aload_1
      91: new           #26                 // class java/lang/StringBuilder
      94: dup
      95: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      98: aload_0
      99: invokevirtual #15                 // Method getUsageString:()Ljava/lang/String;
     102: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: ldc           #41                 // String  [
     107: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: aload_2
     111: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: ldc           #32                 // String
     116: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: aload         4
     121: getfield      #25                 // Field org/apache/hadoop/ha/HAAdmin$UsageInfo.args:Ljava/lang/String;
     124: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: ldc           #30                 // String ]
     129: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     135: invokevirtual #16                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     138: return

  protected void printUsage(java.io.PrintStream, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #35                 // Field USAGE:Ljava/util/Map;
       6: invokevirtual #42                 // Method printUsage:(Ljava/io/PrintStream;Ljava/lang/String;Ljava/util/Map;)V
       9: return

  private int transitionToActive(org.apache.commons.cli.CommandLine) throws java.io.IOException, org.apache.hadoop.ha.ServiceFailedException;
    Code:
       0: aload_1
       1: invokevirtual #43                 // Method org/apache/commons/cli/CommandLine.getArgs:()[Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: arraylength
       7: iconst_1
       8: if_icmpeq     32
      11: aload_0
      12: getfield      #5                  // Field errOut:Ljava/io/PrintStream;
      15: ldc           #44                 // String transitionToActive: incorrect number of arguments
      17: invokevirtual #16                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      20: aload_0
      21: aload_0
      22: getfield      #5                  // Field errOut:Ljava/io/PrintStream;
      25: ldc           #45                 // String -transitionToActive
      27: invokevirtual #46                 // Method printUsage:(Ljava/io/PrintStream;Ljava/lang/String;)V
      30: iconst_m1
      31: ireturn
      32: aload_1
      33: ldc           #48                 // String forceactive
      35: invokevirtual #49                 // Method org/apache/commons/cli/CommandLine.hasOption:(Ljava/lang/String;)Z
      38: ifne          59
      41: aload_0
      42: aload_2
      43: iconst_0
      44: aaload
      45: aload_1
      46: ldc           #48                 // String forceactive
      48: invokevirtual #49                 // Method org/apache/commons/cli/CommandLine.hasOption:(Ljava/lang/String;)Z
      51: invokespecial #50                 // Method isOtherTargetNodeActive:(Ljava/lang/String;Z)Z
      54: ifeq          59
      57: iconst_m1
      58: ireturn
      59: aload_0
      60: aload_2
      61: iconst_0
      62: aaload
      63: invokevirtual #51                 // Method resolveTarget:(Ljava/lang/String;)Lorg/apache/hadoop/ha/HAServiceTarget;
      66: astore_3
      67: aload_0
      68: aload_3
      69: invokevirtual #52                 // Method checkManualStateManagementOK:(Lorg/apache/hadoop/ha/HAServiceTarget;)Z
      72: ifne          77
      75: iconst_m1
      76: ireturn
      77: aload_3
      78: aload_0
      79: invokevirtual #53                 // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
      82: iconst_0
      83: invokevirtual #54                 // Method org/apache/hadoop/ha/HAServiceTarget.getProxy:(Lorg/apache/hadoop/conf/Configuration;I)Lorg/apache/hadoop/ha/HAServiceProtocol;
      86: astore        4
      88: aload         4
      90: aload_0
      91: invokevirtual #55                 // Method createReqInfo:()Lorg/apache/hadoop/ha/HAServiceProtocol$StateChangeRequestInfo;
      94: invokestatic  #56                 // Method org/apache/hadoop/ha/HAServiceProtocolHelper.transitionToActive:(Lorg/apache/hadoop/ha/HAServiceProtocol;Lorg/apache/hadoop/ha/HAServiceProtocol$StateChangeRequestInfo;)V
      97: iconst_0
      98: ireturn

  private boolean isOtherTargetNodeActive(java.lang.String, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #57                 // Method getTargetIds:(Ljava/lang/String;)Ljava/util/Collection;
       5: astore_3
       6: aload_3
       7: aload_1
       8: invokeinterface #58,  2           // InterfaceMethod java/util/Collection.remove:(Ljava/lang/Object;)Z
      13: pop
      14: aload_3
      15: invokeinterface #59,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      20: astore        4
      22: aload         4
      24: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          191
      32: aload         4
      34: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #11                 // class java/lang/String
      42: astore        5
      44: aload_0
      45: aload         5
      47: invokevirtual #51                 // Method resolveTarget:(Ljava/lang/String;)Lorg/apache/hadoop/ha/HAServiceTarget;
      50: astore        6
      52: aload_0
      53: aload         6
      55: invokevirtual #52                 // Method checkManualStateManagementOK:(Lorg/apache/hadoop/ha/HAServiceTarget;)Z
      58: ifne          63
      61: iconst_1
      62: ireturn
      63: aload         6
      65: aload_0
      66: invokevirtual #53                 // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
      69: sipush        5000
      72: invokevirtual #54                 // Method org/apache/hadoop/ha/HAServiceTarget.getProxy:(Lorg/apache/hadoop/conf/Configuration;I)Lorg/apache/hadoop/ha/HAServiceProtocol;
      75: astore        7
      77: aload         7
      79: invokeinterface #60,  1           // InterfaceMethod org/apache/hadoop/ha/HAServiceProtocol.getServiceStatus:()Lorg/apache/hadoop/ha/HAServiceStatus;
      84: invokevirtual #61                 // Method org/apache/hadoop/ha/HAServiceStatus.getState:()Lorg/apache/hadoop/ha/HAServiceProtocol$HAServiceState;
      87: getstatic     #62                 // Field org/apache/hadoop/ha/HAServiceProtocol$HAServiceState.ACTIVE:Lorg/apache/hadoop/ha/HAServiceProtocol$HAServiceState;
      90: if_acmpne     137
      93: aload_0
      94: getfield      #5                  // Field errOut:Ljava/io/PrintStream;
      97: new           #26                 // class java/lang/StringBuilder
     100: dup
     101: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     104: ldc           #63                 // String transitionToActive: Node
     106: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: aload         5
     111: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: ldc           #64                 // String  is already active
     116: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     122: invokevirtual #16                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     125: aload_0
     126: aload_0
     127: getfield      #5                  // Field errOut:Ljava/io/PrintStream;
     130: ldc           #45                 // String -transitionToActive
     132: invokevirtual #46                 // Method printUsage:(Ljava/io/PrintStream;Ljava/lang/String;)V
     135: iconst_1
     136: ireturn
     137: goto          188
     140: astore        7
     142: iload_2
     143: ifne          188
     146: aload_0
     147: getfield      #5                  // Field errOut:Ljava/io/PrintStream;
     150: new           #26                 // class java/lang/StringBuilder
     153: dup
     154: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     157: ldc           #66                 // String Unexpected error occurred
     159: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     162: aload         7
     164: invokevirtual #67                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
     167: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     173: invokevirtual #16                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     176: aload_0
     177: aload_0
     178: getfield      #5                  // Field errOut:Ljava/io/PrintStream;
     181: ldc           #45                 // String -transitionToActive
     183: invokevirtual #46                 // Method printUsage:(Ljava/io/PrintStream;Ljava/lang/String;)V
     186: iconst_1
     187: ireturn
     188: goto          22
     191: iconst_0
     192: ireturn
    Exception table:
       from    to  target type
          63   136   140   Class java/lang/Exception

  private int transitionToStandby(org.apache.commons.cli.CommandLine) throws java.io.IOException, org.apache.hadoop.ha.ServiceFailedException;
    Code:
       0: aload_1
       1: invokevirtual #43                 // Method org/apache/commons/cli/CommandLine.getArgs:()[Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: arraylength
       7: iconst_1
       8: if_icmpeq     32
      11: aload_0
      12: getfield      #5                  // Field errOut:Ljava/io/PrintStream;
      15: ldc           #68                 // String transitionToStandby: incorrect number of arguments
      17: invokevirtual #16                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      20: aload_0
      21: aload_0
      22: getfield      #5                  // Field errOut:Ljava/io/PrintStream;
      25: ldc           #69                 // String -transitionToStandby
      27: invokevirtual #46                 // Method printUsage:(Ljava/io/PrintStream;Ljava/lang/String;)V
      30: iconst_m1
      31: ireturn
      32: aload_0
      33: aload_2
      34: iconst_0
      35: aaload
      36: invokevirtual #51                 // Method resolveTarget:(Ljava/lang/String;)Lorg/apache/hadoop/ha/HAServiceTarget;
      39: astore_3
      40: aload_0
      41: aload_3
      42: invokevirtual #52                 // Method checkManualStateManagementOK:(Lorg/apache/hadoop/ha/HAServiceTarget;)Z
      45: ifne          50
      48: iconst_m1
      49: ireturn
      50: aload_3
      51: aload_0
      52: invokevirtual #53                 // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
      55: iconst_0
      56: invokevirtual #54                 // Method org/apache/hadoop/ha/HAServiceTarget.getProxy:(Lorg/apache/hadoop/conf/Configuration;I)Lorg/apache/hadoop/ha/HAServiceProtocol;
      59: astore        4
      61: aload         4
      63: aload_0
      64: invokevirtual #55                 // Method createReqInfo:()Lorg/apache/hadoop/ha/HAServiceProtocol$StateChangeRequestInfo;
      67: invokestatic  #70                 // Method org/apache/hadoop/ha/HAServiceProtocolHelper.transitionToStandby:(Lorg/apache/hadoop/ha/HAServiceProtocol;Lorg/apache/hadoop/ha/HAServiceProtocol$StateChangeRequestInfo;)V
      70: iconst_0
      71: ireturn

  protected boolean checkManualStateManagementOK(org.apache.hadoop.ha.HAServiceTarget);
    Code:
       0: aload_1
       1: invokevirtual #71                 // Method org/apache/hadoop/ha/HAServiceTarget.isAutoFailoverEnabled:()Z
       4: ifeq          89
       7: aload_0
       8: getfield      #1                  // Field requestSource:Lorg/apache/hadoop/ha/HAServiceProtocol$RequestSource;
      11: getstatic     #72                 // Field org/apache/hadoop/ha/HAServiceProtocol$RequestSource.REQUEST_BY_USER_FORCED:Lorg/apache/hadoop/ha/HAServiceProtocol$RequestSource;
      14: if_acmpeq     60
      17: aload_0
      18: getfield      #5                  // Field errOut:Ljava/io/PrintStream;
      21: new           #26                 // class java/lang/StringBuilder
      24: dup
      25: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      28: ldc           #73                 // String Automatic failover is enabled for
      30: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_1
      34: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      37: ldc           #75                 // String \nRefusing to manually manage HA state, since it may cause\na split-brain scenario or other incorrect state.\nIf you are very sure you know what you are doing, please \nspecify the --
      39: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #76                 // String forcemanual
      44: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: ldc           #77                 // String  flag.
      49: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: invokevirtual #16                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      58: iconst_0
      59: ireturn
      60: getstatic     #78                 // Field LOG:Lorg/slf4j/Logger;
      63: new           #26                 // class java/lang/StringBuilder
      66: dup
      67: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      70: ldc           #79                 // String Proceeding with manual HA state management even though\nautomatic failover is enabled for
      72: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: aload_1
      76: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      79: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      82: invokeinterface #80,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      87: iconst_1
      88: ireturn
      89: iconst_1
      90: ireturn

  protected org.apache.hadoop.ha.HAServiceProtocol$StateChangeRequestInfo createReqInfo();
    Code:
       0: new           #81                 // class org/apache/hadoop/ha/HAServiceProtocol$StateChangeRequestInfo
       3: dup
       4: aload_0
       5: getfield      #1                  // Field requestSource:Lorg/apache/hadoop/ha/HAServiceProtocol$RequestSource;
       8: invokespecial #82                 // Method org/apache/hadoop/ha/HAServiceProtocol$StateChangeRequestInfo."<init>":(Lorg/apache/hadoop/ha/HAServiceProtocol$RequestSource;)V
      11: areturn

  protected int gracefulFailoverThroughZKFCs(org.apache.hadoop.ha.HAServiceTarget) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
       4: invokestatic  #83                 // Method org/apache/hadoop/ha/FailoverController.getRpcTimeoutToNewActive:(Lorg/apache/hadoop/conf/Configuration;)I
       7: istore_2
       8: aload_1
       9: aload_0
      10: invokevirtual #53                 // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
      13: iload_2
      14: invokevirtual #84                 // Method org/apache/hadoop/ha/HAServiceTarget.getZKFCProxy:(Lorg/apache/hadoop/conf/Configuration;I)Lorg/apache/hadoop/ha/ZKFCProtocol;
      17: astore_3
      18: aload_3
      19: invokeinterface #85,  1           // InterfaceMethod org/apache/hadoop/ha/ZKFCProtocol.gracefulFailover:()V
      24: aload_0
      25: getfield      #7                  // Field out:Ljava/io/PrintStream;
      28: new           #26                 // class java/lang/StringBuilder
      31: dup
      32: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      35: ldc           #86                 // String Failover to
      37: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_1
      41: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      44: ldc           #87                 // String  successful
      46: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokevirtual #16                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      55: goto          92
      58: astore        4
      60: aload_0
      61: getfield      #5                  // Field errOut:Ljava/io/PrintStream;
      64: new           #26                 // class java/lang/StringBuilder
      67: dup
      68: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      71: ldc           #89                 // String Failover failed:
      73: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: aload         4
      78: invokevirtual #90                 // Method org/apache/hadoop/ha/ServiceFailedException.getLocalizedMessage:()Ljava/lang/String;
      81: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      87: invokevirtual #16                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      90: iconst_m1
      91: ireturn
      92: iconst_0
      93: ireturn
    Exception table:
       from    to  target type
          18    55    58   Class org/apache/hadoop/ha/ServiceFailedException

  private int checkHealth(org.apache.commons.cli.CommandLine) throws java.io.IOException, org.apache.hadoop.ha.ServiceFailedException;
    Code:
       0: aload_1
       1: invokevirtual #43                 // Method org/apache/commons/cli/CommandLine.getArgs:()[Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: arraylength
       7: iconst_1
       8: if_icmpeq     32
      11: aload_0
      12: getfield      #5                  // Field errOut:Ljava/io/PrintStream;
      15: ldc           #91                 // String checkHealth: incorrect number of arguments
      17: invokevirtual #16                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      20: aload_0
      21: aload_0
      22: getfield      #5                  // Field errOut:Ljava/io/PrintStream;
      25: ldc           #92                 // String -checkHealth
      27: invokevirtual #46                 // Method printUsage:(Ljava/io/PrintStream;Ljava/lang/String;)V
      30: iconst_m1
      31: ireturn
      32: aload_0
      33: aload_2
      34: iconst_0
      35: aaload
      36: invokevirtual #51                 // Method resolveTarget:(Ljava/lang/String;)Lorg/apache/hadoop/ha/HAServiceTarget;
      39: aload_0
      40: invokevirtual #53                 // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
      43: aload_0
      44: getfield      #3                  // Field rpcTimeoutForChecks:I
      47: invokevirtual #54                 // Method org/apache/hadoop/ha/HAServiceTarget.getProxy:(Lorg/apache/hadoop/conf/Configuration;I)Lorg/apache/hadoop/ha/HAServiceProtocol;
      50: astore_3
      51: aload_3
      52: aload_0
      53: invokevirtual #55                 // Method createReqInfo:()Lorg/apache/hadoop/ha/HAServiceProtocol$StateChangeRequestInfo;
      56: invokestatic  #93                 // Method org/apache/hadoop/ha/HAServiceProtocolHelper.monitorHealth:(Lorg/apache/hadoop/ha/HAServiceProtocol;Lorg/apache/hadoop/ha/HAServiceProtocol$StateChangeRequestInfo;)V
      59: goto          96
      62: astore        4
      64: aload_0
      65: getfield      #5                  // Field errOut:Ljava/io/PrintStream;
      68: new           #26                 // class java/lang/StringBuilder
      71: dup
      72: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      75: ldc           #95                 // String Health check failed:
      77: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: aload         4
      82: invokevirtual #96                 // Method org/apache/hadoop/ha/HealthCheckFailedException.getLocalizedMessage:()Ljava/lang/String;
      85: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      91: invokevirtual #16                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      94: iconst_m1
      95: ireturn
      96: iconst_0
      97: ireturn
    Exception table:
       from    to  target type
          51    59    62   Class org/apache/hadoop/ha/HealthCheckFailedException

  private int getServiceState(org.apache.commons.cli.CommandLine) throws java.io.IOException, org.apache.hadoop.ha.ServiceFailedException;
    Code:
       0: aload_1
       1: invokevirtual #43                 // Method org/apache/commons/cli/CommandLine.getArgs:()[Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: arraylength
       7: iconst_1
       8: if_icmpeq     32
      11: aload_0
      12: getfield      #5                  // Field errOut:Ljava/io/PrintStream;
      15: ldc           #97                 // String getServiceState: incorrect number of arguments
      17: invokevirtual #16                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      20: aload_0
      21: aload_0
      22: getfield      #5                  // Field errOut:Ljava/io/PrintStream;
      25: ldc           #98                 // String -getServiceState
      27: invokevirtual #46                 // Method printUsage:(Ljava/io/PrintStream;Ljava/lang/String;)V
      30: iconst_m1
      31: ireturn
      32: aload_0
      33: aload_2
      34: iconst_0
      35: aaload
      36: invokevirtual #51                 // Method resolveTarget:(Ljava/lang/String;)Lorg/apache/hadoop/ha/HAServiceTarget;
      39: aload_0
      40: invokevirtual #53                 // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
      43: aload_0
      44: getfield      #3                  // Field rpcTimeoutForChecks:I
      47: invokevirtual #54                 // Method org/apache/hadoop/ha/HAServiceTarget.getProxy:(Lorg/apache/hadoop/conf/Configuration;I)Lorg/apache/hadoop/ha/HAServiceProtocol;
      50: astore_3
      51: aload_0
      52: getfield      #7                  // Field out:Ljava/io/PrintStream;
      55: aload_3
      56: invokeinterface #60,  1           // InterfaceMethod org/apache/hadoop/ha/HAServiceProtocol.getServiceStatus:()Lorg/apache/hadoop/ha/HAServiceStatus;
      61: invokevirtual #61                 // Method org/apache/hadoop/ha/HAServiceStatus.getState:()Lorg/apache/hadoop/ha/HAServiceProtocol$HAServiceState;
      64: invokevirtual #99                 // Method java/io/PrintStream.println:(Ljava/lang/Object;)V
      67: iconst_0
      68: ireturn

  protected java.lang.String getServiceAddr(java.lang.String);
    Code:
       0: aload_1
       1: areturn

  public void setConf(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #100                // Method org/apache/hadoop/conf/Configured.setConf:(Lorg/apache/hadoop/conf/Configuration;)V
       5: aload_1
       6: ifnull        22
       9: aload_0
      10: aload_1
      11: ldc           #102                // String ha.failover-controller.cli-check.rpc-timeout.ms
      13: sipush        20000
      16: invokevirtual #103                // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      19: putfield      #3                  // Field rpcTimeoutForChecks:I
      22: return

  public int run(java.lang.String[]) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #104                // Method runCmd:([Ljava/lang/String;)I
       5: ireturn
       6: astore_2
       7: aload_0
       8: getfield      #5                  // Field errOut:Ljava/io/PrintStream;
      11: new           #26                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #106                // String Illegal argument:
      20: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_2
      24: invokevirtual #107                // Method java/lang/IllegalArgumentException.getLocalizedMessage:()Ljava/lang/String;
      27: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokevirtual #16                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      36: iconst_m1
      37: ireturn
      38: astore_2
      39: aload_0
      40: getfield      #5                  // Field errOut:Ljava/io/PrintStream;
      43: new           #26                 // class java/lang/StringBuilder
      46: dup
      47: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      50: ldc           #109                // String Operation failed:
      52: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: aload_2
      56: invokevirtual #110                // Method java/io/IOException.getLocalizedMessage:()Ljava/lang/String;
      59: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: invokevirtual #16                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      68: getstatic     #78                 // Field LOG:Lorg/slf4j/Logger;
      71: invokeinterface #111,  1          // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      76: ifeq          90
      79: getstatic     #78                 // Field LOG:Lorg/slf4j/Logger;
      82: ldc           #112                // String Operation failed
      84: aload_2
      85: invokeinterface #113,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      90: iconst_m1
      91: ireturn
    Exception table:
       from    to  target type
           0     5     6   Class java/lang/IllegalArgumentException
           0     5    38   Class java/io/IOException

  protected boolean checkParameterValidity(java.lang.String[], java.util.Map<java.lang.String, org.apache.hadoop.ha.HAAdmin$UsageInfo>);
    Code:
       0: aload_1
       1: arraylength
       2: iconst_1
       3: if_icmpge     17
       6: aload_0
       7: aload_0
       8: getfield      #5                  // Field errOut:Ljava/io/PrintStream;
      11: aload_2
      12: invokevirtual #36                 // Method printUsage:(Ljava/io/PrintStream;Ljava/util/Map;)V
      15: iconst_0
      16: ireturn
      17: aload_1
      18: iconst_0
      19: aaload
      20: astore_3
      21: aload_3
      22: ldc           #114                // String -
      24: invokevirtual #115                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      27: ifne          72
      30: aload_0
      31: getfield      #5                  // Field errOut:Ljava/io/PrintStream;
      34: new           #26                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #116                // String Bad command \'
      43: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_3
      47: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: ldc           #117                // String \': expected command starting with \'-\'
      52: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      58: invokevirtual #16                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      61: aload_0
      62: aload_0
      63: getfield      #5                  // Field errOut:Ljava/io/PrintStream;
      66: aload_2
      67: invokevirtual #36                 // Method printUsage:(Ljava/io/PrintStream;Ljava/util/Map;)V
      70: iconst_0
      71: ireturn
      72: aload_2
      73: aload_3
      74: invokeinterface #118,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      79: ifne          123
      82: aload_0
      83: getfield      #5                  // Field errOut:Ljava/io/PrintStream;
      86: new           #26                 // class java/lang/StringBuilder
      89: dup
      90: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      93: aload_3
      94: iconst_1
      95: invokevirtual #119                // Method java/lang/String.substring:(I)Ljava/lang/String;
      98: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: ldc           #120                // String : Unknown command
     103: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     109: invokevirtual #16                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     112: aload_0
     113: aload_0
     114: getfield      #5                  // Field errOut:Ljava/io/PrintStream;
     117: aload_2
     118: invokevirtual #36                 // Method printUsage:(Ljava/io/PrintStream;Ljava/util/Map;)V
     121: iconst_0
     122: ireturn
     123: iconst_1
     124: ireturn

  protected boolean checkParameterValidity(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #35                 // Field USAGE:Ljava/util/Map;
       5: invokevirtual #121                // Method checkParameterValidity:([Ljava/lang/String;Ljava/util/Map;)Z
       8: ireturn

  protected int runCmd(java.lang.String[]) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #35                 // Field USAGE:Ljava/util/Map;
       5: invokevirtual #121                // Method checkParameterValidity:([Ljava/lang/String;Ljava/util/Map;)Z
       8: ifne          13
      11: iconst_m1
      12: ireturn
      13: aload_1
      14: iconst_0
      15: aaload
      16: astore_2
      17: new           #122                // class org/apache/commons/cli/Options
      20: dup
      21: invokespecial #123                // Method org/apache/commons/cli/Options."<init>":()V
      24: astore_3
      25: ldc           #45                 // String -transitionToActive
      27: aload_2
      28: invokevirtual #124                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      31: ifeq          39
      34: aload_0
      35: aload_3
      36: invokespecial #125                // Method addTransitionToActiveCliOpts:(Lorg/apache/commons/cli/Options;)V
      39: ldc           #45                 // String -transitionToActive
      41: aload_2
      42: invokevirtual #124                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      45: ifne          57
      48: ldc           #69                 // String -transitionToStandby
      50: aload_2
      51: invokevirtual #124                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      54: ifeq          67
      57: aload_3
      58: ldc           #76                 // String forcemanual
      60: iconst_0
      61: ldc           #126                // String force manual control even if auto-failover is enabled
      63: invokevirtual #127                // Method org/apache/commons/cli/Options.addOption:(Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;
      66: pop
      67: aload_0
      68: aload_2
      69: aload_3
      70: aload_1
      71: invokevirtual #128                // Method parseOpts:(Ljava/lang/String;Lorg/apache/commons/cli/Options;[Ljava/lang/String;)Lorg/apache/commons/cli/CommandLine;
      74: astore        4
      76: aload         4
      78: ifnonnull     83
      81: iconst_m1
      82: ireturn
      83: aload         4
      85: ldc           #76                 // String forcemanual
      87: invokevirtual #49                 // Method org/apache/commons/cli/CommandLine.hasOption:(Ljava/lang/String;)Z
      90: ifeq          119
      93: aload_0
      94: invokevirtual #129                // Method confirmForceManual:()Z
      97: ifne          112
     100: getstatic     #78                 // Field LOG:Lorg/slf4j/Logger;
     103: ldc           #130                // String Aborted
     105: invokeinterface #131,  2          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
     110: iconst_m1
     111: ireturn
     112: aload_0
     113: getstatic     #72                 // Field org/apache/hadoop/ha/HAServiceProtocol$RequestSource.REQUEST_BY_USER_FORCED:Lorg/apache/hadoop/ha/HAServiceProtocol$RequestSource;
     116: putfield      #1                  // Field requestSource:Lorg/apache/hadoop/ha/HAServiceProtocol$RequestSource;
     119: ldc           #45                 // String -transitionToActive
     121: aload_2
     122: invokevirtual #124                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     125: ifeq          135
     128: aload_0
     129: aload         4
     131: invokespecial #132                // Method transitionToActive:(Lorg/apache/commons/cli/CommandLine;)I
     134: ireturn
     135: ldc           #69                 // String -transitionToStandby
     137: aload_2
     138: invokevirtual #124                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     141: ifeq          151
     144: aload_0
     145: aload         4
     147: invokespecial #133                // Method transitionToStandby:(Lorg/apache/commons/cli/CommandLine;)I
     150: ireturn
     151: ldc           #98                 // String -getServiceState
     153: aload_2
     154: invokevirtual #124                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     157: ifeq          167
     160: aload_0
     161: aload         4
     163: invokespecial #134                // Method getServiceState:(Lorg/apache/commons/cli/CommandLine;)I
     166: ireturn
     167: ldc           #135                // String -getAllServiceState
     169: aload_2
     170: invokevirtual #124                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     173: ifeq          181
     176: aload_0
     177: invokevirtual #136                // Method getAllServiceState:()I
     180: ireturn
     181: ldc           #92                 // String -checkHealth
     183: aload_2
     184: invokevirtual #124                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     187: ifeq          197
     190: aload_0
     191: aload         4
     193: invokespecial #137                // Method checkHealth:(Lorg/apache/commons/cli/CommandLine;)I
     196: ireturn
     197: ldc           #138                // String -help
     199: aload_2
     200: invokevirtual #124                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     203: ifeq          212
     206: aload_0
     207: aload_1
     208: invokevirtual #139                // Method help:([Ljava/lang/String;)I
     211: ireturn
     212: new           #140                // class java/lang/AssertionError
     215: dup
     216: new           #26                 // class java/lang/StringBuilder
     219: dup
     220: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     223: ldc           #141                // String Should not get here, command:
     225: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     228: aload_2
     229: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     232: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     235: invokespecial #142                // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     238: athrow

  protected int getAllServiceState();
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #57                 // Method getTargetIds:(Ljava/lang/String;)Ljava/util/Collection;
       5: astore_1
       6: aload_1
       7: invokeinterface #143,  1          // InterfaceMethod java/util/Collection.isEmpty:()Z
      12: ifeq          26
      15: aload_0
      16: getfield      #5                  // Field errOut:Ljava/io/PrintStream;
      19: ldc           #144                // String Failed to get service IDs
      21: invokevirtual #16                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      24: iconst_m1
      25: ireturn
      26: aload_1
      27: invokeinterface #59,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      32: astore_2
      33: aload_2
      34: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      39: ifeq          202
      42: aload_2
      43: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      48: checkcast     #11                 // class java/lang/String
      51: astore_3
      52: aload_0
      53: aload_3
      54: invokevirtual #51                 // Method resolveTarget:(Ljava/lang/String;)Lorg/apache/hadoop/ha/HAServiceTarget;
      57: astore        4
      59: new           #26                 // class java/lang/StringBuilder
      62: dup
      63: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      66: aload         4
      68: invokevirtual #145                // Method org/apache/hadoop/ha/HAServiceTarget.getAddress:()Ljava/net/InetSocketAddress;
      71: invokevirtual #146                // Method java/net/InetSocketAddress.getHostName:()Ljava/lang/String;
      74: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: ldc           #147                // String :
      79: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: aload         4
      84: invokevirtual #145                // Method org/apache/hadoop/ha/HAServiceTarget.getAddress:()Ljava/net/InetSocketAddress;
      87: invokevirtual #148                // Method java/net/InetSocketAddress.getPort:()I
      90: invokevirtual #149                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      93: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      96: astore        5
      98: aload         4
     100: aload_0
     101: invokevirtual #53                 // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
     104: aload_0
     105: getfield      #3                  // Field rpcTimeoutForChecks:I
     108: invokevirtual #54                 // Method org/apache/hadoop/ha/HAServiceTarget.getProxy:(Lorg/apache/hadoop/conf/Configuration;I)Lorg/apache/hadoop/ha/HAServiceProtocol;
     111: astore        6
     113: aload_0
     114: getfield      #7                  // Field out:Ljava/io/PrintStream;
     117: ldc           #150                // String %-50s %-10s
     119: iconst_2
     120: anewarray     #151                // class java/lang/Object
     123: dup
     124: iconst_0
     125: aload         5
     127: aastore
     128: dup
     129: iconst_1
     130: aload         6
     132: invokeinterface #60,  1           // InterfaceMethod org/apache/hadoop/ha/HAServiceProtocol.getServiceStatus:()Lorg/apache/hadoop/ha/HAServiceStatus;
     137: invokevirtual #61                 // Method org/apache/hadoop/ha/HAServiceStatus.getState:()Lorg/apache/hadoop/ha/HAServiceProtocol$HAServiceState;
     140: aastore
     141: invokestatic  #152                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     144: invokevirtual #16                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     147: goto          199
     150: astore        6
     152: aload_0
     153: getfield      #7                  // Field out:Ljava/io/PrintStream;
     156: ldc           #150                // String %-50s %-10s
     158: iconst_2
     159: anewarray     #151                // class java/lang/Object
     162: dup
     163: iconst_0
     164: aload         5
     166: aastore
     167: dup
     168: iconst_1
     169: new           #26                 // class java/lang/StringBuilder
     172: dup
     173: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     176: ldc           #153                // String Failed to connect:
     178: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     181: aload         6
     183: invokevirtual #154                // Method java/io/IOException.getMessage:()Ljava/lang/String;
     186: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     189: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     192: aastore
     193: invokestatic  #152                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     196: invokevirtual #16                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     199: goto          33
     202: iconst_0
     203: ireturn
    Exception table:
       from    to  target type
          98   147   150   Class java/io/IOException

  protected boolean confirmForceManual() throws java.io.IOException;
    Code:
       0: ldc           #155                // String You have specified the --forcemanual flag. This flag is dangerous, as it can induce a split-brain scenario that WILL CORRUPT your HDFS namespace, possibly irrecoverably.\n\nIt is recommended not to use this flag, but instead to shut down the cluster and disable automatic failover if you prefer to manually manage your HA state.\n\nYou may abort safely by answering \'n\' or hitting ^C now.\n\nAre you sure you want to continue?
       2: invokestatic  #156                // Method org/apache/hadoop/util/ToolRunner.confirmPrompt:(Ljava/lang/String;)Z
       5: ireturn

  private void addTransitionToActiveCliOpts(org.apache.commons.cli.Options);
    Code:
       0: aload_1
       1: ldc           #48                 // String forceactive
       3: iconst_0
       4: ldc           #157                // String force active
       6: invokevirtual #127                // Method org/apache/commons/cli/Options.addOption:(Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;
       9: pop
      10: return

  protected org.apache.commons.cli.CommandLine parseOpts(java.lang.String, org.apache.commons.cli.Options, java.lang.String[], java.util.Map<java.lang.String, org.apache.hadoop.ha.HAAdmin$UsageInfo>);
    Code:
       0: aload_3
       1: iconst_1
       2: aload_3
       3: arraylength
       4: invokestatic  #158                // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
       7: checkcast     #159                // class "[Ljava/lang/String;"
      10: astore_3
      11: new           #160                // class org/apache/commons/cli/GnuParser
      14: dup
      15: invokespecial #161                // Method org/apache/commons/cli/GnuParser."<init>":()V
      18: aload_2
      19: aload_3
      20: invokevirtual #162                // Method org/apache/commons/cli/GnuParser.parse:(Lorg/apache/commons/cli/Options;[Ljava/lang/String;)Lorg/apache/commons/cli/CommandLine;
      23: areturn
      24: astore        5
      26: aload_0
      27: getfield      #5                  // Field errOut:Ljava/io/PrintStream;
      30: new           #26                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      37: aload_1
      38: iconst_1
      39: invokevirtual #119                // Method java/lang/String.substring:(I)Ljava/lang/String;
      42: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: ldc           #164                // String : incorrect arguments
      47: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokevirtual #16                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      56: aload_0
      57: aload_0
      58: getfield      #5                  // Field errOut:Ljava/io/PrintStream;
      61: aload_1
      62: aload         4
      64: invokevirtual #42                 // Method printUsage:(Ljava/io/PrintStream;Ljava/lang/String;Ljava/util/Map;)V
      67: aconst_null
      68: areturn
    Exception table:
       from    to  target type
           0    23    24   Class org/apache/commons/cli/ParseException

  protected org.apache.commons.cli.CommandLine parseOpts(java.lang.String, org.apache.commons.cli.Options, java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: getstatic     #35                 // Field USAGE:Ljava/util/Map;
       7: invokevirtual #165                // Method parseOpts:(Ljava/lang/String;Lorg/apache/commons/cli/Options;[Ljava/lang/String;Ljava/util/Map;)Lorg/apache/commons/cli/CommandLine;
      10: areturn

  protected int help(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #35                 // Field USAGE:Ljava/util/Map;
       5: invokevirtual #166                // Method help:([Ljava/lang/String;Ljava/util/Map;)I
       8: ireturn

  protected int help(java.lang.String[], java.util.Map<java.lang.String, org.apache.hadoop.ha.HAAdmin$UsageInfo>);
    Code:
       0: aload_1
       1: arraylength
       2: iconst_1
       3: if_icmpne     17
       6: aload_0
       7: aload_0
       8: getfield      #7                  // Field out:Ljava/io/PrintStream;
      11: aload_2
      12: invokevirtual #36                 // Method printUsage:(Ljava/io/PrintStream;Ljava/util/Map;)V
      15: iconst_0
      16: ireturn
      17: aload_1
      18: arraylength
      19: iconst_2
      20: if_icmpeq     36
      23: aload_0
      24: aload_0
      25: getfield      #5                  // Field errOut:Ljava/io/PrintStream;
      28: ldc           #138                // String -help
      30: aload_2
      31: invokevirtual #42                 // Method printUsage:(Ljava/io/PrintStream;Ljava/lang/String;Ljava/util/Map;)V
      34: iconst_m1
      35: ireturn
      36: aload_1
      37: iconst_1
      38: aaload
      39: astore_3
      40: aload_3
      41: ldc           #114                // String -
      43: invokevirtual #115                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      46: ifne          69
      49: new           #26                 // class java/lang/StringBuilder
      52: dup
      53: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      56: ldc           #114                // String -
      58: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload_3
      62: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: astore_3
      69: aload_2
      70: aload_3
      71: invokeinterface #37,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      76: checkcast     #24                 // class org/apache/hadoop/ha/HAAdmin$UsageInfo
      79: astore        4
      81: aload         4
      83: ifnonnull     123
      86: aload_0
      87: getfield      #5                  // Field errOut:Ljava/io/PrintStream;
      90: new           #26                 // class java/lang/StringBuilder
      93: dup
      94: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      97: aload_3
      98: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: ldc           #120                // String : Unknown command
     103: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     109: invokevirtual #16                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     112: aload_0
     113: aload_0
     114: getfield      #5                  // Field errOut:Ljava/io/PrintStream;
     117: aload_2
     118: invokevirtual #36                 // Method printUsage:(Ljava/io/PrintStream;Ljava/util/Map;)V
     121: iconst_m1
     122: ireturn
     123: aload         4
     125: getfield      #25                 // Field org/apache/hadoop/ha/HAAdmin$UsageInfo.args:Ljava/lang/String;
     128: ifnonnull     168
     131: aload_0
     132: getfield      #7                  // Field out:Ljava/io/PrintStream;
     135: new           #26                 // class java/lang/StringBuilder
     138: dup
     139: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     142: aload_3
     143: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     146: ldc           #167                // String :
     148: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     151: aload         4
     153: getfield      #168                // Field org/apache/hadoop/ha/HAAdmin$UsageInfo.help:Ljava/lang/String;
     156: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     162: invokevirtual #16                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     165: goto          215
     168: aload_0
     169: getfield      #7                  // Field out:Ljava/io/PrintStream;
     172: new           #26                 // class java/lang/StringBuilder
     175: dup
     176: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     179: aload_3
     180: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     183: ldc           #41                 // String  [
     185: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     188: aload         4
     190: getfield      #25                 // Field org/apache/hadoop/ha/HAAdmin$UsageInfo.args:Ljava/lang/String;
     193: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     196: ldc           #169                // String ]:
     198: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     201: aload         4
     203: getfield      #168                // Field org/apache/hadoop/ha/HAAdmin$UsageInfo.help:Ljava/lang/String;
     206: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     209: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     212: invokevirtual #16                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     215: iconst_0
     216: ireturn

  static {};
    Code:
       0: ldc           #47                 // class org/apache/hadoop/ha/HAAdmin
       2: invokestatic  #170                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #78                 // Field LOG:Lorg/slf4j/Logger;
       8: invokestatic  #171                // Method com/google/common/collect/ImmutableMap.builder:()Lcom/google/common/collect/ImmutableMap$Builder;
      11: ldc           #45                 // String -transitionToActive
      13: new           #24                 // class org/apache/hadoop/ha/HAAdmin$UsageInfo
      16: dup
      17: ldc           #172                // String [--forceactive] <serviceId>
      19: ldc           #173                // String Transitions the service into Active state
      21: invokespecial #174                // Method org/apache/hadoop/ha/HAAdmin$UsageInfo."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      24: invokevirtual #175                // Method com/google/common/collect/ImmutableMap$Builder.put:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap$Builder;
      27: ldc           #69                 // String -transitionToStandby
      29: new           #24                 // class org/apache/hadoop/ha/HAAdmin$UsageInfo
      32: dup
      33: ldc           #176                // String <serviceId>
      35: ldc           #177                // String Transitions the service into Standby state
      37: invokespecial #174                // Method org/apache/hadoop/ha/HAAdmin$UsageInfo."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      40: invokevirtual #175                // Method com/google/common/collect/ImmutableMap$Builder.put:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap$Builder;
      43: ldc           #98                 // String -getServiceState
      45: new           #24                 // class org/apache/hadoop/ha/HAAdmin$UsageInfo
      48: dup
      49: ldc           #176                // String <serviceId>
      51: ldc           #178                // String Returns the state of the service
      53: invokespecial #174                // Method org/apache/hadoop/ha/HAAdmin$UsageInfo."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      56: invokevirtual #175                // Method com/google/common/collect/ImmutableMap$Builder.put:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap$Builder;
      59: ldc           #135                // String -getAllServiceState
      61: new           #24                 // class org/apache/hadoop/ha/HAAdmin$UsageInfo
      64: dup
      65: aconst_null
      66: ldc           #179                // String Returns the state of all the services
      68: invokespecial #174                // Method org/apache/hadoop/ha/HAAdmin$UsageInfo."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      71: invokevirtual #175                // Method com/google/common/collect/ImmutableMap$Builder.put:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap$Builder;
      74: ldc           #92                 // String -checkHealth
      76: new           #24                 // class org/apache/hadoop/ha/HAAdmin$UsageInfo
      79: dup
      80: ldc           #176                // String <serviceId>
      82: ldc           #180                // String Requests that the service perform a health check.\nThe HAAdmin tool will exit with a non-zero exit code\nif the check fails.
      84: invokespecial #174                // Method org/apache/hadoop/ha/HAAdmin$UsageInfo."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      87: invokevirtual #175                // Method com/google/common/collect/ImmutableMap$Builder.put:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap$Builder;
      90: ldc           #138                // String -help
      92: new           #24                 // class org/apache/hadoop/ha/HAAdmin$UsageInfo
      95: dup
      96: ldc           #181                // String <command>
      98: ldc           #182                // String Displays help on the specified command
     100: invokespecial #174                // Method org/apache/hadoop/ha/HAAdmin$UsageInfo."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     103: invokevirtual #175                // Method com/google/common/collect/ImmutableMap$Builder.put:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap$Builder;
     106: invokevirtual #183                // Method com/google/common/collect/ImmutableMap$Builder.build:()Lcom/google/common/collect/ImmutableMap;
     109: putstatic     #35                 // Field USAGE:Ljava/util/Map;
     112: return
}
