Compiled from "MutableGaugeFloat.java"
public class org.apache.hadoop.metrics2.lib.MutableGaugeFloat extends org.apache.hadoop.metrics2.lib.MutableGauge {
  private java.util.concurrent.atomic.AtomicInteger value;

  org.apache.hadoop.metrics2.lib.MutableGaugeFloat(org.apache.hadoop.metrics2.MetricsInfo, float);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/hadoop/metrics2/lib/MutableGauge."<init>":(Lorg/apache/hadoop/metrics2/MetricsInfo;)V
       5: aload_0
       6: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
       9: dup
      10: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      13: putfield      #4                  // Field value:Ljava/util/concurrent/atomic/AtomicInteger;
      16: aload_0
      17: getfield      #4                  // Field value:Ljava/util/concurrent/atomic/AtomicInteger;
      20: fload_2
      21: invokestatic  #5                  // Method java/lang/Float.floatToIntBits:(F)I
      24: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      27: return

  public float value();
    Code:
       0: aload_0
       1: getfield      #4                  // Field value:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #7                  // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: invokestatic  #8                  // Method java/lang/Float.intBitsToFloat:(I)F
      10: freturn

  public void incr();
    Code:
       0: aload_0
       1: fconst_1
       2: invokespecial #9                  // Method incr:(F)V
       5: return

  public void decr();
    Code:
       0: aload_0
       1: ldc           #10                 // float -1.0f
       3: invokespecial #9                  // Method incr:(F)V
       6: return

  public void snapshot(org.apache.hadoop.metrics2.MetricsRecordBuilder, boolean);
    Code:
       0: iload_2
       1: ifne          11
       4: aload_0
       5: invokevirtual #11                 // Method changed:()Z
       8: ifeq          28
      11: aload_1
      12: aload_0
      13: invokevirtual #12                 // Method info:()Lorg/apache/hadoop/metrics2/MetricsInfo;
      16: aload_0
      17: invokevirtual #13                 // Method value:()F
      20: invokevirtual #14                 // Method org/apache/hadoop/metrics2/MetricsRecordBuilder.addGauge:(Lorg/apache/hadoop/metrics2/MetricsInfo;F)Lorg/apache/hadoop/metrics2/MetricsRecordBuilder;
      23: pop
      24: aload_0
      25: invokevirtual #15                 // Method clearChanged:()V
      28: return

  public void set(float);
    Code:
       0: aload_0
       1: getfield      #4                  // Field value:Ljava/util/concurrent/atomic/AtomicInteger;
       4: fload_1
       5: invokestatic  #5                  // Method java/lang/Float.floatToIntBits:(F)I
       8: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      11: aload_0
      12: invokevirtual #16                 // Method setChanged:()V
      15: return

  private final boolean compareAndSet(float, float);
    Code:
       0: aload_0
       1: getfield      #4                  // Field value:Ljava/util/concurrent/atomic/AtomicInteger;
       4: fload_1
       5: invokestatic  #5                  // Method java/lang/Float.floatToIntBits:(F)I
       8: fload_2
       9: invokestatic  #5                  // Method java/lang/Float.floatToIntBits:(F)I
      12: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicInteger.compareAndSet:(II)Z
      15: ireturn

  private void incr(float);
    Code:
       0: aload_0
       1: getfield      #4                  // Field value:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #7                  // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: i2f
       8: fstore_2
       9: fload_2
      10: fload_1
      11: fadd
      12: fstore_3
      13: aload_0
      14: fload_2
      15: fload_3
      16: invokespecial #18                 // Method compareAndSet:(FF)Z
      19: ifeq          27
      22: aload_0
      23: invokevirtual #16                 // Method setChanged:()V
      26: return
      27: goto          0

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #4                  // Field value:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicInteger.toString:()Ljava/lang/String;
       7: areturn
}
