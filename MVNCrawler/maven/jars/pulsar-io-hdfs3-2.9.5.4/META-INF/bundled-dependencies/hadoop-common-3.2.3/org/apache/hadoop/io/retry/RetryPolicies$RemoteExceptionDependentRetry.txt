Compiled from "RetryPolicies.java"
class org.apache.hadoop.io.retry.RetryPolicies$RemoteExceptionDependentRetry implements org.apache.hadoop.io.retry.RetryPolicy {
  org.apache.hadoop.io.retry.RetryPolicy defaultPolicy;

  java.util.Map<java.lang.String, org.apache.hadoop.io.retry.RetryPolicy> exceptionNameToPolicyMap;

  public org.apache.hadoop.io.retry.RetryPolicies$RemoteExceptionDependentRetry(org.apache.hadoop.io.retry.RetryPolicy, java.util.Map<java.lang.Class<? extends java.lang.Exception>, org.apache.hadoop.io.retry.RetryPolicy>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field defaultPolicy:Lorg/apache/hadoop/io/retry/RetryPolicy;
       9: aload_0
      10: new           #3                  // class java/util/HashMap
      13: dup
      14: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      17: putfield      #5                  // Field exceptionNameToPolicyMap:Ljava/util/Map;
      20: aload_2
      21: invokeinterface #6,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      26: invokeinterface #7,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      31: astore_3
      32: aload_3
      33: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      38: ifeq          85
      41: aload_3
      42: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #10                 // class java/util/Map$Entry
      50: astore        4
      52: aload_0
      53: getfield      #5                  // Field exceptionNameToPolicyMap:Ljava/util/Map;
      56: aload         4
      58: invokeinterface #11,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      63: checkcast     #12                 // class java/lang/Class
      66: invokevirtual #13                 // Method java/lang/Class.getName:()Ljava/lang/String;
      69: aload         4
      71: invokeinterface #14,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      76: invokeinterface #15,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      81: pop
      82: goto          32
      85: return

  public org.apache.hadoop.io.retry.RetryPolicy$RetryAction shouldRetry(java.lang.Exception, int, int, boolean) throws java.lang.Exception;
    Code:
       0: aconst_null
       1: astore        5
       3: aload_1
       4: instanceof    #16                 // class org/apache/hadoop/ipc/RemoteException
       7: ifeq          31
      10: aload_0
      11: getfield      #5                  // Field exceptionNameToPolicyMap:Ljava/util/Map;
      14: aload_1
      15: checkcast     #16                 // class org/apache/hadoop/ipc/RemoteException
      18: invokevirtual #17                 // Method org/apache/hadoop/ipc/RemoteException.getClassName:()Ljava/lang/String;
      21: invokeinterface #18,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #19                 // class org/apache/hadoop/io/retry/RetryPolicy
      29: astore        5
      31: aload         5
      33: ifnonnull     42
      36: aload_0
      37: getfield      #2                  // Field defaultPolicy:Lorg/apache/hadoop/io/retry/RetryPolicy;
      40: astore        5
      42: aload         5
      44: aload_1
      45: iload_2
      46: iload_3
      47: iload         4
      49: invokeinterface #20,  5           // InterfaceMethod org/apache/hadoop/io/retry/RetryPolicy.shouldRetry:(Ljava/lang/Exception;IIZ)Lorg/apache/hadoop/io/retry/RetryPolicy$RetryAction;
      54: areturn
}
