Compiled from "FsShellPermissions.java"
public class org.apache.hadoop.fs.FsShellPermissions$Chown extends org.apache.hadoop.fs.FsShellPermissions {
  public static final java.lang.String NAME;

  public static final java.lang.String USAGE;

  public static final java.lang.String DESCRIPTION;

  private static final java.util.regex.Pattern chownPattern;

  protected java.lang.String owner;

  protected java.lang.String group;

  public org.apache.hadoop.fs.FsShellPermissions$Chown();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/fs/FsShellPermissions."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field owner:Ljava/lang/String;
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field group:Ljava/lang/String;
      14: return

  protected void processOptions(java.util.LinkedList<java.lang.String>) throws java.io.IOException;
    Code:
       0: new           #4                  // class org/apache/hadoop/fs/shell/CommandFormat
       3: dup
       4: iconst_2
       5: ldc           #6                  // int 2147483647
       7: iconst_1
       8: anewarray     #7                  // class java/lang/String
      11: dup
      12: iconst_0
      13: ldc           #8                  // String R
      15: aastore
      16: invokespecial #9                  // Method org/apache/hadoop/fs/shell/CommandFormat."<init>":(II[Ljava/lang/String;)V
      19: astore_2
      20: aload_2
      21: aload_1
      22: invokevirtual #10                 // Method org/apache/hadoop/fs/shell/CommandFormat.parse:(Ljava/util/List;)V
      25: aload_0
      26: aload_2
      27: ldc           #8                  // String R
      29: invokevirtual #11                 // Method org/apache/hadoop/fs/shell/CommandFormat.getOpt:(Ljava/lang/String;)Z
      32: invokevirtual #12                 // Method setRecursive:(Z)V
      35: aload_0
      36: aload_1
      37: invokevirtual #13                 // Method java/util/LinkedList.removeFirst:()Ljava/lang/Object;
      40: checkcast     #7                  // class java/lang/String
      43: invokevirtual #14                 // Method parseOwnerGroup:(Ljava/lang/String;)V
      46: return

  protected void parseOwnerGroup(java.lang.String);
    Code:
       0: getstatic     #15                 // Field chownPattern:Ljava/util/regex/Pattern;
       3: aload_1
       4: invokevirtual #16                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       7: astore_2
       8: aload_2
       9: invokevirtual #17                 // Method java/util/regex/Matcher.matches:()Z
      12: ifne          47
      15: new           #18                 // class java/lang/IllegalArgumentException
      18: dup
      19: new           #19                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #21                 // String \'
      28: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_1
      32: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #23                 // String \' does not match expected pattern for [owner][:group].
      37: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokespecial #25                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: aload_0
      48: aload_2
      49: iconst_1
      50: invokevirtual #26                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      53: putfield      #2                  // Field owner:Ljava/lang/String;
      56: aload_0
      57: aload_2
      58: iconst_3
      59: invokevirtual #26                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      62: putfield      #3                  // Field group:Ljava/lang/String;
      65: aload_0
      66: getfield      #3                  // Field group:Ljava/lang/String;
      69: ifnull        87
      72: aload_0
      73: getfield      #3                  // Field group:Ljava/lang/String;
      76: invokevirtual #27                 // Method java/lang/String.length:()I
      79: ifne          87
      82: aload_0
      83: aconst_null
      84: putfield      #3                  // Field group:Ljava/lang/String;
      87: aload_0
      88: getfield      #2                  // Field owner:Ljava/lang/String;
      91: ifnonnull     133
      94: aload_0
      95: getfield      #3                  // Field group:Ljava/lang/String;
      98: ifnonnull     133
     101: new           #18                 // class java/lang/IllegalArgumentException
     104: dup
     105: new           #19                 // class java/lang/StringBuilder
     108: dup
     109: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
     112: ldc           #21                 // String \'
     114: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: aload_1
     118: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: ldc           #28                 // String \' does not specify owner or group.
     123: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     129: invokespecial #25                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     132: athrow
     133: return

  protected void processPath(org.apache.hadoop.fs.shell.PathData) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field owner:Ljava/lang/String;
       4: ifnull        24
       7: aload_0
       8: getfield      #2                  // Field owner:Ljava/lang/String;
      11: aload_1
      12: getfield      #29                 // Field org/apache/hadoop/fs/shell/PathData.stat:Lorg/apache/hadoop/fs/FileStatus;
      15: invokevirtual #30                 // Method org/apache/hadoop/fs/FileStatus.getOwner:()Ljava/lang/String;
      18: invokevirtual #31                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      21: ifeq          28
      24: aconst_null
      25: goto          32
      28: aload_0
      29: getfield      #2                  // Field owner:Ljava/lang/String;
      32: astore_2
      33: aload_0
      34: getfield      #3                  // Field group:Ljava/lang/String;
      37: ifnull        57
      40: aload_0
      41: getfield      #3                  // Field group:Ljava/lang/String;
      44: aload_1
      45: getfield      #29                 // Field org/apache/hadoop/fs/shell/PathData.stat:Lorg/apache/hadoop/fs/FileStatus;
      48: invokevirtual #32                 // Method org/apache/hadoop/fs/FileStatus.getGroup:()Ljava/lang/String;
      51: invokevirtual #31                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      54: ifeq          61
      57: aconst_null
      58: goto          65
      61: aload_0
      62: getfield      #3                  // Field group:Ljava/lang/String;
      65: astore_3
      66: aload_2
      67: ifnonnull     74
      70: aload_3
      71: ifnull        161
      74: aload_1
      75: getfield      #33                 // Field org/apache/hadoop/fs/shell/PathData.fs:Lorg/apache/hadoop/fs/FileSystem;
      78: aload_1
      79: getfield      #34                 // Field org/apache/hadoop/fs/shell/PathData.path:Lorg/apache/hadoop/fs/Path;
      82: aload_2
      83: aload_3
      84: invokevirtual #35                 // Method org/apache/hadoop/fs/FileSystem.setOwner:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;)V
      87: goto          161
      90: astore        4
      92: getstatic     #37                 // Field LOG:Lorg/slf4j/Logger;
      95: new           #19                 // class java/lang/StringBuilder
      98: dup
      99: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
     102: ldc           #38                 // String Error changing ownership of
     104: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: aload_1
     108: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     111: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     114: aload         4
     116: invokeinterface #40,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
     121: new           #36                 // class java/io/IOException
     124: dup
     125: new           #19                 // class java/lang/StringBuilder
     128: dup
     129: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
     132: ldc           #41                 // String changing ownership of \'
     134: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     137: aload_1
     138: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     141: ldc           #42                 // String \':
     143: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     146: aload         4
     148: invokevirtual #43                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
     151: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     154: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     157: invokespecial #44                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     160: athrow
     161: return
    Exception table:
       from    to  target type
          74    87    90   Class java/io/IOException

  static {};
    Code:
       0: new           #19                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #45                 // String Changes owner and group of a file. This is similar to the shell\'s chown command with a few exceptions.\n-R: modifies the files recursively. This is the only option currently supported.\n\nIf only the owner or group is specified, then only the owner or group is modified. The owner and group names may only consist of digits, alphabet, and any of
       9: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: invokestatic  #46                 // Method org/apache/hadoop/fs/FsShellPermissions.access$000:()Ljava/lang/String;
      15: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: ldc           #47                 // String . The names are case sensitive.\n\nWARNING: Avoid using \'.\' to separate user name and group though Linux allows it. If user names have dots in them and you are using local file system, you might see surprising results since the shell command \'chown\' is used for local files.
      20: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: putstatic     #48                 // Field DESCRIPTION:Ljava/lang/String;
      29: new           #19                 // class java/lang/StringBuilder
      32: dup
      33: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #49                 // String ^\\s*(
      38: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokestatic  #46                 // Method org/apache/hadoop/fs/FsShellPermissions.access$000:()Ljava/lang/String;
      44: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: ldc           #50                 // String +)?([:](
      49: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: invokestatic  #46                 // Method org/apache/hadoop/fs/FsShellPermissions.access$000:()Ljava/lang/String;
      55: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: ldc           #51                 // String *))?\\s*$
      60: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: invokestatic  #52                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      69: putstatic     #15                 // Field chownPattern:Ljava/util/regex/Pattern;
      72: return
}
