Compiled from "RetryCache.java"
public class org.apache.hadoop.ipc.RetryCache {
  public static final org.slf4j.Logger LOG;

  private final org.apache.hadoop.ipc.metrics.RetryCacheMetrics retryCacheMetrics;

  private static final int MAX_CAPACITY;

  private final org.apache.hadoop.util.LightWeightGSet<org.apache.hadoop.ipc.RetryCache$CacheEntry, org.apache.hadoop.ipc.RetryCache$CacheEntry> set;

  private final long expirationTime;

  private java.lang.String cacheName;

  private final java.util.concurrent.locks.ReentrantLock lock;

  public org.apache.hadoop.ipc.RetryCache(java.lang.String, double, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/locks/ReentrantLock
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      12: putfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      15: dload_2
      16: aload_1
      17: invokestatic  #5                  // Method org/apache/hadoop/util/LightWeightGSet.computeCapacity:(DLjava/lang/String;)I
      20: istore        6
      22: iload         6
      24: bipush        16
      26: if_icmple     34
      29: iload         6
      31: goto          36
      34: bipush        16
      36: istore        6
      38: aload_0
      39: new           #7                  // class org/apache/hadoop/util/LightWeightCache
      42: dup
      43: iload         6
      45: iload         6
      47: lload         4
      49: lconst_0
      50: invokespecial #8                  // Method org/apache/hadoop/util/LightWeightCache."<init>":(IIJJ)V
      53: putfield      #9                  // Field set:Lorg/apache/hadoop/util/LightWeightGSet;
      56: aload_0
      57: lload         4
      59: putfield      #10                 // Field expirationTime:J
      62: aload_0
      63: aload_1
      64: putfield      #11                 // Field cacheName:Ljava/lang/String;
      67: aload_0
      68: aload_0
      69: invokestatic  #12                 // Method org/apache/hadoop/ipc/metrics/RetryCacheMetrics.create:(Lorg/apache/hadoop/ipc/RetryCache;)Lorg/apache/hadoop/ipc/metrics/RetryCacheMetrics;
      72: putfield      #13                 // Field retryCacheMetrics:Lorg/apache/hadoop/ipc/metrics/RetryCacheMetrics;
      75: return

  private static boolean skipRetryCache();
    Code:
       0: invokestatic  #14                 // Method org/apache/hadoop/ipc/Server.isRpcInvocation:()Z
       3: ifeq          24
       6: invokestatic  #15                 // Method org/apache/hadoop/ipc/Server.getCallId:()I
       9: iflt          24
      12: invokestatic  #16                 // Method org/apache/hadoop/ipc/Server.getClientId:()[B
      15: getstatic     #17                 // Field org/apache/hadoop/ipc/RpcConstants.DUMMY_CLIENT_ID:[B
      18: invokestatic  #18                 // Method java/util/Arrays.equals:([B[B)Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public void lock();
    Code:
       0: aload_0
       1: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #19                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: return

  public void unlock();
    Code:
       0: aload_0
       1: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #20                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
       7: return

  private void incrCacheClearedCounter();
    Code:
       0: aload_0
       1: getfield      #13                 // Field retryCacheMetrics:Lorg/apache/hadoop/ipc/metrics/RetryCacheMetrics;
       4: invokevirtual #21                 // Method org/apache/hadoop/ipc/metrics/RetryCacheMetrics.incrCacheCleared:()V
       7: return

  public org.apache.hadoop.util.LightWeightGSet<org.apache.hadoop.ipc.RetryCache$CacheEntry, org.apache.hadoop.ipc.RetryCache$CacheEntry> getCacheSet();
    Code:
       0: aload_0
       1: getfield      #9                  // Field set:Lorg/apache/hadoop/util/LightWeightGSet;
       4: areturn

  public org.apache.hadoop.ipc.metrics.RetryCacheMetrics getMetricsForTests();
    Code:
       0: aload_0
       1: getfield      #13                 // Field retryCacheMetrics:Lorg/apache/hadoop/ipc/metrics/RetryCacheMetrics;
       4: areturn

  public java.lang.String getCacheName();
    Code:
       0: aload_0
       1: getfield      #11                 // Field cacheName:Ljava/lang/String;
       4: areturn

  private org.apache.hadoop.ipc.RetryCache$CacheEntry waitForCompletion(org.apache.hadoop.ipc.RetryCache$CacheEntry);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       6: invokevirtual #19                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       9: aload_0
      10: getfield      #9                  // Field set:Lorg/apache/hadoop/util/LightWeightGSet;
      13: aload_1
      14: invokevirtual #22                 // Method org/apache/hadoop/util/LightWeightGSet.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #23                 // class org/apache/hadoop/ipc/RetryCache$CacheEntry
      20: astore_2
      21: aload_2
      22: ifnonnull     117
      25: getstatic     #24                 // Field LOG:Lorg/slf4j/Logger;
      28: invokeinterface #25,  1           // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
      33: ifeq          90
      36: getstatic     #24                 // Field LOG:Lorg/slf4j/Logger;
      39: new           #26                 // class java/lang/StringBuilder
      42: dup
      43: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      46: ldc           #28                 // String Adding Rpc request clientId
      48: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_1
      52: invokestatic  #30                 // Method org/apache/hadoop/ipc/RetryCache$CacheEntry.access$000:(Lorg/apache/hadoop/ipc/RetryCache$CacheEntry;)J
      55: invokevirtual #31                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      58: aload_1
      59: invokestatic  #32                 // Method org/apache/hadoop/ipc/RetryCache$CacheEntry.access$100:(Lorg/apache/hadoop/ipc/RetryCache$CacheEntry;)J
      62: invokevirtual #31                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      65: ldc           #33                 // String  callId
      67: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: aload_1
      71: invokestatic  #34                 // Method org/apache/hadoop/ipc/RetryCache$CacheEntry.access$200:(Lorg/apache/hadoop/ipc/RetryCache$CacheEntry;)I
      74: invokevirtual #35                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      77: ldc           #36                 // String  to retryCache
      79: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      85: invokeinterface #38,  2           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      90: aload_0
      91: getfield      #9                  // Field set:Lorg/apache/hadoop/util/LightWeightGSet;
      94: aload_1
      95: invokevirtual #39                 // Method org/apache/hadoop/util/LightWeightGSet.put:(Ljava/lang/Object;)Ljava/lang/Object;
      98: pop
      99: aload_0
     100: getfield      #13                 // Field retryCacheMetrics:Lorg/apache/hadoop/ipc/metrics/RetryCacheMetrics;
     103: invokevirtual #40                 // Method org/apache/hadoop/ipc/metrics/RetryCacheMetrics.incrCacheUpdated:()V
     106: aload_1
     107: astore_3
     108: aload_0
     109: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
     112: invokevirtual #20                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     115: aload_3
     116: areturn
     117: aload_0
     118: getfield      #13                 // Field retryCacheMetrics:Lorg/apache/hadoop/ipc/metrics/RetryCacheMetrics;
     121: invokevirtual #41                 // Method org/apache/hadoop/ipc/metrics/RetryCacheMetrics.incrCacheHit:()V
     124: aload_0
     125: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
     128: invokevirtual #20                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     131: goto          146
     134: astore        4
     136: aload_0
     137: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
     140: invokevirtual #20                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     143: aload         4
     145: athrow
     146: aload_2
     147: ldc           #42                 // String Entry from the cache should not be null
     149: invokestatic  #43                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     152: pop
     153: aload_2
     154: dup
     155: astore_3
     156: monitorenter
     157: aload_2
     158: invokestatic  #44                 // Method org/apache/hadoop/ipc/RetryCache$CacheEntry.access$300:(Lorg/apache/hadoop/ipc/RetryCache$CacheEntry;)B
     161: invokestatic  #45                 // Method org/apache/hadoop/ipc/RetryCache$CacheEntry.access$400:()B
     164: if_icmpne     185
     167: aload_2
     168: invokevirtual #46                 // Method java/lang/Object.wait:()V
     171: goto          157
     174: astore        4
     176: invokestatic  #48                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     179: invokevirtual #49                 // Method java/lang/Thread.interrupt:()V
     182: goto          157
     185: aload_2
     186: invokestatic  #44                 // Method org/apache/hadoop/ipc/RetryCache$CacheEntry.access$300:(Lorg/apache/hadoop/ipc/RetryCache$CacheEntry;)B
     189: invokestatic  #50                 // Method org/apache/hadoop/ipc/RetryCache$CacheEntry.access$500:()B
     192: if_icmpeq     203
     195: aload_2
     196: invokestatic  #45                 // Method org/apache/hadoop/ipc/RetryCache$CacheEntry.access$400:()B
     199: invokestatic  #51                 // Method org/apache/hadoop/ipc/RetryCache$CacheEntry.access$302:(Lorg/apache/hadoop/ipc/RetryCache$CacheEntry;B)B
     202: pop
     203: aload_3
     204: monitorexit
     205: goto          215
     208: astore        5
     210: aload_3
     211: monitorexit
     212: aload         5
     214: athrow
     215: aload_2
     216: areturn
    Exception table:
       from    to  target type
           9   108   134   any
         117   124   134   any
         134   136   134   any
         167   171   174   Class java/lang/InterruptedException
         157   205   208   any
         208   212   208   any

  public void addCacheEntry(byte[], int);
    Code:
       0: new           #23                 // class org/apache/hadoop/ipc/RetryCache$CacheEntry
       3: dup
       4: aload_1
       5: iload_2
       6: invokestatic  #52                 // Method java/lang/System.nanoTime:()J
       9: aload_0
      10: getfield      #10                 // Field expirationTime:J
      13: ladd
      14: iconst_1
      15: invokespecial #53                 // Method org/apache/hadoop/ipc/RetryCache$CacheEntry."<init>":([BIJZ)V
      18: astore_3
      19: aload_0
      20: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      23: invokevirtual #19                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
      26: aload_0
      27: getfield      #9                  // Field set:Lorg/apache/hadoop/util/LightWeightGSet;
      30: aload_3
      31: invokevirtual #39                 // Method org/apache/hadoop/util/LightWeightGSet.put:(Ljava/lang/Object;)Ljava/lang/Object;
      34: pop
      35: aload_0
      36: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      39: invokevirtual #20                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      42: goto          57
      45: astore        4
      47: aload_0
      48: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      51: invokevirtual #20                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      54: aload         4
      56: athrow
      57: aload_0
      58: getfield      #13                 // Field retryCacheMetrics:Lorg/apache/hadoop/ipc/metrics/RetryCacheMetrics;
      61: invokevirtual #40                 // Method org/apache/hadoop/ipc/metrics/RetryCacheMetrics.incrCacheUpdated:()V
      64: return
    Exception table:
       from    to  target type
          26    35    45   any
          45    47    45   any

  public void addCacheEntryWithPayload(byte[], int, java.lang.Object);
    Code:
       0: new           #54                 // class org/apache/hadoop/ipc/RetryCache$CacheEntryWithPayload
       3: dup
       4: aload_1
       5: iload_2
       6: aload_3
       7: invokestatic  #52                 // Method java/lang/System.nanoTime:()J
      10: aload_0
      11: getfield      #10                 // Field expirationTime:J
      14: ladd
      15: iconst_1
      16: invokespecial #55                 // Method org/apache/hadoop/ipc/RetryCache$CacheEntryWithPayload."<init>":([BILjava/lang/Object;JZ)V
      19: astore        4
      21: aload_0
      22: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      25: invokevirtual #19                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
      28: aload_0
      29: getfield      #9                  // Field set:Lorg/apache/hadoop/util/LightWeightGSet;
      32: aload         4
      34: invokevirtual #39                 // Method org/apache/hadoop/util/LightWeightGSet.put:(Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: aload_0
      39: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      42: invokevirtual #20                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      45: goto          60
      48: astore        5
      50: aload_0
      51: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      54: invokevirtual #20                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      57: aload         5
      59: athrow
      60: aload_0
      61: getfield      #13                 // Field retryCacheMetrics:Lorg/apache/hadoop/ipc/metrics/RetryCacheMetrics;
      64: invokevirtual #40                 // Method org/apache/hadoop/ipc/metrics/RetryCacheMetrics.incrCacheUpdated:()V
      67: return
    Exception table:
       from    to  target type
          28    38    48   any
          48    50    48   any

  private static org.apache.hadoop.ipc.RetryCache$CacheEntry newEntry(long);
    Code:
       0: new           #23                 // class org/apache/hadoop/ipc/RetryCache$CacheEntry
       3: dup
       4: invokestatic  #16                 // Method org/apache/hadoop/ipc/Server.getClientId:()[B
       7: invokestatic  #15                 // Method org/apache/hadoop/ipc/Server.getCallId:()I
      10: invokestatic  #52                 // Method java/lang/System.nanoTime:()J
      13: lload_0
      14: ladd
      15: invokespecial #56                 // Method org/apache/hadoop/ipc/RetryCache$CacheEntry."<init>":([BIJ)V
      18: areturn

  private static org.apache.hadoop.ipc.RetryCache$CacheEntryWithPayload newEntry(java.lang.Object, long);
    Code:
       0: new           #54                 // class org/apache/hadoop/ipc/RetryCache$CacheEntryWithPayload
       3: dup
       4: invokestatic  #16                 // Method org/apache/hadoop/ipc/Server.getClientId:()[B
       7: invokestatic  #15                 // Method org/apache/hadoop/ipc/Server.getCallId:()I
      10: aload_0
      11: invokestatic  #52                 // Method java/lang/System.nanoTime:()J
      14: lload_1
      15: ladd
      16: invokespecial #57                 // Method org/apache/hadoop/ipc/RetryCache$CacheEntryWithPayload."<init>":([BILjava/lang/Object;J)V
      19: areturn

  public static org.apache.hadoop.ipc.RetryCache$CacheEntry waitForCompletion(org.apache.hadoop.ipc.RetryCache);
    Code:
       0: invokestatic  #58                 // Method skipRetryCache:()Z
       3: ifeq          8
       6: aconst_null
       7: areturn
       8: aload_0
       9: ifnull        26
      12: aload_0
      13: aload_0
      14: getfield      #10                 // Field expirationTime:J
      17: invokestatic  #59                 // Method newEntry:(J)Lorg/apache/hadoop/ipc/RetryCache$CacheEntry;
      20: invokespecial #60                 // Method waitForCompletion:(Lorg/apache/hadoop/ipc/RetryCache$CacheEntry;)Lorg/apache/hadoop/ipc/RetryCache$CacheEntry;
      23: goto          27
      26: aconst_null
      27: areturn

  public static org.apache.hadoop.ipc.RetryCache$CacheEntryWithPayload waitForCompletion(org.apache.hadoop.ipc.RetryCache, java.lang.Object);
    Code:
       0: invokestatic  #58                 // Method skipRetryCache:()Z
       3: ifeq          8
       6: aconst_null
       7: areturn
       8: aload_0
       9: ifnull        27
      12: aload_0
      13: aload_1
      14: aload_0
      15: getfield      #10                 // Field expirationTime:J
      18: invokestatic  #61                 // Method newEntry:(Ljava/lang/Object;J)Lorg/apache/hadoop/ipc/RetryCache$CacheEntryWithPayload;
      21: invokespecial #60                 // Method waitForCompletion:(Lorg/apache/hadoop/ipc/RetryCache$CacheEntry;)Lorg/apache/hadoop/ipc/RetryCache$CacheEntry;
      24: goto          28
      27: aconst_null
      28: checkcast     #54                 // class org/apache/hadoop/ipc/RetryCache$CacheEntryWithPayload
      31: checkcast     #54                 // class org/apache/hadoop/ipc/RetryCache$CacheEntryWithPayload
      34: areturn

  public static void setState(org.apache.hadoop.ipc.RetryCache$CacheEntry, boolean);
    Code:
       0: aload_0
       1: ifnonnull     5
       4: return
       5: aload_0
       6: iload_1
       7: invokevirtual #62                 // Method org/apache/hadoop/ipc/RetryCache$CacheEntry.completed:(Z)V
      10: return

  public static void setState(org.apache.hadoop.ipc.RetryCache$CacheEntryWithPayload, boolean, java.lang.Object);
    Code:
       0: aload_0
       1: ifnonnull     5
       4: return
       5: aload_0
       6: aload_2
       7: invokestatic  #63                 // Method org/apache/hadoop/ipc/RetryCache$CacheEntryWithPayload.access$602:(Lorg/apache/hadoop/ipc/RetryCache$CacheEntryWithPayload;Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: aload_0
      12: iload_1
      13: invokevirtual #64                 // Method org/apache/hadoop/ipc/RetryCache$CacheEntryWithPayload.completed:(Z)V
      16: return

  public static void clear(org.apache.hadoop.ipc.RetryCache);
    Code:
       0: aload_0
       1: ifnull        15
       4: aload_0
       5: getfield      #9                  // Field set:Lorg/apache/hadoop/util/LightWeightGSet;
       8: invokevirtual #65                 // Method org/apache/hadoop/util/LightWeightGSet.clear:()V
      11: aload_0
      12: invokespecial #66                 // Method incrCacheClearedCounter:()V
      15: return

  static {};
    Code:
       0: ldc           #6                  // class org/apache/hadoop/ipc/RetryCache
       2: invokestatic  #67                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #24                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
