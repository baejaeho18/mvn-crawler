Compiled from "AclCommands.java"
public class org.apache.hadoop.fs.shell.AclCommands$GetfaclCommand extends org.apache.hadoop.fs.shell.FsCommand {
  public static java.lang.String NAME;

  public static java.lang.String USAGE;

  public static java.lang.String DESCRIPTION;

  public org.apache.hadoop.fs.shell.AclCommands$GetfaclCommand();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/fs/shell/FsCommand."<init>":()V
       4: return

  protected void processOptions(java.util.LinkedList<java.lang.String>) throws java.io.IOException;
    Code:
       0: new           #2                  // class org/apache/hadoop/fs/shell/CommandFormat
       3: dup
       4: iconst_0
       5: ldc           #4                  // int 2147483647
       7: iconst_1
       8: anewarray     #5                  // class java/lang/String
      11: dup
      12: iconst_0
      13: ldc           #6                  // String R
      15: aastore
      16: invokespecial #7                  // Method org/apache/hadoop/fs/shell/CommandFormat."<init>":(II[Ljava/lang/String;)V
      19: astore_2
      20: aload_2
      21: aload_1
      22: invokevirtual #8                  // Method org/apache/hadoop/fs/shell/CommandFormat.parse:(Ljava/util/List;)V
      25: aload_0
      26: aload_2
      27: ldc           #6                  // String R
      29: invokevirtual #9                  // Method org/apache/hadoop/fs/shell/CommandFormat.getOpt:(Ljava/lang/String;)Z
      32: invokevirtual #10                 // Method setRecursive:(Z)V
      35: aload_1
      36: invokevirtual #11                 // Method java/util/LinkedList.isEmpty:()Z
      39: ifeq          52
      42: new           #12                 // class org/apache/hadoop/HadoopIllegalArgumentException
      45: dup
      46: ldc           #13                 // String <path> is missing
      48: invokespecial #14                 // Method org/apache/hadoop/HadoopIllegalArgumentException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: aload_1
      53: invokevirtual #15                 // Method java/util/LinkedList.size:()I
      56: iconst_1
      57: if_icmple     70
      60: new           #12                 // class org/apache/hadoop/HadoopIllegalArgumentException
      63: dup
      64: ldc           #16                 // String Too many arguments
      66: invokespecial #14                 // Method org/apache/hadoop/HadoopIllegalArgumentException."<init>":(Ljava/lang/String;)V
      69: athrow
      70: return

  protected void processPath(org.apache.hadoop.fs.shell.PathData) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field out:Ljava/io/PrintStream;
       4: new           #18                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #20                 // String # file:
      13: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_1
      17: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      20: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: invokevirtual #24                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      26: aload_0
      27: getfield      #17                 // Field out:Ljava/io/PrintStream;
      30: new           #18                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #25                 // String # owner:
      39: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_1
      43: getfield      #26                 // Field org/apache/hadoop/fs/shell/PathData.stat:Lorg/apache/hadoop/fs/FileStatus;
      46: invokevirtual #27                 // Method org/apache/hadoop/fs/FileStatus.getOwner:()Ljava/lang/String;
      49: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: invokevirtual #24                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      58: aload_0
      59: getfield      #17                 // Field out:Ljava/io/PrintStream;
      62: new           #18                 // class java/lang/StringBuilder
      65: dup
      66: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      69: ldc           #28                 // String # group:
      71: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_1
      75: getfield      #26                 // Field org/apache/hadoop/fs/shell/PathData.stat:Lorg/apache/hadoop/fs/FileStatus;
      78: invokevirtual #29                 // Method org/apache/hadoop/fs/FileStatus.getGroup:()Ljava/lang/String;
      81: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      87: invokevirtual #24                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      90: aload_1
      91: getfield      #26                 // Field org/apache/hadoop/fs/shell/PathData.stat:Lorg/apache/hadoop/fs/FileStatus;
      94: invokevirtual #30                 // Method org/apache/hadoop/fs/FileStatus.getPermission:()Lorg/apache/hadoop/fs/permission/FsPermission;
      97: astore_2
      98: aload_2
      99: invokevirtual #31                 // Method org/apache/hadoop/fs/permission/FsPermission.getStickyBit:()Z
     102: ifeq          150
     105: aload_0
     106: getfield      #17                 // Field out:Ljava/io/PrintStream;
     109: new           #18                 // class java/lang/StringBuilder
     112: dup
     113: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
     116: ldc           #32                 // String # flags: --
     118: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: aload_2
     122: invokevirtual #33                 // Method org/apache/hadoop/fs/permission/FsPermission.getOtherAction:()Lorg/apache/hadoop/fs/permission/FsAction;
     125: getstatic     #34                 // Field org/apache/hadoop/fs/permission/FsAction.EXECUTE:Lorg/apache/hadoop/fs/permission/FsAction;
     128: invokevirtual #35                 // Method org/apache/hadoop/fs/permission/FsAction.implies:(Lorg/apache/hadoop/fs/permission/FsAction;)Z
     131: ifeq          139
     134: ldc           #36                 // String t
     136: goto          141
     139: ldc           #37                 // String T
     141: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     147: invokevirtual #24                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     150: aload_1
     151: getfield      #26                 // Field org/apache/hadoop/fs/shell/PathData.stat:Lorg/apache/hadoop/fs/FileStatus;
     154: invokevirtual #38                 // Method org/apache/hadoop/fs/FileStatus.hasAcl:()Z
     157: ifeq          181
     160: aload_1
     161: getfield      #39                 // Field org/apache/hadoop/fs/shell/PathData.fs:Lorg/apache/hadoop/fs/FileSystem;
     164: aload_1
     165: getfield      #40                 // Field org/apache/hadoop/fs/shell/PathData.path:Lorg/apache/hadoop/fs/Path;
     168: invokevirtual #41                 // Method org/apache/hadoop/fs/FileSystem.getAclStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/permission/AclStatus;
     171: astore_3
     172: aload_3
     173: invokevirtual #42                 // Method org/apache/hadoop/fs/permission/AclStatus.getEntries:()Ljava/util/List;
     176: astore        4
     178: goto          188
     181: aconst_null
     182: astore_3
     183: invokestatic  #43                 // Method java/util/Collections.emptyList:()Ljava/util/List;
     186: astore        4
     188: new           #44                 // class org/apache/hadoop/fs/permission/ScopedAclEntries
     191: dup
     192: aload_2
     193: aload         4
     195: invokestatic  #45                 // Method org/apache/hadoop/fs/permission/AclUtil.getAclFromPermAndEntries:(Lorg/apache/hadoop/fs/permission/FsPermission;Ljava/util/List;)Ljava/util/List;
     198: invokespecial #46                 // Method org/apache/hadoop/fs/permission/ScopedAclEntries."<init>":(Ljava/util/List;)V
     201: astore        5
     203: aload_0
     204: aload_3
     205: aload_2
     206: aload         5
     208: invokevirtual #47                 // Method org/apache/hadoop/fs/permission/ScopedAclEntries.getAccessEntries:()Ljava/util/List;
     211: invokespecial #48                 // Method printAclEntriesForSingleScope:(Lorg/apache/hadoop/fs/permission/AclStatus;Lorg/apache/hadoop/fs/permission/FsPermission;Ljava/util/List;)V
     214: aload_0
     215: aload_3
     216: aload_2
     217: aload         5
     219: invokevirtual #49                 // Method org/apache/hadoop/fs/permission/ScopedAclEntries.getDefaultEntries:()Ljava/util/List;
     222: invokespecial #48                 // Method printAclEntriesForSingleScope:(Lorg/apache/hadoop/fs/permission/AclStatus;Lorg/apache/hadoop/fs/permission/FsPermission;Ljava/util/List;)V
     225: aload_0
     226: getfield      #17                 // Field out:Ljava/io/PrintStream;
     229: invokevirtual #50                 // Method java/io/PrintStream.println:()V
     232: return

  private void printAclEntriesForSingleScope(org.apache.hadoop.fs.permission.AclStatus, org.apache.hadoop.fs.permission.FsPermission, java.util.List<org.apache.hadoop.fs.permission.AclEntry>);
    Code:
       0: aload_3
       1: invokeinterface #51,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       6: ifeq          10
       9: return
      10: aload_3
      11: invokestatic  #52                 // Method org/apache/hadoop/fs/permission/AclUtil.isMinimalAcl:(Ljava/util/List;)Z
      14: ifeq          65
      17: aload_3
      18: invokeinterface #53,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      23: astore        4
      25: aload         4
      27: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          62
      35: aload         4
      37: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #56                 // class org/apache/hadoop/fs/permission/AclEntry
      45: astore        5
      47: aload_0
      48: getfield      #17                 // Field out:Ljava/io/PrintStream;
      51: aload         5
      53: invokevirtual #57                 // Method org/apache/hadoop/fs/permission/AclEntry.toStringStable:()Ljava/lang/String;
      56: invokevirtual #24                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      59: goto          25
      62: goto          106
      65: aload_3
      66: invokeinterface #53,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      71: astore        4
      73: aload         4
      75: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      80: ifeq          106
      83: aload         4
      85: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      90: checkcast     #56                 // class org/apache/hadoop/fs/permission/AclEntry
      93: astore        5
      95: aload_0
      96: aload_1
      97: aload_2
      98: aload         5
     100: invokespecial #58                 // Method printExtendedAclEntry:(Lorg/apache/hadoop/fs/permission/AclStatus;Lorg/apache/hadoop/fs/permission/FsPermission;Lorg/apache/hadoop/fs/permission/AclEntry;)V
     103: goto          73
     106: return

  private void printExtendedAclEntry(org.apache.hadoop.fs.permission.AclStatus, org.apache.hadoop.fs.permission.FsPermission, org.apache.hadoop.fs.permission.AclEntry);
    Code:
       0: aload_3
       1: invokevirtual #59                 // Method org/apache/hadoop/fs/permission/AclEntry.getName:()Ljava/lang/String;
       4: ifnonnull     17
       7: aload_3
       8: invokevirtual #60                 // Method org/apache/hadoop/fs/permission/AclEntry.getType:()Lorg/apache/hadoop/fs/permission/AclEntryType;
      11: getstatic     #61                 // Field org/apache/hadoop/fs/permission/AclEntryType.GROUP:Lorg/apache/hadoop/fs/permission/AclEntryType;
      14: if_acmpne     83
      17: aload_3
      18: invokevirtual #62                 // Method org/apache/hadoop/fs/permission/AclEntry.getPermission:()Lorg/apache/hadoop/fs/permission/FsAction;
      21: astore        4
      23: aload_1
      24: aload_3
      25: aload_2
      26: invokevirtual #63                 // Method org/apache/hadoop/fs/permission/AclStatus.getEffectivePermission:(Lorg/apache/hadoop/fs/permission/AclEntry;Lorg/apache/hadoop/fs/permission/FsPermission;)Lorg/apache/hadoop/fs/permission/FsAction;
      29: astore        5
      31: aload         4
      33: aload         5
      35: if_acmpeq     69
      38: aload_0
      39: getfield      #17                 // Field out:Ljava/io/PrintStream;
      42: ldc           #64                 // String %s\t#effective:%s
      44: iconst_2
      45: anewarray     #65                 // class java/lang/Object
      48: dup
      49: iconst_0
      50: aload_3
      51: aastore
      52: dup
      53: iconst_1
      54: aload         5
      56: getfield      #66                 // Field org/apache/hadoop/fs/permission/FsAction.SYMBOL:Ljava/lang/String;
      59: aastore
      60: invokestatic  #67                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      63: invokevirtual #24                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      66: goto          80
      69: aload_0
      70: getfield      #17                 // Field out:Ljava/io/PrintStream;
      73: aload_3
      74: invokevirtual #57                 // Method org/apache/hadoop/fs/permission/AclEntry.toStringStable:()Ljava/lang/String;
      77: invokevirtual #24                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      80: goto          94
      83: aload_0
      84: getfield      #17                 // Field out:Ljava/io/PrintStream;
      87: aload_3
      88: invokevirtual #57                 // Method org/apache/hadoop/fs/permission/AclEntry.toStringStable:()Ljava/lang/String;
      91: invokevirtual #24                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      94: return

  static {};
    Code:
       0: invokestatic  #68                 // Method org/apache/hadoop/fs/shell/AclCommands.access$000:()Ljava/lang/String;
       3: putstatic     #69                 // Field NAME:Ljava/lang/String;
       6: ldc           #70                 // String [-R] <path>
       8: putstatic     #71                 // Field USAGE:Ljava/lang/String;
      11: ldc           #72                 // String Displays the Access Control Lists (ACLs) of files and directories. If a directory has a default ACL, then getfacl also displays the default ACL.\n  -R: List the ACLs of all files and directories recursively.\n  <path>: File or directory to list.\n
      13: putstatic     #73                 // Field DESCRIPTION:Ljava/lang/String;
      16: return
}
