Compiled from "BloomFilter.java"
public class org.apache.hadoop.util.bloom.BloomFilter extends org.apache.hadoop.util.bloom.Filter {
  private static final byte[] bitvalues;

  java.util.BitSet bits;

  public org.apache.hadoop.util.bloom.BloomFilter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/util/bloom/Filter."<init>":()V
       4: return

  public org.apache.hadoop.util.bloom.BloomFilter(int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: invokespecial #2                  // Method org/apache/hadoop/util/bloom/Filter."<init>":(III)V
       7: aload_0
       8: new           #3                  // class java/util/BitSet
      11: dup
      12: aload_0
      13: getfield      #4                  // Field vectorSize:I
      16: invokespecial #5                  // Method java/util/BitSet."<init>":(I)V
      19: putfield      #6                  // Field bits:Ljava/util/BitSet;
      22: return

  public void add(org.apache.hadoop.util.bloom.Key);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #7                  // class java/lang/NullPointerException
       7: dup
       8: ldc           #8                  // String key cannot be null
      10: invokespecial #9                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #10                 // Field hash:Lorg/apache/hadoop/util/bloom/HashFunction;
      18: aload_1
      19: invokevirtual #11                 // Method org/apache/hadoop/util/bloom/HashFunction.hash:(Lorg/apache/hadoop/util/bloom/Key;)[I
      22: astore_2
      23: aload_0
      24: getfield      #10                 // Field hash:Lorg/apache/hadoop/util/bloom/HashFunction;
      27: invokevirtual #12                 // Method org/apache/hadoop/util/bloom/HashFunction.clear:()V
      30: iconst_0
      31: istore_3
      32: iload_3
      33: aload_0
      34: getfield      #13                 // Field nbHash:I
      37: if_icmpge     56
      40: aload_0
      41: getfield      #6                  // Field bits:Ljava/util/BitSet;
      44: aload_2
      45: iload_3
      46: iaload
      47: invokevirtual #14                 // Method java/util/BitSet.set:(I)V
      50: iinc          3, 1
      53: goto          32
      56: return

  public void and(org.apache.hadoop.util.bloom.Filter);
    Code:
       0: aload_1
       1: ifnull        33
       4: aload_1
       5: instanceof    #15                 // class org/apache/hadoop/util/bloom/BloomFilter
       8: ifeq          33
      11: aload_1
      12: getfield      #16                 // Field org/apache/hadoop/util/bloom/Filter.vectorSize:I
      15: aload_0
      16: getfield      #4                  // Field vectorSize:I
      19: if_icmpne     33
      22: aload_1
      23: getfield      #17                 // Field org/apache/hadoop/util/bloom/Filter.nbHash:I
      26: aload_0
      27: getfield      #13                 // Field nbHash:I
      30: if_icmpeq     43
      33: new           #18                 // class java/lang/IllegalArgumentException
      36: dup
      37: ldc           #19                 // String filters cannot be and-ed
      39: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_0
      44: getfield      #6                  // Field bits:Ljava/util/BitSet;
      47: aload_1
      48: checkcast     #15                 // class org/apache/hadoop/util/bloom/BloomFilter
      51: getfield      #6                  // Field bits:Ljava/util/BitSet;
      54: invokevirtual #21                 // Method java/util/BitSet.and:(Ljava/util/BitSet;)V
      57: return

  public boolean membershipTest(org.apache.hadoop.util.bloom.Key);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #7                  // class java/lang/NullPointerException
       7: dup
       8: ldc           #8                  // String key cannot be null
      10: invokespecial #9                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #10                 // Field hash:Lorg/apache/hadoop/util/bloom/HashFunction;
      18: aload_1
      19: invokevirtual #11                 // Method org/apache/hadoop/util/bloom/HashFunction.hash:(Lorg/apache/hadoop/util/bloom/Key;)[I
      22: astore_2
      23: aload_0
      24: getfield      #10                 // Field hash:Lorg/apache/hadoop/util/bloom/HashFunction;
      27: invokevirtual #12                 // Method org/apache/hadoop/util/bloom/HashFunction.clear:()V
      30: iconst_0
      31: istore_3
      32: iload_3
      33: aload_0
      34: getfield      #13                 // Field nbHash:I
      37: if_icmpge     61
      40: aload_0
      41: getfield      #6                  // Field bits:Ljava/util/BitSet;
      44: aload_2
      45: iload_3
      46: iaload
      47: invokevirtual #22                 // Method java/util/BitSet.get:(I)Z
      50: ifne          55
      53: iconst_0
      54: ireturn
      55: iinc          3, 1
      58: goto          32
      61: iconst_1
      62: ireturn

  public void not();
    Code:
       0: aload_0
       1: getfield      #6                  // Field bits:Ljava/util/BitSet;
       4: iconst_0
       5: aload_0
       6: getfield      #4                  // Field vectorSize:I
       9: invokevirtual #23                 // Method java/util/BitSet.flip:(II)V
      12: return

  public void or(org.apache.hadoop.util.bloom.Filter);
    Code:
       0: aload_1
       1: ifnull        33
       4: aload_1
       5: instanceof    #15                 // class org/apache/hadoop/util/bloom/BloomFilter
       8: ifeq          33
      11: aload_1
      12: getfield      #16                 // Field org/apache/hadoop/util/bloom/Filter.vectorSize:I
      15: aload_0
      16: getfield      #4                  // Field vectorSize:I
      19: if_icmpne     33
      22: aload_1
      23: getfield      #17                 // Field org/apache/hadoop/util/bloom/Filter.nbHash:I
      26: aload_0
      27: getfield      #13                 // Field nbHash:I
      30: if_icmpeq     43
      33: new           #18                 // class java/lang/IllegalArgumentException
      36: dup
      37: ldc           #24                 // String filters cannot be or-ed
      39: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_0
      44: getfield      #6                  // Field bits:Ljava/util/BitSet;
      47: aload_1
      48: checkcast     #15                 // class org/apache/hadoop/util/bloom/BloomFilter
      51: getfield      #6                  // Field bits:Ljava/util/BitSet;
      54: invokevirtual #25                 // Method java/util/BitSet.or:(Ljava/util/BitSet;)V
      57: return

  public void xor(org.apache.hadoop.util.bloom.Filter);
    Code:
       0: aload_1
       1: ifnull        33
       4: aload_1
       5: instanceof    #15                 // class org/apache/hadoop/util/bloom/BloomFilter
       8: ifeq          33
      11: aload_1
      12: getfield      #16                 // Field org/apache/hadoop/util/bloom/Filter.vectorSize:I
      15: aload_0
      16: getfield      #4                  // Field vectorSize:I
      19: if_icmpne     33
      22: aload_1
      23: getfield      #17                 // Field org/apache/hadoop/util/bloom/Filter.nbHash:I
      26: aload_0
      27: getfield      #13                 // Field nbHash:I
      30: if_icmpeq     43
      33: new           #18                 // class java/lang/IllegalArgumentException
      36: dup
      37: ldc           #26                 // String filters cannot be xor-ed
      39: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_0
      44: getfield      #6                  // Field bits:Ljava/util/BitSet;
      47: aload_1
      48: checkcast     #15                 // class org/apache/hadoop/util/bloom/BloomFilter
      51: getfield      #6                  // Field bits:Ljava/util/BitSet;
      54: invokevirtual #27                 // Method java/util/BitSet.xor:(Ljava/util/BitSet;)V
      57: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #6                  // Field bits:Ljava/util/BitSet;
       4: invokevirtual #28                 // Method java/util/BitSet.toString:()Ljava/lang/String;
       7: areturn

  public int getVectorSize();
    Code:
       0: aload_0
       1: getfield      #4                  // Field vectorSize:I
       4: ireturn

  public void write(java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #29                 // Method org/apache/hadoop/util/bloom/Filter.write:(Ljava/io/DataOutput;)V
       5: aload_0
       6: invokespecial #30                 // Method getNBytes:()I
       9: newarray       byte
      11: astore_2
      12: iconst_0
      13: istore_3
      14: iconst_0
      15: istore        4
      17: iconst_0
      18: istore        5
      20: iload_3
      21: aload_0
      22: getfield      #4                  // Field vectorSize:I
      25: if_icmpge     85
      28: iload         5
      30: bipush        8
      32: if_icmpne     41
      35: iconst_0
      36: istore        5
      38: iinc          4, 1
      41: iload         5
      43: ifne          51
      46: aload_2
      47: iload         4
      49: iconst_0
      50: bastore
      51: aload_0
      52: getfield      #6                  // Field bits:Ljava/util/BitSet;
      55: iload_3
      56: invokevirtual #22                 // Method java/util/BitSet.get:(I)Z
      59: ifeq          76
      62: aload_2
      63: iload         4
      65: dup2
      66: baload
      67: getstatic     #31                 // Field bitvalues:[B
      70: iload         5
      72: baload
      73: ior
      74: i2b
      75: bastore
      76: iinc          3, 1
      79: iinc          5, 1
      82: goto          20
      85: aload_1
      86: aload_2
      87: invokeinterface #32,  2           // InterfaceMethod java/io/DataOutput.write:([B)V
      92: return

  public void readFields(java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #33                 // Method org/apache/hadoop/util/bloom/Filter.readFields:(Ljava/io/DataInput;)V
       5: aload_0
       6: new           #3                  // class java/util/BitSet
       9: dup
      10: aload_0
      11: getfield      #4                  // Field vectorSize:I
      14: invokespecial #5                  // Method java/util/BitSet."<init>":(I)V
      17: putfield      #6                  // Field bits:Ljava/util/BitSet;
      20: aload_0
      21: invokespecial #30                 // Method getNBytes:()I
      24: newarray       byte
      26: astore_2
      27: aload_1
      28: aload_2
      29: invokeinterface #34,  2           // InterfaceMethod java/io/DataInput.readFully:([B)V
      34: iconst_0
      35: istore_3
      36: iconst_0
      37: istore        4
      39: iconst_0
      40: istore        5
      42: iload_3
      43: aload_0
      44: getfield      #4                  // Field vectorSize:I
      47: if_icmpge     94
      50: iload         5
      52: bipush        8
      54: if_icmpne     63
      57: iconst_0
      58: istore        5
      60: iinc          4, 1
      63: aload_2
      64: iload         4
      66: baload
      67: getstatic     #31                 // Field bitvalues:[B
      70: iload         5
      72: baload
      73: iand
      74: ifeq          85
      77: aload_0
      78: getfield      #6                  // Field bits:Ljava/util/BitSet;
      81: iload_3
      82: invokevirtual #14                 // Method java/util/BitSet.set:(I)V
      85: iinc          3, 1
      88: iinc          5, 1
      91: goto          42
      94: return

  private int getNBytes();
    Code:
       0: aload_0
       1: getfield      #4                  // Field vectorSize:I
       4: i2l
       5: ldc2_w        #35                 // long 7l
       8: ladd
       9: ldc2_w        #37                 // long 8l
      12: ldiv
      13: l2i
      14: ireturn

  static {};
    Code:
       0: bipush        8
       2: newarray       byte
       4: dup
       5: iconst_0
       6: iconst_1
       7: bastore
       8: dup
       9: iconst_1
      10: iconst_2
      11: bastore
      12: dup
      13: iconst_2
      14: iconst_4
      15: bastore
      16: dup
      17: iconst_3
      18: bipush        8
      20: bastore
      21: dup
      22: iconst_4
      23: bipush        16
      25: bastore
      26: dup
      27: iconst_5
      28: bipush        32
      30: bastore
      31: dup
      32: bipush        6
      34: bipush        64
      36: bastore
      37: dup
      38: bipush        7
      40: bipush        -128
      42: bastore
      43: putstatic     #31                 // Field bitvalues:[B
      46: return
}
