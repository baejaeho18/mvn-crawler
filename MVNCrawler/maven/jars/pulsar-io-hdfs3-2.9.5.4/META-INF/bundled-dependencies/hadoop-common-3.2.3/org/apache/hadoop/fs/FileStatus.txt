Compiled from "FileStatus.java"
public class org.apache.hadoop.fs.FileStatus implements org.apache.hadoop.io.Writable, java.lang.Comparable<java.lang.Object>, java.io.Serializable, java.io.ObjectInputValidation {
  private static final long serialVersionUID;

  private org.apache.hadoop.fs.Path path;

  private long length;

  private java.lang.Boolean isdir;

  private short block_replication;

  private long blocksize;

  private long modification_time;

  private long access_time;

  private org.apache.hadoop.fs.permission.FsPermission permission;

  private java.lang.String owner;

  private java.lang.String group;

  private org.apache.hadoop.fs.Path symlink;

  private java.util.Set<org.apache.hadoop.fs.FileStatus$AttrFlags> attr;

  public static final java.util.Set<org.apache.hadoop.fs.FileStatus$AttrFlags> NONE;

  static final boolean $assertionsDisabled;

  public static java.util.Set<org.apache.hadoop.fs.FileStatus$AttrFlags> attributes(boolean, boolean, boolean, boolean);
    Code:
       0: iload_0
       1: ifne          20
       4: iload_1
       5: ifne          20
       8: iload_2
       9: ifne          20
      12: iload_3
      13: ifne          20
      16: getstatic     #1                  // Field NONE:Ljava/util/Set;
      19: areturn
      20: ldc           #2                  // class org/apache/hadoop/fs/FileStatus$AttrFlags
      22: invokestatic  #3                  // Method java/util/EnumSet.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;
      25: astore        4
      27: iload_0
      28: ifeq          40
      31: aload         4
      33: getstatic     #4                  // Field org/apache/hadoop/fs/FileStatus$AttrFlags.HAS_ACL:Lorg/apache/hadoop/fs/FileStatus$AttrFlags;
      36: invokevirtual #5                  // Method java/util/EnumSet.add:(Ljava/lang/Object;)Z
      39: pop
      40: iload_1
      41: ifeq          53
      44: aload         4
      46: getstatic     #6                  // Field org/apache/hadoop/fs/FileStatus$AttrFlags.HAS_CRYPT:Lorg/apache/hadoop/fs/FileStatus$AttrFlags;
      49: invokevirtual #5                  // Method java/util/EnumSet.add:(Ljava/lang/Object;)Z
      52: pop
      53: iload_2
      54: ifeq          66
      57: aload         4
      59: getstatic     #7                  // Field org/apache/hadoop/fs/FileStatus$AttrFlags.HAS_EC:Lorg/apache/hadoop/fs/FileStatus$AttrFlags;
      62: invokevirtual #5                  // Method java/util/EnumSet.add:(Ljava/lang/Object;)Z
      65: pop
      66: iload_3
      67: ifeq          79
      70: aload         4
      72: getstatic     #8                  // Field org/apache/hadoop/fs/FileStatus$AttrFlags.SNAPSHOT_ENABLED:Lorg/apache/hadoop/fs/FileStatus$AttrFlags;
      75: invokevirtual #5                  // Method java/util/EnumSet.add:(Ljava/lang/Object;)Z
      78: pop
      79: aload         4
      81: areturn

  public org.apache.hadoop.fs.FileStatus();
    Code:
       0: aload_0
       1: lconst_0
       2: iconst_0
       3: iconst_0
       4: lconst_0
       5: lconst_0
       6: lconst_0
       7: aconst_null
       8: aconst_null
       9: aconst_null
      10: aconst_null
      11: invokespecial #9                  // Method "<init>":(JZIJJJLorg/apache/hadoop/fs/permission/FsPermission;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)V
      14: return

  public org.apache.hadoop.fs.FileStatus(long, boolean, int, long, long, org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: iload         4
       5: lload         5
       7: lload         7
       9: lconst_0
      10: aconst_null
      11: aconst_null
      12: aconst_null
      13: aload         9
      15: invokespecial #9                  // Method "<init>":(JZIJJJLorg/apache/hadoop/fs/permission/FsPermission;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)V
      18: return

  public org.apache.hadoop.fs.FileStatus(long, boolean, int, long, long, long, org.apache.hadoop.fs.permission.FsPermission, java.lang.String, java.lang.String, org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: iload         4
       5: lload         5
       7: lload         7
       9: lload         9
      11: aload         11
      13: aload         12
      15: aload         13
      17: aconst_null
      18: aload         14
      20: invokespecial #10                 // Method "<init>":(JZIJJJLorg/apache/hadoop/fs/permission/FsPermission;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
      23: return

  public org.apache.hadoop.fs.FileStatus(long, boolean, int, long, long, long, org.apache.hadoop.fs.permission.FsPermission, java.lang.String, java.lang.String, org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: iload         4
       5: lload         5
       7: lload         7
       9: lload         9
      11: aload         11
      13: aload         12
      15: aload         13
      17: aload         14
      19: aload         15
      21: iconst_0
      22: iconst_0
      23: iconst_0
      24: invokespecial #11                 // Method "<init>":(JZIJJJLorg/apache/hadoop/fs/permission/FsPermission;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;ZZZ)V
      27: return

  public org.apache.hadoop.fs.FileStatus(long, boolean, int, long, long, long, org.apache.hadoop.fs.permission.FsPermission, java.lang.String, java.lang.String, org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path, boolean, boolean, boolean);
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: iload         4
       5: lload         5
       7: lload         7
       9: lload         9
      11: aload         11
      13: aload         12
      15: aload         13
      17: aload         14
      19: aload         15
      21: iload         16
      23: iload         17
      25: iload         18
      27: iconst_0
      28: invokestatic  #12                 // Method attributes:(ZZZZ)Ljava/util/Set;
      31: invokespecial #13                 // Method "<init>":(JZIJJJLorg/apache/hadoop/fs/permission/FsPermission;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Ljava/util/Set;)V
      34: return

  public org.apache.hadoop.fs.FileStatus(long, boolean, int, long, long, long, org.apache.hadoop.fs.permission.FsPermission, java.lang.String, java.lang.String, org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path, java.util.Set<org.apache.hadoop.fs.FileStatus$AttrFlags>);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lload_1
       6: putfield      #15                 // Field length:J
       9: aload_0
      10: iload_3
      11: invokestatic  #16                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      14: putfield      #17                 // Field isdir:Ljava/lang/Boolean;
      17: aload_0
      18: iload         4
      20: i2s
      21: putfield      #18                 // Field block_replication:S
      24: aload_0
      25: lload         5
      27: putfield      #19                 // Field blocksize:J
      30: aload_0
      31: lload         7
      33: putfield      #20                 // Field modification_time:J
      36: aload_0
      37: lload         9
      39: putfield      #21                 // Field access_time:J
      42: aload         11
      44: ifnull        56
      47: aload_0
      48: aload         11
      50: putfield      #22                 // Field permission:Lorg/apache/hadoop/fs/permission/FsPermission;
      53: goto          92
      56: iload_3
      57: ifeq          70
      60: aload_0
      61: invokestatic  #23                 // Method org/apache/hadoop/fs/permission/FsPermission.getDirDefault:()Lorg/apache/hadoop/fs/permission/FsPermission;
      64: putfield      #22                 // Field permission:Lorg/apache/hadoop/fs/permission/FsPermission;
      67: goto          92
      70: aload         14
      72: ifnull        85
      75: aload_0
      76: invokestatic  #24                 // Method org/apache/hadoop/fs/permission/FsPermission.getDefault:()Lorg/apache/hadoop/fs/permission/FsPermission;
      79: putfield      #22                 // Field permission:Lorg/apache/hadoop/fs/permission/FsPermission;
      82: goto          92
      85: aload_0
      86: invokestatic  #25                 // Method org/apache/hadoop/fs/permission/FsPermission.getFileDefault:()Lorg/apache/hadoop/fs/permission/FsPermission;
      89: putfield      #22                 // Field permission:Lorg/apache/hadoop/fs/permission/FsPermission;
      92: aload_0
      93: aload         12
      95: ifnonnull     103
      98: ldc           #26                 // String
     100: goto          105
     103: aload         12
     105: putfield      #27                 // Field owner:Ljava/lang/String;
     108: aload_0
     109: aload         13
     111: ifnonnull     119
     114: ldc           #26                 // String
     116: goto          121
     119: aload         13
     121: putfield      #28                 // Field group:Ljava/lang/String;
     124: aload_0
     125: aload         14
     127: putfield      #29                 // Field symlink:Lorg/apache/hadoop/fs/Path;
     130: aload_0
     131: aload         15
     133: putfield      #30                 // Field path:Lorg/apache/hadoop/fs/Path;
     136: aload_0
     137: aload         16
     139: putfield      #31                 // Field attr:Ljava/util/Set;
     142: getstatic     #32                 // Field $assertionsDisabled:Z
     145: ifne          169
     148: iload_3
     149: ifeq          157
     152: aload         14
     154: ifnull        169
     157: iload_3
     158: ifeq          169
     161: new           #33                 // class java/lang/AssertionError
     164: dup
     165: invokespecial #34                 // Method java/lang/AssertionError."<init>":()V
     168: athrow
     169: return

  public org.apache.hadoop.fs.FileStatus(org.apache.hadoop.fs.FileStatus) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #35                 // Method getLen:()J
       5: aload_1
       6: invokevirtual #36                 // Method isDirectory:()Z
       9: aload_1
      10: invokevirtual #37                 // Method getReplication:()S
      13: aload_1
      14: invokevirtual #38                 // Method getBlockSize:()J
      17: aload_1
      18: invokevirtual #39                 // Method getModificationTime:()J
      21: aload_1
      22: invokevirtual #40                 // Method getAccessTime:()J
      25: aload_1
      26: invokevirtual #41                 // Method getPermission:()Lorg/apache/hadoop/fs/permission/FsPermission;
      29: aload_1
      30: invokevirtual #42                 // Method getOwner:()Ljava/lang/String;
      33: aload_1
      34: invokevirtual #43                 // Method getGroup:()Ljava/lang/String;
      37: aload_1
      38: invokevirtual #44                 // Method isSymlink:()Z
      41: ifeq          51
      44: aload_1
      45: invokevirtual #45                 // Method getSymlink:()Lorg/apache/hadoop/fs/Path;
      48: goto          52
      51: aconst_null
      52: aload_1
      53: invokevirtual #46                 // Method getPath:()Lorg/apache/hadoop/fs/Path;
      56: invokespecial #10                 // Method "<init>":(JZIJJJLorg/apache/hadoop/fs/permission/FsPermission;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
      59: return

  public long getLen();
    Code:
       0: aload_0
       1: getfield      #15                 // Field length:J
       4: lreturn

  public boolean isFile();
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method isDirectory:()Z
       4: ifne          18
       7: aload_0
       8: invokevirtual #44                 // Method isSymlink:()Z
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public boolean isDirectory();
    Code:
       0: aload_0
       1: getfield      #17                 // Field isdir:Ljava/lang/Boolean;
       4: invokevirtual #47                 // Method java/lang/Boolean.booleanValue:()Z
       7: ireturn

  public final boolean isDir();
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method isDirectory:()Z
       4: ireturn

  public boolean isSymlink();
    Code:
       0: aload_0
       1: getfield      #29                 // Field symlink:Lorg/apache/hadoop/fs/Path;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public long getBlockSize();
    Code:
       0: aload_0
       1: getfield      #19                 // Field blocksize:J
       4: lreturn

  public short getReplication();
    Code:
       0: aload_0
       1: getfield      #18                 // Field block_replication:S
       4: ireturn

  public long getModificationTime();
    Code:
       0: aload_0
       1: getfield      #20                 // Field modification_time:J
       4: lreturn

  public long getAccessTime();
    Code:
       0: aload_0
       1: getfield      #21                 // Field access_time:J
       4: lreturn

  public org.apache.hadoop.fs.permission.FsPermission getPermission();
    Code:
       0: aload_0
       1: getfield      #22                 // Field permission:Lorg/apache/hadoop/fs/permission/FsPermission;
       4: areturn

  public boolean hasAcl();
    Code:
       0: aload_0
       1: getfield      #31                 // Field attr:Ljava/util/Set;
       4: getstatic     #4                  // Field org/apache/hadoop/fs/FileStatus$AttrFlags.HAS_ACL:Lorg/apache/hadoop/fs/FileStatus$AttrFlags;
       7: invokeinterface #48,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      12: ireturn

  public boolean isEncrypted();
    Code:
       0: aload_0
       1: getfield      #31                 // Field attr:Ljava/util/Set;
       4: getstatic     #6                  // Field org/apache/hadoop/fs/FileStatus$AttrFlags.HAS_CRYPT:Lorg/apache/hadoop/fs/FileStatus$AttrFlags;
       7: invokeinterface #48,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      12: ireturn

  public boolean isErasureCoded();
    Code:
       0: aload_0
       1: getfield      #31                 // Field attr:Ljava/util/Set;
       4: getstatic     #7                  // Field org/apache/hadoop/fs/FileStatus$AttrFlags.HAS_EC:Lorg/apache/hadoop/fs/FileStatus$AttrFlags;
       7: invokeinterface #48,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      12: ireturn

  public boolean isSnapshotEnabled();
    Code:
       0: aload_0
       1: getfield      #31                 // Field attr:Ljava/util/Set;
       4: getstatic     #8                  // Field org/apache/hadoop/fs/FileStatus$AttrFlags.SNAPSHOT_ENABLED:Lorg/apache/hadoop/fs/FileStatus$AttrFlags;
       7: invokeinterface #48,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      12: ireturn

  public java.lang.String getOwner();
    Code:
       0: aload_0
       1: getfield      #27                 // Field owner:Ljava/lang/String;
       4: areturn

  public java.lang.String getGroup();
    Code:
       0: aload_0
       1: getfield      #28                 // Field group:Ljava/lang/String;
       4: areturn

  public org.apache.hadoop.fs.Path getPath();
    Code:
       0: aload_0
       1: getfield      #30                 // Field path:Lorg/apache/hadoop/fs/Path;
       4: areturn

  public void setPath(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #30                 // Field path:Lorg/apache/hadoop/fs/Path;
       5: return

  protected void setPermission(org.apache.hadoop.fs.permission.FsPermission);
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     11
       5: invokestatic  #25                 // Method org/apache/hadoop/fs/permission/FsPermission.getFileDefault:()Lorg/apache/hadoop/fs/permission/FsPermission;
       8: goto          12
      11: aload_1
      12: putfield      #22                 // Field permission:Lorg/apache/hadoop/fs/permission/FsPermission;
      15: return

  protected void setOwner(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     10
       5: ldc           #26                 // String
       7: goto          11
      10: aload_1
      11: putfield      #27                 // Field owner:Ljava/lang/String;
      14: return

  protected void setGroup(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     10
       5: ldc           #26                 // String
       7: goto          11
      10: aload_1
      11: putfield      #28                 // Field group:Ljava/lang/String;
      14: return

  public org.apache.hadoop.fs.Path getSymlink() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method isSymlink:()Z
       4: ifne          42
       7: new           #49                 // class java/io/IOException
      10: dup
      11: new           #50                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #52                 // String Path
      20: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_0
      24: getfield      #30                 // Field path:Lorg/apache/hadoop/fs/Path;
      27: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      30: ldc           #55                 // String  is not a symbolic link
      32: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #57                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_0
      43: getfield      #29                 // Field symlink:Lorg/apache/hadoop/fs/Path;
      46: areturn

  public void setSymlink(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #29                 // Field symlink:Lorg/apache/hadoop/fs/Path;
       5: return

  public int compareTo(org.apache.hadoop.fs.FileStatus);
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method getPath:()Lorg/apache/hadoop/fs/Path;
       4: aload_1
       5: invokevirtual #46                 // Method getPath:()Lorg/apache/hadoop/fs/Path;
       8: invokevirtual #58                 // Method org/apache/hadoop/fs/Path.compareTo:(Lorg/apache/hadoop/fs/Path;)I
      11: ireturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #59                 // class org/apache/hadoop/fs/FileStatus
       4: astore_2
       5: aload_0
       6: aload_2
       7: invokevirtual #60                 // Method compareTo:(Lorg/apache/hadoop/fs/FileStatus;)I
      10: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #59                 // class org/apache/hadoop/fs/FileStatus
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: aload_1
      11: if_acmpne     16
      14: iconst_1
      15: ireturn
      16: aload_1
      17: checkcast     #59                 // class org/apache/hadoop/fs/FileStatus
      20: astore_2
      21: aload_0
      22: invokevirtual #46                 // Method getPath:()Lorg/apache/hadoop/fs/Path;
      25: aload_2
      26: invokevirtual #46                 // Method getPath:()Lorg/apache/hadoop/fs/Path;
      29: invokevirtual #61                 // Method org/apache/hadoop/fs/Path.equals:(Ljava/lang/Object;)Z
      32: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method getPath:()Lorg/apache/hadoop/fs/Path;
       4: invokevirtual #62                 // Method org/apache/hadoop/fs/Path.hashCode:()I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: new           #50                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokevirtual #63                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      13: invokevirtual #64                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      16: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: pop
      20: aload_1
      21: ldc           #65                 // String {
      23: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: pop
      27: aload_1
      28: new           #50                 // class java/lang/StringBuilder
      31: dup
      32: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
      35: ldc           #66                 // String path=
      37: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_0
      41: getfield      #30                 // Field path:Lorg/apache/hadoop/fs/Path;
      44: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      47: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: pop
      54: aload_1
      55: new           #50                 // class java/lang/StringBuilder
      58: dup
      59: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
      62: ldc           #67                 // String ; isDirectory=
      64: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: aload_0
      68: getfield      #17                 // Field isdir:Ljava/lang/Boolean;
      71: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      74: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      77: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: pop
      81: aload_0
      82: invokevirtual #36                 // Method isDirectory:()Z
      85: ifne          169
      88: aload_1
      89: new           #50                 // class java/lang/StringBuilder
      92: dup
      93: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
      96: ldc           #68                 // String ; length=
      98: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: aload_0
     102: getfield      #15                 // Field length:J
     105: invokevirtual #69                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     108: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     111: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: pop
     115: aload_1
     116: new           #50                 // class java/lang/StringBuilder
     119: dup
     120: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
     123: ldc           #70                 // String ; replication=
     125: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: aload_0
     129: getfield      #18                 // Field block_replication:S
     132: invokevirtual #71                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     135: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     138: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: pop
     142: aload_1
     143: new           #50                 // class java/lang/StringBuilder
     146: dup
     147: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
     150: ldc           #72                 // String ; blocksize=
     152: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     155: aload_0
     156: getfield      #19                 // Field blocksize:J
     159: invokevirtual #69                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     162: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     165: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     168: pop
     169: aload_1
     170: new           #50                 // class java/lang/StringBuilder
     173: dup
     174: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
     177: ldc           #73                 // String ; modification_time=
     179: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     182: aload_0
     183: getfield      #20                 // Field modification_time:J
     186: invokevirtual #69                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     189: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     192: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     195: pop
     196: aload_1
     197: new           #50                 // class java/lang/StringBuilder
     200: dup
     201: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
     204: ldc           #74                 // String ; access_time=
     206: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     209: aload_0
     210: getfield      #21                 // Field access_time:J
     213: invokevirtual #69                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     216: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     219: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     222: pop
     223: aload_1
     224: new           #50                 // class java/lang/StringBuilder
     227: dup
     228: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
     231: ldc           #75                 // String ; owner=
     233: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     236: aload_0
     237: getfield      #27                 // Field owner:Ljava/lang/String;
     240: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     243: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     246: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     249: pop
     250: aload_1
     251: new           #50                 // class java/lang/StringBuilder
     254: dup
     255: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
     258: ldc           #76                 // String ; group=
     260: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     263: aload_0
     264: getfield      #28                 // Field group:Ljava/lang/String;
     267: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     270: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     273: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     276: pop
     277: aload_1
     278: new           #50                 // class java/lang/StringBuilder
     281: dup
     282: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
     285: ldc           #77                 // String ; permission=
     287: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     290: aload_0
     291: getfield      #22                 // Field permission:Lorg/apache/hadoop/fs/permission/FsPermission;
     294: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     297: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     300: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     303: pop
     304: aload_1
     305: new           #50                 // class java/lang/StringBuilder
     308: dup
     309: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
     312: ldc           #78                 // String ; isSymlink=
     314: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     317: aload_0
     318: invokevirtual #44                 // Method isSymlink:()Z
     321: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     324: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     327: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     330: pop
     331: aload_0
     332: invokevirtual #44                 // Method isSymlink:()Z
     335: ifeq          380
     338: aload_1
     339: new           #50                 // class java/lang/StringBuilder
     342: dup
     343: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
     346: ldc           #80                 // String ; symlink=
     348: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     351: aload_0
     352: invokevirtual #45                 // Method getSymlink:()Lorg/apache/hadoop/fs/Path;
     355: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     358: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     361: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     364: pop
     365: goto          380
     368: astore_2
     369: new           #81                 // class java/lang/RuntimeException
     372: dup
     373: ldc           #82                 // String Unexpected exception
     375: aload_2
     376: invokespecial #83                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     379: athrow
     380: aload_1
     381: new           #50                 // class java/lang/StringBuilder
     384: dup
     385: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
     388: ldc           #84                 // String ; hasAcl=
     390: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     393: aload_0
     394: invokevirtual #85                 // Method hasAcl:()Z
     397: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     400: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     403: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     406: pop
     407: aload_1
     408: new           #50                 // class java/lang/StringBuilder
     411: dup
     412: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
     415: ldc           #86                 // String ; isEncrypted=
     417: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     420: aload_0
     421: invokevirtual #87                 // Method isEncrypted:()Z
     424: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     427: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     430: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     433: pop
     434: aload_1
     435: new           #50                 // class java/lang/StringBuilder
     438: dup
     439: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
     442: ldc           #88                 // String ; isErasureCoded=
     444: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     447: aload_0
     448: invokevirtual #89                 // Method isErasureCoded:()Z
     451: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     454: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     457: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     460: pop
     461: aload_1
     462: ldc           #90                 // String }
     464: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     467: pop
     468: aload_1
     469: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     472: areturn
    Exception table:
       from    to  target type
         338   365   368   Class java/io/IOException

  public void readFields(java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokeinterface #91,  1           // InterfaceMethod java/io/DataInput.readInt:()I
       6: istore_2
       7: iload_2
       8: ifge          38
      11: new           #49                 // class java/io/IOException
      14: dup
      15: new           #50                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #92                 // String Can\'t read FileStatusProto with negative size of
      24: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: iload_2
      28: invokevirtual #71                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #57                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: iload_2
      39: newarray       byte
      41: astore_3
      42: aload_1
      43: aload_3
      44: invokeinterface #93,  2           // InterfaceMethod java/io/DataInput.readFully:([B)V
      49: aload_3
      50: invokestatic  #94                 // Method org/apache/hadoop/fs/FSProtos$FileStatusProto.parseFrom:([B)Lorg/apache/hadoop/fs/FSProtos$FileStatusProto;
      53: astore        4
      55: aload         4
      57: invokestatic  #95                 // Method org/apache/hadoop/fs/protocolPB/PBHelper.convert:(Lorg/apache/hadoop/fs/FSProtos$FileStatusProto;)Lorg/apache/hadoop/fs/FileStatus;
      60: astore        5
      62: aload_0
      63: aload         5
      65: invokevirtual #36                 // Method isDirectory:()Z
      68: invokestatic  #16                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      71: putfield      #17                 // Field isdir:Ljava/lang/Boolean;
      74: aload_0
      75: aload         5
      77: invokevirtual #35                 // Method getLen:()J
      80: putfield      #15                 // Field length:J
      83: aload_0
      84: aload         5
      86: invokevirtual #37                 // Method getReplication:()S
      89: putfield      #18                 // Field block_replication:S
      92: aload_0
      93: aload         5
      95: invokevirtual #38                 // Method getBlockSize:()J
      98: putfield      #19                 // Field blocksize:J
     101: aload_0
     102: aload         5
     104: invokevirtual #39                 // Method getModificationTime:()J
     107: putfield      #20                 // Field modification_time:J
     110: aload_0
     111: aload         5
     113: invokevirtual #40                 // Method getAccessTime:()J
     116: putfield      #21                 // Field access_time:J
     119: aload_0
     120: aload         5
     122: invokevirtual #41                 // Method getPermission:()Lorg/apache/hadoop/fs/permission/FsPermission;
     125: invokevirtual #96                 // Method setPermission:(Lorg/apache/hadoop/fs/permission/FsPermission;)V
     128: aload_0
     129: aload         5
     131: invokevirtual #42                 // Method getOwner:()Ljava/lang/String;
     134: invokevirtual #97                 // Method setOwner:(Ljava/lang/String;)V
     137: aload_0
     138: aload         5
     140: invokevirtual #43                 // Method getGroup:()Ljava/lang/String;
     143: invokevirtual #98                 // Method setGroup:(Ljava/lang/String;)V
     146: aload_0
     147: aload         5
     149: invokevirtual #44                 // Method isSymlink:()Z
     152: ifeq          163
     155: aload         5
     157: invokevirtual #45                 // Method getSymlink:()Lorg/apache/hadoop/fs/Path;
     160: goto          164
     163: aconst_null
     164: invokevirtual #99                 // Method setSymlink:(Lorg/apache/hadoop/fs/Path;)V
     167: aload_0
     168: aload         5
     170: invokevirtual #46                 // Method getPath:()Lorg/apache/hadoop/fs/Path;
     173: invokevirtual #100                // Method setPath:(Lorg/apache/hadoop/fs/Path;)V
     176: aload_0
     177: aload         5
     179: invokevirtual #85                 // Method hasAcl:()Z
     182: aload         5
     184: invokevirtual #87                 // Method isEncrypted:()Z
     187: aload         5
     189: invokevirtual #89                 // Method isErasureCoded:()Z
     192: aload         5
     194: invokevirtual #101                // Method isSnapshotEnabled:()Z
     197: invokestatic  #12                 // Method attributes:(ZZZZ)Ljava/util/Set;
     200: putfield      #31                 // Field attr:Ljava/util/Set;
     203: getstatic     #32                 // Field $assertionsDisabled:Z
     206: ifne          233
     209: aload_0
     210: invokevirtual #36                 // Method isDirectory:()Z
     213: ifeq          233
     216: aload_0
     217: invokevirtual #44                 // Method isSymlink:()Z
     220: ifeq          233
     223: new           #33                 // class java/lang/AssertionError
     226: dup
     227: ldc           #102                // String A directory cannot be a symlink
     229: invokespecial #103                // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     232: athrow
     233: return

  public void write(java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #104                // Method org/apache/hadoop/fs/protocolPB/PBHelper.convert:(Lorg/apache/hadoop/fs/FileStatus;)Lorg/apache/hadoop/fs/FSProtos$FileStatusProto;
       4: astore_2
       5: aload_2
       6: invokevirtual #105                // Method org/apache/hadoop/fs/FSProtos$FileStatusProto.getSerializedSize:()I
       9: istore_3
      10: aload_1
      11: iload_3
      12: invokeinterface #106,  2          // InterfaceMethod java/io/DataOutput.writeInt:(I)V
      17: aload_1
      18: aload_2
      19: invokevirtual #107                // Method org/apache/hadoop/fs/FSProtos$FileStatusProto.toByteArray:()[B
      22: invokeinterface #108,  2          // InterfaceMethod java/io/DataOutput.write:([B)V
      27: return

  public void validateObject() throws java.io.InvalidObjectException;
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #30                 // Field path:Lorg/apache/hadoop/fs/Path;
       5: if_acmpne     18
       8: new           #109                // class java/io/InvalidObjectException
      11: dup
      12: ldc           #110                // String No Path in deserialized FileStatus
      14: invokespecial #111                // Method java/io/InvalidObjectException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aconst_null
      19: aload_0
      20: getfield      #17                 // Field isdir:Ljava/lang/Boolean;
      23: if_acmpne     36
      26: new           #109                // class java/io/InvalidObjectException
      29: dup
      30: ldc           #112                // String No type in deserialized FileStatus
      32: invokespecial #111                // Method java/io/InvalidObjectException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: return

  static {};
    Code:
       0: ldc           #59                 // class org/apache/hadoop/fs/FileStatus
       2: invokevirtual #113                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #32                 // Field $assertionsDisabled:Z
      16: invokestatic  #114                // Method java/util/Collections.emptySet:()Ljava/util/Set;
      19: putstatic     #1                  // Field NONE:Ljava/util/Set;
      22: return
}
