Compiled from "BZip2Codec.java"
public class org.apache.hadoop.io.compress.BZip2Codec implements org.apache.hadoop.conf.Configurable,org.apache.hadoop.io.compress.SplittableCompressionCodec {
  private static final java.lang.String HEADER;

  private static final int HEADER_LEN;

  private static final java.lang.String SUB_HEADER;

  private static final int SUB_HEADER_LEN;

  private org.apache.hadoop.conf.Configuration conf;

  public void setConf(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       5: return

  public org.apache.hadoop.conf.Configuration getConf();
    Code:
       0: aload_0
       1: getfield      #4                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       4: areturn

  public org.apache.hadoop.io.compress.BZip2Codec();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: return

  public org.apache.hadoop.io.compress.CompressionOutputStream createOutputStream(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       5: aload_1
       6: invokestatic  #6                  // Method org/apache/hadoop/io/compress/CompressionCodec$Util.createOutputStreamWithCodecPool:(Lorg/apache/hadoop/io/compress/CompressionCodec;Lorg/apache/hadoop/conf/Configuration;Ljava/io/OutputStream;)Lorg/apache/hadoop/io/compress/CompressionOutputStream;
       9: areturn

  public org.apache.hadoop.io.compress.CompressionOutputStream createOutputStream(java.io.OutputStream, org.apache.hadoop.io.compress.Compressor) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       4: invokestatic  #7                  // Method org/apache/hadoop/io/compress/bzip2/Bzip2Factory.isNativeBzip2Loaded:(Lorg/apache/hadoop/conf/Configuration;)Z
       7: ifeq          34
      10: new           #8                  // class org/apache/hadoop/io/compress/CompressorStream
      13: dup
      14: aload_1
      15: aload_2
      16: aload_0
      17: getfield      #4                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      20: ldc           #9                  // String io.file.buffer.size
      22: sipush        4096
      25: invokevirtual #10                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      28: invokespecial #11                 // Method org/apache/hadoop/io/compress/CompressorStream."<init>":(Ljava/io/OutputStream;Lorg/apache/hadoop/io/compress/Compressor;I)V
      31: goto          42
      34: new           #12                 // class org/apache/hadoop/io/compress/BZip2Codec$BZip2CompressionOutputStream
      37: dup
      38: aload_1
      39: invokespecial #13                 // Method org/apache/hadoop/io/compress/BZip2Codec$BZip2CompressionOutputStream."<init>":(Ljava/io/OutputStream;)V
      42: areturn

  public java.lang.Class<? extends org.apache.hadoop.io.compress.Compressor> getCompressorType();
    Code:
       0: aload_0
       1: getfield      #4                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       4: invokestatic  #14                 // Method org/apache/hadoop/io/compress/bzip2/Bzip2Factory.getBzip2CompressorType:(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;
       7: areturn

  public org.apache.hadoop.io.compress.Compressor createCompressor();
    Code:
       0: aload_0
       1: getfield      #4                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       4: invokestatic  #15                 // Method org/apache/hadoop/io/compress/bzip2/Bzip2Factory.getBzip2Compressor:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/io/compress/Compressor;
       7: areturn

  public org.apache.hadoop.io.compress.CompressionInputStream createInputStream(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       5: aload_1
       6: invokestatic  #16                 // Method org/apache/hadoop/io/compress/CompressionCodec$Util.createInputStreamWithCodecPool:(Lorg/apache/hadoop/io/compress/CompressionCodec;Lorg/apache/hadoop/conf/Configuration;Ljava/io/InputStream;)Lorg/apache/hadoop/io/compress/CompressionInputStream;
       9: areturn

  public org.apache.hadoop.io.compress.CompressionInputStream createInputStream(java.io.InputStream, org.apache.hadoop.io.compress.Decompressor) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       4: invokestatic  #7                  // Method org/apache/hadoop/io/compress/bzip2/Bzip2Factory.isNativeBzip2Loaded:(Lorg/apache/hadoop/conf/Configuration;)Z
       7: ifeq          34
      10: new           #17                 // class org/apache/hadoop/io/compress/DecompressorStream
      13: dup
      14: aload_1
      15: aload_2
      16: aload_0
      17: getfield      #4                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      20: ldc           #9                  // String io.file.buffer.size
      22: sipush        4096
      25: invokevirtual #10                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      28: invokespecial #18                 // Method org/apache/hadoop/io/compress/DecompressorStream."<init>":(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/Decompressor;I)V
      31: goto          49
      34: new           #19                 // class org/apache/hadoop/io/compress/BZip2Codec$BZip2CompressionInputStream
      37: dup
      38: aload_1
      39: lconst_0
      40: ldc2_w        #21                 // long 9223372036854775807l
      43: getstatic     #23                 // Field org/apache/hadoop/io/compress/SplittableCompressionCodec$READ_MODE.BYBLOCK:Lorg/apache/hadoop/io/compress/SplittableCompressionCodec$READ_MODE;
      46: invokespecial #24                 // Method org/apache/hadoop/io/compress/BZip2Codec$BZip2CompressionInputStream."<init>":(Ljava/io/InputStream;JJLorg/apache/hadoop/io/compress/SplittableCompressionCodec$READ_MODE;)V
      49: areturn

  public org.apache.hadoop.io.compress.SplitCompressionInputStream createInputStream(java.io.InputStream, org.apache.hadoop.io.compress.Decompressor, long, long, org.apache.hadoop.io.compress.SplittableCompressionCodec$READ_MODE) throws java.io.IOException;
    Code:
       0: aload_1
       1: instanceof    #25                 // class org/apache/hadoop/fs/Seekable
       4: ifne          38
       7: new           #26                 // class java/io/IOException
      10: dup
      11: new           #27                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #29                 // String seekableIn must be an instance of
      20: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: ldc           #25                 // class org/apache/hadoop/fs/Seekable
      25: invokevirtual #31                 // Method java/lang/Class.getName:()Ljava/lang/String;
      28: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #33                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_1
      39: checkcast     #25                 // class org/apache/hadoop/fs/Seekable
      42: lload_3
      43: invokeinterface #34,  3           // InterfaceMethod org/apache/hadoop/fs/Seekable.seek:(J)V
      48: new           #19                 // class org/apache/hadoop/io/compress/BZip2Codec$BZip2CompressionInputStream
      51: dup
      52: aload_1
      53: lload_3
      54: lload         5
      56: aload         7
      58: invokespecial #24                 // Method org/apache/hadoop/io/compress/BZip2Codec$BZip2CompressionInputStream."<init>":(Ljava/io/InputStream;JJLorg/apache/hadoop/io/compress/SplittableCompressionCodec$READ_MODE;)V
      61: areturn

  public java.lang.Class<? extends org.apache.hadoop.io.compress.Decompressor> getDecompressorType();
    Code:
       0: aload_0
       1: getfield      #4                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       4: invokestatic  #35                 // Method org/apache/hadoop/io/compress/bzip2/Bzip2Factory.getBzip2DecompressorType:(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;
       7: areturn

  public org.apache.hadoop.io.compress.Decompressor createDecompressor();
    Code:
       0: aload_0
       1: getfield      #4                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       4: invokestatic  #36                 // Method org/apache/hadoop/io/compress/bzip2/Bzip2Factory.getBzip2Decompressor:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/io/compress/Decompressor;
       7: areturn

  public java.lang.String getDefaultExtension();
    Code:
       0: ldc           #38                 // String .bz2
       2: areturn

  static int access$000();
    Code:
       0: getstatic     #3                  // Field HEADER_LEN:I
       3: ireturn

  static int access$100();
    Code:
       0: getstatic     #2                  // Field SUB_HEADER_LEN:I
       3: ireturn

  static {};
    Code:
       0: ldc           #40                 // String BZ
       2: invokevirtual #41                 // Method java/lang/String.length:()I
       5: putstatic     #3                  // Field HEADER_LEN:I
       8: ldc           #42                 // String h9
      10: invokevirtual #41                 // Method java/lang/String.length:()I
      13: putstatic     #2                  // Field SUB_HEADER_LEN:I
      16: return
}
