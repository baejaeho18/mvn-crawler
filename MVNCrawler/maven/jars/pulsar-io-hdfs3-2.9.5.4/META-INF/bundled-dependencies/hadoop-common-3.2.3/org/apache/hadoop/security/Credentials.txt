Compiled from "Credentials.java"
public class org.apache.hadoop.security.Credentials implements org.apache.hadoop.io.Writable {
  private static final org.slf4j.Logger LOG;

  private java.util.Map<org.apache.hadoop.io.Text, byte[]> secretKeysMap;

  private java.util.Map<org.apache.hadoop.io.Text, org.apache.hadoop.security.token.Token<? extends org.apache.hadoop.security.token.TokenIdentifier>> tokenMap;

  private static final byte[] TOKEN_STORAGE_MAGIC;

  public org.apache.hadoop.security.Credentials();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field secretKeysMap:Ljava/util/Map;
      15: aload_0
      16: new           #2                  // class java/util/HashMap
      19: dup
      20: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      23: putfield      #5                  // Field tokenMap:Ljava/util/Map;
      26: return

  public org.apache.hadoop.security.Credentials(org.apache.hadoop.security.Credentials);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field secretKeysMap:Ljava/util/Map;
      15: aload_0
      16: new           #2                  // class java/util/HashMap
      19: dup
      20: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      23: putfield      #5                  // Field tokenMap:Ljava/util/Map;
      26: aload_0
      27: aload_1
      28: invokevirtual #6                  // Method addAll:(Lorg/apache/hadoop/security/Credentials;)V
      31: return

  public org.apache.hadoop.security.token.Token<? extends org.apache.hadoop.security.token.TokenIdentifier> getToken(org.apache.hadoop.io.Text);
    Code:
       0: aload_0
       1: getfield      #5                  // Field tokenMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #7,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #8                  // class org/apache/hadoop/security/token/Token
      13: areturn

  public void addToken(org.apache.hadoop.io.Text, org.apache.hadoop.security.token.Token<? extends org.apache.hadoop.security.token.TokenIdentifier>);
    Code:
       0: aload_2
       1: ifnonnull     34
       4: getstatic     #9                  // Field LOG:Lorg/slf4j/Logger;
       7: new           #10                 // class java/lang/StringBuilder
      10: dup
      11: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      14: ldc           #12                 // String Null token ignored for
      16: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_1
      20: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      23: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: invokeinterface #16,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      31: goto          151
      34: aload_0
      35: getfield      #5                  // Field tokenMap:Ljava/util/Map;
      38: aload_1
      39: aload_2
      40: invokeinterface #17,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      45: ifnull        151
      48: new           #2                  // class java/util/HashMap
      51: dup
      52: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      55: astore_3
      56: aload_0
      57: getfield      #5                  // Field tokenMap:Ljava/util/Map;
      60: invokeinterface #18,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      65: invokeinterface #19,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      70: astore        4
      72: aload         4
      74: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      79: ifeq          141
      82: aload         4
      84: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      89: checkcast     #22                 // class java/util/Map$Entry
      92: astore        5
      94: aload         5
      96: invokeinterface #23,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     101: checkcast     #8                  // class org/apache/hadoop/security/token/Token
     104: astore        6
     106: aload         6
     108: aload_1
     109: invokevirtual #24                 // Method org/apache/hadoop/security/token/Token.isPrivateCloneOf:(Lorg/apache/hadoop/io/Text;)Z
     112: ifeq          138
     115: aload_3
     116: aload         5
     118: invokeinterface #25,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     123: aload_2
     124: aload         6
     126: invokevirtual #26                 // Method org/apache/hadoop/security/token/Token.getService:()Lorg/apache/hadoop/io/Text;
     129: invokevirtual #27                 // Method org/apache/hadoop/security/token/Token.privateClone:(Lorg/apache/hadoop/io/Text;)Lorg/apache/hadoop/security/token/Token;
     132: invokeinterface #17,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     137: pop
     138: goto          72
     141: aload_0
     142: getfield      #5                  // Field tokenMap:Ljava/util/Map;
     145: aload_3
     146: invokeinterface #28,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
     151: return

  public java.util.Collection<org.apache.hadoop.security.token.Token<? extends org.apache.hadoop.security.token.TokenIdentifier>> getAllTokens();
    Code:
       0: aload_0
       1: getfield      #5                  // Field tokenMap:Ljava/util/Map;
       4: invokeinterface #29,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: areturn

  public java.util.Map<org.apache.hadoop.io.Text, org.apache.hadoop.security.token.Token<? extends org.apache.hadoop.security.token.TokenIdentifier>> getTokenMap();
    Code:
       0: aload_0
       1: getfield      #5                  // Field tokenMap:Ljava/util/Map;
       4: invokestatic  #30                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
       7: areturn

  public int numberOfTokens();
    Code:
       0: aload_0
       1: getfield      #5                  // Field tokenMap:Ljava/util/Map;
       4: invokeinterface #31,  1           // InterfaceMethod java/util/Map.size:()I
       9: ireturn

  public byte[] getSecretKey(org.apache.hadoop.io.Text);
    Code:
       0: aload_0
       1: getfield      #4                  // Field secretKeysMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #7,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #32                 // class "[B"
      13: areturn

  public int numberOfSecretKeys();
    Code:
       0: aload_0
       1: getfield      #4                  // Field secretKeysMap:Ljava/util/Map;
       4: invokeinterface #31,  1           // InterfaceMethod java/util/Map.size:()I
       9: ireturn

  public void addSecretKey(org.apache.hadoop.io.Text, byte[]);
    Code:
       0: aload_0
       1: getfield      #4                  // Field secretKeysMap:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #17,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public void removeSecretKey(org.apache.hadoop.io.Text);
    Code:
       0: aload_0
       1: getfield      #4                  // Field secretKeysMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #33,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: return

  public java.util.List<org.apache.hadoop.io.Text> getAllSecretKeys();
    Code:
       0: new           #34                 // class java/util/ArrayList
       3: dup
       4: invokespecial #35                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #4                  // Field secretKeysMap:Ljava/util/Map;
      13: invokeinterface #36,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      18: invokeinterface #37,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      23: pop
      24: aload_1
      25: areturn

  public java.util.Map<org.apache.hadoop.io.Text, byte[]> getSecretKeyMap();
    Code:
       0: aload_0
       1: getfield      #4                  // Field secretKeysMap:Ljava/util/Map;
       4: invokestatic  #30                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
       7: areturn

  public static org.apache.hadoop.security.Credentials readTokenStorageFile(org.apache.hadoop.fs.Path, org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_2
       2: new           #38                 // class org/apache/hadoop/security/Credentials
       5: dup
       6: invokespecial #39                 // Method "<init>":()V
       9: astore_3
      10: aload_0
      11: aload_1
      12: invokevirtual #40                 // Method org/apache/hadoop/fs/Path.getFileSystem:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
      15: aload_0
      16: invokevirtual #41                 // Method org/apache/hadoop/fs/FileSystem.open:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FSDataInputStream;
      19: astore_2
      20: aload_3
      21: aload_2
      22: invokevirtual #42                 // Method readTokenStorageStream:(Ljava/io/DataInputStream;)V
      25: aload_2
      26: invokevirtual #43                 // Method org/apache/hadoop/fs/FSDataInputStream.close:()V
      29: aload_3
      30: astore        4
      32: getstatic     #9                  // Field LOG:Lorg/slf4j/Logger;
      35: iconst_1
      36: anewarray     #44                 // class java/io/Closeable
      39: dup
      40: iconst_0
      41: aload_2
      42: aastore
      43: invokestatic  #45                 // Method org/apache/hadoop/io/IOUtils.cleanupWithLogger:(Lorg/slf4j/Logger;[Ljava/io/Closeable;)V
      46: aload         4
      48: areturn
      49: astore        4
      51: aload_0
      52: invokevirtual #47                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
      55: ldc           #48                 // String Credentials.readTokenStorageFile
      57: aload         4
      59: invokestatic  #49                 // Method org/apache/hadoop/io/IOUtils.wrapException:(Ljava/lang/String;Ljava/lang/String;Ljava/io/IOException;)Ljava/io/IOException;
      62: athrow
      63: astore        5
      65: getstatic     #9                  // Field LOG:Lorg/slf4j/Logger;
      68: iconst_1
      69: anewarray     #44                 // class java/io/Closeable
      72: dup
      73: iconst_0
      74: aload_2
      75: aastore
      76: invokestatic  #45                 // Method org/apache/hadoop/io/IOUtils.cleanupWithLogger:(Lorg/slf4j/Logger;[Ljava/io/Closeable;)V
      79: aload         5
      81: athrow
    Exception table:
       from    to  target type
          10    32    49   Class java/io/IOException
          10    32    63   any
          49    65    63   any

  public static org.apache.hadoop.security.Credentials readTokenStorageFile(java.io.File, org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_2
       2: new           #38                 // class org/apache/hadoop/security/Credentials
       5: dup
       6: invokespecial #39                 // Method "<init>":()V
       9: astore_3
      10: new           #50                 // class java/io/DataInputStream
      13: dup
      14: new           #51                 // class java/io/BufferedInputStream
      17: dup
      18: new           #52                 // class java/io/FileInputStream
      21: dup
      22: aload_0
      23: invokespecial #53                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      26: invokespecial #54                 // Method java/io/BufferedInputStream."<init>":(Ljava/io/InputStream;)V
      29: invokespecial #55                 // Method java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
      32: astore_2
      33: aload_3
      34: aload_2
      35: invokevirtual #42                 // Method readTokenStorageStream:(Ljava/io/DataInputStream;)V
      38: aload_3
      39: astore        4
      41: getstatic     #9                  // Field LOG:Lorg/slf4j/Logger;
      44: iconst_1
      45: anewarray     #44                 // class java/io/Closeable
      48: dup
      49: iconst_0
      50: aload_2
      51: aastore
      52: invokestatic  #45                 // Method org/apache/hadoop/io/IOUtils.cleanupWithLogger:(Lorg/slf4j/Logger;[Ljava/io/Closeable;)V
      55: aload         4
      57: areturn
      58: astore        4
      60: new           #46                 // class java/io/IOException
      63: dup
      64: new           #10                 // class java/lang/StringBuilder
      67: dup
      68: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      71: ldc           #56                 // String Exception reading
      73: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: aload_0
      77: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      80: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      83: aload         4
      85: invokespecial #57                 // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      88: athrow
      89: astore        5
      91: getstatic     #9                  // Field LOG:Lorg/slf4j/Logger;
      94: iconst_1
      95: anewarray     #44                 // class java/io/Closeable
      98: dup
      99: iconst_0
     100: aload_2
     101: aastore
     102: invokestatic  #45                 // Method org/apache/hadoop/io/IOUtils.cleanupWithLogger:(Lorg/slf4j/Logger;[Ljava/io/Closeable;)V
     105: aload         5
     107: athrow
    Exception table:
       from    to  target type
          10    41    58   Class java/io/IOException
          10    41    89   any
          58    91    89   any

  public void readTokenStorageStream(java.io.DataInputStream) throws java.io.IOException;
    Code:
       0: getstatic     #58                 // Field TOKEN_STORAGE_MAGIC:[B
       3: arraylength
       4: newarray       byte
       6: astore_2
       7: aload_1
       8: aload_2
       9: invokevirtual #59                 // Method java/io/DataInputStream.readFully:([B)V
      12: aload_2
      13: getstatic     #58                 // Field TOKEN_STORAGE_MAGIC:[B
      16: invokestatic  #60                 // Method java/util/Arrays.equals:([B[B)Z
      19: ifne          32
      22: new           #46                 // class java/io/IOException
      25: dup
      26: ldc           #61                 // String Bad header found in token storage.
      28: invokespecial #62                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: aload_1
      33: invokevirtual #63                 // Method java/io/DataInputStream.readByte:()B
      36: invokestatic  #64                 // Method org/apache/hadoop/security/Credentials$SerializedFormat.valueOf:(I)Lorg/apache/hadoop/security/Credentials$SerializedFormat;
      39: astore_3
      40: goto          55
      43: astore        4
      45: new           #46                 // class java/io/IOException
      48: dup
      49: aload         4
      51: invokespecial #66                 // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
      54: athrow
      55: getstatic     #67                 // Field org/apache/hadoop/security/Credentials$1.$SwitchMap$org$apache$hadoop$security$Credentials$SerializedFormat:[I
      58: aload_3
      59: invokevirtual #68                 // Method org/apache/hadoop/security/Credentials$SerializedFormat.ordinal:()I
      62: iaload
      63: lookupswitch  { // 2
                     1: 88
                     2: 96
               default: 104
          }
      88: aload_0
      89: aload_1
      90: invokevirtual #69                 // Method readFields:(Ljava/io/DataInput;)V
      93: goto          131
      96: aload_0
      97: aload_1
      98: invokevirtual #70                 // Method readProto:(Ljava/io/DataInput;)V
     101: goto          131
     104: new           #46                 // class java/io/IOException
     107: dup
     108: new           #10                 // class java/lang/StringBuilder
     111: dup
     112: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
     115: ldc           #71                 // String Unsupported format
     117: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: aload_3
     121: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     124: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     127: invokespecial #62                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     130: athrow
     131: return
    Exception table:
       from    to  target type
          32    40    43   Class java/lang/IllegalArgumentException

  public void writeTokenStorageToStream(java.io.DataOutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #72                 // Field org/apache/hadoop/security/Credentials$SerializedFormat.WRITABLE:Lorg/apache/hadoop/security/Credentials$SerializedFormat;
       5: invokevirtual #73                 // Method writeTokenStorageToStream:(Ljava/io/DataOutputStream;Lorg/apache/hadoop/security/Credentials$SerializedFormat;)V
       8: return

  public void writeTokenStorageToStream(java.io.DataOutputStream, org.apache.hadoop.security.Credentials$SerializedFormat) throws java.io.IOException;
    Code:
       0: getstatic     #67                 // Field org/apache/hadoop/security/Credentials$1.$SwitchMap$org$apache$hadoop$security$Credentials$SerializedFormat:[I
       3: aload_2
       4: invokevirtual #68                 // Method org/apache/hadoop/security/Credentials$SerializedFormat.ordinal:()I
       7: iaload
       8: lookupswitch  { // 2
                     1: 36
                     2: 44
               default: 52
          }
      36: aload_0
      37: aload_1
      38: invokespecial #74                 // Method writeWritableOutputStream:(Ljava/io/DataOutputStream;)V
      41: goto          79
      44: aload_0
      45: aload_1
      46: invokespecial #75                 // Method writeProtobufOutputStream:(Ljava/io/DataOutputStream;)V
      49: goto          79
      52: new           #65                 // class java/lang/IllegalArgumentException
      55: dup
      56: new           #10                 // class java/lang/StringBuilder
      59: dup
      60: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      63: ldc           #76                 // String Unsupported serialized format:
      65: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_2
      69: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      72: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: invokespecial #77                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      78: athrow
      79: return

  private void writeWritableOutputStream(java.io.DataOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: getstatic     #58                 // Field TOKEN_STORAGE_MAGIC:[B
       4: invokevirtual #78                 // Method java/io/DataOutputStream.write:([B)V
       7: aload_1
       8: getstatic     #72                 // Field org/apache/hadoop/security/Credentials$SerializedFormat.WRITABLE:Lorg/apache/hadoop/security/Credentials$SerializedFormat;
      11: getfield      #79                 // Field org/apache/hadoop/security/Credentials$SerializedFormat.value:B
      14: invokevirtual #80                 // Method java/io/DataOutputStream.write:(I)V
      17: aload_0
      18: aload_1
      19: invokevirtual #81                 // Method write:(Ljava/io/DataOutput;)V
      22: return

  private void writeProtobufOutputStream(java.io.DataOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: getstatic     #58                 // Field TOKEN_STORAGE_MAGIC:[B
       4: invokevirtual #78                 // Method java/io/DataOutputStream.write:([B)V
       7: aload_1
       8: getstatic     #82                 // Field org/apache/hadoop/security/Credentials$SerializedFormat.PROTOBUF:Lorg/apache/hadoop/security/Credentials$SerializedFormat;
      11: getfield      #79                 // Field org/apache/hadoop/security/Credentials$SerializedFormat.value:B
      14: invokevirtual #80                 // Method java/io/DataOutputStream.write:(I)V
      17: aload_0
      18: aload_1
      19: invokevirtual #83                 // Method writeProto:(Ljava/io/DataOutput;)V
      22: return

  public void writeTokenStorageFile(org.apache.hadoop.fs.Path, org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #72                 // Field org/apache/hadoop/security/Credentials$SerializedFormat.WRITABLE:Lorg/apache/hadoop/security/Credentials$SerializedFormat;
       6: invokevirtual #84                 // Method writeTokenStorageFile:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/security/Credentials$SerializedFormat;)V
       9: return

  public void writeTokenStorageFile(org.apache.hadoop.fs.Path, org.apache.hadoop.conf.Configuration, org.apache.hadoop.security.Credentials$SerializedFormat) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #40                 // Method org/apache/hadoop/fs/Path.getFileSystem:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
       5: aload_1
       6: invokevirtual #85                 // Method org/apache/hadoop/fs/FileSystem.create:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FSDataOutputStream;
       9: astore        4
      11: aconst_null
      12: astore        5
      14: aload_0
      15: aload         4
      17: aload_3
      18: invokevirtual #73                 // Method writeTokenStorageToStream:(Ljava/io/DataOutputStream;Lorg/apache/hadoop/security/Credentials$SerializedFormat;)V
      21: aload         4
      23: ifnull        108
      26: aload         5
      28: ifnull        51
      31: aload         4
      33: invokevirtual #86                 // Method org/apache/hadoop/fs/FSDataOutputStream.close:()V
      36: goto          108
      39: astore        6
      41: aload         5
      43: aload         6
      45: invokevirtual #88                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      48: goto          108
      51: aload         4
      53: invokevirtual #86                 // Method org/apache/hadoop/fs/FSDataOutputStream.close:()V
      56: goto          108
      59: astore        6
      61: aload         6
      63: astore        5
      65: aload         6
      67: athrow
      68: astore        7
      70: aload         4
      72: ifnull        105
      75: aload         5
      77: ifnull        100
      80: aload         4
      82: invokevirtual #86                 // Method org/apache/hadoop/fs/FSDataOutputStream.close:()V
      85: goto          105
      88: astore        8
      90: aload         5
      92: aload         8
      94: invokevirtual #88                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      97: goto          105
     100: aload         4
     102: invokevirtual #86                 // Method org/apache/hadoop/fs/FSDataOutputStream.close:()V
     105: aload         7
     107: athrow
     108: return
    Exception table:
       from    to  target type
          31    36    39   Class java/lang/Throwable
          14    21    59   Class java/lang/Throwable
          14    21    68   any
          80    85    88   Class java/lang/Throwable
          59    70    68   any

  public void write(java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #5                  // Field tokenMap:Ljava/util/Map;
       5: invokeinterface #31,  1           // InterfaceMethod java/util/Map.size:()I
      10: invokestatic  #89                 // Method org/apache/hadoop/io/WritableUtils.writeVInt:(Ljava/io/DataOutput;I)V
      13: aload_0
      14: getfield      #5                  // Field tokenMap:Ljava/util/Map;
      17: invokeinterface #18,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      22: invokeinterface #19,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      27: astore_2
      28: aload_2
      29: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          76
      37: aload_2
      38: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #22                 // class java/util/Map$Entry
      46: astore_3
      47: aload_3
      48: invokeinterface #25,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      53: checkcast     #90                 // class org/apache/hadoop/io/Text
      56: aload_1
      57: invokevirtual #91                 // Method org/apache/hadoop/io/Text.write:(Ljava/io/DataOutput;)V
      60: aload_3
      61: invokeinterface #23,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      66: checkcast     #8                  // class org/apache/hadoop/security/token/Token
      69: aload_1
      70: invokevirtual #92                 // Method org/apache/hadoop/security/token/Token.write:(Ljava/io/DataOutput;)V
      73: goto          28
      76: aload_1
      77: aload_0
      78: getfield      #4                  // Field secretKeysMap:Ljava/util/Map;
      81: invokeinterface #31,  1           // InterfaceMethod java/util/Map.size:()I
      86: invokestatic  #89                 // Method org/apache/hadoop/io/WritableUtils.writeVInt:(Ljava/io/DataOutput;I)V
      89: aload_0
      90: getfield      #4                  // Field secretKeysMap:Ljava/util/Map;
      93: invokeinterface #18,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      98: invokeinterface #19,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     103: astore_2
     104: aload_2
     105: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     110: ifeq          168
     113: aload_2
     114: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     119: checkcast     #22                 // class java/util/Map$Entry
     122: astore_3
     123: aload_3
     124: invokeinterface #25,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     129: checkcast     #90                 // class org/apache/hadoop/io/Text
     132: aload_1
     133: invokevirtual #91                 // Method org/apache/hadoop/io/Text.write:(Ljava/io/DataOutput;)V
     136: aload_1
     137: aload_3
     138: invokeinterface #23,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     143: checkcast     #32                 // class "[B"
     146: arraylength
     147: invokestatic  #89                 // Method org/apache/hadoop/io/WritableUtils.writeVInt:(Ljava/io/DataOutput;I)V
     150: aload_1
     151: aload_3
     152: invokeinterface #23,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     157: checkcast     #32                 // class "[B"
     160: invokeinterface #93,  2           // InterfaceMethod java/io/DataOutput.write:([B)V
     165: goto          104
     168: return

  void writeProto(java.io.DataOutput) throws java.io.IOException;
    Code:
       0: invokestatic  #94                 // Method org/apache/hadoop/security/proto/SecurityProtos$CredentialsProto.newBuilder:()Lorg/apache/hadoop/security/proto/SecurityProtos$CredentialsProto$Builder;
       3: astore_2
       4: aload_0
       5: getfield      #5                  // Field tokenMap:Ljava/util/Map;
       8: invokeinterface #18,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      13: invokeinterface #19,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      18: astore_3
      19: aload_3
      20: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          106
      28: aload_3
      29: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #22                 // class java/util/Map$Entry
      37: astore        4
      39: invokestatic  #95                 // Method org/apache/hadoop/security/proto/SecurityProtos$CredentialsKVProto.newBuilder:()Lorg/apache/hadoop/security/proto/SecurityProtos$CredentialsKVProto$Builder;
      42: aload         4
      44: invokeinterface #25,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      49: checkcast     #90                 // class org/apache/hadoop/io/Text
      52: invokevirtual #96                 // Method org/apache/hadoop/io/Text.getBytes:()[B
      55: iconst_0
      56: aload         4
      58: invokeinterface #25,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      63: checkcast     #90                 // class org/apache/hadoop/io/Text
      66: invokevirtual #97                 // Method org/apache/hadoop/io/Text.getLength:()I
      69: invokestatic  #98                 // Method com/google/protobuf/ByteString.copyFrom:([BII)Lcom/google/protobuf/ByteString;
      72: invokevirtual #99                 // Method org/apache/hadoop/security/proto/SecurityProtos$CredentialsKVProto$Builder.setAliasBytes:(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/security/proto/SecurityProtos$CredentialsKVProto$Builder;
      75: aload         4
      77: invokeinterface #23,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      82: checkcast     #8                  // class org/apache/hadoop/security/token/Token
      85: invokevirtual #100                // Method org/apache/hadoop/security/token/Token.toTokenProto:()Lorg/apache/hadoop/security/proto/SecurityProtos$TokenProto;
      88: invokevirtual #101                // Method org/apache/hadoop/security/proto/SecurityProtos$CredentialsKVProto$Builder.setToken:(Lorg/apache/hadoop/security/proto/SecurityProtos$TokenProto;)Lorg/apache/hadoop/security/proto/SecurityProtos$CredentialsKVProto$Builder;
      91: astore        5
      93: aload_2
      94: aload         5
      96: invokevirtual #102                // Method org/apache/hadoop/security/proto/SecurityProtos$CredentialsKVProto$Builder.build:()Lorg/apache/hadoop/security/proto/SecurityProtos$CredentialsKVProto;
      99: invokevirtual #103                // Method org/apache/hadoop/security/proto/SecurityProtos$CredentialsProto$Builder.addTokens:(Lorg/apache/hadoop/security/proto/SecurityProtos$CredentialsKVProto;)Lorg/apache/hadoop/security/proto/SecurityProtos$CredentialsProto$Builder;
     102: pop
     103: goto          19
     106: aload_0
     107: getfield      #4                  // Field secretKeysMap:Ljava/util/Map;
     110: invokeinterface #18,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     115: invokeinterface #19,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     120: astore_3
     121: aload_3
     122: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     127: ifeq          208
     130: aload_3
     131: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     136: checkcast     #22                 // class java/util/Map$Entry
     139: astore        4
     141: invokestatic  #95                 // Method org/apache/hadoop/security/proto/SecurityProtos$CredentialsKVProto.newBuilder:()Lorg/apache/hadoop/security/proto/SecurityProtos$CredentialsKVProto$Builder;
     144: aload         4
     146: invokeinterface #25,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     151: checkcast     #90                 // class org/apache/hadoop/io/Text
     154: invokevirtual #96                 // Method org/apache/hadoop/io/Text.getBytes:()[B
     157: iconst_0
     158: aload         4
     160: invokeinterface #25,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     165: checkcast     #90                 // class org/apache/hadoop/io/Text
     168: invokevirtual #97                 // Method org/apache/hadoop/io/Text.getLength:()I
     171: invokestatic  #98                 // Method com/google/protobuf/ByteString.copyFrom:([BII)Lcom/google/protobuf/ByteString;
     174: invokevirtual #99                 // Method org/apache/hadoop/security/proto/SecurityProtos$CredentialsKVProto$Builder.setAliasBytes:(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/security/proto/SecurityProtos$CredentialsKVProto$Builder;
     177: aload         4
     179: invokeinterface #23,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     184: checkcast     #32                 // class "[B"
     187: invokestatic  #104                // Method com/google/protobuf/ByteString.copyFrom:([B)Lcom/google/protobuf/ByteString;
     190: invokevirtual #105                // Method org/apache/hadoop/security/proto/SecurityProtos$CredentialsKVProto$Builder.setSecret:(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/security/proto/SecurityProtos$CredentialsKVProto$Builder;
     193: astore        5
     195: aload_2
     196: aload         5
     198: invokevirtual #102                // Method org/apache/hadoop/security/proto/SecurityProtos$CredentialsKVProto$Builder.build:()Lorg/apache/hadoop/security/proto/SecurityProtos$CredentialsKVProto;
     201: invokevirtual #106                // Method org/apache/hadoop/security/proto/SecurityProtos$CredentialsProto$Builder.addSecrets:(Lorg/apache/hadoop/security/proto/SecurityProtos$CredentialsKVProto;)Lorg/apache/hadoop/security/proto/SecurityProtos$CredentialsProto$Builder;
     204: pop
     205: goto          121
     208: aload_2
     209: invokevirtual #107                // Method org/apache/hadoop/security/proto/SecurityProtos$CredentialsProto$Builder.build:()Lorg/apache/hadoop/security/proto/SecurityProtos$CredentialsProto;
     212: aload_1
     213: checkcast     #108                // class java/io/DataOutputStream
     216: invokevirtual #109                // Method org/apache/hadoop/security/proto/SecurityProtos$CredentialsProto.writeDelimitedTo:(Ljava/io/OutputStream;)V
     219: return

  void readProto(java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_1
       1: checkcast     #50                 // class java/io/DataInputStream
       4: invokestatic  #110                // Method org/apache/hadoop/security/proto/SecurityProtos$CredentialsProto.parseDelimitedFrom:(Ljava/io/InputStream;)Lorg/apache/hadoop/security/proto/SecurityProtos$CredentialsProto;
       7: astore_2
       8: aload_2
       9: invokevirtual #111                // Method org/apache/hadoop/security/proto/SecurityProtos$CredentialsProto.getTokensList:()Ljava/util/List;
      12: invokeinterface #112,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      17: astore_3
      18: aload_3
      19: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          72
      27: aload_3
      28: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #113                // class org/apache/hadoop/security/proto/SecurityProtos$CredentialsKVProto
      36: astore        4
      38: aload_0
      39: new           #90                 // class org/apache/hadoop/io/Text
      42: dup
      43: aload         4
      45: invokevirtual #114                // Method org/apache/hadoop/security/proto/SecurityProtos$CredentialsKVProto.getAliasBytes:()Lcom/google/protobuf/ByteString;
      48: invokevirtual #115                // Method com/google/protobuf/ByteString.toByteArray:()[B
      51: invokespecial #116                // Method org/apache/hadoop/io/Text."<init>":([B)V
      54: new           #8                  // class org/apache/hadoop/security/token/Token
      57: dup
      58: aload         4
      60: invokevirtual #117                // Method org/apache/hadoop/security/proto/SecurityProtos$CredentialsKVProto.getToken:()Lorg/apache/hadoop/security/proto/SecurityProtos$TokenProto;
      63: invokespecial #118                // Method org/apache/hadoop/security/token/Token."<init>":(Lorg/apache/hadoop/security/proto/SecurityProtos$TokenProto;)V
      66: invokevirtual #119                // Method addToken:(Lorg/apache/hadoop/io/Text;Lorg/apache/hadoop/security/token/Token;)V
      69: goto          18
      72: aload_2
      73: invokevirtual #120                // Method org/apache/hadoop/security/proto/SecurityProtos$CredentialsProto.getSecretsList:()Ljava/util/List;
      76: invokeinterface #112,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      81: astore_3
      82: aload_3
      83: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      88: ifeq          132
      91: aload_3
      92: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      97: checkcast     #113                // class org/apache/hadoop/security/proto/SecurityProtos$CredentialsKVProto
     100: astore        4
     102: aload_0
     103: new           #90                 // class org/apache/hadoop/io/Text
     106: dup
     107: aload         4
     109: invokevirtual #114                // Method org/apache/hadoop/security/proto/SecurityProtos$CredentialsKVProto.getAliasBytes:()Lcom/google/protobuf/ByteString;
     112: invokevirtual #115                // Method com/google/protobuf/ByteString.toByteArray:()[B
     115: invokespecial #116                // Method org/apache/hadoop/io/Text."<init>":([B)V
     118: aload         4
     120: invokevirtual #121                // Method org/apache/hadoop/security/proto/SecurityProtos$CredentialsKVProto.getSecret:()Lcom/google/protobuf/ByteString;
     123: invokevirtual #115                // Method com/google/protobuf/ByteString.toByteArray:()[B
     126: invokevirtual #122                // Method addSecretKey:(Lorg/apache/hadoop/io/Text;[B)V
     129: goto          82
     132: return

  public void readFields(java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field secretKeysMap:Ljava/util/Map;
       4: invokeinterface #123,  1          // InterfaceMethod java/util/Map.clear:()V
       9: aload_0
      10: getfield      #5                  // Field tokenMap:Ljava/util/Map;
      13: invokeinterface #123,  1          // InterfaceMethod java/util/Map.clear:()V
      18: aload_1
      19: invokestatic  #124                // Method org/apache/hadoop/io/WritableUtils.readVInt:(Ljava/io/DataInput;)I
      22: istore_2
      23: iconst_0
      24: istore_3
      25: iload_3
      26: iload_2
      27: if_icmpge     80
      30: new           #90                 // class org/apache/hadoop/io/Text
      33: dup
      34: invokespecial #125                // Method org/apache/hadoop/io/Text."<init>":()V
      37: astore        4
      39: aload         4
      41: aload_1
      42: invokevirtual #126                // Method org/apache/hadoop/io/Text.readFields:(Ljava/io/DataInput;)V
      45: new           #8                  // class org/apache/hadoop/security/token/Token
      48: dup
      49: invokespecial #127                // Method org/apache/hadoop/security/token/Token."<init>":()V
      52: astore        5
      54: aload         5
      56: aload_1
      57: invokevirtual #128                // Method org/apache/hadoop/security/token/Token.readFields:(Ljava/io/DataInput;)V
      60: aload_0
      61: getfield      #5                  // Field tokenMap:Ljava/util/Map;
      64: aload         4
      66: aload         5
      68: invokeinterface #17,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      73: pop
      74: iinc          3, 1
      77: goto          25
      80: aload_1
      81: invokestatic  #124                // Method org/apache/hadoop/io/WritableUtils.readVInt:(Ljava/io/DataInput;)I
      84: istore_2
      85: iconst_0
      86: istore_3
      87: iload_3
      88: iload_2
      89: if_icmpge     147
      92: new           #90                 // class org/apache/hadoop/io/Text
      95: dup
      96: invokespecial #125                // Method org/apache/hadoop/io/Text."<init>":()V
      99: astore        4
     101: aload         4
     103: aload_1
     104: invokevirtual #126                // Method org/apache/hadoop/io/Text.readFields:(Ljava/io/DataInput;)V
     107: aload_1
     108: invokestatic  #124                // Method org/apache/hadoop/io/WritableUtils.readVInt:(Ljava/io/DataInput;)I
     111: istore        5
     113: iload         5
     115: newarray       byte
     117: astore        6
     119: aload_1
     120: aload         6
     122: invokeinterface #129,  2          // InterfaceMethod java/io/DataInput.readFully:([B)V
     127: aload_0
     128: getfield      #4                  // Field secretKeysMap:Ljava/util/Map;
     131: aload         4
     133: aload         6
     135: invokeinterface #17,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     140: pop
     141: iinc          3, 1
     144: goto          87
     147: return

  public void addAll(org.apache.hadoop.security.Credentials);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #130                // Method addAll:(Lorg/apache/hadoop/security/Credentials;Z)V
       6: return

  public void mergeAll(org.apache.hadoop.security.Credentials);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #130                // Method addAll:(Lorg/apache/hadoop/security/Credentials;Z)V
       6: return

  private void addAll(org.apache.hadoop.security.Credentials, boolean);
    Code:
       0: aload_1
       1: getfield      #4                  // Field secretKeysMap:Ljava/util/Map;
       4: invokeinterface #18,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: invokeinterface #19,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          87
      24: aload_3
      25: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #22                 // class java/util/Map$Entry
      33: astore        4
      35: aload         4
      37: invokeinterface #25,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      42: checkcast     #90                 // class org/apache/hadoop/io/Text
      45: astore        5
      47: aload_0
      48: getfield      #4                  // Field secretKeysMap:Ljava/util/Map;
      51: aload         5
      53: invokeinterface #131,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      58: ifeq          65
      61: iload_2
      62: ifeq          84
      65: aload_0
      66: getfield      #4                  // Field secretKeysMap:Ljava/util/Map;
      69: aload         5
      71: aload         4
      73: invokeinterface #23,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      78: invokeinterface #17,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      83: pop
      84: goto          15
      87: aload_1
      88: getfield      #5                  // Field tokenMap:Ljava/util/Map;
      91: invokeinterface #18,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      96: invokeinterface #19,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     101: astore_3
     102: aload_3
     103: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     108: ifeq          171
     111: aload_3
     112: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     117: checkcast     #22                 // class java/util/Map$Entry
     120: astore        4
     122: aload         4
     124: invokeinterface #25,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     129: checkcast     #90                 // class org/apache/hadoop/io/Text
     132: astore        5
     134: aload_0
     135: getfield      #5                  // Field tokenMap:Ljava/util/Map;
     138: aload         5
     140: invokeinterface #131,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     145: ifeq          152
     148: iload_2
     149: ifeq          168
     152: aload_0
     153: aload         5
     155: aload         4
     157: invokeinterface #23,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     162: checkcast     #8                  // class org/apache/hadoop/security/token/Token
     165: invokevirtual #119                // Method addToken:(Lorg/apache/hadoop/io/Text;Lorg/apache/hadoop/security/token/Token;)V
     168: goto          102
     171: return

  static {};
    Code:
       0: ldc           #38                 // class org/apache/hadoop/security/Credentials
       2: invokestatic  #132                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #9                  // Field LOG:Lorg/slf4j/Logger;
       8: ldc           #133                // String HDTS
      10: getstatic     #134                // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      13: invokevirtual #135                // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      16: putstatic     #58                 // Field TOKEN_STORAGE_MAGIC:[B
      19: return
}
