Compiled from "Mkdir.java"
class org.apache.hadoop.fs.shell.Mkdir extends org.apache.hadoop.fs.shell.FsCommand {
  public static final java.lang.String NAME;

  public static final java.lang.String USAGE;

  public static final java.lang.String DESCRIPTION;

  private boolean createParents;

  org.apache.hadoop.fs.shell.Mkdir();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/fs/shell/FsCommand."<init>":()V
       4: return

  public static void registerCommands(org.apache.hadoop.fs.shell.CommandFactory);
    Code:
       0: aload_0
       1: ldc           #2                  // class org/apache/hadoop/fs/shell/Mkdir
       3: iconst_1
       4: anewarray     #3                  // class java/lang/String
       7: dup
       8: iconst_0
       9: ldc           #4                  // String -mkdir
      11: aastore
      12: invokevirtual #5                  // Method org/apache/hadoop/fs/shell/CommandFactory.addClass:(Ljava/lang/Class;[Ljava/lang/String;)V
      15: return

  protected void processOptions(java.util.LinkedList<java.lang.String>);
    Code:
       0: new           #6                  // class org/apache/hadoop/fs/shell/CommandFormat
       3: dup
       4: iconst_1
       5: ldc           #8                  // int 2147483647
       7: iconst_1
       8: anewarray     #3                  // class java/lang/String
      11: dup
      12: iconst_0
      13: ldc           #9                  // String p
      15: aastore
      16: invokespecial #10                 // Method org/apache/hadoop/fs/shell/CommandFormat."<init>":(II[Ljava/lang/String;)V
      19: astore_2
      20: aload_2
      21: aload_1
      22: invokevirtual #11                 // Method org/apache/hadoop/fs/shell/CommandFormat.parse:(Ljava/util/List;)V
      25: aload_0
      26: aload_2
      27: ldc           #9                  // String p
      29: invokevirtual #12                 // Method org/apache/hadoop/fs/shell/CommandFormat.getOpt:(Ljava/lang/String;)Z
      32: putfield      #13                 // Field createParents:Z
      35: return

  protected void processPath(org.apache.hadoop.fs.shell.PathData) throws java.io.IOException;
    Code:
       0: aload_1
       1: getfield      #14                 // Field org/apache/hadoop/fs/shell/PathData.stat:Lorg/apache/hadoop/fs/FileStatus;
       4: invokevirtual #15                 // Method org/apache/hadoop/fs/FileStatus.isDirectory:()Z
       7: ifeq          29
      10: aload_0
      11: getfield      #13                 // Field createParents:Z
      14: ifne          41
      17: new           #16                 // class org/apache/hadoop/fs/PathExistsException
      20: dup
      21: aload_1
      22: invokevirtual #17                 // Method org/apache/hadoop/fs/shell/PathData.toString:()Ljava/lang/String;
      25: invokespecial #18                 // Method org/apache/hadoop/fs/PathExistsException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: new           #19                 // class org/apache/hadoop/fs/PathIsNotDirectoryException
      32: dup
      33: aload_1
      34: invokevirtual #17                 // Method org/apache/hadoop/fs/shell/PathData.toString:()Ljava/lang/String;
      37: invokespecial #20                 // Method org/apache/hadoop/fs/PathIsNotDirectoryException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: return

  protected void processNonexistentPath(org.apache.hadoop.fs.shell.PathData) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field createParents:Z
       4: ifne          50
       7: new           #21                 // class org/apache/hadoop/fs/Path
      10: dup
      11: aload_1
      12: getfield      #22                 // Field org/apache/hadoop/fs/shell/PathData.path:Lorg/apache/hadoop/fs/Path;
      15: invokevirtual #23                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
      18: invokespecial #24                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      21: astore_2
      22: aload_2
      23: invokevirtual #25                 // Method org/apache/hadoop/fs/Path.getParent:()Lorg/apache/hadoop/fs/Path;
      26: astore_3
      27: aload_1
      28: getfield      #26                 // Field org/apache/hadoop/fs/shell/PathData.fs:Lorg/apache/hadoop/fs/FileSystem;
      31: aload_3
      32: invokevirtual #27                 // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
      35: ifne          50
      38: new           #28                 // class org/apache/hadoop/fs/PathNotFoundException
      41: dup
      42: aload_3
      43: invokevirtual #23                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
      46: invokespecial #29                 // Method org/apache/hadoop/fs/PathNotFoundException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: aload_1
      51: getfield      #26                 // Field org/apache/hadoop/fs/shell/PathData.fs:Lorg/apache/hadoop/fs/FileSystem;
      54: aload_1
      55: getfield      #22                 // Field org/apache/hadoop/fs/shell/PathData.path:Lorg/apache/hadoop/fs/Path;
      58: invokevirtual #30                 // Method org/apache/hadoop/fs/FileSystem.mkdirs:(Lorg/apache/hadoop/fs/Path;)Z
      61: ifne          76
      64: new           #31                 // class org/apache/hadoop/fs/PathIOException
      67: dup
      68: aload_1
      69: invokevirtual #17                 // Method org/apache/hadoop/fs/shell/PathData.toString:()Ljava/lang/String;
      72: invokespecial #32                 // Method org/apache/hadoop/fs/PathIOException."<init>":(Ljava/lang/String;)V
      75: athrow
      76: return
}
