Compiled from "CopyCommands.java"
public class org.apache.hadoop.fs.shell.CopyCommands$Merge extends org.apache.hadoop.fs.shell.FsCommand {
  public static final java.lang.String NAME;

  public static final java.lang.String USAGE;

  public static final java.lang.String DESCRIPTION;

  protected org.apache.hadoop.fs.shell.PathData dst;

  protected java.lang.String delimiter;

  private boolean skipEmptyFileDelimiter;

  protected java.util.List<org.apache.hadoop.fs.shell.PathData> srcs;

  public org.apache.hadoop.fs.shell.CopyCommands$Merge();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/fs/shell/FsCommand."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field dst:Lorg/apache/hadoop/fs/shell/PathData;
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field delimiter:Ljava/lang/String;
      14: aload_0
      15: aconst_null
      16: putfield      #4                  // Field srcs:Ljava/util/List;
      19: return

  protected void processOptions(java.util.LinkedList<java.lang.String>) throws java.io.IOException;
    Code:
       0: new           #5                  // class org/apache/hadoop/fs/shell/CommandFormat
       3: dup
       4: iconst_2
       5: ldc           #7                  // int 2147483647
       7: iconst_2
       8: anewarray     #8                  // class java/lang/String
      11: dup
      12: iconst_0
      13: ldc           #9                  // String nl
      15: aastore
      16: dup
      17: iconst_1
      18: ldc           #10                 // String skip-empty-file
      20: aastore
      21: invokespecial #11                 // Method org/apache/hadoop/fs/shell/CommandFormat."<init>":(II[Ljava/lang/String;)V
      24: astore_2
      25: aload_2
      26: aload_1
      27: invokevirtual #12                 // Method org/apache/hadoop/fs/shell/CommandFormat.parse:(Ljava/util/List;)V
      30: aload_0
      31: aload_2
      32: ldc           #9                  // String nl
      34: invokevirtual #13                 // Method org/apache/hadoop/fs/shell/CommandFormat.getOpt:(Ljava/lang/String;)Z
      37: ifeq          45
      40: ldc           #14                 // String \n
      42: goto          46
      45: aconst_null
      46: putfield      #3                  // Field delimiter:Ljava/lang/String;
      49: aload_0
      50: aload_2
      51: ldc           #10                 // String skip-empty-file
      53: invokevirtual #13                 // Method org/apache/hadoop/fs/shell/CommandFormat.getOpt:(Ljava/lang/String;)Z
      56: putfield      #15                 // Field skipEmptyFileDelimiter:Z
      59: aload_0
      60: new           #16                 // class org/apache/hadoop/fs/shell/PathData
      63: dup
      64: new           #17                 // class java/net/URI
      67: dup
      68: aload_1
      69: invokevirtual #18                 // Method java/util/LinkedList.removeLast:()Ljava/lang/Object;
      72: checkcast     #8                  // class java/lang/String
      75: invokespecial #19                 // Method java/net/URI."<init>":(Ljava/lang/String;)V
      78: aload_0
      79: invokevirtual #20                 // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
      82: invokespecial #21                 // Method org/apache/hadoop/fs/shell/PathData."<init>":(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V
      85: putfield      #2                  // Field dst:Lorg/apache/hadoop/fs/shell/PathData;
      88: aload_0
      89: getfield      #2                  // Field dst:Lorg/apache/hadoop/fs/shell/PathData;
      92: getfield      #22                 // Field org/apache/hadoop/fs/shell/PathData.exists:Z
      95: ifeq          126
      98: aload_0
      99: getfield      #2                  // Field dst:Lorg/apache/hadoop/fs/shell/PathData;
     102: getfield      #23                 // Field org/apache/hadoop/fs/shell/PathData.stat:Lorg/apache/hadoop/fs/FileStatus;
     105: invokevirtual #24                 // Method org/apache/hadoop/fs/FileStatus.isDirectory:()Z
     108: ifeq          126
     111: new           #25                 // class org/apache/hadoop/fs/PathIsDirectoryException
     114: dup
     115: aload_0
     116: getfield      #2                  // Field dst:Lorg/apache/hadoop/fs/shell/PathData;
     119: invokevirtual #26                 // Method org/apache/hadoop/fs/shell/PathData.toString:()Ljava/lang/String;
     122: invokespecial #27                 // Method org/apache/hadoop/fs/PathIsDirectoryException."<init>":(Ljava/lang/String;)V
     125: athrow
     126: aload_0
     127: new           #28                 // class java/util/LinkedList
     130: dup
     131: invokespecial #29                 // Method java/util/LinkedList."<init>":()V
     134: putfield      #4                  // Field srcs:Ljava/util/List;
     137: goto          152
     140: astore_2
     141: new           #31                 // class java/io/IOException
     144: dup
     145: ldc           #32                 // String unexpected URISyntaxException
     147: aload_2
     148: invokespecial #33                 // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     151: athrow
     152: return
    Exception table:
       from    to  target type
           0   137   140   Class java/net/URISyntaxException

  protected void processArguments(java.util.LinkedList<org.apache.hadoop.fs.shell.PathData>) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #34                 // Method org/apache/hadoop/fs/shell/FsCommand.processArguments:(Ljava/util/LinkedList;)V
       5: aload_0
       6: getfield      #35                 // Field exitCode:I
       9: ifeq          13
      12: return
      13: aload_0
      14: getfield      #2                  // Field dst:Lorg/apache/hadoop/fs/shell/PathData;
      17: getfield      #36                 // Field org/apache/hadoop/fs/shell/PathData.fs:Lorg/apache/hadoop/fs/FileSystem;
      20: aload_0
      21: getfield      #2                  // Field dst:Lorg/apache/hadoop/fs/shell/PathData;
      24: getfield      #37                 // Field org/apache/hadoop/fs/shell/PathData.path:Lorg/apache/hadoop/fs/Path;
      27: invokevirtual #38                 // Method org/apache/hadoop/fs/FileSystem.create:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FSDataOutputStream;
      30: astore_2
      31: aload_0
      32: getfield      #4                  // Field srcs:Ljava/util/List;
      35: invokeinterface #39,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      40: astore_3
      41: aload_3
      42: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      47: ifeq          213
      50: aload_3
      51: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      56: checkcast     #16                 // class org/apache/hadoop/fs/shell/PathData
      59: astore        4
      61: aload         4
      63: getfield      #23                 // Field org/apache/hadoop/fs/shell/PathData.stat:Lorg/apache/hadoop/fs/FileStatus;
      66: invokevirtual #42                 // Method org/apache/hadoop/fs/FileStatus.getLen:()J
      69: lconst_0
      70: lcmp
      71: ifeq          198
      74: aload         4
      76: getfield      #36                 // Field org/apache/hadoop/fs/shell/PathData.fs:Lorg/apache/hadoop/fs/FileSystem;
      79: aload         4
      81: getfield      #37                 // Field org/apache/hadoop/fs/shell/PathData.path:Lorg/apache/hadoop/fs/Path;
      84: invokevirtual #43                 // Method org/apache/hadoop/fs/FileSystem.open:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FSDataInputStream;
      87: astore        5
      89: aconst_null
      90: astore        6
      92: aload         5
      94: aload_2
      95: aload_0
      96: invokevirtual #20                 // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
      99: iconst_0
     100: invokestatic  #44                 // Method org/apache/hadoop/io/IOUtils.copyBytes:(Ljava/io/InputStream;Ljava/io/OutputStream;Lorg/apache/hadoop/conf/Configuration;Z)V
     103: aload_0
     104: aload_2
     105: invokespecial #45                 // Method writeDelimiter:(Lorg/apache/hadoop/fs/FSDataOutputStream;)V
     108: aload         5
     110: ifnull        195
     113: aload         6
     115: ifnull        138
     118: aload         5
     120: invokevirtual #46                 // Method org/apache/hadoop/fs/FSDataInputStream.close:()V
     123: goto          195
     126: astore        7
     128: aload         6
     130: aload         7
     132: invokevirtual #48                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     135: goto          195
     138: aload         5
     140: invokevirtual #46                 // Method org/apache/hadoop/fs/FSDataInputStream.close:()V
     143: goto          195
     146: astore        7
     148: aload         7
     150: astore        6
     152: aload         7
     154: athrow
     155: astore        8
     157: aload         5
     159: ifnull        192
     162: aload         6
     164: ifnull        187
     167: aload         5
     169: invokevirtual #46                 // Method org/apache/hadoop/fs/FSDataInputStream.close:()V
     172: goto          192
     175: astore        9
     177: aload         6
     179: aload         9
     181: invokevirtual #48                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     184: goto          192
     187: aload         5
     189: invokevirtual #46                 // Method org/apache/hadoop/fs/FSDataInputStream.close:()V
     192: aload         8
     194: athrow
     195: goto          210
     198: aload_0
     199: getfield      #15                 // Field skipEmptyFileDelimiter:Z
     202: ifne          210
     205: aload_0
     206: aload_2
     207: invokespecial #45                 // Method writeDelimiter:(Lorg/apache/hadoop/fs/FSDataOutputStream;)V
     210: goto          41
     213: aload_2
     214: invokevirtual #49                 // Method org/apache/hadoop/fs/FSDataOutputStream.close:()V
     217: goto          229
     220: astore        10
     222: aload_2
     223: invokevirtual #49                 // Method org/apache/hadoop/fs/FSDataOutputStream.close:()V
     226: aload         10
     228: athrow
     229: return
    Exception table:
       from    to  target type
         118   123   126   Class java/lang/Throwable
          92   108   146   Class java/lang/Throwable
          92   108   155   any
         167   172   175   Class java/lang/Throwable
         146   157   155   any
          31   213   220   any
         220   222   220   any

  private void writeDelimiter(org.apache.hadoop.fs.FSDataOutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field delimiter:Ljava/lang/String;
       4: ifnull        20
       7: aload_1
       8: aload_0
       9: getfield      #3                  // Field delimiter:Ljava/lang/String;
      12: ldc           #50                 // String UTF-8
      14: invokevirtual #51                 // Method java/lang/String.getBytes:(Ljava/lang/String;)[B
      17: invokevirtual #52                 // Method org/apache/hadoop/fs/FSDataOutputStream.write:([B)V
      20: return

  protected void processNonexistentPath(org.apache.hadoop.fs.shell.PathData) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #35                 // Field exitCode:I
       5: aload_0
       6: aload_1
       7: invokespecial #53                 // Method org/apache/hadoop/fs/shell/FsCommand.processNonexistentPath:(Lorg/apache/hadoop/fs/shell/PathData;)V
      10: return

  protected void processPath(org.apache.hadoop.fs.shell.PathData) throws java.io.IOException;
    Code:
       0: aload_1
       1: getfield      #23                 // Field org/apache/hadoop/fs/shell/PathData.stat:Lorg/apache/hadoop/fs/FileStatus;
       4: invokevirtual #24                 // Method org/apache/hadoop/fs/FileStatus.isDirectory:()Z
       7: ifeq          25
      10: aload_0
      11: invokevirtual #54                 // Method getDepth:()I
      14: ifne          36
      17: aload_0
      18: aload_1
      19: invokevirtual #55                 // Method recursePath:(Lorg/apache/hadoop/fs/shell/PathData;)V
      22: goto          36
      25: aload_0
      26: getfield      #4                  // Field srcs:Ljava/util/List;
      29: aload_1
      30: invokeinterface #56,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      35: pop
      36: return

  protected boolean isSorted();
    Code:
       0: iconst_1
       1: ireturn
}
