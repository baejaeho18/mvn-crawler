Compiled from "AbstractMapWritable.java"
public abstract class org.apache.hadoop.io.AbstractMapWritable implements org.apache.hadoop.io.Writable,org.apache.hadoop.conf.Configurable {
  private java.util.concurrent.atomic.AtomicReference<org.apache.hadoop.conf.Configuration> conf;

  java.util.Map<java.lang.Class<?>, java.lang.Byte> classToIdMap;

  java.util.Map<java.lang.Byte, java.lang.Class<?>> idToClassMap;

  private volatile byte newClasses;

  byte getNewClasses();
    Code:
       0: aload_0
       1: getfield      #1                  // Field newClasses:B
       4: ireturn

  private synchronized void addToMap(java.lang.Class<?>, byte);
    Code:
       0: aload_0
       1: getfield      #2                  // Field classToIdMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #3,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          83
      13: aload_0
      14: getfield      #2                  // Field classToIdMap:Ljava/util/Map;
      17: aload_1
      18: invokeinterface #4,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #5                  // class java/lang/Byte
      26: invokevirtual #6                  // Method java/lang/Byte.byteValue:()B
      29: istore_3
      30: iload_3
      31: iload_2
      32: if_icmpeq     83
      35: new           #7                  // class java/lang/IllegalArgumentException
      38: dup
      39: new           #8                  // class java/lang/StringBuilder
      42: dup
      43: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      46: ldc           #10                 // String Class
      48: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_1
      52: invokevirtual #12                 // Method java/lang/Class.getName:()Ljava/lang/String;
      55: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: ldc           #13                 // String  already registered but maps to
      60: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: iload_3
      64: invokevirtual #14                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      67: ldc           #15                 // String  and not
      69: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: iload_2
      73: invokevirtual #14                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      76: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      82: athrow
      83: aload_0
      84: getfield      #18                 // Field idToClassMap:Ljava/util/Map;
      87: iload_2
      88: invokestatic  #19                 // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
      91: invokeinterface #3,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      96: ifeq          175
      99: aload_0
     100: getfield      #18                 // Field idToClassMap:Ljava/util/Map;
     103: iload_2
     104: invokestatic  #19                 // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
     107: invokeinterface #4,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     112: checkcast     #20                 // class java/lang/Class
     115: astore_3
     116: aload_3
     117: aload_1
     118: invokevirtual #21                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     121: ifne          175
     124: new           #7                  // class java/lang/IllegalArgumentException
     127: dup
     128: new           #8                  // class java/lang/StringBuilder
     131: dup
     132: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
     135: ldc           #22                 // String Id
     137: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: iload_2
     141: invokevirtual #14                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     144: ldc           #23                 // String  exists but maps to
     146: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     149: aload_3
     150: invokevirtual #12                 // Method java/lang/Class.getName:()Ljava/lang/String;
     153: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     156: ldc           #15                 // String  and not
     158: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     161: aload_1
     162: invokevirtual #12                 // Method java/lang/Class.getName:()Ljava/lang/String;
     165: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     168: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     171: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     174: athrow
     175: aload_0
     176: getfield      #2                  // Field classToIdMap:Ljava/util/Map;
     179: aload_1
     180: iload_2
     181: invokestatic  #19                 // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
     184: invokeinterface #24,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     189: pop
     190: aload_0
     191: getfield      #18                 // Field idToClassMap:Ljava/util/Map;
     194: iload_2
     195: invokestatic  #19                 // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
     198: aload_1
     199: invokeinterface #24,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     204: pop
     205: return

  protected synchronized void addToMap(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field classToIdMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #3,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          14
      13: return
      14: aload_0
      15: getfield      #1                  // Field newClasses:B
      18: iconst_1
      19: iadd
      20: bipush        127
      22: if_icmple     35
      25: new           #25                 // class java/lang/IndexOutOfBoundsException
      28: dup
      29: ldc           #26                 // String adding an additional class would exceed the maximum number allowed
      31: invokespecial #27                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_0
      36: dup
      37: getfield      #1                  // Field newClasses:B
      40: iconst_1
      41: iadd
      42: i2b
      43: dup_x1
      44: putfield      #1                  // Field newClasses:B
      47: istore_2
      48: aload_0
      49: aload_1
      50: iload_2
      51: invokespecial #28                 // Method addToMap:(Ljava/lang/Class;B)V
      54: return

  protected java.lang.Class<?> getClass(byte);
    Code:
       0: aload_0
       1: getfield      #18                 // Field idToClassMap:Ljava/util/Map;
       4: iload_1
       5: invokestatic  #19                 // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
       8: invokeinterface #4,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #20                 // class java/lang/Class
      16: areturn

  protected byte getId(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field classToIdMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #3,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          32
      13: aload_0
      14: getfield      #2                  // Field classToIdMap:Ljava/util/Map;
      17: aload_1
      18: invokeinterface #4,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #5                  // class java/lang/Byte
      26: invokevirtual #6                  // Method java/lang/Byte.byteValue:()B
      29: goto          33
      32: iconst_m1
      33: ireturn

  protected synchronized void copy(org.apache.hadoop.io.Writable);
    Code:
       0: aload_1
       1: ifnull        78
       4: new           #29                 // class org/apache/hadoop/io/DataOutputBuffer
       7: dup
       8: invokespecial #30                 // Method org/apache/hadoop/io/DataOutputBuffer."<init>":()V
      11: astore_2
      12: aload_1
      13: aload_2
      14: invokeinterface #31,  2           // InterfaceMethod org/apache/hadoop/io/Writable.write:(Ljava/io/DataOutput;)V
      19: new           #32                 // class org/apache/hadoop/io/DataInputBuffer
      22: dup
      23: invokespecial #33                 // Method org/apache/hadoop/io/DataInputBuffer."<init>":()V
      26: astore_3
      27: aload_3
      28: aload_2
      29: invokevirtual #34                 // Method org/apache/hadoop/io/DataOutputBuffer.getData:()[B
      32: aload_2
      33: invokevirtual #35                 // Method org/apache/hadoop/io/DataOutputBuffer.getLength:()I
      36: invokevirtual #36                 // Method org/apache/hadoop/io/DataInputBuffer.reset:([BI)V
      39: aload_0
      40: aload_3
      41: invokevirtual #37                 // Method readFields:(Ljava/io/DataInput;)V
      44: goto          88
      47: astore_2
      48: new           #7                  // class java/lang/IllegalArgumentException
      51: dup
      52: new           #8                  // class java/lang/StringBuilder
      55: dup
      56: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      59: ldc           #39                 // String map cannot be copied:
      61: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: aload_2
      65: invokevirtual #40                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
      68: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      74: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      77: athrow
      78: new           #7                  // class java/lang/IllegalArgumentException
      81: dup
      82: ldc           #41                 // String source map cannot be null
      84: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      87: athrow
      88: return
    Exception table:
       from    to  target type
           4    44    47   Class java/io/IOException

  protected org.apache.hadoop.io.AbstractMapWritable();
    Code:
       0: aload_0
       1: invokespecial #42                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #43                 // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #44                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #2                  // Field classToIdMap:Ljava/util/Map;
      15: aload_0
      16: new           #43                 // class java/util/concurrent/ConcurrentHashMap
      19: dup
      20: invokespecial #44                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      23: putfield      #18                 // Field idToClassMap:Ljava/util/Map;
      26: aload_0
      27: iconst_0
      28: putfield      #1                  // Field newClasses:B
      31: aload_0
      32: new           #45                 // class java/util/concurrent/atomic/AtomicReference
      35: dup
      36: invokespecial #46                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      39: putfield      #47                 // Field conf:Ljava/util/concurrent/atomic/AtomicReference;
      42: aload_0
      43: ldc           #48                 // class org/apache/hadoop/io/ArrayWritable
      45: bipush        -127
      47: invokespecial #28                 // Method addToMap:(Ljava/lang/Class;B)V
      50: aload_0
      51: ldc           #49                 // class org/apache/hadoop/io/BooleanWritable
      53: bipush        -126
      55: invokespecial #28                 // Method addToMap:(Ljava/lang/Class;B)V
      58: aload_0
      59: ldc           #50                 // class org/apache/hadoop/io/BytesWritable
      61: bipush        -125
      63: invokespecial #28                 // Method addToMap:(Ljava/lang/Class;B)V
      66: aload_0
      67: ldc           #51                 // class org/apache/hadoop/io/FloatWritable
      69: bipush        -124
      71: invokespecial #28                 // Method addToMap:(Ljava/lang/Class;B)V
      74: aload_0
      75: ldc           #52                 // class org/apache/hadoop/io/IntWritable
      77: bipush        -123
      79: invokespecial #28                 // Method addToMap:(Ljava/lang/Class;B)V
      82: aload_0
      83: ldc           #53                 // class org/apache/hadoop/io/LongWritable
      85: bipush        -122
      87: invokespecial #28                 // Method addToMap:(Ljava/lang/Class;B)V
      90: aload_0
      91: ldc           #54                 // class org/apache/hadoop/io/MapWritable
      93: bipush        -121
      95: invokespecial #28                 // Method addToMap:(Ljava/lang/Class;B)V
      98: aload_0
      99: ldc           #55                 // class org/apache/hadoop/io/MD5Hash
     101: bipush        -120
     103: invokespecial #28                 // Method addToMap:(Ljava/lang/Class;B)V
     106: aload_0
     107: ldc           #56                 // class org/apache/hadoop/io/NullWritable
     109: bipush        -119
     111: invokespecial #28                 // Method addToMap:(Ljava/lang/Class;B)V
     114: aload_0
     115: ldc           #57                 // class org/apache/hadoop/io/ObjectWritable
     117: bipush        -118
     119: invokespecial #28                 // Method addToMap:(Ljava/lang/Class;B)V
     122: aload_0
     123: ldc           #58                 // class org/apache/hadoop/io/SortedMapWritable
     125: bipush        -117
     127: invokespecial #28                 // Method addToMap:(Ljava/lang/Class;B)V
     130: aload_0
     131: ldc           #59                 // class org/apache/hadoop/io/Text
     133: bipush        -116
     135: invokespecial #28                 // Method addToMap:(Ljava/lang/Class;B)V
     138: aload_0
     139: ldc           #60                 // class org/apache/hadoop/io/TwoDArrayWritable
     141: bipush        -115
     143: invokespecial #28                 // Method addToMap:(Ljava/lang/Class;B)V
     146: aload_0
     147: ldc           #61                 // class org/apache/hadoop/io/VIntWritable
     149: bipush        -114
     151: invokespecial #28                 // Method addToMap:(Ljava/lang/Class;B)V
     154: aload_0
     155: ldc           #62                 // class org/apache/hadoop/io/VLongWritable
     157: bipush        -113
     159: invokespecial #28                 // Method addToMap:(Ljava/lang/Class;B)V
     162: return

  public org.apache.hadoop.conf.Configuration getConf();
    Code:
       0: aload_0
       1: getfield      #47                 // Field conf:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #63                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #64                 // class org/apache/hadoop/conf/Configuration
      10: areturn

  public void setConf(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: getfield      #47                 // Field conf:Ljava/util/concurrent/atomic/AtomicReference;
       4: aload_1
       5: invokevirtual #65                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
       8: return

  public void write(java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #1                  // Field newClasses:B
       5: invokeinterface #66,  2           // InterfaceMethod java/io/DataOutput.writeByte:(I)V
      10: iconst_1
      11: istore_2
      12: iload_2
      13: aload_0
      14: getfield      #1                  // Field newClasses:B
      17: if_icmpgt     49
      20: aload_1
      21: iload_2
      22: invokeinterface #66,  2           // InterfaceMethod java/io/DataOutput.writeByte:(I)V
      27: aload_1
      28: aload_0
      29: iload_2
      30: invokevirtual #67                 // Method getClass:(B)Ljava/lang/Class;
      33: invokevirtual #12                 // Method java/lang/Class.getName:()Ljava/lang/String;
      36: invokeinterface #68,  2           // InterfaceMethod java/io/DataOutput.writeUTF:(Ljava/lang/String;)V
      41: iload_2
      42: iconst_1
      43: iadd
      44: i2b
      45: istore_2
      46: goto          12
      49: return

  public void readFields(java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #69,  1           // InterfaceMethod java/io/DataInput.readByte:()B
       7: putfield      #1                  // Field newClasses:B
      10: invokestatic  #70                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      13: invokevirtual #71                 // Method java/lang/Thread.getContextClassLoader:()Ljava/lang/ClassLoader;
      16: astore_2
      17: iconst_0
      18: istore_3
      19: iload_3
      20: aload_0
      21: getfield      #1                  // Field newClasses:B
      24: if_icmpge     76
      27: aload_1
      28: invokeinterface #69,  1           // InterfaceMethod java/io/DataInput.readByte:()B
      33: istore        4
      35: aload_1
      36: invokeinterface #72,  1           // InterfaceMethod java/io/DataInput.readUTF:()Ljava/lang/String;
      41: astore        5
      43: aload_0
      44: aload_2
      45: aload         5
      47: invokevirtual #73                 // Method java/lang/ClassLoader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
      50: iload         4
      52: invokespecial #28                 // Method addToMap:(Ljava/lang/Class;B)V
      55: goto          70
      58: astore        6
      60: new           #38                 // class java/io/IOException
      63: dup
      64: aload         6
      66: invokespecial #75                 // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
      69: athrow
      70: iinc          3, 1
      73: goto          19
      76: return
    Exception table:
       from    to  target type
          43    55    58   Class java/lang/ClassNotFoundException
}
