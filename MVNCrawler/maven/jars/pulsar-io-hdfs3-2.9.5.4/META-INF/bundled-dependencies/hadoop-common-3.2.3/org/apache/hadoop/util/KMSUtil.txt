Compiled from "KMSUtil.java"
public final class org.apache.hadoop.util.KMSUtil {
  public static final org.slf4j.Logger LOG;

  private org.apache.hadoop.util.KMSUtil();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static org.apache.hadoop.crypto.key.KeyProvider createKeyProvider(org.apache.hadoop.conf.Configuration, java.lang.String) throws java.io.IOException;
    Code:
       0: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #3                  // String Creating key provider with config key {}
       5: aload_1
       6: invokeinterface #4,  3            // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      11: aload_0
      12: aload_1
      13: invokestatic  #5                  // Method getKeyProviderUri:(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Ljava/net/URI;
      16: astore_2
      17: aload_2
      18: ifnull        29
      21: aload_0
      22: aload_2
      23: invokestatic  #6                  // Method createKeyProviderFromUri:(Lorg/apache/hadoop/conf/Configuration;Ljava/net/URI;)Lorg/apache/hadoop/crypto/key/KeyProvider;
      26: goto          30
      29: aconst_null
      30: areturn

  public static java.net.URI getKeyProviderUri(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: ldc           #8                  // String hadoop.security.key.provider.path
       3: invokestatic  #5                  // Method getKeyProviderUri:(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Ljava/net/URI;
       6: areturn

  public static java.net.URI getKeyProviderUri(org.apache.hadoop.conf.Configuration, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #9                  // Method org/apache/hadoop/conf/Configuration.getTrimmed:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_2
       6: aload_2
       7: ifnull        17
      10: aload_2
      11: invokevirtual #10                 // Method java/lang/String.isEmpty:()Z
      14: ifeq          19
      17: aconst_null
      18: areturn
      19: aload_2
      20: invokestatic  #11                 // Method java/net/URI.create:(Ljava/lang/String;)Ljava/net/URI;
      23: areturn

  public static org.apache.hadoop.crypto.key.KeyProvider createKeyProviderFromUri(org.apache.hadoop.conf.Configuration, java.net.URI) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: invokestatic  #12                 // Method org/apache/hadoop/crypto/key/KeyProviderFactory.get:(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/crypto/key/KeyProvider;
       5: astore_2
       6: aload_2
       7: ifnonnull     37
      10: new           #13                 // class java/io/IOException
      13: dup
      14: new           #14                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #16                 // String Could not instantiate KeyProvider for uri:
      23: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_1
      27: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      30: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokespecial #20                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: aload_2
      38: invokevirtual #21                 // Method org/apache/hadoop/crypto/key/KeyProvider.isTransient:()Z
      41: ifeq          79
      44: new           #13                 // class java/io/IOException
      47: dup
      48: new           #14                 // class java/lang/StringBuilder
      51: dup
      52: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      55: ldc           #22                 // String KeyProvider
      57: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_2
      61: invokevirtual #23                 // Method java/lang/Object.toString:()Ljava/lang/String;
      64: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: ldc           #24                 // String  was found but it is a transient provider.
      69: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: invokespecial #20                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      78: athrow
      79: aload_2
      80: areturn

  public static java.util.Map toJSON(org.apache.hadoop.crypto.key.KeyProvider$KeyVersion);
    Code:
       0: new           #25                 // class java/util/HashMap
       3: dup
       4: invokespecial #26                 // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: ifnull        54
      12: aload_1
      13: ldc           #28                 // String name
      15: aload_0
      16: invokevirtual #29                 // Method org/apache/hadoop/crypto/key/KeyProvider$KeyVersion.getName:()Ljava/lang/String;
      19: invokeinterface #30,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      24: pop
      25: aload_1
      26: ldc           #31                 // String versionName
      28: aload_0
      29: invokevirtual #32                 // Method org/apache/hadoop/crypto/key/KeyProvider$KeyVersion.getVersionName:()Ljava/lang/String;
      32: invokeinterface #30,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: aload_1
      39: ldc           #33                 // String material
      41: aload_0
      42: invokevirtual #34                 // Method org/apache/hadoop/crypto/key/KeyProvider$KeyVersion.getMaterial:()[B
      45: invokestatic  #35                 // Method org/apache/commons/codec/binary/Base64.encodeBase64URLSafeString:([B)Ljava/lang/String;
      48: invokeinterface #30,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      53: pop
      54: aload_1
      55: areturn

  public static java.util.Map toJSON(org.apache.hadoop.crypto.key.KeyProviderCryptoExtension$EncryptedKeyVersion);
    Code:
       0: new           #25                 // class java/util/HashMap
       3: dup
       4: invokespecial #26                 // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: ifnull        57
      12: aload_1
      13: ldc           #31                 // String versionName
      15: aload_0
      16: invokevirtual #36                 // Method org/apache/hadoop/crypto/key/KeyProviderCryptoExtension$EncryptedKeyVersion.getEncryptionKeyVersionName:()Ljava/lang/String;
      19: invokeinterface #30,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      24: pop
      25: aload_1
      26: ldc           #37                 // String iv
      28: aload_0
      29: invokevirtual #38                 // Method org/apache/hadoop/crypto/key/KeyProviderCryptoExtension$EncryptedKeyVersion.getEncryptedKeyIv:()[B
      32: invokestatic  #35                 // Method org/apache/commons/codec/binary/Base64.encodeBase64URLSafeString:([B)Ljava/lang/String;
      35: invokeinterface #30,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      40: pop
      41: aload_1
      42: ldc           #39                 // String encryptedKeyVersion
      44: aload_0
      45: invokevirtual #40                 // Method org/apache/hadoop/crypto/key/KeyProviderCryptoExtension$EncryptedKeyVersion.getEncryptedKeyVersion:()Lorg/apache/hadoop/crypto/key/KeyProvider$KeyVersion;
      48: invokestatic  #41                 // Method toJSON:(Lorg/apache/hadoop/crypto/key/KeyProvider$KeyVersion;)Ljava/util/Map;
      51: invokeinterface #30,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      56: pop
      57: aload_1
      58: areturn

  public static <T> T checkNotNull(T, java.lang.String) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: ifnonnull     36
       4: new           #42                 // class java/lang/IllegalArgumentException
       7: dup
       8: new           #14                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #43                 // String Parameter \'
      17: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: aload_1
      21: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: ldc           #44                 // String \' cannot be null
      26: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokespecial #45                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_0
      37: areturn

  public static java.lang.String checkNotEmpty(java.lang.String, java.lang.String) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #46                 // Method checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       5: pop
       6: aload_0
       7: invokevirtual #10                 // Method java/lang/String.isEmpty:()Z
      10: ifeq          45
      13: new           #42                 // class java/lang/IllegalArgumentException
      16: dup
      17: new           #14                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #43                 // String Parameter \'
      26: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_1
      30: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: ldc           #47                 // String \' cannot be empty
      35: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: invokespecial #45                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: aload_0
      46: areturn

  public static java.util.List<org.apache.hadoop.crypto.key.KeyProviderCryptoExtension$EncryptedKeyVersion> parseJSONEncKeyVersions(java.lang.String, java.util.List);
    Code:
       0: aload_1
       1: ldc           #48                 // String valueList
       3: invokestatic  #46                 // Method checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: new           #49                 // class java/util/ArrayList
      10: dup
      11: aload_1
      12: invokeinterface #50,  1           // InterfaceMethod java/util/List.size:()I
      17: invokespecial #51                 // Method java/util/ArrayList."<init>":(I)V
      20: astore_2
      21: aload_1
      22: invokeinterface #52,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      27: ifne          77
      30: aload_1
      31: invokeinterface #53,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      36: astore_3
      37: aload_3
      38: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      43: ifeq          77
      46: aload_3
      47: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      52: astore        4
      54: aload         4
      56: checkcast     #56                 // class java/util/Map
      59: astore        5
      61: aload_2
      62: aload_0
      63: aload         5
      65: invokestatic  #57                 // Method parseJSONEncKeyVersion:(Ljava/lang/String;Ljava/util/Map;)Lorg/apache/hadoop/crypto/key/KeyProviderCryptoExtension$EncryptedKeyVersion;
      68: invokeinterface #58,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      73: pop
      74: goto          37
      77: aload_2
      78: areturn

  public static org.apache.hadoop.crypto.key.KeyProviderCryptoExtension$EncryptedKeyVersion parseJSONEncKeyVersion(java.lang.String, java.util.Map);
    Code:
       0: aload_1
       1: ldc           #59                 // String valueMap
       3: invokestatic  #46                 // Method checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_1
       8: ldc           #31                 // String versionName
      10: invokeinterface #60,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #61                 // class java/lang/String
      18: ldc           #31                 // String versionName
      20: invokestatic  #46                 // Method checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      23: checkcast     #61                 // class java/lang/String
      26: astore_2
      27: aload_1
      28: ldc           #37                 // String iv
      30: invokeinterface #60,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      35: checkcast     #61                 // class java/lang/String
      38: ldc           #37                 // String iv
      40: invokestatic  #46                 // Method checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      43: checkcast     #61                 // class java/lang/String
      46: invokestatic  #62                 // Method org/apache/commons/codec/binary/Base64.decodeBase64:(Ljava/lang/String;)[B
      49: astore_3
      50: aload_1
      51: ldc           #39                 // String encryptedKeyVersion
      53: invokeinterface #60,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      58: checkcast     #56                 // class java/util/Map
      61: ldc           #39                 // String encryptedKeyVersion
      63: invokestatic  #46                 // Method checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      66: checkcast     #56                 // class java/util/Map
      69: astore        4
      71: aload         4
      73: ldc           #31                 // String versionName
      75: invokeinterface #60,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      80: checkcast     #61                 // class java/lang/String
      83: ldc           #31                 // String versionName
      85: invokestatic  #46                 // Method checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      88: checkcast     #61                 // class java/lang/String
      91: astore        5
      93: aload         4
      95: ldc           #33                 // String material
      97: invokeinterface #60,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     102: checkcast     #61                 // class java/lang/String
     105: ldc           #33                 // String material
     107: invokestatic  #46                 // Method checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     110: checkcast     #61                 // class java/lang/String
     113: invokestatic  #62                 // Method org/apache/commons/codec/binary/Base64.decodeBase64:(Ljava/lang/String;)[B
     116: astore        6
     118: new           #63                 // class org/apache/hadoop/crypto/key/kms/KMSClientProvider$KMSEncryptedKeyVersion
     121: dup
     122: aload_0
     123: aload_2
     124: aload_3
     125: aload         5
     127: aload         6
     129: invokespecial #64                 // Method org/apache/hadoop/crypto/key/kms/KMSClientProvider$KMSEncryptedKeyVersion."<init>":(Ljava/lang/String;Ljava/lang/String;[BLjava/lang/String;[B)V
     132: areturn

  public static org.apache.hadoop.crypto.key.KeyProvider$KeyVersion parseJSONKeyVersion(java.util.Map);
    Code:
       0: aload_0
       1: ldc           #59                 // String valueMap
       3: invokestatic  #46                 // Method checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aconst_null
       8: astore_1
       9: aload_0
      10: invokeinterface #65,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      15: ifne          85
      18: aload_0
      19: ldc           #33                 // String material
      21: invokeinterface #66,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      26: ifeq          46
      29: aload_0
      30: ldc           #33                 // String material
      32: invokeinterface #60,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      37: checkcast     #61                 // class java/lang/String
      40: invokestatic  #62                 // Method org/apache/commons/codec/binary/Base64.decodeBase64:(Ljava/lang/String;)[B
      43: goto          47
      46: aconst_null
      47: astore_2
      48: aload_0
      49: ldc           #31                 // String versionName
      51: invokeinterface #60,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      56: checkcast     #61                 // class java/lang/String
      59: astore_3
      60: aload_0
      61: ldc           #28                 // String name
      63: invokeinterface #60,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      68: checkcast     #61                 // class java/lang/String
      71: astore        4
      73: new           #67                 // class org/apache/hadoop/crypto/key/kms/KMSClientProvider$KMSKeyVersion
      76: dup
      77: aload         4
      79: aload_3
      80: aload_2
      81: invokespecial #68                 // Method org/apache/hadoop/crypto/key/kms/KMSClientProvider$KMSKeyVersion."<init>":(Ljava/lang/String;Ljava/lang/String;[B)V
      84: astore_1
      85: aload_1
      86: areturn

  public static org.apache.hadoop.crypto.key.KeyProvider$Metadata parseJSONMetadata(java.util.Map);
    Code:
       0: aload_0
       1: ldc           #59                 // String valueMap
       3: invokestatic  #46                 // Method checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aconst_null
       8: astore_1
       9: aload_0
      10: invokeinterface #65,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      15: ifne          108
      18: new           #69                 // class org/apache/hadoop/crypto/key/kms/KMSClientProvider$KMSMetadata
      21: dup
      22: aload_0
      23: ldc           #70                 // String cipher
      25: invokeinterface #60,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      30: checkcast     #61                 // class java/lang/String
      33: aload_0
      34: ldc           #71                 // String length
      36: invokeinterface #60,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      41: checkcast     #72                 // class java/lang/Integer
      44: invokevirtual #73                 // Method java/lang/Integer.intValue:()I
      47: aload_0
      48: ldc           #74                 // String description
      50: invokeinterface #60,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      55: checkcast     #61                 // class java/lang/String
      58: aload_0
      59: ldc           #75                 // String attributes
      61: invokeinterface #60,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      66: checkcast     #56                 // class java/util/Map
      69: new           #76                 // class java/util/Date
      72: dup
      73: aload_0
      74: ldc           #77                 // String created
      76: invokeinterface #60,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      81: checkcast     #78                 // class java/lang/Long
      84: invokevirtual #79                 // Method java/lang/Long.longValue:()J
      87: invokespecial #80                 // Method java/util/Date."<init>":(J)V
      90: aload_0
      91: ldc           #81                 // String versions
      93: invokeinterface #60,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      98: checkcast     #72                 // class java/lang/Integer
     101: invokevirtual #73                 // Method java/lang/Integer.intValue:()I
     104: invokespecial #82                 // Method org/apache/hadoop/crypto/key/kms/KMSClientProvider$KMSMetadata."<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;Ljava/util/Date;I)V
     107: astore_1
     108: aload_1
     109: areturn

  static {};
    Code:
       0: ldc           #83                 // class org/apache/hadoop/util/KMSUtil
       2: invokestatic  #84                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
       8: return
}
