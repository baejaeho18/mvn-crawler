Compiled from "SecureIOUtils.java"
public class org.apache.hadoop.io.SecureIOUtils {
  private static final boolean skipSecurity;

  private static final org.apache.hadoop.fs.FileSystem rawFilesystem;

  public org.apache.hadoop.io.SecureIOUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.io.RandomAccessFile openForRandomRead(java.io.File, java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: invokestatic  #2                  // Method org/apache/hadoop/security/UserGroupInformation.isSecurityEnabled:()Z
       3: ifne          16
       6: new           #3                  // class java/io/RandomAccessFile
       9: dup
      10: aload_0
      11: aload_1
      12: invokespecial #4                  // Method java/io/RandomAccessFile."<init>":(Ljava/io/File;Ljava/lang/String;)V
      15: areturn
      16: aload_0
      17: aload_1
      18: aload_2
      19: aload_3
      20: invokestatic  #5                  // Method forceSecureOpenForRandomRead:(Ljava/io/File;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/io/RandomAccessFile;
      23: areturn

  protected static java.io.RandomAccessFile forceSecureOpenForRandomRead(java.io.File, java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: new           #3                  // class java/io/RandomAccessFile
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #4                  // Method java/io/RandomAccessFile."<init>":(Ljava/io/File;Ljava/lang/String;)V
       9: astore        4
      11: iconst_0
      12: istore        5
      14: aload         4
      16: invokevirtual #6                  // Method java/io/RandomAccessFile.getFD:()Ljava/io/FileDescriptor;
      19: invokestatic  #7                  // Method org/apache/hadoop/io/nativeio/NativeIO$POSIX.getFstat:(Ljava/io/FileDescriptor;)Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$Stat;
      22: astore        6
      24: aload_0
      25: aload         6
      27: invokevirtual #8                  // Method org/apache/hadoop/io/nativeio/NativeIO$POSIX$Stat.getOwner:()Ljava/lang/String;
      30: aload         6
      32: invokevirtual #9                  // Method org/apache/hadoop/io/nativeio/NativeIO$POSIX$Stat.getGroup:()Ljava/lang/String;
      35: aload_2
      36: aload_3
      37: invokestatic  #10                 // Method checkStat:(Ljava/io/File;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      40: iconst_1
      41: istore        5
      43: aload         4
      45: astore        7
      47: iload         5
      49: ifne          57
      52: aload         4
      54: invokevirtual #11                 // Method java/io/RandomAccessFile.close:()V
      57: aload         7
      59: areturn
      60: astore        8
      62: iload         5
      64: ifne          72
      67: aload         4
      69: invokevirtual #11                 // Method java/io/RandomAccessFile.close:()V
      72: aload         8
      74: athrow
    Exception table:
       from    to  target type
          14    47    60   any
          60    62    60   any

  public static org.apache.hadoop.fs.FSDataInputStream openFSDataInputStream(java.io.File, java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: invokestatic  #2                  // Method org/apache/hadoop/security/UserGroupInformation.isSecurityEnabled:()Z
       3: ifne          24
       6: getstatic     #12                 // Field rawFilesystem:Lorg/apache/hadoop/fs/FileSystem;
       9: new           #13                 // class org/apache/hadoop/fs/Path
      12: dup
      13: aload_0
      14: invokevirtual #14                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      17: invokespecial #15                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      20: invokevirtual #16                 // Method org/apache/hadoop/fs/FileSystem.open:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FSDataInputStream;
      23: areturn
      24: aload_0
      25: aload_1
      26: aload_2
      27: invokestatic  #17                 // Method forceSecureOpenFSDataInputStream:(Ljava/io/File;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/fs/FSDataInputStream;
      30: areturn

  protected static org.apache.hadoop.fs.FSDataInputStream forceSecureOpenFSDataInputStream(java.io.File, java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: getstatic     #12                 // Field rawFilesystem:Lorg/apache/hadoop/fs/FileSystem;
       3: new           #13                 // class org/apache/hadoop/fs/Path
       6: dup
       7: aload_0
       8: invokevirtual #14                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      11: invokespecial #15                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      14: invokevirtual #16                 // Method org/apache/hadoop/fs/FileSystem.open:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FSDataInputStream;
      17: astore_3
      18: iconst_0
      19: istore        4
      21: aload_3
      22: invokevirtual #18                 // Method org/apache/hadoop/fs/FSDataInputStream.getFileDescriptor:()Ljava/io/FileDescriptor;
      25: invokestatic  #7                  // Method org/apache/hadoop/io/nativeio/NativeIO$POSIX.getFstat:(Ljava/io/FileDescriptor;)Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$Stat;
      28: astore        5
      30: aload_0
      31: aload         5
      33: invokevirtual #8                  // Method org/apache/hadoop/io/nativeio/NativeIO$POSIX$Stat.getOwner:()Ljava/lang/String;
      36: aload         5
      38: invokevirtual #9                  // Method org/apache/hadoop/io/nativeio/NativeIO$POSIX$Stat.getGroup:()Ljava/lang/String;
      41: aload_1
      42: aload_2
      43: invokestatic  #10                 // Method checkStat:(Ljava/io/File;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      46: iconst_1
      47: istore        4
      49: aload_3
      50: astore        6
      52: iload         4
      54: ifne          61
      57: aload_3
      58: invokevirtual #19                 // Method org/apache/hadoop/fs/FSDataInputStream.close:()V
      61: aload         6
      63: areturn
      64: astore        7
      66: iload         4
      68: ifne          75
      71: aload_3
      72: invokevirtual #19                 // Method org/apache/hadoop/fs/FSDataInputStream.close:()V
      75: aload         7
      77: athrow
    Exception table:
       from    to  target type
          21    52    64   any
          64    66    64   any

  public static java.io.FileInputStream openForRead(java.io.File, java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: invokestatic  #2                  // Method org/apache/hadoop/security/UserGroupInformation.isSecurityEnabled:()Z
       3: ifne          15
       6: new           #20                 // class java/io/FileInputStream
       9: dup
      10: aload_0
      11: invokespecial #21                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      14: areturn
      15: aload_0
      16: aload_1
      17: aload_2
      18: invokestatic  #22                 // Method forceSecureOpenForRead:(Ljava/io/File;Ljava/lang/String;Ljava/lang/String;)Ljava/io/FileInputStream;
      21: areturn

  protected static java.io.FileInputStream forceSecureOpenForRead(java.io.File, java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: new           #20                 // class java/io/FileInputStream
       3: dup
       4: aload_0
       5: invokespecial #21                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
       8: astore_3
       9: iconst_0
      10: istore        4
      12: aload_3
      13: invokevirtual #23                 // Method java/io/FileInputStream.getFD:()Ljava/io/FileDescriptor;
      16: invokestatic  #7                  // Method org/apache/hadoop/io/nativeio/NativeIO$POSIX.getFstat:(Ljava/io/FileDescriptor;)Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$Stat;
      19: astore        5
      21: aload_0
      22: aload         5
      24: invokevirtual #8                  // Method org/apache/hadoop/io/nativeio/NativeIO$POSIX$Stat.getOwner:()Ljava/lang/String;
      27: aload         5
      29: invokevirtual #9                  // Method org/apache/hadoop/io/nativeio/NativeIO$POSIX$Stat.getGroup:()Ljava/lang/String;
      32: aload_1
      33: aload_2
      34: invokestatic  #10                 // Method checkStat:(Ljava/io/File;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      37: iconst_1
      38: istore        4
      40: aload_3
      41: astore        6
      43: iload         4
      45: ifne          52
      48: aload_3
      49: invokevirtual #24                 // Method java/io/FileInputStream.close:()V
      52: aload         6
      54: areturn
      55: astore        7
      57: iload         4
      59: ifne          66
      62: aload_3
      63: invokevirtual #24                 // Method java/io/FileInputStream.close:()V
      66: aload         7
      68: athrow
    Exception table:
       from    to  target type
          12    43    55   any
          55    57    55   any

  private static java.io.FileOutputStream insecureCreateForWrite(java.io.File, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method java/io/File.exists:()Z
       4: ifeq          39
       7: new           #26                 // class org/apache/hadoop/io/SecureIOUtils$AlreadyExistsException
      10: dup
      11: new           #27                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #29                 // String File
      20: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_0
      24: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      27: ldc           #32                 // String  already exists
      29: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokespecial #34                 // Method org/apache/hadoop/io/SecureIOUtils$AlreadyExistsException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: new           #35                 // class java/io/FileOutputStream
      42: dup
      43: aload_0
      44: invokespecial #36                 // Method java/io/FileOutputStream."<init>":(Ljava/io/File;)V
      47: astore_2
      48: iconst_0
      49: istore_3
      50: getstatic     #12                 // Field rawFilesystem:Lorg/apache/hadoop/fs/FileSystem;
      53: new           #13                 // class org/apache/hadoop/fs/Path
      56: dup
      57: aload_0
      58: invokevirtual #14                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      61: invokespecial #15                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      64: new           #37                 // class org/apache/hadoop/fs/permission/FsPermission
      67: dup
      68: iload_1
      69: i2s
      70: invokespecial #38                 // Method org/apache/hadoop/fs/permission/FsPermission."<init>":(S)V
      73: invokevirtual #39                 // Method org/apache/hadoop/fs/FileSystem.setPermission:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)V
      76: iconst_1
      77: istore_3
      78: aload_2
      79: astore        4
      81: iload_3
      82: ifne          89
      85: aload_2
      86: invokevirtual #40                 // Method java/io/FileOutputStream.close:()V
      89: aload         4
      91: areturn
      92: astore        5
      94: iload_3
      95: ifne          102
      98: aload_2
      99: invokevirtual #40                 // Method java/io/FileOutputStream.close:()V
     102: aload         5
     104: athrow
    Exception table:
       from    to  target type
          50    81    92   any
          92    94    92   any

  public static java.io.FileOutputStream createForWrite(java.io.File, int) throws java.io.IOException;
    Code:
       0: getstatic     #41                 // Field skipSecurity:Z
       3: ifeq          12
       6: aload_0
       7: iload_1
       8: invokestatic  #42                 // Method insecureCreateForWrite:(Ljava/io/File;I)Ljava/io/FileOutputStream;
      11: areturn
      12: aload_0
      13: iload_1
      14: invokestatic  #43                 // Method org/apache/hadoop/io/nativeio/NativeIO.getCreateForWriteFileOutputStream:(Ljava/io/File;I)Ljava/io/FileOutputStream;
      17: areturn

  private static void checkStat(java.io.File, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: iconst_1
       1: istore        5
       3: aload_3
       4: ifnull        68
       7: aload_3
       8: aload_1
       9: invokevirtual #44                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      12: ifne          68
      15: getstatic     #45                 // Field org/apache/hadoop/fs/Path.WINDOWS:Z
      18: ifeq          65
      21: aload_3
      22: invokestatic  #46                 // Method org/apache/hadoop/security/UserGroupInformation.createRemoteUser:(Ljava/lang/String;)Lorg/apache/hadoop/security/UserGroupInformation;
      25: astore        6
      27: ldc           #47                 // String Administrators
      29: astore        7
      31: aload_1
      32: ldc           #47                 // String Administrators
      34: invokevirtual #44                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      37: ifeq          59
      40: aload         6
      42: invokevirtual #48                 // Method org/apache/hadoop/security/UserGroupInformation.getGroups:()Ljava/util/List;
      45: ldc           #47                 // String Administrators
      47: invokeinterface #49,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      52: ifeq          59
      55: iconst_1
      56: goto          60
      59: iconst_0
      60: istore        5
      62: goto          68
      65: iconst_0
      66: istore        5
      68: iload         5
      70: ifne          123
      73: new           #50                 // class java/io/IOException
      76: dup
      77: new           #27                 // class java/lang/StringBuilder
      80: dup
      81: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      84: ldc           #51                 // String Owner \'
      86: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: aload_1
      90: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: ldc           #52                 // String \' for path
      95: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: aload_0
      99: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     102: ldc           #53                 // String  did not match expected owner \'
     104: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: aload_3
     108: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: ldc           #54                 // String \'
     113: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     119: invokespecial #55                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     122: athrow
     123: return

  static {};
    Code:
       0: invokestatic  #2                  // Method org/apache/hadoop/security/UserGroupInformation.isSecurityEnabled:()Z
       3: istore_0
       4: invokestatic  #56                 // Method org/apache/hadoop/io/nativeio/NativeIO.isAvailable:()Z
       7: istore_1
       8: iload_1
       9: ifne          26
      12: iload_0
      13: ifeq          26
      16: new           #57                 // class java/lang/RuntimeException
      19: dup
      20: ldc           #58                 // String Secure IO is not possible without native code extensions.
      22: invokespecial #59                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: new           #60                 // class org/apache/hadoop/conf/Configuration
      29: dup
      30: invokespecial #61                 // Method org/apache/hadoop/conf/Configuration."<init>":()V
      33: invokestatic  #62                 // Method org/apache/hadoop/fs/FileSystem.getLocal:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/LocalFileSystem;
      36: invokevirtual #63                 // Method org/apache/hadoop/fs/LocalFileSystem.getRaw:()Lorg/apache/hadoop/fs/FileSystem;
      39: putstatic     #12                 // Field rawFilesystem:Lorg/apache/hadoop/fs/FileSystem;
      42: goto          56
      45: astore_2
      46: new           #57                 // class java/lang/RuntimeException
      49: dup
      50: ldc           #64                 // String Couldn\'t obtain an instance of RawLocalFileSystem.
      52: invokespecial #59                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: iload_1
      57: ifne          64
      60: iconst_1
      61: goto          65
      64: iconst_0
      65: putstatic     #41                 // Field skipSecurity:Z
      68: return
    Exception table:
       from    to  target type
          26    42    45   Class java/io/IOException
}
