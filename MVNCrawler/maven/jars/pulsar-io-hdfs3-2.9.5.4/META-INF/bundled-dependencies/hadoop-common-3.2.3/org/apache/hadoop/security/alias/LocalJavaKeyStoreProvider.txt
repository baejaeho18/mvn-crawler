Compiled from "LocalJavaKeyStoreProvider.java"
public final class org.apache.hadoop.security.alias.LocalJavaKeyStoreProvider extends org.apache.hadoop.security.alias.AbstractJavaKeyStoreProvider {
  public static final java.lang.String SCHEME_NAME;

  private java.io.File file;

  private java.util.Set<java.nio.file.attribute.PosixFilePermission> permissions;

  private org.apache.hadoop.security.alias.LocalJavaKeyStoreProvider(java.net.URI, org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method org/apache/hadoop/security/alias/AbstractJavaKeyStoreProvider."<init>":(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V
       6: return

  protected java.lang.String getSchemeName();
    Code:
       0: ldc           #4                  // String localjceks
       2: areturn

  protected java.io.OutputStream getOutputStreamForKeystore() throws java.io.IOException;
    Code:
       0: getstatic     #5                  // Field LOG:Lorg/slf4j/Logger;
       3: invokeinterface #6,  1            // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
       8: ifeq          46
      11: getstatic     #5                  // Field LOG:Lorg/slf4j/Logger;
      14: new           #7                  // class java/lang/StringBuilder
      17: dup
      18: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #9                  // String using \'
      23: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: getfield      #11                 // Field file:Ljava/io/File;
      30: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      33: ldc           #13                 // String \' for output stream.
      35: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: invokeinterface #15,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      46: new           #16                 // class java/io/FileOutputStream
      49: dup
      50: aload_0
      51: getfield      #11                 // Field file:Ljava/io/File;
      54: invokespecial #17                 // Method java/io/FileOutputStream."<init>":(Ljava/io/File;)V
      57: astore_1
      58: aload_1
      59: areturn

  protected boolean keystoreExists() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field file:Ljava/io/File;
       4: invokevirtual #18                 // Method java/io/File.exists:()Z
       7: ifeq          26
      10: aload_0
      11: getfield      #11                 // Field file:Ljava/io/File;
      14: invokevirtual #19                 // Method java/io/File.length:()J
      17: lconst_0
      18: lcmp
      19: ifle          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  protected java.io.InputStream getInputStreamForFile() throws java.io.IOException;
    Code:
       0: new           #20                 // class java/io/FileInputStream
       3: dup
       4: aload_0
       5: getfield      #11                 // Field file:Ljava/io/File;
       8: invokespecial #21                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      11: astore_1
      12: aload_1
      13: areturn

  protected void createPermissions(java.lang.String) throws java.io.IOException;
    Code:
       0: sipush        700
       3: istore_2
       4: aload_1
       5: bipush        8
       7: invokestatic  #22                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;I)I
      10: istore_2
      11: goto          26
      14: astore_3
      15: new           #24                 // class java/io/IOException
      18: dup
      19: ldc           #25                 // String Invalid permissions mode provided while trying to createPermissions
      21: aload_3
      22: invokespecial #26                 // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      25: athrow
      26: aload_0
      27: iload_2
      28: invokestatic  #27                 // Method modeToPosixFilePermission:(I)Ljava/util/Set;
      31: putfield      #28                 // Field permissions:Ljava/util/Set;
      34: return
    Exception table:
       from    to  target type
           4    11    14   Class java/lang/NumberFormatException

  protected void stashOriginalFilePermissions() throws java.io.IOException;
    Code:
       0: getstatic     #29                 // Field org/apache/hadoop/util/Shell.WINDOWS:Z
       3: ifne          36
       6: aload_0
       7: getfield      #11                 // Field file:Ljava/io/File;
      10: invokevirtual #30                 // Method java/io/File.getCanonicalPath:()Ljava/lang/String;
      13: iconst_0
      14: anewarray     #31                 // class java/lang/String
      17: invokestatic  #32                 // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
      20: astore_1
      21: aload_0
      22: aload_1
      23: iconst_0
      24: anewarray     #33                 // class java/nio/file/LinkOption
      27: invokestatic  #34                 // Method java/nio/file/Files.getPosixFilePermissions:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/util/Set;
      30: putfield      #28                 // Field permissions:Ljava/util/Set;
      33: goto          106
      36: invokestatic  #35                 // Method org/apache/hadoop/util/Shell.getGetPermissionCommand:()[Ljava/lang/String;
      39: astore_1
      40: aload_1
      41: arraylength
      42: iconst_1
      43: iadd
      44: anewarray     #31                 // class java/lang/String
      47: astore_2
      48: aload_1
      49: iconst_0
      50: aload_2
      51: iconst_0
      52: aload_1
      53: arraylength
      54: invokestatic  #36                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      57: aload_2
      58: aload_1
      59: arraylength
      60: aload_0
      61: getfield      #11                 // Field file:Ljava/io/File;
      64: invokevirtual #30                 // Method java/io/File.getCanonicalPath:()Ljava/lang/String;
      67: aastore
      68: aload_2
      69: invokestatic  #37                 // Method org/apache/hadoop/util/Shell.execCommand:([Ljava/lang/String;)Ljava/lang/String;
      72: astore_3
      73: new           #38                 // class java/util/StringTokenizer
      76: dup
      77: aload_3
      78: getstatic     #39                 // Field org/apache/hadoop/util/Shell.TOKEN_SEPARATOR_REGEX:Ljava/lang/String;
      81: invokespecial #40                 // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      84: astore        4
      86: aload         4
      88: invokevirtual #41                 // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      91: iconst_1
      92: invokevirtual #42                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      95: astore        5
      97: aload_0
      98: aload         5
     100: invokestatic  #43                 // Method java/nio/file/attribute/PosixFilePermissions.fromString:(Ljava/lang/String;)Ljava/util/Set;
     103: putfield      #28                 // Field permissions:Ljava/util/Set;
     106: return

  protected void initFileSystem(java.net.URI) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #44                 // Method org/apache/hadoop/security/alias/AbstractJavaKeyStoreProvider.initFileSystem:(Ljava/net/URI;)V
       5: aload_0
       6: new           #45                 // class java/io/File
       9: dup
      10: new           #46                 // class java/net/URI
      13: dup
      14: aload_0
      15: invokevirtual #47                 // Method getPath:()Lorg/apache/hadoop/fs/Path;
      18: invokevirtual #48                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
      21: invokespecial #49                 // Method java/net/URI."<init>":(Ljava/lang/String;)V
      24: invokespecial #50                 // Method java/io/File."<init>":(Ljava/net/URI;)V
      27: putfield      #11                 // Field file:Ljava/io/File;
      30: getstatic     #5                  // Field LOG:Lorg/slf4j/Logger;
      33: invokeinterface #6,  1            // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      38: ifeq          183
      41: getstatic     #5                  // Field LOG:Lorg/slf4j/Logger;
      44: new           #7                  // class java/lang/StringBuilder
      47: dup
      48: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      51: ldc           #51                 // String initialized local file as \'
      53: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload_0
      57: getfield      #11                 // Field file:Ljava/io/File;
      60: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      63: ldc           #52                 // String \'.
      65: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: invokeinterface #15,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      76: aload_0
      77: getfield      #11                 // Field file:Ljava/io/File;
      80: invokevirtual #18                 // Method java/io/File.exists:()Z
      83: ifeq          173
      86: getstatic     #5                  // Field LOG:Lorg/slf4j/Logger;
      89: new           #7                  // class java/lang/StringBuilder
      92: dup
      93: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      96: ldc           #53                 // String the local file exists and is size
      98: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: aload_0
     102: getfield      #11                 // Field file:Ljava/io/File;
     105: invokevirtual #19                 // Method java/io/File.length:()J
     108: invokevirtual #54                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     111: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     114: invokeinterface #15,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     119: getstatic     #5                  // Field LOG:Lorg/slf4j/Logger;
     122: invokeinterface #55,  1           // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
     127: ifeq          183
     130: aload_0
     131: getfield      #11                 // Field file:Ljava/io/File;
     134: invokevirtual #56                 // Method java/io/File.canRead:()Z
     137: ifeq          150
     140: getstatic     #5                  // Field LOG:Lorg/slf4j/Logger;
     143: ldc           #57                 // String we can read the local file.
     145: invokeinterface #58,  2           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
     150: aload_0
     151: getfield      #11                 // Field file:Ljava/io/File;
     154: invokevirtual #59                 // Method java/io/File.canWrite:()Z
     157: ifeq          183
     160: getstatic     #5                  // Field LOG:Lorg/slf4j/Logger;
     163: ldc           #60                 // String we can write the local file.
     165: invokeinterface #58,  2           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
     170: goto          183
     173: getstatic     #5                  // Field LOG:Lorg/slf4j/Logger;
     176: ldc           #61                 // String the local file does not exist.
     178: invokeinterface #15,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     183: goto          196
     186: astore_2
     187: new           #24                 // class java/io/IOException
     190: dup
     191: aload_2
     192: invokespecial #63                 // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
     195: athrow
     196: return
    Exception table:
       from    to  target type
           5   183   186   Class java/net/URISyntaxException

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #64                 // Method org/apache/hadoop/security/alias/AbstractJavaKeyStoreProvider.flush:()V
       4: getstatic     #5                  // Field LOG:Lorg/slf4j/Logger;
       7: invokeinterface #6,  1            // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      12: ifeq          50
      15: getstatic     #5                  // Field LOG:Lorg/slf4j/Logger;
      18: new           #7                  // class java/lang/StringBuilder
      21: dup
      22: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #65                 // String Resetting permissions to \'
      27: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_0
      31: getfield      #28                 // Field permissions:Ljava/util/Set;
      34: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      37: ldc           #66                 // String \'
      39: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: invokeinterface #15,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      50: getstatic     #29                 // Field org/apache/hadoop/util/Shell.WINDOWS:Z
      53: ifne          81
      56: aload_0
      57: getfield      #11                 // Field file:Ljava/io/File;
      60: invokevirtual #30                 // Method java/io/File.getCanonicalPath:()Ljava/lang/String;
      63: iconst_0
      64: anewarray     #31                 // class java/lang/String
      67: invokestatic  #32                 // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
      70: aload_0
      71: getfield      #28                 // Field permissions:Ljava/util/Set;
      74: invokestatic  #67                 // Method java/nio/file/Files.setPosixFilePermissions:(Ljava/nio/file/Path;Ljava/util/Set;)Ljava/nio/file/Path;
      77: pop
      78: goto          118
      81: new           #7                  // class java/lang/StringBuilder
      84: dup
      85: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      88: ldc           #68                 // String -
      90: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: aload_0
      94: getfield      #28                 // Field permissions:Ljava/util/Set;
      97: invokestatic  #69                 // Method java/nio/file/attribute/PosixFilePermissions.toString:(Ljava/util/Set;)Ljava/lang/String;
     100: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     106: invokestatic  #70                 // Method org/apache/hadoop/fs/permission/FsPermission.valueOf:(Ljava/lang/String;)Lorg/apache/hadoop/fs/permission/FsPermission;
     109: astore_1
     110: aload_0
     111: getfield      #11                 // Field file:Ljava/io/File;
     114: aload_1
     115: invokestatic  #71                 // Method org/apache/hadoop/fs/FileUtil.setPermission:(Ljava/io/File;Lorg/apache/hadoop/fs/permission/FsPermission;)V
     118: return

  private static java.util.Set<java.nio.file.attribute.PosixFilePermission> modeToPosixFilePermission(int);
    Code:
       0: ldc           #72                 // class java/nio/file/attribute/PosixFilePermission
       2: invokestatic  #73                 // Method java/util/EnumSet.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;
       5: astore_1
       6: iload_0
       7: iconst_1
       8: iand
       9: ifeq          22
      12: aload_1
      13: getstatic     #74                 // Field java/nio/file/attribute/PosixFilePermission.OTHERS_EXECUTE:Ljava/nio/file/attribute/PosixFilePermission;
      16: invokeinterface #75,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      21: pop
      22: iload_0
      23: iconst_2
      24: iand
      25: ifeq          38
      28: aload_1
      29: getstatic     #76                 // Field java/nio/file/attribute/PosixFilePermission.OTHERS_WRITE:Ljava/nio/file/attribute/PosixFilePermission;
      32: invokeinterface #75,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      37: pop
      38: iload_0
      39: iconst_4
      40: iand
      41: ifeq          54
      44: aload_1
      45: getstatic     #77                 // Field java/nio/file/attribute/PosixFilePermission.OTHERS_READ:Ljava/nio/file/attribute/PosixFilePermission;
      48: invokeinterface #75,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      53: pop
      54: iload_0
      55: bipush        8
      57: iand
      58: ifeq          71
      61: aload_1
      62: getstatic     #78                 // Field java/nio/file/attribute/PosixFilePermission.GROUP_EXECUTE:Ljava/nio/file/attribute/PosixFilePermission;
      65: invokeinterface #75,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      70: pop
      71: iload_0
      72: bipush        16
      74: iand
      75: ifeq          88
      78: aload_1
      79: getstatic     #79                 // Field java/nio/file/attribute/PosixFilePermission.GROUP_WRITE:Ljava/nio/file/attribute/PosixFilePermission;
      82: invokeinterface #75,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      87: pop
      88: iload_0
      89: bipush        32
      91: iand
      92: ifeq          105
      95: aload_1
      96: getstatic     #80                 // Field java/nio/file/attribute/PosixFilePermission.GROUP_READ:Ljava/nio/file/attribute/PosixFilePermission;
      99: invokeinterface #75,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     104: pop
     105: iload_0
     106: bipush        64
     108: iand
     109: ifeq          122
     112: aload_1
     113: getstatic     #81                 // Field java/nio/file/attribute/PosixFilePermission.OWNER_EXECUTE:Ljava/nio/file/attribute/PosixFilePermission;
     116: invokeinterface #75,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     121: pop
     122: iload_0
     123: sipush        128
     126: iand
     127: ifeq          140
     130: aload_1
     131: getstatic     #82                 // Field java/nio/file/attribute/PosixFilePermission.OWNER_WRITE:Ljava/nio/file/attribute/PosixFilePermission;
     134: invokeinterface #75,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     139: pop
     140: iload_0
     141: sipush        256
     144: iand
     145: ifeq          158
     148: aload_1
     149: getstatic     #83                 // Field java/nio/file/attribute/PosixFilePermission.OWNER_READ:Ljava/nio/file/attribute/PosixFilePermission;
     152: invokeinterface #75,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     157: pop
     158: aload_1
     159: areturn

  org.apache.hadoop.security.alias.LocalJavaKeyStoreProvider(java.net.URI, org.apache.hadoop.conf.Configuration, org.apache.hadoop.security.alias.LocalJavaKeyStoreProvider$1) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method "<init>":(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V
       6: return
}
