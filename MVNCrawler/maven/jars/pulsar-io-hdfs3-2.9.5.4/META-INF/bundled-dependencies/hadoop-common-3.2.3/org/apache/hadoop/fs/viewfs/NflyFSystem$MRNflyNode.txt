Compiled from "NflyFSystem.java"
final class org.apache.hadoop.fs.viewfs.NflyFSystem$MRNflyNode extends org.apache.hadoop.fs.viewfs.NflyFSystem$NflyNode implements java.lang.Comparable<org.apache.hadoop.fs.viewfs.NflyFSystem$MRNflyNode> {
  private org.apache.hadoop.fs.FileStatus status;

  private org.apache.hadoop.fs.viewfs.NflyFSystem$MRNflyNode(org.apache.hadoop.fs.viewfs.NflyFSystem$NflyNode);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #6                  // Method org/apache/hadoop/fs/viewfs/NflyFSystem$NflyNode.getName:()Ljava/lang/String;
       5: aload_1
       6: invokevirtual #7                  // Method org/apache/hadoop/fs/viewfs/NflyFSystem$NflyNode.getNetworkLocation:()Ljava/lang/String;
       9: aload_1
      10: invokestatic  #8                  // Method org/apache/hadoop/fs/viewfs/NflyFSystem$NflyNode.access$000:(Lorg/apache/hadoop/fs/viewfs/NflyFSystem$NflyNode;)Lorg/apache/hadoop/fs/viewfs/ChRootedFileSystem;
      13: invokespecial #9                  // Method org/apache/hadoop/fs/viewfs/NflyFSystem$NflyNode."<init>":(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/fs/viewfs/ChRootedFileSystem;)V
      16: return

  private void updateFileStatus(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method getFs:()Lorg/apache/hadoop/fs/viewfs/ChRootedFileSystem;
       4: aload_1
       5: invokevirtual #11                 // Method org/apache/hadoop/fs/viewfs/ChRootedFileSystem.getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
       8: astore_2
       9: aload_0
      10: aload_2
      11: ifnonnull     21
      14: aload_1
      15: invokestatic  #12                 // Method org/apache/hadoop/fs/viewfs/NflyFSystem.access$100:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      18: goto          22
      21: aload_2
      22: putfield      #3                  // Field status:Lorg/apache/hadoop/fs/FileStatus;
      25: return

  public int compareTo(org.apache.hadoop.fs.viewfs.NflyFSystem$MRNflyNode);
    Code:
       0: aload_0
       1: getfield      #3                  // Field status:Lorg/apache/hadoop/fs/FileStatus;
       4: ifnonnull     20
       7: aload_1
       8: getfield      #3                  // Field status:Lorg/apache/hadoop/fs/FileStatus;
      11: ifnonnull     18
      14: iconst_0
      15: goto          19
      18: iconst_1
      19: ireturn
      20: aload_1
      21: getfield      #3                  // Field status:Lorg/apache/hadoop/fs/FileStatus;
      24: ifnonnull     29
      27: iconst_m1
      28: ireturn
      29: aload_0
      30: getfield      #3                  // Field status:Lorg/apache/hadoop/fs/FileStatus;
      33: invokevirtual #13                 // Method org/apache/hadoop/fs/FileStatus.getModificationTime:()J
      36: lstore_2
      37: aload_1
      38: getfield      #3                  // Field status:Lorg/apache/hadoop/fs/FileStatus;
      41: invokevirtual #13                 // Method org/apache/hadoop/fs/FileStatus.getModificationTime:()J
      44: lstore        4
      46: lload         4
      48: lload_2
      49: invokestatic  #14                 // Method java/lang/Long.compare:(JJ)I
      52: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #15                 // class org/apache/hadoop/fs/viewfs/NflyFSystem$MRNflyNode
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #15                 // class org/apache/hadoop/fs/viewfs/NflyFSystem$MRNflyNode
      13: astore_2
      14: iconst_0
      15: aload_0
      16: aload_2
      17: invokevirtual #16                 // Method compareTo:(Lorg/apache/hadoop/fs/viewfs/NflyFSystem$MRNflyNode;)I
      20: if_icmpne     27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokespecial #17                 // Method org/apache/hadoop/fs/viewfs/NflyFSystem$NflyNode.hashCode:()I
       4: ireturn

  private org.apache.hadoop.fs.FileStatus nflyStatus() throws java.io.IOException;
    Code:
       0: new           #18                 // class org/apache/hadoop/fs/viewfs/NflyFSystem$NflyStatus
       3: dup
       4: aload_0
       5: invokevirtual #10                 // Method getFs:()Lorg/apache/hadoop/fs/viewfs/ChRootedFileSystem;
       8: aload_0
       9: getfield      #3                  // Field status:Lorg/apache/hadoop/fs/FileStatus;
      12: aconst_null
      13: invokespecial #19                 // Method org/apache/hadoop/fs/viewfs/NflyFSystem$NflyStatus."<init>":(Lorg/apache/hadoop/fs/viewfs/ChRootedFileSystem;Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/fs/viewfs/NflyFSystem$1;)V
      16: areturn

  private org.apache.hadoop.fs.FileStatus cloneStatus() throws java.io.IOException;
    Code:
       0: new           #20                 // class org/apache/hadoop/fs/FileStatus
       3: dup
       4: aload_0
       5: getfield      #3                  // Field status:Lorg/apache/hadoop/fs/FileStatus;
       8: invokevirtual #21                 // Method org/apache/hadoop/fs/FileStatus.getLen:()J
      11: aload_0
      12: getfield      #3                  // Field status:Lorg/apache/hadoop/fs/FileStatus;
      15: invokevirtual #22                 // Method org/apache/hadoop/fs/FileStatus.isDirectory:()Z
      18: aload_0
      19: getfield      #3                  // Field status:Lorg/apache/hadoop/fs/FileStatus;
      22: invokevirtual #23                 // Method org/apache/hadoop/fs/FileStatus.getReplication:()S
      25: aload_0
      26: getfield      #3                  // Field status:Lorg/apache/hadoop/fs/FileStatus;
      29: invokevirtual #24                 // Method org/apache/hadoop/fs/FileStatus.getBlockSize:()J
      32: aload_0
      33: getfield      #3                  // Field status:Lorg/apache/hadoop/fs/FileStatus;
      36: invokevirtual #13                 // Method org/apache/hadoop/fs/FileStatus.getModificationTime:()J
      39: aload_0
      40: getfield      #3                  // Field status:Lorg/apache/hadoop/fs/FileStatus;
      43: invokevirtual #25                 // Method org/apache/hadoop/fs/FileStatus.getAccessTime:()J
      46: aconst_null
      47: aconst_null
      48: aconst_null
      49: aload_0
      50: getfield      #3                  // Field status:Lorg/apache/hadoop/fs/FileStatus;
      53: invokevirtual #26                 // Method org/apache/hadoop/fs/FileStatus.isSymlink:()Z
      56: ifeq          69
      59: aload_0
      60: getfield      #3                  // Field status:Lorg/apache/hadoop/fs/FileStatus;
      63: invokevirtual #27                 // Method org/apache/hadoop/fs/FileStatus.getSymlink:()Lorg/apache/hadoop/fs/Path;
      66: goto          70
      69: aconst_null
      70: aload_0
      71: getfield      #3                  // Field status:Lorg/apache/hadoop/fs/FileStatus;
      74: invokevirtual #28                 // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
      77: invokespecial #29                 // Method org/apache/hadoop/fs/FileStatus."<init>":(JZIJJJLorg/apache/hadoop/fs/permission/FsPermission;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
      80: areturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #15                 // class org/apache/hadoop/fs/viewfs/NflyFSystem$MRNflyNode
       5: invokevirtual #16                 // Method compareTo:(Lorg/apache/hadoop/fs/viewfs/NflyFSystem$MRNflyNode;)I
       8: ireturn

  org.apache.hadoop.fs.viewfs.NflyFSystem$MRNflyNode(org.apache.hadoop.fs.viewfs.NflyFSystem$NflyNode, org.apache.hadoop.fs.viewfs.NflyFSystem$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method "<init>":(Lorg/apache/hadoop/fs/viewfs/NflyFSystem$NflyNode;)V
       5: return

  static void access$900(org.apache.hadoop.fs.viewfs.NflyFSystem$MRNflyNode, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method updateFileStatus:(Lorg/apache/hadoop/fs/Path;)V
       5: return

  static org.apache.hadoop.fs.FileStatus access$1002(org.apache.hadoop.fs.viewfs.NflyFSystem$MRNflyNode, org.apache.hadoop.fs.FileStatus);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #3                  // Field status:Lorg/apache/hadoop/fs/FileStatus;
       6: areturn

  static org.apache.hadoop.fs.FileStatus access$1000(org.apache.hadoop.fs.viewfs.NflyFSystem$MRNflyNode);
    Code:
       0: aload_0
       1: getfield      #3                  // Field status:Lorg/apache/hadoop/fs/FileStatus;
       4: areturn

  static org.apache.hadoop.fs.FileStatus access$1100(org.apache.hadoop.fs.viewfs.NflyFSystem$MRNflyNode) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method cloneStatus:()Lorg/apache/hadoop/fs/FileStatus;
       4: areturn

  static org.apache.hadoop.fs.FileStatus access$1300(org.apache.hadoop.fs.viewfs.NflyFSystem$MRNflyNode) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method nflyStatus:()Lorg/apache/hadoop/fs/FileStatus;
       4: areturn
}
