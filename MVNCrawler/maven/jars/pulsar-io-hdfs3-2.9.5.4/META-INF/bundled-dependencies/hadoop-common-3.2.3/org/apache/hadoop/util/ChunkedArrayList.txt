Compiled from "ChunkedArrayList.java"
public class org.apache.hadoop.util.ChunkedArrayList<T> extends java.util.AbstractList<T> {
  private final java.util.List<java.util.List<T>> chunks;

  private java.util.List<T> lastChunk;

  private int lastChunkCapacity;

  private final int initialChunkCapacity;

  private final int maxChunkSize;

  private int size;

  private static final int DEFAULT_INITIAL_CHUNK_CAPACITY;

  private static final int DEFAULT_MAX_CHUNK_SIZE;

  public org.apache.hadoop.util.ChunkedArrayList();
    Code:
       0: aload_0
       1: bipush        6
       3: sipush        8192
       6: invokespecial #3                  // Method "<init>":(II)V
       9: return

  public org.apache.hadoop.util.ChunkedArrayList(int, int);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/util/AbstractList."<init>":()V
       4: aload_0
       5: invokestatic  #5                  // Method com/google/common/collect/Lists.newArrayList:()Ljava/util/ArrayList;
       8: putfield      #6                  // Field chunks:Ljava/util/List;
      11: aload_0
      12: aconst_null
      13: putfield      #7                  // Field lastChunk:Ljava/util/List;
      16: iload_2
      17: iload_1
      18: if_icmplt     25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: invokestatic  #8                  // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      29: aload_0
      30: iload_1
      31: putfield      #9                  // Field initialChunkCapacity:I
      34: aload_0
      35: iload_2
      36: putfield      #10                 // Field maxChunkSize:I
      39: return

  public java.util.Iterator<T> iterator();
    Code:
       0: aload_0
       1: getfield      #6                  // Field chunks:Ljava/util/List;
       4: invokestatic  #11                 // Method com/google/common/collect/Iterables.concat:(Ljava/lang/Iterable;)Ljava/lang/Iterable;
       7: invokeinterface #12,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      12: astore_1
      13: new           #13                 // class org/apache/hadoop/util/ChunkedArrayList$1
      16: dup
      17: aload_0
      18: aload_1
      19: invokespecial #14                 // Method org/apache/hadoop/util/ChunkedArrayList$1."<init>":(Lorg/apache/hadoop/util/ChunkedArrayList;Ljava/util/Iterator;)V
      22: areturn

  public boolean add(T);
    Code:
       0: aload_0
       1: getfield      #1                  // Field size:I
       4: ldc           #16                 // int 2147483647
       6: if_icmpne     19
       9: new           #17                 // class java/lang/RuntimeException
      12: dup
      13: ldc           #18                 // String Can\'t add an additional element to the list; list already has INT_MAX elements.
      15: invokespecial #19                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: getfield      #7                  // Field lastChunk:Ljava/util/List;
      23: ifnonnull     37
      26: aload_0
      27: aload_0
      28: getfield      #9                  // Field initialChunkCapacity:I
      31: invokespecial #20                 // Method addChunk:(I)V
      34: goto          77
      37: aload_0
      38: getfield      #7                  // Field lastChunk:Ljava/util/List;
      41: invokeinterface #21,  1           // InterfaceMethod java/util/List.size:()I
      46: aload_0
      47: getfield      #22                 // Field lastChunkCapacity:I
      50: if_icmplt     77
      53: aload_0
      54: getfield      #22                 // Field lastChunkCapacity:I
      57: aload_0
      58: getfield      #22                 // Field lastChunkCapacity:I
      61: iconst_1
      62: ishr
      63: iadd
      64: istore_2
      65: aload_0
      66: iload_2
      67: aload_0
      68: getfield      #10                 // Field maxChunkSize:I
      71: invokestatic  #23                 // Method java/lang/Math.min:(II)I
      74: invokespecial #20                 // Method addChunk:(I)V
      77: aload_0
      78: dup
      79: getfield      #1                  // Field size:I
      82: iconst_1
      83: iadd
      84: putfield      #1                  // Field size:I
      87: aload_0
      88: getfield      #7                  // Field lastChunk:Ljava/util/List;
      91: aload_1
      92: invokeinterface #24,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      97: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #6                  // Field chunks:Ljava/util/List;
       4: invokeinterface #25,  1           // InterfaceMethod java/util/List.clear:()V
       9: aload_0
      10: aconst_null
      11: putfield      #7                  // Field lastChunk:Ljava/util/List;
      14: aload_0
      15: iconst_0
      16: putfield      #22                 // Field lastChunkCapacity:I
      19: aload_0
      20: iconst_0
      21: putfield      #1                  // Field size:I
      24: return

  private void addChunk(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #26                 // Method com/google/common/collect/Lists.newArrayListWithCapacity:(I)Ljava/util/ArrayList;
       5: putfield      #7                  // Field lastChunk:Ljava/util/List;
       8: aload_0
       9: getfield      #6                  // Field chunks:Ljava/util/List;
      12: aload_0
      13: getfield      #7                  // Field lastChunk:Ljava/util/List;
      16: invokeinterface #24,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      21: pop
      22: aload_0
      23: iload_1
      24: putfield      #22                 // Field lastChunkCapacity:I
      27: return

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #1                  // Field size:I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #1                  // Field size:I
       4: ireturn

  int getNumChunks();
    Code:
       0: aload_0
       1: getfield      #6                  // Field chunks:Ljava/util/List;
       4: invokeinterface #21,  1           // InterfaceMethod java/util/List.size:()I
       9: ireturn

  int getMaxChunkSize();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #6                  // Field chunks:Ljava/util/List;
       6: invokeinterface #27,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          45
      21: aload_2
      22: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #30                 // class java/util/List
      30: astore_3
      31: iload_1
      32: aload_3
      33: invokeinterface #21,  1           // InterfaceMethod java/util/List.size:()I
      38: invokestatic  #31                 // Method java/lang/Math.max:(II)I
      41: istore_1
      42: goto          12
      45: iload_1
      46: ireturn

  public T get(int);
    Code:
       0: iload_1
       1: ifge          12
       4: new           #32                 // class java/lang/IndexOutOfBoundsException
       7: dup
       8: invokespecial #33                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      11: athrow
      12: iconst_0
      13: istore_2
      14: aload_0
      15: getfield      #6                  // Field chunks:Ljava/util/List;
      18: invokeinterface #27,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      23: astore_3
      24: aload_3
      25: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          80
      33: aload_3
      34: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #30                 // class java/util/List
      42: astore        4
      44: aload         4
      46: invokeinterface #21,  1           // InterfaceMethod java/util/List.size:()I
      51: istore        5
      53: iload_1
      54: iload_2
      55: iload         5
      57: iadd
      58: if_icmpge     72
      61: aload         4
      63: iload_1
      64: iload_2
      65: isub
      66: invokeinterface #34,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      71: areturn
      72: iload_2
      73: iload         5
      75: iadd
      76: istore_2
      77: goto          24
      80: new           #32                 // class java/lang/IndexOutOfBoundsException
      83: dup
      84: invokespecial #33                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      87: athrow

  static int access$010(org.apache.hadoop.util.ChunkedArrayList);
    Code:
       0: aload_0
       1: dup
       2: getfield      #1                  // Field size:I
       5: dup_x1
       6: iconst_1
       7: isub
       8: putfield      #1                  // Field size:I
      11: ireturn
}
