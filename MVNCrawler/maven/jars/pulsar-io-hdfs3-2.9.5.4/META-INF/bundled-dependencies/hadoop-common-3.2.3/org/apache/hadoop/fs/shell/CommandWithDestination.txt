Compiled from "CommandWithDestination.java"
abstract class org.apache.hadoop.fs.shell.CommandWithDestination extends org.apache.hadoop.fs.shell.FsCommand {
  protected org.apache.hadoop.fs.shell.PathData dst;

  private boolean overwrite;

  private boolean verifyChecksum;

  private boolean writeChecksum;

  private boolean lazyPersist;

  private boolean direct;

  private static final java.lang.String RAW;

  private static final java.lang.String RESERVED_RAW;

  private java.util.EnumSet<org.apache.hadoop.fs.shell.CommandWithDestination$FileAttribute> preserveStatus;

  org.apache.hadoop.fs.shell.CommandWithDestination();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/fs/shell/FsCommand."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field overwrite:Z
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field verifyChecksum:Z
      14: aload_0
      15: iconst_1
      16: putfield      #4                  // Field writeChecksum:Z
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field lazyPersist:Z
      24: aload_0
      25: iconst_0
      26: putfield      #6                  // Field direct:Z
      29: aload_0
      30: ldc           #7                  // class org/apache/hadoop/fs/shell/CommandWithDestination$FileAttribute
      32: invokestatic  #8                  // Method java/util/EnumSet.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;
      35: putfield      #9                  // Field preserveStatus:Ljava/util/EnumSet;
      38: return

  protected void setOverwrite(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field overwrite:Z
       5: return

  protected void setLazyPersist(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field lazyPersist:Z
       5: return

  protected void setVerifyChecksum(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field verifyChecksum:Z
       5: return

  protected void setWriteChecksum(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field writeChecksum:Z
       5: return

  protected void setDirectWrite(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field direct:Z
       5: return

  protected void setPreserve(boolean);
    Code:
       0: iload_1
       1: ifeq          28
       4: aload_0
       5: getstatic     #10                 // Field org/apache/hadoop/fs/shell/CommandWithDestination$FileAttribute.TIMESTAMPS:Lorg/apache/hadoop/fs/shell/CommandWithDestination$FileAttribute;
       8: invokevirtual #11                 // Method preserve:(Lorg/apache/hadoop/fs/shell/CommandWithDestination$FileAttribute;)V
      11: aload_0
      12: getstatic     #12                 // Field org/apache/hadoop/fs/shell/CommandWithDestination$FileAttribute.OWNERSHIP:Lorg/apache/hadoop/fs/shell/CommandWithDestination$FileAttribute;
      15: invokevirtual #11                 // Method preserve:(Lorg/apache/hadoop/fs/shell/CommandWithDestination$FileAttribute;)V
      18: aload_0
      19: getstatic     #13                 // Field org/apache/hadoop/fs/shell/CommandWithDestination$FileAttribute.PERMISSION:Lorg/apache/hadoop/fs/shell/CommandWithDestination$FileAttribute;
      22: invokevirtual #11                 // Method preserve:(Lorg/apache/hadoop/fs/shell/CommandWithDestination$FileAttribute;)V
      25: goto          35
      28: aload_0
      29: getfield      #9                  // Field preserveStatus:Ljava/util/EnumSet;
      32: invokevirtual #14                 // Method java/util/EnumSet.clear:()V
      35: return

  private boolean shouldPreserve(org.apache.hadoop.fs.shell.CommandWithDestination$FileAttribute);
    Code:
       0: aload_0
       1: getfield      #9                  // Field preserveStatus:Ljava/util/EnumSet;
       4: aload_1
       5: invokevirtual #15                 // Method java/util/EnumSet.contains:(Ljava/lang/Object;)Z
       8: ireturn

  protected void preserve(org.apache.hadoop.fs.shell.CommandWithDestination$FileAttribute);
    Code:
       0: aload_0
       1: getfield      #9                  // Field preserveStatus:Ljava/util/EnumSet;
       4: invokevirtual #16                 // Method java/util/EnumSet.iterator:()Ljava/util/Iterator;
       7: astore_2
       8: aload_2
       9: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          39
      17: aload_2
      18: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #7                  // class org/apache/hadoop/fs/shell/CommandWithDestination$FileAttribute
      26: astore_3
      27: aload_3
      28: aload_1
      29: invokevirtual #19                 // Method org/apache/hadoop/fs/shell/CommandWithDestination$FileAttribute.equals:(Ljava/lang/Object;)Z
      32: ifeq          36
      35: return
      36: goto          8
      39: aload_0
      40: getfield      #9                  // Field preserveStatus:Ljava/util/EnumSet;
      43: aload_1
      44: invokevirtual #20                 // Method java/util/EnumSet.add:(Ljava/lang/Object;)Z
      47: pop
      48: return

  protected void getLocalDestination(java.util.LinkedList<java.lang.String>) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #21                 // Method java/util/LinkedList.size:()I
       4: iconst_2
       5: if_icmpge     13
       8: ldc           #23                 // String .
      10: goto          20
      13: aload_1
      14: invokevirtual #24                 // Method java/util/LinkedList.removeLast:()Ljava/lang/Object;
      17: checkcast     #25                 // class java/lang/String
      20: astore_2
      21: aload_0
      22: new           #26                 // class org/apache/hadoop/fs/shell/PathData
      25: dup
      26: new           #27                 // class java/net/URI
      29: dup
      30: aload_2
      31: invokespecial #28                 // Method java/net/URI."<init>":(Ljava/lang/String;)V
      34: aload_0
      35: invokevirtual #29                 // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
      38: invokespecial #30                 // Method org/apache/hadoop/fs/shell/PathData."<init>":(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V
      41: putfield      #31                 // Field dst:Lorg/apache/hadoop/fs/shell/PathData;
      44: goto          84
      47: astore_3
      48: getstatic     #33                 // Field org/apache/hadoop/fs/Path.WINDOWS:Z
      51: ifeq          73
      54: aload_0
      55: new           #26                 // class org/apache/hadoop/fs/shell/PathData
      58: dup
      59: aload_2
      60: aload_0
      61: invokevirtual #29                 // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
      64: invokespecial #34                 // Method org/apache/hadoop/fs/shell/PathData."<init>":(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V
      67: putfield      #31                 // Field dst:Lorg/apache/hadoop/fs/shell/PathData;
      70: goto          84
      73: new           #35                 // class java/io/IOException
      76: dup
      77: ldc           #36                 // String unexpected URISyntaxException
      79: aload_3
      80: invokespecial #37                 // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      83: athrow
      84: return
    Exception table:
       from    to  target type
          21    44    47   Class java/net/URISyntaxException

  protected void getRemoteDestination(java.util.LinkedList<java.lang.String>) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #21                 // Method java/util/LinkedList.size:()I
       4: iconst_2
       5: if_icmpge     28
       8: aload_0
       9: new           #26                 // class org/apache/hadoop/fs/shell/PathData
      12: dup
      13: ldc           #23                 // String .
      15: aload_0
      16: invokevirtual #29                 // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
      19: invokespecial #34                 // Method org/apache/hadoop/fs/shell/PathData."<init>":(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V
      22: putfield      #31                 // Field dst:Lorg/apache/hadoop/fs/shell/PathData;
      25: goto          102
      28: aload_1
      29: invokevirtual #24                 // Method java/util/LinkedList.removeLast:()Ljava/lang/Object;
      32: checkcast     #25                 // class java/lang/String
      35: astore_2
      36: aload_2
      37: aload_0
      38: invokevirtual #29                 // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
      41: invokestatic  #38                 // Method org/apache/hadoop/fs/shell/PathData.expandAsGlob:(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)[Lorg/apache/hadoop/fs/shell/PathData;
      44: astore_3
      45: aload_3
      46: arraylength
      47: lookupswitch  { // 2
                     0: 72
                     1: 81
               default: 91
          }
      72: new           #39                 // class org/apache/hadoop/fs/PathNotFoundException
      75: dup
      76: aload_2
      77: invokespecial #40                 // Method org/apache/hadoop/fs/PathNotFoundException."<init>":(Ljava/lang/String;)V
      80: athrow
      81: aload_0
      82: aload_3
      83: iconst_0
      84: aaload
      85: putfield      #31                 // Field dst:Lorg/apache/hadoop/fs/shell/PathData;
      88: goto          102
      91: new           #41                 // class org/apache/hadoop/fs/PathIOException
      94: dup
      95: aload_2
      96: ldc           #42                 // String Too many matches
      98: invokespecial #43                 // Method org/apache/hadoop/fs/PathIOException."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     101: athrow
     102: return

  protected void processArguments(java.util.LinkedList<org.apache.hadoop.fs.shell.PathData>) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #21                 // Method java/util/LinkedList.size:()I
       4: iconst_1
       5: if_icmple     61
       8: aload_0
       9: getfield      #31                 // Field dst:Lorg/apache/hadoop/fs/shell/PathData;
      12: getfield      #44                 // Field org/apache/hadoop/fs/shell/PathData.exists:Z
      15: ifne          33
      18: new           #39                 // class org/apache/hadoop/fs/PathNotFoundException
      21: dup
      22: aload_0
      23: getfield      #31                 // Field dst:Lorg/apache/hadoop/fs/shell/PathData;
      26: invokevirtual #45                 // Method org/apache/hadoop/fs/shell/PathData.toString:()Ljava/lang/String;
      29: invokespecial #40                 // Method org/apache/hadoop/fs/PathNotFoundException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: aload_0
      34: getfield      #31                 // Field dst:Lorg/apache/hadoop/fs/shell/PathData;
      37: getfield      #46                 // Field org/apache/hadoop/fs/shell/PathData.stat:Lorg/apache/hadoop/fs/FileStatus;
      40: invokevirtual #47                 // Method org/apache/hadoop/fs/FileStatus.isDirectory:()Z
      43: ifne          147
      46: new           #48                 // class org/apache/hadoop/fs/PathIsNotDirectoryException
      49: dup
      50: aload_0
      51: getfield      #31                 // Field dst:Lorg/apache/hadoop/fs/shell/PathData;
      54: invokevirtual #45                 // Method org/apache/hadoop/fs/shell/PathData.toString:()Ljava/lang/String;
      57: invokespecial #49                 // Method org/apache/hadoop/fs/PathIsNotDirectoryException."<init>":(Ljava/lang/String;)V
      60: athrow
      61: aload_0
      62: getfield      #31                 // Field dst:Lorg/apache/hadoop/fs/shell/PathData;
      65: getfield      #44                 // Field org/apache/hadoop/fs/shell/PathData.exists:Z
      68: ifeq          106
      71: aload_0
      72: getfield      #31                 // Field dst:Lorg/apache/hadoop/fs/shell/PathData;
      75: getfield      #46                 // Field org/apache/hadoop/fs/shell/PathData.stat:Lorg/apache/hadoop/fs/FileStatus;
      78: invokevirtual #47                 // Method org/apache/hadoop/fs/FileStatus.isDirectory:()Z
      81: ifne          147
      84: aload_0
      85: getfield      #2                  // Field overwrite:Z
      88: ifne          147
      91: new           #50                 // class org/apache/hadoop/fs/PathExistsException
      94: dup
      95: aload_0
      96: getfield      #31                 // Field dst:Lorg/apache/hadoop/fs/shell/PathData;
      99: invokevirtual #45                 // Method org/apache/hadoop/fs/shell/PathData.toString:()Ljava/lang/String;
     102: invokespecial #51                 // Method org/apache/hadoop/fs/PathExistsException."<init>":(Ljava/lang/String;)V
     105: athrow
     106: aload_0
     107: getfield      #31                 // Field dst:Lorg/apache/hadoop/fs/shell/PathData;
     110: invokevirtual #52                 // Method org/apache/hadoop/fs/shell/PathData.parentExists:()Z
     113: ifne          147
     116: new           #39                 // class org/apache/hadoop/fs/PathNotFoundException
     119: dup
     120: aload_0
     121: getfield      #31                 // Field dst:Lorg/apache/hadoop/fs/shell/PathData;
     124: invokevirtual #45                 // Method org/apache/hadoop/fs/shell/PathData.toString:()Ljava/lang/String;
     127: invokespecial #40                 // Method org/apache/hadoop/fs/PathNotFoundException."<init>":(Ljava/lang/String;)V
     130: aload_0
     131: getfield      #31                 // Field dst:Lorg/apache/hadoop/fs/shell/PathData;
     134: getfield      #53                 // Field org/apache/hadoop/fs/shell/PathData.path:Lorg/apache/hadoop/fs/Path;
     137: invokevirtual #54                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
     140: invokevirtual #55                 // Method java/net/URI.toString:()Ljava/lang/String;
     143: invokevirtual #56                 // Method org/apache/hadoop/fs/PathNotFoundException.withFullyQualifiedPath:(Ljava/lang/String;)Lorg/apache/hadoop/fs/PathIOException;
     146: athrow
     147: aload_0
     148: aload_1
     149: invokespecial #57                 // Method org/apache/hadoop/fs/shell/FsCommand.processArguments:(Ljava/util/LinkedList;)V
     152: return

  protected void processPathArgument(org.apache.hadoop.fs.shell.PathData) throws java.io.IOException;
    Code:
       0: aload_1
       1: getfield      #46                 // Field org/apache/hadoop/fs/shell/PathData.stat:Lorg/apache/hadoop/fs/FileStatus;
       4: invokevirtual #47                 // Method org/apache/hadoop/fs/FileStatus.isDirectory:()Z
       7: ifeq          169
      10: aload_1
      11: getfield      #58                 // Field org/apache/hadoop/fs/shell/PathData.fs:Lorg/apache/hadoop/fs/FileSystem;
      14: aload_0
      15: getfield      #31                 // Field dst:Lorg/apache/hadoop/fs/shell/PathData;
      18: getfield      #58                 // Field org/apache/hadoop/fs/shell/PathData.fs:Lorg/apache/hadoop/fs/FileSystem;
      21: invokevirtual #59                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      24: ifeq          169
      27: aload_0
      28: aload_1
      29: invokevirtual #60                 // Method getTargetPath:(Lorg/apache/hadoop/fs/shell/PathData;)Lorg/apache/hadoop/fs/shell/PathData;
      32: astore_2
      33: aload_1
      34: getfield      #58                 // Field org/apache/hadoop/fs/shell/PathData.fs:Lorg/apache/hadoop/fs/FileSystem;
      37: aload_1
      38: getfield      #53                 // Field org/apache/hadoop/fs/shell/PathData.path:Lorg/apache/hadoop/fs/Path;
      41: invokevirtual #61                 // Method org/apache/hadoop/fs/FileSystem.makeQualified:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      44: invokevirtual #62                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
      47: astore_3
      48: aload_0
      49: getfield      #31                 // Field dst:Lorg/apache/hadoop/fs/shell/PathData;
      52: getfield      #58                 // Field org/apache/hadoop/fs/shell/PathData.fs:Lorg/apache/hadoop/fs/FileSystem;
      55: aload_2
      56: getfield      #53                 // Field org/apache/hadoop/fs/shell/PathData.path:Lorg/apache/hadoop/fs/Path;
      59: invokevirtual #61                 // Method org/apache/hadoop/fs/FileSystem.makeQualified:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      62: invokevirtual #62                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
      65: astore        4
      67: aload         4
      69: aload_3
      70: invokevirtual #63                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      73: ifeq          104
      76: new           #41                 // class org/apache/hadoop/fs/PathIOException
      79: dup
      80: aload_1
      81: invokevirtual #45                 // Method org/apache/hadoop/fs/shell/PathData.toString:()Ljava/lang/String;
      84: ldc           #64                 // String are identical
      86: invokespecial #43                 // Method org/apache/hadoop/fs/PathIOException."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      89: astore        5
      91: aload         5
      93: aload         4
      95: invokevirtual #65                 // Method java/lang/String.toString:()Ljava/lang/String;
      98: invokevirtual #66                 // Method org/apache/hadoop/fs/PathIOException.setTargetPath:(Ljava/lang/String;)V
     101: aload         5
     103: athrow
     104: aload_3
     105: ldc           #67                 // String /
     107: invokevirtual #68                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
     110: ifne          133
     113: new           #69                 // class java/lang/StringBuilder
     116: dup
     117: invokespecial #70                 // Method java/lang/StringBuilder."<init>":()V
     120: aload_3
     121: invokevirtual #71                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: ldc           #67                 // String /
     126: invokevirtual #71                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: invokevirtual #72                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     132: astore_3
     133: aload         4
     135: aload_3
     136: invokevirtual #73                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     139: ifeq          169
     142: new           #41                 // class org/apache/hadoop/fs/PathIOException
     145: dup
     146: aload_1
     147: invokevirtual #45                 // Method org/apache/hadoop/fs/shell/PathData.toString:()Ljava/lang/String;
     150: ldc           #74                 // String is a subdirectory of itself
     152: invokespecial #43                 // Method org/apache/hadoop/fs/PathIOException."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     155: astore        5
     157: aload         5
     159: aload_2
     160: invokevirtual #45                 // Method org/apache/hadoop/fs/shell/PathData.toString:()Ljava/lang/String;
     163: invokevirtual #66                 // Method org/apache/hadoop/fs/PathIOException.setTargetPath:(Ljava/lang/String;)V
     166: aload         5
     168: athrow
     169: aload_0
     170: aload_1
     171: invokespecial #75                 // Method org/apache/hadoop/fs/shell/FsCommand.processPathArgument:(Lorg/apache/hadoop/fs/shell/PathData;)V
     174: return

  protected void processPath(org.apache.hadoop.fs.shell.PathData) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: aload_1
       4: invokevirtual #60                 // Method getTargetPath:(Lorg/apache/hadoop/fs/shell/PathData;)Lorg/apache/hadoop/fs/shell/PathData;
       7: invokevirtual #76                 // Method processPath:(Lorg/apache/hadoop/fs/shell/PathData;Lorg/apache/hadoop/fs/shell/PathData;)V
      10: return

  protected void processPath(org.apache.hadoop.fs.shell.PathData, org.apache.hadoop.fs.shell.PathData) throws java.io.IOException;
    Code:
       0: aload_1
       1: getfield      #46                 // Field org/apache/hadoop/fs/shell/PathData.stat:Lorg/apache/hadoop/fs/FileStatus;
       4: invokevirtual #77                 // Method org/apache/hadoop/fs/FileStatus.isSymlink:()Z
       7: ifeq          22
      10: new           #78                 // class org/apache/hadoop/fs/PathOperationException
      13: dup
      14: aload_1
      15: invokevirtual #45                 // Method org/apache/hadoop/fs/shell/PathData.toString:()Ljava/lang/String;
      18: invokespecial #79                 // Method org/apache/hadoop/fs/PathOperationException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: aload_1
      23: getfield      #46                 // Field org/apache/hadoop/fs/shell/PathData.stat:Lorg/apache/hadoop/fs/FileStatus;
      26: invokevirtual #80                 // Method org/apache/hadoop/fs/FileStatus.isFile:()Z
      29: ifeq          41
      32: aload_0
      33: aload_1
      34: aload_2
      35: invokevirtual #81                 // Method copyFileToTarget:(Lorg/apache/hadoop/fs/shell/PathData;Lorg/apache/hadoop/fs/shell/PathData;)V
      38: goto          70
      41: aload_1
      42: getfield      #46                 // Field org/apache/hadoop/fs/shell/PathData.stat:Lorg/apache/hadoop/fs/FileStatus;
      45: invokevirtual #47                 // Method org/apache/hadoop/fs/FileStatus.isDirectory:()Z
      48: ifeq          70
      51: aload_0
      52: invokevirtual #82                 // Method isRecursive:()Z
      55: ifne          70
      58: new           #83                 // class org/apache/hadoop/fs/PathIsDirectoryException
      61: dup
      62: aload_1
      63: invokevirtual #45                 // Method org/apache/hadoop/fs/shell/PathData.toString:()Ljava/lang/String;
      66: invokespecial #84                 // Method org/apache/hadoop/fs/PathIsDirectoryException."<init>":(Ljava/lang/String;)V
      69: athrow
      70: return

  protected void recursePath(org.apache.hadoop.fs.shell.PathData) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #31                 // Field dst:Lorg/apache/hadoop/fs/shell/PathData;
       4: astore_2
       5: aload_0
       6: aload_0
       7: aload_1
       8: invokevirtual #60                 // Method getTargetPath:(Lorg/apache/hadoop/fs/shell/PathData;)Lorg/apache/hadoop/fs/shell/PathData;
      11: putfield      #31                 // Field dst:Lorg/apache/hadoop/fs/shell/PathData;
      14: aload_0
      15: aload_1
      16: getfield      #53                 // Field org/apache/hadoop/fs/shell/PathData.path:Lorg/apache/hadoop/fs/Path;
      19: aload_0
      20: getfield      #31                 // Field dst:Lorg/apache/hadoop/fs/shell/PathData;
      23: getfield      #53                 // Field org/apache/hadoop/fs/shell/PathData.path:Lorg/apache/hadoop/fs/Path;
      26: invokespecial #85                 // Method checkPathsForReservedRaw:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
      29: istore_3
      30: aload_0
      31: getfield      #31                 // Field dst:Lorg/apache/hadoop/fs/shell/PathData;
      34: getfield      #44                 // Field org/apache/hadoop/fs/shell/PathData.exists:Z
      37: ifeq          68
      40: aload_0
      41: getfield      #31                 // Field dst:Lorg/apache/hadoop/fs/shell/PathData;
      44: getfield      #46                 // Field org/apache/hadoop/fs/shell/PathData.stat:Lorg/apache/hadoop/fs/FileStatus;
      47: invokevirtual #47                 // Method org/apache/hadoop/fs/FileStatus.isDirectory:()Z
      50: ifne          122
      53: new           #48                 // class org/apache/hadoop/fs/PathIsNotDirectoryException
      56: dup
      57: aload_0
      58: getfield      #31                 // Field dst:Lorg/apache/hadoop/fs/shell/PathData;
      61: invokevirtual #45                 // Method org/apache/hadoop/fs/shell/PathData.toString:()Ljava/lang/String;
      64: invokespecial #49                 // Method org/apache/hadoop/fs/PathIsNotDirectoryException."<init>":(Ljava/lang/String;)V
      67: athrow
      68: aload_0
      69: getfield      #31                 // Field dst:Lorg/apache/hadoop/fs/shell/PathData;
      72: getfield      #58                 // Field org/apache/hadoop/fs/shell/PathData.fs:Lorg/apache/hadoop/fs/FileSystem;
      75: aload_0
      76: getfield      #31                 // Field dst:Lorg/apache/hadoop/fs/shell/PathData;
      79: getfield      #53                 // Field org/apache/hadoop/fs/shell/PathData.path:Lorg/apache/hadoop/fs/Path;
      82: invokevirtual #86                 // Method org/apache/hadoop/fs/FileSystem.mkdirs:(Lorg/apache/hadoop/fs/Path;)Z
      85: ifne          114
      88: new           #41                 // class org/apache/hadoop/fs/PathIOException
      91: dup
      92: aload_0
      93: getfield      #31                 // Field dst:Lorg/apache/hadoop/fs/shell/PathData;
      96: invokevirtual #45                 // Method org/apache/hadoop/fs/shell/PathData.toString:()Ljava/lang/String;
      99: invokespecial #87                 // Method org/apache/hadoop/fs/PathIOException."<init>":(Ljava/lang/String;)V
     102: astore        4
     104: aload         4
     106: ldc           #88                 // String mkdir
     108: invokevirtual #89                 // Method org/apache/hadoop/fs/PathIOException.setOperation:(Ljava/lang/String;)V
     111: aload         4
     113: athrow
     114: aload_0
     115: getfield      #31                 // Field dst:Lorg/apache/hadoop/fs/shell/PathData;
     118: invokevirtual #90                 // Method org/apache/hadoop/fs/shell/PathData.refreshStatus:()Lorg/apache/hadoop/fs/FileStatus;
     121: pop
     122: aload_0
     123: aload_1
     124: invokespecial #91                 // Method org/apache/hadoop/fs/shell/FsCommand.recursePath:(Lorg/apache/hadoop/fs/shell/PathData;)V
     127: aload_0
     128: getfield      #31                 // Field dst:Lorg/apache/hadoop/fs/shell/PathData;
     131: getfield      #46                 // Field org/apache/hadoop/fs/shell/PathData.stat:Lorg/apache/hadoop/fs/FileStatus;
     134: invokevirtual #47                 // Method org/apache/hadoop/fs/FileStatus.isDirectory:()Z
     137: ifeq          150
     140: aload_0
     141: aload_1
     142: aload_0
     143: getfield      #31                 // Field dst:Lorg/apache/hadoop/fs/shell/PathData;
     146: iload_3
     147: invokevirtual #92                 // Method preserveAttributes:(Lorg/apache/hadoop/fs/shell/PathData;Lorg/apache/hadoop/fs/shell/PathData;Z)V
     150: aload_0
     151: aload_2
     152: putfield      #31                 // Field dst:Lorg/apache/hadoop/fs/shell/PathData;
     155: goto          168
     158: astore        5
     160: aload_0
     161: aload_2
     162: putfield      #31                 // Field dst:Lorg/apache/hadoop/fs/shell/PathData;
     165: aload         5
     167: athrow
     168: return
    Exception table:
       from    to  target type
           5   150   158   any
         158   160   158   any

  protected org.apache.hadoop.fs.shell.PathData getTargetPath(org.apache.hadoop.fs.shell.PathData) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #93                 // Method getDepth:()I
       4: ifgt          30
       7: aload_0
       8: getfield      #31                 // Field dst:Lorg/apache/hadoop/fs/shell/PathData;
      11: getfield      #44                 // Field org/apache/hadoop/fs/shell/PathData.exists:Z
      14: ifeq          42
      17: aload_0
      18: getfield      #31                 // Field dst:Lorg/apache/hadoop/fs/shell/PathData;
      21: getfield      #46                 // Field org/apache/hadoop/fs/shell/PathData.stat:Lorg/apache/hadoop/fs/FileStatus;
      24: invokevirtual #47                 // Method org/apache/hadoop/fs/FileStatus.isDirectory:()Z
      27: ifeq          42
      30: aload_0
      31: getfield      #31                 // Field dst:Lorg/apache/hadoop/fs/shell/PathData;
      34: aload_1
      35: invokevirtual #94                 // Method org/apache/hadoop/fs/shell/PathData.getPathDataForChild:(Lorg/apache/hadoop/fs/shell/PathData;)Lorg/apache/hadoop/fs/shell/PathData;
      38: astore_2
      39: goto          69
      42: aload_0
      43: getfield      #31                 // Field dst:Lorg/apache/hadoop/fs/shell/PathData;
      46: invokevirtual #95                 // Method org/apache/hadoop/fs/shell/PathData.representsDirectory:()Z
      49: ifeq          64
      52: aload_0
      53: getfield      #31                 // Field dst:Lorg/apache/hadoop/fs/shell/PathData;
      56: aload_1
      57: invokevirtual #94                 // Method org/apache/hadoop/fs/shell/PathData.getPathDataForChild:(Lorg/apache/hadoop/fs/shell/PathData;)Lorg/apache/hadoop/fs/shell/PathData;
      60: astore_2
      61: goto          69
      64: aload_0
      65: getfield      #31                 // Field dst:Lorg/apache/hadoop/fs/shell/PathData;
      68: astore_2
      69: aload_2
      70: areturn

  protected void copyFileToTarget(org.apache.hadoop.fs.shell.PathData, org.apache.hadoop.fs.shell.PathData) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #53                 // Field org/apache/hadoop/fs/shell/PathData.path:Lorg/apache/hadoop/fs/Path;
       5: aload_2
       6: getfield      #53                 // Field org/apache/hadoop/fs/shell/PathData.path:Lorg/apache/hadoop/fs/Path;
       9: invokespecial #85                 // Method checkPathsForReservedRaw:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
      12: istore_3
      13: aload_1
      14: getfield      #58                 // Field org/apache/hadoop/fs/shell/PathData.fs:Lorg/apache/hadoop/fs/FileSystem;
      17: aload_0
      18: getfield      #3                  // Field verifyChecksum:Z
      21: invokevirtual #96                 // Method org/apache/hadoop/fs/FileSystem.setVerifyChecksum:(Z)V
      24: aconst_null
      25: astore        4
      27: aload_1
      28: getfield      #58                 // Field org/apache/hadoop/fs/shell/PathData.fs:Lorg/apache/hadoop/fs/FileSystem;
      31: aload_1
      32: getfield      #53                 // Field org/apache/hadoop/fs/shell/PathData.path:Lorg/apache/hadoop/fs/Path;
      35: invokevirtual #97                 // Method org/apache/hadoop/fs/FileSystem.open:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FSDataInputStream;
      38: astore        4
      40: aload_0
      41: aload         4
      43: aload_2
      44: invokevirtual #98                 // Method copyStreamToTarget:(Ljava/io/InputStream;Lorg/apache/hadoop/fs/shell/PathData;)V
      47: aload_0
      48: aload_1
      49: aload_2
      50: iload_3
      51: invokevirtual #92                 // Method preserveAttributes:(Lorg/apache/hadoop/fs/shell/PathData;Lorg/apache/hadoop/fs/shell/PathData;Z)V
      54: aload         4
      56: invokestatic  #99                 // Method org/apache/hadoop/io/IOUtils.closeStream:(Ljava/io/Closeable;)V
      59: goto          72
      62: astore        5
      64: aload         4
      66: invokestatic  #99                 // Method org/apache/hadoop/io/IOUtils.closeStream:(Ljava/io/Closeable;)V
      69: aload         5
      71: athrow
      72: return
    Exception table:
       from    to  target type
          27    54    62   any
          62    64    62   any

  private boolean checkPathsForReservedRaw(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path) throws org.apache.hadoop.fs.PathOperationException;
    Code:
       0: aload_1
       1: invokestatic  #100                // Method org/apache/hadoop/fs/Path.getPathWithoutSchemeAndAuthority:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       4: invokevirtual #62                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
       7: ldc           #102                // String /.reserved/raw
       9: invokevirtual #73                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      12: istore_3
      13: aload_2
      14: invokestatic  #100                // Method org/apache/hadoop/fs/Path.getPathWithoutSchemeAndAuthority:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      17: invokevirtual #62                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
      20: ldc           #102                // String /.reserved/raw
      22: invokevirtual #73                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      25: istore        4
      27: iconst_0
      28: istore        5
      30: iload_3
      31: ifeq          78
      34: iload         4
      36: ifne          78
      39: ldc           #103                // String \' copy from \'/.reserved/raw\' to non \'/.reserved/raw\'. Either both source and target must be in \'/.reserved/raw\' or neither.
      41: astore        6
      43: new           #78                 // class org/apache/hadoop/fs/PathOperationException
      46: dup
      47: new           #69                 // class java/lang/StringBuilder
      50: dup
      51: invokespecial #70                 // Method java/lang/StringBuilder."<init>":()V
      54: ldc           #104                // String \'
      56: invokevirtual #71                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: aload_1
      60: invokevirtual #62                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
      63: invokevirtual #71                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: ldc           #103                // String \' copy from \'/.reserved/raw\' to non \'/.reserved/raw\'. Either both source and target must be in \'/.reserved/raw\' or neither.
      68: invokevirtual #71                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: invokevirtual #72                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      74: invokespecial #79                 // Method org/apache/hadoop/fs/PathOperationException."<init>":(Ljava/lang/String;)V
      77: athrow
      78: iload_3
      79: ifne          129
      82: iload         4
      84: ifeq          129
      87: ldc           #105                // String \' copy from non \'/.reserved/raw\' to \'/.reserved/raw\'. Either both source and target must be in \'/.reserved/raw\' or neither.
      89: astore        6
      91: new           #78                 // class org/apache/hadoop/fs/PathOperationException
      94: dup
      95: new           #69                 // class java/lang/StringBuilder
      98: dup
      99: invokespecial #70                 // Method java/lang/StringBuilder."<init>":()V
     102: ldc           #104                // String \'
     104: invokevirtual #71                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: aload_0
     108: getfield      #31                 // Field dst:Lorg/apache/hadoop/fs/shell/PathData;
     111: invokevirtual #45                 // Method org/apache/hadoop/fs/shell/PathData.toString:()Ljava/lang/String;
     114: invokevirtual #71                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: ldc           #105                // String \' copy from non \'/.reserved/raw\' to \'/.reserved/raw\'. Either both source and target must be in \'/.reserved/raw\' or neither.
     119: invokevirtual #71                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: invokevirtual #72                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     125: invokespecial #79                 // Method org/apache/hadoop/fs/PathOperationException."<init>":(Ljava/lang/String;)V
     128: athrow
     129: iload_3
     130: ifeq          141
     133: iload         4
     135: ifeq          141
     138: iconst_1
     139: istore        5
     141: iload         5
     143: ireturn

  protected void copyStreamToTarget(java.io.InputStream, org.apache.hadoop.fs.shell.PathData) throws java.io.IOException;
    Code:
       0: aload_2
       1: getfield      #44                 // Field org/apache/hadoop/fs/shell/PathData.exists:Z
       4: ifeq          36
       7: aload_2
       8: getfield      #46                 // Field org/apache/hadoop/fs/shell/PathData.stat:Lorg/apache/hadoop/fs/FileStatus;
      11: invokevirtual #47                 // Method org/apache/hadoop/fs/FileStatus.isDirectory:()Z
      14: ifne          24
      17: aload_0
      18: getfield      #2                  // Field overwrite:Z
      21: ifne          36
      24: new           #50                 // class org/apache/hadoop/fs/PathExistsException
      27: dup
      28: aload_2
      29: invokevirtual #45                 // Method org/apache/hadoop/fs/shell/PathData.toString:()Ljava/lang/String;
      32: invokespecial #51                 // Method org/apache/hadoop/fs/PathExistsException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: new           #106                // class org/apache/hadoop/fs/shell/CommandWithDestination$TargetFileSystem
      39: dup
      40: aload_2
      41: getfield      #58                 // Field org/apache/hadoop/fs/shell/PathData.fs:Lorg/apache/hadoop/fs/FileSystem;
      44: invokespecial #107                // Method org/apache/hadoop/fs/shell/CommandWithDestination$TargetFileSystem."<init>":(Lorg/apache/hadoop/fs/FileSystem;)V
      47: astore_3
      48: aload_0
      49: getfield      #6                  // Field direct:Z
      52: ifeq          59
      55: aload_2
      56: goto          65
      59: aload_2
      60: ldc           #108                // String ._COPYING_
      62: invokevirtual #109                // Method org/apache/hadoop/fs/shell/PathData.suffix:(Ljava/lang/String;)Lorg/apache/hadoop/fs/shell/PathData;
      65: astore        4
      67: aload_3
      68: aload_0
      69: getfield      #4                  // Field writeChecksum:Z
      72: invokevirtual #110                // Method org/apache/hadoop/fs/shell/CommandWithDestination$TargetFileSystem.setWriteChecksum:(Z)V
      75: aload_3
      76: aload_1
      77: aload         4
      79: aload_0
      80: getfield      #5                  // Field lazyPersist:Z
      83: aload_0
      84: getfield      #6                  // Field direct:Z
      87: invokevirtual #111                // Method org/apache/hadoop/fs/shell/CommandWithDestination$TargetFileSystem.writeStreamToFile:(Ljava/io/InputStream;Lorg/apache/hadoop/fs/shell/PathData;ZZ)V
      90: aload_0
      91: getfield      #6                  // Field direct:Z
      94: ifne          104
      97: aload_3
      98: aload         4
     100: aload_2
     101: invokevirtual #112                // Method org/apache/hadoop/fs/shell/CommandWithDestination$TargetFileSystem.rename:(Lorg/apache/hadoop/fs/shell/PathData;Lorg/apache/hadoop/fs/shell/PathData;)V
     104: aload_3
     105: invokevirtual #113                // Method org/apache/hadoop/fs/shell/CommandWithDestination$TargetFileSystem.close:()V
     108: goto          120
     111: astore        5
     113: aload_3
     114: invokevirtual #113                // Method org/apache/hadoop/fs/shell/CommandWithDestination$TargetFileSystem.close:()V
     117: aload         5
     119: athrow
     120: return
    Exception table:
       from    to  target type
          48   104   111   any
         111   113   111   any

  protected void preserveAttributes(org.apache.hadoop.fs.shell.PathData, org.apache.hadoop.fs.shell.PathData, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #10                 // Field org/apache/hadoop/fs/shell/CommandWithDestination$FileAttribute.TIMESTAMPS:Lorg/apache/hadoop/fs/shell/CommandWithDestination$FileAttribute;
       4: invokespecial #114                // Method shouldPreserve:(Lorg/apache/hadoop/fs/shell/CommandWithDestination$FileAttribute;)Z
       7: ifeq          35
      10: aload_2
      11: getfield      #58                 // Field org/apache/hadoop/fs/shell/PathData.fs:Lorg/apache/hadoop/fs/FileSystem;
      14: aload_2
      15: getfield      #53                 // Field org/apache/hadoop/fs/shell/PathData.path:Lorg/apache/hadoop/fs/Path;
      18: aload_1
      19: getfield      #46                 // Field org/apache/hadoop/fs/shell/PathData.stat:Lorg/apache/hadoop/fs/FileStatus;
      22: invokevirtual #115                // Method org/apache/hadoop/fs/FileStatus.getModificationTime:()J
      25: aload_1
      26: getfield      #46                 // Field org/apache/hadoop/fs/shell/PathData.stat:Lorg/apache/hadoop/fs/FileStatus;
      29: invokevirtual #116                // Method org/apache/hadoop/fs/FileStatus.getAccessTime:()J
      32: invokevirtual #117                // Method org/apache/hadoop/fs/FileSystem.setTimes:(Lorg/apache/hadoop/fs/Path;JJ)V
      35: aload_0
      36: getstatic     #12                 // Field org/apache/hadoop/fs/shell/CommandWithDestination$FileAttribute.OWNERSHIP:Lorg/apache/hadoop/fs/shell/CommandWithDestination$FileAttribute;
      39: invokespecial #114                // Method shouldPreserve:(Lorg/apache/hadoop/fs/shell/CommandWithDestination$FileAttribute;)Z
      42: ifeq          70
      45: aload_2
      46: getfield      #58                 // Field org/apache/hadoop/fs/shell/PathData.fs:Lorg/apache/hadoop/fs/FileSystem;
      49: aload_2
      50: getfield      #53                 // Field org/apache/hadoop/fs/shell/PathData.path:Lorg/apache/hadoop/fs/Path;
      53: aload_1
      54: getfield      #46                 // Field org/apache/hadoop/fs/shell/PathData.stat:Lorg/apache/hadoop/fs/FileStatus;
      57: invokevirtual #118                // Method org/apache/hadoop/fs/FileStatus.getOwner:()Ljava/lang/String;
      60: aload_1
      61: getfield      #46                 // Field org/apache/hadoop/fs/shell/PathData.stat:Lorg/apache/hadoop/fs/FileStatus;
      64: invokevirtual #119                // Method org/apache/hadoop/fs/FileStatus.getGroup:()Ljava/lang/String;
      67: invokevirtual #120                // Method org/apache/hadoop/fs/FileSystem.setOwner:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;)V
      70: aload_0
      71: getstatic     #13                 // Field org/apache/hadoop/fs/shell/CommandWithDestination$FileAttribute.PERMISSION:Lorg/apache/hadoop/fs/shell/CommandWithDestination$FileAttribute;
      74: invokespecial #114                // Method shouldPreserve:(Lorg/apache/hadoop/fs/shell/CommandWithDestination$FileAttribute;)Z
      77: ifne          90
      80: aload_0
      81: getstatic     #121                // Field org/apache/hadoop/fs/shell/CommandWithDestination$FileAttribute.ACL:Lorg/apache/hadoop/fs/shell/CommandWithDestination$FileAttribute;
      84: invokespecial #114                // Method shouldPreserve:(Lorg/apache/hadoop/fs/shell/CommandWithDestination$FileAttribute;)Z
      87: ifeq          108
      90: aload_2
      91: getfield      #58                 // Field org/apache/hadoop/fs/shell/PathData.fs:Lorg/apache/hadoop/fs/FileSystem;
      94: aload_2
      95: getfield      #53                 // Field org/apache/hadoop/fs/shell/PathData.path:Lorg/apache/hadoop/fs/Path;
      98: aload_1
      99: getfield      #46                 // Field org/apache/hadoop/fs/shell/PathData.stat:Lorg/apache/hadoop/fs/FileStatus;
     102: invokevirtual #122                // Method org/apache/hadoop/fs/FileStatus.getPermission:()Lorg/apache/hadoop/fs/permission/FsPermission;
     105: invokevirtual #123                // Method org/apache/hadoop/fs/FileSystem.setPermission:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)V
     108: aload_0
     109: getstatic     #121                // Field org/apache/hadoop/fs/shell/CommandWithDestination$FileAttribute.ACL:Lorg/apache/hadoop/fs/shell/CommandWithDestination$FileAttribute;
     112: invokespecial #114                // Method shouldPreserve:(Lorg/apache/hadoop/fs/shell/CommandWithDestination$FileAttribute;)Z
     115: ifeq          175
     118: aload_1
     119: getfield      #46                 // Field org/apache/hadoop/fs/shell/PathData.stat:Lorg/apache/hadoop/fs/FileStatus;
     122: invokevirtual #124                // Method org/apache/hadoop/fs/FileStatus.hasAcl:()Z
     125: ifeq          175
     128: aload_1
     129: getfield      #46                 // Field org/apache/hadoop/fs/shell/PathData.stat:Lorg/apache/hadoop/fs/FileStatus;
     132: invokevirtual #122                // Method org/apache/hadoop/fs/FileStatus.getPermission:()Lorg/apache/hadoop/fs/permission/FsPermission;
     135: astore        4
     137: aload_1
     138: getfield      #58                 // Field org/apache/hadoop/fs/shell/PathData.fs:Lorg/apache/hadoop/fs/FileSystem;
     141: aload_1
     142: getfield      #53                 // Field org/apache/hadoop/fs/shell/PathData.path:Lorg/apache/hadoop/fs/Path;
     145: invokevirtual #125                // Method org/apache/hadoop/fs/FileSystem.getAclStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/permission/AclStatus;
     148: invokevirtual #126                // Method org/apache/hadoop/fs/permission/AclStatus.getEntries:()Ljava/util/List;
     151: astore        5
     153: aload         4
     155: aload         5
     157: invokestatic  #127                // Method org/apache/hadoop/fs/permission/AclUtil.getAclFromPermAndEntries:(Lorg/apache/hadoop/fs/permission/FsPermission;Ljava/util/List;)Ljava/util/List;
     160: astore        6
     162: aload_2
     163: getfield      #58                 // Field org/apache/hadoop/fs/shell/PathData.fs:Lorg/apache/hadoop/fs/FileSystem;
     166: aload_2
     167: getfield      #53                 // Field org/apache/hadoop/fs/shell/PathData.path:Lorg/apache/hadoop/fs/Path;
     170: aload         6
     172: invokevirtual #128                // Method org/apache/hadoop/fs/FileSystem.setAcl:(Lorg/apache/hadoop/fs/Path;Ljava/util/List;)V
     175: aload_0
     176: getstatic     #129                // Field org/apache/hadoop/fs/shell/CommandWithDestination$FileAttribute.XATTR:Lorg/apache/hadoop/fs/shell/CommandWithDestination$FileAttribute;
     179: invokespecial #114                // Method shouldPreserve:(Lorg/apache/hadoop/fs/shell/CommandWithDestination$FileAttribute;)Z
     182: istore        4
     184: iload         4
     186: ifne          193
     189: iload_3
     190: ifeq          308
     193: aload_1
     194: getfield      #58                 // Field org/apache/hadoop/fs/shell/PathData.fs:Lorg/apache/hadoop/fs/FileSystem;
     197: aload_1
     198: getfield      #53                 // Field org/apache/hadoop/fs/shell/PathData.path:Lorg/apache/hadoop/fs/Path;
     201: invokevirtual #130                // Method org/apache/hadoop/fs/FileSystem.getXAttrs:(Lorg/apache/hadoop/fs/Path;)Ljava/util/Map;
     204: astore        5
     206: aload         5
     208: ifnull        308
     211: aload         5
     213: invokeinterface #131,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     218: invokeinterface #132,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     223: astore        6
     225: aload         6
     227: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     232: ifeq          308
     235: aload         6
     237: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     242: checkcast     #133                // class java/util/Map$Entry
     245: astore        7
     247: aload         7
     249: invokeinterface #134,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     254: checkcast     #25                 // class java/lang/String
     257: astore        8
     259: aload         8
     261: ldc           #135                // String raw.
     263: invokevirtual #73                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     266: ifne          274
     269: iload         4
     271: ifeq          305
     274: aload_2
     275: getfield      #58                 // Field org/apache/hadoop/fs/shell/PathData.fs:Lorg/apache/hadoop/fs/FileSystem;
     278: aload_2
     279: getfield      #53                 // Field org/apache/hadoop/fs/shell/PathData.path:Lorg/apache/hadoop/fs/Path;
     282: aload         7
     284: invokeinterface #134,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     289: checkcast     #25                 // class java/lang/String
     292: aload         7
     294: invokeinterface #136,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     299: checkcast     #137                // class "[B"
     302: invokevirtual #138                // Method org/apache/hadoop/fs/FileSystem.setXAttr:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;[B)V
     305: goto          225
     308: return
}
