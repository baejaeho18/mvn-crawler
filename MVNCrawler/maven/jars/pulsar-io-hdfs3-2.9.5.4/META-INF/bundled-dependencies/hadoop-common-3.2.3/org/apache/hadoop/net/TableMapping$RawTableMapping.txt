Compiled from "TableMapping.java"
final class org.apache.hadoop.net.TableMapping$RawTableMapping extends org.apache.hadoop.conf.Configured implements org.apache.hadoop.net.DNSToSwitchMapping {
  private java.util.Map<java.lang.String, java.lang.String> map;

  private org.apache.hadoop.net.TableMapping$RawTableMapping();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/apache/hadoop/conf/Configured."<init>":()V
       4: return

  private java.util.Map<java.lang.String, java.lang.String> load();
    Code:
       0: new           #4                  // class java/util/HashMap
       3: dup
       4: invokespecial #5                  // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #6                  // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
      12: ldc           #7                  // String net.topology.table.file.name
      14: aconst_null
      15: invokevirtual #8                  // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      18: astore_2
      19: aload_2
      20: invokestatic  #9                  // Method org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z
      23: ifeq          38
      26: invokestatic  #10                 // Method org/apache/hadoop/net/TableMapping.access$100:()Lorg/slf4j/Logger;
      29: ldc           #11                 // String net.topology.table.file.name not configured.
      31: invokeinterface #12,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      36: aconst_null
      37: areturn
      38: new           #13                 // class java/io/BufferedReader
      41: dup
      42: new           #14                 // class java/io/InputStreamReader
      45: dup
      46: new           #15                 // class java/io/FileInputStream
      49: dup
      50: aload_2
      51: invokespecial #16                 // Method java/io/FileInputStream."<init>":(Ljava/lang/String;)V
      54: getstatic     #17                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      57: invokespecial #18                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V
      60: invokespecial #19                 // Method java/io/BufferedReader."<init>":(Ljava/io/Reader;)V
      63: astore_3
      64: aconst_null
      65: astore        4
      67: aload_3
      68: invokevirtual #20                 // Method java/io/BufferedReader.readLine:()Ljava/lang/String;
      71: astore        5
      73: aload         5
      75: ifnull        175
      78: aload         5
      80: invokevirtual #21                 // Method java/lang/String.trim:()Ljava/lang/String;
      83: astore        5
      85: aload         5
      87: invokevirtual #22                 // Method java/lang/String.length:()I
      90: ifeq          166
      93: aload         5
      95: iconst_0
      96: invokevirtual #23                 // Method java/lang/String.charAt:(I)C
      99: bipush        35
     101: if_icmpeq     166
     104: aload         5
     106: ldc           #24                 // String \\s+
     108: invokevirtual #25                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
     111: astore        6
     113: aload         6
     115: arraylength
     116: iconst_2
     117: if_icmpne     138
     120: aload_1
     121: aload         6
     123: iconst_0
     124: aaload
     125: aload         6
     127: iconst_1
     128: aaload
     129: invokeinterface #26,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     134: pop
     135: goto          166
     138: invokestatic  #10                 // Method org/apache/hadoop/net/TableMapping.access$100:()Lorg/slf4j/Logger;
     141: new           #27                 // class java/lang/StringBuilder
     144: dup
     145: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
     148: ldc           #29                 // String Line does not have two columns. Ignoring.
     150: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     153: aload         5
     155: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     158: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     161: invokeinterface #12,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     166: aload_3
     167: invokevirtual #20                 // Method java/io/BufferedReader.readLine:()Ljava/lang/String;
     170: astore        5
     172: goto          73
     175: aload_3
     176: ifnull        256
     179: aload         4
     181: ifnull        203
     184: aload_3
     185: invokevirtual #32                 // Method java/io/BufferedReader.close:()V
     188: goto          256
     191: astore        5
     193: aload         4
     195: aload         5
     197: invokevirtual #34                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     200: goto          256
     203: aload_3
     204: invokevirtual #32                 // Method java/io/BufferedReader.close:()V
     207: goto          256
     210: astore        5
     212: aload         5
     214: astore        4
     216: aload         5
     218: athrow
     219: astore        7
     221: aload_3
     222: ifnull        253
     225: aload         4
     227: ifnull        249
     230: aload_3
     231: invokevirtual #32                 // Method java/io/BufferedReader.close:()V
     234: goto          253
     237: astore        8
     239: aload         4
     241: aload         8
     243: invokevirtual #34                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     246: goto          253
     249: aload_3
     250: invokevirtual #32                 // Method java/io/BufferedReader.close:()V
     253: aload         7
     255: athrow
     256: goto          290
     259: astore_3
     260: invokestatic  #10                 // Method org/apache/hadoop/net/TableMapping.access$100:()Lorg/slf4j/Logger;
     263: new           #27                 // class java/lang/StringBuilder
     266: dup
     267: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
     270: aload_2
     271: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     274: ldc           #36                 // String  cannot be read.
     276: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     279: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     282: aload_3
     283: invokeinterface #37,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     288: aconst_null
     289: areturn
     290: aload_1
     291: areturn
    Exception table:
       from    to  target type
         184   188   191   Class java/lang/Throwable
          67   175   210   Class java/lang/Throwable
          67   175   219   any
         230   234   237   Class java/lang/Throwable
         210   221   219   any
          38   256   259   Class java/lang/Exception

  public synchronized java.util.List<java.lang.String> resolve(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #38                 // Field map:Ljava/util/Map;
       4: ifnonnull     43
       7: aload_0
       8: aload_0
       9: invokespecial #39                 // Method load:()Ljava/util/Map;
      12: putfield      #38                 // Field map:Ljava/util/Map;
      15: aload_0
      16: getfield      #38                 // Field map:Ljava/util/Map;
      19: ifnonnull     43
      22: invokestatic  #10                 // Method org/apache/hadoop/net/TableMapping.access$100:()Lorg/slf4j/Logger;
      25: ldc           #41                 // String Failed to read topology table. /default-rack will be used for all nodes.
      27: invokeinterface #12,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      32: aload_0
      33: new           #4                  // class java/util/HashMap
      36: dup
      37: invokespecial #5                  // Method java/util/HashMap."<init>":()V
      40: putfield      #38                 // Field map:Ljava/util/Map;
      43: new           #42                 // class java/util/ArrayList
      46: dup
      47: aload_1
      48: invokeinterface #43,  1           // InterfaceMethod java/util/List.size:()I
      53: invokespecial #44                 // Method java/util/ArrayList."<init>":(I)V
      56: astore_2
      57: aload_1
      58: invokeinterface #45,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      63: astore_3
      64: aload_3
      65: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      70: ifeq          129
      73: aload_3
      74: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      79: checkcast     #48                 // class java/lang/String
      82: astore        4
      84: aload_0
      85: getfield      #38                 // Field map:Ljava/util/Map;
      88: aload         4
      90: invokeinterface #49,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      95: checkcast     #48                 // class java/lang/String
      98: astore        5
     100: aload         5
     102: ifnull        117
     105: aload_2
     106: aload         5
     108: invokeinterface #50,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     113: pop
     114: goto          126
     117: aload_2
     118: ldc           #51                 // String /default-rack
     120: invokeinterface #50,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     125: pop
     126: goto          64
     129: aload_2
     130: areturn

  public void reloadCachedMappings();
    Code:
       0: aload_0
       1: invokespecial #39                 // Method load:()Ljava/util/Map;
       4: astore_1
       5: aload_1
       6: ifnonnull     22
       9: invokestatic  #10                 // Method org/apache/hadoop/net/TableMapping.access$100:()Lorg/slf4j/Logger;
      12: ldc           #52                 // String Failed to reload the topology table.  The cached mappings will not be cleared.
      14: invokeinterface #53,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
      19: goto          41
      22: aload_0
      23: dup
      24: astore_2
      25: monitorenter
      26: aload_0
      27: aload_1
      28: putfield      #38                 // Field map:Ljava/util/Map;
      31: aload_2
      32: monitorexit
      33: goto          41
      36: astore_3
      37: aload_2
      38: monitorexit
      39: aload_3
      40: athrow
      41: return
    Exception table:
       from    to  target type
          26    33    36   any
          36    39    36   any

  public void reloadCachedMappings(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: invokevirtual #54                 // Method reloadCachedMappings:()V
       4: return

  org.apache.hadoop.net.TableMapping$RawTableMapping(org.apache.hadoop.net.TableMapping$1);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method "<init>":()V
       4: return
}
