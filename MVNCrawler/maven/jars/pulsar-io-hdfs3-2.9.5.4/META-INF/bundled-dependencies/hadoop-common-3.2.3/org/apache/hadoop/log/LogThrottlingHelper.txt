Compiled from "LogThrottlingHelper.java"
public class org.apache.hadoop.log.LogThrottlingHelper {
  public static final org.apache.hadoop.log.LogThrottlingHelper$LogAction DO_NOT_LOG;

  private static final java.lang.String DEFAULT_RECORDER_NAME;

  private final long minLogPeriodMs;

  private java.lang.String primaryRecorderName;

  private final org.apache.hadoop.util.Timer timer;

  private final java.util.Map<java.lang.String, org.apache.hadoop.log.LogThrottlingHelper$LoggingAction> currentLogs;

  private long lastLogTimestampMs;

  public org.apache.hadoop.log.LogThrottlingHelper(long);
    Code:
       0: aload_0
       1: lload_1
       2: aconst_null
       3: invokespecial #1                  // Method "<init>":(JLjava/lang/String;)V
       6: return

  public org.apache.hadoop.log.LogThrottlingHelper(long, java.lang.String);
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: new           #2                  // class org/apache/hadoop/util/Timer
       6: dup
       7: invokespecial #3                  // Method org/apache/hadoop/util/Timer."<init>":()V
      10: invokespecial #4                  // Method "<init>":(JLjava/lang/String;Lorg/apache/hadoop/util/Timer;)V
      13: return

  org.apache.hadoop.log.LogThrottlingHelper(long, java.lang.String, org.apache.hadoop.util.Timer);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc2_w        #7                  // long -9223372036854775808l
       8: putfield      #9                  // Field lastLogTimestampMs:J
      11: aload_0
      12: lload_1
      13: putfield      #10                 // Field minLogPeriodMs:J
      16: aload_0
      17: aload_3
      18: putfield      #11                 // Field primaryRecorderName:Ljava/lang/String;
      21: aload_0
      22: aload         4
      24: putfield      #12                 // Field timer:Lorg/apache/hadoop/util/Timer;
      27: aload_0
      28: new           #13                 // class java/util/HashMap
      31: dup
      32: invokespecial #14                 // Method java/util/HashMap."<init>":()V
      35: putfield      #15                 // Field currentLogs:Ljava/util/Map;
      38: return

  public org.apache.hadoop.log.LogThrottlingHelper$LogAction record(double...);
    Code:
       0: aload_0
       1: ldc           #17                 // String __DEFAULT_RECORDER_NAME__
       3: aload_0
       4: getfield      #12                 // Field timer:Lorg/apache/hadoop/util/Timer;
       7: invokevirtual #18                 // Method org/apache/hadoop/util/Timer.monotonicNow:()J
      10: aload_1
      11: invokevirtual #19                 // Method record:(Ljava/lang/String;J[D)Lorg/apache/hadoop/log/LogThrottlingHelper$LogAction;
      14: areturn

  public org.apache.hadoop.log.LogThrottlingHelper$LogAction record(java.lang.String, long, double...);
    Code:
       0: aload_0
       1: getfield      #11                 // Field primaryRecorderName:Ljava/lang/String;
       4: ifnonnull     12
       7: aload_0
       8: aload_1
       9: putfield      #11                 // Field primaryRecorderName:Ljava/lang/String;
      12: aload_0
      13: getfield      #15                 // Field currentLogs:Ljava/util/Map;
      16: aload_1
      17: invokeinterface #20,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #21                 // class org/apache/hadoop/log/LogThrottlingHelper$LoggingAction
      25: astore        5
      27: aload         5
      29: ifnull        40
      32: aload         5
      34: invokestatic  #22                 // Method org/apache/hadoop/log/LogThrottlingHelper$LoggingAction.access$100:(Lorg/apache/hadoop/log/LogThrottlingHelper$LoggingAction;)Z
      37: ifeq          83
      40: new           #21                 // class org/apache/hadoop/log/LogThrottlingHelper$LoggingAction
      43: dup
      44: aload         4
      46: arraylength
      47: invokespecial #23                 // Method org/apache/hadoop/log/LogThrottlingHelper$LoggingAction."<init>":(I)V
      50: astore        5
      52: aload_0
      53: getfield      #15                 // Field currentLogs:Ljava/util/Map;
      56: aload_1
      57: invokeinterface #24,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      62: ifne          70
      65: aload         5
      67: invokestatic  #25                 // Method org/apache/hadoop/log/LogThrottlingHelper$LoggingAction.access$200:(Lorg/apache/hadoop/log/LogThrottlingHelper$LoggingAction;)V
      70: aload_0
      71: getfield      #15                 // Field currentLogs:Ljava/util/Map;
      74: aload_1
      75: aload         5
      77: invokeinterface #26,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      82: pop
      83: aload         5
      85: aload         4
      87: invokestatic  #27                 // Method org/apache/hadoop/log/LogThrottlingHelper$LoggingAction.access$300:(Lorg/apache/hadoop/log/LogThrottlingHelper$LoggingAction;[D)V
      90: aload_0
      91: getfield      #11                 // Field primaryRecorderName:Ljava/lang/String;
      94: aload_1
      95: invokevirtual #28                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      98: ifeq          166
     101: lload_2
     102: aload_0
     103: getfield      #10                 // Field minLogPeriodMs:J
     106: lsub
     107: aload_0
     108: getfield      #9                  // Field lastLogTimestampMs:J
     111: lcmp
     112: iflt          166
     115: aload_0
     116: lload_2
     117: putfield      #9                  // Field lastLogTimestampMs:J
     120: aload_0
     121: getfield      #15                 // Field currentLogs:Ljava/util/Map;
     124: invokeinterface #29,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     129: invokeinterface #30,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     134: astore        6
     136: aload         6
     138: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     143: ifeq          166
     146: aload         6
     148: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     153: checkcast     #21                 // class org/apache/hadoop/log/LogThrottlingHelper$LoggingAction
     156: astore        7
     158: aload         7
     160: invokestatic  #25                 // Method org/apache/hadoop/log/LogThrottlingHelper$LoggingAction.access$200:(Lorg/apache/hadoop/log/LogThrottlingHelper$LoggingAction;)V
     163: goto          136
     166: aload         5
     168: invokevirtual #33                 // Method org/apache/hadoop/log/LogThrottlingHelper$LoggingAction.shouldLog:()Z
     171: ifeq          182
     174: aload         5
     176: invokestatic  #34                 // Method org/apache/hadoop/log/LogThrottlingHelper$LoggingAction.access$400:(Lorg/apache/hadoop/log/LogThrottlingHelper$LoggingAction;)V
     179: aload         5
     181: areturn
     182: getstatic     #35                 // Field DO_NOT_LOG:Lorg/apache/hadoop/log/LogThrottlingHelper$LogAction;
     185: areturn

  public org.apache.commons.math3.stat.descriptive.SummaryStatistics getCurrentStats(java.lang.String, int);
    Code:
       0: aload_0
       1: getfield      #15                 // Field currentLogs:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #20,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #21                 // class org/apache/hadoop/log/LogThrottlingHelper$LoggingAction
      13: astore_3
      14: aload_3
      15: ifnull        24
      18: aload_3
      19: iload_2
      20: invokevirtual #36                 // Method org/apache/hadoop/log/LogThrottlingHelper$LoggingAction.getStats:(I)Lorg/apache/commons/math3/stat/descriptive/SummaryStatistics;
      23: areturn
      24: aconst_null
      25: areturn

  public static java.lang.String getLogSupressionMessage(org.apache.hadoop.log.LogThrottlingHelper$LogAction);
    Code:
       0: aload_0
       1: invokeinterface #37,  1           // InterfaceMethod org/apache/hadoop/log/LogThrottlingHelper$LogAction.getCount:()I
       6: iconst_1
       7: if_icmple     42
      10: new           #38                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #40                 // String  (suppressed logging
      19: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: invokeinterface #37,  1           // InterfaceMethod org/apache/hadoop/log/LogThrottlingHelper$LogAction.getCount:()I
      28: iconst_1
      29: isub
      30: invokevirtual #42                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      33: ldc           #43                 // String  times)
      35: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: areturn
      42: ldc           #45                 // String
      44: areturn

  static {};
    Code:
       0: new           #46                 // class org/apache/hadoop/log/LogThrottlingHelper$NoLogAction
       3: dup
       4: aconst_null
       5: invokespecial #47                 // Method org/apache/hadoop/log/LogThrottlingHelper$NoLogAction."<init>":(Lorg/apache/hadoop/log/LogThrottlingHelper$1;)V
       8: putstatic     #35                 // Field DO_NOT_LOG:Lorg/apache/hadoop/log/LogThrottlingHelper$LogAction;
      11: return
}
