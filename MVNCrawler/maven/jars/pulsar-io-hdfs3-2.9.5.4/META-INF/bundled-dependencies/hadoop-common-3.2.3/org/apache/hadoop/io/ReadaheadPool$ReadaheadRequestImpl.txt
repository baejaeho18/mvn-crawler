Compiled from "ReadaheadPool.java"
class org.apache.hadoop.io.ReadaheadPool$ReadaheadRequestImpl implements java.lang.Runnable,org.apache.hadoop.io.ReadaheadPool$ReadaheadRequest {
  private final java.lang.String identifier;

  private final java.io.FileDescriptor fd;

  private final long off;

  private final long len;

  private volatile boolean canceled;

  private org.apache.hadoop.io.ReadaheadPool$ReadaheadRequestImpl(java.lang.String, java.io.FileDescriptor, long, long);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #3                  // Field canceled:Z
       9: aload_0
      10: aload_1
      11: putfield      #4                  // Field identifier:Ljava/lang/String;
      14: aload_0
      15: aload_2
      16: putfield      #5                  // Field fd:Ljava/io/FileDescriptor;
      19: aload_0
      20: lload_3
      21: putfield      #6                  // Field off:J
      24: aload_0
      25: lload         5
      27: putfield      #7                  // Field len:J
      30: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #3                  // Field canceled:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #5                  // Field fd:Ljava/io/FileDescriptor;
      12: invokevirtual #8                  // Method java/io/FileDescriptor.valid:()Z
      15: ifeq          43
      18: invokestatic  #9                  // Method org/apache/hadoop/io/nativeio/NativeIO$POSIX.getCacheManipulator:()Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$CacheManipulator;
      21: aload_0
      22: getfield      #4                  // Field identifier:Ljava/lang/String;
      25: aload_0
      26: getfield      #5                  // Field fd:Ljava/io/FileDescriptor;
      29: aload_0
      30: getfield      #6                  // Field off:J
      33: aload_0
      34: getfield      #7                  // Field len:J
      37: getstatic     #10                 // Field org/apache/hadoop/io/nativeio/NativeIO$POSIX.POSIX_FADV_WILLNEED:I
      40: invokevirtual #11                 // Method org/apache/hadoop/io/nativeio/NativeIO$POSIX$CacheManipulator.posixFadviseIfPossible:(Ljava/lang/String;Ljava/io/FileDescriptor;JJI)V
      43: goto          86
      46: astore_1
      47: aload_0
      48: getfield      #3                  // Field canceled:Z
      51: ifeq          55
      54: return
      55: getstatic     #13                 // Field org/apache/hadoop/io/ReadaheadPool.LOG:Lorg/slf4j/Logger;
      58: new           #14                 // class java/lang/StringBuilder
      61: dup
      62: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      65: ldc           #16                 // String Failed readahead on
      67: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: aload_0
      71: getfield      #4                  // Field identifier:Ljava/lang/String;
      74: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      80: aload_1
      81: invokeinterface #19,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      86: return
    Exception table:
       from    to  target type
           8    43    46   Class java/io/IOException

  public void cancel();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #3                  // Field canceled:Z
       5: return

  public long getOffset();
    Code:
       0: aload_0
       1: getfield      #6                  // Field off:J
       4: lreturn

  public long getLength();
    Code:
       0: aload_0
       1: getfield      #7                  // Field len:J
       4: lreturn

  public java.lang.String toString();
    Code:
       0: new           #14                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #20                 // String ReadaheadRequestImpl [identifier=\'
       9: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #4                  // Field identifier:Ljava/lang/String;
      16: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #21                 // String \', fd=
      21: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #5                  // Field fd:Ljava/io/FileDescriptor;
      28: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #23                 // String , off=
      33: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #6                  // Field off:J
      40: invokevirtual #24                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      43: ldc           #25                 // String , len=
      45: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #7                  // Field len:J
      52: invokevirtual #24                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      55: ldc           #26                 // String ]
      57: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: areturn

  org.apache.hadoop.io.ReadaheadPool$ReadaheadRequestImpl(java.lang.String, java.io.FileDescriptor, long, long, org.apache.hadoop.io.ReadaheadPool$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: lload_3
       4: lload         5
       6: invokespecial #1                  // Method "<init>":(Ljava/lang/String;Ljava/io/FileDescriptor;JJ)V
       9: return
}
