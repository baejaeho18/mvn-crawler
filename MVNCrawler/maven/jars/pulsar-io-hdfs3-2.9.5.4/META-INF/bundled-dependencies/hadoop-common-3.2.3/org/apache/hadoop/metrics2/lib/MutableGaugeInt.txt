Compiled from "MutableGaugeInt.java"
public class org.apache.hadoop.metrics2.lib.MutableGaugeInt extends org.apache.hadoop.metrics2.lib.MutableGauge {
  private java.util.concurrent.atomic.AtomicInteger value;

  org.apache.hadoop.metrics2.lib.MutableGaugeInt(org.apache.hadoop.metrics2.MetricsInfo, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/hadoop/metrics2/lib/MutableGauge."<init>":(Lorg/apache/hadoop/metrics2/MetricsInfo;)V
       5: aload_0
       6: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
       9: dup
      10: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      13: putfield      #4                  // Field value:Ljava/util/concurrent/atomic/AtomicInteger;
      16: aload_0
      17: getfield      #4                  // Field value:Ljava/util/concurrent/atomic/AtomicInteger;
      20: iload_2
      21: invokevirtual #5                  // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      24: return

  public int value();
    Code:
       0: aload_0
       1: getfield      #4                  // Field value:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public void incr();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #7                  // Method incr:(I)V
       5: return

  public void incr(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field value:Ljava/util/concurrent/atomic/AtomicInteger;
       4: iload_1
       5: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicInteger.addAndGet:(I)I
       8: pop
       9: aload_0
      10: invokevirtual #9                  // Method setChanged:()V
      13: return

  public void decr();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #10                 // Method decr:(I)V
       5: return

  public void decr(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field value:Ljava/util/concurrent/atomic/AtomicInteger;
       4: iload_1
       5: ineg
       6: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicInteger.addAndGet:(I)I
       9: pop
      10: aload_0
      11: invokevirtual #9                  // Method setChanged:()V
      14: return

  public void set(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field value:Ljava/util/concurrent/atomic/AtomicInteger;
       4: iload_1
       5: invokevirtual #5                  // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
       8: aload_0
       9: invokevirtual #9                  // Method setChanged:()V
      12: return

  public void snapshot(org.apache.hadoop.metrics2.MetricsRecordBuilder, boolean);
    Code:
       0: iload_2
       1: ifne          11
       4: aload_0
       5: invokevirtual #11                 // Method changed:()Z
       8: ifeq          28
      11: aload_1
      12: aload_0
      13: invokevirtual #12                 // Method info:()Lorg/apache/hadoop/metrics2/MetricsInfo;
      16: aload_0
      17: invokevirtual #13                 // Method value:()I
      20: invokevirtual #14                 // Method org/apache/hadoop/metrics2/MetricsRecordBuilder.addGauge:(Lorg/apache/hadoop/metrics2/MetricsInfo;I)Lorg/apache/hadoop/metrics2/MetricsRecordBuilder;
      23: pop
      24: aload_0
      25: invokevirtual #15                 // Method clearChanged:()V
      28: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #4                  // Field value:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicInteger.toString:()Ljava/lang/String;
       7: areturn
}
