Compiled from "HarFileSystem.java"
public class org.apache.hadoop.fs.HarFileSystem extends org.apache.hadoop.fs.FileSystem {
  private static final org.slf4j.Logger LOG;

  public static final java.lang.String METADATA_CACHE_ENTRIES_KEY;

  public static final int METADATA_CACHE_ENTRIES_DEFAULT;

  public static final int VERSION;

  private static java.util.Map<java.net.URI, org.apache.hadoop.fs.HarFileSystem$HarMetaData> harMetaCache;

  private java.net.URI uri;

  private org.apache.hadoop.fs.Path archivePath;

  private java.lang.String harAuth;

  private org.apache.hadoop.fs.HarFileSystem$HarMetaData metadata;

  private org.apache.hadoop.fs.FileSystem fs;

  public org.apache.hadoop.fs.HarFileSystem();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method org/apache/hadoop/fs/FileSystem."<init>":()V
       4: return

  public java.lang.String getScheme();
    Code:
       0: ldc           #7                  // String har
       2: areturn

  public org.apache.hadoop.fs.HarFileSystem(org.apache.hadoop.fs.FileSystem);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method org/apache/hadoop/fs/FileSystem."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       9: aload_0
      10: aload_1
      11: getfield      #9                  // Field org/apache/hadoop/fs/FileSystem.statistics:Lorg/apache/hadoop/fs/FileSystem$Statistics;
      14: putfield      #10                 // Field statistics:Lorg/apache/hadoop/fs/FileSystem$Statistics;
      17: return

  private synchronized void initializeMetadataCache(org.apache.hadoop.conf.Configuration);
    Code:
       0: getstatic     #11                 // Field harMetaCache:Ljava/util/Map;
       3: ifnonnull     29
       6: aload_1
       7: ldc           #13                 // String fs.har.metadatacache.entries
       9: bipush        10
      11: invokevirtual #14                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      14: istore_2
      15: new           #15                 // class org/apache/hadoop/fs/HarFileSystem$LruCache
      18: dup
      19: iload_2
      20: invokespecial #16                 // Method org/apache/hadoop/fs/HarFileSystem$LruCache."<init>":(I)V
      23: invokestatic  #17                 // Method java/util/Collections.synchronizedMap:(Ljava/util/Map;)Ljava/util/Map;
      26: putstatic     #11                 // Field harMetaCache:Ljava/util/Map;
      29: return

  public void initialize(java.net.URI, org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #18                 // Method initializeMetadataCache:(Lorg/apache/hadoop/conf/Configuration;)V
       5: aload_0
       6: aload_1
       7: aload_2
       8: invokespecial #19                 // Method decodeHarURI:(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)Ljava/net/URI;
      11: astore_3
      12: aload_0
      13: new           #20                 // class org/apache/hadoop/fs/Path
      16: dup
      17: aload_1
      18: invokevirtual #21                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      21: aload_1
      22: invokevirtual #22                 // Method java/net/URI.getAuthority:()Ljava/lang/String;
      25: aload_1
      26: invokevirtual #23                 // Method java/net/URI.getPath:()Ljava/lang/String;
      29: invokespecial #24                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      32: invokespecial #25                 // Method archivePath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      35: astore        4
      37: aload         4
      39: ifnonnull     72
      42: new           #26                 // class java/io/IOException
      45: dup
      46: new           #27                 // class java/lang/StringBuilder
      49: dup
      50: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      53: ldc           #29                 // String Invalid path for the Har Filesystem.
      55: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: aload_1
      59: invokevirtual #31                 // Method java/net/URI.toString:()Ljava/lang/String;
      62: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: invokespecial #33                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      71: athrow
      72: aload_0
      73: getfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      76: ifnonnull     88
      79: aload_0
      80: aload_3
      81: aload_2
      82: invokestatic  #34                 // Method org/apache/hadoop/fs/FileSystem.get:(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
      85: putfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      88: aload_0
      89: aload         4
      91: invokevirtual #35                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
      94: putfield      #36                 // Field uri:Ljava/net/URI;
      97: aload_0
      98: new           #20                 // class org/apache/hadoop/fs/Path
     101: dup
     102: aload_0
     103: getfield      #36                 // Field uri:Ljava/net/URI;
     106: invokevirtual #23                 // Method java/net/URI.getPath:()Ljava/lang/String;
     109: invokespecial #37                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
     112: putfield      #38                 // Field archivePath:Lorg/apache/hadoop/fs/Path;
     115: aload_0
     116: aload_0
     117: aload_3
     118: invokespecial #39                 // Method getHarAuth:(Ljava/net/URI;)Ljava/lang/String;
     121: putfield      #40                 // Field harAuth:Ljava/lang/String;
     124: new           #20                 // class org/apache/hadoop/fs/Path
     127: dup
     128: aload_0
     129: getfield      #38                 // Field archivePath:Lorg/apache/hadoop/fs/Path;
     132: ldc           #41                 // String _masterindex
     134: invokespecial #42                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
     137: astore        5
     139: new           #20                 // class org/apache/hadoop/fs/Path
     142: dup
     143: aload_0
     144: getfield      #38                 // Field archivePath:Lorg/apache/hadoop/fs/Path;
     147: ldc           #43                 // String _index
     149: invokespecial #42                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
     152: astore        6
     154: aload_0
     155: getfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     158: aload         5
     160: invokevirtual #44                 // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
     163: ifeq          178
     166: aload_0
     167: getfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     170: aload         6
     172: invokevirtual #44                 // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
     175: ifne          206
     178: new           #26                 // class java/io/IOException
     181: dup
     182: new           #27                 // class java/lang/StringBuilder
     185: dup
     186: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
     189: ldc           #45                 // String Invalid path for the Har Filesystem. No index file in
     191: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     194: aload         4
     196: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     199: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     202: invokespecial #33                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     205: athrow
     206: aload_0
     207: getstatic     #11                 // Field harMetaCache:Ljava/util/Map;
     210: aload_0
     211: getfield      #36                 // Field uri:Ljava/net/URI;
     214: invokeinterface #47,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     219: checkcast     #48                 // class org/apache/hadoop/fs/HarFileSystem$HarMetaData
     222: putfield      #4                  // Field metadata:Lorg/apache/hadoop/fs/HarFileSystem$HarMetaData;
     225: aload_0
     226: getfield      #4                  // Field metadata:Lorg/apache/hadoop/fs/HarFileSystem$HarMetaData;
     229: ifnull        304
     232: aload_0
     233: getfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     236: aload         5
     238: invokevirtual #49                 // Method org/apache/hadoop/fs/FileSystem.getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
     241: astore        7
     243: aload_0
     244: getfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     247: aload         6
     249: invokevirtual #49                 // Method org/apache/hadoop/fs/FileSystem.getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
     252: astore        8
     254: aload         7
     256: invokevirtual #50                 // Method org/apache/hadoop/fs/FileStatus.getModificationTime:()J
     259: aload_0
     260: getfield      #4                  // Field metadata:Lorg/apache/hadoop/fs/HarFileSystem$HarMetaData;
     263: invokevirtual #51                 // Method org/apache/hadoop/fs/HarFileSystem$HarMetaData.getMasterIndexTimestamp:()J
     266: lcmp
     267: ifne          286
     270: aload         8
     272: invokevirtual #50                 // Method org/apache/hadoop/fs/FileStatus.getModificationTime:()J
     275: aload_0
     276: getfield      #4                  // Field metadata:Lorg/apache/hadoop/fs/HarFileSystem$HarMetaData;
     279: invokevirtual #52                 // Method org/apache/hadoop/fs/HarFileSystem$HarMetaData.getArchiveIndexTimestamp:()J
     282: lcmp
     283: ifeq          304
     286: aload_0
     287: aconst_null
     288: putfield      #4                  // Field metadata:Lorg/apache/hadoop/fs/HarFileSystem$HarMetaData;
     291: getstatic     #11                 // Field harMetaCache:Ljava/util/Map;
     294: aload_0
     295: getfield      #36                 // Field uri:Ljava/net/URI;
     298: invokeinterface #53,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     303: pop
     304: aload_0
     305: getfield      #4                  // Field metadata:Lorg/apache/hadoop/fs/HarFileSystem$HarMetaData;
     308: ifnonnull     355
     311: aload_0
     312: new           #48                 // class org/apache/hadoop/fs/HarFileSystem$HarMetaData
     315: dup
     316: aload_0
     317: aload_0
     318: getfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     321: aload         5
     323: aload         6
     325: invokespecial #54                 // Method org/apache/hadoop/fs/HarFileSystem$HarMetaData."<init>":(Lorg/apache/hadoop/fs/HarFileSystem;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
     328: putfield      #4                  // Field metadata:Lorg/apache/hadoop/fs/HarFileSystem$HarMetaData;
     331: aload_0
     332: getfield      #4                  // Field metadata:Lorg/apache/hadoop/fs/HarFileSystem$HarMetaData;
     335: invokestatic  #55                 // Method org/apache/hadoop/fs/HarFileSystem$HarMetaData.access$000:(Lorg/apache/hadoop/fs/HarFileSystem$HarMetaData;)V
     338: getstatic     #11                 // Field harMetaCache:Ljava/util/Map;
     341: aload_0
     342: getfield      #36                 // Field uri:Ljava/net/URI;
     345: aload_0
     346: getfield      #4                  // Field metadata:Lorg/apache/hadoop/fs/HarFileSystem$HarMetaData;
     349: invokeinterface #56,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     354: pop
     355: return

  public org.apache.hadoop.conf.Configuration getConf();
    Code:
       0: aload_0
       1: getfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: invokevirtual #57                 // Method org/apache/hadoop/fs/FileSystem.getConf:()Lorg/apache/hadoop/conf/Configuration;
       7: areturn

  public int getHarVersion() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field metadata:Lorg/apache/hadoop/fs/HarFileSystem$HarMetaData;
       4: ifnull        15
       7: aload_0
       8: getfield      #4                  // Field metadata:Lorg/apache/hadoop/fs/HarFileSystem$HarMetaData;
      11: invokestatic  #58                 // Method org/apache/hadoop/fs/HarFileSystem$HarMetaData.access$100:(Lorg/apache/hadoop/fs/HarFileSystem$HarMetaData;)I
      14: ireturn
      15: new           #26                 // class java/io/IOException
      18: dup
      19: ldc           #59                 // String Invalid meta data for the Har Filesystem
      21: invokespecial #33                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      24: athrow

  private org.apache.hadoop.fs.Path archivePath(org.apache.hadoop.fs.Path);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_1
       3: astore_3
       4: iconst_0
       5: istore        4
       7: iload         4
       9: aload_1
      10: invokevirtual #60                 // Method org/apache/hadoop/fs/Path.depth:()I
      13: if_icmpge     44
      16: aload_3
      17: invokevirtual #61                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
      20: ldc           #62                 // String .har
      22: invokevirtual #63                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      25: ifeq          33
      28: aload_3
      29: astore_2
      30: goto          44
      33: aload_3
      34: invokevirtual #64                 // Method org/apache/hadoop/fs/Path.getParent:()Lorg/apache/hadoop/fs/Path;
      37: astore_3
      38: iinc          4, 1
      41: goto          7
      44: aload_2
      45: areturn

  private java.net.URI decodeHarURI(java.net.URI, org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #22                 // Method java/net/URI.getAuthority:()Ljava/lang/String;
       4: astore_3
       5: aload_3
       6: ifnonnull     14
       9: aload_2
      10: invokestatic  #65                 // Method org/apache/hadoop/fs/FileSystem.getDefaultUri:(Lorg/apache/hadoop/conf/Configuration;)Ljava/net/URI;
      13: areturn
      14: aload_1
      15: invokevirtual #22                 // Method java/net/URI.getAuthority:()Ljava/lang/String;
      18: astore        4
      20: aload         4
      22: bipush        45
      24: invokevirtual #66                 // Method java/lang/String.indexOf:(I)I
      27: istore        5
      29: iload         5
      31: ifge          66
      34: new           #26                 // class java/io/IOException
      37: dup
      38: new           #27                 // class java/lang/StringBuilder
      41: dup
      42: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      45: ldc           #67                 // String URI:
      47: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_1
      51: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      54: ldc           #68                 // String  is an invalid Har URI since \'-\' not found.  Expecting har://<scheme>-<host>/<path>.
      56: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: invokespecial #33                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      65: athrow
      66: aload_1
      67: invokevirtual #69                 // Method java/net/URI.getQuery:()Ljava/lang/String;
      70: ifnull        100
      73: new           #26                 // class java/io/IOException
      76: dup
      77: new           #27                 // class java/lang/StringBuilder
      80: dup
      81: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      84: ldc           #70                 // String query component in Path not supported
      86: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: aload_1
      90: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      93: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      96: invokespecial #33                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      99: athrow
     100: new           #71                 // class java/net/URI
     103: dup
     104: aload         4
     106: ldc           #72                 // String -
     108: ldc           #73                 // String ://
     110: invokevirtual #74                 // Method java/lang/String.replaceFirst:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     113: invokespecial #75                 // Method java/net/URI."<init>":(Ljava/lang/String;)V
     116: astore        7
     118: new           #71                 // class java/net/URI
     121: dup
     122: aload         7
     124: invokevirtual #21                 // Method java/net/URI.getScheme:()Ljava/lang/String;
     127: aload         7
     129: invokevirtual #22                 // Method java/net/URI.getAuthority:()Ljava/lang/String;
     132: aload_1
     133: invokevirtual #23                 // Method java/net/URI.getPath:()Ljava/lang/String;
     136: aload_1
     137: invokevirtual #69                 // Method java/net/URI.getQuery:()Ljava/lang/String;
     140: aload_1
     141: invokevirtual #76                 // Method java/net/URI.getFragment:()Ljava/lang/String;
     144: invokespecial #77                 // Method java/net/URI."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     147: astore        6
     149: goto          186
     152: astore        7
     154: new           #26                 // class java/io/IOException
     157: dup
     158: new           #27                 // class java/lang/StringBuilder
     161: dup
     162: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
     165: ldc           #67                 // String URI:
     167: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: aload_1
     171: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     174: ldc           #79                 // String  is an invalid Har URI. Expecting har://<scheme>-<host>/<path>.
     176: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     179: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     182: invokespecial #33                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     185: athrow
     186: aload         6
     188: areturn
    Exception table:
       from    to  target type
         100   149   152   Class java/net/URISyntaxException

  private static java.lang.String decodeString(java.lang.String) throws java.io.UnsupportedEncodingException;
    Code:
       0: aload_0
       1: ldc           #80                 // String UTF-8
       3: invokestatic  #81                 // Method java/net/URLDecoder.decode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  private java.lang.String decodeFileName(java.lang.String) throws java.io.UnsupportedEncodingException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field metadata:Lorg/apache/hadoop/fs/HarFileSystem$HarMetaData;
       4: invokestatic  #58                 // Method org/apache/hadoop/fs/HarFileSystem$HarMetaData.access$100:(Lorg/apache/hadoop/fs/HarFileSystem$HarMetaData;)I
       7: istore_2
       8: iload_2
       9: iconst_2
      10: if_icmpeq     18
      13: iload_2
      14: iconst_3
      15: if_icmpne     23
      18: aload_1
      19: invokestatic  #3                  // Method decodeString:(Ljava/lang/String;)Ljava/lang/String;
      22: areturn
      23: aload_1
      24: areturn

  public org.apache.hadoop.fs.Path getWorkingDirectory();
    Code:
       0: new           #20                 // class org/apache/hadoop/fs/Path
       3: dup
       4: aload_0
       5: getfield      #36                 // Field uri:Ljava/net/URI;
       8: invokevirtual #31                 // Method java/net/URI.toString:()Ljava/lang/String;
      11: invokespecial #37                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      14: areturn

  public org.apache.hadoop.fs.Path getInitialWorkingDirectory();
    Code:
       0: aload_0
       1: invokevirtual #82                 // Method getWorkingDirectory:()Lorg/apache/hadoop/fs/Path;
       4: areturn

  public org.apache.hadoop.fs.FsStatus getStatus(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: aload_1
       5: invokevirtual #83                 // Method org/apache/hadoop/fs/FileSystem.getStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FsStatus;
       8: areturn

  private java.lang.String getHarAuth(java.net.URI);
    Code:
       0: new           #27                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_1
       8: invokevirtual #21                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      11: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #72                 // String -
      16: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: astore_2
      23: aload_1
      24: invokevirtual #84                 // Method java/net/URI.getHost:()Ljava/lang/String;
      27: ifnull        154
      30: aload_1
      31: invokevirtual #85                 // Method java/net/URI.getUserInfo:()Ljava/lang/String;
      34: ifnull        79
      37: new           #27                 // class java/lang/StringBuilder
      40: dup
      41: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      44: aload_2
      45: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_1
      49: invokevirtual #85                 // Method java/net/URI.getUserInfo:()Ljava/lang/String;
      52: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      58: astore_2
      59: new           #27                 // class java/lang/StringBuilder
      62: dup
      63: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      66: aload_2
      67: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: ldc           #86                 // String @
      72: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      78: astore_2
      79: new           #27                 // class java/lang/StringBuilder
      82: dup
      83: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      86: aload_2
      87: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: aload_1
      91: invokevirtual #84                 // Method java/net/URI.getHost:()Ljava/lang/String;
      94: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     100: astore_2
     101: aload_1
     102: invokevirtual #87                 // Method java/net/URI.getPort:()I
     105: iconst_m1
     106: if_icmpeq     174
     109: new           #27                 // class java/lang/StringBuilder
     112: dup
     113: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
     116: aload_2
     117: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: ldc           #88                 // String :
     122: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     128: astore_2
     129: new           #27                 // class java/lang/StringBuilder
     132: dup
     133: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
     136: aload_2
     137: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: aload_1
     141: invokevirtual #87                 // Method java/net/URI.getPort:()I
     144: invokevirtual #89                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     147: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     150: astore_2
     151: goto          174
     154: new           #27                 // class java/lang/StringBuilder
     157: dup
     158: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
     161: aload_2
     162: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     165: ldc           #88                 // String :
     167: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     173: astore_2
     174: aload_2
     175: areturn

  protected java.net.URI getCanonicalUri();
    Code:
       0: aload_0
       1: getfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: invokevirtual #90                 // Method org/apache/hadoop/fs/FileSystem.getCanonicalUri:()Ljava/net/URI;
       7: areturn

  protected java.net.URI canonicalizeUri(java.net.URI);
    Code:
       0: aload_0
       1: getfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: aload_1
       5: invokevirtual #91                 // Method org/apache/hadoop/fs/FileSystem.canonicalizeUri:(Ljava/net/URI;)Ljava/net/URI;
       8: areturn

  public java.net.URI getUri();
    Code:
       0: aload_0
       1: getfield      #36                 // Field uri:Ljava/net/URI;
       4: areturn

  protected void checkPath(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: getfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: aload_1
       5: invokevirtual #92                 // Method org/apache/hadoop/fs/FileSystem.checkPath:(Lorg/apache/hadoop/fs/Path;)V
       8: return

  public org.apache.hadoop.fs.Path resolvePath(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: aload_1
       5: invokevirtual #93                 // Method org/apache/hadoop/fs/FileSystem.resolvePath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       8: areturn

  private org.apache.hadoop.fs.Path getPathInHar(org.apache.hadoop.fs.Path);
    Code:
       0: new           #20                 // class org/apache/hadoop/fs/Path
       3: dup
       4: aload_1
       5: invokevirtual #35                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
       8: invokevirtual #23                 // Method java/net/URI.getPath:()Ljava/lang/String;
      11: invokespecial #37                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      14: astore_2
      15: aload_0
      16: getfield      #38                 // Field archivePath:Lorg/apache/hadoop/fs/Path;
      19: aload_2
      20: invokevirtual #94                 // Method org/apache/hadoop/fs/Path.compareTo:(Lorg/apache/hadoop/fs/Path;)I
      23: ifne          36
      26: new           #20                 // class org/apache/hadoop/fs/Path
      29: dup
      30: ldc           #95                 // String /
      32: invokespecial #37                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      35: areturn
      36: new           #20                 // class org/apache/hadoop/fs/Path
      39: dup
      40: aload_2
      41: invokevirtual #96                 // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
      44: invokespecial #37                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      47: astore_3
      48: aload_2
      49: invokevirtual #64                 // Method org/apache/hadoop/fs/Path.getParent:()Lorg/apache/hadoop/fs/Path;
      52: astore        4
      54: aload         4
      56: aload_0
      57: getfield      #38                 // Field archivePath:Lorg/apache/hadoop/fs/Path;
      60: invokevirtual #94                 // Method org/apache/hadoop/fs/Path.compareTo:(Lorg/apache/hadoop/fs/Path;)I
      63: ifeq          108
      66: aload         4
      68: invokevirtual #61                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
      71: ldc           #95                 // String /
      73: invokevirtual #97                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      76: ifeq          84
      79: aconst_null
      80: astore_3
      81: goto          108
      84: new           #20                 // class org/apache/hadoop/fs/Path
      87: dup
      88: aload         4
      90: invokevirtual #96                 // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
      93: aload_3
      94: invokespecial #98                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)V
      97: astore_3
      98: aload         4
     100: invokevirtual #64                 // Method org/apache/hadoop/fs/Path.getParent:()Lorg/apache/hadoop/fs/Path;
     103: astore        4
     105: goto          54
     108: aload_3
     109: ifnull        123
     112: new           #20                 // class org/apache/hadoop/fs/Path
     115: dup
     116: ldc           #95                 // String /
     118: aload_3
     119: invokespecial #98                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)V
     122: astore_3
     123: aload_3
     124: areturn

  private org.apache.hadoop.fs.Path makeRelative(java.lang.String, org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: getfield      #36                 // Field uri:Ljava/net/URI;
       4: invokevirtual #21                 // Method java/net/URI.getScheme:()Ljava/lang/String;
       7: astore_3
       8: aload_0
       9: getfield      #36                 // Field uri:Ljava/net/URI;
      12: invokevirtual #22                 // Method java/net/URI.getAuthority:()Ljava/lang/String;
      15: astore        4
      17: new           #20                 // class org/apache/hadoop/fs/Path
      20: dup
      21: ldc           #95                 // String /
      23: invokespecial #37                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      26: astore        5
      28: aload         5
      30: aload_2
      31: invokevirtual #94                 // Method org/apache/hadoop/fs/Path.compareTo:(Lorg/apache/hadoop/fs/Path;)I
      34: ifne          49
      37: new           #20                 // class org/apache/hadoop/fs/Path
      40: dup
      41: aload_3
      42: aload         4
      44: aload_1
      45: invokespecial #24                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      48: areturn
      49: new           #20                 // class org/apache/hadoop/fs/Path
      52: dup
      53: aload_2
      54: invokevirtual #96                 // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
      57: invokespecial #37                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      60: astore        6
      62: aload_2
      63: invokevirtual #64                 // Method org/apache/hadoop/fs/Path.getParent:()Lorg/apache/hadoop/fs/Path;
      66: astore        7
      68: iconst_0
      69: istore        8
      71: iload         8
      73: aload_2
      74: invokevirtual #60                 // Method org/apache/hadoop/fs/Path.depth:()I
      77: iconst_1
      78: isub
      79: if_icmpge     111
      82: new           #20                 // class org/apache/hadoop/fs/Path
      85: dup
      86: aload         7
      88: invokevirtual #96                 // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
      91: aload         6
      93: invokespecial #98                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)V
      96: astore        6
      98: aload         7
     100: invokevirtual #64                 // Method org/apache/hadoop/fs/Path.getParent:()Lorg/apache/hadoop/fs/Path;
     103: astore        7
     105: iinc          8, 1
     108: goto          71
     111: new           #20                 // class org/apache/hadoop/fs/Path
     114: dup
     115: new           #20                 // class org/apache/hadoop/fs/Path
     118: dup
     119: aload_3
     120: aload         4
     122: aload_1
     123: invokespecial #24                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     126: aload         6
     128: invokevirtual #61                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
     131: invokespecial #42                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
     134: areturn

  public org.apache.hadoop.fs.Path makeQualified(org.apache.hadoop.fs.Path);
    Code:
       0: aload_1
       1: astore_2
       2: aload_1
       3: invokevirtual #99                 // Method org/apache/hadoop/fs/Path.isAbsolute:()Z
       6: ifne          22
       9: new           #20                 // class org/apache/hadoop/fs/Path
      12: dup
      13: aload_0
      14: getfield      #38                 // Field archivePath:Lorg/apache/hadoop/fs/Path;
      17: aload_1
      18: invokespecial #100                // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
      21: astore_2
      22: aload_2
      23: invokevirtual #35                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
      26: astore_3
      27: new           #20                 // class org/apache/hadoop/fs/Path
      30: dup
      31: aload_0
      32: getfield      #36                 // Field uri:Ljava/net/URI;
      35: invokevirtual #21                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      38: aload_0
      39: getfield      #40                 // Field harAuth:Ljava/lang/String;
      42: aload_3
      43: invokevirtual #23                 // Method java/net/URI.getPath:()Ljava/lang/String;
      46: invokespecial #24                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      49: areturn

  static org.apache.hadoop.fs.BlockLocation[] fixBlockLocations(org.apache.hadoop.fs.BlockLocation[], long, long, long);
    Code:
       0: lload_1
       1: lload_3
       2: ladd
       3: lstore        7
       5: aload_0
       6: astore        9
       8: aload         9
      10: arraylength
      11: istore        10
      13: iconst_0
      14: istore        11
      16: iload         11
      18: iload         10
      20: if_icmpge     118
      23: aload         9
      25: iload         11
      27: aaload
      28: astore        12
      30: aload         12
      32: invokevirtual #101                // Method org/apache/hadoop/fs/BlockLocation.getOffset:()J
      35: lload         5
      37: lsub
      38: lstore        13
      40: lload         13
      42: aload         12
      44: invokevirtual #102                // Method org/apache/hadoop/fs/BlockLocation.getLength:()J
      47: ladd
      48: lstore        15
      50: lload_1
      51: lload         13
      53: lcmp
      54: ifle          81
      57: aload         12
      59: lload_1
      60: invokevirtual #103                // Method org/apache/hadoop/fs/BlockLocation.setOffset:(J)V
      63: aload         12
      65: aload         12
      67: invokevirtual #102                // Method org/apache/hadoop/fs/BlockLocation.getLength:()J
      70: lload_1
      71: lload         13
      73: lsub
      74: lsub
      75: invokevirtual #104                // Method org/apache/hadoop/fs/BlockLocation.setLength:(J)V
      78: goto          88
      81: aload         12
      83: lload         13
      85: invokevirtual #103                // Method org/apache/hadoop/fs/BlockLocation.setOffset:(J)V
      88: lload         15
      90: lload         7
      92: lcmp
      93: ifle          112
      96: aload         12
      98: aload         12
     100: invokevirtual #102                // Method org/apache/hadoop/fs/BlockLocation.getLength:()J
     103: lload         15
     105: lload         7
     107: lsub
     108: lsub
     109: invokevirtual #104                // Method org/apache/hadoop/fs/BlockLocation.setLength:(J)V
     112: iinc          11, 1
     115: goto          16
     118: aload_0
     119: areturn

  public org.apache.hadoop.fs.BlockLocation[] getFileBlockLocations(org.apache.hadoop.fs.FileStatus, long, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #105                // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
       5: invokespecial #106                // Method getFileHarStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/HarFileSystem$HarStatus;
       8: astore        6
      10: new           #20                 // class org/apache/hadoop/fs/Path
      13: dup
      14: aload_0
      15: getfield      #38                 // Field archivePath:Lorg/apache/hadoop/fs/Path;
      18: aload         6
      20: invokevirtual #107                // Method org/apache/hadoop/fs/HarFileSystem$HarStatus.getPartName:()Ljava/lang/String;
      23: invokespecial #42                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      26: astore        7
      28: aload_0
      29: getfield      #4                  // Field metadata:Lorg/apache/hadoop/fs/HarFileSystem$HarMetaData;
      32: aload         7
      34: invokevirtual #108                // Method org/apache/hadoop/fs/HarFileSystem$HarMetaData.getPartFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      37: astore        8
      39: aload_0
      40: getfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      43: aload         8
      45: aload         6
      47: invokevirtual #109                // Method org/apache/hadoop/fs/HarFileSystem$HarStatus.getStartIndex:()J
      50: lload_2
      51: ladd
      52: lload         4
      54: invokevirtual #110                // Method org/apache/hadoop/fs/FileSystem.getFileBlockLocations:(Lorg/apache/hadoop/fs/FileStatus;JJ)[Lorg/apache/hadoop/fs/BlockLocation;
      57: astore        9
      59: aload         9
      61: lload_2
      62: lload         4
      64: aload         6
      66: invokevirtual #109                // Method org/apache/hadoop/fs/HarFileSystem$HarStatus.getStartIndex:()J
      69: invokestatic  #111                // Method fixBlockLocations:([Lorg/apache/hadoop/fs/BlockLocation;JJJ)[Lorg/apache/hadoop/fs/BlockLocation;
      72: areturn

  public static int getHarHash(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: invokevirtual #61                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
       4: invokevirtual #112                // Method java/lang/String.hashCode:()I
       7: ldc           #113                // int 2147483647
       9: iand
      10: ireturn

  private void fileStatusesInIndex(org.apache.hadoop.fs.HarFileSystem$HarStatus, java.util.List<org.apache.hadoop.fs.FileStatus>) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #114                // Method org/apache/hadoop/fs/HarFileSystem$HarStatus.getName:()Ljava/lang/String;
       4: astore_3
       5: aload_3
       6: ldc           #95                 // String /
       8: invokevirtual #63                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      11: ifne          34
      14: new           #27                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      21: aload_3
      22: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: ldc           #95                 // String /
      27: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: astore_3
      34: aload_1
      35: getfield      #115                // Field org/apache/hadoop/fs/HarFileSystem$HarStatus.children:Ljava/util/List;
      38: invokeinterface #116,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      43: astore        4
      45: aload         4
      47: invokeinterface #117,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      52: ifeq          126
      55: aload         4
      57: invokeinterface #118,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      62: checkcast     #119                // class java/lang/String
      65: astore        5
      67: new           #20                 // class org/apache/hadoop/fs/Path
      70: dup
      71: new           #27                 // class java/lang/StringBuilder
      74: dup
      75: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      78: aload_3
      79: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: aload         5
      84: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      90: invokespecial #37                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      93: astore        6
      95: aload_2
      96: aload_0
      97: aload_0
      98: getfield      #4                  // Field metadata:Lorg/apache/hadoop/fs/HarFileSystem$HarMetaData;
     101: getfield      #120                // Field org/apache/hadoop/fs/HarFileSystem$HarMetaData.archive:Ljava/util/Map;
     104: aload         6
     106: invokeinterface #47,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     111: checkcast     #121                // class org/apache/hadoop/fs/HarFileSystem$HarStatus
     114: invokespecial #122                // Method toFileStatus:(Lorg/apache/hadoop/fs/HarFileSystem$HarStatus;)Lorg/apache/hadoop/fs/FileStatus;
     117: invokeinterface #123,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     122: pop
     123: goto          45
     126: return

  private org.apache.hadoop.fs.FileStatus toFileStatus(org.apache.hadoop.fs.HarFileSystem$HarStatus) throws java.io.IOException;
    Code:
       0: aload_1
       1: getfield      #124                // Field org/apache/hadoop/fs/HarFileSystem$HarStatus.isDir:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #38                 // Field archivePath:Lorg/apache/hadoop/fs/Path;
      11: goto          29
      14: new           #20                 // class org/apache/hadoop/fs/Path
      17: dup
      18: aload_0
      19: getfield      #38                 // Field archivePath:Lorg/apache/hadoop/fs/Path;
      22: aload_1
      23: getfield      #125                // Field org/apache/hadoop/fs/HarFileSystem$HarStatus.partName:Ljava/lang/String;
      26: invokespecial #42                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      29: astore_2
      30: aload_0
      31: getfield      #4                  // Field metadata:Lorg/apache/hadoop/fs/HarFileSystem$HarMetaData;
      34: aload_2
      35: invokevirtual #108                // Method org/apache/hadoop/fs/HarFileSystem$HarMetaData.getPartFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      38: astore_3
      39: lconst_0
      40: lstore        4
      42: aload_0
      43: getfield      #4                  // Field metadata:Lorg/apache/hadoop/fs/HarFileSystem$HarMetaData;
      46: invokestatic  #58                 // Method org/apache/hadoop/fs/HarFileSystem$HarMetaData.access$100:(Lorg/apache/hadoop/fs/HarFileSystem$HarMetaData;)I
      49: istore        6
      51: iload         6
      53: iconst_3
      54: if_icmpge     66
      57: aload_3
      58: invokevirtual #50                 // Method org/apache/hadoop/fs/FileStatus.getModificationTime:()J
      61: lstore        4
      63: goto          78
      66: iload         6
      68: iconst_3
      69: if_icmpne     78
      72: aload_1
      73: invokevirtual #126                // Method org/apache/hadoop/fs/HarFileSystem$HarStatus.getModificationTime:()J
      76: lstore        4
      78: new           #127                // class org/apache/hadoop/fs/FileStatus
      81: dup
      82: aload_1
      83: invokevirtual #128                // Method org/apache/hadoop/fs/HarFileSystem$HarStatus.isDir:()Z
      86: ifeq          93
      89: lconst_0
      90: goto          97
      93: aload_1
      94: invokevirtual #129                // Method org/apache/hadoop/fs/HarFileSystem$HarStatus.getLength:()J
      97: aload_1
      98: invokevirtual #128                // Method org/apache/hadoop/fs/HarFileSystem$HarStatus.isDir:()Z
     101: aload_3
     102: invokevirtual #130                // Method org/apache/hadoop/fs/FileStatus.getReplication:()S
     105: aload_3
     106: invokevirtual #131                // Method org/apache/hadoop/fs/FileStatus.getBlockSize:()J
     109: lload         4
     111: aload_3
     112: invokevirtual #132                // Method org/apache/hadoop/fs/FileStatus.getAccessTime:()J
     115: aload_3
     116: invokevirtual #133                // Method org/apache/hadoop/fs/FileStatus.getPermission:()Lorg/apache/hadoop/fs/permission/FsPermission;
     119: aload_3
     120: invokevirtual #134                // Method org/apache/hadoop/fs/FileStatus.getOwner:()Ljava/lang/String;
     123: aload_3
     124: invokevirtual #135                // Method org/apache/hadoop/fs/FileStatus.getGroup:()Ljava/lang/String;
     127: aload_0
     128: aload_0
     129: getfield      #36                 // Field uri:Ljava/net/URI;
     132: invokevirtual #23                 // Method java/net/URI.getPath:()Ljava/lang/String;
     135: new           #20                 // class org/apache/hadoop/fs/Path
     138: dup
     139: aload_1
     140: getfield      #136                // Field org/apache/hadoop/fs/HarFileSystem$HarStatus.name:Ljava/lang/String;
     143: invokespecial #37                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
     146: invokespecial #137                // Method makeRelative:(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
     149: invokespecial #138                // Method org/apache/hadoop/fs/FileStatus."<init>":(JZIJJJLorg/apache/hadoop/fs/permission/FsPermission;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)V
     152: areturn

  public org.apache.hadoop.fs.FileStatus getFileStatus(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #106                // Method getFileHarStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/HarFileSystem$HarStatus;
       5: astore_2
       6: aload_0
       7: aload_2
       8: invokespecial #122                // Method toFileStatus:(Lorg/apache/hadoop/fs/HarFileSystem$HarStatus;)Lorg/apache/hadoop/fs/FileStatus;
      11: areturn

  private org.apache.hadoop.fs.HarFileSystem$HarStatus getFileHarStatus(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #139                // Method makeQualified:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: astore_2
       6: aload_0
       7: aload_2
       8: invokespecial #2                  // Method getPathInHar:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      11: astore_3
      12: aload_3
      13: ifnonnull     55
      16: new           #26                 // class java/io/IOException
      19: dup
      20: new           #27                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      27: ldc           #140                // String Invalid file name:
      29: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_1
      33: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      36: ldc           #141                // String  in
      38: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_0
      42: getfield      #36                 // Field uri:Ljava/net/URI;
      45: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      48: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokespecial #33                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: aload_0
      56: getfield      #4                  // Field metadata:Lorg/apache/hadoop/fs/HarFileSystem$HarMetaData;
      59: getfield      #120                // Field org/apache/hadoop/fs/HarFileSystem$HarMetaData.archive:Ljava/util/Map;
      62: aload_3
      63: invokeinterface #47,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      68: checkcast     #121                // class org/apache/hadoop/fs/HarFileSystem$HarStatus
      71: astore        4
      73: aload         4
      75: ifnonnull     117
      78: new           #142                // class java/io/FileNotFoundException
      81: dup
      82: new           #27                 // class java/lang/StringBuilder
      85: dup
      86: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      89: ldc           #143                // String File:
      91: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: aload_1
      95: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      98: ldc           #144                // String  does not exist in
     100: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: aload_0
     104: getfield      #36                 // Field uri:Ljava/net/URI;
     107: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     110: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     113: invokespecial #145                // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
     116: athrow
     117: aload         4
     119: areturn

  public void msync() throws java.io.IOException, java.lang.UnsupportedOperationException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: invokevirtual #146                // Method org/apache/hadoop/fs/FileSystem.msync:()V
       7: return

  public org.apache.hadoop.fs.FileChecksum getFileChecksum(org.apache.hadoop.fs.Path, long);
    Code:
       0: aconst_null
       1: areturn

  public org.apache.hadoop.fs.FSDataInputStream open(org.apache.hadoop.fs.Path, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #106                // Method getFileHarStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/HarFileSystem$HarStatus;
       5: astore_3
       6: aload_3
       7: invokevirtual #128                // Method org/apache/hadoop/fs/HarFileSystem$HarStatus.isDir:()Z
      10: ifeq          47
      13: new           #142                // class java/io/FileNotFoundException
      16: dup
      17: new           #27                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      24: aload_1
      25: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      28: ldc           #147                // String  : not a file in
      30: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_0
      34: getfield      #38                 // Field archivePath:Lorg/apache/hadoop/fs/Path;
      37: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      40: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokespecial #145                // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: new           #148                // class org/apache/hadoop/fs/HarFileSystem$HarFSDataInputStream
      50: dup
      51: aload_0
      52: getfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      55: new           #20                 // class org/apache/hadoop/fs/Path
      58: dup
      59: aload_0
      60: getfield      #38                 // Field archivePath:Lorg/apache/hadoop/fs/Path;
      63: aload_3
      64: invokevirtual #107                // Method org/apache/hadoop/fs/HarFileSystem$HarStatus.getPartName:()Ljava/lang/String;
      67: invokespecial #42                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      70: aload_3
      71: invokevirtual #109                // Method org/apache/hadoop/fs/HarFileSystem$HarStatus.getStartIndex:()J
      74: aload_3
      75: invokevirtual #129                // Method org/apache/hadoop/fs/HarFileSystem$HarStatus.getLength:()J
      78: iload_2
      79: invokespecial #149                // Method org/apache/hadoop/fs/HarFileSystem$HarFSDataInputStream."<init>":(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;JJI)V
      82: areturn

  protected org.apache.hadoop.fs.PathHandle createPathHandle(org.apache.hadoop.fs.FileStatus, org.apache.hadoop.fs.Options$HandleOpt...);
    Code:
       0: new           #150                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #151                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public org.apache.hadoop.fs.FSDataInputStream open(org.apache.hadoop.fs.PathHandle, int) throws java.io.IOException;
    Code:
       0: new           #150                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #151                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public org.apache.hadoop.fs.FileSystem[] getChildFileSystems();
    Code:
       0: iconst_1
       1: anewarray     #152                // class org/apache/hadoop/fs/FileSystem
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      10: aastore
      11: areturn

  public org.apache.hadoop.fs.FSDataOutputStream create(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission, boolean, int, short, long, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: new           #26                 // class java/io/IOException
       3: dup
       4: ldc           #153                // String Har: create not allowed.
       6: invokespecial #33                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
       9: athrow

  public org.apache.hadoop.fs.FSDataOutputStream createNonRecursive(org.apache.hadoop.fs.Path, boolean, int, short, long, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: new           #26                 // class java/io/IOException
       3: dup
       4: ldc           #153                // String Har: create not allowed.
       6: invokespecial #33                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
       9: athrow

  public org.apache.hadoop.fs.FSDataOutputStream append(org.apache.hadoop.fs.Path, int, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: new           #26                 // class java/io/IOException
       3: dup
       4: ldc           #154                // String Har: append not allowed.
       6: invokespecial #33                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #155                // Method org/apache/hadoop/fs/FileSystem.close:()V
       4: aload_0
       5: getfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       8: ifnull        22
      11: aload_0
      12: getfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      15: invokevirtual #155                // Method org/apache/hadoop/fs/FileSystem.close:()V
      18: goto          22
      21: astore_1
      22: return
    Exception table:
       from    to  target type
          11    18    21   Class java/io/IOException

  public boolean setReplication(org.apache.hadoop.fs.Path, short) throws java.io.IOException;
    Code:
       0: new           #26                 // class java/io/IOException
       3: dup
       4: ldc           #156                // String Har: setReplication not allowed
       6: invokespecial #33                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
       9: athrow

  public boolean rename(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #26                 // class java/io/IOException
       3: dup
       4: ldc           #157                // String Har: rename not allowed
       6: invokespecial #33                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
       9: athrow

  public org.apache.hadoop.fs.FSDataOutputStream append(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #26                 // class java/io/IOException
       3: dup
       4: ldc           #158                // String Har: append not allowed
       6: invokespecial #33                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
       9: athrow

  public boolean truncate(org.apache.hadoop.fs.Path, long) throws java.io.IOException;
    Code:
       0: new           #26                 // class java/io/IOException
       3: dup
       4: ldc           #159                // String Har: truncate not allowed
       6: invokespecial #33                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
       9: athrow

  public boolean delete(org.apache.hadoop.fs.Path, boolean) throws java.io.IOException;
    Code:
       0: new           #26                 // class java/io/IOException
       3: dup
       4: ldc           #160                // String Har: delete not allowed
       6: invokespecial #33                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
       9: athrow

  public org.apache.hadoop.fs.FileStatus[] listStatus(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #161                // class java/util/ArrayList
       3: dup
       4: invokespecial #162                // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_0
       9: aload_1
      10: invokevirtual #139                // Method makeQualified:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      13: astore_3
      14: aload_0
      15: aload_3
      16: invokespecial #2                  // Method getPathInHar:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      19: astore        4
      21: aload_0
      22: getfield      #4                  // Field metadata:Lorg/apache/hadoop/fs/HarFileSystem$HarMetaData;
      25: getfield      #120                // Field org/apache/hadoop/fs/HarFileSystem$HarMetaData.archive:Ljava/util/Map;
      28: aload         4
      30: invokeinterface #47,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      35: checkcast     #121                // class org/apache/hadoop/fs/HarFileSystem$HarStatus
      38: astore        5
      40: aload         5
      42: ifnonnull     84
      45: new           #142                // class java/io/FileNotFoundException
      48: dup
      49: new           #27                 // class java/lang/StringBuilder
      52: dup
      53: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      56: ldc           #163                // String File
      58: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload_1
      62: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      65: ldc           #164                // String  not found in
      67: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: aload_0
      71: getfield      #38                 // Field archivePath:Lorg/apache/hadoop/fs/Path;
      74: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      77: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      80: invokespecial #145                // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
      83: athrow
      84: aload         5
      86: invokevirtual #128                // Method org/apache/hadoop/fs/HarFileSystem$HarStatus.isDir:()Z
      89: ifeq          102
      92: aload_0
      93: aload         5
      95: aload_2
      96: invokespecial #165                // Method fileStatusesInIndex:(Lorg/apache/hadoop/fs/HarFileSystem$HarStatus;Ljava/util/List;)V
      99: goto          115
     102: aload_2
     103: aload_0
     104: aload         5
     106: invokespecial #122                // Method toFileStatus:(Lorg/apache/hadoop/fs/HarFileSystem$HarStatus;)Lorg/apache/hadoop/fs/FileStatus;
     109: invokeinterface #123,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     114: pop
     115: aload_2
     116: aload_2
     117: invokeinterface #166,  1          // InterfaceMethod java/util/List.size:()I
     122: anewarray     #127                // class org/apache/hadoop/fs/FileStatus
     125: invokeinterface #167,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     130: checkcast     #168                // class "[Lorg/apache/hadoop/fs/FileStatus;"
     133: areturn

  public org.apache.hadoop.fs.Path getHomeDirectory();
    Code:
       0: new           #20                 // class org/apache/hadoop/fs/Path
       3: dup
       4: aload_0
       5: getfield      #36                 // Field uri:Ljava/net/URI;
       8: invokevirtual #31                 // Method java/net/URI.toString:()Ljava/lang/String;
      11: invokespecial #37                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      14: areturn

  public void setWorkingDirectory(org.apache.hadoop.fs.Path);
    Code:
       0: return

  public boolean mkdirs(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission) throws java.io.IOException;
    Code:
       0: new           #26                 // class java/io/IOException
       3: dup
       4: ldc           #169                // String Har: mkdirs not allowed
       6: invokespecial #33                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void copyFromLocalFile(boolean, boolean, org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #26                 // class java/io/IOException
       3: dup
       4: ldc           #170                // String Har: copyfromlocalfile not allowed
       6: invokespecial #33                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void copyFromLocalFile(boolean, boolean, org.apache.hadoop.fs.Path[], org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #26                 // class java/io/IOException
       3: dup
       4: ldc           #170                // String Har: copyfromlocalfile not allowed
       6: invokespecial #33                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void copyToLocalFile(boolean, org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_2
       2: aload_0
       3: invokevirtual #171                // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
       6: invokestatic  #172                // Method getLocal:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/LocalFileSystem;
       9: aload_3
      10: iconst_0
      11: aload_0
      12: invokevirtual #171                // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
      15: invokestatic  #173                // Method org/apache/hadoop/fs/FileUtil.copy:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZLorg/apache/hadoop/conf/Configuration;)Z
      18: pop
      19: return

  public org.apache.hadoop.fs.Path startLocalOutput(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #26                 // class java/io/IOException
       3: dup
       4: ldc           #174                // String Har: startLocalOutput not allowed
       6: invokespecial #33                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void completeLocalOutput(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #26                 // class java/io/IOException
       3: dup
       4: ldc           #175                // String Har: completeLocalOutput not allowed
       6: invokespecial #33                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void setOwner(org.apache.hadoop.fs.Path, java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: new           #26                 // class java/io/IOException
       3: dup
       4: ldc           #176                // String Har: setowner not allowed
       6: invokespecial #33                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void setTimes(org.apache.hadoop.fs.Path, long, long) throws java.io.IOException;
    Code:
       0: new           #26                 // class java/io/IOException
       3: dup
       4: ldc           #177                // String Har: setTimes not allowed
       6: invokespecial #33                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void setPermission(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission) throws java.io.IOException;
    Code:
       0: new           #26                 // class java/io/IOException
       3: dup
       4: ldc           #178                // String Har: setPermission not allowed
       6: invokespecial #33                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
       9: athrow

  public boolean hasPathCapability(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #179                // Method org/apache/hadoop/fs/impl/PathCapabilitiesSupport.validatePathCapabilityArgs:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Ljava/lang/String;
       5: astore_3
       6: iconst_m1
       7: istore        4
       9: aload_3
      10: invokevirtual #112                // Method java/lang/String.hashCode:()I
      13: lookupswitch  { // 1
            2131734190: 32
               default: 44
          }
      32: aload_3
      33: ldc           #180                // String fs.capability.paths.read-only-connector
      35: invokevirtual #97                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      38: ifeq          44
      41: iconst_0
      42: istore        4
      44: iload         4
      46: lookupswitch  { // 1
                     0: 64
               default: 66
          }
      64: iconst_1
      65: ireturn
      66: iconst_0
      67: ireturn

  org.apache.hadoop.fs.HarFileSystem$HarMetaData getMetadata();
    Code:
       0: aload_0
       1: getfield      #4                  // Field metadata:Lorg/apache/hadoop/fs/HarFileSystem$HarMetaData;
       4: areturn

  public org.apache.hadoop.fs.FsServerDefaults getServerDefaults() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: invokevirtual #181                // Method org/apache/hadoop/fs/FileSystem.getServerDefaults:()Lorg/apache/hadoop/fs/FsServerDefaults;
       7: areturn

  public org.apache.hadoop.fs.FsServerDefaults getServerDefaults(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: aload_1
       5: invokevirtual #182                // Method org/apache/hadoop/fs/FileSystem.getServerDefaults:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FsServerDefaults;
       8: areturn

  public long getUsed() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: invokevirtual #183                // Method org/apache/hadoop/fs/FileSystem.getUsed:()J
       7: lreturn

  public long getUsed(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: aload_1
       5: invokevirtual #184                // Method org/apache/hadoop/fs/FileSystem.getUsed:(Lorg/apache/hadoop/fs/Path;)J
       8: lreturn

  public long getDefaultBlockSize();
    Code:
       0: aload_0
       1: getfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: invokevirtual #185                // Method org/apache/hadoop/fs/FileSystem.getDefaultBlockSize:()J
       7: lreturn

  public long getDefaultBlockSize(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: getfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: aload_1
       5: invokevirtual #186                // Method org/apache/hadoop/fs/FileSystem.getDefaultBlockSize:(Lorg/apache/hadoop/fs/Path;)J
       8: lreturn

  public short getDefaultReplication();
    Code:
       0: aload_0
       1: getfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: invokevirtual #187                // Method org/apache/hadoop/fs/FileSystem.getDefaultReplication:()S
       7: ireturn

  public short getDefaultReplication(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: getfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: aload_1
       5: invokevirtual #188                // Method org/apache/hadoop/fs/FileSystem.getDefaultReplication:(Lorg/apache/hadoop/fs/Path;)S
       8: ireturn

  public org.apache.hadoop.fs.FSDataOutputStreamBuilder createFile(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: getfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: aload_1
       5: invokevirtual #189                // Method org/apache/hadoop/fs/FileSystem.createFile:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FSDataOutputStreamBuilder;
       8: areturn

  public org.apache.hadoop.fs.FSDataOutputStreamBuilder appendFile(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: getfield      #8                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: aload_1
       5: invokevirtual #190                // Method org/apache/hadoop/fs/FileSystem.appendFile:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FSDataOutputStreamBuilder;
       8: areturn

  static java.lang.String access$200(org.apache.hadoop.fs.HarFileSystem, java.lang.String) throws java.io.UnsupportedEncodingException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method decodeFileName:(Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  static org.apache.hadoop.fs.HarFileSystem$HarMetaData access$300(org.apache.hadoop.fs.HarFileSystem);
    Code:
       0: aload_0
       1: getfield      #4                  // Field metadata:Lorg/apache/hadoop/fs/HarFileSystem$HarMetaData;
       4: areturn

  static java.lang.String access$400(java.lang.String) throws java.io.UnsupportedEncodingException;
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method decodeString:(Ljava/lang/String;)Ljava/lang/String;
       4: areturn

  static org.apache.hadoop.fs.Path access$500(org.apache.hadoop.fs.HarFileSystem, org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method getPathInHar:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: areturn

  static org.slf4j.Logger access$600();
    Code:
       0: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static {};
    Code:
       0: ldc           #12                 // class org/apache/hadoop/fs/HarFileSystem
       2: invokestatic  #191                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       8: return
}
