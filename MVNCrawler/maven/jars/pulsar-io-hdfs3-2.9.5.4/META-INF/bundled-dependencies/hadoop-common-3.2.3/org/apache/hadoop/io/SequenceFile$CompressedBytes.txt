Compiled from "SequenceFile.java"
class org.apache.hadoop.io.SequenceFile$CompressedBytes implements org.apache.hadoop.io.SequenceFile$ValueBytes {
  private int dataSize;

  private byte[] data;

  org.apache.hadoop.io.DataInputBuffer rawData;

  org.apache.hadoop.io.compress.CompressionCodec codec;

  org.apache.hadoop.io.compress.CompressionInputStream decompressedStream;

  private org.apache.hadoop.io.SequenceFile$CompressedBytes(org.apache.hadoop.io.compress.CompressionCodec);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #4                  // Field rawData:Lorg/apache/hadoop/io/DataInputBuffer;
       9: aload_0
      10: aconst_null
      11: putfield      #5                  // Field codec:Lorg/apache/hadoop/io/compress/CompressionCodec;
      14: aload_0
      15: aconst_null
      16: putfield      #6                  // Field decompressedStream:Lorg/apache/hadoop/io/compress/CompressionInputStream;
      19: aload_0
      20: aconst_null
      21: putfield      #7                  // Field data:[B
      24: aload_0
      25: iconst_0
      26: putfield      #8                  // Field dataSize:I
      29: aload_0
      30: aload_1
      31: putfield      #5                  // Field codec:Lorg/apache/hadoop/io/compress/CompressionCodec;
      34: return

  private void reset(java.io.DataInputStream, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field data:[B
       4: ifnonnull     17
       7: aload_0
       8: iload_2
       9: newarray       byte
      11: putfield      #7                  // Field data:[B
      14: goto          43
      17: iload_2
      18: aload_0
      19: getfield      #7                  // Field data:[B
      22: arraylength
      23: if_icmple     43
      26: aload_0
      27: iload_2
      28: aload_0
      29: getfield      #7                  // Field data:[B
      32: arraylength
      33: iconst_2
      34: imul
      35: invokestatic  #9                  // Method java/lang/Math.max:(II)I
      38: newarray       byte
      40: putfield      #7                  // Field data:[B
      43: aload_0
      44: iconst_m1
      45: putfield      #8                  // Field dataSize:I
      48: aload_1
      49: aload_0
      50: getfield      #7                  // Field data:[B
      53: iconst_0
      54: iload_2
      55: invokevirtual #10                 // Method java/io/DataInputStream.readFully:([BII)V
      58: aload_0
      59: iload_2
      60: putfield      #8                  // Field dataSize:I
      63: return

  public int getSize();
    Code:
       0: aload_0
       1: getfield      #8                  // Field dataSize:I
       4: ireturn

  public void writeUncompressedBytes(java.io.DataOutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field decompressedStream:Lorg/apache/hadoop/io/compress/CompressionInputStream;
       4: ifnonnull     38
       7: aload_0
       8: new           #11                 // class org/apache/hadoop/io/DataInputBuffer
      11: dup
      12: invokespecial #12                 // Method org/apache/hadoop/io/DataInputBuffer."<init>":()V
      15: putfield      #4                  // Field rawData:Lorg/apache/hadoop/io/DataInputBuffer;
      18: aload_0
      19: aload_0
      20: getfield      #5                  // Field codec:Lorg/apache/hadoop/io/compress/CompressionCodec;
      23: aload_0
      24: getfield      #4                  // Field rawData:Lorg/apache/hadoop/io/DataInputBuffer;
      27: invokeinterface #13,  2           // InterfaceMethod org/apache/hadoop/io/compress/CompressionCodec.createInputStream:(Ljava/io/InputStream;)Lorg/apache/hadoop/io/compress/CompressionInputStream;
      32: putfield      #6                  // Field decompressedStream:Lorg/apache/hadoop/io/compress/CompressionInputStream;
      35: goto          45
      38: aload_0
      39: getfield      #6                  // Field decompressedStream:Lorg/apache/hadoop/io/compress/CompressionInputStream;
      42: invokevirtual #14                 // Method org/apache/hadoop/io/compress/CompressionInputStream.resetState:()V
      45: aload_0
      46: getfield      #4                  // Field rawData:Lorg/apache/hadoop/io/DataInputBuffer;
      49: aload_0
      50: getfield      #7                  // Field data:[B
      53: iconst_0
      54: aload_0
      55: getfield      #8                  // Field dataSize:I
      58: invokevirtual #15                 // Method org/apache/hadoop/io/DataInputBuffer.reset:([BII)V
      61: sipush        8192
      64: newarray       byte
      66: astore_2
      67: iconst_0
      68: istore_3
      69: aload_0
      70: getfield      #6                  // Field decompressedStream:Lorg/apache/hadoop/io/compress/CompressionInputStream;
      73: aload_2
      74: iconst_0
      75: sipush        8192
      78: invokevirtual #16                 // Method org/apache/hadoop/io/compress/CompressionInputStream.read:([BII)I
      81: dup
      82: istore_3
      83: iconst_m1
      84: if_icmpeq     97
      87: aload_1
      88: aload_2
      89: iconst_0
      90: iload_3
      91: invokevirtual #17                 // Method java/io/DataOutputStream.write:([BII)V
      94: goto          69
      97: return

  public void writeCompressedBytes(java.io.DataOutputStream) throws java.lang.IllegalArgumentException, java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #7                  // Field data:[B
       5: iconst_0
       6: aload_0
       7: getfield      #8                  // Field dataSize:I
      10: invokevirtual #17                 // Method java/io/DataOutputStream.write:([BII)V
      13: return

  org.apache.hadoop.io.SequenceFile$CompressedBytes(org.apache.hadoop.io.compress.CompressionCodec, org.apache.hadoop.io.SequenceFile$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method "<init>":(Lorg/apache/hadoop/io/compress/CompressionCodec;)V
       5: return

  static void access$1600(org.apache.hadoop.io.SequenceFile$CompressedBytes, java.io.DataInputStream, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #1                  // Method reset:(Ljava/io/DataInputStream;I)V
       6: return
}
