Compiled from "ZlibCompressor.java"
public class org.apache.hadoop.io.compress.zlib.ZlibCompressor implements org.apache.hadoop.io.compress.Compressor {
  private static final org.slf4j.Logger LOG;

  private static final int DEFAULT_DIRECT_BUFFER_SIZE;

  private long stream;

  private org.apache.hadoop.io.compress.zlib.ZlibCompressor$CompressionLevel level;

  private org.apache.hadoop.io.compress.zlib.ZlibCompressor$CompressionStrategy strategy;

  private final org.apache.hadoop.io.compress.zlib.ZlibCompressor$CompressionHeader windowBits;

  private int directBufferSize;

  private byte[] userBuf;

  private int userBufOff;

  private int userBufLen;

  private java.nio.Buffer uncompressedDirectBuf;

  private int uncompressedDirectBufOff;

  private int uncompressedDirectBufLen;

  private boolean keepUncompressedBuf;

  private java.nio.Buffer compressedDirectBuf;

  private boolean finish;

  private boolean finished;

  private static boolean nativeZlibLoaded;

  static boolean isNativeZlibLoaded();
    Code:
       0: getstatic     #1                  // Field nativeZlibLoaded:Z
       3: ireturn

  protected final void construct(org.apache.hadoop.io.compress.zlib.ZlibCompressor$CompressionLevel, org.apache.hadoop.io.compress.zlib.ZlibCompressor$CompressionStrategy, org.apache.hadoop.io.compress.zlib.ZlibCompressor$CompressionHeader, int);
    Code:
       0: return

  public org.apache.hadoop.io.compress.zlib.ZlibCompressor();
    Code:
       0: aload_0
       1: getstatic     #2                  // Field org/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionLevel.DEFAULT_COMPRESSION:Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionLevel;
       4: getstatic     #3                  // Field org/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionStrategy.DEFAULT_STRATEGY:Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionStrategy;
       7: getstatic     #4                  // Field org/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionHeader.DEFAULT_HEADER:Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionHeader;
      10: ldc           #6                  // int 65536
      12: invokespecial #7                  // Method "<init>":(Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionLevel;Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionStrategy;Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionHeader;I)V
      15: return

  public org.apache.hadoop.io.compress.zlib.ZlibCompressor(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #8                  // Method org/apache/hadoop/io/compress/zlib/ZlibFactory.getCompressionLevel:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionLevel;
       5: aload_1
       6: invokestatic  #9                  // Method org/apache/hadoop/io/compress/zlib/ZlibFactory.getCompressionStrategy:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionStrategy;
       9: getstatic     #4                  // Field org/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionHeader.DEFAULT_HEADER:Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionHeader;
      12: ldc           #6                  // int 65536
      14: invokespecial #7                  // Method "<init>":(Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionLevel;Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionStrategy;Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionHeader;I)V
      17: return

  public org.apache.hadoop.io.compress.zlib.ZlibCompressor(org.apache.hadoop.io.compress.zlib.ZlibCompressor$CompressionLevel, org.apache.hadoop.io.compress.zlib.ZlibCompressor$CompressionStrategy, org.apache.hadoop.io.compress.zlib.ZlibCompressor$CompressionHeader, int);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #11                 // Field userBuf:[B
       9: aload_0
      10: iconst_0
      11: putfield      #12                 // Field userBufOff:I
      14: aload_0
      15: iconst_0
      16: putfield      #13                 // Field userBufLen:I
      19: aload_0
      20: aconst_null
      21: putfield      #14                 // Field uncompressedDirectBuf:Ljava/nio/Buffer;
      24: aload_0
      25: iconst_0
      26: putfield      #15                 // Field uncompressedDirectBufOff:I
      29: aload_0
      30: iconst_0
      31: putfield      #16                 // Field uncompressedDirectBufLen:I
      34: aload_0
      35: iconst_0
      36: putfield      #17                 // Field keepUncompressedBuf:Z
      39: aload_0
      40: aconst_null
      41: putfield      #18                 // Field compressedDirectBuf:Ljava/nio/Buffer;
      44: aload_0
      45: aload_1
      46: putfield      #19                 // Field level:Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionLevel;
      49: aload_0
      50: aload_2
      51: putfield      #20                 // Field strategy:Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionStrategy;
      54: aload_0
      55: aload_3
      56: putfield      #21                 // Field windowBits:Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionHeader;
      59: aload_0
      60: aload_0
      61: getfield      #19                 // Field level:Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionLevel;
      64: invokevirtual #22                 // Method org/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionLevel.compressionLevel:()I
      67: aload_0
      68: getfield      #20                 // Field strategy:Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionStrategy;
      71: invokevirtual #23                 // Method org/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionStrategy.compressionStrategy:()I
      74: aload_0
      75: getfield      #21                 // Field windowBits:Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionHeader;
      78: invokevirtual #24                 // Method org/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionHeader.windowBits:()I
      81: invokestatic  #25                 // Method init:(III)J
      84: putfield      #26                 // Field stream:J
      87: aload_0
      88: iload         4
      90: putfield      #27                 // Field directBufferSize:I
      93: aload_0
      94: iload         4
      96: invokestatic  #28                 // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
      99: putfield      #14                 // Field uncompressedDirectBuf:Ljava/nio/Buffer;
     102: aload_0
     103: iload         4
     105: invokestatic  #28                 // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
     108: putfield      #18                 // Field compressedDirectBuf:Ljava/nio/Buffer;
     111: aload_0
     112: getfield      #18                 // Field compressedDirectBuf:Ljava/nio/Buffer;
     115: iload         4
     117: invokevirtual #29                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
     120: pop
     121: return

  public void reinit(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method reset:()V
       4: aload_1
       5: ifnonnull     9
       8: return
       9: aload_0
      10: getfield      #26                 // Field stream:J
      13: invokestatic  #31                 // Method end:(J)V
      16: aload_0
      17: aload_1
      18: invokestatic  #8                  // Method org/apache/hadoop/io/compress/zlib/ZlibFactory.getCompressionLevel:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionLevel;
      21: putfield      #19                 // Field level:Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionLevel;
      24: aload_0
      25: aload_1
      26: invokestatic  #9                  // Method org/apache/hadoop/io/compress/zlib/ZlibFactory.getCompressionStrategy:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionStrategy;
      29: putfield      #20                 // Field strategy:Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionStrategy;
      32: aload_0
      33: aload_0
      34: getfield      #19                 // Field level:Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionLevel;
      37: invokevirtual #22                 // Method org/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionLevel.compressionLevel:()I
      40: aload_0
      41: getfield      #20                 // Field strategy:Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionStrategy;
      44: invokevirtual #23                 // Method org/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionStrategy.compressionStrategy:()I
      47: aload_0
      48: getfield      #21                 // Field windowBits:Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionHeader;
      51: invokevirtual #24                 // Method org/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionHeader.windowBits:()I
      54: invokestatic  #25                 // Method init:(III)J
      57: putfield      #26                 // Field stream:J
      60: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
      63: invokeinterface #33,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      68: ifeq          81
      71: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
      74: ldc           #34                 // String Reinit compressor with new compression configuration
      76: invokeinterface #35,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      81: return

  public void setInput(byte[], int, int);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #36                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #37                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: iload_2
      13: iflt          28
      16: iload_3
      17: iflt          28
      20: iload_2
      21: aload_1
      22: arraylength
      23: iload_3
      24: isub
      25: if_icmple     36
      28: new           #38                 // class java/lang/ArrayIndexOutOfBoundsException
      31: dup
      32: invokespecial #39                 // Method java/lang/ArrayIndexOutOfBoundsException."<init>":()V
      35: athrow
      36: aload_0
      37: aload_1
      38: putfield      #11                 // Field userBuf:[B
      41: aload_0
      42: iload_2
      43: putfield      #12                 // Field userBufOff:I
      46: aload_0
      47: iload_3
      48: putfield      #13                 // Field userBufLen:I
      51: aload_0
      52: iconst_0
      53: putfield      #15                 // Field uncompressedDirectBufOff:I
      56: aload_0
      57: invokevirtual #40                 // Method setInputFromSavedData:()V
      60: aload_0
      61: getfield      #18                 // Field compressedDirectBuf:Ljava/nio/Buffer;
      64: aload_0
      65: getfield      #27                 // Field directBufferSize:I
      68: invokevirtual #41                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      71: pop
      72: aload_0
      73: getfield      #18                 // Field compressedDirectBuf:Ljava/nio/Buffer;
      76: aload_0
      77: getfield      #27                 // Field directBufferSize:I
      80: invokevirtual #29                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      83: pop
      84: return

  void setInputFromSavedData();
    Code:
       0: aload_0
       1: getfield      #13                 // Field userBufLen:I
       4: aload_0
       5: getfield      #14                 // Field uncompressedDirectBuf:Ljava/nio/Buffer;
       8: invokevirtual #42                 // Method java/nio/Buffer.remaining:()I
      11: invokestatic  #43                 // Method java/lang/Math.min:(II)I
      14: istore_1
      15: aload_0
      16: getfield      #14                 // Field uncompressedDirectBuf:Ljava/nio/Buffer;
      19: checkcast     #44                 // class java/nio/ByteBuffer
      22: aload_0
      23: getfield      #11                 // Field userBuf:[B
      26: aload_0
      27: getfield      #12                 // Field userBufOff:I
      30: iload_1
      31: invokevirtual #45                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      34: pop
      35: aload_0
      36: dup
      37: getfield      #13                 // Field userBufLen:I
      40: iload_1
      41: isub
      42: putfield      #13                 // Field userBufLen:I
      45: aload_0
      46: dup
      47: getfield      #12                 // Field userBufOff:I
      50: iload_1
      51: iadd
      52: putfield      #12                 // Field userBufOff:I
      55: aload_0
      56: aload_0
      57: getfield      #14                 // Field uncompressedDirectBuf:Ljava/nio/Buffer;
      60: invokevirtual #46                 // Method java/nio/Buffer.position:()I
      63: putfield      #16                 // Field uncompressedDirectBufLen:I
      66: return

  public void setDictionary(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #26                 // Field stream:J
       4: lconst_0
       5: lcmp
       6: ifeq          13
       9: aload_1
      10: ifnonnull     21
      13: new           #36                 // class java/lang/NullPointerException
      16: dup
      17: invokespecial #37                 // Method java/lang/NullPointerException."<init>":()V
      20: athrow
      21: iload_2
      22: iflt          37
      25: iload_3
      26: iflt          37
      29: iload_2
      30: aload_1
      31: arraylength
      32: iload_3
      33: isub
      34: if_icmple     45
      37: new           #38                 // class java/lang/ArrayIndexOutOfBoundsException
      40: dup
      41: invokespecial #39                 // Method java/lang/ArrayIndexOutOfBoundsException."<init>":()V
      44: athrow
      45: aload_0
      46: getfield      #26                 // Field stream:J
      49: aload_1
      50: iload_2
      51: iload_3
      52: invokestatic  #47                 // Method setDictionary:(J[BII)V
      55: return

  public boolean needsInput();
    Code:
       0: aload_0
       1: getfield      #18                 // Field compressedDirectBuf:Ljava/nio/Buffer;
       4: invokevirtual #42                 // Method java/nio/Buffer.remaining:()I
       7: ifle          12
      10: iconst_0
      11: ireturn
      12: aload_0
      13: getfield      #17                 // Field keepUncompressedBuf:Z
      16: ifeq          28
      19: aload_0
      20: getfield      #16                 // Field uncompressedDirectBufLen:I
      23: ifle          28
      26: iconst_0
      27: ireturn
      28: aload_0
      29: getfield      #14                 // Field uncompressedDirectBuf:Ljava/nio/Buffer;
      32: invokevirtual #42                 // Method java/nio/Buffer.remaining:()I
      35: ifle          65
      38: aload_0
      39: getfield      #13                 // Field userBufLen:I
      42: ifgt          47
      45: iconst_1
      46: ireturn
      47: aload_0
      48: invokevirtual #40                 // Method setInputFromSavedData:()V
      51: aload_0
      52: getfield      #14                 // Field uncompressedDirectBuf:Ljava/nio/Buffer;
      55: invokevirtual #42                 // Method java/nio/Buffer.remaining:()I
      58: ifle          63
      61: iconst_1
      62: ireturn
      63: iconst_0
      64: ireturn
      65: iconst_0
      66: ireturn

  public void finish();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #48                 // Field finish:Z
       5: return

  public boolean finished();
    Code:
       0: aload_0
       1: getfield      #49                 // Field finished:Z
       4: ifeq          21
       7: aload_0
       8: getfield      #18                 // Field compressedDirectBuf:Ljava/nio/Buffer;
      11: invokevirtual #42                 // Method java/nio/Buffer.remaining:()I
      14: ifne          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public int compress(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #36                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #37                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: iload_2
      13: iflt          28
      16: iload_3
      17: iflt          28
      20: iload_2
      21: aload_1
      22: arraylength
      23: iload_3
      24: isub
      25: if_icmple     36
      28: new           #38                 // class java/lang/ArrayIndexOutOfBoundsException
      31: dup
      32: invokespecial #39                 // Method java/lang/ArrayIndexOutOfBoundsException."<init>":()V
      35: athrow
      36: iconst_0
      37: istore        4
      39: aload_0
      40: getfield      #18                 // Field compressedDirectBuf:Ljava/nio/Buffer;
      43: invokevirtual #42                 // Method java/nio/Buffer.remaining:()I
      46: istore        4
      48: iload         4
      50: ifle          79
      53: iload         4
      55: iload_3
      56: invokestatic  #43                 // Method java/lang/Math.min:(II)I
      59: istore        4
      61: aload_0
      62: getfield      #18                 // Field compressedDirectBuf:Ljava/nio/Buffer;
      65: checkcast     #44                 // class java/nio/ByteBuffer
      68: aload_1
      69: iload_2
      70: iload         4
      72: invokevirtual #50                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
      75: pop
      76: iload         4
      78: ireturn
      79: aload_0
      80: getfield      #18                 // Field compressedDirectBuf:Ljava/nio/Buffer;
      83: invokevirtual #51                 // Method java/nio/Buffer.rewind:()Ljava/nio/Buffer;
      86: pop
      87: aload_0
      88: getfield      #18                 // Field compressedDirectBuf:Ljava/nio/Buffer;
      91: aload_0
      92: getfield      #27                 // Field directBufferSize:I
      95: invokevirtual #41                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      98: pop
      99: aload_0
     100: invokespecial #52                 // Method deflateBytesDirect:()I
     103: istore        4
     105: aload_0
     106: getfield      #18                 // Field compressedDirectBuf:Ljava/nio/Buffer;
     109: iload         4
     111: invokevirtual #41                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
     114: pop
     115: aload_0
     116: getfield      #16                 // Field uncompressedDirectBufLen:I
     119: ifgt          148
     122: aload_0
     123: iconst_0
     124: putfield      #17                 // Field keepUncompressedBuf:Z
     127: aload_0
     128: getfield      #14                 // Field uncompressedDirectBuf:Ljava/nio/Buffer;
     131: invokevirtual #53                 // Method java/nio/Buffer.clear:()Ljava/nio/Buffer;
     134: pop
     135: aload_0
     136: iconst_0
     137: putfield      #15                 // Field uncompressedDirectBufOff:I
     140: aload_0
     141: iconst_0
     142: putfield      #16                 // Field uncompressedDirectBufLen:I
     145: goto          153
     148: aload_0
     149: iconst_1
     150: putfield      #17                 // Field keepUncompressedBuf:Z
     153: iload         4
     155: iload_3
     156: invokestatic  #43                 // Method java/lang/Math.min:(II)I
     159: istore        4
     161: aload_0
     162: getfield      #18                 // Field compressedDirectBuf:Ljava/nio/Buffer;
     165: checkcast     #44                 // class java/nio/ByteBuffer
     168: aload_1
     169: iload_2
     170: iload         4
     172: invokevirtual #50                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
     175: pop
     176: iload         4
     178: ireturn

  public long getBytesWritten();
    Code:
       0: aload_0
       1: invokespecial #54                 // Method checkStream:()V
       4: aload_0
       5: getfield      #26                 // Field stream:J
       8: invokestatic  #55                 // Method getBytesWritten:(J)J
      11: lreturn

  public long getBytesRead();
    Code:
       0: aload_0
       1: invokespecial #54                 // Method checkStream:()V
       4: aload_0
       5: getfield      #26                 // Field stream:J
       8: invokestatic  #56                 // Method getBytesRead:(J)J
      11: lreturn

  public void reset();
    Code:
       0: aload_0
       1: invokespecial #54                 // Method checkStream:()V
       4: aload_0
       5: getfield      #26                 // Field stream:J
       8: invokestatic  #57                 // Method reset:(J)V
      11: aload_0
      12: iconst_0
      13: putfield      #48                 // Field finish:Z
      16: aload_0
      17: iconst_0
      18: putfield      #49                 // Field finished:Z
      21: aload_0
      22: getfield      #14                 // Field uncompressedDirectBuf:Ljava/nio/Buffer;
      25: invokevirtual #51                 // Method java/nio/Buffer.rewind:()Ljava/nio/Buffer;
      28: pop
      29: aload_0
      30: aload_0
      31: iconst_0
      32: dup_x1
      33: putfield      #16                 // Field uncompressedDirectBufLen:I
      36: putfield      #15                 // Field uncompressedDirectBufOff:I
      39: aload_0
      40: iconst_0
      41: putfield      #17                 // Field keepUncompressedBuf:Z
      44: aload_0
      45: getfield      #18                 // Field compressedDirectBuf:Ljava/nio/Buffer;
      48: aload_0
      49: getfield      #27                 // Field directBufferSize:I
      52: invokevirtual #41                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      55: pop
      56: aload_0
      57: getfield      #18                 // Field compressedDirectBuf:Ljava/nio/Buffer;
      60: aload_0
      61: getfield      #27                 // Field directBufferSize:I
      64: invokevirtual #29                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      67: pop
      68: aload_0
      69: aload_0
      70: iconst_0
      71: dup_x1
      72: putfield      #13                 // Field userBufLen:I
      75: putfield      #12                 // Field userBufOff:I
      78: return

  public void end();
    Code:
       0: aload_0
       1: getfield      #26                 // Field stream:J
       4: lconst_0
       5: lcmp
       6: ifeq          21
       9: aload_0
      10: getfield      #26                 // Field stream:J
      13: invokestatic  #31                 // Method end:(J)V
      16: aload_0
      17: lconst_0
      18: putfield      #26                 // Field stream:J
      21: return

  private void checkStream();
    Code:
       0: aload_0
       1: getfield      #26                 // Field stream:J
       4: lconst_0
       5: lcmp
       6: ifne          17
       9: new           #36                 // class java/lang/NullPointerException
      12: dup
      13: invokespecial #37                 // Method java/lang/NullPointerException."<init>":()V
      16: athrow
      17: return

  private static native void initIDs();

  private static native long init(int, int, int);

  private static native void setDictionary(long, byte[], int, int);

  private native int deflateBytesDirect();

  private static native long getBytesRead(long);

  private static native long getBytesWritten(long);

  private static native void reset(long);

  private static native void end(long);

  public static native java.lang.String getLibraryName();

  static {};
    Code:
       0: ldc           #5                  // class org/apache/hadoop/io/compress/zlib/ZlibCompressor
       2: invokestatic  #58                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
       8: iconst_0
       9: putstatic     #1                  // Field nativeZlibLoaded:Z
      12: invokestatic  #59                 // Method org/apache/hadoop/util/NativeCodeLoader.isNativeCodeLoaded:()Z
      15: ifeq          29
      18: invokestatic  #60                 // Method initIDs:()V
      21: iconst_1
      22: putstatic     #1                  // Field nativeZlibLoaded:Z
      25: goto          29
      28: astore_0
      29: return
    Exception table:
       from    to  target type
          18    25    28   Class java/lang/Throwable
}
