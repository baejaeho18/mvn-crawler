Compiled from "SaslRpcServer.java"
public class org.apache.hadoop.security.SaslRpcServer {
  public static final org.slf4j.Logger LOG;

  public static final java.lang.String SASL_DEFAULT_REALM;

  private static javax.security.sasl.SaslServerFactory saslFactory;

  public org.apache.hadoop.security.SaslRpcServer$AuthMethod authMethod;

  public java.lang.String mechanism;

  public java.lang.String protocol;

  public java.lang.String serverId;

  public org.apache.hadoop.security.SaslRpcServer(org.apache.hadoop.security.SaslRpcServer$AuthMethod) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field authMethod:Lorg/apache/hadoop/security/SaslRpcServer$AuthMethod;
       9: aload_0
      10: aload_1
      11: invokevirtual #4                  // Method org/apache/hadoop/security/SaslRpcServer$AuthMethod.getMechanismName:()Ljava/lang/String;
      14: putfield      #5                  // Field mechanism:Ljava/lang/String;
      17: getstatic     #6                  // Field org/apache/hadoop/security/SaslRpcServer$2.$SwitchMap$org$apache$hadoop$security$SaslRpcServer$AuthMethod:[I
      20: aload_1
      21: invokevirtual #7                  // Method org/apache/hadoop/security/SaslRpcServer$AuthMethod.ordinal:()I
      24: iaload
      25: tableswitch   { // 1 to 3
                     1: 52
                     2: 53
                     3: 68
               default: 149
          }
      52: return
      53: aload_0
      54: ldc           #8                  // String
      56: putfield      #9                  // Field protocol:Ljava/lang/String;
      59: aload_0
      60: ldc           #11                 // String default
      62: putfield      #12                 // Field serverId:Ljava/lang/String;
      65: goto          176
      68: invokestatic  #13                 // Method org/apache/hadoop/security/UserGroupInformation.getCurrentUser:()Lorg/apache/hadoop/security/UserGroupInformation;
      71: invokevirtual #14                 // Method org/apache/hadoop/security/UserGroupInformation.getUserName:()Ljava/lang/String;
      74: astore_2
      75: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      78: invokeinterface #16,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      83: ifeq          113
      86: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      89: new           #17                 // class java/lang/StringBuilder
      92: dup
      93: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      96: ldc           #19                 // String Kerberos principal name is
      98: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: aload_2
     102: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     108: invokeinterface #22,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     113: aload_2
     114: ldc           #23                 // String [/@]
     116: iconst_3
     117: invokevirtual #24                 // Method java/lang/String.split:(Ljava/lang/String;I)[Ljava/lang/String;
     120: astore_3
     121: aload_0
     122: aload_3
     123: iconst_0
     124: aaload
     125: putfield      #9                  // Field protocol:Ljava/lang/String;
     128: aload_0
     129: aload_3
     130: arraylength
     131: iconst_2
     132: if_icmpge     140
     135: ldc           #8                  // String
     137: goto          143
     140: aload_3
     141: iconst_1
     142: aaload
     143: putfield      #12                 // Field serverId:Ljava/lang/String;
     146: goto          176
     149: new           #25                 // class org/apache/hadoop/security/AccessControlException
     152: dup
     153: new           #17                 // class java/lang/StringBuilder
     156: dup
     157: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
     160: ldc           #26                 // String Server does not support SASL
     162: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     165: aload_1
     166: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     169: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     172: invokespecial #28                 // Method org/apache/hadoop/security/AccessControlException."<init>":(Ljava/lang/String;)V
     175: athrow
     176: return

  public javax.security.sasl.SaslServer create(org.apache.hadoop.ipc.Server$Connection, java.util.Map<java.lang.String, ?>, org.apache.hadoop.security.token.SecretManager<org.apache.hadoop.security.token.TokenIdentifier>) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aconst_null
       1: astore        4
       3: getstatic     #6                  // Field org/apache/hadoop/security/SaslRpcServer$2.$SwitchMap$org$apache$hadoop$security$SaslRpcServer$AuthMethod:[I
       6: aload_0
       7: getfield      #3                  // Field authMethod:Lorg/apache/hadoop/security/SaslRpcServer$AuthMethod;
      10: invokevirtual #7                  // Method org/apache/hadoop/security/SaslRpcServer$AuthMethod.ordinal:()I
      13: iaload
      14: lookupswitch  { // 2
                     2: 40
                     3: 54
               default: 112
          }
      40: new           #29                 // class org/apache/hadoop/security/SaslRpcServer$SaslDigestCallbackHandler
      43: dup
      44: aload_3
      45: aload_1
      46: invokespecial #30                 // Method org/apache/hadoop/security/SaslRpcServer$SaslDigestCallbackHandler."<init>":(Lorg/apache/hadoop/security/token/SecretManager;Lorg/apache/hadoop/ipc/Server$Connection;)V
      49: astore        5
      51: goto          142
      54: invokestatic  #13                 // Method org/apache/hadoop/security/UserGroupInformation.getCurrentUser:()Lorg/apache/hadoop/security/UserGroupInformation;
      57: astore        4
      59: aload_0
      60: getfield      #12                 // Field serverId:Ljava/lang/String;
      63: invokevirtual #31                 // Method java/lang/String.isEmpty:()Z
      66: ifeq          100
      69: new           #25                 // class org/apache/hadoop/security/AccessControlException
      72: dup
      73: new           #17                 // class java/lang/StringBuilder
      76: dup
      77: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      80: ldc           #32                 // String Kerberos principal name does NOT have the expected hostname part:
      82: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: aload         4
      87: invokevirtual #14                 // Method org/apache/hadoop/security/UserGroupInformation.getUserName:()Ljava/lang/String;
      90: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      96: invokespecial #28                 // Method org/apache/hadoop/security/AccessControlException."<init>":(Ljava/lang/String;)V
      99: athrow
     100: new           #33                 // class org/apache/hadoop/security/SaslRpcServer$SaslGssCallbackHandler
     103: dup
     104: invokespecial #34                 // Method org/apache/hadoop/security/SaslRpcServer$SaslGssCallbackHandler."<init>":()V
     107: astore        5
     109: goto          142
     112: new           #25                 // class org/apache/hadoop/security/AccessControlException
     115: dup
     116: new           #17                 // class java/lang/StringBuilder
     119: dup
     120: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
     123: ldc           #26                 // String Server does not support SASL
     125: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: aload_0
     129: getfield      #3                  // Field authMethod:Lorg/apache/hadoop/security/SaslRpcServer$AuthMethod;
     132: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     135: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     138: invokespecial #28                 // Method org/apache/hadoop/security/AccessControlException."<init>":(Ljava/lang/String;)V
     141: athrow
     142: aload         4
     144: ifnull        171
     147: aload         4
     149: new           #35                 // class org/apache/hadoop/security/SaslRpcServer$1
     152: dup
     153: aload_0
     154: aload_2
     155: aload         5
     157: invokespecial #36                 // Method org/apache/hadoop/security/SaslRpcServer$1."<init>":(Lorg/apache/hadoop/security/SaslRpcServer;Ljava/util/Map;Ljavax/security/auth/callback/CallbackHandler;)V
     160: invokevirtual #37                 // Method org/apache/hadoop/security/UserGroupInformation.doAs:(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;
     163: checkcast     #38                 // class javax/security/sasl/SaslServer
     166: astore        6
     168: goto          196
     171: getstatic     #1                  // Field saslFactory:Ljavax/security/sasl/SaslServerFactory;
     174: aload_0
     175: getfield      #5                  // Field mechanism:Ljava/lang/String;
     178: aload_0
     179: getfield      #9                  // Field protocol:Ljava/lang/String;
     182: aload_0
     183: getfield      #12                 // Field serverId:Ljava/lang/String;
     186: aload_2
     187: aload         5
     189: invokeinterface #39,  6           // InterfaceMethod javax/security/sasl/SaslServerFactory.createSaslServer:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljavax/security/auth/callback/CallbackHandler;)Ljavax/security/sasl/SaslServer;
     194: astore        6
     196: aload         6
     198: ifnonnull     231
     201: new           #25                 // class org/apache/hadoop/security/AccessControlException
     204: dup
     205: new           #17                 // class java/lang/StringBuilder
     208: dup
     209: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
     212: ldc           #40                 // String Unable to find SASL server implementation for
     214: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     217: aload_0
     218: getfield      #5                  // Field mechanism:Ljava/lang/String;
     221: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     224: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     227: invokespecial #28                 // Method org/apache/hadoop/security/AccessControlException."<init>":(Ljava/lang/String;)V
     230: athrow
     231: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
     234: invokeinterface #16,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     239: ifeq          272
     242: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
     245: new           #17                 // class java/lang/StringBuilder
     248: dup
     249: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
     252: ldc           #41                 // String Created SASL server with mechanism =
     254: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     257: aload_0
     258: getfield      #5                  // Field mechanism:Ljava/lang/String;
     261: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     264: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     267: invokeinterface #22,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     272: aload         6
     274: areturn

  public static void init(org.apache.hadoop.conf.Configuration);
    Code:
       0: new           #42                 // class org/apache/hadoop/security/SaslPlainServer$SecurityProvider
       3: dup
       4: invokespecial #43                 // Method org/apache/hadoop/security/SaslPlainServer$SecurityProvider."<init>":()V
       7: invokestatic  #44                 // Method java/security/Security.addProvider:(Ljava/security/Provider;)I
      10: pop
      11: new           #45                 // class org/apache/hadoop/security/SaslRpcServer$FastSaslServerFactory
      14: dup
      15: aconst_null
      16: invokespecial #46                 // Method org/apache/hadoop/security/SaslRpcServer$FastSaslServerFactory."<init>":(Ljava/util/Map;)V
      19: putstatic     #1                  // Field saslFactory:Ljavax/security/sasl/SaslServerFactory;
      22: return

  static java.lang.String encodeIdentifier(byte[]);
    Code:
       0: new           #47                 // class java/lang/String
       3: dup
       4: aload_0
       5: invokestatic  #48                 // Method org/apache/commons/codec/binary/Base64.encodeBase64:([B)[B
       8: getstatic     #49                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      11: invokespecial #50                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      14: areturn

  static byte[] decodeIdentifier(java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #49                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
       4: invokevirtual #51                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
       7: invokestatic  #52                 // Method org/apache/commons/codec/binary/Base64.decodeBase64:([B)[B
      10: areturn

  public static <T extends org.apache.hadoop.security.token.TokenIdentifier> T getIdentifier(java.lang.String, org.apache.hadoop.security.token.SecretManager<T>) throws org.apache.hadoop.security.token.SecretManager$InvalidToken;
    Code:
       0: aload_0
       1: invokestatic  #53                 // Method decodeIdentifier:(Ljava/lang/String;)[B
       4: astore_2
       5: aload_1
       6: invokevirtual #54                 // Method org/apache/hadoop/security/token/SecretManager.createIdentifier:()Lorg/apache/hadoop/security/token/TokenIdentifier;
       9: astore_3
      10: aload_3
      11: new           #55                 // class java/io/DataInputStream
      14: dup
      15: new           #56                 // class java/io/ByteArrayInputStream
      18: dup
      19: aload_2
      20: invokespecial #57                 // Method java/io/ByteArrayInputStream."<init>":([B)V
      23: invokespecial #58                 // Method java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
      26: invokevirtual #59                 // Method org/apache/hadoop/security/token/TokenIdentifier.readFields:(Ljava/io/DataInput;)V
      29: goto          52
      32: astore        4
      34: new           #61                 // class org/apache/hadoop/security/token/SecretManager$InvalidToken
      37: dup
      38: ldc           #62                 // String Can\'t de-serialize tokenIdentifier
      40: invokespecial #63                 // Method org/apache/hadoop/security/token/SecretManager$InvalidToken."<init>":(Ljava/lang/String;)V
      43: aload         4
      45: invokevirtual #64                 // Method org/apache/hadoop/security/token/SecretManager$InvalidToken.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      48: checkcast     #61                 // class org/apache/hadoop/security/token/SecretManager$InvalidToken
      51: athrow
      52: aload_3
      53: areturn
    Exception table:
       from    to  target type
          10    29    32   Class java/io/IOException

  static char[] encodePassword(byte[]);
    Code:
       0: new           #47                 // class java/lang/String
       3: dup
       4: aload_0
       5: invokestatic  #48                 // Method org/apache/commons/codec/binary/Base64.encodeBase64:([B)[B
       8: getstatic     #49                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      11: invokespecial #50                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      14: invokevirtual #65                 // Method java/lang/String.toCharArray:()[C
      17: areturn

  public static java.lang.String[] splitKerberosName(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #23                 // String [/@]
       3: invokevirtual #66                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
       6: areturn

  static javax.security.sasl.SaslServerFactory access$000();
    Code:
       0: getstatic     #1                  // Field saslFactory:Ljavax/security/sasl/SaslServerFactory;
       3: areturn

  static {};
    Code:
       0: ldc           #10                 // class org/apache/hadoop/security/SaslRpcServer
       2: invokestatic  #67                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
