Compiled from "RetryPolicies.java"
class org.apache.hadoop.io.retry.RetryPolicies$FailoverOnNetworkExceptionRetry implements org.apache.hadoop.io.retry.RetryPolicy {
  private org.apache.hadoop.io.retry.RetryPolicy fallbackPolicy;

  private int maxFailovers;

  private int maxRetries;

  private long delayMillis;

  private long maxDelayBase;

  public org.apache.hadoop.io.retry.RetryPolicies$FailoverOnNetworkExceptionRetry(org.apache.hadoop.io.retry.RetryPolicy, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iconst_0
       4: lconst_0
       5: lconst_0
       6: invokespecial #1                  // Method "<init>":(Lorg/apache/hadoop/io/retry/RetryPolicy;IIJJ)V
       9: return

  public org.apache.hadoop.io.retry.RetryPolicies$FailoverOnNetworkExceptionRetry(org.apache.hadoop.io.retry.RetryPolicy, int, long, long);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iconst_0
       4: lload_3
       5: lload         5
       7: invokespecial #1                  // Method "<init>":(Lorg/apache/hadoop/io/retry/RetryPolicy;IIJJ)V
      10: return

  public org.apache.hadoop.io.retry.RetryPolicies$FailoverOnNetworkExceptionRetry(org.apache.hadoop.io.retry.RetryPolicy, int, int, long, long);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field fallbackPolicy:Lorg/apache/hadoop/io/retry/RetryPolicy;
       9: aload_0
      10: iload_2
      11: putfield      #4                  // Field maxFailovers:I
      14: aload_0
      15: iload_3
      16: putfield      #5                  // Field maxRetries:I
      19: aload_0
      20: lload         4
      22: putfield      #6                  // Field delayMillis:J
      25: aload_0
      26: lload         6
      28: putfield      #7                  // Field maxDelayBase:J
      31: return

  private long getFailoverOrRetrySleepTime(int);
    Code:
       0: iload_1
       1: ifne          8
       4: lconst_0
       5: goto          20
       8: aload_0
       9: getfield      #6                  // Field delayMillis:J
      12: iload_1
      13: aload_0
      14: getfield      #7                  // Field maxDelayBase:J
      17: invokestatic  #8                  // Method org/apache/hadoop/io/retry/RetryPolicies.access$100:(JIJ)J
      20: lreturn

  public org.apache.hadoop.io.retry.RetryPolicy$RetryAction shouldRetry(java.lang.Exception, int, int, boolean) throws java.lang.Exception;
    Code:
       0: iload_3
       1: aload_0
       2: getfield      #4                  // Field maxFailovers:I
       5: if_icmplt     56
       8: new           #9                  // class org/apache/hadoop/io/retry/RetryPolicy$RetryAction
      11: dup
      12: getstatic     #10                 // Field org/apache/hadoop/io/retry/RetryPolicy$RetryAction$RetryDecision.FAIL:Lorg/apache/hadoop/io/retry/RetryPolicy$RetryAction$RetryDecision;
      15: lconst_0
      16: new           #11                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #13                 // String failovers (
      25: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: iload_3
      29: invokevirtual #15                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      32: ldc           #16                 // String ) exceeded maximum allowed (
      34: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_0
      38: getfield      #4                  // Field maxFailovers:I
      41: invokevirtual #15                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      44: ldc           #17                 // String )
      46: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokespecial #19                 // Method org/apache/hadoop/io/retry/RetryPolicy$RetryAction."<init>":(Lorg/apache/hadoop/io/retry/RetryPolicy$RetryAction$RetryDecision;JLjava/lang/String;)V
      55: areturn
      56: iload_2
      57: iload_3
      58: isub
      59: aload_0
      60: getfield      #5                  // Field maxRetries:I
      63: if_icmple     114
      66: new           #9                  // class org/apache/hadoop/io/retry/RetryPolicy$RetryAction
      69: dup
      70: getstatic     #10                 // Field org/apache/hadoop/io/retry/RetryPolicy$RetryAction$RetryDecision.FAIL:Lorg/apache/hadoop/io/retry/RetryPolicy$RetryAction$RetryDecision;
      73: lconst_0
      74: new           #11                 // class java/lang/StringBuilder
      77: dup
      78: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      81: ldc           #20                 // String retries (
      83: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: iload_2
      87: invokevirtual #15                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      90: ldc           #16                 // String ) exceeded maximum allowed (
      92: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: aload_0
      96: getfield      #5                  // Field maxRetries:I
      99: invokevirtual #15                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     102: ldc           #17                 // String )
     104: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     110: invokespecial #19                 // Method org/apache/hadoop/io/retry/RetryPolicy$RetryAction."<init>":(Lorg/apache/hadoop/io/retry/RetryPolicy$RetryAction$RetryDecision;JLjava/lang/String;)V
     113: areturn
     114: aload_1
     115: invokestatic  #21                 // Method org/apache/hadoop/io/retry/RetryPolicies.access$200:(Ljava/lang/Exception;)Z
     118: ifeq          135
     121: new           #9                  // class org/apache/hadoop/io/retry/RetryPolicy$RetryAction
     124: dup
     125: getstatic     #10                 // Field org/apache/hadoop/io/retry/RetryPolicy$RetryAction$RetryDecision.FAIL:Lorg/apache/hadoop/io/retry/RetryPolicy$RetryAction$RetryDecision;
     128: lconst_0
     129: ldc           #22                 // String SASL failure
     131: invokespecial #19                 // Method org/apache/hadoop/io/retry/RetryPolicy$RetryAction."<init>":(Lorg/apache/hadoop/io/retry/RetryPolicy$RetryAction$RetryDecision;JLjava/lang/String;)V
     134: areturn
     135: aload_1
     136: instanceof    #23                 // class java/net/ConnectException
     139: ifne          184
     142: aload_1
     143: instanceof    #24                 // class java/io/EOFException
     146: ifne          184
     149: aload_1
     150: instanceof    #25                 // class java/net/NoRouteToHostException
     153: ifne          184
     156: aload_1
     157: instanceof    #26                 // class java/net/UnknownHostException
     160: ifne          184
     163: aload_1
     164: instanceof    #27                 // class org/apache/hadoop/ipc/StandbyException
     167: ifne          184
     170: aload_1
     171: instanceof    #28                 // class org/apache/hadoop/net/ConnectTimeoutException
     174: ifne          184
     177: aload_1
     178: invokestatic  #29                 // Method org/apache/hadoop/io/retry/RetryPolicies.access$300:(Ljava/lang/Exception;)Z
     181: ifeq          200
     184: new           #9                  // class org/apache/hadoop/io/retry/RetryPolicy$RetryAction
     187: dup
     188: getstatic     #30                 // Field org/apache/hadoop/io/retry/RetryPolicy$RetryAction$RetryDecision.FAILOVER_AND_RETRY:Lorg/apache/hadoop/io/retry/RetryPolicy$RetryAction$RetryDecision;
     191: aload_0
     192: iload_3
     193: invokespecial #31                 // Method getFailoverOrRetrySleepTime:(I)J
     196: invokespecial #32                 // Method org/apache/hadoop/io/retry/RetryPolicy$RetryAction."<init>":(Lorg/apache/hadoop/io/retry/RetryPolicy$RetryAction$RetryDecision;J)V
     199: areturn
     200: aload_1
     201: instanceof    #33                 // class org/apache/hadoop/ipc/RetriableException
     204: ifne          214
     207: aload_1
     208: invokestatic  #34                 // Method org/apache/hadoop/io/retry/RetryPolicies.getWrappedRetriableException:(Ljava/lang/Exception;)Lorg/apache/hadoop/ipc/RetriableException;
     211: ifnull        230
     214: new           #9                  // class org/apache/hadoop/io/retry/RetryPolicy$RetryAction
     217: dup
     218: getstatic     #35                 // Field org/apache/hadoop/io/retry/RetryPolicy$RetryAction$RetryDecision.RETRY:Lorg/apache/hadoop/io/retry/RetryPolicy$RetryAction$RetryDecision;
     221: aload_0
     222: iload_2
     223: invokespecial #31                 // Method getFailoverOrRetrySleepTime:(I)J
     226: invokespecial #32                 // Method org/apache/hadoop/io/retry/RetryPolicy$RetryAction."<init>":(Lorg/apache/hadoop/io/retry/RetryPolicy$RetryAction$RetryDecision;J)V
     229: areturn
     230: aload_1
     231: instanceof    #36                 // class org/apache/hadoop/security/token/SecretManager$InvalidToken
     234: ifeq          251
     237: new           #9                  // class org/apache/hadoop/io/retry/RetryPolicy$RetryAction
     240: dup
     241: getstatic     #10                 // Field org/apache/hadoop/io/retry/RetryPolicy$RetryAction$RetryDecision.FAIL:Lorg/apache/hadoop/io/retry/RetryPolicy$RetryAction$RetryDecision;
     244: lconst_0
     245: ldc           #37                 // String Invalid or Cancelled Token
     247: invokespecial #19                 // Method org/apache/hadoop/io/retry/RetryPolicy$RetryAction."<init>":(Lorg/apache/hadoop/io/retry/RetryPolicy$RetryAction$RetryDecision;JLjava/lang/String;)V
     250: areturn
     251: aload_1
     252: instanceof    #38                 // class org/apache/hadoop/security/AccessControlException
     255: ifne          265
     258: aload_1
     259: invokestatic  #39                 // Method org/apache/hadoop/io/retry/RetryPolicies.access$400:(Ljava/lang/Exception;)Z
     262: ifeq          279
     265: new           #9                  // class org/apache/hadoop/io/retry/RetryPolicy$RetryAction
     268: dup
     269: getstatic     #10                 // Field org/apache/hadoop/io/retry/RetryPolicy$RetryAction$RetryDecision.FAIL:Lorg/apache/hadoop/io/retry/RetryPolicy$RetryAction$RetryDecision;
     272: lconst_0
     273: ldc           #40                 // String Access denied
     275: invokespecial #19                 // Method org/apache/hadoop/io/retry/RetryPolicy$RetryAction."<init>":(Lorg/apache/hadoop/io/retry/RetryPolicy$RetryAction$RetryDecision;JLjava/lang/String;)V
     278: areturn
     279: aload_1
     280: instanceof    #41                 // class java/net/SocketException
     283: ifne          300
     286: aload_1
     287: instanceof    #42                 // class java/io/IOException
     290: ifeq          335
     293: aload_1
     294: instanceof    #43                 // class org/apache/hadoop/ipc/RemoteException
     297: ifne          335
     300: iload         4
     302: ifeq          321
     305: new           #9                  // class org/apache/hadoop/io/retry/RetryPolicy$RetryAction
     308: dup
     309: getstatic     #30                 // Field org/apache/hadoop/io/retry/RetryPolicy$RetryAction$RetryDecision.FAILOVER_AND_RETRY:Lorg/apache/hadoop/io/retry/RetryPolicy$RetryAction$RetryDecision;
     312: aload_0
     313: iload_2
     314: invokespecial #31                 // Method getFailoverOrRetrySleepTime:(I)J
     317: invokespecial #32                 // Method org/apache/hadoop/io/retry/RetryPolicy$RetryAction."<init>":(Lorg/apache/hadoop/io/retry/RetryPolicy$RetryAction$RetryDecision;J)V
     320: areturn
     321: new           #9                  // class org/apache/hadoop/io/retry/RetryPolicy$RetryAction
     324: dup
     325: getstatic     #10                 // Field org/apache/hadoop/io/retry/RetryPolicy$RetryAction$RetryDecision.FAIL:Lorg/apache/hadoop/io/retry/RetryPolicy$RetryAction$RetryDecision;
     328: lconst_0
     329: ldc           #44                 // String the invoked method is not idempotent, and unable to determine whether it was invoked
     331: invokespecial #19                 // Method org/apache/hadoop/io/retry/RetryPolicy$RetryAction."<init>":(Lorg/apache/hadoop/io/retry/RetryPolicy$RetryAction$RetryDecision;JLjava/lang/String;)V
     334: areturn
     335: aload_0
     336: getfield      #3                  // Field fallbackPolicy:Lorg/apache/hadoop/io/retry/RetryPolicy;
     339: aload_1
     340: iload_2
     341: iload_3
     342: iload         4
     344: invokeinterface #45,  5           // InterfaceMethod org/apache/hadoop/io/retry/RetryPolicy.shouldRetry:(Ljava/lang/Exception;IIZ)Lorg/apache/hadoop/io/retry/RetryPolicy$RetryAction;
     349: areturn
}
