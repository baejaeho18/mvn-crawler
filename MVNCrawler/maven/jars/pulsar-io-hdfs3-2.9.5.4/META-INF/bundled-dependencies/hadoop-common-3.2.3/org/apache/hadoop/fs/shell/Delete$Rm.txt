Compiled from "Delete.java"
public class org.apache.hadoop.fs.shell.Delete$Rm extends org.apache.hadoop.fs.shell.FsCommand {
  public static final java.lang.String NAME;

  public static final java.lang.String USAGE;

  public static final java.lang.String DESCRIPTION;

  private boolean skipTrash;

  private boolean deleteDirs;

  private boolean ignoreFNF;

  private boolean safeDelete;

  public org.apache.hadoop.fs.shell.Delete$Rm();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/apache/hadoop/fs/shell/FsCommand."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #3                  // Field skipTrash:Z
       9: aload_0
      10: iconst_0
      11: putfield      #4                  // Field deleteDirs:Z
      14: aload_0
      15: iconst_0
      16: putfield      #5                  // Field ignoreFNF:Z
      19: aload_0
      20: iconst_0
      21: putfield      #6                  // Field safeDelete:Z
      24: return

  protected void processOptions(java.util.LinkedList<java.lang.String>) throws java.io.IOException;
    Code:
       0: new           #7                  // class org/apache/hadoop/fs/shell/CommandFormat
       3: dup
       4: iconst_1
       5: ldc           #9                  // int 2147483647
       7: iconst_5
       8: anewarray     #10                 // class java/lang/String
      11: dup
      12: iconst_0
      13: ldc           #11                 // String f
      15: aastore
      16: dup
      17: iconst_1
      18: ldc           #12                 // String r
      20: aastore
      21: dup
      22: iconst_2
      23: ldc           #13                 // String R
      25: aastore
      26: dup
      27: iconst_3
      28: ldc           #14                 // String skipTrash
      30: aastore
      31: dup
      32: iconst_4
      33: ldc           #15                 // String safely
      35: aastore
      36: invokespecial #16                 // Method org/apache/hadoop/fs/shell/CommandFormat."<init>":(II[Ljava/lang/String;)V
      39: astore_2
      40: aload_2
      41: aload_1
      42: invokevirtual #17                 // Method org/apache/hadoop/fs/shell/CommandFormat.parse:(Ljava/util/List;)V
      45: aload_0
      46: aload_2
      47: ldc           #11                 // String f
      49: invokevirtual #18                 // Method org/apache/hadoop/fs/shell/CommandFormat.getOpt:(Ljava/lang/String;)Z
      52: putfield      #5                  // Field ignoreFNF:Z
      55: aload_0
      56: aload_2
      57: ldc           #12                 // String r
      59: invokevirtual #18                 // Method org/apache/hadoop/fs/shell/CommandFormat.getOpt:(Ljava/lang/String;)Z
      62: ifne          74
      65: aload_2
      66: ldc           #13                 // String R
      68: invokevirtual #18                 // Method org/apache/hadoop/fs/shell/CommandFormat.getOpt:(Ljava/lang/String;)Z
      71: ifeq          78
      74: iconst_1
      75: goto          79
      78: iconst_0
      79: putfield      #4                  // Field deleteDirs:Z
      82: aload_0
      83: aload_2
      84: ldc           #14                 // String skipTrash
      86: invokevirtual #18                 // Method org/apache/hadoop/fs/shell/CommandFormat.getOpt:(Ljava/lang/String;)Z
      89: putfield      #3                  // Field skipTrash:Z
      92: aload_0
      93: aload_2
      94: ldc           #15                 // String safely
      96: invokevirtual #18                 // Method org/apache/hadoop/fs/shell/CommandFormat.getOpt:(Ljava/lang/String;)Z
      99: putfield      #6                  // Field safeDelete:Z
     102: return

  protected java.util.List<org.apache.hadoop.fs.shell.PathData> expandArgument(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #19                 // Method org/apache/hadoop/fs/shell/FsCommand.expandArgument:(Ljava/lang/String;)Ljava/util/List;
       5: areturn
       6: astore_2
       7: aload_0
       8: getfield      #5                  // Field ignoreFNF:Z
      11: ifne          16
      14: aload_2
      15: athrow
      16: new           #21                 // class java/util/LinkedList
      19: dup
      20: invokespecial #22                 // Method java/util/LinkedList."<init>":()V
      23: areturn
    Exception table:
       from    to  target type
           0     5     6   Class org/apache/hadoop/fs/PathNotFoundException

  protected void processNonexistentPath(org.apache.hadoop.fs.shell.PathData) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field ignoreFNF:Z
       4: ifne          12
       7: aload_0
       8: aload_1
       9: invokespecial #23                 // Method org/apache/hadoop/fs/shell/FsCommand.processNonexistentPath:(Lorg/apache/hadoop/fs/shell/PathData;)V
      12: return

  protected void processPath(org.apache.hadoop.fs.shell.PathData) throws java.io.IOException;
    Code:
       0: aload_1
       1: getfield      #24                 // Field org/apache/hadoop/fs/shell/PathData.stat:Lorg/apache/hadoop/fs/FileStatus;
       4: invokevirtual #25                 // Method org/apache/hadoop/fs/FileStatus.isDirectory:()Z
       7: ifeq          29
      10: aload_0
      11: getfield      #4                  // Field deleteDirs:Z
      14: ifne          29
      17: new           #26                 // class org/apache/hadoop/fs/PathIsDirectoryException
      20: dup
      21: aload_1
      22: invokevirtual #27                 // Method org/apache/hadoop/fs/shell/PathData.toString:()Ljava/lang/String;
      25: invokespecial #28                 // Method org/apache/hadoop/fs/PathIsDirectoryException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload_0
      30: aload_1
      31: invokespecial #29                 // Method moveToTrash:(Lorg/apache/hadoop/fs/shell/PathData;)Z
      34: ifne          45
      37: aload_0
      38: aload_1
      39: invokespecial #30                 // Method canBeSafelyDeleted:(Lorg/apache/hadoop/fs/shell/PathData;)Z
      42: ifne          46
      45: return
      46: aload_1
      47: getfield      #31                 // Field org/apache/hadoop/fs/shell/PathData.fs:Lorg/apache/hadoop/fs/FileSystem;
      50: aload_1
      51: getfield      #32                 // Field org/apache/hadoop/fs/shell/PathData.path:Lorg/apache/hadoop/fs/Path;
      54: aload_0
      55: getfield      #4                  // Field deleteDirs:Z
      58: invokevirtual #33                 // Method org/apache/hadoop/fs/FileSystem.delete:(Lorg/apache/hadoop/fs/Path;Z)Z
      61: ifne          76
      64: new           #34                 // class org/apache/hadoop/fs/PathIOException
      67: dup
      68: aload_1
      69: invokevirtual #27                 // Method org/apache/hadoop/fs/shell/PathData.toString:()Ljava/lang/String;
      72: invokespecial #35                 // Method org/apache/hadoop/fs/PathIOException."<init>":(Ljava/lang/String;)V
      75: athrow
      76: aload_0
      77: getfield      #36                 // Field out:Ljava/io/PrintStream;
      80: new           #37                 // class java/lang/StringBuilder
      83: dup
      84: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      87: ldc           #39                 // String Deleted
      89: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: aload_1
      93: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      96: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      99: invokevirtual #43                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     102: return

  private boolean canBeSafelyDeleted(org.apache.hadoop.fs.shell.PathData) throws java.io.IOException;
    Code:
       0: iconst_1
       1: istore_2
       2: aload_0
       3: getfield      #6                  // Field safeDelete:Z
       6: ifeq          96
       9: aload_0
      10: invokevirtual #44                 // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
      13: ldc           #45                 // String hadoop.shell.safely.delete.limit.num.files
      15: ldc2_w        #46                 // long 100l
      18: invokevirtual #48                 // Method org/apache/hadoop/conf/Configuration.getLong:(Ljava/lang/String;J)J
      21: lstore_3
      22: lload_3
      23: lconst_0
      24: lcmp
      25: ifle          96
      28: aload_1
      29: getfield      #31                 // Field org/apache/hadoop/fs/shell/PathData.fs:Lorg/apache/hadoop/fs/FileSystem;
      32: aload_1
      33: getfield      #32                 // Field org/apache/hadoop/fs/shell/PathData.path:Lorg/apache/hadoop/fs/Path;
      36: invokevirtual #49                 // Method org/apache/hadoop/fs/FileSystem.getContentSummary:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/ContentSummary;
      39: astore        5
      41: aload         5
      43: invokevirtual #50                 // Method org/apache/hadoop/fs/ContentSummary.getFileCount:()J
      46: lstore        6
      48: lload         6
      50: lload_3
      51: lcmp
      52: ifle          96
      55: new           #37                 // class java/lang/StringBuilder
      58: dup
      59: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      62: ldc           #51                 // String Proceed deleting
      64: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: lload         6
      69: invokevirtual #52                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      72: ldc           #53                 // String  files?
      74: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      80: invokestatic  #54                 // Method org/apache/hadoop/util/ToolRunner.confirmPrompt:(Ljava/lang/String;)Z
      83: ifne          96
      86: getstatic     #55                 // Field java/lang/System.err:Ljava/io/PrintStream;
      89: ldc           #56                 // String Delete aborted at user request.\n
      91: invokevirtual #43                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      94: iconst_0
      95: istore_2
      96: iload_2
      97: ireturn

  private boolean moveToTrash(org.apache.hadoop.fs.shell.PathData) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: getfield      #3                  // Field skipTrash:Z
       6: ifne          106
       9: aload_1
      10: getfield      #31                 // Field org/apache/hadoop/fs/shell/PathData.fs:Lorg/apache/hadoop/fs/FileSystem;
      13: aload_1
      14: getfield      #32                 // Field org/apache/hadoop/fs/shell/PathData.path:Lorg/apache/hadoop/fs/Path;
      17: aload_0
      18: invokevirtual #44                 // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
      21: invokestatic  #57                 // Method org/apache/hadoop/fs/Trash.moveToAppropriateTrash:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Z
      24: istore_2
      25: goto          106
      28: astore_3
      29: aload_3
      30: athrow
      31: astore_3
      32: aload_3
      33: invokevirtual #60                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
      36: astore        4
      38: aload_3
      39: invokevirtual #61                 // Method java/io/IOException.getCause:()Ljava/lang/Throwable;
      42: ifnull        77
      45: new           #37                 // class java/lang/StringBuilder
      48: dup
      49: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      52: aload         4
      54: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: ldc           #62                 // String :
      59: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_3
      63: invokevirtual #61                 // Method java/io/IOException.getCause:()Ljava/lang/Throwable;
      66: invokevirtual #63                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      69: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: astore        4
      77: new           #59                 // class java/io/IOException
      80: dup
      81: new           #37                 // class java/lang/StringBuilder
      84: dup
      85: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      88: aload         4
      90: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: ldc           #64                 // String . Consider using -skipTrash option
      95: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     101: aload_3
     102: invokespecial #65                 // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     105: athrow
     106: iload_2
     107: ireturn
    Exception table:
       from    to  target type
           9    25    28   Class java/io/FileNotFoundException
           9    25    31   Class java/io/IOException
}
