Compiled from "SetFile.java"
public class org.apache.hadoop.io.SetFile$Writer extends org.apache.hadoop.io.MapFile$Writer {
  public org.apache.hadoop.io.SetFile$Writer(org.apache.hadoop.fs.FileSystem, java.lang.String, java.lang.Class<? extends org.apache.hadoop.io.WritableComparable>) throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #1                  // class org/apache/hadoop/conf/Configuration
       4: dup
       5: invokespecial #2                  // Method org/apache/hadoop/conf/Configuration."<init>":()V
       8: aload_1
       9: aload_2
      10: aload_3
      11: ldc           #3                  // class org/apache/hadoop/io/NullWritable
      13: invokespecial #4                  // Method org/apache/hadoop/io/MapFile$Writer."<init>":(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V
      16: return

  public org.apache.hadoop.io.SetFile$Writer(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.FileSystem, java.lang.String, java.lang.Class<? extends org.apache.hadoop.io.WritableComparable>, org.apache.hadoop.io.SequenceFile$CompressionType) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload_1
       7: invokestatic  #5                  // Method org/apache/hadoop/io/WritableComparator.get:(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/io/WritableComparator;
      10: aload         5
      12: invokespecial #6                  // Method "<init>":(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Ljava/lang/String;Lorg/apache/hadoop/io/WritableComparator;Lorg/apache/hadoop/io/SequenceFile$CompressionType;)V
      15: return

  public org.apache.hadoop.io.SetFile$Writer(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.FileSystem, java.lang.String, org.apache.hadoop.io.WritableComparator, org.apache.hadoop.io.SequenceFile$CompressionType) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: new           #7                  // class org/apache/hadoop/fs/Path
       5: dup
       6: aload_3
       7: invokespecial #8                  // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      10: iconst_3
      11: anewarray     #9                  // class org/apache/hadoop/io/SequenceFile$Writer$Option
      14: dup
      15: iconst_0
      16: aload         4
      18: invokestatic  #10                 // Method comparator:(Lorg/apache/hadoop/io/WritableComparator;)Lorg/apache/hadoop/io/MapFile$Writer$Option;
      21: aastore
      22: dup
      23: iconst_1
      24: ldc           #3                  // class org/apache/hadoop/io/NullWritable
      26: invokestatic  #11                 // Method valueClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      29: aastore
      30: dup
      31: iconst_2
      32: aload         5
      34: invokestatic  #12                 // Method compression:(Lorg/apache/hadoop/io/SequenceFile$CompressionType;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      37: aastore
      38: invokespecial #13                 // Method org/apache/hadoop/io/MapFile$Writer."<init>":(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;[Lorg/apache/hadoop/io/SequenceFile$Writer$Option;)V
      41: return

  public void append(org.apache.hadoop.io.WritableComparable) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #14                 // Method org/apache/hadoop/io/NullWritable.get:()Lorg/apache/hadoop/io/NullWritable;
       5: invokevirtual #15                 // Method append:(Lorg/apache/hadoop/io/WritableComparable;Lorg/apache/hadoop/io/Writable;)V
       8: return
}
