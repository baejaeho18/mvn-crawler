Compiled from "SequenceFile.java"
class org.apache.hadoop.io.SequenceFile$BlockCompressWriter extends org.apache.hadoop.io.SequenceFile$Writer {
  private int noBufferedRecords;

  private org.apache.hadoop.io.DataOutputBuffer keyLenBuffer;

  private org.apache.hadoop.io.DataOutputBuffer keyBuffer;

  private org.apache.hadoop.io.DataOutputBuffer valLenBuffer;

  private org.apache.hadoop.io.DataOutputBuffer valBuffer;

  private final int compressionBlockSize;

  org.apache.hadoop.io.SequenceFile$BlockCompressWriter(org.apache.hadoop.conf.Configuration, org.apache.hadoop.io.SequenceFile$Writer$Option...) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method org/apache/hadoop/io/SequenceFile$Writer."<init>":(Lorg/apache/hadoop/conf/Configuration;[Lorg/apache/hadoop/io/SequenceFile$Writer$Option;)V
       6: aload_0
       7: iconst_0
       8: putfield      #3                  // Field noBufferedRecords:I
      11: aload_0
      12: new           #4                  // class org/apache/hadoop/io/DataOutputBuffer
      15: dup
      16: invokespecial #5                  // Method org/apache/hadoop/io/DataOutputBuffer."<init>":()V
      19: putfield      #6                  // Field keyLenBuffer:Lorg/apache/hadoop/io/DataOutputBuffer;
      22: aload_0
      23: new           #4                  // class org/apache/hadoop/io/DataOutputBuffer
      26: dup
      27: invokespecial #5                  // Method org/apache/hadoop/io/DataOutputBuffer."<init>":()V
      30: putfield      #7                  // Field keyBuffer:Lorg/apache/hadoop/io/DataOutputBuffer;
      33: aload_0
      34: new           #4                  // class org/apache/hadoop/io/DataOutputBuffer
      37: dup
      38: invokespecial #5                  // Method org/apache/hadoop/io/DataOutputBuffer."<init>":()V
      41: putfield      #8                  // Field valLenBuffer:Lorg/apache/hadoop/io/DataOutputBuffer;
      44: aload_0
      45: new           #4                  // class org/apache/hadoop/io/DataOutputBuffer
      48: dup
      49: invokespecial #5                  // Method org/apache/hadoop/io/DataOutputBuffer."<init>":()V
      52: putfield      #9                  // Field valBuffer:Lorg/apache/hadoop/io/DataOutputBuffer;
      55: aload_0
      56: aload_1
      57: ldc           #10                 // String io.seqfile.compress.blocksize
      59: ldc           #11                 // int 1000000
      61: invokevirtual #12                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      64: putfield      #13                 // Field compressionBlockSize:I
      67: aload_0
      68: getfield      #14                 // Field keySerializer:Lorg/apache/hadoop/io/serializer/Serializer;
      71: invokeinterface #15,  1           // InterfaceMethod org/apache/hadoop/io/serializer/Serializer.close:()V
      76: aload_0
      77: getfield      #14                 // Field keySerializer:Lorg/apache/hadoop/io/serializer/Serializer;
      80: aload_0
      81: getfield      #7                  // Field keyBuffer:Lorg/apache/hadoop/io/DataOutputBuffer;
      84: invokeinterface #16,  2           // InterfaceMethod org/apache/hadoop/io/serializer/Serializer.open:(Ljava/io/OutputStream;)V
      89: aload_0
      90: getfield      #17                 // Field uncompressedValSerializer:Lorg/apache/hadoop/io/serializer/Serializer;
      93: invokeinterface #15,  1           // InterfaceMethod org/apache/hadoop/io/serializer/Serializer.close:()V
      98: aload_0
      99: getfield      #17                 // Field uncompressedValSerializer:Lorg/apache/hadoop/io/serializer/Serializer;
     102: aload_0
     103: getfield      #9                  // Field valBuffer:Lorg/apache/hadoop/io/DataOutputBuffer;
     106: invokeinterface #16,  2           // InterfaceMethod org/apache/hadoop/io/serializer/Serializer.open:(Ljava/io/OutputStream;)V
     111: return

  private synchronized void writeBuffer(org.apache.hadoop.io.DataOutputBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field deflateFilter:Lorg/apache/hadoop/io/compress/CompressionOutputStream;
       4: invokevirtual #19                 // Method org/apache/hadoop/io/compress/CompressionOutputStream.resetState:()V
       7: aload_0
       8: getfield      #20                 // Field buffer:Lorg/apache/hadoop/io/DataOutputBuffer;
      11: invokevirtual #21                 // Method org/apache/hadoop/io/DataOutputBuffer.reset:()Lorg/apache/hadoop/io/DataOutputBuffer;
      14: pop
      15: aload_0
      16: getfield      #22                 // Field deflateOut:Ljava/io/DataOutputStream;
      19: aload_1
      20: invokevirtual #23                 // Method org/apache/hadoop/io/DataOutputBuffer.getData:()[B
      23: iconst_0
      24: aload_1
      25: invokevirtual #24                 // Method org/apache/hadoop/io/DataOutputBuffer.getLength:()I
      28: invokevirtual #25                 // Method java/io/DataOutputStream.write:([BII)V
      31: aload_0
      32: getfield      #22                 // Field deflateOut:Ljava/io/DataOutputStream;
      35: invokevirtual #26                 // Method java/io/DataOutputStream.flush:()V
      38: aload_0
      39: getfield      #18                 // Field deflateFilter:Lorg/apache/hadoop/io/compress/CompressionOutputStream;
      42: invokevirtual #27                 // Method org/apache/hadoop/io/compress/CompressionOutputStream.finish:()V
      45: aload_0
      46: getfield      #28                 // Field out:Lorg/apache/hadoop/fs/FSDataOutputStream;
      49: aload_0
      50: getfield      #20                 // Field buffer:Lorg/apache/hadoop/io/DataOutputBuffer;
      53: invokevirtual #24                 // Method org/apache/hadoop/io/DataOutputBuffer.getLength:()I
      56: invokestatic  #29                 // Method org/apache/hadoop/io/WritableUtils.writeVInt:(Ljava/io/DataOutput;I)V
      59: aload_0
      60: getfield      #28                 // Field out:Lorg/apache/hadoop/fs/FSDataOutputStream;
      63: aload_0
      64: getfield      #20                 // Field buffer:Lorg/apache/hadoop/io/DataOutputBuffer;
      67: invokevirtual #23                 // Method org/apache/hadoop/io/DataOutputBuffer.getData:()[B
      70: iconst_0
      71: aload_0
      72: getfield      #20                 // Field buffer:Lorg/apache/hadoop/io/DataOutputBuffer;
      75: invokevirtual #24                 // Method org/apache/hadoop/io/DataOutputBuffer.getLength:()I
      78: invokevirtual #30                 // Method org/apache/hadoop/fs/FSDataOutputStream.write:([BII)V
      81: return

  public synchronized void sync() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field noBufferedRecords:I
       4: ifle          98
       7: aload_0
       8: invokespecial #31                 // Method org/apache/hadoop/io/SequenceFile$Writer.sync:()V
      11: aload_0
      12: getfield      #28                 // Field out:Lorg/apache/hadoop/fs/FSDataOutputStream;
      15: aload_0
      16: getfield      #3                  // Field noBufferedRecords:I
      19: invokestatic  #29                 // Method org/apache/hadoop/io/WritableUtils.writeVInt:(Ljava/io/DataOutput;I)V
      22: aload_0
      23: aload_0
      24: getfield      #6                  // Field keyLenBuffer:Lorg/apache/hadoop/io/DataOutputBuffer;
      27: invokespecial #32                 // Method writeBuffer:(Lorg/apache/hadoop/io/DataOutputBuffer;)V
      30: aload_0
      31: aload_0
      32: getfield      #7                  // Field keyBuffer:Lorg/apache/hadoop/io/DataOutputBuffer;
      35: invokespecial #32                 // Method writeBuffer:(Lorg/apache/hadoop/io/DataOutputBuffer;)V
      38: aload_0
      39: aload_0
      40: getfield      #8                  // Field valLenBuffer:Lorg/apache/hadoop/io/DataOutputBuffer;
      43: invokespecial #32                 // Method writeBuffer:(Lorg/apache/hadoop/io/DataOutputBuffer;)V
      46: aload_0
      47: aload_0
      48: getfield      #9                  // Field valBuffer:Lorg/apache/hadoop/io/DataOutputBuffer;
      51: invokespecial #32                 // Method writeBuffer:(Lorg/apache/hadoop/io/DataOutputBuffer;)V
      54: aload_0
      55: getfield      #28                 // Field out:Lorg/apache/hadoop/fs/FSDataOutputStream;
      58: invokevirtual #33                 // Method org/apache/hadoop/fs/FSDataOutputStream.flush:()V
      61: aload_0
      62: getfield      #6                  // Field keyLenBuffer:Lorg/apache/hadoop/io/DataOutputBuffer;
      65: invokevirtual #21                 // Method org/apache/hadoop/io/DataOutputBuffer.reset:()Lorg/apache/hadoop/io/DataOutputBuffer;
      68: pop
      69: aload_0
      70: getfield      #7                  // Field keyBuffer:Lorg/apache/hadoop/io/DataOutputBuffer;
      73: invokevirtual #21                 // Method org/apache/hadoop/io/DataOutputBuffer.reset:()Lorg/apache/hadoop/io/DataOutputBuffer;
      76: pop
      77: aload_0
      78: getfield      #8                  // Field valLenBuffer:Lorg/apache/hadoop/io/DataOutputBuffer;
      81: invokevirtual #21                 // Method org/apache/hadoop/io/DataOutputBuffer.reset:()Lorg/apache/hadoop/io/DataOutputBuffer;
      84: pop
      85: aload_0
      86: getfield      #9                  // Field valBuffer:Lorg/apache/hadoop/io/DataOutputBuffer;
      89: invokevirtual #21                 // Method org/apache/hadoop/io/DataOutputBuffer.reset:()Lorg/apache/hadoop/io/DataOutputBuffer;
      92: pop
      93: aload_0
      94: iconst_0
      95: putfield      #3                  // Field noBufferedRecords:I
      98: return

  public synchronized void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #28                 // Field out:Lorg/apache/hadoop/fs/FSDataOutputStream;
       4: ifnull        11
       7: aload_0
       8: invokevirtual #34                 // Method sync:()V
      11: aload_0
      12: invokespecial #35                 // Method org/apache/hadoop/io/SequenceFile$Writer.close:()V
      15: return

  public synchronized void append(java.lang.Object, java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #36                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: aload_0
       5: getfield      #37                 // Field keyClass:Ljava/lang/Class;
       8: if_acmpeq     50
      11: new           #38                 // class java/io/IOException
      14: dup
      15: new           #39                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #41                 // String wrong key class:
      24: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_1
      28: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #44                 // String  is not
      33: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #37                 // Field keyClass:Ljava/lang/Class;
      40: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokespecial #46                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: aload_2
      51: invokevirtual #36                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      54: aload_0
      55: getfield      #47                 // Field valClass:Ljava/lang/Class;
      58: if_acmpeq     100
      61: new           #38                 // class java/io/IOException
      64: dup
      65: new           #39                 // class java/lang/StringBuilder
      68: dup
      69: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
      72: ldc           #48                 // String wrong value class:
      74: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: aload_2
      78: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      81: ldc           #44                 // String  is not
      83: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: aload_0
      87: getfield      #47                 // Field valClass:Ljava/lang/Class;
      90: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      93: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      96: invokespecial #46                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      99: athrow
     100: aload_0
     101: getfield      #7                  // Field keyBuffer:Lorg/apache/hadoop/io/DataOutputBuffer;
     104: invokevirtual #24                 // Method org/apache/hadoop/io/DataOutputBuffer.getLength:()I
     107: istore_3
     108: aload_0
     109: getfield      #14                 // Field keySerializer:Lorg/apache/hadoop/io/serializer/Serializer;
     112: aload_1
     113: invokeinterface #49,  2           // InterfaceMethod org/apache/hadoop/io/serializer/Serializer.serialize:(Ljava/lang/Object;)V
     118: aload_0
     119: getfield      #7                  // Field keyBuffer:Lorg/apache/hadoop/io/DataOutputBuffer;
     122: invokevirtual #24                 // Method org/apache/hadoop/io/DataOutputBuffer.getLength:()I
     125: iload_3
     126: isub
     127: istore        4
     129: iload         4
     131: ifge          161
     134: new           #38                 // class java/io/IOException
     137: dup
     138: new           #39                 // class java/lang/StringBuilder
     141: dup
     142: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
     145: ldc           #50                 // String negative length keys not allowed:
     147: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     150: aload_1
     151: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     154: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     157: invokespecial #46                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     160: athrow
     161: aload_0
     162: getfield      #6                  // Field keyLenBuffer:Lorg/apache/hadoop/io/DataOutputBuffer;
     165: iload         4
     167: invokestatic  #29                 // Method org/apache/hadoop/io/WritableUtils.writeVInt:(Ljava/io/DataOutput;I)V
     170: aload_0
     171: getfield      #9                  // Field valBuffer:Lorg/apache/hadoop/io/DataOutputBuffer;
     174: invokevirtual #24                 // Method org/apache/hadoop/io/DataOutputBuffer.getLength:()I
     177: istore        5
     179: aload_0
     180: getfield      #17                 // Field uncompressedValSerializer:Lorg/apache/hadoop/io/serializer/Serializer;
     183: aload_2
     184: invokeinterface #49,  2           // InterfaceMethod org/apache/hadoop/io/serializer/Serializer.serialize:(Ljava/lang/Object;)V
     189: aload_0
     190: getfield      #9                  // Field valBuffer:Lorg/apache/hadoop/io/DataOutputBuffer;
     193: invokevirtual #24                 // Method org/apache/hadoop/io/DataOutputBuffer.getLength:()I
     196: iload         5
     198: isub
     199: istore        6
     201: aload_0
     202: getfield      #8                  // Field valLenBuffer:Lorg/apache/hadoop/io/DataOutputBuffer;
     205: iload         6
     207: invokestatic  #29                 // Method org/apache/hadoop/io/WritableUtils.writeVInt:(Ljava/io/DataOutput;I)V
     210: aload_0
     211: dup
     212: getfield      #3                  // Field noBufferedRecords:I
     215: iconst_1
     216: iadd
     217: putfield      #3                  // Field noBufferedRecords:I
     220: aload_0
     221: getfield      #7                  // Field keyBuffer:Lorg/apache/hadoop/io/DataOutputBuffer;
     224: invokevirtual #24                 // Method org/apache/hadoop/io/DataOutputBuffer.getLength:()I
     227: aload_0
     228: getfield      #9                  // Field valBuffer:Lorg/apache/hadoop/io/DataOutputBuffer;
     231: invokevirtual #24                 // Method org/apache/hadoop/io/DataOutputBuffer.getLength:()I
     234: iadd
     235: istore        7
     237: iload         7
     239: aload_0
     240: getfield      #13                 // Field compressionBlockSize:I
     243: if_icmplt     250
     246: aload_0
     247: invokevirtual #34                 // Method sync:()V
     250: return

  public synchronized void appendRaw(byte[], int, int, org.apache.hadoop.io.SequenceFile$ValueBytes) throws java.io.IOException;
    Code:
       0: iload_3
       1: ifge          14
       4: new           #38                 // class java/io/IOException
       7: dup
       8: ldc           #51                 // String negative length keys not allowed
      10: invokespecial #46                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload         4
      16: invokeinterface #52,  1           // InterfaceMethod org/apache/hadoop/io/SequenceFile$ValueBytes.getSize:()I
      21: istore        5
      23: aload_0
      24: getfield      #6                  // Field keyLenBuffer:Lorg/apache/hadoop/io/DataOutputBuffer;
      27: iload_3
      28: invokestatic  #29                 // Method org/apache/hadoop/io/WritableUtils.writeVInt:(Ljava/io/DataOutput;I)V
      31: aload_0
      32: getfield      #7                  // Field keyBuffer:Lorg/apache/hadoop/io/DataOutputBuffer;
      35: aload_1
      36: iload_2
      37: iload_3
      38: invokevirtual #53                 // Method org/apache/hadoop/io/DataOutputBuffer.write:([BII)V
      41: aload_0
      42: getfield      #8                  // Field valLenBuffer:Lorg/apache/hadoop/io/DataOutputBuffer;
      45: iload         5
      47: invokestatic  #29                 // Method org/apache/hadoop/io/WritableUtils.writeVInt:(Ljava/io/DataOutput;I)V
      50: aload         4
      52: aload_0
      53: getfield      #9                  // Field valBuffer:Lorg/apache/hadoop/io/DataOutputBuffer;
      56: invokeinterface #54,  2           // InterfaceMethod org/apache/hadoop/io/SequenceFile$ValueBytes.writeUncompressedBytes:(Ljava/io/DataOutputStream;)V
      61: aload_0
      62: dup
      63: getfield      #3                  // Field noBufferedRecords:I
      66: iconst_1
      67: iadd
      68: putfield      #3                  // Field noBufferedRecords:I
      71: aload_0
      72: getfield      #7                  // Field keyBuffer:Lorg/apache/hadoop/io/DataOutputBuffer;
      75: invokevirtual #24                 // Method org/apache/hadoop/io/DataOutputBuffer.getLength:()I
      78: aload_0
      79: getfield      #9                  // Field valBuffer:Lorg/apache/hadoop/io/DataOutputBuffer;
      82: invokevirtual #24                 // Method org/apache/hadoop/io/DataOutputBuffer.getLength:()I
      85: iadd
      86: istore        6
      88: iload         6
      90: aload_0
      91: getfield      #13                 // Field compressionBlockSize:I
      94: if_icmplt     101
      97: aload_0
      98: invokevirtual #34                 // Method sync:()V
     101: return
}
