Compiled from "NetgroupCache.java"
public class org.apache.hadoop.security.NetgroupCache {
  private static java.util.concurrent.ConcurrentHashMap<java.lang.String, java.util.Set<java.lang.String>> userToNetgroupsMap;

  public org.apache.hadoop.security.NetgroupCache();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static void getNetgroups(java.lang.String, java.util.List<java.lang.String>);
    Code:
       0: getstatic     #2                  // Field userToNetgroupsMap:Ljava/util/concurrent/ConcurrentHashMap;
       3: aload_0
       4: invokevirtual #3                  // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #4                  // class java/util/Set
      10: astore_2
      11: aload_2
      12: ifnull        23
      15: aload_1
      16: aload_2
      17: invokeinterface #5,  2            // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      22: pop
      23: return

  public static java.util.List<java.lang.String> getNetgroupNames();
    Code:
       0: new           #6                  // class java/util/LinkedList
       3: dup
       4: invokestatic  #7                  // Method getGroups:()Ljava/util/Set;
       7: invokespecial #8                  // Method java/util/LinkedList."<init>":(Ljava/util/Collection;)V
      10: areturn

  private static java.util.Set<java.lang.String> getGroups();
    Code:
       0: new           #9                  // class java/util/HashSet
       3: dup
       4: invokespecial #10                 // Method java/util/HashSet."<init>":()V
       7: astore_0
       8: getstatic     #2                  // Field userToNetgroupsMap:Ljava/util/concurrent/ConcurrentHashMap;
      11: invokevirtual #11                 // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
      14: invokeinterface #12,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      19: astore_1
      20: aload_1
      21: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          50
      29: aload_1
      30: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #4                  // class java/util/Set
      38: astore_2
      39: aload_0
      40: aload_2
      41: invokeinterface #15,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      46: pop
      47: goto          20
      50: aload_0
      51: areturn

  public static boolean isCached(java.lang.String);
    Code:
       0: invokestatic  #7                  // Method getGroups:()Ljava/util/Set;
       3: aload_0
       4: invokeinterface #16,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
       9: ireturn

  public static void clear();
    Code:
       0: getstatic     #2                  // Field userToNetgroupsMap:Ljava/util/concurrent/ConcurrentHashMap;
       3: invokevirtual #17                 // Method java/util/concurrent/ConcurrentHashMap.clear:()V
       6: return

  public static void add(java.lang.String, java.util.List<java.lang.String>);
    Code:
       0: aload_1
       1: invokeinterface #18,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          90
      16: aload_2
      17: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #19                 // class java/lang/String
      25: astore_3
      26: getstatic     #2                  // Field userToNetgroupsMap:Ljava/util/concurrent/ConcurrentHashMap;
      29: aload_3
      30: invokevirtual #3                  // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      33: checkcast     #4                  // class java/util/Set
      36: astore        4
      38: aload         4
      40: ifnonnull     78
      43: new           #20                 // class java/util/concurrent/ConcurrentHashMap
      46: dup
      47: invokespecial #21                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      50: invokestatic  #22                 // Method java/util/Collections.newSetFromMap:(Ljava/util/Map;)Ljava/util/Set;
      53: astore        4
      55: getstatic     #2                  // Field userToNetgroupsMap:Ljava/util/concurrent/ConcurrentHashMap;
      58: aload_3
      59: aload         4
      61: invokevirtual #23                 // Method java/util/concurrent/ConcurrentHashMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      64: checkcast     #4                  // class java/util/Set
      67: astore        5
      69: aload         5
      71: ifnull        78
      74: aload         5
      76: astore        4
      78: aload         4
      80: aload_0
      81: invokeinterface #24,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      86: pop
      87: goto          7
      90: return

  static {};
    Code:
       0: new           #20                 // class java/util/concurrent/ConcurrentHashMap
       3: dup
       4: invokespecial #21                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
       7: putstatic     #2                  // Field userToNetgroupsMap:Ljava/util/concurrent/ConcurrentHashMap;
      10: return
}
