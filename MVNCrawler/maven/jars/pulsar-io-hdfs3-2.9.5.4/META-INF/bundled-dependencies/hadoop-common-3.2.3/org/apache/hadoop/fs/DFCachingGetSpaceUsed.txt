Compiled from "DFCachingGetSpaceUsed.java"
public class org.apache.hadoop.fs.DFCachingGetSpaceUsed extends org.apache.hadoop.fs.CachingGetSpaceUsed {
  private final org.apache.hadoop.fs.DF df;

  public org.apache.hadoop.fs.DFCachingGetSpaceUsed(org.apache.hadoop.fs.GetSpaceUsed$Builder) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/hadoop/fs/CachingGetSpaceUsed."<init>":(Lorg/apache/hadoop/fs/GetSpaceUsed$Builder;)V
       5: aload_0
       6: new           #2                  // class org/apache/hadoop/fs/DF
       9: dup
      10: aload_1
      11: invokevirtual #3                  // Method org/apache/hadoop/fs/GetSpaceUsed$Builder.getPath:()Ljava/io/File;
      14: aload_1
      15: invokevirtual #4                  // Method org/apache/hadoop/fs/GetSpaceUsed$Builder.getInterval:()J
      18: invokespecial #5                  // Method org/apache/hadoop/fs/DF."<init>":(Ljava/io/File;J)V
      21: putfield      #6                  // Field df:Lorg/apache/hadoop/fs/DF;
      24: return

  protected void refresh();
    Code:
       0: aload_0
       1: getfield      #7                  // Field used:Ljava/util/concurrent/atomic/AtomicLong;
       4: aload_0
       5: getfield      #6                  // Field df:Lorg/apache/hadoop/fs/DF;
       8: invokevirtual #8                  // Method org/apache/hadoop/fs/DF.getUsed:()J
      11: invokevirtual #9                  // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
      14: return
}
