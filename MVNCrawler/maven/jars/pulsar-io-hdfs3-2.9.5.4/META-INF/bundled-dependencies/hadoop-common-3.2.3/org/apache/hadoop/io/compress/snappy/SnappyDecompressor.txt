Compiled from "SnappyDecompressor.java"
public class org.apache.hadoop.io.compress.snappy.SnappyDecompressor implements org.apache.hadoop.io.compress.Decompressor {
  private static final org.slf4j.Logger LOG;

  private static final int DEFAULT_DIRECT_BUFFER_SIZE;

  private int directBufferSize;

  private java.nio.Buffer compressedDirectBuf;

  private int compressedDirectBufLen;

  private java.nio.Buffer uncompressedDirectBuf;

  private byte[] userBuf;

  private int userBufOff;

  private int userBufLen;

  private boolean finished;

  private static boolean nativeSnappyLoaded;

  static final boolean $assertionsDisabled;

  public static boolean isNativeCodeLoaded();
    Code:
       0: getstatic     #1                  // Field nativeSnappyLoaded:Z
       3: ireturn

  public org.apache.hadoop.io.compress.snappy.SnappyDecompressor(int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #3                  // Field compressedDirectBuf:Ljava/nio/Buffer;
       9: aload_0
      10: aconst_null
      11: putfield      #4                  // Field uncompressedDirectBuf:Ljava/nio/Buffer;
      14: aload_0
      15: aconst_null
      16: putfield      #5                  // Field userBuf:[B
      19: aload_0
      20: iconst_0
      21: putfield      #6                  // Field userBufOff:I
      24: aload_0
      25: iconst_0
      26: putfield      #7                  // Field userBufLen:I
      29: aload_0
      30: iload_1
      31: putfield      #8                  // Field directBufferSize:I
      34: aload_0
      35: iload_1
      36: invokestatic  #9                  // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
      39: putfield      #3                  // Field compressedDirectBuf:Ljava/nio/Buffer;
      42: aload_0
      43: iload_1
      44: invokestatic  #9                  // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
      47: putfield      #4                  // Field uncompressedDirectBuf:Ljava/nio/Buffer;
      50: aload_0
      51: getfield      #4                  // Field uncompressedDirectBuf:Ljava/nio/Buffer;
      54: iload_1
      55: invokevirtual #10                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      58: pop
      59: return

  public org.apache.hadoop.io.compress.snappy.SnappyDecompressor();
    Code:
       0: aload_0
       1: ldc           #12                 // int 65536
       3: invokespecial #13                 // Method "<init>":(I)V
       6: return

  public void setInput(byte[], int, int);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #14                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #15                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: iload_2
      13: iflt          28
      16: iload_3
      17: iflt          28
      20: iload_2
      21: aload_1
      22: arraylength
      23: iload_3
      24: isub
      25: if_icmple     36
      28: new           #16                 // class java/lang/ArrayIndexOutOfBoundsException
      31: dup
      32: invokespecial #17                 // Method java/lang/ArrayIndexOutOfBoundsException."<init>":()V
      35: athrow
      36: aload_0
      37: aload_1
      38: putfield      #5                  // Field userBuf:[B
      41: aload_0
      42: iload_2
      43: putfield      #6                  // Field userBufOff:I
      46: aload_0
      47: iload_3
      48: putfield      #7                  // Field userBufLen:I
      51: aload_0
      52: invokevirtual #18                 // Method setInputFromSavedData:()V
      55: aload_0
      56: getfield      #4                  // Field uncompressedDirectBuf:Ljava/nio/Buffer;
      59: aload_0
      60: getfield      #8                  // Field directBufferSize:I
      63: invokevirtual #19                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      66: pop
      67: aload_0
      68: getfield      #4                  // Field uncompressedDirectBuf:Ljava/nio/Buffer;
      71: aload_0
      72: getfield      #8                  // Field directBufferSize:I
      75: invokevirtual #10                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      78: pop
      79: return

  void setInputFromSavedData();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #7                  // Field userBufLen:I
       5: aload_0
       6: getfield      #8                  // Field directBufferSize:I
       9: invokestatic  #20                 // Method java/lang/Math.min:(II)I
      12: putfield      #21                 // Field compressedDirectBufLen:I
      15: aload_0
      16: getfield      #3                  // Field compressedDirectBuf:Ljava/nio/Buffer;
      19: invokevirtual #22                 // Method java/nio/Buffer.rewind:()Ljava/nio/Buffer;
      22: pop
      23: aload_0
      24: getfield      #3                  // Field compressedDirectBuf:Ljava/nio/Buffer;
      27: checkcast     #23                 // class java/nio/ByteBuffer
      30: aload_0
      31: getfield      #5                  // Field userBuf:[B
      34: aload_0
      35: getfield      #6                  // Field userBufOff:I
      38: aload_0
      39: getfield      #21                 // Field compressedDirectBufLen:I
      42: invokevirtual #24                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      45: pop
      46: aload_0
      47: dup
      48: getfield      #6                  // Field userBufOff:I
      51: aload_0
      52: getfield      #21                 // Field compressedDirectBufLen:I
      55: iadd
      56: putfield      #6                  // Field userBufOff:I
      59: aload_0
      60: dup
      61: getfield      #7                  // Field userBufLen:I
      64: aload_0
      65: getfield      #21                 // Field compressedDirectBufLen:I
      68: isub
      69: putfield      #7                  // Field userBufLen:I
      72: return

  public void setDictionary(byte[], int, int);
    Code:
       0: return

  public boolean needsInput();
    Code:
       0: aload_0
       1: getfield      #4                  // Field uncompressedDirectBuf:Ljava/nio/Buffer;
       4: invokevirtual #25                 // Method java/nio/Buffer.remaining:()I
       7: ifle          12
      10: iconst_0
      11: ireturn
      12: aload_0
      13: getfield      #21                 // Field compressedDirectBufLen:I
      16: ifgt          32
      19: aload_0
      20: getfield      #7                  // Field userBufLen:I
      23: ifgt          28
      26: iconst_1
      27: ireturn
      28: aload_0
      29: invokevirtual #18                 // Method setInputFromSavedData:()V
      32: iconst_0
      33: ireturn

  public boolean needsDictionary();
    Code:
       0: iconst_0
       1: ireturn

  public boolean finished();
    Code:
       0: aload_0
       1: getfield      #26                 // Field finished:Z
       4: ifeq          21
       7: aload_0
       8: getfield      #4                  // Field uncompressedDirectBuf:Ljava/nio/Buffer;
      11: invokevirtual #25                 // Method java/nio/Buffer.remaining:()I
      14: ifne          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public int decompress(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #14                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #15                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: iload_2
      13: iflt          28
      16: iload_3
      17: iflt          28
      20: iload_2
      21: aload_1
      22: arraylength
      23: iload_3
      24: isub
      25: if_icmple     36
      28: new           #16                 // class java/lang/ArrayIndexOutOfBoundsException
      31: dup
      32: invokespecial #17                 // Method java/lang/ArrayIndexOutOfBoundsException."<init>":()V
      35: athrow
      36: iconst_0
      37: istore        4
      39: aload_0
      40: getfield      #4                  // Field uncompressedDirectBuf:Ljava/nio/Buffer;
      43: invokevirtual #25                 // Method java/nio/Buffer.remaining:()I
      46: istore        4
      48: iload         4
      50: ifle          79
      53: iload         4
      55: iload_3
      56: invokestatic  #20                 // Method java/lang/Math.min:(II)I
      59: istore        4
      61: aload_0
      62: getfield      #4                  // Field uncompressedDirectBuf:Ljava/nio/Buffer;
      65: checkcast     #23                 // class java/nio/ByteBuffer
      68: aload_1
      69: iload_2
      70: iload         4
      72: invokevirtual #27                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
      75: pop
      76: iload         4
      78: ireturn
      79: aload_0
      80: getfield      #21                 // Field compressedDirectBufLen:I
      83: ifle          157
      86: aload_0
      87: getfield      #4                  // Field uncompressedDirectBuf:Ljava/nio/Buffer;
      90: invokevirtual #22                 // Method java/nio/Buffer.rewind:()Ljava/nio/Buffer;
      93: pop
      94: aload_0
      95: getfield      #4                  // Field uncompressedDirectBuf:Ljava/nio/Buffer;
      98: aload_0
      99: getfield      #8                  // Field directBufferSize:I
     102: invokevirtual #19                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
     105: pop
     106: aload_0
     107: invokespecial #28                 // Method decompressBytesDirect:()I
     110: istore        4
     112: aload_0
     113: getfield      #4                  // Field uncompressedDirectBuf:Ljava/nio/Buffer;
     116: iload         4
     118: invokevirtual #19                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
     121: pop
     122: aload_0
     123: getfield      #7                  // Field userBufLen:I
     126: ifgt          134
     129: aload_0
     130: iconst_1
     131: putfield      #26                 // Field finished:Z
     134: iload         4
     136: iload_3
     137: invokestatic  #20                 // Method java/lang/Math.min:(II)I
     140: istore        4
     142: aload_0
     143: getfield      #4                  // Field uncompressedDirectBuf:Ljava/nio/Buffer;
     146: checkcast     #23                 // class java/nio/ByteBuffer
     149: aload_1
     150: iload_2
     151: iload         4
     153: invokevirtual #27                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
     156: pop
     157: iload         4
     159: ireturn

  public int getRemaining();
    Code:
       0: iconst_0
       1: ireturn

  public void reset();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #26                 // Field finished:Z
       5: aload_0
       6: iconst_0
       7: putfield      #21                 // Field compressedDirectBufLen:I
      10: aload_0
      11: getfield      #4                  // Field uncompressedDirectBuf:Ljava/nio/Buffer;
      14: aload_0
      15: getfield      #8                  // Field directBufferSize:I
      18: invokevirtual #19                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      21: pop
      22: aload_0
      23: getfield      #4                  // Field uncompressedDirectBuf:Ljava/nio/Buffer;
      26: aload_0
      27: getfield      #8                  // Field directBufferSize:I
      30: invokevirtual #10                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      33: pop
      34: aload_0
      35: aload_0
      36: iconst_0
      37: dup_x1
      38: putfield      #7                  // Field userBufLen:I
      41: putfield      #6                  // Field userBufOff:I
      44: return

  public void end();
    Code:
       0: return

  private static native void initIDs();

  private native int decompressBytesDirect();

  int decompressDirect(java.nio.ByteBuffer, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: getstatic     #29                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: instanceof    #30                 // class org/apache/hadoop/io/compress/snappy/SnappyDecompressor$SnappyDirectDecompressor
      10: ifne          21
      13: new           #31                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #32                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_2
      22: astore_3
      23: aload_2
      24: invokevirtual #33                 // Method java/nio/ByteBuffer.position:()I
      27: ifle          37
      30: aload_2
      31: astore_3
      32: aload_2
      33: invokevirtual #34                 // Method java/nio/ByteBuffer.slice:()Ljava/nio/ByteBuffer;
      36: astore_2
      37: aload_0
      38: getfield      #3                  // Field compressedDirectBuf:Ljava/nio/Buffer;
      41: astore        4
      43: aload_0
      44: getfield      #4                  // Field uncompressedDirectBuf:Ljava/nio/Buffer;
      47: astore        5
      49: aload_0
      50: getfield      #8                  // Field directBufferSize:I
      53: istore        6
      55: aload_0
      56: aload_1
      57: invokevirtual #34                 // Method java/nio/ByteBuffer.slice:()Ljava/nio/ByteBuffer;
      60: putfield      #3                  // Field compressedDirectBuf:Ljava/nio/Buffer;
      63: aload_0
      64: aload_1
      65: invokevirtual #35                 // Method java/nio/ByteBuffer.remaining:()I
      68: putfield      #21                 // Field compressedDirectBufLen:I
      71: aload_0
      72: aload_2
      73: putfield      #4                  // Field uncompressedDirectBuf:Ljava/nio/Buffer;
      76: aload_0
      77: aload_2
      78: invokevirtual #35                 // Method java/nio/ByteBuffer.remaining:()I
      81: putfield      #8                  // Field directBufferSize:I
      84: iconst_0
      85: istore        7
      87: aload_0
      88: invokespecial #28                 // Method decompressBytesDirect:()I
      91: istore        7
      93: aload_3
      94: aload_3
      95: invokevirtual #33                 // Method java/nio/ByteBuffer.position:()I
      98: iload         7
     100: iadd
     101: invokevirtual #36                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     104: pop
     105: aload_1
     106: aload_1
     107: invokevirtual #37                 // Method java/nio/ByteBuffer.limit:()I
     110: invokevirtual #36                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     113: pop
     114: aload_0
     115: iconst_1
     116: putfield      #26                 // Field finished:Z
     119: aload_0
     120: aload         4
     122: putfield      #3                  // Field compressedDirectBuf:Ljava/nio/Buffer;
     125: aload_0
     126: aload         5
     128: putfield      #4                  // Field uncompressedDirectBuf:Ljava/nio/Buffer;
     131: aload_0
     132: iconst_0
     133: putfield      #21                 // Field compressedDirectBufLen:I
     136: aload_0
     137: iload         6
     139: putfield      #8                  // Field directBufferSize:I
     142: goto          173
     145: astore        8
     147: aload_0
     148: aload         4
     150: putfield      #3                  // Field compressedDirectBuf:Ljava/nio/Buffer;
     153: aload_0
     154: aload         5
     156: putfield      #4                  // Field uncompressedDirectBuf:Ljava/nio/Buffer;
     159: aload_0
     160: iconst_0
     161: putfield      #21                 // Field compressedDirectBufLen:I
     164: aload_0
     165: iload         6
     167: putfield      #8                  // Field directBufferSize:I
     170: aload         8
     172: athrow
     173: iload         7
     175: ireturn
    Exception table:
       from    to  target type
          87   119   145   any
         145   147   145   any

  static {};
    Code:
       0: ldc           #11                 // class org/apache/hadoop/io/compress/snappy/SnappyDecompressor
       2: invokevirtual #38                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #29                 // Field $assertionsDisabled:Z
      16: ldc           #11                 // class org/apache/hadoop/io/compress/snappy/SnappyDecompressor
      18: invokevirtual #39                 // Method java/lang/Class.getName:()Ljava/lang/String;
      21: invokestatic  #40                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/String;)Lorg/slf4j/Logger;
      24: putstatic     #41                 // Field LOG:Lorg/slf4j/Logger;
      27: iconst_0
      28: putstatic     #1                  // Field nativeSnappyLoaded:Z
      31: invokestatic  #42                 // Method org/apache/hadoop/util/NativeCodeLoader.isNativeCodeLoaded:()Z
      34: ifeq          65
      37: invokestatic  #43                 // Method org/apache/hadoop/util/NativeCodeLoader.buildSupportsSnappy:()Z
      40: ifeq          65
      43: invokestatic  #44                 // Method initIDs:()V
      46: iconst_1
      47: putstatic     #1                  // Field nativeSnappyLoaded:Z
      50: goto          65
      53: astore_0
      54: getstatic     #41                 // Field LOG:Lorg/slf4j/Logger;
      57: ldc           #46                 // String failed to load SnappyDecompressor
      59: aload_0
      60: invokeinterface #47,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      65: return
    Exception table:
       from    to  target type
          43    50    53   Class java/lang/Throwable
}
