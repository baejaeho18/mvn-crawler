Compiled from "DataChecksum.java"
public class org.apache.hadoop.util.DataChecksum implements java.util.zip.Checksum {
  public static final int CHECKSUM_NULL;

  public static final int CHECKSUM_CRC32;

  public static final int CHECKSUM_CRC32C;

  public static final int CHECKSUM_DEFAULT;

  public static final int CHECKSUM_MIXED;

  private static final org.slf4j.Logger LOG;

  private static volatile boolean useJava9Crc32C;

  private final org.apache.hadoop.util.DataChecksum$Type type;

  private final java.util.zip.Checksum summer;

  private final int bytesPerChecksum;

  private int inSum;

  public static final int SIZE_OF_INTEGER;

  public static java.util.zip.Checksum newCrc32();
    Code:
       0: new           #3                  // class java/util/zip/CRC32
       3: dup
       4: invokespecial #4                  // Method java/util/zip/CRC32."<init>":()V
       7: areturn

  static java.util.zip.Checksum newCrc32C();
    Code:
       0: getstatic     #5                  // Field useJava9Crc32C:Z
       3: ifeq          12
       6: invokestatic  #6                  // Method org/apache/hadoop/util/DataChecksum$Java9Crc32CFactory.createChecksum:()Ljava/util/zip/Checksum;
       9: goto          19
      12: new           #7                  // class org/apache/hadoop/util/PureJavaCrc32C
      15: dup
      16: invokespecial #8                  // Method org/apache/hadoop/util/PureJavaCrc32C."<init>":()V
      19: areturn
      20: astore_0
      21: getstatic     #11                 // Field LOG:Lorg/slf4j/Logger;
      24: ldc           #12                 // String CRC32C creation failed, switching to PureJavaCrc32C
      26: aload_0
      27: invokeinterface #13,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      32: iconst_0
      33: putstatic     #5                  // Field useJava9Crc32C:Z
      36: new           #7                  // class org/apache/hadoop/util/PureJavaCrc32C
      39: dup
      40: invokespecial #8                  // Method org/apache/hadoop/util/PureJavaCrc32C."<init>":()V
      43: areturn
    Exception table:
       from    to  target type
           0    19    20   Class java/lang/ExceptionInInitializerError
           0    19    20   Class java/lang/RuntimeException

  public static int getCrcPolynomialForType(org.apache.hadoop.util.DataChecksum$Type) throws java.io.IOException;
    Code:
       0: getstatic     #14                 // Field org/apache/hadoop/util/DataChecksum$1.$SwitchMap$org$apache$hadoop$util$DataChecksum$Type:[I
       3: aload_0
       4: invokevirtual #15                 // Method org/apache/hadoop/util/DataChecksum$Type.ordinal:()I
       7: iaload
       8: lookupswitch  { // 2
                     1: 36
                     2: 39
               default: 42
          }
      36: ldc           #17                 // int -306674912
      38: ireturn
      39: ldc           #18                 // int -2097792136
      41: ireturn
      42: new           #19                 // class java/io/IOException
      45: dup
      46: new           #20                 // class java/lang/StringBuilder
      49: dup
      50: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      53: ldc           #22                 // String No CRC polynomial could be associated with type:
      55: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: aload_0
      59: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      62: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: invokespecial #26                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      68: athrow

  public static org.apache.hadoop.util.DataChecksum newDataChecksum(org.apache.hadoop.util.DataChecksum$Type, int);
    Code:
       0: iload_1
       1: ifgt          6
       4: aconst_null
       5: areturn
       6: getstatic     #14                 // Field org/apache/hadoop/util/DataChecksum$1.$SwitchMap$org$apache$hadoop$util$DataChecksum$Type:[I
       9: aload_0
      10: invokevirtual #15                 // Method org/apache/hadoop/util/DataChecksum$Type.ordinal:()I
      13: iaload
      14: tableswitch   { // 1 to 3
                     1: 57
                     2: 70
                     3: 40
               default: 83
          }
      40: new           #27                 // class org/apache/hadoop/util/DataChecksum
      43: dup
      44: aload_0
      45: new           #28                 // class org/apache/hadoop/util/DataChecksum$ChecksumNull
      48: dup
      49: invokespecial #29                 // Method org/apache/hadoop/util/DataChecksum$ChecksumNull."<init>":()V
      52: iload_1
      53: invokespecial #30                 // Method "<init>":(Lorg/apache/hadoop/util/DataChecksum$Type;Ljava/util/zip/Checksum;I)V
      56: areturn
      57: new           #27                 // class org/apache/hadoop/util/DataChecksum
      60: dup
      61: aload_0
      62: invokestatic  #31                 // Method newCrc32:()Ljava/util/zip/Checksum;
      65: iload_1
      66: invokespecial #30                 // Method "<init>":(Lorg/apache/hadoop/util/DataChecksum$Type;Ljava/util/zip/Checksum;I)V
      69: areturn
      70: new           #27                 // class org/apache/hadoop/util/DataChecksum
      73: dup
      74: aload_0
      75: invokestatic  #32                 // Method newCrc32C:()Ljava/util/zip/Checksum;
      78: iload_1
      79: invokespecial #30                 // Method "<init>":(Lorg/apache/hadoop/util/DataChecksum$Type;Ljava/util/zip/Checksum;I)V
      82: areturn
      83: aconst_null
      84: areturn

  public static org.apache.hadoop.util.DataChecksum newDataChecksum(byte[], int) throws java.io.IOException;
    Code:
       0: iload_1
       1: iflt          14
       4: aload_0
       5: arraylength
       6: iload_1
       7: invokestatic  #33                 // Method getChecksumHeaderSize:()I
      10: iadd
      11: if_icmpge     51
      14: new           #34                 // class org/apache/hadoop/util/InvalidChecksumSizeException
      17: dup
      18: new           #20                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #35                 // String Could not create DataChecksum  from the byte array of length
      27: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_0
      31: arraylength
      32: invokevirtual #36                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      35: ldc           #37                 // String  and offset
      37: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: iload_1
      41: invokevirtual #36                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      44: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: invokespecial #38                 // Method org/apache/hadoop/util/InvalidChecksumSizeException."<init>":(Ljava/lang/String;)V
      50: athrow
      51: aload_0
      52: iload_1
      53: iconst_1
      54: iadd
      55: baload
      56: sipush        255
      59: iand
      60: bipush        24
      62: ishl
      63: aload_0
      64: iload_1
      65: iconst_2
      66: iadd
      67: baload
      68: sipush        255
      71: iand
      72: bipush        16
      74: ishl
      75: ior
      76: aload_0
      77: iload_1
      78: iconst_3
      79: iadd
      80: baload
      81: sipush        255
      84: iand
      85: bipush        8
      87: ishl
      88: ior
      89: aload_0
      90: iload_1
      91: iconst_4
      92: iadd
      93: baload
      94: sipush        255
      97: iand
      98: ior
      99: istore_2
     100: aload_0
     101: iload_1
     102: baload
     103: invokestatic  #39                 // Method mapByteToChecksumType:(I)Lorg/apache/hadoop/util/DataChecksum$Type;
     106: iload_2
     107: invokestatic  #40                 // Method newDataChecksum:(Lorg/apache/hadoop/util/DataChecksum$Type;I)Lorg/apache/hadoop/util/DataChecksum;
     110: astore_3
     111: aload_3
     112: ifnonnull     152
     115: new           #34                 // class org/apache/hadoop/util/InvalidChecksumSizeException
     118: dup
     119: new           #20                 // class java/lang/StringBuilder
     122: dup
     123: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
     126: ldc           #35                 // String Could not create DataChecksum  from the byte array of length
     128: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: aload_0
     132: arraylength
     133: invokevirtual #36                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     136: ldc           #41                 // String  and bytesPerCheckSum of
     138: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: iload_2
     142: invokevirtual #36                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     145: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     148: invokespecial #38                 // Method org/apache/hadoop/util/InvalidChecksumSizeException."<init>":(Ljava/lang/String;)V
     151: athrow
     152: aload_3
     153: areturn

  public static org.apache.hadoop.util.DataChecksum newDataChecksum(java.io.DataInputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method java/io/DataInputStream.readByte:()B
       4: istore_1
       5: aload_0
       6: invokevirtual #43                 // Method java/io/DataInputStream.readInt:()I
       9: istore_2
      10: iload_1
      11: invokestatic  #39                 // Method mapByteToChecksumType:(I)Lorg/apache/hadoop/util/DataChecksum$Type;
      14: iload_2
      15: invokestatic  #40                 // Method newDataChecksum:(Lorg/apache/hadoop/util/DataChecksum$Type;I)Lorg/apache/hadoop/util/DataChecksum;
      18: astore_3
      19: aload_3
      20: ifnonnull     59
      23: new           #34                 // class org/apache/hadoop/util/InvalidChecksumSizeException
      26: dup
      27: new           #20                 // class java/lang/StringBuilder
      30: dup
      31: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      34: ldc           #44                 // String Could not create DataChecksum of type
      36: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: iload_1
      40: invokevirtual #36                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      43: ldc           #45                 // String  with bytesPerChecksum
      45: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: iload_2
      49: invokevirtual #36                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      52: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: invokespecial #38                 // Method org/apache/hadoop/util/InvalidChecksumSizeException."<init>":(Ljava/lang/String;)V
      58: athrow
      59: aload_3
      60: areturn

  private static org.apache.hadoop.util.DataChecksum$Type mapByteToChecksumType(int) throws org.apache.hadoop.util.InvalidChecksumSizeException;
    Code:
       0: iload_0
       1: invokestatic  #46                 // Method org/apache/hadoop/util/DataChecksum$Type.valueOf:(I)Lorg/apache/hadoop/util/DataChecksum$Type;
       4: areturn
       5: astore_1
       6: new           #34                 // class org/apache/hadoop/util/InvalidChecksumSizeException
       9: dup
      10: new           #20                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #48                 // String The value
      19: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: iload_0
      23: invokevirtual #36                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      26: ldc           #49                 // String  does not map to a valid checksum Type
      28: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #38                 // Method org/apache/hadoop/util/InvalidChecksumSizeException."<init>":(Ljava/lang/String;)V
      37: athrow
    Exception table:
       from    to  target type
           0     4     5   Class java/lang/IllegalArgumentException

  public void writeHeader(java.io.DataOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #50                 // Field type:Lorg/apache/hadoop/util/DataChecksum$Type;
       5: getfield      #51                 // Field org/apache/hadoop/util/DataChecksum$Type.id:I
       8: invokevirtual #52                 // Method java/io/DataOutputStream.writeByte:(I)V
      11: aload_1
      12: aload_0
      13: getfield      #53                 // Field bytesPerChecksum:I
      16: invokevirtual #54                 // Method java/io/DataOutputStream.writeInt:(I)V
      19: return

  public byte[] getHeader();
    Code:
       0: invokestatic  #33                 // Method getChecksumHeaderSize:()I
       3: newarray       byte
       5: astore_1
       6: aload_1
       7: iconst_0
       8: aload_0
       9: getfield      #50                 // Field type:Lorg/apache/hadoop/util/DataChecksum$Type;
      12: getfield      #51                 // Field org/apache/hadoop/util/DataChecksum$Type.id:I
      15: sipush        255
      18: iand
      19: i2b
      20: bastore
      21: aload_1
      22: iconst_1
      23: aload_0
      24: getfield      #53                 // Field bytesPerChecksum:I
      27: bipush        24
      29: iushr
      30: sipush        255
      33: iand
      34: i2b
      35: bastore
      36: aload_1
      37: iconst_2
      38: aload_0
      39: getfield      #53                 // Field bytesPerChecksum:I
      42: bipush        16
      44: iushr
      45: sipush        255
      48: iand
      49: i2b
      50: bastore
      51: aload_1
      52: iconst_3
      53: aload_0
      54: getfield      #53                 // Field bytesPerChecksum:I
      57: bipush        8
      59: iushr
      60: sipush        255
      63: iand
      64: i2b
      65: bastore
      66: aload_1
      67: iconst_4
      68: aload_0
      69: getfield      #53                 // Field bytesPerChecksum:I
      72: sipush        255
      75: iand
      76: i2b
      77: bastore
      78: aload_1
      79: areturn

  public int writeValue(java.io.DataOutputStream, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #50                 // Field type:Lorg/apache/hadoop/util/DataChecksum$Type;
       4: getfield      #55                 // Field org/apache/hadoop/util/DataChecksum$Type.size:I
       7: ifgt          12
      10: iconst_0
      11: ireturn
      12: aload_0
      13: getfield      #50                 // Field type:Lorg/apache/hadoop/util/DataChecksum$Type;
      16: getfield      #55                 // Field org/apache/hadoop/util/DataChecksum$Type.size:I
      19: iconst_4
      20: if_icmpne     40
      23: aload_1
      24: aload_0
      25: getfield      #56                 // Field summer:Ljava/util/zip/Checksum;
      28: invokeinterface #57,  1           // InterfaceMethod java/util/zip/Checksum.getValue:()J
      33: l2i
      34: invokevirtual #54                 // Method java/io/DataOutputStream.writeInt:(I)V
      37: goto          70
      40: new           #19                 // class java/io/IOException
      43: dup
      44: new           #20                 // class java/lang/StringBuilder
      47: dup
      48: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      51: ldc           #58                 // String Unknown Checksum
      53: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload_0
      57: getfield      #50                 // Field type:Lorg/apache/hadoop/util/DataChecksum$Type;
      60: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      63: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: invokespecial #26                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      69: athrow
      70: iload_2
      71: ifeq          78
      74: aload_0
      75: invokevirtual #59                 // Method reset:()V
      78: aload_0
      79: getfield      #50                 // Field type:Lorg/apache/hadoop/util/DataChecksum$Type;
      82: getfield      #55                 // Field org/apache/hadoop/util/DataChecksum$Type.size:I
      85: ireturn

  public int writeValue(byte[], int, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #50                 // Field type:Lorg/apache/hadoop/util/DataChecksum$Type;
       4: getfield      #55                 // Field org/apache/hadoop/util/DataChecksum$Type.size:I
       7: ifgt          12
      10: iconst_0
      11: ireturn
      12: aload_0
      13: getfield      #50                 // Field type:Lorg/apache/hadoop/util/DataChecksum$Type;
      16: getfield      #55                 // Field org/apache/hadoop/util/DataChecksum$Type.size:I
      19: iconst_4
      20: if_icmpne     95
      23: aload_0
      24: getfield      #56                 // Field summer:Ljava/util/zip/Checksum;
      27: invokeinterface #57,  1           // InterfaceMethod java/util/zip/Checksum.getValue:()J
      32: l2i
      33: istore        4
      35: aload_1
      36: iload_2
      37: iconst_0
      38: iadd
      39: iload         4
      41: bipush        24
      43: iushr
      44: sipush        255
      47: iand
      48: i2b
      49: bastore
      50: aload_1
      51: iload_2
      52: iconst_1
      53: iadd
      54: iload         4
      56: bipush        16
      58: iushr
      59: sipush        255
      62: iand
      63: i2b
      64: bastore
      65: aload_1
      66: iload_2
      67: iconst_2
      68: iadd
      69: iload         4
      71: bipush        8
      73: iushr
      74: sipush        255
      77: iand
      78: i2b
      79: bastore
      80: aload_1
      81: iload_2
      82: iconst_3
      83: iadd
      84: iload         4
      86: sipush        255
      89: iand
      90: i2b
      91: bastore
      92: goto          125
      95: new           #19                 // class java/io/IOException
      98: dup
      99: new           #20                 // class java/lang/StringBuilder
     102: dup
     103: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
     106: ldc           #58                 // String Unknown Checksum
     108: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: aload_0
     112: getfield      #50                 // Field type:Lorg/apache/hadoop/util/DataChecksum$Type;
     115: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     118: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     121: invokespecial #26                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     124: athrow
     125: iload_3
     126: ifeq          133
     129: aload_0
     130: invokevirtual #59                 // Method reset:()V
     133: aload_0
     134: getfield      #50                 // Field type:Lorg/apache/hadoop/util/DataChecksum$Type;
     137: getfield      #55                 // Field org/apache/hadoop/util/DataChecksum$Type.size:I
     140: ireturn

  public boolean compare(byte[], int);
    Code:
       0: aload_0
       1: getfield      #50                 // Field type:Lorg/apache/hadoop/util/DataChecksum$Type;
       4: getfield      #55                 // Field org/apache/hadoop/util/DataChecksum$Type.size:I
       7: iconst_4
       8: if_icmpne     80
      11: aload_1
      12: iload_2
      13: iconst_0
      14: iadd
      15: baload
      16: sipush        255
      19: iand
      20: bipush        24
      22: ishl
      23: aload_1
      24: iload_2
      25: iconst_1
      26: iadd
      27: baload
      28: sipush        255
      31: iand
      32: bipush        16
      34: ishl
      35: ior
      36: aload_1
      37: iload_2
      38: iconst_2
      39: iadd
      40: baload
      41: sipush        255
      44: iand
      45: bipush        8
      47: ishl
      48: ior
      49: aload_1
      50: iload_2
      51: iconst_3
      52: iadd
      53: baload
      54: sipush        255
      57: iand
      58: ior
      59: istore_3
      60: iload_3
      61: aload_0
      62: getfield      #56                 // Field summer:Ljava/util/zip/Checksum;
      65: invokeinterface #57,  1           // InterfaceMethod java/util/zip/Checksum.getValue:()J
      70: l2i
      71: if_icmpne     78
      74: iconst_1
      75: goto          79
      78: iconst_0
      79: ireturn
      80: aload_0
      81: getfield      #50                 // Field type:Lorg/apache/hadoop/util/DataChecksum$Type;
      84: getfield      #55                 // Field org/apache/hadoop/util/DataChecksum$Type.size:I
      87: ifne          94
      90: iconst_1
      91: goto          95
      94: iconst_0
      95: ireturn

  private org.apache.hadoop.util.DataChecksum(org.apache.hadoop.util.DataChecksum$Type, java.util.zip.Checksum, int);
    Code:
       0: aload_0
       1: invokespecial #60                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #61                 // Field inSum:I
       9: aload_0
      10: aload_1
      11: putfield      #50                 // Field type:Lorg/apache/hadoop/util/DataChecksum$Type;
      14: aload_0
      15: aload_2
      16: putfield      #56                 // Field summer:Ljava/util/zip/Checksum;
      19: aload_0
      20: iload_3
      21: putfield      #53                 // Field bytesPerChecksum:I
      24: return

  public org.apache.hadoop.util.DataChecksum$Type getChecksumType();
    Code:
       0: aload_0
       1: getfield      #50                 // Field type:Lorg/apache/hadoop/util/DataChecksum$Type;
       4: areturn

  public int getChecksumSize();
    Code:
       0: aload_0
       1: getfield      #50                 // Field type:Lorg/apache/hadoop/util/DataChecksum$Type;
       4: getfield      #55                 // Field org/apache/hadoop/util/DataChecksum$Type.size:I
       7: ireturn

  public int getChecksumSize(int);
    Code:
       0: iload_1
       1: iconst_1
       2: isub
       3: aload_0
       4: invokevirtual #62                 // Method getBytesPerChecksum:()I
       7: idiv
       8: iconst_1
       9: iadd
      10: aload_0
      11: invokevirtual #63                 // Method getChecksumSize:()I
      14: imul
      15: ireturn

  public int getBytesPerChecksum();
    Code:
       0: aload_0
       1: getfield      #53                 // Field bytesPerChecksum:I
       4: ireturn

  public int getNumBytesInSum();
    Code:
       0: aload_0
       1: getfield      #61                 // Field inSum:I
       4: ireturn

  public static int getChecksumHeaderSize();
    Code:
       0: iconst_5
       1: ireturn

  public long getValue();
    Code:
       0: aload_0
       1: getfield      #56                 // Field summer:Ljava/util/zip/Checksum;
       4: invokeinterface #57,  1           // InterfaceMethod java/util/zip/Checksum.getValue:()J
       9: lreturn

  public void reset();
    Code:
       0: aload_0
       1: getfield      #56                 // Field summer:Ljava/util/zip/Checksum;
       4: invokeinterface #64,  1           // InterfaceMethod java/util/zip/Checksum.reset:()V
       9: aload_0
      10: iconst_0
      11: putfield      #61                 // Field inSum:I
      14: return

  public void update(byte[], int, int);
    Code:
       0: iload_3
       1: ifle          26
       4: aload_0
       5: getfield      #56                 // Field summer:Ljava/util/zip/Checksum;
       8: aload_1
       9: iload_2
      10: iload_3
      11: invokeinterface #65,  4           // InterfaceMethod java/util/zip/Checksum.update:([BII)V
      16: aload_0
      17: dup
      18: getfield      #61                 // Field inSum:I
      21: iload_3
      22: iadd
      23: putfield      #61                 // Field inSum:I
      26: return

  public void update(int);
    Code:
       0: aload_0
       1: getfield      #56                 // Field summer:Ljava/util/zip/Checksum;
       4: iload_1
       5: invokeinterface #66,  2           // InterfaceMethod java/util/zip/Checksum.update:(I)V
      10: aload_0
      11: dup
      12: getfield      #61                 // Field inSum:I
      15: iconst_1
      16: iadd
      17: putfield      #61                 // Field inSum:I
      20: return

  public void verifyChunkedSums(java.nio.ByteBuffer, java.nio.ByteBuffer, java.lang.String, long) throws org.apache.hadoop.fs.ChecksumException;
    Code:
       0: aload_0
       1: getfield      #50                 // Field type:Lorg/apache/hadoop/util/DataChecksum$Type;
       4: getfield      #55                 // Field org/apache/hadoop/util/DataChecksum$Type.size:I
       7: ifne          11
      10: return
      11: aload_1
      12: invokevirtual #67                 // Method java/nio/ByteBuffer.hasArray:()Z
      15: ifeq          124
      18: aload_2
      19: invokevirtual #67                 // Method java/nio/ByteBuffer.hasArray:()Z
      22: ifeq          124
      25: aload_1
      26: invokevirtual #68                 // Method java/nio/ByteBuffer.arrayOffset:()I
      29: aload_1
      30: invokevirtual #69                 // Method java/nio/ByteBuffer.position:()I
      33: iadd
      34: istore        6
      36: aload_2
      37: invokevirtual #68                 // Method java/nio/ByteBuffer.arrayOffset:()I
      40: aload_2
      41: invokevirtual #69                 // Method java/nio/ByteBuffer.position:()I
      44: iadd
      45: istore        7
      47: invokestatic  #70                 // Method org/apache/hadoop/util/NativeCrc32.isAvailable:()Z
      50: ifeq          89
      53: aload_0
      54: getfield      #53                 // Field bytesPerChecksum:I
      57: aload_0
      58: getfield      #50                 // Field type:Lorg/apache/hadoop/util/DataChecksum$Type;
      61: getfield      #51                 // Field org/apache/hadoop/util/DataChecksum$Type.id:I
      64: aload_2
      65: invokevirtual #71                 // Method java/nio/ByteBuffer.array:()[B
      68: iload         7
      70: aload_1
      71: invokevirtual #71                 // Method java/nio/ByteBuffer.array:()[B
      74: iload         6
      76: aload_1
      77: invokevirtual #72                 // Method java/nio/ByteBuffer.remaining:()I
      80: aload_3
      81: lload         4
      83: invokestatic  #73                 // Method org/apache/hadoop/util/NativeCrc32.verifyChunkedSumsByteArray:(II[BI[BIILjava/lang/String;J)V
      86: goto          123
      89: aload_0
      90: getfield      #50                 // Field type:Lorg/apache/hadoop/util/DataChecksum$Type;
      93: aload_0
      94: getfield      #56                 // Field summer:Ljava/util/zip/Checksum;
      97: aload_1
      98: invokevirtual #71                 // Method java/nio/ByteBuffer.array:()[B
     101: iload         6
     103: aload_1
     104: invokevirtual #72                 // Method java/nio/ByteBuffer.remaining:()I
     107: aload_0
     108: getfield      #53                 // Field bytesPerChecksum:I
     111: aload_2
     112: invokevirtual #71                 // Method java/nio/ByteBuffer.array:()[B
     115: iload         7
     117: aload_3
     118: lload         4
     120: invokestatic  #74                 // Method verifyChunked:(Lorg/apache/hadoop/util/DataChecksum$Type;Ljava/util/zip/Checksum;[BIII[BILjava/lang/String;J)V
     123: return
     124: invokestatic  #70                 // Method org/apache/hadoop/util/NativeCrc32.isAvailable:()Z
     127: ifeq          159
     130: aload_1
     131: invokevirtual #75                 // Method java/nio/ByteBuffer.isDirect:()Z
     134: ifeq          159
     137: aload_0
     138: getfield      #53                 // Field bytesPerChecksum:I
     141: aload_0
     142: getfield      #50                 // Field type:Lorg/apache/hadoop/util/DataChecksum$Type;
     145: getfield      #51                 // Field org/apache/hadoop/util/DataChecksum$Type.id:I
     148: aload_2
     149: aload_1
     150: aload_3
     151: lload         4
     153: invokestatic  #76                 // Method org/apache/hadoop/util/NativeCrc32.verifyChunkedSums:(IILjava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/lang/String;J)V
     156: goto          179
     159: aload_0
     160: getfield      #50                 // Field type:Lorg/apache/hadoop/util/DataChecksum$Type;
     163: aload_0
     164: getfield      #56                 // Field summer:Ljava/util/zip/Checksum;
     167: aload_1
     168: aload_0
     169: getfield      #53                 // Field bytesPerChecksum:I
     172: aload_2
     173: aload_3
     174: lload         4
     176: invokestatic  #77                 // Method verifyChunked:(Lorg/apache/hadoop/util/DataChecksum$Type;Ljava/util/zip/Checksum;Ljava/nio/ByteBuffer;ILjava/nio/ByteBuffer;Ljava/lang/String;J)V
     179: return

  static void verifyChunked(org.apache.hadoop.util.DataChecksum$Type, java.util.zip.Checksum, java.nio.ByteBuffer, int, java.nio.ByteBuffer, java.lang.String, long) throws org.apache.hadoop.fs.ChecksumException;
    Code:
       0: iload_3
       1: newarray       byte
       3: astore        8
       5: aload_2
       6: invokevirtual #69                 // Method java/nio/ByteBuffer.position:()I
       9: istore        9
      11: aload_2
      12: invokevirtual #72                 // Method java/nio/ByteBuffer.remaining:()I
      15: istore        10
      17: aload_2
      18: invokevirtual #78                 // Method java/nio/ByteBuffer.mark:()Ljava/nio/Buffer;
      21: pop
      22: aload         4
      24: invokevirtual #78                 // Method java/nio/ByteBuffer.mark:()Ljava/nio/Buffer;
      27: pop
      28: iconst_0
      29: istore        11
      31: iload         10
      33: iload_3
      34: isub
      35: iconst_1
      36: iadd
      37: istore        12
      39: iload         11
      41: iload         12
      43: if_icmpge     131
      46: aload_2
      47: aload         8
      49: invokevirtual #79                 // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
      52: pop
      53: aload_1
      54: invokeinterface #64,  1           // InterfaceMethod java/util/zip/Checksum.reset:()V
      59: aload_1
      60: aload         8
      62: iconst_0
      63: iload_3
      64: invokeinterface #65,  4           // InterfaceMethod java/util/zip/Checksum.update:([BII)V
      69: aload_1
      70: invokeinterface #57,  1           // InterfaceMethod java/util/zip/Checksum.getValue:()J
      75: l2i
      76: istore        13
      78: aload         4
      80: invokevirtual #80                 // Method java/nio/ByteBuffer.getInt:()I
      83: istore        14
      85: iload         13
      87: iload         14
      89: if_icmpeq     122
      92: lload         6
      94: aload_2
      95: invokevirtual #69                 // Method java/nio/ByteBuffer.position:()I
      98: i2l
      99: ladd
     100: iload         9
     102: i2l
     103: lsub
     104: iload_3
     105: i2l
     106: lsub
     107: lstore        15
     109: aload_0
     110: aload_1
     111: aload         5
     113: lload         15
     115: iload         14
     117: iload         13
     119: invokestatic  #81                 // Method throwChecksumException:(Lorg/apache/hadoop/util/DataChecksum$Type;Ljava/util/zip/Checksum;Ljava/lang/String;JII)V
     122: iload         11
     124: iload_3
     125: iadd
     126: istore        11
     128: goto          39
     131: iload         10
     133: iload         11
     135: isub
     136: istore        12
     138: iload         12
     140: ifle          224
     143: aload_2
     144: aload         8
     146: iconst_0
     147: iload         12
     149: invokevirtual #82                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
     152: pop
     153: aload_1
     154: invokeinterface #64,  1           // InterfaceMethod java/util/zip/Checksum.reset:()V
     159: aload_1
     160: aload         8
     162: iconst_0
     163: iload         12
     165: invokeinterface #65,  4           // InterfaceMethod java/util/zip/Checksum.update:([BII)V
     170: aload_1
     171: invokeinterface #57,  1           // InterfaceMethod java/util/zip/Checksum.getValue:()J
     176: l2i
     177: istore        13
     179: aload         4
     181: invokevirtual #80                 // Method java/nio/ByteBuffer.getInt:()I
     184: istore        14
     186: iload         13
     188: iload         14
     190: if_icmpeq     224
     193: lload         6
     195: aload_2
     196: invokevirtual #69                 // Method java/nio/ByteBuffer.position:()I
     199: i2l
     200: ladd
     201: iload         9
     203: i2l
     204: lsub
     205: iload         12
     207: i2l
     208: lsub
     209: lstore        15
     211: aload_0
     212: aload_1
     213: aload         5
     215: lload         15
     217: iload         14
     219: iload         13
     221: invokestatic  #81                 // Method throwChecksumException:(Lorg/apache/hadoop/util/DataChecksum$Type;Ljava/util/zip/Checksum;Ljava/lang/String;JII)V
     224: aload_2
     225: invokevirtual #83                 // Method java/nio/ByteBuffer.reset:()Ljava/nio/Buffer;
     228: pop
     229: aload         4
     231: invokevirtual #83                 // Method java/nio/ByteBuffer.reset:()Ljava/nio/Buffer;
     234: pop
     235: goto          254
     238: astore        17
     240: aload_2
     241: invokevirtual #83                 // Method java/nio/ByteBuffer.reset:()Ljava/nio/Buffer;
     244: pop
     245: aload         4
     247: invokevirtual #83                 // Method java/nio/ByteBuffer.reset:()Ljava/nio/Buffer;
     250: pop
     251: aload         17
     253: athrow
     254: return
    Exception table:
       from    to  target type
          28   224   238   any
         238   240   238   any

  static void verifyChunked(org.apache.hadoop.util.DataChecksum$Type, java.util.zip.Checksum, byte[], int, int, int, byte[], int, java.lang.String, long) throws org.apache.hadoop.fs.ChecksumException;
    Code:
       0: iload_3
       1: iload         4
       3: iadd
       4: istore        11
       6: iload_3
       7: istore        12
       9: iload         7
      11: istore        13
      13: iload         11
      15: iload         5
      17: isub
      18: iconst_1
      19: iadd
      20: istore        14
      22: iload         12
      24: iload         14
      26: if_icmpge     151
      29: aload_1
      30: invokeinterface #64,  1           // InterfaceMethod java/util/zip/Checksum.reset:()V
      35: aload_1
      36: aload_2
      37: iload         12
      39: iload         5
      41: invokeinterface #65,  4           // InterfaceMethod java/util/zip/Checksum.update:([BII)V
      46: aload_1
      47: invokeinterface #57,  1           // InterfaceMethod java/util/zip/Checksum.getValue:()J
      52: l2i
      53: istore        15
      55: aload         6
      57: iload         13
      59: baload
      60: bipush        24
      62: ishl
      63: aload         6
      65: iload         13
      67: iconst_1
      68: iadd
      69: baload
      70: bipush        24
      72: ishl
      73: bipush        8
      75: iushr
      76: iadd
      77: aload         6
      79: iload         13
      81: iconst_2
      82: iadd
      83: baload
      84: bipush        24
      86: ishl
      87: bipush        16
      89: iushr
      90: aload         6
      92: iload         13
      94: iconst_3
      95: iadd
      96: baload
      97: bipush        24
      99: ishl
     100: bipush        24
     102: iushr
     103: iadd
     104: iadd
     105: istore        16
     107: iload         15
     109: iload         16
     111: if_icmpeq     138
     114: lload         9
     116: iload         12
     118: i2l
     119: ladd
     120: iload_3
     121: i2l
     122: lsub
     123: lstore        17
     125: aload_0
     126: aload_1
     127: aload         8
     129: lload         17
     131: iload         16
     133: iload         15
     135: invokestatic  #81                 // Method throwChecksumException:(Lorg/apache/hadoop/util/DataChecksum$Type;Ljava/util/zip/Checksum;Ljava/lang/String;JII)V
     138: iload         12
     140: iload         5
     142: iadd
     143: istore        12
     145: iinc          13, 4
     148: goto          22
     151: iload         11
     153: iload         12
     155: isub
     156: istore        14
     158: iload         14
     160: ifle          272
     163: aload_1
     164: invokeinterface #64,  1           // InterfaceMethod java/util/zip/Checksum.reset:()V
     169: aload_1
     170: aload_2
     171: iload         12
     173: iload         14
     175: invokeinterface #65,  4           // InterfaceMethod java/util/zip/Checksum.update:([BII)V
     180: aload_1
     181: invokeinterface #57,  1           // InterfaceMethod java/util/zip/Checksum.getValue:()J
     186: l2i
     187: istore        15
     189: aload         6
     191: iload         13
     193: baload
     194: bipush        24
     196: ishl
     197: aload         6
     199: iload         13
     201: iconst_1
     202: iadd
     203: baload
     204: bipush        24
     206: ishl
     207: bipush        8
     209: iushr
     210: iadd
     211: aload         6
     213: iload         13
     215: iconst_2
     216: iadd
     217: baload
     218: bipush        24
     220: ishl
     221: bipush        16
     223: iushr
     224: aload         6
     226: iload         13
     228: iconst_3
     229: iadd
     230: baload
     231: bipush        24
     233: ishl
     234: bipush        24
     236: iushr
     237: iadd
     238: iadd
     239: istore        16
     241: iload         15
     243: iload         16
     245: if_icmpeq     272
     248: lload         9
     250: iload         12
     252: i2l
     253: ladd
     254: iload_3
     255: i2l
     256: lsub
     257: lstore        17
     259: aload_0
     260: aload_1
     261: aload         8
     263: lload         17
     265: iload         16
     267: iload         15
     269: invokestatic  #81                 // Method throwChecksumException:(Lorg/apache/hadoop/util/DataChecksum$Type;Ljava/util/zip/Checksum;Ljava/lang/String;JII)V
     272: return

  private static void throwChecksumException(org.apache.hadoop.util.DataChecksum$Type, java.util.zip.Checksum, java.lang.String, long, int, int) throws org.apache.hadoop.fs.ChecksumException;
    Code:
       0: new           #84                 // class org/apache/hadoop/fs/ChecksumException
       3: dup
       4: new           #20                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #85                 // String Checksum
      13: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      20: ldc           #86                 // String  not matched for file
      22: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_2
      26: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: ldc           #87                 // String  at position
      31: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: lload_3
      35: invokevirtual #88                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      38: ldc           #89                 // String : expected=%X but computed=%X
      40: iconst_2
      41: anewarray     #90                 // class java/lang/Object
      44: dup
      45: iconst_0
      46: iload         5
      48: invokestatic  #91                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      51: aastore
      52: dup
      53: iconst_1
      54: iload         6
      56: invokestatic  #91                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      59: aastore
      60: invokestatic  #92                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      63: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: ldc           #93                 // String , algorithm=
      68: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: aload_1
      72: invokevirtual #94                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      75: invokevirtual #95                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      78: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      84: lload_3
      85: invokespecial #96                 // Method org/apache/hadoop/fs/ChecksumException."<init>":(Ljava/lang/String;J)V
      88: athrow

  public void calculateChunkedSums(java.nio.ByteBuffer, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: getfield      #50                 // Field type:Lorg/apache/hadoop/util/DataChecksum$Type;
       4: getfield      #55                 // Field org/apache/hadoop/util/DataChecksum$Type.size:I
       7: ifne          11
      10: return
      11: aload_1
      12: invokevirtual #67                 // Method java/nio/ByteBuffer.hasArray:()Z
      15: ifeq          60
      18: aload_2
      19: invokevirtual #67                 // Method java/nio/ByteBuffer.hasArray:()Z
      22: ifeq          60
      25: aload_0
      26: aload_1
      27: invokevirtual #71                 // Method java/nio/ByteBuffer.array:()[B
      30: aload_1
      31: invokevirtual #68                 // Method java/nio/ByteBuffer.arrayOffset:()I
      34: aload_1
      35: invokevirtual #69                 // Method java/nio/ByteBuffer.position:()I
      38: iadd
      39: aload_1
      40: invokevirtual #72                 // Method java/nio/ByteBuffer.remaining:()I
      43: aload_2
      44: invokevirtual #71                 // Method java/nio/ByteBuffer.array:()[B
      47: aload_2
      48: invokevirtual #68                 // Method java/nio/ByteBuffer.arrayOffset:()I
      51: aload_2
      52: invokevirtual #69                 // Method java/nio/ByteBuffer.position:()I
      55: iadd
      56: invokevirtual #97                 // Method calculateChunkedSums:([BII[BI)V
      59: return
      60: invokestatic  #70                 // Method org/apache/hadoop/util/NativeCrc32.isAvailable:()Z
      63: ifeq          83
      66: aload_0
      67: getfield      #53                 // Field bytesPerChecksum:I
      70: aload_0
      71: getfield      #50                 // Field type:Lorg/apache/hadoop/util/DataChecksum$Type;
      74: getfield      #51                 // Field org/apache/hadoop/util/DataChecksum$Type.id:I
      77: aload_2
      78: aload_1
      79: invokestatic  #98                 // Method org/apache/hadoop/util/NativeCrc32.calculateChunkedSums:(IILjava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
      82: return
      83: aload_1
      84: invokevirtual #78                 // Method java/nio/ByteBuffer.mark:()Ljava/nio/Buffer;
      87: pop
      88: aload_2
      89: invokevirtual #78                 // Method java/nio/ByteBuffer.mark:()Ljava/nio/Buffer;
      92: pop
      93: aload_0
      94: getfield      #53                 // Field bytesPerChecksum:I
      97: newarray       byte
      99: astore_3
     100: aload_1
     101: invokevirtual #72                 // Method java/nio/ByteBuffer.remaining:()I
     104: ifle          169
     107: aload_1
     108: invokevirtual #72                 // Method java/nio/ByteBuffer.remaining:()I
     111: aload_0
     112: getfield      #53                 // Field bytesPerChecksum:I
     115: invokestatic  #99                 // Method java/lang/Math.min:(II)I
     118: istore        4
     120: aload_1
     121: aload_3
     122: iconst_0
     123: iload         4
     125: invokevirtual #82                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
     128: pop
     129: aload_0
     130: getfield      #56                 // Field summer:Ljava/util/zip/Checksum;
     133: invokeinterface #64,  1           // InterfaceMethod java/util/zip/Checksum.reset:()V
     138: aload_0
     139: getfield      #56                 // Field summer:Ljava/util/zip/Checksum;
     142: aload_3
     143: iconst_0
     144: iload         4
     146: invokeinterface #65,  4           // InterfaceMethod java/util/zip/Checksum.update:([BII)V
     151: aload_2
     152: aload_0
     153: getfield      #56                 // Field summer:Ljava/util/zip/Checksum;
     156: invokeinterface #57,  1           // InterfaceMethod java/util/zip/Checksum.getValue:()J
     161: l2i
     162: invokevirtual #100                // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
     165: pop
     166: goto          100
     169: aload_1
     170: invokevirtual #83                 // Method java/nio/ByteBuffer.reset:()Ljava/nio/Buffer;
     173: pop
     174: aload_2
     175: invokevirtual #83                 // Method java/nio/ByteBuffer.reset:()Ljava/nio/Buffer;
     178: pop
     179: goto          197
     182: astore        5
     184: aload_1
     185: invokevirtual #83                 // Method java/nio/ByteBuffer.reset:()Ljava/nio/Buffer;
     188: pop
     189: aload_2
     190: invokevirtual #83                 // Method java/nio/ByteBuffer.reset:()Ljava/nio/Buffer;
     193: pop
     194: aload         5
     196: athrow
     197: return
    Exception table:
       from    to  target type
          93   169   182   any
         182   184   182   any

  public void calculateChunkedSums(byte[], int, int, byte[], int);
    Code:
       0: aload_0
       1: getfield      #50                 // Field type:Lorg/apache/hadoop/util/DataChecksum$Type;
       4: getfield      #55                 // Field org/apache/hadoop/util/DataChecksum$Type.size:I
       7: ifne          11
      10: return
      11: invokestatic  #70                 // Method org/apache/hadoop/util/NativeCrc32.isAvailable:()Z
      14: ifeq          39
      17: aload_0
      18: getfield      #53                 // Field bytesPerChecksum:I
      21: aload_0
      22: getfield      #50                 // Field type:Lorg/apache/hadoop/util/DataChecksum$Type;
      25: getfield      #51                 // Field org/apache/hadoop/util/DataChecksum$Type.id:I
      28: aload         4
      30: iload         5
      32: aload_1
      33: iload_2
      34: iload_3
      35: invokestatic  #101                // Method org/apache/hadoop/util/NativeCrc32.calculateChunkedSumsByteArray:(II[BI[BII)V
      38: return
      39: iload_3
      40: istore        6
      42: iload         6
      44: ifle          163
      47: iload         6
      49: aload_0
      50: getfield      #53                 // Field bytesPerChecksum:I
      53: invokestatic  #99                 // Method java/lang/Math.min:(II)I
      56: istore        7
      58: aload_0
      59: getfield      #56                 // Field summer:Ljava/util/zip/Checksum;
      62: invokeinterface #64,  1           // InterfaceMethod java/util/zip/Checksum.reset:()V
      67: aload_0
      68: getfield      #56                 // Field summer:Ljava/util/zip/Checksum;
      71: aload_1
      72: iload_2
      73: iload         7
      75: invokeinterface #65,  4           // InterfaceMethod java/util/zip/Checksum.update:([BII)V
      80: iload_2
      81: iload         7
      83: iadd
      84: istore_2
      85: iload         6
      87: iload         7
      89: isub
      90: istore        6
      92: aload_0
      93: getfield      #56                 // Field summer:Ljava/util/zip/Checksum;
      96: invokeinterface #57,  1           // InterfaceMethod java/util/zip/Checksum.getValue:()J
     101: lstore        8
     103: aload         4
     105: iload         5
     107: iinc          5, 1
     110: lload         8
     112: bipush        24
     114: lshr
     115: l2i
     116: i2b
     117: bastore
     118: aload         4
     120: iload         5
     122: iinc          5, 1
     125: lload         8
     127: bipush        16
     129: lshr
     130: l2i
     131: i2b
     132: bastore
     133: aload         4
     135: iload         5
     137: iinc          5, 1
     140: lload         8
     142: bipush        8
     144: lshr
     145: l2i
     146: i2b
     147: bastore
     148: aload         4
     150: iload         5
     152: iinc          5, 1
     155: lload         8
     157: l2i
     158: i2b
     159: bastore
     160: goto          42
     163: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #27                 // class org/apache/hadoop/util/DataChecksum
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #27                 // class org/apache/hadoop/util/DataChecksum
      13: astore_2
      14: aload_2
      15: getfield      #53                 // Field bytesPerChecksum:I
      18: aload_0
      19: getfield      #53                 // Field bytesPerChecksum:I
      22: if_icmpne     40
      25: aload_2
      26: getfield      #50                 // Field type:Lorg/apache/hadoop/util/DataChecksum$Type;
      29: aload_0
      30: getfield      #50                 // Field type:Lorg/apache/hadoop/util/DataChecksum$Type;
      33: if_acmpne     40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #50                 // Field type:Lorg/apache/hadoop/util/DataChecksum$Type;
       4: getfield      #51                 // Field org/apache/hadoop/util/DataChecksum$Type.id:I
       7: bipush        31
       9: iadd
      10: aload_0
      11: getfield      #53                 // Field bytesPerChecksum:I
      14: imul
      15: ireturn

  public java.lang.String toString();
    Code:
       0: new           #20                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #102                // String DataChecksum(type=
       9: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #50                 // Field type:Lorg/apache/hadoop/util/DataChecksum$Type;
      16: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #103                // String , chunkSize=
      21: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #53                 // Field bytesPerChecksum:I
      28: invokevirtual #36                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: ldc           #104                // String )
      33: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn

  static {};
    Code:
       0: ldc           #27                 // class org/apache/hadoop/util/DataChecksum
       2: invokestatic  #105                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #11                 // Field LOG:Lorg/slf4j/Logger;
       8: bipush        9
      10: invokestatic  #106                // Method org/apache/hadoop/util/Shell.isJavaVersionAtLeast:(I)Z
      13: putstatic     #5                  // Field useJava9Crc32C:Z
      16: return
}
