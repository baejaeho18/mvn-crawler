Compiled from "FsUrlConnection.java"
class org.apache.hadoop.fs.FsUrlConnection extends java.net.URLConnection {
  private static final org.slf4j.Logger LOG;

  private org.apache.hadoop.conf.Configuration conf;

  private java.io.InputStream is;

  org.apache.hadoop.fs.FsUrlConnection(org.apache.hadoop.conf.Configuration, java.net.URL);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #1                  // Method java/net/URLConnection."<init>":(Ljava/net/URL;)V
       5: aload_1
       6: ifnull        13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ldc           #2                  // String null conf argument
      16: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      19: aload_2
      20: ifnull        27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ldc           #4                  // String null url argument
      30: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      33: aload_0
      34: aload_1
      35: putfield      #5                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      38: return

  public void connect() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field is:Ljava/io/InputStream;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #7                  // String Already connected
      14: invokestatic  #8                  // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      17: getstatic     #9                  // Field LOG:Lorg/slf4j/Logger;
      20: ldc           #10                 // String Connecting to {}
      22: aload_0
      23: getfield      #11                 // Field url:Ljava/net/URL;
      26: invokeinterface #12,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      31: aload_0
      32: getfield      #11                 // Field url:Ljava/net/URL;
      35: invokevirtual #13                 // Method java/net/URL.toURI:()Ljava/net/URI;
      38: astore_1
      39: aload_1
      40: aload_0
      41: getfield      #5                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      44: invokestatic  #14                 // Method org/apache/hadoop/fs/FileSystem.get:(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
      47: astore_2
      48: aload_1
      49: invokevirtual #15                 // Method java/net/URI.isOpaque:()Z
      52: ifeq          89
      55: aload_1
      56: invokevirtual #16                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      59: ldc           #17                 // String file
      61: invokevirtual #18                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      64: ifeq          89
      67: aload_0
      68: aload_2
      69: new           #19                 // class org/apache/hadoop/fs/Path
      72: dup
      73: aload_1
      74: invokevirtual #20                 // Method java/net/URI.getSchemeSpecificPart:()Ljava/lang/String;
      77: invokespecial #21                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      80: invokevirtual #22                 // Method org/apache/hadoop/fs/FileSystem.open:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FSDataInputStream;
      83: putfield      #6                  // Field is:Ljava/io/InputStream;
      86: goto          105
      89: aload_0
      90: aload_2
      91: new           #19                 // class org/apache/hadoop/fs/Path
      94: dup
      95: aload_1
      96: invokespecial #23                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/net/URI;)V
      99: invokevirtual #22                 // Method org/apache/hadoop/fs/FileSystem.open:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FSDataInputStream;
     102: putfield      #6                  // Field is:Ljava/io/InputStream;
     105: goto          121
     108: astore_1
     109: new           #25                 // class java/io/IOException
     112: dup
     113: aload_1
     114: invokevirtual #26                 // Method java/net/URISyntaxException.toString:()Ljava/lang/String;
     117: invokespecial #27                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     120: athrow
     121: return
    Exception table:
       from    to  target type
          17   105   108   Class java/net/URISyntaxException

  public java.io.InputStream getInputStream() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field is:Ljava/io/InputStream;
       4: ifnonnull     11
       7: aload_0
       8: invokevirtual #28                 // Method connect:()V
      11: aload_0
      12: getfield      #6                  // Field is:Ljava/io/InputStream;
      15: areturn

  static {};
    Code:
       0: ldc           #29                 // class org/apache/hadoop/fs/FsUrlConnection
       2: invokestatic  #30                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #9                  // Field LOG:Lorg/slf4j/Logger;
       8: return
}
