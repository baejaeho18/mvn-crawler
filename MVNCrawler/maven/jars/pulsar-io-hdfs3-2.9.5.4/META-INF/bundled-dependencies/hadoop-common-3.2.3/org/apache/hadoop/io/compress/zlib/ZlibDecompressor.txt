Compiled from "ZlibDecompressor.java"
public class org.apache.hadoop.io.compress.zlib.ZlibDecompressor implements org.apache.hadoop.io.compress.Decompressor {
  private static final int DEFAULT_DIRECT_BUFFER_SIZE;

  private long stream;

  private org.apache.hadoop.io.compress.zlib.ZlibDecompressor$CompressionHeader header;

  private int directBufferSize;

  private java.nio.Buffer compressedDirectBuf;

  private int compressedDirectBufOff;

  private int compressedDirectBufLen;

  private java.nio.Buffer uncompressedDirectBuf;

  private byte[] userBuf;

  private int userBufOff;

  private int userBufLen;

  private boolean finished;

  private boolean needDict;

  private static boolean nativeZlibLoaded;

  static final boolean $assertionsDisabled;

  static boolean isNativeZlibLoaded();
    Code:
       0: getstatic     #1                  // Field nativeZlibLoaded:Z
       3: ireturn

  public org.apache.hadoop.io.compress.zlib.ZlibDecompressor(org.apache.hadoop.io.compress.zlib.ZlibDecompressor$CompressionHeader, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #3                  // Field compressedDirectBuf:Ljava/nio/Buffer;
       9: aload_0
      10: aconst_null
      11: putfield      #4                  // Field uncompressedDirectBuf:Ljava/nio/Buffer;
      14: aload_0
      15: aconst_null
      16: putfield      #5                  // Field userBuf:[B
      19: aload_0
      20: iconst_0
      21: putfield      #6                  // Field userBufOff:I
      24: aload_0
      25: iconst_0
      26: putfield      #7                  // Field userBufLen:I
      29: aload_0
      30: aload_1
      31: putfield      #8                  // Field header:Lorg/apache/hadoop/io/compress/zlib/ZlibDecompressor$CompressionHeader;
      34: aload_0
      35: iload_2
      36: putfield      #9                  // Field directBufferSize:I
      39: aload_0
      40: iload_2
      41: invokestatic  #10                 // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
      44: putfield      #3                  // Field compressedDirectBuf:Ljava/nio/Buffer;
      47: aload_0
      48: iload_2
      49: invokestatic  #10                 // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
      52: putfield      #4                  // Field uncompressedDirectBuf:Ljava/nio/Buffer;
      55: aload_0
      56: getfield      #4                  // Field uncompressedDirectBuf:Ljava/nio/Buffer;
      59: iload_2
      60: invokevirtual #11                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      63: pop
      64: aload_0
      65: aload_0
      66: getfield      #8                  // Field header:Lorg/apache/hadoop/io/compress/zlib/ZlibDecompressor$CompressionHeader;
      69: invokevirtual #12                 // Method org/apache/hadoop/io/compress/zlib/ZlibDecompressor$CompressionHeader.windowBits:()I
      72: invokestatic  #13                 // Method init:(I)J
      75: putfield      #14                 // Field stream:J
      78: return

  public org.apache.hadoop.io.compress.zlib.ZlibDecompressor();
    Code:
       0: aload_0
       1: getstatic     #15                 // Field org/apache/hadoop/io/compress/zlib/ZlibDecompressor$CompressionHeader.DEFAULT_HEADER:Lorg/apache/hadoop/io/compress/zlib/ZlibDecompressor$CompressionHeader;
       4: ldc           #17                 // int 65536
       6: invokespecial #18                 // Method "<init>":(Lorg/apache/hadoop/io/compress/zlib/ZlibDecompressor$CompressionHeader;I)V
       9: return

  public void setInput(byte[], int, int);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #19                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #20                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: iload_2
      13: iflt          28
      16: iload_3
      17: iflt          28
      20: iload_2
      21: aload_1
      22: arraylength
      23: iload_3
      24: isub
      25: if_icmple     36
      28: new           #21                 // class java/lang/ArrayIndexOutOfBoundsException
      31: dup
      32: invokespecial #22                 // Method java/lang/ArrayIndexOutOfBoundsException."<init>":()V
      35: athrow
      36: aload_0
      37: aload_1
      38: putfield      #5                  // Field userBuf:[B
      41: aload_0
      42: iload_2
      43: putfield      #6                  // Field userBufOff:I
      46: aload_0
      47: iload_3
      48: putfield      #7                  // Field userBufLen:I
      51: aload_0
      52: invokevirtual #23                 // Method setInputFromSavedData:()V
      55: aload_0
      56: getfield      #4                  // Field uncompressedDirectBuf:Ljava/nio/Buffer;
      59: aload_0
      60: getfield      #9                  // Field directBufferSize:I
      63: invokevirtual #24                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      66: pop
      67: aload_0
      68: getfield      #4                  // Field uncompressedDirectBuf:Ljava/nio/Buffer;
      71: aload_0
      72: getfield      #9                  // Field directBufferSize:I
      75: invokevirtual #11                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      78: pop
      79: return

  void setInputFromSavedData();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #25                 // Field compressedDirectBufOff:I
       5: aload_0
       6: aload_0
       7: getfield      #7                  // Field userBufLen:I
      10: putfield      #26                 // Field compressedDirectBufLen:I
      13: aload_0
      14: getfield      #26                 // Field compressedDirectBufLen:I
      17: aload_0
      18: getfield      #9                  // Field directBufferSize:I
      21: if_icmple     32
      24: aload_0
      25: aload_0
      26: getfield      #9                  // Field directBufferSize:I
      29: putfield      #26                 // Field compressedDirectBufLen:I
      32: aload_0
      33: getfield      #3                  // Field compressedDirectBuf:Ljava/nio/Buffer;
      36: invokevirtual #27                 // Method java/nio/Buffer.rewind:()Ljava/nio/Buffer;
      39: pop
      40: aload_0
      41: getfield      #3                  // Field compressedDirectBuf:Ljava/nio/Buffer;
      44: checkcast     #28                 // class java/nio/ByteBuffer
      47: aload_0
      48: getfield      #5                  // Field userBuf:[B
      51: aload_0
      52: getfield      #6                  // Field userBufOff:I
      55: aload_0
      56: getfield      #26                 // Field compressedDirectBufLen:I
      59: invokevirtual #29                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      62: pop
      63: aload_0
      64: dup
      65: getfield      #6                  // Field userBufOff:I
      68: aload_0
      69: getfield      #26                 // Field compressedDirectBufLen:I
      72: iadd
      73: putfield      #6                  // Field userBufOff:I
      76: aload_0
      77: dup
      78: getfield      #7                  // Field userBufLen:I
      81: aload_0
      82: getfield      #26                 // Field compressedDirectBufLen:I
      85: isub
      86: putfield      #7                  // Field userBufLen:I
      89: return

  public void setDictionary(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #14                 // Field stream:J
       4: lconst_0
       5: lcmp
       6: ifeq          13
       9: aload_1
      10: ifnonnull     21
      13: new           #19                 // class java/lang/NullPointerException
      16: dup
      17: invokespecial #20                 // Method java/lang/NullPointerException."<init>":()V
      20: athrow
      21: iload_2
      22: iflt          37
      25: iload_3
      26: iflt          37
      29: iload_2
      30: aload_1
      31: arraylength
      32: iload_3
      33: isub
      34: if_icmple     45
      37: new           #21                 // class java/lang/ArrayIndexOutOfBoundsException
      40: dup
      41: invokespecial #22                 // Method java/lang/ArrayIndexOutOfBoundsException."<init>":()V
      44: athrow
      45: aload_0
      46: getfield      #14                 // Field stream:J
      49: aload_1
      50: iload_2
      51: iload_3
      52: invokestatic  #30                 // Method setDictionary:(J[BII)V
      55: aload_0
      56: iconst_0
      57: putfield      #31                 // Field needDict:Z
      60: return

  public boolean needsInput();
    Code:
       0: aload_0
       1: getfield      #4                  // Field uncompressedDirectBuf:Ljava/nio/Buffer;
       4: invokevirtual #32                 // Method java/nio/Buffer.remaining:()I
       7: ifle          12
      10: iconst_0
      11: ireturn
      12: aload_0
      13: getfield      #26                 // Field compressedDirectBufLen:I
      16: ifgt          32
      19: aload_0
      20: getfield      #7                  // Field userBufLen:I
      23: ifgt          28
      26: iconst_1
      27: ireturn
      28: aload_0
      29: invokevirtual #23                 // Method setInputFromSavedData:()V
      32: iconst_0
      33: ireturn

  public boolean needsDictionary();
    Code:
       0: aload_0
       1: getfield      #31                 // Field needDict:Z
       4: ireturn

  public boolean finished();
    Code:
       0: aload_0
       1: getfield      #33                 // Field finished:Z
       4: ifeq          21
       7: aload_0
       8: getfield      #4                  // Field uncompressedDirectBuf:Ljava/nio/Buffer;
      11: invokevirtual #32                 // Method java/nio/Buffer.remaining:()I
      14: ifne          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public int decompress(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #19                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #20                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: iload_2
      13: iflt          28
      16: iload_3
      17: iflt          28
      20: iload_2
      21: aload_1
      22: arraylength
      23: iload_3
      24: isub
      25: if_icmple     36
      28: new           #21                 // class java/lang/ArrayIndexOutOfBoundsException
      31: dup
      32: invokespecial #22                 // Method java/lang/ArrayIndexOutOfBoundsException."<init>":()V
      35: athrow
      36: iconst_0
      37: istore        4
      39: aload_0
      40: getfield      #4                  // Field uncompressedDirectBuf:Ljava/nio/Buffer;
      43: invokevirtual #32                 // Method java/nio/Buffer.remaining:()I
      46: istore        4
      48: iload         4
      50: ifle          79
      53: iload         4
      55: iload_3
      56: invokestatic  #34                 // Method java/lang/Math.min:(II)I
      59: istore        4
      61: aload_0
      62: getfield      #4                  // Field uncompressedDirectBuf:Ljava/nio/Buffer;
      65: checkcast     #28                 // class java/nio/ByteBuffer
      68: aload_1
      69: iload_2
      70: iload         4
      72: invokevirtual #35                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
      75: pop
      76: iload         4
      78: ireturn
      79: aload_0
      80: getfield      #4                  // Field uncompressedDirectBuf:Ljava/nio/Buffer;
      83: invokevirtual #27                 // Method java/nio/Buffer.rewind:()Ljava/nio/Buffer;
      86: pop
      87: aload_0
      88: getfield      #4                  // Field uncompressedDirectBuf:Ljava/nio/Buffer;
      91: aload_0
      92: getfield      #9                  // Field directBufferSize:I
      95: invokevirtual #24                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      98: pop
      99: aload_0
     100: invokespecial #36                 // Method inflateBytesDirect:()I
     103: istore        4
     105: aload_0
     106: getfield      #4                  // Field uncompressedDirectBuf:Ljava/nio/Buffer;
     109: iload         4
     111: invokevirtual #24                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
     114: pop
     115: iload         4
     117: iload_3
     118: invokestatic  #34                 // Method java/lang/Math.min:(II)I
     121: istore        4
     123: aload_0
     124: getfield      #4                  // Field uncompressedDirectBuf:Ljava/nio/Buffer;
     127: checkcast     #28                 // class java/nio/ByteBuffer
     130: aload_1
     131: iload_2
     132: iload         4
     134: invokevirtual #35                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
     137: pop
     138: iload         4
     140: ireturn

  public long getBytesWritten();
    Code:
       0: aload_0
       1: invokespecial #37                 // Method checkStream:()V
       4: aload_0
       5: getfield      #14                 // Field stream:J
       8: invokestatic  #38                 // Method getBytesWritten:(J)J
      11: lreturn

  public long getBytesRead();
    Code:
       0: aload_0
       1: invokespecial #37                 // Method checkStream:()V
       4: aload_0
       5: getfield      #14                 // Field stream:J
       8: invokestatic  #39                 // Method getBytesRead:(J)J
      11: lreturn

  public int getRemaining();
    Code:
       0: aload_0
       1: invokespecial #37                 // Method checkStream:()V
       4: aload_0
       5: getfield      #7                  // Field userBufLen:I
       8: aload_0
       9: getfield      #14                 // Field stream:J
      12: invokestatic  #40                 // Method getRemaining:(J)I
      15: iadd
      16: ireturn

  public void reset();
    Code:
       0: aload_0
       1: invokespecial #37                 // Method checkStream:()V
       4: aload_0
       5: getfield      #14                 // Field stream:J
       8: invokestatic  #41                 // Method reset:(J)V
      11: aload_0
      12: iconst_0
      13: putfield      #33                 // Field finished:Z
      16: aload_0
      17: iconst_0
      18: putfield      #31                 // Field needDict:Z
      21: aload_0
      22: aload_0
      23: iconst_0
      24: dup_x1
      25: putfield      #26                 // Field compressedDirectBufLen:I
      28: putfield      #25                 // Field compressedDirectBufOff:I
      31: aload_0
      32: getfield      #4                  // Field uncompressedDirectBuf:Ljava/nio/Buffer;
      35: aload_0
      36: getfield      #9                  // Field directBufferSize:I
      39: invokevirtual #24                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      42: pop
      43: aload_0
      44: getfield      #4                  // Field uncompressedDirectBuf:Ljava/nio/Buffer;
      47: aload_0
      48: getfield      #9                  // Field directBufferSize:I
      51: invokevirtual #11                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      54: pop
      55: aload_0
      56: aload_0
      57: iconst_0
      58: dup_x1
      59: putfield      #7                  // Field userBufLen:I
      62: putfield      #6                  // Field userBufOff:I
      65: return

  public void end();
    Code:
       0: aload_0
       1: getfield      #14                 // Field stream:J
       4: lconst_0
       5: lcmp
       6: ifeq          21
       9: aload_0
      10: getfield      #14                 // Field stream:J
      13: invokestatic  #42                 // Method end:(J)V
      16: aload_0
      17: lconst_0
      18: putfield      #14                 // Field stream:J
      21: return

  protected void finalize();
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method end:()V
       4: return

  private void checkStream();
    Code:
       0: aload_0
       1: getfield      #14                 // Field stream:J
       4: lconst_0
       5: lcmp
       6: ifne          17
       9: new           #19                 // class java/lang/NullPointerException
      12: dup
      13: invokespecial #20                 // Method java/lang/NullPointerException."<init>":()V
      16: athrow
      17: return

  private static native void initIDs();

  private static native long init(int);

  private static native void setDictionary(long, byte[], int, int);

  private native int inflateBytesDirect();

  private static native long getBytesRead(long);

  private static native long getBytesWritten(long);

  private static native int getRemaining(long);

  private static native void reset(long);

  private static native void end(long);

  int inflateDirect(java.nio.ByteBuffer, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: getstatic     #44                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: instanceof    #45                 // class org/apache/hadoop/io/compress/zlib/ZlibDecompressor$ZlibDirectDecompressor
      10: ifne          21
      13: new           #46                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #47                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_2
      22: astore_3
      23: aload_2
      24: invokevirtual #48                 // Method java/nio/ByteBuffer.position:()I
      27: ifle          37
      30: aload_2
      31: astore_3
      32: aload_2
      33: invokevirtual #49                 // Method java/nio/ByteBuffer.slice:()Ljava/nio/ByteBuffer;
      36: astore_2
      37: aload_0
      38: getfield      #3                  // Field compressedDirectBuf:Ljava/nio/Buffer;
      41: astore        4
      43: aload_0
      44: getfield      #4                  // Field uncompressedDirectBuf:Ljava/nio/Buffer;
      47: astore        5
      49: aload_0
      50: getfield      #9                  // Field directBufferSize:I
      53: istore        6
      55: aload_0
      56: aload_1
      57: putfield      #3                  // Field compressedDirectBuf:Ljava/nio/Buffer;
      60: aload_0
      61: aload_1
      62: invokevirtual #48                 // Method java/nio/ByteBuffer.position:()I
      65: putfield      #25                 // Field compressedDirectBufOff:I
      68: aload_0
      69: aload_1
      70: invokevirtual #50                 // Method java/nio/ByteBuffer.remaining:()I
      73: putfield      #26                 // Field compressedDirectBufLen:I
      76: aload_0
      77: aload_2
      78: putfield      #4                  // Field uncompressedDirectBuf:Ljava/nio/Buffer;
      81: aload_0
      82: aload_2
      83: invokevirtual #50                 // Method java/nio/ByteBuffer.remaining:()I
      86: putfield      #9                  // Field directBufferSize:I
      89: iconst_0
      90: istore        7
      92: aload_0
      93: invokespecial #36                 // Method inflateBytesDirect:()I
      96: istore        7
      98: aload_3
      99: aload_3
     100: invokevirtual #48                 // Method java/nio/ByteBuffer.position:()I
     103: iload         7
     105: iadd
     106: invokevirtual #51                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     109: pop
     110: aload_0
     111: getfield      #26                 // Field compressedDirectBufLen:I
     114: ifle          129
     117: aload_1
     118: aload_0
     119: getfield      #25                 // Field compressedDirectBufOff:I
     122: invokevirtual #51                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     125: pop
     126: goto          138
     129: aload_1
     130: aload_1
     131: invokevirtual #52                 // Method java/nio/ByteBuffer.limit:()I
     134: invokevirtual #51                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     137: pop
     138: aload_0
     139: aload         4
     141: putfield      #3                  // Field compressedDirectBuf:Ljava/nio/Buffer;
     144: aload_0
     145: aload         5
     147: putfield      #4                  // Field uncompressedDirectBuf:Ljava/nio/Buffer;
     150: aload_0
     151: iconst_0
     152: putfield      #25                 // Field compressedDirectBufOff:I
     155: aload_0
     156: iconst_0
     157: putfield      #26                 // Field compressedDirectBufLen:I
     160: aload_0
     161: iload         6
     163: putfield      #9                  // Field directBufferSize:I
     166: goto          202
     169: astore        8
     171: aload_0
     172: aload         4
     174: putfield      #3                  // Field compressedDirectBuf:Ljava/nio/Buffer;
     177: aload_0
     178: aload         5
     180: putfield      #4                  // Field uncompressedDirectBuf:Ljava/nio/Buffer;
     183: aload_0
     184: iconst_0
     185: putfield      #25                 // Field compressedDirectBufOff:I
     188: aload_0
     189: iconst_0
     190: putfield      #26                 // Field compressedDirectBufLen:I
     193: aload_0
     194: iload         6
     196: putfield      #9                  // Field directBufferSize:I
     199: aload         8
     201: athrow
     202: iload         7
     204: ireturn
    Exception table:
       from    to  target type
          92   138   169   any
         169   171   169   any

  static {};
    Code:
       0: ldc           #16                 // class org/apache/hadoop/io/compress/zlib/ZlibDecompressor
       2: invokevirtual #53                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #44                 // Field $assertionsDisabled:Z
      16: iconst_0
      17: putstatic     #1                  // Field nativeZlibLoaded:Z
      20: invokestatic  #54                 // Method org/apache/hadoop/util/NativeCodeLoader.isNativeCodeLoaded:()Z
      23: ifeq          37
      26: invokestatic  #55                 // Method initIDs:()V
      29: iconst_1
      30: putstatic     #1                  // Field nativeZlibLoaded:Z
      33: goto          37
      36: astore_0
      37: return
    Exception table:
       from    to  target type
          26    33    36   Class java/lang/Throwable
}
