Compiled from "ViewFs.java"
public class org.apache.hadoop.fs.viewfs.ViewFs extends org.apache.hadoop.fs.AbstractFileSystem {
  static final org.slf4j.Logger LOG;

  final long creationTime;

  final org.apache.hadoop.security.UserGroupInformation ugi;

  final org.apache.hadoop.conf.Configuration config;

  org.apache.hadoop.fs.viewfs.InodeTree<org.apache.hadoop.fs.AbstractFileSystem> fsState;

  org.apache.hadoop.fs.Path homeDir;

  private org.apache.hadoop.fs.viewfs.ViewFileSystem$RenameStrategy renameStrategy;

  private static boolean showMountLinksAsSymlinks;

  static final boolean $assertionsDisabled;

  static org.apache.hadoop.security.AccessControlException readOnlyMountTable(java.lang.String, java.lang.String);
    Code:
       0: new           #3                  // class org/apache/hadoop/security/AccessControlException
       3: dup
       4: new           #4                  // class java/lang/StringBuilder
       7: dup
       8: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #6                  // String InternalDir of ViewFileSystem is readonly; operation=
      13: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: ldc           #8                  // String Path=
      22: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_1
      26: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokespecial #10                 // Method org/apache/hadoop/security/AccessControlException."<init>":(Ljava/lang/String;)V
      35: areturn

  static org.apache.hadoop.security.AccessControlException readOnlyMountTable(java.lang.String, org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
       5: invokestatic  #12                 // Method readOnlyMountTable:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/security/AccessControlException;
       8: areturn

  java.lang.String getType();
    Code:
       0: ldc           #14                 // String viewfs
       2: areturn

  public org.apache.hadoop.fs.viewfs.ViewFs(org.apache.hadoop.conf.Configuration) throws java.io.IOException, java.net.URISyntaxException;
    Code:
       0: aload_0
       1: getstatic     #15                 // Field org/apache/hadoop/fs/FsConstants.VIEWFS_URI:Ljava/net/URI;
       4: aload_1
       5: invokespecial #16                 // Method "<init>":(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V
       8: return

  org.apache.hadoop.fs.viewfs.ViewFs(java.net.URI, org.apache.hadoop.conf.Configuration) throws java.io.IOException, java.net.URISyntaxException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #14                 // String viewfs
       4: iconst_0
       5: iconst_m1
       6: invokespecial #17                 // Method org/apache/hadoop/fs/AbstractFileSystem."<init>":(Ljava/net/URI;Ljava/lang/String;ZI)V
       9: aload_0
      10: aconst_null
      11: putfield      #18                 // Field homeDir:Lorg/apache/hadoop/fs/Path;
      14: aload_0
      15: getstatic     #19                 // Field org/apache/hadoop/fs/viewfs/ViewFileSystem$RenameStrategy.SAME_MOUNTPOINT:Lorg/apache/hadoop/fs/viewfs/ViewFileSystem$RenameStrategy;
      18: putfield      #20                 // Field renameStrategy:Lorg/apache/hadoop/fs/viewfs/ViewFileSystem$RenameStrategy;
      21: aload_0
      22: invokestatic  #21                 // Method org/apache/hadoop/util/Time.now:()J
      25: putfield      #22                 // Field creationTime:J
      28: aload_0
      29: invokestatic  #23                 // Method org/apache/hadoop/security/UserGroupInformation.getCurrentUser:()Lorg/apache/hadoop/security/UserGroupInformation;
      32: putfield      #24                 // Field ugi:Lorg/apache/hadoop/security/UserGroupInformation;
      35: aload_0
      36: aload_2
      37: putfield      #25                 // Field config:Lorg/apache/hadoop/conf/Configuration;
      40: aload_0
      41: getfield      #25                 // Field config:Lorg/apache/hadoop/conf/Configuration;
      44: ldc           #26                 // String fs.viewfs.mount.links.as.symlinks
      46: iconst_1
      47: invokevirtual #27                 // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
      50: putstatic     #2                  // Field showMountLinksAsSymlinks:Z
      53: aload_1
      54: invokevirtual #28                 // Method java/net/URI.getAuthority:()Ljava/lang/String;
      57: astore_3
      58: ldc           #14                 // String viewfs
      60: aload_0
      61: invokevirtual #29                 // Method getType:()Ljava/lang/String;
      64: invokevirtual #30                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      67: ifne          74
      70: iconst_1
      71: goto          75
      74: iconst_0
      75: istore        4
      77: aload_0
      78: new           #31                 // class org/apache/hadoop/fs/viewfs/ViewFs$1
      81: dup
      82: aload_0
      83: aload_2
      84: aload_3
      85: aload_1
      86: iload         4
      88: invokespecial #32                 // Method org/apache/hadoop/fs/viewfs/ViewFs$1."<init>":(Lorg/apache/hadoop/fs/viewfs/ViewFs;Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/net/URI;Z)V
      91: putfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
      94: aload_0
      95: aload_2
      96: ldc           #34                 // String fs.viewfs.rename.strategy
      98: getstatic     #19                 // Field org/apache/hadoop/fs/viewfs/ViewFileSystem$RenameStrategy.SAME_MOUNTPOINT:Lorg/apache/hadoop/fs/viewfs/ViewFileSystem$RenameStrategy;
     101: invokevirtual #35                 // Method org/apache/hadoop/fs/viewfs/ViewFileSystem$RenameStrategy.toString:()Ljava/lang/String;
     104: invokevirtual #36                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     107: invokestatic  #37                 // Method org/apache/hadoop/fs/viewfs/ViewFileSystem$RenameStrategy.valueOf:(Ljava/lang/String;)Lorg/apache/hadoop/fs/viewfs/ViewFileSystem$RenameStrategy;
     110: putfield      #20                 // Field renameStrategy:Lorg/apache/hadoop/fs/viewfs/ViewFileSystem$RenameStrategy;
     113: return

  public org.apache.hadoop.fs.FsServerDefaults getServerDefaults() throws java.io.IOException;
    Code:
       0: invokestatic  #38                 // Method org/apache/hadoop/fs/local/LocalConfigKeys.getServerDefaults:()Lorg/apache/hadoop/fs/FsServerDefaults;
       3: areturn

  public org.apache.hadoop.fs.FsServerDefaults getServerDefaults(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #39                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #40                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_2
      14: goto          22
      17: astore_3
      18: invokestatic  #38                 // Method org/apache/hadoop/fs/local/LocalConfigKeys.getServerDefaults:()Lorg/apache/hadoop/fs/FsServerDefaults;
      21: areturn
      22: aload_2
      23: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      26: checkcast     #43                 // class org/apache/hadoop/fs/AbstractFileSystem
      29: aload_2
      30: getfield      #44                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      33: invokevirtual #45                 // Method org/apache/hadoop/fs/AbstractFileSystem.getServerDefaults:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FsServerDefaults;
      36: areturn
    Exception table:
       from    to  target type
           0    14    17   Class java/io/FileNotFoundException

  public int getUriDefaultPort();
    Code:
       0: iconst_m1
       1: ireturn

  public org.apache.hadoop.fs.Path getHomeDirectory();
    Code:
       0: aload_0
       1: getfield      #18                 // Field homeDir:Lorg/apache/hadoop/fs/Path;
       4: ifnonnull     113
       7: aload_0
       8: getfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
      11: invokevirtual #46                 // Method org/apache/hadoop/fs/viewfs/InodeTree.getHomeDirPrefixValue:()Ljava/lang/String;
      14: astore_1
      15: aload_1
      16: ifnonnull     22
      19: ldc           #47                 // String /user
      21: astore_1
      22: aload_0
      23: aload_1
      24: ldc           #48                 // String /
      26: invokevirtual #30                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      29: ifeq          70
      32: aload_0
      33: new           #49                 // class org/apache/hadoop/fs/Path
      36: dup
      37: new           #4                  // class java/lang/StringBuilder
      40: dup
      41: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      44: aload_1
      45: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #24                 // Field ugi:Lorg/apache/hadoop/security/UserGroupInformation;
      52: invokevirtual #50                 // Method org/apache/hadoop/security/UserGroupInformation.getShortUserName:()Ljava/lang/String;
      55: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: invokespecial #51                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      64: invokevirtual #52                 // Method makeQualified:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      67: goto          110
      70: aload_0
      71: new           #49                 // class org/apache/hadoop/fs/Path
      74: dup
      75: new           #4                  // class java/lang/StringBuilder
      78: dup
      79: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      82: aload_1
      83: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: ldc           #48                 // String /
      88: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: aload_0
      92: getfield      #24                 // Field ugi:Lorg/apache/hadoop/security/UserGroupInformation;
      95: invokevirtual #50                 // Method org/apache/hadoop/security/UserGroupInformation.getShortUserName:()Ljava/lang/String;
      98: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     104: invokespecial #51                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
     107: invokevirtual #52                 // Method makeQualified:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
     110: putfield      #18                 // Field homeDir:Lorg/apache/hadoop/fs/Path;
     113: aload_0
     114: getfield      #18                 // Field homeDir:Lorg/apache/hadoop/fs/Path;
     117: areturn

  public org.apache.hadoop.fs.Path resolvePath(org.apache.hadoop.fs.Path) throws java.io.FileNotFoundException, org.apache.hadoop.security.AccessControlException, org.apache.hadoop.fs.UnresolvedLinkException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #39                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #40                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_2
      14: aload_2
      15: invokevirtual #53                 // Method org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.isInternalDir:()Z
      18: ifeq          23
      21: aload_1
      22: areturn
      23: aload_2
      24: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      27: checkcast     #43                 // class org/apache/hadoop/fs/AbstractFileSystem
      30: aload_2
      31: getfield      #44                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      34: invokevirtual #54                 // Method org/apache/hadoop/fs/AbstractFileSystem.resolvePath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      37: areturn

  public org.apache.hadoop.fs.FSDataOutputStream createInternal(org.apache.hadoop.fs.Path, java.util.EnumSet<org.apache.hadoop.fs.CreateFlag>, org.apache.hadoop.fs.permission.FsPermission, int, short, long, org.apache.hadoop.util.Progressable, org.apache.hadoop.fs.Options$ChecksumOpt, boolean) throws org.apache.hadoop.security.AccessControlException, org.apache.hadoop.fs.FileAlreadyExistsException, java.io.FileNotFoundException, org.apache.hadoop.fs.ParentNotDirectoryException, org.apache.hadoop.fs.UnsupportedFileSystemException, org.apache.hadoop.fs.UnresolvedLinkException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #39                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_0
      10: invokevirtual #40                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore        11
      15: goto          35
      18: astore        12
      20: iload         10
      22: ifeq          32
      25: ldc           #55                 // String create
      27: aload_1
      28: invokestatic  #56                 // Method readOnlyMountTable:(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/security/AccessControlException;
      31: athrow
      32: aload         12
      34: athrow
      35: getstatic     #57                 // Field $assertionsDisabled:Z
      38: ifne          57
      41: aload         11
      43: getfield      #44                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      46: ifnonnull     57
      49: new           #58                 // class java/lang/AssertionError
      52: dup
      53: invokespecial #59                 // Method java/lang/AssertionError."<init>":()V
      56: athrow
      57: aload         11
      59: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      62: checkcast     #43                 // class org/apache/hadoop/fs/AbstractFileSystem
      65: aload         11
      67: getfield      #44                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      70: aload_2
      71: aload_3
      72: iload         4
      74: iload         5
      76: lload         6
      78: aload         8
      80: aload         9
      82: iload         10
      84: invokevirtual #60                 // Method org/apache/hadoop/fs/AbstractFileSystem.createInternal:(Lorg/apache/hadoop/fs/Path;Ljava/util/EnumSet;Lorg/apache/hadoop/fs/permission/FsPermission;ISJLorg/apache/hadoop/util/Progressable;Lorg/apache/hadoop/fs/Options$ChecksumOpt;Z)Lorg/apache/hadoop/fs/FSDataOutputStream;
      87: areturn
    Exception table:
       from    to  target type
           0    15    18   Class java/io/FileNotFoundException

  public boolean delete(org.apache.hadoop.fs.Path, boolean) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnresolvedLinkException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #39                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #40                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_3
      14: aload_3
      15: invokevirtual #53                 // Method org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.isInternalDir:()Z
      18: ifne          31
      21: aload_3
      22: getfield      #44                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: getstatic     #61                 // Field org/apache/hadoop/fs/viewfs/InodeTree.SlashPath:Lorg/apache/hadoop/fs/Path;
      28: if_acmpne     58
      31: new           #3                  // class org/apache/hadoop/security/AccessControlException
      34: dup
      35: new           #4                  // class java/lang/StringBuilder
      38: dup
      39: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      42: ldc           #62                 // String Cannot delete internal mount table directory:
      44: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: aload_1
      48: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      51: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: invokespecial #10                 // Method org/apache/hadoop/security/AccessControlException."<init>":(Ljava/lang/String;)V
      57: athrow
      58: aload_3
      59: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      62: checkcast     #43                 // class org/apache/hadoop/fs/AbstractFileSystem
      65: aload_3
      66: getfield      #44                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      69: iload_2
      70: invokevirtual #64                 // Method org/apache/hadoop/fs/AbstractFileSystem.delete:(Lorg/apache/hadoop/fs/Path;Z)Z
      73: ireturn

  public org.apache.hadoop.fs.BlockLocation[] getFileBlockLocations(org.apache.hadoop.fs.Path, long, long) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnresolvedLinkException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #39                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #40                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore        6
      15: aload         6
      17: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      20: checkcast     #43                 // class org/apache/hadoop/fs/AbstractFileSystem
      23: aload         6
      25: getfield      #44                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      28: lload_2
      29: lload         4
      31: invokevirtual #65                 // Method org/apache/hadoop/fs/AbstractFileSystem.getFileBlockLocations:(Lorg/apache/hadoop/fs/Path;JJ)[Lorg/apache/hadoop/fs/BlockLocation;
      34: areturn

  public org.apache.hadoop.fs.FileChecksum getFileChecksum(org.apache.hadoop.fs.Path) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnresolvedLinkException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #39                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #40                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_2
      14: aload_2
      15: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #43                 // class org/apache/hadoop/fs/AbstractFileSystem
      21: aload_2
      22: getfield      #44                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: invokevirtual #66                 // Method org/apache/hadoop/fs/AbstractFileSystem.getFileChecksum:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileChecksum;
      28: areturn

  public org.apache.hadoop.fs.FileStatus getFileStatus(org.apache.hadoop.fs.Path) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnresolvedLinkException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #39                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #40                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_2
      14: aload_2
      15: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #43                 // class org/apache/hadoop/fs/AbstractFileSystem
      21: aload_2
      22: getfield      #44                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: invokevirtual #67                 // Method org/apache/hadoop/fs/AbstractFileSystem.getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      28: astore_3
      29: new           #68                 // class org/apache/hadoop/fs/viewfs/ViewFsFileStatus
      32: dup
      33: aload_3
      34: aload_0
      35: aload_1
      36: invokevirtual #52                 // Method makeQualified:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      39: invokespecial #69                 // Method org/apache/hadoop/fs/viewfs/ViewFsFileStatus."<init>":(Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/fs/Path;)V
      42: areturn

  public void access(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsAction) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnresolvedLinkException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #39                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #40                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_3
      14: aload_3
      15: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #43                 // class org/apache/hadoop/fs/AbstractFileSystem
      21: aload_3
      22: getfield      #44                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: aload_2
      26: invokevirtual #70                 // Method org/apache/hadoop/fs/AbstractFileSystem.access:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsAction;)V
      29: return

  public org.apache.hadoop.fs.FileStatus getFileLinkStatus(org.apache.hadoop.fs.Path) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnsupportedFileSystemException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #39                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_0
      10: invokevirtual #40                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_2
      14: aload_2
      15: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #43                 // class org/apache/hadoop/fs/AbstractFileSystem
      21: aload_2
      22: getfield      #44                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: invokevirtual #71                 // Method org/apache/hadoop/fs/AbstractFileSystem.getFileLinkStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      28: areturn

  public org.apache.hadoop.fs.FsStatus getFsStatus() throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, java.io.IOException;
    Code:
       0: new           #72                 // class org/apache/hadoop/fs/FsStatus
       3: dup
       4: lconst_0
       5: lconst_0
       6: lconst_0
       7: invokespecial #73                 // Method org/apache/hadoop/fs/FsStatus."<init>":(JJJ)V
      10: areturn

  public org.apache.hadoop.fs.RemoteIterator<org.apache.hadoop.fs.FileStatus> listStatusIterator(org.apache.hadoop.fs.Path) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnresolvedLinkException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #39                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #40                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_2
      14: aload_2
      15: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #43                 // class org/apache/hadoop/fs/AbstractFileSystem
      21: aload_2
      22: getfield      #44                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: invokevirtual #74                 // Method org/apache/hadoop/fs/AbstractFileSystem.listStatusIterator:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/RemoteIterator;
      28: astore_3
      29: aload_2
      30: invokevirtual #53                 // Method org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.isInternalDir:()Z
      33: ifeq          38
      36: aload_3
      37: areturn
      38: new           #75                 // class org/apache/hadoop/fs/viewfs/ViewFs$2
      41: dup
      42: aload_0
      43: aload_2
      44: aload_3
      45: aload_1
      46: invokespecial #76                 // Method org/apache/hadoop/fs/viewfs/ViewFs$2."<init>":(Lorg/apache/hadoop/fs/viewfs/ViewFs;Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;Lorg/apache/hadoop/fs/RemoteIterator;Lorg/apache/hadoop/fs/Path;)V
      49: areturn

  public org.apache.hadoop.fs.RemoteIterator<org.apache.hadoop.fs.LocatedFileStatus> listLocatedStatus(org.apache.hadoop.fs.Path) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnresolvedLinkException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #39                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #40                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_2
      14: aload_2
      15: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #43                 // class org/apache/hadoop/fs/AbstractFileSystem
      21: aload_2
      22: getfield      #44                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: invokevirtual #77                 // Method org/apache/hadoop/fs/AbstractFileSystem.listLocatedStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/RemoteIterator;
      28: astore_3
      29: aload_2
      30: invokevirtual #53                 // Method org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.isInternalDir:()Z
      33: ifeq          38
      36: aload_3
      37: areturn
      38: new           #78                 // class org/apache/hadoop/fs/viewfs/ViewFs$3
      41: dup
      42: aload_0
      43: aload_2
      44: aload_3
      45: aload_1
      46: invokespecial #79                 // Method org/apache/hadoop/fs/viewfs/ViewFs$3."<init>":(Lorg/apache/hadoop/fs/viewfs/ViewFs;Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;Lorg/apache/hadoop/fs/RemoteIterator;Lorg/apache/hadoop/fs/Path;)V
      49: areturn

  public org.apache.hadoop.fs.FileStatus[] listStatus(org.apache.hadoop.fs.Path) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnresolvedLinkException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #39                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #40                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_2
      14: aload_2
      15: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #43                 // class org/apache/hadoop/fs/AbstractFileSystem
      21: aload_2
      22: getfield      #44                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: invokevirtual #80                 // Method org/apache/hadoop/fs/AbstractFileSystem.listStatus:(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
      28: astore_3
      29: aload_2
      30: invokevirtual #53                 // Method org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.isInternalDir:()Z
      33: ifne          136
      36: aload_2
      37: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      40: checkcast     #81                 // class org/apache/hadoop/fs/viewfs/ChRootedFs
      43: astore        4
      45: iconst_0
      46: istore        5
      48: aload_3
      49: astore        6
      51: aload         6
      53: arraylength
      54: istore        7
      56: iconst_0
      57: istore        8
      59: iload         8
      61: iload         7
      63: if_icmpge     136
      66: aload         6
      68: iload         8
      70: aaload
      71: astore        9
      73: aload         4
      75: aload         9
      77: invokevirtual #82                 // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
      80: invokevirtual #83                 // Method org/apache/hadoop/fs/viewfs/ChRootedFs.stripOutRoot:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
      83: astore        10
      85: aload_3
      86: iload         5
      88: iinc          5, 1
      91: new           #68                 // class org/apache/hadoop/fs/viewfs/ViewFsFileStatus
      94: dup
      95: aload         9
      97: aload_0
      98: aload         10
     100: invokevirtual #84                 // Method java/lang/String.length:()I
     103: ifne          110
     106: aload_1
     107: goto          123
     110: new           #49                 // class org/apache/hadoop/fs/Path
     113: dup
     114: aload_2
     115: getfield      #85                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.resolvedPath:Ljava/lang/String;
     118: aload         10
     120: invokespecial #86                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     123: invokevirtual #52                 // Method makeQualified:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
     126: invokespecial #69                 // Method org/apache/hadoop/fs/viewfs/ViewFsFileStatus."<init>":(Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/fs/Path;)V
     129: aastore
     130: iinc          8, 1
     133: goto          59
     136: aload_3
     137: areturn

  public void mkdir(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission, boolean) throws org.apache.hadoop.security.AccessControlException, org.apache.hadoop.fs.FileAlreadyExistsException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnresolvedLinkException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #39                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_0
      10: invokevirtual #40                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore        4
      15: aload         4
      17: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      20: checkcast     #43                 // class org/apache/hadoop/fs/AbstractFileSystem
      23: aload         4
      25: getfield      #44                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      28: aload_2
      29: iload_3
      30: invokevirtual #87                 // Method org/apache/hadoop/fs/AbstractFileSystem.mkdir:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;Z)V
      33: return

  public org.apache.hadoop.fs.FSDataInputStream open(org.apache.hadoop.fs.Path, int) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnresolvedLinkException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #39                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #40                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_3
      14: aload_3
      15: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #43                 // class org/apache/hadoop/fs/AbstractFileSystem
      21: aload_3
      22: getfield      #44                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: iload_2
      26: invokevirtual #88                 // Method org/apache/hadoop/fs/AbstractFileSystem.open:(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;
      29: areturn

  public boolean truncate(org.apache.hadoop.fs.Path, long) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnresolvedLinkException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #39                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #40                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore        4
      15: aload         4
      17: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      20: checkcast     #43                 // class org/apache/hadoop/fs/AbstractFileSystem
      23: aload         4
      25: getfield      #44                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      28: lload_2
      29: invokevirtual #89                 // Method org/apache/hadoop/fs/AbstractFileSystem.truncate:(Lorg/apache/hadoop/fs/Path;J)Z
      32: ireturn

  public void renameInternal(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path, boolean) throws java.io.IOException, org.apache.hadoop.fs.UnresolvedLinkException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #39                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_0
      10: invokevirtual #40                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore        4
      15: aload         4
      17: invokevirtual #53                 // Method org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.isInternalDir:()Z
      20: ifeq          55
      23: new           #3                  // class org/apache/hadoop/security/AccessControlException
      26: dup
      27: new           #4                  // class java/lang/StringBuilder
      30: dup
      31: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      34: ldc           #90                 // String Cannot Rename within internal dirs of mount table: src=
      36: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_1
      40: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: ldc           #91                 // String  is readOnly
      45: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokespecial #10                 // Method org/apache/hadoop/security/AccessControlException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: aload_0
      56: getfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
      59: aload_0
      60: aload_2
      61: invokevirtual #39                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
      64: iconst_0
      65: invokevirtual #40                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      68: astore        5
      70: aload         5
      72: invokevirtual #53                 // Method org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.isInternalDir:()Z
      75: ifeq          110
      78: new           #3                  // class org/apache/hadoop/security/AccessControlException
      81: dup
      82: new           #4                  // class java/lang/StringBuilder
      85: dup
      86: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      89: ldc           #92                 // String Cannot Rename within internal dirs of mount table: dest=
      91: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: aload_2
      95: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      98: ldc           #91                 // String  is readOnly
     100: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     106: invokespecial #10                 // Method org/apache/hadoop/security/AccessControlException."<init>":(Ljava/lang/String;)V
     109: athrow
     110: aload         4
     112: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
     115: checkcast     #43                 // class org/apache/hadoop/fs/AbstractFileSystem
     118: invokevirtual #93                 // Method org/apache/hadoop/fs/AbstractFileSystem.getUri:()Ljava/net/URI;
     121: astore        6
     123: aload         5
     125: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
     128: checkcast     #43                 // class org/apache/hadoop/fs/AbstractFileSystem
     131: invokevirtual #93                 // Method org/apache/hadoop/fs/AbstractFileSystem.getUri:()Ljava/net/URI;
     134: astore        7
     136: aload         6
     138: aload         7
     140: aload         4
     142: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
     145: aload         5
     147: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
     150: if_acmpne     157
     153: iconst_1
     154: goto          158
     157: iconst_0
     158: aload_0
     159: getfield      #20                 // Field renameStrategy:Lorg/apache/hadoop/fs/viewfs/ViewFileSystem$RenameStrategy;
     162: invokestatic  #94                 // Method org/apache/hadoop/fs/viewfs/ViewFileSystem.verifyRenameStrategy:(Ljava/net/URI;Ljava/net/URI;ZLorg/apache/hadoop/fs/viewfs/ViewFileSystem$RenameStrategy;)V
     165: aload         4
     167: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
     170: checkcast     #81                 // class org/apache/hadoop/fs/viewfs/ChRootedFs
     173: astore        8
     175: aload         5
     177: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
     180: checkcast     #81                 // class org/apache/hadoop/fs/viewfs/ChRootedFs
     183: astore        9
     185: aload         8
     187: invokevirtual #95                 // Method org/apache/hadoop/fs/viewfs/ChRootedFs.getMyFs:()Lorg/apache/hadoop/fs/AbstractFileSystem;
     190: aload         8
     192: aload         4
     194: getfield      #44                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
     197: invokevirtual #96                 // Method org/apache/hadoop/fs/viewfs/ChRootedFs.fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
     200: aload         9
     202: aload         5
     204: getfield      #44                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
     207: invokevirtual #96                 // Method org/apache/hadoop/fs/viewfs/ChRootedFs.fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
     210: iload_3
     211: invokevirtual #97                 // Method org/apache/hadoop/fs/AbstractFileSystem.renameInternal:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Z)V
     214: return

  public void renameInternal(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path) throws org.apache.hadoop.security.AccessControlException, org.apache.hadoop.fs.FileAlreadyExistsException, java.io.FileNotFoundException, org.apache.hadoop.fs.ParentNotDirectoryException, org.apache.hadoop.fs.UnresolvedLinkException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokevirtual #98                 // Method renameInternal:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Z)V
       7: return

  public boolean supportsSymlinks();
    Code:
       0: iconst_1
       1: ireturn

  public void createSymlink(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path, boolean) throws java.io.IOException, org.apache.hadoop.fs.UnresolvedLinkException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_2
       6: invokevirtual #39                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_0
      10: invokevirtual #40                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore        4
      15: goto          34
      18: astore        5
      20: iload_3
      21: ifeq          31
      24: ldc           #99                 // String createSymlink
      26: aload_2
      27: invokestatic  #56                 // Method readOnlyMountTable:(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/security/AccessControlException;
      30: athrow
      31: aload         5
      33: athrow
      34: getstatic     #57                 // Field $assertionsDisabled:Z
      37: ifne          56
      40: aload         4
      42: getfield      #44                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      45: ifnonnull     56
      48: new           #58                 // class java/lang/AssertionError
      51: dup
      52: invokespecial #59                 // Method java/lang/AssertionError."<init>":()V
      55: athrow
      56: aload         4
      58: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      61: checkcast     #43                 // class org/apache/hadoop/fs/AbstractFileSystem
      64: aload_1
      65: aload         4
      67: getfield      #44                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      70: iload_3
      71: invokevirtual #100                // Method org/apache/hadoop/fs/AbstractFileSystem.createSymlink:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Z)V
      74: return
    Exception table:
       from    to  target type
           0    15    18   Class java/io/FileNotFoundException

  public org.apache.hadoop.fs.Path getLinkTarget(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #39                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_0
      10: invokevirtual #40                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_2
      14: aload_2
      15: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #43                 // class org/apache/hadoop/fs/AbstractFileSystem
      21: aload_2
      22: getfield      #44                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: invokevirtual #101                // Method org/apache/hadoop/fs/AbstractFileSystem.getLinkTarget:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      28: areturn

  public void setOwner(org.apache.hadoop.fs.Path, java.lang.String, java.lang.String) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnresolvedLinkException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #39                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #40                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore        4
      15: aload         4
      17: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      20: checkcast     #43                 // class org/apache/hadoop/fs/AbstractFileSystem
      23: aload         4
      25: getfield      #44                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      28: aload_2
      29: aload_3
      30: invokevirtual #102                // Method org/apache/hadoop/fs/AbstractFileSystem.setOwner:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;)V
      33: return

  public void setPermission(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnresolvedLinkException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #39                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #40                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_3
      14: aload_3
      15: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #43                 // class org/apache/hadoop/fs/AbstractFileSystem
      21: aload_3
      22: getfield      #44                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: aload_2
      26: invokevirtual #103                // Method org/apache/hadoop/fs/AbstractFileSystem.setPermission:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)V
      29: return

  public boolean setReplication(org.apache.hadoop.fs.Path, short) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnresolvedLinkException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #39                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #40                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_3
      14: aload_3
      15: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #43                 // class org/apache/hadoop/fs/AbstractFileSystem
      21: aload_3
      22: getfield      #44                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: iload_2
      26: invokevirtual #104                // Method org/apache/hadoop/fs/AbstractFileSystem.setReplication:(Lorg/apache/hadoop/fs/Path;S)Z
      29: ireturn

  public void setTimes(org.apache.hadoop.fs.Path, long, long) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnresolvedLinkException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #39                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #40                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore        6
      15: aload         6
      17: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      20: checkcast     #43                 // class org/apache/hadoop/fs/AbstractFileSystem
      23: aload         6
      25: getfield      #44                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      28: lload_2
      29: lload         4
      31: invokevirtual #105                // Method org/apache/hadoop/fs/AbstractFileSystem.setTimes:(Lorg/apache/hadoop/fs/Path;JJ)V
      34: return

  public void setVerifyChecksum(boolean) throws org.apache.hadoop.security.AccessControlException, java.io.IOException;
    Code:
       0: return

  public org.apache.hadoop.fs.viewfs.ViewFs$MountPoint[] getMountPoints();
    Code:
       0: aload_0
       1: getfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: invokevirtual #106                // Method org/apache/hadoop/fs/viewfs/InodeTree.getMountPoints:()Ljava/util/List;
       7: astore_1
       8: aload_1
       9: invokeinterface #107,  1          // InterfaceMethod java/util/List.size:()I
      14: anewarray     #108                // class org/apache/hadoop/fs/viewfs/ViewFs$MountPoint
      17: astore_2
      18: iconst_0
      19: istore_3
      20: iload_3
      21: aload_1
      22: invokeinterface #107,  1          // InterfaceMethod java/util/List.size:()I
      27: if_icmpge     82
      30: aload_2
      31: iload_3
      32: new           #108                // class org/apache/hadoop/fs/viewfs/ViewFs$MountPoint
      35: dup
      36: new           #49                 // class org/apache/hadoop/fs/Path
      39: dup
      40: aload_1
      41: iload_3
      42: invokeinterface #109,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      47: checkcast     #110                // class org/apache/hadoop/fs/viewfs/InodeTree$MountPoint
      50: getfield      #111                // Field org/apache/hadoop/fs/viewfs/InodeTree$MountPoint.src:Ljava/lang/String;
      53: invokespecial #51                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      56: aload_1
      57: iload_3
      58: invokeinterface #109,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      63: checkcast     #110                // class org/apache/hadoop/fs/viewfs/InodeTree$MountPoint
      66: getfield      #112                // Field org/apache/hadoop/fs/viewfs/InodeTree$MountPoint.target:Lorg/apache/hadoop/fs/viewfs/InodeTree$INodeLink;
      69: getfield      #113                // Field org/apache/hadoop/fs/viewfs/InodeTree$INodeLink.targetDirLinkList:[Ljava/net/URI;
      72: invokespecial #114                // Method org/apache/hadoop/fs/viewfs/ViewFs$MountPoint."<init>":(Lorg/apache/hadoop/fs/Path;[Ljava/net/URI;)V
      75: aastore
      76: iinc          3, 1
      79: goto          20
      82: aload_2
      83: areturn

  public java.util.List<org.apache.hadoop.security.token.Token<?>> getDelegationTokens(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: invokevirtual #106                // Method org/apache/hadoop/fs/viewfs/InodeTree.getMountPoints:()Ljava/util/List;
       7: astore_2
       8: iconst_0
       9: istore_3
      10: aload_2
      11: invokeinterface #115,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      16: astore        4
      18: aload         4
      20: invokeinterface #116,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          55
      28: aload         4
      30: invokeinterface #117,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #110                // class org/apache/hadoop/fs/viewfs/InodeTree$MountPoint
      38: astore        5
      40: iload_3
      41: aload         5
      43: getfield      #112                // Field org/apache/hadoop/fs/viewfs/InodeTree$MountPoint.target:Lorg/apache/hadoop/fs/viewfs/InodeTree$INodeLink;
      46: getfield      #113                // Field org/apache/hadoop/fs/viewfs/InodeTree$INodeLink.targetDirLinkList:[Ljava/net/URI;
      49: arraylength
      50: iadd
      51: istore_3
      52: goto          18
      55: new           #118                // class java/util/ArrayList
      58: dup
      59: iload_3
      60: invokespecial #119                // Method java/util/ArrayList."<init>":(I)V
      63: astore        4
      65: iconst_0
      66: istore        5
      68: iload         5
      70: aload_2
      71: invokeinterface #107,  1          // InterfaceMethod java/util/List.size:()I
      76: if_icmpge     126
      79: aload_2
      80: iload         5
      82: invokeinterface #109,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      87: checkcast     #110                // class org/apache/hadoop/fs/viewfs/InodeTree$MountPoint
      90: getfield      #112                // Field org/apache/hadoop/fs/viewfs/InodeTree$MountPoint.target:Lorg/apache/hadoop/fs/viewfs/InodeTree$INodeLink;
      93: invokevirtual #120                // Method org/apache/hadoop/fs/viewfs/InodeTree$INodeLink.getTargetFileSystem:()Ljava/lang/Object;
      96: checkcast     #43                 // class org/apache/hadoop/fs/AbstractFileSystem
      99: aload_1
     100: invokevirtual #121                // Method org/apache/hadoop/fs/AbstractFileSystem.getDelegationTokens:(Ljava/lang/String;)Ljava/util/List;
     103: astore        6
     105: aload         6
     107: ifnull        120
     110: aload         4
     112: aload         6
     114: invokeinterface #122,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     119: pop
     120: iinc          5, 1
     123: goto          68
     126: aload         4
     128: areturn

  public boolean isValidName(java.lang.String);
    Code:
       0: iconst_1
       1: ireturn

  public void modifyAclEntries(org.apache.hadoop.fs.Path, java.util.List<org.apache.hadoop.fs.permission.AclEntry>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #39                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #40                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_3
      14: aload_3
      15: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #43                 // class org/apache/hadoop/fs/AbstractFileSystem
      21: aload_3
      22: getfield      #44                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: aload_2
      26: invokevirtual #123                // Method org/apache/hadoop/fs/AbstractFileSystem.modifyAclEntries:(Lorg/apache/hadoop/fs/Path;Ljava/util/List;)V
      29: return

  public void removeAclEntries(org.apache.hadoop.fs.Path, java.util.List<org.apache.hadoop.fs.permission.AclEntry>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #39                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #40                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_3
      14: aload_3
      15: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #43                 // class org/apache/hadoop/fs/AbstractFileSystem
      21: aload_3
      22: getfield      #44                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: aload_2
      26: invokevirtual #124                // Method org/apache/hadoop/fs/AbstractFileSystem.removeAclEntries:(Lorg/apache/hadoop/fs/Path;Ljava/util/List;)V
      29: return

  public void removeDefaultAcl(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #39                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #40                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_2
      14: aload_2
      15: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #43                 // class org/apache/hadoop/fs/AbstractFileSystem
      21: aload_2
      22: getfield      #44                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: invokevirtual #125                // Method org/apache/hadoop/fs/AbstractFileSystem.removeDefaultAcl:(Lorg/apache/hadoop/fs/Path;)V
      28: return

  public void removeAcl(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #39                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #40                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_2
      14: aload_2
      15: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #43                 // class org/apache/hadoop/fs/AbstractFileSystem
      21: aload_2
      22: getfield      #44                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: invokevirtual #126                // Method org/apache/hadoop/fs/AbstractFileSystem.removeAcl:(Lorg/apache/hadoop/fs/Path;)V
      28: return

  public void setAcl(org.apache.hadoop.fs.Path, java.util.List<org.apache.hadoop.fs.permission.AclEntry>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #39                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #40                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_3
      14: aload_3
      15: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #43                 // class org/apache/hadoop/fs/AbstractFileSystem
      21: aload_3
      22: getfield      #44                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: aload_2
      26: invokevirtual #127                // Method org/apache/hadoop/fs/AbstractFileSystem.setAcl:(Lorg/apache/hadoop/fs/Path;Ljava/util/List;)V
      29: return

  public org.apache.hadoop.fs.permission.AclStatus getAclStatus(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #39                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #40                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_2
      14: aload_2
      15: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #43                 // class org/apache/hadoop/fs/AbstractFileSystem
      21: aload_2
      22: getfield      #44                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: invokevirtual #128                // Method org/apache/hadoop/fs/AbstractFileSystem.getAclStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/permission/AclStatus;
      28: areturn

  public void setXAttr(org.apache.hadoop.fs.Path, java.lang.String, byte[], java.util.EnumSet<org.apache.hadoop.fs.XAttrSetFlag>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #39                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #40                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore        5
      15: aload         5
      17: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      20: checkcast     #43                 // class org/apache/hadoop/fs/AbstractFileSystem
      23: aload         5
      25: getfield      #44                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      28: aload_2
      29: aload_3
      30: aload         4
      32: invokevirtual #129                // Method org/apache/hadoop/fs/AbstractFileSystem.setXAttr:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;[BLjava/util/EnumSet;)V
      35: return

  public byte[] getXAttr(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #39                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #40                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_3
      14: aload_3
      15: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #43                 // class org/apache/hadoop/fs/AbstractFileSystem
      21: aload_3
      22: getfield      #44                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: aload_2
      26: invokevirtual #130                // Method org/apache/hadoop/fs/AbstractFileSystem.getXAttr:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)[B
      29: areturn

  public java.util.Map<java.lang.String, byte[]> getXAttrs(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #39                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #40                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_2
      14: aload_2
      15: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #43                 // class org/apache/hadoop/fs/AbstractFileSystem
      21: aload_2
      22: getfield      #44                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: invokevirtual #131                // Method org/apache/hadoop/fs/AbstractFileSystem.getXAttrs:(Lorg/apache/hadoop/fs/Path;)Ljava/util/Map;
      28: areturn

  public java.util.Map<java.lang.String, byte[]> getXAttrs(org.apache.hadoop.fs.Path, java.util.List<java.lang.String>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #39                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #40                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_3
      14: aload_3
      15: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #43                 // class org/apache/hadoop/fs/AbstractFileSystem
      21: aload_3
      22: getfield      #44                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: aload_2
      26: invokevirtual #132                // Method org/apache/hadoop/fs/AbstractFileSystem.getXAttrs:(Lorg/apache/hadoop/fs/Path;Ljava/util/List;)Ljava/util/Map;
      29: areturn

  public java.util.List<java.lang.String> listXAttrs(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #39                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #40                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_2
      14: aload_2
      15: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #43                 // class org/apache/hadoop/fs/AbstractFileSystem
      21: aload_2
      22: getfield      #44                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: invokevirtual #133                // Method org/apache/hadoop/fs/AbstractFileSystem.listXAttrs:(Lorg/apache/hadoop/fs/Path;)Ljava/util/List;
      28: areturn

  public void removeXAttr(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #39                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #40                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_3
      14: aload_3
      15: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #43                 // class org/apache/hadoop/fs/AbstractFileSystem
      21: aload_3
      22: getfield      #44                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: aload_2
      26: invokevirtual #134                // Method org/apache/hadoop/fs/AbstractFileSystem.removeXAttr:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      29: return

  public org.apache.hadoop.fs.Path createSnapshot(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #39                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #40                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_3
      14: aload_3
      15: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #43                 // class org/apache/hadoop/fs/AbstractFileSystem
      21: aload_3
      22: getfield      #44                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: aload_2
      26: invokevirtual #135                // Method org/apache/hadoop/fs/AbstractFileSystem.createSnapshot:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
      29: areturn

  public void renameSnapshot(org.apache.hadoop.fs.Path, java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #39                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #40                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore        4
      15: aload         4
      17: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      20: checkcast     #43                 // class org/apache/hadoop/fs/AbstractFileSystem
      23: aload         4
      25: getfield      #44                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      28: aload_2
      29: aload_3
      30: invokevirtual #136                // Method org/apache/hadoop/fs/AbstractFileSystem.renameSnapshot:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;)V
      33: return

  public void deleteSnapshot(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #39                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #40                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_3
      14: aload_3
      15: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #43                 // class org/apache/hadoop/fs/AbstractFileSystem
      21: aload_3
      22: getfield      #44                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: aload_2
      26: invokevirtual #137                // Method org/apache/hadoop/fs/AbstractFileSystem.deleteSnapshot:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      29: return

  public void satisfyStoragePolicy(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #39                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #40                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_2
      14: aload_2
      15: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #43                 // class org/apache/hadoop/fs/AbstractFileSystem
      21: aload_2
      22: getfield      #44                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: invokevirtual #138                // Method org/apache/hadoop/fs/AbstractFileSystem.satisfyStoragePolicy:(Lorg/apache/hadoop/fs/Path;)V
      28: return

  public void setStoragePolicy(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #39                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #40                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_3
      14: aload_3
      15: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #43                 // class org/apache/hadoop/fs/AbstractFileSystem
      21: aload_3
      22: getfield      #44                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: aload_2
      26: invokevirtual #139                // Method org/apache/hadoop/fs/AbstractFileSystem.setStoragePolicy:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      29: return

  public void unsetStoragePolicy(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #39                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #40                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_2
      14: aload_2
      15: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #43                 // class org/apache/hadoop/fs/AbstractFileSystem
      21: aload_2
      22: getfield      #44                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: invokevirtual #140                // Method org/apache/hadoop/fs/AbstractFileSystem.unsetStoragePolicy:(Lorg/apache/hadoop/fs/Path;)V
      28: return

  public org.apache.hadoop.fs.BlockStoragePolicySpi getStoragePolicy(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #39                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #40                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_2
      14: aload_2
      15: getfield      #42                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      18: checkcast     #43                 // class org/apache/hadoop/fs/AbstractFileSystem
      21: aload_2
      22: getfield      #44                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.remainingPath:Lorg/apache/hadoop/fs/Path;
      25: invokevirtual #141                // Method org/apache/hadoop/fs/AbstractFileSystem.getStoragePolicy:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/BlockStoragePolicySpi;
      28: areturn

  static boolean access$000();
    Code:
       0: getstatic     #2                  // Field showMountLinksAsSymlinks:Z
       3: ireturn

  static {};
    Code:
       0: ldc           #142                // class org/apache/hadoop/fs/viewfs/ViewFs
       2: invokevirtual #143                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #57                 // Field $assertionsDisabled:Z
      16: ldc           #142                // class org/apache/hadoop/fs/viewfs/ViewFs
      18: invokestatic  #144                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      21: putstatic     #145                // Field LOG:Lorg/slf4j/Logger;
      24: iconst_1
      25: putstatic     #2                  // Field showMountLinksAsSymlinks:Z
      28: return
}
