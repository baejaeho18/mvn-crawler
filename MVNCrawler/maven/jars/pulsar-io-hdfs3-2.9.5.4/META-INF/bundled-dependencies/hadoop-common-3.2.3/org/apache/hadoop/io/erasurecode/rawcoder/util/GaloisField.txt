Compiled from "GaloisField.java"
public class org.apache.hadoop.io.erasurecode.rawcoder.util.GaloisField {
  private static final int DEFAULT_FIELD_SIZE;

  private static final int DEFAULT_PRIMITIVE_POLYNOMIAL;

  private static final java.util.Map<java.lang.Integer, org.apache.hadoop.io.erasurecode.rawcoder.util.GaloisField> instances;

  private final int[] logTable;

  private final int[] powTable;

  private final int[][] mulTable;

  private final int[][] divTable;

  private final int fieldSize;

  private final int primitivePeriod;

  private final int primitivePolynomial;

  static final boolean $assertionsDisabled;

  private org.apache.hadoop.io.erasurecode.rawcoder.util.GaloisField(int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: getstatic     #2                  // Field $assertionsDisabled:Z
       7: ifne          22
      10: iload_1
      11: ifgt          22
      14: new           #3                  // class java/lang/AssertionError
      17: dup
      18: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
      21: athrow
      22: getstatic     #2                  // Field $assertionsDisabled:Z
      25: ifne          40
      28: iload_2
      29: ifgt          40
      32: new           #3                  // class java/lang/AssertionError
      35: dup
      36: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
      39: athrow
      40: aload_0
      41: iload_1
      42: putfield      #5                  // Field fieldSize:I
      45: aload_0
      46: iload_1
      47: iconst_1
      48: isub
      49: putfield      #6                  // Field primitivePeriod:I
      52: aload_0
      53: iload_2
      54: putfield      #7                  // Field primitivePolynomial:I
      57: aload_0
      58: iload_1
      59: newarray       int
      61: putfield      #8                  // Field logTable:[I
      64: aload_0
      65: iload_1
      66: newarray       int
      68: putfield      #9                  // Field powTable:[I
      71: aload_0
      72: iload_1
      73: iload_1
      74: multianewarray #10,  2            // class "[[I"
      78: putfield      #11                 // Field mulTable:[[I
      81: aload_0
      82: iload_1
      83: iload_1
      84: multianewarray #10,  2            // class "[[I"
      88: putfield      #12                 // Field divTable:[[I
      91: iconst_1
      92: istore_3
      93: iconst_0
      94: istore        4
      96: iload         4
      98: iload_1
      99: iconst_1
     100: isub
     101: if_icmpge     139
     104: aload_0
     105: getfield      #9                  // Field powTable:[I
     108: iload         4
     110: iload_3
     111: iastore
     112: aload_0
     113: getfield      #8                  // Field logTable:[I
     116: iload_3
     117: iload         4
     119: iastore
     120: iload_3
     121: iconst_2
     122: imul
     123: istore_3
     124: iload_3
     125: iload_1
     126: if_icmplt     133
     129: iload_3
     130: iload_2
     131: ixor
     132: istore_3
     133: iinc          4, 1
     136: goto          96
     139: iconst_0
     140: istore        4
     142: iload         4
     144: iload_1
     145: if_icmpge     254
     148: iconst_0
     149: istore        5
     151: iload         5
     153: iload_1
     154: if_icmpge     248
     157: iload         4
     159: ifeq          167
     162: iload         5
     164: ifne          181
     167: aload_0
     168: getfield      #11                 // Field mulTable:[[I
     171: iload         4
     173: aaload
     174: iload         5
     176: iconst_0
     177: iastore
     178: goto          242
     181: aload_0
     182: getfield      #8                  // Field logTable:[I
     185: iload         4
     187: iaload
     188: aload_0
     189: getfield      #8                  // Field logTable:[I
     192: iload         5
     194: iaload
     195: iadd
     196: istore        6
     198: iload         6
     200: aload_0
     201: getfield      #6                  // Field primitivePeriod:I
     204: if_icmplt     217
     207: iload         6
     209: aload_0
     210: getfield      #6                  // Field primitivePeriod:I
     213: isub
     214: goto          219
     217: iload         6
     219: istore        6
     221: aload_0
     222: getfield      #9                  // Field powTable:[I
     225: iload         6
     227: iaload
     228: istore        6
     230: aload_0
     231: getfield      #11                 // Field mulTable:[[I
     234: iload         4
     236: aaload
     237: iload         5
     239: iload         6
     241: iastore
     242: iinc          5, 1
     245: goto          151
     248: iinc          4, 1
     251: goto          142
     254: iconst_0
     255: istore        4
     257: iload         4
     259: iload_1
     260: if_icmpge     360
     263: iconst_1
     264: istore        5
     266: iload         5
     268: iload_1
     269: if_icmpge     354
     272: iload         4
     274: ifne          291
     277: aload_0
     278: getfield      #12                 // Field divTable:[[I
     281: iload         4
     283: aaload
     284: iload         5
     286: iconst_0
     287: iastore
     288: goto          348
     291: aload_0
     292: getfield      #8                  // Field logTable:[I
     295: iload         4
     297: iaload
     298: aload_0
     299: getfield      #8                  // Field logTable:[I
     302: iload         5
     304: iaload
     305: isub
     306: istore        6
     308: iload         6
     310: ifge          323
     313: iload         6
     315: aload_0
     316: getfield      #6                  // Field primitivePeriod:I
     319: iadd
     320: goto          325
     323: iload         6
     325: istore        6
     327: aload_0
     328: getfield      #9                  // Field powTable:[I
     331: iload         6
     333: iaload
     334: istore        6
     336: aload_0
     337: getfield      #12                 // Field divTable:[[I
     340: iload         4
     342: aaload
     343: iload         5
     345: iload         6
     347: iastore
     348: iinc          5, 1
     351: goto          266
     354: iinc          4, 1
     357: goto          257
     360: return

  public static org.apache.hadoop.io.erasurecode.rawcoder.util.GaloisField getInstance(int, int);
    Code:
       0: iload_0
       1: bipush        16
       3: ishl
       4: ldc           #13                 // int -65536
       6: iand
       7: iload_1
       8: ldc           #14                 // int 65535
      10: iand
      11: iadd
      12: istore_2
      13: getstatic     #15                 // Field instances:Ljava/util/Map;
      16: dup
      17: astore        4
      19: monitorenter
      20: getstatic     #15                 // Field instances:Ljava/util/Map;
      23: iload_2
      24: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      27: invokeinterface #17,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #18                 // class org/apache/hadoop/io/erasurecode/rawcoder/util/GaloisField
      35: astore_3
      36: aload_3
      37: ifnonnull     64
      40: new           #18                 // class org/apache/hadoop/io/erasurecode/rawcoder/util/GaloisField
      43: dup
      44: iload_0
      45: iload_1
      46: invokespecial #19                 // Method "<init>":(II)V
      49: astore_3
      50: getstatic     #15                 // Field instances:Ljava/util/Map;
      53: iload_2
      54: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      57: aload_3
      58: invokeinterface #20,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      63: pop
      64: aload         4
      66: monitorexit
      67: goto          78
      70: astore        5
      72: aload         4
      74: monitorexit
      75: aload         5
      77: athrow
      78: aload_3
      79: areturn
    Exception table:
       from    to  target type
          20    67    70   any
          70    75    70   any

  public static org.apache.hadoop.io.erasurecode.rawcoder.util.GaloisField getInstance();
    Code:
       0: sipush        256
       3: sipush        285
       6: invokestatic  #21                 // Method getInstance:(II)Lorg/apache/hadoop/io/erasurecode/rawcoder/util/GaloisField;
       9: areturn

  public int getFieldSize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field fieldSize:I
       4: ireturn

  public int getPrimitivePolynomial();
    Code:
       0: aload_0
       1: getfield      #7                  // Field primitivePolynomial:I
       4: ireturn

  public int add(int, int);
    Code:
       0: getstatic     #2                  // Field $assertionsDisabled:Z
       3: ifne          38
       6: iload_1
       7: iflt          30
      10: iload_1
      11: aload_0
      12: invokevirtual #22                 // Method getFieldSize:()I
      15: if_icmpge     30
      18: iload_2
      19: iflt          30
      22: iload_2
      23: aload_0
      24: invokevirtual #22                 // Method getFieldSize:()I
      27: if_icmplt     38
      30: new           #3                  // class java/lang/AssertionError
      33: dup
      34: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
      37: athrow
      38: iload_1
      39: iload_2
      40: ixor
      41: ireturn

  public int multiply(int, int);
    Code:
       0: getstatic     #2                  // Field $assertionsDisabled:Z
       3: ifne          38
       6: iload_1
       7: iflt          30
      10: iload_1
      11: aload_0
      12: invokevirtual #22                 // Method getFieldSize:()I
      15: if_icmpge     30
      18: iload_2
      19: iflt          30
      22: iload_2
      23: aload_0
      24: invokevirtual #22                 // Method getFieldSize:()I
      27: if_icmplt     38
      30: new           #3                  // class java/lang/AssertionError
      33: dup
      34: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
      37: athrow
      38: aload_0
      39: getfield      #11                 // Field mulTable:[[I
      42: iload_1
      43: aaload
      44: iload_2
      45: iaload
      46: ireturn

  public int divide(int, int);
    Code:
       0: getstatic     #2                  // Field $assertionsDisabled:Z
       3: ifne          38
       6: iload_1
       7: iflt          30
      10: iload_1
      11: aload_0
      12: invokevirtual #22                 // Method getFieldSize:()I
      15: if_icmpge     30
      18: iload_2
      19: ifle          30
      22: iload_2
      23: aload_0
      24: invokevirtual #22                 // Method getFieldSize:()I
      27: if_icmplt     38
      30: new           #3                  // class java/lang/AssertionError
      33: dup
      34: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
      37: athrow
      38: aload_0
      39: getfield      #12                 // Field divTable:[[I
      42: iload_1
      43: aaload
      44: iload_2
      45: iaload
      46: ireturn

  public int power(int, int);
    Code:
       0: getstatic     #2                  // Field $assertionsDisabled:Z
       3: ifne          26
       6: iload_1
       7: iflt          18
      10: iload_1
      11: aload_0
      12: invokevirtual #22                 // Method getFieldSize:()I
      15: if_icmplt     26
      18: new           #3                  // class java/lang/AssertionError
      21: dup
      22: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
      25: athrow
      26: iload_2
      27: ifne          32
      30: iconst_1
      31: ireturn
      32: iload_1
      33: ifne          38
      36: iconst_0
      37: ireturn
      38: aload_0
      39: getfield      #8                  // Field logTable:[I
      42: iload_1
      43: iaload
      44: iload_2
      45: imul
      46: istore_1
      47: iload_1
      48: aload_0
      49: getfield      #6                  // Field primitivePeriod:I
      52: if_icmpge     62
      55: aload_0
      56: getfield      #9                  // Field powTable:[I
      59: iload_1
      60: iaload
      61: ireturn
      62: iload_1
      63: aload_0
      64: getfield      #6                  // Field primitivePeriod:I
      67: irem
      68: istore_1
      69: aload_0
      70: getfield      #9                  // Field powTable:[I
      73: iload_1
      74: iaload
      75: ireturn

  public void solveVandermondeSystem(int[], int[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_1
       4: arraylength
       5: invokevirtual #23                 // Method solveVandermondeSystem:([I[II)V
       8: return

  public void solveVandermondeSystem(int[], int[], int);
    Code:
       0: getstatic     #2                  // Field $assertionsDisabled:Z
       3: ifne          26
       6: aload_1
       7: arraylength
       8: iload_3
       9: if_icmpgt     18
      12: aload_2
      13: arraylength
      14: iload_3
      15: if_icmple     26
      18: new           #3                  // class java/lang/AssertionError
      21: dup
      22: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
      25: athrow
      26: iconst_0
      27: istore        4
      29: iload         4
      31: iload_3
      32: iconst_1
      33: isub
      34: if_icmpge     86
      37: iload_3
      38: iconst_1
      39: isub
      40: istore        5
      42: iload         5
      44: iload         4
      46: if_icmple     80
      49: aload_2
      50: iload         5
      52: aload_2
      53: iload         5
      55: iaload
      56: aload_0
      57: getfield      #11                 // Field mulTable:[[I
      60: aload_1
      61: iload         4
      63: iaload
      64: aaload
      65: aload_2
      66: iload         5
      68: iconst_1
      69: isub
      70: iaload
      71: iaload
      72: ixor
      73: iastore
      74: iinc          5, -1
      77: goto          42
      80: iinc          4, 1
      83: goto          29
      86: iload_3
      87: iconst_1
      88: isub
      89: istore        4
      91: iload         4
      93: iflt          181
      96: iload         4
      98: iconst_1
      99: iadd
     100: istore        5
     102: iload         5
     104: iload_3
     105: if_icmpge     142
     108: aload_2
     109: iload         5
     111: aload_0
     112: getfield      #12                 // Field divTable:[[I
     115: aload_2
     116: iload         5
     118: iaload
     119: aaload
     120: aload_1
     121: iload         5
     123: iaload
     124: aload_1
     125: iload         5
     127: iload         4
     129: isub
     130: iconst_1
     131: isub
     132: iaload
     133: ixor
     134: iaload
     135: iastore
     136: iinc          5, 1
     139: goto          102
     142: iload         4
     144: istore        5
     146: iload         5
     148: iload_3
     149: iconst_1
     150: isub
     151: if_icmpge     175
     154: aload_2
     155: iload         5
     157: aload_2
     158: iload         5
     160: iaload
     161: aload_2
     162: iload         5
     164: iconst_1
     165: iadd
     166: iaload
     167: ixor
     168: iastore
     169: iinc          5, 1
     172: goto          146
     175: iinc          4, -1
     178: goto          91
     181: return

  public void solveVandermondeSystem(int[], byte[][], int[], int, int);
    Code:
       0: iconst_0
       1: istore        8
       3: iload         8
       5: iload         4
       7: iconst_1
       8: isub
       9: if_icmpge     111
      12: iload         4
      14: iconst_1
      15: isub
      16: istore        9
      18: iload         9
      20: iload         8
      22: if_icmple     105
      25: aload_3
      26: iload         9
      28: iconst_1
      29: isub
      30: iaload
      31: istore        7
      33: aload_3
      34: iload         9
      36: iaload
      37: istore        6
      39: iload         6
      41: aload_3
      42: iload         9
      44: iaload
      45: iload         5
      47: iadd
      48: if_icmpge     99
      51: aload_2
      52: iload         9
      54: aaload
      55: iload         6
      57: aload_2
      58: iload         9
      60: aaload
      61: iload         6
      63: baload
      64: aload_0
      65: getfield      #11                 // Field mulTable:[[I
      68: aload_1
      69: iload         8
      71: iaload
      72: aaload
      73: aload_2
      74: iload         9
      76: iconst_1
      77: isub
      78: aaload
      79: iload         7
      81: baload
      82: sipush        255
      85: iand
      86: iaload
      87: ixor
      88: i2b
      89: bastore
      90: iinc          6, 1
      93: iinc          7, 1
      96: goto          39
      99: iinc          9, -1
     102: goto          18
     105: iinc          8, 1
     108: goto          3
     111: iload         4
     113: iconst_1
     114: isub
     115: istore        8
     117: iload         8
     119: iflt          289
     122: iload         8
     124: iconst_1
     125: iadd
     126: istore        9
     128: iload         9
     130: iload         4
     132: if_icmpge     204
     135: aload_3
     136: iload         9
     138: iaload
     139: istore        6
     141: iload         6
     143: aload_3
     144: iload         9
     146: iaload
     147: iload         5
     149: iadd
     150: if_icmpge     198
     153: aload_2
     154: iload         9
     156: aaload
     157: iload         6
     159: aload_0
     160: getfield      #12                 // Field divTable:[[I
     163: aload_2
     164: iload         9
     166: aaload
     167: iload         6
     169: baload
     170: sipush        255
     173: iand
     174: aaload
     175: aload_1
     176: iload         9
     178: iaload
     179: aload_1
     180: iload         9
     182: iload         8
     184: isub
     185: iconst_1
     186: isub
     187: iaload
     188: ixor
     189: iaload
     190: i2b
     191: bastore
     192: iinc          6, 1
     195: goto          141
     198: iinc          9, 1
     201: goto          128
     204: iload         8
     206: istore        9
     208: iload         9
     210: iload         4
     212: iconst_1
     213: isub
     214: if_icmpge     283
     217: aload_3
     218: iload         9
     220: iconst_1
     221: iadd
     222: iaload
     223: istore        7
     225: aload_3
     226: iload         9
     228: iaload
     229: istore        6
     231: iload         6
     233: aload_3
     234: iload         9
     236: iaload
     237: iload         5
     239: iadd
     240: if_icmpge     277
     243: aload_2
     244: iload         9
     246: aaload
     247: iload         6
     249: aload_2
     250: iload         9
     252: aaload
     253: iload         6
     255: baload
     256: aload_2
     257: iload         9
     259: iconst_1
     260: iadd
     261: aaload
     262: iload         7
     264: baload
     265: ixor
     266: i2b
     267: bastore
     268: iinc          6, 1
     271: iinc          7, 1
     274: goto          231
     277: iinc          9, 1
     280: goto          208
     283: iinc          8, -1
     286: goto          117
     289: return

  public void solveVandermondeSystem(int[], java.nio.ByteBuffer[], int);
    Code:
       0: iconst_0
       1: istore        7
       3: iload         7
       5: iload_3
       6: iconst_1
       7: isub
       8: if_icmpge     120
      11: iload_3
      12: iconst_1
      13: isub
      14: istore        8
      16: iload         8
      18: iload         7
      20: if_icmple     114
      23: aload_2
      24: iload         8
      26: aaload
      27: astore        4
      29: aload         4
      31: invokevirtual #24                 // Method java/nio/ByteBuffer.position:()I
      34: istore        5
      36: aload_2
      37: iload         8
      39: iconst_1
      40: isub
      41: aaload
      42: invokevirtual #24                 // Method java/nio/ByteBuffer.position:()I
      45: istore        6
      47: iload         5
      49: aload         4
      51: invokevirtual #25                 // Method java/nio/ByteBuffer.limit:()I
      54: if_icmpge     108
      57: aload         4
      59: iload         5
      61: aload         4
      63: iload         5
      65: invokevirtual #26                 // Method java/nio/ByteBuffer.get:(I)B
      68: aload_0
      69: getfield      #11                 // Field mulTable:[[I
      72: aload_1
      73: iload         7
      75: iaload
      76: aaload
      77: aload_2
      78: iload         8
      80: iconst_1
      81: isub
      82: aaload
      83: iload         6
      85: invokevirtual #26                 // Method java/nio/ByteBuffer.get:(I)B
      88: sipush        255
      91: iand
      92: iaload
      93: ixor
      94: i2b
      95: invokevirtual #27                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
      98: pop
      99: iinc          5, 1
     102: iinc          6, 1
     105: goto          47
     108: iinc          8, -1
     111: goto          16
     114: iinc          7, 1
     117: goto          3
     120: iload_3
     121: iconst_1
     122: isub
     123: istore        7
     125: iload         7
     127: iflt          312
     130: iload         7
     132: iconst_1
     133: iadd
     134: istore        8
     136: iload         8
     138: iload_3
     139: if_icmpge     217
     142: aload_2
     143: iload         8
     145: aaload
     146: astore        4
     148: aload         4
     150: invokevirtual #24                 // Method java/nio/ByteBuffer.position:()I
     153: istore        5
     155: iload         5
     157: aload         4
     159: invokevirtual #25                 // Method java/nio/ByteBuffer.limit:()I
     162: if_icmpge     211
     165: aload         4
     167: iload         5
     169: aload_0
     170: getfield      #12                 // Field divTable:[[I
     173: aload         4
     175: iload         5
     177: invokevirtual #26                 // Method java/nio/ByteBuffer.get:(I)B
     180: sipush        255
     183: iand
     184: aaload
     185: aload_1
     186: iload         8
     188: iaload
     189: aload_1
     190: iload         8
     192: iload         7
     194: isub
     195: iconst_1
     196: isub
     197: iaload
     198: ixor
     199: iaload
     200: i2b
     201: invokevirtual #27                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     204: pop
     205: iinc          5, 1
     208: goto          155
     211: iinc          8, 1
     214: goto          136
     217: iload         7
     219: istore        8
     221: iload         8
     223: iload_3
     224: iconst_1
     225: isub
     226: if_icmpge     306
     229: aload_2
     230: iload         8
     232: aaload
     233: astore        4
     235: aload         4
     237: invokevirtual #24                 // Method java/nio/ByteBuffer.position:()I
     240: istore        5
     242: aload_2
     243: iload         8
     245: iconst_1
     246: iadd
     247: aaload
     248: invokevirtual #24                 // Method java/nio/ByteBuffer.position:()I
     251: istore        6
     253: iload         5
     255: aload         4
     257: invokevirtual #25                 // Method java/nio/ByteBuffer.limit:()I
     260: if_icmpge     300
     263: aload         4
     265: iload         5
     267: aload         4
     269: iload         5
     271: invokevirtual #26                 // Method java/nio/ByteBuffer.get:(I)B
     274: aload_2
     275: iload         8
     277: iconst_1
     278: iadd
     279: aaload
     280: iload         6
     282: invokevirtual #26                 // Method java/nio/ByteBuffer.get:(I)B
     285: ixor
     286: i2b
     287: invokevirtual #27                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     290: pop
     291: iinc          5, 1
     294: iinc          6, 1
     297: goto          253
     300: iinc          8, 1
     303: goto          221
     306: iinc          7, -1
     309: goto          125
     312: return

  public int[] multiply(int[], int[]);
    Code:
       0: aload_1
       1: arraylength
       2: aload_2
       3: arraylength
       4: iadd
       5: iconst_1
       6: isub
       7: istore_3
       8: iload_3
       9: newarray       int
      11: astore        4
      13: iconst_0
      14: istore        5
      16: iload         5
      18: iload_3
      19: if_icmpge     34
      22: aload         4
      24: iload         5
      26: iconst_0
      27: iastore
      28: iinc          5, 1
      31: goto          16
      34: iconst_0
      35: istore        5
      37: iload         5
      39: aload_1
      40: arraylength
      41: if_icmpge     98
      44: iconst_0
      45: istore        6
      47: iload         6
      49: aload_2
      50: arraylength
      51: if_icmpge     92
      54: aload         4
      56: iload         5
      58: iload         6
      60: iadd
      61: aload_0
      62: aload         4
      64: iload         5
      66: iload         6
      68: iadd
      69: iaload
      70: aload_0
      71: aload_1
      72: iload         5
      74: iaload
      75: aload_2
      76: iload         6
      78: iaload
      79: invokevirtual #28                 // Method multiply:(II)I
      82: invokevirtual #29                 // Method add:(II)I
      85: iastore
      86: iinc          6, 1
      89: goto          47
      92: iinc          5, 1
      95: goto          37
      98: aload         4
     100: areturn

  public void remainder(int[], int[]);
    Code:
       0: aload_1
       1: arraylength
       2: aload_2
       3: arraylength
       4: isub
       5: istore_3
       6: iload_3
       7: iflt          81
      10: aload_0
      11: getfield      #12                 // Field divTable:[[I
      14: aload_1
      15: iload_3
      16: aload_2
      17: arraylength
      18: iadd
      19: iconst_1
      20: isub
      21: iaload
      22: aaload
      23: aload_2
      24: aload_2
      25: arraylength
      26: iconst_1
      27: isub
      28: iaload
      29: iaload
      30: istore        4
      32: iconst_0
      33: istore        5
      35: iload         5
      37: aload_2
      38: arraylength
      39: if_icmpge     75
      42: iload         5
      44: iload_3
      45: iadd
      46: istore        6
      48: aload_1
      49: iload         6
      51: aload_1
      52: iload         6
      54: iaload
      55: aload_0
      56: getfield      #11                 // Field mulTable:[[I
      59: iload         4
      61: aaload
      62: aload_2
      63: iload         5
      65: iaload
      66: iaload
      67: ixor
      68: iastore
      69: iinc          5, 1
      72: goto          35
      75: iinc          3, -1
      78: goto          6
      81: return

  public int[] add(int[], int[]);
    Code:
       0: aload_1
       1: arraylength
       2: aload_2
       3: arraylength
       4: invokestatic  #30                 // Method java/lang/Math.max:(II)I
       7: istore_3
       8: iload_3
       9: newarray       int
      11: astore        4
      13: iconst_0
      14: istore        5
      16: iload         5
      18: iload_3
      19: if_icmpge     90
      22: iload         5
      24: aload_1
      25: arraylength
      26: if_icmpge     56
      29: iload         5
      31: aload_2
      32: arraylength
      33: if_icmpge     56
      36: aload         4
      38: iload         5
      40: aload_0
      41: aload_1
      42: iload         5
      44: iaload
      45: aload_2
      46: iload         5
      48: iaload
      49: invokevirtual #29                 // Method add:(II)I
      52: iastore
      53: goto          84
      56: iload         5
      58: aload_1
      59: arraylength
      60: if_icmpge     75
      63: aload         4
      65: iload         5
      67: aload_1
      68: iload         5
      70: iaload
      71: iastore
      72: goto          84
      75: aload         4
      77: iload         5
      79: aload_2
      80: iload         5
      82: iaload
      83: iastore
      84: iinc          5, 1
      87: goto          16
      90: aload         4
      92: areturn

  public int substitute(int[], int);
    Code:
       0: iconst_0
       1: istore_3
       2: iconst_1
       3: istore        4
       5: iconst_0
       6: istore        5
       8: iload         5
      10: aload_1
      11: arraylength
      12: if_icmpge     47
      15: iload_3
      16: aload_0
      17: getfield      #11                 // Field mulTable:[[I
      20: aload_1
      21: iload         5
      23: iaload
      24: aaload
      25: iload         4
      27: iaload
      28: ixor
      29: istore_3
      30: aload_0
      31: getfield      #11                 // Field mulTable:[[I
      34: iload_2
      35: aaload
      36: iload         4
      38: iaload
      39: istore        4
      41: iinc          5, 1
      44: goto          8
      47: iload_3
      48: ireturn

  public void substitute(byte[][], byte[], int);
    Code:
       0: iconst_1
       1: istore        4
       3: iconst_0
       4: istore        5
       6: iload         5
       8: aload_1
       9: arraylength
      10: if_icmpge     84
      13: aload_1
      14: iload         5
      16: aaload
      17: astore        6
      19: iconst_0
      20: istore        7
      22: iload         7
      24: aload         6
      26: arraylength
      27: if_icmpge     67
      30: aload         6
      32: iload         7
      34: baload
      35: sipush        255
      38: iand
      39: istore        8
      41: aload_2
      42: iload         7
      44: aload_2
      45: iload         7
      47: baload
      48: aload_0
      49: getfield      #11                 // Field mulTable:[[I
      52: iload         8
      54: aaload
      55: iload         4
      57: iaload
      58: ixor
      59: i2b
      60: bastore
      61: iinc          7, 1
      64: goto          22
      67: aload_0
      68: getfield      #11                 // Field mulTable:[[I
      71: iload_3
      72: aaload
      73: iload         4
      75: iaload
      76: istore        4
      78: iinc          5, 1
      81: goto          6
      84: return

  public void substitute(byte[][], int[], int, byte[], int, int);
    Code:
       0: iconst_1
       1: istore        7
       3: iconst_0
       4: istore        10
       6: iload         10
       8: aload_1
       9: arraylength
      10: if_icmpge     109
      13: aload_1
      14: iload         10
      16: aaload
      17: astore        11
      19: aload_2
      20: iload         10
      22: iaload
      23: istore        8
      25: iload         5
      27: istore        9
      29: iload         8
      31: aload_2
      32: iload         10
      34: iaload
      35: iload_3
      36: iadd
      37: if_icmpge     91
      40: aload         11
      42: ifnull        57
      45: aload         11
      47: iload         8
      49: baload
      50: sipush        255
      53: iand
      54: goto          58
      57: iconst_0
      58: istore        12
      60: aload         4
      62: iload         9
      64: aload         4
      66: iload         9
      68: baload
      69: aload_0
      70: getfield      #11                 // Field mulTable:[[I
      73: iload         12
      75: aaload
      76: iload         7
      78: iaload
      79: ixor
      80: i2b
      81: bastore
      82: iinc          8, 1
      85: iinc          9, 1
      88: goto          29
      91: aload_0
      92: getfield      #11                 // Field mulTable:[[I
      95: iload         6
      97: aaload
      98: iload         7
     100: iaload
     101: istore        7
     103: iinc          10, 1
     106: goto          6
     109: return

  public void substitute(java.nio.ByteBuffer[], int, java.nio.ByteBuffer, int);
    Code:
       0: iconst_1
       1: istore        5
       3: iconst_0
       4: istore        8
       6: iload         8
       8: aload_1
       9: arraylength
      10: if_icmpge     142
      13: aload_1
      14: iload         8
      16: aaload
      17: astore        9
      19: aload         9
      21: ifnull        32
      24: aload         9
      26: invokevirtual #24                 // Method java/nio/ByteBuffer.position:()I
      29: goto          33
      32: iconst_0
      33: istore        10
      35: aload         9
      37: ifnull        48
      40: aload         9
      42: invokevirtual #25                 // Method java/nio/ByteBuffer.limit:()I
      45: goto          49
      48: iload_2
      49: istore        11
      51: aload_3
      52: invokevirtual #24                 // Method java/nio/ByteBuffer.position:()I
      55: istore        7
      57: iload         10
      59: istore        6
      61: iload         6
      63: iload         11
      65: if_icmpge     124
      68: aload         9
      70: ifnull        87
      73: aload         9
      75: iload         6
      77: invokevirtual #26                 // Method java/nio/ByteBuffer.get:(I)B
      80: sipush        255
      83: iand
      84: goto          88
      87: iconst_0
      88: istore        12
      90: aload_3
      91: iload         7
      93: aload_3
      94: iload         7
      96: invokevirtual #26                 // Method java/nio/ByteBuffer.get:(I)B
      99: aload_0
     100: getfield      #11                 // Field mulTable:[[I
     103: iload         12
     105: aaload
     106: iload         5
     108: iaload
     109: ixor
     110: i2b
     111: invokevirtual #27                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     114: pop
     115: iinc          6, 1
     118: iinc          7, 1
     121: goto          61
     124: aload_0
     125: getfield      #11                 // Field mulTable:[[I
     128: iload         4
     130: aaload
     131: iload         5
     133: iaload
     134: istore        5
     136: iinc          8, 1
     139: goto          6
     142: return

  public void remainder(byte[][], int[]);
    Code:
       0: aload_1
       1: arraylength
       2: aload_2
       3: arraylength
       4: isub
       5: istore_3
       6: iload_3
       7: iflt          115
      10: iconst_0
      11: istore        4
      13: iload         4
      15: aload_2
      16: arraylength
      17: if_icmpge     109
      20: iconst_0
      21: istore        5
      23: iload         5
      25: aload_1
      26: iload_3
      27: aaload
      28: arraylength
      29: if_icmpge     103
      32: aload_0
      33: getfield      #12                 // Field divTable:[[I
      36: aload_1
      37: iload_3
      38: aload_2
      39: arraylength
      40: iadd
      41: iconst_1
      42: isub
      43: aaload
      44: iload         5
      46: baload
      47: sipush        255
      50: iand
      51: aaload
      52: aload_2
      53: aload_2
      54: arraylength
      55: iconst_1
      56: isub
      57: iaload
      58: iaload
      59: istore        6
      61: aload_1
      62: iload         4
      64: iload_3
      65: iadd
      66: aaload
      67: iload         5
      69: aload_1
      70: iload         4
      72: iload_3
      73: iadd
      74: aaload
      75: iload         5
      77: baload
      78: sipush        255
      81: iand
      82: aload_0
      83: getfield      #11                 // Field mulTable:[[I
      86: iload         6
      88: aaload
      89: aload_2
      90: iload         4
      92: iaload
      93: iaload
      94: ixor
      95: i2b
      96: bastore
      97: iinc          5, 1
     100: goto          23
     103: iinc          4, 1
     106: goto          13
     109: iinc          3, -1
     112: goto          6
     115: return

  public void remainder(byte[][], int[], int, int[]);
    Code:
       0: aload_1
       1: arraylength
       2: aload         4
       4: arraylength
       5: isub
       6: istore        7
       8: iload         7
      10: iflt          155
      13: iconst_0
      14: istore        8
      16: iload         8
      18: aload         4
      20: arraylength
      21: if_icmpge     149
      24: aload_2
      25: iload         8
      27: iload         7
      29: iadd
      30: iaload
      31: istore        6
      33: aload_2
      34: iload         7
      36: aload         4
      38: arraylength
      39: iadd
      40: iconst_1
      41: isub
      42: iaload
      43: istore        5
      45: iload         5
      47: aload_2
      48: iload         7
      50: aload         4
      52: arraylength
      53: iadd
      54: iconst_1
      55: isub
      56: iaload
      57: iload_3
      58: iadd
      59: if_icmpge     143
      62: aload_0
      63: getfield      #12                 // Field divTable:[[I
      66: aload_1
      67: iload         7
      69: aload         4
      71: arraylength
      72: iadd
      73: iconst_1
      74: isub
      75: aaload
      76: iload         5
      78: baload
      79: sipush        255
      82: iand
      83: aaload
      84: aload         4
      86: aload         4
      88: arraylength
      89: iconst_1
      90: isub
      91: iaload
      92: iaload
      93: istore        9
      95: aload_1
      96: iload         8
      98: iload         7
     100: iadd
     101: aaload
     102: iload         6
     104: aload_1
     105: iload         8
     107: iload         7
     109: iadd
     110: aaload
     111: iload         6
     113: baload
     114: sipush        255
     117: iand
     118: aload_0
     119: getfield      #11                 // Field mulTable:[[I
     122: iload         9
     124: aaload
     125: aload         4
     127: iload         8
     129: iaload
     130: iaload
     131: ixor
     132: i2b
     133: bastore
     134: iinc          5, 1
     137: iinc          6, 1
     140: goto          45
     143: iinc          8, 1
     146: goto          16
     149: iinc          7, -1
     152: goto          8
     155: return

  public void remainder(java.nio.ByteBuffer[], int[]);
    Code:
       0: aload_1
       1: arraylength
       2: aload_2
       3: arraylength
       4: isub
       5: istore        7
       7: iload         7
       9: iflt          142
      12: iconst_0
      13: istore        8
      15: iload         8
      17: aload_2
      18: arraylength
      19: if_icmpge     136
      22: aload_1
      23: iload         7
      25: aload_2
      26: arraylength
      27: iadd
      28: iconst_1
      29: isub
      30: aaload
      31: astore        5
      33: aload_1
      34: iload         8
      36: iload         7
      38: iadd
      39: aaload
      40: astore        6
      42: aload         5
      44: invokevirtual #24                 // Method java/nio/ByteBuffer.position:()I
      47: istore_3
      48: aload         6
      50: invokevirtual #24                 // Method java/nio/ByteBuffer.position:()I
      53: istore        4
      55: iload_3
      56: aload         5
      58: invokevirtual #25                 // Method java/nio/ByteBuffer.limit:()I
      61: if_icmpge     130
      64: aload_0
      65: getfield      #12                 // Field divTable:[[I
      68: aload         5
      70: iload_3
      71: invokevirtual #26                 // Method java/nio/ByteBuffer.get:(I)B
      74: sipush        255
      77: iand
      78: aaload
      79: aload_2
      80: aload_2
      81: arraylength
      82: iconst_1
      83: isub
      84: iaload
      85: iaload
      86: istore        9
      88: aload         6
      90: iload         4
      92: aload         6
      94: iload         4
      96: invokevirtual #26                 // Method java/nio/ByteBuffer.get:(I)B
      99: sipush        255
     102: iand
     103: aload_0
     104: getfield      #11                 // Field mulTable:[[I
     107: iload         9
     109: aaload
     110: aload_2
     111: iload         8
     113: iaload
     114: iaload
     115: ixor
     116: i2b
     117: invokevirtual #27                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     120: pop
     121: iinc          3, 1
     124: iinc          4, 1
     127: goto          55
     130: iinc          8, 1
     133: goto          15
     136: iinc          7, -1
     139: goto          7
     142: return

  public void gaussianElimination(int[][]);
    Code:
       0: getstatic     #2                  // Field $assertionsDisabled:Z
       3: ifne          39
       6: aload_1
       7: ifnull        31
      10: aload_1
      11: arraylength
      12: ifle          31
      15: aload_1
      16: iconst_0
      17: aaload
      18: arraylength
      19: ifle          31
      22: aload_1
      23: arraylength
      24: aload_1
      25: iconst_0
      26: aaload
      27: arraylength
      28: if_icmplt     39
      31: new           #3                  // class java/lang/AssertionError
      34: dup
      35: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
      38: athrow
      39: aload_1
      40: arraylength
      41: istore_2
      42: aload_1
      43: iconst_0
      44: aaload
      45: arraylength
      46: istore_3
      47: iconst_0
      48: istore        4
      50: iload         4
      52: iload_2
      53: if_icmpge     244
      56: iconst_0
      57: istore        5
      59: iload         4
      61: istore        6
      63: iload         6
      65: iload_2
      66: if_icmpge     111
      69: aload_1
      70: iload         4
      72: aaload
      73: iload         6
      75: iaload
      76: ifeq          105
      79: aload_1
      80: iload         4
      82: aaload
      83: astore        7
      85: aload_1
      86: iload         4
      88: aload_1
      89: iload         6
      91: aaload
      92: aastore
      93: aload_1
      94: iload         6
      96: aload         7
      98: aastore
      99: iconst_1
     100: istore        5
     102: goto          111
     105: iinc          6, 1
     108: goto          63
     111: iload         5
     113: ifne          119
     116: goto          238
     119: aload_1
     120: iload         4
     122: aaload
     123: iload         4
     125: iaload
     126: istore        6
     128: iload         4
     130: istore        7
     132: iload         7
     134: iload_3
     135: if_icmpge     164
     138: aload_1
     139: iload         4
     141: aaload
     142: iload         7
     144: aload_0
     145: aload_1
     146: iload         4
     148: aaload
     149: iload         7
     151: iaload
     152: iload         6
     154: invokevirtual #31                 // Method divide:(II)I
     157: iastore
     158: iinc          7, 1
     161: goto          132
     164: iload         4
     166: iconst_1
     167: iadd
     168: istore        7
     170: iload         7
     172: iload_2
     173: if_icmpge     238
     176: aload_1
     177: iload         7
     179: aaload
     180: iload         4
     182: iaload
     183: istore        8
     185: iload         4
     187: istore        9
     189: iload         9
     191: iload_3
     192: if_icmpge     232
     195: aload_1
     196: iload         7
     198: aaload
     199: iload         9
     201: aload_0
     202: aload_1
     203: iload         7
     205: aaload
     206: iload         9
     208: iaload
     209: aload_0
     210: iload         8
     212: aload_1
     213: iload         4
     215: aaload
     216: iload         9
     218: iaload
     219: invokevirtual #28                 // Method multiply:(II)I
     222: invokevirtual #29                 // Method add:(II)I
     225: iastore
     226: iinc          9, 1
     229: goto          189
     232: iinc          7, 1
     235: goto          170
     238: iinc          4, 1
     241: goto          50
     244: iload_2
     245: iconst_1
     246: isub
     247: istore        4
     249: iload         4
     251: iflt          332
     254: iconst_0
     255: istore        5
     257: iload         5
     259: iload         4
     261: if_icmpge     326
     264: aload_1
     265: iload         5
     267: aaload
     268: iload         4
     270: iaload
     271: istore        6
     273: iload         4
     275: istore        7
     277: iload         7
     279: iload_3
     280: if_icmpge     320
     283: aload_1
     284: iload         5
     286: aaload
     287: iload         7
     289: aload_0
     290: aload_1
     291: iload         5
     293: aaload
     294: iload         7
     296: iaload
     297: aload_0
     298: iload         6
     300: aload_1
     301: iload         4
     303: aaload
     304: iload         7
     306: iaload
     307: invokevirtual #28                 // Method multiply:(II)I
     310: invokevirtual #29                 // Method add:(II)I
     313: iastore
     314: iinc          7, 1
     317: goto          277
     320: iinc          5, 1
     323: goto          257
     326: iinc          4, -1
     329: goto          249
     332: return

  static {};
    Code:
       0: ldc           #18                 // class org/apache/hadoop/io/erasurecode/rawcoder/util/GaloisField
       2: invokevirtual #32                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #2                  // Field $assertionsDisabled:Z
      16: new           #33                 // class java/util/HashMap
      19: dup
      20: invokespecial #34                 // Method java/util/HashMap."<init>":()V
      23: putstatic     #15                 // Field instances:Ljava/util/Map;
      26: return
}
