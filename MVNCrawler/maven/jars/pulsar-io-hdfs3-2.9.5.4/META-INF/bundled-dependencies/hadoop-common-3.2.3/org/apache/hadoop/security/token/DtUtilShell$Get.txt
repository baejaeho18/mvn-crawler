Compiled from "DtUtilShell.java"
class org.apache.hadoop.security.token.DtUtilShell$Get extends org.apache.hadoop.tools.CommandShell$SubCommand {
  public static final java.lang.String GET_USAGE;

  private static final java.lang.String PREFIX_HTTP;

  private static final java.lang.String PREFIX_HTTPS;

  private java.lang.String url;

  final org.apache.hadoop.security.token.DtUtilShell this$0;

  public org.apache.hadoop.security.token.DtUtilShell$Get(org.apache.hadoop.security.token.DtUtilShell);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/apache/hadoop/security/token/DtUtilShell;
       5: aload_0
       6: aload_1
       7: invokespecial #3                  // Method org/apache/hadoop/tools/CommandShell$SubCommand."<init>":(Lorg/apache/hadoop/tools/CommandShell;)V
      10: aload_0
      11: aconst_null
      12: putfield      #4                  // Field url:Ljava/lang/String;
      15: return

  public org.apache.hadoop.security.token.DtUtilShell$Get(org.apache.hadoop.security.token.DtUtilShell, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/apache/hadoop/security/token/DtUtilShell;
       5: aload_0
       6: aload_1
       7: invokespecial #3                  // Method org/apache/hadoop/tools/CommandShell$SubCommand."<init>":(Lorg/apache/hadoop/tools/CommandShell;)V
      10: aload_0
      11: aconst_null
      12: putfield      #4                  // Field url:Ljava/lang/String;
      15: aload_0
      16: aload_2
      17: putfield      #4                  // Field url:Ljava/lang/String;
      20: return

  public boolean isGenericUrl();
    Code:
       0: aload_0
       1: getfield      #4                  // Field url:Ljava/lang/String;
       4: ldc           #6                  // String http://
       6: invokevirtual #7                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       9: ifne          24
      12: aload_0
      13: getfield      #4                  // Field url:Ljava/lang/String;
      16: ldc           #8                  // String https://
      18: invokevirtual #7                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public boolean validate();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/apache/hadoop/security/token/DtUtilShell;
       4: invokestatic  #9                  // Method org/apache/hadoop/security/token/DtUtilShell.access$600:(Lorg/apache/hadoop/security/token/DtUtilShell;)Lorg/apache/hadoop/io/Text;
       7: ifnull        29
      10: aload_0
      11: invokevirtual #10                 // Method isGenericUrl:()Z
      14: ifne          29
      17: invokestatic  #11                 // Method org/apache/hadoop/security/token/DtUtilShell.access$700:()Lorg/slf4j/Logger;
      20: ldc           #12                 // String Only provide -service with http/https URL.
      22: invokeinterface #13,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
      27: iconst_0
      28: ireturn
      29: aload_0
      30: getfield      #2                  // Field this$0:Lorg/apache/hadoop/security/token/DtUtilShell;
      33: invokestatic  #9                  // Method org/apache/hadoop/security/token/DtUtilShell.access$600:(Lorg/apache/hadoop/security/token/DtUtilShell;)Lorg/apache/hadoop/io/Text;
      36: ifnonnull     58
      39: aload_0
      40: invokevirtual #10                 // Method isGenericUrl:()Z
      43: ifeq          58
      46: invokestatic  #11                 // Method org/apache/hadoop/security/token/DtUtilShell.access$700:()Lorg/slf4j/Logger;
      49: ldc           #14                 // String Must provide -service with http/https URL.
      51: invokeinterface #13,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
      56: iconst_0
      57: ireturn
      58: aload_0
      59: getfield      #4                  // Field url:Ljava/lang/String;
      62: ldc           #15                 // String ://
      64: invokevirtual #16                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      67: iconst_m1
      68: if_icmpne     103
      71: invokestatic  #11                 // Method org/apache/hadoop/security/token/DtUtilShell.access$700:()Lorg/slf4j/Logger;
      74: new           #17                 // class java/lang/StringBuilder
      77: dup
      78: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      81: ldc           #19                 // String URL does not contain a service specification:
      83: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: aload_0
      87: getfield      #4                  // Field url:Ljava/lang/String;
      90: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      96: invokeinterface #13,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
     101: iconst_0
     102: ireturn
     103: iconst_1
     104: ireturn

  public void execute() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/apache/hadoop/security/token/DtUtilShell;
       4: invokestatic  #22                 // Method org/apache/hadoop/security/token/DtUtilShell.access$800:(Lorg/apache/hadoop/security/token/DtUtilShell;)Ljava/io/File;
       7: aload_0
       8: getfield      #2                  // Field this$0:Lorg/apache/hadoop/security/token/DtUtilShell;
      11: invokestatic  #23                 // Method org/apache/hadoop/security/token/DtUtilShell.access$900:(Lorg/apache/hadoop/security/token/DtUtilShell;)Ljava/lang/String;
      14: aload_0
      15: getfield      #2                  // Field this$0:Lorg/apache/hadoop/security/token/DtUtilShell;
      18: invokestatic  #24                 // Method org/apache/hadoop/security/token/DtUtilShell.access$500:(Lorg/apache/hadoop/security/token/DtUtilShell;)Lorg/apache/hadoop/io/Text;
      21: aload_0
      22: getfield      #2                  // Field this$0:Lorg/apache/hadoop/security/token/DtUtilShell;
      25: invokestatic  #9                  // Method org/apache/hadoop/security/token/DtUtilShell.access$600:(Lorg/apache/hadoop/security/token/DtUtilShell;)Lorg/apache/hadoop/io/Text;
      28: aload_0
      29: getfield      #4                  // Field url:Ljava/lang/String;
      32: aload_0
      33: getfield      #2                  // Field this$0:Lorg/apache/hadoop/security/token/DtUtilShell;
      36: invokestatic  #25                 // Method org/apache/hadoop/security/token/DtUtilShell.access$1000:(Lorg/apache/hadoop/security/token/DtUtilShell;)Ljava/lang/String;
      39: aload_0
      40: getfield      #2                  // Field this$0:Lorg/apache/hadoop/security/token/DtUtilShell;
      43: invokevirtual #26                 // Method org/apache/hadoop/security/token/DtUtilShell.getConf:()Lorg/apache/hadoop/conf/Configuration;
      46: invokestatic  #27                 // Method org/apache/hadoop/security/token/DtFileOperations.getTokenFile:(Ljava/io/File;Ljava/lang/String;Lorg/apache/hadoop/io/Text;Lorg/apache/hadoop/io/Text;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V
      49: return

  public java.lang.String getUsage();
    Code:
       0: ldc           #28                 // String dtutil get URL [-service <scheme>] [-format (java|protobuf)][-alias <alias>] [-renewer <renewer>] filename
       2: areturn
}
