Compiled from "ArrayPrimitiveWritable.java"
public class org.apache.hadoop.io.ArrayPrimitiveWritable implements org.apache.hadoop.io.Writable {
  private java.lang.Class<?> componentType;

  private java.lang.Class<?> declaredComponentType;

  private int length;

  private java.lang.Object value;

  private static final java.util.Map<java.lang.String, java.lang.Class<?>> PRIMITIVE_NAMES;

  private static java.lang.Class<?> getPrimitiveClass(java.lang.String);
    Code:
       0: getstatic     #1                  // Field PRIMITIVE_NAMES:Ljava/util/Map;
       3: aload_0
       4: invokeinterface #2,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #3                  // class java/lang/Class
      12: areturn

  private static void checkPrimitive(java.lang.Class<?>);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #4                  // class org/apache/hadoop/HadoopIllegalArgumentException
       7: dup
       8: ldc           #5                  // String null component type not allowed
      10: invokespecial #6                  // Method org/apache/hadoop/HadoopIllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: getstatic     #1                  // Field PRIMITIVE_NAMES:Ljava/util/Map;
      17: aload_0
      18: invokevirtual #7                  // Method java/lang/Class.getName:()Ljava/lang/String;
      21: invokeinterface #8,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      26: ifne          64
      29: new           #4                  // class org/apache/hadoop/HadoopIllegalArgumentException
      32: dup
      33: new           #9                  // class java/lang/StringBuilder
      36: dup
      37: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      40: ldc           #11                 // String input array component type
      42: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_0
      46: invokevirtual #7                  // Method java/lang/Class.getName:()Ljava/lang/String;
      49: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: ldc           #13                 // String  is not a candidate primitive type
      54: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokespecial #6                  // Method org/apache/hadoop/HadoopIllegalArgumentException."<init>":(Ljava/lang/String;)V
      63: athrow
      64: return

  private void checkDeclaredComponentType(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #15                 // Field declaredComponentType:Ljava/lang/Class;
       4: ifnull        60
       7: aload_1
       8: aload_0
       9: getfield      #15                 // Field declaredComponentType:Ljava/lang/Class;
      12: if_acmpeq     60
      15: new           #4                  // class org/apache/hadoop/HadoopIllegalArgumentException
      18: dup
      19: new           #9                  // class java/lang/StringBuilder
      22: dup
      23: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #11                 // String input array component type
      28: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_1
      32: invokevirtual #7                  // Method java/lang/Class.getName:()Ljava/lang/String;
      35: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: ldc           #16                 // String  does not match declared type
      40: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_0
      44: getfield      #15                 // Field declaredComponentType:Ljava/lang/Class;
      47: invokevirtual #7                  // Method java/lang/Class.getName:()Ljava/lang/String;
      50: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: invokespecial #6                  // Method org/apache/hadoop/HadoopIllegalArgumentException."<init>":(Ljava/lang/String;)V
      59: athrow
      60: return

  private static void checkArray(java.lang.Object);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #4                  // class org/apache/hadoop/HadoopIllegalArgumentException
       7: dup
       8: ldc           #17                 // String null value not allowed
      10: invokespecial #6                  // Method org/apache/hadoop/HadoopIllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokevirtual #18                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      18: invokevirtual #19                 // Method java/lang/Class.isArray:()Z
      21: ifne          59
      24: new           #4                  // class org/apache/hadoop/HadoopIllegalArgumentException
      27: dup
      28: new           #9                  // class java/lang/StringBuilder
      31: dup
      32: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      35: ldc           #20                 // String non-array value of class
      37: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_0
      41: invokevirtual #18                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      44: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      47: ldc           #22                 // String  not allowed
      49: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: invokespecial #6                  // Method org/apache/hadoop/HadoopIllegalArgumentException."<init>":(Ljava/lang/String;)V
      58: athrow
      59: return

  public org.apache.hadoop.io.ArrayPrimitiveWritable();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #24                 // Field componentType:Ljava/lang/Class;
       9: aload_0
      10: aconst_null
      11: putfield      #15                 // Field declaredComponentType:Ljava/lang/Class;
      14: return

  public org.apache.hadoop.io.ArrayPrimitiveWritable(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokespecial #23                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #24                 // Field componentType:Ljava/lang/Class;
       9: aload_0
      10: aconst_null
      11: putfield      #15                 // Field declaredComponentType:Ljava/lang/Class;
      14: aload_1
      15: invokestatic  #25                 // Method checkPrimitive:(Ljava/lang/Class;)V
      18: aload_0
      19: aload_1
      20: putfield      #15                 // Field declaredComponentType:Ljava/lang/Class;
      23: return

  public org.apache.hadoop.io.ArrayPrimitiveWritable(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #23                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #24                 // Field componentType:Ljava/lang/Class;
       9: aload_0
      10: aconst_null
      11: putfield      #15                 // Field declaredComponentType:Ljava/lang/Class;
      14: aload_0
      15: aload_1
      16: invokevirtual #26                 // Method set:(Ljava/lang/Object;)V
      19: return

  public java.lang.Object get();
    Code:
       0: aload_0
       1: getfield      #27                 // Field value:Ljava/lang/Object;
       4: areturn

  public java.lang.Class<?> getComponentType();
    Code:
       0: aload_0
       1: getfield      #24                 // Field componentType:Ljava/lang/Class;
       4: areturn

  public java.lang.Class<?> getDeclaredComponentType();
    Code:
       0: aload_0
       1: getfield      #15                 // Field declaredComponentType:Ljava/lang/Class;
       4: areturn

  public boolean isDeclaredComponentType(java.lang.Class<?>);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #15                 // Field declaredComponentType:Ljava/lang/Class;
       5: if_acmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public void set(java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #28                 // Method checkArray:(Ljava/lang/Object;)V
       4: aload_1
       5: invokevirtual #18                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: invokevirtual #29                 // Method java/lang/Class.getComponentType:()Ljava/lang/Class;
      11: astore_2
      12: aload_2
      13: invokestatic  #25                 // Method checkPrimitive:(Ljava/lang/Class;)V
      16: aload_0
      17: aload_2
      18: invokespecial #30                 // Method checkDeclaredComponentType:(Ljava/lang/Class;)V
      21: aload_0
      22: aload_2
      23: putfield      #24                 // Field componentType:Ljava/lang/Class;
      26: aload_0
      27: aload_1
      28: putfield      #27                 // Field value:Ljava/lang/Object;
      31: aload_0
      32: aload_1
      33: invokestatic  #31                 // Method java/lang/reflect/Array.getLength:(Ljava/lang/Object;)I
      36: putfield      #32                 // Field length:I
      39: return

  public void write(java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #24                 // Field componentType:Ljava/lang/Class;
       5: invokevirtual #7                  // Method java/lang/Class.getName:()Ljava/lang/String;
       8: invokestatic  #33                 // Method org/apache/hadoop/io/UTF8.writeString:(Ljava/io/DataOutput;Ljava/lang/String;)I
      11: pop
      12: aload_1
      13: aload_0
      14: getfield      #32                 // Field length:I
      17: invokeinterface #34,  2           // InterfaceMethod java/io/DataOutput.writeInt:(I)V
      22: aload_0
      23: getfield      #24                 // Field componentType:Ljava/lang/Class;
      26: getstatic     #35                 // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
      29: if_acmpne     40
      32: aload_0
      33: aload_1
      34: invokespecial #36                 // Method writeBooleanArray:(Ljava/io/DataOutput;)V
      37: goto          204
      40: aload_0
      41: getfield      #24                 // Field componentType:Ljava/lang/Class;
      44: getstatic     #37                 // Field java/lang/Character.TYPE:Ljava/lang/Class;
      47: if_acmpne     58
      50: aload_0
      51: aload_1
      52: invokespecial #38                 // Method writeCharArray:(Ljava/io/DataOutput;)V
      55: goto          204
      58: aload_0
      59: getfield      #24                 // Field componentType:Ljava/lang/Class;
      62: getstatic     #39                 // Field java/lang/Byte.TYPE:Ljava/lang/Class;
      65: if_acmpne     76
      68: aload_0
      69: aload_1
      70: invokespecial #40                 // Method writeByteArray:(Ljava/io/DataOutput;)V
      73: goto          204
      76: aload_0
      77: getfield      #24                 // Field componentType:Ljava/lang/Class;
      80: getstatic     #41                 // Field java/lang/Short.TYPE:Ljava/lang/Class;
      83: if_acmpne     94
      86: aload_0
      87: aload_1
      88: invokespecial #42                 // Method writeShortArray:(Ljava/io/DataOutput;)V
      91: goto          204
      94: aload_0
      95: getfield      #24                 // Field componentType:Ljava/lang/Class;
      98: getstatic     #43                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
     101: if_acmpne     112
     104: aload_0
     105: aload_1
     106: invokespecial #44                 // Method writeIntArray:(Ljava/io/DataOutput;)V
     109: goto          204
     112: aload_0
     113: getfield      #24                 // Field componentType:Ljava/lang/Class;
     116: getstatic     #45                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
     119: if_acmpne     130
     122: aload_0
     123: aload_1
     124: invokespecial #46                 // Method writeLongArray:(Ljava/io/DataOutput;)V
     127: goto          204
     130: aload_0
     131: getfield      #24                 // Field componentType:Ljava/lang/Class;
     134: getstatic     #47                 // Field java/lang/Float.TYPE:Ljava/lang/Class;
     137: if_acmpne     148
     140: aload_0
     141: aload_1
     142: invokespecial #48                 // Method writeFloatArray:(Ljava/io/DataOutput;)V
     145: goto          204
     148: aload_0
     149: getfield      #24                 // Field componentType:Ljava/lang/Class;
     152: getstatic     #49                 // Field java/lang/Double.TYPE:Ljava/lang/Class;
     155: if_acmpne     166
     158: aload_0
     159: aload_1
     160: invokespecial #50                 // Method writeDoubleArray:(Ljava/io/DataOutput;)V
     163: goto          204
     166: new           #51                 // class java/io/IOException
     169: dup
     170: new           #9                  // class java/lang/StringBuilder
     173: dup
     174: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
     177: ldc           #52                 // String Component type
     179: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     182: aload_0
     183: getfield      #24                 // Field componentType:Ljava/lang/Class;
     186: invokevirtual #53                 // Method java/lang/Class.toString:()Ljava/lang/String;
     189: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     192: ldc           #54                 // String  is set as the output type, but no encoding is implemented for this type.
     194: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     197: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     200: invokespecial #55                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     203: athrow
     204: return

  public void readFields(java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #56                 // Method org/apache/hadoop/io/UTF8.readString:(Ljava/io/DataInput;)Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: invokestatic  #57                 // Method getPrimitiveClass:(Ljava/lang/String;)Ljava/lang/Class;
       9: astore_3
      10: aload_3
      11: ifnonnull     46
      14: new           #51                 // class java/io/IOException
      17: dup
      18: new           #9                  // class java/lang/StringBuilder
      21: dup
      22: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #58                 // String encoded array component type
      27: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_2
      31: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: ldc           #13                 // String  is not a candidate primitive type
      36: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokespecial #55                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: aload_0
      47: aload_3
      48: invokespecial #30                 // Method checkDeclaredComponentType:(Ljava/lang/Class;)V
      51: aload_0
      52: aload_3
      53: putfield      #24                 // Field componentType:Ljava/lang/Class;
      56: aload_1
      57: invokeinterface #59,  1           // InterfaceMethod java/io/DataInput.readInt:()I
      62: istore        4
      64: iload         4
      66: ifge          97
      69: new           #51                 // class java/io/IOException
      72: dup
      73: new           #9                  // class java/lang/StringBuilder
      76: dup
      77: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      80: ldc           #60                 // String encoded array length is negative
      82: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: iload         4
      87: invokevirtual #61                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      90: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      93: invokespecial #55                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      96: athrow
      97: aload_0
      98: iload         4
     100: putfield      #32                 // Field length:I
     103: aload_0
     104: aload_3
     105: iload         4
     107: invokestatic  #62                 // Method java/lang/reflect/Array.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;
     110: putfield      #27                 // Field value:Ljava/lang/Object;
     113: aload_3
     114: getstatic     #35                 // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
     117: if_acmpne     128
     120: aload_0
     121: aload_1
     122: invokespecial #63                 // Method readBooleanArray:(Ljava/io/DataInput;)V
     125: goto          277
     128: aload_3
     129: getstatic     #37                 // Field java/lang/Character.TYPE:Ljava/lang/Class;
     132: if_acmpne     143
     135: aload_0
     136: aload_1
     137: invokespecial #64                 // Method readCharArray:(Ljava/io/DataInput;)V
     140: goto          277
     143: aload_3
     144: getstatic     #39                 // Field java/lang/Byte.TYPE:Ljava/lang/Class;
     147: if_acmpne     158
     150: aload_0
     151: aload_1
     152: invokespecial #65                 // Method readByteArray:(Ljava/io/DataInput;)V
     155: goto          277
     158: aload_3
     159: getstatic     #41                 // Field java/lang/Short.TYPE:Ljava/lang/Class;
     162: if_acmpne     173
     165: aload_0
     166: aload_1
     167: invokespecial #66                 // Method readShortArray:(Ljava/io/DataInput;)V
     170: goto          277
     173: aload_3
     174: getstatic     #43                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
     177: if_acmpne     188
     180: aload_0
     181: aload_1
     182: invokespecial #67                 // Method readIntArray:(Ljava/io/DataInput;)V
     185: goto          277
     188: aload_3
     189: getstatic     #45                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
     192: if_acmpne     203
     195: aload_0
     196: aload_1
     197: invokespecial #68                 // Method readLongArray:(Ljava/io/DataInput;)V
     200: goto          277
     203: aload_3
     204: getstatic     #47                 // Field java/lang/Float.TYPE:Ljava/lang/Class;
     207: if_acmpne     218
     210: aload_0
     211: aload_1
     212: invokespecial #69                 // Method readFloatArray:(Ljava/io/DataInput;)V
     215: goto          277
     218: aload_3
     219: getstatic     #49                 // Field java/lang/Double.TYPE:Ljava/lang/Class;
     222: if_acmpne     233
     225: aload_0
     226: aload_1
     227: invokespecial #70                 // Method readDoubleArray:(Ljava/io/DataInput;)V
     230: goto          277
     233: new           #51                 // class java/io/IOException
     236: dup
     237: new           #9                  // class java/lang/StringBuilder
     240: dup
     241: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
     244: ldc           #71                 // String Encoded type
     246: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     249: aload_2
     250: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     253: ldc           #72                 // String  converted to valid component type
     255: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     258: aload_3
     259: invokevirtual #53                 // Method java/lang/Class.toString:()Ljava/lang/String;
     262: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     265: ldc           #73                 // String  but no encoding is implemented for this type.
     267: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     270: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     273: invokespecial #55                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     276: athrow
     277: return

  private void writeBooleanArray(java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #27                 // Field value:Ljava/lang/Object;
       4: checkcast     #74                 // class "[Z"
       7: checkcast     #74                 // class "[Z"
      10: astore_2
      11: iconst_0
      12: istore_3
      13: iload_3
      14: aload_0
      15: getfield      #32                 // Field length:I
      18: if_icmpge     36
      21: aload_1
      22: aload_2
      23: iload_3
      24: baload
      25: invokeinterface #75,  2           // InterfaceMethod java/io/DataOutput.writeBoolean:(Z)V
      30: iinc          3, 1
      33: goto          13
      36: return

  private void writeCharArray(java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #27                 // Field value:Ljava/lang/Object;
       4: checkcast     #76                 // class "[C"
       7: checkcast     #76                 // class "[C"
      10: astore_2
      11: iconst_0
      12: istore_3
      13: iload_3
      14: aload_0
      15: getfield      #32                 // Field length:I
      18: if_icmpge     36
      21: aload_1
      22: aload_2
      23: iload_3
      24: caload
      25: invokeinterface #77,  2           // InterfaceMethod java/io/DataOutput.writeChar:(I)V
      30: iinc          3, 1
      33: goto          13
      36: return

  private void writeByteArray(java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #27                 // Field value:Ljava/lang/Object;
       5: checkcast     #78                 // class "[B"
       8: checkcast     #78                 // class "[B"
      11: iconst_0
      12: aload_0
      13: getfield      #32                 // Field length:I
      16: invokeinterface #79,  4           // InterfaceMethod java/io/DataOutput.write:([BII)V
      21: return

  private void writeShortArray(java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #27                 // Field value:Ljava/lang/Object;
       4: checkcast     #80                 // class "[S"
       7: checkcast     #80                 // class "[S"
      10: astore_2
      11: iconst_0
      12: istore_3
      13: iload_3
      14: aload_0
      15: getfield      #32                 // Field length:I
      18: if_icmpge     36
      21: aload_1
      22: aload_2
      23: iload_3
      24: saload
      25: invokeinterface #81,  2           // InterfaceMethod java/io/DataOutput.writeShort:(I)V
      30: iinc          3, 1
      33: goto          13
      36: return

  private void writeIntArray(java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #27                 // Field value:Ljava/lang/Object;
       4: checkcast     #82                 // class "[I"
       7: checkcast     #82                 // class "[I"
      10: astore_2
      11: iconst_0
      12: istore_3
      13: iload_3
      14: aload_0
      15: getfield      #32                 // Field length:I
      18: if_icmpge     36
      21: aload_1
      22: aload_2
      23: iload_3
      24: iaload
      25: invokeinterface #34,  2           // InterfaceMethod java/io/DataOutput.writeInt:(I)V
      30: iinc          3, 1
      33: goto          13
      36: return

  private void writeLongArray(java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #27                 // Field value:Ljava/lang/Object;
       4: checkcast     #83                 // class "[J"
       7: checkcast     #83                 // class "[J"
      10: astore_2
      11: iconst_0
      12: istore_3
      13: iload_3
      14: aload_0
      15: getfield      #32                 // Field length:I
      18: if_icmpge     36
      21: aload_1
      22: aload_2
      23: iload_3
      24: laload
      25: invokeinterface #84,  3           // InterfaceMethod java/io/DataOutput.writeLong:(J)V
      30: iinc          3, 1
      33: goto          13
      36: return

  private void writeFloatArray(java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #27                 // Field value:Ljava/lang/Object;
       4: checkcast     #85                 // class "[F"
       7: checkcast     #85                 // class "[F"
      10: astore_2
      11: iconst_0
      12: istore_3
      13: iload_3
      14: aload_0
      15: getfield      #32                 // Field length:I
      18: if_icmpge     36
      21: aload_1
      22: aload_2
      23: iload_3
      24: faload
      25: invokeinterface #86,  2           // InterfaceMethod java/io/DataOutput.writeFloat:(F)V
      30: iinc          3, 1
      33: goto          13
      36: return

  private void writeDoubleArray(java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #27                 // Field value:Ljava/lang/Object;
       4: checkcast     #87                 // class "[D"
       7: checkcast     #87                 // class "[D"
      10: astore_2
      11: iconst_0
      12: istore_3
      13: iload_3
      14: aload_0
      15: getfield      #32                 // Field length:I
      18: if_icmpge     36
      21: aload_1
      22: aload_2
      23: iload_3
      24: daload
      25: invokeinterface #88,  3           // InterfaceMethod java/io/DataOutput.writeDouble:(D)V
      30: iinc          3, 1
      33: goto          13
      36: return

  private void readBooleanArray(java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #27                 // Field value:Ljava/lang/Object;
       4: checkcast     #74                 // class "[Z"
       7: checkcast     #74                 // class "[Z"
      10: astore_2
      11: iconst_0
      12: istore_3
      13: iload_3
      14: aload_0
      15: getfield      #32                 // Field length:I
      18: if_icmpge     36
      21: aload_2
      22: iload_3
      23: aload_1
      24: invokeinterface #89,  1           // InterfaceMethod java/io/DataInput.readBoolean:()Z
      29: bastore
      30: iinc          3, 1
      33: goto          13
      36: return

  private void readCharArray(java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #27                 // Field value:Ljava/lang/Object;
       4: checkcast     #76                 // class "[C"
       7: checkcast     #76                 // class "[C"
      10: astore_2
      11: iconst_0
      12: istore_3
      13: iload_3
      14: aload_0
      15: getfield      #32                 // Field length:I
      18: if_icmpge     36
      21: aload_2
      22: iload_3
      23: aload_1
      24: invokeinterface #90,  1           // InterfaceMethod java/io/DataInput.readChar:()C
      29: castore
      30: iinc          3, 1
      33: goto          13
      36: return

  private void readByteArray(java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #27                 // Field value:Ljava/lang/Object;
       5: checkcast     #78                 // class "[B"
       8: checkcast     #78                 // class "[B"
      11: iconst_0
      12: aload_0
      13: getfield      #32                 // Field length:I
      16: invokeinterface #91,  4           // InterfaceMethod java/io/DataInput.readFully:([BII)V
      21: return

  private void readShortArray(java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #27                 // Field value:Ljava/lang/Object;
       4: checkcast     #80                 // class "[S"
       7: checkcast     #80                 // class "[S"
      10: astore_2
      11: iconst_0
      12: istore_3
      13: iload_3
      14: aload_0
      15: getfield      #32                 // Field length:I
      18: if_icmpge     36
      21: aload_2
      22: iload_3
      23: aload_1
      24: invokeinterface #92,  1           // InterfaceMethod java/io/DataInput.readShort:()S
      29: sastore
      30: iinc          3, 1
      33: goto          13
      36: return

  private void readIntArray(java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #27                 // Field value:Ljava/lang/Object;
       4: checkcast     #82                 // class "[I"
       7: checkcast     #82                 // class "[I"
      10: astore_2
      11: iconst_0
      12: istore_3
      13: iload_3
      14: aload_0
      15: getfield      #32                 // Field length:I
      18: if_icmpge     36
      21: aload_2
      22: iload_3
      23: aload_1
      24: invokeinterface #59,  1           // InterfaceMethod java/io/DataInput.readInt:()I
      29: iastore
      30: iinc          3, 1
      33: goto          13
      36: return

  private void readLongArray(java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #27                 // Field value:Ljava/lang/Object;
       4: checkcast     #83                 // class "[J"
       7: checkcast     #83                 // class "[J"
      10: astore_2
      11: iconst_0
      12: istore_3
      13: iload_3
      14: aload_0
      15: getfield      #32                 // Field length:I
      18: if_icmpge     36
      21: aload_2
      22: iload_3
      23: aload_1
      24: invokeinterface #93,  1           // InterfaceMethod java/io/DataInput.readLong:()J
      29: lastore
      30: iinc          3, 1
      33: goto          13
      36: return

  private void readFloatArray(java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #27                 // Field value:Ljava/lang/Object;
       4: checkcast     #85                 // class "[F"
       7: checkcast     #85                 // class "[F"
      10: astore_2
      11: iconst_0
      12: istore_3
      13: iload_3
      14: aload_0
      15: getfield      #32                 // Field length:I
      18: if_icmpge     36
      21: aload_2
      22: iload_3
      23: aload_1
      24: invokeinterface #94,  1           // InterfaceMethod java/io/DataInput.readFloat:()F
      29: fastore
      30: iinc          3, 1
      33: goto          13
      36: return

  private void readDoubleArray(java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #27                 // Field value:Ljava/lang/Object;
       4: checkcast     #87                 // class "[D"
       7: checkcast     #87                 // class "[D"
      10: astore_2
      11: iconst_0
      12: istore_3
      13: iload_3
      14: aload_0
      15: getfield      #32                 // Field length:I
      18: if_icmpge     36
      21: aload_2
      22: iload_3
      23: aload_1
      24: invokeinterface #95,  1           // InterfaceMethod java/io/DataInput.readDouble:()D
      29: dastore
      30: iinc          3, 1
      33: goto          13
      36: return

  static {};
    Code:
       0: new           #96                 // class java/util/HashMap
       3: dup
       4: bipush        16
       6: invokespecial #97                 // Method java/util/HashMap."<init>":(I)V
       9: putstatic     #1                  // Field PRIMITIVE_NAMES:Ljava/util/Map;
      12: getstatic     #1                  // Field PRIMITIVE_NAMES:Ljava/util/Map;
      15: getstatic     #35                 // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
      18: invokevirtual #7                  // Method java/lang/Class.getName:()Ljava/lang/String;
      21: getstatic     #35                 // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
      24: invokeinterface #98,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: getstatic     #1                  // Field PRIMITIVE_NAMES:Ljava/util/Map;
      33: getstatic     #39                 // Field java/lang/Byte.TYPE:Ljava/lang/Class;
      36: invokevirtual #7                  // Method java/lang/Class.getName:()Ljava/lang/String;
      39: getstatic     #39                 // Field java/lang/Byte.TYPE:Ljava/lang/Class;
      42: invokeinterface #98,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      47: pop
      48: getstatic     #1                  // Field PRIMITIVE_NAMES:Ljava/util/Map;
      51: getstatic     #37                 // Field java/lang/Character.TYPE:Ljava/lang/Class;
      54: invokevirtual #7                  // Method java/lang/Class.getName:()Ljava/lang/String;
      57: getstatic     #37                 // Field java/lang/Character.TYPE:Ljava/lang/Class;
      60: invokeinterface #98,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      65: pop
      66: getstatic     #1                  // Field PRIMITIVE_NAMES:Ljava/util/Map;
      69: getstatic     #41                 // Field java/lang/Short.TYPE:Ljava/lang/Class;
      72: invokevirtual #7                  // Method java/lang/Class.getName:()Ljava/lang/String;
      75: getstatic     #41                 // Field java/lang/Short.TYPE:Ljava/lang/Class;
      78: invokeinterface #98,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      83: pop
      84: getstatic     #1                  // Field PRIMITIVE_NAMES:Ljava/util/Map;
      87: getstatic     #43                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      90: invokevirtual #7                  // Method java/lang/Class.getName:()Ljava/lang/String;
      93: getstatic     #43                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      96: invokeinterface #98,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     101: pop
     102: getstatic     #1                  // Field PRIMITIVE_NAMES:Ljava/util/Map;
     105: getstatic     #45                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
     108: invokevirtual #7                  // Method java/lang/Class.getName:()Ljava/lang/String;
     111: getstatic     #45                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
     114: invokeinterface #98,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     119: pop
     120: getstatic     #1                  // Field PRIMITIVE_NAMES:Ljava/util/Map;
     123: getstatic     #47                 // Field java/lang/Float.TYPE:Ljava/lang/Class;
     126: invokevirtual #7                  // Method java/lang/Class.getName:()Ljava/lang/String;
     129: getstatic     #47                 // Field java/lang/Float.TYPE:Ljava/lang/Class;
     132: invokeinterface #98,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     137: pop
     138: getstatic     #1                  // Field PRIMITIVE_NAMES:Ljava/util/Map;
     141: getstatic     #49                 // Field java/lang/Double.TYPE:Ljava/lang/Class;
     144: invokevirtual #7                  // Method java/lang/Class.getName:()Ljava/lang/String;
     147: getstatic     #49                 // Field java/lang/Double.TYPE:Ljava/lang/Class;
     150: invokeinterface #98,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     155: pop
     156: return
}
