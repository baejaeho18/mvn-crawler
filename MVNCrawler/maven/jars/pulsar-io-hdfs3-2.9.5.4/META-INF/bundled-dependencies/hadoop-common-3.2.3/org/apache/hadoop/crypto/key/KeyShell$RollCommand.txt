Compiled from "KeyShell.java"
class org.apache.hadoop.crypto.key.KeyShell$RollCommand extends org.apache.hadoop.crypto.key.KeyShell$Command {
  public static final java.lang.String USAGE;

  public static final java.lang.String DESC;

  private java.lang.String keyName;

  final org.apache.hadoop.crypto.key.KeyShell this$0;

  public org.apache.hadoop.crypto.key.KeyShell$RollCommand(org.apache.hadoop.crypto.key.KeyShell, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/hadoop/crypto/key/KeyShell;
       5: aload_0
       6: aload_1
       7: aconst_null
       8: invokespecial #2                  // Method org/apache/hadoop/crypto/key/KeyShell$Command."<init>":(Lorg/apache/hadoop/crypto/key/KeyShell;Lorg/apache/hadoop/crypto/key/KeyShell$1;)V
      11: aload_0
      12: aconst_null
      13: putfield      #3                  // Field keyName:Ljava/lang/String;
      16: aload_0
      17: aload_2
      18: putfield      #3                  // Field keyName:Ljava/lang/String;
      21: return

  public boolean validate();
    Code:
       0: iconst_1
       1: istore_1
       2: aload_0
       3: aload_0
       4: invokevirtual #4                  // Method getKeyProvider:()Lorg/apache/hadoop/crypto/key/KeyProvider;
       7: putfield      #5                  // Field provider:Lorg/apache/hadoop/crypto/key/KeyProvider;
      10: aload_0
      11: getfield      #5                  // Field provider:Lorg/apache/hadoop/crypto/key/KeyProvider;
      14: ifnonnull     19
      17: iconst_0
      18: istore_1
      19: aload_0
      20: getfield      #3                  // Field keyName:Ljava/lang/String;
      23: ifnonnull     40
      26: aload_0
      27: getfield      #1                  // Field this$0:Lorg/apache/hadoop/crypto/key/KeyShell;
      30: invokevirtual #6                  // Method org/apache/hadoop/crypto/key/KeyShell.getOut:()Ljava/io/PrintStream;
      33: ldc           #7                  // String Please provide a <keyname>.\nSee the usage description by using -help.
      35: invokevirtual #8                  // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      38: iconst_0
      39: istore_1
      40: iload_1
      41: ireturn

  public void execute() throws java.security.NoSuchAlgorithmException, java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method warnIfTransientProvider:()V
       4: aload_0
       5: getfield      #1                  // Field this$0:Lorg/apache/hadoop/crypto/key/KeyShell;
       8: invokevirtual #6                  // Method org/apache/hadoop/crypto/key/KeyShell.getOut:()Ljava/io/PrintStream;
      11: new           #10                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #12                 // String Rolling key version from KeyProvider:
      20: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_0
      24: getfield      #5                  // Field provider:Lorg/apache/hadoop/crypto/key/KeyProvider;
      27: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      30: ldc           #15                 // String \n  for key name:
      32: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: getfield      #3                  // Field keyName:Ljava/lang/String;
      39: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: invokevirtual #8                  // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      48: aload_0
      49: getfield      #5                  // Field provider:Lorg/apache/hadoop/crypto/key/KeyProvider;
      52: aload_0
      53: getfield      #3                  // Field keyName:Ljava/lang/String;
      56: invokevirtual #17                 // Method org/apache/hadoop/crypto/key/KeyProvider.rollNewVersion:(Ljava/lang/String;)Lorg/apache/hadoop/crypto/key/KeyProvider$KeyVersion;
      59: pop
      60: aload_0
      61: getfield      #5                  // Field provider:Lorg/apache/hadoop/crypto/key/KeyProvider;
      64: invokevirtual #18                 // Method org/apache/hadoop/crypto/key/KeyProvider.flush:()V
      67: aload_0
      68: getfield      #1                  // Field this$0:Lorg/apache/hadoop/crypto/key/KeyShell;
      71: invokevirtual #6                  // Method org/apache/hadoop/crypto/key/KeyShell.getOut:()Ljava/io/PrintStream;
      74: new           #10                 // class java/lang/StringBuilder
      77: dup
      78: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      81: aload_0
      82: getfield      #3                  // Field keyName:Ljava/lang/String;
      85: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: ldc           #19                 // String  has been successfully rolled.
      90: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      96: invokevirtual #8                  // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      99: aload_0
     100: invokevirtual #20                 // Method printProviderWritten:()V
     103: goto          158
     106: astore_1
     107: aload_0
     108: getfield      #1                  // Field this$0:Lorg/apache/hadoop/crypto/key/KeyShell;
     111: invokevirtual #6                  // Method org/apache/hadoop/crypto/key/KeyShell.getOut:()Ljava/io/PrintStream;
     114: new           #10                 // class java/lang/StringBuilder
     117: dup
     118: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
     121: ldc           #22                 // String Cannot roll key:
     123: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: aload_0
     127: getfield      #3                  // Field keyName:Ljava/lang/String;
     130: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: ldc           #23                 // String  within KeyProvider:
     135: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: aload_0
     139: getfield      #5                  // Field provider:Lorg/apache/hadoop/crypto/key/KeyProvider;
     142: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     145: ldc           #24                 // String .
     147: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     150: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     153: invokevirtual #8                  // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     156: aload_1
     157: athrow
     158: goto          213
     161: astore_1
     162: aload_0
     163: getfield      #1                  // Field this$0:Lorg/apache/hadoop/crypto/key/KeyShell;
     166: invokevirtual #6                  // Method org/apache/hadoop/crypto/key/KeyShell.getOut:()Ljava/io/PrintStream;
     169: new           #10                 // class java/lang/StringBuilder
     172: dup
     173: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
     176: ldc           #22                 // String Cannot roll key:
     178: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     181: aload_0
     182: getfield      #3                  // Field keyName:Ljava/lang/String;
     185: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     188: ldc           #23                 // String  within KeyProvider:
     190: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     193: aload_0
     194: getfield      #5                  // Field provider:Lorg/apache/hadoop/crypto/key/KeyProvider;
     197: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     200: ldc           #24                 // String .
     202: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     205: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     208: invokevirtual #8                  // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     211: aload_1
     212: athrow
     213: return
    Exception table:
       from    to  target type
          48   103   106   Class java/security/NoSuchAlgorithmException
           0   158   161   Class java/io/IOException

  public java.lang.String getUsage();
    Code:
       0: ldc           #27                 // String roll <keyname> [-provider <provider>] [-strict] [-help]:\n\nThe roll subcommand creates a new version for the specified key\nwithin the provider indicated using the -provider argument.\nIf -strict is supplied, fail immediately if the provider requires\na password and none is given.
       2: areturn
}
