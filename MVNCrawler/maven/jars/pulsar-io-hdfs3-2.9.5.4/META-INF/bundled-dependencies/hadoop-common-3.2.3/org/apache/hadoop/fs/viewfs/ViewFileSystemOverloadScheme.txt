Compiled from "ViewFileSystemOverloadScheme.java"
public class org.apache.hadoop.fs.viewfs.ViewFileSystemOverloadScheme extends org.apache.hadoop.fs.viewfs.ViewFileSystem {
  private java.net.URI myUri;

  public org.apache.hadoop.fs.viewfs.ViewFileSystemOverloadScheme() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/apache/hadoop/fs/viewfs/ViewFileSystem."<init>":()V
       4: return

  public java.lang.String getScheme();
    Code:
       0: aload_0
       1: getfield      #3                  // Field myUri:Ljava/net/URI;
       4: invokevirtual #4                  // Method java/net/URI.getScheme:()Ljava/lang/String;
       7: areturn

  java.lang.String getType();
    Code:
       0: ldc           #6                  // String viewfsOverloadScheme
       2: areturn

  public void initialize(java.net.URI, org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field myUri:Ljava/net/URI;
       5: getstatic     #7                  // Field LOG:Lorg/apache/commons/logging/Log;
       8: invokeinterface #8,  1            // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      13: ifeq          43
      16: getstatic     #7                  // Field LOG:Lorg/apache/commons/logging/Log;
      19: new           #9                  // class java/lang/StringBuilder
      22: dup
      23: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #11                 // String Initializing the ViewFileSystemOverloadScheme with the uri:
      28: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_1
      32: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      35: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokeinterface #15,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      43: aload_2
      44: ldc           #16                 // String fs.viewfs.mounttable.path
      46: invokevirtual #17                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;)Ljava/lang/String;
      49: astore_3
      50: aload_2
      51: ldc           #18                 // String fs.viewfs.mount.links.as.symlinks
      53: aload_2
      54: ldc           #18                 // String fs.viewfs.mount.links.as.symlinks
      56: iconst_0
      57: invokevirtual #19                 // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
      60: invokevirtual #20                 // Method org/apache/hadoop/conf/Configuration.setBoolean:(Ljava/lang/String;Z)V
      63: aload_2
      64: ldc           #21                 // String fs.viewfs.ignore.port.in.mount.table.name
      66: aload_2
      67: ldc           #21                 // String fs.viewfs.ignore.port.in.mount.table.name
      69: iconst_1
      70: invokevirtual #19                 // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
      73: invokevirtual #20                 // Method org/apache/hadoop/conf/Configuration.setBoolean:(Ljava/lang/String;Z)V
      76: aconst_null
      77: aload_3
      78: if_acmpeq     102
      81: new           #22                 // class org/apache/hadoop/fs/viewfs/HCFSMountTableConfigLoader
      84: dup
      85: invokespecial #23                 // Method org/apache/hadoop/fs/viewfs/HCFSMountTableConfigLoader."<init>":()V
      88: astore        4
      90: aload         4
      92: aload_3
      93: aload_2
      94: invokeinterface #24,  3           // InterfaceMethod org/apache/hadoop/fs/viewfs/MountTableConfigLoader.load:(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V
      99: goto          123
     102: getstatic     #7                  // Field LOG:Lorg/apache/commons/logging/Log;
     105: invokeinterface #8,  1            // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     110: ifeq          123
     113: getstatic     #7                  // Field LOG:Lorg/apache/commons/logging/Log;
     116: ldc           #25                 // String Missing configuration for fs.viewfs.mounttable.path. Proceedingwith core-site.xml mount-table information if avaialable.
     118: invokeinterface #15,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     123: aload_0
     124: aload_1
     125: aload_2
     126: invokespecial #26                 // Method org/apache/hadoop/fs/viewfs/ViewFileSystem.initialize:(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V
     129: return

  protected org.apache.hadoop.fs.viewfs.FsGetter fsGetter();
    Code:
       0: new           #27                 // class org/apache/hadoop/fs/viewfs/ViewFileSystemOverloadScheme$ChildFsGetter
       3: dup
       4: aload_0
       5: invokevirtual #28                 // Method getScheme:()Ljava/lang/String;
       8: invokespecial #29                 // Method org/apache/hadoop/fs/viewfs/ViewFileSystemOverloadScheme$ChildFsGetter."<init>":(Ljava/lang/String;)V
      11: areturn

  public org.apache.hadoop.fs.FileSystem getRawFileSystem(org.apache.hadoop.fs.Path, org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #30                 // Field fsState:Lorg/apache/hadoop/fs/viewfs/InodeTree;
       4: aload_0
       5: aload_1
       6: invokevirtual #31                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iconst_1
      10: invokevirtual #32                 // Method org/apache/hadoop/fs/viewfs/InodeTree.resolve:(Ljava/lang/String;Z)Lorg/apache/hadoop/fs/viewfs/InodeTree$ResolveResult;
      13: astore_3
      14: aload_3
      15: invokevirtual #33                 // Method org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.isInternalDir:()Z
      18: ifeq          36
      21: aload_0
      22: invokevirtual #34                 // Method fsGetter:()Lorg/apache/hadoop/fs/viewfs/FsGetter;
      25: aload_1
      26: invokevirtual #35                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
      29: aload_2
      30: invokevirtual #36                 // Method org/apache/hadoop/fs/viewfs/FsGetter.get:(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
      33: goto          46
      36: aload_3
      37: getfield      #37                 // Field org/apache/hadoop/fs/viewfs/InodeTree$ResolveResult.targetFileSystem:Ljava/lang/Object;
      40: checkcast     #38                 // class org/apache/hadoop/fs/viewfs/ChRootedFileSystem
      43: invokevirtual #39                 // Method org/apache/hadoop/fs/viewfs/ChRootedFileSystem.getMyFs:()Lorg/apache/hadoop/fs/FileSystem;
      46: areturn
      47: astore        4
      49: new           #41                 // class org/apache/hadoop/fs/viewfs/NotInMountpointException
      52: dup
      53: aload_1
      54: ldc           #42                 // String No link found for the given path.
      56: invokespecial #43                 // Method org/apache/hadoop/fs/viewfs/NotInMountpointException."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      59: athrow
    Exception table:
       from    to  target type
           0    46    47   Class java/io/FileNotFoundException
}
