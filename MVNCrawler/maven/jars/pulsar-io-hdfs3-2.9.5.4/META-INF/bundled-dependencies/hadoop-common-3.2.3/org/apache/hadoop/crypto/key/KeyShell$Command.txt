Compiled from "KeyShell.java"
abstract class org.apache.hadoop.crypto.key.KeyShell$Command extends org.apache.hadoop.tools.CommandShell$SubCommand {
  protected org.apache.hadoop.crypto.key.KeyProvider provider;

  final org.apache.hadoop.crypto.key.KeyShell this$0;

  private org.apache.hadoop.crypto.key.KeyShell$Command(org.apache.hadoop.crypto.key.KeyShell);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field this$0:Lorg/apache/hadoop/crypto/key/KeyShell;
       5: aload_0
       6: aload_1
       7: invokespecial #4                  // Method org/apache/hadoop/tools/CommandShell$SubCommand."<init>":(Lorg/apache/hadoop/tools/CommandShell;)V
      10: aload_0
      11: aconst_null
      12: putfield      #5                  // Field provider:Lorg/apache/hadoop/crypto/key/KeyProvider;
      15: return

  protected org.apache.hadoop.crypto.key.KeyProvider getKeyProvider();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #3                  // Field this$0:Lorg/apache/hadoop/crypto/key/KeyShell;
       6: invokevirtual #6                  // Method org/apache/hadoop/crypto/key/KeyShell.getConf:()Lorg/apache/hadoop/conf/Configuration;
       9: invokestatic  #7                  // Method org/apache/hadoop/crypto/key/KeyProviderFactory.getProviders:(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;
      12: astore_2
      13: aload_0
      14: getfield      #3                  // Field this$0:Lorg/apache/hadoop/crypto/key/KeyShell;
      17: invokestatic  #8                  // Method org/apache/hadoop/crypto/key/KeyShell.access$100:(Lorg/apache/hadoop/crypto/key/KeyShell;)Z
      20: ifeq          37
      23: aload_2
      24: iconst_0
      25: invokeinterface #9,  2            // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      30: checkcast     #10                 // class org/apache/hadoop/crypto/key/KeyProvider
      33: astore_1
      34: goto          81
      37: aload_2
      38: invokeinterface #11,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      43: astore_3
      44: aload_3
      45: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      50: ifeq          81
      53: aload_3
      54: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      59: checkcast     #10                 // class org/apache/hadoop/crypto/key/KeyProvider
      62: astore        4
      64: aload         4
      66: invokevirtual #14                 // Method org/apache/hadoop/crypto/key/KeyProvider.isTransient:()Z
      69: ifne          78
      72: aload         4
      74: astore_1
      75: goto          81
      78: goto          44
      81: goto          96
      84: astore_3
      85: aload_3
      86: aload_0
      87: getfield      #3                  // Field this$0:Lorg/apache/hadoop/crypto/key/KeyShell;
      90: invokevirtual #16                 // Method org/apache/hadoop/crypto/key/KeyShell.getErr:()Ljava/io/PrintStream;
      93: invokevirtual #17                 // Method java/io/IOException.printStackTrace:(Ljava/io/PrintStream;)V
      96: aload_1
      97: ifnonnull     112
     100: aload_0
     101: getfield      #3                  // Field this$0:Lorg/apache/hadoop/crypto/key/KeyShell;
     104: invokevirtual #18                 // Method org/apache/hadoop/crypto/key/KeyShell.getOut:()Ljava/io/PrintStream;
     107: ldc           #19                 // String There are no valid (non-transient) providers configured.\nNo action has been taken. Use the -provider option to specify\na provider. If you want to use a transient provider then you\nMUST use the -provider argument.
     109: invokevirtual #20                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     112: aload_1
     113: areturn
    Exception table:
       from    to  target type
           2    81    84   Class java/io/IOException

  protected void printProviderWritten();
    Code:
       0: aload_0
       1: getfield      #3                  // Field this$0:Lorg/apache/hadoop/crypto/key/KeyShell;
       4: invokevirtual #18                 // Method org/apache/hadoop/crypto/key/KeyShell.getOut:()Ljava/io/PrintStream;
       7: new           #21                 // class java/lang/StringBuilder
      10: dup
      11: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      14: aload_0
      15: getfield      #5                  // Field provider:Lorg/apache/hadoop/crypto/key/KeyProvider;
      18: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      21: ldc           #24                 // String  has been updated.
      23: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokevirtual #20                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      32: return

  protected void warnIfTransientProvider();
    Code:
       0: aload_0
       1: getfield      #5                  // Field provider:Lorg/apache/hadoop/crypto/key/KeyProvider;
       4: invokevirtual #14                 // Method org/apache/hadoop/crypto/key/KeyProvider.isTransient:()Z
       7: ifeq          22
      10: aload_0
      11: getfield      #3                  // Field this$0:Lorg/apache/hadoop/crypto/key/KeyShell;
      14: invokevirtual #18                 // Method org/apache/hadoop/crypto/key/KeyShell.getOut:()Ljava/io/PrintStream;
      17: ldc           #27                 // String WARNING: you are modifying a transient provider.
      19: invokevirtual #20                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      22: return

  public abstract void execute() throws java.lang.Exception;

  public abstract java.lang.String getUsage();

  org.apache.hadoop.crypto.key.KeyShell$Command(org.apache.hadoop.crypto.key.KeyShell, org.apache.hadoop.crypto.key.KeyShell$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method "<init>":(Lorg/apache/hadoop/crypto/key/KeyShell;)V
       5: return
}
