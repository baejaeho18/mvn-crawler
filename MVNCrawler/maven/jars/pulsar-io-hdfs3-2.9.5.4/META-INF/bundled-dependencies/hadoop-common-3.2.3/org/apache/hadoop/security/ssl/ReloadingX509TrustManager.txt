Compiled from "ReloadingX509TrustManager.java"
public final class org.apache.hadoop.security.ssl.ReloadingX509TrustManager implements javax.net.ssl.X509TrustManager,java.lang.Runnable {
  static final org.slf4j.Logger LOG;

  static final java.lang.String RELOAD_ERROR_MESSAGE;

  private java.lang.String type;

  private java.io.File file;

  private java.lang.String password;

  private long lastLoaded;

  private long reloadInterval;

  private java.util.concurrent.atomic.AtomicReference<javax.net.ssl.X509TrustManager> trustManagerRef;

  private volatile boolean running;

  private java.lang.Thread reloader;

  private static final java.security.cert.X509Certificate[] EMPTY;

  public org.apache.hadoop.security.ssl.ReloadingX509TrustManager(java.lang.String, java.lang.String, java.lang.String, long) throws java.io.IOException, java.security.GeneralSecurityException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field type:Ljava/lang/String;
       9: aload_0
      10: new           #3                  // class java/io/File
      13: dup
      14: aload_2
      15: invokespecial #4                  // Method java/io/File."<init>":(Ljava/lang/String;)V
      18: putfield      #5                  // Field file:Ljava/io/File;
      21: aload_0
      22: aload_3
      23: putfield      #6                  // Field password:Ljava/lang/String;
      26: aload_0
      27: new           #7                  // class java/util/concurrent/atomic/AtomicReference
      30: dup
      31: invokespecial #8                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      34: putfield      #9                  // Field trustManagerRef:Ljava/util/concurrent/atomic/AtomicReference;
      37: aload_0
      38: getfield      #9                  // Field trustManagerRef:Ljava/util/concurrent/atomic/AtomicReference;
      41: aload_0
      42: invokevirtual #10                 // Method loadTrustManager:()Ljavax/net/ssl/X509TrustManager;
      45: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      48: aload_0
      49: lload         4
      51: putfield      #12                 // Field reloadInterval:J
      54: return

  public void init();
    Code:
       0: aload_0
       1: new           #13                 // class java/lang/Thread
       4: dup
       5: aload_0
       6: ldc           #14                 // String Truststore reloader thread
       8: invokespecial #15                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;Ljava/lang/String;)V
      11: putfield      #16                 // Field reloader:Ljava/lang/Thread;
      14: aload_0
      15: getfield      #16                 // Field reloader:Ljava/lang/Thread;
      18: iconst_1
      19: invokevirtual #17                 // Method java/lang/Thread.setDaemon:(Z)V
      22: aload_0
      23: iconst_1
      24: putfield      #18                 // Field running:Z
      27: aload_0
      28: getfield      #16                 // Field reloader:Ljava/lang/Thread;
      31: invokevirtual #19                 // Method java/lang/Thread.start:()V
      34: return

  public void destroy();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #18                 // Field running:Z
       5: aload_0
       6: getfield      #16                 // Field reloader:Ljava/lang/Thread;
       9: invokevirtual #20                 // Method java/lang/Thread.interrupt:()V
      12: return

  public long getReloadInterval();
    Code:
       0: aload_0
       1: getfield      #12                 // Field reloadInterval:J
       4: lreturn

  public void checkClientTrusted(java.security.cert.X509Certificate[], java.lang.String) throws java.security.cert.CertificateException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field trustManagerRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #21                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #22                 // class javax/net/ssl/X509TrustManager
      10: astore_3
      11: aload_3
      12: ifnull        26
      15: aload_3
      16: aload_1
      17: aload_2
      18: invokeinterface #23,  3           // InterfaceMethod javax/net/ssl/X509TrustManager.checkClientTrusted:([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V
      23: goto          58
      26: new           #24                 // class java/security/cert/CertificateException
      29: dup
      30: new           #25                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #27                 // String Unknown client chain certificate:
      39: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_1
      43: iconst_0
      44: aaload
      45: invokevirtual #29                 // Method java/security/cert/X509Certificate.toString:()Ljava/lang/String;
      48: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: invokespecial #31                 // Method java/security/cert/CertificateException."<init>":(Ljava/lang/String;)V
      57: athrow
      58: return

  public void checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String) throws java.security.cert.CertificateException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field trustManagerRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #21                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #22                 // class javax/net/ssl/X509TrustManager
      10: astore_3
      11: aload_3
      12: ifnull        26
      15: aload_3
      16: aload_1
      17: aload_2
      18: invokeinterface #32,  3           // InterfaceMethod javax/net/ssl/X509TrustManager.checkServerTrusted:([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V
      23: goto          58
      26: new           #24                 // class java/security/cert/CertificateException
      29: dup
      30: new           #25                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #33                 // String Unknown server chain certificate:
      39: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_1
      43: iconst_0
      44: aaload
      45: invokevirtual #29                 // Method java/security/cert/X509Certificate.toString:()Ljava/lang/String;
      48: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: invokespecial #31                 // Method java/security/cert/CertificateException."<init>":(Ljava/lang/String;)V
      57: athrow
      58: return

  public java.security.cert.X509Certificate[] getAcceptedIssuers();
    Code:
       0: getstatic     #34                 // Field EMPTY:[Ljava/security/cert/X509Certificate;
       3: astore_1
       4: aload_0
       5: getfield      #9                  // Field trustManagerRef:Ljava/util/concurrent/atomic/AtomicReference;
       8: invokevirtual #21                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      11: checkcast     #22                 // class javax/net/ssl/X509TrustManager
      14: astore_2
      15: aload_2
      16: ifnull        26
      19: aload_2
      20: invokeinterface #35,  1           // InterfaceMethod javax/net/ssl/X509TrustManager.getAcceptedIssuers:()[Ljava/security/cert/X509Certificate;
      25: astore_1
      26: aload_1
      27: areturn

  boolean needsReload();
    Code:
       0: iconst_1
       1: istore_1
       2: aload_0
       3: getfield      #5                  // Field file:Ljava/io/File;
       6: invokevirtual #36                 // Method java/io/File.exists:()Z
       9: ifeq          32
      12: aload_0
      13: getfield      #5                  // Field file:Ljava/io/File;
      16: invokevirtual #37                 // Method java/io/File.lastModified:()J
      19: aload_0
      20: getfield      #38                 // Field lastLoaded:J
      23: lcmp
      24: ifne          37
      27: iconst_0
      28: istore_1
      29: goto          37
      32: aload_0
      33: lconst_0
      34: putfield      #38                 // Field lastLoaded:J
      37: iload_1
      38: ireturn

  javax.net.ssl.X509TrustManager loadTrustManager() throws java.io.IOException, java.security.GeneralSecurityException;
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #2                  // Field type:Ljava/lang/String;
       6: invokestatic  #39                 // Method java/security/KeyStore.getInstance:(Ljava/lang/String;)Ljava/security/KeyStore;
       9: astore_2
      10: new           #40                 // class java/io/FileInputStream
      13: dup
      14: aload_0
      15: getfield      #5                  // Field file:Ljava/io/File;
      18: invokespecial #41                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      21: astore_3
      22: aload_2
      23: aload_3
      24: aload_0
      25: getfield      #6                  // Field password:Ljava/lang/String;
      28: ifnonnull     35
      31: aconst_null
      32: goto          42
      35: aload_0
      36: getfield      #6                  // Field password:Ljava/lang/String;
      39: invokevirtual #42                 // Method java/lang/String.toCharArray:()[C
      42: invokevirtual #43                 // Method java/security/KeyStore.load:(Ljava/io/InputStream;[C)V
      45: aload_0
      46: aload_0
      47: getfield      #5                  // Field file:Ljava/io/File;
      50: invokevirtual #37                 // Method java/io/File.lastModified:()J
      53: putfield      #38                 // Field lastLoaded:J
      56: getstatic     #44                 // Field LOG:Lorg/slf4j/Logger;
      59: new           #25                 // class java/lang/StringBuilder
      62: dup
      63: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      66: ldc           #45                 // String Loaded truststore \'
      68: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: aload_0
      72: getfield      #5                  // Field file:Ljava/io/File;
      75: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      78: ldc           #47                 // String \'
      80: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      86: invokeinterface #48,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      91: aload_3
      92: invokevirtual #49                 // Method java/io/FileInputStream.close:()V
      95: goto          107
      98: astore        4
     100: aload_3
     101: invokevirtual #49                 // Method java/io/FileInputStream.close:()V
     104: aload         4
     106: athrow
     107: getstatic     #50                 // Field org/apache/hadoop/security/ssl/SSLFactory.SSLCERTIFICATE:Ljava/lang/String;
     110: invokestatic  #51                 // Method javax/net/ssl/TrustManagerFactory.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/TrustManagerFactory;
     113: astore        4
     115: aload         4
     117: aload_2
     118: invokevirtual #52                 // Method javax/net/ssl/TrustManagerFactory.init:(Ljava/security/KeyStore;)V
     121: aload         4
     123: invokevirtual #53                 // Method javax/net/ssl/TrustManagerFactory.getTrustManagers:()[Ljavax/net/ssl/TrustManager;
     126: astore        5
     128: aload         5
     130: astore        6
     132: aload         6
     134: arraylength
     135: istore        7
     137: iconst_0
     138: istore        8
     140: iload         8
     142: iload         7
     144: if_icmpge     177
     147: aload         6
     149: iload         8
     151: aaload
     152: astore        9
     154: aload         9
     156: instanceof    #22                 // class javax/net/ssl/X509TrustManager
     159: ifeq          171
     162: aload         9
     164: checkcast     #22                 // class javax/net/ssl/X509TrustManager
     167: astore_1
     168: goto          177
     171: iinc          8, 1
     174: goto          140
     177: aload_1
     178: areturn
    Exception table:
       from    to  target type
          22    91    98   any
          98   100    98   any

  public void run();
    Code:
       0: aload_0
       1: getfield      #18                 // Field running:Z
       4: ifeq          81
       7: aload_0
       8: getfield      #12                 // Field reloadInterval:J
      11: invokestatic  #54                 // Method java/lang/Thread.sleep:(J)V
      14: goto          18
      17: astore_1
      18: aload_0
      19: getfield      #18                 // Field running:Z
      22: ifeq          0
      25: aload_0
      26: invokevirtual #56                 // Method needsReload:()Z
      29: ifeq          0
      32: aload_0
      33: getfield      #9                  // Field trustManagerRef:Ljava/util/concurrent/atomic/AtomicReference;
      36: aload_0
      37: invokevirtual #10                 // Method loadTrustManager:()Ljavax/net/ssl/X509TrustManager;
      40: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      43: goto          0
      46: astore_1
      47: getstatic     #44                 // Field LOG:Lorg/slf4j/Logger;
      50: new           #25                 // class java/lang/StringBuilder
      53: dup
      54: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      57: ldc           #59                 // String Could not load truststore (keep using existing one) :
      59: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_1
      63: invokevirtual #60                 // Method java/lang/Exception.toString:()Ljava/lang/String;
      66: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: aload_1
      73: invokeinterface #61,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      78: goto          0
      81: return
    Exception table:
       from    to  target type
           7    14    17   Class java/lang/InterruptedException
          32    43    46   Class java/lang/Exception

  static {};
    Code:
       0: ldc           #58                 // class org/apache/hadoop/security/ssl/ReloadingX509TrustManager
       2: invokestatic  #62                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #44                 // Field LOG:Lorg/slf4j/Logger;
       8: iconst_0
       9: anewarray     #63                 // class java/security/cert/X509Certificate
      12: putstatic     #34                 // Field EMPTY:[Ljava/security/cert/X509Certificate;
      15: return
}
