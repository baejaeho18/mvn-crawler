Compiled from "ChRootedFileSystem.java"
class org.apache.hadoop.fs.viewfs.ChRootedFileSystem extends org.apache.hadoop.fs.FilterFileSystem {
  private final java.net.URI myUri;

  private final org.apache.hadoop.fs.Path chRootPathPart;

  private final java.lang.String chRootPathPartString;

  private org.apache.hadoop.fs.Path workingDir;

  private static org.apache.hadoop.fs.Path rootPath;

  protected org.apache.hadoop.fs.FileSystem getMyFs();
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method getRawFileSystem:()Lorg/apache/hadoop/fs/FileSystem;
       4: areturn

  protected org.apache.hadoop.fs.Path fullPath(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method org/apache/hadoop/fs/FilterFileSystem.checkPath:(Lorg/apache/hadoop/fs/Path;)V
       5: aload_1
       6: invokevirtual #3                  // Method org/apache/hadoop/fs/Path.isAbsolute:()Z
       9: ifeq          64
      12: new           #4                  // class org/apache/hadoop/fs/Path
      15: dup
      16: new           #5                  // class java/lang/StringBuilder
      19: dup
      20: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      23: aload_0
      24: getfield      #7                  // Field chRootPathPart:Lorg/apache/hadoop/fs/Path;
      27: invokevirtual #8                  // Method org/apache/hadoop/fs/Path.isRoot:()Z
      30: ifeq          38
      33: ldc           #9                  // String
      35: goto          42
      38: aload_0
      39: getfield      #10                 // Field chRootPathPartString:Ljava/lang/String;
      42: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_1
      46: invokevirtual #12                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
      49: invokevirtual #13                 // Method java/net/URI.getPath:()Ljava/lang/String;
      52: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      58: invokespecial #15                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      61: goto          102
      64: new           #4                  // class org/apache/hadoop/fs/Path
      67: dup
      68: new           #5                  // class java/lang/StringBuilder
      71: dup
      72: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      75: aload_0
      76: getfield      #10                 // Field chRootPathPartString:Ljava/lang/String;
      79: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: aload_0
      83: getfield      #16                 // Field workingDir:Lorg/apache/hadoop/fs/Path;
      86: invokevirtual #12                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
      89: invokevirtual #13                 // Method java/net/URI.getPath:()Ljava/lang/String;
      92: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      98: aload_1
      99: invokespecial #17                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)V
     102: areturn

  org.apache.hadoop.fs.viewfs.ChRootedFileSystem(org.apache.hadoop.fs.FileSystem, java.net.URI) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #18                 // Method org/apache/hadoop/fs/FilterFileSystem."<init>":(Lorg/apache/hadoop/fs/FileSystem;)V
       5: aload_2
       6: invokevirtual #13                 // Method java/net/URI.getPath:()Ljava/lang/String;
       9: astore_3
      10: aload_3
      11: invokevirtual #19                 // Method java/lang/String.isEmpty:()Z
      14: ifeq          20
      17: ldc           #20                 // String /
      19: astore_3
      20: aload_0
      21: new           #4                  // class org/apache/hadoop/fs/Path
      24: dup
      25: aload_3
      26: invokespecial #15                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      29: putfield      #7                  // Field chRootPathPart:Lorg/apache/hadoop/fs/Path;
      32: aload_0
      33: aload_0
      34: getfield      #7                  // Field chRootPathPart:Lorg/apache/hadoop/fs/Path;
      37: invokevirtual #12                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
      40: invokevirtual #13                 // Method java/net/URI.getPath:()Ljava/lang/String;
      43: putfield      #10                 // Field chRootPathPartString:Ljava/lang/String;
      46: aload_0
      47: aload_2
      48: putfield      #21                 // Field myUri:Ljava/net/URI;
      51: aload_0
      52: aload_0
      53: invokevirtual #22                 // Method getHomeDirectory:()Lorg/apache/hadoop/fs/Path;
      56: putfield      #16                 // Field workingDir:Lorg/apache/hadoop/fs/Path;
      59: return

  public org.apache.hadoop.fs.viewfs.ChRootedFileSystem(java.net.URI, org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #23                 // Method org/apache/hadoop/fs/FileSystem.get:(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
       6: aload_1
       7: invokespecial #24                 // Method "<init>":(Lorg/apache/hadoop/fs/FileSystem;Ljava/net/URI;)V
      10: return

  public void initialize(java.net.URI, org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #25                 // Method org/apache/hadoop/fs/FilterFileSystem.initialize:(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V
       6: aload_0
       7: aload_2
       8: invokevirtual #26                 // Method setConf:(Lorg/apache/hadoop/conf/Configuration;)V
      11: return

  public java.net.URI getUri();
    Code:
       0: aload_0
       1: getfield      #21                 // Field myUri:Ljava/net/URI;
       4: areturn

  java.lang.String stripOutRoot(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #27                 // Method checkPath:(Lorg/apache/hadoop/fs/Path;)V
       5: goto          48
       8: astore_2
       9: new           #29                 // class java/io/IOException
      12: dup
      13: new           #5                  // class java/lang/StringBuilder
      16: dup
      17: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #30                 // String Internal Error - path
      22: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_1
      26: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      29: ldc           #32                 // String  should have been with URI:
      31: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_0
      35: getfield      #21                 // Field myUri:Ljava/net/URI;
      38: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      41: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokespecial #33                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: aload_1
      49: invokevirtual #12                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
      52: invokevirtual #13                 // Method java/net/URI.getPath:()Ljava/lang/String;
      55: astore_2
      56: aload_2
      57: invokevirtual #34                 // Method java/lang/String.length:()I
      60: aload_0
      61: getfield      #10                 // Field chRootPathPartString:Ljava/lang/String;
      64: invokevirtual #34                 // Method java/lang/String.length:()I
      67: if_icmpne     75
      70: ldc           #9                  // String
      72: goto          102
      75: aload_2
      76: aload_0
      77: getfield      #10                 // Field chRootPathPartString:Ljava/lang/String;
      80: invokevirtual #34                 // Method java/lang/String.length:()I
      83: aload_0
      84: getfield      #7                  // Field chRootPathPart:Lorg/apache/hadoop/fs/Path;
      87: invokevirtual #8                  // Method org/apache/hadoop/fs/Path.isRoot:()Z
      90: ifeq          97
      93: iconst_0
      94: goto          98
      97: iconst_1
      98: iadd
      99: invokevirtual #35                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     102: areturn
    Exception table:
       from    to  target type
           0     5     8   Class java/lang/IllegalArgumentException

  protected org.apache.hadoop.fs.Path getInitialWorkingDirectory();
    Code:
       0: aconst_null
       1: areturn

  public org.apache.hadoop.fs.Path getResolvedQualifiedPath(org.apache.hadoop.fs.Path) throws java.io.FileNotFoundException;
    Code:
       0: aload_0
       1: new           #4                  // class org/apache/hadoop/fs/Path
       4: dup
       5: new           #5                  // class java/lang/StringBuilder
       8: dup
       9: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      12: aload_0
      13: getfield      #10                 // Field chRootPathPartString:Ljava/lang/String;
      16: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_1
      20: invokevirtual #12                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
      23: invokevirtual #36                 // Method java/net/URI.toString:()Ljava/lang/String;
      26: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokespecial #15                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      35: invokevirtual #37                 // Method makeQualified:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      38: areturn

  public org.apache.hadoop.fs.Path getWorkingDirectory();
    Code:
       0: aload_0
       1: getfield      #16                 // Field workingDir:Lorg/apache/hadoop/fs/Path;
       4: areturn

  public void setWorkingDirectory(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method org/apache/hadoop/fs/Path.isAbsolute:()Z
       5: ifeq          12
       8: aload_1
       9: goto          24
      12: new           #4                  // class org/apache/hadoop/fs/Path
      15: dup
      16: aload_0
      17: getfield      #16                 // Field workingDir:Lorg/apache/hadoop/fs/Path;
      20: aload_1
      21: invokespecial #38                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
      24: putfield      #16                 // Field workingDir:Lorg/apache/hadoop/fs/Path;
      27: return

  public org.apache.hadoop.fs.FSDataOutputStream create(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission, boolean, int, short, long, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: aload_2
       7: iload_3
       8: iload         4
      10: iload         5
      12: lload         6
      14: aload         8
      16: invokespecial #40                 // Method org/apache/hadoop/fs/FilterFileSystem.create:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
      19: areturn

  public org.apache.hadoop.fs.FSDataOutputStream createNonRecursive(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission, java.util.EnumSet<org.apache.hadoop.fs.CreateFlag>, int, short, long, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: aload_2
       7: aload_3
       8: iload         4
      10: iload         5
      12: lload         6
      14: aload         8
      16: invokespecial #41                 // Method org/apache/hadoop/fs/FilterFileSystem.createNonRecursive:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;Ljava/util/EnumSet;ISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
      19: areturn

  public boolean delete(org.apache.hadoop.fs.Path, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: iload_2
       7: invokespecial #42                 // Method org/apache/hadoop/fs/FilterFileSystem.delete:(Lorg/apache/hadoop/fs/Path;Z)Z
      10: ireturn

  public boolean delete(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokevirtual #43                 // Method delete:(Lorg/apache/hadoop/fs/Path;Z)Z
       6: ireturn

  public org.apache.hadoop.fs.BlockLocation[] getFileBlockLocations(org.apache.hadoop.fs.FileStatus, long, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #44                 // class org/apache/hadoop/fs/viewfs/ViewFsFileStatus
       4: dup
       5: aload_1
       6: aload_0
       7: aload_1
       8: invokevirtual #45                 // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
      11: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      14: invokespecial #46                 // Method org/apache/hadoop/fs/viewfs/ViewFsFileStatus."<init>":(Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/fs/Path;)V
      17: lload_2
      18: lload         4
      20: invokespecial #47                 // Method org/apache/hadoop/fs/FilterFileSystem.getFileBlockLocations:(Lorg/apache/hadoop/fs/FileStatus;JJ)[Lorg/apache/hadoop/fs/BlockLocation;
      23: areturn

  public org.apache.hadoop.fs.FileChecksum getFileChecksum(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: invokespecial #48                 // Method org/apache/hadoop/fs/FilterFileSystem.getFileChecksum:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileChecksum;
       9: areturn

  public org.apache.hadoop.fs.FileChecksum getFileChecksum(org.apache.hadoop.fs.Path, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: lload_2
       7: invokespecial #49                 // Method org/apache/hadoop/fs/FilterFileSystem.getFileChecksum:(Lorg/apache/hadoop/fs/Path;J)Lorg/apache/hadoop/fs/FileChecksum;
      10: areturn

  public org.apache.hadoop.fs.FileStatus getFileStatus(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: invokespecial #50                 // Method org/apache/hadoop/fs/FilterFileSystem.getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
       9: areturn

  public org.apache.hadoop.fs.Path getLinkTarget(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: invokespecial #51                 // Method org/apache/hadoop/fs/FilterFileSystem.getLinkTarget:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       9: areturn

  public void access(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsAction) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: aload_2
       7: invokespecial #52                 // Method org/apache/hadoop/fs/FilterFileSystem.access:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsAction;)V
      10: return

  public org.apache.hadoop.fs.FsStatus getStatus(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: invokespecial #53                 // Method org/apache/hadoop/fs/FilterFileSystem.getStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FsStatus;
       9: areturn

  public org.apache.hadoop.fs.FileStatus[] listStatus(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: invokespecial #54                 // Method org/apache/hadoop/fs/FilterFileSystem.listStatus:(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
       9: areturn

  public org.apache.hadoop.fs.RemoteIterator<org.apache.hadoop.fs.LocatedFileStatus> listLocatedStatus(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: invokespecial #55                 // Method org/apache/hadoop/fs/FilterFileSystem.listLocatedStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/RemoteIterator;
       9: areturn

  public boolean mkdirs(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: aload_2
       7: invokespecial #56                 // Method org/apache/hadoop/fs/FilterFileSystem.mkdirs:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z
      10: ireturn

  public boolean mkdirs(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: invokespecial #57                 // Method org/apache/hadoop/fs/FilterFileSystem.mkdirs:(Lorg/apache/hadoop/fs/Path;)Z
       9: ireturn

  public org.apache.hadoop.fs.FSDataInputStream open(org.apache.hadoop.fs.Path, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: iload_2
       7: invokespecial #58                 // Method org/apache/hadoop/fs/FilterFileSystem.open:(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;
      10: areturn

  public org.apache.hadoop.fs.FSDataOutputStream append(org.apache.hadoop.fs.Path, int, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: iload_2
       7: aload_3
       8: invokespecial #59                 // Method org/apache/hadoop/fs/FilterFileSystem.append:(Lorg/apache/hadoop/fs/Path;ILorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
      11: areturn

  public boolean rename(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: aload_0
       7: aload_2
       8: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      11: invokespecial #60                 // Method org/apache/hadoop/fs/FilterFileSystem.rename:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
      14: ireturn

  public void setOwner(org.apache.hadoop.fs.Path, java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: aload_2
       7: aload_3
       8: invokespecial #61                 // Method org/apache/hadoop/fs/FilterFileSystem.setOwner:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;)V
      11: return

  public void setPermission(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: aload_2
       7: invokespecial #62                 // Method org/apache/hadoop/fs/FilterFileSystem.setPermission:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)V
      10: return

  public boolean setReplication(org.apache.hadoop.fs.Path, short) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: iload_2
       7: invokespecial #63                 // Method org/apache/hadoop/fs/FilterFileSystem.setReplication:(Lorg/apache/hadoop/fs/Path;S)Z
      10: ireturn

  public void setTimes(org.apache.hadoop.fs.Path, long, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: lload_2
       7: lload         4
       9: invokespecial #64                 // Method org/apache/hadoop/fs/FilterFileSystem.setTimes:(Lorg/apache/hadoop/fs/Path;JJ)V
      12: return

  public void modifyAclEntries(org.apache.hadoop.fs.Path, java.util.List<org.apache.hadoop.fs.permission.AclEntry>) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: aload_2
       7: invokespecial #65                 // Method org/apache/hadoop/fs/FilterFileSystem.modifyAclEntries:(Lorg/apache/hadoop/fs/Path;Ljava/util/List;)V
      10: return

  public void removeAclEntries(org.apache.hadoop.fs.Path, java.util.List<org.apache.hadoop.fs.permission.AclEntry>) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: aload_2
       7: invokespecial #66                 // Method org/apache/hadoop/fs/FilterFileSystem.removeAclEntries:(Lorg/apache/hadoop/fs/Path;Ljava/util/List;)V
      10: return

  public void removeDefaultAcl(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: invokespecial #67                 // Method org/apache/hadoop/fs/FilterFileSystem.removeDefaultAcl:(Lorg/apache/hadoop/fs/Path;)V
       9: return

  public void removeAcl(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: invokespecial #68                 // Method org/apache/hadoop/fs/FilterFileSystem.removeAcl:(Lorg/apache/hadoop/fs/Path;)V
       9: return

  public void setAcl(org.apache.hadoop.fs.Path, java.util.List<org.apache.hadoop.fs.permission.AclEntry>) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: aload_2
       7: invokespecial #69                 // Method org/apache/hadoop/fs/FilterFileSystem.setAcl:(Lorg/apache/hadoop/fs/Path;Ljava/util/List;)V
      10: return

  public org.apache.hadoop.fs.permission.AclStatus getAclStatus(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: invokespecial #70                 // Method org/apache/hadoop/fs/FilterFileSystem.getAclStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/permission/AclStatus;
       9: areturn

  public void setXAttr(org.apache.hadoop.fs.Path, java.lang.String, byte[], java.util.EnumSet<org.apache.hadoop.fs.XAttrSetFlag>) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: aload_2
       7: aload_3
       8: aload         4
      10: invokespecial #71                 // Method org/apache/hadoop/fs/FilterFileSystem.setXAttr:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;[BLjava/util/EnumSet;)V
      13: return

  public byte[] getXAttr(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: aload_2
       7: invokespecial #72                 // Method org/apache/hadoop/fs/FilterFileSystem.getXAttr:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)[B
      10: areturn

  public java.util.Map<java.lang.String, byte[]> getXAttrs(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: invokespecial #73                 // Method org/apache/hadoop/fs/FilterFileSystem.getXAttrs:(Lorg/apache/hadoop/fs/Path;)Ljava/util/Map;
       9: areturn

  public java.util.Map<java.lang.String, byte[]> getXAttrs(org.apache.hadoop.fs.Path, java.util.List<java.lang.String>) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: aload_2
       7: invokespecial #74                 // Method org/apache/hadoop/fs/FilterFileSystem.getXAttrs:(Lorg/apache/hadoop/fs/Path;Ljava/util/List;)Ljava/util/Map;
      10: areturn

  public boolean truncate(org.apache.hadoop.fs.Path, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: lload_2
       7: invokespecial #75                 // Method org/apache/hadoop/fs/FilterFileSystem.truncate:(Lorg/apache/hadoop/fs/Path;J)Z
      10: ireturn

  public java.util.List<java.lang.String> listXAttrs(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: invokespecial #76                 // Method org/apache/hadoop/fs/FilterFileSystem.listXAttrs:(Lorg/apache/hadoop/fs/Path;)Ljava/util/List;
       9: areturn

  public void removeXAttr(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: aload_2
       7: invokespecial #77                 // Method org/apache/hadoop/fs/FilterFileSystem.removeXAttr:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      10: return

  public org.apache.hadoop.fs.Path createSnapshot(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: aload_2
       7: invokespecial #78                 // Method org/apache/hadoop/fs/FilterFileSystem.createSnapshot:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
      10: areturn

  public void renameSnapshot(org.apache.hadoop.fs.Path, java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: aload_2
       7: aload_3
       8: invokespecial #79                 // Method org/apache/hadoop/fs/FilterFileSystem.renameSnapshot:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;)V
      11: return

  public void deleteSnapshot(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: aload_2
       7: invokespecial #80                 // Method org/apache/hadoop/fs/FilterFileSystem.deleteSnapshot:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      10: return

  public org.apache.hadoop.fs.Path resolvePath(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: invokespecial #81                 // Method org/apache/hadoop/fs/FilterFileSystem.resolvePath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       9: areturn

  public org.apache.hadoop.fs.ContentSummary getContentSummary(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #82                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: aload_0
       5: aload_1
       6: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       9: invokevirtual #83                 // Method org/apache/hadoop/fs/FileSystem.getContentSummary:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/ContentSummary;
      12: areturn

  public org.apache.hadoop.fs.QuotaUsage getQuotaUsage(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #82                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: aload_0
       5: aload_1
       6: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       9: invokevirtual #84                 // Method org/apache/hadoop/fs/FileSystem.getQuotaUsage:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/QuotaUsage;
      12: areturn

  public long getDefaultBlockSize();
    Code:
       0: aload_0
       1: aload_0
       2: getstatic     #85                 // Field rootPath:Lorg/apache/hadoop/fs/Path;
       5: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       8: invokevirtual #86                 // Method getDefaultBlockSize:(Lorg/apache/hadoop/fs/Path;)J
      11: lreturn

  public long getDefaultBlockSize(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: invokespecial #87                 // Method org/apache/hadoop/fs/FilterFileSystem.getDefaultBlockSize:(Lorg/apache/hadoop/fs/Path;)J
       9: lreturn

  public short getDefaultReplication();
    Code:
       0: aload_0
       1: aload_0
       2: getstatic     #85                 // Field rootPath:Lorg/apache/hadoop/fs/Path;
       5: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       8: invokevirtual #88                 // Method getDefaultReplication:(Lorg/apache/hadoop/fs/Path;)S
      11: ireturn

  public short getDefaultReplication(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: invokespecial #89                 // Method org/apache/hadoop/fs/FilterFileSystem.getDefaultReplication:(Lorg/apache/hadoop/fs/Path;)S
       9: ireturn

  public org.apache.hadoop.fs.FsServerDefaults getServerDefaults() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getstatic     #85                 // Field rootPath:Lorg/apache/hadoop/fs/Path;
       5: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       8: invokevirtual #90                 // Method getServerDefaults:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FsServerDefaults;
      11: areturn

  public org.apache.hadoop.fs.FsServerDefaults getServerDefaults(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: invokespecial #91                 // Method org/apache/hadoop/fs/FilterFileSystem.getServerDefaults:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FsServerDefaults;
       9: areturn

  public org.apache.hadoop.fs.BlockStoragePolicySpi getStoragePolicy(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: invokespecial #92                 // Method org/apache/hadoop/fs/FilterFileSystem.getStoragePolicy:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/BlockStoragePolicySpi;
       9: areturn

  public void satisfyStoragePolicy(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: invokespecial #93                 // Method org/apache/hadoop/fs/FilterFileSystem.satisfyStoragePolicy:(Lorg/apache/hadoop/fs/Path;)V
       9: return

  public void setStoragePolicy(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: aload_2
       7: invokespecial #94                 // Method org/apache/hadoop/fs/FilterFileSystem.setStoragePolicy:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      10: return

  public void unsetStoragePolicy(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: invokespecial #95                 // Method org/apache/hadoop/fs/FilterFileSystem.unsetStoragePolicy:(Lorg/apache/hadoop/fs/Path;)V
       9: return

  public boolean hasPathCapability(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #39                 // Method fullPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: aload_2
       7: invokespecial #96                 // Method org/apache/hadoop/fs/FilterFileSystem.hasPathCapability:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Z
      10: ireturn

  static {};
    Code:
       0: new           #4                  // class org/apache/hadoop/fs/Path
       3: dup
       4: ldc           #20                 // String /
       6: invokespecial #15                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
       9: putstatic     #85                 // Field rootPath:Lorg/apache/hadoop/fs/Path;
      12: return
}
