Compiled from "BlockDecompressorStream.java"
public class org.apache.hadoop.io.compress.BlockDecompressorStream extends org.apache.hadoop.io.compress.DecompressorStream {
  private int originalBlockSize;

  private int noUncompressedBytes;

  public org.apache.hadoop.io.compress.BlockDecompressorStream(java.io.InputStream, org.apache.hadoop.io.compress.Decompressor, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokespecial #1                  // Method org/apache/hadoop/io/compress/DecompressorStream."<init>":(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/Decompressor;I)V
       7: aload_0
       8: iconst_0
       9: putfield      #2                  // Field originalBlockSize:I
      12: aload_0
      13: iconst_0
      14: putfield      #3                  // Field noUncompressedBytes:I
      17: return

  public org.apache.hadoop.io.compress.BlockDecompressorStream(java.io.InputStream, org.apache.hadoop.io.compress.Decompressor) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #4                  // Method org/apache/hadoop/io/compress/DecompressorStream."<init>":(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/Decompressor;)V
       6: aload_0
       7: iconst_0
       8: putfield      #2                  // Field originalBlockSize:I
      11: aload_0
      12: iconst_0
      13: putfield      #3                  // Field noUncompressedBytes:I
      16: return

  protected org.apache.hadoop.io.compress.BlockDecompressorStream(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method org/apache/hadoop/io/compress/DecompressorStream."<init>":(Ljava/io/InputStream;)V
       5: aload_0
       6: iconst_0
       7: putfield      #2                  // Field originalBlockSize:I
      10: aload_0
      11: iconst_0
      12: putfield      #3                  // Field noUncompressedBytes:I
      15: return

  protected int decompress(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field noUncompressedBytes:I
       4: aload_0
       5: getfield      #2                  // Field originalBlockSize:I
       8: if_icmpne     45
      11: aload_0
      12: aload_0
      13: invokespecial #6                  // Method rawReadInt:()I
      16: putfield      #2                  // Field originalBlockSize:I
      19: goto          26
      22: astore        4
      24: iconst_m1
      25: ireturn
      26: aload_0
      27: iconst_0
      28: putfield      #3                  // Field noUncompressedBytes:I
      31: aload_0
      32: getfield      #2                  // Field originalBlockSize:I
      35: ifne          45
      38: aload_0
      39: iconst_1
      40: putfield      #8                  // Field eof:Z
      43: iconst_m1
      44: ireturn
      45: iconst_0
      46: istore        4
      48: aload_0
      49: getfield      #9                  // Field decompressor:Lorg/apache/hadoop/io/compress/Decompressor;
      52: aload_1
      53: iload_2
      54: iload_3
      55: invokeinterface #10,  4           // InterfaceMethod org/apache/hadoop/io/compress/Decompressor.decompress:([BII)I
      60: dup
      61: istore        4
      63: ifne          157
      66: aload_0
      67: getfield      #9                  // Field decompressor:Lorg/apache/hadoop/io/compress/Decompressor;
      70: invokeinterface #11,  1           // InterfaceMethod org/apache/hadoop/io/compress/Decompressor.finished:()Z
      75: ifne          90
      78: aload_0
      79: getfield      #9                  // Field decompressor:Lorg/apache/hadoop/io/compress/Decompressor;
      82: invokeinterface #12,  1           // InterfaceMethod org/apache/hadoop/io/compress/Decompressor.needsDictionary:()Z
      87: ifeq          108
      90: aload_0
      91: getfield      #3                  // Field noUncompressedBytes:I
      94: aload_0
      95: getfield      #2                  // Field originalBlockSize:I
      98: if_icmplt     108
     101: aload_0
     102: iconst_1
     103: putfield      #8                  // Field eof:Z
     106: iconst_m1
     107: ireturn
     108: aload_0
     109: getfield      #9                  // Field decompressor:Lorg/apache/hadoop/io/compress/Decompressor;
     112: invokeinterface #13,  1           // InterfaceMethod org/apache/hadoop/io/compress/Decompressor.needsInput:()Z
     117: ifeq          48
     120: aload_0
     121: invokevirtual #14                 // Method getCompressedData:()I
     124: istore        5
     126: goto          138
     129: astore        6
     131: aload_0
     132: iconst_1
     133: putfield      #8                  // Field eof:Z
     136: iconst_m1
     137: ireturn
     138: aload_0
     139: getfield      #9                  // Field decompressor:Lorg/apache/hadoop/io/compress/Decompressor;
     142: aload_0
     143: getfield      #15                 // Field buffer:[B
     146: iconst_0
     147: iload         5
     149: invokeinterface #16,  4           // InterfaceMethod org/apache/hadoop/io/compress/Decompressor.setInput:([BII)V
     154: goto          48
     157: aload_0
     158: dup
     159: getfield      #3                  // Field noUncompressedBytes:I
     162: iload         4
     164: iadd
     165: putfield      #3                  // Field noUncompressedBytes:I
     168: iload         4
     170: ireturn
    Exception table:
       from    to  target type
          11    19    22   Class java/io/EOFException
         120   126   129   Class java/io/EOFException

  protected int getCompressedData() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method checkStream:()V
       4: aload_0
       5: invokespecial #6                  // Method rawReadInt:()I
       8: istore_1
       9: iload_1
      10: aload_0
      11: getfield      #15                 // Field buffer:[B
      14: arraylength
      15: if_icmple     25
      18: aload_0
      19: iload_1
      20: newarray       byte
      22: putfield      #15                 // Field buffer:[B
      25: iconst_0
      26: istore_2
      27: iconst_0
      28: istore_3
      29: iload_2
      30: iload_1
      31: if_icmpge     76
      34: aload_0
      35: getfield      #18                 // Field in:Ljava/io/InputStream;
      38: aload_0
      39: getfield      #15                 // Field buffer:[B
      42: iload_3
      43: iload_2
      44: iadd
      45: iload_1
      46: iload_2
      47: isub
      48: invokevirtual #19                 // Method java/io/InputStream.read:([BII)I
      51: istore        4
      53: iload         4
      55: ifge          68
      58: new           #7                  // class java/io/EOFException
      61: dup
      62: ldc           #20                 // String Unexpected end of block in input stream
      64: invokespecial #21                 // Method java/io/EOFException."<init>":(Ljava/lang/String;)V
      67: athrow
      68: iload_2
      69: iload         4
      71: iadd
      72: istore_2
      73: goto          29
      76: iload_1
      77: ireturn

  public void resetState() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #2                  // Field originalBlockSize:I
       5: aload_0
       6: iconst_0
       7: putfield      #3                  // Field noUncompressedBytes:I
      10: aload_0
      11: invokespecial #22                 // Method org/apache/hadoop/io/compress/DecompressorStream.resetState:()V
      14: return

  private int rawReadInt() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field in:Ljava/io/InputStream;
       4: invokevirtual #23                 // Method java/io/InputStream.read:()I
       7: istore_1
       8: aload_0
       9: getfield      #18                 // Field in:Ljava/io/InputStream;
      12: invokevirtual #23                 // Method java/io/InputStream.read:()I
      15: istore_2
      16: aload_0
      17: getfield      #18                 // Field in:Ljava/io/InputStream;
      20: invokevirtual #23                 // Method java/io/InputStream.read:()I
      23: istore_3
      24: aload_0
      25: getfield      #18                 // Field in:Ljava/io/InputStream;
      28: invokevirtual #23                 // Method java/io/InputStream.read:()I
      31: istore        4
      33: iload_1
      34: iload_2
      35: ior
      36: iload_3
      37: ior
      38: iload         4
      40: ior
      41: ifge          52
      44: new           #7                  // class java/io/EOFException
      47: dup
      48: invokespecial #24                 // Method java/io/EOFException."<init>":()V
      51: athrow
      52: iload_1
      53: bipush        24
      55: ishl
      56: iload_2
      57: bipush        16
      59: ishl
      60: iadd
      61: iload_3
      62: bipush        8
      64: ishl
      65: iadd
      66: iload         4
      68: iconst_0
      69: ishl
      70: iadd
      71: ireturn
}
