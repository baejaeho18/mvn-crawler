Compiled from "Shell.java"
public abstract class org.apache.hadoop.util.Shell {
  private static final java.util.Map<org.apache.hadoop.util.Shell, java.lang.Object> CHILD_SHELLS;

  public static final org.slf4j.Logger LOG;

  private static final java.lang.String WINDOWS_PROBLEMS;

  static final java.lang.String WINUTILS_EXE;

  public static final java.lang.String SYSPROP_HADOOP_HOME_DIR;

  public static final java.lang.String ENV_HADOOP_HOME;

  private static final int JAVA_SPEC_VER;

  public static final int WINDOWS_MAX_SHELL_LENGTH;

  public static final int WINDOWS_MAX_SHELL_LENGHT;

  public static final java.lang.String USER_NAME_COMMAND;

  public static final java.lang.Object WindowsProcessLaunchLock;

  public static final org.apache.hadoop.util.Shell$OSType osType;

  public static final boolean WINDOWS;

  public static final boolean SOLARIS;

  public static final boolean MAC;

  public static final boolean FREEBSD;

  public static final boolean LINUX;

  public static final boolean OTHER;

  public static final boolean PPC_64;

  public static final java.lang.String ENV_NAME_REGEX;

  public static final java.lang.String SET_PERMISSION_COMMAND;

  public static final java.lang.String SET_OWNER_COMMAND;

  public static final java.lang.String SET_GROUP_COMMAND;

  public static final java.lang.String LINK_COMMAND;

  public static final java.lang.String READ_LINK_COMMAND;

  protected long timeOutInterval;

  private final java.util.concurrent.atomic.AtomicBoolean timedOut;

  protected boolean inheritParentEnv;

  static final java.lang.String E_DOES_NOT_EXIST;

  static final java.lang.String E_IS_RELATIVE;

  static final java.lang.String E_NOT_DIRECTORY;

  static final java.lang.String E_NO_EXECUTABLE;

  static final java.lang.String E_NOT_EXECUTABLE_FILE;

  static final java.lang.String E_HADOOP_PROPS_UNSET;

  static final java.lang.String E_HADOOP_PROPS_EMPTY;

  static final java.lang.String E_NOT_A_WINDOWS_SYSTEM;

  private static final java.io.File HADOOP_HOME_FILE;

  private static final java.io.IOException HADOOP_HOME_DIR_FAILURE_CAUSE;

  public static final java.lang.String WINUTILS;

  private static final java.lang.String WINUTILS_PATH;

  private static final java.io.File WINUTILS_FILE;

  private static final java.io.IOException WINUTILS_FAILURE;

  public static final boolean isSetsidAvailable;

  public static final java.lang.String TOKEN_SEPARATOR_REGEX;

  private long interval;

  private long lastTime;

  private final boolean redirectErrorStream;

  private java.util.Map<java.lang.String, java.lang.String> environment;

  private java.io.File dir;

  private java.lang.Process process;

  private int exitCode;

  private java.lang.Thread waitingThread;

  private final java.util.concurrent.atomic.AtomicBoolean completed;

  public static boolean isJava7OrAbove();
    Code:
       0: iconst_1
       1: ireturn

  public static boolean isJavaVersionAtLeast(int);
    Code:
       0: getstatic     #4                  // Field JAVA_SPEC_VER:I
       3: iload_0
       4: if_icmplt     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public static void checkWindowsCommandLineLength(java.lang.String...) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: astore_2
       4: aload_2
       5: arraylength
       6: istore_3
       7: iconst_0
       8: istore        4
      10: iload         4
      12: iload_3
      13: if_icmpge     36
      16: aload_2
      17: iload         4
      19: aaload
      20: astore        5
      22: iload_1
      23: aload         5
      25: invokevirtual #5                  // Method java/lang/String.length:()I
      28: iadd
      29: istore_1
      30: iinc          4, 1
      33: goto          10
      36: iload_1
      37: sipush        8191
      40: if_icmple     91
      43: new           #6                  // class java/io/IOException
      46: dup
      47: ldc           #7                  // String The command line has a length of %d exceeds maximum allowed length of %d. Command starts with: %s
      49: iconst_3
      50: anewarray     #8                  // class java/lang/Object
      53: dup
      54: iconst_0
      55: iload_1
      56: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      59: aastore
      60: dup
      61: iconst_1
      62: sipush        8191
      65: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      68: aastore
      69: dup
      70: iconst_2
      71: ldc           #10                 // String
      73: aload_0
      74: invokestatic  #11                 // Method org/apache/hadoop/util/StringUtils.join:(Ljava/lang/CharSequence;[Ljava/lang/String;)Ljava/lang/String;
      77: iconst_0
      78: bipush        100
      80: invokevirtual #12                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      83: aastore
      84: invokestatic  #13                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      87: invokespecial #14                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      90: athrow
      91: return

  static java.lang.String bashQuote(java.lang.String);
    Code:
       0: new           #15                 // class java/lang/StringBuilder
       3: dup
       4: aload_0
       5: invokevirtual #5                  // Method java/lang/String.length:()I
       8: iconst_2
       9: iadd
      10: invokespecial #16                 // Method java/lang/StringBuilder."<init>":(I)V
      13: astore_1
      14: aload_1
      15: bipush        39
      17: invokevirtual #17                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      20: pop
      21: aload_1
      22: aload_0
      23: ldc           #18                 // String \'
      25: ldc           #19                 // String \'\\\'\'
      27: invokevirtual #20                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      30: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: pop
      34: aload_1
      35: bipush        39
      37: invokevirtual #17                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      40: pop
      41: aload_1
      42: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: areturn

  private static org.apache.hadoop.util.Shell$OSType getOSType();
    Code:
       0: ldc           #23                 // String os.name
       2: invokestatic  #24                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_0
       6: aload_0
       7: ldc           #25                 // String Windows
       9: invokevirtual #26                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      12: ifeq          19
      15: getstatic     #27                 // Field org/apache/hadoop/util/Shell$OSType.OS_TYPE_WIN:Lorg/apache/hadoop/util/Shell$OSType;
      18: areturn
      19: aload_0
      20: ldc           #28                 // String SunOS
      22: invokevirtual #29                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      25: ifne          37
      28: aload_0
      29: ldc           #30                 // String Solaris
      31: invokevirtual #29                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      34: ifeq          41
      37: getstatic     #31                 // Field org/apache/hadoop/util/Shell$OSType.OS_TYPE_SOLARIS:Lorg/apache/hadoop/util/Shell$OSType;
      40: areturn
      41: aload_0
      42: ldc           #32                 // String Mac
      44: invokevirtual #29                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      47: ifeq          54
      50: getstatic     #33                 // Field org/apache/hadoop/util/Shell$OSType.OS_TYPE_MAC:Lorg/apache/hadoop/util/Shell$OSType;
      53: areturn
      54: aload_0
      55: ldc           #34                 // String FreeBSD
      57: invokevirtual #29                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      60: ifeq          67
      63: getstatic     #35                 // Field org/apache/hadoop/util/Shell$OSType.OS_TYPE_FREEBSD:Lorg/apache/hadoop/util/Shell$OSType;
      66: areturn
      67: aload_0
      68: ldc           #36                 // String Linux
      70: invokevirtual #26                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      73: ifeq          80
      76: getstatic     #37                 // Field org/apache/hadoop/util/Shell$OSType.OS_TYPE_LINUX:Lorg/apache/hadoop/util/Shell$OSType;
      79: areturn
      80: getstatic     #38                 // Field org/apache/hadoop/util/Shell$OSType.OS_TYPE_OTHER:Lorg/apache/hadoop/util/Shell$OSType;
      83: areturn

  public static java.lang.String[] getGroupsCommand();
    Code:
       0: getstatic     #39                 // Field WINDOWS:Z
       3: ifeq          28
       6: iconst_3
       7: anewarray     #40                 // class java/lang/String
      10: dup
      11: iconst_0
      12: ldc           #41                 // String cmd
      14: aastore
      15: dup
      16: iconst_1
      17: ldc           #42                 // String /c
      19: aastore
      20: dup
      21: iconst_2
      22: ldc           #43                 // String groups
      24: aastore
      25: goto          37
      28: iconst_1
      29: anewarray     #40                 // class java/lang/String
      32: dup
      33: iconst_0
      34: ldc           #43                 // String groups
      36: aastore
      37: areturn

  public static java.lang.String[] getGroupsForUserCommand(java.lang.String);
    Code:
       0: getstatic     #39                 // Field WINDOWS:Z
       3: ifeq          54
       6: iconst_4
       7: anewarray     #40                 // class java/lang/String
      10: dup
      11: iconst_0
      12: invokestatic  #44                 // Method getWinUtilsPath:()Ljava/lang/String;
      15: aastore
      16: dup
      17: iconst_1
      18: ldc           #43                 // String groups
      20: aastore
      21: dup
      22: iconst_2
      23: ldc           #45                 // String -F
      25: aastore
      26: dup
      27: iconst_3
      28: new           #15                 // class java/lang/StringBuilder
      31: dup
      32: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      35: ldc           #47                 // String \"
      37: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_0
      41: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: ldc           #47                 // String \"
      46: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: aastore
      53: areturn
      54: aload_0
      55: invokestatic  #48                 // Method bashQuote:(Ljava/lang/String;)Ljava/lang/String;
      58: astore_1
      59: iconst_3
      60: anewarray     #40                 // class java/lang/String
      63: dup
      64: iconst_0
      65: ldc           #49                 // String bash
      67: aastore
      68: dup
      69: iconst_1
      70: ldc           #50                 // String -c
      72: aastore
      73: dup
      74: iconst_2
      75: new           #15                 // class java/lang/StringBuilder
      78: dup
      79: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      82: ldc           #51                 // String id -gn
      84: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: aload_1
      88: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: ldc           #52                 // String ; id -Gn
      93: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload_1
      97: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     103: aastore
     104: areturn

  public static java.lang.String[] getGroupsIDForUserCommand(java.lang.String);
    Code:
       0: getstatic     #39                 // Field WINDOWS:Z
       3: ifeq          54
       6: iconst_4
       7: anewarray     #40                 // class java/lang/String
      10: dup
      11: iconst_0
      12: invokestatic  #44                 // Method getWinUtilsPath:()Ljava/lang/String;
      15: aastore
      16: dup
      17: iconst_1
      18: ldc           #43                 // String groups
      20: aastore
      21: dup
      22: iconst_2
      23: ldc           #45                 // String -F
      25: aastore
      26: dup
      27: iconst_3
      28: new           #15                 // class java/lang/StringBuilder
      31: dup
      32: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      35: ldc           #47                 // String \"
      37: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_0
      41: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: ldc           #47                 // String \"
      46: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: aastore
      53: areturn
      54: aload_0
      55: invokestatic  #48                 // Method bashQuote:(Ljava/lang/String;)Ljava/lang/String;
      58: astore_1
      59: iconst_3
      60: anewarray     #40                 // class java/lang/String
      63: dup
      64: iconst_0
      65: ldc           #49                 // String bash
      67: aastore
      68: dup
      69: iconst_1
      70: ldc           #50                 // String -c
      72: aastore
      73: dup
      74: iconst_2
      75: new           #15                 // class java/lang/StringBuilder
      78: dup
      79: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      82: ldc           #53                 // String id -g
      84: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: aload_1
      88: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: ldc           #54                 // String ; id -G
      93: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload_1
      97: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     103: aastore
     104: areturn

  public static java.lang.String[] getUsersForNetgroupCommand(java.lang.String);
    Code:
       0: iconst_3
       1: anewarray     #40                 // class java/lang/String
       4: dup
       5: iconst_0
       6: ldc           #55                 // String getent
       8: aastore
       9: dup
      10: iconst_1
      11: ldc           #56                 // String netgroup
      13: aastore
      14: dup
      15: iconst_2
      16: aload_0
      17: aastore
      18: areturn

  public static java.lang.String[] getGetPermissionCommand();
    Code:
       0: getstatic     #39                 // Field WINDOWS:Z
       3: ifeq          29
       6: iconst_3
       7: anewarray     #40                 // class java/lang/String
      10: dup
      11: iconst_0
      12: invokestatic  #44                 // Method getWinUtilsPath:()Ljava/lang/String;
      15: aastore
      16: dup
      17: iconst_1
      18: ldc           #57                 // String ls
      20: aastore
      21: dup
      22: iconst_2
      23: ldc           #45                 // String -F
      25: aastore
      26: goto          43
      29: iconst_2
      30: anewarray     #40                 // class java/lang/String
      33: dup
      34: iconst_0
      35: ldc           #57                 // String ls
      37: aastore
      38: dup
      39: iconst_1
      40: ldc           #58                 // String -ld
      42: aastore
      43: areturn

  public static java.lang.String[] getSetPermissionCommand(java.lang.String, boolean);
    Code:
       0: iload_1
       1: ifeq          56
       4: getstatic     #39                 // Field WINDOWS:Z
       7: ifeq          37
      10: iconst_4
      11: anewarray     #40                 // class java/lang/String
      14: dup
      15: iconst_0
      16: invokestatic  #44                 // Method getWinUtilsPath:()Ljava/lang/String;
      19: aastore
      20: dup
      21: iconst_1
      22: ldc           #59                 // String chmod
      24: aastore
      25: dup
      26: iconst_2
      27: ldc           #60                 // String -R
      29: aastore
      30: dup
      31: iconst_3
      32: aload_0
      33: aastore
      34: goto          55
      37: iconst_3
      38: anewarray     #40                 // class java/lang/String
      41: dup
      42: iconst_0
      43: ldc           #59                 // String chmod
      45: aastore
      46: dup
      47: iconst_1
      48: ldc           #60                 // String -R
      50: aastore
      51: dup
      52: iconst_2
      53: aload_0
      54: aastore
      55: areturn
      56: getstatic     #39                 // Field WINDOWS:Z
      59: ifeq          84
      62: iconst_3
      63: anewarray     #40                 // class java/lang/String
      66: dup
      67: iconst_0
      68: invokestatic  #44                 // Method getWinUtilsPath:()Ljava/lang/String;
      71: aastore
      72: dup
      73: iconst_1
      74: ldc           #59                 // String chmod
      76: aastore
      77: dup
      78: iconst_2
      79: aload_0
      80: aastore
      81: goto          97
      84: iconst_2
      85: anewarray     #40                 // class java/lang/String
      88: dup
      89: iconst_0
      90: ldc           #59                 // String chmod
      92: aastore
      93: dup
      94: iconst_1
      95: aload_0
      96: aastore
      97: areturn

  public static java.lang.String[] getSetPermissionCommand(java.lang.String, boolean, java.lang.String);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #61                 // Method getSetPermissionCommand:(Ljava/lang/String;Z)[Ljava/lang/String;
       5: astore_3
       6: aload_3
       7: aload_3
       8: arraylength
       9: iconst_1
      10: iadd
      11: invokestatic  #62                 // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
      14: checkcast     #63                 // class "[Ljava/lang/String;"
      17: astore        4
      19: aload         4
      21: aload         4
      23: arraylength
      24: iconst_1
      25: isub
      26: aload_2
      27: aastore
      28: aload         4
      30: areturn

  public static java.lang.String[] getSetOwnerCommand(java.lang.String);
    Code:
       0: getstatic     #39                 // Field WINDOWS:Z
       3: ifeq          51
       6: iconst_3
       7: anewarray     #40                 // class java/lang/String
      10: dup
      11: iconst_0
      12: invokestatic  #44                 // Method getWinUtilsPath:()Ljava/lang/String;
      15: aastore
      16: dup
      17: iconst_1
      18: ldc           #64                 // String chown
      20: aastore
      21: dup
      22: iconst_2
      23: new           #15                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #47                 // String \"
      32: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: ldc           #47                 // String \"
      41: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: aastore
      48: goto          64
      51: iconst_2
      52: anewarray     #40                 // class java/lang/String
      55: dup
      56: iconst_0
      57: ldc           #64                 // String chown
      59: aastore
      60: dup
      61: iconst_1
      62: aload_0
      63: aastore
      64: areturn

  public static java.lang.String[] getSymlinkCommand(java.lang.String, java.lang.String);
    Code:
       0: getstatic     #39                 // Field WINDOWS:Z
       3: ifeq          32
       6: iconst_4
       7: anewarray     #40                 // class java/lang/String
      10: dup
      11: iconst_0
      12: invokestatic  #44                 // Method getWinUtilsPath:()Ljava/lang/String;
      15: aastore
      16: dup
      17: iconst_1
      18: ldc           #65                 // String symlink
      20: aastore
      21: dup
      22: iconst_2
      23: aload_1
      24: aastore
      25: dup
      26: iconst_3
      27: aload_0
      28: aastore
      29: goto          54
      32: iconst_4
      33: anewarray     #40                 // class java/lang/String
      36: dup
      37: iconst_0
      38: ldc           #66                 // String ln
      40: aastore
      41: dup
      42: iconst_1
      43: ldc           #67                 // String -s
      45: aastore
      46: dup
      47: iconst_2
      48: aload_0
      49: aastore
      50: dup
      51: iconst_3
      52: aload_1
      53: aastore
      54: areturn

  public static java.lang.String[] getReadlinkCommand(java.lang.String);
    Code:
       0: getstatic     #39                 // Field WINDOWS:Z
       3: ifeq          28
       6: iconst_3
       7: anewarray     #40                 // class java/lang/String
      10: dup
      11: iconst_0
      12: invokestatic  #44                 // Method getWinUtilsPath:()Ljava/lang/String;
      15: aastore
      16: dup
      17: iconst_1
      18: ldc           #68                 // String readlink
      20: aastore
      21: dup
      22: iconst_2
      23: aload_0
      24: aastore
      25: goto          41
      28: iconst_2
      29: anewarray     #40                 // class java/lang/String
      32: dup
      33: iconst_0
      34: ldc           #68                 // String readlink
      36: aastore
      37: dup
      38: iconst_1
      39: aload_0
      40: aastore
      41: areturn

  public static java.lang.String[] getCheckProcessIsAliveCommand(java.lang.String);
    Code:
       0: iconst_0
       1: aload_0
       2: invokestatic  #69                 // Method getSignalKillCommand:(ILjava/lang/String;)[Ljava/lang/String;
       5: areturn

  public static java.lang.String[] getSignalKillCommand(int, java.lang.String);
    Code:
       0: getstatic     #39                 // Field WINDOWS:Z
       3: ifeq          61
       6: iconst_0
       7: iload_0
       8: if_icmpne     36
      11: iconst_4
      12: anewarray     #40                 // class java/lang/String
      15: dup
      16: iconst_0
      17: invokestatic  #44                 // Method getWinUtilsPath:()Ljava/lang/String;
      20: aastore
      21: dup
      22: iconst_1
      23: ldc           #70                 // String task
      25: aastore
      26: dup
      27: iconst_2
      28: ldc           #71                 // String isAlive
      30: aastore
      31: dup
      32: iconst_3
      33: aload_1
      34: aastore
      35: areturn
      36: iconst_4
      37: anewarray     #40                 // class java/lang/String
      40: dup
      41: iconst_0
      42: invokestatic  #44                 // Method getWinUtilsPath:()Ljava/lang/String;
      45: aastore
      46: dup
      47: iconst_1
      48: ldc           #70                 // String task
      50: aastore
      51: dup
      52: iconst_2
      53: ldc           #72                 // String kill
      55: aastore
      56: dup
      57: iconst_3
      58: aload_1
      59: aastore
      60: areturn
      61: aload_1
      62: invokestatic  #48                 // Method bashQuote:(Ljava/lang/String;)Ljava/lang/String;
      65: astore_2
      66: getstatic     #73                 // Field isSetsidAvailable:Z
      69: ifeq          118
      72: iconst_3
      73: anewarray     #40                 // class java/lang/String
      76: dup
      77: iconst_0
      78: ldc           #49                 // String bash
      80: aastore
      81: dup
      82: iconst_1
      83: ldc           #50                 // String -c
      85: aastore
      86: dup
      87: iconst_2
      88: new           #15                 // class java/lang/StringBuilder
      91: dup
      92: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      95: ldc           #74                 // String kill -
      97: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: iload_0
     101: invokevirtual #75                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     104: ldc           #76                 // String  -- -
     106: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: aload_2
     110: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     116: aastore
     117: areturn
     118: iconst_3
     119: anewarray     #40                 // class java/lang/String
     122: dup
     123: iconst_0
     124: ldc           #49                 // String bash
     126: aastore
     127: dup
     128: iconst_1
     129: ldc           #50                 // String -c
     131: aastore
     132: dup
     133: iconst_2
     134: new           #15                 // class java/lang/StringBuilder
     137: dup
     138: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
     141: ldc           #74                 // String kill -
     143: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     146: iload_0
     147: invokevirtual #75                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     150: ldc           #77                 // String
     152: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     155: aload_2
     156: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     162: aastore
     163: areturn

  public static java.lang.String getEnvironmentVariableRegex();
    Code:
       0: getstatic     #39                 // Field WINDOWS:Z
       3: ifeq          11
       6: ldc           #78                 // String %([A-Za-z_][A-Za-z0-9_]*?)%
       8: goto          13
      11: ldc           #79                 // String \\$([A-Za-z_][A-Za-z0-9_]*)
      13: areturn

  public static java.io.File appendScriptExtension(java.io.File, java.lang.String);
    Code:
       0: new           #80                 // class java/io/File
       3: dup
       4: aload_0
       5: aload_1
       6: invokestatic  #81                 // Method appendScriptExtension:(Ljava/lang/String;)Ljava/lang/String;
       9: invokespecial #82                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      12: areturn

  public static java.lang.String appendScriptExtension(java.lang.String);
    Code:
       0: new           #15                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      11: getstatic     #39                 // Field WINDOWS:Z
      14: ifeq          22
      17: ldc           #83                 // String .cmd
      19: goto          24
      22: ldc           #84                 // String .sh
      24: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: areturn

  public static java.lang.String[] getRunScriptCommand(java.io.File);
    Code:
       0: aload_0
       1: invokevirtual #85                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
       4: astore_1
       5: getstatic     #39                 // Field WINDOWS:Z
       8: ifeq          32
      11: iconst_3
      12: anewarray     #40                 // class java/lang/String
      15: dup
      16: iconst_0
      17: ldc           #41                 // String cmd
      19: aastore
      20: dup
      21: iconst_1
      22: ldc           #42                 // String /c
      24: aastore
      25: dup
      26: iconst_2
      27: aload_1
      28: aastore
      29: goto          48
      32: iconst_2
      33: anewarray     #40                 // class java/lang/String
      36: dup
      37: iconst_0
      38: ldc           #49                 // String bash
      40: aastore
      41: dup
      42: iconst_1
      43: aload_1
      44: invokestatic  #48                 // Method bashQuote:(Ljava/lang/String;)Ljava/lang/String;
      47: aastore
      48: areturn

  private static java.io.File checkHadoopHome() throws java.io.FileNotFoundException;
    Code:
       0: ldc           #86                 // String hadoop.home.dir
       2: invokestatic  #24                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_0
       6: aload_0
       7: ifnonnull     16
      10: ldc           #87                 // String HADOOP_HOME
      12: invokestatic  #88                 // Method java/lang/System.getenv:(Ljava/lang/String;)Ljava/lang/String;
      15: astore_0
      16: aload_0
      17: invokestatic  #89                 // Method checkHadoopHomeInner:(Ljava/lang/String;)Ljava/io/File;
      20: areturn

  static java.io.File checkHadoopHomeInner(java.lang.String) throws java.io.FileNotFoundException;
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #90                 // class java/io/FileNotFoundException
       7: dup
       8: ldc           #91                 // String HADOOP_HOME and hadoop.home.dir are unset.
      10: invokespecial #92                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: ldc           #47                 // String \"
      17: invokevirtual #26                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      20: ifeq          32
      23: aload_0
      24: iconst_1
      25: invokevirtual #93                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      28: astore_0
      29: goto          14
      32: aload_0
      33: ldc           #47                 // String \"
      35: invokevirtual #94                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      38: ifeq          56
      41: aload_0
      42: iconst_0
      43: aload_0
      44: invokevirtual #5                  // Method java/lang/String.length:()I
      47: iconst_1
      48: isub
      49: invokevirtual #12                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      52: astore_0
      53: goto          32
      56: aload_0
      57: invokevirtual #95                 // Method java/lang/String.isEmpty:()Z
      60: ifeq          73
      63: new           #90                 // class java/io/FileNotFoundException
      66: dup
      67: ldc           #96                 // String HADOOP_HOME or hadoop.home.dir set to an empty string
      69: invokespecial #92                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
      72: athrow
      73: new           #80                 // class java/io/File
      76: dup
      77: aload_0
      78: invokespecial #97                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      81: astore_1
      82: aload_1
      83: invokevirtual #98                 // Method java/io/File.isAbsolute:()Z
      86: ifne          126
      89: new           #90                 // class java/io/FileNotFoundException
      92: dup
      93: new           #15                 // class java/lang/StringBuilder
      96: dup
      97: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
     100: ldc           #99                 // String Hadoop home directory
     102: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: aload_1
     106: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     109: ldc           #77                 // String
     111: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: ldc           #101                // String is not an absolute path.
     116: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     122: invokespecial #92                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
     125: athrow
     126: aload_1
     127: invokevirtual #102                // Method java/io/File.exists:()Z
     130: ifne          170
     133: new           #90                 // class java/io/FileNotFoundException
     136: dup
     137: new           #15                 // class java/lang/StringBuilder
     140: dup
     141: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
     144: ldc           #99                 // String Hadoop home directory
     146: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     149: aload_1
     150: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     153: ldc           #77                 // String
     155: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     158: ldc           #103                // String does not exist
     160: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     163: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     166: invokespecial #92                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
     169: athrow
     170: aload_1
     171: invokevirtual #104                // Method java/io/File.isDirectory:()Z
     174: ifne          214
     177: new           #90                 // class java/io/FileNotFoundException
     180: dup
     181: new           #15                 // class java/lang/StringBuilder
     184: dup
     185: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
     188: ldc           #99                 // String Hadoop home directory
     190: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     193: aload_1
     194: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     197: ldc           #77                 // String
     199: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     202: ldc           #105                // String is not a directory.
     204: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     207: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     210: invokespecial #92                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
     213: athrow
     214: aload_1
     215: areturn

  private static java.lang.String addOsText(java.lang.String);
    Code:
       0: getstatic     #39                 // Field WINDOWS:Z
       3: ifeq          33
       6: new           #15                 // class java/lang/StringBuilder
       9: dup
      10: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      13: aload_0
      14: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #106                // String  -see
      19: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: ldc           #107                // String https://wiki.apache.org/hadoop/WindowsProblems
      24: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: goto          34
      33: aload_0
      34: areturn

  private static java.io.FileNotFoundException fileNotFoundException(java.lang.String, java.lang.Exception);
    Code:
       0: new           #90                 // class java/io/FileNotFoundException
       3: dup
       4: aload_0
       5: invokespecial #92                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
       8: aload_1
       9: invokevirtual #108                // Method java/io/FileNotFoundException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      12: checkcast     #90                 // class java/io/FileNotFoundException
      15: areturn

  public static java.lang.String getHadoopHome() throws java.io.IOException;
    Code:
       0: invokestatic  #109                // Method getHadoopHomeDir:()Ljava/io/File;
       3: invokevirtual #110                // Method java/io/File.getCanonicalPath:()Ljava/lang/String;
       6: areturn

  private static java.io.File getHadoopHomeDir() throws java.io.FileNotFoundException;
    Code:
       0: getstatic     #111                // Field HADOOP_HOME_DIR_FAILURE_CAUSE:Ljava/io/IOException;
       3: ifnull        22
       6: getstatic     #111                // Field HADOOP_HOME_DIR_FAILURE_CAUSE:Ljava/io/IOException;
       9: invokevirtual #112                // Method java/io/IOException.toString:()Ljava/lang/String;
      12: invokestatic  #113                // Method addOsText:(Ljava/lang/String;)Ljava/lang/String;
      15: getstatic     #111                // Field HADOOP_HOME_DIR_FAILURE_CAUSE:Ljava/io/IOException;
      18: invokestatic  #114                // Method fileNotFoundException:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/io/FileNotFoundException;
      21: athrow
      22: getstatic     #115                // Field HADOOP_HOME_FILE:Ljava/io/File;
      25: areturn

  public static java.io.File getQualifiedBin(java.lang.String) throws java.io.FileNotFoundException;
    Code:
       0: invokestatic  #109                // Method getHadoopHomeDir:()Ljava/io/File;
       3: aload_0
       4: invokestatic  #116                // Method getQualifiedBinInner:(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;
       7: areturn

  static java.io.File getQualifiedBinInner(java.io.File, java.lang.String) throws java.io.FileNotFoundException;
    Code:
       0: ldc           #117                // String Hadoop bin directory
       2: astore_2
       3: new           #80                 // class java/io/File
       6: dup
       7: aload_0
       8: ldc           #118                // String bin
      10: invokespecial #82                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      13: astore_3
      14: aload_3
      15: invokevirtual #102                // Method java/io/File.exists:()Z
      18: ifne          60
      21: new           #90                 // class java/io/FileNotFoundException
      24: dup
      25: new           #15                 // class java/lang/StringBuilder
      28: dup
      29: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      32: aload_2
      33: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: ldc           #103                // String does not exist
      38: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: ldc           #119                // String :
      43: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_3
      47: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      50: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokestatic  #113                // Method addOsText:(Ljava/lang/String;)Ljava/lang/String;
      56: invokespecial #92                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
      59: athrow
      60: aload_3
      61: invokevirtual #104                // Method java/io/File.isDirectory:()Z
      64: ifne          106
      67: new           #90                 // class java/io/FileNotFoundException
      70: dup
      71: new           #15                 // class java/lang/StringBuilder
      74: dup
      75: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      78: aload_2
      79: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: ldc           #105                // String is not a directory.
      84: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: ldc           #119                // String :
      89: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: aload_3
      93: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      96: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      99: invokestatic  #113                // Method addOsText:(Ljava/lang/String;)Ljava/lang/String;
     102: invokespecial #92                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
     105: athrow
     106: new           #80                 // class java/io/File
     109: dup
     110: aload_3
     111: aload_1
     112: invokespecial #82                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
     115: astore        4
     117: aload         4
     119: invokevirtual #102                // Method java/io/File.exists:()Z
     122: ifne          156
     125: new           #90                 // class java/io/FileNotFoundException
     128: dup
     129: new           #15                 // class java/lang/StringBuilder
     132: dup
     133: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
     136: ldc           #120                // String Could not locate Hadoop executable:
     138: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: aload         4
     143: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     146: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     149: invokestatic  #113                // Method addOsText:(Ljava/lang/String;)Ljava/lang/String;
     152: invokespecial #92                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
     155: athrow
     156: aload         4
     158: invokevirtual #121                // Method java/io/File.isFile:()Z
     161: ifne          195
     164: new           #90                 // class java/io/FileNotFoundException
     167: dup
     168: new           #15                 // class java/lang/StringBuilder
     171: dup
     172: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
     175: ldc           #122                // String Not an executable file:
     177: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     180: aload         4
     182: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     185: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     188: invokestatic  #113                // Method addOsText:(Ljava/lang/String;)Ljava/lang/String;
     191: invokespecial #92                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
     194: athrow
     195: aload         4
     197: invokevirtual #123                // Method java/io/File.getCanonicalFile:()Ljava/io/File;
     200: areturn
     201: astore        5
     203: aload         5
     205: invokevirtual #112                // Method java/io/IOException.toString:()Ljava/lang/String;
     208: aload         5
     210: invokestatic  #114                // Method fileNotFoundException:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/io/FileNotFoundException;
     213: athrow
    Exception table:
       from    to  target type
         195   200   201   Class java/io/IOException

  public static java.lang.String getQualifiedBinPath(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #124                // Method getQualifiedBin:(Ljava/lang/String;)Ljava/io/File;
       4: invokevirtual #110                // Method java/io/File.getCanonicalPath:()Ljava/lang/String;
       7: areturn

  public static boolean hasWinutilsPath();
    Code:
       0: getstatic     #125                // Field WINUTILS_PATH:Ljava/lang/String;
       3: ifnull        10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: ireturn

  public static java.lang.String getWinUtilsPath();
    Code:
       0: getstatic     #126                // Field WINUTILS_FAILURE:Ljava/io/IOException;
       3: ifnonnull     10
       6: getstatic     #125                // Field WINUTILS_PATH:Ljava/lang/String;
       9: areturn
      10: new           #127                // class java/lang/RuntimeException
      13: dup
      14: getstatic     #126                // Field WINUTILS_FAILURE:Ljava/io/IOException;
      17: invokevirtual #112                // Method java/io/IOException.toString:()Ljava/lang/String;
      20: getstatic     #126                // Field WINUTILS_FAILURE:Ljava/io/IOException;
      23: invokespecial #128                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      26: athrow

  public static java.io.File getWinUtilsFile() throws java.io.FileNotFoundException;
    Code:
       0: getstatic     #126                // Field WINUTILS_FAILURE:Ljava/io/IOException;
       3: ifnonnull     10
       6: getstatic     #129                // Field WINUTILS_FILE:Ljava/io/File;
       9: areturn
      10: getstatic     #126                // Field WINUTILS_FAILURE:Ljava/io/IOException;
      13: invokevirtual #112                // Method java/io/IOException.toString:()Ljava/lang/String;
      16: getstatic     #126                // Field WINUTILS_FAILURE:Ljava/io/IOException;
      19: invokestatic  #114                // Method fileNotFoundException:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/io/FileNotFoundException;
      22: athrow

  public static boolean checkIsBashSupported() throws java.io.InterruptedIOException;
    Code:
       0: getstatic     #39                 // Field WINDOWS:Z
       3: ifeq          8
       6: iconst_0
       7: ireturn
       8: iconst_1
       9: istore_1
      10: iconst_3
      11: anewarray     #40                 // class java/lang/String
      14: dup
      15: iconst_0
      16: ldc           #49                 // String bash
      18: aastore
      19: dup
      20: iconst_1
      21: ldc           #50                 // String -c
      23: aastore
      24: dup
      25: iconst_2
      26: ldc           #130                // String echo 1000
      28: aastore
      29: astore_2
      30: new           #131                // class org/apache/hadoop/util/Shell$ShellCommandExecutor
      33: dup
      34: aload_2
      35: invokespecial #132                // Method org/apache/hadoop/util/Shell$ShellCommandExecutor."<init>":([Ljava/lang/String;)V
      38: astore_0
      39: aload_0
      40: invokevirtual #133                // Method org/apache/hadoop/util/Shell$ShellCommandExecutor.execute:()V
      43: goto          90
      46: astore_2
      47: getstatic     #135                // Field LOG:Lorg/slf4j/Logger;
      50: ldc           #136                // String Interrupted, unable to determine if bash is supported
      52: aload_2
      53: invokeinterface #137,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      58: aload_2
      59: athrow
      60: astore_2
      61: getstatic     #135                // Field LOG:Lorg/slf4j/Logger;
      64: ldc           #138                // String Bash is not supported by the OS
      66: aload_2
      67: invokeinterface #137,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      72: iconst_0
      73: istore_1
      74: goto          90
      77: astore_2
      78: getstatic     #135                // Field LOG:Lorg/slf4j/Logger;
      81: ldc           #140                // String Bash execution is not allowed by the JVM security manager.Considering it not supported.
      83: invokeinterface #141,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      88: iconst_0
      89: istore_1
      90: iload_1
      91: ireturn
    Exception table:
       from    to  target type
          10    43    46   Class java/io/InterruptedIOException
          10    43    60   Class java/io/IOException
          10    43    77   Class java/lang/SecurityException

  private static boolean isSetsidSupported();
    Code:
       0: getstatic     #39                 // Field WINDOWS:Z
       3: ifeq          8
       6: iconst_0
       7: ireturn
       8: aconst_null
       9: astore_0
      10: iconst_1
      11: istore_1
      12: iconst_4
      13: anewarray     #40                 // class java/lang/String
      16: dup
      17: iconst_0
      18: ldc           #142                // String setsid
      20: aastore
      21: dup
      22: iconst_1
      23: ldc           #49                 // String bash
      25: aastore
      26: dup
      27: iconst_2
      28: ldc           #50                 // String -c
      30: aastore
      31: dup
      32: iconst_3
      33: ldc           #143                // String echo $$
      35: aastore
      36: astore_2
      37: new           #131                // class org/apache/hadoop/util/Shell$ShellCommandExecutor
      40: dup
      41: aload_2
      42: invokespecial #132                // Method org/apache/hadoop/util/Shell$ShellCommandExecutor."<init>":([Ljava/lang/String;)V
      45: astore_0
      46: aload_0
      47: invokevirtual #133                // Method org/apache/hadoop/util/Shell$ShellCommandExecutor.execute:()V
      50: getstatic     #135                // Field LOG:Lorg/slf4j/Logger;
      53: invokeinterface #144,  1          // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      58: ifeq          401
      61: getstatic     #135                // Field LOG:Lorg/slf4j/Logger;
      64: new           #15                 // class java/lang/StringBuilder
      67: dup
      68: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      71: ldc           #145                // String setsid exited with exit code
      73: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: aload_0
      77: ifnull        90
      80: aload_0
      81: invokevirtual #146                // Method org/apache/hadoop/util/Shell$ShellCommandExecutor.getExitCode:()I
      84: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      87: goto          92
      90: ldc           #147                // String (null executor)
      92: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      95: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      98: invokeinterface #148,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     103: goto          401
     106: astore_2
     107: getstatic     #135                // Field LOG:Lorg/slf4j/Logger;
     110: ldc           #149                // String setsid is not available on this machine. So not using it.
     112: invokeinterface #148,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     117: iconst_0
     118: istore_1
     119: getstatic     #135                // Field LOG:Lorg/slf4j/Logger;
     122: invokeinterface #144,  1          // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     127: ifeq          401
     130: getstatic     #135                // Field LOG:Lorg/slf4j/Logger;
     133: new           #15                 // class java/lang/StringBuilder
     136: dup
     137: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
     140: ldc           #145                // String setsid exited with exit code
     142: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     145: aload_0
     146: ifnull        159
     149: aload_0
     150: invokevirtual #146                // Method org/apache/hadoop/util/Shell$ShellCommandExecutor.getExitCode:()I
     153: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     156: goto          161
     159: ldc           #147                // String (null executor)
     161: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     164: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     167: invokeinterface #148,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     172: goto          401
     175: astore_2
     176: getstatic     #135                // Field LOG:Lorg/slf4j/Logger;
     179: ldc           #150                // String setsid is not allowed to run by the JVM security manager. So not using it.
     181: invokeinterface #148,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     186: iconst_0
     187: istore_1
     188: getstatic     #135                // Field LOG:Lorg/slf4j/Logger;
     191: invokeinterface #144,  1          // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     196: ifeq          401
     199: getstatic     #135                // Field LOG:Lorg/slf4j/Logger;
     202: new           #15                 // class java/lang/StringBuilder
     205: dup
     206: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
     209: ldc           #145                // String setsid exited with exit code
     211: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     214: aload_0
     215: ifnull        228
     218: aload_0
     219: invokevirtual #146                // Method org/apache/hadoop/util/Shell$ShellCommandExecutor.getExitCode:()I
     222: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     225: goto          230
     228: ldc           #147                // String (null executor)
     230: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     233: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     236: invokeinterface #148,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     241: goto          401
     244: astore_2
     245: aload_2
     246: invokevirtual #152                // Method java/lang/Error.getMessage:()Ljava/lang/String;
     249: ifnull        289
     252: aload_2
     253: invokevirtual #152                // Method java/lang/Error.getMessage:()Ljava/lang/String;
     256: ldc           #153                // String posix_spawn is not a supported process launch mechanism
     258: invokevirtual #29                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
     261: ifeq          289
     264: getstatic     #154                // Field FREEBSD:Z
     267: ifne          276
     270: getstatic     #155                // Field MAC:Z
     273: ifeq          289
     276: getstatic     #135                // Field LOG:Lorg/slf4j/Logger;
     279: ldc           #156                // String Avoiding JDK-8047340 on BSD-based systems.
     281: aload_2
     282: invokeinterface #157,  3          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Throwable;)V
     287: iconst_0
     288: istore_1
     289: getstatic     #135                // Field LOG:Lorg/slf4j/Logger;
     292: invokeinterface #144,  1          // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     297: ifeq          401
     300: getstatic     #135                // Field LOG:Lorg/slf4j/Logger;
     303: new           #15                 // class java/lang/StringBuilder
     306: dup
     307: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
     310: ldc           #145                // String setsid exited with exit code
     312: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     315: aload_0
     316: ifnull        329
     319: aload_0
     320: invokevirtual #146                // Method org/apache/hadoop/util/Shell$ShellCommandExecutor.getExitCode:()I
     323: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     326: goto          331
     329: ldc           #147                // String (null executor)
     331: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     334: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     337: invokeinterface #148,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     342: goto          401
     345: astore_3
     346: getstatic     #135                // Field LOG:Lorg/slf4j/Logger;
     349: invokeinterface #144,  1          // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     354: ifeq          399
     357: getstatic     #135                // Field LOG:Lorg/slf4j/Logger;
     360: new           #15                 // class java/lang/StringBuilder
     363: dup
     364: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
     367: ldc           #145                // String setsid exited with exit code
     369: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     372: aload_0
     373: ifnull        386
     376: aload_0
     377: invokevirtual #146                // Method org/apache/hadoop/util/Shell$ShellCommandExecutor.getExitCode:()I
     380: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     383: goto          388
     386: ldc           #147                // String (null executor)
     388: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     391: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     394: invokeinterface #148,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     399: aload_3
     400: athrow
     401: iload_1
     402: ireturn
    Exception table:
       from    to  target type
          12    50   106   Class java/io/IOException
          12    50   175   Class java/lang/SecurityException
          12    50   244   Class java/lang/Error
          12    50   345   any
         106   119   345   any
         175   188   345   any
         244   289   345   any

  protected org.apache.hadoop.util.Shell();
    Code:
       0: aload_0
       1: lconst_0
       2: invokespecial #158                // Method "<init>":(J)V
       5: return

  protected org.apache.hadoop.util.Shell(long);
    Code:
       0: aload_0
       1: lload_1
       2: iconst_0
       3: invokespecial #159                // Method "<init>":(JZ)V
       6: return

  protected org.apache.hadoop.util.Shell(long, boolean);
    Code:
       0: aload_0
       1: invokespecial #160                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #161                // Field timeOutInterval:J
       9: aload_0
      10: new           #162                // class java/util/concurrent/atomic/AtomicBoolean
      13: dup
      14: iconst_0
      15: invokespecial #163                // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      18: putfield      #164                // Field timedOut:Ljava/util/concurrent/atomic/AtomicBoolean;
      21: aload_0
      22: iconst_1
      23: putfield      #165                // Field inheritParentEnv:Z
      26: aload_0
      27: new           #162                // class java/util/concurrent/atomic/AtomicBoolean
      30: dup
      31: iconst_0
      32: invokespecial #163                // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      35: putfield      #3                  // Field completed:Ljava/util/concurrent/atomic/AtomicBoolean;
      38: aload_0
      39: lload_1
      40: putfield      #166                // Field interval:J
      43: aload_0
      44: lload_1
      45: lconst_0
      46: lcmp
      47: ifge          54
      50: lconst_0
      51: goto          56
      54: lload_1
      55: lneg
      56: putfield      #167                // Field lastTime:J
      59: aload_0
      60: iload_3
      61: putfield      #168                // Field redirectErrorStream:Z
      64: return

  protected void setEnvironment(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #169                // Field environment:Ljava/util/Map;
       5: return

  protected void setWorkingDirectory(java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #170                // Field dir:Ljava/io/File;
       5: return

  protected void run() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #167                // Field lastTime:J
       4: aload_0
       5: getfield      #166                // Field interval:J
       8: ladd
       9: invokestatic  #171                // Method org/apache/hadoop/util/Time.monotonicNow:()J
      12: lcmp
      13: ifle          17
      16: return
      17: aload_0
      18: iconst_0
      19: putfield      #172                // Field exitCode:I
      22: getstatic     #155                // Field MAC:Z
      25: ifeq          36
      28: ldc           #173                // String jdk.lang.Process.launchMechanism
      30: ldc           #174                // String POSIX_SPAWN
      32: invokestatic  #175                // Method java/lang/System.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      35: pop
      36: aload_0
      37: invokespecial #176                // Method runCommand:()V
      40: return

  private void runCommand() throws java.io.IOException;
    Code:
       0: new           #177                // class java/lang/ProcessBuilder
       3: dup
       4: aload_0
       5: invokevirtual #178                // Method getExecString:()[Ljava/lang/String;
       8: invokespecial #179                // Method java/lang/ProcessBuilder."<init>":([Ljava/lang/String;)V
      11: astore_1
      12: aconst_null
      13: astore_2
      14: aconst_null
      15: astore_3
      16: aload_0
      17: getfield      #164                // Field timedOut:Ljava/util/concurrent/atomic/AtomicBoolean;
      20: iconst_0
      21: invokevirtual #180                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      24: aload_0
      25: getfield      #3                  // Field completed:Ljava/util/concurrent/atomic/AtomicBoolean;
      28: iconst_0
      29: invokevirtual #180                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      32: aload_0
      33: getfield      #165                // Field inheritParentEnv:Z
      36: ifne          48
      39: aload_1
      40: invokevirtual #181                // Method java/lang/ProcessBuilder.environment:()Ljava/util/Map;
      43: invokeinterface #182,  1          // InterfaceMethod java/util/Map.clear:()V
      48: aload_0
      49: getfield      #169                // Field environment:Ljava/util/Map;
      52: ifnull        68
      55: aload_1
      56: invokevirtual #181                // Method java/lang/ProcessBuilder.environment:()Ljava/util/Map;
      59: aload_0
      60: getfield      #169                // Field environment:Ljava/util/Map;
      63: invokeinterface #183,  2          // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      68: aload_0
      69: getfield      #170                // Field dir:Ljava/io/File;
      72: ifnull        84
      75: aload_1
      76: aload_0
      77: getfield      #170                // Field dir:Ljava/io/File;
      80: invokevirtual #184                // Method java/lang/ProcessBuilder.directory:(Ljava/io/File;)Ljava/lang/ProcessBuilder;
      83: pop
      84: aload_1
      85: aload_0
      86: getfield      #168                // Field redirectErrorStream:Z
      89: invokevirtual #185                // Method java/lang/ProcessBuilder.redirectErrorStream:(Z)Ljava/lang/ProcessBuilder;
      92: pop
      93: getstatic     #39                 // Field WINDOWS:Z
      96: ifeq          131
      99: getstatic     #186                // Field WindowsProcessLaunchLock:Ljava/lang/Object;
     102: dup
     103: astore        4
     105: monitorenter
     106: aload_0
     107: aload_1
     108: invokevirtual #187                // Method java/lang/ProcessBuilder.start:()Ljava/lang/Process;
     111: putfield      #188                // Field process:Ljava/lang/Process;
     114: aload         4
     116: monitorexit
     117: goto          128
     120: astore        5
     122: aload         4
     124: monitorexit
     125: aload         5
     127: athrow
     128: goto          139
     131: aload_0
     132: aload_1
     133: invokevirtual #187                // Method java/lang/ProcessBuilder.start:()Ljava/lang/Process;
     136: putfield      #188                // Field process:Ljava/lang/Process;
     139: aload_0
     140: invokestatic  #189                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     143: putfield      #190                // Field waitingThread:Ljava/lang/Thread;
     146: getstatic     #191                // Field CHILD_SHELLS:Ljava/util/Map;
     149: aload_0
     150: aconst_null
     151: invokeinterface #192,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     156: pop
     157: aload_0
     158: getfield      #161                // Field timeOutInterval:J
     161: lconst_0
     162: lcmp
     163: ifle          194
     166: new           #193                // class java/util/Timer
     169: dup
     170: ldc           #194                // String Shell command timeout
     172: invokespecial #195                // Method java/util/Timer."<init>":(Ljava/lang/String;)V
     175: astore_2
     176: new           #196                // class org/apache/hadoop/util/Shell$ShellTimeoutTimerTask
     179: dup
     180: aload_0
     181: invokespecial #197                // Method org/apache/hadoop/util/Shell$ShellTimeoutTimerTask."<init>":(Lorg/apache/hadoop/util/Shell;)V
     184: astore_3
     185: aload_2
     186: aload_3
     187: aload_0
     188: getfield      #161                // Field timeOutInterval:J
     191: invokevirtual #198                // Method java/util/Timer.schedule:(Ljava/util/TimerTask;J)V
     194: new           #199                // class java/io/BufferedReader
     197: dup
     198: new           #200                // class java/io/InputStreamReader
     201: dup
     202: aload_0
     203: getfield      #188                // Field process:Ljava/lang/Process;
     206: invokevirtual #201                // Method java/lang/Process.getErrorStream:()Ljava/io/InputStream;
     209: invokestatic  #202                // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
     212: invokespecial #203                // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V
     215: invokespecial #204                // Method java/io/BufferedReader."<init>":(Ljava/io/Reader;)V
     218: astore        4
     220: new           #199                // class java/io/BufferedReader
     223: dup
     224: new           #200                // class java/io/InputStreamReader
     227: dup
     228: aload_0
     229: getfield      #188                // Field process:Ljava/lang/Process;
     232: invokevirtual #205                // Method java/lang/Process.getInputStream:()Ljava/io/InputStream;
     235: invokestatic  #202                // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
     238: invokespecial #203                // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V
     241: invokespecial #204                // Method java/io/BufferedReader."<init>":(Ljava/io/Reader;)V
     244: astore        5
     246: new           #206                // class java/lang/StringBuffer
     249: dup
     250: invokespecial #207                // Method java/lang/StringBuffer."<init>":()V
     253: astore        6
     255: new           #208                // class org/apache/hadoop/util/Shell$1
     258: dup
     259: aload_0
     260: aload         4
     262: aload         6
     264: invokespecial #209                // Method org/apache/hadoop/util/Shell$1."<init>":(Lorg/apache/hadoop/util/Shell;Ljava/io/BufferedReader;Ljava/lang/StringBuffer;)V
     267: astore        7
     269: aload         7
     271: invokevirtual #210                // Method java/lang/Thread.start:()V
     274: goto          320
     277: astore        8
     279: goto          320
     282: astore        8
     284: getstatic     #135                // Field LOG:Lorg/slf4j/Logger;
     287: new           #15                 // class java/lang/StringBuilder
     290: dup
     291: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
     294: ldc           #213                // String Caught
     296: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     299: aload         8
     301: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     304: ldc           #214                // String . One possible reason is that ulimit setting of \'max user processes\' is too low. If so, do \'ulimit -u <largerNum>\' and try again.
     306: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     309: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     312: invokeinterface #215,  2          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
     317: aload         8
     319: athrow
     320: aload_0
     321: aload         5
     323: invokevirtual #216                // Method parseExecResult:(Ljava/io/BufferedReader;)V
     326: aload         5
     328: invokevirtual #217                // Method java/io/BufferedReader.readLine:()Ljava/lang/String;
     331: astore        8
     333: aload         8
     335: ifnull        348
     338: aload         5
     340: invokevirtual #217                // Method java/io/BufferedReader.readLine:()Ljava/lang/String;
     343: astore        8
     345: goto          333
     348: aload_0
     349: aload_0
     350: getfield      #188                // Field process:Ljava/lang/Process;
     353: invokevirtual #218                // Method java/lang/Process.waitFor:()I
     356: putfield      #172                // Field exitCode:I
     359: aload         7
     361: invokestatic  #219                // Method joinThread:(Ljava/lang/Thread;)V
     364: aload_0
     365: getfield      #3                  // Field completed:Ljava/util/concurrent/atomic/AtomicBoolean;
     368: iconst_1
     369: invokevirtual #180                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
     372: aload_0
     373: getfield      #172                // Field exitCode:I
     376: ifeq          396
     379: new           #220                // class org/apache/hadoop/util/Shell$ExitCodeException
     382: dup
     383: aload_0
     384: getfield      #172                // Field exitCode:I
     387: aload         6
     389: invokevirtual #221                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     392: invokespecial #222                // Method org/apache/hadoop/util/Shell$ExitCodeException."<init>":(ILjava/lang/String;)V
     395: athrow
     396: aload_2
     397: ifnull        404
     400: aload_2
     401: invokevirtual #223                // Method java/util/Timer.cancel:()V
     404: aload         5
     406: invokevirtual #224                // Method java/io/BufferedReader.close:()V
     409: goto          426
     412: astore        8
     414: getstatic     #135                // Field LOG:Lorg/slf4j/Logger;
     417: ldc           #225                // String Error while closing the input stream
     419: aload         8
     421: invokeinterface #137,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     426: aload_0
     427: getfield      #3                  // Field completed:Ljava/util/concurrent/atomic/AtomicBoolean;
     430: invokevirtual #226                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
     433: ifne          446
     436: aload         7
     438: invokevirtual #227                // Method java/lang/Thread.interrupt:()V
     441: aload         7
     443: invokestatic  #219                // Method joinThread:(Ljava/lang/Thread;)V
     446: aload         4
     448: invokevirtual #224                // Method java/io/BufferedReader.close:()V
     451: goto          468
     454: astore        8
     456: getstatic     #135                // Field LOG:Lorg/slf4j/Logger;
     459: ldc           #228                // String Error while closing the error stream
     461: aload         8
     463: invokeinterface #137,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     468: aload_0
     469: getfield      #188                // Field process:Ljava/lang/Process;
     472: invokevirtual #229                // Method java/lang/Process.destroy:()V
     475: aload_0
     476: aconst_null
     477: putfield      #190                // Field waitingThread:Ljava/lang/Thread;
     480: getstatic     #191                // Field CHILD_SHELLS:Ljava/util/Map;
     483: aload_0
     484: invokeinterface #230,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     489: pop
     490: aload_0
     491: invokestatic  #171                // Method org/apache/hadoop/util/Time.monotonicNow:()J
     494: putfield      #167                // Field lastTime:J
     497: goto          633
     500: astore        8
     502: new           #134                // class java/io/InterruptedIOException
     505: dup
     506: aload         8
     508: invokevirtual #232                // Method java/lang/InterruptedException.toString:()Ljava/lang/String;
     511: invokespecial #233                // Method java/io/InterruptedIOException."<init>":(Ljava/lang/String;)V
     514: astore        9
     516: aload         9
     518: aload         8
     520: invokevirtual #234                // Method java/io/InterruptedIOException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
     523: pop
     524: aload         9
     526: athrow
     527: astore        10
     529: aload_2
     530: ifnull        537
     533: aload_2
     534: invokevirtual #223                // Method java/util/Timer.cancel:()V
     537: aload         5
     539: invokevirtual #224                // Method java/io/BufferedReader.close:()V
     542: goto          559
     545: astore        11
     547: getstatic     #135                // Field LOG:Lorg/slf4j/Logger;
     550: ldc           #225                // String Error while closing the input stream
     552: aload         11
     554: invokeinterface #137,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     559: aload_0
     560: getfield      #3                  // Field completed:Ljava/util/concurrent/atomic/AtomicBoolean;
     563: invokevirtual #226                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
     566: ifne          579
     569: aload         7
     571: invokevirtual #227                // Method java/lang/Thread.interrupt:()V
     574: aload         7
     576: invokestatic  #219                // Method joinThread:(Ljava/lang/Thread;)V
     579: aload         4
     581: invokevirtual #224                // Method java/io/BufferedReader.close:()V
     584: goto          601
     587: astore        11
     589: getstatic     #135                // Field LOG:Lorg/slf4j/Logger;
     592: ldc           #228                // String Error while closing the error stream
     594: aload         11
     596: invokeinterface #137,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     601: aload_0
     602: getfield      #188                // Field process:Ljava/lang/Process;
     605: invokevirtual #229                // Method java/lang/Process.destroy:()V
     608: aload_0
     609: aconst_null
     610: putfield      #190                // Field waitingThread:Ljava/lang/Thread;
     613: getstatic     #191                // Field CHILD_SHELLS:Ljava/util/Map;
     616: aload_0
     617: invokeinterface #230,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     622: pop
     623: aload_0
     624: invokestatic  #171                // Method org/apache/hadoop/util/Time.monotonicNow:()J
     627: putfield      #167                // Field lastTime:J
     630: aload         10
     632: athrow
     633: return
    Exception table:
       from    to  target type
         106   117   120   any
         120   125   120   any
         269   274   277   Class java/lang/IllegalStateException
         269   274   282   Class java/lang/OutOfMemoryError
         404   409   412   Class java/io/IOException
         446   451   454   Class java/io/IOException
         320   396   500   Class java/lang/InterruptedException
         320   396   527   any
         537   542   545   Class java/io/IOException
         579   584   587   Class java/io/IOException
         500   529   527   any

  private static void joinThread(java.lang.Thread);
    Code:
       0: aload_0
       1: invokevirtual #235                // Method java/lang/Thread.isAlive:()Z
       4: ifeq          61
       7: aload_0
       8: invokevirtual #236                // Method java/lang/Thread.join:()V
      11: goto          0
      14: astore_1
      15: getstatic     #135                // Field LOG:Lorg/slf4j/Logger;
      18: invokeinterface #237,  1          // InterfaceMethod org/slf4j/Logger.isWarnEnabled:()Z
      23: ifeq          54
      26: getstatic     #135                // Field LOG:Lorg/slf4j/Logger;
      29: new           #15                 // class java/lang/StringBuilder
      32: dup
      33: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #238                // String Interrupted while joining on:
      38: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_0
      42: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      45: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: aload_1
      49: invokeinterface #137,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      54: aload_0
      55: invokevirtual #227                // Method java/lang/Thread.interrupt:()V
      58: goto          0
      61: return
    Exception table:
       from    to  target type
           7    11    14   Class java/lang/InterruptedException

  protected abstract java.lang.String[] getExecString();

  protected abstract void parseExecResult(java.io.BufferedReader) throws java.io.IOException;

  public java.lang.String getEnvironment(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #169                // Field environment:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #239,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #40                 // class java/lang/String
      13: areturn

  public java.lang.Process getProcess();
    Code:
       0: aload_0
       1: getfield      #188                // Field process:Ljava/lang/Process;
       4: areturn

  public int getExitCode();
    Code:
       0: aload_0
       1: getfield      #172                // Field exitCode:I
       4: ireturn

  public java.lang.Thread getWaitingThread();
    Code:
       0: aload_0
       1: getfield      #190                // Field waitingThread:Ljava/lang/Thread;
       4: areturn

  public boolean isTimedOut();
    Code:
       0: aload_0
       1: getfield      #164                // Field timedOut:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #226                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  private void setTimedOut();
    Code:
       0: aload_0
       1: getfield      #164                // Field timedOut:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_1
       5: invokevirtual #180                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       8: return

  public static java.lang.String execCommand(java.lang.String...) throws java.io.IOException;
    Code:
       0: aconst_null
       1: aload_0
       2: lconst_0
       3: invokestatic  #240                // Method execCommand:(Ljava/util/Map;[Ljava/lang/String;J)Ljava/lang/String;
       6: areturn

  public static java.lang.String execCommand(java.util.Map<java.lang.String, java.lang.String>, java.lang.String[], long) throws java.io.IOException;
    Code:
       0: new           #131                // class org/apache/hadoop/util/Shell$ShellCommandExecutor
       3: dup
       4: aload_1
       5: aconst_null
       6: aload_0
       7: lload_2
       8: invokespecial #241                // Method org/apache/hadoop/util/Shell$ShellCommandExecutor."<init>":([Ljava/lang/String;Ljava/io/File;Ljava/util/Map;J)V
      11: astore        4
      13: aload         4
      15: invokevirtual #133                // Method org/apache/hadoop/util/Shell$ShellCommandExecutor.execute:()V
      18: aload         4
      20: invokevirtual #242                // Method org/apache/hadoop/util/Shell$ShellCommandExecutor.getOutput:()Ljava/lang/String;
      23: areturn

  public static java.lang.String execCommand(java.util.Map<java.lang.String, java.lang.String>, java.lang.String...) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: lconst_0
       3: invokestatic  #240                // Method execCommand:(Ljava/util/Map;[Ljava/lang/String;J)Ljava/lang/String;
       6: areturn

  public static void destroyAllShellProcesses();
    Code:
       0: getstatic     #191                // Field CHILD_SHELLS:Ljava/util/Map;
       3: dup
       4: astore_0
       5: monitorenter
       6: getstatic     #191                // Field CHILD_SHELLS:Ljava/util/Map;
       9: invokeinterface #243,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      14: invokeinterface #244,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      19: astore_1
      20: aload_1
      21: invokeinterface #245,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          56
      29: aload_1
      30: invokeinterface #246,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #1                  // class org/apache/hadoop/util/Shell
      38: astore_2
      39: aload_2
      40: invokevirtual #247                // Method getProcess:()Ljava/lang/Process;
      43: ifnull        53
      46: aload_2
      47: invokevirtual #247                // Method getProcess:()Ljava/lang/Process;
      50: invokevirtual #229                // Method java/lang/Process.destroy:()V
      53: goto          20
      56: getstatic     #191                // Field CHILD_SHELLS:Ljava/util/Map;
      59: invokeinterface #182,  1          // InterfaceMethod java/util/Map.clear:()V
      64: aload_0
      65: monitorexit
      66: goto          74
      69: astore_3
      70: aload_0
      71: monitorexit
      72: aload_3
      73: athrow
      74: return
    Exception table:
       from    to  target type
           6    66    69   any
          69    72    69   any

  public static java.util.Set<org.apache.hadoop.util.Shell> getAllShells();
    Code:
       0: getstatic     #191                // Field CHILD_SHELLS:Ljava/util/Map;
       3: dup
       4: astore_0
       5: monitorenter
       6: new           #248                // class java/util/HashSet
       9: dup
      10: getstatic     #191                // Field CHILD_SHELLS:Ljava/util/Map;
      13: invokeinterface #243,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      18: invokespecial #249                // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      21: aload_0
      22: monitorexit
      23: areturn
      24: astore_1
      25: aload_0
      26: monitorexit
      27: aload_1
      28: athrow
    Exception table:
       from    to  target type
           6    23    24   any
          24    27    24   any

  public static java.lang.Long getMemlockLimit(java.lang.Long);
    Code:
       0: getstatic     #39                 // Field WINDOWS:Z
       3: ifeq          20
       6: ldc2_w        #251                // long 2147483647l
       9: aload_0
      10: invokevirtual #253                // Method java/lang/Long.longValue:()J
      13: invokestatic  #254                // Method java/lang/Math.min:(JJ)J
      16: invokestatic  #255                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      19: areturn
      20: aload_0
      21: areturn

  static java.util.concurrent.atomic.AtomicBoolean access$000(org.apache.hadoop.util.Shell);
    Code:
       0: aload_0
       1: getfield      #3                  // Field completed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: areturn

  static void access$100(org.apache.hadoop.util.Shell);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method setTimedOut:()V
       4: return

  static {};
    Code:
       0: new           #256                // class java/util/WeakHashMap
       3: dup
       4: invokespecial #257                // Method java/util/WeakHashMap."<init>":()V
       7: invokestatic  #258                // Method java/util/Collections.synchronizedMap:(Ljava/util/Map;)Ljava/util/Map;
      10: putstatic     #191                // Field CHILD_SHELLS:Ljava/util/Map;
      13: ldc           #1                  // class org/apache/hadoop/util/Shell
      15: invokestatic  #259                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      18: putstatic     #135                // Field LOG:Lorg/slf4j/Logger;
      21: bipush        8
      23: ldc_w         #260                // String java.specification.version
      26: invokestatic  #24                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      29: ldc_w         #261                // String \\.
      32: invokevirtual #262                // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      35: iconst_0
      36: aaload
      37: invokestatic  #263                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      40: invokestatic  #264                // Method java/lang/Math.max:(II)I
      43: putstatic     #4                  // Field JAVA_SPEC_VER:I
      46: new           #8                  // class java/lang/Object
      49: dup
      50: invokespecial #160                // Method java/lang/Object."<init>":()V
      53: putstatic     #186                // Field WindowsProcessLaunchLock:Ljava/lang/Object;
      56: invokestatic  #265                // Method getOSType:()Lorg/apache/hadoop/util/Shell$OSType;
      59: putstatic     #266                // Field osType:Lorg/apache/hadoop/util/Shell$OSType;
      62: getstatic     #266                // Field osType:Lorg/apache/hadoop/util/Shell$OSType;
      65: getstatic     #27                 // Field org/apache/hadoop/util/Shell$OSType.OS_TYPE_WIN:Lorg/apache/hadoop/util/Shell$OSType;
      68: if_acmpne     75
      71: iconst_1
      72: goto          76
      75: iconst_0
      76: putstatic     #39                 // Field WINDOWS:Z
      79: getstatic     #266                // Field osType:Lorg/apache/hadoop/util/Shell$OSType;
      82: getstatic     #31                 // Field org/apache/hadoop/util/Shell$OSType.OS_TYPE_SOLARIS:Lorg/apache/hadoop/util/Shell$OSType;
      85: if_acmpne     92
      88: iconst_1
      89: goto          93
      92: iconst_0
      93: putstatic     #267                // Field SOLARIS:Z
      96: getstatic     #266                // Field osType:Lorg/apache/hadoop/util/Shell$OSType;
      99: getstatic     #33                 // Field org/apache/hadoop/util/Shell$OSType.OS_TYPE_MAC:Lorg/apache/hadoop/util/Shell$OSType;
     102: if_acmpne     109
     105: iconst_1
     106: goto          110
     109: iconst_0
     110: putstatic     #155                // Field MAC:Z
     113: getstatic     #266                // Field osType:Lorg/apache/hadoop/util/Shell$OSType;
     116: getstatic     #35                 // Field org/apache/hadoop/util/Shell$OSType.OS_TYPE_FREEBSD:Lorg/apache/hadoop/util/Shell$OSType;
     119: if_acmpne     126
     122: iconst_1
     123: goto          127
     126: iconst_0
     127: putstatic     #154                // Field FREEBSD:Z
     130: getstatic     #266                // Field osType:Lorg/apache/hadoop/util/Shell$OSType;
     133: getstatic     #37                 // Field org/apache/hadoop/util/Shell$OSType.OS_TYPE_LINUX:Lorg/apache/hadoop/util/Shell$OSType;
     136: if_acmpne     143
     139: iconst_1
     140: goto          144
     143: iconst_0
     144: putstatic     #268                // Field LINUX:Z
     147: getstatic     #266                // Field osType:Lorg/apache/hadoop/util/Shell$OSType;
     150: getstatic     #38                 // Field org/apache/hadoop/util/Shell$OSType.OS_TYPE_OTHER:Lorg/apache/hadoop/util/Shell$OSType;
     153: if_acmpne     160
     156: iconst_1
     157: goto          161
     160: iconst_0
     161: putstatic     #269                // Field OTHER:Z
     164: invokestatic  #270                // Method java/lang/System.getProperties:()Ljava/util/Properties;
     167: ldc_w         #271                // String os.arch
     170: invokevirtual #272                // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
     173: ldc_w         #273                // String ppc64
     176: invokevirtual #29                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
     179: putstatic     #274                // Field PPC_64:Z
     182: invokestatic  #275                // Method checkHadoopHome:()Ljava/io/File;
     185: astore_0
     186: aconst_null
     187: astore_1
     188: goto          219
     191: astore_2
     192: getstatic     #135                // Field LOG:Lorg/slf4j/Logger;
     195: invokeinterface #144,  1          // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     200: ifeq          215
     203: getstatic     #135                // Field LOG:Lorg/slf4j/Logger;
     206: ldc_w         #276                // String Failed to detect a valid hadoop home directory
     209: aload_2
     210: invokeinterface #277,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
     215: aload_2
     216: astore_1
     217: aconst_null
     218: astore_0
     219: aload_0
     220: putstatic     #115                // Field HADOOP_HOME_FILE:Ljava/io/File;
     223: aload_1
     224: putstatic     #111                // Field HADOOP_HOME_DIR_FAILURE_CAUSE:Ljava/io/IOException;
     227: aconst_null
     228: astore_0
     229: aconst_null
     230: astore_1
     231: aconst_null
     232: astore_2
     233: getstatic     #39                 // Field WINDOWS:Z
     236: ifeq          293
     239: ldc_w         #278                // String winutils.exe
     242: invokestatic  #124                // Method getQualifiedBin:(Ljava/lang/String;)Ljava/io/File;
     245: astore_2
     246: aload_2
     247: invokevirtual #110                // Method java/io/File.getCanonicalPath:()Ljava/lang/String;
     250: astore_1
     251: aconst_null
     252: astore_0
     253: goto          304
     256: astore_3
     257: getstatic     #135                // Field LOG:Lorg/slf4j/Logger;
     260: ldc_w         #279                // String Did not find {}: {}
     263: ldc_w         #278                // String winutils.exe
     266: aload_3
     267: invokeinterface #280,  4          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     272: getstatic     #135                // Field LOG:Lorg/slf4j/Logger;
     275: ldc_w         #281                // String Failed to find winutils.exe
     278: aload_3
     279: invokeinterface #277,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
     284: aconst_null
     285: astore_2
     286: aconst_null
     287: astore_1
     288: aload_3
     289: astore_0
     290: goto          304
     293: new           #90                 // class java/io/FileNotFoundException
     296: dup
     297: ldc_w         #282                // String Not a Windows system
     300: invokespecial #92                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
     303: astore_0
     304: aload_1
     305: putstatic     #125                // Field WINUTILS_PATH:Ljava/lang/String;
     308: aload_2
     309: putstatic     #129                // Field WINUTILS_FILE:Ljava/io/File;
     312: aload_1
     313: putstatic     #283                // Field WINUTILS:Ljava/lang/String;
     316: aload_0
     317: putstatic     #126                // Field WINUTILS_FAILURE:Ljava/io/IOException;
     320: invokestatic  #284                // Method isSetsidSupported:()Z
     323: putstatic     #73                 // Field isSetsidAvailable:Z
     326: getstatic     #39                 // Field WINDOWS:Z
     329: ifeq          338
     332: ldc_w         #285                // String [|\n\r]
     335: goto          341
     338: ldc_w         #286                // String [ \t\n\r\f]
     341: putstatic     #287                // Field TOKEN_SEPARATOR_REGEX:Ljava/lang/String;
     344: return
    Exception table:
       from    to  target type
         182   188   191   Class java/io/IOException
         239   253   256   Class java/io/IOException
}
