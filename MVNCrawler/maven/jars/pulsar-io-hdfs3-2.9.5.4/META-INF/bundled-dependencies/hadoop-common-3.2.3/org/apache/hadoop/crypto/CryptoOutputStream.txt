Compiled from "CryptoOutputStream.java"
public class org.apache.hadoop.crypto.CryptoOutputStream extends java.io.FilterOutputStream implements org.apache.hadoop.fs.Syncable,org.apache.hadoop.fs.CanSetDropBehind,org.apache.hadoop.fs.StreamCapabilities {
  private final byte[] oneByteBuf;

  private final org.apache.hadoop.crypto.CryptoCodec codec;

  private final org.apache.hadoop.crypto.Encryptor encryptor;

  private final int bufferSize;

  private java.nio.ByteBuffer inBuffer;

  private java.nio.ByteBuffer outBuffer;

  private long streamOffset;

  private byte padding;

  private boolean closed;

  private final byte[] key;

  private final byte[] initIV;

  private byte[] iv;

  private boolean closeOutputStream;

  private byte[] tmpBuf;

  public org.apache.hadoop.crypto.CryptoOutputStream(java.io.OutputStream, org.apache.hadoop.crypto.CryptoCodec, int, byte[], byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: aload         4
       6: aload         5
       8: lconst_0
       9: invokespecial #1                  // Method "<init>":(Ljava/io/OutputStream;Lorg/apache/hadoop/crypto/CryptoCodec;I[B[BJ)V
      12: return

  public org.apache.hadoop.crypto.CryptoOutputStream(java.io.OutputStream, org.apache.hadoop.crypto.CryptoCodec, int, byte[], byte[], long) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: aload         4
       6: aload         5
       8: lload         6
      10: iconst_1
      11: invokespecial #2                  // Method "<init>":(Ljava/io/OutputStream;Lorg/apache/hadoop/crypto/CryptoCodec;I[B[BJZ)V
      14: return

  public org.apache.hadoop.crypto.CryptoOutputStream(java.io.OutputStream, org.apache.hadoop.crypto.CryptoCodec, int, byte[], byte[], long, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method java/io/FilterOutputStream."<init>":(Ljava/io/OutputStream;)V
       5: aload_0
       6: iconst_1
       7: newarray       byte
       9: putfield      #4                  // Field oneByteBuf:[B
      12: aload_0
      13: lconst_0
      14: putfield      #5                  // Field streamOffset:J
      17: aload_2
      18: invokestatic  #6                  // Method org/apache/hadoop/crypto/CryptoStreamUtils.checkCodec:(Lorg/apache/hadoop/crypto/CryptoCodec;)V
      21: aload_0
      22: aload_2
      23: iload_3
      24: invokestatic  #7                  // Method org/apache/hadoop/crypto/CryptoStreamUtils.checkBufferSize:(Lorg/apache/hadoop/crypto/CryptoCodec;I)I
      27: putfield      #8                  // Field bufferSize:I
      30: aload_0
      31: aload_2
      32: putfield      #9                  // Field codec:Lorg/apache/hadoop/crypto/CryptoCodec;
      35: aload_0
      36: aload         4
      38: invokevirtual #10                 // Method "[B".clone:()Ljava/lang/Object;
      41: checkcast     #11                 // class "[B"
      44: putfield      #12                 // Field key:[B
      47: aload_0
      48: aload         5
      50: invokevirtual #13                 // Method "[B".clone:()Ljava/lang/Object;
      53: checkcast     #11                 // class "[B"
      56: putfield      #14                 // Field initIV:[B
      59: aload_0
      60: aload         5
      62: invokevirtual #15                 // Method "[B".clone:()Ljava/lang/Object;
      65: checkcast     #11                 // class "[B"
      68: putfield      #16                 // Field iv:[B
      71: aload_0
      72: aload_0
      73: getfield      #8                  // Field bufferSize:I
      76: invokestatic  #17                 // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
      79: putfield      #18                 // Field inBuffer:Ljava/nio/ByteBuffer;
      82: aload_0
      83: aload_0
      84: getfield      #8                  // Field bufferSize:I
      87: invokestatic  #17                 // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
      90: putfield      #19                 // Field outBuffer:Ljava/nio/ByteBuffer;
      93: aload_0
      94: lload         6
      96: putfield      #5                  // Field streamOffset:J
      99: aload_0
     100: iload         8
     102: putfield      #20                 // Field closeOutputStream:Z
     105: aload_0
     106: aload_2
     107: invokevirtual #21                 // Method org/apache/hadoop/crypto/CryptoCodec.createEncryptor:()Lorg/apache/hadoop/crypto/Encryptor;
     110: putfield      #22                 // Field encryptor:Lorg/apache/hadoop/crypto/Encryptor;
     113: goto          128
     116: astore        9
     118: new           #24                 // class java/io/IOException
     121: dup
     122: aload         9
     124: invokespecial #25                 // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
     127: athrow
     128: aload_0
     129: invokespecial #26                 // Method updateEncryptor:()V
     132: return
    Exception table:
       from    to  target type
         105   113   116   Class java/security/GeneralSecurityException

  public org.apache.hadoop.crypto.CryptoOutputStream(java.io.OutputStream, org.apache.hadoop.crypto.CryptoCodec, byte[], byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: lconst_0
       7: invokespecial #27                 // Method "<init>":(Ljava/io/OutputStream;Lorg/apache/hadoop/crypto/CryptoCodec;[B[BJ)V
      10: return

  public org.apache.hadoop.crypto.CryptoOutputStream(java.io.OutputStream, org.apache.hadoop.crypto.CryptoCodec, byte[], byte[], long) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: lload         5
       8: iconst_1
       9: invokespecial #28                 // Method "<init>":(Ljava/io/OutputStream;Lorg/apache/hadoop/crypto/CryptoCodec;[B[BJZ)V
      12: return

  public org.apache.hadoop.crypto.CryptoOutputStream(java.io.OutputStream, org.apache.hadoop.crypto.CryptoCodec, byte[], byte[], long, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_2
       4: invokevirtual #29                 // Method org/apache/hadoop/crypto/CryptoCodec.getConf:()Lorg/apache/hadoop/conf/Configuration;
       7: invokestatic  #30                 // Method org/apache/hadoop/crypto/CryptoStreamUtils.getBufferSize:(Lorg/apache/hadoop/conf/Configuration;)I
      10: aload_3
      11: aload         4
      13: lload         5
      15: iload         7
      17: invokespecial #2                  // Method "<init>":(Ljava/io/OutputStream;Lorg/apache/hadoop/crypto/CryptoCodec;I[B[BJZ)V
      20: return

  public java.io.OutputStream getWrappedStream();
    Code:
       0: aload_0
       1: getfield      #31                 // Field out:Ljava/io/OutputStream;
       4: areturn

  public synchronized void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #32                 // Method checkStream:()V
       4: aload_1
       5: ifnonnull     16
       8: new           #33                 // class java/lang/NullPointerException
      11: dup
      12: invokespecial #34                 // Method java/lang/NullPointerException."<init>":()V
      15: athrow
      16: iload_2
      17: iflt          38
      20: iload_3
      21: iflt          38
      24: iload_2
      25: aload_1
      26: arraylength
      27: if_icmpgt     38
      30: iload_3
      31: aload_1
      32: arraylength
      33: iload_2
      34: isub
      35: if_icmple     46
      38: new           #35                 // class java/lang/IndexOutOfBoundsException
      41: dup
      42: invokespecial #36                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      45: athrow
      46: iload_3
      47: ifle          110
      50: aload_0
      51: getfield      #18                 // Field inBuffer:Ljava/nio/ByteBuffer;
      54: invokevirtual #37                 // Method java/nio/ByteBuffer.remaining:()I
      57: istore        4
      59: iload_3
      60: iload         4
      62: if_icmpge     81
      65: aload_0
      66: getfield      #18                 // Field inBuffer:Ljava/nio/ByteBuffer;
      69: aload_1
      70: iload_2
      71: iload_3
      72: invokevirtual #38                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      75: pop
      76: iconst_0
      77: istore_3
      78: goto          107
      81: aload_0
      82: getfield      #18                 // Field inBuffer:Ljava/nio/ByteBuffer;
      85: aload_1
      86: iload_2
      87: iload         4
      89: invokevirtual #38                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      92: pop
      93: iload_2
      94: iload         4
      96: iadd
      97: istore_2
      98: iload_3
      99: iload         4
     101: isub
     102: istore_3
     103: aload_0
     104: invokespecial #39                 // Method encrypt:()V
     107: goto          46
     110: return

  private void encrypt() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field inBuffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #40                 // Method java/nio/ByteBuffer.position:()I
       7: aload_0
       8: getfield      #41                 // Field padding:B
      11: if_icmplt     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: invokestatic  #42                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      22: aload_0
      23: getfield      #18                 // Field inBuffer:Ljava/nio/ByteBuffer;
      26: invokevirtual #40                 // Method java/nio/ByteBuffer.position:()I
      29: aload_0
      30: getfield      #41                 // Field padding:B
      33: if_icmpne     37
      36: return
      37: aload_0
      38: getfield      #18                 // Field inBuffer:Ljava/nio/ByteBuffer;
      41: invokevirtual #43                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      44: pop
      45: aload_0
      46: getfield      #19                 // Field outBuffer:Ljava/nio/ByteBuffer;
      49: invokevirtual #44                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      52: pop
      53: aload_0
      54: getfield      #22                 // Field encryptor:Lorg/apache/hadoop/crypto/Encryptor;
      57: aload_0
      58: getfield      #18                 // Field inBuffer:Ljava/nio/ByteBuffer;
      61: aload_0
      62: getfield      #19                 // Field outBuffer:Ljava/nio/ByteBuffer;
      65: invokeinterface #45,  3           // InterfaceMethod org/apache/hadoop/crypto/Encryptor.encrypt:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
      70: aload_0
      71: getfield      #18                 // Field inBuffer:Ljava/nio/ByteBuffer;
      74: invokevirtual #44                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      77: pop
      78: aload_0
      79: getfield      #19                 // Field outBuffer:Ljava/nio/ByteBuffer;
      82: invokevirtual #43                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      85: pop
      86: aload_0
      87: getfield      #41                 // Field padding:B
      90: ifle          110
      93: aload_0
      94: getfield      #19                 // Field outBuffer:Ljava/nio/ByteBuffer;
      97: aload_0
      98: getfield      #41                 // Field padding:B
     101: invokevirtual #46                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     104: pop
     105: aload_0
     106: iconst_0
     107: putfield      #41                 // Field padding:B
     110: aload_0
     111: getfield      #19                 // Field outBuffer:Ljava/nio/ByteBuffer;
     114: invokevirtual #37                 // Method java/nio/ByteBuffer.remaining:()I
     117: istore_1
     118: aload_0
     119: invokespecial #47                 // Method getTmpBuf:()[B
     122: astore_2
     123: aload_0
     124: getfield      #19                 // Field outBuffer:Ljava/nio/ByteBuffer;
     127: aload_2
     128: iconst_0
     129: iload_1
     130: invokevirtual #48                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
     133: pop
     134: aload_0
     135: getfield      #31                 // Field out:Ljava/io/OutputStream;
     138: aload_2
     139: iconst_0
     140: iload_1
     141: invokevirtual #49                 // Method java/io/OutputStream.write:([BII)V
     144: aload_0
     145: dup
     146: getfield      #5                  // Field streamOffset:J
     149: iload_1
     150: i2l
     151: ladd
     152: putfield      #5                  // Field streamOffset:J
     155: aload_0
     156: getfield      #22                 // Field encryptor:Lorg/apache/hadoop/crypto/Encryptor;
     159: invokeinterface #50,  1           // InterfaceMethod org/apache/hadoop/crypto/Encryptor.isContextReset:()Z
     164: ifeq          171
     167: aload_0
     168: invokespecial #26                 // Method updateEncryptor:()V
     171: return

  private void updateEncryptor() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field streamOffset:J
       4: aload_0
       5: getfield      #9                  // Field codec:Lorg/apache/hadoop/crypto/CryptoCodec;
       8: invokevirtual #51                 // Method org/apache/hadoop/crypto/CryptoCodec.getCipherSuite:()Lorg/apache/hadoop/crypto/CipherSuite;
      11: invokevirtual #52                 // Method org/apache/hadoop/crypto/CipherSuite.getAlgorithmBlockSize:()I
      14: i2l
      15: ldiv
      16: lstore_1
      17: aload_0
      18: aload_0
      19: getfield      #5                  // Field streamOffset:J
      22: aload_0
      23: getfield      #9                  // Field codec:Lorg/apache/hadoop/crypto/CryptoCodec;
      26: invokevirtual #51                 // Method org/apache/hadoop/crypto/CryptoCodec.getCipherSuite:()Lorg/apache/hadoop/crypto/CipherSuite;
      29: invokevirtual #52                 // Method org/apache/hadoop/crypto/CipherSuite.getAlgorithmBlockSize:()I
      32: i2l
      33: lrem
      34: l2i
      35: i2b
      36: putfield      #41                 // Field padding:B
      39: aload_0
      40: getfield      #18                 // Field inBuffer:Ljava/nio/ByteBuffer;
      43: aload_0
      44: getfield      #41                 // Field padding:B
      47: invokevirtual #46                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      50: pop
      51: aload_0
      52: getfield      #9                  // Field codec:Lorg/apache/hadoop/crypto/CryptoCodec;
      55: aload_0
      56: getfield      #14                 // Field initIV:[B
      59: lload_1
      60: aload_0
      61: getfield      #16                 // Field iv:[B
      64: invokevirtual #53                 // Method org/apache/hadoop/crypto/CryptoCodec.calculateIV:([BJ[B)V
      67: aload_0
      68: getfield      #22                 // Field encryptor:Lorg/apache/hadoop/crypto/Encryptor;
      71: aload_0
      72: getfield      #12                 // Field key:[B
      75: aload_0
      76: getfield      #16                 // Field iv:[B
      79: invokeinterface #54,  3           // InterfaceMethod org/apache/hadoop/crypto/Encryptor.init:([B[B)V
      84: return

  private byte[] getTmpBuf();
    Code:
       0: aload_0
       1: getfield      #55                 // Field tmpBuf:[B
       4: ifnonnull     17
       7: aload_0
       8: aload_0
       9: getfield      #8                  // Field bufferSize:I
      12: newarray       byte
      14: putfield      #55                 // Field tmpBuf:[B
      17: aload_0
      18: getfield      #55                 // Field tmpBuf:[B
      21: areturn

  public synchronized void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #56                 // Field closed:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: invokevirtual #57                 // Method flush:()V
      12: aload_0
      13: getfield      #20                 // Field closeOutputStream:Z
      16: ifeq          30
      19: aload_0
      20: invokespecial #58                 // Method java/io/FilterOutputStream.close:()V
      23: aload_0
      24: getfield      #9                  // Field codec:Lorg/apache/hadoop/crypto/CryptoCodec;
      27: invokevirtual #59                 // Method org/apache/hadoop/crypto/CryptoCodec.close:()V
      30: aload_0
      31: invokespecial #60                 // Method freeBuffers:()V
      34: aload_0
      35: iconst_1
      36: putfield      #56                 // Field closed:Z
      39: goto          50
      42: astore_1
      43: aload_0
      44: iconst_1
      45: putfield      #56                 // Field closed:Z
      48: aload_1
      49: athrow
      50: return
    Exception table:
       from    to  target type
           8    34    42   any

  public synchronized void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #56                 // Field closed:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: invokespecial #39                 // Method encrypt:()V
      12: aload_0
      13: invokespecial #61                 // Method java/io/FilterOutputStream.flush:()V
      16: return

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field oneByteBuf:[B
       4: iconst_0
       5: iload_1
       6: sipush        255
       9: iand
      10: i2b
      11: bastore
      12: aload_0
      13: aload_0
      14: getfield      #4                  // Field oneByteBuf:[B
      17: iconst_0
      18: aload_0
      19: getfield      #4                  // Field oneByteBuf:[B
      22: arraylength
      23: invokevirtual #62                 // Method write:([BII)V
      26: return

  private void checkStream() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #56                 // Field closed:Z
       4: ifeq          17
       7: new           #24                 // class java/io/IOException
      10: dup
      11: ldc           #63                 // String Stream closed
      13: invokespecial #64                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  public void setDropBehind(java.lang.Boolean) throws java.io.IOException, java.lang.UnsupportedOperationException;
    Code:
       0: aload_0
       1: getfield      #31                 // Field out:Ljava/io/OutputStream;
       4: checkcast     #65                 // class org/apache/hadoop/fs/CanSetDropBehind
       7: aload_1
       8: invokeinterface #66,  2           // InterfaceMethod org/apache/hadoop/fs/CanSetDropBehind.setDropBehind:(Ljava/lang/Boolean;)V
      13: goto          27
      16: astore_2
      17: new           #68                 // class java/lang/UnsupportedOperationException
      20: dup
      21: ldc           #69                 // String This stream does not support setting the drop-behind caching.
      23: invokespecial #70                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: return
    Exception table:
       from    to  target type
           0    13    16   Class java/lang/ClassCastException

  public void hflush() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method flush:()V
       4: aload_0
       5: getfield      #31                 // Field out:Ljava/io/OutputStream;
       8: instanceof    #71                 // class org/apache/hadoop/fs/Syncable
      11: ifeq          26
      14: aload_0
      15: getfield      #31                 // Field out:Ljava/io/OutputStream;
      18: checkcast     #71                 // class org/apache/hadoop/fs/Syncable
      21: invokeinterface #72,  1           // InterfaceMethod org/apache/hadoop/fs/Syncable.hflush:()V
      26: return

  public void hsync() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method flush:()V
       4: aload_0
       5: getfield      #31                 // Field out:Ljava/io/OutputStream;
       8: instanceof    #71                 // class org/apache/hadoop/fs/Syncable
      11: ifeq          26
      14: aload_0
      15: getfield      #31                 // Field out:Ljava/io/OutputStream;
      18: checkcast     #71                 // class org/apache/hadoop/fs/Syncable
      21: invokeinterface #73,  1           // InterfaceMethod org/apache/hadoop/fs/Syncable.hsync:()V
      26: return

  private void freeBuffers();
    Code:
       0: aload_0
       1: getfield      #18                 // Field inBuffer:Ljava/nio/ByteBuffer;
       4: invokestatic  #74                 // Method org/apache/hadoop/crypto/CryptoStreamUtils.freeDB:(Ljava/nio/ByteBuffer;)V
       7: aload_0
       8: getfield      #19                 // Field outBuffer:Ljava/nio/ByteBuffer;
      11: invokestatic  #74                 // Method org/apache/hadoop/crypto/CryptoStreamUtils.freeDB:(Ljava/nio/ByteBuffer;)V
      14: return

  public boolean hasCapability(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #31                 // Field out:Ljava/io/OutputStream;
       4: instanceof    #75                 // class org/apache/hadoop/fs/StreamCapabilities
       7: ifeq          24
      10: aload_0
      11: getfield      #31                 // Field out:Ljava/io/OutputStream;
      14: checkcast     #75                 // class org/apache/hadoop/fs/StreamCapabilities
      17: aload_1
      18: invokeinterface #76,  2           // InterfaceMethod org/apache/hadoop/fs/StreamCapabilities.hasCapability:(Ljava/lang/String;)Z
      23: ireturn
      24: iconst_0
      25: ireturn
}
