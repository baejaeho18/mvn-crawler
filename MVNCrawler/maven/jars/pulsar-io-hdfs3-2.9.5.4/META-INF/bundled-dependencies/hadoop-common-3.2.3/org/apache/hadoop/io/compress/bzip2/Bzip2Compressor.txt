Compiled from "Bzip2Compressor.java"
public class org.apache.hadoop.io.compress.bzip2.Bzip2Compressor implements org.apache.hadoop.io.compress.Compressor {
  private static final int DEFAULT_DIRECT_BUFFER_SIZE;

  static final int DEFAULT_BLOCK_SIZE;

  static final int DEFAULT_WORK_FACTOR;

  private static final org.slf4j.Logger LOG;

  private long stream;

  private int blockSize;

  private int workFactor;

  private int directBufferSize;

  private byte[] userBuf;

  private int userBufOff;

  private int userBufLen;

  private java.nio.Buffer uncompressedDirectBuf;

  private int uncompressedDirectBufOff;

  private int uncompressedDirectBufLen;

  private boolean keepUncompressedBuf;

  private java.nio.Buffer compressedDirectBuf;

  private boolean finish;

  private boolean finished;

  public org.apache.hadoop.io.compress.bzip2.Bzip2Compressor();
    Code:
       0: aload_0
       1: bipush        9
       3: bipush        30
       5: ldc           #2                  // int 65536
       7: invokespecial #3                  // Method "<init>":(III)V
      10: return

  public org.apache.hadoop.io.compress.bzip2.Bzip2Compressor(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #4                  // Method org/apache/hadoop/io/compress/bzip2/Bzip2Factory.getBlockSize:(Lorg/apache/hadoop/conf/Configuration;)I
       5: aload_1
       6: invokestatic  #5                  // Method org/apache/hadoop/io/compress/bzip2/Bzip2Factory.getWorkFactor:(Lorg/apache/hadoop/conf/Configuration;)I
       9: ldc           #2                  // int 65536
      11: invokespecial #3                  // Method "<init>":(III)V
      14: return

  public org.apache.hadoop.io.compress.bzip2.Bzip2Compressor(int, int, int);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #7                  // Field userBuf:[B
       9: aload_0
      10: iconst_0
      11: putfield      #8                  // Field userBufOff:I
      14: aload_0
      15: iconst_0
      16: putfield      #9                  // Field userBufLen:I
      19: aload_0
      20: aconst_null
      21: putfield      #10                 // Field uncompressedDirectBuf:Ljava/nio/Buffer;
      24: aload_0
      25: iconst_0
      26: putfield      #11                 // Field uncompressedDirectBufOff:I
      29: aload_0
      30: iconst_0
      31: putfield      #12                 // Field uncompressedDirectBufLen:I
      34: aload_0
      35: iconst_0
      36: putfield      #13                 // Field keepUncompressedBuf:Z
      39: aload_0
      40: aconst_null
      41: putfield      #14                 // Field compressedDirectBuf:Ljava/nio/Buffer;
      44: aload_0
      45: iload_1
      46: putfield      #15                 // Field blockSize:I
      49: aload_0
      50: iload_2
      51: putfield      #16                 // Field workFactor:I
      54: aload_0
      55: iload_3
      56: putfield      #17                 // Field directBufferSize:I
      59: aload_0
      60: iload_1
      61: iload_2
      62: invokestatic  #18                 // Method init:(II)J
      65: putfield      #19                 // Field stream:J
      68: aload_0
      69: iload_3
      70: invokestatic  #20                 // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
      73: putfield      #10                 // Field uncompressedDirectBuf:Ljava/nio/Buffer;
      76: aload_0
      77: iload_3
      78: invokestatic  #20                 // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
      81: putfield      #14                 // Field compressedDirectBuf:Ljava/nio/Buffer;
      84: aload_0
      85: getfield      #14                 // Field compressedDirectBuf:Ljava/nio/Buffer;
      88: iload_3
      89: invokevirtual #21                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      92: pop
      93: return

  public synchronized void reinit(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method reset:()V
       4: aload_0
       5: getfield      #19                 // Field stream:J
       8: invokestatic  #23                 // Method end:(J)V
      11: aload_1
      12: ifnonnull     31
      15: aload_0
      16: aload_0
      17: getfield      #15                 // Field blockSize:I
      20: aload_0
      21: getfield      #16                 // Field workFactor:I
      24: invokestatic  #18                 // Method init:(II)J
      27: putfield      #19                 // Field stream:J
      30: return
      31: aload_0
      32: aload_1
      33: invokestatic  #4                  // Method org/apache/hadoop/io/compress/bzip2/Bzip2Factory.getBlockSize:(Lorg/apache/hadoop/conf/Configuration;)I
      36: putfield      #15                 // Field blockSize:I
      39: aload_0
      40: aload_1
      41: invokestatic  #5                  // Method org/apache/hadoop/io/compress/bzip2/Bzip2Factory.getWorkFactor:(Lorg/apache/hadoop/conf/Configuration;)I
      44: putfield      #16                 // Field workFactor:I
      47: aload_0
      48: aload_0
      49: getfield      #15                 // Field blockSize:I
      52: aload_0
      53: getfield      #16                 // Field workFactor:I
      56: invokestatic  #18                 // Method init:(II)J
      59: putfield      #19                 // Field stream:J
      62: getstatic     #24                 // Field LOG:Lorg/slf4j/Logger;
      65: invokeinterface #25,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      70: ifeq          83
      73: getstatic     #24                 // Field LOG:Lorg/slf4j/Logger;
      76: ldc           #26                 // String Reinit compressor with new compression configuration
      78: invokeinterface #27,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      83: return

  public synchronized void setInput(byte[], int, int);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #28                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #29                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: iload_2
      13: iflt          28
      16: iload_3
      17: iflt          28
      20: iload_2
      21: aload_1
      22: arraylength
      23: iload_3
      24: isub
      25: if_icmple     36
      28: new           #30                 // class java/lang/ArrayIndexOutOfBoundsException
      31: dup
      32: invokespecial #31                 // Method java/lang/ArrayIndexOutOfBoundsException."<init>":()V
      35: athrow
      36: aload_0
      37: aload_1
      38: putfield      #7                  // Field userBuf:[B
      41: aload_0
      42: iload_2
      43: putfield      #8                  // Field userBufOff:I
      46: aload_0
      47: iload_3
      48: putfield      #9                  // Field userBufLen:I
      51: aload_0
      52: iconst_0
      53: putfield      #11                 // Field uncompressedDirectBufOff:I
      56: aload_0
      57: invokevirtual #32                 // Method setInputFromSavedData:()V
      60: aload_0
      61: getfield      #14                 // Field compressedDirectBuf:Ljava/nio/Buffer;
      64: aload_0
      65: getfield      #17                 // Field directBufferSize:I
      68: invokevirtual #33                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      71: pop
      72: aload_0
      73: getfield      #14                 // Field compressedDirectBuf:Ljava/nio/Buffer;
      76: aload_0
      77: getfield      #17                 // Field directBufferSize:I
      80: invokevirtual #21                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      83: pop
      84: return

  synchronized void setInputFromSavedData();
    Code:
       0: aload_0
       1: getfield      #9                  // Field userBufLen:I
       4: aload_0
       5: getfield      #10                 // Field uncompressedDirectBuf:Ljava/nio/Buffer;
       8: invokevirtual #34                 // Method java/nio/Buffer.remaining:()I
      11: invokestatic  #35                 // Method java/lang/Math.min:(II)I
      14: istore_1
      15: aload_0
      16: getfield      #10                 // Field uncompressedDirectBuf:Ljava/nio/Buffer;
      19: checkcast     #36                 // class java/nio/ByteBuffer
      22: aload_0
      23: getfield      #7                  // Field userBuf:[B
      26: aload_0
      27: getfield      #8                  // Field userBufOff:I
      30: iload_1
      31: invokevirtual #37                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      34: pop
      35: aload_0
      36: dup
      37: getfield      #9                  // Field userBufLen:I
      40: iload_1
      41: isub
      42: putfield      #9                  // Field userBufLen:I
      45: aload_0
      46: dup
      47: getfield      #8                  // Field userBufOff:I
      50: iload_1
      51: iadd
      52: putfield      #8                  // Field userBufOff:I
      55: aload_0
      56: aload_0
      57: getfield      #10                 // Field uncompressedDirectBuf:Ljava/nio/Buffer;
      60: invokevirtual #38                 // Method java/nio/Buffer.position:()I
      63: putfield      #12                 // Field uncompressedDirectBufLen:I
      66: return

  public synchronized void setDictionary(byte[], int, int);
    Code:
       0: new           #39                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #40                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public synchronized boolean needsInput();
    Code:
       0: aload_0
       1: getfield      #14                 // Field compressedDirectBuf:Ljava/nio/Buffer;
       4: invokevirtual #34                 // Method java/nio/Buffer.remaining:()I
       7: ifle          12
      10: iconst_0
      11: ireturn
      12: aload_0
      13: getfield      #13                 // Field keepUncompressedBuf:Z
      16: ifeq          28
      19: aload_0
      20: getfield      #12                 // Field uncompressedDirectBufLen:I
      23: ifle          28
      26: iconst_0
      27: ireturn
      28: aload_0
      29: getfield      #10                 // Field uncompressedDirectBuf:Ljava/nio/Buffer;
      32: invokevirtual #34                 // Method java/nio/Buffer.remaining:()I
      35: ifle          67
      38: aload_0
      39: getfield      #9                  // Field userBufLen:I
      42: ifgt          47
      45: iconst_1
      46: ireturn
      47: aload_0
      48: invokevirtual #32                 // Method setInputFromSavedData:()V
      51: aload_0
      52: getfield      #10                 // Field uncompressedDirectBuf:Ljava/nio/Buffer;
      55: invokevirtual #34                 // Method java/nio/Buffer.remaining:()I
      58: ifle          65
      61: iconst_1
      62: goto          66
      65: iconst_0
      66: ireturn
      67: iconst_0
      68: ireturn

  public synchronized void finish();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #41                 // Field finish:Z
       5: return

  public synchronized boolean finished();
    Code:
       0: aload_0
       1: getfield      #42                 // Field finished:Z
       4: ifeq          21
       7: aload_0
       8: getfield      #14                 // Field compressedDirectBuf:Ljava/nio/Buffer;
      11: invokevirtual #34                 // Method java/nio/Buffer.remaining:()I
      14: ifne          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public synchronized int compress(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #28                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #29                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: iload_2
      13: iflt          28
      16: iload_3
      17: iflt          28
      20: iload_2
      21: aload_1
      22: arraylength
      23: iload_3
      24: isub
      25: if_icmple     36
      28: new           #30                 // class java/lang/ArrayIndexOutOfBoundsException
      31: dup
      32: invokespecial #31                 // Method java/lang/ArrayIndexOutOfBoundsException."<init>":()V
      35: athrow
      36: aload_0
      37: getfield      #14                 // Field compressedDirectBuf:Ljava/nio/Buffer;
      40: invokevirtual #34                 // Method java/nio/Buffer.remaining:()I
      43: istore        4
      45: iload         4
      47: ifle          76
      50: iload         4
      52: iload_3
      53: invokestatic  #35                 // Method java/lang/Math.min:(II)I
      56: istore        4
      58: aload_0
      59: getfield      #14                 // Field compressedDirectBuf:Ljava/nio/Buffer;
      62: checkcast     #36                 // class java/nio/ByteBuffer
      65: aload_1
      66: iload_2
      67: iload         4
      69: invokevirtual #43                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
      72: pop
      73: iload         4
      75: ireturn
      76: aload_0
      77: getfield      #14                 // Field compressedDirectBuf:Ljava/nio/Buffer;
      80: invokevirtual #44                 // Method java/nio/Buffer.rewind:()Ljava/nio/Buffer;
      83: pop
      84: aload_0
      85: getfield      #14                 // Field compressedDirectBuf:Ljava/nio/Buffer;
      88: aload_0
      89: getfield      #17                 // Field directBufferSize:I
      92: invokevirtual #33                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      95: pop
      96: aload_0
      97: invokespecial #45                 // Method deflateBytesDirect:()I
     100: istore        4
     102: aload_0
     103: getfield      #14                 // Field compressedDirectBuf:Ljava/nio/Buffer;
     106: iload         4
     108: invokevirtual #33                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
     111: pop
     112: aload_0
     113: getfield      #12                 // Field uncompressedDirectBufLen:I
     116: ifgt          145
     119: aload_0
     120: iconst_0
     121: putfield      #13                 // Field keepUncompressedBuf:Z
     124: aload_0
     125: getfield      #10                 // Field uncompressedDirectBuf:Ljava/nio/Buffer;
     128: invokevirtual #46                 // Method java/nio/Buffer.clear:()Ljava/nio/Buffer;
     131: pop
     132: aload_0
     133: iconst_0
     134: putfield      #11                 // Field uncompressedDirectBufOff:I
     137: aload_0
     138: iconst_0
     139: putfield      #12                 // Field uncompressedDirectBufLen:I
     142: goto          150
     145: aload_0
     146: iconst_1
     147: putfield      #13                 // Field keepUncompressedBuf:Z
     150: iload         4
     152: iload_3
     153: invokestatic  #35                 // Method java/lang/Math.min:(II)I
     156: istore        4
     158: aload_0
     159: getfield      #14                 // Field compressedDirectBuf:Ljava/nio/Buffer;
     162: checkcast     #36                 // class java/nio/ByteBuffer
     165: aload_1
     166: iload_2
     167: iload         4
     169: invokevirtual #43                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
     172: pop
     173: iload         4
     175: ireturn

  public synchronized long getBytesWritten();
    Code:
       0: aload_0
       1: invokespecial #47                 // Method checkStream:()V
       4: aload_0
       5: getfield      #19                 // Field stream:J
       8: invokestatic  #48                 // Method getBytesWritten:(J)J
      11: lreturn

  public synchronized long getBytesRead();
    Code:
       0: aload_0
       1: invokespecial #47                 // Method checkStream:()V
       4: aload_0
       5: getfield      #19                 // Field stream:J
       8: invokestatic  #49                 // Method getBytesRead:(J)J
      11: lreturn

  public synchronized void reset();
    Code:
       0: aload_0
       1: invokespecial #47                 // Method checkStream:()V
       4: aload_0
       5: getfield      #19                 // Field stream:J
       8: invokestatic  #23                 // Method end:(J)V
      11: aload_0
      12: aload_0
      13: getfield      #15                 // Field blockSize:I
      16: aload_0
      17: getfield      #16                 // Field workFactor:I
      20: invokestatic  #18                 // Method init:(II)J
      23: putfield      #19                 // Field stream:J
      26: aload_0
      27: iconst_0
      28: putfield      #41                 // Field finish:Z
      31: aload_0
      32: iconst_0
      33: putfield      #42                 // Field finished:Z
      36: aload_0
      37: getfield      #10                 // Field uncompressedDirectBuf:Ljava/nio/Buffer;
      40: invokevirtual #44                 // Method java/nio/Buffer.rewind:()Ljava/nio/Buffer;
      43: pop
      44: aload_0
      45: aload_0
      46: iconst_0
      47: dup_x1
      48: putfield      #12                 // Field uncompressedDirectBufLen:I
      51: putfield      #11                 // Field uncompressedDirectBufOff:I
      54: aload_0
      55: iconst_0
      56: putfield      #13                 // Field keepUncompressedBuf:Z
      59: aload_0
      60: getfield      #14                 // Field compressedDirectBuf:Ljava/nio/Buffer;
      63: aload_0
      64: getfield      #17                 // Field directBufferSize:I
      67: invokevirtual #33                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      70: pop
      71: aload_0
      72: getfield      #14                 // Field compressedDirectBuf:Ljava/nio/Buffer;
      75: aload_0
      76: getfield      #17                 // Field directBufferSize:I
      79: invokevirtual #21                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      82: pop
      83: aload_0
      84: aload_0
      85: iconst_0
      86: dup_x1
      87: putfield      #9                  // Field userBufLen:I
      90: putfield      #8                  // Field userBufOff:I
      93: return

  public synchronized void end();
    Code:
       0: aload_0
       1: getfield      #19                 // Field stream:J
       4: lconst_0
       5: lcmp
       6: ifeq          21
       9: aload_0
      10: getfield      #19                 // Field stream:J
      13: invokestatic  #23                 // Method end:(J)V
      16: aload_0
      17: lconst_0
      18: putfield      #19                 // Field stream:J
      21: return

  static void initSymbols(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #50                 // Method initIDs:(Ljava/lang/String;)V
       4: return

  private void checkStream();
    Code:
       0: aload_0
       1: getfield      #19                 // Field stream:J
       4: lconst_0
       5: lcmp
       6: ifne          17
       9: new           #28                 // class java/lang/NullPointerException
      12: dup
      13: invokespecial #29                 // Method java/lang/NullPointerException."<init>":()V
      16: athrow
      17: return

  private static native void initIDs(java.lang.String);

  private static native long init(int, int);

  private native int deflateBytesDirect();

  private static native long getBytesRead(long);

  private static native long getBytesWritten(long);

  private static native void end(long);

  public static native java.lang.String getLibraryName();

  static {};
    Code:
       0: ldc           #1                  // class org/apache/hadoop/io/compress/bzip2/Bzip2Compressor
       2: invokestatic  #51                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #24                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
