Compiled from "Base64InputStream.java"
public class org.apache.kerby.util.Base64InputStream extends java.io.FilterInputStream {
  private final boolean doEncode;

  private final org.apache.kerby.util.Base64 base64;

  private final byte[] singleByte;

  public org.apache.kerby.util.Base64InputStream(java.io.InputStream);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #1                  // Method "<init>":(Ljava/io/InputStream;Z)V
       6: return

  public org.apache.kerby.util.Base64InputStream(java.io.InputStream, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method java/io/FilterInputStream."<init>":(Ljava/io/InputStream;)V
       5: aload_0
       6: iconst_1
       7: newarray       byte
       9: putfield      #3                  // Field singleByte:[B
      12: aload_0
      13: iload_2
      14: putfield      #4                  // Field doEncode:Z
      17: aload_0
      18: new           #5                  // class org/apache/kerby/util/Base64
      21: dup
      22: invokespecial #6                  // Method org/apache/kerby/util/Base64."<init>":()V
      25: putfield      #7                  // Field base64:Lorg/apache/kerby/util/Base64;
      28: return

  public org.apache.kerby.util.Base64InputStream(java.io.InputStream, boolean, int, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method java/io/FilterInputStream."<init>":(Ljava/io/InputStream;)V
       5: aload_0
       6: iconst_1
       7: newarray       byte
       9: putfield      #3                  // Field singleByte:[B
      12: aload_0
      13: iload_2
      14: putfield      #4                  // Field doEncode:Z
      17: aload_0
      18: new           #5                  // class org/apache/kerby/util/Base64
      21: dup
      22: iload_3
      23: aload         4
      25: invokespecial #8                  // Method org/apache/kerby/util/Base64."<init>":(I[B)V
      28: putfield      #7                  // Field base64:Lorg/apache/kerby/util/Base64;
      31: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field singleByte:[B
       5: iconst_0
       6: iconst_1
       7: invokevirtual #9                  // Method read:([BII)I
      10: istore_1
      11: iload_1
      12: ifne          29
      15: aload_0
      16: aload_0
      17: getfield      #3                  // Field singleByte:[B
      20: iconst_0
      21: iconst_1
      22: invokevirtual #9                  // Method read:([BII)I
      25: istore_1
      26: goto          11
      29: iload_1
      30: ifle          62
      33: aload_0
      34: getfield      #3                  // Field singleByte:[B
      37: iconst_0
      38: baload
      39: ifge          55
      42: sipush        256
      45: aload_0
      46: getfield      #3                  // Field singleByte:[B
      49: iconst_0
      50: baload
      51: iadd
      52: goto          61
      55: aload_0
      56: getfield      #3                  // Field singleByte:[B
      59: iconst_0
      60: baload
      61: ireturn
      62: iconst_m1
      63: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #10                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #11                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: iload_2
      13: iflt          20
      16: iload_3
      17: ifge          28
      20: new           #12                 // class java/lang/IndexOutOfBoundsException
      23: dup
      24: invokespecial #13                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      27: athrow
      28: iload_2
      29: aload_1
      30: arraylength
      31: if_icmpgt     42
      34: iload_2
      35: iload_3
      36: iadd
      37: aload_1
      38: arraylength
      39: if_icmple     50
      42: new           #12                 // class java/lang/IndexOutOfBoundsException
      45: dup
      46: invokespecial #13                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      49: athrow
      50: iload_3
      51: ifne          56
      54: iconst_0
      55: ireturn
      56: aload_0
      57: getfield      #7                  // Field base64:Lorg/apache/kerby/util/Base64;
      60: invokevirtual #14                 // Method org/apache/kerby/util/Base64.hasData:()Z
      63: ifne          152
      66: aload_0
      67: getfield      #4                  // Field doEncode:Z
      70: ifeq          79
      73: sipush        4096
      76: goto          82
      79: sipush        8192
      82: newarray       byte
      84: astore        4
      86: aload_0
      87: getfield      #15                 // Field in:Ljava/io/InputStream;
      90: aload         4
      92: invokevirtual #16                 // Method java/io/InputStream.read:([B)I
      95: istore        5
      97: iload         5
      99: ifle          118
     102: aload_1
     103: arraylength
     104: iload_3
     105: if_icmpne     118
     108: aload_0
     109: getfield      #7                  // Field base64:Lorg/apache/kerby/util/Base64;
     112: aload_1
     113: iload_2
     114: iload_3
     115: invokevirtual #17                 // Method org/apache/kerby/util/Base64.setInitialBuffer:([BII)V
     118: aload_0
     119: getfield      #4                  // Field doEncode:Z
     122: ifeq          140
     125: aload_0
     126: getfield      #7                  // Field base64:Lorg/apache/kerby/util/Base64;
     129: aload         4
     131: iconst_0
     132: iload         5
     134: invokevirtual #18                 // Method org/apache/kerby/util/Base64.encode:([BII)V
     137: goto          152
     140: aload_0
     141: getfield      #7                  // Field base64:Lorg/apache/kerby/util/Base64;
     144: aload         4
     146: iconst_0
     147: iload         5
     149: invokevirtual #19                 // Method org/apache/kerby/util/Base64.decode:([BII)V
     152: aload_0
     153: getfield      #7                  // Field base64:Lorg/apache/kerby/util/Base64;
     156: aload_1
     157: iload_2
     158: iload_3
     159: invokevirtual #20                 // Method org/apache/kerby/util/Base64.readResults:([BII)I
     162: ireturn

  public boolean markSupported();
    Code:
       0: iconst_0
       1: ireturn
}
