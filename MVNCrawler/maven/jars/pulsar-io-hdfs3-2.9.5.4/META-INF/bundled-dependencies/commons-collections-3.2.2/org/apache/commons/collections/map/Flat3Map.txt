Compiled from "Flat3Map.java"
public class org.apache.commons.collections.map.Flat3Map implements org.apache.commons.collections.IterableMap,java.io.Serializable,java.lang.Cloneable {
  private static final long serialVersionUID;

  private transient int size;

  private transient int hash1;

  private transient int hash2;

  private transient int hash3;

  private transient java.lang.Object key1;

  private transient java.lang.Object key2;

  private transient java.lang.Object key3;

  private transient java.lang.Object value1;

  private transient java.lang.Object value2;

  private transient java.lang.Object value3;

  private transient org.apache.commons.collections.map.AbstractHashedMap delegateMap;

  public org.apache.commons.collections.map.Flat3Map();
    Code:
       0: aload_0
       1: invokespecial #9                  // Method java/lang/Object."<init>":()V
       4: return

  public org.apache.commons.collections.map.Flat3Map(java.util.Map);
    Code:
       0: aload_0
       1: invokespecial #9                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #10                 // Method putAll:(Ljava/util/Map;)V
       9: return

  public java.lang.Object get(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #1                  // Field delegateMap:Lorg/apache/commons/collections/map/AbstractHashedMap;
       4: ifnull        16
       7: aload_0
       8: getfield      #1                  // Field delegateMap:Lorg/apache/commons/collections/map/AbstractHashedMap;
      11: aload_1
      12: invokevirtual #11                 // Method org/apache/commons/collections/map/AbstractHashedMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: areturn
      16: aload_1
      17: ifnonnull     91
      20: aload_0
      21: getfield      #8                  // Field size:I
      24: tableswitch   { // 1 to 3
                     1: 76
                     2: 64
                     3: 52
               default: 88
          }
      52: aload_0
      53: getfield      #7                  // Field key3:Ljava/lang/Object;
      56: ifnonnull     64
      59: aload_0
      60: getfield      #4                  // Field value3:Ljava/lang/Object;
      63: areturn
      64: aload_0
      65: getfield      #6                  // Field key2:Ljava/lang/Object;
      68: ifnonnull     76
      71: aload_0
      72: getfield      #3                  // Field value2:Ljava/lang/Object;
      75: areturn
      76: aload_0
      77: getfield      #5                  // Field key1:Ljava/lang/Object;
      80: ifnonnull     88
      83: aload_0
      84: getfield      #2                  // Field value1:Ljava/lang/Object;
      87: areturn
      88: goto          204
      91: aload_0
      92: getfield      #8                  // Field size:I
      95: ifle          204
      98: aload_1
      99: invokevirtual #12                 // Method java/lang/Object.hashCode:()I
     102: istore_2
     103: aload_0
     104: getfield      #8                  // Field size:I
     107: tableswitch   { // 1 to 3
                     1: 180
                     2: 156
                     3: 132
               default: 204
          }
     132: aload_0
     133: getfield      #13                 // Field hash3:I
     136: iload_2
     137: if_icmpne     156
     140: aload_1
     141: aload_0
     142: getfield      #7                  // Field key3:Ljava/lang/Object;
     145: invokevirtual #14                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     148: ifeq          156
     151: aload_0
     152: getfield      #4                  // Field value3:Ljava/lang/Object;
     155: areturn
     156: aload_0
     157: getfield      #15                 // Field hash2:I
     160: iload_2
     161: if_icmpne     180
     164: aload_1
     165: aload_0
     166: getfield      #6                  // Field key2:Ljava/lang/Object;
     169: invokevirtual #14                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     172: ifeq          180
     175: aload_0
     176: getfield      #3                  // Field value2:Ljava/lang/Object;
     179: areturn
     180: aload_0
     181: getfield      #16                 // Field hash1:I
     184: iload_2
     185: if_icmpne     204
     188: aload_1
     189: aload_0
     190: getfield      #5                  // Field key1:Ljava/lang/Object;
     193: invokevirtual #14                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     196: ifeq          204
     199: aload_0
     200: getfield      #2                  // Field value1:Ljava/lang/Object;
     203: areturn
     204: aconst_null
     205: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #1                  // Field delegateMap:Lorg/apache/commons/collections/map/AbstractHashedMap;
       4: ifnull        15
       7: aload_0
       8: getfield      #1                  // Field delegateMap:Lorg/apache/commons/collections/map/AbstractHashedMap;
      11: invokevirtual #17                 // Method org/apache/commons/collections/map/AbstractHashedMap.size:()I
      14: ireturn
      15: aload_0
      16: getfield      #8                  // Field size:I
      19: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method size:()I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #1                  // Field delegateMap:Lorg/apache/commons/collections/map/AbstractHashedMap;
       4: ifnull        16
       7: aload_0
       8: getfield      #1                  // Field delegateMap:Lorg/apache/commons/collections/map/AbstractHashedMap;
      11: aload_1
      12: invokevirtual #19                 // Method org/apache/commons/collections/map/AbstractHashedMap.containsKey:(Ljava/lang/Object;)Z
      15: ireturn
      16: aload_1
      17: ifnonnull     82
      20: aload_0
      21: getfield      #8                  // Field size:I
      24: tableswitch   { // 1 to 3
                     1: 70
                     2: 61
                     3: 52
               default: 79
          }
      52: aload_0
      53: getfield      #7                  // Field key3:Ljava/lang/Object;
      56: ifnonnull     61
      59: iconst_1
      60: ireturn
      61: aload_0
      62: getfield      #6                  // Field key2:Ljava/lang/Object;
      65: ifnonnull     70
      68: iconst_1
      69: ireturn
      70: aload_0
      71: getfield      #5                  // Field key1:Ljava/lang/Object;
      74: ifnonnull     79
      77: iconst_1
      78: ireturn
      79: goto          187
      82: aload_0
      83: getfield      #8                  // Field size:I
      86: ifle          187
      89: aload_1
      90: invokevirtual #12                 // Method java/lang/Object.hashCode:()I
      93: istore_2
      94: aload_0
      95: getfield      #8                  // Field size:I
      98: tableswitch   { // 1 to 3
                     1: 166
                     2: 145
                     3: 124
               default: 187
          }
     124: aload_0
     125: getfield      #13                 // Field hash3:I
     128: iload_2
     129: if_icmpne     145
     132: aload_1
     133: aload_0
     134: getfield      #7                  // Field key3:Ljava/lang/Object;
     137: invokevirtual #14                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     140: ifeq          145
     143: iconst_1
     144: ireturn
     145: aload_0
     146: getfield      #15                 // Field hash2:I
     149: iload_2
     150: if_icmpne     166
     153: aload_1
     154: aload_0
     155: getfield      #6                  // Field key2:Ljava/lang/Object;
     158: invokevirtual #14                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     161: ifeq          166
     164: iconst_1
     165: ireturn
     166: aload_0
     167: getfield      #16                 // Field hash1:I
     170: iload_2
     171: if_icmpne     187
     174: aload_1
     175: aload_0
     176: getfield      #5                  // Field key1:Ljava/lang/Object;
     179: invokevirtual #14                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     182: ifeq          187
     185: iconst_1
     186: ireturn
     187: iconst_0
     188: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #1                  // Field delegateMap:Lorg/apache/commons/collections/map/AbstractHashedMap;
       4: ifnull        16
       7: aload_0
       8: getfield      #1                  // Field delegateMap:Lorg/apache/commons/collections/map/AbstractHashedMap;
      11: aload_1
      12: invokevirtual #20                 // Method org/apache/commons/collections/map/AbstractHashedMap.containsValue:(Ljava/lang/Object;)Z
      15: ireturn
      16: aload_1
      17: ifnonnull     82
      20: aload_0
      21: getfield      #8                  // Field size:I
      24: tableswitch   { // 1 to 3
                     1: 70
                     2: 61
                     3: 52
               default: 79
          }
      52: aload_0
      53: getfield      #4                  // Field value3:Ljava/lang/Object;
      56: ifnonnull     61
      59: iconst_1
      60: ireturn
      61: aload_0
      62: getfield      #3                  // Field value2:Ljava/lang/Object;
      65: ifnonnull     70
      68: iconst_1
      69: ireturn
      70: aload_0
      71: getfield      #2                  // Field value1:Ljava/lang/Object;
      74: ifnonnull     79
      77: iconst_1
      78: ireturn
      79: goto          151
      82: aload_0
      83: getfield      #8                  // Field size:I
      86: tableswitch   { // 1 to 3
                     1: 138
                     2: 125
                     3: 112
               default: 151
          }
     112: aload_1
     113: aload_0
     114: getfield      #4                  // Field value3:Ljava/lang/Object;
     117: invokevirtual #14                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     120: ifeq          125
     123: iconst_1
     124: ireturn
     125: aload_1
     126: aload_0
     127: getfield      #3                  // Field value2:Ljava/lang/Object;
     130: invokevirtual #14                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     133: ifeq          138
     136: iconst_1
     137: ireturn
     138: aload_1
     139: aload_0
     140: getfield      #2                  // Field value1:Ljava/lang/Object;
     143: invokevirtual #14                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     146: ifeq          151
     149: iconst_1
     150: ireturn
     151: iconst_0
     152: ireturn

  public java.lang.Object put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #1                  // Field delegateMap:Lorg/apache/commons/collections/map/AbstractHashedMap;
       4: ifnull        17
       7: aload_0
       8: getfield      #1                  // Field delegateMap:Lorg/apache/commons/collections/map/AbstractHashedMap;
      11: aload_1
      12: aload_2
      13: invokevirtual #21                 // Method org/apache/commons/collections/map/AbstractHashedMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      16: areturn
      17: aload_1
      18: ifnonnull     112
      21: aload_0
      22: getfield      #8                  // Field size:I
      25: tableswitch   { // 1 to 3
                     1: 90
                     2: 71
                     3: 52
               default: 109
          }
      52: aload_0
      53: getfield      #7                  // Field key3:Ljava/lang/Object;
      56: ifnonnull     71
      59: aload_0
      60: getfield      #4                  // Field value3:Ljava/lang/Object;
      63: astore_3
      64: aload_0
      65: aload_2
      66: putfield      #4                  // Field value3:Ljava/lang/Object;
      69: aload_3
      70: areturn
      71: aload_0
      72: getfield      #6                  // Field key2:Ljava/lang/Object;
      75: ifnonnull     90
      78: aload_0
      79: getfield      #3                  // Field value2:Ljava/lang/Object;
      82: astore_3
      83: aload_0
      84: aload_2
      85: putfield      #3                  // Field value2:Ljava/lang/Object;
      88: aload_3
      89: areturn
      90: aload_0
      91: getfield      #5                  // Field key1:Ljava/lang/Object;
      94: ifnonnull     109
      97: aload_0
      98: getfield      #2                  // Field value1:Ljava/lang/Object;
     101: astore_3
     102: aload_0
     103: aload_2
     104: putfield      #2                  // Field value1:Ljava/lang/Object;
     107: aload_3
     108: areturn
     109: goto          255
     112: aload_0
     113: getfield      #8                  // Field size:I
     116: ifle          255
     119: aload_1
     120: invokevirtual #12                 // Method java/lang/Object.hashCode:()I
     123: istore_3
     124: aload_0
     125: getfield      #8                  // Field size:I
     128: tableswitch   { // 1 to 3
                     1: 222
                     2: 189
                     3: 156
               default: 255
          }
     156: aload_0
     157: getfield      #13                 // Field hash3:I
     160: iload_3
     161: if_icmpne     189
     164: aload_1
     165: aload_0
     166: getfield      #7                  // Field key3:Ljava/lang/Object;
     169: invokevirtual #14                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     172: ifeq          189
     175: aload_0
     176: getfield      #4                  // Field value3:Ljava/lang/Object;
     179: astore        4
     181: aload_0
     182: aload_2
     183: putfield      #4                  // Field value3:Ljava/lang/Object;
     186: aload         4
     188: areturn
     189: aload_0
     190: getfield      #15                 // Field hash2:I
     193: iload_3
     194: if_icmpne     222
     197: aload_1
     198: aload_0
     199: getfield      #6                  // Field key2:Ljava/lang/Object;
     202: invokevirtual #14                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     205: ifeq          222
     208: aload_0
     209: getfield      #3                  // Field value2:Ljava/lang/Object;
     212: astore        4
     214: aload_0
     215: aload_2
     216: putfield      #3                  // Field value2:Ljava/lang/Object;
     219: aload         4
     221: areturn
     222: aload_0
     223: getfield      #16                 // Field hash1:I
     226: iload_3
     227: if_icmpne     255
     230: aload_1
     231: aload_0
     232: getfield      #5                  // Field key1:Ljava/lang/Object;
     235: invokevirtual #14                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     238: ifeq          255
     241: aload_0
     242: getfield      #2                  // Field value1:Ljava/lang/Object;
     245: astore        4
     247: aload_0
     248: aload_2
     249: putfield      #2                  // Field value1:Ljava/lang/Object;
     252: aload         4
     254: areturn
     255: aload_0
     256: getfield      #8                  // Field size:I
     259: tableswitch   { // 0 to 2
                     0: 358
                     1: 329
                     2: 300
               default: 284
          }
     284: aload_0
     285: invokespecial #22                 // Method convertToMap:()V
     288: aload_0
     289: getfield      #1                  // Field delegateMap:Lorg/apache/commons/collections/map/AbstractHashedMap;
     292: aload_1
     293: aload_2
     294: invokevirtual #21                 // Method org/apache/commons/collections/map/AbstractHashedMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     297: pop
     298: aconst_null
     299: areturn
     300: aload_0
     301: aload_1
     302: ifnonnull     309
     305: iconst_0
     306: goto          313
     309: aload_1
     310: invokevirtual #12                 // Method java/lang/Object.hashCode:()I
     313: putfield      #13                 // Field hash3:I
     316: aload_0
     317: aload_1
     318: putfield      #7                  // Field key3:Ljava/lang/Object;
     321: aload_0
     322: aload_2
     323: putfield      #4                  // Field value3:Ljava/lang/Object;
     326: goto          384
     329: aload_0
     330: aload_1
     331: ifnonnull     338
     334: iconst_0
     335: goto          342
     338: aload_1
     339: invokevirtual #12                 // Method java/lang/Object.hashCode:()I
     342: putfield      #15                 // Field hash2:I
     345: aload_0
     346: aload_1
     347: putfield      #6                  // Field key2:Ljava/lang/Object;
     350: aload_0
     351: aload_2
     352: putfield      #3                  // Field value2:Ljava/lang/Object;
     355: goto          384
     358: aload_0
     359: aload_1
     360: ifnonnull     367
     363: iconst_0
     364: goto          371
     367: aload_1
     368: invokevirtual #12                 // Method java/lang/Object.hashCode:()I
     371: putfield      #16                 // Field hash1:I
     374: aload_0
     375: aload_1
     376: putfield      #5                  // Field key1:Ljava/lang/Object;
     379: aload_0
     380: aload_2
     381: putfield      #2                  // Field value1:Ljava/lang/Object;
     384: aload_0
     385: dup
     386: getfield      #8                  // Field size:I
     389: iconst_1
     390: iadd
     391: putfield      #8                  // Field size:I
     394: aconst_null
     395: areturn

  public void putAll(java.util.Map);
    Code:
       0: aload_1
       1: invokeinterface #23,  1           // InterfaceMethod java/util/Map.size:()I
       6: istore_2
       7: iload_2
       8: ifne          12
      11: return
      12: aload_0
      13: getfield      #1                  // Field delegateMap:Lorg/apache/commons/collections/map/AbstractHashedMap;
      16: ifnull        28
      19: aload_0
      20: getfield      #1                  // Field delegateMap:Lorg/apache/commons/collections/map/AbstractHashedMap;
      23: aload_1
      24: invokevirtual #24                 // Method org/apache/commons/collections/map/AbstractHashedMap.putAll:(Ljava/util/Map;)V
      27: return
      28: iload_2
      29: iconst_4
      30: if_icmpge     90
      33: aload_1
      34: invokeinterface #25,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      39: invokeinterface #26,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      44: astore_3
      45: aload_3
      46: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      51: ifeq          87
      54: aload_3
      55: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      60: checkcast     #29                 // class java/util/Map$Entry
      63: astore        4
      65: aload_0
      66: aload         4
      68: invokeinterface #30,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      73: aload         4
      75: invokeinterface #31,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      80: invokevirtual #32                 // Method put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      83: pop
      84: goto          45
      87: goto          102
      90: aload_0
      91: invokespecial #22                 // Method convertToMap:()V
      94: aload_0
      95: getfield      #1                  // Field delegateMap:Lorg/apache/commons/collections/map/AbstractHashedMap;
      98: aload_1
      99: invokevirtual #24                 // Method org/apache/commons/collections/map/AbstractHashedMap.putAll:(Ljava/util/Map;)V
     102: return

  private void convertToMap();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #33                 // Method createDelegateMap:()Lorg/apache/commons/collections/map/AbstractHashedMap;
       5: putfield      #1                  // Field delegateMap:Lorg/apache/commons/collections/map/AbstractHashedMap;
       8: aload_0
       9: getfield      #8                  // Field size:I
      12: tableswitch   { // 1 to 3
                     1: 72
                     2: 56
                     3: 40
               default: 88
          }
      40: aload_0
      41: getfield      #1                  // Field delegateMap:Lorg/apache/commons/collections/map/AbstractHashedMap;
      44: aload_0
      45: getfield      #7                  // Field key3:Ljava/lang/Object;
      48: aload_0
      49: getfield      #4                  // Field value3:Ljava/lang/Object;
      52: invokevirtual #21                 // Method org/apache/commons/collections/map/AbstractHashedMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      55: pop
      56: aload_0
      57: getfield      #1                  // Field delegateMap:Lorg/apache/commons/collections/map/AbstractHashedMap;
      60: aload_0
      61: getfield      #6                  // Field key2:Ljava/lang/Object;
      64: aload_0
      65: getfield      #3                  // Field value2:Ljava/lang/Object;
      68: invokevirtual #21                 // Method org/apache/commons/collections/map/AbstractHashedMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      71: pop
      72: aload_0
      73: getfield      #1                  // Field delegateMap:Lorg/apache/commons/collections/map/AbstractHashedMap;
      76: aload_0
      77: getfield      #5                  // Field key1:Ljava/lang/Object;
      80: aload_0
      81: getfield      #2                  // Field value1:Ljava/lang/Object;
      84: invokevirtual #21                 // Method org/apache/commons/collections/map/AbstractHashedMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      87: pop
      88: aload_0
      89: iconst_0
      90: putfield      #8                  // Field size:I
      93: aload_0
      94: aload_0
      95: aload_0
      96: iconst_0
      97: dup_x1
      98: putfield      #13                 // Field hash3:I
     101: dup_x1
     102: putfield      #15                 // Field hash2:I
     105: putfield      #16                 // Field hash1:I
     108: aload_0
     109: aload_0
     110: aload_0
     111: aconst_null
     112: dup_x1
     113: putfield      #7                  // Field key3:Ljava/lang/Object;
     116: dup_x1
     117: putfield      #6                  // Field key2:Ljava/lang/Object;
     120: putfield      #5                  // Field key1:Ljava/lang/Object;
     123: aload_0
     124: aload_0
     125: aload_0
     126: aconst_null
     127: dup_x1
     128: putfield      #4                  // Field value3:Ljava/lang/Object;
     131: dup_x1
     132: putfield      #3                  // Field value2:Ljava/lang/Object;
     135: putfield      #2                  // Field value1:Ljava/lang/Object;
     138: return

  protected org.apache.commons.collections.map.AbstractHashedMap createDelegateMap();
    Code:
       0: new           #34                 // class org/apache/commons/collections/map/HashedMap
       3: dup
       4: invokespecial #35                 // Method org/apache/commons/collections/map/HashedMap."<init>":()V
       7: areturn

  public java.lang.Object remove(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #1                  // Field delegateMap:Lorg/apache/commons/collections/map/AbstractHashedMap;
       4: ifnull        16
       7: aload_0
       8: getfield      #1                  // Field delegateMap:Lorg/apache/commons/collections/map/AbstractHashedMap;
      11: aload_1
      12: invokevirtual #36                 // Method org/apache/commons/collections/map/AbstractHashedMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      15: areturn
      16: aload_0
      17: getfield      #8                  // Field size:I
      20: ifne          25
      23: aconst_null
      24: areturn
      25: aload_1
      26: ifnonnull     343
      29: aload_0
      30: getfield      #8                  // Field size:I
      33: tableswitch   { // 1 to 3
                     1: 306
                     2: 212
                     3: 60
               default: 340
          }
      60: aload_0
      61: getfield      #7                  // Field key3:Ljava/lang/Object;
      64: ifnonnull     94
      67: aload_0
      68: getfield      #4                  // Field value3:Ljava/lang/Object;
      71: astore_2
      72: aload_0
      73: iconst_0
      74: putfield      #13                 // Field hash3:I
      77: aload_0
      78: aconst_null
      79: putfield      #7                  // Field key3:Ljava/lang/Object;
      82: aload_0
      83: aconst_null
      84: putfield      #4                  // Field value3:Ljava/lang/Object;
      87: aload_0
      88: iconst_2
      89: putfield      #8                  // Field size:I
      92: aload_2
      93: areturn
      94: aload_0
      95: getfield      #6                  // Field key2:Ljava/lang/Object;
      98: ifnonnull     152
     101: aload_0
     102: getfield      #3                  // Field value2:Ljava/lang/Object;
     105: astore_2
     106: aload_0
     107: aload_0
     108: getfield      #13                 // Field hash3:I
     111: putfield      #15                 // Field hash2:I
     114: aload_0
     115: aload_0
     116: getfield      #7                  // Field key3:Ljava/lang/Object;
     119: putfield      #6                  // Field key2:Ljava/lang/Object;
     122: aload_0
     123: aload_0
     124: getfield      #4                  // Field value3:Ljava/lang/Object;
     127: putfield      #3                  // Field value2:Ljava/lang/Object;
     130: aload_0
     131: iconst_0
     132: putfield      #13                 // Field hash3:I
     135: aload_0
     136: aconst_null
     137: putfield      #7                  // Field key3:Ljava/lang/Object;
     140: aload_0
     141: aconst_null
     142: putfield      #4                  // Field value3:Ljava/lang/Object;
     145: aload_0
     146: iconst_2
     147: putfield      #8                  // Field size:I
     150: aload_2
     151: areturn
     152: aload_0
     153: getfield      #5                  // Field key1:Ljava/lang/Object;
     156: ifnonnull     210
     159: aload_0
     160: getfield      #2                  // Field value1:Ljava/lang/Object;
     163: astore_2
     164: aload_0
     165: aload_0
     166: getfield      #13                 // Field hash3:I
     169: putfield      #16                 // Field hash1:I
     172: aload_0
     173: aload_0
     174: getfield      #7                  // Field key3:Ljava/lang/Object;
     177: putfield      #5                  // Field key1:Ljava/lang/Object;
     180: aload_0
     181: aload_0
     182: getfield      #4                  // Field value3:Ljava/lang/Object;
     185: putfield      #2                  // Field value1:Ljava/lang/Object;
     188: aload_0
     189: iconst_0
     190: putfield      #13                 // Field hash3:I
     193: aload_0
     194: aconst_null
     195: putfield      #7                  // Field key3:Ljava/lang/Object;
     198: aload_0
     199: aconst_null
     200: putfield      #4                  // Field value3:Ljava/lang/Object;
     203: aload_0
     204: iconst_2
     205: putfield      #8                  // Field size:I
     208: aload_2
     209: areturn
     210: aconst_null
     211: areturn
     212: aload_0
     213: getfield      #6                  // Field key2:Ljava/lang/Object;
     216: ifnonnull     246
     219: aload_0
     220: getfield      #3                  // Field value2:Ljava/lang/Object;
     223: astore_2
     224: aload_0
     225: iconst_0
     226: putfield      #15                 // Field hash2:I
     229: aload_0
     230: aconst_null
     231: putfield      #6                  // Field key2:Ljava/lang/Object;
     234: aload_0
     235: aconst_null
     236: putfield      #3                  // Field value2:Ljava/lang/Object;
     239: aload_0
     240: iconst_1
     241: putfield      #8                  // Field size:I
     244: aload_2
     245: areturn
     246: aload_0
     247: getfield      #5                  // Field key1:Ljava/lang/Object;
     250: ifnonnull     304
     253: aload_0
     254: getfield      #2                  // Field value1:Ljava/lang/Object;
     257: astore_2
     258: aload_0
     259: aload_0
     260: getfield      #15                 // Field hash2:I
     263: putfield      #16                 // Field hash1:I
     266: aload_0
     267: aload_0
     268: getfield      #6                  // Field key2:Ljava/lang/Object;
     271: putfield      #5                  // Field key1:Ljava/lang/Object;
     274: aload_0
     275: aload_0
     276: getfield      #3                  // Field value2:Ljava/lang/Object;
     279: putfield      #2                  // Field value1:Ljava/lang/Object;
     282: aload_0
     283: iconst_0
     284: putfield      #15                 // Field hash2:I
     287: aload_0
     288: aconst_null
     289: putfield      #6                  // Field key2:Ljava/lang/Object;
     292: aload_0
     293: aconst_null
     294: putfield      #3                  // Field value2:Ljava/lang/Object;
     297: aload_0
     298: iconst_1
     299: putfield      #8                  // Field size:I
     302: aload_2
     303: areturn
     304: aconst_null
     305: areturn
     306: aload_0
     307: getfield      #5                  // Field key1:Ljava/lang/Object;
     310: ifnonnull     340
     313: aload_0
     314: getfield      #2                  // Field value1:Ljava/lang/Object;
     317: astore_2
     318: aload_0
     319: iconst_0
     320: putfield      #16                 // Field hash1:I
     323: aload_0
     324: aconst_null
     325: putfield      #5                  // Field key1:Ljava/lang/Object;
     328: aload_0
     329: aconst_null
     330: putfield      #2                  // Field value1:Ljava/lang/Object;
     333: aload_0
     334: iconst_0
     335: putfield      #8                  // Field size:I
     338: aload_2
     339: areturn
     340: goto          736
     343: aload_0
     344: getfield      #8                  // Field size:I
     347: ifle          736
     350: aload_1
     351: invokevirtual #12                 // Method java/lang/Object.hashCode:()I
     354: istore_2
     355: aload_0
     356: getfield      #8                  // Field size:I
     359: tableswitch   { // 1 to 3
                     1: 690
                     2: 572
                     3: 384
               default: 736
          }
     384: aload_0
     385: getfield      #13                 // Field hash3:I
     388: iload_2
     389: if_icmpne     430
     392: aload_1
     393: aload_0
     394: getfield      #7                  // Field key3:Ljava/lang/Object;
     397: invokevirtual #14                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     400: ifeq          430
     403: aload_0
     404: getfield      #4                  // Field value3:Ljava/lang/Object;
     407: astore_3
     408: aload_0
     409: iconst_0
     410: putfield      #13                 // Field hash3:I
     413: aload_0
     414: aconst_null
     415: putfield      #7                  // Field key3:Ljava/lang/Object;
     418: aload_0
     419: aconst_null
     420: putfield      #4                  // Field value3:Ljava/lang/Object;
     423: aload_0
     424: iconst_2
     425: putfield      #8                  // Field size:I
     428: aload_3
     429: areturn
     430: aload_0
     431: getfield      #15                 // Field hash2:I
     434: iload_2
     435: if_icmpne     500
     438: aload_1
     439: aload_0
     440: getfield      #6                  // Field key2:Ljava/lang/Object;
     443: invokevirtual #14                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     446: ifeq          500
     449: aload_0
     450: getfield      #3                  // Field value2:Ljava/lang/Object;
     453: astore_3
     454: aload_0
     455: aload_0
     456: getfield      #13                 // Field hash3:I
     459: putfield      #15                 // Field hash2:I
     462: aload_0
     463: aload_0
     464: getfield      #7                  // Field key3:Ljava/lang/Object;
     467: putfield      #6                  // Field key2:Ljava/lang/Object;
     470: aload_0
     471: aload_0
     472: getfield      #4                  // Field value3:Ljava/lang/Object;
     475: putfield      #3                  // Field value2:Ljava/lang/Object;
     478: aload_0
     479: iconst_0
     480: putfield      #13                 // Field hash3:I
     483: aload_0
     484: aconst_null
     485: putfield      #7                  // Field key3:Ljava/lang/Object;
     488: aload_0
     489: aconst_null
     490: putfield      #4                  // Field value3:Ljava/lang/Object;
     493: aload_0
     494: iconst_2
     495: putfield      #8                  // Field size:I
     498: aload_3
     499: areturn
     500: aload_0
     501: getfield      #16                 // Field hash1:I
     504: iload_2
     505: if_icmpne     570
     508: aload_1
     509: aload_0
     510: getfield      #5                  // Field key1:Ljava/lang/Object;
     513: invokevirtual #14                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     516: ifeq          570
     519: aload_0
     520: getfield      #2                  // Field value1:Ljava/lang/Object;
     523: astore_3
     524: aload_0
     525: aload_0
     526: getfield      #13                 // Field hash3:I
     529: putfield      #16                 // Field hash1:I
     532: aload_0
     533: aload_0
     534: getfield      #7                  // Field key3:Ljava/lang/Object;
     537: putfield      #5                  // Field key1:Ljava/lang/Object;
     540: aload_0
     541: aload_0
     542: getfield      #4                  // Field value3:Ljava/lang/Object;
     545: putfield      #2                  // Field value1:Ljava/lang/Object;
     548: aload_0
     549: iconst_0
     550: putfield      #13                 // Field hash3:I
     553: aload_0
     554: aconst_null
     555: putfield      #7                  // Field key3:Ljava/lang/Object;
     558: aload_0
     559: aconst_null
     560: putfield      #4                  // Field value3:Ljava/lang/Object;
     563: aload_0
     564: iconst_2
     565: putfield      #8                  // Field size:I
     568: aload_3
     569: areturn
     570: aconst_null
     571: areturn
     572: aload_0
     573: getfield      #15                 // Field hash2:I
     576: iload_2
     577: if_icmpne     618
     580: aload_1
     581: aload_0
     582: getfield      #6                  // Field key2:Ljava/lang/Object;
     585: invokevirtual #14                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     588: ifeq          618
     591: aload_0
     592: getfield      #3                  // Field value2:Ljava/lang/Object;
     595: astore_3
     596: aload_0
     597: iconst_0
     598: putfield      #15                 // Field hash2:I
     601: aload_0
     602: aconst_null
     603: putfield      #6                  // Field key2:Ljava/lang/Object;
     606: aload_0
     607: aconst_null
     608: putfield      #3                  // Field value2:Ljava/lang/Object;
     611: aload_0
     612: iconst_1
     613: putfield      #8                  // Field size:I
     616: aload_3
     617: areturn
     618: aload_0
     619: getfield      #16                 // Field hash1:I
     622: iload_2
     623: if_icmpne     688
     626: aload_1
     627: aload_0
     628: getfield      #5                  // Field key1:Ljava/lang/Object;
     631: invokevirtual #14                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     634: ifeq          688
     637: aload_0
     638: getfield      #2                  // Field value1:Ljava/lang/Object;
     641: astore_3
     642: aload_0
     643: aload_0
     644: getfield      #15                 // Field hash2:I
     647: putfield      #16                 // Field hash1:I
     650: aload_0
     651: aload_0
     652: getfield      #6                  // Field key2:Ljava/lang/Object;
     655: putfield      #5                  // Field key1:Ljava/lang/Object;
     658: aload_0
     659: aload_0
     660: getfield      #3                  // Field value2:Ljava/lang/Object;
     663: putfield      #2                  // Field value1:Ljava/lang/Object;
     666: aload_0
     667: iconst_0
     668: putfield      #15                 // Field hash2:I
     671: aload_0
     672: aconst_null
     673: putfield      #6                  // Field key2:Ljava/lang/Object;
     676: aload_0
     677: aconst_null
     678: putfield      #3                  // Field value2:Ljava/lang/Object;
     681: aload_0
     682: iconst_1
     683: putfield      #8                  // Field size:I
     686: aload_3
     687: areturn
     688: aconst_null
     689: areturn
     690: aload_0
     691: getfield      #16                 // Field hash1:I
     694: iload_2
     695: if_icmpne     736
     698: aload_1
     699: aload_0
     700: getfield      #5                  // Field key1:Ljava/lang/Object;
     703: invokevirtual #14                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     706: ifeq          736
     709: aload_0
     710: getfield      #2                  // Field value1:Ljava/lang/Object;
     713: astore_3
     714: aload_0
     715: iconst_0
     716: putfield      #16                 // Field hash1:I
     719: aload_0
     720: aconst_null
     721: putfield      #5                  // Field key1:Ljava/lang/Object;
     724: aload_0
     725: aconst_null
     726: putfield      #2                  // Field value1:Ljava/lang/Object;
     729: aload_0
     730: iconst_0
     731: putfield      #8                  // Field size:I
     734: aload_3
     735: areturn
     736: aconst_null
     737: areturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #1                  // Field delegateMap:Lorg/apache/commons/collections/map/AbstractHashedMap;
       4: ifnull        22
       7: aload_0
       8: getfield      #1                  // Field delegateMap:Lorg/apache/commons/collections/map/AbstractHashedMap;
      11: invokevirtual #37                 // Method org/apache/commons/collections/map/AbstractHashedMap.clear:()V
      14: aload_0
      15: aconst_null
      16: putfield      #1                  // Field delegateMap:Lorg/apache/commons/collections/map/AbstractHashedMap;
      19: goto          72
      22: aload_0
      23: iconst_0
      24: putfield      #8                  // Field size:I
      27: aload_0
      28: aload_0
      29: aload_0
      30: iconst_0
      31: dup_x1
      32: putfield      #13                 // Field hash3:I
      35: dup_x1
      36: putfield      #15                 // Field hash2:I
      39: putfield      #16                 // Field hash1:I
      42: aload_0
      43: aload_0
      44: aload_0
      45: aconst_null
      46: dup_x1
      47: putfield      #7                  // Field key3:Ljava/lang/Object;
      50: dup_x1
      51: putfield      #6                  // Field key2:Ljava/lang/Object;
      54: putfield      #5                  // Field key1:Ljava/lang/Object;
      57: aload_0
      58: aload_0
      59: aload_0
      60: aconst_null
      61: dup_x1
      62: putfield      #4                  // Field value3:Ljava/lang/Object;
      65: dup_x1
      66: putfield      #3                  // Field value2:Ljava/lang/Object;
      69: putfield      #2                  // Field value1:Ljava/lang/Object;
      72: return

  public org.apache.commons.collections.MapIterator mapIterator();
    Code:
       0: aload_0
       1: getfield      #1                  // Field delegateMap:Lorg/apache/commons/collections/map/AbstractHashedMap;
       4: ifnull        15
       7: aload_0
       8: getfield      #1                  // Field delegateMap:Lorg/apache/commons/collections/map/AbstractHashedMap;
      11: invokevirtual #38                 // Method org/apache/commons/collections/map/AbstractHashedMap.mapIterator:()Lorg/apache/commons/collections/MapIterator;
      14: areturn
      15: aload_0
      16: getfield      #8                  // Field size:I
      19: ifne          26
      22: getstatic     #39                 // Field org/apache/commons/collections/iterators/EmptyMapIterator.INSTANCE:Lorg/apache/commons/collections/MapIterator;
      25: areturn
      26: new           #40                 // class org/apache/commons/collections/map/Flat3Map$FlatMapIterator
      29: dup
      30: aload_0
      31: invokespecial #41                 // Method org/apache/commons/collections/map/Flat3Map$FlatMapIterator."<init>":(Lorg/apache/commons/collections/map/Flat3Map;)V
      34: areturn

  public java.util.Set entrySet();
    Code:
       0: aload_0
       1: getfield      #1                  // Field delegateMap:Lorg/apache/commons/collections/map/AbstractHashedMap;
       4: ifnull        15
       7: aload_0
       8: getfield      #1                  // Field delegateMap:Lorg/apache/commons/collections/map/AbstractHashedMap;
      11: invokevirtual #42                 // Method org/apache/commons/collections/map/AbstractHashedMap.entrySet:()Ljava/util/Set;
      14: areturn
      15: new           #43                 // class org/apache/commons/collections/map/Flat3Map$EntrySet
      18: dup
      19: aload_0
      20: invokespecial #44                 // Method org/apache/commons/collections/map/Flat3Map$EntrySet."<init>":(Lorg/apache/commons/collections/map/Flat3Map;)V
      23: areturn

  public java.util.Set keySet();
    Code:
       0: aload_0
       1: getfield      #1                  // Field delegateMap:Lorg/apache/commons/collections/map/AbstractHashedMap;
       4: ifnull        15
       7: aload_0
       8: getfield      #1                  // Field delegateMap:Lorg/apache/commons/collections/map/AbstractHashedMap;
      11: invokevirtual #45                 // Method org/apache/commons/collections/map/AbstractHashedMap.keySet:()Ljava/util/Set;
      14: areturn
      15: new           #46                 // class org/apache/commons/collections/map/Flat3Map$KeySet
      18: dup
      19: aload_0
      20: invokespecial #47                 // Method org/apache/commons/collections/map/Flat3Map$KeySet."<init>":(Lorg/apache/commons/collections/map/Flat3Map;)V
      23: areturn

  public java.util.Collection values();
    Code:
       0: aload_0
       1: getfield      #1                  // Field delegateMap:Lorg/apache/commons/collections/map/AbstractHashedMap;
       4: ifnull        15
       7: aload_0
       8: getfield      #1                  // Field delegateMap:Lorg/apache/commons/collections/map/AbstractHashedMap;
      11: invokevirtual #48                 // Method org/apache/commons/collections/map/AbstractHashedMap.values:()Ljava/util/Collection;
      14: areturn
      15: new           #49                 // class org/apache/commons/collections/map/Flat3Map$Values
      18: dup
      19: aload_0
      20: invokespecial #50                 // Method org/apache/commons/collections/map/Flat3Map$Values."<init>":(Lorg/apache/commons/collections/map/Flat3Map;)V
      23: areturn

  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #51                 // Method java/io/ObjectOutputStream.defaultWriteObject:()V
       4: aload_1
       5: aload_0
       6: invokevirtual #18                 // Method size:()I
       9: invokevirtual #52                 // Method java/io/ObjectOutputStream.writeInt:(I)V
      12: aload_0
      13: invokevirtual #53                 // Method mapIterator:()Lorg/apache/commons/collections/MapIterator;
      16: astore_2
      17: aload_2
      18: invokeinterface #54,  1           // InterfaceMethod org/apache/commons/collections/MapIterator.hasNext:()Z
      23: ifeq          49
      26: aload_1
      27: aload_2
      28: invokeinterface #55,  1           // InterfaceMethod org/apache/commons/collections/MapIterator.next:()Ljava/lang/Object;
      33: invokevirtual #56                 // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      36: aload_1
      37: aload_2
      38: invokeinterface #57,  1           // InterfaceMethod org/apache/commons/collections/MapIterator.getValue:()Ljava/lang/Object;
      43: invokevirtual #56                 // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      46: goto          17
      49: return

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #58                 // Method java/io/ObjectInputStream.defaultReadObject:()V
       4: aload_1
       5: invokevirtual #59                 // Method java/io/ObjectInputStream.readInt:()I
       8: istore_2
       9: iload_2
      10: iconst_3
      11: if_icmple     22
      14: aload_0
      15: aload_0
      16: invokevirtual #33                 // Method createDelegateMap:()Lorg/apache/commons/collections/map/AbstractHashedMap;
      19: putfield      #1                  // Field delegateMap:Lorg/apache/commons/collections/map/AbstractHashedMap;
      22: iload_2
      23: istore_3
      24: iload_3
      25: ifle          47
      28: aload_0
      29: aload_1
      30: invokevirtual #60                 // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
      33: aload_1
      34: invokevirtual #60                 // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
      37: invokevirtual #32                 // Method put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      40: pop
      41: iinc          3, -1
      44: goto          24
      47: return

  public java.lang.Object clone();
    Code:
       0: aload_0
       1: invokespecial #61                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #62                 // class org/apache/commons/collections/map/Flat3Map
       7: astore_1
       8: aload_1
       9: getfield      #1                  // Field delegateMap:Lorg/apache/commons/collections/map/AbstractHashedMap;
      12: ifnull        29
      15: aload_1
      16: aload_1
      17: getfield      #1                  // Field delegateMap:Lorg/apache/commons/collections/map/AbstractHashedMap;
      20: invokevirtual #63                 // Method org/apache/commons/collections/map/AbstractHashedMap.clone:()Ljava/lang/Object;
      23: checkcast     #34                 // class org/apache/commons/collections/map/HashedMap
      26: putfield      #1                  // Field delegateMap:Lorg/apache/commons/collections/map/AbstractHashedMap;
      29: aload_1
      30: areturn
      31: astore_1
      32: new           #65                 // class java/lang/InternalError
      35: dup
      36: invokespecial #66                 // Method java/lang/InternalError."<init>":()V
      39: athrow
    Exception table:
       from    to  target type
           0    30    31   Class java/lang/CloneNotSupportedException

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_0
       8: getfield      #1                  // Field delegateMap:Lorg/apache/commons/collections/map/AbstractHashedMap;
      11: ifnull        23
      14: aload_0
      15: getfield      #1                  // Field delegateMap:Lorg/apache/commons/collections/map/AbstractHashedMap;
      18: aload_1
      19: invokevirtual #67                 // Method org/apache/commons/collections/map/AbstractHashedMap.equals:(Ljava/lang/Object;)Z
      22: ireturn
      23: aload_1
      24: instanceof    #68                 // class java/util/Map
      27: ifne          32
      30: iconst_0
      31: ireturn
      32: aload_1
      33: checkcast     #68                 // class java/util/Map
      36: astore_2
      37: aload_0
      38: getfield      #8                  // Field size:I
      41: aload_2
      42: invokeinterface #23,  1           // InterfaceMethod java/util/Map.size:()I
      47: if_icmpeq     52
      50: iconst_0
      51: ireturn
      52: aload_0
      53: getfield      #8                  // Field size:I
      56: ifle          251
      59: aconst_null
      60: astore_3
      61: aload_0
      62: getfield      #8                  // Field size:I
      65: tableswitch   { // 1 to 3
                     1: 198
                     2: 145
                     3: 92
               default: 251
          }
      92: aload_2
      93: aload_0
      94: getfield      #7                  // Field key3:Ljava/lang/Object;
      97: invokeinterface #69,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     102: ifne          107
     105: iconst_0
     106: ireturn
     107: aload_2
     108: aload_0
     109: getfield      #7                  // Field key3:Ljava/lang/Object;
     112: invokeinterface #70,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     117: astore_3
     118: aload_0
     119: getfield      #4                  // Field value3:Ljava/lang/Object;
     122: ifnonnull     132
     125: aload_3
     126: ifnull        145
     129: goto          143
     132: aload_0
     133: getfield      #4                  // Field value3:Ljava/lang/Object;
     136: aload_3
     137: invokevirtual #14                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     140: ifne          145
     143: iconst_0
     144: ireturn
     145: aload_2
     146: aload_0
     147: getfield      #6                  // Field key2:Ljava/lang/Object;
     150: invokeinterface #69,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     155: ifne          160
     158: iconst_0
     159: ireturn
     160: aload_2
     161: aload_0
     162: getfield      #6                  // Field key2:Ljava/lang/Object;
     165: invokeinterface #70,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     170: astore_3
     171: aload_0
     172: getfield      #3                  // Field value2:Ljava/lang/Object;
     175: ifnonnull     185
     178: aload_3
     179: ifnull        198
     182: goto          196
     185: aload_0
     186: getfield      #3                  // Field value2:Ljava/lang/Object;
     189: aload_3
     190: invokevirtual #14                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     193: ifne          198
     196: iconst_0
     197: ireturn
     198: aload_2
     199: aload_0
     200: getfield      #5                  // Field key1:Ljava/lang/Object;
     203: invokeinterface #69,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     208: ifne          213
     211: iconst_0
     212: ireturn
     213: aload_2
     214: aload_0
     215: getfield      #5                  // Field key1:Ljava/lang/Object;
     218: invokeinterface #70,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     223: astore_3
     224: aload_0
     225: getfield      #2                  // Field value1:Ljava/lang/Object;
     228: ifnonnull     238
     231: aload_3
     232: ifnull        251
     235: goto          249
     238: aload_0
     239: getfield      #2                  // Field value1:Ljava/lang/Object;
     242: aload_3
     243: invokevirtual #14                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     246: ifne          251
     249: iconst_0
     250: ireturn
     251: iconst_1
     252: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #1                  // Field delegateMap:Lorg/apache/commons/collections/map/AbstractHashedMap;
       4: ifnull        15
       7: aload_0
       8: getfield      #1                  // Field delegateMap:Lorg/apache/commons/collections/map/AbstractHashedMap;
      11: invokevirtual #71                 // Method org/apache/commons/collections/map/AbstractHashedMap.hashCode:()I
      14: ireturn
      15: iconst_0
      16: istore_1
      17: aload_0
      18: getfield      #8                  // Field size:I
      21: tableswitch   { // 1 to 3
                     1: 100
                     2: 74
                     3: 48
               default: 126
          }
      48: iload_1
      49: aload_0
      50: getfield      #13                 // Field hash3:I
      53: aload_0
      54: getfield      #4                  // Field value3:Ljava/lang/Object;
      57: ifnonnull     64
      60: iconst_0
      61: goto          71
      64: aload_0
      65: getfield      #4                  // Field value3:Ljava/lang/Object;
      68: invokevirtual #12                 // Method java/lang/Object.hashCode:()I
      71: ixor
      72: iadd
      73: istore_1
      74: iload_1
      75: aload_0
      76: getfield      #15                 // Field hash2:I
      79: aload_0
      80: getfield      #3                  // Field value2:Ljava/lang/Object;
      83: ifnonnull     90
      86: iconst_0
      87: goto          97
      90: aload_0
      91: getfield      #3                  // Field value2:Ljava/lang/Object;
      94: invokevirtual #12                 // Method java/lang/Object.hashCode:()I
      97: ixor
      98: iadd
      99: istore_1
     100: iload_1
     101: aload_0
     102: getfield      #16                 // Field hash1:I
     105: aload_0
     106: getfield      #2                  // Field value1:Ljava/lang/Object;
     109: ifnonnull     116
     112: iconst_0
     113: goto          123
     116: aload_0
     117: getfield      #2                  // Field value1:Ljava/lang/Object;
     120: invokevirtual #12                 // Method java/lang/Object.hashCode:()I
     123: ixor
     124: iadd
     125: istore_1
     126: iload_1
     127: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #1                  // Field delegateMap:Lorg/apache/commons/collections/map/AbstractHashedMap;
       4: ifnull        15
       7: aload_0
       8: getfield      #1                  // Field delegateMap:Lorg/apache/commons/collections/map/AbstractHashedMap;
      11: invokevirtual #72                 // Method org/apache/commons/collections/map/AbstractHashedMap.toString:()Ljava/lang/String;
      14: areturn
      15: aload_0
      16: getfield      #8                  // Field size:I
      19: ifne          25
      22: ldc           #73                 // String {}
      24: areturn
      25: new           #74                 // class java/lang/StringBuffer
      28: dup
      29: sipush        128
      32: invokespecial #75                 // Method java/lang/StringBuffer."<init>":(I)V
      35: astore_1
      36: aload_1
      37: bipush        123
      39: invokevirtual #76                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      42: pop
      43: aload_0
      44: getfield      #8                  // Field size:I
      47: tableswitch   { // 1 to 3
                     1: 188
                     2: 130
                     3: 72
               default: 239
          }
      72: aload_1
      73: aload_0
      74: getfield      #7                  // Field key3:Ljava/lang/Object;
      77: aload_0
      78: if_acmpne     86
      81: ldc           #77                 // String (this Map)
      83: goto          90
      86: aload_0
      87: getfield      #7                  // Field key3:Ljava/lang/Object;
      90: invokevirtual #78                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
      93: pop
      94: aload_1
      95: bipush        61
      97: invokevirtual #76                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     100: pop
     101: aload_1
     102: aload_0
     103: getfield      #4                  // Field value3:Ljava/lang/Object;
     106: aload_0
     107: if_acmpne     115
     110: ldc           #77                 // String (this Map)
     112: goto          119
     115: aload_0
     116: getfield      #4                  // Field value3:Ljava/lang/Object;
     119: invokevirtual #78                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
     122: pop
     123: aload_1
     124: bipush        44
     126: invokevirtual #76                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     129: pop
     130: aload_1
     131: aload_0
     132: getfield      #6                  // Field key2:Ljava/lang/Object;
     135: aload_0
     136: if_acmpne     144
     139: ldc           #77                 // String (this Map)
     141: goto          148
     144: aload_0
     145: getfield      #6                  // Field key2:Ljava/lang/Object;
     148: invokevirtual #78                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
     151: pop
     152: aload_1
     153: bipush        61
     155: invokevirtual #76                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     158: pop
     159: aload_1
     160: aload_0
     161: getfield      #3                  // Field value2:Ljava/lang/Object;
     164: aload_0
     165: if_acmpne     173
     168: ldc           #77                 // String (this Map)
     170: goto          177
     173: aload_0
     174: getfield      #3                  // Field value2:Ljava/lang/Object;
     177: invokevirtual #78                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
     180: pop
     181: aload_1
     182: bipush        44
     184: invokevirtual #76                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     187: pop
     188: aload_1
     189: aload_0
     190: getfield      #5                  // Field key1:Ljava/lang/Object;
     193: aload_0
     194: if_acmpne     202
     197: ldc           #77                 // String (this Map)
     199: goto          206
     202: aload_0
     203: getfield      #5                  // Field key1:Ljava/lang/Object;
     206: invokevirtual #78                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
     209: pop
     210: aload_1
     211: bipush        61
     213: invokevirtual #76                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     216: pop
     217: aload_1
     218: aload_0
     219: getfield      #2                  // Field value1:Ljava/lang/Object;
     222: aload_0
     223: if_acmpne     231
     226: ldc           #77                 // String (this Map)
     228: goto          235
     231: aload_0
     232: getfield      #2                  // Field value1:Ljava/lang/Object;
     235: invokevirtual #78                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
     238: pop
     239: aload_1
     240: bipush        125
     242: invokevirtual #76                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     245: pop
     246: aload_1
     247: invokevirtual #79                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     250: areturn

  static int access$000(org.apache.commons.collections.map.Flat3Map);
    Code:
       0: aload_0
       1: getfield      #8                  // Field size:I
       4: ireturn

  static java.lang.Object access$100(org.apache.commons.collections.map.Flat3Map);
    Code:
       0: aload_0
       1: getfield      #7                  // Field key3:Ljava/lang/Object;
       4: areturn

  static java.lang.Object access$200(org.apache.commons.collections.map.Flat3Map);
    Code:
       0: aload_0
       1: getfield      #6                  // Field key2:Ljava/lang/Object;
       4: areturn

  static java.lang.Object access$300(org.apache.commons.collections.map.Flat3Map);
    Code:
       0: aload_0
       1: getfield      #5                  // Field key1:Ljava/lang/Object;
       4: areturn

  static java.lang.Object access$400(org.apache.commons.collections.map.Flat3Map);
    Code:
       0: aload_0
       1: getfield      #4                  // Field value3:Ljava/lang/Object;
       4: areturn

  static java.lang.Object access$500(org.apache.commons.collections.map.Flat3Map);
    Code:
       0: aload_0
       1: getfield      #3                  // Field value2:Ljava/lang/Object;
       4: areturn

  static java.lang.Object access$600(org.apache.commons.collections.map.Flat3Map);
    Code:
       0: aload_0
       1: getfield      #2                  // Field value1:Ljava/lang/Object;
       4: areturn

  static java.lang.Object access$402(org.apache.commons.collections.map.Flat3Map, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #4                  // Field value3:Ljava/lang/Object;
       6: areturn

  static java.lang.Object access$502(org.apache.commons.collections.map.Flat3Map, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #3                  // Field value2:Ljava/lang/Object;
       6: areturn

  static java.lang.Object access$602(org.apache.commons.collections.map.Flat3Map, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #2                  // Field value1:Ljava/lang/Object;
       6: areturn

  static org.apache.commons.collections.map.AbstractHashedMap access$700(org.apache.commons.collections.map.Flat3Map);
    Code:
       0: aload_0
       1: getfield      #1                  // Field delegateMap:Lorg/apache/commons/collections/map/AbstractHashedMap;
       4: areturn
}
