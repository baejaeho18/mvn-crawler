Compiled from "CompessorMapper.java"
public class net.minidev.json.writer.CompessorMapper extends net.minidev.json.writer.JsonReaderI<net.minidev.json.writer.CompessorMapper> {
  private java.lang.Appendable out;

  private net.minidev.json.JSONStyle compression;

  private java.lang.Boolean _isObj;

  private boolean needSep;

  private boolean isOpen;

  private boolean isClosed;

  private boolean isArray();
    Code:
       0: aload_0
       1: getfield      #1                  // Field _isObj:Ljava/lang/Boolean;
       4: getstatic     #2                  // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  private boolean isObject();
    Code:
       0: aload_0
       1: getfield      #1                  // Field _isObj:Ljava/lang/Boolean;
       4: getstatic     #3                  // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  private boolean isCompressor(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #4                  // class net/minidev/json/writer/CompessorMapper
       4: ireturn

  public net.minidev.json.writer.CompessorMapper(net.minidev.json.writer.JsonReader, java.lang.Appendable, net.minidev.json.JSONStyle);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aconst_null
       5: invokespecial #5                  // Method "<init>":(Lnet/minidev/json/writer/JsonReader;Ljava/lang/Appendable;Lnet/minidev/json/JSONStyle;Ljava/lang/Boolean;)V
       8: return

  public net.minidev.json.writer.CompessorMapper(net.minidev.json.writer.JsonReader, java.lang.Appendable, net.minidev.json.JSONStyle, java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method net/minidev/json/writer/JsonReaderI."<init>":(Lnet/minidev/json/writer/JsonReader;)V
       5: aload_0
       6: iconst_0
       7: putfield      #7                  // Field needSep:Z
      10: aload_0
      11: iconst_0
      12: putfield      #8                  // Field isOpen:Z
      15: aload_0
      16: iconst_0
      17: putfield      #9                  // Field isClosed:Z
      20: aload_0
      21: aload_2
      22: putfield      #10                 // Field out:Ljava/lang/Appendable;
      25: aload_0
      26: aload_3
      27: putfield      #11                 // Field compression:Lnet/minidev/json/JSONStyle;
      30: aload_0
      31: aload         4
      33: putfield      #1                  // Field _isObj:Ljava/lang/Boolean;
      36: return

  public net.minidev.json.writer.JsonReaderI<?> startObject(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #12                 // Method open:(Ljava/lang/Object;)V
       5: aload_0
       6: aload_1
       7: invokespecial #13                 // Method startKey:(Ljava/lang/String;)V
      10: new           #4                  // class net/minidev/json/writer/CompessorMapper
      13: dup
      14: aload_0
      15: getfield      #14                 // Field base:Lnet/minidev/json/writer/JsonReader;
      18: aload_0
      19: getfield      #10                 // Field out:Ljava/lang/Appendable;
      22: aload_0
      23: getfield      #11                 // Field compression:Lnet/minidev/json/JSONStyle;
      26: iconst_1
      27: invokestatic  #15                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      30: invokespecial #5                  // Method "<init>":(Lnet/minidev/json/writer/JsonReader;Ljava/lang/Appendable;Lnet/minidev/json/JSONStyle;Ljava/lang/Boolean;)V
      33: astore_2
      34: aload_0
      35: aload_2
      36: invokespecial #12                 // Method open:(Ljava/lang/Object;)V
      39: aload_2
      40: areturn

  public net.minidev.json.writer.JsonReaderI<?> startArray(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #12                 // Method open:(Ljava/lang/Object;)V
       5: aload_0
       6: aload_1
       7: invokespecial #13                 // Method startKey:(Ljava/lang/String;)V
      10: new           #4                  // class net/minidev/json/writer/CompessorMapper
      13: dup
      14: aload_0
      15: getfield      #14                 // Field base:Lnet/minidev/json/writer/JsonReader;
      18: aload_0
      19: getfield      #10                 // Field out:Ljava/lang/Appendable;
      22: aload_0
      23: getfield      #11                 // Field compression:Lnet/minidev/json/JSONStyle;
      26: iconst_0
      27: invokestatic  #15                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      30: invokespecial #5                  // Method "<init>":(Lnet/minidev/json/writer/JsonReader;Ljava/lang/Appendable;Lnet/minidev/json/JSONStyle;Ljava/lang/Boolean;)V
      33: astore_2
      34: aload_0
      35: aload_2
      36: invokespecial #12                 // Method open:(Ljava/lang/Object;)V
      39: aload_2
      40: areturn

  private void startKey(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #16                 // Method addComma:()V
       4: aload_0
       5: invokespecial #17                 // Method isArray:()Z
       8: ifeq          12
      11: return
      12: aload_0
      13: getfield      #11                 // Field compression:Lnet/minidev/json/JSONStyle;
      16: aload_1
      17: invokevirtual #18                 // Method net/minidev/json/JSONStyle.mustProtectKey:(Ljava/lang/String;)Z
      20: ifne          37
      23: aload_0
      24: getfield      #10                 // Field out:Ljava/lang/Appendable;
      27: aload_1
      28: invokeinterface #19,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      33: pop
      34: goto          73
      37: aload_0
      38: getfield      #10                 // Field out:Ljava/lang/Appendable;
      41: bipush        34
      43: invokeinterface #20,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
      48: pop
      49: aload_1
      50: aload_0
      51: getfield      #10                 // Field out:Ljava/lang/Appendable;
      54: aload_0
      55: getfield      #11                 // Field compression:Lnet/minidev/json/JSONStyle;
      58: invokestatic  #21                 // Method net/minidev/json/JSONValue.escape:(Ljava/lang/String;Ljava/lang/Appendable;Lnet/minidev/json/JSONStyle;)V
      61: aload_0
      62: getfield      #10                 // Field out:Ljava/lang/Appendable;
      65: bipush        34
      67: invokeinterface #20,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
      72: pop
      73: aload_0
      74: getfield      #10                 // Field out:Ljava/lang/Appendable;
      77: bipush        58
      79: invokeinterface #20,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
      84: pop
      85: return

  public void setValue(java.lang.Object, java.lang.String, java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_3
       2: invokespecial #22                 // Method isCompressor:(Ljava/lang/Object;)Z
       5: ifeq          13
       8: aload_0
       9: invokespecial #16                 // Method addComma:()V
      12: return
      13: aload_0
      14: aload_2
      15: invokespecial #13                 // Method startKey:(Ljava/lang/String;)V
      18: aload_0
      19: aload_3
      20: invokespecial #23                 // Method writeValue:(Ljava/lang/Object;)V
      23: return

  public void addValue(java.lang.Object, java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #16                 // Method addComma:()V
       4: aload_0
       5: aload_2
       6: invokespecial #23                 // Method writeValue:(Ljava/lang/Object;)V
       9: return

  private void addComma() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field needSep:Z
       4: ifeq          22
       7: aload_0
       8: getfield      #10                 // Field out:Ljava/lang/Appendable;
      11: bipush        44
      13: invokeinterface #20,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
      18: pop
      19: goto          27
      22: aload_0
      23: iconst_1
      24: putfield      #7                  // Field needSep:Z
      27: return

  private void writeValue(java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_1
       1: instanceof    #24                 // class java/lang/String
       4: ifeq          25
       7: aload_0
       8: getfield      #11                 // Field compression:Lnet/minidev/json/JSONStyle;
      11: aload_0
      12: getfield      #10                 // Field out:Ljava/lang/Appendable;
      15: aload_1
      16: checkcast     #24                 // class java/lang/String
      19: invokevirtual #25                 // Method net/minidev/json/JSONStyle.writeString:(Ljava/lang/Appendable;Ljava/lang/String;)V
      22: goto          53
      25: aload_0
      26: aload_1
      27: invokespecial #22                 // Method isCompressor:(Ljava/lang/Object;)Z
      30: ifeq          41
      33: aload_0
      34: aload_1
      35: invokespecial #26                 // Method close:(Ljava/lang/Object;)V
      38: goto          53
      41: aload_1
      42: aload_0
      43: getfield      #10                 // Field out:Ljava/lang/Appendable;
      46: aload_0
      47: getfield      #11                 // Field compression:Lnet/minidev/json/JSONStyle;
      50: invokestatic  #27                 // Method net/minidev/json/JSONValue.writeJSONString:(Ljava/lang/Object;Ljava/lang/Appendable;Lnet/minidev/json/JSONStyle;)V
      53: return

  public java.lang.Object createObject();
    Code:
       0: aload_0
       1: iconst_1
       2: invokestatic  #15                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       5: putfield      #1                  // Field _isObj:Ljava/lang/Boolean;
       8: aload_0
       9: aload_0
      10: invokespecial #12                 // Method open:(Ljava/lang/Object;)V
      13: goto          17
      16: astore_1
      17: aload_0
      18: areturn
    Exception table:
       from    to  target type
           8    13    16   Class java/lang/Exception

  public java.lang.Object createArray();
    Code:
       0: aload_0
       1: iconst_0
       2: invokestatic  #15                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       5: putfield      #1                  // Field _isObj:Ljava/lang/Boolean;
       8: aload_0
       9: aload_0
      10: invokespecial #12                 // Method open:(Ljava/lang/Object;)V
      13: goto          17
      16: astore_1
      17: aload_0
      18: areturn
    Exception table:
       from    to  target type
           8    13    16   Class java/lang/Exception

  public net.minidev.json.writer.CompessorMapper convert(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #26                 // Method close:(Ljava/lang/Object;)V
       5: aload_0
       6: areturn
       7: astore_2
       8: aload_0
       9: areturn
    Exception table:
       from    to  target type
           0     6     7   Class java/lang/Exception

  private void close(java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #22                 // Method isCompressor:(Ljava/lang/Object;)Z
       5: ifne          9
       8: return
       9: aload_1
      10: checkcast     #4                  // class net/minidev/json/writer/CompessorMapper
      13: getfield      #9                  // Field isClosed:Z
      16: ifeq          20
      19: return
      20: aload_1
      21: checkcast     #4                  // class net/minidev/json/writer/CompessorMapper
      24: iconst_1
      25: putfield      #9                  // Field isClosed:Z
      28: aload_1
      29: checkcast     #4                  // class net/minidev/json/writer/CompessorMapper
      32: invokespecial #29                 // Method isObject:()Z
      35: ifeq          58
      38: aload_0
      39: getfield      #10                 // Field out:Ljava/lang/Appendable;
      42: bipush        125
      44: invokeinterface #20,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
      49: pop
      50: aload_0
      51: iconst_1
      52: putfield      #7                  // Field needSep:Z
      55: goto          85
      58: aload_1
      59: checkcast     #4                  // class net/minidev/json/writer/CompessorMapper
      62: invokespecial #17                 // Method isArray:()Z
      65: ifeq          85
      68: aload_0
      69: getfield      #10                 // Field out:Ljava/lang/Appendable;
      72: bipush        93
      74: invokeinterface #20,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
      79: pop
      80: aload_0
      81: iconst_1
      82: putfield      #7                  // Field needSep:Z
      85: return

  private void open(java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #22                 // Method isCompressor:(Ljava/lang/Object;)Z
       5: ifne          9
       8: return
       9: aload_1
      10: checkcast     #4                  // class net/minidev/json/writer/CompessorMapper
      13: getfield      #8                  // Field isOpen:Z
      16: ifeq          20
      19: return
      20: aload_1
      21: checkcast     #4                  // class net/minidev/json/writer/CompessorMapper
      24: iconst_1
      25: putfield      #8                  // Field isOpen:Z
      28: aload_1
      29: checkcast     #4                  // class net/minidev/json/writer/CompessorMapper
      32: invokespecial #29                 // Method isObject:()Z
      35: ifeq          58
      38: aload_0
      39: getfield      #10                 // Field out:Ljava/lang/Appendable;
      42: bipush        123
      44: invokeinterface #20,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
      49: pop
      50: aload_0
      51: iconst_0
      52: putfield      #7                  // Field needSep:Z
      55: goto          85
      58: aload_1
      59: checkcast     #4                  // class net/minidev/json/writer/CompessorMapper
      62: invokespecial #17                 // Method isArray:()Z
      65: ifeq          85
      68: aload_0
      69: getfield      #10                 // Field out:Ljava/lang/Appendable;
      72: bipush        91
      74: invokeinterface #20,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
      79: pop
      80: aload_0
      81: iconst_0
      82: putfield      #7                  // Field needSep:Z
      85: return

  public java.lang.Object convert(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #30                 // Method convert:(Ljava/lang/Object;)Lnet/minidev/json/writer/CompessorMapper;
       5: areturn
}
