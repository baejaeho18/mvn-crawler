Compiled from "MapperRemapped.java"
public class net.minidev.json.writer.MapperRemapped<T> extends net.minidev.json.writer.JsonReaderI<T> {
  private java.util.Map<java.lang.String, java.lang.String> rename;

  private net.minidev.json.writer.JsonReaderI<T> parent;

  public net.minidev.json.writer.MapperRemapped(net.minidev.json.writer.JsonReaderI<T>);
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #1                  // Field net/minidev/json/writer/JsonReaderI.base:Lnet/minidev/json/writer/JsonReader;
       5: invokespecial #2                  // Method net/minidev/json/writer/JsonReaderI."<init>":(Lnet/minidev/json/writer/JsonReader;)V
       8: aload_0
       9: aload_1
      10: putfield      #3                  // Field parent:Lnet/minidev/json/writer/JsonReaderI;
      13: aload_0
      14: new           #4                  // class java/util/HashMap
      17: dup
      18: invokespecial #5                  // Method java/util/HashMap."<init>":()V
      21: putfield      #6                  // Field rename:Ljava/util/Map;
      24: return

  public void renameField(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field rename:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #7,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  private java.lang.String rename(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field rename:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #8,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #9                  // class java/lang/String
      13: astore_2
      14: aload_2
      15: ifnull        20
      18: aload_2
      19: areturn
      20: aload_1
      21: areturn

  public void setValue(java.lang.Object, java.lang.String, java.lang.Object) throws net.minidev.json.parser.ParseException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #10                 // Method rename:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_2
       6: aload_0
       7: getfield      #3                  // Field parent:Lnet/minidev/json/writer/JsonReaderI;
      10: aload_1
      11: aload_2
      12: aload_3
      13: invokevirtual #11                 // Method net/minidev/json/writer/JsonReaderI.setValue:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
      16: return

  public java.lang.Object getValue(java.lang.Object, java.lang.String);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #10                 // Method rename:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_2
       6: aload_0
       7: getfield      #3                  // Field parent:Lnet/minidev/json/writer/JsonReaderI;
      10: aload_1
      11: aload_2
      12: invokevirtual #12                 // Method net/minidev/json/writer/JsonReaderI.getValue:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      15: areturn

  public java.lang.reflect.Type getType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #10                 // Method rename:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_1
       6: aload_0
       7: getfield      #3                  // Field parent:Lnet/minidev/json/writer/JsonReaderI;
      10: aload_1
      11: invokevirtual #13                 // Method net/minidev/json/writer/JsonReaderI.getType:(Ljava/lang/String;)Ljava/lang/reflect/Type;
      14: areturn

  public net.minidev.json.writer.JsonReaderI<?> startArray(java.lang.String) throws net.minidev.json.parser.ParseException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #10                 // Method rename:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_1
       6: aload_0
       7: getfield      #3                  // Field parent:Lnet/minidev/json/writer/JsonReaderI;
      10: aload_1
      11: invokevirtual #14                 // Method net/minidev/json/writer/JsonReaderI.startArray:(Ljava/lang/String;)Lnet/minidev/json/writer/JsonReaderI;
      14: areturn

  public net.minidev.json.writer.JsonReaderI<?> startObject(java.lang.String) throws net.minidev.json.parser.ParseException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #10                 // Method rename:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_1
       6: aload_0
       7: getfield      #3                  // Field parent:Lnet/minidev/json/writer/JsonReaderI;
      10: aload_1
      11: invokevirtual #15                 // Method net/minidev/json/writer/JsonReaderI.startObject:(Ljava/lang/String;)Lnet/minidev/json/writer/JsonReaderI;
      14: areturn

  public java.lang.Object createObject();
    Code:
       0: aload_0
       1: getfield      #3                  // Field parent:Lnet/minidev/json/writer/JsonReaderI;
       4: invokevirtual #16                 // Method net/minidev/json/writer/JsonReaderI.createObject:()Ljava/lang/Object;
       7: areturn
}
