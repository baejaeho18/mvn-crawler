Compiled from "RateStatistic.java"
public class org.eclipse.jetty.util.statistic.RateStatistic {
  private final java.util.Deque<java.lang.Long> _samples;

  private final long _nanoPeriod;

  private final java.util.concurrent.TimeUnit _units;

  private long _max;

  private long _count;

  public org.eclipse.jetty.util.statistic.RateStatistic(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayDeque
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayDeque."<init>":()V
      12: putfield      #4                  // Field _samples:Ljava/util/Deque;
      15: aload_0
      16: getstatic     #5                  // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      19: lload_1
      20: aload_3
      21: invokevirtual #6                  // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      24: putfield      #7                  // Field _nanoPeriod:J
      27: aload_0
      28: aload_3
      29: putfield      #8                  // Field _units:Ljava/util/concurrent/TimeUnit;
      32: return

  public long getPeriod();
    Code:
       0: aload_0
       1: getfield      #8                  // Field _units:Ljava/util/concurrent/TimeUnit;
       4: aload_0
       5: getfield      #7                  // Field _nanoPeriod:J
       8: getstatic     #5                  // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      11: invokevirtual #6                  // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      14: lreturn

  public java.util.concurrent.TimeUnit getUnits();
    Code:
       0: aload_0
       1: getfield      #8                  // Field _units:Ljava/util/concurrent/TimeUnit;
       4: areturn

  public void reset();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #4                  // Field _samples:Ljava/util/Deque;
       8: invokeinterface #9,  1            // InterfaceMethod java/util/Deque.clear:()V
      13: aload_0
      14: lconst_0
      15: putfield      #10                 // Field _max:J
      18: aload_0
      19: lconst_0
      20: putfield      #11                 // Field _count:J
      23: aload_1
      24: monitorexit
      25: goto          33
      28: astore_2
      29: aload_1
      30: monitorexit
      31: aload_2
      32: athrow
      33: return
    Exception table:
       from    to  target type
           4    25    28   any
          28    31    28   any

  private void update();
    Code:
       0: aload_0
       1: invokestatic  #12                 // Method java/lang/System.nanoTime:()J
       4: invokespecial #13                 // Method update:(J)V
       7: return

  private void update(long);
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #7                  // Field _nanoPeriod:J
       5: lsub
       6: lstore_3
       7: aload_0
       8: getfield      #4                  // Field _samples:Ljava/util/Deque;
      11: invokeinterface #14,  1           // InterfaceMethod java/util/Deque.peekFirst:()Ljava/lang/Object;
      16: checkcast     #15                 // class java/lang/Long
      19: astore        5
      21: aload         5
      23: ifnull        63
      26: aload         5
      28: invokevirtual #16                 // Method java/lang/Long.longValue:()J
      31: lload_3
      32: lcmp
      33: ifge          63
      36: aload_0
      37: getfield      #4                  // Field _samples:Ljava/util/Deque;
      40: invokeinterface #17,  1           // InterfaceMethod java/util/Deque.removeFirst:()Ljava/lang/Object;
      45: pop
      46: aload_0
      47: getfield      #4                  // Field _samples:Ljava/util/Deque;
      50: invokeinterface #14,  1           // InterfaceMethod java/util/Deque.peekFirst:()Ljava/lang/Object;
      55: checkcast     #15                 // class java/lang/Long
      58: astore        5
      60: goto          21
      63: return

  protected void age(long, java.util.concurrent.TimeUnit);
    Code:
       0: getstatic     #5                  // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
       3: lload_1
       4: aload_3
       5: invokevirtual #6                  // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
       8: lstore        4
      10: aload_0
      11: dup
      12: astore        6
      14: monitorenter
      15: aload_0
      16: getfield      #4                  // Field _samples:Ljava/util/Deque;
      19: invokeinterface #18,  1           // InterfaceMethod java/util/Deque.size:()I
      24: istore        7
      26: iconst_0
      27: istore        8
      29: iload         8
      31: iload         7
      33: if_icmpge     72
      36: aload_0
      37: getfield      #4                  // Field _samples:Ljava/util/Deque;
      40: aload_0
      41: getfield      #4                  // Field _samples:Ljava/util/Deque;
      44: invokeinterface #17,  1           // InterfaceMethod java/util/Deque.removeFirst:()Ljava/lang/Object;
      49: checkcast     #15                 // class java/lang/Long
      52: invokevirtual #16                 // Method java/lang/Long.longValue:()J
      55: lload         4
      57: lsub
      58: invokestatic  #19                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      61: invokeinterface #20,  2           // InterfaceMethod java/util/Deque.addLast:(Ljava/lang/Object;)V
      66: iinc          8, 1
      69: goto          29
      72: aload_0
      73: invokespecial #21                 // Method update:()V
      76: aload         6
      78: monitorexit
      79: goto          90
      82: astore        9
      84: aload         6
      86: monitorexit
      87: aload         9
      89: athrow
      90: return
    Exception table:
       from    to  target type
          15    79    82   any
          82    87    82   any

  public int record();
    Code:
       0: invokestatic  #12                 // Method java/lang/System.nanoTime:()J
       3: lstore_1
       4: aload_0
       5: dup
       6: astore_3
       7: monitorenter
       8: aload_0
       9: dup
      10: getfield      #11                 // Field _count:J
      13: lconst_1
      14: ladd
      15: putfield      #11                 // Field _count:J
      18: aload_0
      19: getfield      #4                  // Field _samples:Ljava/util/Deque;
      22: lload_1
      23: invokestatic  #19                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      26: invokeinterface #22,  2           // InterfaceMethod java/util/Deque.add:(Ljava/lang/Object;)Z
      31: pop
      32: aload_0
      33: lload_1
      34: invokespecial #13                 // Method update:(J)V
      37: aload_0
      38: getfield      #4                  // Field _samples:Ljava/util/Deque;
      41: invokeinterface #18,  1           // InterfaceMethod java/util/Deque.size:()I
      46: istore        4
      48: iload         4
      50: i2l
      51: aload_0
      52: getfield      #10                 // Field _max:J
      55: lcmp
      56: ifle          66
      59: aload_0
      60: iload         4
      62: i2l
      63: putfield      #10                 // Field _max:J
      66: iload         4
      68: aload_3
      69: monitorexit
      70: ireturn
      71: astore        5
      73: aload_3
      74: monitorexit
      75: aload         5
      77: athrow
    Exception table:
       from    to  target type
           8    70    71   any
          71    75    71   any

  public int getRate();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: invokespecial #21                 // Method update:()V
       8: aload_0
       9: getfield      #4                  // Field _samples:Ljava/util/Deque;
      12: invokeinterface #18,  1           // InterfaceMethod java/util/Deque.size:()I
      17: aload_1
      18: monitorexit
      19: ireturn
      20: astore_2
      21: aload_1
      22: monitorexit
      23: aload_2
      24: athrow
    Exception table:
       from    to  target type
           4    19    20   any
          20    23    20   any

  public long getMax();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #10                 // Field _max:J
       8: aload_1
       9: monitorexit
      10: lreturn
      11: astore_2
      12: aload_1
      13: monitorexit
      14: aload_2
      15: athrow
    Exception table:
       from    to  target type
           4    10    11   any
          11    14    11   any

  public long getOldest(java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #4                  // Field _samples:Ljava/util/Deque;
       8: invokeinterface #14,  1           // InterfaceMethod java/util/Deque.peekFirst:()Ljava/lang/Object;
      13: checkcast     #15                 // class java/lang/Long
      16: astore_3
      17: aload_3
      18: ifnonnull     27
      21: ldc2_w        #23                 // long -1l
      24: aload_2
      25: monitorexit
      26: lreturn
      27: aload_1
      28: invokestatic  #12                 // Method java/lang/System.nanoTime:()J
      31: aload_3
      32: invokevirtual #16                 // Method java/lang/Long.longValue:()J
      35: lsub
      36: getstatic     #5                  // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      39: invokevirtual #6                  // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      42: aload_2
      43: monitorexit
      44: lreturn
      45: astore        4
      47: aload_2
      48: monitorexit
      49: aload         4
      51: athrow
    Exception table:
       from    to  target type
           4    26    45   any
          27    44    45   any
          45    49    45   any

  public long getCount();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #11                 // Field _count:J
       8: aload_1
       9: monitorexit
      10: lreturn
      11: astore_2
      12: aload_1
      13: monitorexit
      14: aload_2
      15: athrow
    Exception table:
       from    to  target type
           4    10    11   any
          11    14    11   any

  public java.lang.String dump();
    Code:
       0: aload_0
       1: getstatic     #25                 // Field java/util/concurrent/TimeUnit.MINUTES:Ljava/util/concurrent/TimeUnit;
       4: invokevirtual #26                 // Method dump:(Ljava/util/concurrent/TimeUnit;)Ljava/lang/String;
       7: areturn

  public java.lang.String dump(java.util.concurrent.TimeUnit);
    Code:
       0: invokestatic  #12                 // Method java/lang/System.nanoTime:()J
       3: lstore_2
       4: aload_0
       5: dup
       6: astore        4
       8: monitorenter
       9: aload_0
      10: getfield      #4                  // Field _samples:Ljava/util/Deque;
      13: invokeinterface #27,  1           // InterfaceMethod java/util/Deque.stream:()Ljava/util/stream/Stream;
      18: aload_1
      19: lload_2
      20: invokedynamic #28,  0             // InvokeDynamic #0:applyAsLong:(Ljava/util/concurrent/TimeUnit;J)Ljava/util/function/ToLongFunction;
      25: invokeinterface #29,  2           // InterfaceMethod java/util/stream/Stream.mapToLong:(Ljava/util/function/ToLongFunction;)Ljava/util/stream/LongStream;
      30: invokedynamic #30,  0             // InvokeDynamic #1:apply:()Ljava/util/function/LongFunction;
      35: invokeinterface #31,  2           // InterfaceMethod java/util/stream/LongStream.mapToObj:(Ljava/util/function/LongFunction;)Ljava/util/stream/Stream;
      40: invokestatic  #32                 // Method java/lang/System.lineSeparator:()Ljava/lang/String;
      43: invokestatic  #33                 // Method java/util/stream/Collectors.joining:(Ljava/lang/CharSequence;)Ljava/util/stream/Collector;
      46: invokeinterface #34,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      51: checkcast     #35                 // class java/lang/String
      54: astore        5
      56: ldc           #36                 // String %s%n%s
      58: iconst_2
      59: anewarray     #37                 // class java/lang/Object
      62: dup
      63: iconst_0
      64: aload_0
      65: lload_2
      66: invokespecial #38                 // Method toString:(J)Ljava/lang/String;
      69: aastore
      70: dup
      71: iconst_1
      72: aload         5
      74: aastore
      75: invokestatic  #39                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      78: aload         4
      80: monitorexit
      81: areturn
      82: astore        6
      84: aload         4
      86: monitorexit
      87: aload         6
      89: athrow
    Exception table:
       from    to  target type
           9    81    82   any
          82    87    82   any

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #12                 // Method java/lang/System.nanoTime:()J
       4: invokespecial #38                 // Method toString:(J)Ljava/lang/String;
       7: areturn

  private java.lang.String toString(long);
    Code:
       0: aload_0
       1: dup
       2: astore_3
       3: monitorenter
       4: aload_0
       5: lload_1
       6: invokespecial #13                 // Method update:(J)V
       9: ldc           #40                 // String %s@%x{count=%d,max=%d,rate=%d per %d %s}
      11: bipush        7
      13: anewarray     #37                 // class java/lang/Object
      16: dup
      17: iconst_0
      18: aload_0
      19: invokevirtual #41                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      22: invokevirtual #42                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      25: aastore
      26: dup
      27: iconst_1
      28: aload_0
      29: invokevirtual #43                 // Method java/lang/Object.hashCode:()I
      32: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      35: aastore
      36: dup
      37: iconst_2
      38: aload_0
      39: getfield      #11                 // Field _count:J
      42: invokestatic  #19                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      45: aastore
      46: dup
      47: iconst_3
      48: aload_0
      49: getfield      #10                 // Field _max:J
      52: invokestatic  #19                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      55: aastore
      56: dup
      57: iconst_4
      58: aload_0
      59: getfield      #4                  // Field _samples:Ljava/util/Deque;
      62: invokeinterface #18,  1           // InterfaceMethod java/util/Deque.size:()I
      67: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      70: aastore
      71: dup
      72: iconst_5
      73: aload_0
      74: getfield      #8                  // Field _units:Ljava/util/concurrent/TimeUnit;
      77: aload_0
      78: getfield      #7                  // Field _nanoPeriod:J
      81: getstatic     #5                  // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      84: invokevirtual #6                  // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      87: invokestatic  #19                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      90: aastore
      91: dup
      92: bipush        6
      94: aload_0
      95: getfield      #8                  // Field _units:Ljava/util/concurrent/TimeUnit;
      98: aastore
      99: invokestatic  #39                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     102: aload_3
     103: monitorexit
     104: areturn
     105: astore        4
     107: aload_3
     108: monitorexit
     109: aload         4
     111: athrow
    Exception table:
       from    to  target type
           4   104   105   any
         105   109   105   any

  private static long lambda$dump$0(java.util.concurrent.TimeUnit, long, java.lang.Long);
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: invokevirtual #16                 // Method java/lang/Long.longValue:()J
       6: lsub
       7: getstatic     #5                  // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      10: invokevirtual #6                  // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      13: lreturn
}
