Compiled from "RolloverFileOutputStream.java"
public class org.eclipse.jetty.util.RolloverFileOutputStream extends java.io.OutputStream {
  private static java.util.Timer __rollover;

  static final java.lang.String YYYY_MM_DD;

  static final java.lang.String ROLLOVER_FILE_DATE_FORMAT;

  static final java.lang.String ROLLOVER_FILE_BACKUP_FORMAT;

  static final int ROLLOVER_FILE_RETAIN_DAYS;

  private java.io.OutputStream _out;

  private org.eclipse.jetty.util.RolloverFileOutputStream$RollTask _rollTask;

  private java.text.SimpleDateFormat _fileBackupFormat;

  private java.text.SimpleDateFormat _fileDateFormat;

  private java.lang.String _filename;

  private java.io.File _file;

  private boolean _append;

  private int _retainDays;

  public org.eclipse.jetty.util.RolloverFileOutputStream(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: bipush        31
       5: invokespecial #4                  // Method "<init>":(Ljava/lang/String;ZI)V
       8: return

  public org.eclipse.jetty.util.RolloverFileOutputStream(java.lang.String, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: bipush        31
       5: invokespecial #4                  // Method "<init>":(Ljava/lang/String;ZI)V
       8: return

  public org.eclipse.jetty.util.RolloverFileOutputStream(java.lang.String, boolean, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #5                  // Method java/util/TimeZone.getDefault:()Ljava/util/TimeZone;
       7: invokespecial #6                  // Method "<init>":(Ljava/lang/String;ZILjava/util/TimeZone;)V
      10: return

  public org.eclipse.jetty.util.RolloverFileOutputStream(java.lang.String, boolean, int, java.util.TimeZone) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: aload         4
       6: aconst_null
       7: aconst_null
       8: aload         4
      10: invokevirtual #7                  // Method java/util/TimeZone.toZoneId:()Ljava/time/ZoneId;
      13: invokestatic  #8                  // Method java/time/ZonedDateTime.now:(Ljava/time/ZoneId;)Ljava/time/ZonedDateTime;
      16: invokespecial #9                  // Method "<init>":(Ljava/lang/String;ZILjava/util/TimeZone;Ljava/lang/String;Ljava/lang/String;Ljava/time/ZonedDateTime;)V
      19: return

  public org.eclipse.jetty.util.RolloverFileOutputStream(java.lang.String, boolean, int, java.util.TimeZone, java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         4
      12: invokevirtual #7                  // Method java/util/TimeZone.toZoneId:()Ljava/time/ZoneId;
      15: invokestatic  #8                  // Method java/time/ZonedDateTime.now:(Ljava/time/ZoneId;)Ljava/time/ZonedDateTime;
      18: invokespecial #9                  // Method "<init>":(Ljava/lang/String;ZILjava/util/TimeZone;Ljava/lang/String;Ljava/lang/String;Ljava/time/ZonedDateTime;)V
      21: return

  org.eclipse.jetty.util.RolloverFileOutputStream(java.lang.String, boolean, int, java.util.TimeZone, java.lang.String, java.lang.String, java.time.ZonedDateTime) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #10                 // Method java/io/OutputStream."<init>":()V
       4: aload         5
       6: ifnonnull     13
       9: ldc           #11                 // String yyyy_MM_dd
      11: astore        5
      13: aload_0
      14: new           #12                 // class java/text/SimpleDateFormat
      17: dup
      18: aload         5
      20: invokespecial #13                 // Method java/text/SimpleDateFormat."<init>":(Ljava/lang/String;)V
      23: putfield      #2                  // Field _fileDateFormat:Ljava/text/SimpleDateFormat;
      26: aload         6
      28: ifnonnull     35
      31: ldc           #14                 // String HHmmssSSS
      33: astore        6
      35: aload_0
      36: new           #12                 // class java/text/SimpleDateFormat
      39: dup
      40: aload         6
      42: invokespecial #13                 // Method java/text/SimpleDateFormat."<init>":(Ljava/lang/String;)V
      45: putfield      #15                 // Field _fileBackupFormat:Ljava/text/SimpleDateFormat;
      48: aload_0
      49: getfield      #15                 // Field _fileBackupFormat:Ljava/text/SimpleDateFormat;
      52: aload         4
      54: invokevirtual #16                 // Method java/text/SimpleDateFormat.setTimeZone:(Ljava/util/TimeZone;)V
      57: aload_0
      58: getfield      #2                  // Field _fileDateFormat:Ljava/text/SimpleDateFormat;
      61: aload         4
      63: invokevirtual #16                 // Method java/text/SimpleDateFormat.setTimeZone:(Ljava/util/TimeZone;)V
      66: aload_1
      67: ifnull        84
      70: aload_1
      71: invokevirtual #17                 // Method java/lang/String.trim:()Ljava/lang/String;
      74: astore_1
      75: aload_1
      76: invokevirtual #18                 // Method java/lang/String.length:()I
      79: ifne          84
      82: aconst_null
      83: astore_1
      84: aload_1
      85: ifnonnull     98
      88: new           #19                 // class java/lang/IllegalArgumentException
      91: dup
      92: ldc           #20                 // String Invalid filename
      94: invokespecial #21                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      97: athrow
      98: aload_0
      99: aload_1
     100: putfield      #22                 // Field _filename:Ljava/lang/String;
     103: aload_0
     104: iload_2
     105: putfield      #23                 // Field _append:Z
     108: aload_0
     109: iload_3
     110: putfield      #24                 // Field _retainDays:I
     113: aload_0
     114: aload         7
     116: invokevirtual #25                 // Method setFile:(Ljava/time/ZonedDateTime;)V
     119: ldc           #3                  // class org/eclipse/jetty/util/RolloverFileOutputStream
     121: dup
     122: astore        8
     124: monitorenter
     125: getstatic     #26                 // Field __rollover:Ljava/util/Timer;
     128: ifnonnull     147
     131: new           #27                 // class java/util/Timer
     134: dup
     135: ldc           #3                  // class org/eclipse/jetty/util/RolloverFileOutputStream
     137: invokevirtual #28                 // Method java/lang/Class.getName:()Ljava/lang/String;
     140: iconst_1
     141: invokespecial #29                 // Method java/util/Timer."<init>":(Ljava/lang/String;Z)V
     144: putstatic     #26                 // Field __rollover:Ljava/util/Timer;
     147: aload         8
     149: monitorexit
     150: goto          161
     153: astore        9
     155: aload         8
     157: monitorexit
     158: aload         9
     160: athrow
     161: aload_0
     162: aload         7
     164: invokespecial #1                  // Method scheduleNextRollover:(Ljava/time/ZonedDateTime;)V
     167: return
    Exception table:
       from    to  target type
         125   150   153   any
         153   158   153   any

  public static java.time.ZonedDateTime toMidnight(java.time.ZonedDateTime);
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method java/time/ZonedDateTime.toLocalDate:()Ljava/time/LocalDate;
       4: aload_0
       5: invokevirtual #31                 // Method java/time/ZonedDateTime.getZone:()Ljava/time/ZoneId;
       8: invokevirtual #32                 // Method java/time/LocalDate.atStartOfDay:(Ljava/time/ZoneId;)Ljava/time/ZonedDateTime;
      11: lconst_1
      12: getstatic     #33                 // Field java/time/temporal/ChronoUnit.DAYS:Ljava/time/temporal/ChronoUnit;
      15: invokevirtual #34                 // Method java/time/ZonedDateTime.plus:(JLjava/time/temporal/TemporalUnit;)Ljava/time/ZonedDateTime;
      18: areturn

  private void scheduleNextRollover(java.time.ZonedDateTime);
    Code:
       0: aload_0
       1: new           #35                 // class org/eclipse/jetty/util/RolloverFileOutputStream$RollTask
       4: dup
       5: aload_0
       6: aconst_null
       7: invokespecial #36                 // Method org/eclipse/jetty/util/RolloverFileOutputStream$RollTask."<init>":(Lorg/eclipse/jetty/util/RolloverFileOutputStream;Lorg/eclipse/jetty/util/RolloverFileOutputStream$1;)V
      10: putfield      #37                 // Field _rollTask:Lorg/eclipse/jetty/util/RolloverFileOutputStream$RollTask;
      13: aload_1
      14: invokestatic  #38                 // Method toMidnight:(Ljava/time/ZonedDateTime;)Ljava/time/ZonedDateTime;
      17: astore_2
      18: aload_2
      19: invokevirtual #39                 // Method java/time/ZonedDateTime.toInstant:()Ljava/time/Instant;
      22: invokevirtual #40                 // Method java/time/Instant.toEpochMilli:()J
      25: aload_1
      26: invokevirtual #39                 // Method java/time/ZonedDateTime.toInstant:()Ljava/time/Instant;
      29: invokevirtual #40                 // Method java/time/Instant.toEpochMilli:()J
      32: lsub
      33: lstore_3
      34: ldc           #3                  // class org/eclipse/jetty/util/RolloverFileOutputStream
      36: dup
      37: astore        5
      39: monitorenter
      40: getstatic     #26                 // Field __rollover:Ljava/util/Timer;
      43: aload_0
      44: getfield      #37                 // Field _rollTask:Lorg/eclipse/jetty/util/RolloverFileOutputStream$RollTask;
      47: lload_3
      48: invokevirtual #41                 // Method java/util/Timer.schedule:(Ljava/util/TimerTask;J)V
      51: aload         5
      53: monitorexit
      54: goto          65
      57: astore        6
      59: aload         5
      61: monitorexit
      62: aload         6
      64: athrow
      65: return
    Exception table:
       from    to  target type
          40    54    57   any
          57    62    57   any

  public java.lang.String getFilename();
    Code:
       0: aload_0
       1: getfield      #22                 // Field _filename:Ljava/lang/String;
       4: areturn

  public java.lang.String getDatedFilename();
    Code:
       0: aload_0
       1: getfield      #42                 // Field _file:Ljava/io/File;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #42                 // Field _file:Ljava/io/File;
      13: invokevirtual #43                 // Method java/io/File.toString:()Ljava/lang/String;
      16: areturn

  public int getRetainDays();
    Code:
       0: aload_0
       1: getfield      #24                 // Field _retainDays:I
       4: ireturn

  void setFile(java.time.ZonedDateTime) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_2
       2: aconst_null
       3: astore_3
       4: aconst_null
       5: astore        4
       7: aload_0
       8: dup
       9: astore        5
      11: monitorenter
      12: new           #44                 // class java/io/File
      15: dup
      16: aload_0
      17: getfield      #22                 // Field _filename:Ljava/lang/String;
      20: invokespecial #45                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      23: astore        6
      25: aload_0
      26: aload         6
      28: invokevirtual #46                 // Method java/io/File.getCanonicalPath:()Ljava/lang/String;
      31: putfield      #22                 // Field _filename:Ljava/lang/String;
      34: new           #44                 // class java/io/File
      37: dup
      38: aload_0
      39: getfield      #22                 // Field _filename:Ljava/lang/String;
      42: invokespecial #45                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      45: astore        6
      47: new           #44                 // class java/io/File
      50: dup
      51: aload         6
      53: invokevirtual #47                 // Method java/io/File.getParent:()Ljava/lang/String;
      56: invokespecial #45                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      59: astore        7
      61: aload         7
      63: invokevirtual #48                 // Method java/io/File.isDirectory:()Z
      66: ifeq          77
      69: aload         7
      71: invokevirtual #49                 // Method java/io/File.canWrite:()Z
      74: ifne          105
      77: new           #50                 // class java/io/IOException
      80: dup
      81: new           #51                 // class java/lang/StringBuilder
      84: dup
      85: invokespecial #52                 // Method java/lang/StringBuilder."<init>":()V
      88: ldc           #53                 // String Cannot write log directory
      90: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: aload         7
      95: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      98: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     101: invokespecial #57                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     104: athrow
     105: aload         6
     107: invokevirtual #58                 // Method java/io/File.getName:()Ljava/lang/String;
     110: astore        8
     112: aload         8
     114: getstatic     #59                 // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
     117: invokevirtual #60                 // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
     120: ldc           #61                 // String yyyy_mm_dd
     122: invokevirtual #62                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
     125: istore        9
     127: iload         9
     129: iflt          204
     132: new           #44                 // class java/io/File
     135: dup
     136: aload         7
     138: new           #51                 // class java/lang/StringBuilder
     141: dup
     142: invokespecial #52                 // Method java/lang/StringBuilder."<init>":()V
     145: aload         8
     147: iconst_0
     148: iload         9
     150: invokevirtual #63                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     153: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     156: aload_0
     157: getfield      #2                  // Field _fileDateFormat:Ljava/text/SimpleDateFormat;
     160: new           #64                 // class java/util/Date
     163: dup
     164: aload_1
     165: invokevirtual #39                 // Method java/time/ZonedDateTime.toInstant:()Ljava/time/Instant;
     168: invokevirtual #40                 // Method java/time/Instant.toEpochMilli:()J
     171: invokespecial #65                 // Method java/util/Date."<init>":(J)V
     174: invokevirtual #66                 // Method java/text/SimpleDateFormat.format:(Ljava/util/Date;)Ljava/lang/String;
     177: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     180: aload         8
     182: iload         9
     184: ldc           #61                 // String yyyy_mm_dd
     186: invokevirtual #18                 // Method java/lang/String.length:()I
     189: iadd
     190: invokevirtual #67                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     193: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     196: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     199: invokespecial #68                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
     202: astore        6
     204: aload         6
     206: invokevirtual #69                 // Method java/io/File.exists:()Z
     209: ifeq          248
     212: aload         6
     214: invokevirtual #49                 // Method java/io/File.canWrite:()Z
     217: ifne          248
     220: new           #50                 // class java/io/IOException
     223: dup
     224: new           #51                 // class java/lang/StringBuilder
     227: dup
     228: invokespecial #52                 // Method java/lang/StringBuilder."<init>":()V
     231: ldc           #70                 // String Cannot write log file
     233: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     236: aload         6
     238: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     241: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     244: invokespecial #57                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     247: athrow
     248: aload_0
     249: getfield      #71                 // Field _out:Ljava/io/OutputStream;
     252: ifnull        260
     255: iload         9
     257: iflt          391
     260: aload_0
     261: getfield      #42                 // Field _file:Ljava/io/File;
     264: astore_2
     265: aload_0
     266: aload         6
     268: putfield      #42                 // Field _file:Ljava/io/File;
     271: aload_0
     272: getfield      #42                 // Field _file:Ljava/io/File;
     275: astore_3
     276: aload_0
     277: getfield      #71                 // Field _out:Ljava/io/OutputStream;
     280: astore        10
     282: aload         10
     284: ifnull        292
     287: aload         10
     289: invokevirtual #72                 // Method java/io/OutputStream.close:()V
     292: aload_0
     293: getfield      #23                 // Field _append:Z
     296: ifne          371
     299: aload         6
     301: invokevirtual #69                 // Method java/io/File.exists:()Z
     304: ifeq          371
     307: new           #44                 // class java/io/File
     310: dup
     311: new           #51                 // class java/lang/StringBuilder
     314: dup
     315: invokespecial #52                 // Method java/lang/StringBuilder."<init>":()V
     318: aload         6
     320: invokevirtual #43                 // Method java/io/File.toString:()Ljava/lang/String;
     323: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     326: ldc           #73                 // String .
     328: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     331: aload_0
     332: getfield      #15                 // Field _fileBackupFormat:Ljava/text/SimpleDateFormat;
     335: new           #64                 // class java/util/Date
     338: dup
     339: aload_1
     340: invokevirtual #39                 // Method java/time/ZonedDateTime.toInstant:()Ljava/time/Instant;
     343: invokevirtual #40                 // Method java/time/Instant.toEpochMilli:()J
     346: invokespecial #65                 // Method java/util/Date."<init>":(J)V
     349: invokevirtual #66                 // Method java/text/SimpleDateFormat.format:(Ljava/util/Date;)Ljava/lang/String;
     352: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     355: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     358: invokespecial #45                 // Method java/io/File."<init>":(Ljava/lang/String;)V
     361: astore        4
     363: aload_0
     364: aload         6
     366: aload         4
     368: invokespecial #74                 // Method renameFile:(Ljava/io/File;Ljava/io/File;)V
     371: aload_0
     372: new           #75                 // class java/io/FileOutputStream
     375: dup
     376: aload         6
     378: invokevirtual #43                 // Method java/io/File.toString:()Ljava/lang/String;
     381: aload_0
     382: getfield      #23                 // Field _append:Z
     385: invokespecial #76                 // Method java/io/FileOutputStream."<init>":(Ljava/lang/String;Z)V
     388: putfield      #71                 // Field _out:Ljava/io/OutputStream;
     391: aload         5
     393: monitorexit
     394: goto          405
     397: astore        11
     399: aload         5
     401: monitorexit
     402: aload         11
     404: athrow
     405: aload_3
     406: ifnull        417
     409: aload_0
     410: aload_2
     411: aload         4
     413: aload_3
     414: invokevirtual #77                 // Method rollover:(Ljava/io/File;Ljava/io/File;Ljava/io/File;)V
     417: return
    Exception table:
       from    to  target type
          12   394   397   any
         397   402   397   any

  private void renameFile(java.io.File, java.io.File) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #78                 // Method java/io/File.renameTo:(Ljava/io/File;)Z
       5: ifne          52
       8: aload_1
       9: invokevirtual #79                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
      12: aload_2
      13: invokevirtual #79                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
      16: iconst_0
      17: anewarray     #80                 // class java/nio/file/CopyOption
      20: invokestatic  #81                 // Method java/nio/file/Files.move:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
      23: pop
      24: goto          52
      27: astore_3
      28: aload_1
      29: invokevirtual #79                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
      32: aload_2
      33: invokevirtual #79                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
      36: iconst_0
      37: anewarray     #80                 // class java/nio/file/CopyOption
      40: invokestatic  #82                 // Method java/nio/file/Files.copy:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
      43: pop
      44: aload_1
      45: invokevirtual #79                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
      48: invokestatic  #83                 // Method java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z
      51: pop
      52: return
    Exception table:
       from    to  target type
           8    24    27   Class java/io/IOException

  protected void rollover(java.io.File, java.io.File, java.io.File);
    Code:
       0: return

  void removeOldFiles(java.time.ZonedDateTime);
    Code:
       0: aload_0
       1: getfield      #24                 // Field _retainDays:I
       4: ifle          191
       7: aload_1
       8: aload_0
       9: getfield      #24                 // Field _retainDays:I
      12: i2l
      13: getstatic     #33                 // Field java/time/temporal/ChronoUnit.DAYS:Ljava/time/temporal/ChronoUnit;
      16: invokevirtual #84                 // Method java/time/ZonedDateTime.minus:(JLjava/time/temporal/TemporalUnit;)Ljava/time/ZonedDateTime;
      19: invokevirtual #39                 // Method java/time/ZonedDateTime.toInstant:()Ljava/time/Instant;
      22: invokevirtual #40                 // Method java/time/Instant.toEpochMilli:()J
      25: lstore_2
      26: new           #44                 // class java/io/File
      29: dup
      30: aload_0
      31: getfield      #22                 // Field _filename:Ljava/lang/String;
      34: invokespecial #45                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      37: astore        4
      39: new           #44                 // class java/io/File
      42: dup
      43: aload         4
      45: invokevirtual #47                 // Method java/io/File.getParent:()Ljava/lang/String;
      48: invokespecial #45                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      51: astore        5
      53: aload         4
      55: invokevirtual #58                 // Method java/io/File.getName:()Ljava/lang/String;
      58: astore        6
      60: aload         6
      62: getstatic     #59                 // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
      65: invokevirtual #60                 // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      68: ldc           #61                 // String yyyy_mm_dd
      70: invokevirtual #62                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      73: istore        7
      75: iload         7
      77: ifge          81
      80: return
      81: aload         6
      83: iconst_0
      84: iload         7
      86: invokevirtual #63                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      89: astore        8
      91: aload         6
      93: iload         7
      95: ldc           #61                 // String yyyy_mm_dd
      97: invokevirtual #18                 // Method java/lang/String.length:()I
     100: iadd
     101: invokevirtual #67                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     104: astore        9
     106: aload         5
     108: invokevirtual #85                 // Method java/io/File.list:()[Ljava/lang/String;
     111: astore        10
     113: iconst_0
     114: istore        11
     116: iload         11
     118: aload         10
     120: arraylength
     121: if_icmpge     191
     124: aload         10
     126: iload         11
     128: aaload
     129: astore        6
     131: aload         6
     133: aload         8
     135: invokevirtual #86                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     138: ifeq          185
     141: aload         6
     143: aload         9
     145: aload         8
     147: invokevirtual #18                 // Method java/lang/String.length:()I
     150: invokevirtual #87                 // Method java/lang/String.indexOf:(Ljava/lang/String;I)I
     153: iflt          185
     156: new           #44                 // class java/io/File
     159: dup
     160: aload         5
     162: aload         6
     164: invokespecial #68                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
     167: astore        12
     169: aload         12
     171: invokevirtual #88                 // Method java/io/File.lastModified:()J
     174: lload_2
     175: lcmp
     176: ifge          185
     179: aload         12
     181: invokevirtual #89                 // Method java/io/File.delete:()Z
     184: pop
     185: iinc          11, 1
     188: goto          116
     191: return

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #71                 // Field _out:Ljava/io/OutputStream;
       8: iload_1
       9: invokevirtual #90                 // Method java/io/OutputStream.write:(I)V
      12: aload_2
      13: monitorexit
      14: goto          22
      17: astore_3
      18: aload_2
      19: monitorexit
      20: aload_3
      21: athrow
      22: return
    Exception table:
       from    to  target type
           4    14    17   any
          17    20    17   any

  public void write(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #71                 // Field _out:Ljava/io/OutputStream;
       8: aload_1
       9: invokevirtual #91                 // Method java/io/OutputStream.write:([B)V
      12: aload_2
      13: monitorexit
      14: goto          22
      17: astore_3
      18: aload_2
      19: monitorexit
      20: aload_3
      21: athrow
      22: return
    Exception table:
       from    to  target type
           4    14    17   any
          17    20    17   any

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: astore        4
       4: monitorenter
       5: aload_0
       6: getfield      #71                 // Field _out:Ljava/io/OutputStream;
       9: aload_1
      10: iload_2
      11: iload_3
      12: invokevirtual #92                 // Method java/io/OutputStream.write:([BII)V
      15: aload         4
      17: monitorexit
      18: goto          29
      21: astore        5
      23: aload         4
      25: monitorexit
      26: aload         5
      28: athrow
      29: return
    Exception table:
       from    to  target type
           5    18    21   any
          21    26    21   any

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #71                 // Field _out:Ljava/io/OutputStream;
       8: invokevirtual #93                 // Method java/io/OutputStream.flush:()V
      11: aload_1
      12: monitorexit
      13: goto          21
      16: astore_2
      17: aload_1
      18: monitorexit
      19: aload_2
      20: athrow
      21: return
    Exception table:
       from    to  target type
           4    13    16   any
          16    19    16   any

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #71                 // Field _out:Ljava/io/OutputStream;
       8: invokevirtual #72                 // Method java/io/OutputStream.close:()V
      11: aload_0
      12: aconst_null
      13: putfield      #71                 // Field _out:Ljava/io/OutputStream;
      16: aload_0
      17: aconst_null
      18: putfield      #42                 // Field _file:Ljava/io/File;
      21: goto          37
      24: astore_2
      25: aload_0
      26: aconst_null
      27: putfield      #71                 // Field _out:Ljava/io/OutputStream;
      30: aload_0
      31: aconst_null
      32: putfield      #42                 // Field _file:Ljava/io/File;
      35: aload_2
      36: athrow
      37: aload_1
      38: monitorexit
      39: goto          47
      42: astore_3
      43: aload_1
      44: monitorexit
      45: aload_3
      46: athrow
      47: ldc           #3                  // class org/eclipse/jetty/util/RolloverFileOutputStream
      49: dup
      50: astore_1
      51: monitorenter
      52: aload_0
      53: getfield      #37                 // Field _rollTask:Lorg/eclipse/jetty/util/RolloverFileOutputStream$RollTask;
      56: ifnull        67
      59: aload_0
      60: getfield      #37                 // Field _rollTask:Lorg/eclipse/jetty/util/RolloverFileOutputStream$RollTask;
      63: invokevirtual #94                 // Method org/eclipse/jetty/util/RolloverFileOutputStream$RollTask.cancel:()Z
      66: pop
      67: aload_1
      68: monitorexit
      69: goto          79
      72: astore        4
      74: aload_1
      75: monitorexit
      76: aload         4
      78: athrow
      79: return
    Exception table:
       from    to  target type
           4    11    24   any
           4    39    42   any
          42    45    42   any
          52    69    72   any
          72    76    72   any

  static java.text.SimpleDateFormat access$100(org.eclipse.jetty.util.RolloverFileOutputStream);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _fileDateFormat:Ljava/text/SimpleDateFormat;
       4: areturn

  static void access$200(org.eclipse.jetty.util.RolloverFileOutputStream, java.time.ZonedDateTime);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method scheduleNextRollover:(Ljava/time/ZonedDateTime;)V
       5: return
}
