Compiled from "PathResource.java"
public class org.eclipse.jetty.util.resource.PathResource extends org.eclipse.jetty.util.resource.Resource {
  private static final org.eclipse.jetty.util.log.Logger LOG;

  private static final java.nio.file.LinkOption[] NO_FOLLOW_LINKS;

  private static final java.nio.file.LinkOption[] FOLLOW_LINKS;

  private final java.nio.file.Path path;

  private final java.nio.file.Path alias;

  private final java.net.URI uri;

  private final boolean belongsToDefaultFileSystem;

  private java.nio.file.Path checkAliasPath();
    Code:
       0: aload_0
       1: getfield      #1                  // Field path:Ljava/nio/file/Path;
       4: astore_1
       5: aload_0
       6: getfield      #2                  // Field uri:Ljava/net/URI;
       9: aload_0
      10: getfield      #1                  // Field path:Ljava/nio/file/Path;
      13: invokeinterface #3,  1            // InterfaceMethod java/nio/file/Path.toUri:()Ljava/net/URI;
      18: invokestatic  #4                  // Method org/eclipse/jetty/util/URIUtil.equalsIgnoreEncodings:(Ljava/net/URI;Ljava/net/URI;)Z
      21: ifne          50
      24: aload_0
      25: getfield      #2                  // Field uri:Ljava/net/URI;
      28: invokestatic  #5                  // Method java/nio/file/Paths.get:(Ljava/net/URI;)Ljava/nio/file/Path;
      31: getstatic     #6                  // Field FOLLOW_LINKS:[Ljava/nio/file/LinkOption;
      34: invokeinterface #7,  2            // InterfaceMethod java/nio/file/Path.toRealPath:([Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;
      39: areturn
      40: astore_2
      41: getstatic     #9                  // Field LOG:Lorg/eclipse/jetty/util/log/Logger;
      44: aload_2
      45: invokeinterface #10,  2           // InterfaceMethod org/eclipse/jetty/util/log/Logger.ignore:(Ljava/lang/Throwable;)V
      50: aload_1
      51: invokeinterface #11,  1           // InterfaceMethod java/nio/file/Path.isAbsolute:()Z
      56: ifne          69
      59: aload_0
      60: getfield      #1                  // Field path:Ljava/nio/file/Path;
      63: invokeinterface #12,  1           // InterfaceMethod java/nio/file/Path.toAbsolutePath:()Ljava/nio/file/Path;
      68: astore_1
      69: aload_0
      70: getfield      #1                  // Field path:Ljava/nio/file/Path;
      73: invokeinterface #13,  1           // InterfaceMethod java/nio/file/Path.normalize:()Ljava/nio/file/Path;
      78: astore_2
      79: aload_1
      80: aload_2
      81: invokestatic  #14                 // Method isSameName:(Ljava/nio/file/Path;Ljava/nio/file/Path;)Z
      84: ifne          89
      87: aload_2
      88: areturn
      89: aload_0
      90: getfield      #1                  // Field path:Ljava/nio/file/Path;
      93: invokestatic  #15                 // Method java/nio/file/Files.isSymbolicLink:(Ljava/nio/file/Path;)Z
      96: ifeq          121
      99: aload_0
     100: getfield      #1                  // Field path:Ljava/nio/file/Path;
     103: invokeinterface #16,  1           // InterfaceMethod java/nio/file/Path.getParent:()Ljava/nio/file/Path;
     108: aload_0
     109: getfield      #1                  // Field path:Ljava/nio/file/Path;
     112: invokestatic  #17                 // Method java/nio/file/Files.readSymbolicLink:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
     115: invokeinterface #18,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
     120: areturn
     121: aload_0
     122: getfield      #1                  // Field path:Ljava/nio/file/Path;
     125: iconst_0
     126: anewarray     #19                 // class java/nio/file/LinkOption
     129: invokestatic  #20                 // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
     132: ifeq          155
     135: aload_1
     136: getstatic     #6                  // Field FOLLOW_LINKS:[Ljava/nio/file/LinkOption;
     139: invokeinterface #7,  2            // InterfaceMethod java/nio/file/Path.toRealPath:([Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;
     144: astore_3
     145: aload_1
     146: aload_3
     147: invokestatic  #14                 // Method isSameName:(Ljava/nio/file/Path;Ljava/nio/file/Path;)Z
     150: ifne          155
     153: aload_3
     154: areturn
     155: goto          210
     158: astore_3
     159: getstatic     #9                  // Field LOG:Lorg/eclipse/jetty/util/log/Logger;
     162: aload_3
     163: invokeinterface #10,  2           // InterfaceMethod org/eclipse/jetty/util/log/Logger.ignore:(Ljava/lang/Throwable;)V
     168: goto          210
     171: astore_3
     172: getstatic     #9                  // Field LOG:Lorg/eclipse/jetty/util/log/Logger;
     175: ldc           #22                 // String bad alias ({} {}) for {}
     177: iconst_3
     178: anewarray     #23                 // class java/lang/Object
     181: dup
     182: iconst_0
     183: aload_3
     184: invokevirtual #24                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     187: invokevirtual #25                 // Method java/lang/Class.getName:()Ljava/lang/String;
     190: aastore
     191: dup
     192: iconst_1
     193: aload_3
     194: invokevirtual #26                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
     197: aastore
     198: dup
     199: iconst_2
     200: aload_0
     201: getfield      #1                  // Field path:Ljava/nio/file/Path;
     204: aastore
     205: invokeinterface #27,  3           // InterfaceMethod org/eclipse/jetty/util/log/Logger.warn:(Ljava/lang/String;[Ljava/lang/Object;)V
     210: aconst_null
     211: areturn
    Exception table:
       from    to  target type
          24    39    40   Class java/io/IOException
          89   120   158   Class java/io/IOException
         121   154   158   Class java/io/IOException
          89   120   171   Class java/lang/Exception
         121   154   171   Class java/lang/Exception

  public static boolean isSameName(java.nio.file.Path, java.nio.file.Path);
    Code:
       0: aload_0
       1: invokeinterface #28,  1           // InterfaceMethod java/nio/file/Path.getNameCount:()I
       6: istore_2
       7: aload_1
       8: invokeinterface #28,  1           // InterfaceMethod java/nio/file/Path.getNameCount:()I
      13: istore_3
      14: iload_2
      15: iload_3
      16: if_icmpeq     21
      19: iconst_0
      20: ireturn
      21: iload_3
      22: istore        4
      24: iload         4
      26: iinc          4, -1
      29: ifle          66
      32: aload_0
      33: iload         4
      35: invokeinterface #29,  2           // InterfaceMethod java/nio/file/Path.getName:(I)Ljava/nio/file/Path;
      40: invokeinterface #30,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      45: aload_1
      46: iload         4
      48: invokeinterface #29,  2           // InterfaceMethod java/nio/file/Path.getName:(I)Ljava/nio/file/Path;
      53: invokeinterface #30,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      58: invokevirtual #31                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      61: ifne          24
      64: iconst_0
      65: ireturn
      66: iconst_1
      67: ireturn

  public org.eclipse.jetty.util.resource.PathResource(java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #32                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
       5: invokespecial #33                 // Method "<init>":(Ljava/nio/file/Path;)V
       8: return

  public org.eclipse.jetty.util.resource.PathResource(java.nio.file.Path);
    Code:
       0: aload_0
       1: invokespecial #34                 // Method org/eclipse/jetty/util/resource/Resource."<init>":()V
       4: aload_1
       5: astore_2
       6: aload_1
       7: getstatic     #35                 // Field NO_FOLLOW_LINKS:[Ljava/nio/file/LinkOption;
      10: invokeinterface #7,  2            // InterfaceMethod java/nio/file/Path.toRealPath:([Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;
      15: astore_2
      16: goto          53
      19: astore_3
      20: getstatic     #9                  // Field LOG:Lorg/eclipse/jetty/util/log/Logger;
      23: invokeinterface #37,  1           // InterfaceMethod org/eclipse/jetty/util/log/Logger.isDebugEnabled:()Z
      28: ifeq          53
      31: getstatic     #9                  // Field LOG:Lorg/eclipse/jetty/util/log/Logger;
      34: ldc           #38                 // String Unable to get real/canonical path for {}
      36: iconst_2
      37: anewarray     #23                 // class java/lang/Object
      40: dup
      41: iconst_0
      42: aload_1
      43: aastore
      44: dup
      45: iconst_1
      46: aload_3
      47: aastore
      48: invokeinterface #39,  3           // InterfaceMethod org/eclipse/jetty/util/log/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      53: aload_0
      54: aload_2
      55: putfield      #1                  // Field path:Ljava/nio/file/Path;
      58: aload_0
      59: aload_1
      60: invokespecial #40                 // Method assertValidPath:(Ljava/nio/file/Path;)V
      63: aload_0
      64: aload_0
      65: getfield      #1                  // Field path:Ljava/nio/file/Path;
      68: invokeinterface #3,  1            // InterfaceMethod java/nio/file/Path.toUri:()Ljava/net/URI;
      73: putfield      #2                  // Field uri:Ljava/net/URI;
      76: aload_0
      77: aload_0
      78: invokespecial #41                 // Method checkAliasPath:()Ljava/nio/file/Path;
      81: putfield      #42                 // Field alias:Ljava/nio/file/Path;
      84: aload_0
      85: aload_0
      86: getfield      #1                  // Field path:Ljava/nio/file/Path;
      89: invokeinterface #43,  1           // InterfaceMethod java/nio/file/Path.getFileSystem:()Ljava/nio/file/FileSystem;
      94: invokestatic  #44                 // Method java/nio/file/FileSystems.getDefault:()Ljava/nio/file/FileSystem;
      97: if_acmpne     104
     100: iconst_1
     101: goto          105
     104: iconst_0
     105: putfield      #45                 // Field belongsToDefaultFileSystem:Z
     108: return
    Exception table:
       from    to  target type
           6    16    19   Class java/io/IOError
           6    16    19   Class java/io/IOException

  private org.eclipse.jetty.util.resource.PathResource(org.eclipse.jetty.util.resource.PathResource, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #34                 // Method org/eclipse/jetty/util/resource/Resource."<init>":()V
       4: aload_0
       5: aload_1
       6: getfield      #1                  // Field path:Ljava/nio/file/Path;
       9: invokeinterface #43,  1           // InterfaceMethod java/nio/file/Path.getFileSystem:()Ljava/nio/file/FileSystem;
      14: aload_1
      15: getfield      #1                  // Field path:Ljava/nio/file/Path;
      18: invokeinterface #30,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      23: iconst_1
      24: anewarray     #46                 // class java/lang/String
      27: dup
      28: iconst_0
      29: aload_2
      30: aastore
      31: invokevirtual #47                 // Method java/nio/file/FileSystem.getPath:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
      34: putfield      #1                  // Field path:Ljava/nio/file/Path;
      37: aload_0
      38: invokevirtual #48                 // Method isDirectory:()Z
      41: ifeq          73
      44: aload_2
      45: ldc           #49                 // String /
      47: invokevirtual #50                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      50: ifne          73
      53: new           #51                 // class java/lang/StringBuilder
      56: dup
      57: invokespecial #52                 // Method java/lang/StringBuilder."<init>":()V
      60: aload_2
      61: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: ldc           #49                 // String /
      66: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: astore_2
      73: aload_0
      74: aload_1
      75: getfield      #2                  // Field uri:Ljava/net/URI;
      78: aload_2
      79: invokestatic  #55                 // Method org/eclipse/jetty/util/URIUtil.addPath:(Ljava/net/URI;Ljava/lang/String;)Ljava/net/URI;
      82: putfield      #2                  // Field uri:Ljava/net/URI;
      85: aload_0
      86: aload_0
      87: invokespecial #41                 // Method checkAliasPath:()Ljava/nio/file/Path;
      90: putfield      #42                 // Field alias:Ljava/nio/file/Path;
      93: aload_0
      94: aload_0
      95: getfield      #1                  // Field path:Ljava/nio/file/Path;
      98: invokeinterface #43,  1           // InterfaceMethod java/nio/file/Path.getFileSystem:()Ljava/nio/file/FileSystem;
     103: invokestatic  #44                 // Method java/nio/file/FileSystems.getDefault:()Ljava/nio/file/FileSystem;
     106: if_acmpne     113
     109: iconst_1
     110: goto          114
     113: iconst_0
     114: putfield      #45                 // Field belongsToDefaultFileSystem:Z
     117: return

  public org.eclipse.jetty.util.resource.PathResource(java.net.URI) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #34                 // Method org/eclipse/jetty/util/resource/Resource."<init>":()V
       4: aload_1
       5: invokevirtual #56                 // Method java/net/URI.isAbsolute:()Z
       8: ifne          21
      11: new           #57                 // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #58                 // String not an absolute uri
      17: invokespecial #59                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_1
      22: invokevirtual #60                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      25: ldc           #61                 // String file
      27: invokevirtual #62                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      30: ifne          43
      33: new           #57                 // class java/lang/IllegalArgumentException
      36: dup
      37: ldc           #63                 // String not file: scheme
      39: invokespecial #59                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_1
      44: invokestatic  #5                  // Method java/nio/file/Paths.get:(Ljava/net/URI;)Ljava/nio/file/Path;
      47: astore_2
      48: goto          92
      51: astore_3
      52: aload_3
      53: athrow
      54: astore_3
      55: getstatic     #9                  // Field LOG:Lorg/eclipse/jetty/util/log/Logger;
      58: aload_3
      59: invokeinterface #10,  2           // InterfaceMethod org/eclipse/jetty/util/log/Logger.ignore:(Ljava/lang/Throwable;)V
      64: new           #8                  // class java/io/IOException
      67: dup
      68: new           #51                 // class java/lang/StringBuilder
      71: dup
      72: invokespecial #52                 // Method java/lang/StringBuilder."<init>":()V
      75: ldc           #64                 // String Unable to build Path from:
      77: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: aload_1
      81: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      84: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      87: aload_3
      88: invokespecial #66                 // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      91: athrow
      92: aload_0
      93: aload_2
      94: invokeinterface #12,  1           // InterfaceMethod java/nio/file/Path.toAbsolutePath:()Ljava/nio/file/Path;
      99: putfield      #1                  // Field path:Ljava/nio/file/Path;
     102: aload_0
     103: aload_2
     104: invokeinterface #3,  1            // InterfaceMethod java/nio/file/Path.toUri:()Ljava/net/URI;
     109: putfield      #2                  // Field uri:Ljava/net/URI;
     112: aload_0
     113: aload_0
     114: invokespecial #41                 // Method checkAliasPath:()Ljava/nio/file/Path;
     117: putfield      #42                 // Field alias:Ljava/nio/file/Path;
     120: aload_0
     121: aload_0
     122: getfield      #1                  // Field path:Ljava/nio/file/Path;
     125: invokeinterface #43,  1           // InterfaceMethod java/nio/file/Path.getFileSystem:()Ljava/nio/file/FileSystem;
     130: invokestatic  #44                 // Method java/nio/file/FileSystems.getDefault:()Ljava/nio/file/FileSystem;
     133: if_acmpne     140
     136: iconst_1
     137: goto          141
     140: iconst_0
     141: putfield      #45                 // Field belongsToDefaultFileSystem:Z
     144: return
    Exception table:
       from    to  target type
          43    48    51   Class java/lang/IllegalArgumentException
          43    48    54   Class java/lang/Exception

  public org.eclipse.jetty.util.resource.PathResource(java.net.URL) throws java.io.IOException, java.net.URISyntaxException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #67                 // Method java/net/URL.toURI:()Ljava/net/URI;
       5: invokespecial #68                 // Method "<init>":(Ljava/net/URI;)V
       8: return

  public boolean isSame(org.eclipse.jetty.util.resource.Resource);
    Code:
       0: aload_1
       1: instanceof    #69                 // class org/eclipse/jetty/util/resource/PathResource
       4: ifeq          24
       7: aload_1
       8: checkcast     #69                 // class org/eclipse/jetty/util/resource/PathResource
      11: invokevirtual #70                 // Method getPath:()Ljava/nio/file/Path;
      14: astore_2
      15: aload_0
      16: invokevirtual #70                 // Method getPath:()Ljava/nio/file/Path;
      19: aload_2
      20: invokestatic  #71                 // Method java/nio/file/Files.isSameFile:(Ljava/nio/file/Path;Ljava/nio/file/Path;)Z
      23: ireturn
      24: aload_1
      25: instanceof    #72                 // class org/eclipse/jetty/util/resource/FileResource
      28: ifeq          51
      31: aload_1
      32: checkcast     #72                 // class org/eclipse/jetty/util/resource/FileResource
      35: invokevirtual #73                 // Method org/eclipse/jetty/util/resource/FileResource.getFile:()Ljava/io/File;
      38: invokevirtual #32                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
      41: astore_2
      42: aload_0
      43: invokevirtual #70                 // Method getPath:()Ljava/nio/file/Path;
      46: aload_2
      47: invokestatic  #71                 // Method java/nio/file/Files.isSameFile:(Ljava/nio/file/Path;Ljava/nio/file/Path;)Z
      50: ireturn
      51: goto          77
      54: astore_2
      55: getstatic     #9                  // Field LOG:Lorg/eclipse/jetty/util/log/Logger;
      58: invokeinterface #37,  1           // InterfaceMethod org/eclipse/jetty/util/log/Logger.isDebugEnabled:()Z
      63: ifeq          77
      66: getstatic     #9                  // Field LOG:Lorg/eclipse/jetty/util/log/Logger;
      69: ldc           #74                 // String ignored
      71: aload_2
      72: invokeinterface #75,  3           // InterfaceMethod org/eclipse/jetty/util/log/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      77: iconst_0
      78: ireturn
    Exception table:
       from    to  target type
           0    23    54   Class java/io/IOException
          24    50    54   Class java/io/IOException

  public org.eclipse.jetty.util.resource.Resource addPath(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #76                 // Method org/eclipse/jetty/util/URIUtil.canonicalPath:(Ljava/lang/String;)Ljava/lang/String;
       4: ifnonnull     16
       7: new           #77                 // class java/net/MalformedURLException
      10: dup
      11: aload_1
      12: invokespecial #78                 // Method java/net/MalformedURLException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: ldc           #49                 // String /
      18: aload_1
      19: invokevirtual #31                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      22: ifeq          27
      25: aload_0
      26: areturn
      27: new           #69                 // class org/eclipse/jetty/util/resource/PathResource
      30: dup
      31: aload_0
      32: aload_1
      33: invokespecial #79                 // Method "<init>":(Lorg/eclipse/jetty/util/resource/PathResource;Ljava/lang/String;)V
      36: areturn

  private void assertValidPath(java.nio.file.Path);
    Code:
       0: aload_1
       1: invokeinterface #30,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
       6: astore_2
       7: aload_2
       8: invokestatic  #80                 // Method org/eclipse/jetty/util/StringUtil.indexOfControlChars:(Ljava/lang/String;)I
      11: istore_3
      12: iload_3
      13: iflt          44
      16: new           #81                 // class java/nio/file/InvalidPathException
      19: dup
      20: aload_2
      21: new           #51                 // class java/lang/StringBuilder
      24: dup
      25: invokespecial #52                 // Method java/lang/StringBuilder."<init>":()V
      28: ldc           #82                 // String Invalid Character at index
      30: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: iload_3
      34: invokevirtual #83                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      37: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokespecial #84                 // Method java/nio/file/InvalidPathException."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      43: athrow
      44: return

  public void close();
    Code:
       0: return

  public boolean delete() throws java.lang.SecurityException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field path:Ljava/nio/file/Path;
       4: invokestatic  #85                 // Method java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z
       7: ireturn
       8: astore_1
       9: getstatic     #9                  // Field LOG:Lorg/eclipse/jetty/util/log/Logger;
      12: aload_1
      13: invokeinterface #10,  2           // InterfaceMethod org/eclipse/jetty/util/log/Logger.ignore:(Ljava/lang/Throwable;)V
      18: iconst_0
      19: ireturn
    Exception table:
       from    to  target type
           0     7     8   Class java/io/IOException

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: invokevirtual #24                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: aload_1
      18: invokevirtual #24                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: if_acmpeq     26
      24: iconst_0
      25: ireturn
      26: aload_1
      27: checkcast     #69                 // class org/eclipse/jetty/util/resource/PathResource
      30: astore_2
      31: aload_0
      32: getfield      #1                  // Field path:Ljava/nio/file/Path;
      35: ifnonnull     51
      38: aload_2
      39: getfield      #1                  // Field path:Ljava/nio/file/Path;
      42: ifnonnull     49
      45: iconst_1
      46: goto          50
      49: iconst_0
      50: ireturn
      51: aload_0
      52: getfield      #1                  // Field path:Ljava/nio/file/Path;
      55: aload_2
      56: getfield      #1                  // Field path:Ljava/nio/file/Path;
      59: invokeinterface #86,  2           // InterfaceMethod java/nio/file/Path.equals:(Ljava/lang/Object;)Z
      64: ireturn

  public boolean exists();
    Code:
       0: aload_0
       1: getfield      #1                  // Field path:Ljava/nio/file/Path;
       4: getstatic     #35                 // Field NO_FOLLOW_LINKS:[Ljava/nio/file/LinkOption;
       7: invokestatic  #20                 // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      10: ireturn

  public java.io.File getFile() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #45                 // Field belongsToDefaultFileSystem:Z
       4: ifne          9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #1                  // Field path:Ljava/nio/file/Path;
      13: invokeinterface #87,  1           // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
      18: areturn

  public java.nio.file.Path getPath();
    Code:
       0: aload_0
       1: getfield      #1                  // Field path:Ljava/nio/file/Path;
       4: areturn

  public java.io.InputStream getInputStream() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field path:Ljava/nio/file/Path;
       4: iconst_1
       5: anewarray     #88                 // class java/nio/file/OpenOption
       8: dup
       9: iconst_0
      10: getstatic     #89                 // Field java/nio/file/StandardOpenOption.READ:Ljava/nio/file/StandardOpenOption;
      13: aastore
      14: invokestatic  #90                 // Method java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;
      17: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #1                  // Field path:Ljava/nio/file/Path;
       4: invokeinterface #12,  1           // InterfaceMethod java/nio/file/Path.toAbsolutePath:()Ljava/nio/file/Path;
       9: invokeinterface #30,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      14: areturn

  public java.nio.channels.ReadableByteChannel getReadableByteChannel() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #91                 // Method newSeekableByteChannel:()Ljava/nio/channels/SeekableByteChannel;
       4: areturn

  public java.nio.channels.SeekableByteChannel newSeekableByteChannel() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field path:Ljava/nio/file/Path;
       4: iconst_1
       5: anewarray     #88                 // class java/nio/file/OpenOption
       8: dup
       9: iconst_0
      10: getstatic     #89                 // Field java/nio/file/StandardOpenOption.READ:Ljava/nio/file/StandardOpenOption;
      13: aastore
      14: invokestatic  #92                 // Method java/nio/file/Files.newByteChannel:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;
      17: areturn

  public java.net.URI getURI();
    Code:
       0: aload_0
       1: getfield      #2                  // Field uri:Ljava/net/URI;
       4: areturn

  public java.net.URL getURL();
    Code:
       0: aload_0
       1: getfield      #1                  // Field path:Ljava/nio/file/Path;
       4: invokeinterface #3,  1            // InterfaceMethod java/nio/file/Path.toUri:()Ljava/net/URI;
       9: invokevirtual #93                 // Method java/net/URI.toURL:()Ljava/net/URL;
      12: areturn
      13: astore_1
      14: aconst_null
      15: areturn
    Exception table:
       from    to  target type
           0    12    13   Class java/net/MalformedURLException

  public int hashCode();
    Code:
       0: bipush        31
       2: istore_1
       3: iconst_1
       4: istore_2
       5: bipush        31
       7: iload_2
       8: imul
       9: aload_0
      10: getfield      #1                  // Field path:Ljava/nio/file/Path;
      13: ifnonnull     20
      16: iconst_0
      17: goto          29
      20: aload_0
      21: getfield      #1                  // Field path:Ljava/nio/file/Path;
      24: invokeinterface #94,  1           // InterfaceMethod java/nio/file/Path.hashCode:()I
      29: iadd
      30: istore_2
      31: iload_2
      32: ireturn

  public boolean isContainedIn(org.eclipse.jetty.util.resource.Resource) throws java.net.MalformedURLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean isDirectory();
    Code:
       0: aload_0
       1: getfield      #1                  // Field path:Ljava/nio/file/Path;
       4: getstatic     #6                  // Field FOLLOW_LINKS:[Ljava/nio/file/LinkOption;
       7: invokestatic  #95                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      10: ireturn

  public long lastModified();
    Code:
       0: aload_0
       1: getfield      #1                  // Field path:Ljava/nio/file/Path;
       4: getstatic     #6                  // Field FOLLOW_LINKS:[Ljava/nio/file/LinkOption;
       7: invokestatic  #96                 // Method java/nio/file/Files.getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;
      10: astore_1
      11: aload_1
      12: invokevirtual #97                 // Method java/nio/file/attribute/FileTime.toMillis:()J
      15: lreturn
      16: astore_1
      17: getstatic     #9                  // Field LOG:Lorg/eclipse/jetty/util/log/Logger;
      20: aload_1
      21: invokeinterface #10,  2           // InterfaceMethod org/eclipse/jetty/util/log/Logger.ignore:(Ljava/lang/Throwable;)V
      26: lconst_0
      27: lreturn
    Exception table:
       from    to  target type
           0    15    16   Class java/io/IOException

  public long length();
    Code:
       0: aload_0
       1: getfield      #1                  // Field path:Ljava/nio/file/Path;
       4: invokestatic  #98                 // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J
       7: lreturn
       8: astore_1
       9: lconst_0
      10: lreturn
    Exception table:
       from    to  target type
           0     7     8   Class java/io/IOException

  public boolean isAlias();
    Code:
       0: aload_0
       1: getfield      #42                 // Field alias:Ljava/nio/file/Path;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public java.nio.file.Path getAliasPath();
    Code:
       0: aload_0
       1: getfield      #42                 // Field alias:Ljava/nio/file/Path;
       4: areturn

  public java.net.URI getAlias();
    Code:
       0: aload_0
       1: getfield      #42                 // Field alias:Ljava/nio/file/Path;
       4: ifnonnull     11
       7: aconst_null
       8: goto          20
      11: aload_0
      12: getfield      #42                 // Field alias:Ljava/nio/file/Path;
      15: invokeinterface #3,  1            // InterfaceMethod java/nio/file/Path.toUri:()Ljava/net/URI;
      20: areturn

  public java.lang.String[] list();
    Code:
       0: aload_0
       1: getfield      #1                  // Field path:Ljava/nio/file/Path;
       4: invokestatic  #99                 // Method java/nio/file/Files.newDirectoryStream:(Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;
       7: astore_1
       8: new           #100                // class java/util/ArrayList
      11: dup
      12: invokespecial #101                // Method java/util/ArrayList."<init>":()V
      15: astore_2
      16: aload_1
      17: invokeinterface #102,  1          // InterfaceMethod java/nio/file/DirectoryStream.iterator:()Ljava/util/Iterator;
      22: astore_3
      23: aload_3
      24: invokeinterface #103,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          103
      32: aload_3
      33: invokeinterface #104,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #105                // class java/nio/file/Path
      41: astore        4
      43: aload         4
      45: invokeinterface #106,  1          // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;
      50: invokeinterface #30,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      55: astore        5
      57: aload         4
      59: iconst_0
      60: anewarray     #19                 // class java/nio/file/LinkOption
      63: invokestatic  #95                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      66: ifeq          91
      69: new           #51                 // class java/lang/StringBuilder
      72: dup
      73: invokespecial #52                 // Method java/lang/StringBuilder."<init>":()V
      76: aload         5
      78: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: ldc           #49                 // String /
      83: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: astore        5
      91: aload_2
      92: aload         5
      94: invokeinterface #107,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      99: pop
     100: goto          23
     103: aload_2
     104: invokeinterface #108,  1          // InterfaceMethod java/util/List.size:()I
     109: istore_3
     110: aload_2
     111: iload_3
     112: anewarray     #46                 // class java/lang/String
     115: invokeinterface #109,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     120: checkcast     #110                // class "[Ljava/lang/String;"
     123: astore        4
     125: aload_1
     126: ifnull        135
     129: aload_1
     130: invokeinterface #111,  1          // InterfaceMethod java/nio/file/DirectoryStream.close:()V
     135: aload         4
     137: areturn
     138: astore_2
     139: aload_1
     140: ifnull        158
     143: aload_1
     144: invokeinterface #111,  1          // InterfaceMethod java/nio/file/DirectoryStream.close:()V
     149: goto          158
     152: astore_3
     153: aload_2
     154: aload_3
     155: invokevirtual #113                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     158: aload_2
     159: athrow
     160: astore_1
     161: getstatic     #9                  // Field LOG:Lorg/eclipse/jetty/util/log/Logger;
     164: aload_1
     165: invokeinterface #115,  2          // InterfaceMethod org/eclipse/jetty/util/log/Logger.debug:(Ljava/lang/Throwable;)V
     170: aconst_null
     171: areturn
    Exception table:
       from    to  target type
           8   125   138   Class java/lang/Throwable
         143   149   152   Class java/lang/Throwable
           0   135   160   Class java/nio/file/DirectoryIteratorException
           0   135   160   Class java/io/IOException
         138   160   160   Class java/nio/file/DirectoryIteratorException
         138   160   160   Class java/io/IOException

  public boolean renameTo(org.eclipse.jetty.util.resource.Resource) throws java.lang.SecurityException;
    Code:
       0: aload_1
       1: instanceof    #69                 // class org/eclipse/jetty/util/resource/PathResource
       4: ifeq          48
       7: aload_1
       8: checkcast     #69                 // class org/eclipse/jetty/util/resource/PathResource
      11: astore_2
      12: aload_0
      13: getfield      #1                  // Field path:Ljava/nio/file/Path;
      16: aload_2
      17: getfield      #1                  // Field path:Ljava/nio/file/Path;
      20: iconst_0
      21: anewarray     #116                // class java/nio/file/CopyOption
      24: invokestatic  #117                // Method java/nio/file/Files.move:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
      27: astore_3
      28: aload_3
      29: getstatic     #35                 // Field NO_FOLLOW_LINKS:[Ljava/nio/file/LinkOption;
      32: invokestatic  #20                 // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      35: ireturn
      36: astore_3
      37: getstatic     #9                  // Field LOG:Lorg/eclipse/jetty/util/log/Logger;
      40: aload_3
      41: invokeinterface #10,  2           // InterfaceMethod org/eclipse/jetty/util/log/Logger.ignore:(Ljava/lang/Throwable;)V
      46: iconst_0
      47: ireturn
      48: iconst_0
      49: ireturn
    Exception table:
       from    to  target type
          12    35    36   Class java/io/IOException

  public void copyTo(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method isDirectory:()Z
       4: ifeq          23
       7: aload_0
       8: getfield      #1                  // Field path:Ljava/nio/file/Path;
      11: invokeinterface #87,  1           // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
      16: aload_1
      17: invokestatic  #118                // Method org/eclipse/jetty/util/IO.copyDir:(Ljava/io/File;Ljava/io/File;)V
      20: goto          39
      23: aload_0
      24: getfield      #1                  // Field path:Ljava/nio/file/Path;
      27: aload_1
      28: invokevirtual #32                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
      31: iconst_0
      32: anewarray     #116                // class java/nio/file/CopyOption
      35: invokestatic  #119                // Method java/nio/file/Files.copy:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
      38: pop
      39: return

  public void writeTo(java.io.OutputStream, long, long) throws java.io.IOException;
    Code:
       0: lload         4
       2: lstore        6
       4: lload         4
       6: lconst_0
       7: lcmp
       8: ifge          22
      11: aload_0
      12: getfield      #1                  // Field path:Ljava/nio/file/Path;
      15: invokestatic  #98                 // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J
      18: lload_2
      19: lsub
      20: lstore        6
      22: aload_0
      23: getfield      #1                  // Field path:Ljava/nio/file/Path;
      26: iconst_1
      27: anewarray     #88                 // class java/nio/file/OpenOption
      30: dup
      31: iconst_0
      32: getstatic     #89                 // Field java/nio/file/StandardOpenOption.READ:Ljava/nio/file/StandardOpenOption;
      35: aastore
      36: invokestatic  #92                 // Method java/nio/file/Files.newByteChannel:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;
      39: astore        8
      41: ldc           #121                // int 65536
      43: invokestatic  #122                // Method org/eclipse/jetty/util/BufferUtil.allocate:(I)Ljava/nio/ByteBuffer;
      46: astore        9
      48: aload_0
      49: aload         8
      51: aload         9
      53: lload_2
      54: invokespecial #123                // Method skipTo:(Ljava/nio/channels/SeekableByteChannel;Ljava/nio/ByteBuffer;J)V
      57: lconst_0
      58: lstore        10
      60: lload         10
      62: lload         6
      64: lcmp
      65: ifge          129
      68: aload         9
      70: invokestatic  #124                // Method org/eclipse/jetty/util/BufferUtil.clearToFill:(Ljava/nio/ByteBuffer;)V
      73: ldc2_w        #125                // long 65536l
      76: lload         6
      78: lload         10
      80: lsub
      81: invokestatic  #127                // Method java/lang/Math.min:(JJ)J
      84: l2i
      85: istore        12
      87: aload         9
      89: iload         12
      91: invokevirtual #128                // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      94: pop
      95: aload         8
      97: aload         9
      99: invokeinterface #129,  2          // InterfaceMethod java/nio/channels/SeekableByteChannel.read:(Ljava/nio/ByteBuffer;)I
     104: istore        13
     106: aload         9
     108: iconst_0
     109: invokestatic  #130                // Method org/eclipse/jetty/util/BufferUtil.flipToFlush:(Ljava/nio/ByteBuffer;I)V
     112: aload         9
     114: aload_1
     115: invokestatic  #131                // Method org/eclipse/jetty/util/BufferUtil.writeTo:(Ljava/nio/ByteBuffer;Ljava/io/OutputStream;)V
     118: lload         10
     120: iload         13
     122: i2l
     123: ladd
     124: lstore        10
     126: goto          60
     129: aload         8
     131: ifnull        173
     134: aload         8
     136: invokeinterface #132,  1          // InterfaceMethod java/nio/channels/SeekableByteChannel.close:()V
     141: goto          173
     144: astore        9
     146: aload         8
     148: ifnull        170
     151: aload         8
     153: invokeinterface #132,  1          // InterfaceMethod java/nio/channels/SeekableByteChannel.close:()V
     158: goto          170
     161: astore        10
     163: aload         9
     165: aload         10
     167: invokevirtual #113                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     170: aload         9
     172: athrow
     173: return
    Exception table:
       from    to  target type
          41   129   144   Class java/lang/Throwable
         151   158   161   Class java/lang/Throwable

  private void skipTo(java.nio.channels.SeekableByteChannel, java.nio.ByteBuffer, long) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokeinterface #133,  1          // InterfaceMethod java/nio/channels/SeekableByteChannel.position:()J
       6: lload_3
       7: lcmp
       8: ifeq          19
      11: aload_1
      12: lload_3
      13: invokeinterface #134,  3          // InterfaceMethod java/nio/channels/SeekableByteChannel.position:(J)Ljava/nio/channels/SeekableByteChannel;
      18: pop
      19: goto          163
      22: astore        5
      24: iconst_3
      25: istore        6
      27: lload_3
      28: lconst_0
      29: lcmp
      30: ifle          163
      33: lconst_0
      34: lstore        7
      36: iconst_3
      37: istore        11
      39: iload         11
      41: ifle          131
      44: lload         7
      46: lload_3
      47: lcmp
      48: ifge          131
      51: aload_2
      52: invokestatic  #124                // Method org/eclipse/jetty/util/BufferUtil.clearToFill:(Ljava/nio/ByteBuffer;)V
      55: ldc2_w        #125                // long 65536l
      58: lload_3
      59: lload         7
      61: lsub
      62: invokestatic  #127                // Method java/lang/Math.min:(JJ)J
      65: l2i
      66: istore        12
      68: aload_2
      69: iload         12
      71: invokevirtual #128                // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      74: pop
      75: aload_1
      76: aload_2
      77: invokeinterface #129,  2          // InterfaceMethod java/nio/channels/SeekableByteChannel.read:(Ljava/nio/ByteBuffer;)I
      82: i2l
      83: lstore        9
      85: lload         9
      87: lconst_0
      88: lcmp
      89: ifne          98
      92: iinc          11, -1
      95: goto          128
      98: lload         9
     100: lconst_0
     101: lcmp
     102: ifle          118
     105: lload         7
     107: lload         9
     109: ladd
     110: lstore        7
     112: iconst_3
     113: istore        11
     115: goto          128
     118: new           #8                  // class java/io/IOException
     121: dup
     122: ldc           #136                // String EOF reached before SeekableByteChannel skip destination
     124: invokespecial #137                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     127: athrow
     128: goto          39
     131: iload         11
     133: ifgt          163
     136: new           #8                  // class java/io/IOException
     139: dup
     140: new           #51                 // class java/lang/StringBuilder
     143: dup
     144: invokespecial #52                 // Method java/lang/StringBuilder."<init>":()V
     147: ldc           #138                // String No progress made to reach SeekableByteChannel skip position
     149: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: lload_3
     153: invokevirtual #139                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     156: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     159: invokespecial #137                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     162: athrow
     163: return
    Exception table:
       from    to  target type
           0    19    22   Class java/lang/UnsupportedOperationException

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field uri:Ljava/net/URI;
       4: invokevirtual #140                // Method java/net/URI.toASCIIString:()Ljava/lang/String;
       7: areturn

  static {};
    Code:
       0: ldc           #69                 // class org/eclipse/jetty/util/resource/PathResource
       2: invokestatic  #141                // Method org/eclipse/jetty/util/log/Log.getLogger:(Ljava/lang/Class;)Lorg/eclipse/jetty/util/log/Logger;
       5: putstatic     #9                  // Field LOG:Lorg/eclipse/jetty/util/log/Logger;
       8: iconst_1
       9: anewarray     #19                 // class java/nio/file/LinkOption
      12: dup
      13: iconst_0
      14: getstatic     #142                // Field java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;
      17: aastore
      18: putstatic     #35                 // Field NO_FOLLOW_LINKS:[Ljava/nio/file/LinkOption;
      21: iconst_0
      22: anewarray     #19                 // class java/nio/file/LinkOption
      25: putstatic     #6                  // Field FOLLOW_LINKS:[Ljava/nio/file/LinkOption;
      28: return
}
