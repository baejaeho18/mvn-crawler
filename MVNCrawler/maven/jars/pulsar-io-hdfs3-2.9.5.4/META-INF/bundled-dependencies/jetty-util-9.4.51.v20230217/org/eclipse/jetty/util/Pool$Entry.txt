Compiled from "Pool.java"
public abstract class org.eclipse.jetty.util.Pool$Entry {
  private T pooled;

  final org.eclipse.jetty.util.Pool this$0;

  public org.eclipse.jetty.util.Pool$Entry(org.eclipse.jetty.util.Pool);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/eclipse/jetty/util/Pool;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: return

  public boolean enable(T, boolean);
    Code:
       0: aload_1
       1: invokestatic  #4                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: invokevirtual #5                  // Method isReserved:()Z
       9: ifne          48
      12: aload_0
      13: invokevirtual #6                  // Method isClosed:()Z
      16: ifeq          21
      19: iconst_0
      20: ireturn
      21: new           #7                  // class java/lang/IllegalStateException
      24: dup
      25: new           #8                  // class java/lang/StringBuilder
      28: dup
      29: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      32: ldc           #10                 // String Entry already enabled:
      34: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_0
      38: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      41: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokespecial #14                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: aload_0
      49: aload_1
      50: putfield      #1                  // Field pooled:Ljava/lang/Object;
      53: aload_0
      54: iload_2
      55: invokevirtual #15                 // Method tryEnable:(Z)Z
      58: ifeq          63
      61: iconst_1
      62: ireturn
      63: aload_0
      64: aconst_null
      65: putfield      #1                  // Field pooled:Ljava/lang/Object;
      68: aload_0
      69: invokevirtual #6                  // Method isClosed:()Z
      72: ifeq          77
      75: iconst_0
      76: ireturn
      77: new           #7                  // class java/lang/IllegalStateException
      80: dup
      81: new           #8                  // class java/lang/StringBuilder
      84: dup
      85: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      88: ldc           #10                 // String Entry already enabled:
      90: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: aload_0
      94: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      97: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     100: invokespecial #14                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     103: athrow

  public T getPooled();
    Code:
       0: aload_0
       1: getfield      #1                  // Field pooled:Ljava/lang/Object;
       4: areturn

  public boolean release();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/eclipse/jetty/util/Pool;
       4: aload_0
       5: invokevirtual #16                 // Method org/eclipse/jetty/util/Pool.release:(Lorg/eclipse/jetty/util/Pool$Entry;)Z
       8: ireturn

  public boolean remove();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/eclipse/jetty/util/Pool;
       4: aload_0
       5: invokevirtual #17                 // Method org/eclipse/jetty/util/Pool.remove:(Lorg/eclipse/jetty/util/Pool$Entry;)Z
       8: ireturn

  abstract boolean tryEnable(boolean);

  abstract boolean tryAcquire();

  abstract boolean tryRelease();

  abstract boolean tryRemove();

  public abstract boolean isClosed();

  public abstract boolean isReserved();

  public abstract boolean isIdle();

  public abstract boolean isInUse();

  public boolean isOverUsed();
    Code:
       0: iconst_0
       1: ireturn

  boolean isIdleAndOverUsed();
    Code:
       0: iconst_0
       1: ireturn

  int getUsageCount();
    Code:
       0: iconst_0
       1: ireturn

  void setUsageCount(int);
    Code:
       0: return

  static java.lang.Object access$100(org.eclipse.jetty.util.Pool$Entry);
    Code:
       0: aload_0
       1: getfield      #1                  // Field pooled:Ljava/lang/Object;
       4: areturn
}
