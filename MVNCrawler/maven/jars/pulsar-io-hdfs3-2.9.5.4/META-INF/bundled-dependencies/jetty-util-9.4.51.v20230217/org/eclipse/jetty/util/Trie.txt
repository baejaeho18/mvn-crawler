Compiled from "Trie.java"
public interface org.eclipse.jetty.util.Trie<V> {
  public abstract boolean put(java.lang.String, V);

  public abstract boolean put(V);

  public abstract V remove(java.lang.String);

  public abstract V get(java.lang.String);

  public abstract V get(java.lang.String, int, int);

  public abstract V get(java.nio.ByteBuffer);

  public abstract V get(java.nio.ByteBuffer, int, int);

  public abstract V getBest(java.lang.String);

  public abstract V getBest(java.lang.String, int, int);

  public abstract V getBest(byte[], int, int);

  public default V getBest(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokeinterface #1,  4            // InterfaceMethod getBest:([BII)Ljava/lang/Object;
      10: areturn

  public abstract V getBest(java.nio.ByteBuffer, int, int);

  public default V getBest(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: invokevirtual #2                  // Method java/nio/ByteBuffer.remaining:()I
       7: invokeinterface #3,  4            // InterfaceMethod getBest:(Ljava/nio/ByteBuffer;II)Ljava/lang/Object;
      12: areturn

  public abstract java.util.Set<java.lang.String> keySet();

  public abstract boolean isFull();

  public abstract boolean isCaseInsensitive();

  public abstract void clear();

  public static <T> org.eclipse.jetty.util.Trie<T> empty(boolean);
    Code:
       0: new           #4                  // class org/eclipse/jetty/util/Trie$1
       3: dup
       4: iload_0
       5: invokespecial #5                  // Method org/eclipse/jetty/util/Trie$1."<init>":(Z)V
       8: areturn
}
