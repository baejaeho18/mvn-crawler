Compiled from "DeflaterPool.java"
public class org.eclipse.jetty.util.compression.DeflaterPool extends org.eclipse.jetty.util.compression.CompressionPool<java.util.zip.Deflater> {
  private final int compressionLevel;

  private final boolean nowrap;

  public org.eclipse.jetty.util.compression.DeflaterPool(int, int, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #1                  // Method org/eclipse/jetty/util/compression/CompressionPool."<init>":(I)V
       5: aload_0
       6: iload_2
       7: putfield      #2                  // Field compressionLevel:I
      10: aload_0
      11: iload_3
      12: putfield      #3                  // Field nowrap:Z
      15: return

  protected java.util.zip.Deflater newObject();
    Code:
       0: new           #4                  // class java/util/zip/Deflater
       3: dup
       4: aload_0
       5: getfield      #2                  // Field compressionLevel:I
       8: aload_0
       9: getfield      #3                  // Field nowrap:Z
      12: invokespecial #5                  // Method java/util/zip/Deflater."<init>":(IZ)V
      15: areturn

  protected void end(java.util.zip.Deflater);
    Code:
       0: aload_1
       1: invokevirtual #6                  // Method java/util/zip/Deflater.end:()V
       4: return

  protected void reset(java.util.zip.Deflater);
    Code:
       0: aload_1
       1: invokevirtual #7                  // Method java/util/zip/Deflater.reset:()V
       4: return

  public static org.eclipse.jetty.util.compression.DeflaterPool ensurePool(org.eclipse.jetty.util.component.Container);
    Code:
       0: aload_0
       1: ldc           #8                  // class org/eclipse/jetty/util/compression/DeflaterPool
       3: invokeinterface #9,  2            // InterfaceMethod org/eclipse/jetty/util/component/Container.getBean:(Ljava/lang/Class;)Ljava/lang/Object;
       8: checkcast     #8                  // class org/eclipse/jetty/util/compression/DeflaterPool
      11: astore_1
      12: aload_1
      13: ifnull        18
      16: aload_1
      17: areturn
      18: iconst_m1
      19: istore_2
      20: aload_0
      21: ldc           #11                 // class org/eclipse/jetty/util/thread/ThreadPool$SizedThreadPool
      23: invokeinterface #9,  2            // InterfaceMethod org/eclipse/jetty/util/component/Container.getBean:(Ljava/lang/Class;)Ljava/lang/Object;
      28: checkcast     #11                 // class org/eclipse/jetty/util/thread/ThreadPool$SizedThreadPool
      31: astore_3
      32: aload_3
      33: ifnull        43
      36: aload_3
      37: invokeinterface #12,  1           // InterfaceMethod org/eclipse/jetty/util/thread/ThreadPool$SizedThreadPool.getMaxThreads:()I
      42: istore_2
      43: new           #8                  // class org/eclipse/jetty/util/compression/DeflaterPool
      46: dup
      47: iload_2
      48: iconst_m1
      49: iconst_1
      50: invokespecial #13                 // Method "<init>":(IIZ)V
      53: astore_1
      54: aload_0
      55: aload_1
      56: iconst_1
      57: invokeinterface #14,  3           // InterfaceMethod org/eclipse/jetty/util/component/Container.addBean:(Ljava/lang/Object;Z)Z
      62: pop
      63: aload_1
      64: areturn

  protected void reset(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #4                  // class java/util/zip/Deflater
       5: invokevirtual #15                 // Method reset:(Ljava/util/zip/Deflater;)V
       8: return

  protected void end(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #4                  // class java/util/zip/Deflater
       5: invokevirtual #16                 // Method end:(Ljava/util/zip/Deflater;)V
       8: return

  protected java.lang.Object newObject();
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method newObject:()Ljava/util/zip/Deflater;
       4: areturn
}
