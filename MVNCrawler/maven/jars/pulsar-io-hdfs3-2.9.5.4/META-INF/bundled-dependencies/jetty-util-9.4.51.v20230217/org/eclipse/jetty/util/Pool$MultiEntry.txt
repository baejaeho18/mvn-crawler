Compiled from "Pool.java"
class org.eclipse.jetty.util.Pool$MultiEntry extends org.eclipse.jetty.util.Pool<T>.Entry {
  private final org.eclipse.jetty.util.AtomicBiInteger state;

  final org.eclipse.jetty.util.Pool this$0;

  org.eclipse.jetty.util.Pool$MultiEntry(org.eclipse.jetty.util.Pool);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/eclipse/jetty/util/Pool;
       5: aload_0
       6: aload_1
       7: invokespecial #2                  // Method org/eclipse/jetty/util/Pool$Entry."<init>":(Lorg/eclipse/jetty/util/Pool;)V
      10: aload_0
      11: new           #3                  // class org/eclipse/jetty/util/AtomicBiInteger
      14: dup
      15: ldc           #5                  // int -2147483648
      17: iconst_0
      18: invokespecial #6                  // Method org/eclipse/jetty/util/AtomicBiInteger."<init>":(II)V
      21: putfield      #7                  // Field state:Lorg/eclipse/jetty/util/AtomicBiInteger;
      24: return

  void setUsageCount(int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:Lorg/eclipse/jetty/util/AtomicBiInteger;
       4: iload_1
       5: invokevirtual #8                  // Method org/eclipse/jetty/util/AtomicBiInteger.getAndSetHi:(I)I
       8: pop
       9: return

  protected boolean tryEnable(boolean);
    Code:
       0: iload_1
       1: ifeq          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: istore_2
      10: aload_0
      11: getfield      #7                  // Field state:Lorg/eclipse/jetty/util/AtomicBiInteger;
      14: ldc           #5                  // int -2147483648
      16: iload_2
      17: iconst_0
      18: iload_2
      19: invokevirtual #9                  // Method org/eclipse/jetty/util/AtomicBiInteger.compareAndSet:(IIII)Z
      22: ireturn

  boolean tryAcquire();
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:Lorg/eclipse/jetty/util/AtomicBiInteger;
       4: invokevirtual #10                 // Method org/eclipse/jetty/util/AtomicBiInteger.get:()J
       7: lstore_1
       8: lload_1
       9: invokestatic  #11                 // Method org/eclipse/jetty/util/AtomicBiInteger.getHi:(J)I
      12: istore_3
      13: lload_1
      14: invokestatic  #12                 // Method org/eclipse/jetty/util/AtomicBiInteger.getLo:(J)I
      17: istore        4
      19: iload_3
      20: ifge          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: istore        5
      30: iload         5
      32: ifeq          37
      35: iconst_0
      36: ireturn
      37: aload_0
      38: invokevirtual #13                 // Method getPooled:()Ljava/lang/Object;
      41: astore        6
      43: aload_0
      44: getfield      #1                  // Field this$0:Lorg/eclipse/jetty/util/Pool;
      47: aload         6
      49: invokevirtual #14                 // Method org/eclipse/jetty/util/Pool.getMaxUsageCount:(Ljava/lang/Object;)I
      52: istore        7
      54: aload_0
      55: getfield      #1                  // Field this$0:Lorg/eclipse/jetty/util/Pool;
      58: aload         6
      60: invokevirtual #15                 // Method org/eclipse/jetty/util/Pool.getMaxMultiplex:(Ljava/lang/Object;)I
      63: istore        8
      65: iload         8
      67: ifle          79
      70: iload         4
      72: iload         8
      74: if_icmplt     79
      77: iconst_0
      78: ireturn
      79: iload         7
      81: ifle          92
      84: iload_3
      85: iload         7
      87: if_icmplt     92
      90: iconst_0
      91: ireturn
      92: iload_3
      93: ldc           #16                 // int 2147483647
      95: if_icmpne     103
      98: ldc           #16                 // int 2147483647
     100: goto          106
     103: iload_3
     104: iconst_1
     105: iadd
     106: istore        9
     108: aload_0
     109: getfield      #7                  // Field state:Lorg/eclipse/jetty/util/AtomicBiInteger;
     112: lload_1
     113: iload         9
     115: iload         4
     117: iconst_1
     118: iadd
     119: invokevirtual #17                 // Method org/eclipse/jetty/util/AtomicBiInteger.compareAndSet:(JII)Z
     122: ifeq          127
     125: iconst_1
     126: ireturn
     127: goto          0

  boolean tryRelease();
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:Lorg/eclipse/jetty/util/AtomicBiInteger;
       4: invokevirtual #10                 // Method org/eclipse/jetty/util/AtomicBiInteger.get:()J
       7: lstore_3
       8: lload_3
       9: invokestatic  #11                 // Method org/eclipse/jetty/util/AtomicBiInteger.getHi:(J)I
      12: istore_2
      13: iload_2
      14: ifge          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: istore        5
      24: iload         5
      26: ifeq          31
      29: iconst_0
      30: ireturn
      31: lload_3
      32: invokestatic  #12                 // Method org/eclipse/jetty/util/AtomicBiInteger.getLo:(J)I
      35: iconst_1
      36: isub
      37: istore_1
      38: iload_1
      39: ifge          52
      42: new           #18                 // class java/lang/IllegalStateException
      45: dup
      46: ldc           #19                 // String Cannot release an already released entry
      48: invokespecial #20                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: aload_0
      53: getfield      #7                  // Field state:Lorg/eclipse/jetty/util/AtomicBiInteger;
      56: lload_3
      57: iload_2
      58: iload_1
      59: invokevirtual #17                 // Method org/eclipse/jetty/util/AtomicBiInteger.compareAndSet:(JII)Z
      62: ifeq          68
      65: goto          71
      68: goto          0
      71: aload_0
      72: getfield      #1                  // Field this$0:Lorg/eclipse/jetty/util/Pool;
      75: aload_0
      76: invokevirtual #13                 // Method getPooled:()Ljava/lang/Object;
      79: invokevirtual #14                 // Method org/eclipse/jetty/util/Pool.getMaxUsageCount:(Ljava/lang/Object;)I
      82: istore_3
      83: iload_3
      84: ifle          96
      87: iload_2
      88: iload_3
      89: if_icmplt     96
      92: iconst_1
      93: goto          97
      96: iconst_0
      97: istore        4
      99: iload         4
     101: ifeq          108
     104: iload_1
     105: ifeq          112
     108: iconst_1
     109: goto          113
     112: iconst_0
     113: ireturn

  boolean tryRemove();
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:Lorg/eclipse/jetty/util/AtomicBiInteger;
       4: invokevirtual #10                 // Method org/eclipse/jetty/util/AtomicBiInteger.get:()J
       7: lstore_1
       8: lload_1
       9: invokestatic  #11                 // Method org/eclipse/jetty/util/AtomicBiInteger.getHi:(J)I
      12: istore_3
      13: lload_1
      14: invokestatic  #12                 // Method org/eclipse/jetty/util/AtomicBiInteger.getLo:(J)I
      17: istore        4
      19: iload         4
      21: iconst_1
      22: isub
      23: iconst_0
      24: invokestatic  #21                 // Method java/lang/Math.max:(II)I
      27: istore        5
      29: aload_0
      30: getfield      #7                  // Field state:Lorg/eclipse/jetty/util/AtomicBiInteger;
      33: iload_3
      34: iconst_m1
      35: iload         4
      37: iload         5
      39: invokevirtual #9                  // Method org/eclipse/jetty/util/AtomicBiInteger.compareAndSet:(IIII)Z
      42: istore        6
      44: iload         6
      46: ifeq          60
      49: iload         5
      51: ifne          58
      54: iconst_1
      55: goto          59
      58: iconst_0
      59: ireturn
      60: goto          0

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:Lorg/eclipse/jetty/util/AtomicBiInteger;
       4: invokevirtual #22                 // Method org/eclipse/jetty/util/AtomicBiInteger.getHi:()I
       7: ifge          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isReserved();
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:Lorg/eclipse/jetty/util/AtomicBiInteger;
       4: invokevirtual #22                 // Method org/eclipse/jetty/util/AtomicBiInteger.getHi:()I
       7: ldc           #5                  // int -2147483648
       9: if_icmpne     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public boolean isIdle();
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:Lorg/eclipse/jetty/util/AtomicBiInteger;
       4: invokevirtual #10                 // Method org/eclipse/jetty/util/AtomicBiInteger.get:()J
       7: lstore_1
       8: lload_1
       9: invokestatic  #11                 // Method org/eclipse/jetty/util/AtomicBiInteger.getHi:(J)I
      12: iflt          26
      15: lload_1
      16: invokestatic  #12                 // Method org/eclipse/jetty/util/AtomicBiInteger.getLo:(J)I
      19: ifne          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public boolean isInUse();
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:Lorg/eclipse/jetty/util/AtomicBiInteger;
       4: invokevirtual #10                 // Method org/eclipse/jetty/util/AtomicBiInteger.get:()J
       7: lstore_1
       8: lload_1
       9: invokestatic  #11                 // Method org/eclipse/jetty/util/AtomicBiInteger.getHi:(J)I
      12: iflt          26
      15: lload_1
      16: invokestatic  #12                 // Method org/eclipse/jetty/util/AtomicBiInteger.getLo:(J)I
      19: ifle          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public boolean isOverUsed();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/eclipse/jetty/util/Pool;
       4: invokevirtual #23                 // Method org/eclipse/jetty/util/Pool.getMaxUsageCount:()I
       7: istore_1
       8: aload_0
       9: getfield      #7                  // Field state:Lorg/eclipse/jetty/util/AtomicBiInteger;
      12: invokevirtual #22                 // Method org/eclipse/jetty/util/AtomicBiInteger.getHi:()I
      15: istore_2
      16: iload_1
      17: ifle          29
      20: iload_2
      21: iload_1
      22: if_icmplt     29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn

  boolean isIdleAndOverUsed();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/eclipse/jetty/util/Pool;
       4: invokevirtual #23                 // Method org/eclipse/jetty/util/Pool.getMaxUsageCount:()I
       7: istore_1
       8: aload_0
       9: getfield      #7                  // Field state:Lorg/eclipse/jetty/util/AtomicBiInteger;
      12: invokevirtual #10                 // Method org/eclipse/jetty/util/AtomicBiInteger.get:()J
      15: lstore_2
      16: lload_2
      17: invokestatic  #11                 // Method org/eclipse/jetty/util/AtomicBiInteger.getHi:(J)I
      20: istore        4
      22: lload_2
      23: invokestatic  #12                 // Method org/eclipse/jetty/util/AtomicBiInteger.getLo:(J)I
      26: istore        5
      28: iload_1
      29: ifle          47
      32: iload         4
      34: iload_1
      35: if_icmplt     47
      38: iload         5
      40: ifne          47
      43: iconst_1
      44: goto          48
      47: iconst_0
      48: ireturn

  int getUsageCount();
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:Lorg/eclipse/jetty/util/AtomicBiInteger;
       4: invokevirtual #22                 // Method org/eclipse/jetty/util/AtomicBiInteger.getHi:()I
       7: iconst_0
       8: invokestatic  #21                 // Method java/lang/Math.max:(II)I
      11: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:Lorg/eclipse/jetty/util/AtomicBiInteger;
       4: invokevirtual #10                 // Method org/eclipse/jetty/util/AtomicBiInteger.get:()J
       7: lstore_1
       8: lload_1
       9: invokestatic  #11                 // Method org/eclipse/jetty/util/AtomicBiInteger.getHi:(J)I
      12: istore_3
      13: lload_1
      14: invokestatic  #12                 // Method org/eclipse/jetty/util/AtomicBiInteger.getLo:(J)I
      17: istore        4
      19: iload_3
      20: ifge          39
      23: iload_3
      24: ldc           #5                  // int -2147483648
      26: if_icmpne     34
      29: ldc           #24                 // String PENDING
      31: goto          51
      34: ldc           #25                 // String CLOSED
      36: goto          51
      39: iload         4
      41: ifne          49
      44: ldc           #26                 // String IDLE
      46: goto          51
      49: ldc           #27                 // String ACTIVE
      51: astore        5
      53: ldc           #28                 // String %s@%x{%s,usage=%d,multiplex=%d,pooled=%s}
      55: bipush        6
      57: anewarray     #29                 // class java/lang/Object
      60: dup
      61: iconst_0
      62: aload_0
      63: invokevirtual #30                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      66: invokevirtual #31                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      69: aastore
      70: dup
      71: iconst_1
      72: aload_0
      73: invokevirtual #32                 // Method java/lang/Object.hashCode:()I
      76: invokestatic  #33                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      79: aastore
      80: dup
      81: iconst_2
      82: aload         5
      84: aastore
      85: dup
      86: iconst_3
      87: iload_3
      88: iconst_0
      89: invokestatic  #21                 // Method java/lang/Math.max:(II)I
      92: invokestatic  #33                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      95: aastore
      96: dup
      97: iconst_4
      98: iload         4
     100: iconst_0
     101: invokestatic  #21                 // Method java/lang/Math.max:(II)I
     104: invokestatic  #33                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     107: aastore
     108: dup
     109: iconst_5
     110: aload_0
     111: invokevirtual #13                 // Method getPooled:()Ljava/lang/Object;
     114: aastore
     115: invokestatic  #34                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     118: areturn
}
