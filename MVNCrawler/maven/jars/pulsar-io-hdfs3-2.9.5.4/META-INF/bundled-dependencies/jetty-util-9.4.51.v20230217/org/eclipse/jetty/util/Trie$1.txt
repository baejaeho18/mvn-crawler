Compiled from "Trie.java"
class org.eclipse.jetty.util.Trie$1 implements org.eclipse.jetty.util.Trie<T> {
  final boolean val$caseInsensitive;

  org.eclipse.jetty.util.Trie$1(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #1                  // Field val$caseInsensitive:Z
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public boolean put(java.lang.String, java.lang.Object);
    Code:
       0: iconst_0
       1: ireturn

  public boolean put(java.lang.Object);
    Code:
       0: iconst_0
       1: ireturn

  public T remove(java.lang.String);
    Code:
       0: aconst_null
       1: areturn

  public T get(java.lang.String);
    Code:
       0: aconst_null
       1: areturn

  public T get(java.lang.String, int, int);
    Code:
       0: aconst_null
       1: areturn

  public T get(java.nio.ByteBuffer);
    Code:
       0: aconst_null
       1: areturn

  public T get(java.nio.ByteBuffer, int, int);
    Code:
       0: aconst_null
       1: areturn

  public T getBest(java.lang.String);
    Code:
       0: aconst_null
       1: areturn

  public T getBest(java.lang.String, int, int);
    Code:
       0: aconst_null
       1: areturn

  public T getBest(byte[], int, int);
    Code:
       0: aconst_null
       1: areturn

  public T getBest(java.nio.ByteBuffer, int, int);
    Code:
       0: aconst_null
       1: areturn

  public java.util.Set<java.lang.String> keySet();
    Code:
       0: invokestatic  #3                  // Method java/util/Collections.emptySet:()Ljava/util/Set;
       3: areturn

  public boolean isFull();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isCaseInsensitive();
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$caseInsensitive:Z
       4: ireturn

  public void clear();
    Code:
       0: return
}
