Compiled from "Segment.kt"
public final class okio.Segment {
  public final byte[] data;

  public int pos;

  public int limit;

  public boolean shared;

  public boolean owner;

  public okio.Segment next;

  public okio.Segment prev;

  public static final int SIZE;

  public static final int SHARE_MINIMUM;

  public static final okio.Segment$Companion Companion;

  public final okio.Segment sharedCopy();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #22                 // Field shared:Z
       5: new           #2                  // class okio/Segment
       8: dup
       9: aload_0
      10: getfield      #24                 // Field data:[B
      13: aload_0
      14: getfield      #26                 // Field pos:I
      17: aload_0
      18: getfield      #28                 // Field limit:I
      21: iconst_1
      22: iconst_0
      23: invokespecial #32                 // Method "<init>":([BIIZZ)V
      26: areturn

  public final okio.Segment unsharedCopy();
    Code:
       0: new           #2                  // class okio/Segment
       3: dup
       4: aload_0
       5: getfield      #24                 // Field data:[B
       8: astore_1
       9: iconst_0
      10: istore_2
      11: aload_1
      12: aload_1
      13: arraylength
      14: invokestatic  #40                 // Method java/util/Arrays.copyOf:([BI)[B
      17: dup
      18: ldc           #42                 // String java.util.Arrays.copyOf(this, size)
      20: invokestatic  #48                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
      23: aload_0
      24: getfield      #26                 // Field pos:I
      27: aload_0
      28: getfield      #28                 // Field limit:I
      31: iconst_0
      32: iconst_1
      33: invokespecial #32                 // Method "<init>":([BIIZZ)V
      36: areturn

  public final okio.Segment pop();
    Code:
       0: aload_0
       1: getfield      #51                 // Field next:Lokio/Segment;
       4: aload_0
       5: checkcast     #2                  // class okio/Segment
       8: if_acmpeq     18
      11: aload_0
      12: getfield      #51                 // Field next:Lokio/Segment;
      15: goto          19
      18: aconst_null
      19: astore_1
      20: aload_0
      21: getfield      #53                 // Field prev:Lokio/Segment;
      24: dup
      25: invokestatic  #57                 // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
      28: aload_0
      29: getfield      #51                 // Field next:Lokio/Segment;
      32: putfield      #51                 // Field next:Lokio/Segment;
      35: aload_0
      36: getfield      #51                 // Field next:Lokio/Segment;
      39: dup
      40: invokestatic  #57                 // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
      43: aload_0
      44: getfield      #53                 // Field prev:Lokio/Segment;
      47: putfield      #53                 // Field prev:Lokio/Segment;
      50: aload_0
      51: aconst_null
      52: checkcast     #2                  // class okio/Segment
      55: putfield      #51                 // Field next:Lokio/Segment;
      58: aload_0
      59: aconst_null
      60: checkcast     #2                  // class okio/Segment
      63: putfield      #53                 // Field prev:Lokio/Segment;
      66: aload_1
      67: areturn

  public final okio.Segment push(okio.Segment);
    Code:
       0: aload_1
       1: ldc           #62                 // String segment
       3: invokestatic  #65                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: aload_0
       8: checkcast     #2                  // class okio/Segment
      11: putfield      #53                 // Field prev:Lokio/Segment;
      14: aload_1
      15: aload_0
      16: getfield      #51                 // Field next:Lokio/Segment;
      19: putfield      #51                 // Field next:Lokio/Segment;
      22: aload_0
      23: getfield      #51                 // Field next:Lokio/Segment;
      26: dup
      27: invokestatic  #57                 // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
      30: aload_1
      31: putfield      #53                 // Field prev:Lokio/Segment;
      34: aload_0
      35: aload_1
      36: putfield      #51                 // Field next:Lokio/Segment;
      39: aload_1
      40: areturn

  public final okio.Segment split(int);
    Code:
       0: iload_1
       1: ifle          21
       4: iload_1
       5: aload_0
       6: getfield      #28                 // Field limit:I
       9: aload_0
      10: getfield      #26                 // Field pos:I
      13: isub
      14: if_icmpgt     21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: istore_2
      23: iconst_0
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload_2
      29: ifne          55
      32: iconst_0
      33: istore        5
      35: ldc           #69                 // String byteCount out of range
      37: astore        4
      39: new           #71                 // class java/lang/IllegalArgumentException
      42: dup
      43: aload         4
      45: invokevirtual #75                 // Method java/lang/Object.toString:()Ljava/lang/String;
      48: invokespecial #78                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      51: checkcast     #80                 // class java/lang/Throwable
      54: athrow
      55: aconst_null
      56: astore_2
      57: iload_1
      58: sipush        1024
      61: if_icmplt     72
      64: aload_0
      65: invokevirtual #82                 // Method sharedCopy:()Lokio/Segment;
      68: astore_2
      69: goto          101
      72: invokestatic  #87                 // Method okio/SegmentPool.take:()Lokio/Segment;
      75: astore_2
      76: aload_0
      77: getfield      #24                 // Field data:[B
      80: aload_2
      81: getfield      #24                 // Field data:[B
      84: iconst_0
      85: aload_0
      86: getfield      #26                 // Field pos:I
      89: aload_0
      90: getfield      #26                 // Field pos:I
      93: iload_1
      94: iadd
      95: iconst_2
      96: aconst_null
      97: invokestatic  #93                 // Method kotlin/collections/ArraysKt.copyInto$default:([B[BIIIILjava/lang/Object;)[B
     100: pop
     101: aload_2
     102: aload_2
     103: getfield      #26                 // Field pos:I
     106: iload_1
     107: iadd
     108: putfield      #28                 // Field limit:I
     111: aload_0
     112: dup
     113: getfield      #26                 // Field pos:I
     116: iload_1
     117: iadd
     118: putfield      #26                 // Field pos:I
     121: aload_0
     122: getfield      #53                 // Field prev:Lokio/Segment;
     125: dup
     126: invokestatic  #57                 // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
     129: aload_2
     130: invokevirtual #95                 // Method push:(Lokio/Segment;)Lokio/Segment;
     133: pop
     134: aload_2
     135: areturn

  public final void compact();
    Code:
       0: aload_0
       1: getfield      #53                 // Field prev:Lokio/Segment;
       4: aload_0
       5: checkcast     #2                  // class okio/Segment
       8: if_acmpeq     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: istore_1
      17: iconst_0
      18: istore_2
      19: iconst_0
      20: istore_3
      21: iload_1
      22: ifne          46
      25: iconst_0
      26: istore        4
      28: ldc           #102                // String cannot compact
      30: astore_3
      31: new           #104                // class java/lang/IllegalStateException
      34: dup
      35: aload_3
      36: invokevirtual #75                 // Method java/lang/Object.toString:()Ljava/lang/String;
      39: invokespecial #105                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      42: checkcast     #80                 // class java/lang/Throwable
      45: athrow
      46: aload_0
      47: getfield      #53                 // Field prev:Lokio/Segment;
      50: dup
      51: invokestatic  #57                 // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
      54: getfield      #107                // Field owner:Z
      57: ifne          61
      60: return
      61: aload_0
      62: getfield      #28                 // Field limit:I
      65: aload_0
      66: getfield      #26                 // Field pos:I
      69: isub
      70: istore_1
      71: sipush        8192
      74: aload_0
      75: getfield      #53                 // Field prev:Lokio/Segment;
      78: dup
      79: invokestatic  #57                 // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
      82: getfield      #28                 // Field limit:I
      85: isub
      86: aload_0
      87: getfield      #53                 // Field prev:Lokio/Segment;
      90: dup
      91: invokestatic  #57                 // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
      94: getfield      #22                 // Field shared:Z
      97: ifeq          104
     100: iconst_0
     101: goto          115
     104: aload_0
     105: getfield      #53                 // Field prev:Lokio/Segment;
     108: dup
     109: invokestatic  #57                 // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
     112: getfield      #26                 // Field pos:I
     115: iadd
     116: istore_2
     117: iload_1
     118: iload_2
     119: if_icmple     123
     122: return
     123: aload_0
     124: aload_0
     125: getfield      #53                 // Field prev:Lokio/Segment;
     128: dup
     129: invokestatic  #57                 // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
     132: iload_1
     133: invokevirtual #111                // Method writeTo:(Lokio/Segment;I)V
     136: aload_0
     137: invokevirtual #113                // Method pop:()Lokio/Segment;
     140: pop
     141: aload_0
     142: invokestatic  #117                // Method okio/SegmentPool.recycle:(Lokio/Segment;)V
     145: return

  public final void writeTo(okio.Segment, int);
    Code:
       0: aload_1
       1: ldc           #121                // String sink
       3: invokestatic  #65                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: getfield      #107                // Field owner:Z
      10: istore_3
      11: iconst_0
      12: istore        4
      14: iconst_0
      15: istore        5
      17: iload_3
      18: ifne          44
      21: iconst_0
      22: istore        6
      24: ldc           #123                // String only owner can write
      26: astore        5
      28: new           #104                // class java/lang/IllegalStateException
      31: dup
      32: aload         5
      34: invokevirtual #75                 // Method java/lang/Object.toString:()Ljava/lang/String;
      37: invokespecial #105                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      40: checkcast     #80                 // class java/lang/Throwable
      43: athrow
      44: aload_1
      45: getfield      #28                 // Field limit:I
      48: iload_2
      49: iadd
      50: sipush        8192
      53: if_icmple     143
      56: aload_1
      57: getfield      #22                 // Field shared:Z
      60: ifeq          74
      63: new           #71                 // class java/lang/IllegalArgumentException
      66: dup
      67: invokespecial #125                // Method java/lang/IllegalArgumentException."<init>":()V
      70: checkcast     #80                 // class java/lang/Throwable
      73: athrow
      74: aload_1
      75: getfield      #28                 // Field limit:I
      78: iload_2
      79: iadd
      80: aload_1
      81: getfield      #26                 // Field pos:I
      84: isub
      85: sipush        8192
      88: if_icmple     102
      91: new           #71                 // class java/lang/IllegalArgumentException
      94: dup
      95: invokespecial #125                // Method java/lang/IllegalArgumentException."<init>":()V
      98: checkcast     #80                 // class java/lang/Throwable
     101: athrow
     102: aload_1
     103: getfield      #24                 // Field data:[B
     106: aload_1
     107: getfield      #24                 // Field data:[B
     110: iconst_0
     111: aload_1
     112: getfield      #26                 // Field pos:I
     115: aload_1
     116: getfield      #28                 // Field limit:I
     119: iconst_2
     120: aconst_null
     121: invokestatic  #93                 // Method kotlin/collections/ArraysKt.copyInto$default:([B[BIIIILjava/lang/Object;)[B
     124: pop
     125: aload_1
     126: dup
     127: getfield      #28                 // Field limit:I
     130: aload_1
     131: getfield      #26                 // Field pos:I
     134: isub
     135: putfield      #28                 // Field limit:I
     138: aload_1
     139: iconst_0
     140: putfield      #26                 // Field pos:I
     143: aload_0
     144: getfield      #24                 // Field data:[B
     147: aload_1
     148: getfield      #24                 // Field data:[B
     151: aload_1
     152: getfield      #28                 // Field limit:I
     155: aload_0
     156: getfield      #26                 // Field pos:I
     159: aload_0
     160: getfield      #26                 // Field pos:I
     163: iload_2
     164: iadd
     165: invokestatic  #129                // Method kotlin/collections/ArraysKt.copyInto:([B[BIII)[B
     168: pop
     169: aload_1
     170: dup
     171: getfield      #28                 // Field limit:I
     174: iload_2
     175: iadd
     176: putfield      #28                 // Field limit:I
     179: aload_0
     180: dup
     181: getfield      #26                 // Field pos:I
     184: iload_2
     185: iadd
     186: putfield      #26                 // Field pos:I
     189: return

  public okio.Segment();
    Code:
       0: aload_0
       1: invokespecial #131                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: sipush        8192
       8: newarray       byte
      10: putfield      #24                 // Field data:[B
      13: aload_0
      14: iconst_1
      15: putfield      #107                // Field owner:Z
      18: aload_0
      19: iconst_0
      20: putfield      #22                 // Field shared:Z
      23: return

  public okio.Segment(byte[], int, int, boolean, boolean);
    Code:
       0: aload_1
       1: ldc           #132                // String data
       3: invokestatic  #65                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokespecial #131                // Method java/lang/Object."<init>":()V
      10: aload_0
      11: aload_1
      12: putfield      #24                 // Field data:[B
      15: aload_0
      16: iload_2
      17: putfield      #26                 // Field pos:I
      20: aload_0
      21: iload_3
      22: putfield      #28                 // Field limit:I
      25: aload_0
      26: iload         4
      28: putfield      #22                 // Field shared:Z
      31: aload_0
      32: iload         5
      34: putfield      #107                // Field owner:Z
      37: return

  static {};
    Code:
       0: new           #154                // class okio/Segment$Companion
       3: dup
       4: aconst_null
       5: invokespecial #157                // Method okio/Segment$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
       8: putstatic     #159                // Field Companion:Lokio/Segment$Companion;
      11: return
}
