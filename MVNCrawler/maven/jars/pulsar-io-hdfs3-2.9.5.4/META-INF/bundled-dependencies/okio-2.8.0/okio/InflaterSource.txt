Compiled from "InflaterSource.kt"
public final class okio.InflaterSource implements okio.Source {
  private int bufferBytesHeldByInflater;

  private boolean closed;

  private final okio.BufferedSource source;

  private final java.util.zip.Inflater inflater;

  public long read(okio.Buffer, long) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #17                 // String sink
       3: invokestatic  #23                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: nop
       7: aload_0
       8: aload_1
       9: lload_2
      10: invokevirtual #26                 // Method readOrInflate:(Lokio/Buffer;J)J
      13: lstore        4
      15: lload         4
      17: lconst_0
      18: lcmp
      19: ifle          25
      22: lload         4
      24: lreturn
      25: aload_0
      26: getfield      #30                 // Field inflater:Ljava/util/zip/Inflater;
      29: invokevirtual #36                 // Method java/util/zip/Inflater.finished:()Z
      32: ifne          45
      35: aload_0
      36: getfield      #30                 // Field inflater:Ljava/util/zip/Inflater;
      39: invokevirtual #39                 // Method java/util/zip/Inflater.needsDictionary:()Z
      42: ifeq          49
      45: ldc2_w        #40                 // long -1l
      48: lreturn
      49: aload_0
      50: getfield      #45                 // Field source:Lokio/BufferedSource;
      53: invokeinterface #50,  1           // InterfaceMethod okio/BufferedSource.exhausted:()Z
      58: ifeq          74
      61: new           #52                 // class java/io/EOFException
      64: dup
      65: ldc           #54                 // String source exhausted prematurely
      67: invokespecial #58                 // Method java/io/EOFException."<init>":(Ljava/lang/String;)V
      70: checkcast     #60                 // class java/lang/Throwable
      73: athrow
      74: goto          6

  public final long readOrInflate(okio.Buffer, long) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #17                 // String sink
       3: invokestatic  #23                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: lload_2
       7: lconst_0
       8: lcmp
       9: iflt          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: istore        4
      19: iconst_0
      20: istore        5
      22: iconst_0
      23: istore        6
      25: iload         4
      27: ifne          70
      30: iconst_0
      31: istore        7
      33: new           #70                 // class java/lang/StringBuilder
      36: dup
      37: invokespecial #73                 // Method java/lang/StringBuilder."<init>":()V
      40: ldc           #75                 // String byteCount < 0:
      42: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: lload_2
      46: invokevirtual #82                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      49: invokevirtual #86                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: astore        6
      54: new           #88                 // class java/lang/IllegalArgumentException
      57: dup
      58: aload         6
      60: invokevirtual #89                 // Method java/lang/Object.toString:()Ljava/lang/String;
      63: invokespecial #90                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      66: checkcast     #60                 // class java/lang/Throwable
      69: athrow
      70: aload_0
      71: getfield      #92                 // Field closed:Z
      74: ifne          81
      77: iconst_1
      78: goto          82
      81: iconst_0
      82: istore        4
      84: iconst_0
      85: istore        5
      87: iconst_0
      88: istore        6
      90: iload         4
      92: ifne          118
      95: iconst_0
      96: istore        7
      98: ldc           #93                 // String closed
     100: astore        6
     102: new           #95                 // class java/lang/IllegalStateException
     105: dup
     106: aload         6
     108: invokevirtual #89                 // Method java/lang/Object.toString:()Ljava/lang/String;
     111: invokespecial #96                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     114: checkcast     #60                 // class java/lang/Throwable
     117: athrow
     118: lload_2
     119: lconst_0
     120: lcmp
     121: ifne          126
     124: lconst_0
     125: lreturn
     126: nop
     127: aload_1
     128: iconst_1
     129: invokevirtual #102                // Method okio/Buffer.writableSegment$okio:(I)Lokio/Segment;
     132: astore        4
     134: sipush        8192
     137: aload         4
     139: getfield      #107                // Field okio/Segment.limit:I
     142: isub
     143: istore        6
     145: iconst_0
     146: istore        7
     148: iload         6
     150: i2l
     151: lstore        8
     153: iconst_0
     154: istore        10
     156: lload_2
     157: lload         8
     159: invokestatic  #113                // Method java/lang/Math.min:(JJ)J
     162: nop
     163: l2i
     164: istore        5
     166: aload_0
     167: invokevirtual #116                // Method refill:()Z
     170: pop
     171: aload_0
     172: getfield      #30                 // Field inflater:Ljava/util/zip/Inflater;
     175: aload         4
     177: getfield      #120                // Field okio/Segment.data:[B
     180: aload         4
     182: getfield      #107                // Field okio/Segment.limit:I
     185: iload         5
     187: invokevirtual #124                // Method java/util/zip/Inflater.inflate:([BII)I
     190: istore        6
     192: aload_0
     193: invokespecial #127                // Method releaseBytesAfterInflate:()V
     196: iload         6
     198: ifle          229
     201: aload         4
     203: dup
     204: getfield      #107                // Field okio/Segment.limit:I
     207: iload         6
     209: iadd
     210: putfield      #107                // Field okio/Segment.limit:I
     213: aload_1
     214: dup
     215: invokevirtual #131                // Method okio/Buffer.size:()J
     218: iload         6
     220: i2l
     221: ladd
     222: invokevirtual #135                // Method okio/Buffer.setSize$okio:(J)V
     225: iload         6
     227: i2l
     228: lreturn
     229: aload         4
     231: getfield      #138                // Field okio/Segment.pos:I
     234: aload         4
     236: getfield      #107                // Field okio/Segment.limit:I
     239: if_icmpne     256
     242: aload_1
     243: aload         4
     245: invokevirtual #142                // Method okio/Segment.pop:()Lokio/Segment;
     248: putfield      #146                // Field okio/Buffer.head:Lokio/Segment;
     251: aload         4
     253: invokestatic  #152                // Method okio/SegmentPool.recycle:(Lokio/Segment;)V
     256: lconst_0
     257: lreturn
     258: astore        4
     260: new           #14                 // class java/io/IOException
     263: dup
     264: aload         4
     266: checkcast     #60                 // class java/lang/Throwable
     269: invokespecial #155                // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
     272: checkcast     #60                 // class java/lang/Throwable
     275: athrow
    Exception table:
       from    to  target type
         126   258   258   Class java/util/zip/DataFormatException

  public final boolean refill() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #30                 // Field inflater:Ljava/util/zip/Inflater;
       4: invokevirtual #166                // Method java/util/zip/Inflater.needsInput:()Z
       7: ifne          12
      10: iconst_0
      11: ireturn
      12: aload_0
      13: getfield      #45                 // Field source:Lokio/BufferedSource;
      16: invokeinterface #50,  1           // InterfaceMethod okio/BufferedSource.exhausted:()Z
      21: ifeq          26
      24: iconst_1
      25: ireturn
      26: aload_0
      27: getfield      #45                 // Field source:Lokio/BufferedSource;
      30: invokeinterface #170,  1          // InterfaceMethod okio/BufferedSource.getBuffer:()Lokio/Buffer;
      35: getfield      #146                // Field okio/Buffer.head:Lokio/Segment;
      38: dup
      39: invokestatic  #174                // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
      42: astore_1
      43: aload_0
      44: aload_1
      45: getfield      #107                // Field okio/Segment.limit:I
      48: aload_1
      49: getfield      #138                // Field okio/Segment.pos:I
      52: isub
      53: putfield      #176                // Field bufferBytesHeldByInflater:I
      56: aload_0
      57: getfield      #30                 // Field inflater:Ljava/util/zip/Inflater;
      60: aload_1
      61: getfield      #120                // Field okio/Segment.data:[B
      64: aload_1
      65: getfield      #138                // Field okio/Segment.pos:I
      68: aload_0
      69: getfield      #176                // Field bufferBytesHeldByInflater:I
      72: invokevirtual #180                // Method java/util/zip/Inflater.setInput:([BII)V
      75: iconst_0
      76: ireturn

  private final void releaseBytesAfterInflate();
    Code:
       0: aload_0
       1: getfield      #176                // Field bufferBytesHeldByInflater:I
       4: ifne          8
       7: return
       8: aload_0
       9: getfield      #176                // Field bufferBytesHeldByInflater:I
      12: aload_0
      13: getfield      #30                 // Field inflater:Ljava/util/zip/Inflater;
      16: invokevirtual #184                // Method java/util/zip/Inflater.getRemaining:()I
      19: isub
      20: istore_1
      21: aload_0
      22: dup
      23: getfield      #176                // Field bufferBytesHeldByInflater:I
      26: iload_1
      27: isub
      28: putfield      #176                // Field bufferBytesHeldByInflater:I
      31: aload_0
      32: getfield      #45                 // Field source:Lokio/BufferedSource;
      35: iload_1
      36: i2l
      37: invokeinterface #187,  3          // InterfaceMethod okio/BufferedSource.skip:(J)V
      42: return

  public okio.Timeout timeout();
    Code:
       0: aload_0
       1: getfield      #45                 // Field source:Lokio/BufferedSource;
       4: invokeinterface #192,  1          // InterfaceMethod okio/BufferedSource.timeout:()Lokio/Timeout;
       9: areturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #92                 // Field closed:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #30                 // Field inflater:Ljava/util/zip/Inflater;
      12: invokevirtual #196                // Method java/util/zip/Inflater.end:()V
      15: aload_0
      16: iconst_1
      17: putfield      #92                 // Field closed:Z
      20: aload_0
      21: getfield      #45                 // Field source:Lokio/BufferedSource;
      24: invokeinterface #198,  1          // InterfaceMethod okio/BufferedSource.close:()V
      29: return

  public okio.InflaterSource(okio.BufferedSource, java.util.zip.Inflater);
    Code:
       0: aload_1
       1: ldc           #200                // String source
       3: invokestatic  #23                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #201                // String inflater
       9: invokestatic  #23                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: invokespecial #202                // Method java/lang/Object."<init>":()V
      16: aload_0
      17: aload_1
      18: putfield      #45                 // Field source:Lokio/BufferedSource;
      21: aload_0
      22: aload_2
      23: putfield      #30                 // Field inflater:Ljava/util/zip/Inflater;
      26: return

  public okio.InflaterSource(okio.Source, java.util.zip.Inflater);
    Code:
       0: aload_1
       1: ldc           #200                // String source
       3: invokestatic  #23                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #201                // String inflater
       9: invokestatic  #23                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: aload_1
      14: invokestatic  #209                // Method okio/Okio.buffer:(Lokio/Source;)Lokio/BufferedSource;
      17: aload_2
      18: invokespecial #211                // Method "<init>":(Lokio/BufferedSource;Ljava/util/zip/Inflater;)V
      21: return
}
