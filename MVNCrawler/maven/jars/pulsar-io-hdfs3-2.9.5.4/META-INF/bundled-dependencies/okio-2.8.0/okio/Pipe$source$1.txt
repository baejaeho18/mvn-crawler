Compiled from "Pipe.kt"
public final class okio.Pipe$source$1 implements okio.Source {
  private final okio.Timeout timeout;

  final okio.Pipe this$0;

  public long read(okio.Buffer, long);
    Code:
       0: aload_1
       1: ldc           #18                 // String sink
       3: invokestatic  #24                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #28                 // Field this$0:Lokio/Pipe;
      10: invokevirtual #32                 // Method okio/Pipe.getBuffer$okio:()Lokio/Buffer;
      13: astore        4
      15: iconst_0
      16: istore        5
      18: iconst_0
      19: istore        6
      21: iconst_0
      22: istore        7
      24: aload         4
      26: monitorenter
      27: nop
      28: iconst_0
      29: istore        8
      31: aload_0
      32: getfield      #28                 // Field this$0:Lokio/Pipe;
      35: invokevirtual #36                 // Method okio/Pipe.getSourceClosed$okio:()Z
      38: ifne          45
      41: iconst_1
      42: goto          46
      45: iconst_0
      46: istore        9
      48: iconst_0
      49: istore        10
      51: iconst_0
      52: istore        11
      54: iload         9
      56: ifne          82
      59: iconst_0
      60: istore        12
      62: ldc           #38                 // String closed
      64: astore        11
      66: new           #40                 // class java/lang/IllegalStateException
      69: dup
      70: aload         11
      72: invokevirtual #44                 // Method java/lang/Object.toString:()Ljava/lang/String;
      75: invokespecial #47                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      78: checkcast     #49                 // class java/lang/Throwable
      81: athrow
      82: aload_0
      83: getfield      #28                 // Field this$0:Lokio/Pipe;
      86: invokevirtual #52                 // Method okio/Pipe.getCanceled$okio:()Z
      89: ifeq          105
      92: new           #54                 // class java/io/IOException
      95: dup
      96: ldc           #56                 // String canceled
      98: invokespecial #57                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     101: checkcast     #49                 // class java/lang/Throwable
     104: athrow
     105: aload_0
     106: getfield      #28                 // Field this$0:Lokio/Pipe;
     109: invokevirtual #32                 // Method okio/Pipe.getBuffer$okio:()Lokio/Buffer;
     112: invokevirtual #63                 // Method okio/Buffer.size:()J
     115: lconst_0
     116: lcmp
     117: ifne          181
     120: aload_0
     121: getfield      #28                 // Field this$0:Lokio/Pipe;
     124: invokevirtual #66                 // Method okio/Pipe.getSinkClosed$okio:()Z
     127: ifeq          141
     130: ldc2_w        #67                 // long -1l
     133: lstore        17
     135: aload         4
     137: monitorexit
     138: lload         17
     140: lreturn
     141: aload_0
     142: getfield      #70                 // Field timeout:Lokio/Timeout;
     145: aload_0
     146: getfield      #28                 // Field this$0:Lokio/Pipe;
     149: invokevirtual #32                 // Method okio/Pipe.getBuffer$okio:()Lokio/Buffer;
     152: invokevirtual #76                 // Method okio/Timeout.waitUntilNotified:(Ljava/lang/Object;)V
     155: aload_0
     156: getfield      #28                 // Field this$0:Lokio/Pipe;
     159: invokevirtual #52                 // Method okio/Pipe.getCanceled$okio:()Z
     162: ifeq          178
     165: new           #54                 // class java/io/IOException
     168: dup
     169: ldc           #56                 // String canceled
     171: invokespecial #57                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     174: checkcast     #49                 // class java/lang/Throwable
     177: athrow
     178: goto          105
     181: aload_0
     182: getfield      #28                 // Field this$0:Lokio/Pipe;
     185: invokevirtual #32                 // Method okio/Pipe.getBuffer$okio:()Lokio/Buffer;
     188: aload_1
     189: lload_2
     190: invokevirtual #78                 // Method okio/Buffer.read:(Lokio/Buffer;J)J
     193: lstore        13
     195: aload_0
     196: getfield      #28                 // Field this$0:Lokio/Pipe;
     199: invokevirtual #32                 // Method okio/Pipe.getBuffer$okio:()Lokio/Buffer;
     202: dup
     203: ifnonnull     216
     206: new           #80                 // class java/lang/NullPointerException
     209: dup
     210: ldc           #82                 // String null cannot be cast to non-null type java.lang.Object
     212: invokespecial #83                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
     215: athrow
     216: checkcast     #4                  // class java/lang/Object
     219: invokevirtual #87                 // Method java/lang/Object.notifyAll:()V
     222: lload         13
     224: lstore        15
     226: aload         4
     228: monitorexit
     229: lload         15
     231: lreturn
     232: astore        7
     234: aload         4
     236: monitorexit
     237: aload         7
     239: athrow
    Exception table:
       from    to  target type
          27   135   232   any
         141   226   232   any
         232   234   232   any

  public void close();
    Code:
       0: aload_0
       1: getfield      #28                 // Field this$0:Lokio/Pipe;
       4: invokevirtual #32                 // Method okio/Pipe.getBuffer$okio:()Lokio/Buffer;
       7: astore_1
       8: iconst_0
       9: istore_2
      10: iconst_0
      11: istore_3
      12: iconst_0
      13: istore        4
      15: aload_1
      16: monitorenter
      17: nop
      18: iconst_0
      19: istore        5
      21: aload_0
      22: getfield      #28                 // Field this$0:Lokio/Pipe;
      25: iconst_1
      26: invokevirtual #104                // Method okio/Pipe.setSourceClosed$okio:(Z)V
      29: aload_0
      30: getfield      #28                 // Field this$0:Lokio/Pipe;
      33: invokevirtual #32                 // Method okio/Pipe.getBuffer$okio:()Lokio/Buffer;
      36: dup
      37: ifnonnull     50
      40: new           #80                 // class java/lang/NullPointerException
      43: dup
      44: ldc           #82                 // String null cannot be cast to non-null type java.lang.Object
      46: invokespecial #83                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: checkcast     #4                  // class java/lang/Object
      53: invokevirtual #87                 // Method java/lang/Object.notifyAll:()V
      56: getstatic     #110                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
      59: astore        4
      61: aload_1
      62: monitorexit
      63: goto          73
      66: astore        4
      68: aload_1
      69: monitorexit
      70: aload         4
      72: athrow
      73: nop
      74: return
    Exception table:
       from    to  target type
          17    61    66   any
          66    68    66   any

  public okio.Timeout timeout();
    Code:
       0: aload_0
       1: getfield      #70                 // Field timeout:Lokio/Timeout;
       4: areturn

  okio.Pipe$source$1();
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #28                 // Field this$0:Lokio/Pipe;
       5: aload_0
       6: invokespecial #115                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #72                 // class okio/Timeout
      13: dup
      14: invokespecial #116                // Method okio/Timeout."<init>":()V
      17: putfield      #70                 // Field timeout:Lokio/Timeout;
      20: return
}
