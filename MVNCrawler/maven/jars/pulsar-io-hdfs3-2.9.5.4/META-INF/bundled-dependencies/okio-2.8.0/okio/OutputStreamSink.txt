Compiled from "JvmOkio.kt"
final class okio.OutputStreamSink implements okio.Sink {
  private final java.io.OutputStream out;

  private final okio.Timeout timeout;

  public void write(okio.Buffer, long);
    Code:
       0: aload_1
       1: ldc           #11                 // String source
       3: invokestatic  #17                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokevirtual #23                 // Method okio/Buffer.size:()J
      10: lconst_0
      11: lload_2
      12: invokestatic  #29                 // Method "okio/-Util".checkOffsetAndCount:(JJJ)V
      15: lload_2
      16: lstore        4
      18: lload         4
      20: lconst_0
      21: lcmp
      22: ifle          158
      25: aload_0
      26: getfield      #33                 // Field timeout:Lokio/Timeout;
      29: invokevirtual #39                 // Method okio/Timeout.throwIfReached:()V
      32: aload_1
      33: getfield      #43                 // Field okio/Buffer.head:Lokio/Segment;
      36: dup
      37: invokestatic  #47                 // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
      40: astore        6
      42: aload         6
      44: getfield      #53                 // Field okio/Segment.limit:I
      47: aload         6
      49: getfield      #56                 // Field okio/Segment.pos:I
      52: isub
      53: istore        8
      55: iconst_0
      56: istore        9
      58: iload         8
      60: i2l
      61: lstore        10
      63: iconst_0
      64: istore        12
      66: lload         4
      68: lload         10
      70: invokestatic  #62                 // Method java/lang/Math.min:(JJ)J
      73: nop
      74: l2i
      75: istore        7
      77: aload_0
      78: getfield      #66                 // Field out:Ljava/io/OutputStream;
      81: aload         6
      83: getfield      #70                 // Field okio/Segment.data:[B
      86: aload         6
      88: getfield      #56                 // Field okio/Segment.pos:I
      91: iload         7
      93: invokevirtual #75                 // Method java/io/OutputStream.write:([BII)V
      96: aload         6
      98: dup
      99: getfield      #56                 // Field okio/Segment.pos:I
     102: iload         7
     104: iadd
     105: putfield      #56                 // Field okio/Segment.pos:I
     108: lload         4
     110: iload         7
     112: i2l
     113: lsub
     114: lstore        4
     116: aload_1
     117: dup
     118: invokevirtual #23                 // Method okio/Buffer.size:()J
     121: iload         7
     123: i2l
     124: lsub
     125: invokevirtual #79                 // Method okio/Buffer.setSize$okio:(J)V
     128: aload         6
     130: getfield      #56                 // Field okio/Segment.pos:I
     133: aload         6
     135: getfield      #53                 // Field okio/Segment.limit:I
     138: if_icmpne     155
     141: aload_1
     142: aload         6
     144: invokevirtual #83                 // Method okio/Segment.pop:()Lokio/Segment;
     147: putfield      #43                 // Field okio/Buffer.head:Lokio/Segment;
     150: aload         6
     152: invokestatic  #89                 // Method okio/SegmentPool.recycle:(Lokio/Segment;)V
     155: goto          18
     158: return

  public void flush();
    Code:
       0: aload_0
       1: getfield      #66                 // Field out:Ljava/io/OutputStream;
       4: invokevirtual #101                // Method java/io/OutputStream.flush:()V
       7: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #66                 // Field out:Ljava/io/OutputStream;
       4: invokevirtual #104                // Method java/io/OutputStream.close:()V
       7: return

  public okio.Timeout timeout();
    Code:
       0: aload_0
       1: getfield      #33                 // Field timeout:Lokio/Timeout;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #109                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #112                // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #114                // String sink(
       9: invokevirtual #118                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #66                 // Field out:Ljava/io/OutputStream;
      16: invokevirtual #121                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: bipush        41
      21: invokevirtual #124                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      24: invokevirtual #126                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  public okio.OutputStreamSink(java.io.OutputStream, okio.Timeout);
    Code:
       0: aload_1
       1: ldc           #128                // String out
       3: invokestatic  #17                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #129                // String timeout
       9: invokestatic  #17                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: invokespecial #130                // Method java/lang/Object."<init>":()V
      16: aload_0
      17: aload_1
      18: putfield      #66                 // Field out:Ljava/io/OutputStream;
      21: aload_0
      22: aload_2
      23: putfield      #33                 // Field timeout:Lokio/Timeout;
      26: return
}
