Compiled from "AtomicReferenceDeserializer.java"
public class com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer extends com.fasterxml.jackson.databind.deser.std.ReferenceTypeDeserializer<java.util.concurrent.atomic.AtomicReference<java.lang.Object>> {
  private static final long serialVersionUID;

  public com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.deser.ValueInstantiator, com.fasterxml.jackson.databind.jsontype.TypeDeserializer, com.fasterxml.jackson.databind.JsonDeserializer<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #1                  // Method com/fasterxml/jackson/databind/deser/std/ReferenceTypeDeserializer."<init>":(Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/deser/ValueInstantiator;Lcom/fasterxml/jackson/databind/jsontype/TypeDeserializer;Lcom/fasterxml/jackson/databind/JsonDeserializer;)V
       9: return

  public com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer withResolved(com.fasterxml.jackson.databind.jsontype.TypeDeserializer, com.fasterxml.jackson.databind.JsonDeserializer<?>);
    Code:
       0: new           #2                  // class com/fasterxml/jackson/databind/deser/std/AtomicReferenceDeserializer
       3: dup
       4: aload_0
       5: getfield      #3                  // Field _fullType:Lcom/fasterxml/jackson/databind/JavaType;
       8: aload_0
       9: getfield      #4                  // Field _valueInstantiator:Lcom/fasterxml/jackson/databind/deser/ValueInstantiator;
      12: aload_1
      13: aload_2
      14: invokespecial #5                  // Method "<init>":(Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/deser/ValueInstantiator;Lcom/fasterxml/jackson/databind/jsontype/TypeDeserializer;Lcom/fasterxml/jackson/databind/JsonDeserializer;)V
      17: areturn

  public java.util.concurrent.atomic.AtomicReference<java.lang.Object> getNullValue(com.fasterxml.jackson.databind.DeserializationContext) throws com.fasterxml.jackson.databind.JsonMappingException;
    Code:
       0: new           #6                  // class java/util/concurrent/atomic/AtomicReference
       3: dup
       4: aload_0
       5: getfield      #7                  // Field _valueDeserializer:Lcom/fasterxml/jackson/databind/JsonDeserializer;
       8: aload_1
       9: invokevirtual #8                  // Method com/fasterxml/jackson/databind/JsonDeserializer.getNullValue:(Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
      12: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      15: areturn

  public java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) throws com.fasterxml.jackson.databind.JsonMappingException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #10                 // Method getNullValue:(Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/util/concurrent/atomic/AtomicReference;
       5: areturn

  public java.lang.Object getAbsentValue(com.fasterxml.jackson.databind.DeserializationContext) throws com.fasterxml.jackson.databind.JsonMappingException;
    Code:
       0: aconst_null
       1: areturn

  public java.util.concurrent.atomic.AtomicReference<java.lang.Object> referenceValue(java.lang.Object);
    Code:
       0: new           #6                  // class java/util/concurrent/atomic/AtomicReference
       3: dup
       4: aload_1
       5: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
       8: areturn

  public java.lang.Object getReferenced(java.util.concurrent.atomic.AtomicReference<java.lang.Object>);
    Code:
       0: aload_1
       1: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       4: areturn

  public java.util.concurrent.atomic.AtomicReference<java.lang.Object> updateReference(java.util.concurrent.atomic.AtomicReference<java.lang.Object>, java.lang.Object);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
       5: aload_1
       6: areturn

  public java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig);
    Code:
       0: getstatic     #13                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
       3: areturn

  public java.lang.Object getReferenced(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #6                  // class java/util/concurrent/atomic/AtomicReference
       5: invokevirtual #14                 // Method getReferenced:(Ljava/util/concurrent/atomic/AtomicReference;)Ljava/lang/Object;
       8: areturn

  public java.lang.Object updateReference(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #6                  // class java/util/concurrent/atomic/AtomicReference
       5: aload_2
       6: invokevirtual #15                 // Method updateReference:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/lang/Object;)Ljava/util/concurrent/atomic/AtomicReference;
       9: areturn

  public java.lang.Object referenceValue(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #16                 // Method referenceValue:(Ljava/lang/Object;)Ljava/util/concurrent/atomic/AtomicReference;
       5: areturn

  public java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) throws com.fasterxml.jackson.databind.JsonMappingException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #10                 // Method getNullValue:(Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/util/concurrent/atomic/AtomicReference;
       5: areturn

  public com.fasterxml.jackson.databind.deser.std.ReferenceTypeDeserializer withResolved(com.fasterxml.jackson.databind.jsontype.TypeDeserializer, com.fasterxml.jackson.databind.JsonDeserializer);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #17                 // Method withResolved:(Lcom/fasterxml/jackson/databind/jsontype/TypeDeserializer;Lcom/fasterxml/jackson/databind/JsonDeserializer;)Lcom/fasterxml/jackson/databind/deser/std/AtomicReferenceDeserializer;
       6: areturn
}
