Compiled from "BeanAsArraySerializer.java"
public class com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer extends com.fasterxml.jackson.databind.ser.std.BeanSerializerBase {
  private static final long serialVersionUID;

  protected final com.fasterxml.jackson.databind.ser.std.BeanSerializerBase _defaultSerializer;

  public com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: checkcast     #1                  // class com/fasterxml/jackson/databind/ser/impl/ObjectIdWriter
       6: invokespecial #2                  // Method com/fasterxml/jackson/databind/ser/std/BeanSerializerBase."<init>":(Lcom/fasterxml/jackson/databind/ser/std/BeanSerializerBase;Lcom/fasterxml/jackson/databind/ser/impl/ObjectIdWriter;)V
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field _defaultSerializer:Lcom/fasterxml/jackson/databind/ser/std/BeanSerializerBase;
      14: return

  protected com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase, java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokespecial #4                  // Method "<init>":(Lcom/fasterxml/jackson/databind/ser/std/BeanSerializerBase;Ljava/util/Set;Ljava/util/Set;)V
       7: return

  protected com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase, java.util.Set<java.lang.String>, java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #5                  // Method com/fasterxml/jackson/databind/ser/std/BeanSerializerBase."<init>":(Lcom/fasterxml/jackson/databind/ser/std/BeanSerializerBase;Ljava/util/Set;Ljava/util/Set;)V
       7: aload_0
       8: aload_1
       9: putfield      #3                  // Field _defaultSerializer:Lcom/fasterxml/jackson/databind/ser/std/BeanSerializerBase;
      12: return

  protected com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase, com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #6                  // Method com/fasterxml/jackson/databind/ser/std/BeanSerializerBase."<init>":(Lcom/fasterxml/jackson/databind/ser/std/BeanSerializerBase;Lcom/fasterxml/jackson/databind/ser/impl/ObjectIdWriter;Ljava/lang/Object;)V
       7: aload_0
       8: aload_1
       9: putfield      #3                  // Field _defaultSerializer:Lcom/fasterxml/jackson/databind/ser/std/BeanSerializerBase;
      12: return

  public com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer);
    Code:
       0: aload_0
       1: getfield      #3                  // Field _defaultSerializer:Lcom/fasterxml/jackson/databind/ser/std/BeanSerializerBase;
       4: aload_1
       5: invokevirtual #7                  // Method com/fasterxml/jackson/databind/ser/std/BeanSerializerBase.unwrappingSerializer:(Lcom/fasterxml/jackson/databind/util/NameTransformer;)Lcom/fasterxml/jackson/databind/JsonSerializer;
       8: areturn

  public boolean isUnwrappingSerializer();
    Code:
       0: iconst_0
       1: ireturn

  public com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter);
    Code:
       0: aload_0
       1: getfield      #3                  // Field _defaultSerializer:Lcom/fasterxml/jackson/databind/ser/std/BeanSerializerBase;
       4: aload_1
       5: invokevirtual #8                  // Method com/fasterxml/jackson/databind/ser/std/BeanSerializerBase.withObjectIdWriter:(Lcom/fasterxml/jackson/databind/ser/impl/ObjectIdWriter;)Lcom/fasterxml/jackson/databind/ser/std/BeanSerializerBase;
       8: areturn

  public com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withFilterId(java.lang.Object);
    Code:
       0: new           #9                  // class com/fasterxml/jackson/databind/ser/impl/BeanAsArraySerializer
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #10                 // Field _objectIdWriter:Lcom/fasterxml/jackson/databind/ser/impl/ObjectIdWriter;
       9: aload_1
      10: invokespecial #11                 // Method "<init>":(Lcom/fasterxml/jackson/databind/ser/std/BeanSerializerBase;Lcom/fasterxml/jackson/databind/ser/impl/ObjectIdWriter;Ljava/lang/Object;)V
      13: areturn

  protected com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer withByNameInclusion(java.util.Set<java.lang.String>, java.util.Set<java.lang.String>);
    Code:
       0: new           #9                  // class com/fasterxml/jackson/databind/ser/impl/BeanAsArraySerializer
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #4                  // Method "<init>":(Lcom/fasterxml/jackson/databind/ser/std/BeanSerializerBase;Ljava/util/Set;Ljava/util/Set;)V
      10: areturn

  protected com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withProperties(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[], com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]);
    Code:
       0: aload_0
       1: areturn

  protected com.fasterxml.jackson.databind.ser.std.BeanSerializerBase asArraySerializer();
    Code:
       0: aload_0
       1: areturn

  public void serializeWithType(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field _objectIdWriter:Lcom/fasterxml/jackson/databind/ser/impl/ObjectIdWriter;
       4: ifnull        17
       7: aload_0
       8: aload_1
       9: aload_2
      10: aload_3
      11: aload         4
      13: invokevirtual #12                 // Method _serializeWithObjectId:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;)V
      16: return
      17: aload_0
      18: aload         4
      20: aload_1
      21: getstatic     #13                 // Field com/fasterxml/jackson/core/JsonToken.START_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;
      24: invokevirtual #14                 // Method _typeIdDef:(Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonToken;)Lcom/fasterxml/jackson/core/type/WritableTypeId;
      27: astore        5
      29: aload         4
      31: aload_2
      32: aload         5
      34: invokevirtual #15                 // Method com/fasterxml/jackson/databind/jsontype/TypeSerializer.writeTypePrefix:(Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/core/type/WritableTypeId;)Lcom/fasterxml/jackson/core/type/WritableTypeId;
      37: pop
      38: aload_2
      39: aload_1
      40: invokevirtual #16                 // Method com/fasterxml/jackson/core/JsonGenerator.setCurrentValue:(Ljava/lang/Object;)V
      43: aload_0
      44: aload_1
      45: aload_2
      46: aload_3
      47: invokevirtual #17                 // Method serializeAsArray:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
      50: aload         4
      52: aload_2
      53: aload         5
      55: invokevirtual #18                 // Method com/fasterxml/jackson/databind/jsontype/TypeSerializer.writeTypeSuffix:(Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/core/type/WritableTypeId;)Lcom/fasterxml/jackson/core/type/WritableTypeId;
      58: pop
      59: return

  public final void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException;
    Code:
       0: aload_3
       1: getstatic     #19                 // Field com/fasterxml/jackson/databind/SerializationFeature.WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED:Lcom/fasterxml/jackson/databind/SerializationFeature;
       4: invokevirtual #20                 // Method com/fasterxml/jackson/databind/SerializerProvider.isEnabled:(Lcom/fasterxml/jackson/databind/SerializationFeature;)Z
       7: ifeq          26
      10: aload_0
      11: aload_3
      12: invokespecial #21                 // Method hasSingleElement:(Lcom/fasterxml/jackson/databind/SerializerProvider;)Z
      15: ifeq          26
      18: aload_0
      19: aload_1
      20: aload_2
      21: aload_3
      22: invokevirtual #17                 // Method serializeAsArray:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
      25: return
      26: aload_2
      27: aload_1
      28: invokevirtual #22                 // Method com/fasterxml/jackson/core/JsonGenerator.writeStartArray:(Ljava/lang/Object;)V
      31: aload_0
      32: aload_1
      33: aload_2
      34: aload_3
      35: invokevirtual #17                 // Method serializeAsArray:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
      38: aload_2
      39: invokevirtual #23                 // Method com/fasterxml/jackson/core/JsonGenerator.writeEndArray:()V
      42: return

  private boolean hasSingleElement(com.fasterxml.jackson.databind.SerializerProvider);
    Code:
       0: aload_0
       1: getfield      #24                 // Field _filteredProps:[Lcom/fasterxml/jackson/databind/ser/BeanPropertyWriter;
       4: ifnull        22
       7: aload_1
       8: invokevirtual #25                 // Method com/fasterxml/jackson/databind/SerializerProvider.getActiveView:()Ljava/lang/Class;
      11: ifnull        22
      14: aload_0
      15: getfield      #24                 // Field _filteredProps:[Lcom/fasterxml/jackson/databind/ser/BeanPropertyWriter;
      18: astore_2
      19: goto          27
      22: aload_0
      23: getfield      #26                 // Field _props:[Lcom/fasterxml/jackson/databind/ser/BeanPropertyWriter;
      26: astore_2
      27: aload_2
      28: arraylength
      29: iconst_1
      30: if_icmpne     37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ireturn

  protected final void serializeAsArray(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #24                 // Field _filteredProps:[Lcom/fasterxml/jackson/databind/ser/BeanPropertyWriter;
       4: ifnull        23
       7: aload_3
       8: invokevirtual #25                 // Method com/fasterxml/jackson/databind/SerializerProvider.getActiveView:()Ljava/lang/Class;
      11: ifnull        23
      14: aload_0
      15: getfield      #24                 // Field _filteredProps:[Lcom/fasterxml/jackson/databind/ser/BeanPropertyWriter;
      18: astore        4
      20: goto          29
      23: aload_0
      24: getfield      #26                 // Field _props:[Lcom/fasterxml/jackson/databind/ser/BeanPropertyWriter;
      27: astore        4
      29: iconst_0
      30: istore        5
      32: aload         4
      34: arraylength
      35: istore        6
      37: iload         5
      39: iload         6
      41: if_icmpge     77
      44: aload         4
      46: iload         5
      48: aaload
      49: astore        7
      51: aload         7
      53: ifnonnull     63
      56: aload_2
      57: invokevirtual #27                 // Method com/fasterxml/jackson/core/JsonGenerator.writeNull:()V
      60: goto          71
      63: aload         7
      65: aload_1
      66: aload_2
      67: aload_3
      68: invokevirtual #28                 // Method com/fasterxml/jackson/databind/ser/BeanPropertyWriter.serializeAsElement:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
      71: iinc          5, 1
      74: goto          37
      77: goto          130
      80: astore        6
      82: aload_0
      83: aload_3
      84: aload         6
      86: aload_1
      87: aload         4
      89: iload         5
      91: aaload
      92: invokevirtual #30                 // Method com/fasterxml/jackson/databind/ser/BeanPropertyWriter.getName:()Ljava/lang/String;
      95: invokevirtual #31                 // Method wrapAndThrow:(Lcom/fasterxml/jackson/databind/SerializerProvider;Ljava/lang/Throwable;Ljava/lang/Object;Ljava/lang/String;)V
      98: goto          130
     101: astore        6
     103: aload_2
     104: ldc           #33                 // String Infinite recursion (StackOverflowError)
     106: aload         6
     108: invokestatic  #34                 // Method com/fasterxml/jackson/databind/JsonMappingException.from:(Lcom/fasterxml/jackson/core/JsonGenerator;Ljava/lang/String;Ljava/lang/Throwable;)Lcom/fasterxml/jackson/databind/JsonMappingException;
     111: astore        7
     113: aload         7
     115: aload_1
     116: aload         4
     118: iload         5
     120: aaload
     121: invokevirtual #30                 // Method com/fasterxml/jackson/databind/ser/BeanPropertyWriter.getName:()Ljava/lang/String;
     124: invokevirtual #35                 // Method com/fasterxml/jackson/databind/DatabindException.prependPath:(Ljava/lang/Object;Ljava/lang/String;)V
     127: aload         7
     129: athrow
     130: return
    Exception table:
       from    to  target type
          32    77    80   Class java/lang/Exception
          32    77   101   Class java/lang/StackOverflowError

  public java.lang.String toString();
    Code:
       0: new           #36                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #38                 // String BeanAsArraySerializer for
       9: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #40                 // Method handledType:()Ljava/lang/Class;
      16: invokevirtual #41                 // Method java/lang/Class.getName:()Ljava/lang/String;
      19: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      25: areturn

  protected com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withByNameInclusion(java.util.Set, java.util.Set);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #43                 // Method withByNameInclusion:(Ljava/util/Set;Ljava/util/Set;)Lcom/fasterxml/jackson/databind/ser/impl/BeanAsArraySerializer;
       6: areturn

  public com.fasterxml.jackson.databind.JsonSerializer withFilterId(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #44                 // Method withFilterId:(Ljava/lang/Object;)Lcom/fasterxml/jackson/databind/ser/std/BeanSerializerBase;
       5: areturn
}
