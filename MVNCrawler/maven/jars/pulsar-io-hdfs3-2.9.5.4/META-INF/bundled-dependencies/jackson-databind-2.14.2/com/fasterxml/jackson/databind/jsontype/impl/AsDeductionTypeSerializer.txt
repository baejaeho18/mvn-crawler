Compiled from "AsDeductionTypeSerializer.java"
public class com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeSerializer extends com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase {
  private static final com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeSerializer INSTANCE;

  protected com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeSerializer();
    Code:
       0: aload_0
       1: aconst_null
       2: aconst_null
       3: invokespecial #1                  // Method com/fasterxml/jackson/databind/jsontype/impl/TypeSerializerBase."<init>":(Lcom/fasterxml/jackson/databind/jsontype/TypeIdResolver;Lcom/fasterxml/jackson/databind/BeanProperty;)V
       6: return

  public static com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeSerializer instance();
    Code:
       0: getstatic     #2                  // Field INSTANCE:Lcom/fasterxml/jackson/databind/jsontype/impl/AsDeductionTypeSerializer;
       3: areturn

  public com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty);
    Code:
       0: aload_0
       1: areturn

  public com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion();
    Code:
       0: getstatic     #3                  // Field com/fasterxml/jackson/annotation/JsonTypeInfo$As.EXISTING_PROPERTY:Lcom/fasterxml/jackson/annotation/JsonTypeInfo$As;
       3: areturn

  public com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.core.type.WritableTypeId) throws java.io.IOException;
    Code:
       0: aload_2
       1: getfield      #4                  // Field com/fasterxml/jackson/core/type/WritableTypeId.valueShape:Lcom/fasterxml/jackson/core/JsonToken;
       4: invokevirtual #5                  // Method com/fasterxml/jackson/core/JsonToken.isStructStart:()Z
       7: ifeq          23
      10: aload_1
      11: invokevirtual #6                  // Method com/fasterxml/jackson/core/JsonGenerator.canWriteTypeId:()Z
      14: ifne          23
      17: aload_1
      18: aload_2
      19: invokevirtual #7                  // Method com/fasterxml/jackson/core/JsonGenerator.writeTypePrefix:(Lcom/fasterxml/jackson/core/type/WritableTypeId;)Lcom/fasterxml/jackson/core/type/WritableTypeId;
      22: areturn
      23: aconst_null
      24: areturn

  public com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.core.type.WritableTypeId) throws java.io.IOException;
    Code:
       0: aload_2
       1: ifnonnull     8
       4: aconst_null
       5: goto          13
       8: aload_1
       9: aload_2
      10: invokevirtual #8                  // Method com/fasterxml/jackson/core/JsonGenerator.writeTypeSuffix:(Lcom/fasterxml/jackson/core/type/WritableTypeId;)Lcom/fasterxml/jackson/core/type/WritableTypeId;
      13: areturn

  public com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #9                  // Method forProperty:(Lcom/fasterxml/jackson/databind/BeanProperty;)Lcom/fasterxml/jackson/databind/jsontype/impl/AsDeductionTypeSerializer;
       5: areturn

  static {};
    Code:
       0: new           #10                 // class com/fasterxml/jackson/databind/jsontype/impl/AsDeductionTypeSerializer
       3: dup
       4: invokespecial #11                 // Method "<init>":()V
       7: putstatic     #2                  // Field INSTANCE:Lcom/fasterxml/jackson/databind/jsontype/impl/AsDeductionTypeSerializer;
      10: return
}
