Compiled from "TypeResolverBuilder.java"
public interface com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder<T extends com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder<T>> {
  public abstract java.lang.Class<?> getDefaultImpl();

  public abstract com.fasterxml.jackson.databind.jsontype.TypeSerializer buildTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.JavaType, java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>);

  public abstract com.fasterxml.jackson.databind.jsontype.TypeDeserializer buildTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig, com.fasterxml.jackson.databind.JavaType, java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>);

  public abstract T init(com.fasterxml.jackson.annotation.JsonTypeInfo$Id, com.fasterxml.jackson.databind.jsontype.TypeIdResolver);

  public abstract T inclusion(com.fasterxml.jackson.annotation.JsonTypeInfo$As);

  public abstract T typeProperty(java.lang.String);

  public abstract T defaultImpl(java.lang.Class<?>);

  public abstract T typeIdVisibility(boolean);

  public default T withDefaultImpl(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #1,  2            // InterfaceMethod defaultImpl:(Ljava/lang/Class;)Lcom/fasterxml/jackson/databind/jsontype/TypeResolverBuilder;
       7: areturn
}
