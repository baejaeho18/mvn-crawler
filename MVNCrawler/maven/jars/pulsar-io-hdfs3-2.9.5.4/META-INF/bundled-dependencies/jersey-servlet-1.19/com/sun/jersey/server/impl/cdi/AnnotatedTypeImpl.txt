Compiled from "AnnotatedTypeImpl.java"
public class com.sun.jersey.server.impl.cdi.AnnotatedTypeImpl<T> extends com.sun.jersey.server.impl.cdi.AnnotatedImpl implements javax.enterprise.inject.spi.AnnotatedType<T> {
  private java.util.Set<javax.enterprise.inject.spi.AnnotatedConstructor<T>> constructors;

  private java.util.Set<javax.enterprise.inject.spi.AnnotatedField<? super T>> fields;

  private java.lang.Class<T> javaClass;

  private java.util.Set<javax.enterprise.inject.spi.AnnotatedMethod<? super T>> methods;

  public com.sun.jersey.server.impl.cdi.AnnotatedTypeImpl(java.lang.reflect.Type, java.util.Set<java.lang.reflect.Type>, java.util.Set<java.lang.annotation.Annotation>, java.lang.Class<T>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method com/sun/jersey/server/impl/cdi/AnnotatedImpl."<init>":(Ljava/lang/reflect/Type;Ljava/util/Set;Ljava/util/Set;)V
       7: aload_0
       8: aload         4
      10: putfield      #2                  // Field javaClass:Ljava/lang/Class;
      13: return

  public com.sun.jersey.server.impl.cdi.AnnotatedTypeImpl(javax.enterprise.inject.spi.AnnotatedType);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #3,  1            // InterfaceMethod javax/enterprise/inject/spi/AnnotatedType.getBaseType:()Ljava/lang/reflect/Type;
       7: aload_1
       8: invokeinterface #4,  1            // InterfaceMethod javax/enterprise/inject/spi/AnnotatedType.getTypeClosure:()Ljava/util/Set;
      13: aload_1
      14: invokeinterface #5,  1            // InterfaceMethod javax/enterprise/inject/spi/AnnotatedType.getAnnotations:()Ljava/util/Set;
      19: aload_1
      20: invokeinterface #6,  1            // InterfaceMethod javax/enterprise/inject/spi/AnnotatedType.getJavaClass:()Ljava/lang/Class;
      25: invokespecial #7                  // Method "<init>":(Ljava/lang/reflect/Type;Ljava/util/Set;Ljava/util/Set;Ljava/lang/Class;)V
      28: return

  public java.util.Set<javax.enterprise.inject.spi.AnnotatedConstructor<T>> getConstructors();
    Code:
       0: aload_0
       1: getfield      #8                  // Field constructors:Ljava/util/Set;
       4: areturn

  public void setConstructors(java.util.Set<javax.enterprise.inject.spi.AnnotatedConstructor<T>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field constructors:Ljava/util/Set;
       5: return

  public java.util.Set<javax.enterprise.inject.spi.AnnotatedField<? super T>> getFields();
    Code:
       0: aload_0
       1: getfield      #9                  // Field fields:Ljava/util/Set;
       4: areturn

  public void setFields(java.util.Set<javax.enterprise.inject.spi.AnnotatedField<? super T>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field fields:Ljava/util/Set;
       5: return

  public java.lang.Class<T> getJavaClass();
    Code:
       0: aload_0
       1: getfield      #2                  // Field javaClass:Ljava/lang/Class;
       4: areturn

  public java.util.Set<javax.enterprise.inject.spi.AnnotatedMethod<? super T>> getMethods();
    Code:
       0: aload_0
       1: getfield      #10                 // Field methods:Ljava/util/Set;
       4: areturn

  public void setMethods(java.util.Set<javax.enterprise.inject.spi.AnnotatedMethod<? super T>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field methods:Ljava/util/Set;
       5: return
}
