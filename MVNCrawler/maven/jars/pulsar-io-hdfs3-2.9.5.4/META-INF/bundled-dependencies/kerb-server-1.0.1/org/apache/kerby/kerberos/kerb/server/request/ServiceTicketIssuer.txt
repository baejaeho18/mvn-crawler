Compiled from "ServiceTicketIssuer.java"
public class org.apache.kerby.kerberos.kerb.server.request.ServiceTicketIssuer extends org.apache.kerby.kerberos.kerb.server.request.TicketIssuer {
  private final org.apache.kerby.kerberos.kerb.type.ticket.Ticket tgtTicket;

  private final org.apache.kerby.kerberos.kerb.type.base.AuthToken token;

  public org.apache.kerby.kerberos.kerb.server.request.ServiceTicketIssuer(org.apache.kerby.kerberos.kerb.server.request.TgsRequest);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/kerby/kerberos/kerb/server/request/TicketIssuer."<init>":(Lorg/apache/kerby/kerberos/kerb/server/request/KdcRequest;)V
       5: aload_0
       6: aload_1
       7: invokevirtual #2                  // Method org/apache/kerby/kerberos/kerb/server/request/TgsRequest.getTgtTicket:()Lorg/apache/kerby/kerberos/kerb/type/ticket/Ticket;
      10: putfield      #3                  // Field tgtTicket:Lorg/apache/kerby/kerberos/kerb/type/ticket/Ticket;
      13: aload_0
      14: aload_1
      15: invokevirtual #4                  // Method org/apache/kerby/kerberos/kerb/server/request/TgsRequest.getToken:()Lorg/apache/kerby/kerberos/kerb/type/base/AuthToken;
      18: putfield      #5                  // Field token:Lorg/apache/kerby/kerberos/kerb/type/base/AuthToken;
      21: return

  protected org.apache.kerby.kerberos.kerb.server.request.KdcRequest getTgsRequest();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getKdcRequest:()Lorg/apache/kerby/kerberos/kerb/server/request/KdcRequest;
       4: areturn

  protected org.apache.kerby.kerberos.kerb.type.base.PrincipalName getclientPrincipal();
    Code:
       0: aload_0
       1: getfield      #5                  // Field token:Lorg/apache/kerby/kerberos/kerb/type/base/AuthToken;
       4: ifnull        24
       7: new           #7                  // class org/apache/kerby/kerberos/kerb/type/base/PrincipalName
      10: dup
      11: aload_0
      12: getfield      #5                  // Field token:Lorg/apache/kerby/kerberos/kerb/type/base/AuthToken;
      15: invokeinterface #8,  1            // InterfaceMethod org/apache/kerby/kerberos/kerb/type/base/AuthToken.getSubject:()Ljava/lang/String;
      20: invokespecial #9                  // Method org/apache/kerby/kerberos/kerb/type/base/PrincipalName."<init>":(Ljava/lang/String;)V
      23: areturn
      24: aload_0
      25: getfield      #3                  // Field tgtTicket:Lorg/apache/kerby/kerberos/kerb/type/ticket/Ticket;
      28: invokevirtual #10                 // Method org/apache/kerby/kerberos/kerb/type/ticket/Ticket.getEncPart:()Lorg/apache/kerby/kerberos/kerb/type/ticket/EncTicketPart;
      31: invokevirtual #11                 // Method org/apache/kerby/kerberos/kerb/type/ticket/EncTicketPart.getCname:()Lorg/apache/kerby/kerberos/kerb/type/base/PrincipalName;
      34: areturn

  protected org.apache.kerby.kerberos.kerb.type.base.TransitedEncoding getTransitedEncoding();
    Code:
       0: aload_0
       1: getfield      #5                  // Field token:Lorg/apache/kerby/kerberos/kerb/type/base/AuthToken;
       4: ifnull        12
       7: aload_0
       8: invokespecial #12                 // Method org/apache/kerby/kerberos/kerb/server/request/TicketIssuer.getTransitedEncoding:()Lorg/apache/kerby/kerberos/kerb/type/base/TransitedEncoding;
      11: areturn
      12: aload_0
      13: getfield      #3                  // Field tgtTicket:Lorg/apache/kerby/kerberos/kerb/type/ticket/Ticket;
      16: invokevirtual #10                 // Method org/apache/kerby/kerberos/kerb/type/ticket/Ticket.getEncPart:()Lorg/apache/kerby/kerberos/kerb/type/ticket/EncTicketPart;
      19: invokevirtual #13                 // Method org/apache/kerby/kerberos/kerb/type/ticket/EncTicketPart.getTransited:()Lorg/apache/kerby/kerberos/kerb/type/base/TransitedEncoding;
      22: areturn
}
