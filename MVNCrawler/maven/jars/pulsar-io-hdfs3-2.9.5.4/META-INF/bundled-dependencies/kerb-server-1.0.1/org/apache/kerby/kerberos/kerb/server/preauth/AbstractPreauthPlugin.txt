Compiled from "AbstractPreauthPlugin.java"
public class org.apache.kerby.kerberos.kerb.server.preauth.AbstractPreauthPlugin implements org.apache.kerby.kerberos.kerb.server.preauth.KdcPreauth {
  private org.apache.kerby.kerberos.kerb.preauth.PreauthPluginMeta pluginMeta;

  public org.apache.kerby.kerberos.kerb.server.preauth.AbstractPreauthPlugin(org.apache.kerby.kerberos.kerb.preauth.PreauthPluginMeta);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field pluginMeta:Lorg/apache/kerby/kerberos/kerb/preauth/PreauthPluginMeta;
       9: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field pluginMeta:Lorg/apache/kerby/kerberos/kerb/preauth/PreauthPluginMeta;
       4: invokeinterface #3,  1            // InterfaceMethod org/apache/kerby/kerberos/kerb/preauth/PreauthPluginMeta.getName:()Ljava/lang/String;
       9: areturn

  public int getVersion();
    Code:
       0: aload_0
       1: getfield      #2                  // Field pluginMeta:Lorg/apache/kerby/kerberos/kerb/preauth/PreauthPluginMeta;
       4: invokeinterface #4,  1            // InterfaceMethod org/apache/kerby/kerberos/kerb/preauth/PreauthPluginMeta.getVersion:()I
       9: ireturn

  public org.apache.kerby.kerberos.kerb.type.pa.PaDataType[] getPaTypes();
    Code:
       0: aload_0
       1: getfield      #2                  // Field pluginMeta:Lorg/apache/kerby/kerberos/kerb/preauth/PreauthPluginMeta;
       4: invokeinterface #5,  1            // InterfaceMethod org/apache/kerby/kerberos/kerb/preauth/PreauthPluginMeta.getPaTypes:()[Lorg/apache/kerby/kerberos/kerb/type/pa/PaDataType;
       9: areturn

  public void initWith(org.apache.kerby.kerberos.kerb.server.KdcContext);
    Code:
       0: return

  public org.apache.kerby.kerberos.kerb.preauth.PluginRequestContext initRequestContext(org.apache.kerby.kerberos.kerb.server.request.KdcRequest);
    Code:
       0: aconst_null
       1: areturn

  public void provideEdata(org.apache.kerby.kerberos.kerb.server.request.KdcRequest, org.apache.kerby.kerberos.kerb.preauth.PluginRequestContext, org.apache.kerby.kerberos.kerb.type.pa.PaData) throws org.apache.kerby.kerberos.kerb.KrbException;
    Code:
       0: return

  public boolean verify(org.apache.kerby.kerberos.kerb.server.request.KdcRequest, org.apache.kerby.kerberos.kerb.preauth.PluginRequestContext, org.apache.kerby.kerberos.kerb.type.pa.PaDataEntry) throws org.apache.kerby.kerberos.kerb.KrbException;
    Code:
       0: iconst_0
       1: ireturn

  public void providePaData(org.apache.kerby.kerberos.kerb.server.request.KdcRequest, org.apache.kerby.kerberos.kerb.preauth.PluginRequestContext, org.apache.kerby.kerberos.kerb.type.pa.PaData);
    Code:
       0: return

  public org.apache.kerby.kerberos.kerb.preauth.PaFlags getFlags(org.apache.kerby.kerberos.kerb.server.request.KdcRequest, org.apache.kerby.kerberos.kerb.preauth.PluginRequestContext, org.apache.kerby.kerberos.kerb.type.pa.PaDataType);
    Code:
       0: aconst_null
       1: areturn

  public void destroy();
    Code:
       0: return
}
