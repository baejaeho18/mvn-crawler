Compiled from "ADCamMac.java"
public class org.apache.kerby.kerberos.kerb.type.ad.ADCamMac extends org.apache.kerby.kerberos.kerb.type.ad.AuthorizationDataEntry {
  private static final org.slf4j.Logger LOG;

  private org.apache.kerby.kerberos.kerb.type.ad.ADCamMac$CamMac myCamMac;

  public org.apache.kerby.kerberos.kerb.type.ad.ADCamMac();
    Code:
       0: aload_0
       1: getstatic     #1                  // Field org/apache/kerby/kerberos/kerb/type/ad/AuthorizationType.AD_CAMMAC:Lorg/apache/kerby/kerberos/kerb/type/ad/AuthorizationType;
       4: invokespecial #2                  // Method org/apache/kerby/kerberos/kerb/type/ad/AuthorizationDataEntry."<init>":(Lorg/apache/kerby/kerberos/kerb/type/ad/AuthorizationType;)V
       7: aload_0
       8: new           #3                  // class org/apache/kerby/kerberos/kerb/type/ad/ADCamMac$CamMac
      11: dup
      12: invokespecial #4                  // Method org/apache/kerby/kerberos/kerb/type/ad/ADCamMac$CamMac."<init>":()V
      15: putfield      #5                  // Field myCamMac:Lorg/apache/kerby/kerberos/kerb/type/ad/ADCamMac$CamMac;
      18: aload_0
      19: getfield      #5                  // Field myCamMac:Lorg/apache/kerby/kerberos/kerb/type/ad/ADCamMac$CamMac;
      22: aload_0
      23: putfield      #6                  // Field org/apache/kerby/kerberos/kerb/type/ad/ADCamMac$CamMac.outerEncodeable:Lorg/apache/kerby/asn1/type/Asn1Encodeable;
      26: return

  public org.apache.kerby.kerberos.kerb.type.ad.ADCamMac(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #7                  // Method "<init>":()V
       4: aload_0
       5: getfield      #5                  // Field myCamMac:Lorg/apache/kerby/kerberos/kerb/type/ad/ADCamMac$CamMac;
       8: aload_1
       9: invokevirtual #8                  // Method org/apache/kerby/kerberos/kerb/type/ad/ADCamMac$CamMac.decode:([B)V
      12: return

  public org.apache.kerby.kerberos.kerb.type.ad.AuthorizationData getAuthorizationData();
    Code:
       0: aload_0
       1: getfield      #5                  // Field myCamMac:Lorg/apache/kerby/kerberos/kerb/type/ad/ADCamMac$CamMac;
       4: invokevirtual #9                  // Method org/apache/kerby/kerberos/kerb/type/ad/ADCamMac$CamMac.getAuthorizationData:()Lorg/apache/kerby/kerberos/kerb/type/ad/AuthorizationData;
       7: areturn

  public void setAuthorizationData(org.apache.kerby.kerberos.kerb.type.ad.AuthorizationData);
    Code:
       0: aload_0
       1: getfield      #5                  // Field myCamMac:Lorg/apache/kerby/kerberos/kerb/type/ad/ADCamMac$CamMac;
       4: aload_1
       5: invokevirtual #10                 // Method org/apache/kerby/kerberos/kerb/type/ad/ADCamMac$CamMac.setAuthorizationData:(Lorg/apache/kerby/kerberos/kerb/type/ad/AuthorizationData;)V
       8: return

  public org.apache.kerby.kerberos.kerb.type.ad.CamMacVerifierMac getKdcVerifier();
    Code:
       0: aload_0
       1: getfield      #5                  // Field myCamMac:Lorg/apache/kerby/kerberos/kerb/type/ad/ADCamMac$CamMac;
       4: invokevirtual #11                 // Method org/apache/kerby/kerberos/kerb/type/ad/ADCamMac$CamMac.getKdcVerifier:()Lorg/apache/kerby/kerberos/kerb/type/ad/CamMacVerifierMac;
       7: areturn

  public void setKdcVerifier(org.apache.kerby.kerberos.kerb.type.ad.CamMacVerifierMac);
    Code:
       0: aload_0
       1: getfield      #5                  // Field myCamMac:Lorg/apache/kerby/kerberos/kerb/type/ad/ADCamMac$CamMac;
       4: aload_1
       5: invokevirtual #12                 // Method org/apache/kerby/kerberos/kerb/type/ad/ADCamMac$CamMac.setKdcVerifier:(Lorg/apache/kerby/kerberos/kerb/type/ad/CamMacVerifierMac;)V
       8: return

  public org.apache.kerby.kerberos.kerb.type.ad.CamMacVerifierMac getSvcVerifier();
    Code:
       0: aload_0
       1: getfield      #5                  // Field myCamMac:Lorg/apache/kerby/kerberos/kerb/type/ad/ADCamMac$CamMac;
       4: invokevirtual #13                 // Method org/apache/kerby/kerberos/kerb/type/ad/ADCamMac$CamMac.getSvcVerifier:()Lorg/apache/kerby/kerberos/kerb/type/ad/CamMacVerifierMac;
       7: areturn

  public void setSvcVerifier(org.apache.kerby.kerberos.kerb.type.ad.CamMacVerifierMac);
    Code:
       0: aload_0
       1: getfield      #5                  // Field myCamMac:Lorg/apache/kerby/kerberos/kerb/type/ad/ADCamMac$CamMac;
       4: aload_1
       5: invokevirtual #14                 // Method org/apache/kerby/kerberos/kerb/type/ad/ADCamMac$CamMac.setSvcVerifier:(Lorg/apache/kerby/kerberos/kerb/type/ad/CamMacVerifierMac;)V
       8: return

  public org.apache.kerby.kerberos.kerb.type.ad.CamMacOtherVerifiers getOtherVerifiers();
    Code:
       0: aload_0
       1: getfield      #5                  // Field myCamMac:Lorg/apache/kerby/kerberos/kerb/type/ad/ADCamMac$CamMac;
       4: invokevirtual #15                 // Method org/apache/kerby/kerberos/kerb/type/ad/ADCamMac$CamMac.getOtherVerifiers:()Lorg/apache/kerby/kerberos/kerb/type/ad/CamMacOtherVerifiers;
       7: areturn

  public void setOtherVerifiers(org.apache.kerby.kerberos.kerb.type.ad.CamMacOtherVerifiers);
    Code:
       0: aload_0
       1: getfield      #5                  // Field myCamMac:Lorg/apache/kerby/kerberos/kerb/type/ad/ADCamMac$CamMac;
       4: aload_1
       5: invokevirtual #16                 // Method org/apache/kerby/kerberos/kerb/type/ad/ADCamMac$CamMac.setOtherVerifiers:(Lorg/apache/kerby/kerberos/kerb/type/ad/CamMacOtherVerifiers;)V
       8: return

  protected int encodingBodyLength() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field bodyLength:I
       4: iconst_m1
       5: if_icmpne     27
       8: aload_0
       9: aload_0
      10: getfield      #5                  // Field myCamMac:Lorg/apache/kerby/kerberos/kerb/type/ad/ADCamMac$CamMac;
      13: invokevirtual #18                 // Method org/apache/kerby/kerberos/kerb/type/ad/ADCamMac$CamMac.encode:()[B
      16: invokevirtual #19                 // Method setAuthzData:([B)V
      19: aload_0
      20: aload_0
      21: invokespecial #20                 // Method org/apache/kerby/kerberos/kerb/type/ad/AuthorizationDataEntry.encodingBodyLength:()I
      24: putfield      #17                 // Field bodyLength:I
      27: aload_0
      28: getfield      #17                 // Field bodyLength:I
      31: ireturn

  public void dumpWith(org.apache.kerby.asn1.Asn1Dumper, int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field myCamMac:Lorg/apache/kerby/kerberos/kerb/type/ad/ADCamMac$CamMac;
       5: invokevirtual #18                 // Method org/apache/kerby/kerberos/kerb/type/ad/ADCamMac$CamMac.encode:()[B
       8: invokevirtual #19                 // Method setAuthzData:([B)V
      11: goto          45
      14: astore_3
      15: getstatic     #22                 // Field LOG:Lorg/slf4j/Logger;
      18: new           #23                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #25                 // String Failed to set the AD_DATA field.
      27: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_3
      31: invokevirtual #27                 // Method java/io/IOException.toString:()Ljava/lang/String;
      34: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokeinterface #29,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
      45: aload_0
      46: aload_1
      47: iload_2
      48: invokespecial #30                 // Method org/apache/kerby/kerberos/kerb/type/ad/AuthorizationDataEntry.dumpWith:(Lorg/apache/kerby/asn1/Asn1Dumper;I)V
      51: aload_1
      52: invokevirtual #31                 // Method org/apache/kerby/asn1/Asn1Dumper.newLine:()Lorg/apache/kerby/asn1/Asn1Dumper;
      55: pop
      56: aload_0
      57: getfield      #5                  // Field myCamMac:Lorg/apache/kerby/kerberos/kerb/type/ad/ADCamMac$CamMac;
      60: aload_1
      61: iload_2
      62: bipush        8
      64: iadd
      65: invokevirtual #32                 // Method org/apache/kerby/kerberos/kerb/type/ad/ADCamMac$CamMac.dumpWith:(Lorg/apache/kerby/asn1/Asn1Dumper;I)V
      68: return
    Exception table:
       from    to  target type
           0    11    14   Class java/io/IOException

  static {};
    Code:
       0: ldc_w         #33                 // class org/apache/kerby/kerberos/kerb/type/ad/ADCamMac
       3: invokestatic  #34                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #22                 // Field LOG:Lorg/slf4j/Logger;
       9: return
}
