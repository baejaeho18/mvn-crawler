Compiled from "CheckSum.java"
public class org.apache.kerby.kerberos.kerb.type.base.CheckSum extends org.apache.kerby.kerberos.kerb.type.KrbSequenceType {
  static org.apache.kerby.asn1.Asn1FieldInfo[] fieldInfos;

  public org.apache.kerby.kerberos.kerb.type.base.CheckSum();
    Code:
       0: aload_0
       1: getstatic     #1                  // Field fieldInfos:[Lorg/apache/kerby/asn1/Asn1FieldInfo;
       4: invokespecial #2                  // Method org/apache/kerby/kerberos/kerb/type/KrbSequenceType."<init>":([Lorg/apache/kerby/asn1/Asn1FieldInfo;)V
       7: return

  public org.apache.kerby.kerberos.kerb.type.base.CheckSum(org.apache.kerby.kerberos.kerb.type.base.CheckSumType, byte[]);
    Code:
       0: aload_0
       1: getstatic     #1                  // Field fieldInfos:[Lorg/apache/kerby/asn1/Asn1FieldInfo;
       4: invokespecial #2                  // Method org/apache/kerby/kerberos/kerb/type/KrbSequenceType."<init>":([Lorg/apache/kerby/asn1/Asn1FieldInfo;)V
       7: aload_0
       8: aload_1
       9: invokevirtual #3                  // Method setCksumtype:(Lorg/apache/kerby/kerberos/kerb/type/base/CheckSumType;)V
      12: aload_0
      13: aload_2
      14: invokevirtual #4                  // Method setChecksum:([B)V
      17: return

  public org.apache.kerby.kerberos.kerb.type.base.CheckSum(int, byte[]);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #5                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       5: invokestatic  #6                  // Method org/apache/kerby/kerberos/kerb/type/base/CheckSumType.fromValue:(Ljava/lang/Integer;)Lorg/apache/kerby/kerberos/kerb/type/base/CheckSumType;
       8: aload_2
       9: invokespecial #7                  // Method "<init>":(Lorg/apache/kerby/kerberos/kerb/type/base/CheckSumType;[B)V
      12: return

  public org.apache.kerby.kerberos.kerb.type.base.CheckSumType getCksumtype();
    Code:
       0: aload_0
       1: getstatic     #8                  // Field org/apache/kerby/kerberos/kerb/type/base/CheckSum$CheckSumField.CKSUM_TYPE:Lorg/apache/kerby/kerberos/kerb/type/base/CheckSum$CheckSumField;
       4: invokevirtual #9                  // Method getFieldAsInteger:(Lorg/apache/kerby/asn1/EnumType;)Ljava/lang/Integer;
       7: astore_1
       8: aload_1
       9: invokestatic  #6                  // Method org/apache/kerby/kerberos/kerb/type/base/CheckSumType.fromValue:(Ljava/lang/Integer;)Lorg/apache/kerby/kerberos/kerb/type/base/CheckSumType;
      12: areturn

  public void setCksumtype(org.apache.kerby.kerberos.kerb.type.base.CheckSumType);
    Code:
       0: aload_0
       1: getstatic     #8                  // Field org/apache/kerby/kerberos/kerb/type/base/CheckSum$CheckSumField.CKSUM_TYPE:Lorg/apache/kerby/kerberos/kerb/type/base/CheckSum$CheckSumField;
       4: aload_1
       5: invokevirtual #10                 // Method org/apache/kerby/kerberos/kerb/type/base/CheckSumType.getValue:()I
       8: invokevirtual #11                 // Method setFieldAsInt:(Lorg/apache/kerby/asn1/EnumType;I)V
      11: return

  public byte[] getChecksum();
    Code:
       0: aload_0
       1: getstatic     #12                 // Field org/apache/kerby/kerberos/kerb/type/base/CheckSum$CheckSumField.CHECK_SUM:Lorg/apache/kerby/kerberos/kerb/type/base/CheckSum$CheckSumField;
       4: invokevirtual #13                 // Method getFieldAsOctets:(Lorg/apache/kerby/asn1/EnumType;)[B
       7: areturn

  public void setChecksum(byte[]);
    Code:
       0: aload_0
       1: getstatic     #12                 // Field org/apache/kerby/kerberos/kerb/type/base/CheckSum$CheckSumField.CHECK_SUM:Lorg/apache/kerby/kerberos/kerb/type/base/CheckSum$CheckSumField;
       4: aload_1
       5: invokevirtual #14                 // Method setFieldAsOctets:(Lorg/apache/kerby/asn1/EnumType;[B)V
       8: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #15                 // class org/apache/kerby/kerberos/kerb/type/base/CheckSum
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #15                 // class org/apache/kerby/kerberos/kerb/type/base/CheckSum
      20: astore_2
      21: aload_0
      22: invokevirtual #16                 // Method getCksumtype:()Lorg/apache/kerby/kerberos/kerb/type/base/CheckSumType;
      25: aload_2
      26: invokevirtual #16                 // Method getCksumtype:()Lorg/apache/kerby/kerberos/kerb/type/base/CheckSumType;
      29: if_acmpne     50
      32: aload_0
      33: invokevirtual #17                 // Method getChecksum:()[B
      36: aload_2
      37: invokevirtual #17                 // Method getChecksum:()[B
      40: invokestatic  #18                 // Method java/util/Arrays.equals:([B[B)Z
      43: ifeq          50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ireturn

  public int hashCode();
    Code:
       0: bipush        17
       2: istore_1
       3: aload_0
       4: invokevirtual #16                 // Method getCksumtype:()Lorg/apache/kerby/kerberos/kerb/type/base/CheckSumType;
       7: ifnull        23
      10: bipush        31
      12: iload_1
      13: imul
      14: aload_0
      15: invokevirtual #16                 // Method getCksumtype:()Lorg/apache/kerby/kerberos/kerb/type/base/CheckSumType;
      18: invokevirtual #19                 // Method org/apache/kerby/kerberos/kerb/type/base/CheckSumType.hashCode:()I
      21: iadd
      22: istore_1
      23: aload_0
      24: invokevirtual #17                 // Method getChecksum:()[B
      27: ifnull        43
      30: bipush        31
      32: iload_1
      33: imul
      34: aload_0
      35: invokevirtual #17                 // Method getChecksum:()[B
      38: invokestatic  #20                 // Method java/util/Arrays.hashCode:([B)I
      41: iadd
      42: istore_1
      43: iload_1
      44: ireturn

  public boolean isEqual(org.apache.kerby.kerberos.kerb.type.base.CheckSum);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #21                 // Method equals:(Ljava/lang/Object;)Z
       5: ireturn

  public boolean isEqual(byte[]);
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method getChecksum:()[B
       4: aload_1
       5: invokestatic  #18                 // Method java/util/Arrays.equals:([B[B)Z
       8: ireturn

  static {};
    Code:
       0: iconst_2
       1: anewarray     #22                 // class org/apache/kerby/asn1/Asn1FieldInfo
       4: dup
       5: iconst_0
       6: new           #23                 // class org/apache/kerby/asn1/ExplicitField
       9: dup
      10: getstatic     #8                  // Field org/apache/kerby/kerberos/kerb/type/base/CheckSum$CheckSumField.CKSUM_TYPE:Lorg/apache/kerby/kerberos/kerb/type/base/CheckSum$CheckSumField;
      13: ldc_w         #24                 // class org/apache/kerby/asn1/type/Asn1Integer
      16: invokespecial #25                 // Method org/apache/kerby/asn1/ExplicitField."<init>":(Lorg/apache/kerby/asn1/EnumType;Ljava/lang/Class;)V
      19: aastore
      20: dup
      21: iconst_1
      22: new           #23                 // class org/apache/kerby/asn1/ExplicitField
      25: dup
      26: getstatic     #12                 // Field org/apache/kerby/kerberos/kerb/type/base/CheckSum$CheckSumField.CHECK_SUM:Lorg/apache/kerby/kerberos/kerb/type/base/CheckSum$CheckSumField;
      29: ldc_w         #26                 // class org/apache/kerby/asn1/type/Asn1OctetString
      32: invokespecial #25                 // Method org/apache/kerby/asn1/ExplicitField."<init>":(Lorg/apache/kerby/asn1/EnumType;Ljava/lang/Class;)V
      35: aastore
      36: putstatic     #1                  // Field fieldInfos:[Lorg/apache/kerby/asn1/Asn1FieldInfo;
      39: return
}
