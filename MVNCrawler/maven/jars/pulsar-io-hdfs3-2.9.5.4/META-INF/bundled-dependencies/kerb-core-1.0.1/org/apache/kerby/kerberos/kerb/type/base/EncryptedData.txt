Compiled from "EncryptedData.java"
public class org.apache.kerby.kerberos.kerb.type.base.EncryptedData extends org.apache.kerby.kerberos.kerb.type.KrbSequenceType {
  static org.apache.kerby.asn1.Asn1FieldInfo[] fieldInfos;

  public org.apache.kerby.kerberos.kerb.type.base.EncryptedData();
    Code:
       0: aload_0
       1: getstatic     #1                  // Field fieldInfos:[Lorg/apache/kerby/asn1/Asn1FieldInfo;
       4: invokespecial #2                  // Method org/apache/kerby/kerberos/kerb/type/KrbSequenceType."<init>":([Lorg/apache/kerby/asn1/Asn1FieldInfo;)V
       7: return

  public org.apache.kerby.kerberos.kerb.type.base.EncryptionType getEType();
    Code:
       0: aload_0
       1: getstatic     #3                  // Field org/apache/kerby/kerberos/kerb/type/base/EncryptedData$EncryptedDataField.ETYPE:Lorg/apache/kerby/kerberos/kerb/type/base/EncryptedData$EncryptedDataField;
       4: invokevirtual #4                  // Method getFieldAsInteger:(Lorg/apache/kerby/asn1/EnumType;)Ljava/lang/Integer;
       7: astore_1
       8: aload_1
       9: invokestatic  #5                  // Method org/apache/kerby/kerberos/kerb/type/base/EncryptionType.fromValue:(Ljava/lang/Integer;)Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionType;
      12: areturn

  public void setEType(org.apache.kerby.kerberos.kerb.type.base.EncryptionType);
    Code:
       0: aload_0
       1: getstatic     #3                  // Field org/apache/kerby/kerberos/kerb/type/base/EncryptedData$EncryptedDataField.ETYPE:Lorg/apache/kerby/kerberos/kerb/type/base/EncryptedData$EncryptedDataField;
       4: aload_1
       5: invokevirtual #6                  // Method org/apache/kerby/kerberos/kerb/type/base/EncryptionType.getValue:()I
       8: invokevirtual #7                  // Method setFieldAsInt:(Lorg/apache/kerby/asn1/EnumType;I)V
      11: return

  public int getKvno();
    Code:
       0: aload_0
       1: getstatic     #8                  // Field org/apache/kerby/kerberos/kerb/type/base/EncryptedData$EncryptedDataField.KVNO:Lorg/apache/kerby/kerberos/kerb/type/base/EncryptedData$EncryptedDataField;
       4: invokevirtual #4                  // Method getFieldAsInteger:(Lorg/apache/kerby/asn1/EnumType;)Ljava/lang/Integer;
       7: astore_1
       8: aload_1
       9: ifnull        17
      12: aload_1
      13: invokevirtual #9                  // Method java/lang/Integer.intValue:()I
      16: ireturn
      17: iconst_m1
      18: ireturn

  public void setKvno(int);
    Code:
       0: aload_0
       1: getstatic     #8                  // Field org/apache/kerby/kerberos/kerb/type/base/EncryptedData$EncryptedDataField.KVNO:Lorg/apache/kerby/kerberos/kerb/type/base/EncryptedData$EncryptedDataField;
       4: iload_1
       5: invokevirtual #7                  // Method setFieldAsInt:(Lorg/apache/kerby/asn1/EnumType;I)V
       8: return

  public byte[] getCipher();
    Code:
       0: aload_0
       1: getstatic     #10                 // Field org/apache/kerby/kerberos/kerb/type/base/EncryptedData$EncryptedDataField.CIPHER:Lorg/apache/kerby/kerberos/kerb/type/base/EncryptedData$EncryptedDataField;
       4: invokevirtual #11                 // Method getFieldAsOctets:(Lorg/apache/kerby/asn1/EnumType;)[B
       7: areturn

  public void setCipher(byte[]);
    Code:
       0: aload_0
       1: getstatic     #10                 // Field org/apache/kerby/kerberos/kerb/type/base/EncryptedData$EncryptedDataField.CIPHER:Lorg/apache/kerby/kerberos/kerb/type/base/EncryptedData$EncryptedDataField;
       4: aload_1
       5: invokevirtual #12                 // Method setFieldAsOctets:(Lorg/apache/kerby/asn1/EnumType;[B)V
       8: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #13                 // class org/apache/kerby/kerberos/kerb/type/base/EncryptedData
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #13                 // class org/apache/kerby/kerberos/kerb/type/base/EncryptedData
      20: astore_2
      21: aload_0
      22: invokevirtual #14                 // Method getEType:()Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionType;
      25: aload_2
      26: invokevirtual #14                 // Method getEType:()Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionType;
      29: if_acmpne     50
      32: aload_0
      33: invokevirtual #15                 // Method getCipher:()[B
      36: aload_2
      37: invokevirtual #15                 // Method getCipher:()[B
      40: invokestatic  #16                 // Method java/util/Arrays.equals:([B[B)Z
      43: ifeq          50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ireturn

  public int hashCode();
    Code:
       0: bipush        17
       2: istore_1
       3: aload_0
       4: invokevirtual #14                 // Method getEType:()Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionType;
       7: ifnull        23
      10: bipush        31
      12: iload_1
      13: imul
      14: aload_0
      15: invokevirtual #14                 // Method getEType:()Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionType;
      18: invokevirtual #17                 // Method org/apache/kerby/kerberos/kerb/type/base/EncryptionType.hashCode:()I
      21: iadd
      22: istore_1
      23: aload_0
      24: invokevirtual #15                 // Method getCipher:()[B
      27: ifnull        43
      30: bipush        31
      32: iload_1
      33: imul
      34: aload_0
      35: invokevirtual #15                 // Method getCipher:()[B
      38: invokestatic  #18                 // Method java/util/Arrays.hashCode:([B)I
      41: iadd
      42: istore_1
      43: iload_1
      44: ireturn

  static {};
    Code:
       0: iconst_3
       1: anewarray     #19                 // class org/apache/kerby/asn1/Asn1FieldInfo
       4: dup
       5: iconst_0
       6: new           #20                 // class org/apache/kerby/asn1/ExplicitField
       9: dup
      10: getstatic     #3                  // Field org/apache/kerby/kerberos/kerb/type/base/EncryptedData$EncryptedDataField.ETYPE:Lorg/apache/kerby/kerberos/kerb/type/base/EncryptedData$EncryptedDataField;
      13: ldc_w         #21                 // class org/apache/kerby/asn1/type/Asn1Integer
      16: invokespecial #22                 // Method org/apache/kerby/asn1/ExplicitField."<init>":(Lorg/apache/kerby/asn1/EnumType;Ljava/lang/Class;)V
      19: aastore
      20: dup
      21: iconst_1
      22: new           #20                 // class org/apache/kerby/asn1/ExplicitField
      25: dup
      26: getstatic     #8                  // Field org/apache/kerby/kerberos/kerb/type/base/EncryptedData$EncryptedDataField.KVNO:Lorg/apache/kerby/kerberos/kerb/type/base/EncryptedData$EncryptedDataField;
      29: ldc_w         #21                 // class org/apache/kerby/asn1/type/Asn1Integer
      32: invokespecial #22                 // Method org/apache/kerby/asn1/ExplicitField."<init>":(Lorg/apache/kerby/asn1/EnumType;Ljava/lang/Class;)V
      35: aastore
      36: dup
      37: iconst_2
      38: new           #20                 // class org/apache/kerby/asn1/ExplicitField
      41: dup
      42: getstatic     #10                 // Field org/apache/kerby/kerberos/kerb/type/base/EncryptedData$EncryptedDataField.CIPHER:Lorg/apache/kerby/kerberos/kerb/type/base/EncryptedData$EncryptedDataField;
      45: ldc_w         #23                 // class org/apache/kerby/asn1/type/Asn1OctetString
      48: invokespecial #22                 // Method org/apache/kerby/asn1/ExplicitField."<init>":(Lorg/apache/kerby/asn1/EnumType;Ljava/lang/Class;)V
      51: aastore
      52: putstatic     #1                  // Field fieldInfos:[Lorg/apache/kerby/asn1/Asn1FieldInfo;
      55: return
}
