Compiled from "EncryptionKey.java"
public class org.apache.kerby.kerberos.kerb.type.base.EncryptionKey extends org.apache.kerby.kerberos.kerb.type.KrbSequenceType {
  private int kvno;

  static org.apache.kerby.asn1.Asn1FieldInfo[] fieldInfos;

  public org.apache.kerby.kerberos.kerb.type.base.EncryptionKey();
    Code:
       0: aload_0
       1: getstatic     #1                  // Field fieldInfos:[Lorg/apache/kerby/asn1/Asn1FieldInfo;
       4: invokespecial #2                  // Method org/apache/kerby/kerberos/kerb/type/KrbSequenceType."<init>":([Lorg/apache/kerby/asn1/Asn1FieldInfo;)V
       7: aload_0
       8: iconst_m1
       9: putfield      #3                  // Field kvno:I
      12: return

  public org.apache.kerby.kerberos.kerb.type.base.EncryptionKey(int, byte[]);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iconst_m1
       4: invokespecial #4                  // Method "<init>":(I[BI)V
       7: return

  public org.apache.kerby.kerberos.kerb.type.base.EncryptionKey(int, byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #5                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       5: invokestatic  #6                  // Method org/apache/kerby/kerberos/kerb/type/base/EncryptionType.fromValue:(Ljava/lang/Integer;)Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionType;
       8: aload_2
       9: iload_3
      10: invokespecial #7                  // Method "<init>":(Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionType;[BI)V
      13: return

  public org.apache.kerby.kerberos.kerb.type.base.EncryptionKey(org.apache.kerby.kerberos.kerb.type.base.EncryptionType, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_m1
       4: invokespecial #7                  // Method "<init>":(Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionType;[BI)V
       7: return

  public org.apache.kerby.kerberos.kerb.type.base.EncryptionKey(org.apache.kerby.kerberos.kerb.type.base.EncryptionType, byte[], int);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method "<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #9                  // Method setKeyType:(Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionType;)V
       9: aload_0
      10: aload_2
      11: invokevirtual #10                 // Method setKeyData:([B)V
      14: aload_0
      15: iload_3
      16: invokevirtual #11                 // Method setKvno:(I)V
      19: return

  public org.apache.kerby.kerberos.kerb.type.base.EncryptionType getKeyType();
    Code:
       0: aload_0
       1: getstatic     #12                 // Field org/apache/kerby/kerberos/kerb/type/base/EncryptionKey$EncryptionKeyField.KEY_TYPE:Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionKey$EncryptionKeyField;
       4: invokevirtual #13                 // Method getFieldAsInteger:(Lorg/apache/kerby/asn1/EnumType;)Ljava/lang/Integer;
       7: astore_1
       8: aload_1
       9: invokestatic  #6                  // Method org/apache/kerby/kerberos/kerb/type/base/EncryptionType.fromValue:(Ljava/lang/Integer;)Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionType;
      12: areturn

  public void setKeyType(org.apache.kerby.kerberos.kerb.type.base.EncryptionType);
    Code:
       0: aload_0
       1: getstatic     #12                 // Field org/apache/kerby/kerberos/kerb/type/base/EncryptionKey$EncryptionKeyField.KEY_TYPE:Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionKey$EncryptionKeyField;
       4: aload_1
       5: invokevirtual #14                 // Method org/apache/kerby/kerberos/kerb/type/base/EncryptionType.getValue:()I
       8: invokevirtual #15                 // Method setFieldAsInt:(Lorg/apache/kerby/asn1/EnumType;I)V
      11: return

  public byte[] getKeyData();
    Code:
       0: aload_0
       1: getstatic     #16                 // Field org/apache/kerby/kerberos/kerb/type/base/EncryptionKey$EncryptionKeyField.KEY_VALUE:Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionKey$EncryptionKeyField;
       4: invokevirtual #17                 // Method getFieldAsOctets:(Lorg/apache/kerby/asn1/EnumType;)[B
       7: areturn

  public void setKeyData(byte[]);
    Code:
       0: aload_0
       1: getstatic     #16                 // Field org/apache/kerby/kerberos/kerb/type/base/EncryptionKey$EncryptionKeyField.KEY_VALUE:Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionKey$EncryptionKeyField;
       4: aload_1
       5: invokevirtual #18                 // Method setFieldAsOctets:(Lorg/apache/kerby/asn1/EnumType;[B)V
       8: return

  public void setKvno(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field kvno:I
       5: return

  public int getKvno();
    Code:
       0: aload_0
       1: getfield      #3                  // Field kvno:I
       4: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #19                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #19                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #20                 // class org/apache/kerby/kerberos/kerb/type/base/EncryptionKey
      28: astore_2
      29: aload_0
      30: getfield      #3                  // Field kvno:I
      33: iconst_m1
      34: if_icmpeq     58
      37: aload_2
      38: getfield      #3                  // Field kvno:I
      41: iconst_m1
      42: if_icmpeq     58
      45: aload_0
      46: getfield      #3                  // Field kvno:I
      49: aload_2
      50: getfield      #3                  // Field kvno:I
      53: if_icmpeq     58
      56: iconst_0
      57: ireturn
      58: aload_0
      59: invokevirtual #21                 // Method getKeyType:()Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionType;
      62: aload_2
      63: invokevirtual #21                 // Method getKeyType:()Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionType;
      66: if_acmpeq     71
      69: iconst_0
      70: ireturn
      71: aload_0
      72: invokevirtual #22                 // Method getKeyData:()[B
      75: aload_2
      76: invokevirtual #22                 // Method getKeyData:()[B
      79: invokestatic  #23                 // Method java/util/Arrays.equals:([B[B)Z
      82: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #3                  // Field kvno:I
       4: istore_1
       5: aload_0
       6: invokevirtual #21                 // Method getKeyType:()Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionType;
       9: ifnull        25
      12: bipush        31
      14: iload_1
      15: imul
      16: aload_0
      17: invokevirtual #21                 // Method getKeyType:()Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionType;
      20: invokevirtual #24                 // Method org/apache/kerby/kerberos/kerb/type/base/EncryptionType.hashCode:()I
      23: iadd
      24: istore_1
      25: aload_0
      26: invokevirtual #22                 // Method getKeyData:()[B
      29: ifnull        45
      32: bipush        31
      34: iload_1
      35: imul
      36: aload_0
      37: invokevirtual #22                 // Method getKeyData:()[B
      40: invokestatic  #25                 // Method java/util/Arrays.hashCode:([B)I
      43: iadd
      44: istore_1
      45: iload_1
      46: ireturn

  static {};
    Code:
       0: iconst_2
       1: anewarray     #26                 // class org/apache/kerby/asn1/Asn1FieldInfo
       4: dup
       5: iconst_0
       6: new           #27                 // class org/apache/kerby/asn1/ExplicitField
       9: dup
      10: getstatic     #12                 // Field org/apache/kerby/kerberos/kerb/type/base/EncryptionKey$EncryptionKeyField.KEY_TYPE:Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionKey$EncryptionKeyField;
      13: ldc_w         #28                 // class org/apache/kerby/asn1/type/Asn1Integer
      16: invokespecial #29                 // Method org/apache/kerby/asn1/ExplicitField."<init>":(Lorg/apache/kerby/asn1/EnumType;Ljava/lang/Class;)V
      19: aastore
      20: dup
      21: iconst_1
      22: new           #27                 // class org/apache/kerby/asn1/ExplicitField
      25: dup
      26: getstatic     #16                 // Field org/apache/kerby/kerberos/kerb/type/base/EncryptionKey$EncryptionKeyField.KEY_VALUE:Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionKey$EncryptionKeyField;
      29: ldc_w         #30                 // class org/apache/kerby/asn1/type/Asn1OctetString
      32: invokespecial #29                 // Method org/apache/kerby/asn1/ExplicitField."<init>":(Lorg/apache/kerby/asn1/EnumType;Ljava/lang/Class;)V
      35: aastore
      36: putstatic     #1                  // Field fieldInfos:[Lorg/apache/kerby/asn1/Asn1FieldInfo;
      39: return
}
