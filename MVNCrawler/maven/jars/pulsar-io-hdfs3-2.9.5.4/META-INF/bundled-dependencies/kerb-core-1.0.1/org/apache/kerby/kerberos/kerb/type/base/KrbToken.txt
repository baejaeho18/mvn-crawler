Compiled from "KrbToken.java"
public class org.apache.kerby.kerberos.kerb.type.base.KrbToken extends org.apache.kerby.kerberos.kerb.type.base.KrbTokenBase implements org.apache.kerby.kerberos.kerb.type.base.AuthToken {
  private static org.apache.kerby.kerberos.kerb.provider.TokenEncoder tokenEncoder;

  private static org.apache.kerby.kerberos.kerb.provider.TokenDecoder tokenDecoder;

  private org.apache.kerby.kerberos.kerb.type.base.AuthToken innerToken;

  public org.apache.kerby.kerberos.kerb.type.base.KrbToken();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/kerby/kerberos/kerb/type/base/KrbTokenBase."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field innerToken:Lorg/apache/kerby/kerberos/kerb/type/base/AuthToken;
       9: return

  public org.apache.kerby.kerberos.kerb.type.base.KrbToken(org.apache.kerby.kerberos.kerb.type.base.AuthToken, org.apache.kerby.kerberos.kerb.type.base.TokenFormat);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method "<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field innerToken:Lorg/apache/kerby/kerberos/kerb/type/base/AuthToken;
       9: aload_0
      10: invokevirtual #4                  // Method setTokenType:()V
      13: aload_0
      14: aload_2
      15: invokevirtual #5                  // Method setTokenFormat:(Lorg/apache/kerby/kerberos/kerb/type/base/TokenFormat;)V
      18: aload_0
      19: invokestatic  #6                  // Method getTokenEncoder:()Lorg/apache/kerby/kerberos/kerb/provider/TokenEncoder;
      22: aload_0
      23: getfield      #2                  // Field innerToken:Lorg/apache/kerby/kerberos/kerb/type/base/AuthToken;
      26: invokeinterface #7,  2            // InterfaceMethod org/apache/kerby/kerberos/kerb/provider/TokenEncoder.encodeAsBytes:(Lorg/apache/kerby/kerberos/kerb/type/base/AuthToken;)[B
      31: invokevirtual #8                  // Method setTokenValue:([B)V
      34: goto          49
      37: astore_3
      38: new           #10                 // class java/lang/RuntimeException
      41: dup
      42: ldc           #11                 // String Failed to encode AuthToken
      44: aload_3
      45: invokespecial #12                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      48: athrow
      49: return
    Exception table:
       from    to  target type
          18    34    37   Class org/apache/kerby/kerberos/kerb/KrbException

  public org.apache.kerby.kerberos.kerb.type.base.AuthToken getAuthToken();
    Code:
       0: aload_0
       1: getfield      #2                  // Field innerToken:Lorg/apache/kerby/kerberos/kerb/type/base/AuthToken;
       4: areturn

  public void decode(org.apache.kerby.asn1.parse.Asn1ParseResult) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #13                 // Method org/apache/kerby/kerberos/kerb/type/base/KrbTokenBase.decode:(Lorg/apache/kerby/asn1/parse/Asn1ParseResult;)V
       5: aload_0
       6: invokevirtual #14                 // Method getTokenValue:()[B
       9: ifnull        32
      12: aload_0
      13: invokestatic  #15                 // Method getTokenDecoder:()Lorg/apache/kerby/kerberos/kerb/provider/TokenDecoder;
      16: aload_0
      17: invokevirtual #14                 // Method getTokenValue:()[B
      20: invokeinterface #16,  2           // InterfaceMethod org/apache/kerby/kerberos/kerb/provider/TokenDecoder.decodeFromBytes:([B)Lorg/apache/kerby/kerberos/kerb/type/base/AuthToken;
      25: putfield      #2                  // Field innerToken:Lorg/apache/kerby/kerberos/kerb/type/base/AuthToken;
      28: aload_0
      29: invokevirtual #4                  // Method setTokenType:()V
      32: return

  public void setTokenType();
    Code:
       0: aload_0
       1: getfield      #2                  // Field innerToken:Lorg/apache/kerby/kerberos/kerb/type/base/AuthToken;
       4: invokeinterface #17,  1           // InterfaceMethod org/apache/kerby/kerberos/kerb/type/base/AuthToken.getAudiences:()Ljava/util/List;
       9: astore_1
      10: aload_1
      11: ifnull        50
      14: aload_1
      15: invokeinterface #18,  1           // InterfaceMethod java/util/List.size:()I
      20: iconst_1
      21: if_icmpne     50
      24: aload_1
      25: iconst_0
      26: invokeinterface #19,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      31: checkcast     #20                 // class java/lang/String
      34: ldc           #21                 // String krbtgt
      36: invokevirtual #22                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      39: ifeq          50
      42: aload_0
      43: iconst_1
      44: invokevirtual #23                 // Method isIdToken:(Z)V
      47: goto          55
      50: aload_0
      51: iconst_1
      52: invokevirtual #24                 // Method isAcToken:(Z)V
      55: return

  protected static org.apache.kerby.kerberos.kerb.provider.TokenEncoder getTokenEncoder();
    Code:
       0: getstatic     #25                 // Field tokenEncoder:Lorg/apache/kerby/kerberos/kerb/provider/TokenEncoder;
       3: ifnonnull     17
       6: invokestatic  #26                 // Method org/apache/kerby/kerberos/kerb/KrbRuntime.getTokenProvider:()Lorg/apache/kerby/kerberos/kerb/provider/TokenProvider;
       9: invokeinterface #27,  1           // InterfaceMethod org/apache/kerby/kerberos/kerb/provider/TokenProvider.createTokenEncoder:()Lorg/apache/kerby/kerberos/kerb/provider/TokenEncoder;
      14: putstatic     #25                 // Field tokenEncoder:Lorg/apache/kerby/kerberos/kerb/provider/TokenEncoder;
      17: getstatic     #25                 // Field tokenEncoder:Lorg/apache/kerby/kerberos/kerb/provider/TokenEncoder;
      20: areturn

  protected static org.apache.kerby.kerberos.kerb.provider.TokenDecoder getTokenDecoder();
    Code:
       0: getstatic     #28                 // Field tokenDecoder:Lorg/apache/kerby/kerberos/kerb/provider/TokenDecoder;
       3: ifnonnull     17
       6: invokestatic  #26                 // Method org/apache/kerby/kerberos/kerb/KrbRuntime.getTokenProvider:()Lorg/apache/kerby/kerberos/kerb/provider/TokenProvider;
       9: invokeinterface #29,  1           // InterfaceMethod org/apache/kerby/kerberos/kerb/provider/TokenProvider.createTokenDecoder:()Lorg/apache/kerby/kerberos/kerb/provider/TokenDecoder;
      14: putstatic     #28                 // Field tokenDecoder:Lorg/apache/kerby/kerberos/kerb/provider/TokenDecoder;
      17: getstatic     #28                 // Field tokenDecoder:Lorg/apache/kerby/kerberos/kerb/provider/TokenDecoder;
      20: areturn

  public java.lang.String getSubject();
    Code:
       0: aload_0
       1: getfield      #2                  // Field innerToken:Lorg/apache/kerby/kerberos/kerb/type/base/AuthToken;
       4: invokeinterface #30,  1           // InterfaceMethod org/apache/kerby/kerberos/kerb/type/base/AuthToken.getSubject:()Ljava/lang/String;
       9: areturn

  public void setSubject(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field innerToken:Lorg/apache/kerby/kerberos/kerb/type/base/AuthToken;
       4: aload_1
       5: invokeinterface #31,  2           // InterfaceMethod org/apache/kerby/kerberos/kerb/type/base/AuthToken.setSubject:(Ljava/lang/String;)V
      10: return

  public java.lang.String getIssuer();
    Code:
       0: aload_0
       1: getfield      #2                  // Field innerToken:Lorg/apache/kerby/kerberos/kerb/type/base/AuthToken;
       4: invokeinterface #32,  1           // InterfaceMethod org/apache/kerby/kerberos/kerb/type/base/AuthToken.getIssuer:()Ljava/lang/String;
       9: areturn

  public void setIssuer(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field innerToken:Lorg/apache/kerby/kerberos/kerb/type/base/AuthToken;
       4: aload_1
       5: invokeinterface #33,  2           // InterfaceMethod org/apache/kerby/kerberos/kerb/type/base/AuthToken.setIssuer:(Ljava/lang/String;)V
      10: return

  public java.util.List<java.lang.String> getAudiences();
    Code:
       0: aload_0
       1: getfield      #2                  // Field innerToken:Lorg/apache/kerby/kerberos/kerb/type/base/AuthToken;
       4: invokeinterface #17,  1           // InterfaceMethod org/apache/kerby/kerberos/kerb/type/base/AuthToken.getAudiences:()Ljava/util/List;
       9: areturn

  public void setAudiences(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field innerToken:Lorg/apache/kerby/kerberos/kerb/type/base/AuthToken;
       4: aload_1
       5: invokeinterface #34,  2           // InterfaceMethod org/apache/kerby/kerberos/kerb/type/base/AuthToken.setAudiences:(Ljava/util/List;)V
      10: return

  public boolean isIdToken();
    Code:
       0: aload_0
       1: getfield      #2                  // Field innerToken:Lorg/apache/kerby/kerberos/kerb/type/base/AuthToken;
       4: invokeinterface #35,  1           // InterfaceMethod org/apache/kerby/kerberos/kerb/type/base/AuthToken.isIdToken:()Z
       9: ireturn

  public void isIdToken(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field innerToken:Lorg/apache/kerby/kerberos/kerb/type/base/AuthToken;
       4: iload_1
       5: invokeinterface #36,  2           // InterfaceMethod org/apache/kerby/kerberos/kerb/type/base/AuthToken.isIdToken:(Z)V
      10: return

  public boolean isAcToken();
    Code:
       0: aload_0
       1: getfield      #2                  // Field innerToken:Lorg/apache/kerby/kerberos/kerb/type/base/AuthToken;
       4: invokeinterface #37,  1           // InterfaceMethod org/apache/kerby/kerberos/kerb/type/base/AuthToken.isAcToken:()Z
       9: ireturn

  public void isAcToken(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field innerToken:Lorg/apache/kerby/kerberos/kerb/type/base/AuthToken;
       4: iload_1
       5: invokeinterface #38,  2           // InterfaceMethod org/apache/kerby/kerberos/kerb/type/base/AuthToken.isAcToken:(Z)V
      10: return

  public boolean isBearerToken();
    Code:
       0: aload_0
       1: getfield      #2                  // Field innerToken:Lorg/apache/kerby/kerberos/kerb/type/base/AuthToken;
       4: invokeinterface #39,  1           // InterfaceMethod org/apache/kerby/kerberos/kerb/type/base/AuthToken.isBearerToken:()Z
       9: ireturn

  public boolean isHolderOfKeyToken();
    Code:
       0: aload_0
       1: getfield      #2                  // Field innerToken:Lorg/apache/kerby/kerberos/kerb/type/base/AuthToken;
       4: invokeinterface #40,  1           // InterfaceMethod org/apache/kerby/kerberos/kerb/type/base/AuthToken.isHolderOfKeyToken:()Z
       9: ireturn

  public java.util.Date getExpiredTime();
    Code:
       0: aload_0
       1: getfield      #2                  // Field innerToken:Lorg/apache/kerby/kerberos/kerb/type/base/AuthToken;
       4: invokeinterface #41,  1           // InterfaceMethod org/apache/kerby/kerberos/kerb/type/base/AuthToken.getExpiredTime:()Ljava/util/Date;
       9: areturn

  public void setExpirationTime(java.util.Date);
    Code:
       0: aload_0
       1: getfield      #2                  // Field innerToken:Lorg/apache/kerby/kerberos/kerb/type/base/AuthToken;
       4: aload_1
       5: invokeinterface #42,  2           // InterfaceMethod org/apache/kerby/kerberos/kerb/type/base/AuthToken.setExpirationTime:(Ljava/util/Date;)V
      10: return

  public java.util.Date getNotBeforeTime();
    Code:
       0: aload_0
       1: getfield      #2                  // Field innerToken:Lorg/apache/kerby/kerberos/kerb/type/base/AuthToken;
       4: invokeinterface #43,  1           // InterfaceMethod org/apache/kerby/kerberos/kerb/type/base/AuthToken.getNotBeforeTime:()Ljava/util/Date;
       9: areturn

  public void setNotBeforeTime(java.util.Date);
    Code:
       0: aload_0
       1: getfield      #2                  // Field innerToken:Lorg/apache/kerby/kerberos/kerb/type/base/AuthToken;
       4: aload_1
       5: invokeinterface #44,  2           // InterfaceMethod org/apache/kerby/kerberos/kerb/type/base/AuthToken.setNotBeforeTime:(Ljava/util/Date;)V
      10: return

  public java.util.Date getIssueTime();
    Code:
       0: aload_0
       1: getfield      #2                  // Field innerToken:Lorg/apache/kerby/kerberos/kerb/type/base/AuthToken;
       4: invokeinterface #45,  1           // InterfaceMethod org/apache/kerby/kerberos/kerb/type/base/AuthToken.getIssueTime:()Ljava/util/Date;
       9: areturn

  public void setIssueTime(java.util.Date);
    Code:
       0: aload_0
       1: getfield      #2                  // Field innerToken:Lorg/apache/kerby/kerberos/kerb/type/base/AuthToken;
       4: aload_1
       5: invokeinterface #46,  2           // InterfaceMethod org/apache/kerby/kerberos/kerb/type/base/AuthToken.setIssueTime:(Ljava/util/Date;)V
      10: return

  public java.util.Map<java.lang.String, java.lang.Object> getAttributes();
    Code:
       0: aload_0
       1: getfield      #2                  // Field innerToken:Lorg/apache/kerby/kerberos/kerb/type/base/AuthToken;
       4: invokeinterface #47,  1           // InterfaceMethod org/apache/kerby/kerberos/kerb/type/base/AuthToken.getAttributes:()Ljava/util/Map;
       9: areturn

  public void addAttribute(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field innerToken:Lorg/apache/kerby/kerberos/kerb/type/base/AuthToken;
       4: aload_1
       5: aload_2
       6: invokeinterface #48,  3           // InterfaceMethod org/apache/kerby/kerberos/kerb/type/base/AuthToken.addAttribute:(Ljava/lang/String;Ljava/lang/Object;)V
      11: return

  public void setInnerToken(org.apache.kerby.kerberos.kerb.type.base.AuthToken);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field innerToken:Lorg/apache/kerby/kerberos/kerb/type/base/AuthToken;
       5: return
}
