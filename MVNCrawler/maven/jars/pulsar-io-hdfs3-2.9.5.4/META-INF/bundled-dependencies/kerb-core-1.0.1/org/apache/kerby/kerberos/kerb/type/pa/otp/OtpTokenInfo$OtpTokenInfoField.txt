Compiled from "OtpTokenInfo.java"
public final class org.apache.kerby.kerberos.kerb.type.pa.otp.OtpTokenInfo$OtpTokenInfoField extends java.lang.Enum<org.apache.kerby.kerberos.kerb.type.pa.otp.OtpTokenInfo$OtpTokenInfoField> implements org.apache.kerby.asn1.EnumType {
  public static final org.apache.kerby.kerberos.kerb.type.pa.otp.OtpTokenInfo$OtpTokenInfoField FLAGS;

  public static final org.apache.kerby.kerberos.kerb.type.pa.otp.OtpTokenInfo$OtpTokenInfoField OTP_VENDOR;

  public static final org.apache.kerby.kerberos.kerb.type.pa.otp.OtpTokenInfo$OtpTokenInfoField OTP_CHALLENGE;

  public static final org.apache.kerby.kerberos.kerb.type.pa.otp.OtpTokenInfo$OtpTokenInfoField OTP_LENGTH;

  public static final org.apache.kerby.kerberos.kerb.type.pa.otp.OtpTokenInfo$OtpTokenInfoField OTP_FORMAT;

  public static final org.apache.kerby.kerberos.kerb.type.pa.otp.OtpTokenInfo$OtpTokenInfoField OTP_TOKEN_ID;

  public static final org.apache.kerby.kerberos.kerb.type.pa.otp.OtpTokenInfo$OtpTokenInfoField OTP_ALG_ID;

  public static final org.apache.kerby.kerberos.kerb.type.pa.otp.OtpTokenInfo$OtpTokenInfoField SUPPORTED_HASH_ALG;

  public static final org.apache.kerby.kerberos.kerb.type.pa.otp.OtpTokenInfo$OtpTokenInfoField ITERATION_COUNT;

  private static final org.apache.kerby.kerberos.kerb.type.pa.otp.OtpTokenInfo$OtpTokenInfoField[] $VALUES;

  public static org.apache.kerby.kerberos.kerb.type.pa.otp.OtpTokenInfo$OtpTokenInfoField[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lorg/apache/kerby/kerberos/kerb/type/pa/otp/OtpTokenInfo$OtpTokenInfoField;
       3: invokevirtual #2                  // Method "[Lorg/apache/kerby/kerberos/kerb/type/pa/otp/OtpTokenInfo$OtpTokenInfoField;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lorg/apache/kerby/kerberos/kerb/type/pa/otp/OtpTokenInfo$OtpTokenInfoField;"
       9: areturn

  public static org.apache.kerby.kerberos.kerb.type.pa.otp.OtpTokenInfo$OtpTokenInfoField valueOf(java.lang.String);
    Code:
       0: ldc_w         #4                  // class org/apache/kerby/kerberos/kerb/type/pa/otp/OtpTokenInfo$OtpTokenInfoField
       3: aload_0
       4: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       7: checkcast     #4                  // class org/apache/kerby/kerberos/kerb/type/pa/otp/OtpTokenInfo$OtpTokenInfoField
      10: areturn

  private org.apache.kerby.kerberos.kerb.type.pa.otp.OtpTokenInfo$OtpTokenInfoField();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: return

  public int getValue();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method ordinal:()I
       4: ireturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method name:()Ljava/lang/String;
       4: areturn

  static {};
    Code:
       0: new           #4                  // class org/apache/kerby/kerberos/kerb/type/pa/otp/OtpTokenInfo$OtpTokenInfoField
       3: dup
       4: ldc           #9                  // String FLAGS
       6: iconst_0
       7: invokespecial #10                 // Method "<init>":(Ljava/lang/String;I)V
      10: putstatic     #11                 // Field FLAGS:Lorg/apache/kerby/kerberos/kerb/type/pa/otp/OtpTokenInfo$OtpTokenInfoField;
      13: new           #4                  // class org/apache/kerby/kerberos/kerb/type/pa/otp/OtpTokenInfo$OtpTokenInfoField
      16: dup
      17: ldc           #12                 // String OTP_VENDOR
      19: iconst_1
      20: invokespecial #10                 // Method "<init>":(Ljava/lang/String;I)V
      23: putstatic     #13                 // Field OTP_VENDOR:Lorg/apache/kerby/kerberos/kerb/type/pa/otp/OtpTokenInfo$OtpTokenInfoField;
      26: new           #4                  // class org/apache/kerby/kerberos/kerb/type/pa/otp/OtpTokenInfo$OtpTokenInfoField
      29: dup
      30: ldc           #14                 // String OTP_CHALLENGE
      32: iconst_2
      33: invokespecial #10                 // Method "<init>":(Ljava/lang/String;I)V
      36: putstatic     #15                 // Field OTP_CHALLENGE:Lorg/apache/kerby/kerberos/kerb/type/pa/otp/OtpTokenInfo$OtpTokenInfoField;
      39: new           #4                  // class org/apache/kerby/kerberos/kerb/type/pa/otp/OtpTokenInfo$OtpTokenInfoField
      42: dup
      43: ldc           #16                 // String OTP_LENGTH
      45: iconst_3
      46: invokespecial #10                 // Method "<init>":(Ljava/lang/String;I)V
      49: putstatic     #17                 // Field OTP_LENGTH:Lorg/apache/kerby/kerberos/kerb/type/pa/otp/OtpTokenInfo$OtpTokenInfoField;
      52: new           #4                  // class org/apache/kerby/kerberos/kerb/type/pa/otp/OtpTokenInfo$OtpTokenInfoField
      55: dup
      56: ldc           #18                 // String OTP_FORMAT
      58: iconst_4
      59: invokespecial #10                 // Method "<init>":(Ljava/lang/String;I)V
      62: putstatic     #19                 // Field OTP_FORMAT:Lorg/apache/kerby/kerberos/kerb/type/pa/otp/OtpTokenInfo$OtpTokenInfoField;
      65: new           #4                  // class org/apache/kerby/kerberos/kerb/type/pa/otp/OtpTokenInfo$OtpTokenInfoField
      68: dup
      69: ldc           #20                 // String OTP_TOKEN_ID
      71: iconst_5
      72: invokespecial #10                 // Method "<init>":(Ljava/lang/String;I)V
      75: putstatic     #21                 // Field OTP_TOKEN_ID:Lorg/apache/kerby/kerberos/kerb/type/pa/otp/OtpTokenInfo$OtpTokenInfoField;
      78: new           #4                  // class org/apache/kerby/kerberos/kerb/type/pa/otp/OtpTokenInfo$OtpTokenInfoField
      81: dup
      82: ldc           #22                 // String OTP_ALG_ID
      84: bipush        6
      86: invokespecial #10                 // Method "<init>":(Ljava/lang/String;I)V
      89: putstatic     #23                 // Field OTP_ALG_ID:Lorg/apache/kerby/kerberos/kerb/type/pa/otp/OtpTokenInfo$OtpTokenInfoField;
      92: new           #4                  // class org/apache/kerby/kerberos/kerb/type/pa/otp/OtpTokenInfo$OtpTokenInfoField
      95: dup
      96: ldc           #24                 // String SUPPORTED_HASH_ALG
      98: bipush        7
     100: invokespecial #10                 // Method "<init>":(Ljava/lang/String;I)V
     103: putstatic     #25                 // Field SUPPORTED_HASH_ALG:Lorg/apache/kerby/kerberos/kerb/type/pa/otp/OtpTokenInfo$OtpTokenInfoField;
     106: new           #4                  // class org/apache/kerby/kerberos/kerb/type/pa/otp/OtpTokenInfo$OtpTokenInfoField
     109: dup
     110: ldc           #26                 // String ITERATION_COUNT
     112: bipush        8
     114: invokespecial #10                 // Method "<init>":(Ljava/lang/String;I)V
     117: putstatic     #27                 // Field ITERATION_COUNT:Lorg/apache/kerby/kerberos/kerb/type/pa/otp/OtpTokenInfo$OtpTokenInfoField;
     120: bipush        9
     122: anewarray     #4                  // class org/apache/kerby/kerberos/kerb/type/pa/otp/OtpTokenInfo$OtpTokenInfoField
     125: dup
     126: iconst_0
     127: getstatic     #11                 // Field FLAGS:Lorg/apache/kerby/kerberos/kerb/type/pa/otp/OtpTokenInfo$OtpTokenInfoField;
     130: aastore
     131: dup
     132: iconst_1
     133: getstatic     #13                 // Field OTP_VENDOR:Lorg/apache/kerby/kerberos/kerb/type/pa/otp/OtpTokenInfo$OtpTokenInfoField;
     136: aastore
     137: dup
     138: iconst_2
     139: getstatic     #15                 // Field OTP_CHALLENGE:Lorg/apache/kerby/kerberos/kerb/type/pa/otp/OtpTokenInfo$OtpTokenInfoField;
     142: aastore
     143: dup
     144: iconst_3
     145: getstatic     #17                 // Field OTP_LENGTH:Lorg/apache/kerby/kerberos/kerb/type/pa/otp/OtpTokenInfo$OtpTokenInfoField;
     148: aastore
     149: dup
     150: iconst_4
     151: getstatic     #19                 // Field OTP_FORMAT:Lorg/apache/kerby/kerberos/kerb/type/pa/otp/OtpTokenInfo$OtpTokenInfoField;
     154: aastore
     155: dup
     156: iconst_5
     157: getstatic     #21                 // Field OTP_TOKEN_ID:Lorg/apache/kerby/kerberos/kerb/type/pa/otp/OtpTokenInfo$OtpTokenInfoField;
     160: aastore
     161: dup
     162: bipush        6
     164: getstatic     #23                 // Field OTP_ALG_ID:Lorg/apache/kerby/kerberos/kerb/type/pa/otp/OtpTokenInfo$OtpTokenInfoField;
     167: aastore
     168: dup
     169: bipush        7
     171: getstatic     #25                 // Field SUPPORTED_HASH_ALG:Lorg/apache/kerby/kerberos/kerb/type/pa/otp/OtpTokenInfo$OtpTokenInfoField;
     174: aastore
     175: dup
     176: bipush        8
     178: getstatic     #27                 // Field ITERATION_COUNT:Lorg/apache/kerby/kerberos/kerb/type/pa/otp/OtpTokenInfo$OtpTokenInfoField;
     181: aastore
     182: putstatic     #1                  // Field $VALUES:[Lorg/apache/kerby/kerberos/kerb/type/pa/otp/OtpTokenInfo$OtpTokenInfoField;
     185: return
}
