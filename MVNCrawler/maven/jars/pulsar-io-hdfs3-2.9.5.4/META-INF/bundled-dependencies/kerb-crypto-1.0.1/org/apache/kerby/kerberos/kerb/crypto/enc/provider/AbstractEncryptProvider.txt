Compiled from "AbstractEncryptProvider.java"
public abstract class org.apache.kerby.kerberos.kerb.crypto.enc.provider.AbstractEncryptProvider implements org.apache.kerby.kerberos.kerb.crypto.enc.EncryptProvider {
  private int blockSize;

  private int keyInputSize;

  private int keySize;

  public org.apache.kerby.kerberos.kerb.crypto.enc.provider.AbstractEncryptProvider(int, int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field blockSize:I
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field keyInputSize:I
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field keySize:I
      19: return

  public int keyInputSize();
    Code:
       0: aload_0
       1: getfield      #3                  // Field keyInputSize:I
       4: ireturn

  public int keySize();
    Code:
       0: aload_0
       1: getfield      #4                  // Field keySize:I
       4: ireturn

  public int blockSize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field blockSize:I
       4: ireturn

  public void encrypt(byte[], byte[], byte[]) throws org.apache.kerby.kerberos.kerb.KrbException;
    Code:
       0: aload_0
       1: aload_3
       2: aload_1
       3: aload_2
       4: iconst_1
       5: invokevirtual #5                  // Method doEncrypt:([B[B[BZ)V
       8: return

  public void decrypt(byte[], byte[], byte[]) throws org.apache.kerby.kerberos.kerb.KrbException;
    Code:
       0: aload_0
       1: aload_3
       2: aload_1
       3: aload_2
       4: iconst_0
       5: invokevirtual #5                  // Method doEncrypt:([B[B[BZ)V
       8: return

  public void encrypt(byte[], byte[]) throws org.apache.kerby.kerberos.kerb.KrbException;
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method blockSize:()I
       4: newarray       byte
       6: astore_3
       7: aload_0
       8: aload_1
       9: aload_3
      10: aload_2
      11: invokevirtual #7                  // Method encrypt:([B[B[B)V
      14: return

  public void decrypt(byte[], byte[]) throws org.apache.kerby.kerberos.kerb.KrbException;
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method blockSize:()I
       4: newarray       byte
       6: astore_3
       7: aload_0
       8: aload_1
       9: aload_3
      10: aload_2
      11: invokevirtual #8                  // Method decrypt:([B[B[B)V
      14: return

  protected abstract void doEncrypt(byte[], byte[], byte[], boolean) throws org.apache.kerby.kerberos.kerb.KrbException;

  public byte[] cbcMac(byte[], byte[], byte[]) throws org.apache.kerby.kerberos.kerb.KrbException;
    Code:
       0: new           #9                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #10                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean supportCbcMac();
    Code:
       0: iconst_0
       1: ireturn
}
