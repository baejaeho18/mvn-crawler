Compiled from "Md5HmacRc4CheckSum.java"
public class org.apache.kerby.kerberos.kerb.crypto.cksum.Md5HmacRc4CheckSum extends org.apache.kerby.kerberos.kerb.crypto.cksum.AbstractKeyedCheckSumTypeHandler {
  public org.apache.kerby.kerberos.kerb.crypto.cksum.Md5HmacRc4CheckSum();
    Code:
       0: aload_0
       1: new           #1                  // class org/apache/kerby/kerberos/kerb/crypto/enc/provider/Rc4Provider
       4: dup
       5: invokespecial #2                  // Method org/apache/kerby/kerberos/kerb/crypto/enc/provider/Rc4Provider."<init>":()V
       8: new           #3                  // class org/apache/kerby/kerberos/kerb/crypto/cksum/provider/Md5Provider
      11: dup
      12: invokespecial #4                  // Method org/apache/kerby/kerberos/kerb/crypto/cksum/provider/Md5Provider."<init>":()V
      15: bipush        16
      17: bipush        16
      19: invokespecial #5                  // Method org/apache/kerby/kerberos/kerb/crypto/cksum/AbstractKeyedCheckSumTypeHandler."<init>":(Lorg/apache/kerby/kerberos/kerb/crypto/enc/EncryptProvider;Lorg/apache/kerby/kerberos/kerb/crypto/cksum/HashProvider;II)V
      22: return

  public int confounderSize();
    Code:
       0: bipush        8
       2: ireturn

  public org.apache.kerby.kerberos.kerb.type.base.CheckSumType cksumType();
    Code:
       0: getstatic     #6                  // Field org/apache/kerby/kerberos/kerb/type/base/CheckSumType.MD5_HMAC_ARCFOUR:Lorg/apache/kerby/kerberos/kerb/type/base/CheckSumType;
       3: areturn

  public boolean isSafe();
    Code:
       0: iconst_1
       1: ireturn

  public int cksumSize();
    Code:
       0: bipush        16
       2: ireturn

  public int keySize();
    Code:
       0: bipush        16
       2: ireturn

  protected byte[] doChecksumWithKey(byte[], int, int, byte[], int) throws org.apache.kerby.kerberos.kerb.KrbException;
    Code:
       0: aload         4
       2: astore        6
       4: iload         5
       6: iconst_0
       7: invokestatic  #7                  // Method org/apache/kerby/kerberos/kerb/crypto/util/Rc4.getSalt:(IZ)[B
      10: astore        7
      12: aload_0
      13: invokevirtual #8                  // Method hashProvider:()Lorg/apache/kerby/kerberos/kerb/crypto/cksum/HashProvider;
      16: aload         7
      18: invokeinterface #9,  2            // InterfaceMethod org/apache/kerby/kerberos/kerb/crypto/cksum/HashProvider.hash:([B)V
      23: aload_0
      24: invokevirtual #8                  // Method hashProvider:()Lorg/apache/kerby/kerberos/kerb/crypto/cksum/HashProvider;
      27: aload_1
      28: iload_2
      29: iload_3
      30: invokeinterface #10,  4           // InterfaceMethod org/apache/kerby/kerberos/kerb/crypto/cksum/HashProvider.hash:([BII)V
      35: aload_0
      36: invokevirtual #8                  // Method hashProvider:()Lorg/apache/kerby/kerberos/kerb/crypto/cksum/HashProvider;
      39: invokeinterface #11,  1           // InterfaceMethod org/apache/kerby/kerberos/kerb/crypto/cksum/HashProvider.output:()[B
      44: astore        8
      46: aload_0
      47: invokevirtual #8                  // Method hashProvider:()Lorg/apache/kerby/kerberos/kerb/crypto/cksum/HashProvider;
      50: aload         6
      52: aload         8
      54: invokestatic  #12                 // Method org/apache/kerby/kerberos/kerb/crypto/util/Hmac.hmac:(Lorg/apache/kerby/kerberos/kerb/crypto/cksum/HashProvider;[B[B)[B
      57: areturn
}
