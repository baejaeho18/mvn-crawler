Compiled from "DiffieHellmanClient.java"
public class org.apache.kerby.kerberos.kerb.crypto.dh.DiffieHellmanClient {
  private javax.crypto.KeyAgreement clientKeyAgree;

  private org.apache.kerby.kerberos.kerb.type.base.EncryptionKey clientKey;

  private javax.crypto.spec.DHParameterSpec dhParameterSpec;

  public org.apache.kerby.kerberos.kerb.crypto.dh.DiffieHellmanClient();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public javax.crypto.spec.DHParameterSpec getDhParam();
    Code:
       0: aload_0
       1: getfield      #2                  // Field dhParameterSpec:Ljavax/crypto/spec/DHParameterSpec;
       4: areturn

  public javax.crypto.interfaces.DHPublicKey init(javax.crypto.spec.DHParameterSpec) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field dhParameterSpec:Ljavax/crypto/spec/DHParameterSpec;
       5: ldc           #3                  // String DH
       7: invokestatic  #4                  // Method java/security/KeyPairGenerator.getInstance:(Ljava/lang/String;)Ljava/security/KeyPairGenerator;
      10: astore_2
      11: aload_2
      12: aload_1
      13: invokevirtual #5                  // Method java/security/KeyPairGenerator.initialize:(Ljava/security/spec/AlgorithmParameterSpec;)V
      16: aload_2
      17: invokevirtual #6                  // Method java/security/KeyPairGenerator.generateKeyPair:()Ljava/security/KeyPair;
      20: astore_3
      21: aload_0
      22: ldc           #3                  // String DH
      24: invokestatic  #7                  // Method javax/crypto/KeyAgreement.getInstance:(Ljava/lang/String;)Ljavax/crypto/KeyAgreement;
      27: putfield      #8                  // Field clientKeyAgree:Ljavax/crypto/KeyAgreement;
      30: aload_0
      31: getfield      #8                  // Field clientKeyAgree:Ljavax/crypto/KeyAgreement;
      34: aload_3
      35: invokevirtual #9                  // Method java/security/KeyPair.getPrivate:()Ljava/security/PrivateKey;
      38: invokevirtual #10                 // Method javax/crypto/KeyAgreement.init:(Ljava/security/Key;)V
      41: aload_3
      42: invokevirtual #11                 // Method java/security/KeyPair.getPublic:()Ljava/security/PublicKey;
      45: checkcast     #12                 // class javax/crypto/interfaces/DHPublicKey
      48: areturn

  public void doPhase(byte[]) throws java.lang.Exception;
    Code:
       0: ldc           #3                  // String DH
       2: invokestatic  #13                 // Method java/security/KeyFactory.getInstance:(Ljava/lang/String;)Ljava/security/KeyFactory;
       5: astore_2
       6: new           #14                 // class java/security/spec/X509EncodedKeySpec
       9: dup
      10: aload_1
      11: invokespecial #15                 // Method java/security/spec/X509EncodedKeySpec."<init>":([B)V
      14: astore_3
      15: aload_2
      16: aload_3
      17: invokevirtual #16                 // Method java/security/KeyFactory.generatePublic:(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;
      20: astore        4
      22: aload_0
      23: getfield      #8                  // Field clientKeyAgree:Ljavax/crypto/KeyAgreement;
      26: aload         4
      28: iconst_1
      29: invokevirtual #17                 // Method javax/crypto/KeyAgreement.doPhase:(Ljava/security/Key;Z)Ljava/security/Key;
      32: pop
      33: return

  public org.apache.kerby.kerberos.kerb.type.base.EncryptionKey generateKey(byte[], byte[], org.apache.kerby.kerberos.kerb.type.base.EncryptionType);
    Code:
       0: aload_0
       1: getfield      #8                  // Field clientKeyAgree:Ljavax/crypto/KeyAgreement;
       4: invokevirtual #18                 // Method javax/crypto/KeyAgreement.generateSecret:()[B
       7: astore        4
       9: aload         4
      11: astore        5
      13: aload_1
      14: ifnull        49
      17: aload_1
      18: arraylength
      19: ifle          49
      22: aload_2
      23: ifnull        49
      26: aload_2
      27: arraylength
      28: ifle          49
      31: aload_0
      32: aload         4
      34: aload_1
      35: invokespecial #19                 // Method concatenateBytes:([B[B)[B
      38: astore        5
      40: aload_0
      41: aload         5
      43: aload_2
      44: invokespecial #19                 // Method concatenateBytes:([B[B)[B
      47: astore        5
      49: aload         4
      51: arraylength
      52: aload         5
      54: invokestatic  #20                 // Method org/apache/kerby/kerberos/kerb/crypto/dh/OctetString2Key.kTruncate:(I[B)[B
      57: astore        6
      59: aload_0
      60: new           #21                 // class org/apache/kerby/kerberos/kerb/type/base/EncryptionKey
      63: dup
      64: aload_3
      65: aload         6
      67: invokespecial #22                 // Method org/apache/kerby/kerberos/kerb/type/base/EncryptionKey."<init>":(Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionType;[B)V
      70: putfield      #23                 // Field clientKey:Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionKey;
      73: aload_0
      74: getfield      #23                 // Field clientKey:Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionKey;
      77: areturn

  public byte[] decrypt(byte[], org.apache.kerby.kerberos.kerb.type.base.KeyUsage) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #23                 // Field clientKey:Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionKey;
       4: invokevirtual #24                 // Method org/apache/kerby/kerberos/kerb/type/base/EncryptionKey.getKeyType:()Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionType;
       7: invokestatic  #25                 // Method org/apache/kerby/kerberos/kerb/crypto/EncryptionHandler.getEncHandler:(Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionType;)Lorg/apache/kerby/kerberos/kerb/crypto/EncTypeHandler;
      10: astore_3
      11: aload_3
      12: aload_1
      13: aload_0
      14: getfield      #23                 // Field clientKey:Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionKey;
      17: invokevirtual #26                 // Method org/apache/kerby/kerberos/kerb/type/base/EncryptionKey.getKeyData:()[B
      20: aload_2
      21: invokevirtual #27                 // Method org/apache/kerby/kerberos/kerb/type/base/KeyUsage.getValue:()I
      24: invokeinterface #28,  4           // InterfaceMethod org/apache/kerby/kerberos/kerb/crypto/EncTypeHandler.decrypt:([B[BI)[B
      29: areturn

  private byte[] concatenateBytes(byte[], byte[]);
    Code:
       0: aload_1
       1: arraylength
       2: aload_2
       3: arraylength
       4: iadd
       5: newarray       byte
       7: astore_3
       8: aload_1
       9: iconst_0
      10: aload_3
      11: iconst_0
      12: aload_1
      13: arraylength
      14: invokestatic  #29                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      17: aload_1
      18: arraylength
      19: istore        4
      21: iload         4
      23: aload_3
      24: arraylength
      25: if_icmpge     45
      28: aload_3
      29: iload         4
      31: aload_2
      32: iload         4
      34: aload_1
      35: arraylength
      36: isub
      37: baload
      38: bastore
      39: iinc          4, 1
      42: goto          21
      45: aload_3
      46: areturn
}
