Compiled from "AbstractCheckSumTypeHandler.java"
public abstract class org.apache.kerby.kerberos.kerb.crypto.cksum.AbstractCheckSumTypeHandler extends org.apache.kerby.kerberos.kerb.crypto.AbstractCryptoTypeHandler implements org.apache.kerby.kerberos.kerb.crypto.CheckSumTypeHandler {
  private int computeSize;

  private int outputSize;

  public org.apache.kerby.kerberos.kerb.crypto.cksum.AbstractCheckSumTypeHandler(org.apache.kerby.kerberos.kerb.crypto.enc.EncryptProvider, org.apache.kerby.kerberos.kerb.crypto.cksum.HashProvider, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/apache/kerby/kerberos/kerb/crypto/AbstractCryptoTypeHandler."<init>":(Lorg/apache/kerby/kerberos/kerb/crypto/enc/EncryptProvider;Lorg/apache/kerby/kerberos/kerb/crypto/cksum/HashProvider;)V
       6: aload_0
       7: iload_3
       8: putfield      #2                  // Field computeSize:I
      11: aload_0
      12: iload         4
      14: putfield      #3                  // Field outputSize:I
      17: return

  public java.lang.String name();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method cksumType:()Lorg/apache/kerby/kerberos/kerb/type/base/CheckSumType;
       4: invokevirtual #5                  // Method org/apache/kerby/kerberos/kerb/type/base/CheckSumType.getName:()Ljava/lang/String;
       7: areturn

  public java.lang.String displayName();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method cksumType:()Lorg/apache/kerby/kerberos/kerb/type/base/CheckSumType;
       4: invokevirtual #6                  // Method org/apache/kerby/kerberos/kerb/type/base/CheckSumType.getDisplayName:()Ljava/lang/String;
       7: areturn

  public int computeSize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field computeSize:I
       4: ireturn

  public int outputSize();
    Code:
       0: aload_0
       1: getfield      #3                  // Field outputSize:I
       4: ireturn

  public boolean isSafe();
    Code:
       0: iconst_0
       1: ireturn

  public int cksumSize();
    Code:
       0: iconst_4
       1: ireturn

  public int keySize();
    Code:
       0: iconst_0
       1: ireturn

  public int confounderSize();
    Code:
       0: iconst_0
       1: ireturn

  public byte[] checksum(byte[]) throws org.apache.kerby.kerberos.kerb.KrbException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #7                  // Method checksum:([BII)[B
       8: areturn

  public byte[] checksum(byte[], int, int) throws org.apache.kerby.kerberos.kerb.KrbException;
    Code:
       0: new           #8                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #9                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean verify(byte[], byte[]) throws org.apache.kerby.kerberos.kerb.KrbException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: aload_2
       6: invokevirtual #10                 // Method verify:([BII[B)Z
       9: ireturn

  public boolean verify(byte[], int, int, byte[]) throws org.apache.kerby.kerberos.kerb.KrbException;
    Code:
       0: new           #8                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #9                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public byte[] checksumWithKey(byte[], byte[], int) throws org.apache.kerby.kerberos.kerb.KrbException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: aload_2
       6: iload_3
       7: invokevirtual #11                 // Method checksumWithKey:([BII[BI)[B
      10: areturn

  public byte[] checksumWithKey(byte[], int, int, byte[], int) throws org.apache.kerby.kerberos.kerb.KrbException;
    Code:
       0: new           #8                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #9                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean verifyWithKey(byte[], byte[], int, byte[]) throws org.apache.kerby.kerberos.kerb.KrbException;
    Code:
       0: new           #8                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #9                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow
}
